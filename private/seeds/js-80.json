{
    "items": [
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can hook the <code>scroll</code> event on the <code>window</code> object. When processing the event, look at the vertical scroll position of the window/document (see <a href=\"http://stackoverflow.com/questions/871399/cross-browser-method-for-detecting-the-scrolltop-of-the-browser-window/872537#872537\">this answer</a> on SO for how to do that). Use absolute positioning for your <code>div</code> and update its <code>top</code> as coordinate as necessary.</p>\n\n<p>FWIW, I would be very careful doing this. Usually when a user scrolls, it's because they want to look at different content than what's on the page. Personally, I hate boxes that follow me around on web pages. :-) But that doesn't mean there isn't a good reason for doing this on occasion.</p>\n\n<p>Very basic example (<a href=\"http://jsbin.com/iwegec\">live copy</a>):</p>\n\n<p>CSS:</p>\n\n<pre><code>#box {\n  /* Position absolutely, 30px down from the top */\n  position: absolute;\n  top: 30px;\n\n  /* In my case I'm centering it in the window; do what you like */\n  margin-left: -100px;\n  left: 50%;\n  width: 200px;\n\n  /* These are just for my example */\n  height: 1.25em;\n  border: 1px solid #bbb;\n  text-align: center;\n}\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div id='box'&gt;I'm the box&lt;/div&gt;\n</code></pre>\n\n<p>JavaScript:</p>\n\n<pre><code>window.onload = function() {\n\n  function getScrollTop() {\n    if (typeof window.pageYOffset !== 'undefined' ) {\n      // Most browsers\n      return window.pageYOffset;\n    }\n\n    var d = document.documentElement;\n    if (d.clientHeight) {\n      // IE in standards mode\n      return d.scrollTop;\n    }\n\n    // IE in quirks mode\n    return document.body.scrollTop;\n  }\n\n  window.onscroll = function() {\n    var box = document.getElementById('box'),\n        scroll = getScrollTop();\n\n    if (scroll &lt;= 28) {\n      box.style.top = \"30px\";\n    }\n    else {\n      box.style.top = (scroll + 2) + \"px\";\n    }\n  };\n\n};\n</code></pre>\n\n<p>(In my case, I'm always keeping it 2 pixels below the top, but if you don't want that you can adjust the numbers accordingly.)</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p><a href=\"http://jsfiddle.net/25rgq/\" rel=\"nofollow\">http://jsfiddle.net/25rgq/</a></p>\n\n<p>This is an old implementation of your desired functionality, which I've used. It's one of the first scripts I wrote, so JS &amp; jQuery knowing people will most likely vomit. I wrote it mainly due all the examples I found online were centered on moving the DIV rather than setting it to fixed, and incrementally adding to the top-margin of the box resulted in really choppy movement.</p>\n\n<p>Basicly it changes to fixed as the specified element is a custom set margin from the top of the browser window, and stops moving down once it hits a custom offset before our footer (we wanted to constrain the followbox to not move past our sidebar space).</p>\n\n<p>Hope it is of any use, and if a plugin to handle this nowadays exists, you would probably be better of using it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As you can see other people provided ready scripts, but if you want to make one your self (waste of time) [or you may want to learn].. here is a good point to start:</p>\n\n<pre><code>var hscroll = (document.all ? document.scrollLeft : window.pageXOffset);\nvar vscroll = (document.all ? document.scrollTop : window.pageYOffset);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>The user enters the site. </p>\n\n<p>At this point, the div is in the middle of the page.</p>\n\n<p>As he scrolls down the page, the div first begins to move upward, but once it hits the top, it stays there.</p>\n\n<p>As he scrolls further down the page, the div stays near the top, always visible to the user.</p>\n\n<p>As he scrolls up the page all the way to the top, the div once again stays back in position where it was originally.</p>\n",
            "last_activity_date": 1376357865,
            "question_id": 6691558,
            "score": 8,
            "tags": [
                "javascript",
                "html",
                "css",
                "templates"
            ],
            "title": "How do I make a div follow me as I scroll down the page?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Why not use <code>if</code> rather than <code>switch</code>?</p>\n\n<pre><code>$(document).keydown(function(e) {\n    if ((e.keyCode === 37) || (e.keyCode === 39)) {\n        e.preventDefault();\n        alert(\"Arrow Key\");\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can use the case fallthrough:</p>\n\n<pre><code>$(document).keydown(function(e) {\n    switch(e.which) { \n        case 39:\n        case 37:\n            e.preventDefault();\n            alert(\"Arrow Key\");\n            break;\n    }\n});\n</code></pre>\n\n<p>Note that I'm using <code>e.which</code> instead of <code>e.keyCode</code> to make it work in all browsers (jQuery automatically assigns the property which actually contains the key code to e.which).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you want to check multiple keys at once you should only use one regular key and one or more modifier keys (alt/shift/ctrl) as you cannot be sure that two regular keys can actually be pressed at once on the user's keyboard (actually, they can always be pressed but the PC might not understand it due to the way keyboards are wired).</p>\n\n<p>You can use the e.altKey, e.ctrlKey, e.shiftKey fields to check if the matching modifier key was pressed.</p>\n\n<p>Example:</p>\n\n<pre><code>$(document).keydown(function(e) {\n    if(e.which == 98 &amp;&amp; e.ctrlKey) {\n        // ctrl+b pressed\n    }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                }
            ],
            "body": "<p>I am currently using this javascipt kepypress code to fire events upon keypress:</p>\n\n<pre><code>$(document).keydown(function(e) {\nswitch(e.keyCode) { \n\ncase 39:\ne.preventDefault();\n        alert(\"Arrow Key\");\n\nbreak;\n\ncase 37:\n       e.preventDefault();\n        alert(\"Arrow Key\");\n}\n});\n</code></pre>\n\n<p>but what i am wondering is if i can instead of binding one key bind a combination of two keys. Could I possibly do something like:</p>\n\n<pre><code>$(document).keydown(function(e) {\nswitch(e.keyCode) { \n\ncase 39 &amp;&amp; 37:\ne.preventDefault();\n        alert(\"Arrow Key\");\n\nbreak;\n\n}\n});\n</code></pre>\n",
            "last_activity_date": 1289734238,
            "question_id": 4173460,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "javascript-events",
                "event-handling"
            ],
            "title": "Bind Multiple Keys to Keypress Event"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>$(\"#text-id\").click(function(e) {// because #text-id is an anchor tag so stop its default behaivour\ne.preventDefault();\n$.ajax({\ntype: \"POST\",// see also here\nurl: 'text.php',// and this path will be proper\ndata: {\n       source1: \"some text\",\n       source2: \"some text 2\"}\n}).done(function( msg )\n      {\n       alert( \"Data Saved: \" + msg );// see alert is come or not\n     });\n});\n</code></pre>\n\n<p>reference <strong><a href=\"http://api.jquery.com/jQuery.ajax/\" rel=\"nofollow\">ajax</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You need to include a <a href=\"http://api.jquery.com/Ajax_Events/\">success handler</a> in your AJAX call:</p>\n\n<pre><code>$(\"#text-id\").on( 'click', function () {\n    $.ajax({\n        type: 'post',\n        url: 'text.php',\n        data: {\n            source1: \"some text\",\n            source2: \"some text 2\"\n        },\n        success: function( data ) {\n            console.log( data );\n        }\n    });\n});\n</code></pre>\n\n<p>and in your console, you'll receive:</p>\n\n<pre><code>some textsome text 2\n</code></pre>\n\n<p>Do make sure that both the <code>test.php</code> and your html source files are in same directory.</p>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>I want to pass some values from JavaScript to PHP using jQuery/AJAX. I have the following \"simplified\" code, not sure what is that I am doing wrong. There seems to be quite a few similar questions/answers in StackOverflow, but none of the them are really helping. </p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div&gt;\n&lt;a href=\"#\" id=\"text-id\"&gt;Send text&lt;/a&gt;\n&lt;textarea id=\"source1\" name=\"source1\" rows=\"5\" cols=\"20\"&gt;&lt;/textarea&gt;\n&lt;textarea id=\"source2\" name=\"source2\" rows=\"5\" cols=\"20\"&gt;&lt;/textarea&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>JAVASCRIPT:</p>\n\n<pre><code>$(\"#text-id\").click(function() {\n$.ajax({\ntype: 'post',\nurl: 'text.php',\ndata: {source1: \"some text\", source2: \"some text 2\"}\n});\n});\n</code></pre>\n\n<p>PHP (text.php):</p>\n\n<pre><code>&lt;?php \n\n$src1= $_POST['source1'];  \n$src2= $_POST['source2'];     \n\necho $src1; \necho $src2;\n\n?&gt;\n</code></pre>\n\n<p>The problem:  Nothing is happening...no errors..nothing. I don't see the values of 'source1' and 'source2' showing up in the PHP echo statements.</p>\n",
            "last_activity_date": 1382160538,
            "question_id": 19462649,
            "score": 7,
            "tags": [
                "javascript",
                "php",
                "jquery",
                "ajax"
            ],
            "title": "Trying to pass variable values from JavaScript to PHP using AJAX"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You are right the link which you posted in the comment would be probably the best approche. As your question sounded interesting i tried it out. You probably did it, but here is an snippet(for other that may come looking)</p>\n\n<pre><code>var xmlhttp=new XMLHttpRequest();\nxmlhttp.open(\"GET\",\"data.dat\",false);\nxmlhttp.setRequestHeader(\"Range\", \"bytes=100-200\");\nxmlhttp.send();\nconsole.info(xmlhttp); //--&gt; returns only the partial content\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>I'm playing around with the HTTP range header (<a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16\">specs</a>). </p>\n\n<p>From what I understand I can set byte ranges of files ala</p>\n\n<pre><code>0-199/2000\n200-499/2000\n500-799/2000\netc\n</code></pre>\n\n<p><strong>Question:</strong><br>\nSay I only want to access certain ranges of a file, would it be possible to specify these ranges and then work with the \"incomplete\" data I received? I'm playing around with filtering a large log file, so I'm curious if something like this would work.</p>\n\n<p>Thanks for inputs!</p>\n",
            "last_activity_date": 1362656259,
            "question_id": 15200266,
            "score": 7,
            "tags": [
                "javascript",
                "http",
                "http-headers",
                "range",
                "filtering"
            ],
            "title": "Can I use the HTTP range header to load partial files &quot;on purpose&quot;?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I think that an easier algorithm is</p>\n\n<ol>\n<li>Pick a random point inside the <code>[-1,1]x[-1,1]x[-1,1]</code> cube</li>\n<li>If <code>x*x + y*y + z*z &gt; 1</code> repeat from 1</li>\n<li>Normalize dividing <code>x</code>, <code>y</code> and <code>z</code> by <code>Math.sqrt(x*x + y*y + z*z)</code></li>\n</ol>\n\n<p>in other words just pick a random point inside the sphere and project on the sphere.</p>\n\n<p>You can see this algorithm in action <a href=\"http://raksy.dyndns.org/randompoints.html\">on this link</a>. <strike>Note that if you use chrome there will be some banding around an equator that in my opinion is a bug in Math.random or just a low quality random generator (works fine on Firefox or Safari, but the same problem is visible also on Android browser). The banding is much more visible with an higher number of points (e.g. 10000 instead of the 1000 points I'm using now to keep animation smooth).</strike><b> EDIT: This bug has now been fixed on chrome. It is however still present on the web browser of my N1 running Android 2.3.6.</b></p>\n\n<p>Note that if you're looking for a method to distribute points evenly over a sphere you can do something nicer by choosing ten random points as described above and then accepting only the one with the biggest 3d distance from the set of already chosen points. This is still globally random (i.e. the probablity that a disc with a prescribed radius will receive a point is the same for all discs on the sphere) but will distribute points better if you need to do a \"sampling\" of the sphere. This function is coded as <code>spreadPoints()</code> in the html file pointed by the link.</p>\n\n<p>You can see the difference between the two approaches here:</p>\n\n<p><img src=\"http://i.stack.imgur.com/WhNti.png\" alt=\"enter image description here\"></p>\n\n<p>Both spheres have 1000 random points drawn on them: the sphere on the left used uniform random points, the sphere on the right instead made the choice by picking each point among ten random candidates to maximize the distance from already chosen points.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>The cube algorithm will not give an even distribution over the sphere - in particular the areas near the projections of the corners will have the densest distribution of points and near the centers of the faces of the cubes will be the lowest.</p>\n\n<p>You can understand this intuitively since the volume of cube projected onto the underlying sphere is larger near the corners that near the centers of the cubes faces.  In fact, the volume of a small piece (that projects on a small circle on the sphere) is proportional to the\ncube of size of the vector from the origin through the center of the small circle to the point on the sphere that it intersects.  </p>\n\n<p>So the relative volume on a cube face center (like (1,0,0)) is 1, but for a corner (e.g., (1,1,1)) is cube of sqrt(3) or 1.73 cubed, about 5.2, so almost 5 times denser!  </p>\n\n<p>The spreadPoints() function might do a better job, but I'm not sure.</p>\n\n<p>There are a couple of errors in you JavaScript - the use of the pow(..,-1) function instead of acos(), mix ups on the angles and missing the Math object for the random() call.,</p>\n\n<p>Here is similar but correct JavaScript to do what the Wolfram links says:</p>\n\n<pre><code>/*\nReturns a random point of a sphere, evenly distributed over the sphere.\nThe sphere is centered at (x0,y0,z0) with the passed in radius.\nThe returned point is returned as a three element array [x,y,z]. \n*/\nfunction randomSpherePoint(x0,y0,z0,radius){\n   var u = Math.random();\n   var v = Math.random();\n   var theta = 2 * Math.PI * u;\n   var phi = Math.acos(2 * v - 1);\n   var x = x0 + (radius * Math.sin(phi) * Math.cos(theta));\n   var y = y0 + (radius * Math.sin(phi) * Math.sin(theta));\n   var z = z0 + (radius * Math.cos(phi));\n   return [x,y,z];\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I want to select random points on a given sphere. This page explains it quite well:</p>\n\n<p><a href=\"http://mathworld.wolfram.com/SpherePointPicking.html\">http://mathworld.wolfram.com/SpherePointPicking.html</a>\n(\"To obtain points such that any small area on the sphere...\")</p>\n\n<p>But I'm not entirely sure if I'm implementing it correctly in JavaScript, as I have little means of testing it properly:</p>\n\n<pre><code>var u = random();\nvar v = random();\nvar angle1 = 2 * Math.PI * u;\nvar angle2 = Math.pow(Math.cos (2 * v - 1), -1);\nX = X0 + (radius * Math.sin(angle1) * Math.cos(angle2));\nY = Y0 + (radius * Math.sin(angle1) * Math.sin(angle1));\nZ = Z0 + (radius * Math.cos(angle1));\n</code></pre>\n\n<p>I'm especially unsure about if I've understood that cos(-1) correctly, which I implemented as \"The cosine to the power of -1\".</p>\n",
            "last_activity_date": 1382003287,
            "question_id": 5531827,
            "score": 7,
            "tags": [
                "javascript",
                "random",
                "3d",
                "sphere"
            ],
            "title": "Random Point on a given Sphere"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If you want to prevent following the link, you should add <a href=\"https://developer.mozilla.org/en/DOM/event.preventDefault\" rel=\"nofollow\"><code>event.preventDefault()</code></a> in your click handler (<a href=\"http://msdn.microsoft.com/en-us/library/ms534372%28v=vs.85%29.aspx\" rel=\"nofollow\"><code>event.returnValue = false;</code></a> in IE).</p>\n\n<p>It seems that you are just after the <em>look</em> of a link and not its functionality (or purpose). If so, you can use a <a href=\"https://developer.mozilla.org/en/HTML/Element/button\" rel=\"nofollow\"><code>button</code></a> with CSS to style it accordingly.</p>\n\n<p>Having real links with href contents <code>#</code> or <code>javascript:void(0)</code> should be avoided.</p>\n\n<p><strong>Further explanation:</strong></p>\n\n<p>Using a link just to have something \"clickable\" is not good. A link has a distinct syntactical meaning. As you can assign a <code>click</code> event handler to every element, you can use any other element for that.</p>\n\n<p>The syntactically most correct one (imo) would be <a href=\"https://developer.mozilla.org/en/HTML/Element/button\" rel=\"nofollow\"><code>button</code></a> as you will still have the possibility to use <code>tab</code> to navigate on them. You can style them with CSS to make them look like a link if you want to (<a href=\"http://jsfiddle.net/9j5yb/1/\" rel=\"nofollow\">see this example)</a>.</p>\n\n<p>Now regarding preventing the default action:</p>\n\n<p>Assuming you have a <em>normal</em> link with a proper <code>href</code> value and you want to intercept the click. In the click handler you assign to the element, e.g.</p>\n\n<pre><code>link.addEventListener('click', function(event){\n    // some code\n    event.preventDefault();\n}, false);\n</code></pre>\n\n<p>using <code>event.preventDefault()</code> prevents the default action, which in case of a link, is following the URL.</p>\n\n<p><em>(the code above is an example for W3C compatible browsers, IE is a bit different)</em></p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>If you <em>have</em> to have an href, use <code>javascript:void(0)</code>, because it has no effect, unlike <code>#</code>. But you can just have no href at all, give the <code>a</code> a <code>class</code> to make it look like a link, e.g.:</p>\n\n<pre><code>/* in stylesheet */\na.scriptlink {\n    color: blue;\n    text-decoration: underline;\n    cursor: pointer\n}\n\n&lt;!-- in HTML --&gt;\n&lt;a class=\"scriptlink\" onclick=\"whatever\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I prefer javascript:void(0) over # because it does not alter the address bar by putting a # there (which may affect any future scripts that use/alter the URL).</p>\n\n<p>But better than both of them, I prefer to have the onclick function return false (so it doesn't navigate at all) and then put an URL that would result in the same action as clicking. For example, lets say clicking the link loads some content into a 'mainArea' div. Then the URL would reload the whole page, with that mainArea filled with the same thing. The advantage to doing this is that if they right-click the url and Copy Address or Open in New Tab, it still works.</p>\n\n<pre><code>&lt;a href=\"/FullUrl\" onclick=\"return doClick(this);\" &gt;Stuff&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you want to seperate markup and scripting, you might also consider using event delegation to set-up the event handlers.</p>\n\n<p>Many Javascript frameworks (eg <a href=\"http://api.jquery.com/live/\" rel=\"nofollow\">jQuery</a>) come with cross-browser abstractions to make this less of a bother; because of NIH-syndrome, I rolled <a href=\"http://mercurial.intuxication.org/hg/js-hacks/raw-file/tip/capture.js\" rel=\"nofollow\">my own solution</a>, though.</p>\n\n<p>A complete example could look like this:</p>\n\n<pre><code>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n \"http://www.w3.org/TR/html4/strict.dtd\"&gt;\n&lt;html&gt;\n &lt;head&gt;\n  &lt;title&gt;Test&lt;/title&gt;\n  &lt;script type=\"text/javascript\"\n   src=\"http://mercurial.intuxication.org/hg/js-hacks/raw-file/tip/capture.js\"&gt;\n  &lt;/script&gt;\n  &lt;script type=\"text/javascript\"&gt;\n// un-hide elements\ndocument.documentElement.className = 'js';\n\n// use event-delegation to capture click-events\ncapture('click', '.clicky', function(event) {\n    alert(this.title);\n    return false;\n});\n  &lt;/script&gt;\n  &lt;style type=\"text/css\"&gt;\n/* display element only if scripting is enabled */\n.clicky { display: none; }\n.js .clicky { display: inline; }\n  &lt;/style&gt;\n &lt;/head&gt;\n &lt;body&gt;\n  &lt;!-- link shouldn't be user-accessible; nevertheless, direct user to\n   error page --&gt;\n  &lt;div&gt;\n   &lt;a href=\"no-js.html\" class=\"clicky\" title=\"clickety-click\"&gt;click me&lt;/a&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I do not intend to start a debate.</p>\n\n<p>If we want to make use of the onClick event, we should, on a certain way to disable the href to trigger. - Is this correct ?</p>\n\n<p>If the above is correct, I believe that <code>javascript:void(0)</code> has the advantage of NOT triggering the scroll behavior. </p>\n\n<p>Are those assumptions correct?</p>\n\n<p><strong>Note:</strong> I do not intend to search for a chimera, but my quest is about finding a way to style buttons in a cross-browser way with no accessibility hit (at all), without hacks and quirks.</p>\n",
            "last_activity_date": 1313931529,
            "question_id": 4842953,
            "score": 7,
            "tags": [
                "javascript",
                "onclick"
            ],
            "title": "# or javascript:void(0)?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You have to loop through in these cases, like this:</p>\n\n<pre><code>$(document).ready(function() {\n    $(\"#form1\").validate({\n        submitHandler: function(form) {\n            form.submit();\n        }\n    });  \n    $(\"#form1 input[name='mileage']\").each(function() {\n       $(this).rules(\"add\", { required: true });\n    });  \n});\n</code></pre>\n\n<p><a href=\"http://docs.jquery.com/Plugins/Validation/rules#.22add.22rules\" rel=\"nofollow\"><code>.rules()</code></a> only affects the first match, so you need a <a href=\"http://api.jquery.com/each/\" rel=\"nofollow\"><code>.each()</code></a> on there to loop through and add any rules to all matches.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In jquery.validate.js, we can find a function named checkForm, we have to modify it as below:</p>\n\n<pre><code>checkForm: function() {\n                this.prepareForm();\n                for ( var i = 0, elements = (this.currentElements = this.elements()); elements[i]; i++ ) {\n                    if (this.findByName( elements[i].name ).length != undefined &amp;&amp; this.findByName( elements[i].name ).length &gt; 1) {\n                        for (var cnt = 0; cnt &lt; this.findByName( elements[i].name ).length; cnt++) {\n                            this.check( this.findByName( elements[i].name )[cnt] );\n                        }\n                        } else {\n                    this.check( elements[i] );\n                }\n                }\n            return this.valid();\n    }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Based on <a href=\"http://stackoverflow.com/users/530911/eddy\" title=\"eddy\">eddy</a> answer, this function takes into count also the <code>ignore</code> setting.</p>\n\n<pre><code>        checkForm: function() {\n            this.prepareForm();\n            for ( var i = 0, elements = (this.currentElements = this.elements()); elements[i]; i++ ) {\n                var checkingElements = this.findByName( elements[i].name ).not(this.settings.ignore);\n                if (checkingElements.length !== undefined &amp;&amp; checkingElements.length &gt; 1) {\n                    for (var cnt = 0; cnt &lt; checkingElements.length; cnt++) {\n                        this.check( checkingElements[cnt] );\n                    }\n                } else {\n                    this.check( elements[i] );\n                }\n            }\n            return this.valid();\n        },\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I need to validate an array of input text elements (mileage): For example: </p>\n\n<pre><code>&lt;tbody&gt;\n  &lt;c:forEach items=\"${list}\" var=\"item\"&gt;\n        &lt;tr&gt; \n             &lt;!--some other columns---&gt; \n             &lt;td align=\"left\"&gt;&lt;input type=\"text\" name=\"mileage\" value=\"\" /&gt;&lt;/td&gt;\n        &lt;/tr&gt;\n   &lt;/c:forEach&gt;                       \n&lt;/tbody&gt;\n</code></pre>\n\n<p>The script for validation is as below -</p>\n\n<pre><code>$(document).ready(function(){\n\n        $(\"#form1\").validate({\n            rules: {\n                mileage: {\n                    required: true\n\n                         }\n                },            \n            submitHandler: function(form) {\n                form.submit();\n            }\n\n        });       \n    });\n</code></pre>\n\n<p>Now the problem is that the .validate.js only validates the first element of mileage. What can I do? How can I make the plugin validate all of the inputs text ?</p>\n\n<p>I hope you can help me out. </p>\n",
            "last_activity_date": 1359712351,
            "question_id": 4526229,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "jquery-validate"
            ],
            "title": "JQuery Validation for Array of Input Elements"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I don't think this is a good example for private variables, because there are no real variables. The closure part is that the function <code>greet</code> can see <code>message</code> (which is not visible to the outside, hence private), but it (or anyone else) is not changing it, so it is more of a constant.</p>\n\n<p>How about the following example instead?</p>\n\n<pre><code>function make_counter(){\n    var i =0;\n    return function(){\n        return ++i;\n    }\n}\n\nvar a = make_counter();\nconsole.log(a());  // 1\nconsole.log(a());  // 2\nvar b = make_counter();\nconsole.log(b());  // 1\nconsole.log(a());  // 3\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>A better example may be</p>\n\n<pre><code>function add(start, increment) {\n  return function() {\n      return start += increment;\n  }\n}\n\nvar add1 = add(10, 1);\n\nalert(add1()); // 11\nalert(add1()); // 12\n</code></pre>\n\n<p>Here, every time you call the returned function, you add 1. The internals are encapsulated.</p>\n\n<p>The returned function still has access to its parents variables (in this case, <code>start</code> and <code>increment</code>).</p>\n\n<p>On a lower level of thinking, I think it means that the function's stack is not destroyed when it returns.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>A <strong>closure</strong> is a pair of <strong>a function</strong> and <strong>the environment</strong> in which it was defined (assuming <a href=\"http://en.wikipedia.org/wiki/Scope_%28programming%29#Lexical_scoping\">lexical scoping</a>, which JavaScript uses). Thus, a closure's function can access variables in its environment; if no other function has access to that environment, then all of the variables in it are effectively private and only accessible through the closure's function.</p>\n\n<p>The example you provided demonstrates this reasonably well. I've added inline comments to explain the environments.</p>\n\n<pre><code>// Outside, we begin in the global environment.\nfunction greeter(name, age) {\n  // When greeter is *invoked* and we're running the code here, a new\n  // environment is created. Within this environment, the function's arguments\n  // are bound to the variables `name' and `age'.\n\n  // Within this environment, another new variable called `message' is created.\n  var message = name + \", who is \" + age + \" years old, says hi!\";\n\n  // Within the same environment (the one we're currently executing in), a\n  // function is defined, which creates a new closure that references this\n  // environment. Thus, this function can access the variables `message', `name',\n  // and `age' within this environment, as well as all variables within any\n  // parent environments (which is just the global environment in this example).\n  return function greet() { console.log(message); };\n}\n</code></pre>\n\n<p>When <code>var bobGreeter = greeter(\"Bob\", 47);</code> is run, a new closure is created; that is, you've now got a new function instance along with the environment in which it was created. Therefore, your new function has a reference to the `message' variable within said environment, although no one else does.</p>\n\n<p>Extra reading: <a href=\"http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-21.html#%_sec_3.2\">SICP Ch 3.2</a>. Although it focuses on Scheme, the ideas are the same. If you understand this chapter well, you'll have a good foundation of how environments and lexical scoping work.</p>\n\n<p>Mozilla also has a page dedicated to <a href=\"https://developer.mozilla.org/en/JavaScript/Guide/Closures\">explaining closures</a>.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>The purpose of a closure is so that the variables you use inside a given function are guaranteed to be \"closed\" which means they do not depend on external variables - they only depend on and use their arguments. This makes your Javascript methods closer to a <a href=\"http://en.wikipedia.org/wiki/Pure_function\">pure function</a>, that is, one that returns the same value for the same given arguments.</p>\n\n<p>Without using closures, your functions will be like Swiss cheese, they will have holes in them. A closure plugs up those holes so the method doesn't depend on variables higher in the scope chain.</p>\n\n<p>Now, up until this point, my answer has been simply about organizing your code and style. So take this simple example.  At the line with the comment, I invoke a function and the value of the variable <code>a</code> is captured for future use.</p>\n\n<pre><code>var a = \"before\";\nvar f = function(value) {\n    return function()\n    {\n      alert(value);\n    }\n} (a); //here I am creating a closure, which makes my inner function no longer depend on this global variable\na = \"after\";\n\nf(); //prints \"before\"\n</code></pre>\n\n<p>Now, why would you need to do this? Well, here's a practical example. Consider the following code that uses jQuery to add 5 links to the document. When you click a link, you would expect it to <code>alert</code> the number associated with the link, so clicking the first you would think would alert 0, and so on. <strong>But,</strong> this is not the case, each link will <code>alert</code> the value of 5. This is because the function I define depends on the variable <code>i</code> which is being modified outside the context of the function. The function I pass into <code>bind</code> is a Swiss cheese function.</p>\n\n<pre><code>for (var i = 0; i &lt; 5; i++)\n{\n    var a = $('&lt;a&gt;test link&lt;/a&gt;').bind('click', function(){\n        alert(i);\n    });\n    $(a).appendTo('body');\n}\n</code></pre>\n\n<p>Now, let's fix this by creating a closure so each link will <code>alert</code> its correct number.</p>\n\n<pre><code>for (var i = 0; i &lt; 5; i++)\n{\n    var fn = function (value) {\n        return function() {\n            alert(value);\n        };\n    } (i); //boom, closure\n    var a = $('&lt;a&gt;test link&lt;/a&gt;').bind('click', fn);\n    $(a).appendTo('body');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Once you \"get it\" you will wonder why it took you so long to understand it. That's the way way I felt anyways.</p>\n\n<p>I think function scope in Javascript can be expressed fairly concisely.</p>\n\n<blockquote>\n  <p>The function body will have access to any variables that were visible in the lexical environment of the function declaration, and also any variables created via the function's invocation -- that is, any variables declared locally, passed through as arguments or otherwise provided by the language (such as <code>this</code> or <code>arguments</code>).</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It's called \"closures\" because they are \"closed\" around free variables, and there are much more ways to use it then only hiding state. For example, in functional programming, where closures came from, they are often used to reduce parameters number or set some constant for a function. Let's say you need function <code>goodEnough()</code> that will test if some result is better then some threshold. You can use function of 2 variables - result and threshold. But you can also \"enclose\" your constant inside function:</p>\n\n<pre><code>function makeThresholdFunction(threshold) {\n    return function(param) {\n        return (param &gt; threshold);\n    }\n\n}\n\nvar goodEnough = makeThresholdFunction(0.5);\n...\nif (goodEnough(calculatedPrecision)) {\n   ...\n}\n</code></pre>\n\n<p>With closures you can also use all the tricks with functions such as their composition:</p>\n\n<pre><code>function compose(f1, f2) {\n    return function(arg) {\n        return f1(f2(arg));\n    }\n}\n\nvar squareIncremented = compose(square, inc);\nsquareIncremented(5); // 36\n</code></pre>\n\n<p>More on closure design and usage can be found at <a href=\"http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-21.html#%_sec_3.2\" rel=\"nofollow\">SICP</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I found this a pretty helpful article.</p>\n\n<p><a href=\"http://lpar.ath0.com/2010/10/14/javascript-when-is-a-function-not-a-function/\" rel=\"nofollow\">When is a function not a function?</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to wrap my head around closures in Javascript.</p>\n\n<p>Here is an example from a tutorial:</p>\n\n<pre><code>function greeter(name, age) {\n  var message = name + \", who is \" + age + \" years old, says hi!\";\n\n  return function greet() {\n    console.log(message);\n  };\n}\n\n// Generate the closure\nvar bobGreeter = greeter(\"Bob\", 47);\n\n// Use the closure\nbobGreeter();\n</code></pre>\n\n<p>The author said that this is an effective way of using closure to make private variables, but I don't get the point.</p>\n\n<p>Could someone enlighten the benefits of coding like this?</p>\n",
            "last_activity_date": 1304481976,
            "question_id": 3903058,
            "score": 7,
            "tags": [
                "javascript",
                "closures"
            ],
            "title": "Understanding closure in Javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><a href=\"http://code.google.com/apis/maps/faq.html#loadasync\" rel=\"nofollow\">This FAQ answer</a> details how to load the Maps API asynchronously, and there is a good <a href=\"http://gmaps-samples.googlecode.com/svn/trunk/dynamicloading/scriptappend.html\" rel=\"nofollow\">example</a> that goes along with it.</p>\n\n<p>Basically, recommend you put your execution code in a named function, then load the Maps API referencing said callback and using the \"async\" parameter.  Or you could use jQuery's getJSON as such:</p>\n\n<pre><code>$.getJSON('http://maps.google.com/maps/api/js?sensor=false&amp;async=2&amp;callback=?', function(){\n    $.colorbox({\n        href:rel\n    })\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>thanks for pointing me in the right direction Andrew, my problem was that the callback in the api request is mandatory for loading the api on demand.</p>\n\n<p>Here is my final jquery code:</p>\n\n<pre><code>//in doc.ready\n$('img.map').click(function(){      \n    var rel = $(this).attr('rel');      \n    $('body').data('map_href', rel ).append('&lt;script type=\"text/javascript\" src=\"http://maps.google.com/maps/api/js?sensor=false&amp;callback=show_map\"&gt;&lt;/script&gt;');\n})\n\n\nfunction show_map(){\n    $.fn.colorbox({\n        href:$('body').data('map_href')\n    })\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Before you reply: this is not as straight foward as you'd expect!</p>\n\n<ul>\n<li>I have a 'show on map' button which\nwhen clicked opens a\ndialogbox/lightbox with the google\nmap in.</li>\n<li>I don't want to load the maps api on\npageload, just when a map has been\nrequested</li>\n</ul>\n\n<p><strong>This is php file the \"show on map\" button puts into the dialog box:</strong></p>\n\n<pre><code>&lt;div id=\"map_canvas\"&gt;&lt;/div&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    $(function() {  \n            //google maps stuff             \n            var latlng = new google.maps.LatLng(&lt;?php echo $coords ?&gt;);\n            var options = {\n              zoom: 14,\n              center: latlng,\n              mapTypeControl: false,\n              mapTypeId: google.maps.MapTypeId.ROADMAP\n            };          \n            var map = new google.maps.Map(document.getElementById('map_canvas'), options);          \n            var marker = new google.maps.Marker({\n              position: new google.maps.LatLng(&lt;?php echo $coords ?&gt;),\n              map: map\n            });\n    })\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>I've been trying to load the API before ajaxing in the dialog like this:</strong></p>\n\n<pre><code>$('img.map').click(function(){      \n    var rel = $(this).attr('rel');\n    $.getScript('http://maps.google.com/maps/api/js?sensor=false', function(){\n        $.fn.colorbox({\n            href:rel\n        })\n    });\n})\n</code></pre>\n\n<p>this doesn't seem to work :(</p>\n\n<p><strong>i've also tried:</strong></p>\n\n<ul>\n<li>adding <code>&lt;script    src=\"http://maps.google.com/maps/api/js?sensor=false\"&gt;&lt;/script&gt;</code>\nto the ajax file</li>\n<li>type=\"text/javascript\" running\n<code>$.getScript('http://maps.google.com/maps/api/js?sensor=false');</code>\non doc.ready</li>\n</ul>\n\n<p><strong>the problem</strong>\nthe browser seems to be redirected to the api.js file - you see a white screen</p>\n",
            "last_activity_date": 1362584745,
            "question_id": 2811787,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "google-maps"
            ],
            "title": "jquery: how can i load the Google Maps API via ajax?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I think you're looking for something like:</p>\n\n<pre><code>var iframeDoc = myIframe.contentWindow.document;\niframeDoc.open();\niframeDoc.write('hello world');\niframeDoc.close();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>What about <code>.innerHTML</code>?</p>\n\n<pre><code>myIframe.innerHTML = \"This is some HTML &lt;b&gt;text&lt;/b&gt;\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Tried setting <code> <code>.innerHTML</code> </code> but that does not work. Solution by Jeffery To works. Just want to add that <code> <code>myIframe.contentWindow</code> </code> might not work in old browsers (read IE old versions) so you can do</p>\n\n<pre><code>var iFrameWindow = myIframe.contentWindow || myIframe.documentWindow;\nvar iFrameDoc = iFrameWindow.document;\n</code></pre>\n\n<p>then use the document open(), write() &amp; close() as above.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have an IFRAME that should be filled with content from JavaScript. Had the content be on the server all I had to do is:</p>\n\n<pre><code>    function onIFrameFill() {\n         myIframe.location.href = \"HelloWorld.html\";\n     }\n</code></pre>\n\n<p>But the content I have is a HTML page generated on the client and represented as a string (I have not much influence on it). How can I populate the content of the my iframe programatically?   </p>\n",
            "last_activity_date": 1341385223,
            "question_id": 2665980,
            "score": 7,
            "tags": [
                "javascript",
                "iframe",
                "dynamic-content"
            ],
            "title": "Filling an IFRAME with dynamic content from JavaScript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Use below code in consumer.js and select example provider in index.html drop down list</p>\n\n<pre><code>consumer.example =\n{ consumerKey   : \"your_app_key\"\n, consumerSecret: \"your_app_secret\"\n, serviceProvider:\n  { signatureMethod     : \"HMAC-SHA1\"\n  , requestTokenURL     : \"https://twitter.com/oauth/request_token\"\n  , userAuthorizationURL: \"https://twitter.com/oauth/authorize\"\n  , accessTokenURL      : \"https://twitter.com/oauth/access_token\"\n  , echoURL             : \"http://localhost/oauth-provider/echo\" \n  }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Problem with this is that anyone who views your page can also now view your consumer key and secret which must be kept private.</p>\n\n<p>Now, someone could write an app that uses your app credentials and do naughty and bad things to the point that twitter and users ban you, and there isnt anything you can do.</p>\n\n<p>Twitter do state that every possible effort <strong>must</strong> be made to keep these values private to avoid this happening</p>\n\n<p>Unfortunately, there is currently no way to use oAuth in Browser based JavaScript securely.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Check out the Twitter @Anywhere JSDK <code>authComplete</code> and <code>signOut</code> events and callbacks at <a href=\"https://dev.twitter.com/docs/anywhere/welcome#login-signup\" rel=\"nofollow\">https://dev.twitter.com/docs/anywhere/welcome#login-signup</a></p>\n\n<pre><code>twttr.anywhere(function (T) {\n\n    T.bind(\"authComplete\", function (e, user) {\n      // triggered when auth completed successfully\n    });\n\n    T.bind(\"signOut\", function (e) {\n      // triggered when user logs out\n    });\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Since I was searching for the same thing, trying not to use a custom PHP solution, I came across this very simple integration at <a href=\"http://www.fullondesign.co.uk/coding/2516-how-use-twitter-oauth-1-1-javascriptjquery.htm\" rel=\"nofollow\">http://www.fullondesign.co.uk/coding/2516-how-use-twitter-oauth-1-1-javascriptjquery.htm</a> which uses a PHP proxy that accepts whatever twitter api call you'd like to retrieve from your javascript .. </p>\n\n<p>I'm definitely taking a look at it</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have to integrate Sign-in-with Twitter in my app as below.\n<a href=\"https://dev.twitter.com/docs/auth/sign-twitter\" rel=\"nofollow\">https://dev.twitter.com/docs/auth/sign-twitter</a>\n It is browser based app developed in JavaScript\nI have been refering google code java script OAuth, but im confused how to use oauth/authenticate and how to get the oauth_token</p>\n\n<p>Can any one please help me out with some samples ?</p>\n",
            "last_activity_date": 1405059464,
            "question_id": 2470694,
            "score": 7,
            "tags": [
                "javascript",
                "twitter",
                "oauth"
            ],
            "title": "JavaScript OAuth sign in with Twitter"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Check out <a href=\"http://swffit.millermedeiros.com/\" rel=\"nofollow\">swffit</a>, it should fit the bill perfectly.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The easiest solution is to embed the SWF within a container div, then use JavaScript and CSS to dynamically resize the container DIV.  If the SWF is set to 100% width/height, it will stretch to fit the wrapper whenever the wrapper is resized.</p>\n\n<p>In the body:</p>\n\n<pre><code>&lt;div id=\"wrapper\"&gt;\n&lt;div id=\"flash\"&gt;This div will be replaced by an object via SWFObject&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>In the head:</p>\n\n<pre><code>&lt;script&gt;\nvar flashvars = {};\nvar params = { scale: \"exactFit\" };\nvar attributes = {};\n\nswfobject.embedSWF(\"myContent.swf\", \"flash\", \"100%\", \"100%\", \"9.0.0\",\"expressInstall.swf\", flashvars, params, attributes);\n&lt;/script&gt;\n\n&lt;style type=\"text/css\"&gt;\n#flash {\n   display: block;\n   width: 100%;\n   height: 100%;\n}\n&lt;/style&gt;\n</code></pre>\n\n<p>Now whenever you resize #wrapper, the SWF will scale to fill it.</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>I believe the code above should read:</p>\n\n<pre><code>#wrapper {\n   display: block;\n   width: 100%;\n   height: 100%;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>This did not work for me but did some small changes as indicated in\n<a href=\"http://code.google.com/p/swfobject/wiki/faq\" rel=\"nofollow\">http://code.google.com/p/swfobject/wiki/faq</a>\nsection \"How can I create a SWF that will encompass 100% of the browser window?\"</p>\n\n<p>as this</p>\n\n<pre><code>&lt;style type=\"text/css\" media=\"screen\"&gt;\n  html, body, #containerA, #containerB { height:100%; }\n  body { margin:0; padding:0; overflow:hidden; }\n&lt;/style&gt;\n</code></pre>\n\n<p>and perfect!</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm loading an SWF movie into an HTML page using <a href=\"http://code.google.com/p/swfobject/\">SWFObject</a>. I want to resize this SWF dynamically. How can SWFObject help? I'm sure I don't have to <a href=\"http://www.mustardlab.com/developer/flash/objectresize/\">write my own</a> solution.</p>\n",
            "last_activity_date": 1283192182,
            "question_id": 952732,
            "score": 7,
            "tags": [
                "javascript",
                "html",
                "flash",
                "swf",
                "swfobject"
            ],
            "title": "Resize an SWF when loading it with SWFObject"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Cover it up with another un-clickable element. You may need to use JavaScript to toggle this \"cover\" on and off. You can do something clever like make it semi-transparent or something as well.</p>\n\n<pre><code>&lt;style&gt;\n    #cover {position:absolute;background-color:#000;opacity:0.4;}\n&lt;/style&gt;\n\n&lt;div id=\"clickable-stuff\"&gt;\n   ...\n&lt;/div&gt;\n&lt;div id=\"cover\"&gt;\n&lt;/div&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    function coverUp() {\n        var cover = document.getElementById('cover');\n        var areaToCover = document.getElementById('clickable-stuff');\n        cover.style.display = 'block';\n        cover.style.width = //get areaToCover's width\n        cover.style.height = //get areaToCover's height\n        cover.style.left = //get areaToCover's absolute left position\n        cover.style.top = //get areaToCover's absolute top position\n    }\n\n    /*\n       Check out jQuery or another library which makes\n       it quick and easy to get things like absolute position\n       of an element\n    */\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you mean unclickable so that the users can't copy and paste it or save the data somehow. No this has never been possible. All those sites that make is sound/look like they have some way of blocking saving things don't really and what ever measures they put in place are easily worked around.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>if you are going to use jQuery, you can easily accomplish this with the blockUI plugin. ...or to answer your question with CSS, you'll have to absolutely position the div over the content you wish to block. just make sure the absolutely positioned div comes after the content to be blocked for z-indexing purposes.</p>\n\n<pre><code>&lt;div style=\"position:relative;width: 200px;height: 200px;background-color:green\"&gt;\n    &lt;div&gt;\n    \t&lt;a href=\"#\"&gt;Content to be blocked.&lt;/a&gt;\n    &lt;/div&gt;\n    &lt;div style=\"position: absolute;top:0;left:0;width: 200px;height:200px;background-color: blue;z-index:2;opacity:0.4;filter: alpha(opacity = 50)\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>sorry for all the inline css. you'll have to make some nice classes. Also, this has only been tested in firefox and IE7.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>You should consider to apply the event.preventDefault function of jQuery.\nHere you can find an example: </p>\n\n<p><a href=\"http://api.jquery.com/event.preventDefault/\" rel=\"nofollow\">http://api.jquery.com/event.preventDefault/</a></p>\n\n<p>TL;DR-version:</p>\n\n<pre><code>$(\"#element-to-block\").click( function(event) {\n  event.preventDefault();\n}\n</code></pre>\n\n<p>BAM!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is a CSS rule for that, but it's not widely used because of old browsers support</p>\n\n<p><code>pointer-events: none;</code></p>\n\n<p>check that out for more details: </p>\n",
                    "is_accepted": false,
                    "score": 43
                },
                {
                    "body": "<p>These days you can just position a pseudo-element over the content.</p>\n\n<pre><code>.blocked\n{\n    position:relative;\n}\n.blocked:after\n{\n    content: '';\n    position: absolute;\n    left:0;\n    right:0;\n    top:0;\n    bottom:0;\n    z-index:1;\n    background: transparent;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/HE5wR/\" rel=\"nofollow\">http://jsfiddle.net/HE5wR/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Let's say if I have wrapper div which includes some links and images, \nis there any way I can deactivate it at once with CSS only?</p>\n\n<p>// after review of answers\nI dropped the idea that can make it with CSS only.\njQuery blockUI plug in works like charm.\nThanks a lot. </p>\n",
            "last_activity_date": 1391157514,
            "question_id": 775215,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "css"
            ],
            "title": "How do i make an area unclickable with CSS?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You do not need an easing plugin to do custom easing with jQuery.  You only need the source JavaScript code of the one easing function you are going to use.</p>\n\n<p>Here is the <code>easeOutCubic</code> function obtained from the jQuery UI source code.  See <a href=\"http://stackoverflow.com/questions/5207301/looking-for-jquery-easing-functions-without-using-a-plugin\">this thread for more</a>.</p>\n\n<pre><code>$.easing.easeOutCubic = function (x, t, b, c, d) {\n    return c*((t=t/d-1)*t*t + 1) + b;\n}\n</code></pre>\n\n<p>Now you can edit the function and/or rename it...</p>\n\n<pre><code>$.easing.myEasing = function (x, t, b, c, d) {\n    return c*((t=t/d-1)*t*t + 1) + b;\n}\n</code></pre>\n\n<p><em>(All of the following examples use a 375 pixel blue square with a <code>slideToggle()</code> of 3 second duration.  You can alter the 3 seconds (3000 ms) duration to demonstrate the effect to your liking.  I chose 3 seconds to make it slow enough to see the differences.)</em></p>\n\n<p>Then you just put it inside your jQuery, something like this perhaps...</p>\n\n<pre><code>$(document).ready(function(){\n\n        $.easing.myEasing = function (x, t, b, c, d) {\n            return c*((t=t/d-1)*t*t + 1) + b;\n        }\n\n        $(\"#button\").click(function() {\n            $('#myDiv').slideToggle(\n                3000, // &lt;-- Animation Duration (3000 ms)\n                'myEasing'  // &lt;-- the Name of your easing function\n            );\n        });\n\n});\n</code></pre>\n\n<p>Here is a demo of the above code which contains the <code>easeOutCubic</code> function renamed as <code>myEasing</code> and applied to a <code>slideToggle()</code> cube with a 3 second duration.</p>\n\n<p><a href=\"http://jsfiddle.net/kJZxQ/\">http://jsfiddle.net/kJZxQ/</a></p>\n\n<p>Ok, now to your issue:  You said that you want <em>\"...the ease effect to be really quick but then slow down greatly during the ease out.\"</em></p>\n\n<p>Here is a graph of <code>easeOutCubic</code>:\n<img src=\"http://i.stack.imgur.com/rUGJd.jpg\" alt=\"easeoutcubic\"></p>\n\n<p>You have two options, you can manipulate the easing equation itself or we can see if some other easing function has a similar curve, but steeper (faster) until the ease out part.</p>\n\n<p>This demo page visually shows you all the easing curves...</p>\n\n<p><a href=\"http://api.jqueryui.com/easings/\">http://api.jqueryui.com/easings/</a></p>\n\n<p>As you can see, several curves are shaped similarly to (7)-<code>easeOutCubic</code> yet are steeper on the front end.  Here are several examples...</p>\n\n<hr>\n\n<p>(10)-<code>easeOutQuart</code>\n<img src=\"http://i.stack.imgur.com/oazNK.jpg\" alt=\"easeoutquart\">\n<a href=\"http://jsfiddle.net/kJZxQ/1/\">easeOutQuart Demo</a></p>\n\n<hr>\n\n<p>(13)-<code>easeOutQuint</code>\n<img src=\"http://i.stack.imgur.com/RtbQI.jpg\" alt=\"easeoutquint\">\n<a href=\"http://jsfiddle.net/kJZxQ/3/\">easeOutQuint Demo</a></p>\n\n<hr>\n\n<p>(16)-<code>easeOutExpo</code>\n<img src=\"http://i.stack.imgur.com/c6lPs.jpg\" alt=\"easeoutexpo\">\n<a href=\"http://jsfiddle.net/kJZxQ/10/\">easeOutExpo Demo</a></p>\n\n<hr>\n\n<p>It seems like the last one, <code>easeOutExpo</code> is the steepest stock function available.  By comparing the differences in the equations contained above, we can also manipulate the <code>easeOutExpo</code> equation to steepen the curve even further.</p>\n\n<p>This custom equation is ridiculously fast and then slows down tremendously...</p>\n\n<p><a href=\"http://jsfiddle.net/kJZxQ/11/\">http://jsfiddle.net/kJZxQ/11/</a></p>\n\n<p>Even more extreme than the last...</p>\n\n<p><a href=\"http://jsfiddle.net/kJZxQ/12/\">http://jsfiddle.net/kJZxQ/12/</a></p>\n\n<p>Duration increased on last demo to 6 seconds to exaggerate the effect...</p>\n\n<p><a href=\"http://jsfiddle.net/kJZxQ/13/\">http://jsfiddle.net/kJZxQ/13/</a></p>\n\n<p>By comparing the mathematical equations of the above demonstrations, you can see which variable is being manipulated to enhance the effect and make your own fine adjustments accordingly.</p>\n\n<p>I really think <code>easeOutExpo</code> is more like what you describe.  Essentially, it's your <code>easeOutCubic</code> equation but only faster on the front and slower on the end.</p>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p>I'm using the jQuery easing plugin by Robert (<a href=\"http://gsgd.co.uk/sandbox/jquery/easing/\">http://gsgd.co.uk/sandbox/jquery/easing/</a>) and I need to emphasizing or drag out the ease effect. </p>\n\n<p>Basically, I want the ease effect to be really quick but then slow down greatly during the ease out.</p>\n\n<p>I believe I can do this using <code>jQuery.easing.easeOutCubic( null, current_time, start_value, end_value, total_time)</code> but I can't figure out how to use it properly.</p>\n\n<p>How can this be achieved?</p>\n",
            "last_activity_date": 1360251558,
            "question_id": 7748617,
            "score": 6,
            "tags": [
                "javascript",
                "jquery",
                "easing"
            ],
            "title": "jQuery.easing - easeOutCubic - emphasizing on the ease"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You want to look at dom mutation events - see <a href=\"http://en.wikipedia.org/wiki/DOM_Events\" rel=\"nofollow\">http://en.wikipedia.org/wiki/DOM_Events</a>, and scroll down to the section on mutation events.  Only problem is that support for these events is pretty sketchy, so be careful using them.  Notably, a lack of support at all in IE or Opera.  Firefox, Safari and Chrome seem to be the only ones.</p>\n\n<p>Something like:</p>\n\n<pre><code>document.addEventListener(\"DOMSubtreeModified\", function () {\n    alert(\"you've just changed DOM!\");\n});\n</code></pre>\n\n<p>According to <a href=\"http://www.quirksmode.org/dom/events/index.html\" rel=\"nofollow\">http://www.quirksmode.org/dom/events/index.html</a> for these kind of events you need to use addEventListener, not attachEvent.\nThe event apparently bubbles, so that should be fine.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Off the top of my head, this <em>might</em> work:</p>\n\n<pre><code>document.body.attachEvent('onpropertychange', function(event) {\n  if (event.propertyName !== 'innerHTML') return;\n  alert(\"you've just changed DOM!\");\n});\n</code></pre>\n\n<p>This relies on IE's proprietary <a href=\"http://msdn.microsoft.com/en-us/library/ms536956%28VS.85).aspx\" rel=\"nofollow\">onPropertyChange event</a> \u2014 since the document's <code>innerHTML</code> would change whenever a node is inserted. But:</p>\n\n<ol>\n<li><p>It might not work with certain types of properties. I imagine <code>innerHTML</code> would function like a \"getter\" in that it'd only get recalculated when retrieved.</p></li>\n<li><p>It would also pick up <em>a lot</em> of false positives \u2014 lots of other things would modify the <code>innerHTML</code> that would have nothing to do with node insertion. You could mitigate this by listening on a particular element, rather than document-wide.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Brute-force \"solution\":</p>\n\n<pre><code>(function (previousInnerHTML) {\n    return function () {\n        if (document.body.innerHTML !== previousInnerHTML) {\n            alert(\"you've just (at max 33ms ago) changed DOM\");\n        }\n        setTimout(arguments.callee, 33);\n    };\n})(document.body.innerHTML)();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                }
            ],
            "body": "<p>Is there any event in Internet Explorer, that is fired whenever DOM is changed? For example:</p>\n\n<pre><code>document.attachEvent(\"ondocumentchange\", function () {\n    alert(\"you've just changed DOM!\");\n});\n</code></pre>\n\n<p>And when I execute:</p>\n\n<pre><code>document.appendChild(document.createElement(\"img\"));\n</code></pre>\n\n<p>Window with text \"you've just changed DOM!\" appears.</p>\n\n<p>I try to emulate \"advanced\" CSS selectors (e.g. +, >, [attr]) in IE6 using Javascript. However to work properly with dynamic content, they would have to be recalculated after each change in document.</p>\n",
            "last_activity_date": 1249301978,
            "question_id": 1218445,
            "score": 6,
            "tags": [
                "javascript",
                "internet-explorer",
                "events"
            ],
            "title": "Is there any onDocumentChange event?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><a href=\"http://wsnippets.com/export-html-table-data-excel-sheet-using-jquery/\" rel=\"nofollow\">http://wsnippets.com/export-html-table-data-excel-sheet-using-jquery/</a>\ntry this link it might solve your problem</p>\n\n<p><img src=\"http://i.stack.imgur.com/9QPZQ.jpg\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Excel export script works on IE7+, Firefox and Chrome.</p>\n\n<pre><code>function fnExcelReport()\n{\n    var tab_text=\"&lt;table border='2px'&gt;&lt;tr bgcolor='#87AFC6'&gt;\";\n    var textRange; var j=0;\n    tab = document.getElementById('headerTable'); // id of table\n\n    for(j = 0 ; j &lt; tab.rows.length ; j++) \n    {     \n        tab_text=tab_text+tab.rows[j].innerHTML+\"&lt;/tr&gt;\";\n        //tab_text=tab_text+\"&lt;/tr&gt;\";\n    }\n\n    tab_text=tab_text+\"&lt;/table&gt;\";\n    tab_text= tab_text.replace(/&lt;A[^&gt;]*&gt;|&lt;\\/A&gt;/g, \"\");//remove if u want links in your table\n    tab_text= tab_text.replace(/&lt;img[^&gt;]*&gt;/gi,\"\"); // remove if u want images in your table\n    tab_text= tab_text.replace(/&lt;input[^&gt;]*&gt;|&lt;\\/input&gt;/gi, \"\"); // reomves input params\n\n    var ua = window.navigator.userAgent;\n    var msie = ua.indexOf(\"MSIE \"); \n\n    if (msie &gt; 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./))      // If Internet Explorer\n    {\n        txtArea1.document.open(\"txt/html\",\"replace\");\n        txtArea1.document.write(tab_text);\n        txtArea1.document.close();\n        txtArea1.focus(); \n        sa=txtArea1.document.execCommand(\"SaveAs\",true,\"Say Thanks to Sumit.xls\");\n    }  \n    else                 //other browser not tested on IE 11\n        sa = window.open('data:application/vnd.ms-excel,' + encodeURIComponent(tab_text));  \n\n    return (sa);\n}\n</code></pre>\n\n<p>Just create a blank iframe:</p>\n\n<pre><code>&lt;iframe id=\"txtArea1\" style=\"display:none\"&gt;&lt;/iframe&gt;\n</code></pre>\n\n<p>Call this function on:</p>\n\n<pre><code>&lt;button id=\"btnExport\" onclick=\"fnExcelReport();\"&gt; EXPORT &lt;/button&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>This could help</p>\n\n<pre><code>function exportToExcel(){\nvar htmls = \"\";\n            var uri = 'data:application/vnd.ms-excel;base64,';\n            var template = '&lt;html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-microsoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"&gt;&lt;head&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;&lt;x:ExcelWorkbook&gt;&lt;x:ExcelWorksheets&gt;&lt;x:ExcelWorksheet&gt;&lt;x:Name&gt;{worksheet}&lt;/x:Name&gt;&lt;x:WorksheetOptions&gt;&lt;x:DisplayGridlines/&gt;&lt;/x:WorksheetOptions&gt;&lt;/x:ExcelWorksheet&gt;&lt;/x:ExcelWorksheets&gt;&lt;/x:ExcelWorkbook&gt;&lt;/xml&gt;&lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;table&gt;{table}&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;'; \n            var base64 = function(s) {\n                return window.btoa(unescape(encodeURIComponent(s)))\n            };\n\n            var format = function(s, c) {\n                return s.replace(/{(\\w+)}/g, function(m, p) {\n                    return c[p];\n                })\n            };\n\n            htmls = \"YOUR HTML AS TABLE\"\n\n            var ctx = {\n                worksheet : 'Worksheet',\n                table : htmls\n            }\n\n\n            var link = document.createElement(\"a\");\n            link.download = \"export.xls\";\n            link.href = uri + base64(format(template, ctx));\n            link.click();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a HTML table in velocity template. I want to export the html table data to excel using either java script or jquery, comatibale with all browser. \nI am using below script </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction ExportToExcel(mytblId){\n       var htmltable= document.getElementById('my-table-id');\n       var html = htmltable.outerHTML;\n       window.open('data:application/vnd.ms-excel,' + encodeURIComponent(html));\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>This script works fine in <strong>Mozilla Firefox</strong>,it pops-up with a dialog box of excel and ask for open or save options. But when I tested same script in <strong>Chrome browser it is not working</strong> as expected,when clicked on button there is no pop-up for excel. Data gets downloaded in a file with \"file type : file\" , no extension like <strong>.xls</strong>\nThere are no errors in chrome console.</p>\n\n<p>Jsfiddle example :</p>\n\n<p><a href=\"http://jsfiddle.net/insin/cmewv/\">http://jsfiddle.net/insin/cmewv/</a></p>\n\n<p>This works fine in mozilla but not in chrome. </p>\n\n<p>Chrome browser Test Case :</p>\n\n<p>First Image:I click on Export to excel button </p>\n\n<p><img src=\"http://i.stack.imgur.com/Mj5Hb.png\" alt=\"First Image:I click on Export to excel button \"> </p>\n\n<p>and result : </p>\n\n<p><img src=\"http://i.stack.imgur.com/PaFZl.png\" alt=\"Result\"></p>\n",
            "last_activity_date": 1420730090,
            "question_id": 22317951,
            "score": 5,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "excel",
                "google-chrome"
            ],
            "title": "Export html table data to Excel using JavaScript / JQuery is not working properly in chrome browse"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>document.body.addEventListener('touchmove',function(e){\n     if(!$(e.target).hasClass(\"scrollable\")) {\n       e.preventDefault();\n     }\n });\n</code></pre>\n\n<p>Try this i just got in via google</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I had pretty much the <a href=\"http://stackoverflow.com/questions/10238084/ios-safari-how-to-disable-overscroll-but-allow-scrollable-divs-to-scroll-norma\">same issue</a>. This should help you:</p>\n\n<pre><code>// Disable overscroll / viewport moving on everything but scrollable divs\n $('body').on('touchmove', function (e) {\n         if (!$('.scrollable').has($(e.target)).length) e.preventDefault();\n });\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>I would like to disable the iOS overscroll in a webapp but still allow the body to be scrolled.</p>\n\n<pre><code>$(document).on('touchmove', function(e) {\n    e.preventDefault();\n});\n</code></pre>\n\n<p>disables scrolling altogether (as one would expect).</p>\n\n<p>Is there a way to do what I want to do?</p>\n",
            "last_activity_date": 1338011664,
            "question_id": 10546857,
            "score": 5,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "ios",
                "web-applications"
            ],
            "title": "Disable iOS Overscroll but allow body scrolling"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>This is a little tricky but working</p>\n\n<pre><code>chrome.browserAction.onClicked.addListener(createFile);\ncreateFile();\n\nfunction createFile()\n{\n    chrome.tabs.getSelected(null, function(tab) {\n        window.webkitRequestFileSystem(window.TEMPORARY, 1024*1024, function(fs) {\n            fs.root.getFile('test', {create: true}, function(fileEntry) {\n                fileEntry.createWriter(function(fileWriter) {\n                    var builder = new WebKitBlobBuilder();\n                    builder.append(\"Saurabh\");\n                    builder.append(\"\\n\");\n                    builder.append(\"Saxena\");\n\n                    var blob = builder.getBlob('text/plain');\n\n                    fileWriter.onwriteend = function() {\n                        chrome.tabs.create({\"url\":fileEntry.toURL(),\"selected\":true},function(tab){});\n                    };\n                    fileWriter.write(blob);\n                }, errorHandler);\n            }, errorHandler);\n        }, errorHandler);\n    });\n}\nfunction errorHandler(e) {\n  var msg = '';\n\n  switch (e.code) {\n    case FileError.QUOTA_EXCEEDED_ERR:\n      msg = 'QUOTA_EXCEEDED_ERR';\n      break;\n    case FileError.NOT_FOUND_ERR:\n      msg = 'NOT_FOUND_ERR';\n      break;\n    case FileError.SECURITY_ERR:\n      msg = 'SECURITY_ERR';\n      break;\n    case FileError.INVALID_MODIFICATION_ERR:\n      msg = 'INVALID_MODIFICATION_ERR';\n      break;\n    case FileError.INVALID_STATE_ERR:\n      msg = 'INVALID_STATE_ERR';\n      break;\n    default:\n      msg = 'Unknown Error';\n      break;\n  };\n\n  Console.Log('Error: ' + msg);\n}\n</code></pre>\n\n<p>Because of the Security Exceptions, i cannot create/modify a file on Local System. But in this code, I am actually creating a file in a directory which is allocated for Google Chrome Temporary Files and then downloading that file into my Downloads Folder.</p>\n\n<p>This is the code of the popup page of a Chrome Extension.</p>\n\n<p>:)</p>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>I wish to create a text file locally on my system using javascript/jquery.</p>\n\n<p>I am trying this code, but not working on my system.</p>\n\n<p>Machine : Ubuntu 10.4\nChrome  : 14.0.835.126</p>\n\n<pre><code>window.webkitRequestFileSystem(window.TEMPORARY, 1024*1024, function(fs) {\n        fs.root.getFile('~/Desktop/test.txt', {create: true}, function(fileEntry) {\n            alert(fileEntry.fullPath);   //getting filepath\n        }, function() {});\n    }, function() {});\n</code></pre>\n",
            "last_activity_date": 1318010627,
            "question_id": 7685020,
            "score": 5,
            "tags": [
                "javascript",
                "html5"
            ],
            "title": "How to Create a Text File Locally at client side using JavaScript/JQuery"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You probably need to initialize a jQuery object around <code>element.target</code>. Try:</p>\n\n<pre><code>document.addEventListener(\"DOMNodeInserted\", function(event) {\n    alert($(event.target).parent()[0].tagName);\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>For sure this question is very easy, but I just cannot figure this out.</p>\n\n<p>I'm using DOMNodeInserted event to detect when a new element is inserted.</p>\n\n<p>I don't know how to use the current element, for example to get it's parent id.</p>\n\n<p>Now I have the function like this:</p>\n\n<pre><code>document.addEventListener(\"DOMNodeInserted\", function(event){\n  var element = event.target;\n\n  if (element.tagName == 'DIV') {\n    if (element.id == 'ndiv_3-1VTSTHR') {\n     alert($('#ndiv_3-1VTSTHR').parent().get(0).tagName);\n    }\n  }\n});\n</code></pre>\n\n<p>This works, but it will give me the parent to ndiv_3-1VTSTHR element. I want to know the parent to any element, using JQuery.</p>\n\n<p>I tried with </p>\n\n<pre><code>alert($(this).parent().get(0).tagName);\n</code></pre>\n\n<p>but with no luck.</p>\n",
            "last_activity_date": 1311587342,
            "question_id": 6814219,
            "score": 5,
            "tags": [
                "javascript",
                "jquery",
                "javascript-events"
            ],
            "title": "JQuery - use element with DOMNodeInserted"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>jQuery, MooTools and Node.js are all \"pure\" Javascript if that's what you're asking. However, all of them are also libraries, and you will indeed have to learn their API.</p>\n\n<p>You can find documentation for Node.js <a href=\"http://nodejs.org/docs/v0.4.8/api/\" rel=\"nofollow\">here</a>.</p>\n\n<p></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>node.js is pure javascript.</p>\n\n<p>Yes you do need to learn node.js because its your server-side IO library. And no you do not need to learn jQuery or MooTools for server-side development.</p>\n\n<p>Within the node.js community there is a strong emphasis on using 3rd party libraries to achieve what you want. There are currently no frameworks set up for node.</p>\n\n<p>A couple of libraries worth learning are</p>\n\n<ul>\n<li><a href=\"http://expressjs.com/\" rel=\"nofollow\">express</a> <strong>The Routing, View engine and Controllers (Half of MVC)</strong></li>\n</ul>\n\n<p>Express is a lightweight MVC library that builds ontop of <a href=\"http://senchalabs.github.com/connect/\" rel=\"nofollow\">connect</a>. This gives you access to a Routing library and a view engine. When used in combination with <a href=\"http://embeddedjs.com/\" rel=\"nofollow\">EJS</a> or <a href=\"http://jade-lang.com/\" rel=\"nofollow\">Jade</a> it will allow you to set up your node.js code to handle incoming routes individually and rendering data from templates. I would also recommend looking at <a href=\"https://github.com/drudge/express-controllers\" rel=\"nofollow\">express-controllers</a> which is a great way to handle REST style routing of your urls.</p>\n\n<ul>\n<li><a href=\"http://nowjs.com/\" rel=\"nofollow\">now</a> <strong>The websocket library</strong></li>\n</ul>\n\n<p>now is an abstraction on-top of socket.io. It offers a \"shared\" namespace between client and server. This make RPC trivial. Simply declare a function as a property of now on the server and call it from the client. Now handles all the socket.io communication for you.</p>\n\n<ul>\n<li><a href=\"https://github.com/cloudhead/cradle\" rel=\"nofollow\">cradle</a> <strong>The database library</strong></li>\n</ul>\n\n<p>Cradle is an abstraction that allows you to interact with <a href=\"http://couchdb.apache.org/\" rel=\"nofollow\">couchdb</a>. If your going to use node I recommend you use a NoSQL database like couch or <a href=\"http://www.mongodb.org/\" rel=\"nofollow\">mongodb</a> (Try <a href=\"http://mongoosejs.com/\" rel=\"nofollow\">mongoose</a> if your using mongo). </p>\n\n<ul>\n<li><a href=\"http://documentcloud.github.com/underscore/\" rel=\"nofollow\">underscore</a> <strong>General Utility to make life easy</strong></li>\n</ul>\n\n<p>An awesome utility library that allows you to code in a functional style (think python or ruby). This is highly recommended although most of the features are already part of ES5. Using this on the client to emulate ES5 is also a great advantage</p>\n\n<ul>\n<li><a href=\"http://documentcloud.github.com/backbone/\" rel=\"nofollow\">backbone</a> <strong>The Collections and Models (Other half of MVC)</strong></li>\n</ul>\n\n<p>Backbone is a lightweight MVC abstraction. This allows you to use more commonly known MVC constructs. For node.js itself I would recommend using <a href=\"http://documentcloud.github.com/backbone/#Model\" rel=\"nofollow\"><code>Backbone.Model</code></a> and <a href=\"http://documentcloud.github.com/backbone/#Collection\" rel=\"nofollow\"><code>Backbone.Collection</code></a> and having express handle the view rendering (but populating the views with data from collections and models). You can also easily overwrite <a href=\"http://documentcloud.github.com/backbone/#Sync\" rel=\"nofollow\"><code>Backbone.Sync</code></a> to interact with your database abstraction of choice which virtually turns Backbone into an ORM. A solid alternative would be <a href=\"http://maccman.github.com/spine/\" rel=\"nofollow\">Spine</a></p>\n\n<ul>\n<li><a href=\"https://github.com/coolaj86/futures\" rel=\"nofollow\">futures</a> <strong>The Flow Control library</strong></li>\n</ul>\n\n<p>Futures gives you a promises API. This is great for writing manageable readable code. It also stops you from nesting callbacks 5 layers deep. The library itself extensive. It also provides nice abstractions for running asynchronous callbacks in sequence, and for running them in parallel with a callback handler at the end.</p>\n\n<p><strong>3 Months later</strong></p>\n\n<p>After having done a few projects, I would still recommend express. However.</p>\n\n<p>I do not recommend </p>\n\n<ul>\n<li>now. Why? It get's in the way, it leaks. Use <a href=\"http://socket.io/\" rel=\"nofollow\">socket.io</a> instead.</li>\n<li>cradle. Why? It has edge case bugs that are a nightmare to debug, use request instead.</li>\n<li>underscore. Why? It's just not needed. ES5 is expressive enough</li>\n<li>backbone/spine. Why? It leaks, it get's in the way. It's just not designed for the server</li>\n<li>futures. Why? It's overkill. you don't need it. Use <a href=\"https://github.com/Raynos/after\" rel=\"nofollow\">after</a> instead.</li>\n<li>express-controllers. It's a leaky abstraction, it doesn't work.</li>\n</ul>\n\n<p>Things I would recommend.</p>\n\n<ul>\n<li>unit tests (<a href=\"https://github.com/Raynos/vows-is\" rel=\"nofollow\">vows-is</a>)</li>\n<li>hot code reloading (<a href=\"https://github.com/indexzero/forever\" rel=\"nofollow\">forever</a>/<a href=\"https://github.com/remy/nodemon\" rel=\"nofollow\">nodemon</a>)</li>\n<li>scaling architecture (<a href=\"https://github.com/LearnBoost/cluster\" rel=\"nofollow\">cluster</a>/hook.io</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 16
                }
            ],
            "body": "<p>I'm starting to use nodejs and socket.io...</p>\n\n<p>Is it pure javascript or do i have to learn a framework like JQuery or MOntools ?</p>\n\n<p>Thank you!</p>\n",
            "last_activity_date": 1354415270,
            "question_id": 6241934,
            "score": 5,
            "tags": [
                "javascript",
                "linux"
            ],
            "title": "Nodejs and socket.io, is it pure javascript?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Check out this JS library, <a href=\"http://harvesthq.github.com/chosen/\" rel=\"nofollow\">http://harvesthq.github.com/chosen/</a></p>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p>how do you code a search box like the one in Tags where you enter a tag name and all tags are showing immidiately without you press enter.</p>\n\n<p>can someone link me a script or tutorial for that. is it javascript or jquery? does it involve ajax?</p>\n\n<p>and does it search in the database for tags? or is it searching through a xml file with tags?</p>\n",
            "last_activity_date": 1316466301,
            "question_id": 1736548,
            "score": 5,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "mysql",
                "ajax"
            ],
            "title": "search tags like stackoverflow?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Please, please, <strong>never blindly delete chunks of text</strong>, especially not just because you can't see or understand them; it destroys information.  Someone put them there for a reason; tweets containing emoji often don't make any sense without the emoji.</p>\n\n<p>For what it's worth, what you're seeing isn't really \"binary\"; it's most likely a small square with the Unicode codepoint spelled out in hex.  For \ud83d\udc9c, that's U+1F49C, so you probably see <code>0 1 F</code> <code>4 9 C</code>.  This is how Unicode characters are rendered when none of your installed fonts have glyphs for them.</p>\n\n<p>To actually see the characters, you have several options.</p>\n\n<ol>\n<li>Get Symbola from <a href=\"http://users.teilar.gr/~g1951d/\">here</a>, and install it.  Now you can see emoji.  But no one else can.</li>\n<li><p>Get Symbola, and add it to your website with a <code>@font-face</code> block like this:</p>\n\n<pre><code>@font-face {\n    font-family: Symbola;\n    src: url('Symbola.ttf') format('truetype');\n    unicode-range: U+1F???;\n}\n</code></pre>\n\n<p>Then set your page's font with <code>font-family: Symbola, \"your preferred font\", sans-serif;</code>.</p>\n\n<p>The downside to this is that, to my understanding, CSS's <code>font-family</code> picks the first font that exists at all, and does <em>not</em> specify a Unicode fallback.  So in browsers that don't support <code>unicode-range</code> (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=unicode-range\">Firefox</a>), that will render your <em>entire page</em> in the not particularly beautiful Symbola.</p>\n\n<p>You could sorta hack around this by finding all the emoji and wrapping them in a <code>&lt;span class=\"emoji\"&gt;</code>, then only using Symbola for <code>.emoji</code> elements.</p></li>\n<li><p>Find all the emoji and replace them with <code>&lt;img&gt;</code> tags, like Twitter does.  Twitter's images are all at URLs containing the codepoint, e.g. <a href=\"https://abs.twimg.com/emoji/v1/72x72/1f43e.png\">https://abs.twimg.com/emoji/v1/72x72/1f43e.png</a>, so just reusing those is easy enough.  (I'm a little surprised the Twitter API won't do this for you, actually.)</p></li>\n</ol>\n\n<p>If you want to find and replace all emoji, you probably want to just look for all astral-plane characters \u2014 i.e., those not in the Basic Multilingual Plane where modern human languages live.  These are all characters with codepoints of U+10000 and above.</p>\n\n<p>In JavaScript, strings aren't really strings; they're arrays of 16-bit numbers.  16 bits is four hex digits, so Unicode codepoints that have five hex digits won't fit in a single 16-bit number.  Instead, JavaScript encodes them with the terrible UTF-16 encoding, which uses two 16-bit numbers: one in the range 0xD800 to 0xDBFF and one in the range 0xDC00 to 0xDFFF.  Two numbers together are called a \"surrogate pair\".  None of these numbers will ever be real Unicode codepoints; the entire block is reserved for this encoding.</p>\n\n<p>To find all the astral plane characters, you actually want to find all the surrogate pairs:</p>\n\n<pre><code>/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/\n</code></pre>\n\n<p>So an implementation of Twitter's image replacement might look like this:</p>\n\n<pre><code>var text = \"hey babe  \ud83d\ude18  how you doin\";\n\n// Split on surrogate pairs, and preserve the surrogates; this will give\n// you an array that alternates between BMP text and a single surrogate\n// pair: [text, emoji, text, emoji, text...]\nvar chunks = text.split(/([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/);\n\n// A DocumentFragment is a DOM tree that can be manipulated freely without\n// causing a reflow, so it's more performant for heavy tree-building and a\n// good habit to get into\nvar frag = document.createDocumentFragment();\n\nfor (var i = 0, l = chunks.length; i &lt; l; i++) {\n    if (i % 2 == 0) {\n        // Even-numbered chunks are plain text\n        frag.appendChild(document.createTextNode(chunks[i]));\n    }\n    else {\n        // Odd-numbered chunks are surrogate pairs\n        // We have TWO characters, but we want one codepoint; this is how\n        // you decode UTF-16  :(\n        var pair = chunks[i];\n        var codepoint = (\n            0x10000\n            | ((pair.charCodeAt(0) - 0xD800) &lt;&lt; 10)\n            | (pair.charCodeAt(1) - 0xDC00)\n        );\n        var hex = codepoint.toString(16);  // now it's in hex\n        var img = document.createElement('img');\n        img.src = \"https://abs.twimg.com/emoji/v1/72x72/\" + hex + \".png\";\n        // Twitter uses pretty big images and just scales them down\n        // clientside; you could change these to whatever you want, or add\n        // a class here and use CSS to set the width/height to 1em to\n        // match the current font size\n        img.height = 16;\n        img.width = 16;\n        frag.appendChild(img);\n    }\n}\n\n// Now just stick it into the page somewhere\nvar el = document.createElement('p');\nel.appendChild(frag);\ndocument.body.appendChild(el);\n</code></pre>\n\n<p>This creates an <code>&lt;img&gt;</code> as per option 3, but you could also easily add a <code>&lt;span class=\"emoji\"&gt;</code> and go with option 2.  Or do whatever else you want, like replace emoji with their Unicode names.  (Twitter has the Unicode names as <code>title</code> on each image, but that's not done here because it requires including a huge list mapping codepoints to names  \u263a)</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>Unfortunately, what is or is not a Twitter Emoji is not simply all code points >= U+10000. There is also the issue of the <a href=\"http://en.wikipedia.org/wiki/Regional_Indicator_Symbol\" rel=\"nofollow\">regional flags</a>, and the <a href=\"http://www.unicode.org/Public/UNIDATA/StandardizedVariants.html\" rel=\"nofollow\">variant sequences</a>. </p>\n\n<p>I realized this is probably going to be a common problem so until the Twitter API provides native Emoji support, you can try something similar to this:</p>\n\n<pre><code>// This represents all of the Emoji Twitter supports as of August 2014. The order is important for the flags\n// which are formed by combining two smaller Emoji. The codes at the end have optional standard variants that\n// need to be treated as a contiguous span when present.\n//\n// This is written as a string rather than a raw regex, because js compressors do a good job concatenating\n// and converting unicode escape characters into binary for strings, but not regexes.\nvar EMOJI_REGEX = new RegExp(\n    \"\\ud83c\\uddec\\ud83c\\udde7|\\ud83c\\uddfa\\ud83c\\uddf8|\\ud83c\\udde9\\ud83c\\uddea|\\ud83c\\uddea\\ud83c\\uddf8|\" +\n    \"\\ud83c\\uddeb\\ud83c\\uddf7|\\ud83c\\udde8\\ud83c\\uddf3|\\ud83c\\uddee\\ud83c\\uddf9|\\ud83c\\uddef\\ud83c\\uddf5|\" +\n    \"\\ud83c\\uddf0\\ud83c\\uddf7|\\ud83c\\uddf7\\ud83c\\uddfa|\\ud83d\\udc7a|\\ud83c\\udd94|\\ud83c\\udd95|\\ud83c\\udd96|\" +\n    \"\\ud83c\\udd97|\\ud83c\\udd98|\\ud83c\\udd99|\\ud83c\\udd9a|\\ud83c\\udde6|\\ud83c\\udde7|\\ud83d\\udc83|\\ud83c\\udde8|\" +\n    \"\\ud83c\\udccf|\\ud83c\\udde9|\\ud83c\\udd70|\\ud83c\\uddea|\\ud83c\\udd71|\\ud83c\\uddeb|\\ud83c\\udd7e|\\ud83c\\uddec|\" +\n    \"\\ud83c\\udded|\\ud83c\\uddee|\\ud83c\\udd8e|\\ud83c\\uddef|\\ud83c\\udd91|\\ud83c\\uddf0|\\ud83c\\uddf1|\\ud83c\\uddf2|\" +\n    \"\\ud83c\\uddf3|\\ud83c\\uddf4|\\ud83c\\uddf5|\\ud83c\\uddf6|\\ud83c\\udd92|\\ud83c\\uddf7|\\ud83c\\uddf8|\\ud83c\\uddf9|\" +\n    \"\\ud83c\\udd93|\\ud83c\\uddfa|\\ud83c\\uddfb|\\ud83c\\uddfc|\\ud83c\\uddfd|\\ud83c\\uddfe|\\ud83c\\uddff|\\ud83c\\ude01|\" +\n    \"\\ud83c\\ude02|\\ud83c\\ude32|\\ud83c\\ude33|\\ud83c\\ude34|\\ud83c\\ude35|\\ud83c\\ude36|\\ud83c\\ude37|\\ud83c\\ude38|\" +\n    \"\\ud83c\\ude39|\\ud83c\\ude3a|\\ud83c\\ude50|\\ud83c\\ude51|\\ud83c\\udf00|\\ud83c\\udf01|\\ud83c\\udf02|\\ud83c\\udf03|\" +\n    \"\\ud83c\\udf04|\\ud83c\\udf05|\\ud83c\\udf06|\\ud83c\\udf07|\\ud83c\\udf08|\\ud83c\\udf09|\\ud83c\\udf0a|\\ud83c\\udf0b|\" +\n    \"\\ud83c\\udf0c|\\ud83c\\udf0d|\\ud83c\\udf0e|\\ud83c\\udf0f|\\ud83c\\udf10|\\ud83c\\udf11|\\ud83c\\udf12|\\ud83c\\udf13|\" +\n    \"\\ud83c\\udf14|\\ud83c\\udf15|\\ud83c\\udf16|\\ud83c\\udf17|\\ud83c\\udf18|\\ud83c\\udf19|\\ud83c\\udf1a|\\ud83c\\udf1b|\" +\n    \"\\ud83c\\udf1c|\\ud83c\\udf1d|\\ud83c\\udf1e|\\ud83c\\udf1f|\\ud83c\\udf20|\\ud83c\\udf30|\\ud83c\\udf31|\\ud83c\\udf32|\" +\n    \"\\ud83c\\udf33|\\ud83c\\udf34|\\ud83c\\udf35|\\ud83c\\udf37|\\ud83c\\udf38|\\ud83c\\udf39|\\ud83c\\udf3a|\\ud83c\\udf3b|\" +\n    \"\\ud83c\\udf3c|\\ud83c\\udf3d|\\ud83c\\udf3e|\\ud83c\\udf3f|\\ud83c\\udf40|\\ud83c\\udf41|\\ud83c\\udf42|\\ud83c\\udf43|\" +\n    \"\\ud83c\\udf44|\\ud83c\\udf45|\\ud83c\\udf46|\\ud83c\\udf47|\\ud83c\\udf48|\\ud83c\\udf49|\\ud83c\\udf4a|\\ud83c\\udf4b|\" +\n    \"\\ud83c\\udf4c|\\ud83c\\udf4d|\\ud83c\\udf4e|\\ud83c\\udf4f|\\ud83c\\udf50|\\ud83c\\udf51|\\ud83c\\udf52|\\ud83c\\udf53|\" +\n    \"\\ud83c\\udf54|\\ud83c\\udf55|\\ud83c\\udf56|\\ud83c\\udf57|\\ud83c\\udf58|\\ud83c\\udf59|\\ud83c\\udf5a|\\ud83c\\udf5b|\" +\n    \"\\ud83c\\udf5c|\\ud83c\\udf5d|\\ud83c\\udf5e|\\ud83c\\udf5f|\\ud83c\\udf60|\\ud83c\\udf61|\\ud83c\\udf62|\\ud83c\\udf63|\" +\n    \"\\ud83c\\udf64|\\ud83c\\udf65|\\ud83c\\udf66|\\ud83c\\udf67|\\ud83c\\udf68|\\ud83c\\udf69|\\ud83c\\udf6a|\\ud83c\\udf6b|\" +\n    \"\\ud83c\\udf6c|\\ud83c\\udf6d|\\ud83c\\udf6e|\\ud83c\\udf6f|\\ud83c\\udf70|\\ud83c\\udf71|\\ud83c\\udf72|\\ud83c\\udf73|\" +\n    \"\\ud83c\\udf74|\\ud83c\\udf75|\\ud83c\\udf76|\\ud83c\\udf77|\\ud83c\\udf78|\\ud83c\\udf79|\\ud83c\\udf7a|\\ud83c\\udf7b|\" +\n    \"\\ud83c\\udf7c|\\ud83c\\udf80|\\ud83c\\udf81|\\ud83c\\udf82|\\ud83c\\udf83|\\ud83c\\udf84|\\ud83c\\udf85|\\ud83c\\udf86|\" +\n    \"\\ud83c\\udf87|\\ud83c\\udf88|\\ud83c\\udf89|\\ud83c\\udf8a|\\ud83c\\udf8b|\\ud83c\\udf8c|\\ud83c\\udf8d|\\ud83c\\udf8e|\" +\n    \"\\ud83c\\udf8f|\\ud83c\\udf90|\\ud83c\\udf91|\\ud83c\\udf92|\\ud83c\\udf93|\\ud83c\\udfa0|\\ud83c\\udfa1|\\ud83c\\udfa2|\" +\n    \"\\ud83c\\udfa3|\\ud83c\\udfa4|\\ud83c\\udfa5|\\ud83c\\udfa6|\\ud83c\\udfa7|\\ud83c\\udfa8|\\ud83c\\udfa9|\\ud83c\\udfaa|\" +\n    \"\\ud83c\\udfab|\\ud83c\\udfac|\\ud83c\\udfad|\\ud83c\\udfae|\\ud83c\\udfaf|\\ud83c\\udfb0|\\ud83c\\udfb1|\\ud83c\\udfb2|\" +\n    \"\\ud83c\\udfb3|\\ud83c\\udfb4|\\ud83c\\udfb5|\\ud83c\\udfb6|\\ud83c\\udfb7|\\ud83c\\udfb8|\\ud83c\\udfb9|\\ud83c\\udfba|\" +\n    \"\\ud83c\\udfbb|\\ud83c\\udfbc|\\ud83c\\udfbd|\\ud83c\\udfbe|\\ud83c\\udfbf|\\ud83c\\udfc0|\\ud83c\\udfc1|\\ud83c\\udfc2|\" +\n    \"\\ud83c\\udfc3|\\ud83c\\udfc4|\\ud83c\\udfc6|\\ud83c\\udfc7|\\ud83c\\udfc8|\\ud83c\\udfc9|\\ud83c\\udfca|\\ud83c\\udfe0|\" +\n    \"\\ud83c\\udfe1|\\ud83c\\udfe2|\\ud83c\\udfe3|\\ud83c\\udfe4|\\ud83c\\udfe5|\\ud83c\\udfe6|\\ud83c\\udfe7|\\ud83c\\udfe8|\" +\n    \"\\ud83c\\udfe9|\\ud83c\\udfea|\\ud83c\\udfeb|\\ud83c\\udfec|\\ud83c\\udfed|\\ud83c\\udfee|\\ud83c\\udfef|\\ud83c\\udff0|\" +\n    \"\\ud83d\\udc00|\\ud83d\\udc01|\\ud83d\\udc02|\\ud83d\\udc03|\\ud83d\\udc04|\\ud83d\\udc05|\\ud83d\\udc06|\\ud83d\\udc07|\" +\n    \"\\ud83d\\udc08|\\ud83d\\udc09|\\ud83d\\udc0a|\\ud83d\\udc0b|\\ud83d\\udc0c|\\ud83d\\udc0d|\\ud83d\\udc0e|\\ud83d\\udc0f|\" +\n    \"\\ud83d\\udc10|\\ud83d\\udc11|\\ud83d\\udc12|\\ud83d\\udc13|\\ud83d\\udc14|\\ud83d\\udc15|\\ud83d\\udc16|\\ud83d\\udc17|\" +\n    \"\\ud83d\\udc18|\\ud83d\\udc19|\\ud83d\\udc1a|\\ud83d\\udc1b|\\ud83d\\udc1c|\\ud83d\\udc1d|\\ud83d\\udc1e|\\ud83d\\udc1f|\" +\n    \"\\ud83d\\udc20|\\ud83d\\udc21|\\ud83d\\udc22|\\ud83d\\udc23|\\ud83d\\udc24|\\ud83d\\udc25|\\ud83d\\udc26|\\ud83d\\udc27|\" +\n    \"\\ud83d\\udc28|\\ud83d\\udc29|\\ud83d\\udc2a|\\ud83d\\udc2b|\\ud83d\\udc2c|\\ud83d\\udc2d|\\ud83d\\udc2e|\\ud83d\\udc2f|\" +\n    \"\\ud83d\\udc30|\\ud83d\\udc31|\\ud83d\\udc32|\\ud83d\\udc33|\\ud83d\\udc34|\\ud83d\\udc35|\\ud83d\\udc36|\\ud83d\\udc37|\" +\n    \"\\ud83d\\udc38|\\ud83d\\udc39|\\ud83d\\udc3a|\\ud83d\\udc3b|\\ud83d\\udc3c|\\ud83d\\udc3d|\\ud83d\\udc3e|\\ud83d\\udc40|\" +\n    \"\\ud83d\\udc42|\\ud83d\\udc43|\\ud83d\\udc44|\\ud83d\\udc45|\\ud83d\\udc46|\\ud83d\\udc47|\\ud83d\\udc48|\\ud83d\\udc49|\" +\n    \"\\ud83d\\udc4a|\\ud83d\\udc4b|\\ud83d\\udc4c|\\ud83d\\udc4d|\\ud83d\\udc4e|\\ud83d\\udc4f|\\ud83d\\udc50|\\ud83d\\udc51|\" +\n    \"\\ud83d\\udc52|\\ud83d\\udc53|\\ud83d\\udc54|\\ud83d\\udc55|\\ud83d\\udc56|\\ud83d\\udc57|\\ud83d\\udc58|\\ud83d\\udc59|\" +\n    \"\\ud83d\\udc5a|\\ud83d\\udc5b|\\ud83d\\udc5c|\\ud83d\\udc5d|\\ud83d\\udc5e|\\ud83d\\udc5f|\\ud83d\\udc60|\\ud83d\\udc61|\" +\n    \"\\ud83d\\udc62|\\ud83d\\udc63|\\ud83d\\udc64|\\ud83d\\udc65|\\ud83d\\udc66|\\ud83d\\udc67|\\ud83d\\udc68|\\ud83d\\udc69|\" +\n    \"\\ud83d\\udc6a|\\ud83d\\udc6b|\\ud83d\\udc6c|\\ud83d\\udc6d|\\ud83d\\udc6e|\\ud83d\\udc6f|\\ud83d\\udc70|\\ud83d\\udc71|\" +\n    \"\\ud83d\\udc72|\\ud83d\\udc73|\\ud83d\\udc74|\\ud83d\\udc75|\\ud83d\\udc76|\\ud83d\\udc77|\\ud83d\\udc78|\\ud83d\\udc79|\" +\n    \"\\ud83d\\udc7b|\\ud83d\\udc7c|\\ud83d\\udc7d|\\ud83d\\udc7e|\\ud83d\\udc7f|\\ud83d\\udc80|\\ud83d\\udc81|\\ud83d\\udc82|\" +\n    \"\\ud83d\\udc84|\\ud83d\\udc85|\\ud83d\\udc86|\\ud83d\\udc87|\\ud83d\\udc88|\\ud83d\\udc89|\\ud83d\\udc8a|\\ud83d\\udc8b|\" +\n    \"\\ud83d\\udc8c|\\ud83d\\udc8d|\\ud83d\\udc8e|\\ud83d\\udc8f|\\ud83d\\udc90|\\ud83d\\udc91|\\ud83d\\udc92|\\ud83d\\udc93|\" +\n    \"\\ud83d\\udc94|\\ud83d\\udc95|\\ud83d\\udc96|\\ud83d\\udc97|\\ud83d\\udc98|\\ud83d\\udc99|\\ud83d\\udc9a|\\ud83d\\udc9b|\" +\n    \"\\ud83d\\udc9c|\\ud83d\\udc9d|\\ud83d\\udc9e|\\ud83d\\udc9f|\\ud83d\\udca0|\\ud83d\\udca1|\\ud83d\\udca2|\\ud83d\\udca3|\" +\n    \"\\ud83d\\udca4|\\ud83d\\udca5|\\ud83d\\udca6|\\ud83d\\udca7|\\ud83d\\udca8|\\ud83d\\udca9|\\ud83d\\udcaa|\\ud83d\\udcab|\" +\n    \"\\ud83d\\udcac|\\ud83d\\udcad|\\ud83d\\udcae|\\ud83d\\udcaf|\\ud83d\\udcb0|\\ud83d\\udcb1|\\ud83d\\udcb2|\\ud83d\\udcb3|\" +\n    \"\\ud83d\\udcb4|\\ud83d\\udcb5|\\ud83d\\udcb6|\\ud83d\\udcb7|\\ud83d\\udcb8|\\ud83d\\udcb9|\\ud83d\\udcba|\\ud83d\\udcbb|\" +\n    \"\\ud83d\\udcbc|\\ud83d\\udcbd|\\ud83d\\udcbe|\\ud83d\\udcbf|\\ud83d\\udcc0|\\ud83d\\udcc1|\\ud83d\\udcc2|\\ud83d\\udcc3|\" +\n    \"\\ud83d\\udcc4|\\ud83d\\udcc5|\\ud83d\\udcc6|\\ud83d\\udcc7|\\ud83d\\udcc8|\\ud83d\\udcc9|\\ud83d\\udcca|\\ud83d\\udccb|\" +\n    \"\\ud83d\\udccc|\\ud83d\\udccd|\\ud83d\\udcce|\\ud83d\\udccf|\\ud83d\\udcd0|\\ud83d\\udcd1|\\ud83d\\udcd2|\\ud83d\\udcd3|\" +\n    \"\\ud83d\\udcd4|\\ud83d\\udcd5|\\ud83d\\udcd6|\\ud83d\\udcd7|\\ud83d\\udcd8|\\ud83d\\udcd9|\\ud83d\\udcda|\\ud83d\\udcdb|\" +\n    \"\\ud83d\\udcdc|\\ud83d\\udcdd|\\ud83d\\udcde|\\ud83d\\udcdf|\\ud83d\\udce0|\\ud83d\\udce1|\\ud83d\\udce2|\\ud83d\\udce3|\" +\n    \"\\ud83d\\udce4|\\ud83d\\udce5|\\ud83d\\udce6|\\ud83d\\udce7|\\ud83d\\udce8|\\ud83d\\udce9|\\ud83d\\udcea|\\ud83d\\udceb|\" +\n    \"\\ud83d\\udcec|\\ud83d\\udced|\\ud83d\\udcee|\\ud83d\\udcef|\\ud83d\\udcf0|\\ud83d\\udcf1|\\ud83d\\udcf2|\\ud83d\\udcf3|\" +\n    \"\\ud83d\\udcf4|\\ud83d\\udcf5|\\ud83d\\udcf6|\\ud83d\\udcf7|\\ud83d\\udcf9|\\ud83d\\udcfa|\\ud83d\\udcfb|\\ud83d\\udcfc|\" +\n    \"\\ud83d\\udd00|\\ud83d\\udd01|\\ud83d\\udd02|\\ud83d\\udd03|\\ud83d\\udd04|\\ud83d\\udd05|\\ud83d\\udd06|\\ud83d\\udd07|\" +\n    \"\\ud83d\\udd08|\\ud83d\\udd09|\\ud83d\\udd0a|\\ud83d\\udd0b|\\ud83d\\udd0c|\\ud83d\\udd0d|\\ud83d\\udd0e|\\ud83d\\udd0f|\" +\n    \"\\ud83d\\udd10|\\ud83d\\udd11|\\ud83d\\udd12|\\ud83d\\udd13|\\ud83d\\udd14|\\ud83d\\udd15|\\ud83d\\udd16|\\ud83d\\udd17|\" +\n    \"\\ud83d\\udd18|\\ud83d\\udd19|\\ud83d\\udd1a|\\ud83d\\udd1b|\\ud83d\\udd1c|\\ud83d\\udd1d|\\ud83d\\udd1e|\\ud83d\\udd1f|\" +\n    \"\\ud83d\\udd20|\\ud83d\\udd21|\\ud83d\\udd22|\\ud83d\\udd23|\\ud83d\\udd24|\\ud83d\\udd25|\\ud83d\\udd26|\\ud83d\\udd27|\" +\n    \"\\ud83d\\udd28|\\ud83d\\udd29|\\ud83d\\udd2a|\\ud83d\\udd2b|\\ud83d\\udd2c|\\ud83d\\udd2d|\\ud83d\\udd2e|\\ud83d\\udd2f|\" +\n    \"\\ud83d\\udd30|\\ud83d\\udd31|\\ud83d\\udd32|\\ud83d\\udd33|\\ud83d\\udd34|\\ud83d\\udd35|\\ud83d\\udd36|\\ud83d\\udd37|\" +\n    \"\\ud83d\\udd38|\\ud83d\\udd39|\\ud83d\\udd3a|\\ud83d\\udd3b|\\ud83d\\udd3c|\\ud83d\\udd3d|\\ud83d\\udd50|\\ud83d\\udd51|\" +\n    \"\\ud83d\\udd52|\\ud83d\\udd53|\\ud83d\\udd54|\\ud83d\\udd55|\\ud83d\\udd56|\\ud83d\\udd57|\\ud83d\\udd58|\\ud83d\\udd59|\" +\n    \"\\ud83d\\udd5a|\\ud83d\\udd5b|\\ud83d\\udd5c|\\ud83d\\udd5d|\\ud83d\\udd5e|\\ud83d\\udd5f|\\ud83d\\udd60|\\ud83d\\udd61|\" +\n    \"\\ud83d\\udd62|\\ud83d\\udd63|\\ud83d\\udd64|\\ud83d\\udd65|\\ud83d\\udd66|\\ud83d\\udd67|\\ud83d\\uddfb|\\ud83d\\uddfc|\" +\n    \"\\ud83d\\uddfd|\\ud83d\\uddfe|\\ud83d\\uddff|\\ud83d\\ude00|\\ud83d\\ude01|\\ud83d\\ude02|\\ud83d\\ude03|\\ud83d\\ude04|\" +\n    \"\\ud83d\\ude05|\\ud83d\\ude06|\\ud83d\\ude07|\\ud83d\\ude08|\\ud83d\\ude09|\\ud83d\\ude0a|\\ud83d\\ude0b|\\ud83d\\ude0c|\" +\n    \"\\ud83d\\ude0d|\\ud83d\\ude0e|\\ud83d\\ude0f|\\ud83d\\ude10|\\ud83d\\ude11|\\ud83d\\ude12|\\ud83d\\ude13|\\ud83d\\ude14|\" +\n    \"\\ud83d\\ude15|\\ud83d\\ude16|\\ud83d\\ude17|\\ud83d\\ude18|\\ud83d\\ude19|\\ud83d\\ude1a|\\ud83d\\ude1b|\\ud83d\\ude1c|\" +\n    \"\\ud83d\\ude1d|\\ud83d\\ude1e|\\ud83d\\ude1f|\\ud83d\\ude20|\\ud83d\\ude21|\\ud83d\\ude22|\\ud83d\\ude23|\\ud83d\\ude24|\" +\n    \"\\ud83d\\ude25|\\ud83d\\ude26|\\ud83d\\ude27|\\ud83d\\ude28|\\ud83d\\ude29|\\ud83d\\ude2a|\\ud83d\\ude2b|\\ud83d\\ude2c|\" +\n    \"\\ud83d\\ude2d|\\ud83d\\ude2e|\\ud83d\\ude2f|\\ud83d\\ude30|\\ud83d\\ude31|\\ud83d\\ude32|\\ud83d\\ude33|\\ud83d\\ude34|\" +\n    \"\\ud83d\\ude35|\\ud83d\\ude36|\\ud83d\\ude37|\\ud83d\\ude38|\\ud83d\\ude39|\\ud83d\\ude3a|\\ud83d\\ude3b|\\ud83d\\ude3c|\" +\n    \"\\ud83d\\ude3d|\\ud83d\\ude3e|\\ud83d\\ude3f|\\ud83d\\ude40|\\ud83d\\ude45|\\ud83d\\ude46|\\ud83d\\ude47|\\ud83d\\ude48|\" +\n    \"\\ud83d\\ude49|\\ud83d\\ude4a|\\ud83d\\ude4b|\\ud83d\\ude4c|\\ud83d\\ude4d|\\ud83d\\ude4e|\\ud83d\\ude4f|\\ud83d\\ude80|\" +\n    \"\\ud83d\\ude81|\\ud83d\\ude82|\\ud83d\\ude83|\\ud83d\\ude84|\\ud83d\\ude85|\\ud83d\\ude86|\\ud83d\\ude87|\\ud83d\\ude88|\" +\n    \"\\ud83d\\ude89|\\ud83d\\ude8a|\\ud83d\\ude8b|\\ud83d\\ude8c|\\ud83d\\ude8d|\\ud83d\\ude8e|\\ud83d\\ude8f|\\ud83d\\ude90|\" +\n    \"\\ud83d\\ude91|\\ud83d\\ude92|\\ud83d\\ude93|\\ud83d\\ude94|\\ud83d\\ude95|\\ud83d\\ude96|\\ud83d\\ude97|\\ud83d\\ude98|\" +\n    \"\\ud83d\\ude99|\\ud83d\\ude9a|\\ud83d\\ude9b|\\ud83d\\ude9c|\\ud83d\\ude9d|\\ud83d\\ude9e|\\ud83d\\ude9f|\\ud83d\\udea0|\" +\n    \"\\ud83d\\udea1|\\ud83d\\udea2|\\ud83d\\udea3|\\ud83d\\udea4|\\ud83d\\udea5|\\ud83d\\udea6|\\ud83d\\udea7|\\ud83d\\udea8|\" +\n    \"\\ud83d\\udea9|\\ud83d\\udeaa|\\ud83d\\udeab|\\ud83d\\udeac|\\ud83d\\udead|\\ud83d\\udeae|\\ud83d\\udeaf|\\ud83d\\udeb0|\" +\n    \"\\ud83d\\udeb1|\\ud83d\\udeb2|\\ud83d\\udeb3|\\ud83d\\udeb4|\\ud83d\\udeb5|\\ud83d\\udeb6|\\ud83d\\udeb7|\\ud83d\\udeb8|\" +\n    \"\\ud83d\\udeb9|\\ud83d\\udeba|\\ud83d\\udebb|\\ud83d\\udebc|\\ud83d\\udebd|\\ud83d\\udebe|\\ud83d\\udebf|\\ud83d\\udec0|\" +\n    \"\\ud83d\\udec1|\\ud83d\\udec2|\\ud83d\\udec3|\\ud83d\\udec4|\\ud83d\\udec5|\\u0023\\u20e3|\\u0030\\u20e3|\\u0031\\u20e3|\" +\n    \"\\u0032\\u20e3|\\u0033\\u20e3|\\u0034\\u20e3|\\u0035\\u20e3|\\u0036\\u20e3|\\u0037\\u20e3|\\u0038\\u20e3|\\u0039\\u20e3|\" +\n    \"\\u3030|\\u2705|\\u2728|\\u2122|\\u23e9|\\u23ea|\\u23eb|\\u23ec|\\u23f0|\\u23f3|\\u26ce|\\u270a|\\u270b|\\u274c|\\u274e|\" +\n    \"\\u27b0|\\u27bf|\\u2753|\\u2754|\\u2755|\\u2795|\\u2796|\\u2797|\\u00a9|\\u00ae|\\ue50a|\" +\n    \"(\\ud83c\\udd7f|\\ud83c\\ude1a|\\ud83c\\ude2f|\\ud83c\\udc04|\\u2935|\\u3297|\\u3299|\\u2049|\\u2139|\\u2194|\\u2195|\" +\n    \"\\u2196|\\u2197|\\u2198|\\u2199|\\u2600|\\u2601|\\u2611|\\u2614|\\u2615|\\u2648|\\u2649|\\u2650|\\u2651|\\u2652|\\u2653|\" +\n    \"\\u2660|\\u2663|\\u2665|\\u2666|\\u2668|\\u2693|\\u2702|\\u2708|\\u2709|\\u2712|\\u2714|\\u2716|\\u2733|\\u2734|\\u203c|\" +\n    \"\\u21a9|\\u21aa|\\u2744|\\u231a|\\u231b|\\u24c2|\\u25aa|\\u25ab|\\u25b6|\\u25c0|\\u25fb|\\u25fc|\\u25fd|\\u25fe|\\u260e|\" +\n    \"\\u261d|\\u263a|\\u264a|\\u264b|\\u264c|\\u264d|\\u264e|\\u264f|\\u267b|\\u267f|\\u26a0|\\u26a1|\\u26aa|\\u26ab|\\u26bd|\" +\n    \"\\u26be|\\u26c4|\\u26c5|\\u26d4|\\u26ea|\\u26f2|\\u26f3|\\u26f5|\\u26fa|\\u26fd|\\u270c|\\u270f|\\u27a1|\\u2b05|\\u2b06|\" +\n    \"\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u2747|\\u303d|\\u2757|\\u2764|\\u2934)([\\ufe0e\\ufe0f]?)\", \"g\");\n\n// Example:\ndocument.body.innerHTML = renderEmoji(\"Hello \\ud83d\\ude1c!\");\n\n// For safety, Emoji should only be converted in the plain text spans of Tweets, not a fully linkified Tweet.\n\nfunction renderEmoji(text) {\n  return text.replace(EMOJI_REGEX, function(baseAndVariant, base, variant) {\n    if (variant == \"\\ufe0e\") {\n      // Do not emojify this variant.\n      return baseAndVariant;\n    }\n\n    // Convert UTF-16 into a sequence of hex codes\n    base = base || baseAndVariant;\n    var codes = [];\n    base.replace(/([\\ud800-\\udbff][\\udc00-\\udfff])|./g, function(any, nonBmp) {\n      var code = nonBmp ?\n          ((nonBmp.charCodeAt(0) &amp; 0x3ff) &lt;&lt; 10) + (nonBmp.charCodeAt(1) &amp; 0x3ff) + 0x10000 : \n          any.charCodeAt(0);\n      codes.push(code.toString(16));\n    });\n\n    var src = \"//abs.twimg.com/emoji/v1/72x72/\" + codes.join('-') + \".png\";\n\n    // The inline images depends on this css being in the head somehere:\n    // .twitter-emoji {\n    //   height: 1em;\n    //   width: 1em;\n    //   padding: 0 0.05em 0 0.1em;\n    //   vertical-align: -0.1em;\n    // }\n    // The alt attribute gets used when users copy and paste an img into a plain text editor.\n    return '&lt;img src=' + src + ' class=\"twitter-emoji\" alt=\"' + baseAndVariant + '\"&gt;';\n  });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Default settings for JSLint and other quality checkers don't accept several of the Twitter Flags and Sequences.</p>\n\n<p>For convenience, based on the answer above, I've commented out the offending escape sequences and used the actual characters in the Regex.</p>\n\n<pre><code>EMOJI_REGEX: new RegExp(\n    '\\ud83c\\uddec\\ud83c\\udde7|\\ud83c\\uddfa\\ud83c\\uddf8|\\ud83c\\udde9\\ud83c\\uddea|\\ud83c\\uddea\\ud83c\\uddf8|' +\n    '\\ud83c\\uddeb\\ud83c\\uddf7|\\ud83c\\udde8\\ud83c\\uddf3|\\ud83c\\uddee\\ud83c\\uddf9|\\ud83c\\uddef\\ud83c\\uddf5|' +\n    '\\ud83c\\uddf0\\ud83c\\uddf7|\\ud83c\\uddf7\\ud83c\\uddfa|\\ud83d\\udc7a|\\ud83c\\udd94|\\ud83c\\udd95|\\ud83c\\udd96|' +\n    '\\ud83c\\udd97|\\ud83c\\udd98|\\ud83c\\udd99|\\ud83c\\udd9a|\\ud83c\\udde6|\\ud83c\\udde7|\\ud83d\\udc83|\\ud83c\\udde8|' +\n    '\\ud83c\\udccf|\\ud83c\\udde9|\\ud83c\\udd70|\\ud83c\\uddea|\\ud83c\\udd71|\\ud83c\\uddeb|\\ud83c\\udd7e|\\ud83c\\uddec|' +\n    '\\ud83c\\udded|\\ud83c\\uddee|\\ud83c\\udd8e|\\ud83c\\uddef|\\ud83c\\udd91|\\ud83c\\uddf0|\\ud83c\\uddf1|\\ud83c\\uddf2|' +\n    '\\ud83c\\uddf3|\\ud83c\\uddf4|\\ud83c\\uddf5|\\ud83c\\uddf6|\\ud83c\\udd92|\\ud83c\\uddf7|\\ud83c\\uddf8|\\ud83c\\uddf9|' +\n    '\\ud83c\\udd93|\\ud83c\\uddfa|\\ud83c\\uddfb|\\ud83c\\uddfc|\\ud83c\\uddfd|\\ud83c\\uddfe|\\ud83c\\uddff|\\ud83c\\ude01|' +\n    '\\ud83c\\ude02|\\ud83c\\ude32|\\ud83c\\ude33|\\ud83c\\ude34|\\ud83c\\ude35|\\ud83c\\ude36|\\ud83c\\ude37|\\ud83c\\ude38|' +\n    '\\ud83c\\ude39|\\ud83c\\ude3a|\\ud83c\\ude50|\\ud83c\\ude51|\\ud83c\\udf00|\\ud83c\\udf01|\\ud83c\\udf02|\\ud83c\\udf03|' +\n    '\\ud83c\\udf04|\\ud83c\\udf05|\\ud83c\\udf06|\\ud83c\\udf07|\\ud83c\\udf08|\\ud83c\\udf09|\\ud83c\\udf0a|\\ud83c\\udf0b|' +\n    '\\ud83c\\udf0c|\\ud83c\\udf0d|\\ud83c\\udf0e|\\ud83c\\udf0f|\\ud83c\\udf10|\\ud83c\\udf11|\\ud83c\\udf12|\\ud83c\\udf13|' +\n    '\\ud83c\\udf14|\\ud83c\\udf15|\\ud83c\\udf16|\\ud83c\\udf17|\\ud83c\\udf18|\\ud83c\\udf19|\\ud83c\\udf1a|\\ud83c\\udf1b|' +\n    '\\ud83c\\udf1c|\\ud83c\\udf1d|\\ud83c\\udf1e|\\ud83c\\udf1f|\\ud83c\\udf20|\\ud83c\\udf30|\\ud83c\\udf31|\\ud83c\\udf32|' +\n    '\\ud83c\\udf33|\\ud83c\\udf34|\\ud83c\\udf35|\\ud83c\\udf37|\\ud83c\\udf38|\\ud83c\\udf39|\\ud83c\\udf3a|\\ud83c\\udf3b|' +\n    '\\ud83c\\udf3c|\\ud83c\\udf3d|\\ud83c\\udf3e|\\ud83c\\udf3f|\\ud83c\\udf40|\\ud83c\\udf41|\\ud83c\\udf42|\\ud83c\\udf43|' +\n    '\\ud83c\\udf44|\\ud83c\\udf45|\\ud83c\\udf46|\\ud83c\\udf47|\\ud83c\\udf48|\\ud83c\\udf49|\\ud83c\\udf4a|\\ud83c\\udf4b|' +\n    '\\ud83c\\udf4c|\\ud83c\\udf4d|\\ud83c\\udf4e|\\ud83c\\udf4f|\\ud83c\\udf50|\\ud83c\\udf51|\\ud83c\\udf52|\\ud83c\\udf53|' +\n    '\\ud83c\\udf54|\\ud83c\\udf55|\\ud83c\\udf56|\\ud83c\\udf57|\\ud83c\\udf58|\\ud83c\\udf59|\\ud83c\\udf5a|\\ud83c\\udf5b|' +\n    '\\ud83c\\udf5c|\\ud83c\\udf5d|\\ud83c\\udf5e|\\ud83c\\udf5f|\\ud83c\\udf60|\\ud83c\\udf61|\\ud83c\\udf62|\\ud83c\\udf63|' +\n    '\\ud83c\\udf64|\\ud83c\\udf65|\\ud83c\\udf66|\\ud83c\\udf67|\\ud83c\\udf68|\\ud83c\\udf69|\\ud83c\\udf6a|\\ud83c\\udf6b|' +\n    '\\ud83c\\udf6c|\\ud83c\\udf6d|\\ud83c\\udf6e|\\ud83c\\udf6f|\\ud83c\\udf70|\\ud83c\\udf71|\\ud83c\\udf72|\\ud83c\\udf73|' +\n    '\\ud83c\\udf74|\\ud83c\\udf75|\\ud83c\\udf76|\\ud83c\\udf77|\\ud83c\\udf78|\\ud83c\\udf79|\\ud83c\\udf7a|\\ud83c\\udf7b|' +\n    '\\ud83c\\udf7c|\\ud83c\\udf80|\\ud83c\\udf81|\\ud83c\\udf82|\\ud83c\\udf83|\\ud83c\\udf84|\\ud83c\\udf85|\\ud83c\\udf86|' +\n    '\\ud83c\\udf87|\\ud83c\\udf88|\\ud83c\\udf89|\\ud83c\\udf8a|\\ud83c\\udf8b|\\ud83c\\udf8c|\\ud83c\\udf8d|\\ud83c\\udf8e|' +\n    '\\ud83c\\udf8f|\\ud83c\\udf90|\\ud83c\\udf91|\\ud83c\\udf92|\\ud83c\\udf93|\\ud83c\\udfa0|\\ud83c\\udfa1|\\ud83c\\udfa2|' +\n    '\\ud83c\\udfa3|\\ud83c\\udfa4|\\ud83c\\udfa5|\\ud83c\\udfa6|\\ud83c\\udfa7|\\ud83c\\udfa8|\\ud83c\\udfa9|\\ud83c\\udfaa|' +\n    '\\ud83c\\udfab|\\ud83c\\udfac|\\ud83c\\udfad|\\ud83c\\udfae|\\ud83c\\udfaf|\\ud83c\\udfb0|\\ud83c\\udfb1|\\ud83c\\udfb2|' +\n    '\\ud83c\\udfb3|\\ud83c\\udfb4|\\ud83c\\udfb5|\\ud83c\\udfb6|\\ud83c\\udfb7|\\ud83c\\udfb8|\\ud83c\\udfb9|\\ud83c\\udfba|' +\n    '\\ud83c\\udfbb|\\ud83c\\udfbc|\\ud83c\\udfbd|\\ud83c\\udfbe|\\ud83c\\udfbf|\\ud83c\\udfc0|\\ud83c\\udfc1|\\ud83c\\udfc2|' +\n    '\\ud83c\\udfc3|\\ud83c\\udfc4|\\ud83c\\udfc6|\\ud83c\\udfc7|\\ud83c\\udfc8|\\ud83c\\udfc9|\\ud83c\\udfca|\\ud83c\\udfe0|' +\n    '\\ud83c\\udfe1|\\ud83c\\udfe2|\\ud83c\\udfe3|\\ud83c\\udfe4|\\ud83c\\udfe5|\\ud83c\\udfe6|\\ud83c\\udfe7|\\ud83c\\udfe8|' +\n    '\\ud83c\\udfe9|\\ud83c\\udfea|\\ud83c\\udfeb|\\ud83c\\udfec|\\ud83c\\udfed|\\ud83c\\udfee|\\ud83c\\udfef|\\ud83c\\udff0|' +\n    '\\ud83d\\udc00|\\ud83d\\udc01|\\ud83d\\udc02|\\ud83d\\udc03|\\ud83d\\udc04|\\ud83d\\udc05|\\ud83d\\udc06|\\ud83d\\udc07|' +\n    '\\ud83d\\udc08|\\ud83d\\udc09|\\ud83d\\udc0a|\\ud83d\\udc0b|\\ud83d\\udc0c|\\ud83d\\udc0d|\\ud83d\\udc0e|\\ud83d\\udc0f|' +\n    '\\ud83d\\udc10|\\ud83d\\udc11|\\ud83d\\udc12|\\ud83d\\udc13|\\ud83d\\udc14|\\ud83d\\udc15|\\ud83d\\udc16|\\ud83d\\udc17|' +\n    '\\ud83d\\udc18|\\ud83d\\udc19|\\ud83d\\udc1a|\\ud83d\\udc1b|\\ud83d\\udc1c|\\ud83d\\udc1d|\\ud83d\\udc1e|\\ud83d\\udc1f|' +\n    '\\ud83d\\udc20|\\ud83d\\udc21|\\ud83d\\udc22|\\ud83d\\udc23|\\ud83d\\udc24|\\ud83d\\udc25|\\ud83d\\udc26|\\ud83d\\udc27|' +\n    '\\ud83d\\udc28|\\ud83d\\udc29|\\ud83d\\udc2a|\\ud83d\\udc2b|\\ud83d\\udc2c|\\ud83d\\udc2d|\\ud83d\\udc2e|\\ud83d\\udc2f|' +\n    '\\ud83d\\udc30|\\ud83d\\udc31|\\ud83d\\udc32|\\ud83d\\udc33|\\ud83d\\udc34|\\ud83d\\udc35|\\ud83d\\udc36|\\ud83d\\udc37|' +\n    '\\ud83d\\udc38|\\ud83d\\udc39|\\ud83d\\udc3a|\\ud83d\\udc3b|\\ud83d\\udc3c|\\ud83d\\udc3d|\\ud83d\\udc3e|\\ud83d\\udc40|' +\n    '\\ud83d\\udc42|\\ud83d\\udc43|\\ud83d\\udc44|\\ud83d\\udc45|\\ud83d\\udc46|\\ud83d\\udc47|\\ud83d\\udc48|\\ud83d\\udc49|' +\n    '\\ud83d\\udc4a|\\ud83d\\udc4b|\\ud83d\\udc4c|\\ud83d\\udc4d|\\ud83d\\udc4e|\\ud83d\\udc4f|\\ud83d\\udc50|\\ud83d\\udc51|' +\n    '\\ud83d\\udc52|\\ud83d\\udc53|\\ud83d\\udc54|\\ud83d\\udc55|\\ud83d\\udc56|\\ud83d\\udc57|\\ud83d\\udc58|\\ud83d\\udc59|' +\n    '\\ud83d\\udc5a|\\ud83d\\udc5b|\\ud83d\\udc5c|\\ud83d\\udc5d|\\ud83d\\udc5e|\\ud83d\\udc5f|\\ud83d\\udc60|\\ud83d\\udc61|' +\n    '\\ud83d\\udc62|\\ud83d\\udc63|\\ud83d\\udc64|\\ud83d\\udc65|\\ud83d\\udc66|\\ud83d\\udc67|\\ud83d\\udc68|\\ud83d\\udc69|' +\n    '\\ud83d\\udc6a|\\ud83d\\udc6b|\\ud83d\\udc6c|\\ud83d\\udc6d|\\ud83d\\udc6e|\\ud83d\\udc6f|\\ud83d\\udc70|\\ud83d\\udc71|' +\n    '\\ud83d\\udc72|\\ud83d\\udc73|\\ud83d\\udc74|\\ud83d\\udc75|\\ud83d\\udc76|\\ud83d\\udc77|\\ud83d\\udc78|\\ud83d\\udc79|' +\n    '\\ud83d\\udc7b|\\ud83d\\udc7c|\\ud83d\\udc7d|\\ud83d\\udc7e|\\ud83d\\udc7f|\\ud83d\\udc80|\\ud83d\\udc81|\\ud83d\\udc82|' +\n    '\\ud83d\\udc84|\\ud83d\\udc85|\\ud83d\\udc86|\\ud83d\\udc87|\\ud83d\\udc88|\\ud83d\\udc89|\\ud83d\\udc8a|\\ud83d\\udc8b|' +\n    '\\ud83d\\udc8c|\\ud83d\\udc8d|\\ud83d\\udc8e|\\ud83d\\udc8f|\\ud83d\\udc90|\\ud83d\\udc91|\\ud83d\\udc92|\\ud83d\\udc93|' +\n    '\\ud83d\\udc94|\\ud83d\\udc95|\\ud83d\\udc96|\\ud83d\\udc97|\\ud83d\\udc98|\\ud83d\\udc99|\\ud83d\\udc9a|\\ud83d\\udc9b|' +\n    '\\ud83d\\udc9c|\\ud83d\\udc9d|\\ud83d\\udc9e|\\ud83d\\udc9f|\\ud83d\\udca0|\\ud83d\\udca1|\\ud83d\\udca2|\\ud83d\\udca3|' +\n    '\\ud83d\\udca4|\\ud83d\\udca5|\\ud83d\\udca6|\\ud83d\\udca7|\\ud83d\\udca8|\\ud83d\\udca9|\\ud83d\\udcaa|\\ud83d\\udcab|' +\n    '\\ud83d\\udcac|\\ud83d\\udcad|\\ud83d\\udcae|\\ud83d\\udcaf|\\ud83d\\udcb0|\\ud83d\\udcb1|\\ud83d\\udcb2|\\ud83d\\udcb3|' +\n    '\\ud83d\\udcb4|\\ud83d\\udcb5|\\ud83d\\udcb6|\\ud83d\\udcb7|\\ud83d\\udcb8|\\ud83d\\udcb9|\\ud83d\\udcba|\\ud83d\\udcbb|' +\n    '\\ud83d\\udcbc|\\ud83d\\udcbd|\\ud83d\\udcbe|\\ud83d\\udcbf|\\ud83d\\udcc0|\\ud83d\\udcc1|\\ud83d\\udcc2|\\ud83d\\udcc3|' +\n    '\\ud83d\\udcc4|\\ud83d\\udcc5|\\ud83d\\udcc6|\\ud83d\\udcc7|\\ud83d\\udcc8|\\ud83d\\udcc9|\\ud83d\\udcca|\\ud83d\\udccb|' +\n    '\\ud83d\\udccc|\\ud83d\\udccd|\\ud83d\\udcce|\\ud83d\\udccf|\\ud83d\\udcd0|\\ud83d\\udcd1|\\ud83d\\udcd2|\\ud83d\\udcd3|' +\n    '\\ud83d\\udcd4|\\ud83d\\udcd5|\\ud83d\\udcd6|\\ud83d\\udcd7|\\ud83d\\udcd8|\\ud83d\\udcd9|\\ud83d\\udcda|\\ud83d\\udcdb|' +\n    '\\ud83d\\udcdc|\\ud83d\\udcdd|\\ud83d\\udcde|\\ud83d\\udcdf|\\ud83d\\udce0|\\ud83d\\udce1|\\ud83d\\udce2|\\ud83d\\udce3|' +\n    '\\ud83d\\udce4|\\ud83d\\udce5|\\ud83d\\udce6|\\ud83d\\udce7|\\ud83d\\udce8|\\ud83d\\udce9|\\ud83d\\udcea|\\ud83d\\udceb|' +\n    '\\ud83d\\udcec|\\ud83d\\udced|\\ud83d\\udcee|\\ud83d\\udcef|\\ud83d\\udcf0|\\ud83d\\udcf1|\\ud83d\\udcf2|\\ud83d\\udcf3|' +\n    '\\ud83d\\udcf4|\\ud83d\\udcf5|\\ud83d\\udcf6|\\ud83d\\udcf7|\\ud83d\\udcf9|\\ud83d\\udcfa|\\ud83d\\udcfb|\\ud83d\\udcfc|' +\n    '\\ud83d\\udd00|\\ud83d\\udd01|\\ud83d\\udd02|\\ud83d\\udd03|\\ud83d\\udd04|\\ud83d\\udd05|\\ud83d\\udd06|\\ud83d\\udd07|' +\n    '\\ud83d\\udd08|\\ud83d\\udd09|\\ud83d\\udd0a|\\ud83d\\udd0b|\\ud83d\\udd0c|\\ud83d\\udd0d|\\ud83d\\udd0e|\\ud83d\\udd0f|' +\n    '\\ud83d\\udd10|\\ud83d\\udd11|\\ud83d\\udd12|\\ud83d\\udd13|\\ud83d\\udd14|\\ud83d\\udd15|\\ud83d\\udd16|\\ud83d\\udd17|' +\n    '\\ud83d\\udd18|\\ud83d\\udd19|\\ud83d\\udd1a|\\ud83d\\udd1b|\\ud83d\\udd1c|\\ud83d\\udd1d|\\ud83d\\udd1e|\\ud83d\\udd1f|' +\n    '\\ud83d\\udd20|\\ud83d\\udd21|\\ud83d\\udd22|\\ud83d\\udd23|\\ud83d\\udd24|\\ud83d\\udd25|\\ud83d\\udd26|\\ud83d\\udd27|' +\n    '\\ud83d\\udd28|\\ud83d\\udd29|\\ud83d\\udd2a|\\ud83d\\udd2b|\\ud83d\\udd2c|\\ud83d\\udd2d|\\ud83d\\udd2e|\\ud83d\\udd2f|' +\n    '\\ud83d\\udd30|\\ud83d\\udd31|\\ud83d\\udd32|\\ud83d\\udd33|\\ud83d\\udd34|\\ud83d\\udd35|\\ud83d\\udd36|\\ud83d\\udd37|' +\n    '\\ud83d\\udd38|\\ud83d\\udd39|\\ud83d\\udd3a|\\ud83d\\udd3b|\\ud83d\\udd3c|\\ud83d\\udd3d|\\ud83d\\udd50|\\ud83d\\udd51|' +\n    '\\ud83d\\udd52|\\ud83d\\udd53|\\ud83d\\udd54|\\ud83d\\udd55|\\ud83d\\udd56|\\ud83d\\udd57|\\ud83d\\udd58|\\ud83d\\udd59|' +\n    '\\ud83d\\udd5a|\\ud83d\\udd5b|\\ud83d\\udd5c|\\ud83d\\udd5d|\\ud83d\\udd5e|\\ud83d\\udd5f|\\ud83d\\udd60|\\ud83d\\udd61|' +\n    '\\ud83d\\udd62|\\ud83d\\udd63|\\ud83d\\udd64|\\ud83d\\udd65|\\ud83d\\udd66|\\ud83d\\udd67|\\ud83d\\uddfb|\\ud83d\\uddfc|' +\n    '\\ud83d\\uddfd|\\ud83d\\uddfe|\\ud83d\\uddff|\\ud83d\\ude00|\\ud83d\\ude01|\\ud83d\\ude02|\\ud83d\\ude03|\\ud83d\\ude04|' +\n    '\\ud83d\\ude05|\\ud83d\\ude06|\\ud83d\\ude07|\\ud83d\\ude08|\\ud83d\\ude09|\\ud83d\\ude0a|\\ud83d\\ude0b|\\ud83d\\ude0c|' +\n    '\\ud83d\\ude0d|\\ud83d\\ude0e|\\ud83d\\ude0f|\\ud83d\\ude10|\\ud83d\\ude11|\\ud83d\\ude12|\\ud83d\\ude13|\\ud83d\\ude14|' +\n    '\\ud83d\\ude15|\\ud83d\\ude16|\\ud83d\\ude17|\\ud83d\\ude18|\\ud83d\\ude19|\\ud83d\\ude1a|\\ud83d\\ude1b|\\ud83d\\ude1c|' +\n    '\\ud83d\\ude1d|\\ud83d\\ude1e|\\ud83d\\ude1f|\\ud83d\\ude20|\\ud83d\\ude21|\\ud83d\\ude22|\\ud83d\\ude23|\\ud83d\\ude24|' +\n    '\\ud83d\\ude25|\\ud83d\\ude26|\\ud83d\\ude27|\\ud83d\\ude28|\\ud83d\\ude29|\\ud83d\\ude2a|\\ud83d\\ude2b|\\ud83d\\ude2c|' +\n    '\\ud83d\\ude2d|\\ud83d\\ude2e|\\ud83d\\ude2f|\\ud83d\\ude30|\\ud83d\\ude31|\\ud83d\\ude32|\\ud83d\\ude33|\\ud83d\\ude34|' +\n    '\\ud83d\\ude35|\\ud83d\\ude36|\\ud83d\\ude37|\\ud83d\\ude38|\\ud83d\\ude39|\\ud83d\\ude3a|\\ud83d\\ude3b|\\ud83d\\ude3c|' +\n    '\\ud83d\\ude3d|\\ud83d\\ude3e|\\ud83d\\ude3f|\\ud83d\\ude40|\\ud83d\\ude45|\\ud83d\\ude46|\\ud83d\\ude47|\\ud83d\\ude48|' +\n    '\\ud83d\\ude49|\\ud83d\\ude4a|\\ud83d\\ude4b|\\ud83d\\ude4c|\\ud83d\\ude4d|\\ud83d\\ude4e|\\ud83d\\ude4f|\\ud83d\\ude80|' +\n    '\\ud83d\\ude81|\\ud83d\\ude82|\\ud83d\\ude83|\\ud83d\\ude84|\\ud83d\\ude85|\\ud83d\\ude86|\\ud83d\\ude87|\\ud83d\\ude88|' +\n    '\\ud83d\\ude89|\\ud83d\\ude8a|\\ud83d\\ude8b|\\ud83d\\ude8c|\\ud83d\\ude8d|\\ud83d\\ude8e|\\ud83d\\ude8f|\\ud83d\\ude90|' +\n    '\\ud83d\\ude91|\\ud83d\\ude92|\\ud83d\\ude93|\\ud83d\\ude94|\\ud83d\\ude95|\\ud83d\\ude96|\\ud83d\\ude97|\\ud83d\\ude98|' +\n    '\\ud83d\\ude99|\\ud83d\\ude9a|\\ud83d\\ude9b|\\ud83d\\ude9c|\\ud83d\\ude9d|\\ud83d\\ude9e|\\ud83d\\ude9f|\\ud83d\\udea0|' +\n    '\\ud83d\\udea1|\\ud83d\\udea2|\\ud83d\\udea3|\\ud83d\\udea4|\\ud83d\\udea5|\\ud83d\\udea6|\\ud83d\\udea7|\\ud83d\\udea8|' +\n    '\\ud83d\\udea9|\\ud83d\\udeaa|\\ud83d\\udeab|\\ud83d\\udeac|\\ud83d\\udead|\\ud83d\\udeae|\\ud83d\\udeaf|\\ud83d\\udeb0|' +\n    '\\ud83d\\udeb1|\\ud83d\\udeb2|\\ud83d\\udeb3|\\ud83d\\udeb4|\\ud83d\\udeb5|\\ud83d\\udeb6|\\ud83d\\udeb7|\\ud83d\\udeb8|' +\n    '\\ud83d\\udeb9|\\ud83d\\udeba|\\ud83d\\udebb|\\ud83d\\udebc|\\ud83d\\udebd|\\ud83d\\udebe|\\ud83d\\udebf|\\ud83d\\udec0|' +\n    '\\ud83d\\udec1|\\ud83d\\udec2|\\ud83d\\udec3|\\ud83d\\udec4|\\ud83d\\udec5|' +\n\n    // JSLint did not accept these as legitimate escape sequences\n    // '\\u0023\\u20e3|\\u0030\\u20e3|\\u0031\\u20e3|' +\n    // '\\u0032\\u20e3|\\u0033\\u20e3|\\u0034\\u20e3|\\u0035\\u20e3|\\u0036\\u20e3|\\u0037\\u20e3|\\u0038\\u20e3|\\u0039\\u20e3|' +\n    // '\\u3030|\\u2705|\\u2728|\\u2122|\\u23e9|\\u23ea|\\u23eb|\\u23ec|\\u23f0|\\u23f3|\\u26ce|\\u270a|\\u270b|\\u274c|\\u274e|' +\n    // '\\u27b0|\\u27bf|\\u2753|\\u2754|\\u2755|\\u2795|\\u2796|\\u2797|\\u00a9|\\u00ae|\\ue50a|' +\n    // '(\\ud83c\\udd7f|\\ud83c\\ude1a|\\ud83c\\ude2f|\\ud83c\\udc04|\\u2935|\\u3297|\\u3299|\\u2049|\\u2139|\\u2194|\\u2195|' +\n    // '\\u2196|\\u2197|\\u2198|\\u2199|\\u2600|\\u2601|\\u2611|\\u2614|\\u2615|\\u2648|\\u2649|\\u2650|\\u2651|\\u2652|\\u2653|' +\n    // '\\u2660|\\u2663|\\u2665|\\u2666|\\u2668|\\u2693|\\u2702|\\u2708|\\u2709|\\u2712|\\u2714|\\u2716|\\u2733|\\u2734|\\u203c|' +\n    // '\\u21a9|\\u21aa|\\u2744|\\u231a|\\u231b|\\u24c2|\\u25aa|\\u25ab|\\u25b6|\\u25c0|\\u25fb|\\u25fc|\\u25fd|\\u25fe|\\u260e|' +\n    // '\\u261d|\\u263a|\\u264a|\\u264b|\\u264c|\\u264d|\\u264e|\\u264f|\\u267b|\\u267f|\\u26a0|\\u26a1|\\u26aa|\\u26ab|\\u26bd|' +\n    // '\\u26be|\\u26c4|\\u26c5|\\u26d4|\\u26ea|\\u26f2|\\u26f3|\\u26f5|\\u26fa|\\u26fd|\\u270c|\\u270f|\\u27a1|\\u2b05|\\u2b06|' +\n    // '\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u2747|\\u303d|\\u2757|\\u2764|\\u2934)([\\ufe0e\\ufe0f]?)', 'g'),\n\n    '#\u20e3|0\u20e3|1\u20e3|' +\n    '2\u20e3|3\u20e3|4\u20e3|5\u20e3|6\u20e3|7\u20e3|8\u20e3|9\u20e3|' +\n    '\u3030|\u2705|\u2728|\u2122|\u23e9|\u23ea|\u23eb|\u23ec|\u23f0|\u23f3|\u26ce|\u270a|\u270b|\u274c|\u274e|' +\n    '\u27b0|\u27bf|\u2753|\u2754|\u2755|\u2795|\u2796|\u2797|\u00a9|\u00ae|\ue50a|' +\n    '(\ud83c\udd7f|\ud83c\ude1a|\ud83c\ude2f|\ud83c\udc04|\u2935|\u3297|\u3299|\u2049|\u2139|\u2194|\u2195|' +\n    '\u2196|\u2197|\u2198|\u2199|\u2600|\u2601|\u2611|\u2614|\u2615|\u2648|\u2649|\u2650|\u2651|\u2652|\u2653|' +\n    '\u2660|\u2663|\u2665|\u2666|\u2668|\u2693|\u2702|\u2708|\u2709|\u2712|\u2714|\u2716|\u2733|\u2734|\u203c|' +\n    '\u21a9|\u21aa|\u2744|\u231a|\u231b|\u24c2|\u25aa|\u25ab|\u25b6|\u25c0|\u25fb|\u25fc|\u25fd|\u25fe|\u260e|' +\n    '\u26be|\u26c4|\u26c5|\u26d4|\u26ea|\u26f2|\u26f3|\u26f5|\u26fa|\u26fd|\u270c|\u270f|\u27a1|\u2b05|\u2b06|' +\n    '\u2b07|\u2b1b|\u2b1c|\u2b50|\u2b55|\u2747|\u303d|\u2757|\u2764|\u2934)([\ufe0e\ufe0f]?)', 'g');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>twitter finally released it ;)\nHope it helps\n<a href=\"https://github.com/twitter/twemoji\" rel=\"nofollow\">https://github.com/twitter/twemoji</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm pulling tweets from Twitter and want to show them on a web page, but instead of emoji I only see boxes for characters like \ud83d\udc9c and \ud83d\ude18.  How can I show these as images like Twitter, or if that's not possible, strip them all out?</p>\n\n<p>I tried: </p>\n\n<pre><code>item[\"text\"] = item[\"text\"].replace('\ud83d\ude18', \"\"); \n</code></pre>\n\n<p>but it is throwing js error.</p>\n",
            "last_activity_date": 1418744057,
            "question_id": 24070515,
            "score": 4,
            "tags": [
                "javascript",
                "twitter",
                "unicode",
                "emoji"
            ],
            "title": "Rendering or deleting emoji"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Sure, there are a couple:<br /></p>\n\n<ul>\n<li><a href=\"http://louisremi.github.com/jquery.transition.js/test/index.html\">http://louisremi.github.com/jquery.transition.js/test/index.html</a></li>\n<li><a href=\"http://playground.benbarnett.net/jquery-animate-enhanced/\">http://playground.benbarnett.net/jquery-animate-enhanced/</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>Are there any \"cheat\" mechanisms similar to <a href=\"http://code.google.com/p/ie7-js/\" rel=\"nofollow\">IE7.js</a> available for browsers that do not support CSS3 transitions so that if you insert CSS3 transition elements into pages it will translate them to javascript methods?</p>\n",
            "last_activity_date": 1358431097,
            "question_id": 7933062,
            "score": 4,
            "tags": [
                "javascript",
                "css",
                "internet-explorer",
                "css3"
            ],
            "title": "IE &lt; 9 CSS3 Transition Effect Cheats?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>First ping on Google for \"Javascript Trim\": <a href=\"http://www.somacon.com/p355.php\" rel=\"nofollow\">http://www.somacon.com/p355.php</a>. You seem to have implemented this using commas, and I don't see why it would be a problem (though you escaped in the second one and not in the first).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You need this:</p>\n\n<pre><code>s = s.replace(/[,\\s]{2,}/,\"\"); //Removes double or more commas / spaces\ns = s.replace(/^,*/,\"\"); //Removes all commas from the beginning\ns = s.replace(/,*$/,\"\"); //Removes all commas from the end\n</code></pre>\n\n<p>EDIT: Made all the changes - should work now.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>What you need to do is replace all groups of \"space and comma\" with a single comma and then remove commas from the start and end:</p>\n\n<pre><code>trimCommas = function(s) {\n    s = s.replace(/[,\\s]*,[,\\s]*/g, \",\");\n    s = s.replace(/^,/, \"\");\n    s = s.replace(/,$/, \"\");\n    return s;\n}\n</code></pre>\n\n<p>The first one replaces every sequence of whitespace and commas with a single comma, provided there's at least one comma in there. This handles the edge case left in the comments for \"Internet Explorer\".</p>\n\n<p>The second and third get rid of the comma at the start and end of string where necessary.</p>\n\n<p>You can also add (to the end):</p>\n\n<pre><code>s = s.replace(/[\\s]+/, \" \");\n</code></pre>\n\n<p>to collapse multi-spaces down to one space and</p>\n\n<pre><code>s = s.replace(/,/g, \", \");\n</code></pre>\n\n<p>if you want them to be formatted nicely (space after each comma).</p>\n\n<p>A more generalized solution would be to pass parameters to indicate behavior:</p>\n\n<ul>\n<li>Passing <code>true</code> for <code>collapse</code> will collapse the spaces within a section (a section being defined as the characters between commas).</li>\n<li>Passing <code>true</code> for <code>addSpace</code> will use <code>\", \"</code> to separate sections rather than just <code>\",\"</code> on its own.</li>\n</ul>\n\n<p>That code follows. It may not be necessary for your particular case but it might be better for others in terms of code re-use.</p>\n\n<pre><code>trimCommas = function(str,collapse,addspace) {\n    s = s.replace(/[,\\s]*,[,\\s]*/g, \",\").replace(/^,/, \"\").replace(/,$/, \"\");\n    if (collapse) {\n        s = s.replace(/[\\s]+/, \" \");\n    }\n    if (addspace) {\n        s = s.replace(/,/g, \", \");\n    }\n    return s;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In your example you also want to trim the commas if there's spaces between them at the start or at the end, use something like this:</p>\n\n<pre><code>str.replace(/^[,\\s]+|[,\\s]+$/g, '').replace(/,[,\\s]*,/g, ',');\n</code></pre>\n\n<p>Note the use of the 'g' modifier for global replace.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>My take:</p>\n\n<pre><code>var cleanStr = str.replace(/^[\\s,]+/,\"\")\n                  .replace(/[\\s,]+$/,\"\")\n                  .replace(/\\s*,+\\s*(,+\\s*)*/g,\",\")\n</code></pre>\n\n<p>This one will work with <code>opera, internet explorer, whatever</code></p>\n\n<p>Actually tested this last one, and it works!</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>match() is much better tool for this than replace()</p>\n\n<pre><code> str  = \"    aa,   bb,,   cc  , dd,,,\";\n newStr = str.match(/[^\\s,]+/g).join(\",\")\n alert(\"[\" + newStr + \"]\")\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>When you want to replace <code>\",,\" \",,,\", \",,,,\"</code> and <code>\",,,,,\"</code> below code will be removed by <code>\",\"</code>.</p>\n\n<pre><code>var abc = new String(\"46590,26.91667,75.81667,,,45346,27.18333,78.01667,,,45630,12.97194,77.59369,,,47413,19.07283,72.88261,,,45981,13.08784,80.27847,,\");\nvar pqr= abc.replace(/,,/g,',').replace(/,,/g, ',');\n\nalert(pqr);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to remove all unnecessary commas from the start/end of the string.</p>\n\n<p>eg; <code>google, yahoo,, ,</code> should become <code>google, yahoo</code>.</p>\n\n<p>If possible <code>,google,, , yahoo,, ,</code> should become <code>google,yahoo</code>.</p>\n\n<p>I've tried the below code as a starting point, but it seems to be not working as desired.</p>\n\n<pre><code>trimCommas = function(s) {\n s = s.replace(/,*$/, \"\");\n s = s.replace(/^\\,*/, \"\");\n return s;\n}\n</code></pre>\n",
            "last_activity_date": 1405605393,
            "question_id": 1665829,
            "score": 3,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "remove unwanted commas in JavaScript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You should probably use HTTP authentication for the user auth, and so not need to do any sort of session management.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You don't need PHP to store an API-KEY if you make your client classes in javascript smart enough to append the API-KEY (loaded when logging in) into the headers of each XmlHttpRequest your class will spawn.</p>\n\n<p>Also it might be good to note that API-KEY does not necessary mean authentication key.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To your first question: XmlHttpRequest requests to a service will still pass along cookies, which can be used to propagate a session ID. You can even (assuming the enduser's browser supports it) mark cookies as 'HttpOnly' to reduce your XSS footprint. See <a href=\"http://www.codinghorror.com/blog/archives/001167.html\" rel=\"nofollow\">Jeff Atwood's article</a> for some detail on that.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>A RESTful interface does not store any information about a particular user's session.  It is the client's job to maintain the information about what it is doing.</p>\n\n<p>Authenticate the user on every request by providing information in the Authorization HTTP header. <strong>IF</strong> this becomes a performance problem, then look at alternative solutions to optimize perf.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I'm facing the same problem. I used restserver in php.\nOfcourse the traffic goes over SSL connection.</p>\n\n<p>When I would like to get information about certain user I must authenticate first to the rest server before I can get his info. I would like to know any better approaches?</p>\n\n<p>Similar post: <a href=\"http://stackoverflow.com/questions/319530/restful-authentication\">RESTful Authentication</a>\nGood resource is also <a href=\"http://tools.ietf.org/pdf/draft-ietf-oauth-v2-12.pdf\" rel=\"nofollow\">OAuth2</a>.\nAlso Google uses oauth: </p>\n\n<blockquote>\n  <p>OAuth 2.0 is a new, simplified authorization protocol for all Google APIs. OAuth 2.0 relies on SSL for security instead of requiring your application to do cryptographic signing directly. This protocol allows your application to request access to data associated with a user's Google Account.</p>\n</blockquote>\n\n<p>When application uses this: <a href=\"http://restserver/user/login\" rel=\"nofollow\">http://restserver/user/login</a> and let's say that the authentication went ok, the application itself creates session like this:</p>\n\n<p><strong>Rest client/Application</strong></p>\n\n<pre><code>    public function login() {\n\n    .... form_validation\n\n    // get restserver salt so we can send hashed password\n    $message = $this-&gt;rest-&gt;get('https://restserver/user/salt');\n\n    if($message['status_code'] !== '0') \n      exit;       \n\n    $data = array(\n      'username'  =&gt; $this-&gt;input-&gt;post('username'),\n      'password'   =&gt; prepare_password_salt($this-&gt;input-&gt;post('password'), $message['salt'])\n    );      \n\n    // authenticate with restserver, check if the user and password exist\n    $msg = $this-&gt;rest-&gt;post('https://restserver/user/login', $data);\n\n    if($msg['status_code'] === '0')\n    {\n      // make session\n      $session_data = array(\n        'logged_in'     =&gt; true,\n        'username'    =&gt;  $data['username']\n      );\n\n      $this-&gt;session-&gt;set_userdata($session_data);\n      redirect(base_url() . 'some_page');\n</code></pre>\n\n<p><strong>Rest Server</strong></p>\n\n<pre><code>/**\n * http://restserver/user POST \n * - insert new user\n *\n * http://restserver/user/id PUT\n * - update existing user\n * \n * http://restserver/user/login POST\n * - check if username exists and the password match\n * \n * - return true on success login\n * - return false on failure\n *\n * http://restserver/user/id/hashed_pass GET\n * again client gets salt and then send hashed_pass\n * - return array(\n *   'username' ..\n *   'email' .... \n *   .. other information\n * );\n * or we could use some access token but that means that the restserver\n * must save token for each user for some time and then delete\n *\n * HTTP server Allowed methods: GET, POST, PUT\n * HTTP server disallowed methods: DELETE\n**/\n\nclass User extends Rest_Controller\n{\n  public function __construct()\n  {\n    parent::__construct();\n    $this-&gt;load-&gt;library('form_validation');\n  }\n\n  /**\n   * Check username and password with database.\n   * \n   * @link /\n   * @param $_POST['username'] (string)\n   * @param $_POST['password'] (string - sha1(password . salt)) \n   * @return array which contains\n   *                array['status_code']\n   *                array['status']               \n   *                status_code 0 means that login was successful\n   *                status_code 1 means that username or password is incorrect\n   */\n   public function login_post()\n   {\n     $this-&gt;load-&gt;model('User_Model', 'user_model');\n\n     $this-&gt;form_validation-&gt;set_rules('username', 'Username', 'trim|required|min_length[3]|max_length[64]');\n     $this-&gt;form_validation-&gt;set_rules('password', 'Password', 'trim|required|exact_length[40]');\n\n     if($this-&gt;form_validation-&gt;run() === true)\n     {\n       // check with the database\n       if($this-&gt;user_model-&gt;authenticate($this-&gt;input-&gt;post('username'), $this-&gt;input-&gt;post('password')))\n       {\n         // update user last_login field\n         $this-&gt;user_model-&gt;updateLogin($this-&gt;input-&gt;post('username'));\n\n         $message = array(\n           'status_code'    =&gt; '0',\n           'status'     =&gt; 'Login ok.'\n         );     \n       }\n       else\n       {\n         $message = array(\n           'status_code'    =&gt; '1',\n           'status'     =&gt; 'Username or password is incorrect.'\n         );\n       }\n     }\n     $this-&gt;response($message, 200);\n   }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>OK... the basic idea is to have SERVER and CLIENT physically separated (two systems).</p>\n\n<p>My idea is to build a stand-alone web service (REST, XML, API-KEY) that will provide</p>\n\n<ol>\n<li>Authentication: User login, logout</li>\n<li>Data: Get list of products</li>\n</ol>\n\n<p>Then I will create clients in different languages (Flash, PHP, JavaScript). Data will be served only to authenticated users.</p>\n\n<p>Tipical communication for user to get list of products will be:</p>\n\n<ol>\n<li>(1 request) Login / start session</li>\n<li>(1 request) Get list of products</li>\n<li>(1 request) Get list of products</li>\n<li>...</li>\n</ol>\n\n<p>OK... Now the problem I have is the user session. Say we want to build Javascript client, we actually have to create PHP client that will communicate with REST (PHP knows about REST API-KEY) and will forward info to Javascript (CLIENT) right? User will login through PHP to REST server right and then request data through PHP to REST server? </p>\n\n<p>Questions:</p>\n\n<ul>\n<li>Now how does PHP store info about opened user session on REST server? </li>\n<li>If my idea is bad, what is the right way of implementation?</li>\n<li>Alternatives?</li>\n</ul>\n",
            "last_activity_date": 1378603721,
            "question_id": 1453551,
            "score": 3,
            "tags": [
                "php",
                "javascript",
                "authentication",
                "rest"
            ],
            "title": "REST user authentication"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>As far as you hasn't overwritten the <a href=\"https://github.com/documentcloud/underscore/blob/master/underscore.js#L938-942\" rel=\"nofollow\">Underscore.templateSettings.evaluate</a> setting you should still can use: <code>&lt;% ... %&gt;</code> for evaluate code.</p>\n\n<p>I have seen attempts to also define the <code>Underscore.templateSettings.evaluate</code> setting to match with Mustache syntax but Mustache fights very strong against <em>template evaluations</em> so is gonna be difficult.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Your problem is that you're defining a Mustache-style replacement for <code>&lt;%= ... %&gt;</code> but trying to use it where you'd normally use <code>&lt;% ... %&gt;</code>. From the <a href=\"http://underscorejs.org/#template\">fine manual</a>:</p>\n\n<blockquote>\n  <p>Define an <strong>interpolate</strong> regex to match expressions that should be interpolated verbatim, an <strong>escape</strong> regex to match expressions that should be inserted after being HTML escaped, and an <strong>evaluate</strong> regex to match expressions that should be evaluated without insertion into the resulting string.</p>\n</blockquote>\n\n<p>So there are three regexes in play:</p>\n\n<ol>\n<li><strong>interpolate</strong> is for <code>&lt;%= ... %&gt;</code>.</li>\n<li><strong>escape</strong> is for <code>&lt;%- ... %&gt;</code>.</li>\n<li><strong>evaluate</strong> is for <code>&lt;% ... %&gt;</code>.</li>\n</ol>\n\n<p>You're telling Underscore to use <code>{{ ... }}</code> in place of <code>&lt;%= ... %&gt;</code> and then you're getting an error because <code>if(loggedIn)</code> can't be interpolated. You just need to fix your <code>_.templateSettings</code> to reflect what you're trying to do:</p>\n\n<pre><code>_.templateSettings = {\n    evaluate:    /\\{\\{(.+?)\\}\\}/g,\n    interpolate: /\\{\\{=(.+?)\\}\\}/g\n};\n</code></pre>\n\n<p>and then your template would look like this:</p>\n\n<pre><code>{{ if(loggedIn) { }}Welcome {{= name }} {{ } }}\n</code></pre>\n\n<p>Demo: <a href=\"http://jsfiddle.net/ambiguous/RwgVg/8/\">http://jsfiddle.net/ambiguous/RwgVg/8/</a></p>\n\n<p>You'll need to include the <code>{</code> and <code>}</code> in the template because <code>_.template</code> adds semicolons when compiling the template, that results in things like:</p>\n\n<pre><code>if(loggedIn) {; ...\n</code></pre>\n\n<p>(Thanks to <a href=\"http://stackoverflow.com/users/577926/jaredmcateer\">JaredMcAteer</a> for pointing this out).</p>\n\n<p>You might want to add an <strong>escape</strong> regex as well, that would probably be <code>/\\{\\{-(.+?)\\}\\}/g</code>.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>I believe this works for the transition to the mustache style syntax:</p>\n\n<pre><code>/**\n     * @configuration transform Underscore.js template syntax\n     * @description change the Ruby on Rails style syntax to the Mustache syntax\n     * @default &lt;%= var %&gt;\n     * @modified \n     *  evaluate        {{ JavaScript code}}    execute arbitrary js code, such as loops\n     *  interpolate     {{= variable }}         prints value of variables\n     *  escape          {{- variable }}         this syntax will html escape variables\n     */ \n    _.templateSettings = {\n        evaluate:    /\\{\\{(.+?)\\}\\}/g,          \n        interpolate: /\\{\\{=(.+?)\\}\\}/g,\n        escape: /\\{\\{-(.+?)\\}\\}/g\n    };\n</code></pre>\n\n<p>This would be mustache style syntax, but keeps the original options of using the \"=\" and the \"-\".  Not using either evaluates JS, such as for loops.  One could swap them around so that the {{var}} was the interpolate and the evaluate could be something else, to keep your templates cleaner if you prefer, since interpolate is most frequently used.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I had to replace the default underscore teplating delimiters/Interpolate regex for compatibility with asp.net webforms.From the website i opted for mustache like syntax</p>\n\n<pre><code>_.templateSettings = {\n  interpolate : /\\{\\{(.+?)\\}\\}/g\n};\n</code></pre>\n\n<p>tried this</p>\n\n<p><code>_.template(\"{{if(loggedIn)Welcome {{name}}}}\",{name:\"James\",completed:true});</code></p>\n\n<p>but seems this is not the way( since a error occurred) to check boolean expression using a templating system. But from the docs seems it is possible </p>\n\n<blockquote>\n  <p>as well as execute arbitrary JavaScript code, with &lt;% \u2026 %></p>\n</blockquote>\n\n<ul>\n<li>So how do i execute arbitrary js code with the above mentioned interpolation</li>\n</ul>\n",
            "last_activity_date": 1418061786,
            "question_id": 10597480,
            "score": 2,
            "tags": [
                "javascript",
                "templates",
                "underscore.js",
                "boolean-logic",
                "underscore.js-templating"
            ],
            "title": "Boolean checks in underscore templates"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This evaluates to true if it already exists:</p>\n\n<pre><code>$(\"#yourSelect option[value='yourValue']\").length &gt; 0;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 112
                },
                {
                    "body": "<pre><code>if ( $(\"#your_select_id option[value=&lt;enter_value_here&gt;]\").length == 0 ){\n  alert(\"option doesn't exist!\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Does not work, you have to do this:</p>\n\n<pre><code>if ( $(\"#your_select_id option[value='enter_value_here']\").length == 0 ){\n  alert(\"option doesn't exist!\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Another way using jQuery:</p>\n\n<pre><code>var exists = false; \n$('#yourSelect  option').each(function(){\n  if (this.value == yourValue) {\n    exists = true;\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How can I check whether a option already exist in select by JQuery?</p>\n\n<p>I want to dynamically add options into select and so I need to check whether the option is already exist to prevent duplication.</p>\n",
            "last_activity_date": 1404188743,
            "question_id": 646317,
            "score": 53,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How can I check whether a option already exist in select by JQuery"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>$.each(\".indent\", function(index){\n</code></pre>\n\n<p>doesn't iterate over the elements of <code>$('.indent')</code> but over the <code>\".indent\"</code> string whose length is 7 chars.</p>\n\n<p>See <a href=\"http://api.jquery.com/jQuery.each/\">reference</a></p>\n\n<hr>\n\n<p><strong>A more detailed explanation based on <a href=\"http://code.jquery.com/jquery-latest.js\">jQuery source code</a> :</strong></p>\n\n<p>jQuery first checks if the first parameter, <code>obj</code> (here your string), has a <code>length</code> :</p>\n\n<pre><code>var ...\n        length = obj.length,\n        isObj = length === undefined || jQuery.isFunction( obj );\n</code></pre>\n\n<p>Your string having a <code>length</code> (and not being a function), <code>isObj</code> is <code>false</code>.</p>\n\n<p>In this case, the following code is executed :</p>\n\n<pre><code>for ( ; i &lt; length; ) {\n    if ( callback.call( obj[ i ], i, obj[ i++ ] ) === false ) {\n        break;\n    }\n}\n</code></pre>\n\n<p>So, given the function <code>f</code>, the following code</p>\n\n<pre><code>$.each(\".indent\", f);\n</code></pre>\n\n<p>is equivalent to</p>\n\n<pre><code>for (var i=0; i&lt;\".indent\".length; i++) {\n    var letter = \".indent\"[i];\n    f.call(letter, i, letter);\n}\n</code></pre>\n\n<p>(you can log the letters using <code>var f = function(i,v){console.log(v)};</code> or be reminded one of the subtleties of <code>call</code> using <code>var f = function(){console.log(this)};</code>)</p>\n",
                    "is_accepted": true,
                    "score": 141
                },
                {
                    "body": "<p>You are iterating through the string, you should pass an object or an array to <code>$.each</code> method:</p>\n\n<pre><code>$(function(){    \n    $.each($(\".indent\"), function(index){\n       alert(index);\n    });    \n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 38
                },
                {
                    "body": "<p>$.each iterates over a collection of data. Since you pass a String that have 7 chars, it will iterate for each char. See the example of use:</p>\n\n<pre><code>$.each([52, 97], function(index, value) { \n  alert(index + ': ' + value); \n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                }
            ],
            "body": "<p>I have the following markup containing 10 <code>pre</code> elements with the class <code>indent</code>:</p>\n\n<pre><code>\u200b&lt;pre class=\"indent\"&gt;&lt;/pre&gt;\n&lt;pre class=\"indent\"&gt;&lt;/pre&gt;\n&lt;pre class=\"indent\"&gt;&lt;/pre&gt;\n&lt;pre class=\"indent\"&gt;&lt;/pre&gt;\n&lt;pre class=\"indent\"&gt;&lt;/pre&gt;\n&lt;pre class=\"indent\"&gt;&lt;/pre&gt;\n&lt;pre class=\"indent\"&gt;&lt;/pre&gt;\n&lt;pre class=\"indent\"&gt;&lt;/pre&gt;\n&lt;pre class=\"indent\"&gt;&lt;/pre&gt;\n&lt;pre class=\"indent\"&gt;&lt;/pre&gt;\u200b\n</code></pre>\n\n<p>I'm using the following jQuery <code>.each()</code> function to iterate through each element:</p>\n\n<pre><code>\u200b$(function(){    \n    $.each(\".indent\", function(index){\n       alert(index); \n    });    \n});\u200b\n</code></pre>\n\n<p>I would expect to see 10 alerts, however I only see 7</p>\n\n<p><a href=\"http://jsfiddle.net/6nzw9/\"><strong>-- See Fiddle --</strong></a></p>\n\n<hr>\n\n<p>However, this works as expected with <code>$(\".indent\").each()</code>:</p>\n\n<pre><code>$(function(){    \n    $(\".indent\").each(function(index){\n       alert(index); \n    });    \n});\u200b\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/6nzw9/\"><strong>-- See Fiddle --</strong></a></p>\n\n<hr>\n\n<p>Looking at the <code>$.each()</code> documentation, I understand theres a difference:</p>\n\n<blockquote>\n  <p>The $.each() function is not the same as $(selector).each(), which is\n  used to iterate, exclusively, over a jQuery object.</p>\n</blockquote>\n\n<p>But I don't understand why in this instance, it doesn't iterate through all elements.</p>\n\n<p>Why is this happening?</p>\n",
            "last_activity_date": 1378727508,
            "question_id": 13648515,
            "score": 51,
            "tags": [
                "javascript",
                "iteration",
                "jquery"
            ],
            "title": "Why doesn&#39;t $.each() iterate through every item?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If you include the <a href=\"http://www.json.org/js.html\">JSON parser</a> from json.org, you can use it's parse() function and just wrap it in a try/catch, like so:</p>\n\n<pre><code>try\n{\n   var json = JSON.parse(this.responseText);\n}\ncatch(e)\n{\n   alert('invalid json');\n}\n</code></pre>\n\n<p>Something like that would probably do what you want.</p>\n",
                    "is_accepted": false,
                    "score": 70
                },
                {
                    "body": "<p>I highly recommend you use a <a href=\"http://www.json.org/js.html\">javascript JSON library</a> for serializing to and from JSON. <code>eval()</code> is a security risk which should never be used unless you are <em>absolutely certain</em> that its input is sanitized and safe.</p>\n\n<p>With a JSON library in place, just wrap the call to its <code>parse()</code> equivalent in a try/catch-block to handle non-JSON input:</p>\n\n<pre><code>try\n{\n  var jsonObject = JSON.parse(yourJsonString);\n}\ncatch(e)\n{\n  // handle error \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Hers's the jQuery alternative...</p>\n\n<pre><code>try\n{\n  var jsonObject = jQuery.parseJSON(yourJsonString);\n}\ncatch(e)\n{\n  // handle error \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<p>My JavaScript sometimes crashes on this line:</p>\n\n<pre><code>var json = eval('(' + this.responseText + ')');\n</code></pre>\n\n<p>Crashes are caused when the argument of <code>eval()</code> is not JSON. Is there any way to check if the string is JSON before making this call?</p>\n\n<p>I don't want to use a framework - is there any way to make this work using just <code>eval()</code>? (There's a good reason, I promise.)</p>\n",
            "last_activity_date": 1361531081,
            "question_id": 2313630,
            "score": 40,
            "tags": [
                "javascript",
                "ajax",
                "json",
                "validation"
            ],
            "title": "AJAX: Check if a string is JSON?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Internet Explorer and Opera don't support <code>let</code> on any browser version, Firefox since version 2.0 and Safari since 3.2.</p>\n\n<p>See this <a href=\"http://en.wikipedia.org/wiki/JavaScript#Versions\">Javascript version table</a> on Wikipedia</p>\n\n<p><strong>EDIT</strong></p>\n\n<p><a href=\"https://developer.mozilla.org/en/New_in_javascript_1.7\">I just found out</a> that you need to define whether you use Javascript 1.7 or not. So your code will be:</p>\n\n<pre><code>&lt;script type=\"application/javascript;version=1.7\"&gt; ... &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Those extensions are not ECMA-Standard, they are supported only by the Mozilla implementation.</p>\n\n<p>On browser environments you should include the JavaScript <em>version number</em> in your <code>script</code> tag to use it:</p>\n\n<pre><code>&lt;script type=\"application/javascript;version=1.7\"&gt;  \n  var x = 5;\n  var y = 0;\n\n  let (x = x+10, y = 12) {\n    alert(x+y + \"\\n\");\n  }\n\n  alert((x + y) + \"\\n\");\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Apparently IE 10 in Edge mode supports <code>let</code>, per <a href=\"http://msdn.microsoft.com/en-us/library/ie/s4esdbwz(v=vs.94).aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/ie/s4esdbwz(v=vs.94).aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<ul>\n<li>Internet Explorer \u2265 11 (80% support)</li>\n<li>Firefox \u2265 2, \u2265 35 (50%, 80% support; <strong>only</strong> w/ <code>&lt;script type=\"application/javascript;version=1.7\"&gt;</code> or <code>=1.8</code>)</li>\n<li>Chrome \u2265 19 (50% support; <strong>only</strong> when \"Experimental Javascript features\" are enabled)</li>\n</ul>\n\n<p>says <a href=\"http://kangax.github.io/es5-compat-table/es6/#let\" rel=\"nofollow\">ECMAScript 6 compatibility table</a>.</p>\n",
                    "is_accepted": false,
                    "score": 14
                }
            ],
            "body": "<p>I'm developing an app and don't have to ever worry about IE and was looking into some of the features present in A+ grade browsers that aren't in IE.</p>\n\n<p>One of these features I wanted to play around with is <a href=\"https://developer.mozilla.org/en/New_in_JavaScript_1.7#let_definitions\">javascript's let keyword</a></p>\n\n<p>I can't seem to get any of their 'let' examples to work in Firefox 3.6 (UA string: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2) Gecko/20100115 Firefox/3.6 (.NET CLR 3.5.30729)). I get <code>SyntaxError: missing ; before statement</code> when executing <code>let foo = \"bar\"</code>.</p>\n\n<p>So, what browsers support the let keyword? (or am I doing something wrong?)</p>\n",
            "last_activity_date": 1415477628,
            "question_id": 2356830,
            "score": 37,
            "tags": [
                "javascript",
                "firefox",
                "firefox3.6"
            ],
            "title": "What browsers currently support javascript&#39;s &#39;let&#39; keyword?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I'm not sure it's possible with isolate scope (although I hope someone proves me wrong). The isolate scope that gets created in the directive is, well, isolated, so the $watch method in the directive is different from the scope that you're spying on in the unit test. If you change scope: {} to scope: true, the directive scope will inherit prototypically and your tests should pass.</p>\n\n<p>I guess this isn't the most ideal solution, because sometimes (a lot of the time), isolate scope is a good thing. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can do <code>var isolateScope = myDirectiveElement.scope()</code> to get the isolate scope.</p>\n\n<p>You don't really need to test that $watch was called though.. that's more testing angularjs than testing your app. But I guess it's just an example for the question.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>See <a href=\"http://docs.angularjs.org/api/angular.element\">angular element api docs</a>. If you use <strong>element.scope()</strong> you get the element's scope that you defined in the scope property of your directive. If you use <strong>element.isolateScope()</strong> you get the entire isolated scope. \nFor example, if your directive looks something like this :</p>\n\n<pre><code>scope : {\n myScopeThingy : '='\n},\ncontroller : function($scope){\n $scope.myIsolatedThingy = 'some value';\n}\n</code></pre>\n\n<p>Then calling element.scope() in your test will return </p>\n\n<pre><code>{ myScopeThingy : 'whatever value this is bound to' }\n</code></pre>\n\n<p>But if you call element.isolateScope() you'll get </p>\n\n<pre><code>{ \n  myScopeThingy : 'whatever value this is bound to', \n  myIsolatedThingy : 'some value'\n}\n</code></pre>\n\n<p>This is true as of angular 1.2.2 or 1.2.3, not sure exactly.\nIn previous versions you had only element.scope().</p>\n",
                    "is_accepted": true,
                    "score": 53
                },
                {
                    "body": "<p>move the logic to a separate controller, ie:</p>\n\n<pre><code>//will get your isolate scope\nfunction MyCtrl($scope)\n{\n  //non-DOM manipulating ctrl logic here\n}\napp.controller(MyCtrl);\n\nfunction MyDirective()\n{\n  return {\n    scope     : {},\n    controller: MyCtrl,\n    link      : function (scope, element, attrs)\n    {\n      //moved non-DOM manipulating logic to ctrl\n    }\n  }\n}\napp.directive('myDirective', MyDirective);\n</code></pre>\n\n<p>and test latter as you would any controller - passing the scope object in directly (see <strong>Controllers</strong> <a href=\"http://docs.angularjs.org/guide/dev_guide.unit-testing\" rel=\"nofollow\">section here</a> for an example).</p>\n\n<p>if you need to trigger $watch in your test do:</p>\n\n<pre><code>describe('MyCtrl test', function ()\n{\n  var $rootScope, $controller, $scope;\n\n  beforeEach(function ()\n  {\n    inject(function (_$rootScope_, _$controller_)\n    {\n      // The injector unwraps the underscores (_) from around the parameter names when matching\n      $rootScope = _$rootScope_;\n      $controller = _$controller_;\n    });\n\n    $scope = $rootScope.$new({});\n    $scope.foo = {x: 1}; //initial scope state as desired\n    $controller(MyCtrl, {$scope: $scope}); //or by name as 'MyCtrl'\n  });\n\n  it('test scope property altered on $digest', function ()\n  {\n    $scope.$digest(); //trigger $watch\n    expect($scope.foo.x).toEqual(1); //or whatever\n  });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What is a good way to unit test isolated scope in AngularJS</p>\n\n<p><a href=\"http://jsfiddle.net/daniellmb/b7BRR\">JSFiddle showing unit test</a></p>\n\n<p>Directive snippet</p>\n\n<pre><code>    scope: {name: '=myGreet'},\n    link: function (scope, element, attrs) {\n        //show the initial state\n        greet(element, scope[attrs.myGreet]);\n\n        //listen for changes in the model\n        scope.$watch(attrs.myGreet, function (name) {\n            greet(element, name);\n        });\n    }\n</code></pre>\n\n<p>I want to ensure the directive is listening for changes - this does <strong>not</strong> work with an isolated scope:</p>\n\n<pre><code>    it('should watch for changes in the model', function () {\n        var elm;\n        //arrange\n        spyOn(scope, '$watch');\n        //act\n        elm = compile(validHTML)(scope);\n        //assert\n        expect(scope.$watch.callCount).toBe(1);\n        expect(scope.$watch).toHaveBeenCalledWith('name', jasmine.any(Function));\n    });\n</code></pre>\n\n<p><strong>UPDATE:</strong>\nI got it to work by checking if the expected watchers were added to the child scope, but it's very brittle and probably using the accessors in an undocumented way (aka subject to change without notice!).</p>\n\n<pre><code>//this is super brittle, is there a better way!?\nelm = compile(validHTML)(scope);\nexpect(elm.scope().$$watchers[0].exp).toBe('name');\n</code></pre>\n\n<p><strong>UPDATE 2:</strong>\nAs I mentioned this is brittle! The idea still works but in newer versions of AngularJS the accessor has changed from <code>scope()</code> to <code>isolateScope()</code>:</p>\n\n<pre><code>//this is STILL super brittle, is there a better way!?\nelm = compile(validHTML)(scope);                       \nexpect(elm.isolateScope().$$watchers[0].exp).toBe('name');\n</code></pre>\n",
            "last_activity_date": 1398867427,
            "question_id": 17371836,
            "score": 35,
            "tags": [
                "javascript",
                "unit-testing",
                "angularjs",
                "jasmine",
                "angularjs-directive"
            ],
            "title": "How to Unit Test Isolated Scope Directive in AngularJS"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<pre><code>window.print();  \n</code></pre>\n\n<p>unless you mean a custom looking popup.</p>\n",
                    "is_accepted": true,
                    "score": 52
                },
                {
                    "body": "<p>You could do</p>\n\n<pre><code>&lt;body onload=\"window.print()\"&gt;\n...\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>I do this to make sure they remember to print landscape, which is necessary for a lot of pages on a lot of printers.</p>\n\n<pre><code>&lt;a href=\"javascript:alert('Please be sure to set your printer to Landscape.');window.print();\"&gt;Print Me...&lt;/a&gt;\n</code></pre>\n\n<p>or </p>\n\n<pre><code>&lt;body onload=\"alert('Please be sure to set your printer to Landscape.');window.print();\"&gt;\netc.\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I like this, so that you can add whatever fields you want and print it that way.</p>\n\n<pre><code>function printPage(){\n      var w = window.open();\n\n      var headers =  $(\"#headers\").html();\n      var field= $(\"#field1\").html();\n      var field2= $(\"#field2\").html();\n\n      var html = \"&lt;!DOCTYPE HTML&gt;\";\n        html += '&lt;html lang=\"en-us\"&gt;';\n        html += '&lt;head&gt;&lt;style&gt;&lt;/style&gt;&lt;/head&gt;';\n        html += \"&lt;body&gt;\";\n\n        //check to see if they are null so \"undefined\" doesnt print on the page. &lt;br&gt;s optional, just to give space\n        if(headers != null) html += headers + \"&lt;br/&gt;&lt;br/&gt;\";\n        if(field != null) html += field + \"&lt;br/&gt;&lt;br/&gt;\";\n        if(field2 != null) html += field2 + \"&lt;br/&gt;&lt;br/&gt;\";\n\n        html += \"&lt;/body&gt;\";\n        w.document.write(html);\n        w.window.print();\n        w.document.close();\n    };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have a page with a \"Print\" link that takes the user to a printer-friendly page.  The client wants a print dialog box to appear automatically when the user arrives at the print-friendly page.  How can I do this with javascript?</p>\n",
            "last_activity_date": 1378449181,
            "question_id": 242182,
            "score": 33,
            "tags": [
                "javascript"
            ],
            "title": "How can I pop-up a print dialog box using Javascript?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Do you have any routes on the controller? Backbone only creates the history once at least one route is specified.</p>\n\n<p>More:</p>\n\n<blockquote>\n  <p>TypeError: Cannot call method 'start' of undefined**</p>\n  \n  <p>Hmm, for some reason Backbone.history is undefined, and so there is no\n  start method on it. It turns out that Backbone.js creates an instance\n  of Backbone.History (upper case \u2018H\u2019) called Backbone.history (lower\n  case \u2018h\u2019) once a controller has been created that has at least one\n  route specified on it. This makes sense, as history management is only\n  required if there are routes to respond to.</p>\n</blockquote>\n\n<p><a href=\"http://tinnedfruit.com/2011/04/26/testing-backbone-apps-with-jasmine-sinon-3.html\">http://tinnedfruit.com/2011/04/26/testing-backbone-apps-with-jasmine-sinon-3.html</a></p>\n",
                    "is_accepted": true,
                    "score": 50
                },
                {
                    "body": "<p>A similar error message \".. has no method 'start'\" pops up if you write <code>Backbone.History.start</code> instead of <code>Backbone.history.start</code> (the correct one is with lowercase <code>h</code> in <code>history</code>).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I hit the same error.</p>\n\n<p>This happens when you do not make an instance of the router:</p>\n\n<pre><code>var routerInstance = new blogRouter();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<pre><code>(function($) {\n\n    var Demo = Backbone.Router.extend({\n        routes:{\n            '*actions':'defaultRoute'\n        },\n        defaultRoute:function(action){\n            alert('xss');\n        }\n    });\n\n    var demo = new Demo;\n    Backbone.history.start();\n    //My site http://bbs.w3hacker.com\n\n})(jQuery);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you're using CoffeeScript and your Router is defined using the CoffeeScript class keyword with a constructor method, double check that you invoke super in the definition of the constructor. This resolved the issue of Backbone.history being null for me. </p>\n\n<pre><code>class AppRouter extends Backbone.Router\n  constructor: (options) -&gt;\n    super(options)\n    # other initialization code\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I faced exact same issue for different reason, after spending couple of hours i realized that a method in my router \"route\" : function() is causing the issue, after i comment this unnecessary extra method, history.start() worked as expected. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Make sure you include <code>jQuery.js</code> <strong>before</strong> <code>underscore.js</code> and <code>backbone.js</code> in HTML head.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Also using old versions of jquery could cause this</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I get <code>Cannot call 'start' of undefined</code> when calling...</p>\n\n<pre><code>    Backbone.history.start()\n</code></pre>\n\n<p>When running some checks Backbone returns the object but Backbone.history returns undefined. </p>\n\n<p>What could be the cause of this?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1408540219,
            "question_id": 7343357,
            "score": 31,
            "tags": [
                "javascript",
                "backbone.js",
                "coffeescript"
            ],
            "title": "Cannot call &#39;start&#39; of undefined when starting backbone.js history."
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Not in the standard security context.</p>\n\n<p>If you have a situation where you have elevated security rights (such as inside a custom browser extension) then it may become possible.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Connections to MongoDB occur over a socket; browsers communicate via http. That said, it's not difficult to write a back-end app that gives you pretty transparent access to MongoDB via JavaScript / REST / HTTP. That's essentially what's happening with Try Mongo, e.g. <a href=\"http://try.mongodb.org/\" rel=\"nofollow\">http://try.mongodb.org/</a> .</p>\n\n<p>People have also started building some generic back-ends for this purpose. Here's one example:\n<a href=\"http://github.com/djsun/sinatra_resource\" rel=\"nofollow\">http://github.com/djsun/sinatra_resource</a> </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>MongoDB natively does not has a fully usable REST interface. You will need either Python based Sleepy Mongoose or Node.js based MongoDB Rest</p>\n\n<p>Please see <a href=\"http://www.mongodb.org/display/DOCS/Http+Interface\">http://www.mongodb.org/display/DOCS/Http+Interface</a> for more information.</p>\n\n<p>Mongo's inbuilt REST interface is very basic &amp; read only.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>If you happen to host your database on MongoLabs, they also expose a REST API. Watch out, it's not secure, as an API key is passed with each request, but your could use it to retrieve public data through Javascript:</p>\n\n<p><a href=\"https://support.mongolab.com/entries/20433053-Is-there-a-REST-API-for-MongoDB-\" rel=\"nofollow\">https://support.mongolab.com/entries/20433053-Is-there-a-REST-API-for-MongoDB-</a></p>\n\n<p>Once you have your mongolab db setup, you can access it thru REST request such as</p>\n\n<pre><code>$.getJSON( \"https://api.mongolab.com/api/1/databases/your-db/collections/your-collection/?      apiKey=your-key\", function( json ) {\n//console.log( \"JSON Data: \" + json );\n}\n);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>is there any possibility to access and retrieve data from MongoDB directly over JavaScript form browser without backend processing?</p>\n",
            "last_activity_date": 1406023705,
            "question_id": 2133246,
            "score": 30,
            "tags": [
                "javascript",
                "database",
                "ajax",
                "json",
                "mongodb"
            ],
            "title": "Access MongoDB directly via JavaScript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Only window is supported yes but you could use a plugin for it: <a href=\"http://benalman.com/projects/jquery-resize-plugin/\" rel=\"nofollow\">http://benalman.com/projects/jquery-resize-plugin/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><code>DIV</code> does not fire a <code>resize</code> event,  so you won't be able to do exactly what you've coded, but you could look into <a href=\"http://james.padolsey.com/javascript/monitoring-dom-properties/\">monitoring DOM properties</a>.</p>\n\n<p>If you are actually working with something like resizables, and that is the only way for a div to change in size, then your resize plugin will probably be implementing a callback of its own.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>what about this:</p>\n\n<pre><code>divH = divW = 0;\njQuery(document).ready(function(){\n    divW = jQuery(\"div\").width();\n    divH = jQuery(\"div\").height();\n});\nfunction checkResize(){\n    var w = jQuery(\"div\").width();\n    var h = jQuery(\"div\").height();\n    if (w != divW || h != divH) {\n        /*what ever*/\n        divH = h;\n        divW = w;\n    }\n}\njQuery(window).resize(checkResize);\nvar timer = setInterval(checkResize, 1000);\n</code></pre>\n\n<p>BTW I suggest you to add an id to the div and change the $(\"div\") to $(\"#yourid\"), it's gonna be faster, and it won't break when later you add other divs</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>For a google maps integration I was looking for a way to detect when a div has changed in size. Since google maps always require proper dimensions e.g. width and height in order to render properly.</p>\n\n<p>The solution I came up with is a delegation of an event, in my case a tab click. This could be a window resize of course, the idea remains the same:</p>\n\n<pre><code>if (parent.is(':visible')) {\n    w = parent.outerWidth(false);\n    h = w * mapRatio /*9/16*/;\n    this.map.css({ width: w, height: h });\n} else {\n    this.map.closest('.tab').one('click', function() {\n        this.activate();\n    }.bind(this));\n}\n</code></pre>\n\n<p><code>this.map</code> in this case is my map div.\nSince my parent is invisible on load, the computed width and height are 0 or don't match.\nBy using <code>.bind(this)</code> I can delegate the script execution (<code>this.activate</code>) to an event (<code>click</code>).</p>\n\n<p>Now I'm confident the same applies for resize events.</p>\n\n<pre><code>$(window).one('resize', function() {\n    this.div.css({ /*whatever*/ });\n}.bind(this));\n</code></pre>\n\n<p>Hope it helps anyone!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is a really nice, easy to use, lightweight (uses native browser events for detection) plugin for both basic JavaScript and for jQuery that was released this year. It performs perfectly:</p>\n\n<p><a href=\"https://github.com/sdecima/javascript-detect-element-resize\" rel=\"nofollow\">https://github.com/sdecima/javascript-detect-element-resize</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I was only interested for a trigger when a width of an element was changed (I don' care about height), so I created a jquery event that does exactly that, using an invisible iframe element. </p>\n\n<pre><code>$.event.special.widthChanged = {\n  remove: function() {\n      $(this).children('iframe.width-changed').remove();\n  },\n  add: function () {\n      var elm = $(this);\n      var iframe = elm.children('iframe.width-changed');\n      if (!iframe.length) {\n          iframe = $('&lt;iframe/&gt;').addClass('width-changed').prependTo(this);\n      }\n      var oldWidth = elm.width();\n      function elmResized() {\n          var width = elm.width();\n          if (oldWidth != width) {\n              elm.trigger('widthChanged', [width, oldWidth]);\n              oldWidth = width;\n          }\n      }\n\n      var timer = 0;\n      var ielm = iframe[0];\n      (ielm.contentWindow || ielm).onresize = function() {\n          clearTimeout(timer);\n          timer = setTimeout(elmResized, 20);\n      };\n  }\n}\n</code></pre>\n\n<p>It requires the following css :</p>\n\n<pre><code>iframe.width-changed {\n    width: 100%;\n    display: block;\n    border: 0;\n    height: 0;\n    margin: 0;\n}\n</code></pre>\n\n<p>You can see it in action here <a href=\"http://jsfiddle.net/333gu11u/\" rel=\"nofollow\">widthChanged fiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>jquery has the <code>resize()</code>-event, but it just work with window.</p>\n\n<pre><code>jQuery(window).resize(function() { /* What ever */ });\n</code></pre>\n\n<p>This works fine!\nBut when i want to add the event to a div element it doesn't work.</p>\n\n<p>E.g.</p>\n\n<pre><code>jQuery('div').resize(function() { /* What ever */ });\n</code></pre>\n\n<p>I want to start an callback when the size of a div-element has changed. I DON'T want to start a resizeable-event \u2013 just a event to check if the size of a div-element has changed.</p>\n\n<p>Is there any solution to do this ?</p>\n",
            "last_activity_date": 1411837623,
            "question_id": 10086693,
            "score": 27,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jquery resize on div element"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The source is available here next to the downloads : <a href=\"http://nodejs.org/\" rel=\"nofollow\">http://nodejs.org/</a> exports/require are keywords, I don't think they are coded in javascript directly. Node is coded in C++ , javascript is just a scripting shell around the C++ core.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Source code is <a href=\"https://github.com/joyent/node/blob/069dd07a1732c6a752773aaed9e8c18ab472375f/lib/module.js#L354\">here</a>. <code>exports</code>/<code>require</code> are not keywords, but global variables. Your main script is <a href=\"https://github.com/joyent/node/blob/6cbfcdad46d733bb04332063727e304e449dc86b/src/node.js#L780\">wrapped</a> before <a href=\"https://github.com/joyent/node/blob/6cbfcdad46d733bb04332063727e304e449dc86b/src/node.js#L794\">start</a> in a function which has all the globals like <code>require</code>, <code>process</code> etc in its context.</p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p><a href=\"http://stackoverflow.com/users/705115/andrey-sidorov\">Andrey</a> showed the source code, but if you also wonder how to use it, the easy and simple explanation is here (<a href=\"http://nodejs.org/api/modules.html\" rel=\"nofollow\">http://nodejs.org/api/modules.html</a>). </p>\n\n<p>These were two good examples for me.</p>\n\n<pre><code>//foo.js, multiple methods\nvar circle = require('./circle.js');\nconsole.log( 'The area of a circle of radius 4 is ' + circle.area(4));\n\n//circle.js\nvar PI = Math.PI;\nexports.area = function (r) {\n  return PI * r * r;\n};\nexports.circumference = function (r) {\n  return 2 * PI * r;\n};\n\n//bar.js\nvar square = require('./square.js');\nvar mySquare = square(2);\nconsole.log('The area of my square is ' + mySquare.area());\n\n//square.js, single method\nmodule.exports = function(width) {\n  return {\n    area: function() {\n      return width * width;\n    }\n  };\n}\n</code></pre>\n\n<p>My favourite pattern is</p>\n\n<pre><code>(function (controller) {\n\n  controller.init = function (app) {\n\n    app.get(\"/\", function (req, res) {\n        res.render(\"index\", {});\n    });\n\n  };\n})(module.exports);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I tried this:</p>\n\n<pre><code>// mod.js\nvar a = 1;\nthis.b = 2;\nexports.c = 3;\n\n// test.js\nvar mod = require('./mod.js');\nconsole.log(mod.a);    // undefined\nconsole.log(mod.b);    // 2\nconsole.log(mod.c);    // 3, so this === exports?\n</code></pre>\n\n<p>So I image that require() may be implement like this:</p>\n\n<pre><code>var require = function (file) {\n    var exports = {};\n    var run = function (file) {\n        // include \"file\" here and run\n    };\n    run.apply(exports, [file]);\n    return exports;\n}\n</code></pre>\n\n<p>Is that right? Please help me to understand require(), or where can I find the source code. Thanks!</p>\n",
            "last_activity_date": 1419431072,
            "question_id": 9475792,
            "score": 27,
            "tags": [
                "javascript",
                "node.js",
                "this",
                "require",
                "apply"
            ],
            "title": "How does require() in node.js work?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Yes, JSON is defined natively in modern browsers, but not in IE. You need to import a library. For example, <a href=\"http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js\">http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>JSON is <a href=\"http://msdn.microsoft.com/en-us/library/cc836458(v=vs.94).aspx\">not available in compatibility mode IE</a>:</p>\n\n<blockquote>\n  <p>Not supported in the following document modes: Quirks, Internet Explorer 6 standards, Internet Explorer 7 standards.</p>\n</blockquote>\n\n<p>Since you shouldn't be using (or worse, reyling on ) compatibility modes in the first place, you should switch IE to standards-mode by adding a valid doctype.</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>See here for a blog post explaining the situation: <a href=\"http://www.devcurry.com/2010/12/resolve-json-is-undefined-error-in.html\">Resolve JSON is Undefined Error in Internet Explorer</a></p>\n\n<p>Include the <a href=\"https://github.com/douglascrockford/JSON-js/blob/master/json2.js\">JSON library</a> in your page and you should be good to go.</p>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>If you are using jQuery library at your page, than you could use <code>$.parseJSON</code>.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Just an update (2013!) to the links provided above-</p>\n\n<p>Per <a href=\"http://www.json.org/js.html\" rel=\"nofollow\">http://www.json.org/js.html</a>, a link at the bottom of the page will refer you to the latest implementation:</p>\n\n<p><a href=\"https://github.com/douglascrockford/JSON-js\" rel=\"nofollow\">https://github.com/douglascrockford/JSON-js</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You need to include json2.js </p>\n\n<p>see <a href=\"http://www.blakepell.com/Blog/?p=405#comment-2181\" rel=\"nofollow\">json2 inclusion</a></p>\n\n<p>for more details. There are cases where we have to deal with cases where clients use IE7 standards. So our code had to cater to such cases too. Ours being a retail website is accessed by hundreds of clients who use IE7 standards. Including json2 solves this issue </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have done LOCAL Jquery added .NEt 2.0 code testing, it works fine without any problem.\nBut after migrate the code to IIS v6 server then access from same IE browser, then problem appear \"JSON\" undefined. \nAfter read this recommendation, downlode the file json2.js and add below into source code.</p>\n\n<pre><code>&lt;script  type=\"text/javascript\" src=\"json2.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>EVERYTHING WORKING Fine.</p>\n\n<p>Good Thank you.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I get the following error in IE 9 <code>SCRIPT5009: 'JSON' is undefined</code> only when in compatability mode. the line causing this error is </p>\n\n<pre><code>JSON.stringify(togObj.Answers)\n</code></pre>\n\n<p>The error does not occur in ie (non-compatability mode), Chrome or Firefox. \nAny idea what's going on here?</p>\n",
            "last_activity_date": 1391497447,
            "question_id": 8332362,
            "score": 27,
            "tags": [
                "javascript",
                "json",
                "internet-explorer"
            ],
            "title": "SCRIPT5009: &#39;JSON&#39; is undefined"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><a href=\"http://api.jquery.com/keyup/\" rel=\"nofollow\">Do it the jQuery way:</a></p>\n\n<pre><code>&lt;input type=\"text\" id=\"name\" name=\"name\"/&gt;\n\n\n$('#name').keyup(function() {\n  alert('Content length has changed to: '+$(this).val().length);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use onkeyup</p>\n\n<pre><code>&lt;input id=\"name\" onkeyup=\"checkLength(this.value)\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You would have to use a combination of <code>onkeyup</code> and <code>onclick</code> (or <code>onmouseup</code>) if you want to catch every possibility.</p>\n\n<pre><code>&lt;input id=\"name\" onkeyup=\"checkLength(this.value)\" onmouseup=\"checkLength(this.value)\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>(function () {\n    var oldVal;\n\n    $('#name').on('change keypress paste focus textInput input', function () {\n        var val = this.value;\n        if (val !== oldVal) {\n            oldVal = val;\n            checkLength(val);\n        }\n    });\n}());\n</code></pre>\n\n<p>This will catch <code>change</code>, keystrokes, <code>paste</code>, <code>textInput</code>, <code>input</code> (when available). And not fire more than necessary.</p>\n\n<p><a href=\"http://jsfiddle.net/katspaugh/xqeDj/\">http://jsfiddle.net/katspaugh/xqeDj/</a></p>\n\n<hr>\n\n<p><strong>References:</strong></p>\n\n<p><a href=\"http://www.w3.org/TR/DOM-Level-3-Events/#event-type-textinput\"><code>textInput</code></a> \u2014 a W3C DOM Level 3 event type. <a href=\"http://www.w3.org/TR/DOM-Level-3-Events/#events-textevents\">http://www.w3.org/TR/DOM-Level-3-Events/#events-textevents</a></p>\n\n<blockquote>\n  <p>A user agent must dispatch this event when one or more characters have\n  been entered. These characters may originate from a variety of\n  sources, e.g., characters resulting from a key being pressed or\n  released on a keyboard device, from the processing of an input method\n  editor, or resulting from a voice command. Where a \u201cpaste\u201d operation\n  generates a simple sequence of characters, i.e., a text passage\n  without any structure or style information, this event type should be\n  generated as well.</p>\n</blockquote>\n\n<p><a href=\"http://shadow2531.com/opera/testcases/oninput/html5_input_event_support.old1.html\"><code>input</code></a> \u2014 an <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/section-index.html#events-0\">HTML5</a> event type.</p>\n\n<blockquote>\n  <p>Fired at controls when the user changes the value</p>\n</blockquote>\n\n<p>Firefox, Chrome, <a href=\"http://msdn.microsoft.com/en-us/library/gg592978%28v=vs.85%29.aspx\">IE9</a> and other modern browsers support it.</p>\n\n<blockquote>\n  <p>This event occurs immediately after modification, unlike the onchange event, which occurs when the element loses focus.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 47
                },
                {
                    "body": "<p>Here is another solution I develop for the same problem. However I use many input boxes so I keep old value as an user-defined attribute of the elements itself: \"data-value\". Using jQuery it is so easy to manage.</p>\n\n<pre><code>        $(document).delegate('.filterBox', 'keyup', { self: this }, function (e) {\n            var self = e.data.self;\n\n            if (e.keyCode == 13) {\n                e.preventDefault();\n                $(this).attr('data-value', $(this).val());\n                self.filterBy(this, true)\n            }\n            else if (e.keyCode == 27) {\n                $(this).val('');\n                $(this).attr('data-value', '');\n                self.filterBy(this, true)\n            }\n            else {\n                if ($(this).attr('data-value') != $(this).val()) {\n                    $(this).attr('data-value', $(this).val());\n                    self.filterBy(this);\n                }\n            }\n        });\n</code></pre>\n\n<p>here is, I used 5-6 input boxes have class 'filterBox',\nI make filterBy method run only if data-value is different than its own value.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As an extention to katspaugh's answer, here's a way to do it for multiple elements using a css class.</p>\n\n<pre><code>   $('.myclass').each(function(){\n        $(this).attr('oldval',$(this).val());\n   });\n\n   $('.myclass').on('change keypress paste focus textInput input',function(){\n       var val = $(this).val();\n       if(val != $(this).attr('oldval') ){\n           $(this).attr('oldval',val); \n           checkLength($(this).val());\n        }\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have an input element and I want to keep checking the length of the contents and whenever the length becomes equal to a particular size, I want to enable the submit button, but I am facing a problem with the onchange event of javascript as the event fires only when the input element goes out of scope and not when the contents change.</p>\n\n<p><code>&lt;input type=\"text\" id=\"name\" onchange=\"checkLength(this.value)\" /&gt;</code></p>\n\n<p>----onchange does not fire on changing contents of name, but only fires when name goes out of focus.</p>\n\n<p>Is there something I can do to make this event work on content change? or someother event I can use for this?\nI found a workaround by using the onkeyup function, but that does not fire when we select some content from the auto completer of the browser.</p>\n\n<p>I want something which can work when the content of the field change whether by keyboard or by mouse...any ideas?</p>\n",
            "last_activity_date": 1357137914,
            "question_id": 7105997,
            "score": 27,
            "tags": [
                "javascript",
                "jquery",
                "javascript-events"
            ],
            "title": "javascript change event on input element fires on only losing focus"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>This should work ie. put all inline ruby inside of <code>#{}</code>:</p>\n\n<pre><code>requester_name:  \"#{current_user.first_name + ' ' + current_user.last_name if current_user}\",\nrequester_email: \"#{current_user.email if current_user}\",\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>Direct <code>#{}</code> works for simple strings, but is not the most scalable / safe solution in general.</p>\n\n<p>For example, the literal backslash in Ruby would cause you problems in Javascript where it will be interpreted as a newline character:</p>\n\n<pre><code>- a = \"\\\\n\"\n:javascript\n  '#{ a }' !== \"\\\\n\"\n</code></pre>\n\n<p>From <a href=\"http://railscasts.com/episodes/324-passing-data-to-javascript?view=asciicast\" rel=\"nofollow\">this awesome Rails cast</a>, the following techniques can be used:</p>\n\n<p><strong>escape_javascript</strong></p>\n\n<p>Alias: <code>j</code>.</p>\n\n<p>Works only on strings.</p>\n\n<p>Escapes characters that can have special meanings in Javascript strings,\nlike backslash escapes, into a format suitable to put inside Javascript string literal quotes.</p>\n\n<p>Maintain <code>html_safe</code> status of input,\nso needs <code>html_safe</code> otherwise special HTML chars like <code>&lt;</code> would get escaped into <code>&amp;lt;</code>.</p>\n\n<pre><code>- a = \"\\\\n&lt;\"\n:javascript\n  '#{ j(a)           }' === '\\\\n&amp;lt;'\n  '#{ j(a).html_safe }' === '\\\\n&lt;'\n</code></pre>\n\n<p><strong>to_json + html_safe</strong></p>\n\n<p>Works because JSON is <a href=\"http://timelessrepo.com/json-isnt-a-javascript-subset\" rel=\"nofollow\">almost a subset of Javascript object literal notation</a>.</p>\n\n<p>Works on any hash object, including strings, arrays and integers which are\nconverted to JSON fragments of the corresponding data type.</p>\n\n<pre><code>- data = { key1: 'val1', key2: 'val2' }\n:javascript\n  data = #{ data.to_json }\n  data.key1 === 'val1'\n  data.key2 === 'val2'\n</code></pre>\n\n<p><strong>data- attributes</strong></p>\n\n<p>Add values to attributes, retrieve them with Javascript DOM operations.</p>\n\n<p>Better with the <code>content_tag</code> helper:</p>\n\n<pre><code>= content_tag 'div', '', id: 'data', data: {key1: 'val1', key2: 'val2'}\n:javascript\n  $('#data').data('key1') === 'val1'\n  $('#data').data('key2') === 'val2'\n</code></pre>\n\n<p><strong>gon</strong></p>\n\n<p>Library specialized for the job: <a href=\"https://github.com/gazay/gon\" rel=\"nofollow\">https://github.com/gazay/gon</a></p>\n\n<p>Probably the most robust solution.</p>\n\n<p>Gemfile:</p>\n\n<pre><code>gem 'gon'\n</code></pre>\n\n<p>Controller:</p>\n\n<pre><code>gon.key1 = 'val1'\ngon.key2 = 'val2'\n</code></pre>\n\n<p>Layout <code>app/views/layouts/application.html.erb</code>:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"/&gt;\n  &lt;%= include_gon %&gt;\n</code></pre>\n\n<p>View:</p>\n\n<pre><code>:javascript\n  gon.key1 === 'val1'\n  gon.key2 === 'val2'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have the following function for using ZenDesk.  I'd like to inject my current_user details into the form as follows. (this is my from html.haml template).  However I cannot figure out how to make this work.</p>\n\n<pre><code>:javascript\n    if (typeof(Zenbox) !== \"undefined\") {\n      Zenbox.init({\n        dropboxID:   \"xxxxx\",\n        url:         \"xxxxx.zendesk.com\",\n        tabID:       \"support\",\n        tabColor:    \"black\",\n        tabPosition: \"Left\",\n        requester_name:  =current_user ? \"#{current_user.first_name} #{current_user.last_name}\" : \"\" ,\n        requester_email: =current_user ? \"#{current_user.email}\" : \"\" ,\n        hide_tab: true\n        });\n    }\n</code></pre>\n\n<p>In short, how does one inject rails variables into a :javascript element in haml.</p>\n",
            "last_activity_date": 1403887072,
            "question_id": 4708369,
            "score": 27,
            "tags": [
                "javascript",
                "ruby-on-rails",
                "haml"
            ],
            "title": "Injecting variable values into javascript and HAML in RoR"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Just override in this way it will work definitely</p>\n\n<pre><code>function tooltipContent(key, y, e, graph) {\n            return '&lt;h3&gt;' + key + '&lt;/h3&gt;' +'&lt;p&gt;' + y + '&lt;/p&gt;' ;\n        }\n</code></pre>\n\n<p>Or</p>\n\n<pre><code>tooltipContent(function(key, y, e, graph) { return 'Some String' })\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 38
                },
                {
                    "body": "<pre><code>my_chart = nv.models.multiBarChart()\n  .tooltip(function(key, x, y, e, graph) {\n    return '&lt;h3&gt;' + key + '&lt;/h3&gt;' +\n           '&lt;p&gt;' +  y + ' on ' + x + '&lt;/p&gt;';\n  });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think you're missing the 'x' parameter in your tooltip function. The format of the function call is:</p>\n\n<pre><code>function(key, x, y, e, graph)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Customized tooltip can not exist with \"useInteractiveGuideline\".</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>To add to previous answers, sometimes you want to use the data of the series and not only of <code>x</code> and <code>y</code>. For instance when</p>\n\n<pre><code>data = {'values': [{'month': 1, 'count': 2}, ...], 'key': 'test' }\n</code></pre>\n\n<p>For those situations, use </p>\n\n<pre><code>.tooltip(function(key, x, y, e, graph) {\n         var d = e.series.values[e.pointIndex];\n         return '&lt;h3&gt;' + e.series.key + '&lt;/h3&gt;&lt;p&gt;' + d.month.toString() + ...;\n });\n</code></pre>\n\n<p><code>e.series</code> is the particular series the mouse is hovering, <code>e.pointIndex</code> is the index on the values of the series. Here <code>e.series.key == key</code>, but I used to empathise what is <code>e.series</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm using nvd3's piechart.js component to generate a piechart on my site. The provided .js file includes several var's, as follows:</p>\n\n<pre><code>var margin = {top: 30, right: 20, bottom: 20, left: 20}\n    , width = null\n    , height = null\n    , showLegend = true\n    , color = nv.utils.defaultColor()\n    , tooltips = true\n    , tooltip = function(key, y, e, graph) {\n        return '&lt;h3&gt;' + key + '&lt;/h3&gt;' +\n               '&lt;p&gt;' +  y + '&lt;/p&gt;'\n      }\n    , noData = \"No Data Available.\"\n    , dispatch = d3.dispatch('tooltipShow', 'tooltipHide')\n;\n</code></pre>\n\n<p>In my in-line js, I've been able to override some of those variables, like this (overriding showLegend and margin):</p>\n\n<pre><code>var chart = nv.models.pieChart()\n    .x(function(d) { return d.label })\n    .y(function(d) { return d.value })\n    .showLabels(false)\n    .showLegend(false)\n    .margin({top: 10, right: 0, bottom: 0, left: 0})\n    .donut(true);\n</code></pre>\n\n<p>I've tried overwriting the tooltip in the same way:</p>\n\n<pre><code>.tooltip(function(key, y, e, graph) { return 'Some String' })\n</code></pre>\n\n<p>but when I do that, my piechart does not display at all. Why can't I overwrite the tooltip here? Is there another way I can do so? I'd really rather not have to edit piechart.js itself at all; I need to keep that file generic for use in multiple widgets.</p>\n\n<p>And while we're at it, is there some way I can make the entire tooltip into a clickable link?</p>\n",
            "last_activity_date": 1401084965,
            "question_id": 12416508,
            "score": 26,
            "tags": [
                "javascript",
                "tooltip",
                "d3.js",
                "pie-chart",
                "nvd3.js"
            ],
            "title": "nvd3 piechart.js - How to edit the tooltip?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Turns out I could not read the error properly until I saw it in here </p>\n\n<p>Apparently manifest v2 does not allow you to have inline scripts, so you just need to </p>\n\n<pre><code>src=\"path_to_the_file.js\"\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 41
                },
                {
                    "body": "<p>In extension to @tak3r's answer and @Doug's comment:</p>\n\n<p>Inline scripts need to be changed to external scripts.</p>\n\n<p>Move:</p>\n\n<pre><code>&lt;script&gt;\n  chrome.tabs.executeScript(null,{\n    code:\"document.body.style.backgroundColor='red'\"\n  });\n&lt;/script&gt;\n</code></pre>\n\n<p>To a new file called <code>main.js</code> and remove the <code>&lt;script&gt;&lt;/script&gt;</code> tags</p>\n\n<p>Include the following in the <code>&lt;head&gt;&lt;/head&gt;</code> of your HTML</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"main.js\"&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to make basically an element highlighter chrome extension.\nWorkflow:\n - click on browser icon\n - click on the page\n - hightlight the element clicked</p>\n\n<p>I am having troubles in running content scripts upon browser action using manifest_version:2\nWhen I inspect the popup that appears it says:</p>\n\n<blockquote>\n  <p>Refused to execute inline script because it violates the following\n  Content Security Policy directive: \"script-src 'self'\n  chrome-extension-resource:\" (popup.html:5).</p>\n</blockquote>\n\n<p>Which is where the inline script in popup.html is and the script does not work</p>\n\n<p>I have: </p>\n\n<p>manifest.json:</p>\n\n<pre><code>{\n   \"browser_action\": {\n      \"default_icon\": \"images/icon.gif\",\n      \"default_popup\": \"popup.html\"\n   },\n   \"manifest_version\": 2,\n   \"description\": \"MEH!\",\n   \"name\": \"My First Extension\",\n   \"permissions\": [\n      \"tabs\", \"http://*/*\", \"https://*/*\"\n   ],\n   \"version\": \"0.1\"\n}\n</code></pre>\n\n<p>popup.html:</p>\n\n<pre><code>&lt;html&gt;\n  &lt;head&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;script&gt;\n      chrome.tabs.executeScript(null,{\n        code:\"document.body.style.backgroundColor='red'\"\n      });\n    &lt;/script&gt;\n    &lt;div id='msg' style=\"width:300px\"&gt;...&lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Any help would be very much appreciated</p>\n",
            "last_activity_date": 1409221379,
            "question_id": 11545743,
            "score": 25,
            "tags": [
                "javascript",
                "google-chrome-extension"
            ],
            "title": "chrome extension insert content script on browser action"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>function increase_brightness(hex, percent){\n    // strip the leading # if it's there\n    hex = hex.replace(/^\\s*#|\\s*$/g, '');\n\n    // convert 3 char codes --&gt; 6, e.g. `E0F` --&gt; `EE00FF`\n    if(hex.length == 3){\n        hex = hex.replace(/(.)/g, '$1$1');\n    }\n\n    var r = parseInt(hex.substr(0, 2), 16),\n        g = parseInt(hex.substr(2, 2), 16),\n        b = parseInt(hex.substr(4, 2), 16);\n\n    return '#' +\n       ((0|(1&lt;&lt;8) + r + (256 - r) * percent / 100).toString(16)).substr(1) +\n       ((0|(1&lt;&lt;8) + g + (256 - g) * percent / 100).toString(16)).substr(1) +\n       ((0|(1&lt;&lt;8) + b + (256 - b) * percent / 100).toString(16)).substr(1);\n}\n\n/**\n * ('#000000', 50) --&gt; #808080\n * ('#EEEEEE', 25) --&gt; #F2F2F2\n * ('EEE     , 25) --&gt; #F2F2F2\n **/\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 44
                },
                {
                    "body": "<p>First get a quick understanding of <a href=\"http://www.htmlgoodies.com/tutorials/colors/article.php/3478951/A-Quick-Color-Explanation.htm\" rel=\"nofollow\">hex color codes</a>.</p>\n\n<p>Then it should be pretty easy to break down your color value into RGB, make the adjustments and then return the new color code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>// color is a hex color like #aaaaaa and percent is a float, 1.00=100%\n// increasing a color by 50% means a percent value of 1.5\nfunction brighten(color, percent) {\n    var r=parseInt(color.substr(1,2),16);\n    var g=parseInt(color.substr(3,2),16);\n    var b=parseInt(color.substr(5,2),16);\n\n    return '#'+\n       Math.min(255,Math.floor(r*percent)).toString(16)+\n       Math.min(255,Math.floor(g*percent)).toString(16)+\n       Math.min(255,Math.floor(b*percent)).toString(16);\n}\n</code></pre>\n\n<p>Live sample: <a href=\"http://jsfiddle.net/emM55/\" rel=\"nofollow\">http://jsfiddle.net/emM55/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>To set the brightness of RGB:</p>\n\n<ol>\n<li><p>Convert RGB to HSL</p></li>\n<li><p>Set the brightness of HSL</p></li>\n<li><p>Convert back from HSL to RGB</p></li>\n</ol>\n\n<p>This link used to have code to convert RGB to HSL and reverse:\n<a href=\"http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\" rel=\"nofollow\">http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript</a></p>\n\n<pre><code>/**\n * Converts an RGB color value to HSL. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and l in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSL representation\n */\nfunction rgbToHsl(r, g, b){\n    r /= 255, g /= 255, b /= 255;\n    var max = Math.max(r, g, b), min = Math.min(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min){\n        h = s = 0; // achromatic\n    }else{\n        var d = max - min;\n        s = l &gt; 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max){\n            case r: h = (g - b) / d + (g &lt; b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n\n    return [h, s, l];\n}\n\n/**\n * Converts an HSL color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n * Assumes h, s, and l are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  l       The lightness\n * @return  Array           The RGB representation\n */\nfunction hslToRgb(h, s, l){\n    var r, g, b;\n\n    if(s == 0){\n        r = g = b = l; // achromatic\n    }else{\n        function hue2rgb(p, q, t){\n            if(t &lt; 0) t += 1;\n            if(t &gt; 1) t -= 1;\n            if(t &lt; 1/6) return p + (q - p) * 6 * t;\n            if(t &lt; 1/2) return q;\n            if(t &lt; 2/3) return p + (q - p) * (2/3 - t) * 6;\n            return p;\n        }\n\n        var q = l &lt; 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return [r * 255, g * 255, b * 255];\n}\n</code></pre>\n\n<p>I made some example with it. Check this link: <a href=\"http://jsfiddle.net/sangdol/euSLy/4/\" rel=\"nofollow\">http://jsfiddle.net/sangdol/euSLy/4/</a></p>\n\n<p>And this is the <code>increase_brightness()</code> function:</p>\n\n<pre><code>function increase_brightness(rgbcode, percent) {\n    var r = parseInt(rgbcode.slice(1, 3), 16),\n        g = parseInt(rgbcode.slice(3, 5), 16),\n        b = parseInt(rgbcode.slice(5, 7), 16),\n        HSL = rgbToHsl(r, g, b),\n        newBrightness = HSL[2] + HSL[2] * (percent / 100), \n        RGB;\n\n    RGB = hslToRgb(HSL[0], HSL[1], newBrightness);\n    rgbcode = '#'\n        + convertToTwoDigitHexCodeFromDecimal(RGB[0])\n        + convertToTwoDigitHexCodeFromDecimal(RGB[1])\n        + convertToTwoDigitHexCodeFromDecimal(RGB[2]);\n\n    return rgbcode;\n}\n\nfunction convertToTwoDigitHexCodeFromDecimal(decimal){\n    var code = Math.round(decimal).toString(16);\n\n    (code.length &gt; 1) || (code = '0' + code);\n    return code;\n}\n</code></pre>\n\n<p>You can pass a negative value as a <code>percent</code> argument to make it darken.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Here is the increaseBrightness function with the RGB->HSL->RGB method. \"amount\" should be in percent.</p>\n\n<p>HSL&lt;->RGB conversion functions taken from <a href=\"http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\" rel=\"nofollow\">http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript</a></p>\n\n<pre><code>function increaseBrightness( color, amount ) {\n    var r = parseInt(color.substr(1, 2), 16);\n    var g = parseInt(color.substr(3, 2), 16);\n    var b = parseInt(color.substr(5, 2), 16);\n    hsl = rgbToHsl( r, g, b );\n    hsl.l += hsl.l + (amount / 100);\n    if( hsl.l &gt; 1 ) hsl.l = 1;\n    rgb = hslToRgb( hsl.h, hsl.s, hsl.l );\n\n    var v = rgb.b | (rgb.g &lt;&lt; 8) | (rgb.r &lt;&lt; 16);\n    return '#' + v.toString(16);\n}\n\nfunction rgbToHsl(r, g, b){\n    r /= 255, g /= 255, b /= 255;\n    var max = Math.max(r, g, b), min = Math.min(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min){\n        h = s = 0; // achromatic\n    }else{\n        var d = max - min;\n        s = l &gt; 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max){\n            case r: h = (g - b) / d + (g &lt; b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return {'h':h, 's':s, 'l':l};\n}\n\nfunction hslToRgb(h, s, l){\n    var r, g, b;\n\n    if(s == 0){\n        r = g = b = l; // achromatic\n    }else{\n        function hue2rgb(p, q, t){\n            if(t &lt; 0) t += 1;\n            if(t &gt; 1) t -= 1;\n            if(t &lt; 1/6) return p + (q - p) * 6 * t;\n            if(t &lt; 1/2) return q;\n            if(t &lt; 2/3) return p + (q - p) * (2/3 - t) * 6;\n            return p;\n        }\n\n        var q = l &lt; 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { 'r':r * 255, 'g':g * 255, 'b':b * 255 };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In case anyone needs it, I converted the color brightness JavaScript code to ASP / VBScript for a project and thought I would share it with you:</p>\n\n<pre class=\"lang-vbs prettyprint-override\"><code>'::Color Brightness (0-100)\n'ex.     ColorBrightness(\"#FF0000\",25)  'Darker\n'ex.     ColorBrightness(\"#FF0000\",50)  'Mid\n'ex.     ColorBrightness(\"#FF0000\",75)  'Lighter\nFunction ColorBrightness(strRGB,intBrite)\n    strRGB = Replace(strRGB,\"#\",\"\")\n\n    r = CInt(\"&amp;h\" &amp; Mid(strRGB,1,2))\n    g = CInt(\"&amp;h\" &amp; Mid(strRGB,3,2))\n    b = CInt(\"&amp;h\" &amp; Mid(strRGB,5,2))\n\n    arrHSL = RGBtoHSL(r, g, b)\n    dblOrigBrite = CDbl(arrHSL(2) * 100)\n\n    arrRGB = HSLtoRGB(arrHSL(0), arrHSL(1), intBrite/100)\n    newRGB = \"#\" &amp; HEXtoDEC(arrRGB(0)) &amp; HEXtoDEC(arrRGB(1)) &amp; HEXtoDEC(arrRGB(2))\n\n    ColorBrightness = newRGB\nEnd Function\n\n\n'::RGB to HSL Function\nFunction RGBtoHSL(r,g,b)\n    r = CDbl(r/255)\n    g = CDbl(g/255)\n    b = CDbl(b/255)\n\n    max = CDbl(MaxCalc(r &amp; \",\" &amp; g &amp; \",\" &amp; b))\n    min = CDbl(MinCalc(r &amp; \",\" &amp; g &amp; \",\" &amp; b))\n\n    h = CDbl((max + min) / 2)\n    s = CDbl((max + min) / 2)\n    l = CDbl((max + min) / 2)\n\n    If max = min Then\n        h = 0\n        s = 0\n    Else\n        d = max - min\n        s = IIf(l &gt; 0.5, d / (2 - max - min), d / (max + min))\n        Select Case CStr(max)\n            Case CStr(r)\n                h = (g - b) / d + (IIf(g &lt; b, 6, 0))\n            Case CStr(g)\n                h = (b - r) / d + 2\n            Case CStr(b)\n                h = (r - g) / d + 4\n        End Select\n        h = h / 6\n    End If\n\n    RGBtoHSL = Split(h &amp; \",\" &amp; s &amp; \",\" &amp; l, \",\")\nEnd Function\n\n\n'::HSL to RGB Function\nFunction HSLtoRGB(h,s,l)\n    If s = 0 Then\n        r = l\n        g = l\n        b = l\n    Else\n        q = IIf(l &lt; 0.5, l * (1 + s), l + s - l * s)\n        p = 2 * l - q\n        r = HUEtoRGB(p, q, h + 1/3)\n        g = HUEtoRGB(p, q, h)\n        b = HUEtoRGB(p, q, h - 1/3)\n    End If\n\n    HSLtoRGB = Split(r * 255 &amp; \",\" &amp; g * 255 &amp; \",\" &amp; b * 255, \",\")\nEnd Function\n\n\n'::Hue to RGB Function\nFunction HUEtoRGB(p,q,t)\n    If CDbl(t) &lt; 0 Then t = t + 1\n    If CDbl(t) &gt; 1 Then t = t - 1\n\n    If CDbl(t) &lt; (1/6) Then\n        HUEtoRGB = p + (q - p) * 6 * t\n        Exit Function\n    End If\n\n    If CDbl(t) &lt; (1/2) Then\n        HUEtoRGB = q\n        Exit Function\n    End If\n\n    If CDbl(t) &lt; (2/3) Then\n        HUEtoRGB = p + (q - p) * (2/3 - t) * 6\n        Exit Function\n    End If\n\n    HUEtoRGB = p\nEnd Function\n\n\n'::Hex to Decimal Function\nFunction HEXtoDEC(d)\n    h = Hex(Round(d,0))\n    h = Right(String(2,\"0\") &amp; h,2)\n    HEXtoDEC = h\nEnd Function\n\n\n'::Max Function\nFunction MaxCalc(valList)\n    valList = Split(valList,\",\")\n    b = 0\n    For v = 0 To UBound(valList)\n        a = valList(v)\n        If CDbl(a) &gt; CDbl(b) Then b = a\n    Next\n    MaxCalc = b\nEnd Function\n\n\n'::Min Function\nFunction MinCalc(valList)\n    valList = Split(valList,\",\")\n    For v = 0 To UBound(valList)\n        a = valList(v)\n        If b = \"\" Then b = a\n        If CDbl(a) &lt; CDbl(b) AND b &lt;&gt; \"\" Then b = a\n    Next\n    MinCalc = b\nEnd Function\n\n\n'::IIf Emulation Function\nFunction IIf(condition,conTrue,conFalse)\n    If (condition) Then\n        IIf = conTrue\n    Else\n        IIf = conFalse\n    End If\nEnd Function\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have a colour value in JS as a string</p>\n\n<pre><code>#ff0000\n</code></pre>\n\n<p>How would I go about programatically calculating a brighter/lighter version of this colour, for example <code>#ff4848</code>, and be able to calculate the brightness via a percentage, e.g.</p>\n\n<pre><code>increase_brightness('#ff0000', 50); // would make it 50% brighter\n</code></pre>\n",
            "last_activity_date": 1408731943,
            "question_id": 6443990,
            "score": 25,
            "tags": [
                "javascript",
                "colors",
                "increment",
                "brightness"
            ],
            "title": "JavaScript Calculate brighter colour"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>If there is another library that is using the $ variable, you can do this:</p>\n\n<pre><code>var $j = jQuery.noConflict();\n$j(\"#datepicker\").datepicker();\n</code></pre>\n\n<p>Also make sure your javascript includes are in the correct order so the jquery core library is defined before the jquery.ui. I've had that cause issues.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>If you think that there is a conflict you can use <code>jQuery.noConflict()</code> in your code. Details are in the <a href=\"http://docs.jquery.com/Using%5FjQuery%5Fwith%5FOther%5FLibraries\">docs</a>.</p>\n\n<blockquote>\n  <p>REFERENCING MAGIC - SHORTCUTS FOR\n  JQUERY</p>\n  \n  <p>If you don't like typing the full\n  \"jQuery\" all the time, there are some\n  alternative shortcuts:</p>\n  \n  <p>Reassign jQuery to another shortcut\n  <code>var $j = jQuery;</code> (This might be the\n  best approach if you wish to use\n  different libraries) Use the following\n  technique, which allows you to use $\n  inside of a block of code without\n  permanently overwriting $:</p>\n</blockquote>\n\n<pre><code>(function($) { /* some code that uses $ */ })(jQuery)\n</code></pre>\n\n<blockquote>\n  <p>Note: If you use this\n  technique, you will not be able to use\n  Prototype methods inside this capsuled\n  function that expect $ to be\n  Prototype's $, so you're making a\n  choice to use only jQuery in that\n  block. Use the argument to the DOM\n  ready event: </p>\n</blockquote>\n\n<pre><code>jQuery(function($) { /*some code that uses $ */ });\n</code></pre>\n\n<blockquote>\n  <p>Note:\n  Again, inside that block you can't use\n  Prototype methods</p>\n</blockquote>\n\n<p>Thats from the end of the docs and might be useful to you</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Have you tried using Firebug to 1) determine that there are no Javascript errors and 2) that the #datepicker element exists on the page?</p>\n\n<p>Most likely there is an error prior to the datepicker call that is preventing the datepicker call from executing.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This error usually appears when you're missing a file from the jQuery UI set. </p>\n\n<p>Double-check that you have all the files, the jQuery UI files as well as the CSS and images, and that they're in the correctly linked file/directory location on your server.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Go for the obvious first: Are you referencing well the jquery-ui.js file? </p>\n\n<p>Try using the network tab of firebug to find if it is loaded, or the Information\\View javascript code of the Web Developer Toolbar.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I just had this issue, and moving the JS references and code towards the bottom of the page before the <code>&lt;/body&gt;</code> tag fixed it for me.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Also check the permissions for the directory you download the files into. For some reason when I downloaded this, by default it was saved in a folder with no access allowed! It took forever to figure out that was the problem, but I just had to change the permission for the directory and it's contents - setting it so EVERYONE = READ ONLY. Works great now.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I struggled with a similar problem for hours. It then turned out that jQuery was included twice, once by the program that I was adding a jQuery function to and once by our in-house debugger.</p>\n",
                    "is_accepted": true,
                    "score": 52
                },
                {
                    "body": "<p>I ran into this problem recently - the issue was that I had included the jQuery UI files in the head tag, but the Telerik library I was using included jQuery at the bottom of the body tag (thus apparently re-initializing jQuery and unloading the UI plugins previously loaded).</p>\n\n<p>The solution was to find out where jQuery was actually being included, and including the jQuery UI scripts after that.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I just ran into a similar issue. When I changed my script reference from self-closing tags (ie, <code>&lt;script src=\"..\" /&gt;</code>) to empty nodes (ie, <code>&lt;script src=\"..\"&gt;&lt;/script&gt;</code>) my errors went away and I could suddenly reference the jQuery UI functions.</p>\n\n<p>At the time, I didn't realize this was just a brain-fart of me not closing it properly to begin with. (I'm posting this simply on the chance that anyone else coming across the thread is having a similar issue.)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>When i use DatePicker, jQuery's UI plugin, in an existing .aspx page I get errors that:</p>\n\n<pre><code>$(\"#datepicker\").datepicker is not a function\n</code></pre>\n\n<p>However, when I copy and paste the same code that creates and uses the datePicker to an HTML file that's also in the same directory as the aspx page, it works flawlessly. This leads me to assume that there are some JS files in the aspx page that's preventing the datePicker or maybe jQuery's UI JS files to load properly.</p>\n\n<p>Can anyone confirm my beliefs or provide any tips on finding the culprit that's interfering with jQuery's UI plugins? </p>\n",
            "last_activity_date": 1382006290,
            "question_id": 1212696,
            "score": 25,
            "tags": [
                "asp.net",
                "javascript",
                "jquery",
                "datepicker"
            ],
            "title": "jQuery UI &quot; $(&quot;#datepicker&quot;).datepicker is not a function&quot;"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The month is zero-based for JavaScript.</p>\n\n<p>Days and years are one-based.</p>\n\n<p>Go figure.</p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>The reason this is so, from the <a href=\"http://en.wikipedia.org/wiki/Brendan_Eich\">creator of JavaScript</a>, is</p>\n\n<blockquote>\n  <p>JS had to \"look like Java\" only less so, be Java's dumb kid brother or boy-hostage sidekick. Plus, I had to be done in ten days or something worse than JS would have happened.</p>\n</blockquote>\n\n<p><a href=\"http://www.jwz.org/blog/2010/10/every-day-i-learn-something-new-and-stupid/#comment-1021\">http://www.jwz.org/blog/2010/10/every-day-i-learn-something-new-and-stupid/#comment-1021</a></p>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>As Eric said, this is due to months being listed as 0-11 range.</p>\n\n<p>This is a common behavior - same is true of Perl results from localtime(), and probably many other languages.</p>\n\n<p>This is likely originally inherited from Unix's localtime() call.\n(do \"man localtime\")</p>\n\n<p>The reason is that days/years are their own integers, while months (as a #) are indexes of an array, which in most languages - especially C where the underlying call is implemented on Unix - starts with 0.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>date1 = new Date();\n//year, month, day [, hrs] [, min] [, sec]\ndate1 = new Date.UTC(date1.getFullYear(),date1.getMonth()+1,date1.getDate(),date1.getHours(),date1.getMinutes(),date1.getSeconds());\n\ndate2 = new Date();\ndate2 = date2.getTime();\n\nalert(date1)\nalert(date2)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I was playing around with Javascript creating a simple countdown clock when I came across this strange behavior:</p>\n\n<pre><code>var a = new Date(), \nnow = a.getTime(),\nthen = Date.UTC(2009,10,31),\ndiff = then - now,\ndaysleft = parseInt(diff/(24*60*60*1000));\nconsole.log(daysleft );\n</code></pre>\n\n<p>The days left is off by 30 days.</p>\n\n<p>What is wrong with this code?</p>\n\n<p>Edit: I changed the variable names to make it more clear. </p>\n",
            "last_activity_date": 1359600919,
            "question_id": 1507619,
            "score": 24,
            "tags": [
                "javascript",
                "datetime"
            ],
            "title": "Javascript Date.UTC() function is off by a month?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Javascript doesn't have integers, only 64-bit floats - and you've ran out of floating-point precision.</p>\n\n<p>See similar issue in Java: <a href=\"http://stackoverflow.com/questions/8907666/why-is-the-double-parsedouble-making-9999999999999999-to-10000000000000000?rq=1\">why is the Double.parseDouble making 9999999999999999 to 10000000000000000?</a></p>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<ol>\n<li><p>JavaScript only has floating point numbers, no integers.</p></li>\n<li><p>Read <a href=\"http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html\"><em>What Every Computer Scientist Should Know About Floating-Point Arithmetic</em></a>.</p>\n\n<p>Summary: floating point numbers include only limited precision, more than 15 digits (or so) and you'll get rounding.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p><code>9999999999999999</code> is treated internally in JavaScript as a floating-point number. It cannot be accurately represented in IEEE 754 double precision as it would require 54 bits of precision (the number of bits is log2(9999999999999999) = 53,150849512... and since fractional bits do not exist, the result must be rouned up) while IEEE 754 provides only 53 bits (1 implict bit + 52 explicitly stored bits of the mantissa) - one bit less. Hence the number simply gets rounded.</p>\n\n<p>Since only one bit is lost in this case, even 54-bit numbers are exactly representable, since they nevertheless contain <code>0</code> in the bit, which gets lost. Odd 54-bit numbers are rounded to the nearest value that happens to be a doubled even 53-bit number given the default unbiased rounding mode of IEEE 754.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Question: Sometimes JavaScript computations seem to yield \"inaccurate\" results, e.g. 0.362*100 yields 36.199999999999996. How can I avoid this?</p>\n\n<p>Answer: Internally JavaScript stores all numbers in double-precision floating-point format, with a 52-bit mantissa and an 11-bit exponent (the IEEE 754 Standard for storing numeric values). This internal representation of numbers may cause unexpected results like the above. Most integers greater than 253 = 9007199254740992 cannot be represented exactly in this format. Likewise, many decimals/fractions, such as 0.362, cannot be represented exactly, leading to the perceived \"inaccuracy\" in the above example. To avoid these \"inaccurate\" results, you might want to round the results to the precision of the data you used.</p>\n\n<p><a href=\"http://www.javascripter.net/faq/accuracy.htm\" rel=\"nofollow\">http://www.javascripter.net/faq/accuracy.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Can any one explain to me why 9999999999999999 is converted to 10000000000000000?</p>\n\n<pre><code>alert(9999999999999999); //10000000000000000\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/Y2Vb2/\">http://jsfiddle.net/Y2Vb2/</a></p>\n",
            "last_activity_date": 1353735398,
            "question_id": 13429451,
            "score": 23,
            "tags": [
                "javascript"
            ],
            "title": "Why is 9999999999999999 converted to 10000000000000000 in JavaScript?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>JavaScript is not allowed to affect the contents of a file input field for security reasons. When it comes to files, if you need anything more robust than the most basic functionality the browser provides, you need to look at something like Flash or Silverlight.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>document.getElementById('your_input_id').value=''\n</code></pre>\n\n<p><strong>Edit:</strong><br />\nThis one doesn't work in IE and opera, but seems to work for firefox, safari and chrome.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>How about removing that node, creating a new one with the same name?</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>U need replace it with new file input.\nHere is how it can be done with jQuery:</p>\n\n<pre><code>var inputFile = $('input[type=field]');\ninputFile.wrap('&lt;div /&gt;');\n</code></pre>\n\n<p>and use this line when you need to clear input field (on some event for example):</p>\n\n<pre><code>inputFile.parent().html( inputFile.parent().html() );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>How about:</p>\n\n<pre><code>input.type = \"text\";\ninput.type = \"file\";\n</code></pre>\n\n<p>I still have to understand why this does <strong>not</strong> work with <strong>webkit</strong>.  </p>\n\n<p>Anyway, this works with IE9>, Firefox and Opera.<br>\nThe situation with webkit is that I seem to be unable to change it back to file.<br>\nWith IE8, the situation is that it throws a security exception.  </p>\n\n<p><strong>Edit:</strong>\nFor webkit, Opera and firefox this works, though:</p>\n\n<pre><code>input.value = '';\n</code></pre>\n\n<p>(check the above answer with this proposal)</p>\n\n<p>I'll see if I can find a nice cleaner way of doing this cross-browser without the need of the GC.</p>\n\n<p><strong>Edit2:</strong></p>\n\n<pre><code>try{\n    inputs[i].value = '';\n    if(inputs[i].value){\n        inputs[i].type = \"text\";\n        inputs[i].type = \"file\";\n    }\n}catch(e){}\n</code></pre>\n\n<p>Works with most browsers. Does not work with IE &lt; 9, that's all.<br>\nTested on firefox 20, chrome 24, opera 12, IE7, IE8, IE9, and IE10.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Setting the value to <code>''</code> does not work in all browsers.</p>\n\n<p>Instead try setting the value to <code>null</code> like so:</p>\n\n<pre><code>document.getElementById('your_input_id').value= null;\n</code></pre>\n\n<p>EDIT:\nI get the very valid security reasons for not allowing JS to set the file input, however it does seem reasonable to provide a simple mechanism for <strong>clearing</strong> already selecting output.  I tried using an empty string but it did not work in all browsers, <code>NULL</code> worked in all the browsers I tried (Opera, Chrome, FF, IE11+ and Safari).</p>\n\n<p>EDIT:\nPlease note that setting to <code>NULL</code> works on all browsers while setting to an empty string did not.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The above answers offer somewhat clumsy solutions for the following reasons:</p>\n\n<ol>\n<li><p>I don't like having to <code>wrap</code> the <code>input</code> first and then getting the html, it is very involved and dirty.</p></li>\n<li><p>Cross browser JS is handy and it seems that in this case there are too many unknowns to reliably use <code>type</code> switching (which, again, is a bit dirty) and setting <code>value</code> to <code>''</code></p></li>\n</ol>\n\n<p>So I offer you my jQuery based solution:</p>\n\n<pre><code>$('#myinput').replaceWith($('#myinput').clone())\n</code></pre>\n\n<p>It does what it says, it replaces the input with a clone of itself. The clone won't have the file selected.</p>\n\n<p>Advantages:</p>\n\n<ol>\n<li>Simple and understandable code</li>\n<li>No clumsy wrapping or type switching</li>\n<li>Cross browser compatibility (correct me if I am wrong here)</li>\n</ol>\n\n<p>Result:\nHappy programmer</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Unfortunately none of the above answers appear to cover all the bases - at least not with my testing with vanilla javascript.</p>\n\n<ul>\n<li><p><code>.value = null</code> appears to work on FireFox, Chome, Opera and IE11 (but <strong>not</strong> IE8/9/10) </p></li>\n<li><p><code>.cloneNode</code> (and <code>.clone()</code> in jQuery) on FireFox appears to copy the <code>.value</code> over, therefore making the clone pointless.</p></li>\n</ul>\n\n<p>So here is the vanilla javascript function I have written that works on FireFox (27 and 28), Chrome (33), IE (8, 9, 10, 11), Opera (17)... these are the only browsers currently available to me to test with.</p>\n\n<pre><code>function clearFileInput(ctrl) {\n  try {\n    ctrl.value = null;\n  } catch(ex) { }\n  if (ctrl.value) {\n    ctrl.parentNode.replaceChild(ctrl.cloneNode(true), ctrl);\n  }\n}\n</code></pre>\n\n<p>The <code>ctrl</code> parameter is the file input itself, so the function would be called as...</p>\n\n<pre><code>clearFileInput(document.getElementById(\"myFileInput\"));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>There's 3 ways to clear file input with javascript:</p>\n\n<ol>\n<li><p><strong>set value property to empty or null.</strong> </p>\n\n<p>Works for IE11+ and other modern browsers.</p></li>\n<li><p><strong>Create an new file input element and replace the old one.</strong></p>\n\n<p>The disadvantage is you will lose event listeners and expando properties.</p></li>\n<li><p><strong>Reset the owner form via form.reset() method.</strong> </p>\n\n<p>To avoid affecting other input elements in the same owner form, we can create an new empty form and append the file input element to this new form and reset it. This way works for all browsers.</p></li>\n</ol>\n\n<p>I wrote a javascript function. <strong>demo:</strong> <a href=\"http://jsbin.com/muhipoye/1/\">http://jsbin.com/muhipoye/1/</a></p>\n\n<pre><code>function clearInputFile(f){\n    if(f.value){\n        try{\n            f.value = ''; //for IE11, latest Chrome/Firefox/Opera...\n        }catch(err){\n        }\n        if(f.value){ //for IE5 ~ IE10\n            var form = document.createElement('form'), ref = f.nextSibling;\n            form.appendChild(f);\n            form.reset();\n            ref.parentNode.insertBefore(f,ref);\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>I want to clear the file input in my form.</p>\n\n<p>I know about setting the sources to the same method... But that method wont erase the selected file path.</p>\n\n<p>Is there a way to clear the path inside the file input?</p>\n\n<p>NOTE: I dont want to reload the page, or reset the form...</p>\n\n<p>NO AJAX...</p>\n\n<p>So, impossible?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1404727550,
            "question_id": 1703228,
            "score": 21,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "how to clear file input with javascript?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You can't really get the real physical dimensions or the actual DPI and even if you could, you can't do anything with them.</p>\n\n<p>This is a pretty long and complex story, so forgive me.</p>\n\n<p>The web and all browsers define 1px as a unit called a CSS pixel.  A CSS pixel is not a real pixel, rather a unit that is deemed to be 1/96th of an inch based on the viewing angle of the device.  This is specified as a <a href=\"http://www.w3.org/TR/css3-values/#reference-pixel\">reference pixel</a>.</p>\n\n<blockquote>\n  <p>The reference pixel is the visual angle of one pixel on a device with\n  a pixel density of 96dpi and a distance from the reader of an arm's\n  length. For a nominal arm's length of 28 inches, the visual angle is\n  therefore about 0.0213 degrees. For reading at arm's length, 1px thus\n  corresponds to about 0.26 mm (1/96 inch).</p>\n</blockquote>\n\n<p>In 0.26mm of space we might have very many real device pixels.</p>\n\n<p>The browser does this mainly for legacy reasons -  most monitors were 96dpi when the web was born - but also for consistency, in the \"old days\" a 22px button on a 15 inch screen at 800x600 would be twice the size of a 22px button on a 15 inch monitor at 1600x1200.  In this case the DPI of the screen is actually 2x (twice the resolution horizontally but in the same physical space).  This is a bad situation for the web and apps, so most operating systems devised many ways to abstract pixel values in to device independent units (DIPS on Android, PT on iOS and the <strong>CSS Pixel on the web</strong>).</p>\n\n<p>The iPhone Safari browser was the first (to my knowledge) to introduce the concept of a viewport.  This was created to enable full desktop style applications to render on a small screen.  The viewport was defined to be 960px wide.  This essentially zoomed the page out 3x (iphone was originally 320px) so 1 CSS pixel is 1/3rd of a physical pixel.  When you defined a viewport though you could get this device to match 1 CSS pixel = 1 real pixel at 163dpi.</p>\n\n<p>By using a viewport where the width is \"device-width\" frees you up from having to set the width of the viewport on a per device basis to the optimal CSS pixel size, the browser just does it for you.</p>\n\n<p>With the introduction of double DPI devices, mobile phone manufacturers didn't want mobile pages to appear 50% smaller so they introduced a concept called devicePixelRatio (first on mobile webkit I believe), this lets them keep 1 CSS pixel to be roughly 1/96th of an inch but let you understand that your assets such as images might need to be twice the size.  If you look at the iPhone series all of their devices say the width of the screen in <a href=\"http://viewportsizes.com/?filter=iphone\">CSS pixels is 320px</a> even though we know this is not true.</p>\n\n<p>Therefore if you made a button to be 22px in CSS space, the representation on the physical screen is 22 * device pixel ratio.  Actually I say this, it is not exactly this because the device pixel ratio is never exact either, phone manufacturers set it to a nice number like 2.0, 3.0 rather than 2.1329857289918....</p>\n\n<p>In summary, CSS pixels are device independent and let us not have to worry about physical sizes of the screens and the display densities etc.</p>\n\n<p>The moral of the story is: Don't worry about understanding the physical pixel size of the screen.  You don't need it.  50px should look roughly the same across all mobile devices it might vary a little, but the CSS Pixel is our device independent way to build consistent documents and UI's</p>\n\n<p>Resources:</p>\n\n<ul>\n<li><a href=\"https://developers.google.com/web/fundamentals/layouts/rwd-fundamentals/set-the-viewport\">https://developers.google.com/web/fundamentals/layouts/rwd-fundamentals/set-the-viewport</a></li>\n<li><a href=\"https://developers.google.com/web/fundamentals/layouts/rwd-fundamentals/size-content-to-the-viewport\">https://developers.google.com/web/fundamentals/layouts/rwd-fundamentals/size-content-to-the-viewport</a></li>\n<li><a href=\"http://viewportsizes.com/\">http://viewportsizes.com/</a></li>\n<li><a href=\"http://www.quirksmode.org/blog/archives/2010/04/a_pixel_is_not.html\">http://www.quirksmode.org/blog/archives/2010/04/a_pixel_is_not.html</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Device_independent_pixel\">http://en.wikipedia.org/wiki/Device_independent_pixel</a></li>\n<li><a href=\"http://www.w3.org/TR/css3-values/#absolute-lengths\">http://www.w3.org/TR/css3-values/#absolute-lengths</a></li>\n<li><a href=\"https://developer.mozilla.org/en/docs/Mozilla/Mobile/Viewport_meta_tag\">https://developer.mozilla.org/en/docs/Mozilla/Mobile/Viewport_meta_tag</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 38
                },
                {
                    "body": "<p><a href=\"http://demos.jquerymobile.com/1.0a2/experiments/api-viewer/docs/width/index.html\" rel=\"nofollow\">JqueryMobile width of element</a></p>\n\n<pre><code>$(window).width();   // returns width of browser viewport\n$(document).width(); // returns width of HTML document\n</code></pre>\n\n<p><a href=\"http://demos.jquerymobile.com/1.0a2/experiments/api-viewer/docs/height/index.html\" rel=\"nofollow\">JqueryMobile Height of element</a></p>\n\n<pre><code>$(window).height();   // returns height of browser viewport\n$(document).height(); // returns height of HTML document\n</code></pre>\n\n<p>Good Luck\nDanny117</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I tackled this problem with one of my web projects <a href=\"http://www.vinodiscover.com\" rel=\"nofollow\">http://www.vinodiscover.com</a> The answer is that you can't know for certain what the physical size is, but you can get an approximation. Using JS and / or CSS, you can find the width and height of the viewport / screen, and the pixel density using media queries. For example: iPhone 5 (326 ppi) = 320px by 568px and a 2.0 pixel density, while a Samsung Galaxy S4 (441ppi) = 360px x 640px and a 3.0 pixel density. Effectively a 1.0 pixel density is around 150 ppi.</p>\n\n<p>Given this, I set my CSS to show 1 column when the width is less than 284px, regardless of pixel density; then two columns between 284px and 568px; then 3 columns above 852px. It's  much more simple then it seems, since the browsers now do the pixel density calculations automatically.</p>\n\n<p><a href=\"http://www.quirksmode.org/blog/archives/2010/04/a_pixel_is_not.html\" rel=\"nofollow\">http://www.quirksmode.org/blog/archives/2010/04/a_pixel_is_not.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I bumped into the following property pair: <code>screenPixelToMillimeterX</code>, <code>screenPixelToMillimeterY</code>, which surprisingly spit out some numbers in latest version Chrome. <a href=\"https://developer.mozilla.org/en/docs/Web/API/SVGSVGElement\" rel=\"nofollow\">https://developer.mozilla.org/en/docs/Web/API/SVGSVGElement</a>. Not sure if it's useful, it can't know anything unless the OS can tell it. Maybe this provides accurate results reasonably across OS's and hardware.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Based on Matt's answer, I made a test:</p>\n\n<pre><code>// on Macbook Pro Retina (2880x1800, 15.4\"), is the calculated diagonal size\n// approximately 15.4? Let's see...\n\nvar svgEl = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\nvar screenWidthMillimeters = svgEl.screenPixelToMillimeterX * 2880;\nvar screenHeightMillimeters = svgEl.screenPixelToMillimeterY * 1800;\nvar screenDiagonalMillimeters = Math.sqrt(Math.pow(screenWidthMillimeters, 2) + Math.pow(screenHeightMillimeters, 2)); // pythagorean theorem\nvar screenDiagonalInches = (screenDiagonalMillimeters / 10 / 2.54); // (mm / 10mm/cm) / 2.54cm/in = in\n\nconsole.log(\"The calculated diagonal of the screen is \"+screenDiagonalInches+\" inches. \\nIs that close to the actual 15.4\\\"?\");\n</code></pre>\n\n<p>This is the output:</p>\n\n<pre><code>The calculated diagonal of the screen is 35.37742738560738 inches. \nIs that close to the actual value of 15.4?\n</code></pre>\n\n<p>Nope.</p>\n\n<p>So there seems to be no way to get real physical values in a web browser yet.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Using the getPPI() function (<a href=\"http://stackoverflow.com/questions/8456455/mobile-web-how-to-get-physical-pixel-size\">Mobile web: how to get physical pixel size?</a>), to obtain a one inch  id use this formula:</p>\n\n<pre><code>var ppi = getPPI();\nvar x   = ppi * devicePixelRatio * screen.pixelDepth / 24;\n$('#Cubo').width (x);\n$('#Cubo').height(x);\n\n&lt;div id=\"Cubo\" style=\"background-color:red;\"&gt;&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>tl;dr\nYou can get that info with WURFL:</p>\n\n<p><a href=\"http://wurfl.sourceforge.net/help_doc.php#display\" rel=\"nofollow\">Device display properties</a></p>\n\n<p>The attributes are called:</p>\n\n<pre><code>resolution_(width|height)\n\nphysical_display_(width|height)\n</code></pre>\n\n<p>Long version:</p>\n\n<p>The best and most reliant strategy to achieve this is to send the <code>user agent string</code> from the browser to a DB like <code>WURFL</code> (or another) up to date DB that can provide the needed information.</p>\n\n<p><a href=\"http://www.w3schools.com/jsref/prop_nav_useragent.asp\" rel=\"nofollow\">User Agent string</a></p>\n\n<p>This is a piece of information that all modern browsers can provide; it exposes information about the device and it's OS. It is just not meaningful enough to your application without the help of a dictionary like <code>WURFL</code>.</p>\n\n<p><a href=\"http://gotoandlearn.com/play.php?id=130\" rel=\"nofollow\">WURFL</a></p>\n\n<p>This is a database commonly used to <em>detect</em> device properties.</p>\n\n<p>With it, you may be able to accurately support most of the popular devices on the market.\nI would post a code demo but one is available with the download on the <code>WURFL</code> site. You can find such a demo on the examples/demo folder that is downloaded with the library.</p>\n\n<p><a href=\"http://wurfl.sourceforge.net/php_index.php\" rel=\"nofollow\">Download WURFL</a></p>\n\n<p>Here is more information and explanation about checking the physical size and resolution:\n<a href=\"http://www.scientiamobile.com/forum/viewtopic.php?f=16&amp;t=286\" rel=\"nofollow\">http://www.scientiamobile.com/forum/viewtopic.php?f=16&amp;t=286</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<h1>Question</h1>\n\n<p>Is there a safe way to get the actually correct screen physical dimensions in Chrome, on Android? If necessary, old versions of Chrome and Android can be left out of scope.</p>\n\n<h2>Prior research</h2>\n\n<p>There are numerous dead-end questions on stackoverflow about getting the actual physical screen dimensions of a device from within javascript (or css). It seems there is no convergence between html api standardization and actual browser implementations in that, not to mention the browser implementation relies on OS api's which in turn rely on hardware providing the right information. </p>\n\n<p>Some prior answers by the way are arcane (year 2011 and the like) in assuming a certain pixel density that prevailed at that time, and therefore useless. Others relate to webkit but Chrome is using blink for a while already, so those are not very relevant too.</p>\n\n<p>I would like to explore the existence of a simple solution by constraining things to only Chrome on Android. </p>\n\n<h2>Note</h2>\n\n<p>This is all about a javascript (or css) solution inside the browser, not a solution for a native app.</p>\n\n<h2>Update:</h2>\n\n<p>Well, I bumped into the following new property pair: <code>screenPixelToMillimeterX</code>, <code>screenPixelToMillimeterY</code>, which spit out some numbers in latest version Chrome, and is documented for IE and Firefox (e.g. <a href=\"https://developer.mozilla.org/en/docs/Web/API/SVGSVGElement\">https://developer.mozilla.org/en/docs/Web/API/SVGSVGElement</a>). Not sure if it's useful, it can't know anything unless the OS can tell.</p>\n",
            "last_activity_date": 1411055227,
            "question_id": 21680629,
            "score": 20,
            "tags": [
                "android",
                "javascript",
                "google-chrome"
            ],
            "title": "Getting the physical screen dimensions / dpi / pixel density in Chrome on Android"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Someone please correct me if I am misinterpreting this information:</p>\n\n<p>According to a <a href=\"http://ejohn.org/blog/accuracy-of-javascript-time/\">post from John Resig</a> regarding the inaccuracy of performance tests across platforms (emphasis mine)</p>\n\n<blockquote>\n  <p>With the system times constantly being rounded down to the last queried time (<strong>each about 15ms apart</strong>) the quality of performance results is seriously compromised.</p>\n</blockquote>\n\n<p>So there is <em>up to</em> a 15ms fudge on either end when comparing to the system time.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>In general, computer programs are highly unreliable when trying to execute things with higher precision than 50ms. The reason for this is that even on an octacore hyperthreaded processor the OS is usually juggling several hundreds of processes and threads, sometimes thousands or more. The OS makes all that multitasking work by scheduling all of them to get a slice of CPU time one after another, meaning they get 'a few milliseconds of time at most to do their thing'.</p>\n\n<p>Implicity this means that if you set a timeout for 1000ms, chances are far from small that the current browser process won't even be running at that point in time, so it's perfectly normal for the browser not to notice until 1005, 1010 or even 1050 milliseconds that it should be executing the given callback.</p>\n\n<p>Usually this is not a problem, it happens, it's rarely of utmost importance. If it is, all operating systems supply kernel level timers that are far <em>more</em> precise than 1ms, and allow a developer to execute code at <em>precisely</em> the correct point in time. Javascript however, as a heavily sandboxed environment, doesn't have access to kernel objects like that, and browsers refrain from using them since it could theoretically allow someone to attack the OS stability from inside a web page, by carefully constructing code that starves other threads by swamping it with a lot of dangerous timers.</p>\n\n<p>As for why the test yields 980 I'm not sure - that would depend on exactly which browser you're using and which JS engine. I can however fully understand if the browser just manually corrects a bit downwards for system load and/or speed, ensuring that \"on average the delay is still about the correct time\" - it would make a lot of sense from the sandboxing principle to just approximate the amount of time required without potentially burdening the rest of the system.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>It's not supposed to be particularly accurate. There are a number of factors limiting how soon the browser can execute the code; quoting from <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window.setTimeout#Notes\">MDN</a>:</p>\n\n<blockquote>\n  <p>In addition to \"clamping\", the timeout can also fire later when the page (or the OS/browser itself) is busy with other tasks.</p>\n</blockquote>\n\n<p>In other words, the way that <code>setTimeout</code> is usually implemented, it is just meant to execute after a given delay, <strong>and</strong> once the browser's thread is free to execute it.</p>\n\n<p>However, different browsers may implement it in different ways. Here are some tests I did:</p>\n\n<pre><code>var date = new Date();\nsetTimeout(function(e) {\n    var currentDate = new Date();\n    console.log(currentDate-date);\n}, 1000);\n\n// Browser Test1 Test2 Test3 Test4\n// Chrome    998  1014   998   998\n// Firefox  1000  1001  1047  1000\n// IE 11    1006  1013  1007  1005\n</code></pre>\n\n<p>Perhaps the &lt; 1000 times from Chrome could be attributed to inaccuracy in the <code>Date</code> type, or perhaps it could be that Chrome uses a different strategy for deciding when to execute the code&mdash;maybe it's trying to fit it into the a nearest time slot, even if the timeout delay hasn't completed yet. </p>\n\n<p>In short, you shouldn't use <code>setTimeout</code> if you expect reliable, consistent, millisecond-scale timing.</p>\n",
                    "is_accepted": true,
                    "score": 13
                }
            ],
            "body": "<p>I got this code over here:</p>\n\n<pre><code>var date = new Date();\nsetTimeout(function(e) {\n    var currentDate = new Date();\n    if(currentDate - date &gt;= 1000) {\n         console.log(currentDate, date);\n         console.log(currentDate-date);\n    }\n    else {\n       console.log(\"It was less than a second!\");\n       console.log(currentDate-date);\n    }\n}, 1000);\n</code></pre>\n\n<p>In my computer, it always executes correctly, with 1000 in the console output. Interestedly in other computer, the same code, the timeout callback starts in less than a second and the difference of <code>currentDate - date</code> is between 980 and 998.</p>\n\n<p>I know the existence of libraries that solve this inaccuracy (for example, <a href=\"https://github.com/mrchimp/Tock\">Tock</a>).</p>\n\n<p>Basically, my question is: <strong>What are the reasons because <code>setTimeout</code> does not fire in the given delay?</strong> Could it be the computer that is too slow and the browser automatically tries to adapt to the slowness and fires the event before?</p>\n\n<p>PS: Here is a screenshot of the code and the results executed in the Chrome JavaScript console:</p>\n\n<p><img src=\"http://i.stack.imgur.com/53GNS.png\" alt=\"Enter image description here\"></p>\n",
            "last_activity_date": 1410218481,
            "question_id": 21097421,
            "score": 20,
            "tags": [
                "javascript",
                "settimeout"
            ],
            "title": "What is the reason JavaScript setTimeout is so inaccurate?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It really doesn't matter. There's no speed benefit to using commas as far as I know.</p>\n\n<p>Just use whatever you prefer :)</p>\n\n<p>This is what <em><a href=\"http://my.safaribooksonline.com/book/programming/javascript/9780596517748/jslint/comma\">JavaScript - The Good Parts</a></em> has to say:</p>\n\n<blockquote>\n  <p>The comma operator can lead to excessively tricky expressions. It can\n  also mask some programming errors.</p>\n  \n  <p>JSLint expects to see the comma used as a separator, but not as an\n  operator (except in the initialization and incrementation parts of the\n  for statement). It does not expect to see elided elements in array\n  literals. Extra commas should not be used. A comma should not appear\n  after the last element of an array literal or object literal because\n  it can be misinterpreted by some browsers.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>It's best to always remain consistent with convention. It's either all semi-colons or all commas, and I'm sure you'd prefer to use semi-colons rather than commas everywhere.</p>\n\n<p>There is no speed gain as well, so there's nothing to worry about.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>No, comma has three meanings.</p>\n\n<ol>\n<li>With variable declartions, it just let you omit the <code>var</code> before each variable.</li>\n<li>With expressions, <em>\"The comma operator evaluates both of its operands (from left to right) and returns the value of the second operand.\"</em></li>\n<li>Separate arguments in function declarations and function calls, but that should be obvious to every programmer.</li>\n</ol>\n\n<p>Example for two;</p>\n\n<pre><code>alert((2,3)); //3\n</code></pre>\n\n<blockquote>\n  <p>Note that the comma in the var statement is not the comma operator, because it doesn't exist within an expression. Rather, it is a special character in var statements to combine multiple of them into one. Practically, that comma behaves almost the same as the comma operator, though.</p>\n</blockquote>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/Comma_Operator?redirectlocale=en-US&amp;redirectslug=JavaScript/Reference/Operators/Special/Comma_Operator\">MDN</a></p>\n\n<p><a href=\"http://stackoverflow.com/q/9579546/601179\">Comma operator(,) Where it can &quot;really&quot; be useful</a></p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>The comma operator is an operator that can be used inside an expression.  It is used to separate out multiple different expressions and has the meaning \"evaluate all of the following expressions, then produce the value of the final expression.\"  For example:</p>\n\n<pre><code>a = 1, b = 2, c = 3\n</code></pre>\n\n<p>means \"evaluate <code>a = 1</code>, then <code>b = 2</code>, then <code>c = 3</code>, then evaluate to the value of the expression <code>c = 3</code>.</p>\n\n<p>The semicolon is not an operator and cannot be used inside an expression.  It is used as part of JavaScript syntax to mark the end of an expression that is being treated as a statement.  For example, you could say</p>\n\n<pre><code>a = 1; b = 2; c = 3;\n</code></pre>\n\n<p>And this would mean \"there are three statements to do in sequence: evaluate the first expression as the first statement, the second expression as the second statement, and the third expression as the third statement.\"</p>\n\n<p>In this regard, the two are not completely interchangeable.  For example, you cannot write</p>\n\n<pre><code>var a = 1, var b = 2;\n</code></pre>\n\n<p>Because <code>var a = 1</code> and <code>var b = 2</code> are statements, not expressions, and thus can't be separated by commas.  You would have to use a semicolon here.  </p>\n\n<p>(A note: you could say</p>\n\n<pre><code>var a = 1, b = 2;\n</code></pre>\n\n<p>because the language specifically permits this use of comma as a part of the syntax of a declaration statement.  Here, comma is not used as an operator.)</p>\n\n<p>Similarly, you can't say</p>\n\n<pre><code>a = (b = 1; c = 2);\n</code></pre>\n\n<p>Because here the right-hand side of the expression must be an expression, not a statement, and <code>;</code> is used to separate statements.  The inner semicolon would have to be a comma instead.  (Then again, this code is pretty awkward and unusual in the first place, so you probably shouldn't do this at all!)</p>\n\n<p>From a stylistic perspective, the comma operator is rarely used and is obscure enough that it might trip up reasonably competent JavaScript coders.  As a result, I would strongly suggest not using it and instead following the established conventions in JavaScript about using semicolons to terminate statements, even if it would be equivalent and syntactically legal to use commas to separate out expressions that are each used as statements.</p>\n\n<p>Hope this helps!</p>\n",
                    "is_accepted": true,
                    "score": 25
                }
            ],
            "body": "<p>Given the following code </p>\n\n<pre><code>var fn = function () {\n    var x = 'x',\n    y = 'y';\n    this.a = 'a',\n    this.b = 'b',\n    this.c = 'c';\n    this.d = 'd',\n    this.e = 'e';   \n}\n</code></pre>\n\n<p>You can see that there is a mix of both.<br>\nWhat would be the benefit of using one or the other?</p>\n\n<p>My understanding is that the semicolon is to end the statement. And comma should be used to string together multiple declarations.</p>\n\n<p>So is it safe to say that with this example then there should only be two semicolon?</p>\n\n<pre><code>var fn = function () {\n    var x = 'x',\n    y = 'y';\n    this.a = 'a',\n    this.b = 'b',\n    this.c = 'c',\n    this.d = 'd',\n    this.e = 'e';   \n}\n</code></pre>\n",
            "last_activity_date": 1363637390,
            "question_id": 15485735,
            "score": 20,
            "tags": [
                "javascript",
                "syntax",
                "comma",
                "semicolon"
            ],
            "title": "Use of commas versus semicolons in JavaScript?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>This works, but does not animate.</p>\n\n<pre><code>$('.btn-navbar').addClass('collapsed');\n$('.nav-collapse').removeClass('in').css('height', '0');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Just to spell out user1040259's solution, add this code to your $(document).ready(function() {}); </p>\n\n<pre><code>    $('.nav').click( function() {\n        $('.btn-navbar').addClass('collapsed');\n        $('.nav-collapse').removeClass('in').css('height', '0');\n    });\n</code></pre>\n\n<p>As they mention, this doesn't animate the move... but it does close the nav bar on item selection</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm assuming you have a line like this defining the nav area, based on Bootstrap examples and all</p>\n\n<pre><code>&lt;div class=\"nav-collapse collapse\" &gt;\n</code></pre>\n\n<p>Simply add the properties as such, like on the MENU button</p>\n\n<pre><code>&lt;div class=\"nav-collapse collapse\" data-toggle=\"collapse\"  data-target=\".nav-collapse\"&gt;\n</code></pre>\n\n<p>I've added to <code>&lt;body&gt;</code> as well, worked.  Can't say I've profiled it or anything, but seems a treat to me...until you click on a random spot of the UI to open the menu, so not so good that.  </p>\n\n<p>DK</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've got it to work with animation!</p>\n\n<p>Menu in html:</p>\n\n<pre><code>&lt;div id=\"nav-main\" class=\"nav-collapse collapse\"&gt;\n     &lt;ul class=\"nav\"&gt;\n         &lt;li&gt;\n             &lt;a href='#somewhere'&gt;Somewhere&lt;/a&gt;\n         &lt;/li&gt;\n     &lt;/ul&gt;\n &lt;/div&gt;\n</code></pre>\n\n<p>Binding click event on all a elements in navigation to collapse menu (Bootstrap collapse plugin):</p>\n\n<pre><code> $(function(){ \n     var navMain = $(\"#nav-main\");\n\n     navMain.on(\"click\", \"a\", null, function () {\n         navMain.collapse('hide');\n     });\n });\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>You cau use </p>\n\n<pre><code>ul.nav {\n    display: none;\n}\n</code></pre>\n\n<p>This will by default close the navbar.\nPlease let me know anybody finds this usefull</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I'm using the mollwe function, although I added 2 improvements:</p>\n\n<p>a) Avoid the dropdown closing if the link clicked is collapsed (including other links)</p>\n\n<p>b) Hide the dropdown too, if you are clicking the visible web content.</p>\n\n<pre><code>jQuery.fn.exists = function() {\n                  return this.length &gt; 0;\n              }\n\n    $(function() {\n                var navMain = $(\".navbar-collapse\");\n                navMain.on(\"click\", \"a\", null, function() {\n                    if ($(this).attr(\"href\") !== \"#\") {\n                        navMain.collapse('hide');\n                    }\n                });\n\n                $(\"#content\").bind(\"click\", function() {\n                     if ($(\".navbar-collapse.navbar-ex1-collapse.in\").exists()) {\n                        navMain.collapse('hide');\n                    }\n                });\n\n            });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Not the newest thread but i searched for a solution for the same Problem and found one (a mix of some others).</p>\n\n<p>I gave the NavButton:</p>\n\n<pre><code>&lt;type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\"&gt; ...\n</code></pre>\n\n<p>an id / Identifier like:</p>\n\n<pre><code> &lt;button id=\"navcop\" type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\"&gt;\n</code></pre>\n\n<p>Not the finest \"Idea\" - but: Works for me!\nNow you can check up the visibility of your button (with jquery) like:</p>\n\n<pre><code> var target = $('#navcop');\n   if(target.is(\":visible\")){\n   $('#navcop').click();\n   }\n</code></pre>\n\n<p>(NOTE: This is just a Code snipped ! I used a \"onclick\" Event on my Nav Links! (Starting a AJAX Reguest.)</p>\n\n<p>The result is: If the Button is \"visible\" it got \"clicked\" ... So: No Bug if you use the \"Fullscreen view\" of Bootstrap (width of over 940px).</p>\n\n<p>Greetings\nRalph</p>\n\n<p>PS: It works fine with IE9, IE10 and Firefox 25. Didnt checked up others - But i can't see a Problem :-)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For those using AngularJS and Angular UI Router with this, here is my solution (using mollwe's toggle).\nWhere \".navbar-main-collapse\" is my \"data-target\".</p>\n\n<p>Create directive:</p>\n\n<pre><code>module.directive('navbarMainCollapse', ['$rootScope', function ($rootScope) {\n    return {\n        restrict: 'C',\n        link: function (scope, element) {\n            //watch for state/route change (Angular UI Router specific)\n            $rootScope.$on('$stateChangeSuccess', function () {\n                if (!element.hasClass('collapse')) {\n                    element.collapse('hide');\n                }\n            });\n        }\n    };\n}]);\n</code></pre>\n\n<p>Use Directive:</p>\n\n<pre><code>&lt;div class=\"collapse navbar-collapse navbar-main-collapse\"&gt;\n    &lt;your menu&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You don't have to add any extra javascript to what's already included with bootstraps collapse option.  Instead simply include data-toggle and data-target selectors on your menu list items just as you do with your navbar-toggle button.  So for your Products menu item it would look like this</p>\n\n<pre><code>&lt;li&gt;&lt;a href=\"#Products\" data-toggle=\"collapse\" data-target=\".navbar-collapse\"&gt;Products&lt;/a&gt;&lt;/li&gt;\n</code></pre>\n\n<p>Then you would need to repeat the data-toggle and data-target selectors for each menu item</p>\n\n<p><strong>EDIT!!!</strong>\nIn order to fix overflow issues and flickering on this fix I'm adding some more code that will fix this and still not have any extra javascript.  Here is the new code:</p>\n\n<pre><code>&lt;li&gt;&lt;a href=\"#products\" class=\"hidden-xs\"&gt;Products&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"#products\" class=\"visible-xs\" data-toggle=\"collapse\" data-target=\".navbar-collapse\"&gt;Products&lt;/a&gt;&lt;/li&gt;\n</code></pre>\n\n<p>Here it is at work <a href=\"http://jsfiddle.net/jaketaylor/84mqazgq/\">http://jsfiddle.net/jaketaylor/84mqazgq/</a></p>\n\n<p>This will make your toggle and target selectors specific to screen size and eliminate glitches on the larger menu.  If anyone is still having issues with glitches please let me know and I'll find a fix. \nThanks</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>I think you are all over engineering..</p>\n\n<pre><code>    $('.navbar-collapse ul li a').click(function(){ \n            $('.navbar-toggle:visible').click();\n    });\n</code></pre>\n\n<p>EDIT: To take care of sub menus, make sure their toggle anchor has the dropdown-toggle class on it.</p>\n\n<pre><code>    $(function () { \n            $('.navbar-collapse ul li a:not(.dropdown-toggle)').click(function () { \n                    $('.navbar-toggle:visible').click(); \n            }); \n    });\n</code></pre>\n\n<p>EDIT 2: Add support for phone touch.</p>\n\n<pre><code>    $(function () {\n            $('.navbar-collapse ul li a:not(.dropdown-toggle)').bind('click touchstart', function () {\n                    $('.navbar-toggle:visible').click();\n            });\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>I really liked Jake Taylor's idea of doing it without additional JavaScript and taking advantage of Bootstrap's collapse toggle.  I found you can fix the \"flickering\" issue present when the menu isn't in collapsed mode by modifying the <code>data-target</code> selector slightly to include the <code>in</code> class.  So it looks like this:</p>\n\n<pre><code>&lt;li&gt;&lt;a href=\"#Products\" data-toggle=\"collapse\" data-target=\".navbar-collapse.in\"&gt;Products&lt;/a&gt;&lt;/li&gt;\n</code></pre>\n\n<p>I didn't test it with nested dropdowns/menus, so YMMV.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If for example your toggle-able icon is visible only for extra small devices, then you could do something like this:</p>\n\n<pre><code>$('[data-toggle=\"offcanvas\"]').click(function () {\n    $('#side-menu').toggleClass('hidden-xs');\n});\n</code></pre>\n\n<p>Clicking [data-toggle=\"offcanvas\"] will add bootstrap's .hidden-xs to my #side-menu which will hide the side-menu content, but will become visible again if you increase the window size.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>On \"PRODUCTS\" click I slide up a white div (as seen in attached).  When in responsive (mobile and tablet), I would like to automaticly close the responsive navbar and only show the white bar. </p>\n\n<p>I tried:</p>\n\n<pre><code>$('.btn-navbar').click();  \n</code></pre>\n\n<p>also tried:</p>\n\n<pre><code>$('.nav-collapse').toggle();\n</code></pre>\n\n<p>And it does work. However in desktop size, it is also called and does something funky to the menu where it shrinks for a second.  </p>\n\n<p>Any ideas?</p>\n\n<p><img src=\"http://i.stack.imgur.com/hgeMT.png\" alt=\"enter image description here\"></p>\n",
            "last_activity_date": 1422959012,
            "question_id": 14203279,
            "score": 20,
            "tags": [
                "javascript",
                "html",
                "css",
                "twitter-bootstrap"
            ],
            "title": "Bootstrap close responsive menu &quot;on click&quot;"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I recommend to not rewrite the prototype (which would impact all places where you could use the autocompleter, not only the following function).<br>\nThis code should work:</p>\n\n<pre><code>var getSource = function () {\n\n    var users = new Backbone.Collection([\n        {\n            first_name: 'primo',\n            last_name: 'ultimo',\n            id: 1\n        },\n        {\n            first_name: 'altro_primo',\n            last_name: 'altro_ultimo',\n            id: 2\n        }\n    ]).models;\n\n    return _.map(users, function (user) {\n        return {\n            id: user.get('id'),\n            full_name: user.get('first_name') + ' ' + user.get('last_name'),\n            // these functions allows Bootstrap typehead to use this item in places where it was expecting a string\n            toString: function () {\n                return JSON.stringify(this);\n            },\n            toLowerCase: function () {\n                return this.full_name.toLowerCase();\n            },\n            indexOf: function (string) {\n                return String.prototype.indexOf.apply(this.full_name, arguments);\n            },\n            replace: function (string) {\n                return String.prototype.replace.apply(this.full_name, arguments);\n            }\n        };\n    });\n};\n\n$('.full_name').typeahead({\n            minLength: 3,\n            source: getSource(),\n            display: 'full_name',\n            updater: function (itemString) {\n                var item = JSON.parse(itemString);\n                $('.id').val(item.id);\n                return item.full_name;\n            }\n});\n</code></pre>\n\n<p>demo: <a href=\"http://jsfiddle.net/hyxMh/48/\">http://jsfiddle.net/hyxMh/48/</a></p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>In addition to @AntoJs answer, here is an ajax version (just 'source' part):</p>\n\n<pre><code>$('.full_name').typeahead({\n    /* ... */\n    source: function(query,process){\n    $.ajax({\n        url: 'your_url_here',\n        data: {term: query, additional_data: 'some_data'},\n        success: function(data){\n            process($.map(data, function(user){\n                return {\n                    id: user.id,\n                    full_name: user.first_name + ' ' + user.last_name,\n                    toString: function () {\n                        return JSON.stringify(this);\n                    },\n                    toLowerCase: function () {\n                        return this.full_name.toLowerCase();\n                    },\n                    indexOf: function (string) {\n                        return String.prototype.indexOf.apply(this.full_name, arguments);\n                    },\n                    replace: function (string) {\n                        return String.prototype.replace.apply(this.full_name, arguments);\n                    }\n                }\n            }));\n        }\n    });\n    },\n/* ... */\n});\n</code></pre>\n\n<p>Btw: @AntoJs - many thanks for your answer!</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I extended the bootstrap-typeahead in order to take an object instead of a string.<br>\nIt works but I would like to know this is the right way to do the things.   </p>\n\n<p>Thanks.</p>\n\n<p>Reference:<br>\n<a href=\"http://twitter.github.com/bootstrap/javascript.html#typeahead\">http://twitter.github.com/bootstrap/javascript.html#typeahead</a>\nhttp://twitter.github.com/bootstrap/assets/js/bootstrap-typeahead.js</p>\n\n<pre><code>_.extend($.fn.typeahead.Constructor.prototype, {\n    render: function (items) {\n        var that = this;\n\n        items = $(items).map(function (i, item) {\n            i = $(that.options.item)\n                .attr('data-value', item[that.options.display])\n                .attr('data-id', item.id);\n            i.find('a').html(that.highlighter(item));\n            return i[0];\n        });\n\n        items.first().addClass('active');\n        this.$menu.html(items);\n        return this;\n    },\n    select: function () {\n        var val = this.$menu.find('.active').attr('data-value'),\n            id = this.$menu.find('.active').attr('data-id');\n        this.$element\n            .val(this.updater(val, id))\n            .change();\n        return this.hide()\n    }\n});\n\nreturn function (element, options) {\n    var getSource = function () {\n            return {\n                id: 2,\n                full_name: 'first_name last_name'\n            };\n    };\n\n    element.typeahead({\n        minLength: 3,\n        source: getSource,\n        display: 'full_name',\n        sorter: function (items) {\n\n            var beginswith = [],\n                caseSensitive = [],\n                caseInsensitive = [],\n                item,\n                itemDisplayed;\n\n            while (item = items.shift()) {\n                itemDisplayed = item[this.options.display];\n                if (!itemDisplayed.toLowerCase().indexOf(this.query.toLowerCase())) {\n                    beginswith.push(item);\n                } else if (~itemDisplayed.indexOf(this.query)) {\n                    caseSensitive.push(item);\n                } else {\n                    caseInsensitive.push(item);\n                }\n            }\n\n            return beginswith.concat(caseSensitive, caseInsensitive);\n        },\n        highlighter: function (item) {\n            var query = this.query.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&amp;');\n\n            return item[this.options.display].replace(new RegExp('(' + query + ')', 'ig'), function ($1, match) {\n                return '&lt;strong&gt;' + match + '&lt;/strong&gt;';\n            });\n        },\n        matcher: function (item) {\n            var value = item[this.options.display];\n\n            return {\n                value: ~value.toLowerCase().indexOf(this.query.toLowerCase()),\n                id: item.id\n            };\n        },\n        updater: function (item, userId) {\n            options.hiddenInputElement.val(userId);\n            return item;\n        }\n    });\n};\n</code></pre>\n",
            "last_activity_date": 1389879331,
            "question_id": 12182799,
            "score": 20,
            "tags": [
                "javascript",
                "jquery",
                "autocomplete",
                "twitter-bootstrap"
            ],
            "title": "Extend the bootstrap-typeahead in order to take an object instead of a string"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>The accepted answer to <a href=\"http://stackoverflow.com/questions/5688122/html5-form-validation-void-form-action-and-execute-jquery-when-all-html5-form-el\">this question</a> appears to be what you're looking for. </p>\n\n<p>Short summary: in the event handler for the submit, call <code>event.preventDefault()</code>.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>You have to submit the form to get the html5 validation to work. There's a way around it to get what you want. Se the code: </p>\n\n<pre><code>&lt;body&gt;\n    &lt;h1&gt;Validation Example&lt;/h1&gt;&lt;br /&gt;\n    &lt;h2&gt;Insert just 1 digit&lt;h2&gt;\n    &lt;form id=\"form\" onsubmit=\"return false\"&gt;\n        &lt;label&gt;Input&lt;input type=\"text\" pattern=\"[0-9]\" id=\"input\" /&gt;&lt;/label&gt; \n        &lt;input type=\"submit\" class=\"hide\" id=\"inputButton\"&gt;         \n    &lt;/form&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>See an example <a href=\"http://jsfiddle.net/Svh3k/25/embedded/result/\" rel=\"nofollow\">here</a> </p>\n\n<p>Note: using form.submit() didn't work for me. So i created a hidden submit button, that triggers on keyup. Don't ask me why. Maybe someone could clarify it. </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>form.submit() doesn't work cause the HTML5 validation is performed before the form submition.\nWhen you click on a submit button, the HTML5 validation is trigerred and then the form is submited if validation was successfull.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Short answer, no, there's no way to 'trigger' the default functionality of the html5 bubble inline before submission of the form, you can <code>checkValidity()</code> on certain inputs, but again doesn't work as you would want. Short of preventing the default if you still want to submit the form once validation is complete, you can still process this style by doing the following:</p>\n\n<p>Note, on forms you don't want the validation css styles to be applied, you can simply add the <code>novalidate</code> attribute to the form.</p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;form name=\"login\" id=\"loginForm\" method=\"POST\"&gt;\n    &lt;input type=\"email\" name=\"username\" placeholder=\"Email\"&gt;\n    &lt;input type=\"password\" name=\"password\" placeholder=\"Password\"&gt;\n    &lt;input type=\"submit\" value=\"LOG IN\" class=\"hero left clearBoth\"&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>If you're not using SCSS, I would highly recommend looking into it, it's much more manageable, easy to write and less convoluted. Note: In the fiddle example, i do have the exact css that this will compile. I've also included a bubble style example.</p>\n\n<p><strong>SCSS:</strong></p>\n\n<pre><code>form:not([novalidate])            {\n  input, textarea                 {\n    &amp;:required                    {background: transparent url('/../../images/icons/red_asterisk.png') no-repeat 98% center;}\n    &amp;:required:valid              {background: transparent url('/../../images/icons/valid.png') no-repeat 98% center; @include box-shadow(0 0 5px #5cd053);border-color: #28921f;}\n    &amp;:not(:focus):valid           {box-shadow: none;border: 1px solid $g4;}\n    &amp;:focus:invalid               {background: transparent url('/../../images/icons/invalid.png') no-repeat 98% center;  @include box-shadow(0 0 5px #d45252); border-color: #b03535}  \n  }\n}\nspan.formHintBubble {position:absolute; background:$g7; margin-top:50px;@include borderRadius(10px); padding:5px 40px 5px 10px; color:white; @include opacity(0.9); @include box-shadow(1px 1px 6px 1px rgba(0,0,0,0.2));\n  &amp;:after {\n     @include triangle(30px, $g7, up); content: \" \"; margin-bottom:27px; left:25px;\n  }\n  .cross {background:black; border:1px solid $g3; @include borderRadius(10px); width:15px; height:15px; color:#fff; display:block; line-height:15px; position:absolute; right:5px; top:50%; margin-top:-7.5px; padding:0; text-align:center; font-size:10px; cursor:pointer;}\n}\n</code></pre>\n\n<p><strong>JAVASCRIPT:</strong></p>\n\n<p>Here, we can do some funky stuff to use the default messages and inherit them inside your own 'bubble' or error message box.</p>\n\n<pre><code>var form    = $('form');\nvar item    = form.find(':invalid').first();\nvar node    = item.get(0);                       \nvar pos     = item.position();                \nvar message = node.validationMessage || 'Invalid value.'; \nvar bubble  = $('&lt;span/&gt;').html('&lt;span class=\"formHintBubble\" style=\"left: ' + pos.left  + 'px; top:' + pos.top + 'px;\"&gt;' + message + '&lt;div class=\"cross\"&gt;X&lt;/div&gt;&lt;/span&gt;').contents();        \nbubble.insertAfter(item); \n</code></pre>\n\n<p><strong>DEMO:</strong> </p>\n\n<p><a href=\"http://jsfiddle.net/shannonhochkins/wJkVS/\" rel=\"nofollow\">http://jsfiddle.net/shannonhochkins/wJkVS/</a></p>\n\n<p>Enjoy and I hope I help others with HTML5 form validation as it's awesome, and it needs to get out there!</p>\n\n<p>Shannon</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>After some research, I've came up with the following code that should be the answer to your question. (At least it worked for me)</p>\n\n<p>Use this piece of code first. The <code>$(document).ready</code> makes sure the code is executed when the form is loaded into the DOM:</p>\n\n<pre><code>$(document).ready(function()\n{\n    $('#theIdOfMyForm').submit(function(event){\n        if(!this.checkValidity())\n        {\n            event.preventDefault();\n        }\n    });\n});\n</code></pre>\n\n<p>Then just call <code>$('#theIdOfMyForm').submit();</code> in your code.</p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>If you actually want to show which field the user had wrong in the form then add the following code after <code>event.preventDefault();</code></p>\n\n<pre><code>$('#theIdOfMyForm :input:visible[required=\"required\"]').each(function()\n{\n    if(!this.validity.valid)\n    {\n        $(this).focus();\n        // break\n        return false;\n    }\n});\n</code></pre>\n\n<p>It will give focus on the first invalid input.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>As stated in the other answers use event.preventDefault() to prevent form submiting.</p>\n\n<p>To check the form before I wrote a little jQuery function you may use (note that the element needs an ID!)</p>\n\n<pre><code>(function( $ ){\n    $.fn.isValid = function() {\n        return document.getElementById(this[0].id).checkValidity();\n    };\n})( jQuery );\n</code></pre>\n\n<p>example usage</p>\n\n<pre><code> $('#submitBtn').click( function(e){\n\n        if( $('#registerForm').isValid() ){\n            // do the request\n        }else{\n            e.preventDefault();\n        }\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Anyone who know how I can trigger the standard HTML5 validation in a form without using a submit button? (JavaScript or jQuery).</p>\n\n<p>I do <strong>not</strong> want to send <code>POST/GET</code> request, only do the validation.</p>\n",
            "last_activity_date": 1406715404,
            "question_id": 7002230,
            "score": 20,
            "tags": [
                "javascript",
                "jquery",
                "forms",
                "html5"
            ],
            "title": "Trigger standard HTML5 validation (form) without using submit button?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Have a look at <a href=\"http://www.danielbaulig.de/socket-ioexpress/\">my primer</a> on exactly this topic.</p>\n\n<p><strong>UPDATE:</strong></p>\n\n<pre><code>var sio = require('socket.io'),\n    app = require('express').createServer();\n\napp.listen(8080);\nsio = sio.listen(app);\n\nsio.on('connection', function (client) {\n  console.log('client connected');\n\n  // send the clients id to the client itself.\n  client.send(client.id);\n\n  client.on('disconnect', function () {\n    console.log('client disconnected');\n  });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>It can be done through the handshake/authorization mechanism.</p>\n\n<pre><code>var cookie = require('cookie');\nio.set('authorization', function (data, accept) {\n    // check if there's a cookie header\n    if (data.headers.cookie) {\n        // if there is, parse the cookie\n        data.cookie = cookie.parse(data.headers.cookie);\n        // note that you will need to use the same key to grad the\n        // session id, as you specified in the Express setup.\n        data.sessionID = data.cookie['express.sid'];\n    } else {\n       // if there isn't, turn down the connection with a message\n       // and leave the function.\n       return accept('No cookie transmitted.', false);\n    }\n    // accept the incoming connection\n    accept(null, true);\n});\n</code></pre>\n\n<p>All the attributes, that are assigned to the data object are now accessible through the handshake attribute of the socket.io connection object.</p>\n\n<pre><code>io.sockets.on('connection', function (socket) {\n    console.log('sessionID ' + socket.handshake.sessionID);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I just had the same problem/question and solved it like this (only client code):</p>\n\n<pre><code>var io = io.connect('localhost');\n\nio.on('connect', function () {\n    console.log(this.socket.sessionid);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Try from your code \nsocket.socket.sessionid\nie.</p>\n\n<pre><code>    var socket = io.connect('http://localhost');\nalert(socket.socket.sessionid);\n  var sendBtn= document.getElementById('btnSend');\n  sendBtn.onclick= function(){\nvar userId=document.getElementById('txt1').value;\nvar userMsg = document.getElementById('txt2').value;\nsocket.emit('sendto',{username: userId, message: userMsg});\n};\n\n  socket.on('news', function (data) {\n    console.log(data);\n    socket.emit('my other event', { my: 'data' });\n  });\n  socket.on('message',function(data){ console.log(data);});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>On socket.io >=1.0, after the connect event has triggered:</p>\n\n<pre><code>var socket = io('localhost');\nvar id = socket.io.engine.id\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>For some reason </p>\n\n<pre><code>socket.on('connect', function() {\n    console.log(socket.io.engine.id);\n}); \n</code></pre>\n\n<p>did not work for me. However</p>\n\n<pre><code>socket.on('connect', function() {\n    console.log(io().id);\n}); \n</code></pre>\n\n<p>did work for me. Hopefully this is helpful for people who also had issues with getting the id. I use Socket IO >= 1.0, by the way.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to get session id of client in my socket.io client.</p>\n\n<p>here is my socket.io client :</p>\n\n<pre><code>var socket = new io.Socket(config.host, {port: config.port, rememberTransport: false});\n    // when connected, clear out display\n    socket.on('connect',function() {\n        console.log('dummy user connected');\n    });\n    socket.on('disconnect',function() {\n        console.log('disconnected');\n    });\n    socket.connect();\n    return socket;\n</code></pre>\n\n<p>I want to get session id of this client , how can i get that ?</p>\n",
            "last_activity_date": 1426081850,
            "question_id": 6979992,
            "score": 20,
            "tags": [
                "javascript",
                "socket.io"
            ],
            "title": "how to get session id of socket.io client in Client"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><a href=\"http://jsfiddle.net/bdgNZ/2/\"><strong>Example on jsFiddle</strong></a></p>\n\n<pre><code>var str = \"Hello\";\nvar bytes = [];\n\nfor (var i = 0; i &lt; str.length; ++i)\n{\n    bytes.push(str.charCodeAt(i));\n}\n\nalert(bytes); // 72,0,101,0,108,0,108,0,111,0\n</code></pre>\n\n<p>This matches the sample on your comment. It's actually the same code adding <code>0</code> after each character.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Here is the same function that @BrunoLM posted converted to a String prototype function:</p>\n\n<pre><code>String.prototype.getBytes = function () {\n  var bytes = [];\n  for (var i = 0; i &lt; this.length; ++i) {\n    bytes.push(this.charCodeAt(i));\n  }\n  return bytes;\n};\n</code></pre>\n\n<p>If you define the function as such, then you can call the .getBytes() method on any string:</p>\n\n<pre><code>var str = \"Hello World!\";\nvar bytes = str.getBytes();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If you are using <a href=\"http://underscorejs.org/\" rel=\"nofollow\">underscore.js</a>, you can simplify the topvoted answer to this oneliner:</p>\n\n<pre><code>var bytes = _.map(str.split(''), function(c) {return c.charCodeAt(0)});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I suppose C# and Java produce equal byte arrays. If you have non-ASCII characters, it's not enough to add an additional 0. My example contains a few special characters:</p>\n\n<pre><code>var str = \"Hell \u00f6 \u20ac \u03a9 \ud834\udd1e\";\nvar bytes = [];\nvar charCode;\n\nfor (var i = 0; i &lt; str.length; ++i)\n{\n    charCode = str.charCodeAt(i);\n    bytes.push((charCode &amp; 0xFF00) &gt;&gt; 8);\n    bytes.push(charCode &amp; 0xFF);\n}\n\nalert(bytes.join(' '));\n// 0 72 0 101 0 108 0 108 0 32 0 246 0 32 32 172 0 32 3 169 0 32 216 52 221 30\n</code></pre>\n\n<p>I don't know if C# places BOM (Byte Order Marks), but if using UTF-16, Java <code>String.getBytes</code> adds following bytes: 254 255.</p>\n\n<pre><code>String s = \"Hell \u00f6 \u20ac \u03a9 \";\n// now add a character outside the BMP (Basic Multilingual Plane)\n// we take the violin-symbol (U+1D11E) MUSICAL SYMBOL G CLEF\ns += new String(Character.toChars(0x1D11E));\n// surrogate codepoints are: d834, dd1e, so one could also write \"\\ud834\\udd1e\"\n\nbyte[] bytes = s.getBytes(\"UTF-16\");\nfor (byte aByte : bytes) {\n    System.out.print((0xFF &amp; aByte) + \" \");\n}\n// 254 255 0 72 0 101 0 108 0 108 0 32 0 246 0 32 32 172 0 32 3 169 0 32 216 52 221 30\n</code></pre>\n\n<p><strong>Edit:</strong></p>\n\n<p>Added a special character (U+1D11E) MUSICAL SYMBOL G CLEF (outside BPM, so taking not only 2 bytes in UTF-16, but 4.</p>\n\n<p>Current JavaScript versions use \"UCS-2\" internally, so this symbol takes the space of 2 normal characters.</p>\n\n<p>I'm not sure but when using <code>charCodeAt</code> it seems we get exactly the surrogate codepoints also used in UTF-16, so non-BPM characters are handled correctly.</p>\n\n<p>This problem is absolutely non-trivial. It might depend on the used JavaScript versions and engines. So if you want reliable solutions, you should have a look at:</p>\n\n<ul>\n<li><a href=\"https://github.com/koichik/node-codepoint/\">https://github.com/koichik/node-codepoint/</a></li>\n<li><a href=\"http://mathiasbynens.be/notes/javascript-escapes\">http://mathiasbynens.be/notes/javascript-escapes</a></li>\n<li>Mozilla Developer Network: charCodeAt</li>\n<li>BigEndian vs. LittleEndian</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The best solution I've come up with at on the spot (though most likely crude) would be:</p>\n\n<pre><code>String.prototype.getBytes = function() {\n    var bytes = [];\n    for (var i = 0; i &lt; this.length; i++) {\n        var charCode = this.charCodeAt(i);\n        var cLen = Math.ceil(Math.log(charCode)/Math.log(256));\n        for (var j = 0; j &lt; cLen; j++) {\n            bytes.push((charCode &lt;&lt; (j*8)) &amp; 0xFF);\n        }\n    }\n    return bytes;\n}\n</code></pre>\n\n<p>Though I notice this question has been here for over a year.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You don't need underscore, just use built-in map:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var string = 'Hello World!';\r\n\r\ndocument.write(string.split('').map(function(c) { return c.charCodeAt(); }));</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can I convert a string in bytearray using Javascript. Output should be eqivalent of the below C# code.</p>\n\n<pre><code>UnicodeEncoding encoding = new UnicodeEncoding();\nbyte[] bytes = encoding.GetBytes(AnyString);\n</code></pre>\n\n<p>As UnicodeEncoding is by default of UTF-16 with Little-Endianness.</p>\n\n<p><strong>Edit:</strong> I have a requirement to match the bytearray generated client side with the one genearated at server side using the above C# code.</p>\n",
            "last_activity_date": 1417661784,
            "question_id": 6226189,
            "score": 20,
            "tags": [
                "javascript"
            ],
            "title": "How to convert a String to Bytearray"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>No need for jQuery nor regex</p>\n\n<p><code>str = str.substring(0,str.length-2)+otherchar</code></p>\n\n<p>to replace last char in a string</p>\n\n<pre><code>var pos = str.lastIndexOf('_');\nstr = str.substring(0,pos) + otherchar + str.substring(pos+1)\n</code></pre>\n\n<p>to replace last underscore </p>\n\n<p>or use one of the regular expressions you will get in a minute from someone :)</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>You don't need jQuery, just a regular expression.</p>\n\n<p>This will remove the last underscore:</p>\n\n<pre><code>var str = 'a_b_c';\nstr = str.replace(/_([^_]*)$/,'$1'); //a_bc\n</code></pre>\n\n<p>This will replace it with the contents of the variable <code>replacement</code>:</p>\n\n<pre><code>var str = 'a_b_c', replacement = '!';\nstr = str.replace(/_([^_]*)$/,replacement+'$1'); //a_b!c\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>Reverse the string, replace the char, reverse the string. </p>\n\n<p>Here is a post for reversing a string in javascript:  <a href=\"http://stackoverflow.com/questions/958908/how-do-you-reverse-a-string-in-place-in-javascript\">How do you reverse a string in place in JavaScript?</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there an easy way in jQuery to replace the last occurence of an '_' (underscore) in a given string?</p>\n",
            "last_activity_date": 1407503994,
            "question_id": 5497318,
            "score": 20,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Replace last occurence of character in string"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Depending on your demands and targeted users, you may be interested in the touch JS APIs available (at least) on mobile Safari and Chrome. Check <a href=\"http://backtothecode.blogspot.com/2009/10/javascript-touch-and-gesture-events.html\" rel=\"nofollow\">http://backtothecode.blogspot.com/2009/10/javascript-touch-and-gesture-events.html</a>, for a quick (perhaps a bit dated) intro. I haven't really used these extensively (only targeting iPhone, for instance) but I've been very happy with the results I've gotten so far.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<blockquote>\n  <p>Is there a preferred alternative or best practice for handling OnMouseOver javascript events on touch devices?</p>\n</blockquote>\n\n<p>The short answer is no.</p>\n\n<p>Device-specific events don't have a 1:1 mapping to events from other devices. There is no proper equivalent of 'hovering' when using Touch.</p>\n\n<p>Mouse events (<em>mouseover</em>, <em>mouseout</em>, <em>mousedown</em>, <em>mouseup</em>, <em>mousemove</em>, etc) are specific to the mouse input device. The keyboard has <em>keydown</em>, <em>keypress</em> and <em>keyup</em>. Touch has <em>touchstart</em>, <em>touchmove</em>, <em>touchend</em> and <em>touchcancel</em>. Webkit on the iPhone/iPad/etc has additional <em>gesture start/move/end</em> events that are Apple-specific.</p>\n\n<p>Higher-level, generic events such as <em>focus</em>, <em>blur</em>, <em>click</em>, <em>submit</em>, etc can be triggered by one of these events. A <em>click</em> event, for example, can be triggered using a mouse, touch or keyboard event. (<em>click</em>, btw, is an event with an inappropriate name, which should more properly be called <em>action</em> but because of its Mouse history is still called <em>click</em>).</p>\n\n<p>The preferred (or 'One Web') approach is using the Mouse events for mouse specific things where you can't avoid them and and sticking to the generic events for everything else.</p>\n\n<p>Depending on the WebKit build and the flags used to build it you can trigger <em>some Mouse events</em> on <em>some Touch interfaces</em> in <em>some special cases</em>, but you really don't want to build your UI on that because the only reason these cases exist is to allow mobile-Webkit to get traction in the market.</p>\n\n<p>Touch Events are also inconsistent across platforms. Take a look at ppk's work for some reference if you're doing any mobile/touch stuff, <a href=\"http://quirksmode.org/mobile/tableTouch.html\">http://quirksmode.org/mobile/tableTouch.html</a></p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>The onmouseover/onmouseout javascript events would translate to the touchenter/touchleave touch events, the problem is these events are just starting to being implemented in browsers (they are part of a <a href=\"http://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html#the-touchenter-event\" rel=\"nofollow\">W3C draft</a>), currently only firefox <a href=\"https://developer.mozilla.org/en/DOM/TouchEvent#touchenter\" rel=\"nofollow\">support it</a>, so if you are using webkit you'll have to wait for it, or implement your onmouseover feature using touchmove event and looking at the coordinates and to see if they overlap with the coordinates of your html element.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Is there a preferred alternative or best practice for handling OnMouseOver javascript events on touch devices?  All I can think is to convert all events to OnMouseClick.  Unfortunately this muddles the differences between events triggered by hovering the cursor and events triggered by clicking the cursor.  </p>\n\n<p>Are there any alternatives, or work arounds, that are less disruptive to the UX of a webpage that will be used with both mouse devices and touch devices?</p>\n",
            "last_activity_date": 1328116080,
            "question_id": 4550427,
            "score": 20,
            "tags": [
                "javascript",
                "touch"
            ],
            "title": "Prefered Alternative to OnMouseOver for touch"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<pre><code>var a = [ {'id': 1, 'name': 'jake' }, {'id':4, 'name': 'jenny'} ];\nvar b = [ {'id': 1, 'name': 'jake' }, {'id': 9, 'name': 'nick'} ];\n</code></pre>\n\n<p>Working function:</p>\n\n<pre><code> function intersection(a,b){\n  var c=[];\n   for(m in a){\n      for(n in b){\n         if((a[m].id==a[n].id)&amp;&amp;(a[m].name==b[n].name))\n                 c.push(a[m]);          \n      }}\n    return c;\n  }\nconsole.log(intersection(a,b));\n</code></pre>\n\n<p>I have also tried code in jQuery specially after Pointy's suggestion. Compare has to be customizable as per the structure of JSON object.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\njQuery(document).ready(function(){\n    var a = [ {'id': 1, 'name': 'jake' }, {'id':4, 'name': 'jenny'} ];\n    var b = [ {'id': 1, 'name': 'jake' }, {'id': 9, 'name': 'nick'} ];\n    var c=[];\n    jQuery.each(a, function(ka,va) {\n       jQuery.each(b, function(kb,vb) {      \n                if(compare(va,vb))\n                    c.push(va); \n     });   \n    });\n     console.log(c);  \n});\nfunction compare(a,b){\n  if(a.id==b.id&amp;&amp;a.name==b.name)\n     return true;\n  else return false;\n}\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can create another function based on underscore's function. You only have to change one line of code from the original function:</p>\n\n<pre><code>_.intersectionObjects = _.intersect = function(array) {\n    var slice = Array.prototype.slice; // added this line as a utility\n    var rest = slice.call(arguments, 1);\n    return _.filter(_.uniq(array), function(item) {\n      return _.every(rest, function(other) {\n        //return _.indexOf(other, item) &gt;= 0;\n        return _.any(other, function(element) { return _.isEqual(element, item); });\n      });\n    });\n  };\n</code></pre>\n\n<p>In this case you'd now be using underscore's isEqual() method instead of JavaScript's equality comparer. I tried it with your example and it worked. Here is an excerpt from underscore's documentation regarding the isEqual function:</p>\n\n<pre><code>_.isEqual(object, other) \nPerforms an optimized deep comparison between the two objects, to determine if they should be considered equal.\n</code></pre>\n\n<p>You can find the documentation here: <a href=\"http://documentcloud.github.com/underscore/#isEqual\">http://documentcloud.github.com/underscore/#isEqual</a></p>\n\n<p>I put up the code on jsFiddle so you can test and confirm it: <a href=\"http://jsfiddle.net/luisperezphd/jrJxT/\">http://jsfiddle.net/luisperezphd/jrJxT/</a></p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>Technically, it does work on objects, but you need to be careful of reference equality.</p>\n\n<pre><code>var jake = {'id': 1, 'name': 'jake' },\n    jenny = {'id':4, 'name': 'jenny'},\n    nick =  {'id': 9, 'name': 'nick'};\nvar a = [jake, jenny]\nvar b = [jake, nick];\n\n_.intersection(a, b);\n// is\n[jake]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The array methods in underscore are very powerful, you should only need a few lines to accomplish what you want to do:</p>\n\n<pre><code>var a = [ {'id': 1, 'name': 'jake' }, {'id':4, 'name': 'jenny'} ];\nvar b = [ {'id': 1, 'name': 'jake' }, {'id': 9, 'name': 'nick'} ];\n\nvar result = _(a).chain().map(function(ea) {\n    return _.find(b, function(eb) {return ea.id == eb.id;});\n}).compact().value();\n</code></pre>\n\n<p>If you have large arrays you can get rid of the <code>compact()</code> call with one additional line:</p>\n\n<pre><code>var result = [];\n_.each(a, function(ea) {\n    var entry = _.find(b, function(eb) {return ea.id == eb.id;});\n    if (entry) result.push(entry);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here is an alternative algorithm that should be flexible and perform better. One of those improvements is that you can specify your own comparison function so in your case you can just compare the id if it's a unique identifier.</p>\n\n<pre><code>function intersectionObjects2(a, b, areEqualFunction) {\n    var Result = [];\n\n    for(var i = 0; i &lt; a.length; i++) {\n        var aElement = a[i];\n        var existsInB = _.any(b, function(bElement) { return areEqualFunction(bElement, aElement); });\n        if(existsInB) {\n            Result.push(aElement);\n        }\n    }\n\n    return Result;\n}\n\nfunction intersectionObjects() {\n    var Results = arguments[0];\n    var LastArgument = arguments[arguments.length - 1];\n    var ArrayCount = arguments.length;\n    var areEqualFunction = _.isEqual;\n\n    if(typeof LastArgument === \"function\") {\n        areEqualFunction = LastArgument;\n        ArrayCount--;\n    }\n\n    for(var i = 1; i &lt; ArrayCount ; i++) {\n        var array = arguments[i];\n        Results = intersectionObjects2(Results, array, areEqualFunction);\n        if(Results.length === 0) break;\n    }\n    return Results;\n}\n</code></pre>\n\n<p>You can use it like this:</p>\n\n<pre><code>var a = [ {'id': 1, 'name': 'jake' }, {'id':4, 'name': 'jenny'} ];\nvar b = [ {'id': 1, 'name': 'jake' }, {'id': 9, 'name': 'nick'} ];\n\nvar result = intersectionObjects(a, b, function(item1, item2) {\n    return item1.id === item2.id;\n});\n</code></pre>\n\n<p>Or you can leave out the function and it will use underscores _.isEqual() function, like so:</p>\n\n<pre><code>var result = intersectionObjects(a, b);\n</code></pre>\n\n<p>You can find it on jsFiddle here: <a href=\"http://jsfiddle.net/luisperezphd/Tft23/\">http://jsfiddle.net/luisperezphd/Tft23/</a></p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I'd like to share my <strong>general</strong> solution for those cases.</p>\n\n<p>I added a general function to underscore, using mixin, which performs a binary 'array' operation on two collections, according to a given Hash function:</p>\n\n<pre><code>_.mixin({\n    collectionOperation: function(arr1, arr2, hash, action) {\n        var iArr1 = _(arr1).indexBy(hash)\n            , iArr2 = _(arr2).indexBy(hash);\n        return action(_(iArr1).keys(), _(iArr2).keys()).map(function (id) {\n            return iArr1[id] || iArr2[id];\n        });\n    }\n});\n</code></pre>\n\n<p>Usage example:</p>\n\n<pre><code>_([{id:1,v:'q'},{id:2,v:'p'}]).collectionOperation([{id:3,v:'pq'}], 'id', _.union )\n</code></pre>\n\n<p>Note that <em>'id'</em> may be replaced with a function.</p>\n\n<p>I believe this solution is O(n+m).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>var a = {a:'a1',b:'b1'},\n    b = {a:'a2',b:'b2',c:'c2'};\n\n_.pick(a,_.intersection(_.keys(a),_.keys(b)));\n\n// {a:'a1',b:'b1'}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<pre><code>_.intersection([], [])\n</code></pre>\n\n<p>only works with primitive types, right?</p>\n\n<p>It doesn't work with objects.  How can I make it work with objects (maybe by checking the \"Id\" field)?</p>\n\n<pre><code>var a = [ {'id': 1, 'name': 'jake' }, {'id':4, 'name': 'jenny'} ]\nvar b = [ {'id': 1, 'name': 'jake' }, {'id': 9, 'name': 'nick'} ]\n</code></pre>\n\n<p>In this example, the result should be: </p>\n\n<pre><code>_.intersection(a, b);\n</code></pre>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>[ {'id': 1, 'name': 'jake' } ];</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n",
            "last_activity_date": 1387359524,
            "question_id": 8672383,
            "score": 19,
            "tags": [
                "javascript",
                "underscore.js"
            ],
            "title": "How to use underscore&#39;s &quot;intersection&quot; on objects?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You cannot send objects to web workers, only strings. So you should use <code>JSON.parse</code> and <code>JSON.stringify</code> to convert objects to and from strings.  Which means that the methods for the objects you send to your web worker will be removed/unavailable, and you will need to provide the necessary methods to the objects on the web worker's side of the environment.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>As you suspected objects with functions cannot be posted. The same goes for objects with recursive references, but this has changed in some browsers lately. Instead of risking doing manual and costly redundant serialization for every post you can perform a test at the beginning of your script to determine which functions to use for sending/receiving data.</p>\n\n<p>I've had the same problem and solved it by moving almost all code into the worker and just keeping a renderer (wrapping the 2d context renderer) in the main thread. In the worker I serialize the different draw calls meant for the canvas into just numbers in an (typed) array. This array is then posted to the main thread.</p>\n\n<p>So for instance when I want to draw an image I invoke the <code>drawImage()</code> method on my worker renderer instance in the worker. The call is translated into something like <code>[13,1,50,40]</code> which corresponds to the draw method enum, image unique id and its xy coordinates. Multiple calls are buffered and put in the same array. At the end of the update loop the array is posted to the main thread. The receiving main renderer instance parses the array and perform the appropriate draw calls.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The real problem with object and webworkers is with the methods of that objects. A object should not have methods just properties.</p>\n\n<p>Ex:</p>\n\n<pre><code>var myClass = function(){\n    this.a = 5;\n    this.myMethod = function(){}\n}\nvar notParseableObject = new myClass();\n\n\nvar myClass2 = function(){\n    this.a = 5;\n}\nvar parseableObject = new myClass2();\n</code></pre>\n\n<p>The first wont work (with the mentioned error message) with postMessage and the second will work.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>take a look at the <strong>vkThread</strong> plugin</p>\n\n<p><a href=\"http://www.eslinstructor.net/vkthread/\" rel=\"nofollow\">http://www.eslinstructor.net/vkthread/</a></p>\n\n<p>it can pass function to a worker, including function with context ( object's method ). It can also pass functions with dependencies, anonymous functions and lambdas. </p>\n\n<p>--Vadim</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I recently encountered this same problem when using web workers. Anything I passed to my worker kept all its properties but mysteriously lost all its methods.</p>\n\n<p>You will have to define the methods in the web worker script itself. One workaround is to <code>importScripts</code> the class definition and manually set the <code>__proto__</code> property of anything you receive. In my case I wanted to pass a <code>grid</code> object, defined in <code>grid.js</code> (yup, I was working on 2048), and did it like so: </p>\n\n<pre><code>importScripts('grid.js')\n\nonMessage = function(e) {\n  e.data.grid.__proto__ = Grid.prototype;\n  ...\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to pass an object to a web worker through the postMessage function.<br>\nThis object is a square that has a couple of functions to draw himself on a canvas and some other things.  The web worker mus return an array of this objects.<br>\nThe problem is that when I call the postMessage function with this object, I get an this error:</p>\n\n<pre><code>Uncaught Error: DATA_CLONE_ERR: DOM Exception 25\n</code></pre>\n\n<p>I get this both sending the object to the worker and the other way arround.<br>\nI think the error is because javascript must serialize the object, but can't do it because the object has functions built-in.</p>\n\n<p>Does anyone ever had a similar problem? Do you know some workarround to this?<br>\nThanks in advance.</p>\n",
            "last_activity_date": 1397989639,
            "question_id": 7704323,
            "score": 19,
            "tags": [
                "javascript",
                "web-worker"
            ],
            "title": "Passing objects to a web worker"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>If I understand your requirement correctly you want Javascript code in your views to have access to the named routes. If so, then one simple way to do this is to render your Javascript code through a template (ERB, Haml, etc) and then to expand the routes something like the following:</p>\n\n<p><strong>ERB</strong>:</p>\n\n<pre><code>&lt;script&gt;\n\n  $.get('&lt;%= some_named_route_path %&gt;', function(data) {\n\n  });\n\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>Haml</strong>:</p>\n\n<pre><code>:javascript\n\n  $.get('#{ some_named_route_path }', function(data) {\n\n  });\n</code></pre>\n\n<p>UPDATE: Adding suggestions for <code>public/javascripts/</code> case</p>\n\n<p>Accessing named routes from the public folder is a bit trickier but there at least 2 ways that come to mind, neither of which is entirely satisfactory but, one or either of which might suit your application</p>\n\n<ol>\n<li>Create javascript templates in (say) <code>lib/javascripts</code> using ERB named like <code>'*.js.erb'</code> and a <code>rake</code> task to expand those templates into <code>public/javascript</code>s before deploying (say as a step in your Capistrano recipe for example). Downside of that is that your changes are not made available live on the site until the templates are expanded and you might not get the right syntax highlighting of your javascript with an <code>.erb</code> extension file</li>\n<li>Create per-view javascript helper functions in a <code>content_for :head</code> block which expand the named routes and make those available to code from your public javascript files. If you're careful with namespacing and conventions this might work out well. The downside is that the code calling these javascript helpers is decoupled from the code that defines them which could be confusing for maintainers or prone to abuse.</li>\n</ol>\n\n<p>In some view:</p>\n\n<pre><code>&lt;% content_for :head do %&gt;\n  &lt;script&gt;\n    SomeNameSpace.helper_to_some_named_route = function() {\n      return '%&lt;= some_named_route_path %&gt;\n    };\n  &lt;/script&gt;\n&lt;% end %&gt;\n</code></pre>\n\n<p>Then in <code>public/application.js</code> (say)</p>\n\n<pre><code>$.get(SomeNameSpace.helper_to_some_named_route(), function(data) {\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>See <a href=\"http://tore.darell.no/pages/javascript_routes\" rel=\"nofollow\">http://tore.darell.no/pages/javascript_routes</a>:</p>\n\n<blockquote>\n  <p>JavascriptRoutes converts your Rails routes into JavaScript. You can then access (generate) them in the browser (or any other JS environment). It supports both normal and named routes, and creates helper functions for the latter.</p>\n</blockquote>\n\n<p><strong>Update</strong>: It looks as though someone has forked this if you prefer jQuery: <a href=\"https://github.com/ajnsit/javascript_routes\" rel=\"nofollow\">https://github.com/ajnsit/javascript_routes</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I was researching this question for a while and didn't found any implementation compatible with Rails 3. </p>\n\n<p>So decided to write my own:</p>\n\n<p><a href=\"https://github.com/railsware/js-routes\">https://github.com/railsware/js-routes</a></p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>bjg really answered this, but I thought I'd extract the relevant part and amplify with an example.</p>\n\n<p>You simply provide your view a string variable whose value is a named Rails path, and then use that value in the Javascript of your form.  An example that illustrates how a controller method can specify the path for another method, to be opened by the script on the press of a button:</p>\n\n<p>File <code>config/routes.rb</code>:</p>\n\n<pre><code>...\nresource :foo, :only =&gt; [:show, :reset]\n...\nmatch 'foo_reset_path' =&gt; 'foo#reset'\n</code></pre>\n\n<p>Commanding <code>rake routes</code> will now produce, among other output, this:</p>\n\n<pre><code>foo             GET  /foo(.:format)            foo#show\nfoo_reset_path       /foo_reset_path(.:format) foo#reset\n</code></pre>\n\n<p><code>foo_reset_path</code> is what we're going to use here, but you can of course use this method with any named Rails path.</p>\n\n<p>File <code>app/controllers/foo_controller.rb</code>:</p>\n\n<pre><code>...\ndef show\n  @reset_path = \"foo_reset_path\" # simply the string you'd use in the\n                                 # Rails code for opening the path\n  ...\nend\n...\ndef reset\n  ... # reset some variables to their default values\n  redirect_to foo_path # causes the show method to be called, and the HTML\n                       # page to be redisplayed\nend\n</code></pre>\n\n<p>File <code>app/views/foo/show.html.erb</code>:</p>\n\n<pre><code>...\n&lt;input type=\"hidden\" id=\"reset_path\" name=\"reset_path\" value=\"&lt;%= @reset_path %&gt;\"&gt;\n...\n&lt;script&gt;\n$(document).ready(function() {\n    ...\n    /* Hang functionality on the \"Reset form\" button. */\n    $('#reset_button').click(function () {\n        var reset_path = $('#reset_path').val();\n        window.open(reset_path, \"_self\")\n    });\n    ...\n})\n&lt;/script&gt;\n</code></pre>\n\n<p>I'm using JQuery here, but the basic idea should be clear.  The script adds a hook to the button element whose id is <code>reset_button</code>, so that clicking on the button causes the <code>reset</code> method of <code>foo_controller</code> to be called.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>kishore I think this is the simpliest way, just call:</p>\n\n<blockquote>\n  <p>Rails.application.routes.url_helpers.*_path</p>\n</blockquote>\n\n<p>So, if you have in your routes.rb, let's say:</p>\n\n<blockquote>\n  <p>resources :users</p>\n</blockquote>\n\n<p>then you want to call the index action from a javascript file, you do:</p>\n\n<pre><code>$.get('&lt;%= Rails.application.routes.url_helpers.users_path %&gt;', function(data){ ...\n</code></pre>\n\n<p>Take into account that the js file should have a .erb extension (or *.js.erb) so rails knows that must be preprocessed. Otherwise, the file will be served as is.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>What I did based on Teemu's great answer:</p>\n\n<p>In your controller:</p>\n\n<pre><code>def show\n  @section = Section.find(params[:id])\n  respond_to do |format|\n    format.html\n    format.json { render json: @section}\n  end\nend\n</code></pre>\n\n<p>In your view:</p>\n\n<pre><code> &lt;input type=\"hidden\" id=\"section_path\" data-path=\"&lt;%= @section.id %&gt;\" name=\"section_path\" value=\"foo\"&gt;\n</code></pre>\n\n<p>In your js:</p>\n\n<pre><code>var id = $('#section_path').attr('data-path');\n\n$.ajax({\n    url:'/sections/'+ id +'.json',\n    type:\"GET\",\n    success: function (data){\n        console.info(data);\n    },\n    error: function (xhr, status){\n        console.info(xhr.error);\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Can anyone explain how i can access the rails routes/names routes in javascript ?</p>\n\n<p>The following are some of the things i tried \n<a href=\"http://github.com/jsierles/js_named_routes\">http://github.com/jsierles/js_named_routes</a>.</p>\n\n<p>but no luck. </p>\n",
            "last_activity_date": 1401831408,
            "question_id": 3257818,
            "score": 19,
            "tags": [
                "javascript",
                "ruby-on-rails",
                "routes"
            ],
            "title": "Accessing rails routes in javascript"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I really don't think so. The closest you could get as far as I'm aware of is monitoring keypress and mouseclick events to try to match actions to common methods for opening links in new tabs. (ie. if they're holding Command when they click, or middle-clicked, it's probably a new tab). That wouldn't be reliable though, as any of those bindings can be changed.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You can sort of do it like this:</p>\n\n<pre><code>if (history.length == 1) {  // Um, needs to be 0 for IE, 1 for Firefox\n    // This is a new window or a new tab.\n}\n</code></pre>\n\n<p>There may be other ways for <code>history.length</code> to be <code>1</code>, but I don't know what they might be.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>The short answer is, no.  The long answer is, if you are doing an ajaxy call from your pages to server-side methods, that could keep ttrack of the windows open (called within a short timeframe).  It would be a sloppy, unreliable mess, and you couldn't differentiate between a new window or a tab for that matter.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The window.opener property in JavaScript will point to the window that opened the new window. However it doesn't distinguish between a new window and a new tab. Tabs are not part of the official W3C spec so there's no direct support for them.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It is client behaviour, so I think you could do something with javascript, like check for browser history, but it is ambiguous between a new tab and a new windows.</p>\n\n<p>Beside that, not all browsers has tabs and not all browsers has the same meaning for what a tab is (in some are different process, in some others they aren't).</p>\n\n<p>But, why would you want to check that? It really matter if your application is executing in a new tab or not? I don't think so...</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>In addition to history.length in JavaScript you can read/write the window's name.</p>\n\n<p>Thus if you check if it has a name onload... it <em>should</em> be blank on the very first load... if you then set it to \"foo\"... on each subsequent load in that window... the window.name property will return \"foo\"... unless you open a link in a new tab/window... that new window should have no name set.</p>\n\n<p>(unless of course you open a popup via window.open(url, name, features); which allows you to pre-set the name)</p>\n\n<pre><code>&lt;script&gt;\n if(window.name == ''){\n   //first load (or Nth load in a new Tab/Window)\n   if(!SOME_VALUE_SET_FOR_2ND_TO_NTH_LOADS){\n     //set name so we can catch new Tab/Window\n     window.name = 'myWinName';\n   } else {\n     //we have a new Tab/Window (or something funky)\n     alert('What?! One window not cool enough for ya?\\n' +\n       'Calling the InterWeb Police!');\n   }\n } else if(window.name == 'myWinName'){\n   //2nd-Nth load\n   document.title = 'All is well... we think';\n }\n&lt;/script&gt;\n</code></pre>\n\n<p>Caveats:</p>\n\n<ul>\n<li>If your page is initially loaded in a window/frame that already had a name... things will get quirky</li>\n<li>If your page has (named) iframes and you have any links targeted into those iframes, there is a bug in IE7/8 whereby when the user opens those links in a new tab/window, the new tab/window will \"inherit\" the name of the iframe that was originally targeted (very ODD bug with no fix ever expected)</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>This is what I use in ASP.NET MVC to forbid authenticated users to open multiple tabs:</p>\n\n<pre><code>&lt;script language=\"javascript\" type=\"text/javascript\"&gt;\n    @if(Request.IsAuthenticated)\n    {\n        &lt;text&gt;\n        if (window.name != 'singleWindow') {\n            window.location.href = \"Content/ErrorPages/SingleTab.htm\";\n        } \n        &lt;/text&gt;\n    }\n    else\n    {\n        &lt;text&gt;\n        window.name = \"singleWindow\";\n        &lt;/text&gt;\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>Basically, this sets the window name first time when the user visits the login page. After logging in, for each subsequent page load the window name is tested.</p>\n\n<p>Two problems:</p>\n\n<ul>\n<li>does not wok if JavaScript disabled</li>\n<li>if by mistake the user closes the original tab and then pastes some other link to my website in the address bar, the user will always receive the error page. To give the user a chance to recover, I have included \"Log out\" link in the SingleTab.htm page, so the user can destroy his session cookie and start a new session.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>If a user is on your website and opens another link (also to your website) in a new tab, is it possible to differentiate this from the user just clicking on the link normally? This can be in javascript, on the server, whatever.</p>\n\n<p>I'm guessing that the answer is that you cannot do this, but I wanted to double check.</p>\n",
            "last_activity_date": 1354555374,
            "question_id": 850058,
            "score": 19,
            "tags": [
                "javascript",
                "tabs"
            ],
            "title": "Is it possible to detect if a user has opened a link in a new tab?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This might be of help - \"XSLTJSON: transforming XML to JSON using XSLT\",  <a href=\"http://www.bramstein.com/projects/xsltjson/\" rel=\"nofollow\">http://www.bramstein.com/projects/xsltjson/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I got few links sometime back while reading on ExtJS full framework in itself is JSON.</p>\n\n<p><a href=\"http://www.thomasfrank.se/xml_to_json.html\" rel=\"nofollow\">http://www.thomasfrank.se/xml_to_json.html</a></p>\n\n<p><a href=\"http://camel.apache.org/xmljson.html\" rel=\"nofollow\">http://camel.apache.org/xmljson.html</a></p>\n\n<p>online XML to JSON converter : <a href=\"http://jsontoxml.utilities-online.info/\" rel=\"nofollow\">http://jsontoxml.utilities-online.info/</a></p>\n\n<p><strong>UPDATE</strong>\nBTW, To get JSON as added in question, HTML need to have type &amp; content tags in it too like this or you need to use some xslt transformation to add these elements while doing JSON conversion</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;type&gt;div&lt;/type&gt;\n&lt;content&gt;\n    &lt;type&gt;span&lt;/type&gt;\n    &lt;content&gt;Text2&lt;/content&gt;\n&lt;/content&gt;\n&lt;content&gt;Text2&lt;/content&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I just wrote this function that does what you want, try it out let me know if it doesn't work correctly for you:</p>\n\n<pre><code>// Test with an element.\nvar initElement = document.getElementsByTagName(\"html\")[0];\nvar json = mapDOM(initElement, true);\nconsole.log(json);\n\n// Test with a string.\ninitElement = \"&lt;div&gt;&lt;span&gt;text&lt;/span&gt;Text2&lt;/div&gt;\";\njson = mapDOM(initElement, true);\nconsole.log(json);\n\nfunction mapDOM(element, json) {\n    var treeObject = {};\n\n    // If string convert to document Node\n    if (typeof element === \"string\") {\n        if (window.DOMParser) {\n              parser = new DOMParser();\n              docNode = parser.parseFromString(element,\"text/xml\");\n        } else { // Microsoft strikes again\n              docNode = new ActiveXObject(\"Microsoft.XMLDOM\");\n              docNode.async = false;\n              docNode.loadXML(element); \n        } \n        element = docNode.firstChild;\n    }\n\n    //Recursively loop through DOM elements and assign properties to object\n    function treeHTML(element, object) {\n        object[\"type\"] = element.nodeName;\n        var nodeList = element.childNodes;\n        if (nodeList != null) {\n            if (nodeList.length) {\n                object[\"content\"] = [];\n                for (var i = 0; i &lt; nodeList.length; i++) {\n                    if (nodeList[i].nodeType == 3) {\n                        object[\"content\"].push(nodeList[i].nodeValue);\n                    } else {\n                        object[\"content\"].push({});\n                        treeHTML(nodeList[i], object[\"content\"][object[\"content\"].length -1]);\n                    }\n                }\n            }\n        }\n        if (element.attributes != null) {\n            if (element.attributes.length) {\n                object[\"attributes\"] = {};\n                for (var i = 0; i &lt; element.attributes.length; i++) {\n                    object[\"attributes\"][element.attributes[i].nodeName] = element.attributes[i].nodeValue;\n                }\n            }\n        }\n    }\n    treeHTML(element, treeObject);\n\n    return (json) ? JSON.stringify(treeObject) : treeObject;\n}\n</code></pre>\n\n<p>Working example: <a href=\"http://jsfiddle.net/JUSsf/\">http://jsfiddle.net/JUSsf/</a> (Tested in chrome, I can't guarantee full browser support - you will have to test this).</p>\n\n<p>\u200bIt creates an object that contains the tree structure of the HTML page in the format you requested and then uses <code>JSON.stringify()</code> which is included in most modern browsers (IE8+, Firefox 3+ .etc); If you need to support older browsers you can include <a href=\"http://www.json.org/js.html\">json2.js</a>.</p>\n\n<p>It can take either a <code>DOM element</code> or a <code>string</code> containing valid XHTML as an argument (I believe, I'm not sure whether the <code>DOMParser()</code> will choke in certain situations as it is set to <code>\"text/xml\"</code> or whether it just doesn't provide error handling. Unfortunately <code>\"text/html\"</code> has poor browser support).</p>\n\n<p>You can easily change the range of this function by passing a different value as <code>element</code>. Whatever value you pass will be the root of your JSON map.</p>\n\n<p>Enjoy</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p><a href=\"https://github.com/Jxck/html2json\">html2json &amp; json2html on GitHub</a>, which is built on John Resig's htmlparser.js, includes a few test cases and worked great for me.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I'm attempting map HTML into JSON with structure intact. Are there any libraries out there that do this or will I need to write my own? I suppose if there are no html2json libraries out there I could take an xml2json library as a start. After all, html is only a variant of xml anyway right?</p>\n\n<p><strong>UPDATE:</strong> Okay, I should probably give an example. What I'm trying to do is the following. Parse a string of html <code>&lt;div&gt;&lt;span&gt;text&lt;/span&gt;Text2&lt;/div&gt;</code> into a json object like so:</p>\n\n<pre><code>{\n  \"type\" : \"div\",\n  \"content\" : [\n    {\n      \"type\" : \"span\",\n      \"content\" : [\n        \"Text2\"\n      ]\n    },\n    \"Text2\"\n  ]\n}\n</code></pre>\n\n<p><strong>NOTE</strong>: In case you didn't notice the tag, I'm looking for a solution in Javascript </p>\n",
            "last_activity_date": 1364654303,
            "question_id": 12980648,
            "score": 18,
            "tags": [
                "javascript",
                "html",
                "json"
            ],
            "title": "Map HTML to JSON"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Only way known for me is to looping through all array:</p>\n\n<pre><code>var index=-1;\nfor(var i=0;i&lt;Data.length;i++)\n  if(Data[i].name===\"John\"){index=i;break;}\n</code></pre>\n\n<p>or case insensitive:</p>\n\n<pre><code>var index=-1;\nfor(var i=0;i&lt;Data.length;i++)\n  if(Data[i].name.toLowerCase()===\"john\"){index=i;break;}\n</code></pre>\n\n<p>On result variable <em>index</em> contain index of object or -1 if not found.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can use Array.sort using a custom function as parameter to define your sorting mecanism.</p>\n\n<p>In your example, it would give : </p>\n\n<pre><code>var Data = [\n    {id_list:1, name:'Nick',token:'312312'},{id_list:2,name:'John',token:'123123'}\n]\n\nData.sort(function(a, b){\n    return a.name &lt; b.name ? -1 : a.name &gt; b.name ? 1 : 0;\n});\n\nalert(\"First name is : \" + Data[0].name); // alerts 'John'\nalert(\"Second name is : \" + Data[1].name); // alerts 'Nick'\n</code></pre>\n\n<p>The sort function must return either -1 if a should come before b, 1 if a should come after b and 0 if both are equal. It's up to you to define the right logic in your sorting function to sort the array.</p>\n\n<p>Edit : Missed the last part of your question where you want to know the index. You would have to loop through the array to find that as others have said.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just go through your array and find the position:</p>\n\n<pre><code>var i = 0;\nfor(var item in Data) {\n    if(Data[item].name == 'John')\n        break;\n    i++;\n}\nalert(i);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As the other answers suggest, looping through the array is the probably the best way. But I would put it in it's own function, and make it a little more abstract:</p>\n\n<pre><code>function findWithAttr(array, attr, value) {\n    for(var i = 0; i &lt; array.length; i += 1) {\n        if(array[i][attr] === value) {\n            return i;\n        }\n    }\n}\n\nvar Data = [\n    {id_list: 2, name: 'John', token: '123123'},\n    {id_list: 1, name: 'Nick', token: '312312'}\n];\n</code></pre>\n\n<p>With this, not only can you find which one contains 'John' but you can find which contains the token '312312':</p>\n\n<pre><code>findWithAttr(Data, 'name', 'John'); // returns 0\nfindWithAttr(Data, 'token', '312312'); // returns 1\nfindWithAttr(Data, 'id_list', '10'); // returns undefined\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>This might be useful</p>\n\n<pre><code>function showProps(obj, objName) {  \n  var result = \"\";  \n  for (var i in obj)  \n    result += objName + \".\" + i + \" = \" + obj[i] + \"\\n\";  \n  return result;  \n}\n</code></pre>\n\n<p>Copied this from <a href=\"https://developer.mozilla.org/en/JavaScript/Guide/Working_with_Objects\" rel=\"nofollow\">https://developer.mozilla.org/en/JavaScript/Guide/Working_with_Objects</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>a prototypical way</p>\n\n<pre><code>(function(){\n  if (!Array.prototype.indexOfPropertyValue){\n    Array.prototype.indexOfPropertyValue = function(prop,value){\n      for (var index = 0; index &lt; this.length; index++){\n        if (this[index][prop]){\n          if (this[index][prop] == value){\n            return index;\n          }\n        }\n      }\n      return -1;\n    }\n  }\n })();\n // usage:\n var Data = [\n {id_list:1, name:'Nick',token:'312312'},{id_list:2,name:'John',token:'123123'}];\n Data.indexOfPropertyValue('name','John'); // returns 1 (index of array);\n Data.indexOfPropertyValue('name','Invalid name') // returns -1 (no result);\n var indexOfArray = Data.indexOfPropertyValue('name','John');\n Data[indexOfArray] // returns desired object.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Since the sort part is already answered. I'm just going to propose another elegant way to get the indexOf of a property in your array</p>\n\n<p>Your example is:</p>\n\n<pre><code>var Data = [\n    {id_list:1, name:'Nick',token:'312312'},\n    {id_list:2,name:'John',token:'123123'}\n]\n</code></pre>\n\n<p>You can do:</p>\n\n<pre><code>var index = Data.map(function(e) { return e.name; }).indexOf('Nick');\n</code></pre>\n\n<p><code>Array.prototype.map</code> is not available on IE7 or IE8. <a href=\"http://kangax.github.io/es5-compat-table/\">ES5 Compatibility</a></p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Alternatively to German Attanasio Ruiz's answer, you can eliminate the 2nd loop by using Array.reduce() instead of Array.map();</p>\n\n<pre><code>var Data = [\n    { name: 'hypno7oad' }\n]\nvar indexOfTarget = Data.reduce(function (indexOfTarget, element, currentIndex) {\n    return (element.name === 'hypno7oad') ? currentIndex : indexOfTarget;\n}, -1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Why don't you use a small work-around?</p>\n\n<p>Create a new array with names as indexes. after that all searches will use indexes. So, only one loop. After that you don't need to loop through all elements!</p>\n\n<pre><code>var Data = [\n    {id_list:1, name:'Nick',token:'312312'},{id_list:2,name:'John',token:'123123'}\n    ]\nvar searchArr = []\nData.forEach(function(one){\n  searchArr[one.name]=one;\n})\nconsole.log(searchArr['Nick'])\n</code></pre>\n\n<p><a href=\"http://jsbin.com/xibala/1/edit\" rel=\"nofollow\">http://jsbin.com/xibala/1/edit</a></p>\n\n<p>live example.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>For example i have:</p>\n\n<pre><code>var Data = [\n    {id_list:1, name:'Nick',token:'312312'},{id_list:2,name:'John',token:'123123'}\n    ]\n</code></pre>\n\n<p>Then i want to sort/reverse this object by name, for example. I get something like this:</p>\n\n<pre><code>var Data = [\n    {id_list:2,name:'John',token:'123123'},{id_list:1, name:'Nick',token:'312312'}\n    ]\n</code></pre>\n\n<p>And now i want to know index of object with property name='John' to get value of property token.</p>\n",
            "last_activity_date": 1422090092,
            "question_id": 7176908,
            "score": 18,
            "tags": [
                "javascript"
            ],
            "title": "How to get index of object by its property in javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I believe that Onbeforeunload is a safe bet. It is possible for browser to not execute  onunload script completely - for example, if you have alert in onunload, chrome would not show if you close the window.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Why not register it with both just to be on the safe side? Just have the listener do a check to see if the data's stored yet and exit early.</p>\n\n<p>Here's a quick example using event properties:</p>\n\n<pre><code>window.onunload = window.onbeforeunload = (function(){\n\n  var didMyThingYet=false;\n\n  return function(){\n    if (didMyThingYet) return;\n    didMyThingYet=true;\n    // do your thing here...\n  }\n\n}());\n</code></pre>\n\n<p>Or you could use attachEvent:</p>\n\n<pre><code>(function(){\n\n  var didMyThingYet=false;\n\n  function listener (){\n    if (didMyThingYet) return;\n    didMyThingYet=true;\n    // do your thing here...\n  }\n\n  window.attachEvent(\"onbeforeunload\", listener);\n  window.attachEvent(\"onunload\", listener);    \n\n}());\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>The proper place to do it is onunload. onbeforenload is meant to be used when you may need to stop the user from leaving the page, like when there is unsaved data.</p>\n\n<p>I would be weary of writing code to cover all cases because you're not willing to test all cases. If you do your research and find that's it's too complicated across browsers, yeah, go ahead and do as much as you can. However, I believe there is no problem with doing local storage onunload. I actually did run into a problem, trying to send information to the server onunload. That did not happen reliably across browsers so I did end up with an approach that used both unload and beforeunload, but only after due diligence.</p>\n\n<p>So my suggestion is do it onunload, check all your browsers.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>From my experience: use <code>onunload</code> since Opera does not support the other event. Yes, I know... <strong>Opera</strong>... but still :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>So I want to store some information in localstorage of a browser when the page is refreshed or the user exits the page for future use. I figured that I'd use some Javascript to detect the event and store the state of the page visit. </p>\n\n<p>Now my predicament is: shall i use Onbeforeunload or Onunload method to accomplish this objective? </p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1313594343,
            "question_id": 3775566,
            "score": 18,
            "tags": [
                "javascript",
                "dom",
                "javascript-events"
            ],
            "title": "JavaScript question: Onbeforeunload or Onunload?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>I would like to know what exactly is the difference between querySelector and querySelectorAll against getElementsByClassName and getElementById?</p>\n</blockquote>\n\n<p>The syntax and the browser support. </p>\n\n<p><code>querySelector</code> is more useful when you want to use more complex selectors.</p>\n\n<p>e.g. All list items descended from an element that is a member of the foo class: <code>.foo li</code></p>\n\n<blockquote>\n  <p>document.querySelector(\"#view:_id1:inputText1\") it doesn't work. But writing document.getElementById(\"view:_id1:inputText1\") works. Any ideas why?</p>\n</blockquote>\n\n<p>The <code>:</code> character has special meaning inside a selector. You have to escape it. (The selector escape character has special meaning in a JS string too, so you have to escape <em>that</em> too).</p>\n\n<pre><code>document.querySelector(\"#view\\\\:_id1\\\\:inputText1\")\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p><code>querySelector</code> and <code>querySelectorAll</code> are a relatively new APIs, whereas <code>getElementById</code> and  <code>getElementsByClassName</code> have been with us for a lot longer. That means that what you use will mostly depend on which browsers you need to support.</p>\n\n<p>As for the <code>:</code>, it has a special meaning so you have to escape it if you have to use it as a part of a ID/class name.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><code>querySelector</code> can be a complete CSS-Selector with IDs and Classes and Pseudo-Classes together like this:</p>\n\n<pre><code>'#id.class:pseudo'\n</code></pre>\n\n<p>with <code>getElementByClassName</code> you can just define a class</p>\n\n<pre><code>'.class'\n</code></pre>\n\n<p>with <code>getElementById</code> you can just define an id</p>\n\n<pre><code>'#id'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>collecting from <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Locating_DOM_elements_using_selectors\" rel=\"nofollow\">Mozilla Documentation:</a></p>\n\n<p>The NodeSelector interface\nThis specification adds two new methods to any objects implementing the Document, DocumentFragment, or Element interfaces:</p>\n\n<p><strong>querySelector</strong></p>\n\n<blockquote>\n  <p>Returns the <strong>first matching Element node</strong> within the node's subtree. If\n  no matching node is found, null is returned.</p>\n</blockquote>\n\n<p><strong>querySelectorAll</strong></p>\n\n<blockquote>\n  <p>Returns a <strong>NodeList containing all matching Element</strong> nodes within the\n  node's subtree, or an empty NodeList if no matches are found.</p>\n</blockquote>\n\n<p>and </p>\n\n<blockquote>\n  <p>Note: The NodeList returned by <code>querySelectorAll()</code> is not live. This is\n  different from other DOM querying methods that return live node lists.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I would like to know what exactly is the difference between <code>querySelector</code> and <code>querySelectorAll</code> against  <code>getElementsByClassName</code> and <code>getElementById</code>?</p>\n\n<p>From <a href=\"https://developer.mozilla.org/en-US/docs/DOM/Document.querySelector\">this link</a> I could gather that with <code>querySelector</code> I can write <code>document.querySelector(\".myclass\")</code> to get elements with class <code>myclass</code> and <code>document.querySelector(\"#myid\")</code> to get element with ID <code>myid</code>. But I can already do that <code>getElementsByClassName</code> and <code>getElementById</code>. Which one should be preferred?</p>\n\n<p>Also I work in <a href=\"http://stackoverflow.com/tags/xpages/info\">XPages</a> where the ID is dynamically generated with colon and looks like this <code>view:_id1:inputText1</code>. So when I write <code>document.querySelector(\"#view:_id1:inputText1\")</code> it doesn't work. But writing <code>document.getElementById(\"view:_id1:inputText1\")</code> works. Any ideas why?</p>\n",
            "last_activity_date": 1417861904,
            "question_id": 14377590,
            "score": 17,
            "tags": [
                "javascript"
            ],
            "title": "querySelector and querySelectorAll vs getElementsByClassName and getElementById in JavaScript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><code>$('.shell a')[0]</code> returns the native DOM element which dosn't have jQuery methods bound to it</p>\n\n<p>Remove the \"[0]\" to keep the jQuery object in order to use jQuery methods</p>\n\n<pre><code> $('.shell a').click()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><code>$('.shell a')[0]</code> gets a DOM object out of the jQuery object.  That DOM object only has DOM methods (not jQuery methods) and there is no industry standard <code>.click()</code> method on an <code>&lt;a&gt;</code> element until HTML5 and it is not yet implemented in every browser - thus you will see incomplete implementation across difference browsers.</p>\n\n<p>You have a couple choices.  The first option gets a jQuery object and uses the <code>.click()</code> method on the jQuery object.  This will only work reliably if you are triggering jQuery click handlers, not if you just want the default click for the <code>&lt;a&gt;</code> tag.</p>\n\n<pre><code>function writeAndClickLink(url) {\n\n    $('.shell').html('&lt;a href=\"' + url + '\"&gt;&lt;/a&gt;');\n    $('.shell a').eq(0).click();\n}\n</code></pre>\n\n<p>Or, if clicking the URL is just going to go to a new web page, don't even bother modifying the DOM and just set window.location as there is no point in modifying the DOM at all if you're just going to a new web page:</p>\n\n<pre><code>function writeAndClickLink(url) {\n    window.location = url;    \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>var a = $('.shell a')[0];\nvar evObj = document.createEvent('MouseEvents');\nevObj.initMouseEvent('click', true, true, window);\na.dispatchEvent(evObj);\n</code></pre>\n\n<p>See <a href=\"http://www.howtocreate.co.uk/tutorials/javascript/domevents\">http://www.howtocreate.co.uk/tutorials/javascript/domevents</a> (search for \"Manually firing events\").</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>Trevor Dixon's answer <em>does</em> fix Safari, but breaks in even the latest Firefox:</p>\n\n<blockquote>\n  <p>TypeError: Not enough arguments to MouseEvent.initMouseEvent</p>\n</blockquote>\n\n<p>The best way to support Safari&mdash;without breaking Firefox&mdash;would be using <code>initEvent</code> instead of <code>initMouseEvent</code> like so:</p>\n\n<pre><code>var element = document.getElementById('your_id_here');\nif(element.click)\n    element.click();\nelse if(document.createEvent)\n{\n    var eventObj = document.createEvent('MouseEvents');\n    eventObj.initEvent('click',true,true);\n    element.dispatchEvent(eventObj);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a piece of JavaScript that dynamically creates an <code>A</code> tag inside of an existing div and then calls the jQuery function \"click\" on it. This works as intended in all browsers except Safari.</p>\n\n<p>Safari returns the following error: </p>\n\n<blockquote>\n  <p>'undefined' is not a function (evaluating '$('.shell a')[0].click()')</p>\n</blockquote>\n\n<p>Any ideas on what I'm doing wrong or why this doesn't work in Safari and how to get it to work (or one piece of code that works in all browsers) I've tried using <code>.trigger(\"click\")</code> as well and it gives the same error.</p>\n\n<h1>JavaScript</h1>\n\n<pre><code>function writeAndClickLink(url) {\n\n    $('.shell').html('&lt;a href=\"' + url + '\"&gt;&lt;/a&gt;');\n    $('.shell a')[0].click();\n}\n</code></pre>\n\n<p>and in the HTML:</p>\n\n<pre><code>&lt;div class=\"shell\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>The reason I'm doing it this weird way is the function is called from a Flash site to open a twitter window where I am giving a reward for tweeting. This so far has been the only way I could get the \"tweet\" event to bind to the window. If I open the window any other way (window.open for example) it doesn't capture the bound event that lets me know they actually completed the tweet.</p>\n\n<p>The flow is something like:</p>\n\n<ul>\n<li>User clicks tweet button in flash</li>\n<li>Flash calls javascript function to dynamically write href and \"click\" it</li>\n<li>Twitter window opens</li>\n<li>User successfully tweets</li>\n<li>Tweet event is captured and updates flash with success</li>\n<li>Content is unlocked in flash</li>\n</ul>\n",
            "last_activity_date": 1414996186,
            "question_id": 12925153,
            "score": 17,
            "tags": [
                "javascript",
                "jquery",
                "safari",
                "click"
            ],
            "title": "jQuery .click() works on every browser but Safari"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>You need to attach the ScrollSpy to the element which is going to trigger scroll events, rather than the menu which is going to reflect the scroll position:</p>\n\n<pre><code>$('#content').scrollspy();\u200b\n</code></pre>\n\n<h3><a href=\"http://jsfiddle.net/mmfansler/9Lgx4/embedded/result/\" rel=\"nofollow\">JSFiddle</a></h3>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>I had this same problem; removing the <code>height: 100%</code> from the <code>&lt;body&gt;</code> element fixed this for me. </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>FYI: To get my desired effect (same one as on the Twitter Bootstrap docs page) I needed to set 'body' as my target element...I could not get scrollspy'ing to work by using the immediate parent of the elements I wanted to spy as the target.   </p>\n\n<p>(It just auto-selected the my last element always)</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>In my case, Firefox was always selecting the last element and it was NOT the </p>\n\n<pre><code>height:100%;\n</code></pre>\n\n<p>on the body that was causing the problem (as I didn't have anything like that). </p>\n\n<p>It was a </p>\n\n<pre><code>position:absolute; \n</code></pre>\n\n<p>on a container div.</p>\n\n<p>Hope it helps someone out there...</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Make sure you're not mixing implementations. You don't need <code>$('#content).scrollspy()</code> if you have <code>data-spy=\"scroll\" data-target=\".bs-docs-sidebar\"</code> on your body tag.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had the exact same problem and for me, <strong>adding</strong> <code>height: 100%</code> to the body element was the fix.</p>\n\n<p>(stricly nothing else seemed to make it work)</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I had a similar issue where scroll spy would not work on anything but a body tag so I actually went into the bootstrap js found the Scroll spy (SCROLLSPY CLASS DEFINITION) section and changed this line:</p>\n\n<blockquote>\n  <p>, $element = $(element).is('body') ? $(window) : $(element)</p>\n</blockquote>\n\n<p>to this: </p>\n\n<blockquote>\n  <p>, $element = $(element).is('body') ? $(window) : $(window) //$(element)</p>\n</blockquote>\n\n<p>(note that the element after the // is a comment so I don't forget I changed it)</p>\n\n<p>And that fixed it for me.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think that this might be a bug in ScrollSpy.</p>\n\n<p>I also had the same problem and when I stepped through the code I could see that the offset for all the targets were the same (-95px). I checked where these were being set and it was using the position() function. This returns the position  of the element relative to the offset of the parent.</p>\n\n<p>I changed this to use the offset() function instead. This function returns the position of the element relative to the offset of the page. Once I did this then it worked perfectly. Not sure why this isn't the default behaviour.</p>\n\n<p>The reason that the position() function wasn't working in my case was because I had to have an empty div which was actually absolutely positioned 95px above the top of its container. I needed this as my target so that the headings weren't hidden behind my header that was fixed to the top of the page.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>When calling the scrollspy method you typically specify the body tag and the nav element. </p>\n\n<pre><code>&lt;script&gt;\n        $(function() {\n            $('body').scrollspy({ target: '#faq_sidebar' });\n        });\n&lt;/script&gt;\n</code></pre>\n\n<p>The JavaScript above is equivalent to:</p>\n\n<pre><code>&lt;body data-spy=\"scroll\" data-target=\"#faq_sidebar\"&gt;\n</code></pre>\n\n<p>The only situation where you do not specify the body tag is if you want to track an element with a nested scrollbar like in the <a href=\"http://jsfiddle.net/mmfansler/9Lgx4/\" rel=\"nofollow\">JSFiddle above</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>ScrollSpy is pretty unforgiving and the documentation is sparse to say the least...there are different and conflicting fixes for this based on your implementation...</p>\n\n<p>Nested content was my problem. This fixed it for me:</p>\n\n<p>(1) make sure all hrefs in your nav match a corresponding ID in your spied upon target container.</p>\n\n<p>(2) If the items in your spied upon content container are nested then it won't work...</p>\n\n<p><strong>This:</strong> </p>\n\n<pre><code>&lt;ul class=\"nav\" id=\"sidebar\"&gt;\n  &lt;li&gt;\n     &lt;a href=\"#navItem1\" /&gt;\n  &lt;/li&gt;\n  &lt;li&gt;\n     &lt;a href=\"#navItem2\" /&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n&lt;div id=\"spiedContent\"&gt; &lt;!-- nested content --&gt;\n   &lt;div id=\"navItem1\"&gt;\n      &lt;div id=\"navItem2\"&gt;&lt;/div&gt;\n   &lt;/div&gt;    \n\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>To This:</strong> </p>\n\n<pre><code>&lt;ul class=\"nav\" id=\"sidebar\"&gt;\n  &lt;li&gt;\n     &lt;a href=\"#navItem1\" /&gt;\n  &lt;/li&gt;\n  &lt;li&gt;\n     &lt;a href=\"#navItem2\" /&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n&lt;div id=\"spiedContent\"&gt; &lt;!-- flat content --&gt;\n   &lt;div id=\"navItem1\"&gt;&lt;/div&gt;    \n   &lt;div id=\"navItem2\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>All good!</p>\n\n<p>My guess if you looked at the scrollspy code its not looking past the first child of the spied container for the ids.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I fixed it using body height 100% but it didnt work on Firefox. After wasting so much time found the answer on github page. Applying height 100% to HTML tag fixes the issue both for Chrome and Firefox.</p>\n\n<p><a href=\"https://github.com/twbs/bootstrap/issues/5007\" rel=\"nofollow\">https://github.com/twbs/bootstrap/issues/5007</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an issue with scrollspy, recreated in this fiddle:\n<a href=\"http://jsfiddle.net/jNXvG/3/\">http://jsfiddle.net/jNXvG/3/</a></p>\n\n<p>As seen in the demo, the ScrollSpy plugin always keeps the last menu item selected no matter the scrolling position.  I've  read other questions and answers and tried different combinations of <code>offset</code>, etc., but none of them have helped.  I can't figure out what's wrong.</p>\n\n<p>I don't want to edit my template to include ugly html 'data' tags, so I am calling <code>scrollspy()</code> via JavaScript to activate the plugin.</p>\n\n<p>The next step would be to remove the fixed content height and use <a href=\"http://twitter.github.com/bootstrap/javascript.html#affix\">'affix'</a> on the sidebar.</p>\n",
            "last_activity_date": 1425566843,
            "question_id": 12095579,
            "score": 17,
            "tags": [
                "javascript",
                "jquery-plugins",
                "twitter-bootstrap"
            ],
            "title": "Twitter Bootstrap scrollspy always selecting last element"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You're doing some wonky stuff with that closure. <code>_word</code> needs to be declared in the <code>Printer</code> function, not lost in anonymous-closure land:</p>\n\n<pre><code>function Printer(word) {\n    var _word = word;\n\n    this.print = function () {\n        console.log(_word);\n    }\n}\n\nvar a = new Printer(\"Alex\");\nvar b = new Printer(\"Bob\");\n\na.print(); //Prints Alex\nb.print(); //Prints Bob\n</code></pre>\n\n<p>This keeps <code>_word</code> private, at the expense of creating a new <code>print</code> function on every <code>Printer</code> instance. To cut this cost, you expose <code>_word</code> and use a single <code>print</code> function on the prototype:</p>\n\n<pre><code>function Printer(word) {\n    this._word = word;\n}\n\nPrinter.prototype.print = function () {\n    console.log(this._word);\n}\n\nvar a = new Printer(\"Alex\");\nvar b = new Printer(\"Bob\");\n\na.print(); //Prints Alex\nb.print(); //Prints Bob\n</code></pre>\n\n<p>Does it <em>really</em> matter that <code>_word</code> is exposed? Personally, I don't think so, especially given the <code>_</code> prefix.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p><a href=\"http://blog.jcoglan.com/2012/01/19/the-cost-of-privacy/?utm_source=feedburner&amp;utm_medium=feed&amp;utm_campaign=Feed%3A+theifworks+%28The+If+Works%29\">Privates are expensive, avoid them if possible</a></p>\n\n<p>Private doesn't exist. You can do one of two things to emulate this.</p>\n\n<ul>\n<li>closures</li>\n<li>Weakmaps</li>\n</ul>\n\n<h2>Closures</h2>\n\n<pre><code>function makePrinter(word) {\n  return {\n    print: function () {\n      console.log(word)\n    }\n  }\n}\n</code></pre>\n\n<h2>WeakMap</h2>\n\n<p>Browser support for <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/WeakMap\">weakmaps</a> is awful. You will probably need an emulation, I recommend <a href=\"https://github.com/Raynos/pd#pd.Name\">pd.Name</a></p>\n\n<pre><code>var Printer = (function () {\n  var privates = function (obj) {\n    var v = map.get(obj)\n    if (v === undefined) {\n      v = {}\n      map.set(obj, v)\n    } \n    return v\n  }, map = new WeakMap()\n\n  return {\n    constructor: function (word) {\n      privates(this).word = word\n    },\n    print: function () {\n      console.log(privates(this).word)\n    }\n  }\n}());\n</code></pre>\n\n<h2>Sensible objects</h2>\n\n<pre><code>var Printer = {\n  constructor: function (word) {\n    this._word = word\n  },\n  print: function () {\n    console.log(this._word)\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<p>I don't know how I've missed this for so long. I've been presuming private instance variables to work like this, but they don't. They're private (as in non-global), certainly, but the variables are shared across instances. This led to some very confusing bugs.</p>\n\n<p>I thought I was following the best practices implemented by some of the best libraries out there, but it seems I missed something.</p>\n\n<pre><code>var Printer = (function(){\n    var _word;\n\n    Printer = function(word){\n        _word = word;\n    }\n\n    _print = function(){\n        console.log(_word);\n    }\n\n    Printer.prototype = {\n        print: _print\n    }\n    return Printer;\n})();\n\nvar a = new Printer(\"Alex\");\nvar b = new Printer(\"Bob\");\n\na.print(); //Prints Bob (!)\nb.print(); //Prints Bob\n</code></pre>\n\n<p>I have looked at this post, but it doesn't describe a best practice for implementing private instance variables. (is this even the name of what I want?)\n<a href=\"http://stackoverflow.com/questions/5099519/method-and-variable-scoping-of-private-and-instance-variables-in-javascript\">Method and variable scoping of private and instance variables in JavaScript</a></p>\n\n<p>I also looked at this post, but the use of the 'this' keyword is what I used to do. Because it doesn't obfuscate I was trying to avoid it. Is this really the only way?\n<a href=\"http://stackoverflow.com/questions/2107776/implementing-instance-methods-variables-in-prototypal-inheritance\">Implementing instance methods/variables in prototypal inheritance</a></p>\n",
            "last_activity_date": 1330973638,
            "question_id": 9572029,
            "score": 17,
            "tags": [
                "javascript",
                "private-members"
            ],
            "title": "Implementing private instance variables in Javascript"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Native methods are always faster.</p>\n\n<p>So use <code>Array.reverse</code> where possible. Otherwise an implementation that runs in <code>O(1)</code> would be best ;)</p>\n\n<p>Otherwise just use something like this</p>\n\n<pre><code>var reverse = function(arr) {\n   var result = [],\n       ii = arr.length;\n   for (var i = ii - 1;i !== 0;i--) {\n       result.push(arr[i]);\n   }\n   return result;\n}\n</code></pre>\n\n<p><a href=\"http://jsperf.com/native-reverse-vs-my-reverse\">Benchmark!</a></p>\n\n<p>Interesting the loop is faster if you use all three stages of the <code>for</code> construct instead of only one.</p>\n\n<p><code>for(var i = ii - 1; i  !== 0;i--)</code> is faster then <code>var i = ii - 1;for(;i-- !== 0;)</code></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Here's a java example <a href=\"http://www.leepoint.net/notes-java/data/arrays/arrays-ex-reverse.html\" rel=\"nofollow\">http://www.leepoint.net/notes-java/data/arrays/arrays-ex-reverse.html</a> showing how to reverse an array.  Very easy to convert to javascript.</p>\n\n<p>I would suggest using something that simply captures the time before the function is called, and after the function is called.  Which ever takes the least time / clock cycles will be the fastest.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Based on this setup:</p>\n\n<pre><code>var array = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\nvar length = array.length;\n</code></pre>\n\n<p><code>Array.reverse();</code> is the first or second slowest!</p>\n\n<p>The benchmarks are here:\n<a href=\"http://jsperf.com/js-array-reverse-vs-while-loop/5\">http://jsperf.com/js-array-reverse-vs-while-loop/5</a></p>\n\n<p>Across browsers, swap loops are faster. There are two common types of swap algorithms (see <a href=\"http://en.wikipedia.org/wiki/Swap_%28computer_science%29#Swap_methods\">Wikipedia</a>), each with two variations.</p>\n\n<p>The two types of swap algorithms are temporary swap and XOR swap.</p>\n\n<p>The two variations handle index calculations differently. The first variation compares the current left index and the right index and then decrements the right index of the array. The second variation compares the current left index and the length divided by half and then recalculates the right index for each iteration.</p>\n\n<p>You may or may not see huge differences between the two variations. For example, in Chrome 18, the first variations of the temporary swap and XOR swap are over 60% slower than the second variations, but in Opera 12, both variations of the temporary swap and XOR swap have similar performance.</p>\n\n<p><strong>Temporary swap:</strong></p>\n\n<p>First variation:</p>\n\n<pre><code>function temporarySwap(array)\n{\n    var left = null;\n    var right = null;\n    var length = array.length;\n    for (left = 0, right = length - 1; left &lt; right; left += 1, right -= 1)\n    {\n        var temporary = array[left];\n        array[left] = array[right];\n        array[right] = temporary;\n    }\n    return array;\n}\n</code></pre>\n\n<p>Second variation:</p>\n\n<pre><code>function temporarySwapHalf(array)\n{\n    var left = null;\n    var right = null;\n    var length = array.length;\n    for (left = 0; left &lt; length / 2; left += 1)\n    {\n        right = length - 1 - left;\n        var temporary = array[left];\n        array[left] = array[right];\n        array[right] = temporary;\n    }\n    return array;\n}\n</code></pre>\n\n<hr>\n\n<p><strong>XOR swap:</strong></p>\n\n<p>First variation:</p>\n\n<pre><code>function xorSwap(array)\n{\n    var i = null;\n    var r = null;\n    var length = array.length;\n    for (i = 0, r = length - 1; i &lt; r; i += 1, r -= 1)\n    {\n        var left = array[i];\n        var right = array[r];\n        left ^= right;\n        right ^= left;\n        left ^= right;\n        array[i] = left;\n        array[r] = right;\n    }\n    return array;\n}\n</code></pre>\n\n<p>Second variation:</p>\n\n<pre><code>function xorSwapHalf(array)\n{\n    var i = null;\n    var r = null;\n    var length = array.length;\n    for (i = 0; i &lt; length / 2; i += 1)\n    {\n        r = length - 1 - i;\n        var left = array[i];\n        var right = array[r];\n        left ^= right;\n        right ^= left;\n        left ^= right;\n        array[i] = left;\n        array[r] = right;\n    }\n    return array;\n}\n</code></pre>\n\n<hr>\n\n<p>There is another swap method called destructuring assignment:\n<a href=\"http://wiki.ecmascript.org/doku.php?id=harmony:destructuring\">http://wiki.ecmascript.org/doku.php?id=harmony:destructuring</a></p>\n\n<p><strong>Destructuring assignment:</strong></p>\n\n<p>First variation:</p>\n\n<pre><code>function destructuringSwap(array)\n{\n    var left = null;\n    var right = null;\n    var length = array.length;\n    for (left = 0, right = length - 1; left &lt; right; left += 1, right -= 1)\n    {\n        [array[left], array[right]] = [array[right], array[left]];\n    }\n    return array;\n}\n</code></pre>\n\n<p>Second variation:</p>\n\n<pre><code>function destructuringSwapHalf(array)\n{\n    var left = null;\n    var right = null;\n    var length = array.length;\n    for (left = 0; left &lt; length / 2; left += 1)\n    {\n        right = length - 1 - left;\n        [array[left], array[right]] = [array[right], array[left]];\n    }\n    return array;\n}\n</code></pre>\n\n<p>Right now, an algorithm using destructuring assignment is the slowest of them all. It is even slower than <code>Array.reverse();</code>. However, the algorithms using destructuring assignments and <code>Array.reverse();</code> methods are the shortest examples, and they look the cleanest. I hope their performance gets better in the future.</p>\n\n<hr>\n\n<p>Another mention is that modern browsers are improving their performance of array <code>push</code> and <code>splice</code> operations.</p>\n\n<p>In Firefox 10, this <code>for</code> loop algorithm using array <code>push</code> and <code>splice</code> rivals the temporary swap and XOR swap loop algorithms.</p>\n\n<pre><code>for (length -= 2; length &gt; -1; length -= 1)\n{\n    array.push(array[length]);\n    array.splice(length, 1);\n}\n</code></pre>\n\n<p>However, you should probably stick with the swap loop algorithms until many of the other browsers match or exceed their array <code>push</code> and <code>splice</code> performance.</p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>I <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=851769\" rel=\"nofollow\">opened a Firefox bug</a> about slow reverse performance in Firefox.  Someone from Mozilla looked at the benchmark used in the accepted post, and says that it is pretty misleading -- in their analysis the native method is better in general for reversing arrays.  (As it should be!)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Swap functions are the fastest. Here's a reverse function I wrote that is only slightly similar to the swap functions mentioned above but performs faster.</p>\n\n<pre><code>function reverse(array) {\n  var first = null;\n  var last = null;\n  var tmp = null;\n  var length = array.length;\n\n  for (first = 0, last = length - 1; first &lt; length / 2; first++, last--) {\n    tmp = array[first];\n    array[first] = array[last];\n    array[last] = tmp;\n  }\n}\n</code></pre>\n\n<p>You can find the benchmarking here <a href=\"http://jsperf.com/js-array-reverse-vs-while-loop/19\" rel=\"nofollow\">http://jsperf.com/js-array-reverse-vs-while-loop/19</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you want to copy a reversed version of an array and keep the original as it is:</p>\n\n<pre><code>a = [0,1,2,3,4,5,6,7,8,9];\nb = []\nfor(i=0;i&lt;a.length;i++){\n    b.push(a.slice(a.length-i-1,a.length-i)[0])\n}\n</code></pre>\n\n<p>Output of b:</p>\n\n<pre><code>[ 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is another example to permanently modify the array reversing it's elements:</p>\n\n<pre><code>var theArray = ['a', 'b', 'c', 'd', 'e', 'f'];\n\nfunction reverseArrayInPlace(array) {\n  for (var i = array.length - 1; i &gt;= 0; i -= 1) {\n    array.push(array[i]);\n  }\n  array.splice(0, array.length / 2);\n  return array;\n};\nreverseArrayInPlace(theArray);\nconsole.log(theArray); // -&gt; [\"f\", \"e\", \"d\", \"c\", \"b\", \"a\"]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I was asked recently what was the most efficient way to revers an array in Javascript. At the moment I suggested using a for loop and fiddling with the array but then realized there is a native Array.reverse() method.</p>\n\n<p>For curiosity's sake, can anyone help me explore this by showing examples or pointing in the right direction so I can read into this? Any suggestions regarding how to meassure performance would be awesome too.</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1421195960,
            "question_id": 5276953,
            "score": 17,
            "tags": [
                "javascript",
                "arrays",
                "performance"
            ],
            "title": "What is the most efficient way to reverse an array in Javascript?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Using jQuery</p>\n\n<pre><code>$(window).scrollTop();\n</code></pre>\n\n<p>will get you the scroll position, you can then work out from there what the percentage is based on the window height.</p>\n\n<p>There is also a standard DOM property <code>scrollTop</code> that you can use like <code>document.body.scrollTop</code> however I'm not sure how this behaves cross-browser, I would assume if there are inconsistencies then the jQuery method accounts for these.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This should do the trick, no libraries required:</p>\n\n<pre><code>function currentScrollPercentage()\n{\n    return ((document.documentElement.scrollTop + document.body.scrollTop) / (document.documentElement.scrollHeight - document.documentElement.clientHeight) * 100);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you're using Dojo, you can do the following:</p>\n\n<pre><code>var vp = dijit.getViewport();\nreturn (vp.t / (document.documentElement.scrollHeight - vp.h));\n</code></pre>\n\n<p>Which will return a value between 0 and 1.</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>This question has been here for a long time, I know, but I stumbled onto it while trying to solve the same problem. Here is how I solved it, in jQuery:</p>\n\n<p>First, I wrapped the thing I wanted to scroll in a div (not semantic, but it helps). Then set the overflow and height on the wrapper.</p>\n\n<pre><code>&lt;div class=\"content-wrapper\" style=\"overflow: scroll; height:100px\"&gt;\n    &lt;div class=\"content\"&gt;Lot of content that scrolls&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Finally I was able to calculate the % scroll from these metrics:</p>\n\n<pre><code>var $w = $(this),\n    scroll_top = $w.scrollTop(),\n    total_height = $w.find(\".content\").height(),        \n    viewable_area = $w.height(),\n    scroll_percent = Math.floor((scroll_top + viewable_area) / total_height * 100);                \n</code></pre>\n\n<p>Here is a fiddle with working example: <a href=\"http://jsfiddle.net/prEGf/\" rel=\"nofollow\">http://jsfiddle.net/prEGf/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you're using jQuery, you can do this:</p>\n\n<pre><code>var s = $(window).scrollTop(),\n        d = $(document).height(),\n        c = $(window).height();\n        scrollPercent = (s / (d-c)) * 100;\n\nconsole.log(\"Current scroll percent: \" + scrollPercent);\n</code></pre>\n\n<p>Try running this in your console (on a website with jQuery enabled).</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>I think I found a good solution that doesn't depend on any library:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>/**\n * Get current browser viewpane heigtht\n */\nfunction _get_window_height() {\n    return window.innerHeight || \n           document.documentElement.clientHeight ||\n           document.body.clientHeight || 0;\n}\n\n/**\n * Get current absolute window scroll position\n */\nfunction _get_window_Yscroll() {\n    return window.pageYOffset || \n           document.body.scrollTop ||\n           document.documentElement.scrollTop || 0;\n}\n\n/**\n * Get current absolute document height\n */\nfunction _get_doc_height() {\n    return Math.max(\n        document.body.scrollHeight || 0, \n        document.documentElement.scrollHeight || 0,\n        document.body.offsetHeight || 0, \n        document.documentElement.offsetHeight || 0,\n        document.body.clientHeight || 0, \n        document.documentElement.clientHeight || 0\n    );\n}\n\n\n/**\n * Get current vertical scroll percentage\n */\nfunction _get_scroll_percentage() {\n    return (\n        (_get_window_Yscroll() + _get_window_height()) / _get_doc_height()\n    ) * 100;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>These worked for me perfectly in Chrome 19.0, FF12, IE9:</p>\n\n<pre><code>function getElementScrollScale(domElement){\n        return domElement.scrollTop / (domElement.scrollHeight - domElement.clientHeight);\n    }\n\nfunction setElementScrollScale(domElement,scale){\n        domElement.scrollTop = (domElement.scrollHeight - domElement.clientHeight) * scale;\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can I find out what percentage of the vertical scrollbar a user has moved through at any given point?</p>\n\n<p>It's easy enough to trap the 'onscroll' event to fire when the user scrolls down the page, but how do I find out within that event how far they have scrolled?  In this case, the percentage particularly is what's important.  I'm not particularly worried about a solution for IE6.</p>\n\n<p>Do any of the major frameworks (Dojo, jQuery, Prototype, Mootools) expose this in a simple cross-browser compatible way?</p>\n\n<p>Cheers,</p>\n",
            "last_activity_date": 1340914240,
            "question_id": 2387136,
            "score": 17,
            "tags": [
                "javascript",
                "cross-browser",
                "scroll"
            ],
            "title": "Cross-Browser Method to Determine Vertical Scroll Percentage in Javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Arrays are nothing but normal JavaScript objects, with some specialization. Quoting from <a href=\"http://es5.github.io/#x15.4\">Array Objects section of ECMA 5.1 Specification</a></p>\n\n<blockquote>\n  <p>Array objects give special treatment to a certain class of property names. A property name P (in the form of a String value) is an <em>array index</em> if and only if ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal to 2<sup>32</sup>\u22121.</p>\n</blockquote>\n\n<p>So, <em>array indices are nothing but properties of array objects</em>. Now, lets see about missing elements in an Array.</p>\n\n<p>Quoting from the <a href=\"http://es5.github.io/#x11.1.4\">ECMA 5.1 Standard Specification</a>,</p>\n\n<blockquote>\n  <p>Array elements may be elided at the beginning, middle or end of the\n  element list. Whenever a comma in the element list is not preceded by\n  an AssignmentExpression (i.e., a comma at the beginning or after\n  another comma), the missing array element contributes to the length of\n  the Array and increases the index of subsequent elements. Elided array\n  elements are not defined. If an element is elided at the end of an\n  array, that element does not contribute to the length of the Array.</p>\n</blockquote>\n\n<p>So, when you say</p>\n\n<pre><code>b = [1,,,,3];\n</code></pre>\n\n<p>except the elements 1 and 3, all others are treated as missing elements in the array. Now elements <code>1</code> and <code>3</code> correspond to the properties <code>0</code> and <code>4</code> (Array indices start with <code>0</code> in JavaScript).</p>\n\n<p>You can check that like this</p>\n\n<pre><code>console.log(Object.getOwnPropertyNames(b));\n# [ '0', '4', 'length' ]\nconsole.log(Object.getOwnPropertyNames(a));\n# [ '0', '1', '2', '3', '4', 'length' ]\n</code></pre>\n\n<p>Only the indices <code>0</code> and <code>4</code> are in <code>b</code>. You might be wondering why <code>a</code> has the properties from <code>0</code> to <code>4</code>, though the values are <code>undefined</code>. Because, the elements at indices 1, 2 and 3 <strong>are defined to be <a href=\"http://es5.github.io/#x8.1\"><code>undefined</code></a></strong>, where as in <code>b</code>, we don't know what those values are. That is why they are not allocated to a property (index).</p>\n\n<p>Now, you are checking if <code>1</code> is in <code>b</code>, with <code>in</code> operator. Quoting from <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/in#Summary\"><code>in</code> operator MDN Doc</a>,</p>\n\n<blockquote>\n  <p>The in operator returns true if the specified property is in the specified object.</p>\n</blockquote>\n\n<p>So, you are basically checking if <code>1</code> is one of the properties of <code>b</code>, which is not. That is why <code>'1'</code> in <code>b</code> returns <code>false</code>.</p>\n\n<h2>Note:</h2>\n\n<p>If you wanted to know if <code>1</code> is in the Array or not, you should use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\"><code>Array.prototype.indexOf</code></a>, like this</p>\n\n<pre><code>console.log(a.indexOf(1));\n# 0\nconsole.log(b.indexOf(1));\n# 0\nconsole.log(b.indexOf(5));\n# -1\n</code></pre>\n\n<p><code>Array.prototype.indexOf</code> returns <code>-1</code> if the element being searched is not there in the Array. So, you might want to do something like this</p>\n\n<pre><code>console.log(a.indexOf(1) !== -1);\n# true\nconsole.log(b.indexOf(1) !== -1);\n# true\nconsole.log(a.indexOf(5) !== -1);\n# false\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>In your example, a[1] is defined, but is set to <code>undefined</code>, therefore <code>1 in a == true</code>. By contrast, b[1] is not set at all, therefore <code>1 in b == false</code>. This is why some people say that <code>undefined</code> is weird.</p>\n\n<p>To check whether an array <code>a</code> has the <em>value</em> 1, use <code>a.indexOf(1) != -1</code>.</p>\n\n<p>To check whether the <code>a[1]</code> is defined, use <code>a.hasOwnProperty(\"1\")</code> (<code>1 in a</code> is subtly different, and is probably not actually what you want, because it can be true if <code>1</code> is defined in <code>a</code>'s prototype but not in <code>a</code> itself).</p>\n\n<p>To set <code>a[1]</code> to <code>undefined</code>, use <code>a[1] = undefined</code>.</p>\n\n<p>To make a <code>a[1]</code> stop being defined, use <code>delete a[1]</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Please consider the following snippet of code:</p>\n\n<pre><code>&gt; a = [1, undefined, undefined, undefined, 3]\n  [1, undefined, undefined, undefined, 3]\n&gt; b = [1,,,,3]\n  [1, undefined \u00d7 3, 3]\n&gt; 1 in a\n  true\n&gt; 1 in b\n  false\n</code></pre>\n\n<p>Am I missing something? It seems to be that, depending on how I define <code>undefined</code> elements in an array, the <code>in</code> operator behaves differently.</p>\n",
            "last_activity_date": 1419308744,
            "question_id": 22448330,
            "score": 16,
            "tags": [
                "javascript",
                "arrays"
            ],
            "title": "JavaScript &#39;in&#39; operator for `undefined` elements in Arrays"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I think it would work if you put this on your javascript:</p>\n\n<pre><code>$('.accordion-toggle').on('shown', function () {\n $(this).addClass('active') });\n\n$('.accordion-toggle').on('hidden', function () {\n $(this).removeClass('active') });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use the Collapse events for this.</p>\n\n<pre><code>$(function() {\n\n    $('.accordion').on('show', function (e) {\n         $(e.target).prev('.accordion-heading').find('.accordion-toggle').addClass('active');\n    });\n\n    $('.accordion').on('hide', function (e) {\n        $(this).find('.accordion-toggle').not($(e.target)).removeClass('active');\n    });\n\n});\u200b\n</code></pre>\n\n<p>Here's a JsFiddle <a href=\"http://jsfiddle.net/D2RLR/251/\">http://jsfiddle.net/D2RLR/251/</a></p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>I've tried Michael D. Irizarry's solution but that didn't work for me.\nSo I came up with my own code:</p>\n\n<pre><code>$(function() {\n    $('a.accordion-toggle').click(function(e) {\n        e.preventDefault();\n        if(!$(this).parent().hasClass('active')) {\n            $('.accordion-heading').removeClass('active');\n            $('.accordion-body').removeClass('active');\n            $(this).parent().addClass('active').next().addClass('active');\n        } else {\n            $('.accordion-heading').removeClass('active');\n            $('.accordion-body').removeClass('active');\n        }\n    });\n});\n</code></pre>\n\n<p>If the accordion-heading already does not have a class of active, all accordion-headings &amp; bodies lose the active class, and the one that has been clicked and it's corresponding body tag will get the class added.</p>\n\n<p>If it already has the class active (so if it is already open and been clicked) then the active class is removed and nothing else happens.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>simply check for the collapsed class added by the BS Code:</p>\n\n<pre><code>$('a.accordion-toggle').on('click', function () {\n    if( $(this).hasClass('collapsed') !== true ){\n        $(this).removeClass('active');\n    }else{\n        $(this).addClass('active');\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's my solution to this problem. Based on some of the great answers above, but adapted to work with Bootstrap 3.1.x</p>\n\n<pre><code>$('#accordion')\n  .on('show.bs.collapse', function(e) {\n    $(e.target).prev('.panel-heading').addClass('active');\n  })\n  .on('hide.bs.collapse', function(e) {\n    $(e.target).prev('.panel-heading').removeClass('active');\n  });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This works for me..</p>\n\n<pre><code>$('.panel-default').on('show.bs.collapse', function () {\n     $('.panel-heading').addClass('active');\n});\n\n$('.panel-default').on('hide.bs.collapse', function () {\n     $('.panel-heading').removeClass('active');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I think this is the simplest way so far.</p>\n\n<pre><code>$('a.accordion-toggle').on('click', function () {\n  $('a.accordion-toggle').removeClass('active');\n  $(this).addClass('active');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am a jquery/javascript newbie.  What I want to do is add a class to the open accordion title, and remove it when i open another.</p>\n\n<p>heres the code:</p>\n\n<pre><code>&lt;div class=\"accordion\" data-collapse-type=\"manual\" id=\"parent\"&gt;\n  &lt;div class=\"accordion-group\"&gt;\n    &lt;div class=\"accordion-heading\"&gt;             \n      &lt;a class=\"accordion-toggle category\" data-toggle=\"collapse\" data-parent=\"#parent\" href=\"#category1\"&gt;Category 1\n      &lt;/a&gt;\n    &lt;/div&gt;&lt;!--/accordion-heading--&gt;\n    &lt;div id=\"category1\" class=\"accordion-body collapse\"&gt;\n      &lt;ul class=\"accordion-inner unstyled\"&gt;\n        &lt;li id=\"\" class=\"sidelink\"&gt;&lt;a href=\"\"&gt;Open Link 1&lt;/a&gt;&lt;/li&gt;\n        &lt;li id=\"\" class=\"sidelink\"&gt;&lt;a href=\"\"&gt;Open Link 2&lt;/a&gt;&lt;/li&gt;\n        &lt;li id=\"\" class=\"sidelink\"&gt;&lt;a href=\"\"&gt;Open Link 3&lt;/a&gt;&lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/div&gt;&lt;!--/category1--&gt;\n  &lt;/div&gt;&lt;!--/accordion-group--&gt;\n  &lt;div class=\"accordion-group\"&gt;\n    &lt;div class=\"accordion-heading\"&gt;\n      &lt;a class=\"accordion-toggle category\" href=\"#Category2\"&gt;Category 2&lt;/a&gt;\n    &lt;/div&gt;&lt;!--/accordion-heading--&gt;\n  &lt;/div&gt;&lt;!--/accordion-group--&gt;\n&lt;/div&gt;&lt;!--/accordion--&gt;\n</code></pre>\n\n<p>The scripts I have attached with the page are</p>\n\n<pre><code>&lt;script src=\"js/jquery-1.7.1.min.js\"&gt;&lt;/script&gt;\n&lt;script src=\"js/bootstrap.min.js\"&gt;&lt;/script&gt;\n&lt;script src=\"js/jquery.tools.min.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>So what I was looking for was to add the <strong>.active</strong> class to a.accordion-toggle whenever the menu is open (accordion style), and then have it go away once another is selected.  I've looked at the documentation to bootstrap <a href=\"http://twitter.github.com/bootstrap/javascript.html#collapse\">here</a>, but it doesnt seem to help me out a lot (since I don't know what to do with the </p>\n\n<blockquote>\n  <p>$('#myCollapsible').on('hidden', function () {   // do something\u2026 })</p>\n</blockquote>\n\n<p>or where to place it)  I've also tried the <strong>.addClass()</strong> jquery adder, but I could only get the javascript version <strong>document.getElementById(\"accordion-heading\").className += \" newClass\";</strong> to work (if I gave the accordion group title an ID, but in this case there will be multiple accordion groups) when I put the script right after the div layer.</p>\n",
            "last_activity_date": 1408613800,
            "question_id": 10918801,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui",
                "twitter-bootstrap",
                "accordion"
            ],
            "title": "Twitter bootstrap: adding a class to the open accordion title"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Due to performance, i think '===' has better performance, because '===' is strict than '==',</p>\n\n<p>e.g. try the following in chrome console.</p>\n\n<pre><code>&gt; 1 == '1'\n  true\n&gt; 1 === '1'\n  false\n</code></pre>\n\n<p>'==' has to check more things than '==='</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Strict comparison (<code>===</code>) will always be slightly faster, but <a href=\"http://jsperf.com/triple-equals-vs-double-equals/3\">the difference is usually negligible</a>.</p>\n\n<p>It definitely makes sense to prefer <code>===</code> if you know for certain that you don't need type coercion in the comparison. It will always be at least as fast as <code>==</code>.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>From some flimsy tests, <code>==</code> appears to be marginally quicker than <code>===</code>.</p>\n\n<p>By marginally, I mean that I can see a few milliseconds difference on interations of many millions of tests. You can't possibly need the performance gain, rather than using whatever is most correct for the task at hand.</p>\n\n<p>EDIT: actually, seems to depend on /what/ you're comparing and the browser implementation. In other words, don't worry about it.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<ul>\n<li><p>If the types compared are the same, <strong><em>they are identical</em></strong>. That is to say they use <strong><em>the exact same algorithm</em></strong>.</p></li>\n<li><p>If the types are <em>different</em>, then performance is irrelevant. Either you need type coercion, or you don't. If you don't need it, don't use <code>==</code> because the result you get may be unexpected.</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>Edit: for reference here's the <strong>by the spec</strong> explanation by Dr. Axel Rauschmayer\n<a href=\"http://www.2ality.com/2011/06/javascript-equality.html\">http://www.2ality.com/2011/06/javascript-equality.html</a>\nReally great write up.</p>\n\n<p><code>===</code> (Strict Equality): Only considers values equal that have the same type.</p>\n\n<ol>\n<li>undefined === undefined, null === null,</li>\n<li>NaN === nothing including itself,</li>\n<li>Primitive [Number|String|Boolean] === primitive value equal,</li>\n<li>to self (+0 === -0)\n5  Two objects [Array|Object|Function] === Only self (same exact entity)</li>\n</ol>\n\n<p><code>==</code> (Lenient Equality)</p>\n\n<ol>\n<li>If both values have the same type: compare with ===.</li>\n<li>undefined == null</li>\n<li>number and string: string => number and compare</li>\n<li>boolean and non-boolean => non-boolean to number and compare</li>\n<li>string or number => an object: convert object to primitive and comparison.</li>\n</ol>\n\n<p>In all modern Javascript environments they are implemented completely different. In simple terms, <code>==</code> tests for alikeness via converting given variables into primitives (string, number, boolean). <code>===</code> tests for strict sameness, which means exact same Object or primitive value without conversion.</p>\n\n<p>If you do\n<code>objOne == objTwo</code>\nwhat actually happens is\n<code>[[EQUALS]].call(objOne.valueOf(), objTwo.valueOf())</code></p>\n\n<p>The resolution of valueOf can be somewhat involved, bouncing between functions exposed in JS and internal engine stuff. Suffice to say that the comparison will always end up with two values coerced to primitive or an error will be thrown.</p>\n\n<p>Edit: <code>EQUALS</code> actually tries <code>STRICT_EQUALS</code> first which preempts the rest of the process.</p>\n\n<p>The interesting bit here is that valueOf (and its partner toString) are overridable. Run this piece of code in Chrome (I think any webkit, not sure if JSC and V8 share this tidbit). It will blow your mindpiece:</p>\n\n<pre><code>var actions = [];\nvar overload = {\n  valueOf: function(){\n    var caller = arguments.callee.caller;\n    actions.push({\n      operation: caller.name,\n      left: caller.arguments[0] === this ? \"unknown\" : this,\n      right: caller.arguments[0]\n    });\n    return Object.prototype.toString.call(this);\n  }\n};\noverload.toString = overload.valueOf;\noverload == 10;\noverload === 10;\noverload * 10;\n10 / overload;\noverload in window;\n-overload;\n+overload;\noverload &lt; 5;\noverload &gt; 5;\n[][overload];\noverload == overload;\nconsole.log(actions);\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>[ { operation: 'EQUALS',\n    left: overload,\n    right: 10 },\n  { operation: 'MUL',\n    left: overload,\n    right: 10 },\n  { operation: 'DIV',\n    left: 'unknown',\n    right: overload },\n  { operation: 'IN',\n    left: overload,\n    right: DOMWindow },\n  { operation: 'UNARY_MINUS',\n    left: overload,\n    right: undefined },\n  { operation: 'TO_NUMBER',\n    left: overload,\n    right: undefined },\n  { operation: 'COMPARE',\n    left: overload,\n    right: 5 },\n  { operation: 'COMPARE',\n    left: 'unknown',\n    right: overload },\n  { operation: 'ToString',\n    left: 'unknown',\n    right: overload } ]\n</code></pre>\n\n<p>The essence of the difference between <code>==</code> and <code>===</code> is illustrated by <code>===</code> not showing up in that list. It skips the journey into JavascriptLand entirely. That adventure is expensive when comparing performance.</p>\n\n<p>However you need to account for engine optimizations. For most objects, the engine will be able to cut out most of the steps and stay in NativeLand and get almost the same performance. But this isn't a guarantee and if something prevents the engine from being able to use the optimizations, some fancyness in your code or overriding the builtins or a myriad of issues, then you instantly see the result in performance. <code>===</code> forces it.</p>\n\n<p><code>===</code> is just about the only immutable thing in Javascript.</p>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>In JavaScript is there a performance difference between using a double equals (<code>==</code>) vs using a triple equals (<code>===</code>)?</p>\n\n<p>Example: <code>if (foo == bar)</code> vs <code>if (foo === bar)</code></p>\n",
            "last_activity_date": 1320929457,
            "question_id": 8044750,
            "score": 16,
            "tags": [
                "javascript",
                "performance",
                "comparison"
            ],
            "title": "JavaScript performance difference between double equals (`==`) and triple equals (`===`)"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>A solution of sorts:</p>\n\n<pre><code>var cssAnimation = document.createElement('style');\ncssAnimation.type = 'text/css';\nvar rules = document.createTextNode('@-webkit-keyframes slider {'+\n'from { left:100px; }'+\n'80% { left:150px; }'+\n'90% { left:160px; }'+\n'to { left:150px; }'+\n'}');\ncssAnimation.appendChild(rules);\ndocument.getElementsByTagName(\"head\")[0].appendChild(cssAnimation);\n</code></pre>\n\n<p>Just adds a style definition to the header. Would be much cleaner/better to define it though the DOM if possible.</p>\n\n<p>Edit: Error in Chrome with old method</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>To solve this I added a 'webkit animation name' to my CSS selector and then created separate rules for my options, in my example red and yellow colouring:</p>\n\n<pre><code>.spinner {\n-webkit-animation-name: spinnerColorRed;\n}\n\n@-webkit-keyframes spinnerColorRed {\n  from {\n    background-color: Black;\n  }\n  to {\n    background-color: Red;\n  }\n}\n\n@-webkit-keyframes spinnerColorYellow {\n  from {\n    background-color: Black;\n  }\n  to {\n    background-color: Yellow;\n  }\n}\n</code></pre>\n\n<p>Then using jQuery:</p>\n\n<pre><code>$(\"#link\").click(function(event) { \n  event.preventDefault();\n  $(\".spinner\").css(\"-webkit-animation-name\", \"spinnerColorYellow\");\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The way I handle this is to not set either the from or to of the element style I am manipulating in the css file and before triggering the animation I will set the element style that it should go to with javascript. This way you are free to dynamically manage what stuff should do until we can manage this directly in js. You only need to specify one of the two. The setTimeout allows the application of the css rule to the element before the animation is triggered otherwise you would have a race condition and it wouldn't animate.</p>\n\n<pre><code>\n#someDiv.slideIn {\n    -webkit-animation: slideIn 0.5s ease;\n}\n\n@-webkit-keyframes slideIn {\n    0% {\n        left:0px;\n    }\n\n    100% {}\n}\n\n\nvar someDiv = document.getElementById('someDiv');\nsomeDiv.style.left = '-50px';\nsetTimeout(function(){\n    someDiv.addClass('slideIn');\n},0);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can use the CSS DOM interface. For instance:</p>\n\n<pre><code>&lt;html&gt;\n    &lt;body&gt;\n        &lt;style&gt;\n        @keyframes fadeout {\n            from { opacity:1; }\n            to { opacity:0; }\n        }\n        &lt;/style&gt;\n        &lt;script text=\"javascript\"&gt;\n            var stylesheet = document.styleSheets[0];\n            var fadeOutRule = stylesheet.cssRules[0];\n            alert( fadeOutRule.name ); // alerts \"fadeout\"\n\n            var fadeOutRule_From = fadeOutRule.cssRules[0];\n            var fadeOutRule_To = fadeOutRule.cssRules[1];\n            alert( fadeOutRule_From.keyText ); // alerts \"0%\" ( and not \"from\" as you might expect)\n            alert( fadeOutRule_To.keyText ); // alerts \"100%\"\n\n            var fadeOutRule_To_Style = fadeOutRule_To.style;\n\n            alert( fadeOutRule_To_Style.cssText ); // alerts \"opacity:0;\"\n\n            fadeOutRule_To_Style.setProperty('color', 'red'); // add the style color:red\n            fadeOutRule_To_Style.removeProperty('opacity'); // remove the style opacity\n\n            alert( fadeOutRule_To_Style.cssText ); // alerts \"color:red;\"\n        &lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>This example covers several different browsers:</p>\n\n<pre><code>var keyFramePrefixes = [\"-webkit-\", \"-o-\", \"-moz-\", \"\"];\nvar keyFrames = [];\nvar textNode = null;\n\nfor (var i in keyFramePrefixes){\n\nkeyFrames = '@'+keyFramePrefixes[i]+'keyframes cloudsMove {'+\n'from {'+keyFramePrefixes[i]+'transform: translate(0px,0px);}'+\n'to {'+keyFramePrefixes[i]+'transform: translate(1440px'\n'px,0px);}}';\n\ntextNode = document.createTextNode(keyFrames);\ndocument.getElementsByTagName(\"style\")[0].appendChild(textNode);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there any way to set the <code>from</code> or <code>to</code> of a webkit-keyframe with JavaScript?</p>\n",
            "last_activity_date": 1418005491,
            "question_id": 3328933,
            "score": 16,
            "tags": [
                "javascript",
                "webkit",
                "css3"
            ],
            "title": "Set the webkit-keyframes from/to parameter with JavaScript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>If you just need a good date-parsing function, I would look at <a href=\"http://www.datejs.com/\">date.js</a>. It will take just about any date string you can throw at it, and return you a JavaScript Date object.</p>\n\n<p>Once you have a Date object, you can call its getTime() method, which will give you milliseconds since January 1, 1970. Just divide that result by 1000 to get the unix timestamp value.</p>\n\n<p>In code, just include date.js, then:</p>\n\n<pre><code>var unixtime = Date.parse(\"24-Nov-2009 17:57:35\").getTime()/1000\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>Seems like <code>getTime</code> is not function on above answer.</p>\n\n<pre><code>Date.parse(currentDate)/1000\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I'm displaying the date and time like this</p>\n\n<blockquote>\n  <p>24-Nov-2009 17:57:35</p>\n</blockquote>\n\n<p>I'd like to convert it to a unix timestamp so I can manipulate it easily. I'd need to use regex to match each part of the string then work out the unix timestamp from that.</p>\n\n<p>I'm awful with regex but I came up with this. Please suggest improvements ^.^</p>\n\n<pre><code>/((\\d){2}+)-((Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)+)-((\\d){4}+) ((\\d){2}+):((\\d){2}+):((\\d){2}+)/gi\n</code></pre>\n\n<p>How can I do this?</p>\n",
            "last_activity_date": 1407922218,
            "question_id": 1791895,
            "score": 16,
            "tags": [
                "javascript",
                "regex",
                "unix",
                "timestamp"
            ],
            "title": "Converting Date and Time To Unix Timestamp"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I think Adobe needs to drop the focus when the mouse goes out of its client area, or provide an option to do so. </p>\n\n<p>However I think most Flash developers (and especially those who make games) rely on the fact that keyboard input is caught by the flash application regardless of where the mouse is.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can return the focus to the browser by doing a geturl can calling javascript on the HTML page:</p>\n\n<pre><code>document.body.focus()\n</code></pre>\n\n<p>How you do this in your Flash movie will depend on how the user interaction with the movie works. You could keep doing it on a timer, or when a control loses focus, or when the mouse moves. It depends.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use the ExternalInterface class within Flash to call JavaScript. For example you could set up a function on an interval (Event.ENTER_FRAME for example) to call the JavaScript function that @Diodeus mentioned:</p>\n\n<pre><code>document.body.focus();\n</code></pre>\n\n<p>Or, an even better solution would be to add an event listener to the flash root (stage) to listen for when the mouse leaves Flash. You can set up this event to move focus to the document.body.</p>\n\n<p>AS3</p>\n\n<pre><code>package {\n   import flash.display.*;\n   import flash.events.*;\n   import flash.external.ExternalInterface;\n\n    public class TestMouseLeave extends Sprite\n    {\n    \tpublic function TestMouseLeave()\n    \t{\n    \t\t// Add event listener for when the mouse LEAVES FLASH\n    \t\taddEventListener(MouseEvent.MOUSE_OUT, onMouseLeave);\n    \t}\n\n    \tprivate function onMouseLeave(ev:Event):void\n    \t{\n    \t\tvar jslink = new ExternalInterface();\n    \t\tjslink.call(\"changeFocus\");\n    \t}\n    }\n\n}\n</code></pre>\n\n<p>Javascript on your page:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" language=\"javascript\"&gt;\n    function changeFocus(){\n    \tdocument.body.focus();\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>Let me know if you want an AS2 example, and I'll post it up.</p>\n\n<p><em>Wanted to make a note about this solution:  Once you push focus back to the browser, you will require that the user click on the Flash plug-in again to activate user input inside the flash plug-in.  This could be a jarring user experience, and is something to consider when using this solution.</em> </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>    &lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;mx:Application xmlns:mx=\"http://www.adobe.com/2006/mxml\" layout=\"absolute\" creationComplete=\"init();\"&gt;\n    &lt;mx:Script&gt;\n    \t&lt;![CDATA[\n    \t\tprivate function init():void {\n    \t\t\ti.setFocus();\n    \t\t    this.addEventListener(KeyboardEvent.KEY_UP,keyPressed);\n    \t\t}\n\n    \t\tprivate function keyPressed(event:KeyboardEvent):void {\n    \t\t\tif(event.keyCode.toString()==\"84\" &amp;&amp; event.ctrlKey==true)\n    \t\t\t\tExternalInterface.call('newtab');\n    \t\t}\n\n    \t]]&gt;\n    &lt;/mx:Script&gt;\n    &lt;mx:TextInput x=\"23\" y=\"268\" width=\"256\" id=\"i\" text=\"Text Box\"/&gt;\n&lt;/mx:Application&gt;\n\n&lt;script type=\"text/javascript\"&gt;\nfunction newtab(e){\n    document.body.focus();\n    window.open('about:blank');\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>Now, what happens with other keyboards? is 84 standard for T? I like the focus idea, but in full browser apps there is not as much room to lose the focus. \nThe user could change the key combo as well, I don't think these is much of a complete fix for this one without flash polling the command config from the browser and then listening for the combo as we are basically doing here. I dunno.</p>\n\n<p>This  also just attempts to open a new window after giving focus, there is no sense to me in making the user press it twice unless they block the window like a popup. But focus is called first so, if that happens the second attempt should work. You could alert the user in a browser app if needed.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In Firefox, <code>document.body.focus();</code> doesn't work.  Using the same idea as Cl\u00e1udio Silva's solution to this <a href=\"http://stackoverflow.com/questions/594821/object-focus-problem-with-safari-and-chrome-browsers\">Chrome issue</a>, the following JavaScript will work in Firefox:</p>\n\n<pre><code>document.body.tabIndex = 0;\ndocument.body.focus();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There's a solution below in case somebody needs it. For me, that works quite nicely. I can click around my Flash but still use all the browser keyboard functionality (the focus is shifted to the html part when clicked inside the Flash).</p>\n\n<p><a href=\"http://forums.adobe.com/message/3431403#3431403\" rel=\"nofollow\">http://forums.adobe.com/message/3431403#3431403</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a flash app in my page, and when a user interacts with the flash app, the browser/html/javascript stops receiving keyboard input.  </p>\n\n<p>For example, in Firefox control-t no longer opens a new tab.</p>\n\n<p>However, if I click on part of the page that isn't flash, the browser starts receiving these events again.</p>\n\n<p>Is there anyway to programatically (either through flash or javascript) to return focus to the browser?</p>\n\n<p>After the user clicks a button in flash, I have the flash executing a javascript callback, so I've tried giving focus to a form field (and to the body) through javascript, but that approach doesn't seem to be working.</p>\n\n<p>A perhaps more concrete example is Youtube.  They also have this problem.  When I click the play/pause button, or adjust the volume, I would expect my browser keyboard controls to still work, but they don't, I have to click somewhere on the page outside the movie area.  This is the exact problem I'm trying to solve.</p>\n",
            "last_activity_date": 1296160088,
            "question_id": 254111,
            "score": 16,
            "tags": [
                "javascript",
                "html",
                "flash"
            ],
            "title": "Flash steals browser focus"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The thing is that, server has different settings from a browser.\nInfinity is the variable \"Number.POSITIVE_INFINITY\" but if you check out another variable, the \"Number.MAX_INTEGER\" my chrome gives:</p>\n\n<pre><code>console.log( Number.MAX_INTEGER ) // prints 9007199254740991\n</code></pre>\n\n<p>and 9007199254740991 is smaller than 16331778728383844, so probably chrome decide every number bigger than Number.MAX_INTEGER to be Infinity.</p>\n\n<p>On node js\nconsole.log( Number.MAX_INTEGER ) // prints 1.7976931348623157e+308</p>\n\n<p>Chrome and node js has different up and down limits for Numbers.</p>\n\n<p>To sum up, on <strong>nodejs</strong> <code>Number.MAX_INTEGER</code> <strong>is bigger than</strong> <code>Math.tan(Math.PI/2)</code>\nwhile <strong>chrome</strong>'s <code>Number.MAX_INTEGER</code> <strong>is smaller than</strong> <code>Math.tan(Math.PI/2)</code> .</p>\n\n<p>So <strong>nodejs see a number</strong> while <strong>chrome see Infinity</strong>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you type:</p>\n\n<pre><code>Math.PI/2\n</code></pre>\n\n<p>Do you get exactly &pi;/2? Nope ;)</p>\n\n<p>Therefore, it can't \"accurately\" calculate <code>Math.tan(Math.PI/2)</code> as being <code>Infinity</code> because it doesn't have the precision for <code>Math.PI/2</code>.</p>\n\n<p>But in some cases (such as Chrome), the loss of precision is so small that it gets <code>Infinity</code> anyway.</p>\n\n<p>To illustrate this, take a look at this console output:</p>\n\n<pre><code>Math.PI/2  \n&gt; 1.5707963267948966  \n\nMath.tan(1.5707963267948964)  \n&gt; 5039790063769915  \n\nMath.tan(1.5707963267948965)  \n&gt; Infinity  \n\nMath.tan(1.5707963267948966)  \n&gt; Infinity  \n\nMath.tan(1.5707963267948967)  \n&gt; -5039790063769915\n</code></pre>\n\n<p>Notice how there are actually two values that result in <code>Infinity</code>? That's the inaccuracy.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>With HEAD version</p>\n\n<pre><code>node -v\nv0.11.14-pre\n\nnode\n&gt; Math.tan(Math.PI/2)\nInfinity\n</code></pre>\n\n<p><a href=\"https://github.com/joyent/node/issues/7852\" rel=\"nofollow\">https://github.com/joyent/node/issues/7852</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you look at the <a href=\"https://code.google.com/p/v8/codesearch#v8/trunk/src/math.js&amp;q=tan&amp;sq=package%3av8&amp;l=180\">v8 implementation of the <code>Math</code> object</a>, you see:</p>\n\n<pre><code>function MathTan(x) {\n  return MathSin(x) / MathCos(x);\n}\n</code></pre>\n\n<p>Indeed, <code>Math.cos(Math.PI/2)</code> returns an unusual value in Node as well (in fact, the reciprocal of your unusual <code>Math.tan</code> result):</p>\n\n<pre><code>&gt; Math.cos(Math.PI/2)\n6.123031769111886e-17  // in Chrome, this is 0\n</code></pre>\n\n<p>So, your question reduces to: <em>Why is <code>Math.cos(Math.PI/2)</code> non-zero in Node &lt;=0.10.24?</em></p>\n\n<p>This is difficult to answer. The implementation of sine and cosine are supplied by a math-heavy function called <a href=\"https://code.google.com/p/v8/codesearch#v8/trunk/src/math.js&amp;q=math&amp;sq=package%3av8&amp;l=221\"><code>TrigonometricInterpolation</code></a>, which relies on a reverse lookup table of 1800 sample values generated by C++ code, code which is itself generated <a href=\"https://code.google.com/p/v8/codesearch#v8/trunk/tools/generate-trig-table.py&amp;q=trig&amp;sq=package%3av8&amp;l=1\">a Python script when v8 is first installed</a>.</p>\n\n<p>It is also worth noting, however, that the current trig lookup table code <a href=\"https://github.com/v8/v8/commit/33b5db090258c2a2dc825659c3ad109bd02110c1\">very recently replaced an older lookup table</a>, so the current release of Node may not be using the most recent trig lookup table (since new code arrived in v8 on Nov. 22, 2013, but <a href=\"https://github.com/joyent/node/commits/master/deps/v8/src/math.js\">the only pull from v8 into Node</a> prior to the 0.10.24 release in December 2013 was on Nov 11, 2013, eleven days prior to the change). Chrome probably is using up-to-date code, while current stable Node is using different trigonometric code.</p>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>When running this in a node command-line interface: </p>\n\n<pre><code>&gt; Math.tan(Math.PI/2)\n16331778728383844 \n</code></pre>\n\n<p>But in Chrome: </p>\n\n<pre><code>&gt; Math.tan(Math.PI/2)\nInfinity\n</code></pre>\n\n<p>Aren't both using the same V8 engine?</p>\n\n<p>Node's result is not even equal to the <a href=\"http://stackoverflow.com/questions/307179/what-is-javascripts-max-int-whats-the-highest-integer-value-a-number-can-go-t\">maximum \"integer\" value in JavaScript</a>.</p>\n",
            "last_activity_date": 1404001183,
            "question_id": 24455775,
            "score": 15,
            "tags": [
                "javascript",
                "node.js",
                "math",
                "v8",
                "infinity"
            ],
            "title": "Why does node not evaluate Math.tan(Math.PI/2) to Infinity but Chrome V8 does?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Your problem is that ng-controller should point to controller itself, not just string with controller's name. </p>\n\n<p>So you might want to define $scope.sidepanels as array with pointers to controllers, something like this, maybe:</p>\n\n<pre><code>$scope.sidepanels = [Alerts, Subscriptions];\n</code></pre>\n\n<p>Here is the working example on js fiddle <a href=\"http://jsfiddle.net/ADukg/1559/\">http://jsfiddle.net/ADukg/1559/</a></p>\n\n<p>However, i find very weird all this situation when you might want to set up controllers in ngRepeat.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>I believe you're having this problem because you're defining your controllers like this (just like I'm used to do):</p>\n\n<pre><code>app.controller('ControllerX', function() {\n    // your controller implementation        \n});\n</code></pre>\n\n<p>If that's the case, you cannot simply use references to <code>ControllerX</code> because the controller implementation (or 'Class', if you want to call it that) is not on the global scope (instead it is stored on the application <code>$controllerProvider</code>). </p>\n\n<p>I would suggest you to use templates instead of dynamically assign controller references (or even manually create them).</p>\n\n<p><strong>Controllers</strong></p>\n\n<pre><code>var app = angular.module('app', []);    \napp.controller('Ctrl', function($scope, $controller) {\n    $scope.panels = [{template: 'panel1.html'}, {template: 'panel2.html'}];        \n});\n\napp.controller(\"Panel1Ctrl\", function($scope) {\n    $scope.id = 1;\n});\napp.controller(\"Panel2Ctrl\", function($scope) {\n    $scope.id = 2;\n});\n</code></pre>\n\n<p><strong>Templates (mocks)</strong></p>\n\n<pre><code>&lt;!-- panel1.html --&gt;\n&lt;script type=\"text/ng-template\" id=\"panel1.html\"&gt;\n  &lt;div ng-controller=\"Panel1Ctrl\"&gt;\n    Content of panel {{id}}\n  &lt;/div&gt;\n&lt;/script&gt;\n\n&lt;!-- panel2.html --&gt;\n&lt;script type=\"text/ng-template\" id=\"panel2.html\"&gt;\n  &lt;div ng-controller=\"Panel2Ctrl\"&gt;\n    Content of panel {{id}}\n  &lt;/div&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>View</strong></p>\n\n<pre><code>&lt;div ng-controller=\"Ctrl\"&gt;\n    &lt;div ng-repeat=\"panel in panels\"&gt;\n        &lt;div ng-include src=\"panel.template\"&gt;&lt;/div&gt;        \n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>jsFiddle: <a href=\"http://jsfiddle.net/Xn4H8/\" rel=\"nofollow\">http://jsfiddle.net/Xn4H8/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Another way is to not use ng-repeat, but a directive to compile them into existence.</p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;mysections&gt;&lt;/mysections&gt;\n</code></pre>\n\n<p><strong>Directive</strong></p>\n\n<pre><code>angular.module('app.directives', [])\n    .directive('mysections', ['$compile', function(compile){\n        return {\n            restrict: 'E',\n            link: function(scope, element, attrs) {\n                for(var i=0; i&lt;panels.length; i++) {\n                    var template = '&lt;section&gt;&lt;div ng-include=\"path/to/file.html\" ng-controller=\"'+panels[i]+'\"&gt;&lt;/div&gt;&lt;/section&gt;';\n                    var cTemplate = compile(template)(scope);\n\n                    element.append(cTemplate);\n                }\n            }\n        }\n    }]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>To dynamically set a controller in a template, it helps to have a reference to the <em>constructor</em> function associated to a controller.  The constructor function for a controller is the function you pass in to the <code>controller()</code> method of Angular's <a href=\"https://docs.angularjs.org/api/ng/type/angular.Module\" rel=\"nofollow\">module API</a>.</p>\n\n<p>Having this helps because if the string passed to the <a href=\"https://docs.angularjs.org/api/ng/directive/ngController\" rel=\"nofollow\"><code>ngController</code></a> directive is not the name of a registered controller, then <code>ngController</code> treats the string as an expression to be evaluated on the current scope.  This scope expression needs to evaluate to a controller <em>constructor</em>.  </p>\n\n<p>For example, say Angular encounters the following in a template:</p>\n\n<pre><code>ng-controller=\"myController\"\n</code></pre>\n\n<p>If no controller with the name <code>myController</code> is registered, then Angular will look at <code>$scope.myController</code> in the current containing controller.  If this key exists in the scope and the corresponding value is a controller <em>constructor</em>, then the controller will be used.</p>\n\n<p>This is mentioned in the <a href=\"https://docs.angularjs.org/api/ng/directive/ngController\" rel=\"nofollow\"><code>ngController</code></a> documentation in its description of the parameter value: \"Name of a globally accessible constructor function or an expression that on the current scope evaluates to a constructor function.\"  Code comments in the Angular source code spell this out in more detail <a href=\"https://github.com/angular/angular.js/blob/02354201963dc455c6435446cdd321b7517732a8/src/ng/controller.js#L43\" rel=\"nofollow\">here in <code>src/ng/controller.js</code></a>.</p>\n\n<p>By default, Angular does not make it easy to access the constructor associated to a controller.  This is because when you register a controller using the <code>controller()</code> method of Angular's <a href=\"https://docs.angularjs.org/api/ng/type/angular.Module\" rel=\"nofollow\">module API</a>, it hides the constructor you pass it in a private variable.  You can see this here in the <a href=\"https://github.com/angular/angular.js/blob/02354201963dc455c6435446cdd321b7517732a8/src/ng/controller.js#L31\" rel=\"nofollow\">$ControllerProvider source code</a>.  (The <code>controllers</code> variable in this code is a variable private to <code>$ControllerProvider</code>.)</p>\n\n<p>My solution to this issue is to create a generic helper service called <code>registerController</code> for registering controllers.  This service exposes both the controller <em>and</em> the controller constructor when registering a controller.  This allows the controller to be used both in the normal fashion and dynamically.</p>\n\n<p>Here is code I wrote for a <code>registerController</code> service that does this:</p>\n\n<pre><code>var appServices = angular.module('app.services', []);\n\n// Define a registerController service that creates a new controller\n// in the usual way.  In addition, the service registers the\n// controller's constructor as a service.  This allows the controller\n// to be set dynamically within a template.\nappServices.config(['$controllerProvider', '$injector', '$provide',\n  function ($controllerProvider, $injector, $provide) {\n    $provide.factory('registerController',\n      function registerControllerFactory() {\n        // Params:\n        //   constructor: controller constructor function, optionally\n        //     in the annotated array form.\n        return function registerController(name, constructor) {\n            // Register the controller constructor as a service.\n            $provide.factory(name + 'Factory', function () {\n                return constructor;\n            });\n            // Register the controller itself.\n            $controllerProvider.register(name, constructor);\n        };\n    });\n}]);\n</code></pre>\n\n<p>Here is an example of using the service to register a controller:</p>\n\n<pre><code>appServices.run(['registerController',\n  function (registerController) {\n\n    registerController('testCtrl', ['$scope',\n      function testCtrl($scope) {\n        $scope.foo = 'bar';\n    }]);\n\n}]);\n</code></pre>\n\n<p>The code above registers the controller under the name <code>testCtrl</code>, and it also exposes the controller's constructor as a service called <code>testCtrlFactory</code>.</p>\n\n<p>Now you can use the controller in a template either in the usual fashion--</p>\n\n<pre><code>ng-controller=\"testCtrl\"\n</code></pre>\n\n<p>or dynamically--</p>\n\n<pre><code>ng-controller=\"templateController\"\n</code></pre>\n\n<p>For the latter to work, you must have the following in your current scope:</p>\n\n<pre><code>$scope.templateController = testCtrlFactory\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Ok I think the simplest solution here is to define the controller explicitly on the template of your file. Let's say u have an array: </p>\n\n<pre><code>$scope.widgets = [\n      {templateUrl: 'templates/widgets/aWidget.html'},\n      {templateUrl: 'templates/widgets/bWidget.html'},\n];\n</code></pre>\n\n<p>Then on your html file:</p>\n\n<pre><code>&lt;div ng-repeat=\"widget in widgets\"&gt;\n    &lt;div ng-include=\"widget.templateUrl\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>And the solution aWidget.html:</p>\n\n<pre><code>&lt;div ng-controller=\"aWidgetCtrl\"&gt;\n   aWidget\n&lt;/div&gt;\n</code></pre>\n\n<p>bWidget.html:</p>\n\n<pre><code>&lt;div ng-controller=\"bWidgetCtrl\"&gt;\n   bWidget\n&lt;/div&gt;\n</code></pre>\n\n<p>Simple as that! You just define the controller name in your template. Since you define the controllers as bmleite said:</p>\n\n<pre><code>app.controller('ControllerX', function() {\n// your controller implementation        \n});\n</code></pre>\n\n<p>then this is the best workaround I could come up with. The only issue here is if u have like 50 controllers, u'll have to define them explicitly on each template, but I guess u had to do this anyway since you have an ng-repeat with controller set by hand. </p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I'm trying to dynamically assign a controller for included template like so:</p>\n\n<pre><code>&lt;section ng-repeat=\"panel in panels\"&gt;\n    &lt;div ng-include=\"'path/to/file.html'\" ng-controller=\"{{panel}}\"&gt;&lt;/div&gt;\n&lt;/section&gt;\n</code></pre>\n\n<p>But Angular complains that <code>{{panel}}</code> is undefined.</p>\n\n<p>I'm guessing that <code>{{panel}}</code> isn't defined <em>yet</em> (because I can echo out <code>{{panel}}</code> inside the template).</p>\n\n<p>I've seen plenty of examples of people setting <code>ng-controller</code> equal to a variable like so: <code>ng-controller=\"template.ctrlr\"</code>. But, without creating a duplicate concurrant loop, I can't figure out how to have the value of <code>{{panel}}</code> available when <code>ng-controller</code> needs it.</p>\n\n<p>P.S. I also tried setting <code>ng-controller=\"{{panel}}\"</code> in my template (thinking it must have resolved by then), but no dice.</p>\n",
            "last_activity_date": 1415186462,
            "question_id": 13944207,
            "score": 15,
            "tags": [
                "javascript",
                "dynamic",
                "controller",
                "angularjs",
                "assign"
            ],
            "title": "AngularJS: dynamically assign controller from ng-repeat"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<ul>\n<li><p><strong>Control</strong></p>\n\n<p>You have no control over animated GIFs. You can't start them, you can't stop them. They just animate as soon as they load. </p>\n\n<p>With sprites, you can control the animation. You can start, stop and react to browser events, pan through the animation. For example, Google Doodles usually activate when you click on them.</p>\n\n<p>A nifty GIF control system can be found in the 9gag. You can start them by appending them to the DOM, and stop them by removing them and swapping them with a pre-generated \"first-frame view\". But that's as far as GIFs go.</p></li>\n<li><p><strong>Independent Instances</strong></p>\n\n<p>When you load multiple instances of the same GIF, all these instances use the same image across the page and move at the same time. If you have a row of dancing unicorns GIFs, they'd be dancing at the same time. Synchronized dancing!</p>\n\n<p>But with sprites, even if you are using the same images, the animation relies on the underlying script. So if one sprite is animated by one script and another by another script, both animations can run independently, and differently from one another.</p>\n\n<p>This saves you from creating another GIF and it's easy to modify since you are only changing the script.</p></li>\n<li><p><strong>Ensuring smooth animation</strong></p>\n\n<p>Animated GIFs just animate while loading, and when the internet is slow, the animations freeze up until more of the image gets loaded.</p>\n\n<p>In contrast, the advantage of sprites is you can pre-load them, ensure all images load beforehand. This makes sure that the resources used for that animation are already loaded prior to animation to make sure it animates as smooth as possible.</p>\n\n<p>However, GIFs are still images. You can dynamically load them off the DOM and listen for a load event before you append them to the DOM.</p></li>\n<li><p><strong>Partial rendering</strong></p>\n\n<p>With PNG sprites, you can do \"partials\" in the animation, breaking an animation scene to parts. For example, when a character stands still, but the arms are waving. You don't need to animate the entire character, or the entire scene. You can place an element depicting the sprite of the character's body in a \"freeze\" state while the arms are a different element that is animating. This conserves space and size of the sprite sheet. A good example for this was the 2012 Mother's Day Doodle by Google.</p>\n\n<p>In contrast, <em>most of the time</em>, every frame in a GIF animation is whole image, and animates whether or not anything in it moves. The more frames, the bigger the size of the GIF.</p></li>\n<li><p><strong>GIFs just don't scale</strong></p>\n\n<p>GIFs were meant for icons. The ratio of file size to image size don't scale up that well in GIFs as compared with PNG and JPG. </p></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 20
                }
            ],
            "body": "<p>In recent trends I've seen people animating CSS sprites using JavaScript instead of using animated GIFs?</p>\n\n<p>Ex: </p>\n\n<ul>\n<li><a href=\"http://www.google.com/doodles/eadweard-j-muybridges-182nd-birthday\">http://www.google.com/doodles/eadweard-j-muybridges-182nd-birthday</a> (in fact, Google used this technique in other Doodles too)</li>\n<li><a href=\"https://everyme.com/\">https://everyme.com/</a> ('me' logo)</li>\n<li><em>and many more...</em></li>\n</ul>\n\n<p>Is that all just to show or experiment with technology or are there any benefits out of it. I m interested in knowing the benefits, if there. <em>The reason I m asking is that I couldn't figure out as in both cases we need to generate the intermediate frames (mostly using tweening technique).</em></p>\n",
            "last_activity_date": 1420732618,
            "question_id": 10186257,
            "score": 15,
            "tags": [
                "javascript",
                "animation",
                "css-sprites",
                "animated-gif"
            ],
            "title": "Why not animated GIF instead of animated CSS sprites?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>OK, I've studied the <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf\" rel=\"nofollow\">ECMAScript specification (PDF)</a> and I have an explanation which discuses the <a href=\"http://en.wikipedia.org/wiki/Backus%E2%80%93Naur%5FForm\" rel=\"nofollow\">BNF grammar</a>.</p>\n\n<p>ECMAScript sources are parsed starting with the main symbol, called <code>Program</code>:</p>\n\n<pre><code>Program:\n    SourceElements\n</code></pre>\n\n<p>SourceElements' (recursive) definition is this:</p>\n\n<pre><code>SourceElements :\n    SourceElement\n    SourceElements SourceElement\n</code></pre>\n\n<p>The, SourceElement is defined as:</p>\n\n<pre><code>SourceElement :\n    Statement\n    FunctionDeclaration\n</code></pre>\n\n<p>What we're interested in is the object literal syntax, so we ignore FunctionDeclaration and look at the Statement symbol:</p>\n\n<pre><code>Statement :\n    Block\n    VariableStatement\n    EmptyStatement\n    ExpressionStatement\n    IfStatement\n    IterationStatement\n    ContinueStatement\n    BreakStatement\n    ReturnStatement\n    WithStatement\n    LabelledStatement\n    SwitchStatement\n    ThrowStatement\n    TryStatement\n</code></pre>\n\n<p>I'm not sure if the listing order matters (this is how they are in the spec), but... an object literal is an ExpressionStatement, about which the standards say the following (section 12.4):</p>\n\n<blockquote>\n  <p>Note that an ExpressionStatement\n  cannot start with an opening curly\n  brace because that might make it\n  ambiguous with a Block. Also, an\n  ExpressionStatement cannot start with\n  the function keyword because that\n  might make it ambiguous with a\n  FunctionDeclaration.</p>\n</blockquote>\n\n<p>So we may have an expression <strong>at the start of the program</strong>, but it must not start with an opening curly brace (<code>{</code>). That's why the following work OK:</p>\n\n<ul>\n<li><code>({} == false);</code></li>\n<li><code>alert({} == false);</code></li>\n<li><code>!{} == false;</code></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<pre><code>{\n</code></pre>\n\n<p>at the start of a statement signals a \u2018statement block\u2019 (see <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\">ECMA-262-3</a> section 12.1), which contains a list of statements.</p>\n\n<pre><code>}\n</code></pre>\n\n<p>immediately ends the statement block with no statements in it. That's fine. But now the parser is looking for the next statement:</p>\n\n<pre><code>==false\n</code></pre>\n\n<p>Huh? That's not a statement; syntax error.</p>\n\n<p>What are statement blocks for? Well, you are writing a statement block every time you say:</p>\n\n<pre><code>if (something) {\n    ...\n}\n</code></pre>\n\n<p>JavaScript defines these flow-control statements as:</p>\n\n<pre><code>if \"(\" &lt;expression&gt; \")\" &lt;statement&gt; [else &lt;statement&gt;]\n</code></pre>\n\n<p>ie. in the single statement form with no braces. It then allows you to use a statement-block anywhere you can use a single statement, which means you can have if-braces-many-statements. But it also means you can have a statement-block on its own with no associated flow-control statement.</p>\n\n<p>This serves absolutely no practical purpose! You might be tempted to think it gave you information-hiding, but no:</p>\n\n<pre><code>var a= 1;\n{\n    var a= 2;\n}\nalert(a);\n</code></pre>\n\n<p>...results in <code>2</code>, because statement blocks don't in themselves create a new scope.</p>\n\n<p>JavaScript defines flow control and statement blocks in this manner because C (and other languages derived from it) did. Those languages didn't make <code>{}</code> serve double-duty as an Object literal expression though, so they didn't have the ambiguity that makes this another JS misfeature.</p>\n\n<p>Even this wannabe-literal:</p>\n\n<pre><code>{\n   a: 1\n}\n</code></pre>\n\n<p>is a valid statement block, because \u2018:\u2019 is used to denote a label in a statement. (and <code>1</code> is a useless expression-statement, with the semicolon omitted.) Labels are another feature inherited from C that are rarely used in JavaScript. They're not totally pointless like the blocks, but they're seldom needed and often considered in poor taste.</p>\n\n<p>(A literal with two properties will cause a syntax error, as object literals use comma separators, but labelled statements must be separated by semicolons.)</p>\n\n<p>This is <a href=\"http://stackoverflow.com/questions/440739/what-do-parentheses-surrounding-a-javascript-objectfunctionclass-declaration/442408#442408\">not the only place</a> where JavaScript's loose syntax can trip you up by making some other statement of something you think is an expression.</p>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>Simply to say, <code>{}==false</code> are compiled by Js compiler to <code>{};==false</code>, so it's syntax error. you should write <code>({})==false</code> and it'll return false.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In Firefox 3.5, I type this in the Firebug console :</p>\n\n<pre><code>false=={} // =&gt; evals to false\n{}==false // syntax error\n</code></pre>\n\n<p>What is the explanation for this ?</p>\n",
            "last_activity_date": 1325749886,
            "question_id": 1509535,
            "score": 15,
            "tags": [
                "javascript",
                "syntax-error",
                "equality"
            ],
            "title": "JavaScript: {}==false is a SyntaxError?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Well, you have an option here ...</p>\n\n<p>The first time you initialize the socket value you should connect with <code>io.connect</code>,</p>\n\n<p>The next time ( after you've called disconnect once ), you should connect back with <code>socket.socket.connect()</code>. </p>\n\n<p>So your <code>initSocket</code>, should be something like</p>\n\n<pre><code>function initSocket(__bool){                    \n    if(__bool == true){          \n        if ( !socket ) {   \n            socket = io.connect('http://xxx.xxx.xxx.xxx:8081', {secure:false});     \n            socket.on('connect', function(){console.log('connected')});                                 \n            socket.on('disconnect', function (){console.log('disconnected')});\n        } else {\n            socket.socket.connect(); // Yep, socket.socket ( 2 times )\n        }\n    }else{\n        socket.disconnect();\n        // socket = null; &lt;&lt;&lt; We don't need this anymore\n    }\n} \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>I know you already have an answer, but I arrived here because the socket.IO client reconnection feature is broken in node at the moment. </p>\n\n<p>Active bugs on the github repo show that lots of people aren't getting events on connect failure, and reconnect isn't happening automatically.</p>\n\n<p>To work around this, you can create a manual reconnect loop as follows:</p>\n\n<pre><code>var socketClient = socketioClient.connect(socketHost)\n\nvar tryReconnect = function(){\n\n    if (socketClient.socket.connected === false &amp;&amp;\n        socketClient.socket.connecting === false) {\n        // use a connect() or reconnect() here if you want\n        socketClient.socket.connect()\n   }\n}\n\nvar intervalID = setInterval(tryReconnect, 2000)\n\nsocketClient.on('connect', function () {\n    // once client connects, clear the reconnection interval function\n    clearInterval(intervalID)\n    //... do other stuff\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can reconnect by following client side config.</p>\n\n<pre><code>// 0.9  socket.io version\nio.connect(SERVER_IP,{'force new connection':true });\n\n// 1.0 socket.io version\nio.connect(SERVER_IP,{'forceNew':true });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How to reconnect to socket io once disconnect has been called ?</p>\n\n<p>Here's the code </p>\n\n<pre><code>function initSocket(__bool){                    \n    if(__bool == true){             \n        socket = io.connect('http://xxx.xxx.xxx.xxx:8081', {secure:false});     \n        socket.on('connect', function(){console.log('connected')});                                 \n        socket.on('disconnect', function (){console.log('disconnected')});\n    }else{\n        socket.disconnect();\n        socket = null;\n    }\n}   \n</code></pre>\n\n<p>If i do initSocket(true); it works, if i do, initSocket(false) it disconnects BUT THEN if i try to reconnect using initSocket(true) then the connection does not work anymore... Any idea ?</p>\n",
            "last_activity_date": 1417672139,
            "question_id": 10437584,
            "score": 14,
            "tags": [
                "javascript",
                "node.js",
                "socket.io"
            ],
            "title": "Socket IO reconnect?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I'm pretty sure this isn't possible. The external SVG is not part of the DOM in the way an inline SVG is, and I don't believe you can access the SVG DOM tree from the loading document.</p>\n\n<p>What you <em>can</em> do is load the SVG as XML, using an AJAX request, and insert it into the DOM as an inline SVG you can then walk and manipulate. <a href=\"http://bl.ocks.org/1014829\">This D3 example</a> demonstrates the technique. I think the <code>d3.xml()</code> function used here is more or less equivalent to jQuery's <code>$.ajax()</code> with <code>dataType: \"xml\"</code>.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>It's not possible to get the DOM of a referenced svg from the <code>img</code> element.</p>\n\n<p>If you use <code>&lt;object&gt;</code>, <code>&lt;embed&gt;</code> or <code>&lt;iframe&gt;</code> however then you can use <code>.contentDocument</code> (preferred) to get the referenced svg, or <code>.getSVGDocument</code> which may be more compatible with old svg plugins.</p>\n\n<p>Here's an <a href=\"http://xn--dahlstrm-t4a.net/svg/html/get-embedded-svg-document-script.html\">example</a> showing how to get the DOM of a referenced svg.</p>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>Say you have this in your HTML:</p>\n\n<p><code>&lt;img src='example.svg' /&gt;</code></p>\n\n<p>How would you access the contents ( ie. <code>&lt;rect&gt;, &lt;circle&gt;, &lt;ellipse&gt;</code>, etc.. ) of the example.svg via JavaScript? </p>\n",
            "last_activity_date": 1321352199,
            "question_id": 8102528,
            "score": 14,
            "tags": [
                "javascript",
                "html",
                "html5",
                "svg"
            ],
            "title": "How do you access the contents of an SVG file in an &lt;img&gt; element?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I think you could do:</p>\n\n<pre><code>var row = \"\";\nrow += \"&lt;tr&gt;\";\nrow += \"&lt;td&gt;Name&lt;/td&gt;\";\nrow += \"&lt;td&gt;&lt;input value=\\\"\"+data.name+\"\\\"/&gt;&lt;/td&gt;\";\nrow += \"&lt;/tr&gt;\";\n</code></pre>\n\n<p>If you are worried about in <code>data.name</code> which is existing single quote.</p>\n\n<p>In best case, you could create an <code>INPUT</code> element then <code>setValue(data.name)</code> for it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You just need to swap any <code>'</code> characters with the equivalent HTML entity character code:</p>\n\n<pre><code>data.name.replace(/'/g, \"&amp;#39;\");\n</code></pre>\n\n<p>Alternatively, you could create the whole thing using jQuery's DOM manipulation methods:</p>\n\n<pre><code>var row = $(\"&lt;tr&gt;\").append(\"&lt;td&gt;Name&lt;/td&gt;&lt;td&gt;&lt;/td&gt;\");\n$(\"&lt;input&gt;\", { value: data.name }).appendTo(row.children(\"td:eq(1)\"));\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>\" = &amp;quot; or &amp;#34;</p>\n\n<p>' = &amp;#39;</p>\n\n<p>Examples:</p>\n\n<pre><code>&lt;div attr=\"Tim &amp;quot;The Toolman&amp;quot; Taylor\"\n&lt;div attr='Tim \"The Toolman\" Taylor'\n&lt;div attr=\"Tim 'The Toolman' Taylor\"\n&lt;div attr='Tim &amp;#39;The Toolman&amp;#39; Taylor'\n</code></pre>\n\n<p>In JS strings, you use \\ to escape the quote character:</p>\n\n<pre><code>var s = \"Tim \\\"The Toolman\\\" Taylor\";\nvar s = 'Tim \\'The Toolman\\' Taylor';\n</code></pre>\n\n<p>So, quote your attribute values with \" and use a function like this:</p>\n\n<pre><code>function escapeAttrNodeValue(value) {\n    return value.replace(/(&amp;)|(\")|(\\u00A0)/g, function(match, amp, quote) {\n        if (amp) return \"&amp;amp;\";\n        if (quote) return \"&amp;quot;\";\n        return \"&amp;nbsp;\";\n    });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Actually you may need one of these two functions (this depends on the context of use). These functions handle all kind of string quotes, and also protect from the HTML/XML syntax.</p>\n\n<h1>1. The <code>quoteattr()</code> function for embeding text into HTML/XML:</h1>\n\n<p>The <code>quoteattr()</code> function is used in a context, where the result will <strong>not</strong> be evaluated by javascript but must be interpreted by an XML or HTML parser, and it must absolutely avoid breaking the syntax of an element attribute.</p>\n\n<p>Newlines are natively preserved if generating the content of a text elements. However, if you're generating the value of an attribute this assigned value will be normalized by the DOM as soon as it will be set, so all whitespaces (SPACE, TAB, CR, LF) will be compressed, stripping leading and trailing whitespaces and reducing all middle sequences of whitespaces into a single SPACE.</p>\n\n<p>But there's an exception: the CR character will be preserved and <em>not</em> treated as whitespace, <strong>only</strong> if it is represented with a numeric character reference! The result will be valid for all element attributes, with the exception of attributes of type NMTOKEN or ID, or NMTOKENS: the presence of the referenced CR will make the assigned value invalid for those attributes (for example the id=\"...\" attribute of HTML elements): this value being invalid, will be ignored by the DOM. But in other attributes (of type CDATA), all CR characters represented by a numeric character reference will be preserved and not normalized. Note that this trick will not work to preserve other whitespaces (SPACE, TAB, LF), even if they are represented by NCR, because the normalization of all whitespaces (with the exception of the NCR to CR) is mandatory in <strong>all</strong> attributes.</p>\n\n<p>Note that this function itself does not perform any HTML/XML normalization of whitespaces, so it remains safe when generating the content of a text element (don't pass the second preserveCR parameter for such case).</p>\n\n<p>So if you pass an optional second parameter (whose default will be treated as if it was false) and if that parameter evaluates as true, newlines will be preserved using this NCR, when you want to generate a literal attribute value, and this attribute is of type CDATA (for example a title=\"...\" attribute) and not of type ID, IDLIST, NMTOKEN or NMTOKENS (for example an id=\"...\" attribute).</p>\n\n<pre><code>function quoteattr(s, preserveCR) {\n    preserveCR = preserveCR ? '&amp;#13;' : '\\n';\n    return ('' + s) /* Forces the conversion to string. */\n        .replace(/&amp;/g, '&amp;amp;') /* This MUST be the 1st replacement. */\n        .replace(/'/g, '&amp;apos;') /* The 4 other predefined entities, required. */\n        .replace(/\"/g, '&amp;quot;')\n        .replace(/&lt;/g, '&amp;lt;')\n        .replace(/&gt;/g, '&amp;gt;')\n        /*\n        You may add other replacements here for HTML only \n        (but it's not necessary).\n        Or for XML, only if the named entities are defined in its DTD.\n        */ \n        .replace(/\\r\\n/g, preserveCR) /* Must be before the next replacement. */\n        .replace(/[\\r\\n]/g, preserveCR);\n        ;\n}\n</code></pre>\n\n<p><strong>Warning!</strong> This function still does not check the source string (which is just, in Javascript, an <em>unrestricted</em> stream of 16-bit code units) for its validity in a file that must be a valid plain text source and also as valid source for an HTML/XML document.</p>\n\n<ul>\n<li>It should be updated to detect and reject (by an exception):\n<ul>\n<li>any code units representing code points assigned to non-characters (like \\uFFFE and \\uFFFF): this is an Unicode requirement only for valid plain-texts;</li>\n<li>any surrogate code units which are incorrectly paired to form a valid pair for an UTF-16-encoded code point: this is an Unicode requirement for valid plain-texts;</li>\n<li>any valid pair of surrogate code units representing a valid Unicode code point in supplementary planes, but which is assigned to non-characters (like U+10FFFE or U+10FFFF): this is an Unicode requirement only for valid plain-texts;</li>\n<li>most C0 and C1 controls (in the ranges \\u0000..\\u1F and \\u007F..\\u009F with the exception of TAB and newline controls): this is not an Unicode requirement but an additional requirement for valid HTML/XML.</li>\n</ul></li>\n<li>Despite of this limitation, the code above is almost what you'll want to do. Normally. Modern javascript engine should provide this function natively in the default system object, but in most cases, it does not completely ensure the strict plain-text validity, not the HTML/XML validity. But the HTML/XML document object from which your Javascript code will be called, should redefine this native function.</li>\n<li>This limitation is usually not a problem in most cases, because the source string are the result of computing from sources strings coming from the HTML/XML DOM.</li>\n<li>But this may fail if the javascript extract substrings and break pairs of surrogates, or if it generates text from computed numeric sources (converting any 16-bit code value into a string containing that one-code unit, and appending those short strings, or inserting these short strings via replacement operations): if you try to insert the encoded string into a HTML/XML DOM text element or in an HTML/XML attribute value or element name, the DOM will itself reject this insertion and will throw an exception; if your javascript inserts the resulting string in a local binary file or sends it via a binary network socket, there will be no exception thrown for this emission. Such non-plain text strings would also be the result of reading from a binary file (such as an PNG, GIF or JPEG image file) or from your javascript reading from a binary-safe network socket (such that the IO stream passes 16-bit code units rather than just 8-bit units: most binary I/O streams are byte-based anyway, and text I/O streams need that you specify a charset to decode files into plain-text, so that invalid encodings found in the text stream will throw an I/O exception in your script).</li>\n</ul>\n\n<p>Note that this function, the way it is implemented (if it is augmented to correct the limitations noted in the warning above), can be safely used as well to quote also the content of a literal text element in HTML/XML (to avoid leaving some interpretable HTML/XML elements from the source string value), not just the content of a literal attribute value ! So it should be better named <code>quoteml()</code>; the name <code>quoteattr()</code> is kept only by tradition.</p>\n\n<p>This is the case in your example:</p>\n\n<pre><code>data.value = \"It's just a \\\"sample\\\" &lt;test&gt;.\\n\\tTry &amp; see yourself!\";\nvar row = '';\nrow += '&lt;tr&gt;';\nrow += '&lt;td&gt;Name&lt;/td&gt;';\nrow += '&lt;td&gt;&lt;input value=\"' + quoteattr(data.value) + '\" /&gt;&lt;/td&gt;';\nrow += '&lt;/tr&gt;';\n</code></pre>\n\n<h2>Alternative to <code>quoteattr()</code>, using only the DOM API:</h2>\n\n<p>The alternative, if the HTML code you generate will be part of the current HTML document, is to create each HTML element individually, using the DOM methods of the document, such that you can set its attribute values directly through the DOM API, instead of inserting the full HTML content using the innerHTML property of a single element :</p>\n\n<pre><code>data.value = \"It's just a \\\"sample\\\" &lt;test&gt;.\\n\\tTry &amp; see yourself!\";\nvar row = document.createElement('tr');\nvar cell = document.createElement('td');\ncell.innerText = 'Name';\nrow.appendChild(cell);\ncell = document.createElement('td');\nvar input = document.createElement('input');\ninput.setAttribute('value', data.value);\ncell.appendChild(input);\ntr.appendChild(cell);\n/*\nThe HTML code is generated automatically and is now accessible in the\nrow.innerHTML property, which you are not required to insert in the\ncurrent document.\n\nBut you can continue by appending tr into a 'tbody' element object, and then\ninsert this into a new 'table' element object, which ou can append or insert\nas a child of a DOM object of your document.\n*/\n</code></pre>\n\n<p>Note that this alternative does not attempt to preserve newlines present in the data.value, becase you're generating the content of a text element, not an attribute value here. If you really want to generate an attribute value preserving newlines using <code>&amp;#13;</code>, see the start of section 1, and the code within <code>quoteattr()</code> above. </p>\n\n<h1>2. The <code>escape()</code> function for embedding into a javascript/JSON literal string:</h1>\n\n<p>In other cases, you'll use the <code>escape()</code> function below when the intent is to quote a string that will be part of a <strong>generated javascript code fragment</strong>, that you also want to be preserved (that may optionally also be first parsed by an HTML/XML parser in which a larger javascript code could be inserted):</p>\n\n<pre><code>function escape(s) {\n    return ('' + s) /* Forces the conversion to string. */\n        .replace(/\\\\/g, '\\\\\\\\') /* This MUST be the 1st replacement. */\n        .replace(/\\t/g, '\\\\t') /* These 2 replacements protect whitespaces. */\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\u00A0/g, '\\\\u00A0') /* Useful but not absolutely necessary. */\n        .replace(/&amp;/g, '\\\\x26') /* These 5 replacements protect from HTML/XML. */\n        .replace(/'/g, '\\\\x27')\n        .replace(/\"/g, '\\\\x22')\n        .replace(/&lt;/g, '\\\\x3C')\n        .replace(/&gt;/g, '\\\\x3E')\n        ;\n}\n</code></pre>\n\n<p><strong>Warning!</strong> This source code does not check for the validity of the encoded document as a valid plain-text document. However it should <strong>never</strong> raise an exception (except for out of memory condition): Javascript/JSON source strings are just unrestricted streams of 16-bit code units and do not need to be valid plain-text or are not restricted by HTML/XML document syntax. This means that the code is incomplete, and should also replace:</p>\n\n<ul>\n<li>all other code units representing C0 and C1 controls (with the exception of TAB and LF, handled above, but that may be left intact without substituting them) using the \\xNN notation;</li>\n<li>all code units that are assigned to non-characters in Unicode, which should be replaced using the \\uNNNN notation (for example \\uFFFE or \\uFFFF);</li>\n<li>all code units usable as Unicode surrogates in the range \\uD800..\\DFFF, like this:\n<ul>\n<li>if they are not correctly paired into a valid UTF-16 pair representing a valid Unicode code point in the full range U+0000..U+10FFFF, these surrogate code units should be individually replaced using the notation \\uDNNN;</li>\n<li>else if if the code point that the code unit pair represents is not valid in Unicode plain-text, because the code point is assigned to a non-character, the two code points should be replaced using the notation \\U00NNNNNN;</li>\n</ul></li>\n<li>finally, if the code point represented by the code unit (or the pair of code units representing a code point in a supplementary plane), independantly of if that code point is assigned or reserved/unassigned, is also invalid in HTML/XML source documents (see their specification), the code point should be replaced using the \\uNNNN notation (if the code point is in the BMP) or the \\u00NNNNNN (if the code point is in a supplementary plane) ;</li>\n</ul>\n\n<p>Note also that the 5 last replacements are not really necessary. But it you don't include them, you'll sometimes need to use the <code>&lt;![CDATA[ ... ]]&gt;</code> compatibility \"hack\" in some cases, such as further including the generated javascript in HTML or XML (see the example below where this \"hack\" is used in a <code>&lt;script&gt;...&lt;/script&gt;</code> HTML element).</p>\n\n<p>The <code>escape()</code> function has the advantage that it does <strong>not</strong> insert any HTML/XML character reference, the result will be first interpreted by Javascript and it will keep later at runtime the exact string length when the resulting string will be evaluated by the javascript engine. It saves you from having to manage <em>mixed context</em> throughout your application code (see the final section about them and about the related security considerations). Notably because if you use <code>quoteattr()</code> in this context, the javascript evaluated and executed later would have to explicitty handle character references to redecode them, something that would not be appropriate. Usage cases include:</p>\n\n<ol>\n<li>when the replaced string will be inserted in a generated javascript event handler surrounded by some other HTML code where the javascript fragment will contain attributes surrounded by literal quotes).</li>\n<li>when the replaced string will be part of a settimeout() parameter which will be later eval()ed by the Javascript engine.</li>\n</ol>\n\n<h2>Example 1 (generating only JavaScript, no HTML content generated):</h2>\n\n<pre><code>var title = \"It's a \\\"title\\\"!\";\nvar msg   = \"Both strings contain \\\"quotes\\\" &amp; 'apostrophes'...\";\nsetTimeout(\n    '__forceCloseDialog(\"myDialog\", \"' +\n        escape(title) + '\", \"' +\n        escape(msg) + '\")',\n    2000);\n</code></pre>\n\n<h2>Exemple 2 (generating valid HTML):</h2>\n\n<pre><code>var msg =\n    \"It's just a \\\"sample\\\" &lt;test&gt;.\\n\\tTry &amp; see yourself!\";\n/* This is similar to the above, but this JavaScript code will be reinserted below: */ \nvar scriptCode =\n    'alert(\"' +\n    escape(msg) + /* important here!, because part of a JS string literal */\n    '\");';\n\n/* First case (simple when inserting in a text element): */\ndocument.write(\n    '&lt;script type=\"text/javascript\"&gt;' +\n    '\\n//&lt;![CDATA[\\n' + /* (not really necessary but improves compatibility) */\n    scriptCode +\n    '\\n//]]&gt;\\n' +       /* (not really necessary but improves compatibility) */\n    '&lt;/script&gt;');\n\n/* Second case (more complex when inserting in an HTML attribute value): */\ndocument.write(\n    '&lt;span onclick=\"' +\n    quoteattr(scriptCode) + /* important here, because part of an HTML attribute */\n    '\"&gt;Click here !&lt;/span&gt;');\n</code></pre>\n\n<p>In this second example, you see that both encoding functions are <strong>simultaneously</strong> used on the part of the generated text that is embedded in JavasSript literals (using <code>escape()</code>), with the the generated JavaScript code (containing the generated string literal) being itself embedded again and reencoded using <code>quoteattr()</code>, because that JavaScript code is inserted in an HTML attribute (in the second case).</p>\n\n<h1>3. General considerations for safely encoding texts to embed in syntaxic contexts:</h1>\n\n<p>So in summary,</p>\n\n<ul>\n<li>the <code>quotattr()</code> function must be used when generating the contant of an <strong>HTML/XML attribute literal</strong>, where the surrounding quotes are added <strong>externally</strong> within a concatenation to produce a complete HTML/XML code.</li>\n<li>the <code>escape()</code> function must be used when generating the content of a <strong>JavaScript string constant literal</strong>, where the surrounding quotes are added <strong>externally</strong> within a concatenation to produce a complete HTML/XML code.</li>\n<li>If used carefully, and <strong>everywhere</strong> you will find variable contents to safely insert into another context, and under only these rules (with the functions implemented exactly like above which takes care of \"special characters\" used in both contexts), you may mix both via multiple escaping, and the transform will still be safe, and will not require additional code to decode them in the application using those literals. Do <strong>not</strong> use these functions.</li>\n</ul>\n\n<p>Those functions are only safe in those strict contexts (i.e. <strong>only</strong> HTML/XML attribute values for <code>quoteattr()</code>, and <strong>only</strong> Javascript string literals for <code>escape()</code>).</p>\n\n<p>There are other contexts using different quoting and escaping mechanisms (e.g. SQL string literals, or Visual Basic string literals, or regular expression literals, or text fields of CSV datafiles, or MIME header values), which will <strong>each</strong> require their <strong>own</strong> distinct escaping function used <strong>only</strong> in these contexts:</p>\n\n<ul>\n<li>Never assume that <code>quoteattr()</code> or <code>escape()</code> will be safe or will not alter the semantic of the escaped string, before checking first, that the syntax of (respectively) HTML/XML attribute values or JavaScript string litterals will be natively understood and supported in those contexts.</li>\n<li>For example the syntax of Javascript string literals generated by <code>escape()</code> is also appropriate and natively supported in the two other contexts of string literals used in Java programming source code, or text values in JSON data.</li>\n</ul>\n\n<p>But the reverse is <strong>not</strong> always true. For example:</p>\n\n<ul>\n<li>Interpreting the encoded escaped literals initially generated for other contexts than Javascript string literals (including for example string literals in PHP source code), is not always safe for direct use as Javascript literals. through the javascript <code>eval()</code> system function to decode those generated string literals that were not escaped using <code>escape()</code>, because those other string literals may contain other special characters generated specificly to those other initial contexts, which will be incorrectly interpreted by Javascript, this could include additionnal escapes such as \"<code>\\Uxxxxxxxx</code>\", or \"<code>\\e</code>\", or \"<code>${var}</code>\" and \"<code>$$</code>\", or the inclusion of additional concatenation operators such as <code>' + \"</code> which changes the quoting style, or of \"transparent\" delimiters, such as \"<code>&lt;!--</code>\" and \"<code>--&gt;</code>\" or \"<code>&lt;[DATA[</code>\" and \"<code>]]&gt;</code>\" (that may be found and safe within a different only complex context supporting multiple escaping syntaxes: see below the last paragraph of this section about <em>mixed contexts</em>).</li>\n<li>The same will apply to the interpretation/decoding of encoded escaped literals that were initially generated for other contexts that HTML/XML attributes values in documents created using their standard textual representation (for example, trying to interpret the string literals that were generated for embedding in a non standard binary format representation of HTML/XML documents!)</li>\n<li>This will also apply to the interpretation/decoding with the javascript function <code>eval()</code> of string literals that were only safely generated for inclusion in HTML/XML attribute literals using <code>quotteattr()</code>, which will <strong>not</strong> be safe, because the contexts have been incorrectly mixed.</li>\n<li>This will also apply to the interpretation/decoding with an HTML/XML text document parser of attribute value literals that were only safely generated for inclusion in a Javascript string literal using <code>escape()</code>, which will <strong>not</strong> be safe, because the contexts have also been incorrectly mixed.</li>\n</ul>\n\n<h1>4. Safely decoding the value of embedded syntaxic literals:</h1>\n\n<p>If you want to decode or interpret <em>string literals</em> in contexts were the decoded resulting <em>string values</em> will be used interchangeably and undistinctly without change in another context, so called <em>mixed contexts</em> (including, for example: naming some identifiers in HTML/XML with string literals initially dafely encoded with <code>quotteattr()</code>; naming some programming variables for Javascript from strings initially safely encoded with <code>escape()</code>; and so on...), you'll need to prepare and use a new escaping function (which will also check the validity of the string value before encoding it, or reject it, or truncate/simplify/filter it), as well as a new decoding function (which will also carefully avoid interpreting valid but unsafe sequences, only accepted internally but not acceptable for unsafe external sources, which also means that decoding function such as <code>eval()</code> in javascript <em>must</em> be absolutely avoided for decoding JSON data sources, for which you'll need to use a safer native JSON decoder; a native JSON decoder will not be interpreting valid Javascript sequences, such as the inclusion of quoting delimiters in the literal expression, operators, or sequences like \"<code>{$var}</code>\"), to enforce the safety of such mapping!</p>\n\n<p>These last considerations about the decoding of literals in mixed contexts, that were only safely encoded with any syntax for the transport of data to be safe only a a more restrictive single context, is absolutely critical for the security of your application or web service. Never mix those contexts between the encoding place and the decoding place, if those places do not belong to the <strong>same</strong> security realm (but even in that case, using mixed contexts is always very dangerous, it is very difficult to track precisely in your code.</p>\n\n<p>For this reason I recommend you <strong>never</strong> use or assume <em>mixed contexts</em> anywhere in your application: instead write a safe encoding and decoding function for a single precide context that has precise length and validity rules on the decoded string values, and precise length and validity rules on the encoded string string literals. Ban those mixed contexts: for each <strong>change</strong> of context, use another matching pair of encoding/decoding functions (which function is used in this pair depends on which context is embedded in the other context; and the pair of matching functions is also specific to each pair of contexts).</p>\n\n<p>This means that:</p>\n\n<ul>\n<li>To safely decode an HTML/XML attribute value literal that has been initially encoded with <code>quoteattr()</code>, you must '''not''' assume that it has been encoded using other named entities whose value will depend on a specific DTD defining it. You <strong>must</strong> instead initialize the HTML/XML parser to support <strong>only</strong> the few default named character entities generated by <code>quoteattr()</code> and optionally the numeric character entities (which are also safe is such context: the <code>quoteattr()</code> function only generates a few of them but could generate more of these numeric character references, but <strong>must not</strong> generate other named character entities which are not predefined in the default DTD). <strong>All</strong> other named entities <strong>must</strong> be rejected by your parser, as being invalid in the source string literal to decode. Alternatively you'll get better performance by defining an <code>unquoteattr</code> function (which will reject any presence of literal quotes within the source string, as well as unsupported named entities).</li>\n<li>To safely decode a Javascript string literal (or JSON string literal) that has been initially encoded with <code>escape()</code>, you <strong>must</strong> use the safe JavaScript <code>unescape()</code> function, but <strong>not</strong> the unsafe Javascript <code>eval()</code> function!</li>\n</ul>\n\n<p>Examples for these two associated safe decoding functions follow.</p>\n\n<h1>5. The <code>unquoteattr()</code> function to parse text embedded in HTML/XML text elements or attribute values literals:</h1>\n\n<pre><code>function unquoteattr(s) {\n    /*\n    Note: this can be implemented more efficiently by a loop searching for\n    ampersands, from start to end of ssource string, and parsing the\n    character(s) found immediately after after the ampersand.\n    */\n    s = ('' + s); /* Forces the conversion to string type. */\n    /*\n    You may optionally start by detecting CDATA sections (like\n    `&lt;![CDATA[` ... `]]&gt;`), whose contents must not be reparsed by the\n    following replacements, but separated, filtered out of the CDATA\n    delimiters, and then concatenated into an output buffer.\n    The following replacements are only for sections of source text\n    found *outside* such CDATA sections, that will be concatenated\n    in the output buffer only after all the following replacements and\n    security checkings.\n\n    This will require a loop starting here.\n\n    The following code is only for the alternate sections that are\n    not within the detected CDATA sections.\n    */\n    /* Decode by reversing the initial order of replacements. */\n    s = s\n        .replace(/\\r\\n/g, '\\n') /* To do before the next replacement. */ \n        .replace(/[\\r\\n]/, '\\n')\n        .replace(/&amp;#13;&amp;#10;/g, '\\n') /* These 3 replacements keep whitespaces. */\n        .replace(/&amp;#1[03];/g, '\\n')\n        .replace(/&amp;#9;/g, '\\t')\n        .replace(/&amp;gt;/g, '&gt;') /* The 4 other predefined entities required. */\n        .replace(/&amp;lt;/g, '&lt;')\n        .replace(/&amp;quot;/g, '\"')\n        .replace(/&amp;apos;/g, \"'\")\n        ;\n    /*\n    You may add other replacements here for predefined HTML entities only \n    (but it's not necessary). Or for XML, only if the named entities are\n    defined in *your* assumed DTD.\n    But you can add these replacements only if these entities will *not* \n    be replaced by a string value containing *any* ampersand character.\n    Do not decode the '&amp;amp;' sequence here !\n\n    If you choose to support more numeric character entities, their\n    decoded numeric value *must* be assigned characters or unassigned\n    Unicode code points, but *not* surrogates or assigned non-characters,\n    and *not* most C0 and C1 controls (except a few ones that are valid\n    in HTML/XML text elements and attribute values: TAB, LF, CR, and\n    NL='\\x85').\n\n    If you find valid Unicode code points that are invalid characters\n    for XML/HTML, this function *must* reject the source string as\n    invalid and throw an exception.\n\n    In addition, the four possible representations of newlines (CR, LF,\n    CR+LF, or NL) *must* be decoded only as if they were '\\n' (U+000A).\n\n    See the XML/HTML reference specifications !\n    */\n    /* Required check for security! */\n    var found = /&amp;[^;])*;?/.match(s);\n    if (found.length &gt;0 &amp;&amp; found[0] != '&amp;amp;')\n        throw 'unsafe entity found in the attribute literal content';\n     /* This MUST be the last replacement. */\n    s = s.replace(/&amp;amp;/g, '&amp;');\n    /*\n    The loop needed to support CDATA sections will end here.\n    This is where you'll concatenate the replaced sections (CDATA or\n    not), if you have splitted the source string to detect and support\n    these CDATA sections.\n\n    Note that all backslashes found in CDATA sections do NOT have the\n    semantic of escapes, and are *safe*.\n\n    On the opposite, CDATA sections not properly terminated by a\n    matching `]]&gt;` section terminator are *unsafe*, and must be rejected\n    before reaching this final point.\n    */\n    return s;\n}\n</code></pre>\n\n<p>Note that this function does <em>not</em> parse the surrounding quote delimiters which are used\nto surround HTML attribute values. This function can in fact decode any HTML/XML text element content as well, possibly containing literal quotes, which are <em>safe</em>. It's your reponsability of parsing the HTML code to extract quoted strings used in HTML/XML attributes, and to strip those matching quote delimiters before calling the <code>unquoteattr()</code> function.</p>\n\n<h1>6. The <code>unescape()</code> function to parse text contents embedded in Javascript/JSON literals:</h1>\n\n<pre><code>function unescape(s) {\n    /*\n    Note: this can be implemented more efficiently by a loop searching for\n    backslashes, from start to end of source string, and parsing and\n    dispatching the character found immediately after the backslash, if it\n    must be followed by additional characters such as an octal or\n    hexadecimal 7-bit ASCII-only encoded character, or an hexadecimal Unicode\n    encoded valid code point, or a valid pair of hexadecimal UTF-16-encoded\n    code units representing a single Unicode code point.\n\n    8-bit encoded code units for non-ASCII characters should not be used, but\n    if they are, they should be decoded into a 16-bit code units keeping their\n    numeric value, i.e. like the numeric value of an equivalent Unicode\n    code point (which means ISO 8859-1, not Windows 1252, including C1 controls).\n\n    Note that Javascript or JSON does NOT require code units to be paired when\n    they encode surrogates; and Javascript/JSON will also accept any Unicode\n    code point in the valid range representable as UTF-16 pairs, including\n    NULL, all controls, and code units assigned to non-characters.\n    This means that all code points in \\U00000000..\\U0010FFFF are valid,\n    as well as all 16-bit code units in \\u0000..\\uFFFF, in any order.\n    It's up to your application to restrict these valid ranges if needed.\n    */\n    s = ('' + s) /* Forces the conversion to string. */\n    /* Decode by reversing the initial order of replacements */\n        .replace(/\\\\x3E/g, '&gt;')\n        .replace(/\\\\x3C/g, '&lt;')\n        .replace(/\\\\x22/g, '\"')\n        .replace(/\\\\x27/g, \"'\")\n        .replace(/\\\\x26/g, '&amp;') /* These 5 replacements protect from HTML/XML. */\n        .replace(/\\\\u00A0/g, '\\u00A0') /* Useful but not absolutely necessary. */\n        .replace(/\\\\n/g, '\\n')\n        .replace(/\\\\t/g, '\\t') /* These 2 replacements protect whitespaces. */\n        ;\n    /*\n    You may optionally add here support for other numerical or symbolic\n    character escapes.\n    But you can add these replacements only if these entities will *not* \n    be replaced by a string value containing *any* backslash character.\n    Do not decode to any doubled backslashes here !\n    */\n    /* Required check for security! */\n    var found = /\\\\[^\\\\])?/.match(s);\n    if (found.length &gt; 0 &amp;&amp; found[0] != '\\\\\\\\')\n        throw 'Unsafe or unsupported escape found in the literal string content';\n    /* This MUST be the last replacement. */\n    return s.replace(/\\\\\\\\/g, '\\\\');\n}\n</code></pre>\n\n<p>Note that this function does <em>not</em> parse the surrounding quote delimiters which are used\nto surround Javascript or JSON string litterals. It's your reponsability of parsing the Javascript or JSON source code to extract quoted strings literals, and to strip those matching quote delimiters before calling the <code>unescape()</code> function.</p>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>My answer is partially based on Andy E and I still recommend reading what verdy_p wrote, but here it is</p>\n\n<pre><code>$(\"&lt;a&gt;\", { href: 'very&lt;script&gt;\\'b\"ad' }).text('click me')[0].outerHTML\n</code></pre>\n\n<p>Disclaimer: this is answer not to exact question, but just \"how to escape attribute\"</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm building up a row to insert in a table using jQuery by creating a html string, i.e.</p>\n\n<pre><code>var row = \"\";\nrow += \"&lt;tr&gt;\";\nrow += \"&lt;td&gt;Name&lt;/td&gt;\";\nrow += \"&lt;td&gt;&lt;input value='\"+data.name+\"'/&gt;&lt;/td&gt;\";\nrow += \"&lt;/tr&gt;\";\n</code></pre>\n\n<p><code>data.name</code> is a string returned from an ajax call which could contain any characters.  If it contains a single quote, <code>'</code>, it will break the HTML by defining the end of the attribute value. </p>\n\n<p>How can I ensure that the string is rendered correctly in the browser?</p>\n",
            "last_activity_date": 1414906078,
            "question_id": 7753448,
            "score": 14,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "How do I escape quotes in HTML attribute values?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You got only one part wrong here. MyString.prototype shouldn't be String.prototype, it should be like this:</p>\n\n<pre><code>function MyString(s) { }\nMyString.prototype = new String();\nMyString.prototype.reverse = function() {\n  this.split('').reverse().join('');\n};\nvar s = new MyString(\"Foobar\");\ns.reverse();\n</code></pre>\n\n<h3>[Edit]</h3>\n\n<p>To answer your question in a better way, no it should not be possible.\nIf you take a look at this: <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/constructor\" rel=\"nofollow\">https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/constructor</a> it explains that you can't change the type on bools, ints and strings, thus they cannot be \"subclassed\".</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>First of all, in this code:</p>\n\n<pre><code>MyString.prototype = String.prototype;   \nMyString.prototype.reverse = function() {\n    this.split('').reverse().join('');\n};\n</code></pre>\n\n<p>the variables <code>MyString.prototype</code> and <code>String.prototype</code> are both referencing the same object!  Assigning to one is assigning to the other.  When you dropped a <code>reverse</code> method into <code>MyString.prototype</code> you were also writing it to <code>String.prototype</code>.  So try this:</p>\n\n<pre><code>MyString.prototype = String.prototype;   \nMyString.prototype.charAt = function () {alert(\"Haha\");}\nvar s = new MyString();\ns.charAt(4);\n\"dog\".charAt(3);\n</code></pre>\n\n<p>The last two lines <em>both</em> alert because their prototypes are the same object.  You really did extend <code>String.prototype</code>.</p>\n\n<p>Now about your error.  You called <code>reverse</code> on your <code>MyString</code> object.  Where is this method defined?  In the prototype, which is the same as <code>String.prototype</code>.  You overwrote <code>reverse</code>.  What is the first thing it does?  It calls <code>split</code> on the target object.  Now the thing is, in order for <code>String.prototype.split</code> to work it has to call <code>String.prototype.toString</code>.  For example:</p>\n\n<pre><code>var s = new MyString();\nif (s.split(\"\")) {alert(\"Hi\");}\n</code></pre>\n\n<p>This code generates an error:</p>\n\n<pre><code>TypeError: String.prototype.toString is not generic\n</code></pre>\n\n<p>What this means is that <code>String.prototype.toString</code> uses the internal representation of a string to do its thing (namely returning its internal primitive string), and <em>cannot be applied to arbitrary target objects that share the string prototype</em>.  So when you called <code>split</code>, the implementation of split said \"oh my target is not a string, let me call <code>toString</code>,\" but then <code>toString</code> said \"my target is not a string and I'm not generic\" so it threw the <code>TypeError</code>.</p>\n\n<p>If you want to learn more about generics in JavaScript, you can see <a href=\"https://developer.mozilla.org/en/New_in_javascript_1.6#Array_and_String_generics\" rel=\"nofollow\">this MDN section on Array and String generics</a>.</p>\n\n<p>As for getting this to work without the error, see Alxandr's answer.</p>\n\n<p>As for extending the exact <em>built-in types</em> like <code>String</code> and <code>Date</code> and so on without changing their prototypes, you really don't, without creating wrappers or delegates or subclasses.  But then this won't allow the syntax like</p>\n\n<pre><code>d1.itervalTo(d2)\n</code></pre>\n\n<p>where <code>d1</code> and <code>d2</code> are instances of the built-in <code>Date</code> class whose prototype you <em>did not extend</em>. :-)  JavaScript uses prototype chains for this kind of method call syntax.  It just does.  Excellent question though... but is this what you had in mind?</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>Update:</strong> Even this code does not fully extend the native <code>String</code> type (the <code>length</code> property does not work).</p>\n\n<p>Imo it's probably not worth it to follow this approach. There are too many things to consider and you have to invest too much time to ensure that it fully works (<em>if</em> it does at all). <a href=\"http://stackoverflow.com/questions/7141734/extending-core-types-without-modifying-prototype/7141932#7141932\">@Raynos provides another interesting approach</a>.</p>\n\n<p>Nevertheless here is the idea:</p>\n\n<hr>\n\n<p>It seems that you cannot call <code>String.prototype.toString</code> on anything else than a real string. You could <strong>override</strong> this method:</p>\n\n<pre><code>// constructor\nfunction MyString(s) {\n    String.call(this, s); // call the \"parent\" constructor\n    this.s_ = s;\n}\n\n// create a new empty prototype to *not* override the original one\ntmp = function(){};\ntmp.prototype = String.prototype;\nMyString.prototype = new tmp();\nMyString.prototype.constructor = MyString;\n\n// new method\nMyString.prototype.reverse = function() {\n  return this.split('').reverse().join('');\n};\n\n// override \nMyString.prototype.toString = function() {\n  return this.s_;\n};\n\nMyString.prototype.valueOf = function() {\n  return this.s_;\n};\n\n\nvar s = new MyString(\"Foobar\");\nalert(s.reverse());\n</code></pre>\n\n<p>As you see, I also had to override <code>valueOf</code> to make it work. </p>\n\n<p><strong>But:</strong> I don't know whether these are the only methods you have to override and for other built-in types you might have to override other methods. A good start would be to take the <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\" rel=\"nofollow\">ECMAScript specification</a> and have a look at the specification of the methods. </p>\n\n<p>E.g. the second step in the <code>String.prototype.split</code> algorithm is:</p>\n\n<blockquote>\n  <p>Let <em>S</em> be the result of calling ToString, giving it the <strong>this</strong> value as its argument.</p>\n</blockquote>\n\n<p>If an object is passed to <code>ToString</code>, then it basically calls the <code>toString</code> method of this object. And that is why it works when we override <code>toString</code>.</p>\n\n<p><strong>Update:</strong> What does <strong>not work</strong> is <code>s.length</code>. So although you might be able to make the <em>methods</em> work, other properties seem to be more tricky.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>2 years later:</strong> mutating anything in global scope is a terrible idea</p>\n\n<p><strong>Original:</strong></p>\n\n<p>There being something \"wrong\" with extending native prototypes is FUD in ES5 browsers.</p>\n\n<pre><code>Object.defineProperty(String.prototype, \"my_method\", {\n  value: function _my_method() { ... },\n  configurable: true,\n  enumerable: false,\n  writeable: true\n});\n</code></pre>\n\n<p>However if you have to support ES3 browsers then there are problems with people using <code>for ... in</code> loops on strings.</p>\n\n<p>My opinion is that you can change native prototypes and should stop using any <em>poorly written code that breaks</em></p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>I think the basic answer is you probably can't. What you can do is what Sugar.js does - create an object-like object and extend from that: </p>\n\n<p><a href=\"http://sugarjs.com/\" rel=\"nofollow\">http://sugarjs.com/</a></p>\n\n<p>Sugar.js is all about native object extensions, and they do <em>not</em> extend Object.prototype.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How does one extend core JavaScript types (String, Date, etc.) without modifying their prototypes?  For example, suppose I wanted to make a derived string class with some convenience methods:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function MyString() { }\nMyString.prototype = new String();\nMyString.prototype.reverse = function() {\n  return this.split('').reverse().join('');\n};\nvar s = new MyString(\"Foobar\"); // Hmm, where do we use the argument?\ns.reverse();\n// Chrome - TypeError: String.prototype.toString is not generic\n// Firefox - TypeError: String.prototype.toString called on incompatible Object\n</code></pre>\n\n<p>The error seems to originate from String base methods, probably \"split\" in this case, since its methods are being applied to some non-string object.  But if we can't apply the to non-string objects then can we really reuse them automatically?</p>\n\n<p><strong>[Edit]</strong></p>\n\n<p>Obviously my attempt is flawed in many ways but I think it demonstrates my intent.  After some thinking, it seems that we can't reuse any of the String prototype object's functions without explicitly calling them on a String.</p>\n\n<p>Is it possible to extend core types as such?</p>\n",
            "last_activity_date": 1373927695,
            "question_id": 7141734,
            "score": 14,
            "tags": [
                "javascript",
                "prototypal-inheritance"
            ],
            "title": "Extending core types without modifying prototype"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You should follow a different pattern. Your local JS will do an ajax post to a local URL which will accept the POST method with your json data.</p>\n\n<p>At this point your server code will do an HTTP POST with proper data to the remote server, get the response, and send it back to the calling js.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>For cross domain stuff use <a href=\"http://api.jquery.com/jQuery.ajax/\" rel=\"nofollow\">JSONP</a> (search for crossDomain)</p>\n\n<p><a href=\"http://www.ibm.com/developerworks/library/wa-aj-jsonp1/\" rel=\"nofollow\">http://www.ibm.com/developerworks/library/wa-aj-jsonp1/</a></p>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>The problem is that the domain you are trying to POST to doesn't respond to the OPTIONS request that is sent before each cross-domain request. With the OPTIONS request, the browser receives information about cross domain rules etc. To enable the cross domain request, the server has to set <code>Access-Control-Allow-Origin:*</code> (or the domain of the script, actually, but * covers everything) and maybe <code>Access-Control-Allow-Methods: GET, POST, OPTIONS</code> headers.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I have a shared hosting on GoDaddy. I needed an answer to this question, too, and after searching around I found that it is possible. </p>\n\n<p>I wrote an .htaccess file, put it in the same folder as my action page. Here are the contents of the .htaccess file:</p>\n\n<pre><code>Header add Access-Control-Allow-Origin \"*\"\nHeader add Access-Control-Allow-Headers \"origin, x-requested-with, content-type\"\nHeader add Access-Control-Allow-Methods \"PUT, GET, POST, DELETE, OPTIONS\"\n</code></pre>\n\n<p>Here is my ajax call:</p>\n\n<pre><code>    $.ajax({\n        url: 'http://www.mydomain.com/myactionpagefolder/gbactionpage.php',  //server script to process data\n        type: 'POST',\n        xhr: function() {  // custom xhr\n            myXhr = $.ajaxSettings.xhr();\n            if(myXhr.upload){ // check if upload property exists\n                myXhr.upload.addEventListener('progress',progressHandlingFunction, false); // for handling the progress of the upload\n            }\n            return myXhr;\n        },\n        //Ajax events\n        beforeSend: beforeSendHandler,\n        success: completeHandler,\n        error: errorHandler,\n        // Form data\n        data: formData,\n        //Options to tell JQuery not to process data or worry about content-type\n        cache: false,\n        contentType: false,\n        processData: false\n    });\n</code></pre>\n\n<p>See this article for reference:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/10640596/header-set-access-control-allow-origin-in-htaccess-doesnt-work\">Header set Access-Control-Allow-Origin in .htaccess doesn&#39;t work</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm trying to authenticate to an API, which only allows you to authenticate using a POST with JSON as form data, in the format of {\"username\":\"myusername\",\"password\":\"mypassword\"}.</p>\n\n<p>I've been trying for two days to get this working with jQuery but I'm running into problems because it's cross domain. How can I accomplish this?</p>\n\n<p>Error message:</p>\n\n<pre><code>Request Method:OPTIONS\nStatus Code:405 METHOD NOT ALLOWED\n</code></pre>\n\n<p>Code up till now:</p>\n\n<pre><code>var username = \"myusername\";\nvar password = \"mypass\"\nvar authurl = \"https://myurl\";\n\n$.ajax\n({\n    type: \"POST\",\n    url: authurl,\n    dataType: 'json',\n    contentType: \"application/json; charset=utf-8\",\n    async: false,\n    data: {'json':'{\"username\":\"' + username + '\", \"password\":\"' + password + '\"}'},\n    success: function (result) {\n        $('#json').html(result);\n    }\n})\n</code></pre>\n\n<p>To summarize:</p>\n\n<ul>\n<li>API only accepts POST for auth</li>\n<li>API requires json as form data, example: {\"username\":\"myusername\",\"password\":\"mypassword\"}</li>\n<li>The js is ran from a different domain, causing cross domain errors</li>\n</ul>\n\n<p>Your help is much appreciated :)</p>\n",
            "last_activity_date": 1367510935,
            "question_id": 6761982,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "json",
                "post",
                "cross-domain"
            ],
            "title": "jQuery cross domain POST shenanigans"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You could avoid hardcoding the full path by setting a JS variable in the header of your template, before <code>wp_head()</code> is called, holding the template URL. Like:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar templateUrl = '&lt;?= get_bloginfo(\"template_url\"); ?&gt;';\n&lt;/script&gt;\n</code></pre>\n\n<p>And use that variable to set the background (I realize you know how to do this, I only include these details in case they helps others):</p>\n\n<pre><code>Reset.style.background = \" url('\"+templateUrl+\"/images/searchfield_clear.png') \";\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>According to the Wordpress documentation, you should use <a href=\"http://codex.wordpress.org/Function_Reference/wp_localize_script\" rel=\"nofollow\"><code>wp_localize_script()</code></a> in your functions.php file. This will create a Javascript Object in the header, which will be available to your scripts at runtime.</p>\n\n<p>See <a href=\"http://codex.wordpress.org/Function_Reference/wp_localize_script\" rel=\"nofollow\">Codex</a></p>\n\n<p>Example:</p>\n\n<pre><code>&lt;?php wp_localize_script('mylib', 'WPURLS', array( 'siteurl' =&gt; get_option('siteurl') )); ?&gt;\n</code></pre>\n\n<p>To access this variable within in Javascript, you would simply do:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var url = WPURLS.siteurl;\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<pre><code>    wp_register_script('custom-js',WP_PLUGIN_URL.'/PLUGIN_NAME/js/custom.js',array(),NULL,true);\n    wp_enqueue_script('custom-js');\n\n    $wnm_custom = array( 'template_url' =&gt; get_bloginfo('template_url') );\n    wp_localize_script( 'custom-js', 'wnm_custom', $wnm_custom );\n</code></pre>\n\n<p>and in custom.js</p>\n\n<pre><code>alert(wnm_custom.template_url);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I added custom script    </p>\n\n<pre><code>wp_enqueue_script('functions', get_bloginfo('template_url') . '/js/functions.js', 'search', null, false);\n</code></pre>\n\n<p>works great, except</p>\n\n<p>in the functions.js i have </p>\n\n<pre><code>Reset.style.background = \"url('../images/searchfield_clear.png') no-repeat top left\";\n</code></pre>\n\n<p>now this used to work before, until changed to pretty permalinks and .htaccess</p>\n\n<p>the folder hierarchy is like:</p>\n\n<blockquote>\n  <p><code>themename/js themename/images</code> (the images and js folder are in themename folder)</p>\n</blockquote>\n\n<p>i tried ../images - ./image - /images </p>\n\n<p>normally it should go back 1 level where-ever the js file is located....</p>\n\n<p>i dont want to use full path\nis there a other way that wordpress can recognize in the javascript file to have the correct path?</p>\n\n<p>currently i am just confused what i am doing wrong</p>\n",
            "last_activity_date": 1421173714,
            "question_id": 5221630,
            "score": 14,
            "tags": [
                "javascript",
                "wordpress",
                "wordpress-theming"
            ],
            "title": "wordpress path url in js script file"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The simplest, but unsafe way to do it is:</p>\n\n<pre><code>eval('(' + myJSONtext + ')')\n</code></pre>\n\n<p>But since this will interpret any javascript code, it has security holes.  To protect against this use a json parser.  If you're using a framework (jquery, mootools, etc.) there's a framework-specific call.  Most of them are based on Douglas Crawford's parser available at <a href=\"http://www.json.org/js.html\" rel=\"nofollow\">http://www.json.org/js.html</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can use \"for in\"</p>\n\n<pre><code>var myObject = {a:'12', b:'c', foo:'bar'};\nvar myArray = [];\n\nfor(key in myObject) {\n    var value = myObject[key];\n    myArray[key] = value;\n}\n\nmyArray['a']; // returns 12\n</code></pre>\n\n<p>Notes: considering that myObject only have one level of key-value pairs.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think that the best way of doing this, as <a href=\"http://www.crockford.com/\">Douglas Crockford</a> (one of the biggests gurus of JavaScript) <a href=\"http://www.json.org/js.html\">suggests in here</a> is using the <a href=\"http://en.wikipedia.org/wiki/JSON#Native_JSON\">JSON native parser</a>, as it is not only faster than the eval(), it's also more secure.</p>\n\n<p>Native JSON parser is already available in:</p>\n\n<ul>\n<li>Firefox 3.5+</li>\n<li>IE 8+</li>\n<li>Opera 10.5+</li>\n<li>Safari Safari 4.0.3+</li>\n<li>Chrome (don't know which version)</li>\n</ul>\n\n<p>And Crockford has made a safe fallback in javascript, called <a href=\"https://github.com/douglascrockford/JSON-js/blob/master/json2.js\">json2.js</a>, which is an adaption of the eval() approach, with some security bits added and with the native JSON parsers API. You just need to include that file, remove its first line, and use the native JSON parser, and if it's not present json2 would do the work.</p>\n\n<p>Here is an example:</p>\n\n<pre><code>var myJSONString = '{ \"a\": 1, \"b\": 2 }',\n    myObject = JSON.parse(myJSONString);\n</code></pre>\n\n<p>Once parsed you'll get an object with attributes <code>a</code> and <code>b</code>, and as you may know, you can treat an object as a hash table or <a href=\"http://en.wikipedia.org/wiki/Associative_array\">associative array</a> in JavaScript, so you would be able to access the values like this: </p>\n\n<pre><code>myObject['a'];\n</code></pre>\n\n<p>If you just want a simple array and not an associative one you could do something like:</p>\n\n<pre><code>var myArray = [];\nfor(var i in myObject) {\n    myArray.push(myObject[i]);\n}\n</code></pre>\n\n<p>Lastly, although not necessary in plain JavaScript, the <a href=\"http://www.ietf.org/rfc/rfc4627.txt?number=4627\">JSON spec</a> requires double quoting the key of the members. So the navite parser won't work without it. If I were you I would add it, but if it is not possible use the <code>var myObject = eval( \"(\" + myString + \")\" );</code> approach.</p>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>If you're using jQuery, there's the <a href=\"http://api.jquery.com/jQuery.parseJSON/\" rel=\"nofollow\">$.parseJSON()</a> function. It throws an exception if the string is malformed, and \"Additionally if you pass in nothing, an empty string, null, or undefined, 'null' will be returned from parseJSON. Where the browser provides a native implementation of JSON.parse, jQuery uses it to parse the string\"</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Since your string is <strong>malformed</strong> JSON, a JSON parser can't parse it properly and even eval() will throw an error. It's also not an Array but a HashMap or simply an Object literal (malformed). If the Object literal will only contain number and string values (and no child objects/arrays) you can use the following code.</p>\n\n<pre><code>function malformedJSON2Array (tar) {\n    var arr = [];\n    tar = tar.replace(/^\\{|\\}$/g,'').split(',');\n    for(var i=0,cur,pair;cur=tar[i];i++){\n        arr[i] = {};\n        pair = cur.split(':');\n        arr[i][pair[0]] = /^\\d*$/.test(pair[1]) ? +pair[1] : pair[1];\n    }\n    return arr;\n}\n\nmalformedJSON2Array(\"{a:12, b:c, foo:bar}\");\n// result -&gt; [{a:12},{b:'c'},{foo:'bar'}]\n</code></pre>\n\n<p>That code will turn your string into an Array of Objects (plural).</p>\n\n<p>If however you actually wanted a HashMap (Associative Array) and NOT an array, use the following code:</p>\n\n<pre><code>function malformedJSON2Object(tar) {\n    var obj = {};\n    tar = tar.replace(/^\\{|\\}$/g,'').split(',');\n    for(var i=0,cur,pair;cur=tar[i];i++){\n        pair = cur.split(':');\n        obj[pair[0]] = /^\\d*$/.test(pair[1]) ? +pair[1] : pair[1];\n    }\n    return obj;\n}\n\nmalformedJSON2Object(\"{a:12, b:c, foo:bar}\");\n// result -&gt; {a:12,b:'c',foo:'bar'}\n</code></pre>\n\n<p>The above code will become a lot more complex when you start nesting objects and arrays. Basically you'd have to rewrite <a href=\"http://www.json.org/js.html\">JSON.js</a> and <a href=\"http://www.json.org/js.html\">JSON2.js</a> to support malformed JSON.</p>\n\n<p>Also consider the following option, which is still bad I admit, but marginally better then sticking JSON inside an HTML tag's attribute.</p>\n\n<pre><code>&lt;div id=\"DATA001\"&gt;bla&lt;/div&gt;\n&lt;!-- namespacing your data is even better! --&gt;\n&lt;script&gt;var DATA001 = {a:12,b:\"c\",foo:\"bar\"};&lt;/script&gt;\n</code></pre>\n\n<p>I am assuming you omit quote marks in the string because you had put it inside an HTML tag's attribute and didn't want to escape quotes.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I want to convert below string to an array in javascript.</p>\n\n<pre><code>{a:12, b:c, foo:bar}\n</code></pre>\n\n<p>How do I convert this string into array of objects? Any cool idea?</p>\n",
            "last_activity_date": 1424781857,
            "question_id": 3473639,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "arrays",
                "literals",
                "string-literals"
            ],
            "title": "Best way to convert string to array of object in javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The TEXTAREA tag does not have a MAXLENGTH attribute the way that an\nINPUT tag does, at least not in most standard browsers. A very simple and\neffective way to limit the number of characters that can be <em>typed</em> into a\nTEXTAREA tag is:</p>\n\n<pre><code>&lt;textarea onKeyPress=\"return ( this.value.length &lt; 50 );\"&gt;&lt;/textarea&gt;\n</code></pre>\n\n<p><strong>Note:</strong> onKeyPress, is going to prevent any button press, <strong>any button</strong> <em>including</em> the backspace key.</p>\n\n<p>This works because the boolean expression compares the field's length\nbefore the new character is added to the maximum length you want (50 in this\nexample, use your own here), and returns true if there is room for one more,\nfalse if not. Returning false from most events cancels the default action.\nSo if the current length is already 50 (or more), the handler returns false,\nthe KeyPress action is cancelled, and the character is not added.</p>\n\n<p>One fly in the ointment is the possibility of pasting into a TEXTAREA,\nwhich does not cause the KeyPress event to fire, circumventing this check.\nInternet Explorer 5+ contains an onPaste event whose handler can contain the\ncheck. However, note that you must also take into account how many\ncharacters are waiting in the clipboard to know if the total is going to\ntake you over the limit or not. Fortunately, IE also contains a clipboard\nobject from the window object.<a href=\"http://lists.evolt.org/archive/Week-of-Mon-20040315/156773.html\" rel=\"nofollow\">1</a> Thus:</p>\n\n<pre><code>&lt;textarea onKeyPress=\"return ( this.value.length &lt; 50 );\"\nonPaste=\"return (( this.value.length +\nwindow.clipboardData.getData('Text').length) &lt; 50 );\"&gt;&lt;/textarea&gt;\n</code></pre>\n\n<p>Again, the onPaste event and clipboardData object are IE 5+ only. For a\ncross-browser solution, you will just have to use an OnChange or OnBlur\nhandler to check the length, and handle it however you want (truncate the\nvalue silently, notify the user, etc.). Unfortunately, this doesn't catch\nthe error as it's happening, only when the user attempts to leave the field,\nwhich is not quite as friendly.</p>\n\n<p><a href=\"http://lists.evolt.org/archive/Week-of-Mon-20040315/156773.html\" rel=\"nofollow\">Source</a></p>\n\n<p>Also, there is another way here, including a finished script you could include in your page:</p>\n\n<p><a href=\"http://cf-bill.blogspot.com/2005/05/textarea-maxlength-revisited.html\" rel=\"nofollow\">http://cf-bill.blogspot.com/2005/05/textarea-maxlength-revisited.html</a></p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>I know this is old post. But if anyone looking for non-js solution, HTML5 now allows <a href=\"http://www.w3schools.com/tags/att_textarea_maxlength.asp\" rel=\"nofollow\">maxlength attribute on textarea (w3schools)</a> . </p>\n\n<p>Supported by below browsers:</p>\n\n<ul>\n<li>Chrome</li>\n<li>Safari</li>\n<li>Opera</li>\n<li>IE10</li>\n</ul>\n\n<p><a href=\"http://www.w3.org/TR/html-markup/textarea.html#textarea.attrs.maxlength\" rel=\"nofollow\">W3C Reference</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>$(function(){  \n  $(\"#id\").keypress(function() {  \n    var maxlen = 100;\nif ($(this).val().length &gt; maxlen) {  \n  return false;\n}  \n})\n});  \n</code></pre>\n\n<p>Reference <a href=\"http://stackoverflow.com/questions/4459610/set-maxlength-in-html-textarea\">Set maxlength in Html Textarea</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What's the best (cross browser) way of restricting the maximum number of characters that can be entered into an html textarea?</p>\n",
            "last_activity_date": 1397199574,
            "question_id": 43569,
            "score": 14,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Max length for html text areas"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Use it as a background image, center it and change height.</p>\n\n<p><a href=\"http://dabblet.com/gist/4012604\">http://dabblet.com/gist/4012604</a></p>\n\n<pre><code>.youtubePreview {\n    background:url('http://img.youtube.com/vi/aOPGepdbfpo/0.jpg') center no-repeat;\n    height:204px;\n    width:480px;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>YouTube offers images that don't have the 4:3 ratio black strips. To get a 16:9 video thumbnail with no black strips, try one of these:</p>\n\n<pre><code>http://img.youtube.com/vi/&lt;insert-youtube-video-id-here&gt;/mqdefault.jpg\nhttp://img.youtube.com/vi/&lt;insert-youtube-video-id-here&gt;/maxresdefault.jpg\n</code></pre>\n\n<p>The first one <code>mqdefault</code> comes as a 320x180 pixel image.</p>\n\n<p>The second one <code>maxresdefault</code> comes as a 1500x900 pixel image, so it would need resizing to use as a thumbnail. This is a nice image but it isn't always available. If the video is of a low quality (less than 720p I'd imagine, not exactly sure) then this 'maxresdefault' becomes unavailable. So never rely on it.</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>This is answer I gave for similar question, but it will solve your problem completely, just cut everything you don't want to be shown from the video with the wrapper div, this is done with html and css.</p>\n\n<p>After searching the net a while for fix of this issue I came up with nothing, I think I have tried everything and nothing solved my problem. Then driven by my logic I just wrapped the iframe of the embedded youtube video in one div set overflow: hidden; to this div and made it's height 2px smaller then the iframe height (on my video there was black border in the bottom).\nSo the wrapper div is smaller then the iframe and with positioning it over the video you can hide the black borders you don't want.\nI think that this is the best solution from everything I have tried so far.</p>\n\n<p>From this example below try embedding just the iframe and you will see small black border at the bottom, and when you wrap the iframe in the div the border is gone, because the div is overlapping the iframe and it's smaller then the video, and it has overflow: hidden so everything that goes out of the div dimensions is hidden.</p>\n\n<pre><code>&lt;div id=\"video_cont\" style=\"width: 560px;\n                            height: 313px;\n                            overflow: hidden;\"&gt;\n\n\n    &lt;iframe id=\"the-video\" class=\"extplayer\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/EErx017kDHQ?&amp;amp;autoplay=0&amp;amp;rel=0&amp;amp;fs=0&amp;amp;showinfo=0&amp;amp;controls=0&amp;amp;hd=1&amp;amp;wmode=transparent&amp;amp;version=2;yt:quality=high;\"   frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;\n\n&lt;/div&gt;\n</code></pre>\n\n<p>In my case the border was with about 2px height so I made the wrapper div 2px smaller in    height to hide the border, in your scenario if the border is on the top of the video or on the sides and/or with different dimensions, you have to make different dimensions for the wrapper div and position it good so it overlaps the video where the borders are and with overflow:hidden; the borders are hidden.</p>\n\n<p>Hope this will help.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>E.g. I have a link</p>\n\n<pre><code>http://img.youtube.com/vi/aOPGepdbfpo/0.jpg\n</code></pre>\n\n<p>for a youtube video thumbnail:</p>\n\n<p><img src=\"http://i.stack.imgur.com/4TTp5.jpg\" alt=\"enter image description here\"></p>\n\n<p>And I would like to remove the black top and bottom border so I get a picture like this:</p>\n\n<p><img src=\"http://i.stack.imgur.com/ytbV7.jpg\" alt=\"enter image description here\"></p>\n\n<p>Could it be done using PHP function javascript/jQuery or maybe youtube api itself?</p>\n",
            "last_activity_date": 1380872808,
            "question_id": 13220715,
            "score": 13,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "youtube-api"
            ],
            "title": "Removing black borders 4:3 on youtube thumbnails"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>For this answer, I am not sure whether it's helpful or not. How about trying Sonar. Sonar has a javascript plugin that can check your js code quality and list the code that unused.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you are using visual studio, this link will help for your requirement,</p>\n\n<p><a href=\"http://www.jetbrains.com/resharper/whatsnew/#VS2012\" rel=\"nofollow\">http://www.jetbrains.com/resharper/whatsnew/#VS2012</a></p>\n\n<p>This ReSharper have JavaScript support also..</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've been looking at a similar task for the past few weeks myself and ended up with the following <a href=\"http://www.powershellpro.com/\" rel=\"nofollow\">powershell</a> query:</p>\n\n<pre><code>PS&gt; Get-ChildItem -Path C:\\PathToProject\\ -Filter *.as?x -Recurse \n| select-string -pattern \"src=\"\"([^\"\"]*.js)\"\"\" \n| Select -Expand Matches | Foreach { $_.Groups[1].Value } | select -unique\n</code></pre>\n\n<p>First it recursively selects all .aspx and .ascx files in our project directory, then finds <code>src</code> attribute values that refer to .js files (presumably those of script elements) and traces distinct values - voila, you have a list of .js files as referenced in your project!</p>\n\n<p>It would be fairly straightforward to adjust the query so that it fits your specific project and its structure. Make sure you don't iterate over outdated files that may include obsolete references. Account for markup discreptancies - could you have used single quotes for attribute values in the past, or left unnecessary whitespace around the \"equals\" symbol, or both? Could you be including these files programmatically or asynchronously from inside another js files? etc. etc.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://stackoverflow.com/a/6730450/1267663\">This</a> answer offers <a href=\"https://developers.google.com/closure/compiler\">Google's Closure Compiler</a> which, in the process of minifying and concatenating your JavaScript code, can remove \"dead code\".</p>\n\n<p>Quoting from <a href=\"https://developers.google.com/closure/compiler/docs/compilation_levels\">the documentation</a> for the compilation levels:</p>\n\n<blockquote>\n  <p>Compilation with ADVANCED_OPTIMIZATIONS removes code that is provably unreachable. This is especially useful in combination with large libraries. If you use only a few functions from a large library file, the compiler can remove everything except those functions from its output.</p>\n</blockquote>\n\n<p>Also see <a href=\"http://stackoverflow.com/a/3295682/1267663\">this answer</a> which contains more information on Google's Closure Compiler.</p>\n",
                    "is_accepted": true,
                    "score": 9
                }
            ],
            "body": "<p>I just finished my website, which I started 2 years ago. I was always trying new things, which sometimes included adding different frameworks or other external JS files.</p>\n\n<p>Now I don't know which of the linked files/lines of JS are unused. Is there a tool which can detect these files and lines of code? It would save me a lot of time.</p>\n",
            "last_activity_date": 1351818647,
            "question_id": 13174988,
            "score": 13,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Detect linked &amp; unused files and unused JavaScript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<ol>\n<li><blockquote>\n  <p>Is there a <em>god</em> (i.e. a parent) object?</p>\n</blockquote>\n\n<p><a href=\"http://es5.github.com/#x15.1.4\">Yes.</a> More technically, it's the global object that all these primitives are members of; it just happens that in the browser, the <code>window</code> object <em>is</em> the global object.</p>\n\n<pre><code>&gt; window.String === String;\ntrue\n</code></pre></li>\n<li><blockquote>\n  <p>Why is it bad idea to have vars/functions on a global level?</p>\n</blockquote>\n\n<p>Because if you're adding lots of 3rd party libraries/ scripts, they all share the same global object, there's the chance of name collisions. This is a real life problem with all the libraries which use <code>$</code> as an alias (jQuery, Prototype and more).</p></li>\n<li><blockquote>\n  <p>If it is really a bad idea to have vars/functions in global scope then would closures be the best way to avoid this?</p>\n</blockquote>\n\n<p><code>x</code> shouldn't be considered global. It's part of the closure formed by declaring the child functions inside the <code>parent()</code> function. The <em>problem</em> part of your snippet is that <code>parent()</code> is global; what happens if some other code re-declared <code>parent()</code>? This would be better:</p>\n\n<pre><code>(function () {\n\nfunction parent(){\n    var x = 'some value';\n    function child1(){\n        x.someMethod()\n    } \n    function child2(){\n        x*something;\n    }\n    function child3(){\n        x+=something;\n        child2()\n        child1()\n    }\n    child3()\n}\nparent()\n\n}());\n</code></pre>\n\n<p>The fact <code>x</code> is accessible within the child functions isn't bad; you should have written those functions yourself, so you should be <em>aware</em> of the existence of <code>x</code>. Bear in mind that if you re-declare <code>x</code> within those child functions with <code>var</code>, you won't affect the <code>x</code> in <code>parent()</code>.</p></li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<ol>\n<li><p>Yes, in a browser environment the \"god object\" is window. It's typically called the <em>global object</em>, not <em>god object</em> though ;) In non-browser environments such as nodejs, the global object may use some other name than window.</p></li>\n<li><p>If you put everything as globals, you risk running into colliding names. There is also the matter of <a href=\"http://en.wikipedia.org/wiki/Encapsulation_%28object-oriented_programming%29\" rel=\"nofollow\">encapsulation</a> - in other words, by putting variables into only the scope where it's needed, your code is usually better off.</p></li>\n<li><p>Yep, this is pretty much the preferred approach. You can also use <a href=\"http://benalman.com/news/2010/11/immediately-invoked-function-expression/\" rel=\"nofollow\">IIFE</a>'s</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<ol>\n<li><p>As far as I know, I'd say yes, window is the parent object. However, inside an Iframe you have your own window object, distinct from surrounding window which you can access through window.parent</p></li>\n<li><p>It's a bad idea to have a LOT of global var because of potential name collision and therefore hard to detect bugs. In general it's safer to design some namespace (see\nthe <code>$</code> from jQuery, etc) and modularize code.</p></li>\n<li><p>Be careful, <code>parent</code> is a potential existing field of window. This taken appart, function are object so the same observation than in 2) apply here.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm trying to improve my understanding of the global namespace in javascript and I'm curious about a few things:</p>\n\n<ol>\n<li><p>is there a \"GOD\" (i.e. a parent) object that all objects (since all things except primitives are objects) to answer to and if so would that object be \"window\" ?</p></li>\n<li><p>why is it bad idea to have vars/functions on a global level?</p></li>\n<li><p>if it is really a bad idea to have vars/functions in global scope then would closures be the best way to avoid this? example:</p>\n\n<pre><code>function parent(){\n    var x = 'some value';//this var would be considered global to all children functions but not in the true global namespace\n    function child1(){\n        x.someMethod()\n    } \n    function child2(){\n        x*something;\n    }\n    function child3(){\n        x+=something;\n        child2()\n        child1()\n    }\n    child3()\n}\nparent()\n</code></pre></li>\n</ol>\n",
            "last_activity_date": 1422045022,
            "question_id": 9773964,
            "score": 13,
            "tags": [
                "javascript",
                "namespaces",
                "closures",
                "global-variables"
            ],
            "title": "understanding the javascript global namespace and closures"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Another option would be to create an HTML Helper that you could use to build the script and link tags. Here is what I have implemented for the Javascript, which can also be done for the CSS:</p>\n\n<pre><code>public static class BundleHelper\n    {\n        public static MvcHtmlString JsBundle(this HtmlHelper helper, string bundlePath)\n        {\n            var jsTag = new TagBuilder(\"script\");\n            jsTag.MergeAttribute(\"type\", \"text/javascript\");\n\n            return ReferenceBundle(helper, bundlePath, jsTag);\n        }\n\n        public static MvcHtmlString ReferenceBundle(this HtmlHelper helper, string bundlePath, TagBuilder baseTag)\n        {\n            var httpContext = helper.ViewContext.HttpContext;\n            var urlHelper = new UrlHelper(helper.ViewContext.RequestContext);\n\n            Bundle bundle = BundleTable.Bundles.GetBundleFor(bundlePath);\n            var htmlString = new StringBuilder();\n\n            if (bundle != null)\n            {\n                var bundleContext = new BundleContext(helper.ViewContext.HttpContext, BundleTable.Bundles, urlHelper.Content(bundlePath));\n\n                if (!httpContext.IsDebuggingEnabled)\n                {\n                    baseTag.MergeAttribute(\"href\", System.Web.Optimization.BundleTable.Bundles.ResolveBundleUrl(bundlePath));\n                    return new MvcHtmlString(baseTag.ToString());\n                }\n\n                foreach (var file in bundle.EnumerateFiles(bundleContext))\n                {\n                    var basePath = httpContext.Server.MapPath(\"~/\");\n                    if (file.FullName.StartsWith(basePath))\n                    {\n                        var relPath = urlHelper.Content(\"~/\" + file.FullName.Substring(basePath.Length));\n                        baseTag.MergeAttribute(\"href\", relPath, true);\n                        htmlString.AppendLine(baseTag.ToString());\n                    }\n                }\n\n            }\n\n            return new MvcHtmlString(htmlString.ToString());\n        }\n    }\n</code></pre>\n\n<p>Now all that you have to do is call it in your view:</p>\n\n<pre><code>&lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;@ViewBag.Title - My ASP.NET MVC Application&lt;/title&gt;\n    &lt;link href=\"~/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\" /&gt;\n    &lt;link href=\"~/Content/css\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n    &lt;link href=\"~/Content/themes/base/css\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n    @Html.JsBundle(\"~/scripts/js\")\n    &lt;meta name=\"viewport\" content=\"width=device-width\" /&gt;\n&lt;/head&gt;\n</code></pre>\n\n<p>And it will render the scripts as separate references, or use the new bundling/minification feature depending on what the debug setting is in your web.config . I used some of the code from <a href=\"http://codecutout.com/resource-minify-bundling\" rel=\"nofollow\">http://codecutout.com/resource-minify-bundling</a> as a reference when creating my helper if you wanted to see some more examples. Their helper is written a little better, throwing exceptions when invalid arguments are supplied, etc.... I just haven't gotten around to cleaning mine up yet.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You could register your own bundles in the <em>Global.asax</em> and use the <code>NoTransform</code> class if you do not want the content to be minified. </p>\n\n<p>I personally don't want my script to be transformed at all. I just create two script directories. One with the debug script versions and one with the originally downloaded minified versions. </p>\n\n<p>The MVC 4 out of the box minifier (JsMinify) breaks jQuery 1.7.1 for Opera, so I do not want to use that one. I just put the following lines in my <em>Global.asax</em>: <code>Application_Start()</code> method:</p>\n\n<pre><code>Bundle debugScripts = new Bundle(\"~/DebugScripts\", \n    new NoTransform(\"text/javascript\"));\ndebugScripts.AddDirectory(\"~/Scripts/Debug\", \"*.js\");\nBundleTable.Bundles.Add(debugScripts);\n\nBundle productionScripts = new Bundle(\"~/ProductionScripts\", \n    new NoTransform(\"text/javascript\"));\nproductionScripts.AddDirectory(\"~/Scripts/Minified\", \"*.js\");\nBundleTable.Bundles.Add(productionScripts);\n</code></pre>\n\n<p>With that in place I can simply add either one of two lines in my <code>_layouts.cshtml</code>:</p>\n\n<pre><code>&lt;script src=\"@System.Web.Optimization.BundleTable.Bundles.ResolveBundleUrl(\"~/DebugScripts\")\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"@System.Web.Optimization.BundleTable.Bundles.ResolveBundleUrl(\"~/ProductionScripts\")\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Of course we could get a little more funky with this in place. We could generate just one bundle and depending on the built type select what files to include.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>After the call to <code>EnableDefaultBundles()</code> in Global.asax, you can do this ...</p>\n\n<pre><code>        if ( ... running in development environment ...)\n        {\n            var registeredBundles = BundleTable.Bundles.GetRegisteredBundles();\n            foreach (var bundle in registeredBundles)\n            {\n                if (bundle.Transform is System.Web.Optimization.JsMinify)\n                    bundle.Transform = new NoTransform();\n            }\n        }\n</code></pre>\n\n<p>Not pretty (modifying state set by the system), but it's a lot less code than all the other suggestions, still lets you use the standard bundling behavior and it doesn't involve any changes to your views.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In Global.asax.cs</p>\n\n<pre><code>#if DEBUG\n        foreach (var bundle in BundleTable.Bundles)\n        {\n            bundle.Transform = new NoTransform();\n        }\n#endif\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>I think it would be right, if such feature will be available \"out of the box\". </p>\n\n<p>I posted a feedback on UserVoice.com: <a href=\"http://aspnet.uservoice.com/forums/41201-asp-net-mvc/suggestions/2702000-improve-system-web-optimization-bundle\" rel=\"nofollow\">http://aspnet.uservoice.com/forums/41201-asp-net-mvc/suggestions/2702000-improve-system-web-optimization-bundle</a></p>\n\n<p>Give it your \"voices\".</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try a new extension for System.Web.Optimization - <a href=\"http://bundletransformer.codeplex.com/\" rel=\"nofollow\">Bundle Transformer</a>. In Bundle Transformer implemented a number of opportunities to simplify debugging (see <a href=\"http://bundletransformer.codeplex.com/documentation\" rel=\"nofollow\">documentation</a>).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Rather than replace instances of JsMinify and CssMinify, one can instead use interfaces. <em>This option was not available in earlier releases because the second constructor parameter was a type rather than an interface.</em></p>\n\n<pre><code>IBundleTransform jsTransform;\nIBundleTransform cssTransform;\n\n#if DEBUG\n    jsTransform = new NoTransform(\"text/javascript\");\n    cssTransform = new NoTransform(\"text/css\");\n#else\n    jsTransform = new JsMinify();\n    cssTransform = new CssMinify();\n#endif\n\nBundle jsBundle = new Bundle(\"~/JsB\", jsTransform);\nBundle cssBundle = new Bundle(\"~/CssB\", cssTransform);\n</code></pre>\n\n<p>Perhaps also worth noting, for scripts that are shipped with minified and non-minified versions e.g. jQuery, one can use a helper method to optionally strip out the \".min\" for DEBUG builds to facilitate debugging:</p>\n\n<pre><code>private string Min(string scriptNameIncludingMin)\n{\n#if DEBUG\n    return scriptNameIncludingMin.Replace(\".min\", \"\"); // Remove .min from debug builds\n#else\n    return scriptNameIncludingMin;\n#endif\n}\n\n// ...\njsBundle.AddFile(Min(\"~/Scripts/jquery-1.7.2.min.js\"));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>you can turn it off from config:</p>\n\n<pre><code>&lt;system.web&gt;\n    &lt;compilation debug=\"true\" /&gt;\n    &lt;!-- Lines removed for clarity. --&gt;\n&lt;/system.web&gt;\n</code></pre>\n\n<p><a href=\"http://www.asp.net/mvc/tutorials/mvc-4/bundling-and-minification\" rel=\"nofollow\">http://www.asp.net/mvc/tutorials/mvc-4/bundling-and-minification</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Another alternative (tested with v1.1.0.0 and MVC5):</p>\n\n<pre><code>public class BundleConfig\n{\n    public static void Register()\n    {\n        ScriptBundle jsBundle = new ScriptBundle(\"~/Scripts/myscript.min.js\");\n        jsBundle.Include(\"~/Scripts/myscript.js\");\n        DisableInDebugMode(jsBundle);\n\n        BundleTable.Bundles.Add(jsBundle);\n    }\n\n    private static void DisableInDebugMode(ScriptBundle jsBundle)\n    {\n    #if DEBUG\n        // Don't minify in debug mode\n        jsBundle.Transforms.Clear();\n    #endif\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>On newer versions of ASP.NET MVC just add</p>\n\n<pre><code>#if DEBUG\n            foreach (var bundle in BundleTable.Bundles)\n            {\n                bundle.Transforms.Clear();\n            }\n#endif\n</code></pre>\n\n<p>right after</p>\n\n<pre><code>BundleConfig.RegisterBundles(...);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am just trying out ASP.NET MVC 4 but I can't figure out how to disable Javascript/CSS minification feature. Especially for development environment this will help greatly on debugging. I would imagine it would be a switch in web.config but since ASP.NET MVC 4 is still in beta stage at the moment there's really not much information out there. Would appreciate if someone can help or point to the right blog posts etc.</p>\n",
            "last_activity_date": 1404297106,
            "question_id": 9373071,
            "score": 13,
            "tags": [
                "javascript",
                "css",
                "asp.net-mvc-4",
                "minify",
                "asp.net-optimization"
            ],
            "title": "How to disable Javascript/CSS minification in ASP.NET MVC 4 Beta"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Quoting the <a href=\"http://socket.io/#faq\">socket.io FAQ</a>:</p>\n\n<blockquote>\n  <p><strong>Does Socket.IO support cross-domain connections?</strong></p>\n  \n  <p>Absolutely, on every browser!</p>\n</blockquote>\n\n<p>As to how it does it: Native WebSockets are cross-domain by design, socket.io serves a flash policy file for cross-domain flash communication, XHR2 can use CORS, and finally you can always use JSONP.</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>Simply insert your remote domain name when creating the client side socket :</p>\n\n<pre><code>var socket = io.connect('http://mydomain.com:8080');\n</code></pre>\n\n<p>That's it !</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Socket.io supports cross-domain connections, but keep in mind that your cookie will not be passed to the server.  You'll have to either:</p>\n\n<p>(1) come up with an alternate identification scheme (a custom token or a javascript cookie-- just keep in mind this should not be the actually session id, unless you want to put yourself at risk of session hijacking)</p>\n\n<p>or (2) send a good old fashioned HTTP JSONP request to the server first to get the cookie.  Then it will be transmitted w/ the socket connection handshake.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Is it possible to use Socket.Io in a cross domain manner? If so, how? The possibility is mentioned around the web but no code examples are given anywhere.</p>\n",
            "last_activity_date": 1368069772,
            "question_id": 8970880,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "node.js",
                "websocket",
                "socket.io"
            ],
            "title": "Cross Domain Socket.Io"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>jQuery uses _data in order to set the 'pvt' flag for data it stores on the object.  The <code>pvt</code> is used so that when you request public data from the object, pvt data is not returned.  This is to keep jQuery's internal use of the <code>.data()</code> mechanism (like what toggle does) from effecting the public use of <code>.data()</code>.</p>\n\n<p>You can see this declaration in the jQuery source:</p>\n\n<pre><code>// For internal use only.\n_data: function( elem, name, data ) {\n    return jQuery.data( elem, name, data, true );\n},\n</code></pre>\n\n<p>Which just calls <code>jQuery.data</code> and forces the fourth parameter (which is privacy) to be true.  When retrieving data, if the <code>pvt</code> flag is set, then it is retrieved in a slightly different way.  The public interfaces to <code>.data()</code> do not expose the <code>pvt</code> flag.</p>\n\n<p>You can see an example of <code>pvt</code> handling here in this part of <code>jQuery.data()</code>:</p>\n\n<pre><code>// An object can be passed to jQuery.data instead of a key/value pair; this gets\n// shallow copied over onto the existing cache\nif ( typeof name === \"object\" || typeof name === \"function\" ) {\n    if ( pvt ) {\n        cache[ id ][ internalKey ] = jQuery.extend(cache[ id ][ internalKey ], name);\n    } else {\n        cache[ id ] = jQuery.extend(cache[ id ], name);\n    }\n}\n</code></pre>\n\n<p>and then later in that same function, this comment is pretty descriptive:</p>\n\n<pre><code>// Internal jQuery data is stored in a separate object inside the object's data\n// cache in order to avoid key collisions between internal data and user-defined\n// data\nif ( pvt ) {\n    if ( !thisCache[ internalKey ] ) {\n        thisCache[ internalKey ] = {};\n    }\n    thisCache = thisCache[ internalKey ];\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 28
                }
            ],
            "body": "<p>While going through the source, I noticed that 'toggle' supposedly uses <code>jQuery._data</code> to store the state of the element. I examined the <code>jQuery.cache</code> object in chrome and found that the element's data object had yet another object under it prepended by the word jQuery with a number that I'm guessing uniquely identifies it. However, I saw no data regarding the state of the element. Simply <code>{olddisplay: 'block'}</code>. Any clues as to the purpose of jQuery._data and how it works per se?</p>\n\n<p>I've been staring at the source all day .... please don't tell me to view the source. My eyes and brain will thank you.</p>\n",
            "last_activity_date": 1318812377,
            "question_id": 7788353,
            "score": 13,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "What&#39;s the difference between jQuery.data and jQuery._data ( underscore data )?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You could include the AUTH_TOKEN in the form itself, as a hidden input.</p>\n\n<pre><code>&lt;input type=\"hidden\" name=\"AUTH_TOKEN\"&gt;1234abcd&lt;/input&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Actually, you are reading the <code>action</code> attribute of form and sending a post ajax request to it. to send form data you have to submit the form or you can serialize the form data and send it in ajax request like</p>\n\n<pre><code>$(\".ajax-referral\").click(function(){\n  $.ajax({\n      type: \"POST\", \n      url: $(this).parent(\"form\").attr(\"action\") + \"?&amp;authenticity_token=\" + AUTH_TOKEN, \n      data:$(this).parent(\"form\").serialize(),\n      dataType: \"script\"\n      });\n  return false;\n});\n</code></pre>\n\n<p>Doing this will serialize your form data and send it along with ajax request and authenticity token is already being sent via query string</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Thanks!</p>\n\n<p>Just to clarify for the more common use.</p>\n\n<p>You need the js tag with var AUTH_TOKEN in your head. Should be something like this.</p>\n\n<pre><code>&lt;%= csrf_meta_tag %&gt;\n&lt;%= javascript_tag \"var AUTH_TOKEN = '#{form_authenticity_token}';\" if protect_against_forgery? %&gt;\n</code></pre>\n\n<p>And then simply put your authenticity_token=AUTH_TOKEN in the ajax data if you don't need to use parent(form) or something like this.</p>\n\n<pre><code>$.ajax({\n  type: 'post',\n  dataType:'text',\n  data: \"user_id=\"+user_id+\"&amp;authenticity_token=\"+AUTH_TOKEN,\n  url:'/follow/unfollow'\n})\n</code></pre>\n\n<p>Thanks to the guys above for sharing this knowledge!</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I just ran into this issue but I tried this approach in my application.js file:</p>\n\n<pre><code>$(document).ajaxSend(function(e, xhr, options) {\n  if (options.data == null) {\n    options.data = {};\n  }\n  options.data['authenticity_token'] = token;\n});\n</code></pre>\n\n<p>This is the original question where I got the idea: <a href=\"http://stackoverflow.com/questions/2332305/modifying-a-jquery-ajax-request-intercepted-via-ajaxsend\">ajaxSend Question</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This token also already appears in one of the \"meta\" tags in the head of the application.html.erb layout file by default if you have the following ERB at the top:</p>\n\n<pre><code>&lt;%= csrf_meta_tag %&gt;\n</code></pre>\n\n<p>That ERB roughly renders to:</p>\n\n<pre><code>&lt;meta content=\"abc123blahblahauthenticitytoken\" name=\"csrf-token\"&gt;\n</code></pre>\n\n<p>You can then grab it using jQuery with the following code:</p>\n\n<pre><code>var AUTH_TOKEN = $('meta[name=csrf-token]').attr('content');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>This works but gets stopped because it lacks an authenticity token:</p>\n\n<pre><code>$(\".ajax-referral\").click(function(){\n  $.ajax({type: \"POST\", url: $(this).parent(\"form\").attr(\"action\"), dataType: \"script\"});\n  return false;\n});\n</code></pre>\n\n<p>So I tried adding it like so:</p>\n\n<pre><code>$(\".ajax-referral\").click(function(){\n  $.ajax({type: \"POST\", url: $(this).parent(\"form\").attr(\"action\") + \"?&amp;authenticity_token=\" + AUTH_TOKEN, dataType: \"script\"});\n  return false;\n});\n</code></pre>\n\n<p>And it passes the auth_token correctly as a param, but seems to lose the rest of my form.</p>\n\n<p>Anyways to accomplish both sending the form data that works, and the authenticity token as well?</p>\n\n<p>This is a rails environment. And I have this in my head.</p>\n\n<pre><code>= javascript_tag \"var AUTH_TOKEN = '#{form_authenticity_token}';\" if protect_against_forgery?\n</code></pre>\n\n<p><strong>Things I've tried</strong></p>\n\n<p>1.</p>\n\n<pre><code>= hidden_field :authenticity_token, :value =&gt; form_authenticity_token\n</code></pre>\n\n<p>2.</p>\n\n<pre><code>$.ajax({type: \"POST\", url: $(this).parent(\"form\").attr(\"action\"), dataType: \"script\", authenticity_token: AUTH_TOKEN});\n</code></pre>\n\n<p>3.</p>\n\n<pre><code>// Always send the authenticity_token with ajax\n$(document).ajaxSend(function(event, request, settings) {\n    if ( settings.type != 'GET' ) {\n        settings.data = (settings.data ? settings.data + \"&amp;\" : \"\")\n            + \"authenticity_token=\" + encodeURIComponent( AUTH_TOKEN );\n    }\n});\n</code></pre>\n",
            "last_activity_date": 1384730497,
            "question_id": 7560837,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "ruby-on-rails",
                "ajax",
                "authenticity-token"
            ],
            "title": "Proper way to send an Authenticity Token with AJAX..?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The best way, imho, is to craft your own event system.</p>\n\n<p>Dean Edwards wrote one some years ago that I've taken cues from in the past.  His solution does work out of the box however.</p>\n\n<p><a href=\"http://dean.edwards.name/weblog/2005/10/add-event/\" rel=\"nofollow\">http://dean.edwards.name/weblog/2005/10/add-event/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>(Totally changed my terrible answer. Let's try again.)</p>\n\n<p>Let's assume you have the following base, cross-browser event methods:</p>\n\n<pre><code>var addEvent = window.addEventListener ? function (elem, type, method) {\n        elem.addEventListener(type, method, false);\n    } : function (elem, type, method) {\n        elem.attachEvent('on' + type, method);\n    };\n\nvar removeEvent = window.removeEventListener ? function (elem, type, method) {\n        elem.removeEventListener(type, method, false);\n    } : function (elem, type, method) {\n        elem.detachEvent('on' + type, method);\n    };\n</code></pre>\n\n<p>(Pretty simple, I know.)</p>\n\n<p>Whenever you implement mouseenter/mouseleave, you just attach events to the\nnormal mouseover/mouseout events, but then check for two important particulars:</p>\n\n<ol>\n<li>The event's target is the right element (or a child of the right element)</li>\n<li>The event's relatedTarget is not a child of the target</li>\n</ol>\n\n<p>So we also need <a href=\"http://www.quirksmode.org/blog/archives/2006/01/contains_for_mo.html\">a function that checks whether one element is a child of\nanother</a>:</p>\n\n<pre><code>function contains(container, maybe) {\n    return container.contains ? container.contains(maybe) :\n        !!(container.compareDocumentPosition(maybe) &amp; 16);\n}\n</code></pre>\n\n<p>The last \"gotcha\" is how we would remove the event listener. The quickest way\nto implement it is by just returning the new function that we're adding.</p>\n\n<p>So we end up with something like this:</p>\n\n<pre><code>function mouseEnterLeave(elem, type, method) {\n    var mouseEnter = type === 'mouseenter',\n        ie = mouseEnter ? 'fromElement' : 'toElement',\n        method2 = function (e) {\n            e = e || window.event;\n            var target = e.target || e.srcElement,\n                related = e.relatedTarget || e[ie];\n            if ((elem === target || contains(elem, target)) &amp;&amp;\n                !contains(elem, related)) {\n                    method();\n            }\n        };\n    type = mouseEnter ? 'mouseover' : 'mouseout';\n    addEvent(elem, type, method2);\n    return method2;\n}\n</code></pre>\n\n<p>Adding a mouseenter event would look like this:</p>\n\n<pre><code>var div = document.getElementById('someID'),\n    listener = function () {\n        alert('do whatever');\n    };\n\nmouseEnterLeave(div, 'mouseenter', listener);\n</code></pre>\n\n<p>In order to remove the event, you'd have to do something like this:</p>\n\n<pre><code>var newListener = mouseEnterLeave(div, 'mouseenter', listener);\n\n// removing...\nremoveEvent(div, 'mouseover', newListener);\n</code></pre>\n\n<p>It's hardly ideal, but all that's left is just implementation details. The\nimportant part was the if clause: mouseenter/mouseleave is just\nmouseover/mouseout, but checking if you're targeting the right element, and if\nthe related target is a child of the target.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>John Resig submitted his <a href=\"http://ejohn.org/projects/flexible-javascript-events/\" rel=\"nofollow\">entry</a> to a <a href=\"http://www.quirksmode.org/blog/archives/2005/09/addevent_recodi.html\" rel=\"nofollow\">contest</a>, in which his was judged the best (Note: Dean Edwards was one of the jury). So, I would say, check this one out too.</p>\n\n<p>Also its doesn't hurt to go thru jQuery, DOJO source once in a while, to actually see the best practices they r using to make it work cross-browser.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>another option is to distinguish true <code>mouseout</code> events from fake (child-generated) events using hit-testing. Like so:</p>\n\n<pre><code>elt['onmouseout']=function(evt){\n  if (!mouse_inside_bounding_box(evt,elt)) console.debug('synthetic mouseleave');\n}\n</code></pre>\n\n<p>I've used something like this on chrome and, caveat emptor, it seemed to do the trick. Once you have a reliable mouseleave event mouseenter is trivial.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What would be the best way to implement a mouseenter/mouseleave like event in Javascript without jQuery? What's the best strategy for cross browser use? I'm thinking some kind of checking on the event.relatedTarget/event.toElement property in the mouseover/mouseout event handlers?</p>\n\n<p>Like to hear your thoughts.</p>\n",
            "last_activity_date": 1368835307,
            "question_id": 6130737,
            "score": 12,
            "tags": [
                "javascript",
                "javascript-events"
            ],
            "title": "mouseenter without JQuery"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>It completely depends on what you are using it for.</p>\n\n<p>For instance, I use VS2008 for ASP.NET coding, and Notepad++ for looking at HTML source. It's all in what your end use for the editor will be. You won't care how well it renders a decent PHP development experience if all you are doing is modifying CSS files, for instance.</p>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>Adobe Dreamweaver. It will let you work visually or in code and switch between them. The killer criteria for a tool like that is that it builds good, clean code when you build visually, and Dreamweaver does that. </p>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>FCKeditor, available at <a href=\"http://www.fckeditor.net/\" rel=\"nofollow\">http://www.fckeditor.net/</a>, is great because it is compatible with all major browsers including Safari. Most HTML rich text editors don't support Safari.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I'm partial to TinyMCE WYSIWYG editor due to the following reasons:</p>\n\n<ol>\n<li><p>Javascript - so it is broadly usable\nregardless of the platform I'm\nworking in.</p></li>\n<li><p>Easy to use - just a couple lines of\ncode and a textarea and the control is up and\nrunning.</p></li>\n<li><p>Easily themed - so I can quickly\nmake it look like the site in which\nit is being used</p></li>\n<li><p>Most importantly - easily customized\nto show/hide particular buttons\ndepending on my application needs</p></li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>If you're looking for WYSIWYG editor to place on a web site, I like <a href=\"http://tinymce.moxiecode.com/\" rel=\"nofollow\">TinyMCE</a>.  Free with a decent community for support.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you're talking about editing components (as opposed to stand-alone apps like DreamWeaver) I've used CuteEditor, TinyMCE, FCKEditor, eWebEditPro, and Telerik's RAD Editor. They all have thier plusses and minuses, and you have to get used to their way of seeing the world. The HTML they spit out varies greatly, and I find I frequently have to tweak the results.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would highly recommend the HTML Kit http://www.chami.com/html-kit/ not only does it come in a free version, but there are many modules that are available that make HTML markup alot easier.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have had decent luck with the <a href=\"http://www.fckeditor.net/\" rel=\"nofollow\">FCKEditor</a> in my ASP.Net applications.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I always use FCKEditor, even tinymce have allmost the same features like fcke. You can use drag/drop, just like regular TextBox, and it's really easy to edit config file and add/remove features.<br />\nAlso, for fcke and tinymce you have to buy image thumbnail browser, in free version you have only file names list. I think that there's no major differences between this two editors, and they are probably the best on market.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://www.solmetra.com/en/disp.php/en_products/en_spaw/en_spaw_about\" rel=\"nofollow\">Spaw</a> is good looking, and easy to use.  We have used it in several projects to date.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>TinyMCE by far. It does everything that FCKeditor does and more. We had problems with clients pasting in content from MS Word, FCK has problems parsing it and we've had mangled text. One of my department's goals is to move our CMS to TinyMCE.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I use TinyMCE in my projects. I did my research quite some time ago, but am still happy:</p>\n\n<ul>\n<li>filters MS Word HTML better</li>\n<li>has less files than FCKe :)</li>\n<li>has a free adaptation of FCKe plugins for advanced file and image manipulation, tinymcpuk</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>TinyMCE is great because its very easy to customise and to write plugins for. </p>\n\n<p>It's also been around for a while so there are plenty of resources and help available for it. </p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>There are many different flavored HTML WYSIWYG editors from javascript to ASP.Net web controls, but all too often the features are the same.  Does anyone have a favorite HTML editor they like to use in projects?  Why?</p>\n",
            "last_activity_date": 1314675200,
            "question_id": 65800,
            "score": 12,
            "tags": [
                "asp.net",
                "javascript",
                "html",
                "editor",
                "wysiwyg"
            ],
            "title": "What&#39;s the best HTML WYSISYG editor available to web developers and why?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>This appears to be a bug in IE10 (<a href=\"https://connect.microsoft.com/IE/feedback/details/785990/ie-10-on-win8-does-not-assign-the-correct-status-to-xmlhttprequest-when-the-result-is-401\">https://connect.microsoft.com/IE/feedback/details/785990/ie-10-on-win8-does-not-assign-the-correct-status-to-xmlhttprequest-when-the-result-is-401</a>).</p>\n\n<p>IE10 is treating HTTP status 401 as a network error. The console shows:</p>\n\n<pre><code>SCRIPT7002: XMLHttpRequest: Network Error 0x80070005, Access is denied\n</code></pre>\n\n<p>According to the XMLHttpRequest Level 2 specification the status attribute should be zero if the error flag is set (for example because of a network error). However the specification also states (<a href=\"http://www.w3.org/TR/XMLHttpRequest2/#infrastructure-for-the-send-method\">http://www.w3.org/TR/XMLHttpRequest2/#infrastructure-for-the-send-method</a>) that a network error</p>\n\n<blockquote>\n  <p>does not include HTTP responses that indicate some type of error, such\n  as HTTP status code 410.</p>\n</blockquote>\n\n<p>I think it is clear that HTTP status 401 should not therefore be treated as a network error (as it is not in Chrome, Firefox and Safari) and that this is a bug in IE10.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>I just ran into this problem today. After trying a few workarounds, and some Googleing, I ended up here.\nIt turned out to just be a security level settings.\nWhatever security zone your website is in (Internet Options > Security) make sure you ENABLE the following setting in your zone: Miscellaneous > Access data sources across domains.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have hit a wall with this issue. I guess it is some kind of IE bug but I want to be sure.</p>\n\n<p>So the question is. Why does IE10 XmlHttpRequest.status returns 0 instead of 401?</p>\n\n<pre><code>var xmlhttp=new XMLHttpRequest();\n\nxmlhttp.onreadystatechange=function()\n  {\n  if (xmlhttp.readyState==4)\n    {\n      document.getElementById(\"rescode\").innerHTML=\"Request completed with status: \"+xmlhttp.status;\n    }\n  }\nxmlhttp.open(\"GET\",\"http://hosting.gregy.cz/cors/\",true);\nxmlhttp.send();\n</code></pre>\n\n<p>See plunker here: <a href=\"http://plnkr.co/edit/E2lCflPDHHaQi7t79IeM?p=preview\">http://plnkr.co/edit/E2lCflPDHHaQi7t79IeM?p=preview</a></p>\n\n<p>This code fires a CORS request which always returns 401. Firefox and chrome correctly return 401 in status attribute but IE10 returns 0. This issue breaks authentication handling methods I use for  my project.</p>\n\n<p>Thank you</p>\n\n<p><strong>Edit:</strong></p>\n\n<p>I have modified the plunker with onload and onerror event handlers (tip from monsur's comment), but the result is still the same.</p>\n\n<p>I have also made sure IE10 has no compatibility mode selected. (tip from  cernunnos's comment)</p>\n",
            "last_activity_date": 1411077579,
            "question_id": 16081267,
            "score": 11,
            "tags": [
                "javascript",
                "xmlhttprequest",
                "cors",
                "internet-explorer-10"
            ],
            "title": "XmlHttpRequest status 0 instead of 401 in IE 10"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>So when you set the \"size\" of the tree layout all you are doing is setting the value the tree layout will interpolate the x and y values to. So there is no reason you can't compute the width or height you want and change it in the layout on each update call.</p>\n\n<p>I copied the example you gave to a <a href=\"http://jsfiddle.net/bSQ8U/1/\">jsFiddle</a> and added the following to the update function:</p>\n\n<pre><code>// compute the new height\nvar levelWidth = [1];\nvar childCount = function(level, n) {\n\n  if(n.children &amp;&amp; n.children.length &gt; 0) {\n    if(levelWidth.length &lt;= level + 1) levelWidth.push(0);\n\n    levelWidth[level+1] += n.children.length;\n    n.children.forEach(function(d) {\n      childCount(level + 1, d);\n    });\n  }\n};\nchildCount(0, root);  \nvar newHeight = d3.max(levelWidth) * 20; // 20 pixels per line  \ntree = tree.size([newHeight, w]);\n</code></pre>\n\n<p>Note that this is a pretty rough calculation and does not factor in where the children are w.r.t their parents or anything - but you get the idea.</p>\n\n<p>As for manipulating the x values of the nodes the easiest is probably to simply modify the nodes after the layout has done it's thing. In fact you can see that this is already done in the example with the y coordinate:</p>\n\n<pre><code>// Normalize for fixed-depth.\nnodes.forEach(function(d) { d.y = d.depth * 180; }); \n</code></pre>\n\n<p>He does this so that even if children are hidden a given level of nodes stays at the same y position, otherwise if you collapsed all the children the remaining levels would stretch to take up the whole width (try commenting that line out and see what happens as you toggle whole levels invisible).</p>\n\n<p>As for going top down I think you can pretty much just flip everywhere you see x and y (and x0 and y0). Don't forget to do the same to the diagonal projection to make sure your lines flip too.</p>\n",
                    "is_accepted": false,
                    "score": 19
                }
            ],
            "body": "<p>From this example \n<a href=\"http://mbostock.github.com/d3/talk/20111018/tree.html\" rel=\"nofollow\">http://mbostock.github.com/d3/talk/20111018/tree.html</a>\nI have build a <code>d3 tree layout</code> where the root is in the middle(<code>root.x0 = width/2</code>) in the browser window and the nodes are in the downward direction instead of facing to the right.</p>\n\n<p>Is it possible to re-size the tree, such that the width of the tree is dependent \non the number of nodes of the tree such that if number of nodes is less, then width is less\nor else if number of nodes is greater then width is large ?</p>\n\n<p>I also need to know how <code>d3 tree layout</code> currently calculates the \"<code>d.x</code>\" attribute? How can I manipulate \"<code>d.x</code>\" attribute to adjust the spacing \nbetween the nodes of the d3 tree layout. </p>\n",
            "last_activity_date": 1401795432,
            "question_id": 13103748,
            "score": 11,
            "tags": [
                "javascript",
                "layout",
                "d3.js",
                "tree"
            ],
            "title": "Dynamically resize the d3 tree layout based on number of childnodes"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The closest I've been able to get to a solution is this:</p>\n\n<pre><code>&lt;table&gt;\n    &lt;tbody&gt;\n            &lt;tr data-bind=\"template: { name: 'rowTmpl', foreach: items}\"&gt;\n\n            &lt;/tr&gt;\n    &lt;/tbody&gt;\n&lt;/table&gt;\n&lt;script id=\"rowTmpl\" type=\"text/html\"&gt;\n\n        &lt;td data-bind=\"text: name\"&gt;&lt;/td&gt;\n\n        &lt;!-- ko if: (vm.items.indexOf($data) + 1) % 5 == 0 --&gt;\n        &lt;td&gt;new row html here&lt;/td&gt;\n        &lt;!-- /ko --&gt; \n\n&lt;/script&gt;\n\n\nvm = {\n\n            items: ko.observableArray([\n                { name: 'test1' }, \n                { name: 'test2' }, \n                { name: 'test3' }, \n                { name: 'test4' }, \n                { name: 'test5' }, \n                { name: 'test6' } \n            ])\n        }\n\n        ko.applyBindings(vm);\n</code></pre>\n\n<p>.. which outputs this:</p>\n\n<p>| test1 | test2 | test3 | test4 | test5 | new row html here | test6 |</p>\n\n<p>This inserts a new element on every 5th item. However, if I substitute <code>&lt;td&gt;new row html here&lt;/td&gt;</code> with <code>&lt;/tr&gt;&lt;tr&gt;</code> the template engine throws an error. Maybe, some other SO-er can build on this and show how to output not strictly correct html.</p>\n\n<p>Anyway, hope this helps a little.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>To handle a situation like this, I would probably push the logic into your view model, so that your view can remain simple.  So the idea would be to use a dependentObservable to represent your \"rows\".  Then, your view can just foreach through the rows and then foreach through the cells in your row.</p>\n\n<p>Here is a sample that makes that number of columns an observable, so that it can be dynamically updated.  <a href=\"http://jsfiddle.net/rniemeyer/9TN9W/\">http://jsfiddle.net/rniemeyer/9TN9W/</a></p>\n\n<pre><code>var viewModel = {\n    items: ko.observableArray(),\n    columnLength: ko.observable(5)  \n};\n\n//sample data\nfor (var i = 0; i &lt; 100; i++) {\n    viewModel.items.push({ name: 'test' + i });  \n}\n\n//return an array of rows.  Each row is an array of items\nviewModel.rows = ko.dependentObservable(function() {\n    var result = [],\n        colLength = parseInt(this.columnLength(), 10),\n        row;\n\n\n    //loop through items and push each item to a row array that gets pushed to the final result\n    for (var i = 0, j = this.items().length; i &lt; j; i++) {\n        if (i % colLength === 0) {\n            if (row) {\n              result.push(row);     \n            }\n            row = [];\n        }\n        row.push(this.items()[i]);\n    }\n\n    //push the final row  \n    if (row) {\n        result.push(row);\n    }\n\n    return result;\n}, viewModel);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                }
            ],
            "body": "<p>I found a similar question/answer here: <a href=\"http://stackoverflow.com/questions/7414332/knockout-how-to-render-a-table-with-some-fixed-and-some-dynamic-columns\">Knockout - how to render a table with some fixed and some dynamic columns</a></p>\n\n<p>But it does not completely solve my problem. I am trying to figure out how I can limit the number of dynamic columns to 5 per row and if there are more than 5 items in the view model, make a new row and repeat for all groups of 5 in the array.</p>\n\n<p>For example:</p>\n\n<pre><code>var vm = {\n    item: { name: 'test1' },\n    item: { name: 'test2' },\n    item: { name: 'test3' },\n    item: { name: 'test4' },\n    item: { name: 'test5' },\n    item: { name: 'test6' }\n};\n</code></pre>\n\n<p>Give that model, how can I get this table?</p>\n\n<pre><code>&lt;table&gt;\n   &lt;tr&gt;\n      &lt;td&gt;test1&lt;/td&gt;\n      &lt;td&gt;test2&lt;/td&gt;\n      &lt;td&gt;test3&lt;/td&gt;\n      &lt;td&gt;test4&lt;/td&gt;\n      &lt;td&gt;test5&lt;/td&gt;\n   &lt;/tr&gt;\n   &lt;tr&gt;\n      &lt;td&gt;test6&lt;/td&gt;\n   &lt;tr&gt;\n&lt;/table&gt;\n</code></pre>\n",
            "last_activity_date": 1358004794,
            "question_id": 7669946,
            "score": 11,
            "tags": [
                "javascript",
                "knockout.js"
            ],
            "title": "Knockout.js - Dynamic columns but limit to a maximum of 5 for each row"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<ol>\n<li><a href=\"http://jqueryui.com/demos/tabs/\" rel=\"nofollow\">jQuery UI Tabs</a></li>\n<li>Depending on how you're using the overlay, <a href=\"http://fancybox.net/\" rel=\"nofollow\">Fancybox</a> or <a href=\"http://jquery.malsup.com/block/\" rel=\"nofollow\">blockUI</a></li>\n<li>Depending on how fancy you want it to look, <a href=\"http://onehackoranother.com/projects/jquery/tipsy/\" rel=\"nofollow\">tipsy</a>, <a href=\"http://craigsworks.com/projects/qtip/docs/\" rel=\"nofollow\">qTip</a>, <a href=\"http://plugins.learningjquery.com/cluetip/demo/\" rel=\"nofollow\">clueTip</a>, or <a href=\"http://wiki.jqueryui.com/w/page/12138112/Tooltip\" rel=\"nofollow\">jQuery UI tooltip</a> (still in dev)</li>\n<li>The <a href=\"http://bassistance.de/jquery-plugins/jquery-plugin-validation/\" rel=\"nofollow\">jQuery Validation plugin</a></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><strong>jQuery Tools</strong> has become a disaster... I think Tero got in way over his head trying to rival <strong>jQuery UI</strong> and just no time to support the product.  I tried it for a while and his methods are certainly unique.  He turned the jQuery tag-line of <em>\"write less, do more\"</em> completely upside down and in my opinion, only does himself and the jQuery community a disservice.  He rarely posts in his own forums and has not released an update in over six months despite more and more incompatibilities with the ever updating <strong>jQuery</strong>.</p>\n\n<p>I really like <a href=\"http://www.no-margin-for-errors.com/projects/prettyphoto-jquery-lightbox-clone/\" rel=\"nofollow\"><strong>prettyPhoto</strong></a> for the Overlay Lightbox effect.  It's well supported and dynamically re-sizes itself to properly &amp; automatically fit any content.  It supports titles and captions as well as an optional mini thumbnail gallery inside of the lightbox itself.</p>\n\n<p>There are also six skins (themes) included which are based on popular site designs.</p>\n\n<p>There's nothing wrong with Fancybox at all, but <strong>prettyPhoto</strong> has a lot more cool features enabled right out of the box.  Literally only takes a few minutes to set it up to function like the demos.</p>\n\n<p>It also plays nice with other plugins.  I use <a href=\"http://sorgalla.com/jcarousel/\" rel=\"nofollow\"><strong>jCarousel</strong></a> to display my thumbnails and prettyPhoto to zoom in on them when clicked.</p>\n\n<p>jCarousel takes a bit more CSS fiddling to look they way you want but both of these plugins are fully customizable.  If you know your CSS, you should have no trouble duplicating the exact look of your old jQuery Tools applications.</p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>I agree with others on the following...</p>\n\n<p><a href=\"http://craigsworks.com/projects/qtip/docs/\" rel=\"nofollow\"><strong>qTip2</strong></a> is an excellent ToolTips plugin and I think <a href=\"http://bassistance.de/jquery-plugins/jquery-plugin-validation/\" rel=\"nofollow\"><strong>the jQuery Validation Plugin</strong></a> is really the <strong>only</strong> way to do jQuery form validation.</p>\n\n<p><strong>EDIT 2:</strong></p>\n\n<p><a href=\"http://fancyapps.com/fancybox/\" rel=\"nofollow\"><strong>FancyBox 2</strong></a> is great and more solid than prettyPhoto in my opinion.  There are animated opening and closing effects which you don't get with prettyPhoto.  If you don't need the mini thumbnail slideshow within the lightbox, I prefer FancyBox 2 over prettyPhoto.</p>\n\n<p><strong>jCarousel</strong> has a major bug in <code>circular wrap</code> that the developer has acknowledged yet fails to fix.  You cannot wrap around.  Even the online demos are broken.  <a href=\"http://www.gmarwaha.com/jquery/jcarousellite/\" rel=\"nofollow\"><strong>jCarousel Lite</strong></a> does not have any issues at all with circular wrapping.</p>\n\n<p>Excellent, VERY popular and solid, non-carousel style slide-show plugins with transition effects include <a href=\"http://nivo.dev7studios.com/\" rel=\"nofollow\"><strong>Nivo Slider</strong></a> and <a href=\"http://jquery.malsup.com/cycle/\" rel=\"nofollow\"><strong>Cycle</strong></a>.</p>\n\n<p><strong>EDIT 3:</strong></p>\n\n<p>I've recently discovered <a href=\"http://calebjacob.com/tooltipster/\" rel=\"nofollow\"><strong>Tooltipster</strong></a> and now heavily favor it over <strong>qTip2</strong>.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>For tooltips also look at Poshy Tip <a href=\"http://vadikom.com/demos/poshytip/\" rel=\"nofollow\">http://vadikom.com/demos/poshytip/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using <a href=\"http://flowplayer.org/tools\">jQuery Tools</a> for most of my sites but it seems that it ceases development. I have no choice but to look for individual jQuery plugins equivalent to that of jQuery Tools.</p>\n\n<p>I'm looking for suggestions on the best alternatives for:</p>\n\n<ol>\n<li>jQuery Tools <strong>Tabs + Toolbox.History</strong></li>\n<li>jQuery Tools <strong>Overlay + Toolbox.Expose</strong></li>\n<li>jQuery Tools <strong>Tooltip</strong></li>\n<li>jQuery Tools <strong>Validator</strong></li>\n</ol>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1363623404,
            "question_id": 5561409,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "jquery-tools"
            ],
            "title": "jQuery Tools Alternatives?"
        }
    ]
}
