{
    "items": [
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Your cookie domain is <strong>.google.com</strong>, if you're not actually running the code from that domain you will not be able to modify the cookie.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>Thu, 01-Jan-70 00:00:01 GMT\n</code></pre>\n\n<p>Set time one second after midnight</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Why don't you just stick with one question or figure it out for yourself rather than keep posting your problems every few minutes?</p>\n\n<p>e.g.\n<a href=\"http://stackoverflow.com/questions/1802210/how-to-recover-google-classic-design-from-its-new-design\">http://stackoverflow.com/questions/1802210/how-to-recover-google-classic-design-from-its-new-design</a></p>\n\n<p><a href=\"http://stackoverflow.com/questions/1802275/how-to-reverse-the-effect-of-the-following-execution-by-using-javascript\">http://stackoverflow.com/questions/1802275/how-to-reverse-the-effect-of-the-following-execution-by-using-javascript</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Trick is right... in particular you need to put any past-value in the <code>expires</code> header. (These days you'd use a full-year, though; the two-digit format goes back to the early Netscapes only.)</p>\n\n<p>Also ensure you don't use smart quotes like in your quote above.</p>\n\n<pre><code>javascript:alert(document.cookie='PREF=X;path=/;domain=.google.com;expires=Sat, 01-Jan-2000 00:00:00 GMT');\n</code></pre>\n\n<p>Note that the format produced by <code>Date.toGMTString</code> is <em>not</em> the same as the date format required by the cookie specification, although it does still work in many browsers.</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>Agreed, @bobince.  The <a href=\"https://developer.mozilla.org/en/document.cookie\" rel=\"nofollow\">official documentation</a> says to use <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/toUTCString\" rel=\"nofollow\"><code>Date.toUTCString()</code></a> for cookie expiration dates.</p>\n\n<p>I am 95% sure that you must set an expiration date when creating the cookie crumb if you want to force its removal later.  A cookie crumb created without an explicit expiration date is a session cookie (crumb) by default, which means that it is not removed until the browser is closed.  I recall trying to expire a session cookie to no avail, in the past.</p>\n\n<p>If you do set an expiration date on the cookie crumb in the first place, remember that you can use a variable for the new expiration date.</p>\n\n<pre><code>// assuming a non-session cookie crumb called \"someCrumbName\" exists:\nvar now = new Date();\nvar expirationDate = new Date();\nvar someValue = \"foo\";\n\n// set the expiration date to a week ago and delete the cookie\nexpirationDate.setDate(now.getDate() - 7);\ndocument.cookie = \"someCrumbName=\" + someValue + \";expires=\" + expirationDate.toUTCString();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How to remove the cookie set by</p>\n\n<pre><code>javascript:void(document.cookie=\u201dPREF=ID=20b6e4c2f44943bb:U=4bf292d46faad806:TM=1249677602:LM=1257919388:S=odm0Ys-53ZueXfZG;path=/; domain=.google.com\u201d);\n</code></pre>\n\n<p>The following statement doesn't work.</p>\n\n<pre><code>javascript:void(document.cookie=\u201dPREF=ID=20b6e4c2f44943bb:U=4bf292d46faad806:TM=1249677602:LM=1257919388:S=odm0Ys-53ZueXfZG;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/; domain=.google.com\u201d);\n</code></pre>\n\n<p>What's wrong with the removal code?</p>\n",
            "last_activity_date": 1349706079,
            "question_id": 1802354,
            "score": -5,
            "tags": [
                "javascript",
                "cookies"
            ],
            "title": "How to remove a cookie by using Javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>To avoid cross-domain issues, you can do this using JSONP:</p>\n\n<pre><code>$.getJSON(\"http://en.wikipedia.org/w/api.php?action=query&amp;prop=extracts&amp;exintro&amp;format=json&amp;callback=?&amp;titles=Google\", function(data){\n    var page = data.query.pages;\n    var intro = \"\";\n    for (var key in page) {\n        var obj = page[key];\n        intro = obj.extract;\n    }\n    console.log(intro);\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>This gets you the raw <a href=\"http://en.wikipedia.org/wiki/HTML\" rel=\"nofollow\">HTML</a>:</p>\n\n<pre><code>$('#mw-content-text').children('p')[0];\n</code></pre>\n\n<p>You could use this with some sort of scraper. Maybe script something with <a href=\"http://phantomjs.org/\" rel=\"nofollow\">PhantomJS</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Google has already done this job and is exposing all this information as <a href=\"https://en.wikipedia.org/wiki/Resource_Description_Framework\" rel=\"nofollow\">RDF</a>/<a href=\"http://en.wikipedia.org/wiki/JSON\" rel=\"nofollow\">JSON</a> graphs through the <a href=\"https://developers.google.com/freebase/\" rel=\"nofollow\">Freebase API</a>.</p>\n\n<p>You can also get the raw <a href=\"http://en.wikipedia.org/wiki/HTML\" rel=\"nofollow\">HTML</a> and then parse the content. </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>From <a href=\"http://en.wikipedia.org/wiki/Google\" rel=\"nofollow\">Wikipedia</a>:</p>\n\n<blockquote>\n  <p>Google is an American multinational corporation specializing in\n  Internet-related services and products. These include search,\n  cloud computing, software, and online advertising technologies.\n  Most of its profits are derived from AdWords. Google was founded\n  by Larry Page and Sergey Brin while they were Ph.D. students at\n  Stanford University. Together they own about 16 percent of its shares.\n  They incorporated Google as a privately held company on September 4,\n  1998. An initial public offering followed on August 19, 2004. Its mission statement from the outset was \"to organize the world's\n  information and make it universally accessible and useful\", and its\n  unofficial slogan was \"Don't be evil\". In 2006 Google moved to\n  headquarters in Mountain View, California, nicknamed the Googleplex.</p>\n</blockquote>\n\n<p>How can I get the main paragraph from Wikipedia using JavaScript only?</p>\n",
            "last_activity_date": 1395262335,
            "question_id": 22210032,
            "score": -6,
            "tags": [
                "javascript",
                "wikipedia"
            ],
            "title": "Is there a way to get the main paragraph from Wikipedia using JavaScript only?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You simply cannot do that, you need to understand the difference between client/server side programming, you cannot assign Javascript value to PHP variable, yea but you can assign PHP value to your javascript</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>Please try this:</p>\n\n<p>Use document.write function in javascript.</p>\n\n<pre><code>&lt;?php\n     $var_example_php = \"&lt;script&gt;document.write(var_example);&lt;/script&gt;\";\n     echo $var_example_php;\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>You can do it using <code>ob_start()</code> function (<a href=\"http://php.net/manual/en/function.ob-start.php\" rel=\"nofollow\">documentation</a>). If you use this method you can call a function and parse the html content. You search for your variable and get it with php..</p>\n\n<pre><code>&lt;html&gt;\n  &lt;head&gt;\n  &lt;?php\n    $my_var = '';\n\n\n    function callback($buffer)\n    {\n      global $my_var;\n      $arr = array();\n\n      preg_match('/var_example = \\\"(?P&lt;var&gt;\\w+)\\\"*/', $arr, $buffer);\n\n      $my_var = $arr['var'][0];  \n\n      return $buffer;\n    }\n\n    ob_start(\"callback\");\n\n  ?&gt;\n  &lt;script type=\"text/javascript\"&gt;\n\n    var var_example = \"2222\";\n\n  &lt;/script&gt;\n  &lt;?php\n\n    ob_end_flush();\n\n  ?&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You cannot do that. An alternative may be creating a cookie using javascript and then read the cookie in PHP.</p>\n\n<p>In Javascript:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    document.cookie = \"cookieName=cookieValue\";\n&lt;/script&gt;\n</code></pre>\n\n<p>And in PHP</p>\n\n<pre><code>&lt;?php \n   $phpVar =  $_COOKIE['cookieName'];\n\n   echo $phpVar;\n?&gt;\n</code></pre>\n\n<p>But an important point, for this to run the browser needs reload.</p>\n\n<p>Best regards...</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/1917576/how-to-pass-javascript-variables-to-php\">How to pass JavaScript variables to PHP?</a>  </p>\n</blockquote>\n\n\n\n<p><strong>How to assign on this php variable asign javasript value</strong></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\nvar var_example = \"2222\";\n\n&lt;/script&gt;\n\n&lt;?php \n  echo $var_example_php =   ?        \n\n  /// How to assign on this php variable asign javasript value \n?&gt;\n</code></pre>\n",
            "last_activity_date": 1351326707,
            "question_id": 13097595,
            "score": -6,
            "tags": [
                "php",
                "javascript"
            ],
            "title": "How to assign php variable in JavaScript value assign?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Just call it like any other function on your page, jQuery is a framework and is not needed for running a JS function.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>hmmm... probably I'd go with </p>\n\n<pre><code>test();\n</code></pre>\n\n<p>But that's not jquery, it's plain old javascript.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code> ...\n\n     function (err, window) {\n                    var $ = window.jQuery;\n                    window.test();\n\n...\n</code></pre>\n\n<p>You could also try:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" id=\"myscript\"&gt;\n    function test() {\n        console.log(\"Hello world\");\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>And then:</p>\n\n<pre><code>function (err, window) {\n                        var $ = window.jQuery;\n                        (1,window.eval)( $(\"#myscript\").html() );\n                        window.test();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>So the problem here is that by default, <code>jsdom.env</code> does not execute javascript found while processing markup.</p>\n\n<p>You'll need to turn these features on:</p>\n\n<pre><code>jsdom.env({\n  // ...\n  features : {\n    FetchExternalResources : ['script'],\n    ProcessExternalResources : ['script']\n  }\n});\n</code></pre>\n\n<p><code>FetchExternalResources</code> controls whether or not jsdom should even bother reaching across the network/disk to collect the bytes of a resource</p>\n\n<p><code>ProcessExternalResources</code> controls whether or fetched scripts are executed</p>\n\n<p><strong>Note</strong> these names were chosen to encompass other resources types (read: images, css, etc..) which will be added in the future.  The idea here is to provide sane defaults, but have many turnable knobs that affect the behavior of jsdom.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Example:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    function test() {\n        console.log(\"Hello world\");\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>How would I call <code>test()</code>?</p>\n\n<p>Edit: I didn't explain this correctly.</p>\n\n<p>I am using the request module of node.js to load an external html file that contains javascript functions:</p>\n\n<pre><code>request.get(options, function (error, response, body) {\n    if (error &amp;&amp; response.statusCode !== 200) {\n    }\n    else {\n        jsdom.env({\n            html: body,\n            scripts: [\"../jquery-1.6.4.min.js\"]\n        }, function (err, window) {\n            var $ = window.jQuery;\n</code></pre>\n\n<p>I'm just looking for the syntax to call a function in 'body'.</p>\n",
            "last_activity_date": 1323504747,
            "question_id": 8345054,
            "score": -6,
            "tags": [
                "javascript",
                "node.js",
                "jsdom"
            ],
            "title": "How to call a javascript function defined in a script tag?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You can always add another external CSS file dynamically with JavaScript (or in this case jQuery):</p>\n\n<pre><code>$('head').append('&lt;link rel=\"stylesheet\" href=\"/alternative.css\" type=\"text/css\" /&gt;');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Create a default stylesheet for the site and create other stylesheets for the specific users. Then override default styles with them with javascripts or php</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you are asking \"How can I switch between the two stylesheets when a user clicks one of the links\", I would sugest the following approach:</p>\n\n<ul>\n<li>Leave your default stylesheet as is.</li>\n<li>Preface all your style declarations in your second stylesheet with some unique class, i.e. <code>alternative-css</code></li>\n<li>When the user clicks on the \"alternative\" link, add a class to a high level element (such as <code>&lt;html&gt;</code>, <code>&lt;body&gt;</code> or wrapper <code>&lt;div&gt;</code></li>\n</ul>\n\n<p>For example:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;body&gt;\n    &lt;a href=\"#\" id=\"main\"&gt;Main Style&lt;/a&gt;\n    &lt;a href=\"#\" id=\"alt\"&gt;Alternative Style&lt;/a&gt;\n    &lt;div id=\"wrapper\"&gt;\n        &lt;p&gt;Some text&lt;/p&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>Stylesheet:</p>\n\n<pre><code>#wrapper {\n    background: #000;\n}\np {\n    color: #fff;\n}\n</code></pre>\n\n<p>Alternative Stylesheet:</p>\n\n<pre><code>.alternative-css #wrapper {\n    background: #fff;\n}\n.alternative-css p {\n    color: #000;\n}\n</code></pre>\n\n<p>JS:</p>\n\n<pre><code>$('#main').click(function(){$('body').removeClass('alternative-css')});\n$('#alt').click(function(){$('body').addClass('alternative-css')});\n</code></pre>\n\n<p>PS: I know you didn't tag this question with jQuery... but this is meant more as a concept and it shouldn't be too hard to write the click handlers in vanilla JS.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The easiest way to do this that I have found is to set a class in the <code>&lt;body&gt;</code> tag and use one CSS file, but defining two sets of CSS definitions, prefixing each set with a class name.</p>\n\n<p>Set a default class (e.g., <code>&lt;body class=\"bodyClass1\"&gt;</code>) and then, when you want to change the look, you simply update the class to the other class using JavaScript.</p>\n\n<p>The benefits of this are that, all classes are loaded at page load and any common styles can be coded outside of the \"class specific\" definitions.</p>\n\n<p>Example:</p>\n\n<pre><code>body {...}\na {...}\ndiv {font-weight: bold;}\n\n.bodyClass1 div {font-size: 10px;}\n\n.bodyClass2 div {font-size: 12px;}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It does not work because you have both files being loaded when the page loads. So of course it will be the color of the second file from the start since both files are there.</p>\n\n<p>The page needs to start with one file. </p>\n\n<p>Other option is you load both files, but the rules are based off a class on the body.</p>\n\n<p>file1.css</p>\n\n<pre><code>body { background-color: yellow; }\nh1 { color: red }\n</code></pre>\n\n<p>file2.css</p>\n\n<pre><code>body.alt {background-color: green; }\nbody.alt h1 { color : blue; }\n</code></pre>\n\n<p>And with the JavaScript you add the class.</p>\n\n<pre><code>document.body.className = document.body.className===\"alt\" ? \"\" : \"alt\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can just disabled/enable the second stylesheet via the <a href=\"https://developer.mozilla.org/en-US/docs/DOM/stylesheet/disabled\" rel=\"nofollow\"><code>disabled</code> property</a>:</p>\n\n<pre><code>document.getElementById('css2').sheet.disabled = true;\n</code></pre>\n\n<p>or the whole <code>&lt;link&gt;</code> element:</p>\n\n<pre><code>document.getElementById('css2').disabled = true;\n</code></pre>\n\n<p>That way the declarations will not overwrite the ones from the first. Your try of changing the <code>href</code> of the link would work as well, yet for that you would need <em>only one</em> <code>&lt;link&gt;</code> tag that is switched between <code>\"css1.css\"</code> and <code>\"css2.css\"</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I've got these two CSS files in my head section:</p>\n\n<pre><code>&lt;link href=\"css1.css\" rel=\"stylesheet\" type=\"text/css\" /&gt; \n&lt;link id=\"css2\" href=\"css2.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n</code></pre>\n\n<p>and this href: </p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"document.getElementById('css2').href='css2.css'\"&gt;Change&lt;/a&gt;\n</code></pre>\n\n<p>The page is showing css2 (which has background-color set to green) but I want it to show css1(red), and then by clicking the css2 link it should change to css2.</p>\n",
            "last_activity_date": 1362595566,
            "question_id": 15253044,
            "score": -7,
            "tags": [
                "javascript",
                "css"
            ],
            "title": "Multiple CSS option for users"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You'll have to call .draggable() again to include the new elements.</p>\n",
                    "is_accepted": true,
                    "score": 0
                }
            ],
            "body": "<p>I am using jquery to create a dynamic  list.  The hardcoded list is draggable, but the list I create on demand through javascript is not.  I am creating the same exact DOM elements, replacing the innerHTML of the ul (ui-helper-reset) bout it is not draggable</p>\n",
            "last_activity_date": 1343375500,
            "question_id": 11683367,
            "score": -12,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui"
            ],
            "title": "Why can&#39;t I dynamically create a jquery object that is draggable?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>It appears to be treating that \".0\" extension of the number like a string.</p>\n\n<p>If all of your data values are going to be coming in in that format, just whip a <code>parseFloat()</code> on those suckers like this:</p>\n\n<pre><code>$(\"a\").click(function() {\n    alert(typeof parseFloat($(this).data( \"value\")));   \n});\n</code></pre>\n\n<p>That way it won't matter if they are strings or numbers, they will always be treated like numbers(decimals intact).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As tymeJV mentioned, this looks like an issue with how jquery handles autoconversion. If you use \"2\", it gives a number as well, so I'm guessing its just a weird edge case in how they handle things. I would encourage just using .attr('xxx') and parsing out your data to its known type.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think it's more a question about how jquery identifies numbers. If you use <code>alert(typeof(this.getAttribute(\"data-value\")));</code>, it spits out that it's a string both times (which is expected). So far as I know, everything in an html attribute is considered a string, just different libraries may have default behavior that interprets them differently.</p>\n\n<p>Also, a shorthand way to get a number would be something along the lines of...</p>\n\n<pre><code>var someNumber = +$(someElt).data(\"value\");\n</code></pre>\n\n<p>the + will cause type coercion if the returned value is a string, or leave it alone if it's already a number.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>By default anything parsed from an attribute will be a string, you will need to convert it to a number if you need to use it as a number. The best way I've been able to handle this is by wrapping it with the Number function (native javascript)</p>\n\n<pre><code>var number = Number($(this).data(\"value\"));\n</code></pre>\n\n<del>\nparseInt will return an integer (whole number), so if you want to keep your decimal values you'll need to use Number. \n\nWord of caution with parseInt, it is always better to specify the base if you want to parse an int,     \n\n    parseInt($(this).data(\"value\"), 10);\n</del>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Looking through jQuery's source code, i have identified the reason.</p>\n\n<p>It will parse it as a number, if, and only if, doing so does not change the string. Source: <a href=\"https://github.com/jquery/jquery/blob/master/src/data.js#L36\">https://github.com/jquery/jquery/blob/master/src/data.js#L36</a></p>\n\n<pre><code>(+\"2.0\") + \"\" === \"2\" // !== the original string\n(+\"2.1\") + \"\" === \"2.1\" // == the original string\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>Those values are simply strings to vanilla javascript; it's not attempting any conversion on its own.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>[].forEach.call(document.querySelectorAll(\"a\"), function(a){\r\n    console.log(\"type: %s, value: %o\", \r\n                typeof a.dataset.value, \r\n                a.dataset.value);\r\n});\r\n// type: string, value: \"2.0\"\r\n// type: string, value: \"2.5\" </code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;!-- results pane console output; see http://meta.stackexchange.com/a/242491 --&gt;\r\n&lt;script src=\"http://gh-canon.github.io/stack-snippet-console/console.min.js\"&gt;&lt;/script&gt;\r\n&lt;a data-value=\"2.0\"&gt;2.0&lt;/a&gt;\r\n&lt;a data-value=\"2.5\"&gt;2.5&lt;/a&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>jQuery, on the other hand, tries to determine and convert to the appropriate type when accessing data attributes via <a href=\"http://api.jquery.com/data/\" rel=\"nofollow\"><code>data()</code></a>. It's (arguably) an issue with their implementation. Their <a href=\"http://api.jquery.com/data/\" rel=\"nofollow\">documentation</a> (emphasis mine) actually addresses this:</p>\n\n<blockquote>\n  <p>Every attempt is made to convert the string to a JavaScript value (this includes booleans, numbers, objects, arrays, and null). A value is only converted to a number if doing so doesn't change the value's representation. <strong>For example, \"1E02\" and \"100.000\" are equivalent as numbers (numeric value 100) but converting them would alter their representation so they are left as strings.</strong> The string value \"100\" is converted to the number 100.</p>\n</blockquote>\n\n<p><sub>See also <code>HTMLElement.<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement.dataset\" rel=\"nofollow\">dataset</a></code></sub></p>\n",
                    "is_accepted": true,
                    "score": 24
                }
            ],
            "body": "<p>Why is the value of <code>data-value=\"2.0\"</code> cast to a String and the value of <code>data-value=\"2.5\"</code> cast to a Number?\nI can handle this fine within my function. I'm just trying to understand a little more about how Javascript handles Numbers and Strings. This kind of caught me off guard.</p>\n\n<pre><code>&lt;a data-value=\"2.0\"&gt;2.0&lt;/a&gt;\n&lt;a data-value=\"2.5\"&gt;2.5&lt;/a&gt;\n</code></pre>\n\n\n\n<pre><code>$(\"a\").click(function() {\n    alert(typeof $(this).data( \"value\"));   \n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/oz29du9u/\">[ Fiddle With It ]</a></p>\n",
            "last_activity_date": 1423681019,
            "question_id": 26126017,
            "score": 28,
            "tags": [
                "javascript",
                "jquery",
                "string",
                "html5",
                "jquery-data"
            ],
            "title": "HTML5 data-* attribute type casting strings and numbers"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>No, there isn't, unless you use some ActiveX.</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>No. JavaScript is very far away from such hardware details, and has no legitimate mechanism to query them.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can try to estimate the number of cores with:\n<a href=\"https://github.com/oftn/core-estimator\">https://github.com/oftn/core-estimator</a></p>\n\n<p>demo:\n<a href=\"http://eligrey.com/blog/post/cpu-core-estimation-with-javascript\">http://eligrey.com/blog/post/cpu-core-estimation-with-javascript</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Here's a fairly quick concurrency estimator I hacked together... it hasn't undergone much testing yet:</p>\n\n<p><a href=\"http://jsfiddle.net/Ma4YT/2/\" rel=\"nofollow\">http://jsfiddle.net/Ma4YT/2/</a></p>\n\n<p>Here's the code the workers run (since I have a jsfiddle link a sample is necessary):</p>\n\n<pre><code>\n// create worker concurrency estimation code as blob\nvar blobUrl = URL.createObjectURL(new Blob(['(',\n  function() {\n    self.addEventListener('message', function(e) {\n      // run worker for 4 ms\n      var st = Date.now();\n      var et = st + 4;\n      while(Date.now() &lt; et);\n      self.postMessage({st: st, et: et});\n    });\n  }.toString(),\n')()'], {type: 'application/javascript'}));\n</code></pre>\n\n<p>The estimator has a large number of workers run for a short period of time (4ms) and report back the times that they ran (unfortunately, performance.now() is unavailable in Web Workers for more accurate timing). The main thread then checks to see the maximum number of workers that were running during the same time. This test is repeated a number of times to get a decent sample to produce an estimate with.</p>\n\n<p>So the main idea is that, given a small enough chunk of work, workers should only be scheduled to run at the same time if there are enough cores to support that behavior. It's obviously just an estimate, but so far it's been reasonably accurate for a few machines I've tested -- which is good enough for my use case. The number of samples can be increased to get a more accurate approximation; I just use 10 because it's quick and I don't want to waste time estimating versus just getting the work done.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yes, <a href=\"http://wiki.whatwg.org/wiki/Navigator_HW_Concurrency\">navigator.hardwareConcurrency</a>. Supported natively in Chrome 37, Opera 24, and (soon) Webkit; supported in all browsers with the polyfill.</p>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>Is there a way to determine the number of available CPU cores in JavaScript, so that you could adjust the number of web workers depending on that?</p>\n",
            "last_activity_date": 1403646593,
            "question_id": 3289465,
            "score": 27,
            "tags": [
                "javascript",
                "web-worker",
                "cpu-cores"
            ],
            "title": "Get number of CPU cores in JavaScript?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You can set default browser size by running:</p>\n\n<pre><code>var width = 800;\nvar height = 600;\nbrowser.driver.manage().window().setSize(width, height);\n</code></pre>\n\n<p>To maximize the browser window run:</p>\n\n<pre><code>browser.driver.manage().window().maximize();\n</code></pre>\n\n<p>To set position run:</p>\n\n<pre><code>var x = 150;\nvar y = 100;\nbrowser.driver.manage().window().setPosition(x, y);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 46
                }
            ],
            "body": "<p>For some reason when I run my tests at work the browser is maximized, but when I run them at home it only opens a browser window of about 50% width. This causes some discrepancies with scrolling down, etc, so I'd ideally like to have it open a browser window of the same size on every machine the tests are run on. What's the best way to do this? (I've found some answers for other languages but haven't been able to adapt them to javascript)</p>\n\n<p>Adding</p>\n\n<pre><code>browser.executeScript('window.moveTo(0,0);'+\n    'window.resizeTo(screen.width, screen.height);');\n</code></pre>\n\n<p>does nothing, (apparently <code>window.moveTo</code> and <code>window.resizeTo</code> are not supported by chrome).</p>\n",
            "last_activity_date": 1406761040,
            "question_id": 20023567,
            "score": 18,
            "tags": [
                "javascript",
                "angularjs",
                "selenium-webdriver",
                "webdriver",
                "protractor"
            ],
            "title": "How to set default browser window size in Protractor/WebdriverJS"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Here is a working example. It's probably something minor your missing.\n<a href=\"http://jsfiddle.net/chapmanc/Vza6F/1/\" rel=\"nofollow\">http://jsfiddle.net/chapmanc/Vza6F/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I was having the same issue but with bootstrap v2.0.3 (which has transition bundled in), ended up adding the slide class to the carousel div</p>\n\n<pre><code>&lt;div id=\"myCarousel\" class=\"carousel slide\"&gt;\n</code></pre>\n\n<p>then you just call:</p>\n\n<pre><code>$('#myCarousel').carousel();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>You also have to add <code>bootstrap-transition</code> for the sliding to work, like so:</p>\n\n<pre><code>&lt;script src=\"twitter-bootstrap-v2/docs/assets/js/bootstrap-transition.js\"&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>Do you just put that JavaScript in a <code>&lt;script&gt;</code> tag?</p>\n\n<pre><code>&lt;script&gt;\n    $('.carousel').carousel({\n        interval: 1000\n    })\u200b;\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think you need </p>\n\n<pre><code>$('#myCarousel').carousel('cycle');\n</code></pre>\n\n<p>Pls also see:\n<a href=\"http://stackoverflow.com/questions/9750816/how-can-i-make-the-boostrap-js-carousel-automatically-cycle-as-soon-as-the-page\">How can I make the boostrap js carousel automatically cycle as soon as the page loads?</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>check the css files that you have included. Try and add the bootstrap.css file as well in addition to bootstrap.min.css. It worked for me .</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I ran into an interesting issue. I'm pretty sure that the answer is very simple, but I just couldn't figure it out so I thought I look for some help.</p>\n\n<p>Basically, my carousel doesn't slide. It just switches image. I even tried copying the exact HTML from the bootstrap site into my own page and it still doesn't slide. In application.js, the initialization is also has no argument.</p>\n\n<pre><code>// carousel demo\n$('#myCarousel').carousel()\n</code></pre>\n\n<p>I notice that next and prev classes are added to each item when clicking pref/next button, but it doesn't seem to do the same thing on mine. I didn't see anything wrong when I debugged either.</p>\n\n<p>What am I missing? I tested this in both latest Chrome and Safari.</p>\n",
            "last_activity_date": 1424116471,
            "question_id": 10660718,
            "score": 18,
            "tags": [
                "javascript",
                "image",
                "twitter-bootstrap",
                "slideshow",
                "carousel"
            ],
            "title": "Twitter Bootstrap Carousel Not Sliding"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can use jQuery to search for the CSS height value and compare that?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>&lt;div id=\"div1\" style=\"height: 20px\"&gt;hello&lt;/div&gt;\n&lt;div id=\"div2\"&gt;hello&lt;/div&gt;\n</code></pre>\n\n<p>The below JavaScript-code checks if the elements has any inline CSS height-properties applied to them</p>\n\n<pre><code>$('#div1').prop('style').height !== ''; // true\n$('#div2').prop('style').height !== ''; // false\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I found a way to achieve it :)</p>\n\n<pre><code>function getRealHeight(element){\n    var height=0;\n    if (element.children().length&gt;0){\n        var temp = $('&lt;div&gt;&lt;/div&gt;');\n        temp.append(element.children());\n        height = element.height();\n        element.append(temp.children());\n    } else {\n        var html=element.html();\n        element.html('');\n        height = element.height();\n        element.html(html);\n    }\n    return height;\n}\n</code></pre>\n\n<p>\u200b</p>\n\n<p>\u200b<a href=\"http://jsfiddle.net/ayUsw/10/\">DEMO</a></p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>Use this function:</p>\n\n<pre><code>function emptyHeight ( elem ) {\n    var $temp = $( '&lt;div /&gt;' );\n    var $elem = $( elem );\n    var height;\n\n    $temp.append( $elem.contents() );\n    height = $elem.height();\n    $elem.append( $temp.contents() );\n\n    return height;   \n}\n</code></pre>\n\n<p>The idea is to temporarily detach all child nodes from the element. An element with no children has a height of <code>0</code>, <em>unless</em> its height is set via CSS.</p>\n\n<p>Pass your DIV element into that function. If it returns <code>0</code>, that means that the DIV does <em>not</em> have its height set via CSS.</p>\n\n<pre><code>if ( emptyHeight( yourDiv ) === 0 ) {\n    // the DIV does not have any height value set via CSS\n} else {\n    // the DIV has a CSS height set\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have 2 divs:<br></p>\n\n<pre><code>&lt;div id=\"div1\"&gt;&lt;/div&gt;\n&lt;div id=\"div2\"&gt;div2&lt;/div&gt;\u200b\n</code></pre>\n\n<p>in my css:</p>\n\n<pre><code>#div1{ height:20px}\u200b\n</code></pre>\n\n<p>Both divs have 20px height, check <a href=\"http://jsfiddle.net/ayUsw/1/\">demo</a><br>\nHow can I find out if the div have it's height due to content or have been set in css or inline style?<br>\nThis helps me find out the dimensions have been set by the <strong>developer</strong> or just calculated by the browser.</p>\n",
            "last_activity_date": 1336749636,
            "question_id": 10552382,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "jquery-ui"
            ],
            "title": "Find out if HTML height is set by style or by content"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>To set a global variable, use <code>global</code> instead of <code>window</code>.</p>\n\n<pre><code>global[\"myvar\"] = value\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 31
                }
            ],
            "body": "<p>What is the node.js equivalent of <code>window[\"myvar\"] = value</code>?</p>\n",
            "last_activity_date": 1339435084,
            "question_id": 10984629,
            "score": 17,
            "tags": [
                "javascript",
                "node.js"
            ],
            "title": "What is the node.js equivalent of window[&quot;myvar&quot;] = value?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Check out the jQuery function .param(), that should do the trick.</p>\n\n<p><a href=\"http://api.jquery.com/jQuery.param/\">http://api.jquery.com/jQuery.param/</a></p>\n\n<p>You can then just create a function which appends the string generated by .param() to a url.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>You don't need jQuery, use a function like this:</p>\n\n<pre><code>var buildUrl = function(base, key, value) {\n    var sep = (base.indexOf('?') &gt; -1) ? '&amp;' : '?';\n    return base + sep + key + '=' + value;\n}\n</code></pre>\n\n<p>You would use it like this:</p>\n\n<pre><code>buildUrl('http://www.example.com/foo', 'test', '123');\nbuildUrl('http://www.example.com/foo?bar=baz', 'test', '123');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can try this.</p>\n\n<pre><code>myUrl += ((myUrl.indexOf('?') == -1) ? '?' : '&amp;');\nmyUrl += \"column=9\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>if (myUrl.indexOf(\"?\") != -1){\n    // contains query string\n}\nelse\n{\n    // doesn't\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Keep everything in an object until you actually need a string.</p>\n\n<p>First populate the object from some initial values:</p>\n\n<pre><code>var $_GET = location.search.substr(1).split(\"&amp;\").reduce( function( obj, val ){\n    if( !val ) return obj;\n    var pair = val.split(\"=\");\n    obj[pair[0]] = pair[1];\n    return obj;\n}, {} );\n</code></pre>\n\n<p>Considering initial url of: <code>\"http://mydomain.com/something?row=1&amp;column=9\"</code></p>\n\n<pre><code>$_GET['column'] = 5;\n\n$.param( $_GET ); //\"row=1&amp;column=5\"\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/Reduce\" rel=\"nofollow\">Array#reduce</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>var myUrl = \"http://mydomain.com/something\";\n\nfunction addQSParm(name, value) {\n    var re = new RegExp(\"([?&amp;]\" + name + \"=)[^&amp;]+\", \"\");\n\n    function add(sep) {\n        myUrl += sep + name + \"=\" + encodeURIComponent(value);\n    }\n\n    function change() {\n        myUrl = myUrl.replace(re, \"$1\" + encodeURIComponent(value));\n    }\n    if (myUrl.indexOf(\"?\") === -1) {\n        add(\"?\");\n    } else {\n        if (re.test(myUrl)) {\n            change();\n        } else {\n            add(\"&amp;\");\n        }\n    }\n}\n\nconsole.log(myUrl);\n\naddQSParm(\"foo\", \"asdf\");\nconsole.log(myUrl);\n\naddQSParm(\"bar\", \"qwerty\");\nconsole.log(myUrl);\n\naddQSParm(\"foo\", \"123\");\nconsole.log(myUrl);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/bYMVw/\" rel=\"nofollow\">jsFiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have for example the following URL stored in a global variable:</p>\n\n<pre><code>var myUrl = \"http://mydomain.com/something?row=1\";\n</code></pre>\n\n<p>Then a function has to add let's say another parameter called \"<em>column</em>\". How would that function add parameters to a pre-existing URL string using jQuery?</p>\n\n<p>Example of the expected generated string:</p>\n\n<pre><code>\"http://mydomain.com/something?row=1&amp;column=9\"\n</code></pre>\n\n<p>The problem is that <code>myUrl</code> could also be just:</p>\n\n<pre><code>var myUrl = \"http://mydomain.com/something\";\n</code></pre>\n\n<p>(Notice that there are not pre-existing parameters)</p>\n",
            "last_activity_date": 1326839113,
            "question_id": 8902390,
            "score": 17,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Constructing a URL with parameters using jQuery"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>There are also CSS widows and orphans properties: see the <a href=\"http://webdesign.about.com/od/styleproperties/p/blsporphans.htm\" rel=\"nofollow\">about.com article</a>. </p>\n\n<p>Not sure about browser support...</p>\n\n<p>EDIT: more information about WebKit implementation here: <a href=\"https://bugs.webkit.org/buglist.cgi?quicksearch=orphans\" rel=\"nofollow\">https://bugs.webkit.org/buglist.cgi?quicksearch=orphans</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I made a little <a href=\"http://jsfiddle.net/Qz4qc/\" rel=\"nofollow\">script here</a>, with the help of <a href=\"http://stackoverflow.com/questions/4392868/javascript-find-divs-line-height-not-css-property-but-actual-line-height/4515470#4515470\">this function</a> to find line height.</p>\n\n<p>It's just an approach, it may or may not work, didn't have time to test throughly.</p>\n\n<p>As of now, <code>text_element</code> must be a jQuery object.</p>\n\n<pre><code>function avoidBastardWord( text_element )\n{\n    var string = text_element.text();\n    var parent = text_element.parent();\n    var parent_width =  parent.width();\n    var parent_height = parent.height();\n\n    // determine how many lines the text is split into\n    var lines = parent_height / getLineHeight(text_element.parent()[0]);\n\n    // if the text element width is less than the parent width,\n    // there may be a widow\n    if ( text_element.width() &lt; parent_width )\n    {\n        // find the last word of the entire text\n        var last_word =  text_element.text().split(' ').pop();\n\n        // remove it from our text, creating a temporary string\n        var temp_string = string.substring( 0, string.length - last_word.length - 1);\n\n        // set the new one-word-less text string into our element\n        text_element.text( temp_string );\n\n        // check lines again with this new text with one word less\n        var new_lines = parent.height() / getLineHeight(text_element.parent()[0]); \n\n        // if now there are less lines, it means that word was a widow\n        if ( new_lines != lines )\n        {\n            // separate each word\n            temp_string = string.split(' ');\n\n            // put a space before the second word from the last\n            // (the one before the widow word)\n            temp_string[ temp_string.length - 2 ] = '&lt;br&gt;' + temp_string[ temp_string.length - 2 ] ;\n\n            // recreate the string again\n            temp_string = temp_string.join(' ');\n\n            // our element html becomes the string\n            text_element.html( temp_string );\n        }\n        else\n        {\n            // put back the original text into the element\n            text_element.text( string );\n        }\n\n    }\n\n}\n</code></pre>\n\n<p>Different browsers have different font settings. Try to play a little to see the differences. I tested it on IE8 and Opera, modifying the string every time and it seemed to work ok.</p>\n\n<p>I would like to hear some feedback and improve because I think it may come in handy anyway.</p>\n\n<p>Just play with it! :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Manually, you could replace the space in between with <code>&amp;nbsp;</code></p>\n\n<p>I've been looking for ways to dynamically add it in. I found a few, but haven't been able to make it work myself. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A simple jQuery / regrex solution could look like the following, if you add the class \"noWidows\" to the tag of any element that contains text you are worried about.</p>\n\n<p>Such as: </p>\n\n<pre><code>&lt;p class=\"noWidows\"&gt;This is a very important body of text.&lt;/p&gt;\n</code></pre>\n\n<p>And then use this script:</p>\n\n<pre><code>$('.noWidows').each(function(i,d){\n   $(d).html( $(d).text().replace(/\\s(?=[^\\s]*$)/g, \"&amp;nbsp;\") )\n});\n</code></pre>\n\n<p>This uses regex to find and replace the last space in the string with a non-breaking character. Which means the last two words will be forced onto the same line. It's a good solution if you have space around the end of the line because this could cause the text to run outside of an element with a fixed width, or if not fixed, cause the element to become larger.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Just wanted to add to this page as it helped me a lot.</p>\n\n<p>If you have (widows) actually should be orphans as widows are single words that land on the next page and not single words on a new line.</p>\n\n<p>Working with postcodes like \"N12 5GG\" will result in the full postcode being on a new line together but still classed as an orphan so a work around is this. (changed the class to \"noWidow2\" so you can use both versions.</p>\n\n<p>123 Some_road, Some_town, N12 5GG</p>\n\n<pre><code>$('.noWidows2').each(function(i,d){ \n    var value=\"&amp;nbsp;\"\n    $(d).html($(d).text().replace(/\\s(?=[^\\s]*$)/g, value).replace(/\\s(?=[^\\s]*$)/g, value)); \n}); \n</code></pre>\n\n<p>This will result is the last 3 white spaces being on a new line together making the postcode issue work.</p>\n\n<p>End Result</p>\n\n<pre><code>123 Some_road,\nSome_town, N12 5GG\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>$('span').each(function() {\r\n  var w = this.textContent.split(\" \");\r\n  if (w.length &gt; 1) {\r\n    w[w.length - 2] += \"&amp;nbsp;\" + w[w.length - 1];\r\n    w.pop();\r\n    this.innerHTML = (w.join(\" \"));\r\n  }\r\n});</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>#foo {\r\n  width: 124px;\r\n  border: 1px solid #ccc;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;div id=\"foo\"&gt;\r\n  &lt;span class=\"orphan\"&gt;hello there I am a string really really long, I wonder how many lines I have&lt;/span&gt; \r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>A common problem when working with typography in HTML/CSS is something we call \"horunge\" in Swedish (\"<a href=\"http://en.wikipedia.org/wiki/Widows_and_orphans\" rel=\"nofollow\">widow</a>\" in english).</p>\n\n<p><strong>What it is:</strong></p>\n\n<p>Let's say you have a box with a width of 200px and with the text \"I love typograpy very much\". Now the text breaks and becomes:</p>\n\n<blockquote>\n  <p>I love typography very<br>\n  much</p>\n</blockquote>\n\n<p>As a designer I don't want a word bastard (single word / row). If this was a document/PDF etc. I would break the word before very and look like this:</p>\n\n<blockquote>\n  <p>I love typography<br>\n  very much</p>\n</blockquote>\n\n<p>which looks much better.</p>\n\n<p>Can I solve this with a CSS rule or with a javascript? The rule should be to never let a word stand empty on a row.</p>\n\n<p>I know it can be solved by adding a <code>&lt;br /&gt;</code> but that's not a solution that works with dynamic widths, feed content, different translations, browser font rendering issues etc.</p>\n\n<p><strong>Update (solution)</strong>\nI solved my problem with this jquery plugin: <a href=\"http://matthewlein.com/widowfix/\" rel=\"nofollow\">http://matthewlein.com/widowfix/</a></p>\n",
            "last_activity_date": 1423435440,
            "question_id": 7444656,
            "score": 17,
            "tags": [
                "javascript",
                "css",
                "typography"
            ],
            "title": "JavaScript to avoid widows"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>From the <a href=\"https://github.com/mbostock/d3/wiki/Selections#wiki-attr\">API documentation for <code>attr</code></a></p>\n\n<blockquote>\n  <p>A null value will remove the specified attribute</p>\n</blockquote>\n\n<p>So it looks like you want <code>.attr('disabled', null)</code>.</p>\n",
                    "is_accepted": true,
                    "score": 30
                }
            ],
            "body": "<p>Can I in D3.JS remove an attribute? I've added it using <code>.attr(\"disabled\", \"disabled\")</code> and now I am looking for something similar to jQuery's <code>.removeAttr(\"disabled\", \"disabled\");</code> to remove it again. Useful for <code>&lt;button&gt;</code> and <code>&lt;option&gt;</code>. I've tried using the <code>.remove()</code> but that removes the entire object not the attribute.</p>\n",
            "last_activity_date": 1362921325,
            "question_id": 15322556,
            "score": 16,
            "tags": [
                "javascript",
                "dom",
                "attributes",
                "d3.js"
            ],
            "title": "How to remove an attribute in D3.js?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Try the below code:</p>\n\n<pre><code>var foo = \"foofaafoofaafoofaafoofaafoofaa\";\nconsole.log(foo.match(/.{1,3}/g));\n</code></pre>\n\n<p>For nth postion:</p>\n\n<pre><code>foo.match(new RegExp('.{1,'+n+'}', 'g'));\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>As I was writing this, @xdazz came up with the wonderfully simple regex solution.</p>\n\n<p>As you have asked (om the comments to that answer) for a non-regex solution, I will submit this anyway...</p>\n\n<pre><code>function splitNChars(txt, num) {\n  var result = [];\n  for (var i = 0; i &lt; txt.length; i += num) {\n    result.push(txt.substr(i, num));\n  }\n  return result;\n}\n\nsplitNChars(\"foofaafoofaafoofaafoofaafoofaa\",3);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/9ZMAj/2/\" rel=\"nofollow\">JSFiddle Demo</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>var s = \"foofaafoofaafoofaafoofaafoofaa\";\nvar a = new Array();\nvar i = 3;\n\ndo {\n    a.push(s.substring(0, i));\n} while((s = s.substring(i, s.length)) != \"\");\n\nalert(a);\n</code></pre>\n\n<p>Prints:</p>\n\n<pre><code>foo,faa,foo,faa,foo,faa,foo,faa,foo,faa\n</code></pre>\n\n<p>Working demo: <a href=\"http://jsfiddle.net/9RXTW/\" rel=\"nofollow\">http://jsfiddle.net/9RXTW/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can do like this:</p>\n\n<pre><code>var input = \"foofaafoofaafoofaafoofaafoofaa\";\n\nvar result = [];\nwhile (input.length) {\n    result.push(input.substr(0, 3));\n    input = input.substr(3);\n}\n</code></pre>\n\n<p>Demo: <a href=\"http://jsfiddle.net/Guffa/yAZJ2/\" rel=\"nofollow\">http://jsfiddle.net/Guffa/yAZJ2/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As Mark Walter has pointed out, this solution from <a href=\"http://stackoverflow.com/questions/4017671/how-do-you-split-a-string-at-certain-character-numbers-in-javascript\">another Stack Overflow question</a> works perfectly:</p>\n\n<pre><code>function splitStringAtInterval (string, interval) {\n  var result = [];\n  for (var i=0; i&lt;string.length; i+=interval)\n    result.push(string.substring (i, i+interval));\n  return result;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The function followed by an example using it. The example test outputs: <code>[\"abc\",\"def\",\"ghi\",\"j\"]</code> </p>\n\n<pre><code>function splitEvery(str, n)\n{\n    var arr = new Array;\n    for (var i = 0; i &lt; str.length; i += n)\n    {\n        arr.push(str.substr(i, n));\n    }\n    return arr;\n}\n\nvar result = splitEvery('abcdefghij', 3);\ndocument.write(JSON.stringify(result));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Like, so I can make this string:</p>\n\n<pre><code>foofaafoofaafoofaafoofaafoofaa\n</code></pre>\n\n<p>An array with 10 rows (if I split by every 3rd character, that is), which looks something like this, if I were to instantiate it:</p>\n\n<pre><code>var fooarray = new Array ('foo', 'faa', 'foo', 'faa', 'foo', 'faa', 'foo', 'faa', 'foo', 'faa');\n</code></pre>\n\n<p>So I want a function, either built-in or custom-made, which can help me split up a string by every nth character.</p>\n\n<p>This is just a follow-up from my last question, <a href=\"http://stackoverflow.com/questions/12686561/split-a-string-at-every-nth-position-with-php\">Split a string, at every nth position, with PHP?</a> As I need this functionality client-side too.</p>\n",
            "last_activity_date": 1349166849,
            "question_id": 12686746,
            "score": 16,
            "tags": [
                "javascript",
                "string"
            ],
            "title": "Split a string, at every nth position, with JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It tells compression tools such as the <a href=\"http://yui.github.io/yuicompressor/\">YUICompressor</a> and <a href=\"https://github.com/mishoo/UglifyJS/\">Uglify</a>, which minify the code, to leave the commented section in place as they usually remove all comments from the code.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>I believe one purpose of the exclamation point is to tell javascript minifiers to leave these particular comments in, when condensing the files.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Some software like <a href=\"http://panic.com/coda/\" rel=\"nofollow\">Coda</a> also support the \"bookmark syntax\" shown below, so that one can navigate to different parts of code through the app's code navigator.</p>\n\n<pre><code>// !bookmark\n/* !bookmark */\n&lt;!-- !bookmark --&gt;\n</code></pre>\n\n<p>Note that in the examples above there's a space between the comment syntax the exclamation mark.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I've noticed that initial comment in javascript or css files is sometimes started with /*!\nWhat is the purpose of the explanation mark?</p>\n\n<p>For example, jquery.js:</p>\n\n<pre><code>/*! jQuery v1.7.1 jquery.com | jquery.org/license */\n</code></pre>\n\n<p>bootstrap.css:</p>\n\n<pre><code>/*!\n * Bootstrap v2.0.1\n *\n * Copyright 2012 Twitter, Inc\n</code></pre>\n",
            "last_activity_date": 1379664934,
            "question_id": 11248363,
            "score": 16,
            "tags": [
                "javascript",
                "css"
            ],
            "title": "The purpose of starting an initial comment with /*! in javascript and css files"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Onload can only be used for <code>&lt;body&gt;</code>, <code>&lt;img&gt;</code>, <code>&lt;script&gt;</code>, <code>&lt;iframe&gt;</code> tags, because it tells you when an external resource (image, script, frame) or the whole page (body) has been loaded</p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>\"onLoad\" may be used on body- and frameset-tags.\nTo see some action you may use:</p>\n\n<pre><code>&lt;body onload=\"function(){alert('This is an action!')}\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As the other guys already stated the onLoad event will not fire on a table. What you can do ist attaching the onLoad-handler to the body element (which will then fire, when the page is loaded) and manipulate the table by for example assigning an id to the table.</p>\n\n<pre><code>&lt;body onload=\"function() { var table = document.getElementById(\"table-id\"); ... }\"&gt;\n    &lt;table id=\"table-id\"&gt;&lt;/table&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>Are you using some javascript framework?</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Why not just include it via a <code>&lt;script tag&gt;</code>?</p>\n\n<p><strong>Inside your .jsp file</strong></p>\n\n<pre><code>&lt;script&gt;\n    window.onload = function() {\n        alert(\"Hello!\");\n    }\n    // or to execute some function\n    window.onload = myFunction; //notice no parenthesis\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<p>I want to ask a question about the Javascript\u2019s <code>onload</code>. </p>\n\n<p>I\u2019m writing a JSP page with the code <code>&lt;%@ include file =\"body.jsp\"</code>. The included <code>body.jsp</code> contains: </p>\n\n<pre><code>&lt;table onload=\"function()\"&gt;\n</code></pre>\n\n<p>This <strong>should</strong> load the javascript function, but it doesn't appear to have any effect on the page. Is <code>onload</code> only usable on the <code>body</code> tag? </p>\n",
            "last_activity_date": 1371315467,
            "question_id": 3870185,
            "score": 16,
            "tags": [
                "javascript",
                "html",
                "jsp"
            ],
            "title": "Javascript onload in HTML"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Answer is that the first parameter of the autocomplete should be an object containing the \"source\" property. This works</p>\n\n<pre><code>var fakedata = ['test1','test2','test3','test4','ietsanders'];\n$(\"#omschrijving\").autocomplete({source:fakedata});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<p>If you were trying to use autocomplete from <a href=\"http://www.devbridge.com/projects/autocomplete/jquery/#demo\">http://www.devbridge.com/projects/autocomplete/jquery/#demo</a>, it now collides with the autocomplete method in jQuery UI. I had the same problem and later noticed that I could just use the jQuery UI implementation.</p>\n\n<p>(NOTE: It appears that this page's documentation is wrong: <a href=\"http://docs.jquery.com/Plugins/Autocomplete#Setup\">http://docs.jquery.com/Plugins/Autocomplete#Setup</a>)</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>As Shelton stated, the version from devbridge.com (1.1.3) collides with jQuery UI (1.8.4).  Got it working by making sure the devbridge version loads after jQuery UI's version.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Had similar problem for tagedit/autocomplete. It seems you also want to disable the autocomplete. Setting the source to false avoids these errors. </p>\n\n<p>Solution: </p>\n\n<pre><code>options.autocompleteOptions.source = false;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've implemented autocomplete on an input field, but the box does not show up and firebug returns \"this.source is not a function\". I've used autocomplete on other fields of the same page without any problems. (two textarea's).</p>\n\n<p>I'm using the following code to debug, same effect if I run from script file or Firebug command line.</p>\n\n<pre><code>var fakedata = ['test1','test2','test3','test4','ietsanders'];\n$(\"#omschrijving\").autocomplete(fakedata);\n</code></pre>\n\n<p>running jquery 1.4.2 and jquery ui 1.8.2, both minified versions.</p>\n\n<p>Does anyone have an idea how autocomplete works fine on the textareas but causes this malfunctioning on inputs?</p>\n\n<p>Error &amp; Stack trace:</p>\n\n<pre><code>this.source is not a function\nhttp://facturatie.autodealers.nl/dev/resources/js/jquery-ui-1.8.2.custom.min.js\nLine 570\nclose(Object { name=\"a\"})jquery....min.js (regel 570)\nclose(Object { name=\"a\"}, Object { name=\"c\"})jquery....min.js (regel 570)\nresponse()\n</code></pre>\n",
            "last_activity_date": 1369370518,
            "question_id": 3308935,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui"
            ],
            "title": "jquery autocomplete this.source is not a function error"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I don't think there's a way to do this, unless you're writing a browser extension. You could try using <code>window.open</code> and hoping that the user has their browser set to open new windows in new tabs.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<pre><code>window.open(\n       'https://support.wwf.org.uk/earth_hour/index.php?type=individual', '_blank' // &lt;- This is what makes it open in a new window.);\n</code></pre>\n\n<p>Don't forget to read <a href=\"http://www.useit.com/alertbox/990530.html\">Jakob Nielsen's informative article</a> :)</p>\n",
                    "is_accepted": false,
                    "score": 45
                }
            ],
            "body": "<p>I am diverting user to some url through <code>window.location</code> but this url opens in the same tab in browser. I want it to be open in new tab. Can I do so with window.location? Is there another way to do this action?</p>\n",
            "last_activity_date": 1392797121,
            "question_id": 7554108,
            "score": 15,
            "tags": [
                "javascript",
                "html",
                "redirect"
            ],
            "title": "javascript window.location in new tab"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Take a look at <a href=\"http://phpjs.org/functions/nl2br:480\">nl2br on php.js</a> which seems exactly what you're looking for. Basically, it's:</p>\n\n<pre><code>function nl2br (str, is_xhtml) {\n    var breakTag = (is_xhtml || typeof is_xhtml === 'undefined') ? '&lt;br /&gt;' : '&lt;br&gt;';\n    return (str + '').replace(/([^&gt;\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g, '$1' + breakTag + '$2');\n}\n</code></pre>\n\n<p><strong>EDIT:</strong><br>\nyour example using <code>nl2br()</code> may be changed like this:</p>\n\n<pre><code>$('#TextArea').keypress(function(evt){\n        $('#TextArea1').html(nl2br($('#TextArea').val()));\n    });\n</code></pre>\n\n<p>(note that this updates <code>#TextArea1</code> on every keypress and doesn't change the value of <code>#TextArea</code> wich is what I think you're looking for, but I might be misunderstanding)</p>\n\n<p><strong>EDIT2:</strong><br>\nIf you want to get the behaviour of your old function (with inserting <code>&lt;br/&gt;</code>s to <code>#TextArea</code>) do this:</p>\n\n<pre><code>$('#TextArea').keypress(function(evt){\n        $('#TextArea').html(nl2br($('#TextArea').val())); // replace linebreaks first\n        $('#TextArea1').html($('#TextArea').val()); // copy to #TextArea1\n    });\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>Here is a function <a href=\"http://phpjs.org/functions/nl2br:480\" rel=\"nofollow\">nl2br</a> in php.js.</p>\n\n<pre><code>function nl2br (str, is_xhtml) {\n  // http://kevin.vanzonneveld.net\n  // +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +   improved by: Philip Peterson\n  // +   improved by: Onno Marsman\n  // +   improved by: Atli \u00de\u00f3r\n  // +   bugfixed by: Onno Marsman\n  // +      input by: Brett Zamir (http://brett-zamir.me)\n  // +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +   improved by: Brett Zamir (http://brett-zamir.me)\n  // +   improved by: Maximusya\n  // *     example 1: nl2br('Kevin\\nvan\\nZonneveld');\n  // *     returns 1: 'Kevin&lt;br /&gt;\\nvan&lt;br /&gt;\\nZonneveld'\n  // *     example 2: nl2br(\"\\nOne\\nTwo\\n\\nThree\\n\", false);\n  // *     returns 2: '&lt;br&gt;\\nOne&lt;br&gt;\\nTwo&lt;br&gt;\\n&lt;br&gt;\\nThree&lt;br&gt;\\n'\n  // *     example 3: nl2br(\"\\nOne\\nTwo\\n\\nThree\\n\", true);\n  // *     returns 3: '&lt;br /&gt;\\nOne&lt;br /&gt;\\nTwo&lt;br /&gt;\\n&lt;br /&gt;\\nThree&lt;br /&gt;\\n'\n  var breakTag = (is_xhtml || typeof is_xhtml === 'undefined') ? '&lt;br ' + '/&gt;' : '&lt;br&gt;'; // Adjust comment to avoid issue on phpjs.org display\n\n  return (str + '').replace(/([^&gt;\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g, '$1' + breakTag + '$2');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/2919337/jquery-convert-line-breaks-to-br-nl2br-equivalent\">jQuery convert line breaks to br (nl2br equivalent)</a>  </p>\n</blockquote>\n\n\n\n<p>Currently I add <code>&lt;BR&gt;</code> for each <code>evt.which == 13</code>. Is there a <code>nl2br()</code> for JavaScript, so I can do away with this <code>evt.which == 13</code>?</p>\n\n<p><strong>How different is this from php.js</strong></p>\n\n<pre><code>$('#TextArea').keypress(function(evt) {\n\n    if (evt.which == 13) {\n\n        var range           = $('#TextArea').getSelection();\n        var image_selection = range.text;\n\n        $('#TextArea').replaceSelection('&lt;BR&gt;');\n        $('#TextArea1').html($('#TextArea').val());\n    }\n});\n</code></pre>\n",
            "last_activity_date": 1404488935,
            "question_id": 7467840,
            "score": 15,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "phpjs"
            ],
            "title": "nl2br() equivalent in javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Before chrome came along, all tabs of any browser shared the same single thread of JavaScript. Chrome upped the game here, and some others have since followed suit.</p>\n\n<p>This is a browser implementation detail, so there is no solid answer. Older browsers definitely don't. I don't know of any browser that definitely uses another thread for iframes, but to be honest I've never really looked into it.</p>\n\n<p>It isn't a security risk, as no objects are brought along with the thread execution.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Late on this but... good point, cause iframe js seems to be concurrent in Firefox 16.<br>\nTry with alert function (blocking), you'll see dialogs opening together.<br>\nYou won't see that in Chrome or IE.<br>\niframe js may access the parent window in Firefox 16 as usual, so I can think of possible race conditions arising.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>For iFrames, no. However if you want to use threads in JavaScript you can use Web Workers, a working html5 draft supported by the new browsers. <a href=\"http://www.w3.org/TR/2009/WD-workers-20091029/\" rel=\"nofollow\">http://www.w3.org/TR/2009/WD-workers-20091029/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Did some experimenting with this today in Chrome 28 in Ubuntu.  Used this command to see Chrome's threads and processes </p>\n\n<p><code>ps axo pid,nlwp,cmd | grep \"chrome\"</code></p>\n\n<p>It looks like Chrome does not spawn new threads or processes for iframes.  An interesting note is that it does spawn a new process for the dev tools pane.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>To sum up the other answers: No, <strong>iFrames usually run in the same thread/process as the main page</strong>.</p>\n\n<p>However, it appears the Chromium team are working on further isolation in this area:</p>\n\n<p><a href=\"https://code.google.com/p/chromium/issues/detail?id=99379\">Chromium Issue 99379: Out of process iframes</a></p>\n\n<p><a href=\"http://www.chromium.org/developers/design-documents/oop-iframes\">Design Plans for Out-of-Process iframes</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Do web browsers use separate executional threads for JavaScript in iframes?</p>\n\n<p>I believe Chrome uses separate threads for each tab, so I am guessing that JavaScript in an iframe would share the same thread as its parent window, however, that seems like a security risk too.</p>\n",
            "last_activity_date": 1394677119,
            "question_id": 11510483,
            "score": 14,
            "tags": [
                "javascript",
                "multithreading",
                "browser"
            ],
            "title": "Will a browser give an iframe a separate thread for JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Well, after an hour and a half of playing <a href=\"http://files.cryoffalcon.com/MyFootPrint/fullscreen.html\" rel=\"nofollow\">Bloons</a> on your link (my untouched work load can verify that), I feel it's safe to say that the full screen features work exactly as I'd expect them to. I'm using Chrome 18.0.x.</p>\n\n<p>My experience was: Click link, game loads. The loader took about 2 seconds longer to finish then it took for the \"Click Here to Show the Game\" button appeared. After, an ad appeared for 10seconds and then I clicked \"Play\" and it went right to the game. Full screen worked correctly to my knowledge, although when I left full screen the game didn't resize back down - the bottom section was cut off.</p>\n\n<p>I know that doesn't answer your question, but perhaps the issue is only in certain browsers?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>i found that in FF the problem seems to be the height and width of 100%. I changed the script slightly to:</p>\n\n<pre><code>$(game).css({\n\"width\": window.innerWidth,\n\"height\": window.innerHeight\n});\n</code></pre>\n\n<p>and now the game shows correctly in FF.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This seems to be just a pure css problem. You're trying to set the width to 100% while the parent of <code>div.gamewrapper</code> has no width or height. That's why the size is 0 and it will not show up.</p>\n\n<p>The trick you need to apply is add the following to your style:</p>\n\n<pre><code>html, body, .gamecontent {\n    height: 100%;\n    width: 100%;\n}\n</code></pre>\n\n<p><strong>Update:</strong>\nAlso, remove <code>float: left;</code> from <code>.gamecontent .game</code>, and add a width and height of 1px such that it becomes:</p>\n\n<pre><code>.gamecontent .game {\n    margin:0px auto 0px auto;\n    padding:0px;\n    overflow:hidden;\n    width : 1px;\n    height : 1px;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p>I looked around internet and was always looking like from previous 6 months for a script that could load flash content/game while showing an actual loading screen But I always received a few answers:</p>\n\n<ol>\n<li>It is not possible to show an actual loading with Javascript.</li>\n<li>You can do it only by adding action script to the flash file maybe they are talking about FLA</li>\n<li>Why Don't you show a fake loading screen that appears and show some\nseconds and then disappears (the most annoying this of such screen\nis that they first make user load 15 seconds then the flash starts\nloading, if it starts loading those 15 seconds still it is worth\nsomething it is good BUT making them wait double is really bad)</li>\n</ol>\n\n<p>But at last I found something that I was looking forever. A Jquery based script that shows actual loading (shows ad too) and uses swf Object to talk to flash content too. It is really awesome as it doesn't require you to do changes to the FLA, it is just pure outer environment dealing. So now the question arises what's the issue then. Well the issue is that this script was made for pixels, it works if you are using width and height for flash in pixels, while I can't use pixels as I am using %ages (this way user have ability to go full screen optionally by pressing f11).</p>\n\n<p>So as you can see I want that script to work with %ages that is my problem, but as I mentioned earlier I didn't came here right away I have been asking for help (Actually Begging) in over 14 forums from previous few months and of course some good people still exists some people helped me to reach a certain point (but it didn't solve the problem) So now I will provide some Markup:</p>\n\n<p>Here is link to the script that I am talking about <a href=\"http://www.balloontowerdefense.net/jquery-preloader/jquery-preloader.html\" rel=\"nofollow\">http://www.balloontowerdefense.net/jquery-preloader/jquery-preloader.html</a> (It is the link to the creator of this script)</p>\n\n<p>Here is a link to working example (flash based on Pixels)  <a href=\"http://www.balloontowerdefense.net/jquery-preloader/example.html\" rel=\"nofollow\">http://www.balloontowerdefense.net/jquery-preloader/example.html</a> </p>\n\n<p>Some one helped me here but it didn't work 1 month ago. The person told me that I should change the plugin Named as Preroll the changes preferred were these</p>\n\n<p>Modify the plugin to use user-supplied units instead of pixels. To do this, you will need to modify two functions in the plugin, applygameiframe and showgame.</p>\n\n<pre><code>applygameiframe should be changed to:\n\nvar applygameiframe = function() {\n  var gc = '#'+settings.gameframe;\n  var iframe = $('&lt;iframe /&gt;').attr({\n    \"id\": settings.gameid,\n    \"src\": settings.swf,\n    \"frameborder\": 0,\n    \"scrolling\": \"no\",\n    \"marginwidth\": 0,\n    \"marginheight\": 0\n  }).css({\n    \"height\":'settings.height\n    \"width\": settings.width\n  });\n  $(gc).append(iframe);\n  return true;\n};\n\nshowgame should be changed to:\n\nvar showgame = function() {\n    var ac   = '#' + settings.adframe;\n    var game = '#' + settings.gameframe;\n    $(ac).hide();\n    $(game).css({\n    \"width\": settings.width,\n    \"height\": settings.height\n    });\n};\n</code></pre>\n\n<p>Once those changes are made, the inline CSS should be set to whatever you supply as parameters (i.e., 100%, 50em, etc.).</p>\n\n<p>I did the changes told to be done as described above to the Preroll plugin and after that this is what I get <a href=\"http://files.cryoffalcon.com/MyFootPrint/fullscreen.html\" rel=\"nofollow\">http://files.cryoffalcon.com/MyFootPrint/fullscreen.html</a></p>\n\n<p>Now if you let the game load (as loading screen appears) all is well done except that in the end, the game doesn't appear, it loads but when it should skip and make the game appear at that time something goes wrong. (For reference you can see this link <a href=\"http://www.balloontowerdefense.net/jquery-preloader/example.html\" rel=\"nofollow\">http://www.balloontowerdefense.net/jquery-preloader/example.html</a> here when the loading finishes then game appears)</p>\n\n<p>Can Someone Fix this problem? </p>\n\n<p>Note: Sorry for not providing JsFiddle but as I live in Afghanistan with 5KBps speed it is not possible for me.</p>\n\n<p>I didn't provided the HTML, CSS and JS that makes up the whole demo page as I thought it will make the question very long but still if you think I should provide Please let me know in comments.</p>\n\n<p>I tried my best to make the question more relevant with Relevant Markups BUT still If I am missing something I would try my best by editing it and providing it you again.</p>\n\n<p><em>Being an accountant, I tried my best to use programmers terms, coding is my passion but I am still in learning stage of JS</em></p>\n\n<p>UPDATE: After solving the problem here you can see now everything is fine. <a href=\"http://files.cryoffalcon.com/MyFootPrint/newfullscreen.html\" rel=\"nofollow\">http://files.cryoffalcon.com/MyFootPrint/newfullscreen.html</a><br>\nCredit: Goes to the one who answered this question.</p>\n",
            "last_activity_date": 1335901002,
            "question_id": 10364122,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "css"
            ],
            "title": "Show advertisement while game loads"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Here's a function I wrote for another answer: <a href=\"http://stackoverflow.com/questions/9714525/javascript-image-url-verify/9714891#9714891\">Javascript Image Url Verify</a>.  I don't know if it's exactly what you need, but it uses the various techniques that you would use which include handlers for <code>onload</code>, <code>onerror</code>, <code>onabort</code> and a general timeout.</p>\n\n<p>Because image loading is asynchronous, you call this function with your image and then it calls your callback sometime later with the result.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could try the following code. I can't vouch for browser compatibility though, so you'll have to test that.</p>\n\n<pre><code>function testImage(URL) {\n    var tester=new Image();\n    tester.onload=imageFound;\n    tester.onerror=imageNotFound;\n    tester.src=URL;\n}\n\nfunction imageFound() {\n    alert('That image is found and loaded');\n}\n\nfunction imageNotFound() {\n    alert('That image was not found.');\n}\n\ntestImage(\"http://foo.com/bar.jpg\");\n</code></pre>\n\n<p>And my sympathies for the jQuery-resistant boss!</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>just like below:</p>\n\n<pre><code>var img = new Image(); \nimg.src = imgUrl; \n\nif (!img.complete) {\n\n//has picture\n}\nelse //not{ \n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -3
                }
            ],
            "body": "<p>Is there a way to determine if a image path leads to an actual image, Ie, detect when an image fails to load in Javascript.</p>\n\n<p>For a web app, I am parsing a xml file and dynamically creating HTML images from a list of image paths. Some image paths may no longer exist on the server so I want to fail gracefully by detecting which images fail to load and deleting that HTML img element.</p>\n\n<p>Note JQuery solutions wont be able to be used(the boss doesn't want to use JQuery, yes I know dont get me started). I know of a way in JQuery to detect when an image is loaded, but not whether it failed.</p>\n\n<p>My code to create img elements but how can I detect if the img path leads to a failed to load image?</p>\n\n<pre><code>var imgObj = new Image();  // document.createElement(\"img\");\nimgObj.src = src;\n</code></pre>\n",
            "last_activity_date": 1401806896,
            "question_id": 9815762,
            "score": 14,
            "tags": [
                "javascript"
            ],
            "title": "Detect when an image fails to load in Javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Short answer, no.</p>\n\n<p><a href=\"http://www.stevesouders.com/blog/2009/03/10/performance-impact-of-css-selectors/\">http://www.stevesouders.com/blog/2009/03/10/performance-impact-of-css-selectors/</a></p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Selecting an id is extremely as fast, as jQuery backs up to the native</p>\n\n<pre><code> document.getElementById\n</code></pre>\n\n<p>function.\nNevertheless, you can cache your selectors if you use them frequently (save them in a variable).</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>While the JavaScript performance will be unaffected, thousands of ids make your HTML bigger, increasing the load time and traffic cost. It's probably negligible (compressing images and other resources is far more important), but may be a route for optimization nevertheless.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Selecting elements by <em>id</em> in jQuery is one of the few selectors that will not receive a performance hit if there are many elements on the page.  </p>\n\n<p>If on the other hand, you were selecting elements based on class or attribute value, you would see a significant performance hit.  If you are worried about performance, also make sure to cache your jquery selectors by storing the selectors in variables for reuse.</p>\n\n<pre><code>var element = $(\"#specificElement\");\nconsole.log(element.val());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>If I have in the page unnecessary <code>id</code>s on elements, like the <code>HTML Helper</code> does in <code>ASP.Net-MVC</code>.<br>\nDoes it reduce the performace of my id selectors? (I have a page with enormous amout of elements)</p>\n\n<p><strong>Example:</strong></p>\n\n<pre><code>// First DOM   \n&lt;HTML&gt;\n...\n    &lt;input type=\"text\" value=\"first\" id=\"useless\" /&gt;\n    &lt;input type=\"text\" value=\"second\" id=\"useful\" /&gt;\n&lt;/HTML&gt;\n\n// Second  DOM  \n&lt;HTML&gt;\n...\n    &lt;input type=\"text\" value=\"first\"/&gt;\n    &lt;input type=\"text\" value=\"second\" id=\"useful\" /&gt;\n&lt;/HTML&gt;\n</code></pre>\n\n<p><strong>Script:</strong></p>\n\n<pre><code>&lt;script&gt;\n    alert($('#useful').val());\n    // never select the first element (with the useless id)\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1331571285,
            "question_id": 9193293,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "asp.net-mvc",
                "performance"
            ],
            "title": "Does Too many ids hurt performace"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Try giving your html element an id</p>\n\n<pre><code>&lt;html id=\"htmlTop\" xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n</code></pre>\n\n<p>and applying your viewModel to it</p>\n\n<pre><code>ko.applyBindings(viewModel, document.getElementById(\"htmlTop\"));\n</code></pre>\n\n<p><strong>EDIT</strong></p>\n\n<p>This works for me; I just ran this page and the title said \"Hello\".  Double check your code for typos.</p>\n\n<pre><code>&lt;html id=\"htmlTop\"&gt;\n\n    &lt;head&gt;\n      &lt;title data-bind=\"text: title\"&gt;&lt;/title&gt;\n\n      &lt;script type='text/javascript' src='jquery.min.js'&gt;&lt;/script&gt;\n      &lt;script type='text/javascript' src='knockout-1.2.1.js'&gt;&lt;/script&gt;\n\n      &lt;script type=\"text/javascript\"&gt;\n\n          $(function () {\n              var viewModel = { title: \"Hello\" };\n              ko.applyBindings(viewModel, document.getElementById(\"htmlTop\"));\n          });\n\n      &lt;/script&gt;\n\n    &lt;/head&gt;\n\n    &lt;body&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Screenshot:</p>\n\n<p><img src=\"http://i.stack.imgur.com/son19.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>You could create a <a href=\"http://knockoutjs.com/documentation/custom-bindings.html\" rel=\"nofollow\">custom binding handler</a> which sets <code>document.title</code> on update, then add the binding to the <code>body</code> element.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As per @Douglas's suggestion, my solution was to add a hidden <code>div</code> somewhere in the body bound to a computed value:</p>\n\n<pre><code>&lt;div data-bind=\"text: currentPageTitle()\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Then, in the value computation, I set the <code>document.title</code>:</p>\n\n<pre><code>self.currentPageTitle = ko.computed(function() {\n    document.title = self.Title();\n    return self.Title();\n}, this);\n</code></pre>\n\n<p>This works perfectly for me</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a viewModel with a <code>Title</code> property. I'd like to set the page title using that property. Here's what I tried already, which didn't work:</p>\n\n<pre><code>&lt;html&gt;\n   &lt;head&gt;\n   &lt;title data-bind=\"text: Title\"&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n   &lt;span data-bind=\"text: Title\"/&gt; &lt;!-- this displays the title properly --&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>The browser title is blank/default instead of the value of my <code>Title</code> property.</p>\n",
            "last_activity_date": 1402607238,
            "question_id": 8649690,
            "score": 14,
            "tags": [
                "javascript",
                "html",
                "knockout.js"
            ],
            "title": "Is there a way to set the page title by data-binding using Knockout.js?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Just use <code>indexer</code></p>\n\n<pre><code>var valueAtIndex1 = myValues[1];\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>Array indexes in JavaScript start at zero for the first item, so try this:</p>\n\n<pre><code>var firstArrayItem = myValues[0]\n</code></pre>\n\n<p>Of course, if you actually want the second item in the array at index 1, then it's <code>myValues[1]</code>.</p>\n\n<p>See <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array#Accessing_array_elements\">Accessing array elements</a> for more info.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You can just use <code>[]</code>:</p>\n\n<pre><code>var valueAtIndex1 = myValues[1];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have an array and simply wants to get the element / value at index 1 </p>\n\n<pre><code>var myValues = new Array();\nvar valueAtIndex1 = myValues.getValue(1); // (something like this)\n</code></pre>\n\n<p>How can I get the value at the 1st index of my array in JavaScript?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1393743802,
            "question_id": 8238456,
            "score": 14,
            "tags": [
                "javascript"
            ],
            "title": "How to get value at a specific index of array In JavaScript?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>There isn't a way to set this in Javascript - returning <code>undefined</code> for non-existent properties is a part of the core Javascript spec. See <a href=\"http://stackoverflow.com/questions/6511542/force-javascript-exception-error-when-reading-an-undefined-object-property\">the discussion for this similar question</a>. As I suggested there, one approach (though I can't really recommend it) would be to define a global <code>getProperty</code> function:</p>\n\n<pre><code>function getProperty(o, prop) {\n    if (o[prop] !== undefined) return o[prop];\n    else return \"my default\";\n}\n\nvar o = {\n    foo: 1\n};\n\ngetProperty(o, 'foo'); // 1\ngetProperty(o, 'bar'); // \"my default\"\n</code></pre>\n\n<p>But this would lead to a bunch of non-standard code that would be difficult for others to read, and it might have unintended consequences in areas where you'd expect or want an undefined value. Better to just check as you go: </p>\n\n<pre><code>var someVar = o.someVar || \"my default\";\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>I saw an article yesterday that mentions an <code>Object.__noSuchMethod__</code> property: <a href=\"http://code.google.com/p/jslibs/wiki/JavascriptTips#No_Such_Method_%28_noSuchMethod_%29\" rel=\"nofollow\">JavascriptTips</a> I've not had a chance to play around with it, so I don't know about browser support, but maybe you could use that in some way?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This sure sounds like the typical use of protoype-based objects:</p>\n\n<pre><code>// define a new type of object\nvar foo = function() {};  \n\n// define a default attribute and value that all objects of this type will have\nfoo.prototype.attribute1 = \"defaultValue1\";  \n\n// create a new object of my type\nvar emptyObj = new foo();\nconsole.log(emptyObj.attribute1);       // outputs defaultValue1\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Or you can try this</p>\n\n<pre><code>dict = {\n 'somekey': 'somevalue'\n};\n\nval = dict['anotherkey'] || 'anotherval';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>my code is:</p>\n\n<pre><code>function(s){\n    s = {\n        top: s.top || 100,    // default value or s.top\n        left: s.left || 300,  // default value or s.left\n    }\n    alert(s.top)\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is actually possible to do with <code>Object.create</code>. It will not work for \"non defined\" properties. But for the ones that has been given a default value.</p>\n\n<pre><code>var defaults = {\n    a: 'test1',\n    b: 'test2'\n};\n</code></pre>\n\n<p>Then when you create your properties object you do it with <code>Object.create</code></p>\n\n<pre><code>properties = Object.create(defaults);\n</code></pre>\n\n<p>Now you will have two object where the first object is empty, but the prototype points to the <code>defaults</code> object. To test:</p>\n\n<pre><code>console.log('Unchanged', properties);\nproperties.a = 'updated';\nconsole.log('Updated', properties);\nconsole.log('Defaults', Object.getPrototypeOf(properties));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm surprised nobody has mentioned ternary operator yet.</p>\n\n<pre><code>var emptyObj = {a:'123', b:'234', c:0};\nvar defaultValue = 'defaultValue';\nvar attr = 'someNonExistAttribute';\nemptyObj.hasOwnProperty(attr) ? emptyObj[attr] : defaultValue;//=&gt; 'defaultValue'\n\n\nattr = 'c'; // =&gt; 'c'\nemptyObj.hasOwnProperty(attr) ? emptyObj[attr] : defaultValue; // =&gt; 0\n</code></pre>\n\n<p>In this way, even if the value of 'c' is 0, it will still get the correct value.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way to set the default attribute of a javascript object such that:</p>\n\n<pre><code>emptyObj = {}\n// do some magic\nemptyObj.nonExistingAttribute // =&gt; defaultValue\n</code></pre>\n\n<p><em>IE can be disregarded, Chrome Frame has relieved me of that headache.</em></p>\n",
            "last_activity_date": 1425022505,
            "question_id": 6600868,
            "score": 14,
            "tags": [
                "javascript"
            ],
            "title": "Set default value of javascript object attributes"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>function test(string) {\n    return ! string.match(/abc|def/);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>if (!s.match(/abc|def/g)) {\n    alert(\"match\");\n}\nelse {\n    alert(\"no match\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>function doesNotContainAbcOrDef(x) {\n    return (x.match('abc') || x.match('def')) === null;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's a clean solution:</p>\n\n<pre><code>function test(str){\n    //Note: should be /(abc)|(def)/i if you want it case insensitive\n    var pattern = /(abc)|(def)/;\n    return !str.match(pattern);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is what you are looking for:</p>\n\n<pre><code>^((?!(abc|def)).)*$\n</code></pre>\n\n<p>the explanation is here:\n<a href=\"http://stackoverflow.com/questions/406230/regular-expression-to-match-string-not-containing-a-word\">Regular expression to match string not containing a word?</a></p>\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>How do I use a javascript regular expression to check a string that does not match certain words?</p>\n\n<p>For example, I want a function that, when passed a string that contains either <code>abc</code> or <code>def</code>, returns false.</p>\n\n<p>'abcd' -> false</p>\n\n<p>'cdef' -> false</p>\n\n<p>'bcd' -> true</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>Preferably, I want a regular expression as simple as something like, [^abc], but it does not deliver the result expected as I need consecutive letters. </p>\n\n<p>eg. I want <code>myregex</code></p>\n\n<p><code>if ( myregex.test('bcd') ) alert('the string does not contain abc or def');</code></p>\n\n<p>The statement <code>myregex.test('bcd')</code> is evaluated true.</p>\n",
            "last_activity_date": 1363721253,
            "question_id": 6449131,
            "score": 14,
            "tags": [
                "javascript",
                "regex",
                "string"
            ],
            "title": "javascript regular expression to not match a word"
        },
        {
            "answer_count": 31,
            "answers": [
                {
                    "body": "<p>A related question was asked on our very own Stack Overflow blog: <a href=\"http://blog.stackoverflow.com/2008/06/is-it-ok-to-require-javascript/\" rel=\"nofollow\">http://blog.stackoverflow.com/2008/06/is-it-ok-to-require-javascript/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As you said, demographics. The web is expanding onto devices that doesn't have very much power, for instance cellphones. If your site is usable without javascript, Opera Mini will likely show your site without any problems.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Two simple questions to help you decide...</p>\n\n<ol>\n<li>Does using javascript provide some\ncore functionality of your site?</li>\n<li>Are you prepared to limit your\npotential users to those who have\nJS? (ie. Most people)</li>\n</ol>\n\n<p>If you answer yes to both of those, go for it!</p>\n\n<p>Websites are moving (have moved?) from static pages of information to interactive web applications.  Without something like Javascript or Flash, making compelling user interactions is sometimes not possible.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I think Javascript implementations in most modern browsers have now reached a reasonable level of maturity and there are a bunch of Javascript UI frameworks which let you build very attractive Javascript based web applications using web-services and such (regardless of the back-end server platform).</p>\n\n<p>An example is <a href=\"http://www.extjs.com\" rel=\"nofollow\">ExtJS</a> - they have got a very extensive AJAX + UI widget framework which I recently used to build a full fledged internal web-app for a client with an ASP.NET backend (for webservices).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>5% according to these statistics: <a href=\"http://www.w3schools.com/browsers/browsers_stats.asp\" rel=\"nofollow\">http://www.w3schools.com/browsers/browsers_stats.asp</a></p>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>It's the 21st century. People not permitting JavaScript need to exit the last millennium, posthaste.  It's a mature, widely used, and very useful technology that is one of the foundations of the recent expansion in useful web services.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just as long as you're aware of the accessibility limitations you might be introducing, ie for users of screen-reading software, etc.</p>\n\n<p>It's one thing to exclude people because they choose to turn off JS or use a browser which doesn't support it, it's entirely another to exclude them because of a disability.</p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>I think the days of \"content sites only\" are gone. What we see now is WWW emerging as the platform of web applications, and the latest developments in the browser front (speeding up JS in particular) ar indication of this. \nThere can be no yes/no answer to your question - you should decide, where on content site&lt;---->web application continuum your site is and how essential is the experience provided by JavaScript. In my opinion - yes it is acceptable to have web applications which require Javascript to function.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Designing to degrade gracefully is the most that should be done. We are moving/have moved past the point of simple web \"sites\" to web \"applications\". The only option besides client side scripting to add round trips to the server.</p>\n\n<p>I think (personal opinion) that the \"don't use JavaScript\" comes more from a lack of understanding of what JavaScript is/does than any actual market data that shows a significant number of people are browsing without it.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I think it comes down to what you're about to do. Are you writing a web APPLICATION? Then I think you're bound to use javascript and/or something like <a href=\"http://code.google.com/webtoolkit/\" rel=\"nofollow\">GWT</a>. Just have a look at all the social sites, and google aplications like gmail. If you're writing a webpage with product descriptions and hardly any interactivity, then you can make the javascript optional.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You should be tying the functionality of your website to your audience.  That being said, every modern browser (save for the mobile platform) includes javascript, and so unless your audience includes luddites with decade old computers, you can assume they <em>have</em> javascript.</p>\n\n<p>The people you need to worry about, then, are those that specifically turn it off.  This includes:</p>\n\n<ul>\n<li>Corporate networks with tough security (not common, but some financial and defense institutions)</li>\n<li>Paranoid web-heads</li>\n</ul>\n\n<p>So, first, who is your audience?  Are there other websites that are comparable to your target?  Look at their site and success - do they degrade gracefully, and would yo be satisfied with their level of success?</p>\n\n<p>If you are targeting mobile applications, though, you can't guarantee javascript.</p>\n\n\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It's reasonable to design sites that use JavaScript but it is not safe to assume that all clients have support for Javascript and therefore it is important that you provide a satisfactory experience even when JavaScript is not available</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would say that you should look at your target audience. If you can reasonably expect that they will have js enabled, and making everything work without any js is too much of a pain, then by all means - go ahead and ignore the non-js crowd, if, on the other hand you have to create a site that will be used by a very large audience/or you are perhaps building a government web site, then you must make sure that everything works, and it is easier in those cases to first build the site so that it works without any js, and add all the nice time-saving ajaxy bits later.</p>\n\n<p>In general though, almost everyone has js enabled by default.</p>\n\n<p>Though you should be aware that server-side validation of user posted data is a must in either case.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Degrading gracefully is a must. At a minimum, you sure make use of the NOSCRIPT tag in order to inform potential <em>customers</em> first that your site requires javascript, and secondly why you require it. </p>\n\n<p>If it's for flashy menus and presentations that I could honestly care less about then I probably won't bother coming back. If there's a real reason that you're requiring javascript (client-side validation on forms, or a real situation that requires AJAX for performance reasons) then say so and your visitors will respond accordingly.</p>\n\n<p>I install extensions that limit both Javascript and Cookies. Websites that don't prominently state their requirements of both usually don't get a second visit unless there's a real need for it.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You should never design a public site to rely on ANY technology/platform. The user agent may not display colour (think screen readers), display graphics (again, think screen readers or text only browsers such as links), etc.</p>\n\n<p>Design your site for the lowest common denominator and then progressively enhance it to add support for specific technologies.</p>\n\n<p>To answer the question directly: No, you cannot assume your users have Javascript, so your site should work without it. Once it does, enhance it with Javascript.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>it's not about browser capability, it's about user control.  People who install the noscript plugin for firefox so they don't have to put up with punch-the-monkey garbage ( the same problem that inspired stack overflow) will not allow your web site to do anything non-static until they trust you.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In terms of client software consider users/customers who are using a browser that supports some but not all Javascript.  For example, most mobile phone browsers support a bit of Javascript but nothing very complicated.  The browsers on devices such as the Playstation 3 are similar.</p>\n\n<p>Then there are browsers such as <a href=\"http://dev.opera.com/articles/view/javascript-support-in-opera-mini-4/\" rel=\"nofollow\" title=\"Javascript support in Opera Mini 4\">Opera Mini</a>, which support a lot of Javascript but are operating in an environment where the scripts are running on a server that then sends the results to a mobile device.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I agree with the majority of the stackoverflow respondents.  JavaScript has matured and offers an \"extra\" level of functionality to a webpage,  especially for forms.  Those who turn off cookies and JS have likely been bitten while surfing in dangerous waters.  For the corporate power users that pay my way either in B2B or retail sites, JS is a proven and trusty tool.  Until something better comes along (and it will) I'm sticking with JS.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You should design websites with Javascript in mind--but not implemented. Consider, build it where every click, every action, performs a round trip to the server. That's the default functionality for older browsers, and those without JS turned on. </p>\n\n<p>Then, after it's all built, and everything is working properly, add in JavaScript which hijacks the link, button and other events, and overlay their standard functionality with the Javascript functionality you're wanting.</p>\n\n<p>Building the application like this means that it will ALWAYS work, which ultimately is what you're wanting.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The received wisdom answer is that you can use JavaScript (or any other technology) providing that it 'degrades gracefully'...</p>\n\n<p>I have experience with disability organisations, so accessibility is important to me. But equally, I'm in the business of building attractive, usable websites, so javascript can be a powerful ally. It's a difficult call, but if you can build a rich, javascript-aided site, without completely alienating non-js vistors, then do so. If not, you will have to look at the context of the site and decide which way to jump.</p>\n\n<p>Regardless, there are no rights and wrongs with this question. However, in some countries, there is a requirement to build 'public' sites to be accessible, so this may be yet another factor in your decision. [In the UK, it is the Disability Discrimination Act.. though to my knowledge, no company has been prosecuted for failure to comply]</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There's addon for Firefox called <a href=\"https://addons.mozilla.org/en-US/firefox/addon/722\" rel=\"nofollow\">NoScript</a> which have 27,501,701 downloads. If you site won't work without JavaScript most of those guys wouldn't want to use it.</p>\n\n<p>Why you would install that addon? Ever wanted to get rid of the popup on the site that cover the most of the useful text you want to rid? Or disable flash animation? Or be sure that evil site won't steal your cookies?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Search Engines don't support JavaScript. They're also blind and don't support CSS. So my suggestion to you is to make sure that the part of your product that needs to be indexable by search engines works without JavaScript and CSS. After that, it really depends on the needs of your users.</p>\n\n<p>If you have a very limited subset of users, then you can actually query them. But to remember that 10% of the population has some form of impairment ranging from vision issues (low vision, color-blindness, etc.) or motor functions (low hand dexterity). These problems tend to be more prominent in the elderly and the knowingly disabled</p>\n\n<p>If your site will target the general audience of Internet users then please make it degrade gracefully, but if you can't do that, then make a no-JavaScript version (like G-mail has).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Some corporate environments won't allow Javascript, by policy or by firewall.  It closes the door to one avenue of virus infection.</p>\n\n<p>Whether you think this is a good idea or not, realize that not everyone has full control over their browser and it might not be their choice.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is a gradient between web sites and web applications.  However, you should alway be able to say \"we are building a web site\" or \"we are building a web application\".</p>\n\n<p>Web sites should be readable down to plain HTML (no CSS, no images, no JavaScript).   </p>\n\n<p>Web applications, of course, could just say \"Sorry, JavaScript is needed\" (which also assumes CSS for layout).    Application should still be able to work without images. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The accessibility issue is the only important technical issue, all other issues can be socially engineered.  When one says that javascript reduced accessibility and another says that Web Applications can use javascript, can we take these two together to imply that all blind people are unemployed?  There has to be some kind of momentum in making javascript accessible.  Maybe a Screenreader object on the javascript side which can detect the presence of a screenreader and then maybe send hints to the screenreader, Screenreaders which can hook onto the browser, and maybe it gets glued together with a screenreader toolbar.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>JavaScript is great for extending the browser to do things like google maps. But it's a pointy instrument, so use it with care.</p>\n\n<p>My bank web site uses JavaScript for basic navigation between pages. <strong>Sigh</strong>. As a result, it's not usable from my mobile device.</p>\n\n<p>Make sure you're familiar with the <a href=\"http://www.w3.org/2001/tag/doc/leastPower.html\" rel=\"nofollow\">Rule of Least Power</a> when considering JavaScript:</p>\n\n<blockquote>\n  <p>When designing computer systems, one\n  is often faced with a choice between\n  using a more or less powerful language\n  for publishing information, for\n  expressing constraints, or for solving\n  some problem. This finding explores\n  tradeoffs relating the choice of\n  language to reusability of\n  information. The \"Rule of Least Power\"\n  suggests choosing the least powerful\n  language suitable for a given purpose.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>if you want your site viewable by the top 100 companies in the US. I would write without javascript.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Independence from Javascript and graceful degradation are important to an application despite the actual demographics -- because such an application probably has better software design.</p>\n\n<p>The \"human user without Javascript\" may be purely hypothetical (for example, if you're trying to make money with your product). But designing for that hypothetical user encourages modular software design which will pay off as you continue to develop your app.</p>\n\n<p>Javascript provides functionality. HTML provides data (on the page itself, and via links that point to more data). As a general rule that reaches well beyond browser apps: A well-designed software product will separate data from functionality. All data should be available, and the functionality should be a separate layer that consumes the data.</p>\n\n<p>If your Javascript is creating data at runtime, then it's time to get specific and figure out whether your webpage really is a piece of software (e.g. a mortgage calculator) or whether it's a document containing data (e.g. a list of mortgage interest rates). This should tell you whether it makes sense to rely on Javascript.</p>\n\n<p>As a final note/example, demographics can be misleading. Relatively few humans browse your site without Javascript, but lots of <strong>machines</strong> (search bots, data miners, screen readers for the disabled, etc.) are browsing your site without Javascript. Again, the distinction between data and functionality are important -- the bots are just making requests and looking for data in the responses. They don't need functionality. But if your user needs to invoke functions just to make your data accessible, the bots are getting no value from your site.</p>\n\n<p><hr /></p>\n\n<p>One side point about the screen readers and other accessibility considerations for the disabled. This is an important niche demographic: a mind that navigates data in a human way, but who can only get data from your site in the same way machines get it. By providing data cleanly and semantically on your page, you make it available to the largest possible set of accessibility tools.</p>\n\n<p><em>Note this doesn't exclude Javascript from consideration.</em> Our mortgage calculator example can still work: accept input from the user, invoke Javascript, and write the output back into the clean semantic data layer of the page. Screen readers can then read it! And if they can't, you're encouraging the development of better screen readers that can.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Well, it depends on your userbase. If you know that people will be using your site from mobile devices, it's good to have unobtrusive javascript. However, if you're trying to appeal to a tech-savvy crowd, don't bother with it.</p>\n\n<p>However, if you're appealing to a crowd that may be using screen readers (blind people), I'd highly suggest using <a href=\"http://en.wikipedia.org/wiki/WAI-ARIA\" rel=\"nofollow\">WAI-ARIA</a> standards. Dojo's widget system has full support for this, and would be a great and easy way to do it.</p>\n\n<p>Anyways, In most cases, you don't need unobtrusive javascript. Most people who have javascript disabled are either using a smartphone, using lynx, or have NoScript installed. It's enabled by default in all the major browsers, so you shouldn't have to worry.</p>\n\n<p>Lastly, it's good to at least have some unobtrusive javascript.  tags are your best friend. For example, one may want to replace a widget that draws rating stars with text. Example using dojo:</p>\n\n<pre><code>&lt;div dojoType=\"dojox.Rating\" stars=\"5\" value=\"4\"&gt;&lt;/div&gt;\n&lt;noscript&gt;4/5&lt;/noscript&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you expect your app to work for everyone, you'll need a backup for all your javascript functionality.  If it's form validation, you should also check the data on the server before saving it.  So the answer is Yes, it's okay, but have a backup.  Do not rely on it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As many people are saying, it's important to consider your user base, but whoever your users are there's a strong possibility that some (stats say 10%) of them will have some sort of disabilities, and screen readers don't like javascript. If you're only adding simple things, a javascript menu or something, then just make it degrade (or don't do it). If the site depends on javascript to work properly, make two versions, one for javascript and one without.</p>\n\n<p>I generally find that anything too javascript heavy is very difficult to make degrade well without just having javascript re-writing the page to a javascript version if the user can take it. Given this, it's well worth writing two pages from square one for complicated stuff.</p>\n\n<p>I would say that there are very very very few web sites that should be running without some support for users without javascript. You'd need to have a very dynamic application that completely didn't make sense as static pages,or you'd need to have a audience you could guarantee were ok with it (like on an office Intranet say).</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>It's fall of 2008, and I still hear developers say that you should not design a site that requires JavaScript.</p>\n\n<p>I understand that you should develop sites that degrade gracefully when JS is not present/on.  But at what point do you not include funcitonality that can only be powered by JS?  </p>\n\n<p>I guess the question comes down to demographics.  Are there numbers out there of how many folks are browsing without JS? </p>\n",
            "last_activity_date": 1253983480,
            "question_id": 62784,
            "score": 14,
            "tags": [
                "javascript"
            ],
            "title": "Should you design websites that require JavaScript in this day &amp; age?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can use the following:</p>\n\n<pre><code>var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n</code></pre>\n\n<p>Note the use of <code>createElementNS</code>. This is required because <code>svg</code> elements are not in the same XHTML namespace as most HTML elements.</p>\n\n<p>This code creates a new <code>svg</code> element, as you would regardless of using D3 or not, and then creates a selection over that single element.</p>\n\n<p>This can be made marginally more succinct but clearer and less error prone as:</p>\n\n<pre><code>var svg = document.createElementNS(d3.ns.prefix.svg, 'svg');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>To save a little bit of time you can use <strong>d3.ns.prefix.svg</strong></p>\n\n<pre><code>var svg = document.createElementNS(d3.ns.prefix.svg, 'svg');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                }
            ],
            "body": "<p>Consider the following code:</p>\n\n<pre><code>var svg = d3.select('#somediv').append(\"svg\").attr(\"width\", w).attr(\"height\", h);\n</code></pre>\n\n<p>I would like to refactor this code so that it reads more like this:</p>\n\n<pre><code>var svg = makesvg(w, h);\nd3.select(\"#somediv\").append(svg);\n</code></pre>\n\n<p>Note that, in contrast to the situation shown in the first version, in this second version <code>append</code> <em>does not create</em> the \"svg\" object; it only appends it to <code>d3.select(\"#somediv\")</code>.</p>\n\n<p>The problem is how to implement the function <code>makesvg</code>.  This in turn reduces to the problem: how to instantiate an \"svg\" object without using <code>append</code> to do this, since one could then do something like:</p>\n\n<pre><code>function makesvg(width, height) {\n  return _makesvg().attr(\"width\", w).attr(\"height\", h);\n}\n</code></pre>\n\n<p>So my question boils down to what is the generic equivalent of the hypothetical <code>_makesvg()</code> factory mentioned above?</p>\n",
            "last_activity_date": 1413479047,
            "question_id": 18455282,
            "score": 13,
            "tags": [
                "javascript",
                "d3.js"
            ],
            "title": "How to create &quot;svg&quot; object without appending it?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>In JavaScript, the <code>||</code> operator returns its first operand if it evaluates to <code>true</code> (i.e. it is not <code>false</code>, <code>null</code>, <code>undefined</code>, <code>\"\"</code>, or <code>0</code>), and its second operand otherwise.</p>\n\n<p>In the first case, <code>(\"incomplete\" || \"unknown\")</code> always evaluates to <code>\"incomplete\"</code>, since it evaluates to true.</p>\n\n<p>The entire condition then becomes:</p>\n\n<pre><code>if (status === \"incomplete\")\n</code></pre>\n\n<p>Which explains the behaviour you are observing.</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p><code>(\"incomplete\" || \"unknown\")</code> will return <code>\"incomplete\"</code> which is than compared to <code>status</code>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<blockquote>\n  <p>But what I can't explain is why exactly <code>status === (\"incomplete\" || \"unknown\")</code> wouldn't work</p>\n</blockquote>\n\n<p>That's because the expression in the parenthesis is evaluated first. The non-empty string <code>incomplete</code> is truthy, so the <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/Logical_Operators\" rel=\"nofollow\">OR-expression</a> <code>(\"incomplete\" || \"unknown\")</code> yields <code>\"incomplete\"</code> and only that is then compared with your <code>status</code> variable.</p>\n\n<p>To shorten the condition, <a href=\"http://stackoverflow.com/q/9121395/1048572\">there are many ways</a> including arrays of values, regular expression test etc.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>So, a junior programmer on my team today wrote the following piece of code:</p>\n\n<pre><code>if(status === (\"incomplete\" || \"unknown\"))\n</code></pre>\n\n<p>Which is obviously not going to do what he intended, which was this:</p>\n\n<pre><code>if(status === \"incomplete\" || status === \"unknown\"))\n</code></pre>\n\n<p>But what I can't explain is why exactly the first snippet of code wouldn't work! Or why it evaluates to true if 'status' is set to 'incomplete' but to false when it's set to 'unknown'...</p>\n",
            "last_activity_date": 1363019356,
            "question_id": 15343484,
            "score": 13,
            "tags": [
                "javascript"
            ],
            "title": "checking a variable value using an OR operator"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I solved this error by using integers in \"min\", \"max\" and \"values\". Maybe your are setting null values.<br>\njQuery Slider specification says:</p>\n\n<blockquote>\n  <ul>\n  <li>max Number Default:100 </li>\n  <li>min Number Default:0</li>\n  <li>value Number Default: 0</li>\n  </ul>\n</blockquote>\n\n<p>So \"values\" are an array of numbers. </p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>For anyone reading back on this question, if you're pulling from a CDN, try pulling from the latest jQuery UI version. I also got this problem, and it was solved by using a later jQuery UI version.</p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>Another possibility - this error can come up if the min or max are missing for the slider.  If your startFiling or endFiling are not evaluating to a date, the slider code fails when trying to calculate the new handle position.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For anyone who's still having this issue, ensure that the values you're adding (<code>min</code>, <code>max</code>, and <code>values</code> are all NUMBERS and not STRINGS!</p>\n\n<p>Been trying to diagnose a problem where the following code was failing:</p>\n\n<pre><code>t.slider({\n  range : true,\n  min   : t.attr('data-min'),\n  max   : t.attr('data-max'),\n  values: [t.attr('data-min'), t.attr('data-max')],\n  step  : 1.00,\n  slide : function (e, ui) {\n    var\n      v = (s == 'price') ? '&amp;pound;' + ui.values[0] + ' - &amp;pound;' + ui.values[1] : ui.values[0] + ' - ' + ui.values[1] + 'kg'\n    $('#filter-' + s).html(v)\n  },\n  stop  : function () {\n    Items.filter()\n  }\n})\n</code></pre>\n\n<p>As <code>t.attr()</code> returns a STRING, Slider was failing to set <code>valueMouse</code> on line 12843 of Version 1.10.1 of jQuery UI. Instead of being a value, it was returning a string (something similar to <code>39.99549.21</code> (min value of <code>39.99</code> concatenated with <code>549.21</code> - a percentage * max value)</p>\n\n<p>Hope that helps someone!</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I had this issue with latest versions, too. The solution is easy: use <strong>parseInt()</strong> to pass dynamic values to sliders<br/><br/>\nSetter example for jquery ui slider:<br/><br/></p>\n\n<pre><code>    $(\"#mySlider\").slider(\"option\",{min: parseInt(value.min), max:parseInt(value.max),value: parseInt(value.active)});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>solved the problem using unmodified jQuery-UI.min.js. Using a custom script caused the error i.e jQuery-UI-custom.js</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I had this old jQuery UI slider that had worked just fine a few months ago, but now I seem to be getting an exception reading: Cannot call method 'addClass' of undefined. I've checked the values being passed into the slider and they're regular Javascript dates.</p>\n\n<pre><code>  $('#dateFilter').click(function() {\n    return $('#sliderContainer').slideToggle(200);\n  });\n\n  $(function() {\n    var endFiling, startFiling;\n    startFiling = Date.parse($('#startFiling').val());\n    endFiling = Date.parse($('#endFiling').val());\n    return $('#filingDateSlider').slider({\n      range: true,\n      min: startFiling,\n      max: endFiling,\n      step: 86400000,\n      values: [startFiling, endFiling],\n      slide: function(event, ui) {\n        var eD, end, sD, start;\n        sD = new Date(ui.values[0]);\n        start = dateFormat(sD);\n        eD = new Date(ui.values[1]);\n        end = dateFormat(eD);\n        $('#filingStartDate').text(start);\n        return $('#filingEndDate').text(end);\n      }\n        });\n</code></pre>\n\n<p>Is there a particular reason why I might be getting this new error?</p>\n\n<p><a href=\"http://i.imgur.com/xC2E6.jpg\">http://i.imgur.com/xC2E6.jpg</a></p>\n",
            "last_activity_date": 1397042265,
            "question_id": 11728079,
            "score": 13,
            "tags": [
                "javascript",
                "jquery-ui"
            ],
            "title": "jQuery UI slider - Cannot call method &#39;addClass&#39; of undefined"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Invoke the lowercase <code>.focus()</code> function:</p>\n\n<pre><code>function setFocus() {\n    document.getElementById(\"myTextbox\").focus();\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>function setFocus(id) {\n    document.getElementById(id).focus();\n</code></pre>\n\n<p>}</p>\n\n<p>In this way, your function becomes reusable.\nJust pass the ID of the html element to be given the focus when you call the function.</p>\n\n<p>M.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I currently have a textbox in my aspx:</p>\n\n<pre><code> &lt;input type=\"text\" id=\"myTextbox\"  value=\"\" /&gt;\n</code></pre>\n\n<p>I was wondering if I could set the focus (put my cursor in that text box) every time my JavaScript method is called. I was hoping it would work along the lines of this:</p>\n\n<pre><code>function setFocus() {\n    document.getElementById(\"myTextbox\").Focus();\n}\n</code></pre>\n\n<p>Any suggestions?</p>\n",
            "last_activity_date": 1423571717,
            "question_id": 9543967,
            "score": 13,
            "tags": [
                "javascript",
                "focus",
                "html-input"
            ],
            "title": "Setting focus to a textbox when a function is called"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Follow the link\n<a href=\"http://northtemple.com/2008/10/07/javascript-and-screen-readers\" rel=\"nofollow\">http://northtemple.com/2008/10/07/javascript-and-screen-readers</a>\nYour problem get definitely resolved. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You should probably not try to do anything special even if you could detect that a screenreader is running. Even if you get it right for one group of screenreader users, you may get it wrong for another group. It's best to concentrate on writing good clean HTML5 in the first place.</p>\n\n<p>Note that not all screenreader users use text-to-speech; many use braille output. Additionally, other types of accessibility tools - such as content highlighters and voice input apps - use the same techniques and APIs (eg. DOM, MSAA) that screenreaders do, so any technique that \"detects a screenreader\" will likely detect these also - so you cannot assume that it means that the user is fully blind and using only speech.</p>\n\n<p>As things currently stand, the audio tag is currently not universally accessible, different browsers have different levels of accessibility support - see <a href=\"http://html5accessibility.com/\" rel=\"nofollow\">HTML5 Accessibility</a> and scroll down to audio for more details of current support. I've seen some pages that add HTML5-based controls plus javascript after the audio tag so they can provide their own UI to ensure that keyboard or screenreader users can play/stop the audio as needed. (Eventually, when browsers catch up, this should not be needed.)</p>\n\n<p>As far as general accessibility goes, WCAG 2.0 (<a href=\"http://www.w3.org/TR/WCAG/\" rel=\"nofollow\">Web Content Accessibility Guidelines</a>) recommends that any audio that plays automatically for more than 3 seconds should have an accessible means to pause or stop the audio. (I'd go even further and recommend against using any automatic audio - when using tabbed browsing, it's often impossible to determine which tab the audio is coming from.)</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>You cannot detect screen readers using javascript, you cannot detect screen readers using any client side technology. You can detect software that is running an <a href=\"http://en.wikipedia.org/wiki/Microsoft_Active_Accessibility\" rel=\"nofollow\">MSAA</a> client using Flash. More details about how it works and why it is not useful and should not be used to detect screen readers is available here: <a href=\"http://www.paciellogroup.com/blog/2008/04/developer-beware-using-flash-to-detect-screen-readers/\" rel=\"nofollow\">Developer Beware: Using Flash to Detect Screen Readers</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>While likely not a fully reliable way, a screen reader's progress can be detected via javascript using the focus event, as the user skim though content.</p>\n\n<p>A hidden \"skip navigation link\" (<a href=\"http://webaim.org/techniques/skipnav/\" rel=\"nofollow\">http://webaim.org/techniques/skipnav/</a>) should it be focuses, would be one way to detect whether someone is using a screenreader.</p>\n\n<p>Even though it doesn't address the audio part of the question, I just wanted to provide this partial solution, as I was looking for possible ways to detect screen-readers myself.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to detect whether a screen reader is running on a user's machine to avoid sound clashing with audio tag in html. If so, please provide details on how this could be done.</p>\n",
            "last_activity_date": 1366292753,
            "question_id": 7712167,
            "score": 13,
            "tags": [
                "javascript",
                "html",
                "accessibility",
                "screen-readers"
            ],
            "title": "Is it possible to use javascript to detect if a screen reader is running on a users machine?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><a href=\"http://code.google.com/webtoolkit/\" rel=\"nofollow\">GWT</a> does what looking for, but its a way oversized for the most cases. You could take a look at googles <a href=\"http://code.google.com/closure/library/\" rel=\"nofollow\">closure</a> framework which fakes the typed safe with <a href=\"http://code.google.com/closure/compiler/docs/js-for-compiler.html\" rel=\"nofollow\">anotations</a>  </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>While <code>typeof</code> will return <code>'object'</code> for every object or array, you can use the <code>instanceof</code> statement. Say you have a class <code>Person</code>, and want to see whether the object passed to your function is a <code>Person</code>, you can do this:</p>\n\n<pre><code>function someFunc(person){\n  if(! person instanceof Person)\n    throw('argument needs to be an instance of Person.');\n\n  /* ... do your stuff ... */\n}\n</code></pre>\n\n<p>If you just want to make sure a variable is the number 3 instead of a string '3', you only need to use <code>===</code> instead of <code>==</code>:</p>\n\n<pre><code>if( var === 3 ){\n  /* ... do your stuff ... */\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You should take a look at the <a href=\"http://haxe.org/doc/intro\">haxe project</a>.</p>\n\n<p>Haxe is a very nice typed language that uses type inference (i.e. you're not forced to write a lot of type declarations) but that enforces type correctness at compile time.</p>\n\n<p>The language has a javascript-like syntax and the compiler can generate code for the neko virtual machine, for javascript, as3, c++ or PHP.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>I agreed that Javascript is a beautiful language, with some glaring holes, the worst and most unremarked of which is the absence of static type-safety.</p>\n\n<p>As eskimoblood pointed out, there are some half-measures in the form of GWT and Closure but the <em>right</em> answer, imo, is Scala, which combines Javascript's flexibility and expressive power with a type system much better than Java's -- or that <em>would</em> be the right answer except that the Scala-GWT project seems to have gotten bogged down.</p>\n\n<p>For now, we wait...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Whilst I'm a little late to this party, I think it's definitely worth mentioning <a href=\"http://www.dartlang.org/\" rel=\"nofollow\">Dart</a>  (which is a Google product) and <a href=\"http://www.typescriptlang.org/\" rel=\"nofollow\">TypeScript</a> (which is a Microsoft product).</p>\n\n<p>JavaScript is fast becoming an extremely popular language as applications become more web based. However as you have pointed out, JavaScript lacks type safety, and to name a few other things; classes, interfaces and packages/namespaces/modules.</p>\n\n<p>This is where Dart and TypeScript step in. These languages are essentially supersets of JavaScript. When you write Dart or TypeScript code, it is compiled into clean, standards compliant JavaScript.</p>\n\n<p>The benefits of Dart and TypeScript are that they provide type safety, interfaces, classes etc. Thus allowing you to write cleaner, scalable, manageable applications, which still run in the browser.</p>\n\n<p>Being a Microsoft oriented programmer, I've had a lot of experience with TypeScript, including being somewhat active in the development of the language (you can find information for TypeScript development at <a href=\"http://typescript.codeplex.com/\" rel=\"nofollow\">codeplex</a>)</p>\n\n<p>My only concern at the moment is that TypeScript is lacking in some fundamental features. It seems that some of the current implementation (0.9.0 alpha) has some equally gaping holes that might deter the savvy developer from using it at the moment (subject to change of course).</p>\n\n<p>I cannot really comment on Dart, as I have only used this a few times, but my overall experience with Dart was good!</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There are many <strong>statically-typed</strong> languages that are designed with the <strong>specific goal</strong> of compiling down to JavaScript (the so-called <em>assembly</em> of the web):</p>\n\n<ul>\n<li><p><a href=\"http://flowtype.org/\" rel=\"nofollow\">Flow</a> by Facebook</p></li>\n<li><p><a href=\"https://www.dartlang.org/\" rel=\"nofollow\">Dart</a> by Google</p></li>\n<li><p><a href=\"http://www.typescriptlang.org/\" rel=\"nofollow\">TypeScript</a> by Microsoft</p></li>\n<li><p><a href=\"http://jsx.github.io/\" rel=\"nofollow\">JXS</a> by DeNA</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there a way to enforce types in JavaScript? I'm thinking of a pre-processor which takes an input file written in ActionScript 3 or Java and converts it to JS.</p>\n\n<p>I do not need a big run-time apparatus, I just need to introduce the idea of compile-time in my workflow and run the trivial compile-time checks on my code (and also use interfaces). Neither I need the API from Java or Flex, just the syntax.</p>\n\n<p>The standard browser-functions could also be checked against the IDL definitions, but it is not a must.</p>\n",
            "last_activity_date": 1416606535,
            "question_id": 7050507,
            "score": 13,
            "tags": [
                "javascript",
                "compiler-construction",
                "interface",
                "type-safety"
            ],
            "title": "Typesafe Javascript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Objects are instances of a constructor function, so the test is to see if the left hand is an <em>instance of</em> the right, so the right must be a function (and it must be the constructor that constructed the object to return <code>true</code>).</p>\n\n<pre><code>[1,2,3] instanceof [].constructor;  // true\n</code></pre>\n\n<hr>\n\n<p>So to answer the question more directly, your initial understanding is correct, and the error message seems misleading (to me anyway).</p>\n\n<p>From the spec: <a href=\"http://ecma262-5.com/ELS5_HTML.htm#Section_11.8.6\">http://ecma262-5.com/ELS5_HTML.htm#Section_11.8.6</a></p>\n\n<blockquote>\n  <p><strong>1.8.6   The instanceof operator</strong></p>\n  \n  <p>The production RelationalExpression: RelationalExpression instanceof ShiftExpression is evaluated as follows: </p>\n  \n  <ul>\n  <li>Let lref be the result of evaluating RelationalExpression.</li>\n  <li>Let lval be GetValue(lref).</li>\n  <li>Let rref be the result of evaluating ShiftExpression.</li>\n  <li>Let rval be GetValue(rref).</li>\n  <li>If Type(rval) is not Object, throw a TypeError exception.</li>\n  <li><strong>If rval does not have a [[HasInstance]] internal method, throw a TypeError exception.</strong></li>\n  <li>Return the result of calling the [[HasInstance]] internal method of rval with argument lval.</li>\n  </ul>\n</blockquote>\n\n<p>and <a href=\"http://ecma262-5.com/ELS5_HTML.htm#Section_15.3.5\">http://ecma262-5.com/ELS5_HTML.htm#Section_15.3.5</a></p>\n\n<p><strong>15.3.5   Properties of Function Instances</strong></p>\n\n<blockquote>\n  <p>In addition to the required internal properties, every function instance has a [[Call]] internal property and in most cases use a different version of the [[Get]] internal property. <strong>Depending on how they are created (see 8.6.2 ,13.2, 15, and 15.3.4.5), function instances may have a [[HasInstance]] internal property</strong>, a [[Scope]] internal property, a [[Construct]] internal property, a [[FormalParameters]] internal property, a [[Code]] internal property, a [[TargetFunction]] internal property, a [[BoundThis]] internal property, and a [[BoundArgs]] internal property. </p>\n</blockquote>\n\n<p>So it requires a <code>TypeError</code> if the right hand does not have an internal <code>[[HasInstance]]</code> property, but doesn't specify the wording.</p>\n\n<p>Firefox 4 gives me a much more sensible error message:</p>\n\n<pre><code>[1,2,3] instanceof [];\n\n// TypeError: invalid 'instanceof' operand []\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>I was playing around with <code>instanceof</code> in Chrome but I got an error message. I <em>think</em> I know why (you have to supply a function after the <code>instanceof</code> keyword that is the constructor the object was created with), but the error message seems to be stating something else:</p>\n\n<pre><code>[1,2,3] instanceof Array\n// true\n\n[1,2,3] instanceof []\n// TypeError: Expecting a function in instanceof check, but got 1,2,3\n</code></pre>\n\n<p>Does this mean that I should replace <code>[1,2,3]</code> with a function? I would think that <code>[1,2,3]</code> is correct and that <code>[]</code> is the problem and should be replaced with a function, but it looks like the error message is saying the opposite.</p>\n\n<p>Could someone please explain how I'm interpreting the error message incorrectly?</p>\n",
            "last_activity_date": 1305569126,
            "question_id": 6021245,
            "score": 13,
            "tags": [
                "javascript",
                "instanceof"
            ],
            "title": "What does this instanceof error message mean?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>When you close the video you just need to pause it.</p>\n\n<pre><code>$(\"#closeSimple\").click(function() {\n    $(\"div#simpleModal\").removeClass(\"show\");\n    $(\"#videoContainer\").pause();\n    return false;                   \n});\n\n&lt;video id=\"videoContainer\" width=\"320\" height=\"240\" src=\"Davis_5109iPadFig3.m4v\" controls=\"controls\"&gt; &lt;/video&gt;\n</code></pre>\n\n<p>Also, for reference, here's the Opera <a href=\"http://dev.opera.com/articles/view/introduction-html5-video/#scripting\">documentation for scripting video controls</a>.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I'm not sure whether ZohoGorganzola's solution is correct; however, you may want to try getting at the element directly rather than trying to invoke a method on the jQuery collection, so instead of </p>\n\n<pre><code>$(\"#videoContainer\").pause();\n</code></pre>\n\n<p>try </p>\n\n<pre><code>$(\"#videoContainer\")[0].pause();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>The right answer is : <code>$(\"#videoContainer\")[0].pause();</code></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>None of these worked for me using 4.1 video.js CDN.  This code kills the video playing in a modal when the (<code>.closemodal</code>) is clicked.  I had 3 videos.  Someone else can refactor.</p>\n\n<pre><code>\nvar myPlayer = videojs(\"my_video_1\");\nvar myPlayer2 = videojs(\"my_video_2\");\nvar myPlayer3 = videojs(\"my_video_3\");\n$(\".closemodal\").click(function(){\n   myPlayer.pause();\nmyPlayer2.pause();\nmyPlayer3.pause();\n});\n});\n</code></pre>\n\n<p>as per their <a href=\"https://github.com/videojs/video.js/blob/master/docs/api.md\" rel=\"nofollow\">Api</a> docs.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>$(document).ready(function(){\n    $(\"#showSimpleModal\").click(function() {\n        $(\"div#simpleModal\").addClass(\"show\");\n        $(\"#videoContainer\")[0].play();\n        return false;   \n    });\n\n    $(\"#closeSimple\").click(function() {\n        $(\"div#simpleModal\").removeClass(\"show\");\n        $(\"#videoContainer\")[0].pause();\n        return false;                   \n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm using the following trick to stop HTML5 video. pause() the video on modal close and set currentTime = 0;</p>\n\n<pre><code>&lt;script&gt;\n     var video = document.getElementById(\"myVideoPlayer\");\n     function stopVideo(){\n          video.pause();\n          video.currentTime = 0;\n     }\n&lt;/script&gt;\n</code></pre>\n\n<p>Now you can use stopVideo() method to stop HTML5 video. Like,</p>\n\n<pre><code>$(\"#stop\").on('click', function(){\n    stopVideo();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>For anyone struggling with this issue with videos embedded using the <code>&lt;object&gt;</code> tag, the function you want is Quicktime's <code>element.Stop();</code> For example, to stop any and all playing movies, use:</p>\n\n<pre><code>var videos = $(\"object\");\n\nfor (var i=0; i &lt; videos.length; i++)\n{\n    if (videos[i].Stop) { videos[i].Stop(); }\n}\n</code></pre>\n\n<p>Note the non-standard capital \"S\" on Stop();</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I searched all over the internet for an answer for this question. none worked for me except this code. Guaranteed. It work perfectly.</p>\n\n<pre><code>$('body').on('hidden.bs.modal', '.modal', function () {\n$('video').trigger('pause');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I've got a html5 video element on a modal window.  When I close the window the video continues to play.  I'm a total newbie to JS.  Is there an easy way to tie a video playback stop function to the window close button?  Below is my html page:</p>\n\n<pre><code>&lt;!DOCTYPE html &gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n&lt;meta charset=\"utf-8\" /&gt;\n&lt;title&gt;Modal Test&lt;/title&gt;\n\n&lt;script type=\"text/javascript\" src=\"jquery.js\"&gt;\n\n&lt;/script&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    $(document).ready(function(){\n        $(\"#showSimpleModal\").click(function() {\n            $(\"div#simpleModal\").addClass(\"show\");\n            return false;   \n        });\n\n        $(\"#closeSimple\").click(function() {\n            $(\"div#simpleModal\").removeClass(\"show\");\n            return false;                   \n        });\n    });\n&lt;/script&gt;\n\n&lt;style type=\"text/css\"&gt;\n\ndiv#simpleModal\n{\n    position:absolute; \n    top: 40px; \n    width: 320px; \n    left: 170px; \n    border: solid 1px #bbb;     \n    padding: 20px; \n    background: #fff; \n    -webkit-box-shadow: 0px 3px 6px rgba(0,0,0,0.25); \n    opacity: 0.0; \n    -webkit-transition: opacity 0.0s ease-out; z-index: 0;\n}\n\ndiv#simpleModal.show\n{\n    opacity: 1.0; \n    z-index: 100;        \n    -webkit-transition-duration: 0.25s; \n}\n\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;a href=\"\" id=\"showSimpleModal\"&gt;Show Modal&lt;/a&gt;\n\n&lt;div id=\"simpleModal\" class=\"modal\"&gt;\n&lt;video width=\"320\"  height=\"240\" src=\"Davis_5109iPadFig3.m4v\" controls=\"controls\"&gt; &lt;/video&gt;\n&lt;a href=\"\" id=\"closeSimple\"&gt;Close&lt;/a&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Any input greatly appreciated.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1393878705,
            "question_id": 5958132,
            "score": 13,
            "tags": [
                "javascript",
                "modal-dialog",
                "html5-video"
            ],
            "title": "Javascript to stop HTML5 video playback on modal window close"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>0154 is octal.\n1*64 + 5*8 + 4 = 108.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Numbers that begin with 0 are considered octal (base-8) numbers.</p>\n\n<p>base 8 [0154] = base 10 [108]</p>\n\n<p>but if you had used a number that had an 8 or 9 you wouldn't have seen this problem since that neither 8 nor 9 is an octal digit.</p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>It is printing out the octal equivalent of what you wrote because it started with 0. Try \n0001 (prints out 1), 0010 (prints out 8), 0011 (prints out 9)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>its octal number.\noctal=0154 &amp; decimal is=108 </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>What's happening <a href=\"http://jsfiddle.net/VA2QP/\">here</a> and why?</p>\n\n<pre><code>document.write(0154); // === 108\n</code></pre>\n",
            "last_activity_date": 1299635511,
            "question_id": 5000848,
            "score": 13,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Why does 0154 === 108?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Just a quickshot. Try to give your body #page:</p>\n\n<pre><code>function get_Page_Height() {\n    pageHeight = document.getElementById('page').offsetHeight;\n    pageWidth = document.getElementById('page').offsetWidth;\n\n    alert(pageHeight);\n    alert(pageWidth);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Perhaps the issue is due to the scrollbars being included in the width and height regardless of whether or not they are there. I don't have IE (on a mac) so can't verify.</p>\n\n<p>However, I can tell you what does work as in my project <a href=\"http://www.balupton.com/lightbox\">jQuery Lightbox</a> I have no such issue. We use the following code in it:</p>\n\n<pre><code>// Make the overlay the size of the body\nvar $body = $(this.ie6 ? document.body : document); // using document in ie6 causes a crash\n$('#lightbox-overlay').css({\n width:  $body.width(),\n height:  $body.height()\n});\n\n// ... some code ...\n\n// Get the window dimensions\nvar $window = $(window);\nvar wWidth  = $window.width();\nvar wHeight = $window.height();\n</code></pre>\n\n<p>And the overlay displays correctly. I would trust jQuery's result of the width and height compared to that of the native result, as jQuery should naturally be taking into account any quirks with the browser.</p>\n\n<p>It is important to note that the lightbox script above tends to prefer <code>$(document)</code> over <code>$(document.body)</code> for some reason - I can't remember sorry :O - so perhaps this solves the issue as well?</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>var viewport = {\n    width : $(window).width(),\n    height : $(window).height()\n};\n\nvar width = viewport.width;\nvar height = viewport.height;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Depending on which mode of IE8 i'm in (quirks or standard) i get different values for the height and width. I've tried standard javascript and jquery but both return different results.</p>\n\n<p>In Quirks  </p>\n\n<pre><code>$('body').width = 1239  \n$('body').height = 184  \ndocument.body.clientWidth = 1231  \ndocument.body.clientHeight = 176  \n</code></pre>\n\n<p>In standards  </p>\n\n<pre><code>$('body').width = 1260  \n$('body').height = 182  \ndocument.body.clientWidth = 1254  \ndocument.body.clientHeight = 176\n</code></pre>\n\n<p>Any ideas how to get a value unchanged by the mode of IE8.</p>\n\n<p>Thanks in adv.</p>\n",
            "last_activity_date": 1407448304,
            "question_id": 3288397,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "Getting height and width of body or window of web page"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Ah, I figured it out just after I wrote the question. Here's what I found, in case anyone else is interested:</p>\n\n<pre><code>$([])\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Yep. Try <code>$([])</code>. The reason <code>$()</code> doesn't work is because that jQuery expects a context, and without any supplied, will default to <code>document</code> as the context. Many things depend on this assumption being true, so changing <code>$()</code> to mean \"give me the empty set\" would be problematic at best.</p>\n",
                    "is_accepted": true,
                    "score": 23
                }
            ],
            "body": "<blockquote>\n  <p><strong>Edit</strong>: As of jQuery 1.4, using <code>$()</code> will work as described below.</p>\n</blockquote>\n\n<hr>\n\n<p>I need to loop through an array and create a number of elements which I want to have in a single jQuery result object.</p>\n\n<pre><code>for (var i = 0; i &lt; 10; ++i) {\n    $myJQueryObj = $myJQueryObj.add($(\"&lt;span&gt;blahblah&lt;/span&gt;\"));\n}\n</code></pre>\n\n<p>The problem with this, however, is that you need a jQuery object to begin with, and you obviously want to start it empty. In the above example, how should I initialise <code>$myJQueryObj</code> ?</p>\n\n<p>The following examples do not work, as they all select the document object:</p>\n\n<pre><code>$('')\n$()\n$(null)\n$(false)\n</code></pre>\n\n<p>These do work... but...</p>\n\n<pre><code>$('#nonExistantElement')  // yuck\n$().slice(0,0)            // surely there's a nicer way?\n</code></pre>\n\n<p>Is there a better way?</p>\n",
            "last_activity_date": 1299149827,
            "question_id": 2003448,
            "score": 13,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to create an empty jQuery result"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Yes, see <a href=\"http://www.koders.com/\" rel=\"nofollow\">Koders</a>. There are probably others. The Google page does seem to index code that appears on sites, try the lang:html &amp; lang:javascript commands.</p>\n\n<p>[Correction]\nIt doesn't look like these sites index code within a site's source, only what is displayed on pages.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Not sure about the JavaScript, but I'm reasonably certain about any content in the HTML. I do some work with an open-source forum package, and while the version number is in a tool-tip, you can Google for the version number and see everyone who's using it (that's been indexed, natch.)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Opera has built a search engine for web page code, although it's not public yet called <a href=\"http://dev.opera.com/articles/view/mama/\" rel=\"nofollow\">Metadata Analysis and Mining Application</a> or MAMA, but they do have some interesting <a href=\"http://dev.opera.com/articles/view/mama-key-findings/\" rel=\"nofollow\">statistics/findings</a>.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>The only site I could find that offers an HTML source code search is Globalogiq.  Its a paid service but they do offer a free demo.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>As far as I'm aware, search engines (on the web) typically index only the \"user facing\" content of a web page.</p>\n\n<p>But what if you wanted to find pages(s) that contain a certain fragment of HTML or JavaScript. Is this possible?</p>\n\n<p>Do any web-wide search engines provide this feature? Or do you think that it would not be worth implementing?</p>\n",
            "last_activity_date": 1379249733,
            "question_id": 952101,
            "score": 13,
            "tags": [
                "javascript",
                "html",
                "search-engine",
                "code-search-engine"
            ],
            "title": "Do any search engines index web page source code?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>var newString=oldString.replace(/\\n/g,\"&lt;br /&gt;\");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>+1 for Click Upvote's answer. I'd just point out that using that style of defining strings, you'll have a heap of extra whitespace in there. Doing a simple replace of the newline will actually give you this string:</p>\n\n<pre><code>\"This is man.&lt;br /&gt;     Man like dog.\"\n</code></pre>\n\n<p>The basic solution is to change your replace function:</p>\n\n<pre><code>newString = oldString.replace(/\\n\\s*/g, \"&lt;br /&gt;\");\n</code></pre>\n\n<p>Or even better (IMHO), define your strings like this:</p>\n\n<pre><code>var a = \"This is man.\\n\"\n      + \"Man like dog.\"\n;\n</code></pre>\n\n<p>It means you can still get nice indenting without the extra overhead being added into your variables, plus, it allows you to add comments easily:</p>\n\n<pre><code>var a = \"This is man.\\n\" // this is the first line.\n      + \"Man like dog.\"  // and woo a comment here too\n;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>To be complete: I've encountered cases where '\\n' didn't work, in those cases I used:</p>\n\n<pre><code>someString.replace(/\\n/g,'&lt;br /&gt;')\n          .replace(/\\r/g,'&lt;br /&gt;')\n          .replace(/\\r\\n/g,'&lt;br /&gt;');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/784539/replace-all-line-break-in-a-string-with-br-tag-in-javascript\">Replace all line break in a string with &lt;br /&gt; tag in javascript</a>  </p>\n</blockquote>\n\n\n\n<p>How can I read the line break from a value with JavaScript and replace it with a <code>&lt;br /&gt;</code> tag?</p>\n\n<p>Example:</p>\n\n<pre><code>var a = \"This is man.\n     Man like dog.\"\n</code></pre>\n\n<p>I would like my result to look something like</p>\n\n<pre><code>var a = \"This is man.&lt;br /&gt;Man like dog.\";\n</code></pre>\n",
            "last_activity_date": 1285911287,
            "question_id": 784313,
            "score": 13,
            "tags": [
                "javascript"
            ],
            "title": "Read line break in a string with JavaScript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>img {\r\n  display: block;\r\n  float: left;\r\n  transform: rotate(-5deg);\r\n  margin: 0 15px;\r\n}\r\np {\r\n  transform: skew(6deg);\r\n  font-style: italic;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div&gt;\r\n  &lt;img src=\"http://placehold.it/150x250&amp;text=img\" alt=\"image\" /&gt;\r\n  &lt;p&gt;Lorem ipsum dolor sit amet. Vestibulum commodo volutpat a, convallis ac, laoreet enim. Phasellus fermentum in, dolor. Pellentesque facilisis. Nulla imperdiet sit amet magna. Vestibulum dapibus, mauris nec malesuada fames ac turpis velit, rhoncus eu,\r\n    luctus et interdum adipiscing wisi. Aliquam erat ac ipsum. Integer aliquam purus. Quisque lorem tortor fringilla sed, vestibulum id, eleifend justo vel bibendum sapien massa ac turpis faucibus orci luctus non, consectetuer lobortis quis, varius in,\r\n    paragraph.&lt;/p&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I can't give you a code example, this is more complicated than a skew transform.</p>\n\n<p>You must parse the text and the related DOM contained in it and look for each new lines of text (not br or \\n but each first character of every rendered line).</p>\n\n<p>With this information you can add a <code>padding-left</code> calculated from the images position and dimension.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<blockquote>\n  <p><strong>WARNING :</strong> <em>The shape-outside property should not be used in live projects<sup>1</sup>. This answer is here just to show how the desired output can\n  be achieved with this property.</em></p>\n</blockquote>\n\n<p>Here is an example using the <a href=\"https://developer.mozilla.org/fr/docs/Web/CSS/shape-outside\" rel=\"nofollow\">shape-outside</a> property (<a href=\"https://developer.mozilla.org/fr/docs/Web/CSS/shape-outside#Browser_compatibility\" rel=\"nofollow\">modern webkit browsers only</a>) :</p>\n\n<p><strong><a href=\"http://jsfiddle.net/webtiki/dohqqtzo/1/\" rel=\"nofollow\">DEMO</a></strong></p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>img {\r\n  display: block;\r\n  float: left;\r\n  transform: rotate(-5deg);\r\n  margin: 0 20px;\r\n  -webkit-shape-outside: polygon(0 3%, 85% -3%, 100% 97%, 15% 103%);\r\n  shape-outside: polygon(0 3%, 85% -3%, 100% 97%, 15% 103%);\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div&gt;\r\n  &lt;img src=\"http://placehold.it/150x250&amp;text=img\" alt=\"image\" /&gt;\r\n  &lt;p&gt;Lorem ipsum dolor sit amet. Vestibulum commodo volutpat a, convallis ac, laoreet enim. Phasellus fermentum in, dolor. Pellentesque facilisis. Nulla imperdiet sit amet magna. Vestibulum dapibus, mauris nec malesuada fames ac turpis velit, rhoncus eu,\r\n    luctus et interdum adipiscing wisi. Aliquam erat ac ipsum. Integer aliquam purus. Quisque lorem tortor fringilla sed, vestibulum id, eleifend justo vel bibendum sapien massa ac turpis faucibus orci luctus non, consectetuer lobortis quis, varius in,\r\n    paragraph.&lt;/p&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p><sup>1</sup><sub>The <a href=\"http://dev.w3.org/csswg/css-shapes/#shape-outside\" rel=\"nofollow\">CSS Shapes Module Level 1</a> actualy (jan 2015) has the status of \"Candidate Recommendation\". As this means it is a work in progress, it may change at any moment and therefore should not be used other than for testing.</sub></p>\n\n<p>For a <strong>crossbrowser approach</strong> please see <a href=\"http://stackoverflow.com/a/27880363/1811992\">Tymek's answer</a>.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<h2>Using LESS</h2>\n\n<p>You guys made me think a bit more outside of the box, so I came out with my own ugly solution.\nMy idea is to <strong>add a bunch of extra square elements and calculate its size</strong>:</p>\n\n<pre><code>.loop(@i) when (@i &gt; 0){\n  .loop((@i - 1));\n  .space@{i}{\n    width: floor(@i*@h-size/(1/tan(5deg)));\n  }\n}\n@h-size: 15px;\n.space {\n  float: left;\n  clear: left;\n  width: @h-size;\n  height: @h-size;\n}\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;p&gt;\n  &lt;span class=\"space space1\"&gt;&lt;/span&gt;\n  &lt;span class=\"space space2\"&gt;&lt;/span&gt;\n  &lt;!-- (...) --&gt;\n  &lt;span class=\"space space11\"&gt;&lt;/span&gt;\n  Lorem ipsum dolor sit amet. Vestibulum commodo volutpat a, convallis ac, laoreet enim. Phasellus fermentum in, dolor. Pellentesque facilisis. Nulla imperdiet sit amet magna. Vestibulum dapibus, mauris nec malesuada fames ac turpis velit, rhoncus eu, luctus et interdum adipiscing wisi. Aliquam erat ac ipsum. Integer aliquam purus. Quisque lorem tortor fringilla sed, vestibulum id, eleifend justo vel bibendum sapien massa ac turpis faucibus orci luctus non, consectetuer lobortis quis, varius in, paragraph.\n&lt;/p&gt;\n</code></pre>\n\n<h3>Proof of concept: <a href=\"http://codepen.io/Tymek/pen/jEypOX?editors=110\" rel=\"nofollow\">http://codepen.io/Tymek/pen/jEypOX?editors=110</a></h3>\n\n<p><strong>@chipChocolate.py</strong>, it was just a matter of principle for me NOT to use JavaScript for this. If anyone wants to write JS/jQuery code based on my solution, you're welcome. Please share it here afterwards.</p>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>Is it posible to make this text follow the shape of the image with required support for IE9+?</p>\n\n<p><img src=\"http://i.stack.imgur.com/4vc2R.png\" alt=\"slanted text flow\"></p>\n\n<p>My example code:  <a href=\"http://jsfiddle.net/Tymek/xt246abr/\">http://jsfiddle.net/Tymek/xt246abr/</a></p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div&gt;\n    &lt;img src=\"http://placehold.it/150x250&amp;text=img\" alt=\"image\"/&gt;\n    &lt;p&gt;Lorem ipsum dolor sit amet. Vestibulum commodo volutpat a, convallis ac, laoreet enim. Phasellus fermentum in, dolor. Pellentesque facilisis. Nulla imperdiet sit amet magna. Vestibulum dapibus, mauris nec malesuada fames ac turpis velit, rhoncus eu, luctus et interdum adipiscing wisi. Aliquam erat ac ipsum. Integer aliquam purus. Quisque lorem tortor fringilla sed, vestibulum id, eleifend justo vel bibendum sapien massa ac turpis faucibus orci luctus non, consectetuer lobortis quis, varius in, paragraph.&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>img {\n    display: block;\n    float: left;\n    transform: rotate(-5deg);\n    margin: 0 15px;\n}\n</code></pre>\n",
            "last_activity_date": 1424041213,
            "question_id": 27876883,
            "score": 12,
            "tags": [
                "javascript",
                "html",
                "css",
                "css3",
                "css-shapes"
            ],
            "title": "CSS text flow around slanted image"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You have to use <a href=\"http://api.jquery.com/change/\"><strong>.change()</strong></a> to trigger the change event listener:</p>\n\n<pre><code>$(\"body\").on(\"change\", \".ch\", function () {\n    alert(\"checked\");\n});\n\n\n$(\"body\").on(\"click\", \"#select\", function () {\n    $(this).parent(\"div\").find(\"input[type=checkbox]\").prop(\"checked\", true).change();\n});\n</code></pre>\n\n<h2><a href=\"http://jsbin.com/OWaGOQe/7/edit\">JSBbin</a> or <a href=\"http://jsfiddle.net/ETjqE/\">Fiddle</a></h2>\n\n<p>Please note that this will fire many events. Three in the html example you have in jsBin.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Trigger the event from inside your function:</p>\n\n<pre><code>$(\"body\").on(\"click\", \"#select\", function(){\n  $(this).parent(\"div\").find(\"input[type=checkbox]\").prop(\"checked\", true).trigger(\"change\");\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>boxes checked using jQuery <code>prop()</code> do not affect listeners attached to <code>change</code> handler.</p>\n\n<p>My code is something like</p>\n\n<p>HTML</p>\n\n<pre><code>&lt;div&gt;\n    &lt;label&gt;\n        &lt;input type=\"checkbox\" class=\"ch\" /&gt;test&lt;/label&gt;\n    &lt;label&gt;\n        &lt;input type=\"checkbox\" class=\"ch\" /&gt;test&lt;/label&gt;\n    &lt;label&gt;\n        &lt;input type=\"checkbox\" class=\"ch\" /&gt;test&lt;/label&gt;\n    &lt;input type=\"button\" value=\"check the box\" id=\"select\" /&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>JS</p>\n\n<pre><code> $(\"body\").on(\"change\", \".ch\", function(){\n\n  alert(\"checked\");\n\n});\n\n\n$(\"body\").on(\"click\", \"#select\", function(){\n\n  $(this).parent(\"div\").find(\"input[type=checkbox]\").prop(\"checked\", true);\n\n});\n</code></pre>\n\n<p>the alert fires when I click on the checkbox. How can I make it fire when the property of the checkbox changes? <a href=\"http://jsbin.com/OWaGOQe/1/edit\">JSBIN</a></p>\n",
            "last_activity_date": 1382395157,
            "question_id": 19505011,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "checkbox checked with prop() does not fire events attached to &quot;change&quot;"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Your <code>less</code> configuration isn't working because you need to put it into a specific <code>target</code> within <code>less</code>.  For example</p>\n\n<pre><code>less: {\n   yourTarget : {\n        files: {\n            \"httpdocs/static/assets/css/result.css\": \"httpdocs/static/assets/css/dashboard.less\"\n        }\n   }\n},\n</code></pre>\n\n<p>and run using</p>\n\n<p><code>grunt less:yourTarget</code></p>\n\n<p>You can name the <code>target</code> what ever you want but because <code>less</code> is a multi-task, it needs to have at least one target.</p>\n\n<p><a href=\"https://github.com/gruntjs/grunt/wiki/Configuring-tasks#task-configuration-and-targets\">Docs on configuring tasks with targets.</a></p>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p>I'm trying to get grunt-contrib-less to compile a less file for me. I have the following gruntfile:</p>\n\n<pre><code>less: {\n        files: {\n            \"httpdocs/static/assets/css/result.css\": \"httpdocs/static/assets/css/dashboard.less\"\n        }\n    },\n</code></pre>\n\n<p>The paths are definitely correct, I've triple checked that those files exist, yet, when I run grunt I get the following message:</p>\n\n<pre><code>Running \"less:files\" (less) task\n&gt;&gt; Destination not written because no source files were provided.\n</code></pre>\n\n<p>What am I missing from my gruntfile to make it properly compile the less file? I'm tearing my hair out because I know it's probably something really simple but I can't figure it out.</p>\n",
            "last_activity_date": 1374105561,
            "question_id": 17712214,
            "score": 12,
            "tags": [
                "javascript",
                "css",
                "compilation",
                "less",
                "gruntjs"
            ],
            "title": "grunt-contrib-less cannot find source files even though path is correct"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Pls use the below filter modify if required for some modifications </p>\n\n<pre><code>  app.filter('customNo', function () {\n            return function (input) {\n                var n = input;\n                return (n &lt; 10) ? '000' + n : (n &lt; 100) ? '00' + n : (n &lt; 1000) ? '0' + n : '' + n;\n            }\n        });\n\n\n&lt;span&gt;{{number|customNo}}&lt;/span&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Let's say you have a module called <code>myModule</code> in your app <code>myApp</code>:</p>\n\n<pre><code>angular.module('myApp', ['myModule']);\n</code></pre>\n\n<p>Define your filter in in this module:</p>\n\n<pre><code>angular.module('myModule', [])\n    .filter('numberFixedLen', function () {\n        return function (n, len) {\n            var num = parseInt(n, 10);\n            len = parseInt(len, 10);\n            if (isNaN(num) || isNaN(len)) {\n                return n;\n            }\n            num = ''+num;\n            while (num.length &lt; len) {\n                num = '0'+num;\n            }\n            return num;\n        };\n    });\n</code></pre>\n\n<p>Use your filter in markup:</p>\n\n<pre><code>{{myValue | numberFixedLen:4}}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>Keeping it minimal... (works with both strings &amp; numbers) Do some validation if you have to (isNumber, NaN)</p>\n\n<pre><code>// 1e32 is enogh for working with 32-bit\n// 1e8 for 8-bit (100000000)\n// in your case 1e4 (aka 10000) should do it\napp.filter('numberFixedLen', function () {\n    return function(a,b){\n        return(1e4+a+\"\").slice(-b)\n    }\n});\n</code></pre>\n\n<p>html:</p>\n\n<pre><code>{{myValue | numberFixedLen:4}}\n</code></pre>\n\n<hr>\n\n<p><strong>Note</strong> This has less flexibility and this will only work for numbers lower then 10000 if it's a bigger number you would have to increase both <code>4</code> and <code>1e4</code> or use any other dynamic solution.<br>This was intended to do as little as possible as fast as possible.</p>\n\n<p>It is intentionally the same thing as doing:</p>\n\n<pre><code>(\"10000\"+1234567).slice(-4) // \"4567\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Another example:</p>\n\n<pre><code>// Formats a number to be at least minNumberOfDigits by adding leading zeros\napp.filter('LeadingZerosFilter', function() {\n  return function(input, minNumberOfDigits) {\n    minNumberOfDigits = minNumberOfDigits || 2;\n    input = input + '';\n    var zeros = new Array(minNumberOfDigits - input.length + 1).join('0');\n    return zeros + input;\n  };\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Minimum code with <code>_.str</code> angular padding filter:</p>\n\n<p><a href=\"http://jsfiddle.net/plantface/y9L920fw/\" rel=\"nofollow\">jsFiddle</a></p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;div ng-app=\"app\" ng-controller=\"PadController\"&gt;\n   &lt;div ng-repeat=\"num in nums\"&gt;{{ num | _.str: 'pad':[4, '0'] }}&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<pre class=\"lang-js prettyprint-override\"><code>angular.module('app', ['underscore.string']).controller('PadController', function ($scope) {\n    $scope.nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could just use pure JavaScript such as</p>\n\n<pre><code>('00000'+refCounter).substr(-5,5)\n</code></pre>\n\n<p>for padding with 5 zeros the value of <strong>refCounter</strong>.</p>\n\n<p>NOTE: Make sure to check that <strong>refCounter</strong> is not <strong>undefined</strong>, otherwise you'll get an exception.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I checked the document </p>\n\n<p><a href=\"http://docs-angularjs-org-dev.appspot.com/api/ng.filter:number\">http://docs-angularjs-org-dev.appspot.com/api/ng.filter:number</a></p>\n\n<p>But it's still not clear to me.  What I would like is for my numbers to have four digits and leading zeros. </p>\n\n<pre><code>22 &gt; 0022\n1  &gt; 0001\n</code></pre>\n\n<p>Can someone help and tell me if this is possible with the number or another kind of filter?</p>\n",
            "last_activity_date": 1423563083,
            "question_id": 17648014,
            "score": 12,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "How can I use an AngularJS filter to format a number to have leading zeros?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>No, not all browsers support <code>console.log</code> as it is not part of the standard and is an extension of the DOM  and thus you should not count on its presence. To make your code resilient you should assume it <em>does not</em> exist and code accordingly.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Most browsers do, however Internet Explorer 9 has issues with it where it wont run any javascript unless you have the debug window open. Took us hours to find the solution to that problem.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Make a wrapper function:</p>\n\n<pre><code>function log(text) {\n  if (window.console) {\n     window.console.log(text);\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I've done something like this in the past:</p>\n\n<pre><code>// Log to native console if possible, alert otherwise\nwindow.console = typeof window.console === 'undefined'\n    ? {log:function(str){alert(str)}}\n    : window.console;\n</code></pre>\n\n<p>You can put that at the \"top\" of your JS and it works pretty nicely when you're forced to do debugging w/ a browser that doesn't support <code>console</code>, and doesn't require you to change your other JS source that's already calling <code>console.log</code> all over the place.  Of course you might want to do something other than <code>alert</code> to preserve your sanity...</p>\n\n<p><a href=\"http://jsfiddle.net/4dty5/\" rel=\"nofollow\">http://jsfiddle.net/4dty5/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Althought, not all browser support that, however it can be accomplished with a small chunk of code.</p>\n\n<p>In his book, \"Secrets of Javascript Ninja\", John Resign (creator of jQuery) has a really simple code which will handle cross-browser console.log issues. He explains that he would like to have a log message which works with all browsers and here is how he coded it:</p>\n\n<pre><code> function log() {\n  try {\n     console.log.apply(console, arguments);\n  } catch(e) {\n  try {\n     opera.postError.apply(opera, arguments);\n  }\n  catch(e) {\n     alert(Array.prototype.join.call( arguments, \" \"));\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This code will check to see if the function exists and create a dummy in case it does not. Credit: <a href=\"http://stackoverflow.com/a/9593812/441878\">StackOverflow</a></p>\n\n<pre><code>if (!window.console) window.console = {};\nif (!window.console.log) window.console.log = function () { };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is a workaround for when <code>console.log()</code> is not available. You have to retrieve the <code>console.logs</code> yourself.</p>\n\n<pre><code>  if (!window.console) window.console = {};\n  if (!window.console.log) \n  {\n    window.console.logs = [];\n    window.console.log = function (string)\n    {\n      window.console.logs.push(string);\n    };\n  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Do all browsers support this?  I would like to output an error using <code>console.log()</code> but was wondering if this supported by all browsers?</p>\n\n<pre><code>console.log(\"Error etc\");\n</code></pre>\n",
            "last_activity_date": 1423831982,
            "question_id": 14086675,
            "score": 12,
            "tags": [
                "javascript",
                "cross-browser",
                "console.log"
            ],
            "title": "Which browsers support console.log()?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>parseFloat</code> doesn't use your locale's definition, but the definition of a decimal literal. </p>\n\n<p>It only parses <code>.</code> not <code>,</code></p>\n\n<p>I'm brazilian and I have to replace comma with dot before parsing decimal numbers.</p>\n\n<p><a href=\"http://es5.github.com/#x15.1.2.3\">parseFloat specification</a></p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>No, <a href=\"http://ecma-international.org/ecma-262/5.1/#sec-15.1.2.3\" rel=\"nofollow\"><code>parseFloat</code> is specified</a> to parse <a href=\"http://ecma-international.org/ecma-262/5.1/#sec-A.2\" rel=\"nofollow\"><code>DecimalLiterals</code></a>, which use the dot as decimal separator. It does not depend on the current environment's locale settings.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It\u2019s not just Sweden/Brazil. F.ex in US they often add commas in large numbers, like <code>$5,762,325.25</code>. </p>\n\n<p>The <code>parseFloat</code> function essentially deals with decimals, not locale strings. </p>\n\n<p>In general, JavaScript can sometimes convert generic strings/numbers/dates to locale-friendly formats, but not the other way around.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a question about the default behavior of JavaScript's parseFloat function in different parts of the world. </p>\n\n<p>In the US, if you call parseFloat on a string \"123.34\", you'd get a floating point number 123.34. </p>\n\n<p>If I'm developing code in say Sweden or Brazil and they use a comma instead of a period as the decimal separator, does the parseFloat function expect \"123,34\" or \"123.34\". </p>\n\n<p>Please note that I'm not asking how to parse a different culture's number format in the US. I'm asking does parseFloat in Sweden or Brazil behave the same way it does inside the US, or does it expect a number in its local format? Or to better think about this, does a developer in Brazil/Sweden have to convert strings to English format before it can use parseFloat after extracting text from a text box?</p>\n\n<p>Please let me know if this doesn't make sense.</p>\n",
            "last_activity_date": 1349197123,
            "question_id": 12694455,
            "score": 12,
            "tags": [
                "javascript",
                "culture"
            ],
            "title": "JavaScript parseFloat in Different Cultures"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I think that the <code>&lt;%= \u2026 %&gt;</code> syntax (variable interpolation in <a href=\"http://underscorejs.org/#template\" rel=\"nofollow\">Underscore's template system</a>) can only output strings, not arrays/objects.</p>\n\n<p>Try this instead:</p>\n\n<pre><code>lint: {\n    files: '&lt;config:pkg.lint&gt;'\n}\n</code></pre>\n\n<p>I found this syntax in Grunt's <a href=\"https://github.com/cowboy/grunt/blob/master/tasks/init/jquery/root/grunt.js#L33\" rel=\"nofollow\">jQuery init task</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Since gruntjs in run in node you can access the package.json like:</p>\n\n<pre><code>var package = require('./package.json'),\n    property = package.property[0];\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                }
            ],
            "body": "<p>is there a way to pass in an array to grunt.js from the package.json file? I've tried a few different ways and none of them seem to work. I currently have:</p>\n\n<pre><code>/*global module:false*/\nmodule.exports = function(grunt) {\n\n     // Project configuration.\n     grunt.initConfig({\n    pkg: '&lt;json:package.json&gt;',\n\n    lint: {\n      files: '&lt;%= pkg.lint.join(\", \") %&gt;'\n    }\n\n    // Default task 'lint qunit concat min'\n    grunt.registerTask('default', 'lint');\n};\n</code></pre>\n\n<p>package.json</p>\n\n<pre><code>{\n  \"lint\": [   \n              \"grunt.js\",\n              \"test.js\"\n          ]\n}\n</code></pre>\n\n<p>The only solution that I have been able to find is to pass in a specific index of the array; e.g. &lt;%= pkg.lint[0] %>. \nThanks in advance for your help!</p>\n",
            "last_activity_date": 1347636764,
            "question_id": 12408535,
            "score": 12,
            "tags": [
                "javascript",
                "underscore.js",
                "gruntjs"
            ],
            "title": "How to pass in package.json array to grunt.js"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><code>JSON</code> was standardised in <a href=\"http://es5.github.com/#x15.12\">ECMAScript 5</a>, so browsers that conform to that specification include <code>JSON</code>, but others browsers don't (such as those that were released <em>before</em> ECMAScript 5/ IE). If you need to support these browsers, you still need to include it.</p>\n\n<p>Specifically, <code>JSON</code> was introduced in:</p>\n\n<ul>\n<li>IE8, </li>\n<li>FireFox 3.5 -</li>\n<li>Opera 10.5. </li>\n<li>Chrome (1) (AFAIK)</li>\n</ul>\n\n<p><code>json2.js</code> <a href=\"https://github.com/douglascrockford/JSON-js/blob/master/json2.js#L406\">checks</a> whether <code>JSON.parse</code> is already implemented, and only provides it's implementation if it doesn't; so think of it as a sort of polyfiller for older browsers.</p>\n\n<p><sup>Sources: <a href=\"http://kangax.github.com/es5-compat-table/\">http://kangax.github.com/es5-compat-table/</a>, <a href=\"http://caniuse.com/#feat=json\">http://caniuse.com/#feat=json</a></sup></p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>Update: Now everyone on IE8 should have the patch (or alternatively a virus!), so if you are supporting IE8+ in document mode 8 or greater, then I suggest remove the Json2 library and use the native JSON.stringify() instead.</p>\n\n<p>There are a variety of situations where you need to use the json2 library:</p>\n\n<ul>\n<li><p>IE10, IE9, IE8:  If the document uses <strong>IE7 mode</strong> or <strong>compatibility mode</strong> then you must use json2. If your document can be <strong>iframe</strong>'d or framed, you might need to test what happens if the host frame is in IE7 mode (weird shit happens with document modes and frames!).</p></li>\n<li><p>IE8 - Using json2 is the most reliable way to avoid bugs in <strong>unpatched IE8</strong>. The bugs in JSON.stringify() and JSON.parse() have been patched for a few years but some consumers will be missing the patches, and your customers will get undebuggable errors which is very undesirable (See below for possible workaround).</p></li>\n<li><p><strong>IE7</strong> - you need to use json2.</p></li>\n<li><p>Various other old browsers need json2 e.g. iPhone 1. For a detailed breakdown of native support, tick the \"Show all browsers\" option here: <a href=\"http://caniuse.com/#search=JSON\" rel=\"nofollow\">http://caniuse.com/#search=JSON</a></p></li>\n</ul>\n\n<h2>WORKAROUND for unpatched IE8</h2>\n\n<p>Background: Older versions of IE8 using jscript.dll (e.g. 5.8.6001.18702) have a variety of bugs and non-standard behaviour in the JSON implementation. <a href=\"http://support.microsoft.com/kb/976662\" rel=\"nofollow\">http://support.microsoft.com/kb/976662</a> (jscript.dll 5.8.6001.22960) patches those bugs. The bugs are also fixed in a later jscript.dll version 5.8.6001.23141 (I don't know which KB is related to that). Some of the issues are discussed here: <a href=\"http://blogs.msdn.com/b/jscript/archive/2009/06/23/serializing-the-value-of-empty-dom-elements-using-native-json-in-ie8.aspx\" rel=\"nofollow\">http://blogs.msdn.com/b/jscript/archive/2009/06/23/serializing-the-value-of-empty-dom-elements-using-native-json-in-ie8.aspx</a> and here: <a href=\"http://blogs.msdn.com/b/jscript/archive/2009/06/23/native-json-support-in-ie8-and-tracking-the-ecmascript-fifth-edition-draft-specification.aspx\" rel=\"nofollow\">http://blogs.msdn.com/b/jscript/archive/2009/06/23/native-json-support-in-ie8-and-tracking-the-ecmascript-fifth-edition-draft-specification.aspx</a></p>\n\n<p>Buggy versions can be detected using:</p>\n\n<pre><code>var kb976662bug = (document.documentMode === 8) &amp;&amp; (JSON.stringify(document.createElement('input').value) === '\"null\"';\n</code></pre>\n\n<p>The only corner case that affected us was due to an empty string generating <code>\"null\"</code> instead of <code>\"\"</code>. So we removed the JSON2 library and instead we use a workaround that has code like:</p>\n\n<pre><code>if (kb976662bug) {\n    return JSON.stringify(o, function(k, v) {\n        return (v === '') ? '' : v;\n    });\n} else {\n    return JSON.stringify(o);\n}\n</code></pre>\n\n<p>which has worked for a long time in our production code.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Quick question. Is there any need to include the <a href=\"http://www.json.org/js.html\">Json2 library</a> anymore? Did I read somewhere that JavaScript supports JSON as standard these days so there's no need to parse it anymore?</p>\n\n<p>Any advantages or disadvantages to Json2 vs standard JavaScript support?</p>\n",
            "last_activity_date": 1420145170,
            "question_id": 9736152,
            "score": 12,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "Json2/Json3 library required still?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><em>See edit below &ndash; this doesn't apply to this question, but is still true:</em> In JavaScript, only complex types (objects and arrays) are passed by reference.  Primitive types (string, number, and boolean) are passed by value; changing a parameter would only affect that variable in the local function.</p>\n\n<pre><code>var primitive = 1;\nvar complex = { prop: 1 };\n\nfunction func1() {\n    change(primitive, complex);\n    // primitive == 1\n    // complex == { prop: 2 }\n}\n\nfunction change(a,b) {\n    a++;\n    b.prop++;\n}\n</code></pre>\n\n<p><hr>\n<strong>Edit:</strong> I missed that you are passing the <code>arguments</code> object.  <a href=\"http://jsfiddle.net/josh3736/QVUyB/\" rel=\"nofollow\">A quick test</a> yields the same results in Chrome 13, IE 9, Firefox 4, and Opera 10.62.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It is valid under EcmaScript 3 and EcmaScript 5 non-strict, but it is not valid under EcmaScript 5 strict mode.  It works in all modern browsers and most old ones.  It should not work in strict mode such as when run in Firefox 5 with a <code>\"use strict\"</code> directive.</p>\n\n<p>From the <a href=\"http://es5.github.com/#x10.6\">EcmaScript 5 spec</a> section 10.6.11.c.ii</p>\n\n<blockquote>\n  <p>10.6 Arguments Object</p>\n  \n  <p>...</p>\n  \n  <p>If strict is false and name is not an element of mappedNames, then</p>\n  \n  <ol>\n  <li><p>Add name as an element of the list mappedNames.</p></li>\n  <li><p>Let g be the result of calling the MakeArgGetter abstract operation with arguments\n  name and env.</p></li>\n  <li><p>Let p be the result of calling the MakeArgSetter abstract operation with arguments\n  name and env.</p></li>\n  <li><p>Call the [[DefineOwnProperty]] internal method of map passing ToString(indx), the\n  Property Descriptor {[[Set]]: p, [[Get]]: g, [[Configurable]]: true}, and false as\n  arguments.</p></li>\n  </ol>\n</blockquote>\n\n<p>Basically, the <code>arguments</code> object gets a setter for each index so that assigning to <code>arguments[i]</code> changes the value of the named parameter at position <code>i</code>.  There is language in the spec which makes it work vice-versa.</p>\n\n<p>This should work in non-strict mode in any interpreter</p>\n\n<pre><code>(function (x) {\n  alert(\"x=\" + x + \", arguments[0]=\" + arguments[0]);  // Both should be 0\n  arguments[0] = 1;\n  alert(\"x=\" + x + \", arguments[0]=\" + arguments[0]);  // both should be 1\n  x = 2;\n  alert(\"x=\" + x + \", arguments[0]=\" + arguments[0]);  // both should be 2\n })(0);\n</code></pre>\n\n<p>But if you run the above on Firefox 5 with a use strict directive you get different behavior:</p>\n\n<pre><code>(function (x) {\n  \"use strict\";\n\n  alert(\"x=\" + x + \", arguments[0]=\" + arguments[0]);  // Both should be 0\n  arguments[0] = 1;\n  alert(\"x=\" + x + \", arguments[0]=\" + arguments[0]);  // x=0, arguments[0]=1\n  x = 2;\n  alert(\"x=\" + x + \", arguments[0]=\" + arguments[0]);  // x=2, arguments[0]=1 \n })(0);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Yes, where \"all browsers\" is a reasonable list of modern, Javascript enabled browsers.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>arguments</code> is an array-like Object, but an Object nonetheless.  So when you pass it as a parameter to another function it will be passed by reference.  Thus when you mutate any values they will change in the original <code>arguments</code> object as well.  So this will work as you propose.  As far as I know passing objects by reference is supported in all browsers, however in EcmaScript 5 strict mode the arguments object index named properties are not dynamically mapped to the named formal parameters any more, so this wouldn't work.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Because <code>c</code> was not passed in when calling <code>func1()</code>, it will not be included in the arguments. Therefor setting <code>args[2] = []</code> in <code>change_em()</code> will not also set <code>c</code> in the parent function.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is this legal? And does it work in all browsers?</p>\n\n<pre><code>function func1(a, b, c) {\n  //b == 2 here\n  change_em(arguments);\n  //b should equal 3 here\n}\n\nfunction change_em(args) {\n  args[0] = 6;\n  args[1]++;\n  args[2] = [];\n}\n\nfunc1('foo', 2);\n</code></pre>\n\n<p>If you are wondering, I need to adjust the arguments in a function. A macro would be perfect, except javascript doesn't have one. Doing it properly, i.e. passing the variables to a function, then returning them in an object, and then extracting them in the caller would be almost as much code as just copy/pasting the adjuster function.</p>\n",
            "last_activity_date": 1308712008,
            "question_id": 6433554,
            "score": 12,
            "tags": [
                "javascript",
                "function",
                "variables",
                "arguments"
            ],
            "title": "Is this legal javascript? Passing arguments to function and having it change them"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I believe this is because the ternary operator evaluates the expression and returns a value that is expected to be assigned.  For example:</p>\n\n<pre><code>var test = (my_var &gt; 0) ? true : false;\n</code></pre>\n\n<p>However, you are using it like a regular if/then/else statement.  While the ternary operator does perform if/then/else, it is traditionally used in assignents.</p>\n\n<p>EDIT: As an addendum: would this statement make sense to you?</p>\n\n<pre><code>var foo = 1;\n(my_var &gt; 0) ? true : false;\nconsole.log('hello world');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>you are using an expression (an expression using the ternary operator to be precise) in a single line: your line is comprised uniquely of an expression.</p>\n\n<p>this is considered poor programming practice in many language, and could be rewritten using an <code>if</code> statement to render this line more clear.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>My guess would be that JSLint is unhappy since you're using the ternary operator, and you're not doing anything with the value. Refactoring this into the equivalent:</p>\n\n<pre><code>if (my_var &gt; 0 ) {\n  $(\"#abc\").html(my_array.join(''));\n} else {\n  $(\"#abc\").html('&lt;h2&gt;Hello ' + persons_name);\n}\n</code></pre>\n\n<p>would eliminate the error. If for some reason you're really attached to using the ternary operator, the \"right\" way to use it would be:</p>\n\n<pre><code>$(\"#abc\").html((my_var &gt; 0) ? my_array.join('') : '&lt;h2&gt;Hello ' + persons_name);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Just asked the same Q without finding this one for some reason...</p>\n\n<p>The ternary returns a value that isn't being used so you're abusing the ternary structure by not using the value (even though the function calls are being made as intended).</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am using <a href=\"http://JSLint.com\" rel=\"nofollow\">JSLint</a> to ensure my JavaScript is \"strict\" and I'm getting the following error:</p>\n\n<blockquote>\n  <p>Expected an assignment or function call and instead saw an expression</p>\n</blockquote>\n\n<p>On the following code:</p>\n\n<pre><code>(my_var &gt; 0 ) ? $(\"#abc\").html(my_array.join('')) : $(\"#abc\").html('&lt;h2&gt;Hello ' + persons_name);\n</code></pre>\n\n<p>Any ideas why I'm getting such an error? Also, I'm using jQuery as seen in the above code, in case that makes a difference.</p>\n",
            "last_activity_date": 1421889136,
            "question_id": 4167113,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "jslint"
            ],
            "title": "JavaScript: Error - &quot;Expected an assignment or function call and instead saw an expression&quot;?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>This should help you, have a look of the values for the following:</p>\n\n<pre><code>navigator[\"appCodeName\"]\nnavigator[\"appName\"]\nnavigator[\"appMinorVersion\"]\nnavigator[\"cpuClass\"]\nnavigator[\"platform\"]\nnavigator[\"plugins\"]\nnavigator[\"opsProfile\"]\nnavigator[\"userProfile\"]\nnavigator[\"systemLanguage\"]\nnavigator[\"userLanguage\"]\nnavigator[\"appVersion\"]\nnavigator[\"userAgent\"]\nnavigator[\"onLine\"]\nnavigator[\"cookieEnabled\"]\nnavigator[\"mimeTypes\"]\n\n\n&lt;script&gt;\n   var x = '';\n   for(var p in navigator)\n       x += p + '=' + navigator[p] + \"\\n\";\n   alert(x);\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>For more javascript oriented information see <a href=\"http://api.jquery.com/jQuery.support/\">jquery.support</a>\nIt returns information about real browser capabilities (and drawbacks).</p>\n\n<p>Requires using jQuery, but I would recommend it for almost any javascript development ;)</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Basically I'm looking for something to give me easy access to information like <a href=\"http://useragentstring.com\">useragentstring.com</a>, but in JS, without me parsing the user agent and looking for each possible bit of text. The object could be something like this:</p>\n\n<pre><code>browser      = UserAgent.Browser;                // Chrome\nbrowserVer   = UserAgent.BrowserVersion;         // 5.0.342.9\nos           = UserAgent.OperatingSystem;        // Windows NT\nosVer        = UserAgent.OperatingSystemVersion; // 6.1\nlayoutEng    = UserAgent.LayoutEngine;           // WebKit\nlayoutEngVer = UserAgent.LayoutEngineVersion;    // 533.2\n</code></pre>\n\n<p>Does something similar to that exist or do I have to write one myself? Writing yet another user agent parser doesn't seem that easy with all those impersonations going back to the dark ages of the web.</p>\n\n<p>Specifically I'm looking for something that doesn't just split the user agent into parts and give them to me, because that's as useless as the user agent itself; instead it should parse the user agent and recognize the engine, browser, OS, etc. and return the concrete parts only, as in the example.</p>\n",
            "last_activity_date": 1271696993,
            "question_id": 2599002,
            "score": 12,
            "tags": [
                "javascript",
                "user-agent"
            ],
            "title": "JavaScript - get detailed information about the browser"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>There's a <a href=\"http://www.mozilla.org/rhino/shell.html\" rel=\"nofollow\">command line version</a> of the <a href=\"http://www.mozilla.org/rhino/\" rel=\"nofollow\">Rhino</a> JavaScript interpreter.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>It is called <a href=\"http://www.mozilla.org/rhino/\" rel=\"nofollow\">Rhino</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Windows has <a href=\"http://msdn.microsoft.com/en-us/library/ms950396.aspx\" rel=\"nofollow\">built-in javascript scripting</a>. Double-click on any .js file to execute it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Most JavaScript engines have a standalone interpreter available:</p>\n\n<ul>\n<li><a href=\"http://www.mozilla.org/js/spidermonkey/\" rel=\"nofollow\">Spidermonkey</a> (Firefox's interpreter) I couldn't find a direct for the shell, but I'm pretty sure it's part of the normal download.</li>\n<li><a href=\"https://developer.mozilla.org/en/Rhino_Shell\" rel=\"nofollow\">Rhino</a> (Mozilla's Java-based interpreter)</li>\n<li><a href=\"http://stackoverflow.com/questions/1802478/running-v8-javascript-engine-standalone/1802613\">V8</a> (Google Chrome's interpreter)</li>\n</ul>\n\n<p>I've found Rhino to be the most useful, because you can access any Java classes. The Spidermonkey and V8 shells are pretty basic. You could also try the <a href=\"http://narwhaljs.org/\" rel=\"nofollow\">Narwhal project</a>, which has a CommonJS-compatible library for multiple engines. Rhino is their primary engine and has the best support though. I haven't tried it on any other engines.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>JavaScript is not useful as a general purpose scripting language. JavaScript proper provides no access to the local filesystem. Depending on the implementation of the interpreter, you can do extra stuff.</p>\n\n<p><a href=\"https://developer.mozilla.org/En/SpiderMonkey/Introduction_to_the_JavaScript_shell\" rel=\"nofollow\">SpiderMonkey</a> extends JavaScript with <code>print()</code> and <code>readline()</code> functions, but that only gets you stdin and stdout. You can't open a text file and read it. There's nothing analogous to Perl's <code>system()</code> command.</p>\n\n<p><a href=\"http://msdn.microsoft.com/en-ca/library/yek4tbz0%28VS.85%29.aspx\" rel=\"nofollow\">JScript</a> is build on top of Windows Scripting Host, so you can do just about anything by creating ActiveX objects (like you'd do with VBScript).</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>you can build your own v8 engine, it doesn't require Java. Here is the documentation - <a href=\"http://code.google.com/apis/v8/build.html\" rel=\"nofollow\">http://code.google.com/apis/v8/build.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can try with <a href=\"http://code.google.com/p/jslibs/\" rel=\"nofollow\">jslibs</a> (a standalone JavaScript runtime) project.<br>\nIt provides an <a href=\"http://code.google.com/p/jslibs/source/browse/trunk/tests/miniInteractiveConsole.js\" rel=\"nofollow\">interactive console</a> as example.</p>\n\n<p>HIH</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>When this question was asked in 2010, node.js was not popular or just at its beginnings. Subsequently it has become quite popular as a server side programming language with fairly good library support. </p>\n\n<p>For anyone looking to write JavaScript code in Bash, node.js is the way to go. </p>\n\n<p><a href=\"http://nodejs.org/\">http://nodejs.org/</a></p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>JSDB (<a href=\"http://www.jsdb.org/\" rel=\"nofollow\">www.jsdb.org</a>) is a general-purpose scripting environment available for GNU/Linux, Macintosh, SunOS and Windows, with good documentation and (as the name suggests) lots of support for database access. As well as web, email and XML handling, apparently.</p>\n\n<p>It is open source (though not GPL, check the <a href=\"http://www.jsdb.org/license.html\" rel=\"nofollow\">license page</a>) and based on SpiderMonkey. </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there a JavaScript interpretor available in Bash (or for that matter any other shell) just like there is for Perl and Python. I have written some JavaScript code as part of web programming and was wondering if its used as a shell scripting language as well? </p>\n\n<p><i>Note : Please feel free to edit this question, if it feels subjective.</i></p>\n\n<p><b>Update:</b> node.js was not popular when this question was asked, but subsequently has become quite well known. </p>\n",
            "last_activity_date": 1394709740,
            "question_id": 2283234,
            "score": 12,
            "tags": [
                "javascript",
                "shell"
            ],
            "title": "JavaScript interpretor in Bash"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>these are easily doable with JavaScript, <code>&lt;audio&gt;</code> and <code>&lt;video&gt;</code> (and <code>&lt;canvas&gt;</code>!) aren't.</p>\n\n<p>Relying on JavaScript libraries are not a bad thing.  If the browser did all, every webpage would look the same.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The state of form and input controls on in browsers is a big mess in general.</p>\n\n<ul>\n<li>There's no consistency to implementation. Some use OS native controls (Safari), some use bespoke controls (Opera), and some use a mix of both (IE)</li>\n<li>Because of the above, styling/branding a form is not reliable</li>\n<li>Again because of the above, we suffer(ed) with z-index issues.</li>\n<li>Even on browsers where you can apply style, it's inconsistent.  Ever add a CSS border to <code>input</code> only to see squares around your radio buttons?</li>\n</ul>\n\n<p>In general, I tend to agree with you. We've been living with the same form controls <a href=\"http://htmlhelp.com/reference/html40/new.html\" rel=\"nofollow\">since HTML 3</a>.  So us web developers are left to create more rich and advanced controls on our own. And while these can work, they rely heavily on DHTML and can have significant usability implications.</p>\n\n<p>It would be nice to see advancement in this area.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Actually, an editable combobox or just combobox can be created using the new list attribute on the input element. It points to a datalist element that can provide a list of predefined options:</p>\n\n<pre><code>&lt;input list=languages>\n&lt;datalist id=languages>\n &lt;option value=\"English\">&lt;/option>\n &lt;option value=\"Dutch\">&lt;/option>\n&lt;/datalist></code></pre>\n\n<p>For menus the old menu element has been reused.</p>\n\n<p>Of these two features only the first has an implementation, in Opera.</p>\n",
                    "is_accepted": true,
                    "score": 29
                }
            ],
            "body": "<p>I was wondering, in the new HTML 5, we will get &lt;audio> and &lt;video> tags, but why not native editable combobox and built in local menu support?</p>\n\n<p>The reason I'm asking this is because these are the most common problems I face when I have to design a web solution to a typical table based application (e.g. order management app). On a proper client side app, I can use the OS to provide these facilities out of box (e.g. JPopupMenu, JComboBox). For a webapp, I have to look for javascript (libraries) to accomplish something like it.</p>\n\n<p><em>Why are these not in HTML 5?</em></p>\n\n<p>I know I should avoid discussion like questions, so here are some further questions: <em>Do you know libraries that can do the popup menu thing and editable combobox thing cheaply (perhaps with a small code sample)?</em></p>\n",
            "last_activity_date": 1333635591,
            "question_id": 1278431,
            "score": 12,
            "tags": [
                "javascript",
                "html5"
            ],
            "title": "Why does HTML 5 not have editable combobox or local menus built in?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I created the animations for <a href=\"http://www.testufo.com\" rel=\"nofollow\">http://www.testufo.com</a> and also a requestAnimationFrame() consistency checker at <a href=\"http://www.testufo.com/animation-time-graph\" rel=\"nofollow\">http://www.testufo.com/animation-time-graph</a> </p>\n\n<p>The list of web browsers that support automatic synchronization of requestAnimationFrame() to the computer monitor's refresh rate (even if other than 60Hz), is listed at <a href=\"http://www.testufo.com/browser.html\" rel=\"nofollow\">http://www.testufo.com/browser.html</a> ... This means on a 75Hz monitor, requestAnimationFrame() is now called 75 times per second on supported browsers, provided the web page is currently in the foreground, and CPU/graphics performance permits it.</p>\n\n<ul>\n<li>A certain version of Chrome 30 had a nasty requestAnimationFrame() bug:\n<a href=\"http://www.blurbusters.com/blurbusters-helping-google-debug-chrome-30-animation-bugs/\" rel=\"nofollow\">http://www.blurbusters.com/blurbusters-helping-google-debug-chrome-30-animation-bugs/</a></li>\n<li>And it seems like Chrome 32 Beta is creating some animation fluidity bugs (again).\n<a href=\"https://code.google.com/p/chromium/issues/detail?id=317898\" rel=\"nofollow\">https://code.google.com/p/chromium/issues/detail?id=317898</a></li>\n</ul>\n\n<p>Chrome 29 and 31 works fine, as does newer versions of Chrome 30.  Fortunately, chrome 33 Canary seems to have more fully fixed the problem I see as far as I know.  It runs animations much more smoothly, without unnecessary calls to requestAnimationFrame().</p>\n\n<p>Also I have noticed power management (CPU slowdown/throttling too save battery power) can wreak havoc on the callback rate of requestAnimationFrame() ... It manifests itself as strange spikes upwards/downwards in Frame Rendering Times ( <a href=\"http://www.testufo.com/#test=animation-time-graph&amp;measure=rendering\" rel=\"nofollow\">http://www.testufo.com/#test=animation-time-graph&amp;measure=rendering</a> )</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think you have a problem because you call <code>requestAnimationFrame(step);</code> on every <code>mousedown</code> and <code>mouseup</code> event. Since your <code>step()</code> function also (as it should) calls <code>requestAnimationFrame(step);</code> you essentially start new \"animation loop\" for each <code>mousedown</code> and <code>mouseup</code> event and since you never stop them they do accumulate.</p>\n\n<p>I can see that you also start \"animation loop\" at the end of your code. If you want to redraw immediately on mouse event you should move drawing out of <code>step()</code> function and call that directly from mouse event handlers.</p>\n\n<p>Samething like this:</p>\n\n<pre><code>function redraw() { \n  // drawing logic\n}\nfunction onmousedown() {\n  // ...\n  redraw()\n}\nfunction onmouseup() {\n  // ...\n  redraw()\n}\n\nfunction step() {\n  redraw();\n  requestAnimationFrame(step);\n}\nrequestAnimationFrame(step);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Related topic: <a href=\"http://stackoverflow.com/q/17382321/340947\">requestAnimationFrame garbage collection</a></p>\n\n<p>I've been working toward smooth animations in a widget that I'm building for touch devices, and one of the tools I found to help me with this has been the Chrome Memory Timeline screen. </p>\n\n<p>It's helped me a bit to evaluate my memory consumption in the rAF loop, but I am bothered by a few aspects of the behavior that I am observing in Chrome 30 at this point. </p>\n\n<p>When initially entering my page, which has the rAF loop running, I see this. <img src=\"http://i.stack.imgur.com/RFFY0.png\" alt=\"enter image description here\"></p>\n\n<p>Looks okay. There shouldn't be a sawtooth if I have done my job and eliminated object allocations in my inner loop. This is behavior consistent with the linked topic, which is to say that Chrome has a built-in leak whenever you use rAF. (yikes!)</p>\n\n<p>It gets more interesting when I start doing various things in the page. </p>\n\n<p><img src=\"http://i.stack.imgur.com/GHre3.png\" alt=\"enter image description here\"></p>\n\n<p>I'm not really doing anything different, just temporarily adding two more elements which get CSS3 3D transform styles applied for a few frames, and then I stop interacting with them. </p>\n\n<p>What we see here is Chrome reporting that all of a sudden every rAF firing (16ms) results in <code>Animation Frame Fired x 3</code>.</p>\n\n<p>This repeating, and the rate at which it does so, monotonically increases until page refresh. </p>\n\n<p>You can already see in the second screencap the sawtooth slope having dramatically increased after that initial jump from <code>Animation Frame Fired</code> to <code>Animation Frame Fired x 3</code>. </p>\n\n<p>A short while later it has jumped to <code>x 21</code>: </p>\n\n<p><img src=\"http://i.stack.imgur.com/0EhEo.png\" alt=\"enter image description here\"></p>\n\n<p>It would appear that my code is being run a whole bunch of extra times, but all of the extra multiple runs is just wasted heat, discarded computation. </p>\n\n<p>While I was taking the third screencap, my Macbook was heating up pretty badly. Shortly after, before I was able to scrub the timeline to the end bit (around 8 minutes) to see what the <code>x</code> number had increased to, the inspector window became completely unresponsive, and I was prompted that my page had become unresponsive and had to be terminated. </p>\n\n<p>Here's the entirety of the code running in the page: </p>\n\n<pre><code>// ============================================================================\n// Copyright (c) 2013 Steven Lu\n\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the \"Software\"),\n// to deal in the Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute, sublicense,\n// and/or sell copies of the Software, and to permit persons to whom the\n// Software is furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n// ============================================================================\n\n// This is meant to be a true velocity verlet integrator, which means sending\n// in for the force and torque a function (not a value). If the forces provided\n// are evaluated at the current time step then I think we are left with plain\n// old Euler integration.  This is a 3 DOF integrator that is meant for use\n// with 2D rigid bodies, but it should be equally useful for modeling 3d point\n// dynamics.\n\n// this attempts to minimize memory waste by operating on state in-place.\n\nfunction vel_verlet_3(state, acc, dt) {\n  var x = state[0],\n      y = state[1],\n      z = state[2],\n      vx = state[3],\n      vy = state[4],\n      vz = state[5],\n      ax = state[6],\n      ay = state[7],\n      az = state[8],\n      x1 = x + vx * dt + 0.5 * ax * dt * dt,\n      y1 = y + vy * dt + 0.5 * ay * dt * dt,\n      z1 = z + vz * dt + 0.5 * az * dt * dt,  // eqn 1\n      a1 = acc(x1, y1, z1),\n      ax1 = a1[0],\n      ay1 = a1[1],\n      az1 = a1[2];\n  state[0] = x1;\n  state[1] = y1;\n  state[2] = z1;\n  state[3] = vx + 0.5 * (ax + ax1) * dt,\n  state[4] = vy + 0.5 * (ay + ay1) * dt,\n  state[5] = vz + 0.5 * (az + az1) * dt; // eqn 2\n  state[6] = ax1;\n  state[7] = ay1;\n  state[8] = az1;\n}\n\n// velocity indepedent acc --- shit this is gonna need to change soon\nvar acc = function(x, y, z) {\n  return [0,0,0];\n};\n$(\"#lock\").click(function() {\n  var values = [Number($('#ax').val()), Number($('#ay').val()), Number($('#az').val())];\n  acc = function() {\n    return values;\n  };\n});\n\n// Obtain the sin and cos from an angle.\n// Allocate nothing.\nfunction getRotation(angle, cs) {\n  cs[0] = Math.cos(angle);\n  cs[1] = Math.sin(angle);\n}\n\n// Provide the localpoint as [x,y].\n// Allocate nothing.\nfunction global(bodystate, localpoint, returnpoint) {\n  getRotation(bodystate[2], returnpoint);\n  // now returnpoint contains cosine+sine of angle.\n  var px = bodystate[0], py = bodystate[1];\n  var x = localpoint[0], y = localpoint[1];\n  // console.log('global():', cs, [px, py], localpoint, 'with', [x,y]);\n  // [ c -s px ]   [x]\n  // [ s  c py ] * [y]\n  //               [1]\n  var c = returnpoint[0];\n  var s = returnpoint[1];\n  returnpoint[0] = c * x - s * y + px;\n  returnpoint[1] = s * x + c * y + py;\n}\n\nfunction local(bodystate, globalpoint, returnpoint) {\n  getRotation(bodystate[2], returnpoint);\n  // now returnpoint contains cosine+sine of angle\n  var px = bodystate[0], py = bodystate[1];\n  var x = globalpoint[0], y = globalpoint[1];\n  // console.log('local():', cs, [px, py], globalpoint, 'with', [x,y]);\n  // [  c s ]   [x - px]\n  // [ -s c ] * [y - py]\n  var xx = x - px, yy = y - py;\n  var c = returnpoint[0], s = returnpoint[1];\n  returnpoint[0] = c * xx + s * yy;\n  returnpoint[1] = -s * xx + c * yy;\n}\n\nvar cumulativeOffset = function(element) {\n  var top = 0, left = 0;\n  do {\n    top += element.offsetTop || 0;\n    left += element.offsetLeft || 0;\n    element = element.offsetParent;\n  } while (element);\n  return {\n    top: top,\n    left: left\n  };\n};\n\n// helper to create/assign position debugger (handles a single point)\n// offset here is a boundingclientrect offset and needs window.scrollXY correction\nvar hasDPOffsetRun = false;\nvar dpoff = false;\nfunction debugPoint(position, id, color, offset) {\n  if (offset) {\n    position[0] += offset.left;\n    position[1] += offset.top;\n  }\n  // if (position[0] &gt;= 0) { console.log('debugPoint:', id, color, position); }\n  var element = $('#point' + id);\n  if (!element.length) {\n    element = $('&lt;div&gt;&lt;/div&gt;')\n    .attr('id', 'point' + id)\n    .css({\n          pointerEvents: 'none',\n          position: 'absolute',\n          backgroundColor: color,\n          border: '#fff 1px solid',\n          top: -2,\n          left: -2,\n          width: 2,\n          height: 2,\n          borderRadius: 300,\n          boxShadow: '0 0 6px 0 ' + color\n        });\n    $('body').append(\n        $('&lt;div&gt;&lt;/div&gt;')\n        .addClass('debugpointcontainer')\n        .css({\n          position: 'absolute',\n          top: 0,\n          left: 0\n        })\n      .append(element)\n    );\n    if (!hasDPOffsetRun) {\n      // determine the offset of the body-appended absolute element. body's margin\n      // is the primary offender that tends to throw a wrench into our shit.\n      var dpoffset = $('.debugpointcontainer')[0].getBoundingClientRect();\n      dpoff = [dpoffset.left + window.scrollX, dpoffset.top + window.scrollY];\n      hasDPOffsetRun = true;\n    }\n  }\n  if (dpoff) {\n    position[0] -= dpoff[0];\n    position[1] -= dpoff[1];\n  }\n  // set position\n  element[0].style.webkitTransform = 'translate3d(' + position[0] + 'px,' + position[1] + 'px,0)';\n}\n\nvar elements_tracked = [];\n\n/*\nvar globaleventhandler = function(event) {\n  var t = event.target;\n  if (false) { // t is a child of a tracked element...\n\n  }\n};\n\n// when the library is loaded the global event handler for GRAB is not\n// installed. It is lazily installed when GRAB_global is first called, and so\n// if you only ever call GRAB then the document does not get any handlers\n// attached to it.  This will remain unimplemented as it's not clear what the\n// semantics for defining behavior are. It's much more straightforward to use\n// the direct API\nfunction GRAB_global(element, custom_behavior) {\n  // this is the entry point that will initialize a grabbable element all state\n  // for the element will be accessible through its __GRAB__ element through\n  // the DOM, and the DOM is never accessed (other than through initial\n  // assignment) by the code.\n\n  // event handlers are attached to the document, so use GRAB_direct if your\n  // webpage relies on preventing event bubbling.\n  if (elements_tracked.indexOf(element) !== -1) {\n    console.log('You tried to call GRAB() on an element more than once.',\n                element, 'existing elements:', elements_tracked);\n  }\n  elements_tracked.push(element);\n  if (elements_tracked.length === 1) { // this is the initial call\n    document.addEventListener('touchstart', globaleventhandler, true);\n    document.addEventListener('mousedown', globaleventhandler, true);\n  }\n}\n\n// cleanup function cleans everything up, returning behavior to normal.\n// may provide a boolean true argument to indicate that you want the CSS 3D\n// transform value to be cleared\nfunction GRAB_global_remove(cleartransform) {\n  document.removeEventListener('touchstart', globaleventhandler, true);\n  document.removeEventListener('mousedown', globaleventhandler, true);\n}\n\n*/\n\nvar mousedownelement = false;\nvar stop = false;\n// there is only one mouse, and the only time when we need to handle release\n// of pointer is when the one mouse is let go somewhere far away.\nfunction GRAB(element, onfinish, center_of_mass) {\n  // This version directly assigns the event handlers to the element\n  // it is less efficient but more \"portable\" and self-contained, and also\n  // potentially more friendly by using a regular event handler rather than\n  // a capture event handler, so that you can customize the grabbing behavior\n  // better and also more easily define it per element\n  var offset = center_of_mass;\n  var pageOffset = cumulativeOffset(element);\n  var bcrOffset = element.getBoundingClientRect();\n  bcrOffset = {\n    left: bcrOffset.left + window.scrollX,\n    right: bcrOffset.right + window.scrollX,\n    top: bcrOffset.top + window.scrollY,\n    bottom: bcrOffset.bottom + window.scrollY\n  };\n  if (!offset) {\n    offset = [element.offsetWidth / 2, element.offsetHeight / 2];\n  }\n  var model = {\n    state: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    offset: offset,\n    pageoffset: bcrOffset // remember, these values are pre-window.scroll[XY]-corrected\n  };\n  element.__GRAB__ = model;\n  var eventhandlertouchstart = function(event) {\n    // set\n    var et0 = event.touches[0];\n    model.anchor = [0,0];\n    local(model.state, [et0.pageX - bcrOffset.left - offset[0], et0.pageY - bcrOffset.top - offset[1]], model.anchor);\n    debugPoint([et0.pageX, et0.pageY], 1, 'red');\n    event.preventDefault();\n    requestAnimationFrame(step);\n  };\n  var eventhandlermousedown = function(event) {\n    console.log('todo: reject right clicks');\n    // console.log('a', document.body.scrollLeft);\n    // set\n    // model.anchor = [event.offsetX - offset[0], event.offsetY - offset[1]];\n    model.anchor = [0,0];\n    var globalwithoffset = [event.pageX - bcrOffset.left - offset[0], event.pageY - bcrOffset.top - offset[1]];\n    local(model.state, globalwithoffset, model.anchor);\n    debugPoint([event.pageX, event.pageY], 1, 'red');\n    mousedownelement = element;\n    requestAnimationFrame(step);\n  };\n  var eventhandlertouchend = function(event) {\n    // clear\n    model.anchor = false;\n    requestAnimationFrame(step);\n  };\n  element.addEventListener('touchstart', eventhandlertouchstart, false);\n  element.addEventListener('mousedown', eventhandlermousedown, false);\n  element.addEventListener('touchend', eventhandlertouchend, false);\n  elements_tracked.push(element);\n  // assign some favorable properties to grabbable element.\n  element.style.webkitTouchCallout = 'none';\n  element.style.webkitUserSelect = 'none';\n  // TODO: figure out the proper values for these\n  element.style.MozUserSelect = 'none';\n  element.style.msUserSelect = 'none';\n  element.style.MsUserSelect = 'none';\n}\ndocument.addEventListener('mouseup', function() {\n  if (mousedownelement) {\n    mousedownelement.__GRAB__.anchor = false;\n    mousedownelement = false;\n    requestAnimationFrame(step);\n  }\n}, false);\n\nfunction GRAB_remove(element, cleartransform) {}\n// unimpld\nfunction GRAB_remove_all(cleartransform) {}\n\nGRAB($('#content2')[0]);\n\n(function() {\n  var requestAnimationFrame = window.mozRequestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      window.requestAnimationFrame;\n  window.requestAnimationFrame = requestAnimationFrame;\n})();\n\nvar now = function() { return window.performance ? performance.now() : Date.now(); };\nvar lasttime = 0;\nvar abs = Math.abs;\nvar dt = 0;\nvar scratch0 = [0,0];\nvar scratch1 = [0,0]; // memory pool\nvar step = function(time) {\n  dt = (time - lasttime) * 0.001;\n  if (time &lt; 1e12) {\n    // highres timer\n  } else {\n    // ms since unix epoch\n    if (dt &gt; 1e9) {\n      dt = 0;\n    }\n  }\n  // console.log('dt: ' + dt);\n  lasttime = time;\n  var foundnotstopped = false;\n  for (var i = 0; i &lt; elements_tracked.length; ++i) {\n    var e = elements_tracked[i];\n    var data = e.__GRAB__;\n    if (data.anchor) {\n      global(data.state, data.anchor, scratch0);\n      scratch1[0] = scratch0[0] + data.offset[0];\n      scratch1[1] = scratch0[1] + data.offset[1];\n      //console.log(\"output of global\", point);\n      debugPoint(scratch1,\n                 0, 'blue', data.pageoffset);\n    } else {\n      scratch1[0] = -1000;\n      scratch1[1] = -1000;\n      debugPoint(scratch1, 0, 'blue');\n    }\n    // timestep is dynamic and based on reported time. clamped to 100ms.\n    if (dt &gt; 0.3) {\n      //console.log('clamped from ' + dt + ' @' + now());\n      dt = 0.3;\n    }\n    vel_verlet_3(data.state, acc, dt);\n    e.style.webkitTransform = 'translate3d(' + data.state[0] + 'px,' + data.state[1] + 'px,0)' +\n        'rotateZ(' + data.state[2] + 'rad)';\n  }\n  requestAnimationFrame(step);\n};\n\nrequestAnimationFrame(step);\n</code></pre>\n\n<p>For completeness here is the test page HTML:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;meta http-equiv=\"cache-control\" content=\"max-age=0\" /&gt;\n    &lt;meta http-equiv=\"cache-control\" content=\"no-cache\" /&gt;\n    &lt;meta http-equiv=\"expires\" content=\"0\" /&gt;\n    &lt;meta http-equiv=\"expires\" content=\"Tue, 01 Jan 1980 1:00:00 GMT\" /&gt;\n    &lt;meta http-equiv=\"pragma\" content=\"no-cache\" /&gt;\n    &lt;title&gt;symplectic integrator test page&lt;/title&gt;\n    &lt;script src=\"zepto.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"d3.v3.js\"&gt;&lt;/script&gt;\n    &lt;style type='text/css'&gt;\n        body {\n            position: relative;\n            margin: 80px;\n        }\n        #content {\n            width: 800px;\n            height: 40px;\n            display: inline-block;\n            background: lightgreen;\n            padding: 20px;\n            margin: 30px;\n            border: green dashed 1px;\n        }\n        #content2 {\n            top: 200px;\n            width: 600px;\n            height: 200px;\n            display: inline-block;\n            background: lightblue;\n            padding: 20px;\n            margin: 30px;\n            border: blue dashed 1px;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id='scrolling-placeholder' style='background-color: #eee; height: 1000px;'&gt;&lt;/div&gt;\n    &lt;label&gt;dt:&lt;input id='dt' type='number' step='0.001' value='0.016666666' /&gt;&lt;/label&gt;\n    &lt;label&gt;ax:&lt;input id='ax' type='number' step='0.25' value='0' /&gt;&lt;/label&gt;\n    &lt;label&gt;ay:&lt;input id='ay' type='number' step='0.25' value='0' /&gt;&lt;/label&gt;\n    &lt;label&gt;t:&lt;input id='az' type='number' step='0.01' value='0' /&gt;&lt;/label&gt;\n    &lt;button id='lock'&gt;Set&lt;/button&gt;\n    &lt;button id='zerof' onclick='$(\"#ax,#ay,#az\").val(0);'&gt;Zero forces&lt;/button&gt;\n    &lt;button id='zerov'&gt;Zero velocities&lt;/button&gt;\n    &lt;div&gt;\n        &lt;span id='content'&gt;content&lt;/span&gt;\n        &lt;span id='content2'&gt;content2&lt;/span&gt;\n    &lt;/div&gt;\n    &lt;div id='debuglog'&gt;&lt;/div&gt;\n    &lt;script src=\"rb2.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>That ought to satisfy any \"show us the code\" requests. </p>\n\n<p>Now I would not bet my life on it, but I am pretty certain that I did at least an okay job of using rAF in a proper way. I am not abusing anything, and I have by this point refined the code to be very light on Javascript memory allocation. </p>\n\n<p>So, really, there is <strong>absolutely</strong> no reason for Chrome to take this and attempt to ride my laptop into orbit like a rocket. No reason.</p>\n\n<p>Safari in general seems to handle it better (it does not eventually die), and also I will note that iOS is generally able to maintain a 200x600px div translating and rotating at 60fps.</p>\n\n<p>However, I admit that I haven't seen Chrome really die like this unless I've got it recording the memory timeline. </p>\n\n<p>I'm sorta just scratching my head at this point. It's probably just some unintended, unforeseen interaction with this particular dev tool feature (the only one of its kind, to my knowledge).</p>\n\n<p>So then I tried something new to at least help investigate this issue with the memory timeline extra-callback-firing: </p>\n\n<p>Added these lines. </p>\n\n<pre><code>window.rafbuf = [];\nvar step = function(time) {\n  window.rafbuf.push(time);\n</code></pre>\n\n<p>This basically logs out all the times that my rAF routine (the <code>step()</code> function) gets called.</p>\n\n<p>When it's running normally it writes down a time roughly every 16.7 ms.</p>\n\n<p>I got this: </p>\n\n<p><img src=\"http://i.stack.imgur.com/LHzCz.png\" alt=\"enter image description here\"></p>\n\n<p>That clearly indicates it's re-running <code>step()</code> with the same time input parameter at least 22 times, just like the timeline's trying to tell me.</p>\n\n<p>So I dare you, internet, to tell me that this is intended behavior. :)</p>\n",
            "last_activity_date": 1418159888,
            "question_id": 19395565,
            "score": 11,
            "tags": [
                "javascript",
                "html",
                "google-chrome",
                "requestanimationframe"
            ],
            "title": "Chrome requestAnimationFrame issues"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>If you want to know bottom of window you can check</p>\n\n<pre><code>$(window).height()\n</code></pre>\n\n<p>and <code>$(window).scrollTop()</code>;</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This will need some fine tuning depending on your specific use case but it seems to work fairly well.</p>\n\n<p><strong><a href=\"http://jsfiddle.net/5hLk2/6/\" rel=\"nofollow\">Working Example</a></strong></p>\n\n<pre><code>$('.dd').nestable({ /* config options */\n});\n\n$(window).mousemove(function (e) {\n    var x = $(window).innerHeight() - 50,\n        y = $(window).scrollTop() + 50;\n    if ($('.dd-dragel').offset().top &gt; x) {\n        //Down\n        $('html, body').animate({\n            scrollTop: 300 // adjust number of px to scroll down\n        }, 600);\n    }\n    if ($('.dd-dragel').offset().top &lt; y) {\n        //Up\n        $('html, body').animate({\n            scrollTop: 0\n        }, 600);\n    } else {\n        $('html, body').animate({\n\n        });\n    }\n});\n</code></pre>\n\n<p><strong>Related API documentation:</strong></p>\n\n<ul>\n<li><a href=\"http://api.jquery.com/mousemove/\" rel=\"nofollow\">.mousemove()</a></li>\n<li><a href=\"http://api.jquery.com/innerHeight/\" rel=\"nofollow\">.innerHeight()</a></li>\n<li><a href=\"http://api.jquery.com/scrollTop/\" rel=\"nofollow\">.scrollTop()</a></li>\n<li><a href=\"http://api.jquery.com/offset/\" rel=\"nofollow\">.offset()</a></li>\n<li><a href=\"http://api.jquery.com/animate/\" rel=\"nofollow\">.animate()</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>I have 50 divs,But in my window it shows only 25,I do drag and drop activity on these divs.So If i drag my first div near 25th div,It should scroll automatically to show the remaining divs.How do i do this in jquery? any idea?</p>\n\n<p>I am using <a href=\"http://dbushell.github.io/Nestable/\">Nestable</a> not draggable()</p>\n",
            "last_activity_date": 1403108100,
            "question_id": 17895141,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui"
            ],
            "title": "How to scroll the window automatically when mouse moves bottom of the page using jquery"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can prevent this behavior by using the property </p>\n\n<pre><code>-webkit-user-drag: auto | element | none;\n</code></pre>\n\n<p>See the doc of <code>-webkit-user-drag</code> <a href=\"http://css-infos.net/property/-webkit-user-drag\">CSS-infos.net</a> (I didn't find an MDN doc, if someone has a better reference)</p>\n\n<hr>\n\n<h2>How to use</h2>\n\n<p>Add a <code>.nonDraggableImage</code> class on your <code>img</code> tags, and add on your CSS :</p>\n\n<pre><code>.nonDraggableImage{\n    -webkit-user-drag: none;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>Another way is to create a transparent picture over the top of the picture you want to prevent viewing.</p>\n\n<p>Please see: \n<a href=\"http://www.dwuser.com/education/content/stop-the-thieves-strategies-to-protect-your-images/\" rel=\"nofollow\">http://www.dwuser.com/education/content/stop-the-thieves-strategies-to-protect-your-images/</a></p>\n\n<p>check under \"Tricking the downloaders\"</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I've noticed that in Google Chrome, one can click and hold an image and while holding a semi-transparent copy of that image attaches itself with the cursor. Then one can drag that image to the desktop to save it.</p>\n\n<p>I want to prevent and stop the semi-transparent version of the image attaching itself to the cursor on hold of certain images in my site.</p>\n\n<p>How can I do this?</p>\n",
            "last_activity_date": 1390829834,
            "question_id": 16283017,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "google-chrome"
            ],
            "title": "stop Chrome&#39;s click and hold / drag image default behavior"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>It's often not a good idea to extend the functionality of DOM through prototypes, especially in older versions of IE (<a href=\"http://perfectionkills.com/whats-wrong-with-extending-the-dom/\" rel=\"nofollow\">article</a>).</p>\n\n<p>However, you can simply use <code>Array.prototype.forEach</code> even without adding it to the prototype chain or converting your <code>NodeList</code> into an array:</p>\n\n<pre><code>var list = document.querySelectorAll(\".some.query\");\nArray.prototype.forEach.call(list, function(el){ /* ... */ });\n\n/* or */\nvar forEach = function(ctn, callback){\n    return Array.prototype.forEach.call(ctn, callback);\n}\nforEach(list, function(el){ /* ... */ });\n</code></pre>\n\n<p>See also MDN: <a href=\"https://developer.mozilla.org/en-US/docs/DOM/NodeList#Why_can%27t_I_use_forEach_or_map_on_a_NodeList.3F\" rel=\"nofollow\">Why can't I use <code>forEach</code> or <code>map</code> on a <code>NodeList</code></a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>As Zeta mentioned, it would be better to use a convenience function. This version, however, will allow you to give it context.</p>\n\n<pre><code>var forEach = function(list, callback, context){\n  return Array.prototype.forEach.call(list, callback, context);\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Do you see any problems with the following:</p>\n\n<pre><code>NodeList.prototype.forEach = Array.prototype.forEach;\n</code></pre>\n\n<p>Normally <code>forEach</code> is just a property of arrays, but by setting it as a property of all <code>NodeList</code>s as well, there's no need to convert a <code>NodeList</code> to an array before you can loop through its nodes with <code>forEach</code>.</p>\n",
            "last_activity_date": 1386091061,
            "question_id": 15267295,
            "score": 11,
            "tags": [
                "javascript",
                "arrays",
                "foreach",
                "nodelist"
            ],
            "title": "NodeList.prototype.forEach = Array.prototype.forEach;"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<pre><code>var s = 'MyLongString:StringIWant;';\n/:([^;]+);/.exec(s)[1]; // StringIWant\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Use <code>split()</code></p>\n\n<pre><code>var s = 'MyLongString:StringIWant;';\nvar arrStr = s.split(/[:;]/);\nalert(arrStr);\n</code></pre>\n\n<p><code>arrStr</code> will contain all the string delimited by <code>:</code> or <code>;</code><br>\nSo access every string through <code>for-loop</code></p>\n\n<pre><code>for(var i=0; i&lt;arrStr.length; i++)\n    alert(arrStr[i]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can try this</p>\n\n<pre><code>var String=str.substring(str.lastIndexOf(\":\")+1,str.lastIndexOf(\";\"));\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>You can also use:</p>\n\n<pre><code>Str.split(\":\").pop().split(\";\").shift();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to extract a string from within a larger string where it get everything inbetween a ':' and a ';'.</p>\n\n<p>Current</p>\n\n<pre><code>Str = 'MyLongString:StringIWant;'\n</code></pre>\n\n<p>Desired Output</p>\n\n<pre><code>newStr = 'StringIWant'\n</code></pre>\n",
            "last_activity_date": 1418809613,
            "question_id": 14867835,
            "score": 11,
            "tags": [
                "javascript",
                "regex",
                "string",
                "substring"
            ],
            "title": "Get Substring between two characters using javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>No, <a href=\"https://github.com/documentcloud/underscore/issues/162\" rel=\"nofollow\">Underscore will not contain a deep extend</a> since it's too complicated to deal with different types of objects. Instead, users are encouraged to implement their own solutions with the support for what they need.</p>\n\n<p>In your case it's only plain objects, so an implementation is quite straightforward:</p>\n\n<pre><code>_.deepObjectExtend = function(target, source) {\n    for (var prop in source)\n        if (prop in target)\n            _.deepObjectExtend(target[prop], source[prop]);\n        else\n            target[prop] = source[prop];\n    return target;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>With <a href=\"http://lodash.com/\">Lodash</a> (fork of underscore) u can.\nLodash's _.extend method accept third (or higher) parameter to be a function, that receives values (old and new); So u can do something like this:</p>\n\n<pre><code>var deep = function(a, b) {\n    return _.isObject(a) &amp;&amp; _.isObject(b) ? _.extend(a, b, deep) : b;\n};\n\nvar a = {a:{b:{c:1}}},\n    b = {a:{b:{z:1}}};\n\n_.extend(a,b,deep);\n</code></pre>\n\n<p><strong>upd.</strong>\nAs <a href=\"http://stackoverflow.com/users/63011/paolo-moretti\">Paolo Moretti</a> said in comments, there is the same function in <em>lodash</em> called <strong>_.merge</strong>:</p>\n\n<pre><code>_.merge(a,b);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>jQuery has an <a href=\"http://api.jquery.com/jquery.extend/\" rel=\"nofollow\">extend()</a> function, which does the same thing as its Underscore counterpart, but also has a <strong>deep</strong> argument which allows it to merge recursively as you desire:</p>\n\n<pre><code>var creditOperation = $.extend(true, baseOperation, {\n    query: {\n        'method': 'baz'\n    }\n});\n</code></pre>\n\n<p>Or, if you don't want to overwrite <em>baseOperation</em>:</p>\n\n<pre><code>var creditOperation = $.extend(true, {}, baseOperation, {\n    query: {\n        'method': 'baz'\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is there any way to get Underscore.js <a href=\"http://underscorejs.org/#extend\"><code>extend</code></a> function:</p>\n\n<blockquote>\n  <p>Copy all of the properties in the source objects over to the\n  destination object, and return the destination object. It's in-order,\n  so the last source will override properties of the same name in\n  previous arguments.</p>\n</blockquote>\n\n<p>... to work recursively? </p>\n\n<p>Actually, <code>query</code> property in <code>creditOperation</code> is going to completely override the <code>query</code> property defined in <code>baseOperation</code>:</p>\n\n\n\n<pre class=\"lang-js prettyprint-override\"><code>var url = require('url')\n  , _ = require('underscore'),\n  , baseOperation = {\n        host: 'gateway.skebby.it',\n        pathname: 'api/send/smseasy/advanced/http.php',\n        protocol: 'https',\n        query: {\n            'username': 'foo',\n            'password': 'bar',\n        }\n    };\n\nvar creditOperation = _.extend(baseOperation, {\n    query: {\n        'method': 'baz'\n    }\n});\n\nconsole.log(url.format(creditOperation));\n</code></pre>\n\n<p>I'd like to obtain this <code>creditOperation</code>:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>{\n    host: 'gateway.skebby.it',\n    pathname: 'api/send/smseasy/advanced/http.php',\n    protocol: 'https',\n    query: {\n        'username': 'foo',\n        'password': 'bar',\n        'method': 'baz'\n    }\n}\n</code></pre>\n",
            "last_activity_date": 1413824691,
            "question_id": 14843815,
            "score": 11,
            "tags": [
                "javascript",
                "underscore.js"
            ],
            "title": "Recursive extend in Underscore.js?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>what is the need of getting full local file path. To handle uploaded files, you should not need to know the full file path.Browser takes this job on its own.</p>\n\n<p>please have a look here , you will surely got benefited with this link</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/81180/how-to-get-the-file-path-from-html-input-form-in-firefox-3\">how to get the file path from html input form in firefox</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>So if I understand it correctly, you want to attach some custom data to file upload. Is it correct?</p>\n\n<p>So if you do not want to modify jQuery plugin you are using, I would add some hidden fields into form and put that custom data into them just before submit. Then plugin should pick them up and send together with files.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I dont know about PHP just add following to post data. pass <strong>parameters</strong> to your form</p>\n\n<pre><code> @{ \n    AjaxOptions options = new AjaxOptions{ \n    HttpMethod = \"Post\", \n    url: \"mail.php\",\n    dataType: \"json\",\n    data: {parameters: jsonData}\n    UpdateTargetId = \"formContent\",\n    beforeSend: function() {\n                       status.empty();\n                       var percentVal = '0%';\n                       bar.css(\"width\", percentVal)\n                       percent.html(percentVal);\n                      },\n     uploadProgress: function(event, position, total, percentComplete) {\n                             var percentVal = percentComplete + '%';\n                               bar.css(\"width\", percentVal)\n                               percent.html(percentVal);\n                              //console.log(percentVal, position, total);\n                 },\n\n    OnFailure = \"do some thing\",\n    OnBegin = \"ShowProgressBar\",\n    OnComplete =  function(xhr) {\n                     status.html(xhr.responseText);\n                         }\n   };         \n} \n</code></pre>\n\n<p>you need to add code in PHP (in <strong>MVC3</strong> asp .net we do like this)</p>\n\n<pre><code>@using (Ajax.BeginForm(parameters))\n {\n }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I don't know if this is suitable for your need or not, but I have used Andrew Valums file-uploader to achieve same result.</p>\n\n<p>It can upload multiple files, even have drag and drop support, but its pure javascript not jQuery, but on the other hand, Ray Nicholus has forked Valums code to a jQuery plugin.</p>\n\n<p>My experience is with Valums version, and it works side by side with jQuery without problem. The only problem is you have to interact with it in basic javascript style.</p>\n\n<p>My implementation of upload is like this:</p>\n\n<ol>\n<li>provide an interface to upload files to server</li>\n<li>make file-uploader to upload to a certain folder on server, and\nreturn the name and path of the file on server (usually \"upload\nfolder\"/\"file name\") so you can store that in a hidden element for\nthe form</li>\n<li>when user save their data, only save the path to the file (obtained from step 2) into database</li>\n</ol>\n\n<p>note: with this, you don't need to duplicate any input form for file upload, as you can upload as many file as you like, as long as your server can handle it ofcourse ;)</p>\n\n<p><a href=\"https://github.com/valums/file-uploader\" rel=\"nofollow\">https://github.com/valums/file-uploader</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>solved the issue..</p>\n\n<p>It was as simple as adding  <code>method=\"post\" action=\"http://globalgeorgia.co.za/modules/mod_appform/js/mail.php\"</code> and then also  <code>type=\"submit\"</code> to the submit function and it works perfectly in IE 7 and IE 8 and then also this:</p>\n\n<pre><code>if (isValid) {\n    getValues();\n    var jsonData = JSON.stringify(result);  \n\n    (function() {\n    var bar = jQuery('.bar');\n    var percent = jQuery('.percent');\n    var status = jQuery('#status');\n    jQuery('#spinner').html('&lt;img src=\"http://globalgeorgia.co.za/modules/mod_appform/js/ajax-loader.gif\" /&gt;');\n\n    jQuery('#app_form').ajaxForm({\n        type: \"POST\",\n        url: \"http://globalgeorgia.co.za/modules/mod_appform/js/mail.php\",\n        dataType: \"json\",\n        //iframe: true,\n        data: {parameters: jsonData},\n        beforeSend: function() {\n            status.empty();\n            jQuery('#spinner').html();\n            var percentVal = '0%';\n            bar.css(\"width\", percentVal)\n            percent.html(percentVal);\n        },\n        uploadProgress: function(event, position, total, percentComplete) {\n            var percentVal = percentComplete + '%';\n            bar.css(\"width\", percentVal)\n            percent.html(percentVal);\n        },\n        complete: function(xhr) {\n            status.html(xhr.responseText);\n            jQuery('#spinner').html(\"sent\");\n        }\n    }); \n\n    })();   \n} \n</code></pre>\n\n<p>solved the sending issue, thanks for everyone's help.</p>\n",
                    "is_accepted": true,
                    "score": 3
                }
            ],
            "body": "<p>*<em>UPDATE:</em>*Hi Everyone again, I have almost solved this problem, please see <a href=\"http://stackoverflow.com/questions/14632176/jquery-form-no-submission-to-ie7-and-ie8\">Jquery form no submission to IE7 and IE8</a> i just need to sort ot ie7 and ie8,</p>\n\n<p>I have been using <strong><a href=\"http://malsup.com/jquery/form/#file-upload\">THIS</a></strong> plugin to upload files as an email attachment, i have gotten it to the point where it actually works, the only problem is it currently uses this to submit:</p>\n\n<pre><code>jQuery.ajax({\n    beforeSend: function() {\n        status.empty();\n        var percentVal = '0%';\n        bar.css(\"width\", percentVal)\n        percent.html(percentVal);\n    },\n    uploadProgress: function(event, position, total, percentComplete) {\n        var percentVal = percentComplete + '%';\n        bar.css(\"width\", percentVal)\n        percent.html(percentVal);\n        //console.log(percentVal, position, total);\n    },\n    complete: function(xhr) {\n        status.html(xhr.responseText);\n    }\n}); \n</code></pre>\n\n<p>And the form i need to add it to, uses this to submit:</p>\n\n<pre><code>jQuery.ajax({\n        type: \"POST\",\n        url: \"mail.php\",\n        dataType: \"json\",\n        data: {parameters: jsonData}\n    });\n</code></pre>\n\n<p>How would i make the plugin work with my form of submission?</p>\n\n<p>Here's the <strong><a href=\"http://jsfiddle.net/dawidvdh/H32FW/1/\">JSFIDDLE</a></strong> for the current working upload form.</p>\n\n<p>and then the form i need to combine the working one with <strong><a href=\"http://jsfiddle.net/dawidvdh/a7TVe/5/\">JSFIDDLE</a></strong> (i have shortened it to only the upload fields, but there is a bunch of other information)</p>\n\n<p>Also here's the php send function:</p>\n\n<pre><code>&lt;?php\n    function printMember($member) {\n        foreach($member as $key=&gt;$value) {\n            //Fill the aux string first\n            $str.= \"$key : $value &lt;br /&gt;\";\n        }\n        //string that will be added to $msg variable inside the loop\n        return $str;\n    }\n\n    $json = $_POST['parameters'];\n    $json_string = stripslashes($json);\n    $data = json_decode($json_string, true);\n    $depCount = count($data[\"dependants\"]);\n\n    $msg .= \"&lt;h2&gt;Main member data:&lt;/h2&gt;\";\n    $msg .= printMember($data[\"mainmember\"]);\n    $msg .= \"&lt;h2&gt;There are $depCount Dependants&lt;/h2&gt;\";\n\n    foreach ($data[\"dependants\"] as $index =&gt; $dependant) {\n       $msg .= \"&lt;h2&gt;Dependant $index&lt;/h2&gt;\";\n       $msg .= printMember($dependant);\n    }\n\n    $strTo = \"dawid@jamfactory.co.za\";\n    $strSubject = \"Image Testing\";\n    $strMessage = nl2br($msg);\n\n    //*** Uniqid Session ***//\n    $strSid = md5(uniqid(time()));\n\n    $strHeader = \"\";\n    $strHeader .= \"From: Dawid&lt;test@testme.co.za&gt;\\nReply-To:test@testme.co.za\";\n\n    $strHeader .= \"MIME-Version: 1.0\\n\";\n    $strHeader .= \"Content-Type: multipart/mixed; boundary=\\\"\".$strSid.\"\\\"\\n\\n\";\n    $strHeader .= \"This is a multi-part message in MIME format.\\n\";\n\n    $strHeader .= \"--\".$strSid.\"\\n\";\n    $strHeader .= \"Content-type: text/html; charset=utf-8\\n\";\n    $strHeader .= \"Content-Transfer-Encoding: 7bit\\n\\n\";\n    $strHeader .= $strMessage.\"\\n\\n\";\n\n    //*** Attachment ***//\n    $count = 0;\n    foreach($_FILES['myfile']['name'] as $filename)\n    {\n        $temp = $_FILES['myfile']['tmp_name'][$count];\n        $strFilesName = $filename;\n        $strContent = chunk_split(base64_encode(file_get_contents($temp))); \n        $strHeader .= \"--\".$strSid.\"\\n\";\n        $strHeader .= \"Content-Type: application/octet-stream; name=\\\"\".$strFilesName.\"\\\"\\n\"; \n        $strHeader .= \"Content-Transfer-Encoding: base64\\n\";\n        $strHeader .= \"Content-Disposition: attachment; filename=\\\"\".$strFilesName.\"\\\"\\n\\n\";\n        $strHeader .= $strContent.\"\\n\\n\";\n        $count++;\n    }\n\n\n    $flgSend = @mail($strTo,$strSubject,null,$strHeader);  // @ = No Show Error //\n\n    if($flgSend)\n    {\n        echo \"Mail send completed.\";\n    }\n    else\n    {\n        echo \"Cannot send mail.\";\n    }\n?&gt;\n</code></pre>\n\n<p>Any Help greatly appreciated. :)</p>\n\n<p>If anyone doesn't fully understand the question, I will try here to even further explain it:</p>\n\n<p>I have duplicate-able fields that on submit the information gets put into a JSON array and then gets parsed to an email by PHP, what i was trying to do is have a file field where images get uploaded and sent with the email, but after researching a lot on the web i ound that this is not possible with ajax so i found <strong><a href=\"http://malsup.com/jquery/form/#file-upload\">THIS</a></strong> plugin that actually works and now i am just trying to combine it with my original form</p>\n",
            "last_activity_date": 1360049602,
            "question_id": 14560179,
            "score": 11,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "jquery-plugins"
            ],
            "title": "Upload an image with jquery ajax with a duplicate-able input"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>your regex looks pretty good: </p>\n\n<pre><code>\\b(meat|pasta|dinner)\\b\n</code></pre>\n\n<p>Check that the length of matches equals the number of keywords (in this case, three):</p>\n\n<pre><code>string.match(re).length === numberOfKeywords\n</code></pre>\n\n<p>where <code>re</code> is the regex with a <code>g</code> flag, <code>string</code> is the data and <code>numberOfKeywords</code> is the number of keywords</p>\n\n<p>This assumes that there are no repeated keywords.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can achieve this will lookahead assertions</p>\n\n<pre><code>^(?=.*\\bmeat\\b)(?=.*\\bpasta\\b)(?=.*\\bdinner\\b).+\n</code></pre>\n\n<p>See it <a href=\"http://regexr.com?335fm\">here on Regexr</a></p>\n\n<p><code>(?=.*\\bmeat\\b)</code> is a <a href=\"http://www.regular-expressions.info/lookaround.html\">positive lookahead assertion</a>, that ensures that <code>\\bmeat\\b</code> is somewhere in the string. Same for the other keywords and the <code>.+</code> is then actually matching the whole string, but only if the assertions are true.</p>\n\n<p>But it will match also on \"dinner meat Foobar pasta\"</p>\n",
                    "is_accepted": true,
                    "score": 17
                }
            ],
            "body": "<p>I'm trying to build a search feature for a project which narrows down items based on a user search input and if it matches the keywords listed against items. For this, I'm saving the item keywords in a <code>data</code> attribute and matching the query with these keywords using a RegExp pattern.</p>\n\n<p>I'm currently using this expression, which I know is not correct and need your help on that:</p>\n\n<p><code>new RegExp('\\\\b(' + query + ')', 'gi')))</code> where query is <code>|</code> separated values of the query entered by the user (e.g. <code>\\\\b(meat|pasta|dinner)</code>). This returns me a match even if there is only 1 match, say for example - <code>meat</code></p>\n\n<p>Just to throw some context, here's a small example:</p>\n\n<p>If a user types: <code>meat pasta dinner</code> it should list all items which have ALL the 3 keywords listed against them i.e. <code>meat</code> <code>pasta</code> and <code>dinner</code>. These are independent of the order they're typed in.</p>\n\n<p>Can you help me with an expression which will match ALL words in a query, in any order?</p>\n",
            "last_activity_date": 1355737898,
            "question_id": 13911053,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "regex"
            ],
            "title": "Regular Expression to MATCH ALL words in a query, in any order"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>It seems like what is happening is that the main.js is being loaded asynchronously while the inline require is called right away. This is why there are inconsistent results. The solution is to NOT use the data-main attribute and call the main.js file via script tag underneath the require.js script tag.</p>\n\n<p>You can still determine the baseUrl from the loaded main.js file by doing this in there:</p>\n\n<pre><code>//DETERMINE BASE URL FROM CURRENT SCRIPT PATH\nvar scripts = document.getElementsByTagName(\"script\");\nvar src = scripts[scripts.length-1].src;\nvar baseUrl = src.substring(src.indexOf(document.location.pathname), src.lastIndexOf('/'));\n\n//CONFIGURE LIBRARIES AND DEPENDENCIES VIA REQUIREJS\nrequire.config({\n    baseUrl: baseUrl,\n....\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The important thing here is that the config options are set before any modules are requested. As you have rightly identified, there are race conditions that mean the config options in your <code>main.js</code> aren't loaded in time. Simplest way round it would be to put the config options inline before the <code>require.js</code> script is loaded.</p>\n\n<pre><code>&lt;script&gt;\nvar require = {\n    baseUrl: &lt;?= $someVar ?&gt;,\n    paths: {\n        // etc\n    }\n}\n&lt;/script&gt;\n&lt;script src=\"scripts/require.js\" data-main=\"scripts/main\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Further down the page:</p>\n\n<pre><code>&lt;script&gt;\n    require([\n        'jquery',\n        'utils',\n        'slider'\n      ], function ($, utils, slider) {\n        slider.start();\n      });\n&lt;/script&gt;\n</code></pre>\n\n<p>See also <a href=\"http://stackoverflow.com/questions/10815454/how-does-requirejs-work-with-multiple-pages-and-partial-views\">How does RequireJS work with multiple pages and partial views?</a></p>\n",
                    "is_accepted": true,
                    "score": 10
                }
            ],
            "body": "<p>I am integrating RequireJS in a CMS so I placed this on the bottom of my page template:</p>\n\n<pre><code>&lt;html&gt;\n&lt;body&gt;\n  {Placeholder1}\n  &lt;script src=\"scripts/require.js\" data-main=\"scripts/main\"&gt;&lt;/script&gt;\n  {Placeholder2}\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Then on each page, I would like to create a function that leverages RequireJS. So I tried placing this on the bottom of the page:</p>\n\n<pre><code>&lt;html&gt;\n&lt;body&gt;\n    &lt;h1&gt;Home&lt;/h1&gt;\n    &lt;div class=\"slider\"&gt;Slider content&lt;/div&gt;\n\n    &lt;script src=\"scripts/require.js\" data-main=\"scripts/main\"&gt;&lt;/script&gt;\n\n    &lt;script type=\"text/javascript\"&gt;\n      require([\n        'jquery',\n        'utils',\n        'slider'\n      ], function ($, utils, slider) {\n        slider.start();\n      });\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>But I am getting 404's on jquery, utils and slider js files. It seems like it is not reading my main.js configs that I have:</p>\n\n<pre><code>require.config({\n    paths: {\n        jquery: 'libs/jquery-1.8.1.min',\n        utils: 'libs/utils',\n        slider: 'libs/jquery.slider.min'\n    },\n    shim: {\n        slider: ['jquery']\n    }\n});\n\nrequire([ 'utils' ], function (utils) {\n    utils.init();\n});\n</code></pre>\n\n<p>I tried loading RequireJS and main in the page head, but got inconsistent results that way. Sometimes jquery, utils and slider would be loaded in time and other times not. It is as if the inline \"require\" on the bottom of the page is not aware of the main RequireJS on page or the dependency rules, but my breakpoint hits in main.js so I know it is being called. Is it because main.js gets loaded asynchronously but my inline \"require\" block on the bottom of the page is loaded on page render? How do I get around this?</p>\n\n<p>I have used RequireJS successfully before but without a CMS. I always used \"define\" and had modules always called asychronously, but never had to call RequireJS function inline like this. Any ideas on the correct way to do this?</p>\n",
            "last_activity_date": 1372092834,
            "question_id": 12697238,
            "score": 11,
            "tags": [
                "javascript",
                "asynchronous",
                "javascript-library",
                "requirejs",
                "js-amd"
            ],
            "title": "Load requireJS module inline the HTML body?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><code>indexOf</code> only works with pure Javascript arrays, i.e. those with integer indexes. Your \"array\" is actually an object and should be declared as such</p>\n\n<pre><code>var associativeArray = {}\n</code></pre>\n\n<p>There's no built-in indexOf for objects, but it's easy to write.</p>\n\n<pre><code>var associativeArray = {}\n\nassociativeArray['key1'] = 'value1';\nassociativeArray['key2'] = 'value2';\nassociativeArray['key3'] = 'value3';\nassociativeArray['key4'] = 'value4';\nassociativeArray['key5'] = 'value5';\n\nvar value = 'value3';\nfor(var key in associativeArray)\n{\n    if(associativeArray[key]==value)\n         console.log(key);\n}\n</code></pre>\n\n<p>Without loops (assuming a modern browser):</p>\n\n<pre><code>foundKeys = Object.keys(associativeArray).filter(function(key) {\n    return associativeArray[key] == value;\n})\n</code></pre>\n\n<p>returns an array of keys that contain the given value.</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>If you don't use jQuery, you could extend the prototype of Object doing this:</p>\n\n<pre><code>// Returns the index of the value if it exists, or undefined if not\nObject.defineProperty(Object.prototype, \"associativeIndexOf\", { \n    value: function(value) {\n        for (var key in this) if (this[key] == value) return key;\n        return undefined;\n    }\n});\n</code></pre>\n\n<p>Using this way instead of the common <code>Object.prototype.associativeIndexOf = ...</code> will work with jQuery if you use it.</p>\n\n<p>And then you could use it like this:</p>\n\n<pre><code>var myArray = {...};\nvar index = myArray.associativeIndexOf(value);\n</code></pre>\n\n<p>It will also work with normal arrays: <code>[...]</code>, so you could use it instead of <code>indexOf</code> too.</p>\n\n<p>Remember to use the triple-character operators to check if it's undefined:</p>\n\n<pre><code>index === undefined // to check the value/index exists    \nindex !== undefined // to check the value/index does not exist\n</code></pre>\n\n<p>Of course you could change the name of the function if you prefer to for example <code>keyOf</code>, and remember not to declare any variable called 'undefined'.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<pre><code>var associativeArray = [];\n\nassociativeArray['key1'] = 'value1';\nassociativeArray['key2'] = 'value2';\nassociativeArray['key3'] = 'value3';\nassociativeArray['key4'] = 'value4';\nassociativeArray['key5'] = 'value5';\n\nvar key = null;\nfor(key in associativeArray)\n{\n    console.log(\"associativeArray[\" + key + \"]: \" +  associativeArray[key]);        \n}\n\nkey = 'key3';\n\nvar obj = associativeArray[key];        \n\n// gives index = -1 in both cases why?\nvar index = associativeArray.indexOf(obj); \n// var index = associativeArray.indexOf(key);  \n\nconsole.log(\"obj: \" + obj + \", index: \" + index);   \n</code></pre>\n\n<hr>\n\n<p>The above program prints index: -1, why? Is there any better way to get index of an object in an associative array without using loops?</p>\n\n<p>What if I want to delete 'key3' from this array? the splice function takes first parameter as index which must be an integer.</p>\n",
            "last_activity_date": 1385624425,
            "question_id": 9273157,
            "score": 11,
            "tags": [
                "javascript",
                "javascript-library"
            ],
            "title": "javascript: how to get index of an object in an associative array?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Only code readability, nothing more.</p>\n\n<p>They do not even give you the advantage of closures:</p>\n\n<pre><code>var c = 'fail';\n{\n    var c = 123;\n}\nalert(c); //alerts 123\n</code></pre>\n\n<p>(<a href=\"http://jsfiddle.net/ZtsWx/1/\" rel=\"nofollow\">see it live</a>)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Only readability.  Other than that, nothing.  Do <strong><em>not</em></strong> do this as it's not future-proof.  The following will happily break:</p>\n\n<pre><code>\"use strict\";\n\nvar a = 3,\nb = 4;\n{\n  a = 50;\n  b = 50;\n}\nalert(a + b); //alerts 100\n</code></pre>\n\n<p>I used to use it myself as it allowed logical separation of functionality, but no longer do due to the above.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As I found out after googling my answer for <a href=\"http://stackoverflow.com/questions/8783054/how-are-labels-used-with-statements-that-are-not-a-loop/\">How are labels used with statements that are not a loop?</a>, the lonely code blocks can be related to labels:</p>\n\n<pre><code>myLabel:\n{\n    for(x in y) {\n        break myLabel;\n    }\n}\n</code></pre>\n\n<p>Will break out not only of the loop, but of the outer code block as well.</p>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>In Javascript, you can have lonely code blocks, that is, code blocks without an <code>if</code>, <code>function</code> or something like that preceding them, placed arbitrarily in the code, like this:</p>\n\n<pre><code>var a = 3,\nb = 4;\n{\n  a = 50;\n  b = 50;\n}\nalert(a + b); //alerts 100\n</code></pre>\n\n<p>I know some other languages have this (I think C++ does), and they use it for scope control: variables declared inside the lonely code block cannot be accessed outside of it. But since Javascript has function scope rather than block scope, you have to use a self-executing function <code>(function(){})()</code> to acheive the same effect.</p>\n\n<p>Is there a purpose for this construct? Have you ever seen anybody use it? Does the spec mention it? Is this just a side effect of the grammar having some sort of general rule about code blocks?</p>\n",
            "last_activity_date": 1326081146,
            "question_id": 8735841,
            "score": 11,
            "tags": [
                "javascript"
            ],
            "title": "What&#39;s the purpose of lonely code blocks in Javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It is just a name given to a function, there isn't such a thing as C \"main\" in javascript.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>\"Main\" function has nothing different then any other function (Its just a name). It will run when called and not automatically.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>No, <code>main</code> is not the same in JavaScript as in C languages. It's just another function, but the original programmer is probably using the name as a convention to indicate where the code <em>should</em> start running.</p>\n",
                    "is_accepted": true,
                    "score": 14
                }
            ],
            "body": "<p>I have seen a <code>main()</code> function in some JavaScript files I have come across. Is it the same main function as you use in other languages such as C#, C++?? If you put a main function in your JS file, is that where the code starts executing? Or is it just another name used for a function?</p>\n\n<p>I have searched the web but didn't find anything useful regarding this matter.</p>\n",
            "last_activity_date": 1325493518,
            "question_id": 8629859,
            "score": 11,
            "tags": [
                "javascript",
                "main"
            ],
            "title": "main() function in JavaScript?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You should use <code>getFullYear()</code> instead of <code>getYear()</code>. <code>getYear()</code> returns the actual year minus 1900 (and so is fairly useless).</p>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p>I'm trying to get one year from now's date, and it's not working.</p>\n\n<p>JS:</p>\n\n<pre><code>var now = new Date();\n\nvar oneYr = new Date();\noneYr.setYear(now.getYear() + 1);\n$(\"#yearFromNow\").append(oneYr.toString());\n\nvar oneMonth = new Date();\noneMonth.setMonth(now.getMonth() + 1);\n$(\"#monthFromNow\").append(oneMonth.toString());\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>one mo. = Thu Dec 22 112 15:16:01 GMT-0500 (Eastern Standard Time)\n\none yr. = Sun Jan 22 2012 15:16:01 GMT-0500 (Eastern Standard Time)\n</code></pre>\n\n<p>The year has <code>Dec 22 112</code> - ??  The month is correctly displaying <code>Jan 22 2012</code>.</p>\n\n<p>If you want to tinker with it, <a href=\"http://jsbin.com/alezaj/edit#javascript,html,live\">http://jsbin.com/alezaj/edit#javascript,html,live</a>.  This is in Chrome and Firefox.</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1324585282,
            "question_id": 8609261,
            "score": 11,
            "tags": [
                "javascript"
            ],
            "title": "How to determine one year from now in Javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You don't need jQuery.</p>\n\n<pre><code>document.title = 'My new title here';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>With javascript. jQuery won't help you here:</p>\n\n<pre><code>document.title = 'New Title';\n</code></pre>\n\n<p>You can insert that into a jQuery mouseover callback function if you want.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Try: </p>\n\n<pre><code>document.title = 'title';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I'll extend on these other answers, this code should do it in entirety, just be sure to change the class in the selector, and the new Title Text.</p>\n\n<pre><code>(function(){\n    var oldtitle;\n    jQuery('a.yourlink').hover(\n        function () {\n           oldtitle = document.title;\n           document.title = 'Your New Title';\n        },\n        function () {\n            document.title = oldtitle;\n        }\n    );\n})();\n</code></pre>\n\n<p>Here is a jsfiddle demo I made that changes the text of the object, rather than the window title: <a href=\"http://jsfiddle.net/MpZGf/1/\">http://jsfiddle.net/MpZGf/1/</a> </p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>How can I modify the existing title to the document with Jquery as mouseover title change like that on facebook title link.</p>\n",
            "last_activity_date": 1418655305,
            "question_id": 6715339,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "page-title"
            ],
            "title": "Change Title With Javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You should position input[file] just above your custom control. And then bind to it`s onclick.</p>\n\n<p>Also make in it bigger font-size, as only this way you can increase it's height.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In your example, your file input did not have an id, yet you are trying to reference it with #input.  This works for me:</p>\n\n<pre><code>$('#button').click(function() {\n    $('input[type=file]').click();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<blockquote>\n  <p>There's a good script that just does that\n  <a href=\"http://valums.com/ajax-upload/\" rel=\"nofollow\">http://valums.com/ajax-upload/</a></p>\n</blockquote>\n\n<p>Not sure to see this link work again in the future, but in the mean time you still can get a look to this alternative solution that look pretty fine ;)\n<a href=\"http://fineuploader.com/index.html\" rel=\"nofollow\">http://fineuploader.com/index.html</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Tested today the simple code given in the question and the situation has changed:</p>\n\n<ul>\n<li>IE9: works</li>\n<li>Chrome23: works</li>\n<li>Firefox15: works</li>\n</ul>\n\n<p>There is just one catch - on IE the .click() is a blocking operation while on other browsers it is not.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have to open file upload dialog by clicking some other button i.e i am hiding file upload control(visibility:hidden) and on clicking of some other button i want to open that dialog.\nBelow is the code which i am having:</p>\n\n<pre><code>&lt;input type=\"file\" style=\"visibility:hidden;\"/&gt;\n</code></pre>\n\n<p>Below is the javascript:</p>\n\n<pre><code> $('#button').click(function()\n{\n$('input[type=file]').click();\n});\n</code></pre>\n\n<p>it is working fine in Firfox 4 and IE8 but in chrome12 it is not working i.e the dialog is not \ngetting opened.\nAny idea why?</p>\n",
            "last_activity_date": 1406639692,
            "question_id": 6292825,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "file-upload"
            ],
            "title": "open file upload dialog on click"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><strong>EDIT:</strong> Starting over with answer now that I have the code that is running.</p>\n\n<p>Looking at your updated code, this should work:</p>\n\n<p><strong>Example:</strong> <a href=\"http://jsbin.com/ekege3/\">http://jsbin.com/ekege3/</a></p>\n\n<pre><code>var result = [\n    buildList($('.productCodeID &gt; .productitemcell'), 'skulist'),\n    buildList($('.productQuantityID &gt; .productitemcell &gt; input'), 'quantitylist'),\n    buildList($('.productPriceID &gt; .productitemcell'), 'pricelist')\n];\n\nresult[ 2 ] = result[ 2 ].replace(/\\$/g, '');\n\nvar string = result.join('&amp;');\n</code></pre>\n\n<hr>\n\n<p><strong>Side note:</strong> You can shorten your <code>buildList</code> function a little like this:</p>\n\n<pre><code>function buildList(items, name) {\n    return (name + '=') + items.map(function() {\n        return (this.value || $(this).text());\n    }).get().join(',');\n}\n</code></pre>\n\n<hr>\n\n<p><strong>Original answer:</strong> </p>\n\n<p><s>If you have a string, just use <code>.replace()</code>.</p>\n\n<pre><code>var str = \"pricelist=$15.00,$19.50,$29.50\";\n\nstr = str.replace(/\\$/g, '');\n</code></pre>\n\n<p>Or are you saying that you have a variable <code>pricelist</code> containing an Array? If so, do this:</p>\n\n<pre><code>var pricelist = [\"$15.00\",\"$19.50\",\"$29.50\"];\n\nfor( var i = 0, len = pricelist.length; i &lt; len; i++ ) {\n    pricelist[ i ] = pricelist[ i ].replace('$', '');\n}\n</code></pre>\n\n<hr>\n\n<p><strong>EDIT:</strong> It sounds as though the <code>buildList</code> method returns an Array.</p>\n\n<p>One way to check would be to do this:</p>\n\n<pre><code>alert( Object.prototype.toString.call( result[2] ) );\n</code></pre>\n\n<p>And see what it gives you.</p>\n\n<p>Anyway, assuming it's an Array, here's the updated version of the second example.</p>\n\n<pre><code>var result = [\n    buildList($('.productCodeID &gt; .productitemcell'), 'skulist'),\n    buildList($('.productQuantityID &gt; .productitemcell &gt; input'), 'quantitylist'),\n    buildList($('.productPriceID &gt; .productitemcell'), 'pricelist')\n];\n\n// verify the data type\nalert( Object.prototype.toString.call( result[ 2 ] ) );\n\n// loop over result[ 2 ], replacing the $ with ''\nfor( var i = 0, len = result[ 2 ].length; i &lt; len; i++ ) {\n    result[ 2 ][ i ] = result[ 2 ][ i ].replace('$', '');\n}\n\nvar string = result.join('&amp;');\n</code></pre>\n\n<p></s></p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<pre><code>var price = $(\"div\").text().replace(\"$\", \"\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm building a string of amounts but need to remove the dollar signs. I have this jQuery code:</p>\n\n<pre><code>  buildList($('.productPriceID &gt; .productitemcell'), 'pricelist')\n</code></pre>\n\n<p>It's returning</p>\n\n<pre><code>pricelist=$15.00,$19.50,$29.50\n</code></pre>\n\n<p>I need to remove the dollar signs but can't seem to figure it out. Tried using .trim but I think that removes only white space.</p>\n\n<p>Sorry for the newbie question! Thanks in advance for any help!</p>\n\n<p>Here's the full code:</p>\n\n<pre><code>function buildList(items, name) {\nvar values = [];\nitems.each(function() {\nvalues.push(this.value || $(this).text());\n});\nreturn name + '=' + values.join(',');\n}\n\nvar result = [\nbuildList($('.productCodeID &gt; .productitemcell'), 'skulist'),\nbuildList($('.productQuantityID &gt; .productitemcell &gt; input'), 'quantitylist'),\nbuildList($('.productPriceID &gt; .productitemcell'), 'pricelist')\n];\n\nvar string = result.join('&amp;');\n</code></pre>\n\n<p>Here is the raw code before the javascript runs</p>\n\n<pre><code>&lt;span class=\"productPriceID\"&gt;\n&lt;div class=\"productitemcell\"&gt;$15.00&lt;/div&gt;\n&lt;div class=\"productitemcell\"&gt;$19.50&lt;/div&gt;\n&lt;div class=\"productitemcell\"&gt;$29.50&lt;/div&gt;\n&lt;/span&gt;\n</code></pre>\n",
            "last_activity_date": 1374140832,
            "question_id": 4209130,
            "score": 11,
            "tags": [
                "javascript",
                "regex",
                "string"
            ],
            "title": "Removing dollar signs from prices"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>JavaScript code would generally be loaded using a script tag, like so:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"test.js\"&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You need to use the <code>&lt;script&gt;</code> tag to include JavaScript source files:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"mysrc.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>The end tag must be the full <code>&lt;/script&gt;</code>, don't abbreviate the way you can with some tags as in <code>&lt;script type=\"text/javascript\" src=\"...\"/&gt;</code>.</p>\n\n<p>Yes, alert statements in the included source will appear when they are evaluated by the browser.</p>\n\n<p>For information on the uses of the <code>&lt;link&gt;</code> tag, see <a href=\"http://www.w3.org/TR/html401/struct/links.html#h-12.3\">w3.org</a>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>No. A Link tag like is for CSS files or for <a href=\"http://www.w3.org/TR/REC-html40/struct/links.html\" rel=\"nofollow\">relational</a> links (like <code>next</code>).</p>\n\n<p>This is not the way to load javascript into the page. You need to use the <code>&lt;script&gt;</code> tag:</p>\n\n<pre><code>&lt;script language=\"javascript\" src=\"file.js\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Using jquery/javascript you can hook into the click event on the href element. You can then do any processing you need.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>No. There was a proposal to allow:</p>\n\n<pre><code>&lt;link rel=\"script\" href=\".../script.js\"/&gt;\n</code></pre>\n\n<p>analogously to stylesheets. This is even quoted as an example in the <a href=\"http://www.w3.org/TR/html4/sgml/dtd.html\">HTML 4 DTD</a>, but browser implementation never happened. Shame, as this would have been much cleaner.</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>The other option for this is, you can dynamically insert a script file into the current document, by creating a SCRIPT tag, setting its \"src\" attribute to the URI of the script, and then inserting it as a child of the page's HEAD node.</p>\n\n<p>Doing those things will get the browser to fetch the script file, load it into the document, and execute it.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>To answer your question directly, no. Not by that method. However I was led to this question while searching a similar issue which lead me to this question. Seeing the answers already supplied which for the most part are correct I went to check syntax on <a href=\"http://w3schools.com/\" rel=\"nofollow\">http://w3schools.com/</a> . It seems that with HTML5 there is a new attribute for for the script elements in html.</p>\n\n<p>This new attribute allows javascript files to be defered or loaded and executed asynchronously (not to be confused with AJAX). </p>\n\n<p>I'm just going to leave the link here and let you read up on the details yourself as it is already supplied on the internet.</p>\n\n<p><a href=\"http://www.w3schools.com/tags/att_script_async.asp\" rel=\"nofollow\">http://www.w3schools.com/tags/att_script_async.asp</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Possible rationale why not:</p>\n\n<ul>\n<li><p><code>link</code> elements are only allowed where \"Metadata content\" is allowed, typically <code>head</code>, and not in the <code>body</code>. See: <a href=\"http://www.w3.org/TR/html5/document-metadata.html#the-link-element\" rel=\"nofollow\">Contexts in which this element can be used</a>. All embedded elements that go in the <code>body</code> have separate elements for them: <code>img</code>, <code>iframe</code>, etc.</p></li>\n<li><p><code>link</code> elements must be empty, and <code>script</code> may be non-empty. See: <a href=\"http://www.w3.org/TR/html5/document-metadata.html#the-link-element\" rel=\"nofollow\">Content model</a></p></li>\n</ul>\n\n<p>Therefore it is natural to have a separate element for JavaScript, and since we must have a separate element, it is better not to duplicate functionality with <code>link rel=\"script\"</code>.</p>\n\n<p>This theory also explains why <code>img</code> and <code>style</code> have separate elements:</p>\n\n<ul>\n<li><p><code>img</code> can be placed in the body, so it gets a separate element, even though it must be empty.</p></li>\n<li><p><code>style</code> can be non-empty, so it gets a separate element, even though until HTML5 it could not be placed in the <code>body</code> (now it can via <code>scoped</code>, but still not to include external scripts).</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Can I load javascript code using <code>&lt;link&gt;</code> tag in my website ?</p>\n\n<p>For example I have a javascript file, <code>test.js</code>, which contains the simple code <code>alert('hello');</code></p>\n\n<p>Can I make the popup window appear using:</p>\n\n<pre><code>&lt;link href=\"test.js\"&gt;&lt;/link&gt;\n</code></pre>\n",
            "last_activity_date": 1425806184,
            "question_id": 2631635,
            "score": 11,
            "tags": [
                "html",
                "css",
                "javascript"
            ],
            "title": "Can I load javascript code using &lt;link&gt; tag?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The string doesn't contain a backslash, it contains the <code>\\s</code> escape sequence. </p>\n\n<pre><code>var str = \"This is my \\\\string\";\n</code></pre>\n\n<p>And if you want a regular expression, you should have a regular expression, not a string.</p>\n\n<pre><code>var replaced = str.replace(/\\\\/, \"\\\\\\\\\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>The problem is that the \\ in your first line isn't even recognized. It thinks the backslash is going to mark an escape sequence, but \\s isn't an escape character, so it's ignored. Your var str is interpreted as just \"This is my string\". Try <code>str.indexOf(\"\\\\\")</code> - you'll find it's -1, since there is no backslash at all. If you control the content of str, do what David says - add another \\ to escape the first.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I haven't tried this, but the following <em>should</em> work</p>\n\n<pre><code>var replaced = str.replace((new RegExp(\"\\s\"),\"\\\\s\");\n</code></pre>\n\n<p>Essentially you don't want to replace \"\\\", you want to replace the character represented by the \"\\s\" escape sequence.</p>\n\n<p>Unfortunately you're going to need to do this for every letter of the alphabet, every number, symbol, etc in order to cover all bases</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Got stumped by this for ages and all the answers kept insisting that the source string needs to already have escaped backslashes in it ... which isn't always the case.</p>\n\n<p>Do this ..</p>\n\n<p>var replaced = str.replace(String.fromCharCode(92),String.fromCharCode(92,92));</p>\n\n<p>Glenn</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>here is my string:</p>\n\n<pre><code>var str = \"This is my \\string\";\n</code></pre>\n\n<p>This is my code:</p>\n\n<pre><code>var replaced = str.replace(\"/\\\\/\", \"\\\\\\\\\");\n</code></pre>\n\n<p>I can't get my output to be: </p>\n\n<pre><code>\"This is my \\\\string\"\n</code></pre>\n\n<p>I have tried every combination I can think of for the regular expression and the replacement value.</p>\n\n<p>Any help is appreciated!</p>\n",
            "last_activity_date": 1395723782,
            "question_id": 2479309,
            "score": 11,
            "tags": [
                "javascript",
                "replace",
                "backslash"
            ],
            "title": "Javascript and backslashes replace"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>how about the <code>first</code> selector</p>\n\n<pre><code>var name = $(\"input[type='submit']:first\").val();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Try:</p>\n\n<pre><code>$(this).children(\"input[type='submit']:first\").val();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 25
                }
            ],
            "body": "<p>I have a form in HTML with multiple inputs of type submit:</p>\n\n<pre><code>&lt;form id = \"myForm1\" action=\"doSomethingImportant/10\" class=\"postLink\" method=\"post\"&gt;\n&lt;input type=\"hidden\" id=\"antiCSRF\" name=\"antiCSRF\" value=\"12345\"&gt;&lt;/input&gt;\n&lt;input type=\"submit\" value=\"clickThisLink\"&gt;&lt;/input&gt;\n&lt;input type=\"submit\" value=\"Don'tclickThisLink\"&gt;&lt;/input&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>What I want to do is select only the first input with type submit while ignoring the others, the snippet of code I currently have is as follows, note it is within a for-each loop that goes through all forms on my page, hence (this) to avoid confusion:</p>\n\n<pre><code>var name = $(this).find(\"input[type='submit']\").val();\n</code></pre>\n\n<p>I'm thinking this already grabs the first input of type submit by default, I'm not sure if that assumption is correct or if there's a more formal way of going about it, thanks.</p>\n",
            "last_activity_date": 1259587538,
            "question_id": 1766652,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "xhtml"
            ],
            "title": "jQuery Selecting the first child with a specific attribute"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>It seems this issue happens when you have mismatch between angular.js and angular-mocks.js Make sure the two files are of the same version.</p>\n\n<p>Please ignore my original comment to the question</p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>I had experienced exactly the same issues with our rails project.</p>\n\n<p>We upgraded angular.js to 1.2.24, and then our teaspoon testsuite started failing. I looked into angular.js sources/commits story etc., and then realized, that we had forgot to update angular mocks (we were using old 1.2.20 version, so we need to run <code>bundle update rails-assets-angular-mocks</code> to force this change). After applying new mocks (they already have <code>$$checkUrlChange</code> function mock) everything started working.</p>\n\n<p>So It looks like you also try to use old mocks objects.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have a following controller:</p>\n\n<pre><code>.controller('ProjectUserAddCtrl', ['$scope', 'ProjectUser', '$q', 'i18nNotifications',     \nfunction($scope, ProjectUser, $q, i18nNotifications) {\n    var buildUnassignedUsers = function(users, project) {\n        var unassignedUsers = [];\n        angular.forEach(users, function(user) {\n            var match;\n            angular.forEach(project.projectUsers, function(projectUser) {\n                if(match) {return;}\n                if(projectUser.user.id === user.id) {\n                    match = true;\n                }\n            });\n\n            if(!match) {\n                unassignedUsers.push(user);\n            }\n        });\n\n        $scope.unassignedUsers = unassignedUsers;\n    };     \n\n    $q.all([\n            $scope.users,\n            $scope.project\n    ]).then(function(result) {\n            buildUnassignedUsers($scope.users, $scope.project);\n            $scope.$watch('project', function(newVal) { \n                buildUnassignedUsers($scope.users, $scope.project); }, true\n            );\n    });\n}]);\n</code></pre>\n\n<p>And a following test in jasmine:</p>\n\n<pre><code>describe('ProjectUserAddCtrl', function() {\n    var ctrl;\n    beforeEach(function(){\n        $scope.users = [];\n        $scope.project = {\n            projectUsers: []\n        };\n        ctrl = $controller('ProjectUserAddCtrl', {$scope:$scope, ProjectUser:ProjectUser, $q:$q, i18nNotifications:i18nNotifications});\n    });\n\n    it('should create a new instance', function() {\n        expect(ctrl).toBeDefined();\n    });\n\n    // this test fails!\n    it('should create a list of unassigned users', function() {\n        $scope.$apply(); // need to call apply to resolve promises\n        expect($scope.unassignedUsers).toBeDefined();\n    });\n\n});\n</code></pre>\n\n<p>'should create a list of unassigned users' test fails with this error:</p>\n\n<p>TypeError: 'undefined' is not a function(evaluating $browser.$$checkUrlChange())</p>\n\n<p>I really have no idea why. Any help appreciated.</p>\n",
            "last_activity_date": 1410774898,
            "question_id": 25785149,
            "score": 10,
            "tags": [
                "javascript",
                "angularjs",
                "jasmine",
                "karma-jasmine"
            ],
            "title": "jasmine test fails with undefined is not a function(evaluating $browser.$$checkUrlChange())"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>In the first example, you're passing the <code>toggle</code> function for jQuery to execute as the event handler.</p>\n\n<p>However, when jQuery <em>executes</em> the event handler, it sets the value of <code>this</code> to be the DOM element the event fired on.</p>\n\n<p><code>toggle</code>, however, expects it to be the jQuery object (which it <em>would</em> be if called normally), as it uses <a href=\"https://github.com/jquery/jquery/blob/10024c25820f08139f11d924cec552a26dfbba18/src/effects.js#L579\" rel=\"nofollow\"><code>this.animate()</code> in its implementation</a>.</p>\n\n<p>This is why you see \"undefined is not a function\", as <code>this.animate</code> is \"undefined\", and you're trying to call it as a function.</p>\n\n<hr>\n\n<p>It's important to appreciate the resolution of <code>this</code> inside a function is deferred until the function is executed. This means a single function can see a different <code>this</code> value between invocations. The value of <code>this</code> can be altered using <code>bind()</code>, <code>new</code>, <code>call()</code>, <code>apply()</code> or by referencing the object differently; for more info see <a href=\"http://www.quirksmode.org/js/this.html\" rel=\"nofollow\">here</a>, or <a href=\"http://stackoverflow.com/questions/3127429/javascript-this-keyword\">JavaScript &quot;this&quot; keyword</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>When you use <code>this</code> in a JS function, it refers to <em>whatever object the function is currently being called on</em>, not where it was defined. For instance, you can define a function and copy it onto another object, like this:</p>\n\n<pre><code>foo = {'name': 'foo'}; bar = {'name': 'bar'};\nfoo.test= function() { console.log(this.name); }\nbar.test= foo.test;\nfoo.test(); // logs 'foo'\nbar.test(); // logs 'bar'\n</code></pre>\n\n<p>When you run <code>foo.test()</code>, <code>this</code> is set to point at <code>foo</code>; but when you run the same function as <code>bar.test()</code>, <code>this</code> is set to <code>bar</code> instead. There is nothing in the function that knows it was originally part of <code>foo</code>, so you basically have two separate but identical functions, like this:</p>\n\n<pre><code>foo.test = function() { console.log(this.name); }\nbar.test = function() { console.log(this.name); }\n</code></pre>\n\n<p>When you run <code>$(\"#title\").click($(\"#content\").toggle);</code>, a similar thing happens - you get a reference to the <code>toggle</code> function, and <em>copy that function</em> into jQuery's list of event handlers. When the callback runs, the <code>$(\"#content\")</code> part is forgotten, just like the <code>foo</code> was above, so when the implementation in jQuery looks at <code>this</code> to see what you want to toggle, it will find the wrong thing.</p>\n\n<p>Exactly what it finds instead has an extra little quirk: jQuery sets <code>this</code> on click handlers to be the DOM element that was clicked on (there are various ways in JS of explicitly telling a function what it should use as <code>this</code>). The exact error comes about because the implementation of <code>toggle</code> is expecting a jQuery object, not a native DOM object, but even if a jQuery object was set as <code>this</code>, it would be <em>the wrong node</em>: you clicked on <code>$('#title')</code>, but want to toggle <code>$('#content')</code>, and jQuery has no way of knowing that.</p>\n\n<p>For completeness, to explain why <code>$(\"#title\").click(function() { $(\"#content\").toggle(); }</code> <em>does</em> work: here the function being saved in jQuery is an anonymous function, which doesn't make any use of <code>this</code>, so doesn't care what it gets set to when the callback finally fires. When the event runs (when you click) it calls <code>toggle</code> with an explicit context (the object returned by the <code>$('#content')</code> lookup), which is exactly what it's expecting.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong><em>The</em></strong> jQuery function, as in this -> <code>$()</code>, is just a function, think of it as</p>\n\n<pre><code>var $ = function(selector, context) {\n   // do stuff with selector etc\n}\n</code></pre>\n\n<p>That's really simplified, but when you're calling <strong><em>the</em></strong> jQuery function (as in <code>$()</code>) with a valid selector, it gets the DOM node and returns something like this.</p>\n\n<pre><code>[\n    0        : &lt;div id=\"title\"&gt;&lt;/div&gt;, \n    context  : document, \n    selector : \"#title\", \n    jquery   : \"1.11.0\",\n    .....\n    etc\n]\n</code></pre>\n\n<p>this is the array-like object jQuery returns, and as you can see <code>0</code> is the native DOM node, and it's the reason we can do <code>$('#title')[0]</code> to get the native DOM node.</p>\n\n<p>There is however something that one really can't see from a simple <code>console.log</code>, and that's the methods that are prototyped onto that array-like object, we could however use a <code>for..in</code> loop to see them in the console.</p>\n\n<pre><code>var title = $('#title');\n\nfor (var key in title) \n    console.log(key)\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/adeneo/k3q25/1/\" rel=\"nofollow\"><strong>FIDDLE</strong></a></p>\n\n<p>This would return a long list of all the prototyped and non-prototyped methods available on this object</p>\n\n<pre><code>get\neach\nmap\nfirst\nlast\neq\nextend\nfind\nfilter\nnot\nis\nhas\nclosest\n....\netc\n</code></pre>\n\n<p>Notice that these are all the jQuery methods added to the <code>$()</code> function with <code>$.prototype</code>, but jQuery uses a shorter name, <code>$.fn</code>, but it does the same thing.</p>\n\n<p>So all the jQuery functions we know are added to the main <code>$()</code> function as properties, and the <code>new</code> keyword is used internally to return a new instance of the <code>$()</code> function with those prototyped properties, and that's why we can use dot notation, or for that matter bracket notation and chain on methods to the <code>$()</code> function, like this</p>\n\n<pre><code>$().find()\n// or\n$()[find]()\n</code></pre>\n\n<p>When objects are extended with prototyped properties like this, the value of <code>this</code> is also set inside the methods, so now that we understand a little bit about how it works, we can recreate a really simple jQuery version</p>\n\n<pre><code>var $ = function(selector, context) {\n    if (this instanceof $) {\n\n        this.context = context || document;\n        this[0]      = this.context.querySelector(selector);\n\n        return this;\n\n    }else{\n\n        return new $(selector, context);\n\n    }\n}\n</code></pre>\n\n<p>This is simplified <strong>a lot</strong> from how jQuery works, but in principle it's the same, when <code>$()</code> is called, it checks if it's an instance of itself, otherwise it creates a new instance with the <code>new</code> keyword and calls itself again as a new instance.<br>\nWhen <em>it is</em> a new instance, it gets the element and the other properties it needs, and returns those.</p>\n\n<p>If we were to prototype on a method to that instance, we could chain it like jQuery does, so lets try that</p>\n\n<pre><code>$.prototype.css = function(style, value) {\n    this[0].style[style] = value;\n}\n</code></pre>\n\n<p>and now we can do this</p>\n\n<pre><code>$('#title').css('color', 'red');\n</code></pre>\n\n<p>we've almost created jQuery, only 10000 lines of code to go.</p>\n\n<p><a href=\"http://jsfiddle.net/adeneo/bs5a9/1/\" rel=\"nofollow\"><strong>FIDDLE</strong></a></p>\n\n<p>Notice how we have to use <code>this[0]</code> to get the element, we don't have to do that in jQuery when we use something like click, we can just use <code>this</code>, so how does that work ?</p>\n\n<p>Lets simplify that as well, as it's crucial to understand why the code in the question doesn't work</p>\n\n<pre><code>$.prototype.click = function(callback) {\n    var element = this[0]; // we still need [0] to get the element\n\n    element.addEventListener('click', callback.bind(element), false);\n    return this;\n}\n</code></pre>\n\n<p>What we did there was use <code>bind()</code> to set the value of <code>this</code> inside the callback function so we don't have to use <code>this[0]</code>, we can simply use <code>this</code>.</p>\n\n<p><a href=\"http://jsfiddle.net/adeneo/bs5a9/3/\" rel=\"nofollow\"><strong>FIDDLE</strong></a></p>\n\n<p>Now that's cool, but now we can no longer use any of the other methods we've created and prototyped to the object, as <code>this</code> is no longer the object, it's the DOM node, so this fails</p>\n\n<pre><code> $('#element').click(function() {\n     this.css('color', 'red'); // error, &lt;div id=\"element\".. has no css()\n\n     // however this would work, as we now have the DOM node\n     this.style.color = 'red';\n });\n</code></pre>\n\n<p>The reason it fails is because we now have the native DOM node, and not the jQuery object.</p>\n\n<p>So <em>finally</em> to answer the question asked.<br>\nThe reason this works  ...</p>\n\n<pre><code>$(\"#title\").click(function() {\n    $(\"#content\").toggle();\n});\n</code></pre>\n\n<p>... is because you're calling the <code>toggle()</code> function, and the correct value of <code>this</code> is set, in this case it would be the jQuery object containing <code>#content</code> as <code>toggle()</code> has no callback that uses <code>bind()</code>, it simply passes the jQuery object, an object similar to what we can see at the top of this answer</p>\n\n<p>Internally <code>toggle()</code> does</p>\n\n<pre><code>$.prototype.toggle = function() {\n    this.animate();\n}\n</code></pre>\n\n<p>see how it uses <code>this</code> directly whithout doing anything other than calling another jQuery function, it <strong><em>requires</em></strong> that <code>this</code> is a jQuery object, <strong>not</strong> a native DOM element.</p>\n\n<p>Lets repeat that, <code>toggle()</code> requires that <code>this</code> inside the function <strong>is a jQuery object</strong>, it can not be anything other than a jQuery object.</p>\n\n<p>-</p>\n\n<p>Now lets move on back to <code>click</code> again, when you do</p>\n\n<pre><code>$(\"#title\").click(function() {\n     console.log(this)\n});\n</code></pre>\n\n<p>the console would show the native DOM element, something like <code>&lt;div id=\"title\"&gt;&lt;/div&gt;</code></p>\n\n<p>Now we can reference a named function instead</p>\n\n<pre><code>$(\"#title\").click(myClickHandler);\n\nfunction myClickHandler() {\n     console.log(this)\n});\n</code></pre>\n\n<p>and the result would be exactly the same, we would get the native DOM element in the console -> <code>&lt;div id=\"title\"&gt;&lt;/div&gt;</code>, which is not suprising as this is exactly the same as the one above using an anonymous function.</p>\n\n<p>What you're doing is referencing the <code>toggle()</code> function like this</p>\n\n<pre><code>$(\"#title\").click($(\"#content\").toggle);\n</code></pre>\n\n<p>It's exactly the same as the example above, but now you're referencing <code>toggle()</code>, and when called <strong>it will be called with the value of <code>this</code> set to the native DOM element in the click function</strong>, it would go like this</p>\n\n<pre><code>    $(\"#title\").click($(\"#content\").toggle);\n\n    $.prototype.toggle = function() {\n        console.log(this); // would still be &lt;div id=\"title\"&gt;&lt;/div&gt;\n\n        this.animate(); // fails as &lt;div id=\"title\"&gt;&lt;/div&gt; has no animate()\n    }\n</code></pre>\n\n<p>This is what is happening, <code>toggle()</code> is expecting <code>this</code> to be a jQuery object, but instead it gets the native DOM node for the element in the click handler.</p>\n\n<p>Read that again, <strong><code>this</code> inside the <code>toggle()</code> function would be the native <code>#title</code> element</strong>, which isn't even the correct element, as that's how javascript and jQuery works, see the long explanation above for how <code>this</code> is set in the prototyped methods etc.</p>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p>I am trying to set up an on-click callback for an HTML that causes another node to become visible. Along the way, I was surprised to find out that the following two statements are not equivalent:</p>\n\n<pre><code>$(\"#title\").click($(\"#content\").toggle);\n$(\"#title\").click(function() {\n    $(\"#content\").toggle();\n}\n</code></pre>\n\n<p>The first statement ultimately results in a TypeError when the element is finally clicked, with a message of \"undefined is not a function,\" which I surmised to indicate that whatever I was assigned to the onclick callback ended up being undefined and somehow doesn't persist in memory.</p>\n\n<p>The workaround is simple (just use the statement of the second form), but what I really want to understand is <em>why</em> passing the toggle function as an object doesn't work when it finally gets called. I can see that the two are semantically different: the first executes the <code>$(\"#content\")</code> call when binding the event and the other executes it when the event occurs, but I don't understand why that should matter.</p>\n\n<p>In case it is relevant to the answer, the code in question is located inside of a function (that has presumably returned by the time the user can click anything).</p>\n",
            "last_activity_date": 1400255994,
            "question_id": 23690216,
            "score": 10,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Persistence of JQuery Functions"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It is important when something javascript related is not working to inspect the console for errors first.</p>\n\n<p>When inspecting the console on your linked demo, I observed an error:</p>\n\n<blockquote>\n  <p>Uncaught SyntaxError: Unexpected token ILLEGAL </p>\n</blockquote>\n\n<p>It pointed to this line of code (line 1000 by inspection)</p>\n\n<pre><code>var jDescriptions= [\"&lt;br /&gt;\n&lt;b&gt;Warning&lt;/b&gt;:  implode() [&lt;a href='function.implode'&gt;function.implode&lt;/a&gt;]: Invalid arguments passed in &lt;b&gt;/home/nikollr3/domains/nikollr3.three.axc.nl/public_html/index.php&lt;/b&gt; on line &lt;b&gt;1007&lt;/b&gt;&lt;br /&gt;\n\"];\n</code></pre>\n\n<p>The implication is that you have some sort of unicode character there which is causing the issue. Perhaps it is causing a line break. Either way, the result is an open ended string and an error which nullifies the code being examined after this line. The following code which does not execute is a majority of the scripting for the page.</p>\n\n<p>I would suggest that you either manually type out this line in order to ensure the unicode is gone, or you can always try to run it through <strong><a href=\"http://jsbeautifier.org/\" rel=\"nofollow\">jsbeautifier.org/</a></strong>. Keep in mind, console errors are always a good place to start.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I guess you want something like this:</p>\n\n<p><a href=\"http://jsfiddle.net/DAaRw/8/\" rel=\"nofollow\">http://jsfiddle.net/DAaRw/8/</a></p>\n\n<p>I have added a CSS class 'action-button' to the button. To hide button in collapsed state use this CSS:</p>\n\n<pre><code>#accordion .action-button {\n    float: right;\n    display: none;\n}\n#accordion .ui-state-active .action-button {\n    display: inline;\n}\n</code></pre>\n\n<p>To add hover effect:</p>\n\n<pre><code>$('#accordion .action-button').hover(\n    function() {\n        $(this).addClass('ui-state-hover');\n    },\n    function() {\n        $(this).removeClass('ui-state-hover');\n    }\n);\n</code></pre>\n\n<p>To make the button clickable, use something like this:</p>\n\n<pre><code>$('#accordion .action-button a').click(function () {\n    self.location.href = $(this).attr(\"href\");\n});\n</code></pre>\n\n<p><strong>Edit:</strong></p>\n\n<p>To fix the default and hover states of the button, use this CSS:\n<a href=\"http://jsfiddle.net/DAaRw/10/\" rel=\"nofollow\">http://jsfiddle.net/DAaRw/10/</a></p>\n\n<pre><code>#accordion .action-button.ui-state-default .ui-icon {\n    background-image: url(http://code.jquery.com/ui/1.9.2/themes/base/images/ui-icons_888888_256x240.png);\n}\n#accordion .action-button.ui-state-hover .ui-icon {\n    background-image: url(http://code.jquery.com/ui/1.9.2/themes/base/images/ui-icons_454545_256x240.png);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>You can do a CSS only based solution.</p>\n\n<p>If you inspect the HTML that gets generated from the library you are using, you will notice that when a button is:</p>\n\n<ul>\n<li>Hovered, the class <code>ui-state-hover</code> is used</li>\n<li>Selected, the class <code>ui-state-active</code> is used</li>\n<li>Not Selected, none of the above two classes are used</li>\n</ul>\n\n<p>Using the above understanding, you can hide the Edit station button (plus icon) by default, and only make it visible on hover or when selected:</p>\n\n<pre><code>#clickStat span.ui-state-default {\n    display: none;\n}\n\n#clickStat.ui-state-hover span.ui-state-default, \n#clickStat.ui-state-active span.ui-state-default {\n    display: block;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can tweak this accordion menu:\n<a href=\"http://www.dynamicdrive.com/dynamicindex17/haccordion.htm\" rel=\"nofollow\">http://www.dynamicdrive.com/dynamicindex17/haccordion.htm</a>\nThis is a content-based accordion:\n<a href=\"http://www.dynamicdrive.com/dynamicindex17/ddaccordion.htm\" rel=\"nofollow\">http://www.dynamicdrive.com/dynamicindex17/ddaccordion.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What i need: a jQuery UI framework button like the one that can be found here: <a href=\"http://jqueryui.com/themeroller/\">http://jqueryui.com/themeroller/</a> (look at Framework Icons) in a jQuery accordion header.</p>\n\n<p>Live Sample: <a href=\"http://www.nikollr3.three.axc.nl/\">http://www.nikollr3.three.axc.nl/</a></p>\n\n<p>(From what i understood; a button can also be mimicked by an Achor tag with the right jQuery UI class.)</p>\n\n<p>Requirements:\nI do not want the button/icon to be shown when the header is NOT currently selected. On the other hand, if the header is selected, and thus also it's DIV is shown, i want the icon/button to be displayed. Look at the first image from the left, in that state i do not want the \"+\" button to be shown. In all other images (where it is focused/selected) i do want it to be shown.<strong>This currently NOT implemented; how to do this?</strong></p>\n\n<p>-> If the button is clicked, i want statProp to be displayed, i have a function showStatProp() for this.</p>\n\n<p>Issues i am having currently:\n<strong>Hover over 'button' is not doing anything</strong>, because currently when the header is selected, the same css is somehow applied to the button as is to the header (look at the cross color of the button: dark grey to black) (there is no seperate hover).</p>\n\n<p>How to get to this? i am currently stuck as there is limited documentation/information to be found on the internet about this specific thing i am trying.</p>\n\n<pre><code>function showStatProp()\n            {\n                if(document.getElementById(\"statProp\").style.display == \"none\")\n                {\n                    document.getElementById(\"statProp\").style.display = 'block';\n                }\n                else\n                {\n                    document.getElementById(\"statProp\").style.display = 'none';\n                }\n            }\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;body onkeydown=\"controlCheck(event)\" onkeyup=\"clearPress()\" &gt;\n        &lt;div id=\"application\" style=\"position:absolute\"&gt;\n            &lt;div id=\"accordion\"&gt;\n                 &lt;h3 id=\"clickStat\"&gt;Stations\n                 &lt;span style=\"float:right;\" class=\"ui-state-default ui-corner-all\"&gt;\n                &lt;a class=\"ui-icon ui-icon-plusthick btpad\" href=\"/getPunten.php\"&gt;Edit&lt;/a&gt;\n                &lt;/span&gt;&lt;/h3&gt;\n                 &lt;div id=\"stations\"&gt;\n                    &lt;input type=\"text\" id=\"stations_ac\" onclick=\"this.value='';\" /&gt;\n                     &lt;div id=\"selectedStationDiv\"&gt;\n                     &lt;/div&gt;\n                    &lt;hr&gt;\n                        &lt;div id=\"statProp\" style=\"display:none;\"&gt;\n                    &lt;p&gt;Name: &lt;input type=\"text\" style=\"float:right; clear:right\" size=\"19\" id=\"statNam\" onclick=\"this.value='';\" /&gt;&lt;/p&gt;\n                    &lt;p style=\"margin-top:15px\"&gt;\n                    Type:\n                    &lt;select id =\"statTyp\" style =\"float:right\" onchange=\"\"&gt;\n                    &lt;option&gt;&lt;/option&gt;\n                    &lt;option title=\"Test\"&gt;T&lt;/option&gt;\n                    &lt;/select&gt;\n                    &lt;/p&gt;    \n                    &lt;p style=\"margin-top:15px\"&gt;\n                    Admtyp:\n                    &lt;select id =\"admtyp\" style =\"float:right\" onchange=\"FilterByToestanden()\"&gt;\n                    &lt;option&gt;&lt;/option&gt;\n                    &lt;option title=\"Alarm\"&gt;A&lt;/option&gt;\n                    &lt;option title=\"Alarm\"&gt;D&lt;/option&gt;\n                    &lt;option title=\"Urgent alarm\"&gt;U&lt;/option&gt;\n                    &lt;/select&gt;\n                    &lt;/p&gt;\n                    &lt;p&gt;Image: &lt;input type=\"text\" id=\"statBildnam\" size=\"12\" style =\"float:right;text-transform: uppercase\"&gt;&lt;/p&gt;\n\n                    &lt;p id=\"devText\"&gt;Text:\n                    &lt;input type=\"text\" style=\"float:right; clear:right\" id=\"texts_ac\" onclick=\"this.value='';\" /&gt;&lt;/p&gt;\n                    &lt;p&gt;\n                    &lt;p id =\"respLine\"&gt;Responsible: &lt;select id=\"statResp\" style=\"margin-bottom:10px;margin-top:6px;\"&gt;&lt;option&gt;WERKHUIS-EMG-WEVELGEM&lt;/option&gt;&lt;/select&gt;&lt;/p&gt;\n                    &lt;button id=\"btnCrtStat\" onClick=\"createStation()\" type=\"button\" style=\"margin-left:26px;margin-top:-3px\"&gt;Create&lt;/button&gt;\n                        &lt;/div&gt;\n\n                &lt;/div&gt;                                          \n\n                &lt;h3 id=\"clickImages\" onclick=\"listImages()\"&gt;Images&lt;/h3&gt;\n                &lt;div id=\"imagesList\" style=\"overflow:auto\"&gt;\n\n                    &lt;ul id='imagesUL'&gt;&lt;/ul&gt;\n                &lt;button onClick=\"addImage()\" type=\"button\" style=\"margin-left:26px;margin-top:-3px\"&gt;Add image&lt;/button&gt;\n                &lt;/div&gt;\n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/rWgQB.png\" alt=\"enter image description here\"></p>\n",
            "last_activity_date": 1387726617,
            "question_id": 20545477,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "jquery-ui"
            ],
            "title": "jQuery Accordion header with jQuery UI icon button (hide/show + hover/click)"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<pre><code>&lt;%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;&lt;c:forEach&gt;YOUR CODE &lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;c:forEach var=\"i\" begin=\"1\" end=\"5\"&gt;\n   NAME &lt;c:out value=\"${i}\"/&gt;&lt;p&gt;\n&lt;/c:forEach&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>This would produce following result:</p>\n\n<pre><code>NAME 1\nNAME 2\nNAME 3\nNAME 4\nNAME 5\n</code></pre>\n\n<p>Above is simplest example..\nfollowing is with items var</p>\n\n<pre><code>&lt;table&gt;\n      &lt;c:forEach var=\"student\" items=\"${person.person}\" varStatus=\"counter\"&gt;\n        &lt;c:choose&gt;\n          &lt;c:when test=\"${counter.count % 2 == 0}\"&gt;\n            &lt;c:set var=\"rowStyle\" scope=\"page\" value=\"odd\"/&gt;\n          &lt;/c:when&gt;\n          &lt;c:otherwise&gt;\n            &lt;c:set var=\"rowStyle\" scope=\"page\" value=\"even\"/&gt;\n          &lt;/c:otherwise&gt;\n        &lt;/c:choose&gt;\n        &lt;tr class=\"\u00c3\u00c2${rowStyle}\"&gt;\n          &lt;td&gt;${student.name}&lt;/td&gt;\n          &lt;td&gt;${student.age}&lt;/td&gt;\n          &lt;td&gt;${student.height}&lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/c:forEach&gt;\n    &lt;/table&gt;\n</code></pre>\n\n<p>this way you can use the  <code>&lt;c:forEach&gt;  &lt;/c:forEach&gt;</code> TAG..</p>\n\n<p>If you have any specific problem then please explain</p>\n",
                    "is_accepted": true,
                    "score": 13
                }
            ],
            "body": "<p>Hey How to use  loop in  tag in jsp page?</p>\n\n<p>i want to use JSTL data to pass in data tables</p>\n\n<p>my code is like :</p>\n\n<p></p>\n\n<pre><code>        $(document).ready(function() {\n\n\n            /* Init DataTables */\n            var startString = \"[\";\n            var mainString = \"\";\n            var endString = \"]\";\n\n\n            var temp = ${k.size()};\n        &lt;c:forEach items=\"${k}\" var=\"stdn\" varStatus=\"status\"&gt;\n            temp--;\n            if (temp === 0) {\n                mainString = mainString + \"{key:\\\"\" + \"${stdn.key}\" + \"\\\",name:\\\"\" + \"${stdn.value.name}\" + \"\\\",rollno:\\\"\" + \"${stdn.value.rollNo}\" + \"\\\",marks:\\\"\" + \"${stdn.value.marks}\" + \"\\\"}\";\n            } else {\n                mainString = mainString + \"{key:\\\"\" + \"${stdn.key}\" + \"\\\",name:\\\"\" + \"${stdn.value.name}\" + \"\\\",rollno:\\\"\" + \"${stdn.value.rollNo}\" + \"\\\",marks:\\\"\" + \"${stdn.value.marks}\" + \"\\\"},\";\n            }\n        &lt;/c:forEach&gt;\n                var finalString = startString + mainString + endString;\n                var final = eval(finalString);\n</code></pre>\n",
            "last_activity_date": 1377755425,
            "question_id": 18502977,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "jsp",
                "foreach",
                "jstl"
            ],
            "title": "how to Use &lt;c:forEach&gt; in scripts tag on JSP page?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Prepend <code>\\ufeff</code> to the string. See <a href=\"http://msdn.microsoft.com/en-us/library/ie/2yfce773(v=vs.94).aspx\">http://msdn.microsoft.com/en-us/library/ie/2yfce773(v=vs.94).aspx</a></p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>I'm editing my original answer.  The above answer really demands elaboration as this is a convoluted solution by Node.js.</p>\n\n<p>The short answer is, yes, this code works.</p>\n\n<p>The long answer is, no, FEFF is not the byte order mark for utf-8.  Apparently node took some sort of shortcut for writing encodings within files. FEFF is the UTF16 Little Endian encoding as can be seen within the Byte Order Mark wikipedia article and can also be viewed within a binary text editor after having written the file.  I've verified this is the case.</p>\n\n<p><a href=\"http://en.wikipedia.org/wiki/Byte_order_mark#Representations_of_byte_order_marks_by_encoding\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Byte_order_mark#Representations_of_byte_order_marks_by_encoding</a></p>\n\n<p>Apparently, <strong>Node.JS uses the \\ufeff to signify any number of encoding</strong>.  It takes the \\ufeff marker and converts it into the correct byte order mark based on the 3rd options parameter of writeFile.  The 3rd parameter you pass in the encoding string.  Node.JS takes this encoding string and <strong>converts</strong> the \\ufeff fixed byte encoding into any one of the actual encoding's byte order marks.</p>\n\n<p>UTF-8 Example:</p>\n\n<p>fs.writeFile(someFilename, '\\ufeff' + html, { encoding: 'utf8' }, function(err) {\n   /* The actual byte order mark written to the file is EF BB BF */\n}</p>\n\n<p>UTF-16 Little Endian Example:</p>\n\n<p>fs.writeFile(someFilename, '\\ufeff' + html, { encoding: 'utf16le' }, function(err) {\n   /* The actual byte order mark written to the file is FF FE */\n}</p>\n\n<p>So, as you can see the \\ufeff is simply a marker stating any number of resulting encodings.  The actual encoding that makes it into the file is directly dependent the encoding option specified.  The marker used within the string is really irrelevant to what gets written to the file.</p>\n\n<p>I suspect that the reasoning behind this is because they chose not to write byte order marks and the 3 byte mark for UTF-8 isn't easily encoded into the javascript string to be written to disk.  So, they used the UTF16LE BOM as a placeholder mark within the string which gets substituted at write-time.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I need to add a UTF-8 byte-order-mark to generated text data on client side. How do I do that?</p>\n\n<p>Using <code>new Blob(['\\xEF\\xBB\\xBF' + content])</code> yields <code>'\u00ef\u00bb\u00bf\"my data\"'</code>,  of course.</p>\n\n<p>Neither did <code>'\\uBBEF\\x22BF'</code> work (with <code>'\\x22' == '\"'</code> being the next character in <code>content</code>).</p>\n\n<p>Is it possible to prepend the UTF-8 BOM in JavaScript to a generated text?</p>\n\n<p><sup>Yes, I really do need the UTF-8 BOM in this case.</sup></p>\n",
            "last_activity_date": 1421435246,
            "question_id": 17879198,
            "score": 10,
            "tags": [
                "javascript",
                "utf-8",
                "blob",
                "fileapi",
                "byte-order-mark"
            ],
            "title": "Adding UTF-8 BOM to string/Blob"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><strong>ID in a HTML page is supposed to be unique</strong></p>\n\n<p>That is the reason it targets only the first instance of the element found.</p>\n\n<p>Replace the <strong>elements with class</strong> instead</p>\n\n<pre><code>$('.comment').each(function() {\n       // Your code\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>You have duplicate ids, Which is invalid and also jQuery ID selector(or any other id selector like document.getElementById which internally jQuery uses because element with ids are indexed by most browsers and are meant to be unique) will return only the first one that appears in DOM. Change it to class and see it working:</p>\n\n<pre><code>$('.comment').each(function() { \n     var thz =  $(this); var repl =\n     thz.html(thz.html().replace(/\\D+/g, '')); \n});\n</code></pre>\n\n<p>HTML</p>\n\n<pre><code>&lt;a class=\"comment1\" href=\"#\"&gt; c2f\u0111f011. &lt;/a&gt; \n&lt;a class=\"comment1\" href=\"#\"&gt;c20ff113. &lt;/a&gt; \n&lt;a class=\"comment1\" href=\"#\"&gt; c201gf76341. &lt;/a&gt;\n</code></pre>\n\n<p>By the way had your id been like this:-</p>\n\n<pre><code>&lt;a id=\"comment1\" href=\"#\"&gt; c2f\u0111f011. &lt;/a&gt; \n&lt;a id=\"comment2\" href=\"#\"&gt;c20ff113. &lt;/a&gt; \n&lt;a id=\"comment3\" href=\"#\"&gt; c201gf76341. &lt;/a&gt;\n</code></pre>\n\n<p>Starts with  Attribute selector will help you (But slow you down literally, since this is an attribute selector and lose the advantage of using IDs).</p>\n\n<pre><code>$('[id^=comment]').each(function() { // While using this better give a container context $('[id^=comment]', 'container').each(function...\n    var thz = $(this);\n    var repl = thz.html(thz.html().replace(/\\D+/g, ''));\n});\n</code></pre>\n\n<h3><a href=\"http://jsfiddle.net/jqwGJ/\" rel=\"nofollow\">Demo</a></h3>\n\n<p><strong>Moral: IDs must be unique</strong></p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<pre><code>$('.comment').each(function() { var thz = $(this); var repl = thz.html(thz.html().replace(/\\D+/g, '')); });\n</code></pre>\n\n<p>replace ur element with id <code>comment</code> to a class <code>comment</code>.</p>\n\n<p>If you use ID several times on elements the selector will only pick the first element with that ID.</p>\n\n<p>But when you use class instead, the selector will pick all the element having that class.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>If you really don't want to change the html you can use selector by attribute. But as others suggested, using class instead of id is the best option here.</p>\n\n<pre><code>$('div[id=\"comment\"]').each(function(){})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I am using the \"replace\" function to remove all non-numeric values in a div.</p>\n\n<p>It seems Jquery replace only affects the first element.</p>\n\n<p>Here is my Jquery:</p>\n\n<pre><code>$('#comment').each(function() {\n    var thz = $(this);\n    var repl = thz.html(thz.html().replace(/\\D+/g, ''));\n});\n</code></pre>\n\n<p>HTML Code:</p>\n\n<pre><code>&lt;a id=\"comment1\" href=\"#\"&gt; c2f\u0111f011. &lt;/a&gt;\n&lt;a id=\"comment1\" href=\"#\"&gt; c20ff113. &lt;/a&gt;\n&lt;a id=\"comment1\" href=\"#\"&gt; c201gf76341. &lt;/a&gt;\n</code></pre>\n\n<p>Result:</p>\n\n<blockquote>\n  <p>2011 c20ff113. c201gf76341.</p>\n</blockquote>\n\n<p>The result I want is:</p>\n\n<blockquote>\n  <p>2011 20113 20176341</p>\n</blockquote>\n",
            "last_activity_date": 1380947228,
            "question_id": 16889752,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "Why does Jquery only affect the first div element?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>This bug is fixed in TS 0.9.0 alpha as you can see below: \n<img src=\"http://i.stack.imgur.com/L71ZB.png\" alt=\"no error in Ts 0.9.0 alpha\"></p>\n\n<p>The playground is still running 0.8.3. </p>\n\n<p>This basically happens because methods on some key interfaces ( Object, Number, String ) etc get cached as a performance optimization. </p>\n\n<p>If you run this. The first time it loads you will not see that error. <a href=\"http://www.typescriptlang.org/Playground/#src=class%20Foo%20%7B%0A%0A%7D%0A%0Ainterface%20Object%20%7B%0A%20%20%20%20GetFoo%28%29%3a%20Foo;%0A%20%20%20%20GetFooAsString%28%29%3a%20string;%0A%7D%0A%0A//This%20is%20problematic...%0AObject.prototype.GetFoo%20=%20function%28%29%20%7B%0A%20%20%20%20return%20new%20Foo%28%29;%0A%20%20%20%20//%20Note,%20this%20line%20is%20just%20for%20testing...I%20don%27t%20want%20my%20function%20to%20just%20return%20a%20blank%20instance%20of%20Foo!%0A%7D%0A%0A//This%20is%20ok.%0AObject.prototype.GetFooAsString%20=%20function%20%28%29%20%7B%0A%20%20%20%20return%20this.GetFoo%28%29.toString%28%29;%0A%7D\" rel=\"nofollow\">Try It</a>. </p>\n\n<p>As soon as you make an edit to that code, the parser goes through the code again, and since it cached the old interface definition sees a duplicate function definition and then effectively blows up. The more edits you make to that file the more complicated the error statement will get. </p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>I used to have:</p>\n\n<pre><code>// See if an array contains an object\nArray.prototype.contains = function (obj) {\n    var i = this.length;\n    while (i--) {\n        if (this[i] === obj) {\n            return true;\n        }\n    }\n    return false;\n}\n</code></pre>\n\n<p>in order to make that code compile with typescript I added the line:</p>\n\n<pre><code>interface Array {\n    contains(obj: Object): boolean;\n}\n</code></pre>\n\n<p>Thanks <a href=\"http://stackoverflow.com/users/390330/basarat\">basarat</a>!</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am currently working on a TypeScript API, which requires some additional features binding to the Object prototype (Object.prototype).</p>\n\n<p>Consider the following code:</p>\n\n<pre><code>class Foo {\n\n}\n\ninterface Object {\n    GetFoo(): Foo;\n    GetFooAsString(): string;\n}\n\n//This is problematic...\nObject.prototype.GetFoo = function() {\n    return new Foo();\n    // Note, this line is just for testing...I don't want my function to just return a blank instance of Foo!\n}\n\n//This is ok.\nObject.prototype.GetFooAsString = function () {\n    return this.GetFoo().toString();\n}\n</code></pre>\n\n<p>You might want to try this directly at the <a href=\"http://www.typescriptlang.org/Playground/#src=class%20Foo%20%7B%0A%0A%7D%0A%0Ainterface%20Object%20%7B%0A%20%20%20%20GetFoo%28%29%3a%20Foo;%0A%20%20%20%20GetFooAsString%28%29%3a%20string;%0A%7D%0A%0A//This%20is%20problematic...%0AObject.prototype.GetFoo%20=%20function%28%29%20%7B%0A%20%20%20%20return%20new%20Foo%28%29;%0A%20%20%20%20//%20Note,%20this%20line%20is%20just%20for%20testing...I%20don%27t%20want%20my%20function%20to%20just%20return%20a%20blank%20instance%20of%20Foo!%0A%7D%0A%0A//This%20is%20ok.%0AObject.prototype.GetFooAsString%20=%20function%20%28%29%20%7B%0A%20%20%20%20return%20this.GetFoo%28%29.toString%28%29;%0A%7D\">Playground</a>.</p>\n\n<p>As you can see, I have a class called <code>Foo</code> (not the actual object name I will be using). I have also extended the <code>Object</code> interface to include two new functions. Finally I have implemented the functions against the <code>prototype</code> (these work in pure JavaScript, it's just TypeScript that complains).</p>\n\n<p>Where I have annotated \"<em>//this is problematic...</em>\" TypeScript highlights this with a red squiggly, and shows the following error:</p>\n\n<pre><code>Cannot convert '() =&gt; Foo' to '{ (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; }': Call signatures of types '() =&gt; Foo' and '{ (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; (): Foo; }' are incompatible\n() =&gt; Foo\n</code></pre>\n\n<p>Either this is just a TypeScript bug (I know it's still in development phase, so a lot of the bugs need ironing out, and I have illustrated some of these on CodePlex already), or, I'm missing something.</p>\n\n<p>Why am I getting this issue?</p>\n\n<p>If it's not a TypeScript bug, how can I fix this?</p>\n",
            "last_activity_date": 1383686633,
            "question_id": 16813118,
            "score": 10,
            "tags": [
                "javascript",
                "object",
                "interface",
                "prototype",
                "typescript"
            ],
            "title": "Extending Object.prototype with TypeScript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Use ClojureScript's <code>this-as</code> macro: <a href=\"https://github.com/clojure/clojurescript/commit/09ff093dc86b455e3090ce3612c5e01f3b5bada6\">https://github.com/clojure/clojurescript/commit/09ff093dc86b455e3090ce3612c5e01f3b5bada6</a>.</p>\n",
                    "is_accepted": true,
                    "score": 13
                }
            ],
            "body": "<p>Is there a way to access the \"this\" object in clojurescript?</p>\n\n<p>I am <a href=\"http://stackoverflow.com/questions/15530791/in-jquey-how-do-i-pass-an-event-to-a-parent-anchor-if-needed?noredirect=1#comment22001349_15530791\">having issues</a> with event propagation when I wrap an icon with an anchor and try to attach a handlder to the anchor. Without access to \"this\" in the handler I am constantly dealing with the inner icon firing the event sometimes and the anchor firing other times.</p>\n\n<p>edit:</p>\n\n<p>As was suggested below, this-as is the way to do this. An example could be</p>\n\n<pre><code>(defn my-handler\n  [e]\n  (this-as this\n    (let [data-attr (.data ($ this) \"my-attr\")]\n      (log data-attr))))\n</code></pre>\n",
            "last_activity_date": 1373918465,
            "question_id": 15531261,
            "score": 10,
            "tags": [
                "javascript",
                "google-closure",
                "clojurescript"
            ],
            "title": "Accessing &quot;this&quot; in Clojurescript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><code>toEqual</code> makes a deep equality comparison. Which means that when all the properties of the objects' values are equal, the objects are considered to be equal.</p>\n\n<p>As you said, you are using resource which adds a couple of properties to the objects in the array.</p>\n\n<p>So this <code>{id:12}</code> becomes this <code>{id:12, $then: function, $resolved: true}</code> which are not equal. Id checking should be fine if you are just testing if you set the values properly.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>I just had a similar problem and implemented a custom matcher as follows, based on many approaches:</p>\n\n<pre><code>beforeEach(function() {\n  this.addMatchers({\n    toBeSimilarTo: function(expected) {\n      function buildObject(object) {\n        var built = {};\n        for (var name in object) {\n          if (object.hasOwnProperty(name)) {\n            built[name] = object[name];\n          }\n        }\n        return built;\n      }\n\n      var actualObject = buildObject(this.actual);\n      var expectedObject = buildObject(expected);\n      var notText = this.isNot ? \" not\" : \"\";\n\n      this.message = function () {\n        return \"Expected \" + actualObject + notText + \" to be similar to \" + expectedObject;\n      }\n\n      return jasmine.getEnv().equals_(actualObject, expectedObject);\n\n    }\n  });\n});\n</code></pre>\n\n<p>and then used this way:</p>\n\n<pre><code>it(\"gets the right data\", function() {\n  expect(scope.jobs[0]).toBeSimilarTo(myJob);\n});\n</code></pre>\n\n<p>Of course, it's a very simple matcher and doesn't support many cases, but I didn't need anything more complex than that. You can wrap the matchers in a config file.</p>\n\n<p>Check <a href=\"http://stackoverflow.com/questions/14541287/jasmine-toequal-for-complex-objects-mixed-with-functions\">this answer</a> for a similar implementation.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I had the same problem so I just called <code>JSON.stringify()</code> on the objects to be compared.</p>\n\n<pre><code>expect( JSON.stringify( $scope.angularResource ) == JSON.stringify( expectedValue )).toBe( true );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<h2>Short answer:</h2>\n\n<p>The existing answers all recommend either stringifying your objects, or creating a custom matcher/comparison function. But, there is an easier way: use <code>angular.equals()</code> in your Jasmine <code>expect</code> call, instead of using Jasmine's built-in <code>toEqual</code> matcher.</p>\n\n<p><code>angular.equals()</code> will ignore the additional properties added to your objects by Angular, whereas <code>toEqual</code> will fail the comparison for, say, <code>$promise</code> being on one of the objects.</p>\n\n<hr>\n\n<h2>Longer explanation:</h2>\n\n<p>I ran across this same problem in my AngularJS application. Let's set the scenario:</p>\n\n<p>In my test, I created a local object and a local array, and expected them as responses to two GET requests. Afterwards, I compared the result of the GET's with the original object and array. I tested this using four different methods, and only one gave proper results.</p>\n\n<p><strong>Here's a portion of foobar-controller-spec.js:</strong></p>\n\n<pre><code>var myFooObject = {id: 1, name: \"Steve\"};\nvar myBarsArray = [{id: 1, color: \"blue\"}, {id: 2, color: \"green\"}, {id: 3, color: \"red\"}];\n\n...\n\nbeforeEach(function () {\n    httpBackend.expectGET('/foos/1').respond(myFooObject);\n    httpBackend.expectGET('/bars').respond(myBarsArray);\n\n    httpBackend.flush();\n});\n\nit('should put foo on the scope', function () {\n    expect(scope.foo).toEqual(myFooObject);\n    //Fails with the error: \"Expected { id : 1, name : 'Steve', $promise : { then : Function, catch : Function, finally : Function }, $resolved : true } to equal { id : 1, name : 'Steve' }.\"\n    //Notice that the first object has extra properties...\n\n    expect(scope.foo.toString()).toEqual(myFooObject.toString());\n    //Passes, but invalid (see below)\n\n    expect(JSON.stringify(scope.foo)).toEqual(JSON.stringify(myFooObject));\n    //Fails with the error: \"Expected '{\"id\":1,\"name\":\"Steve\",\"$promise\":{},\"$resolved\":true}' to equal '{\"id\":1,\"name\":\"Steve\"}'.\"\n\n    expect(angular.equals(scope.foo, myFooObject)).toBe(true);\n    //Works as expected\n});\n\nit('should put bars on the scope', function () {\n    expect(scope.bars).toEqual(myBarsArray);\n    //Fails with the error: \"Expected [ { id : 1, color : 'blue' }, { id : 2, color : 'green' }, { id : 3, color : 'red' } ] to equal [ { id : 1, color : 'blue' }, { id : 2, color : 'green' }, { id : 3, color : 'red' } ].\"\n    //Notice, however, that both arrays seem identical, which was the OP's problem as well.\n\n    expect(scope.bars.toString()).toEqual(myBarsArray.toString());\n    //Passes, but invalid (see below)\n\n    expect(JSON.stringify(scope.bars)).toEqual(JSON.stringify(myBarsArray));\n    //Works as expected\n\n    expect(angular.equals(scope.bars, myBarsArray)).toBe(true);\n    //Works as expected\n});\n</code></pre>\n\n<p><strong>For reference, here's the output from <code>console.log</code> using <code>JSON.stringify()</code> and <code>.toString()</code>:</strong></p>\n\n<pre><code>LOG: '***** myFooObject *****'\nLOG: 'Stringified:{\"id\":1,\"name\":\"Steve\"}'\nLOG: 'ToStringed:[object Object]'\n\nLOG: '***** scope.foo *****'\nLOG: 'Stringified:{\"id\":1,\"name\":\"Steve\",\"$promise\":{},\"$resolved\":true}'\nLOG: 'ToStringed:[object Object]'\n\n\n\nLOG: '***** myBarsArray *****'\nLOG: 'Stringified:[{\"id\":1,\"color\":\"blue\"},{\"id\":2,\"color\":\"green\"},{\"id\":3,\"color\":\"red\"}]'\nLOG: 'ToStringed:[object Object],[object Object],[object Object]'\n\nLOG: '***** scope.bars *****'\nLOG: 'Stringified:[{\"id\":1,\"color\":\"blue\"},{\"id\":2,\"color\":\"green\"},{\"id\":3,\"color\":\"red\"}]'\nLOG: 'ToStringed:[object Object],[object Object],[object Object]'\n</code></pre>\n\n<p><em>Notice how the stringified object has extra properties, and how <code>toString</code> yields invalid data which will give a false positive.</em></p>\n\n<h2>From looking at the above, here's a summary of the different methods:</h2>\n\n<ol>\n<li><code>expect(scope.foobar).toEqual(foobar)</code> : This fails both ways. When comparing objects, toString reveals that Angular has added extra properties. When comparing arrays, the contents seem identical, but this method still claims they are different.</li>\n<li><code>expect(scope.foo.toString()).toEqual(myFooObject.toString())</code> : This passes both ways. However, this is a false positive, since the objects are not being translated fully. The only assertion this makes is that the two arguments have the same number of objects.</li>\n<li><code>expect(JSON.stringify(scope.foo)).toEqual(JSON.stringify(myFooObject))</code> : This method gives the proper response when comparing arrays, but the object comparison has a similar fault to the raw comparison.</li>\n<li><code>expect(angular.equals(scope.foo, myFooObject)).toBe(true)</code> : <strong>This is the correct way to make the assertion.</strong> By letting Angular do the comparison, it knows to ignore any properties which were added in the backend, and gives the proper result.</li>\n</ol>\n\n<p><em>If it matters to anyone, I'm using AngularJS 1.2.14 and Karma 0.10.10, and testing on PhantomJS 1.9.7.</em></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Long story short: add <code>angular.equals</code> as a jasmine matcher.</p>\n\n<pre><code>beforeEach(function(){\n  this.addMatchers({\n    toEqualData: function(expected) {\n      return angular.equals(this.actual, expected);\n    }\n  });\n});\n</code></pre>\n\n<p>So, then you can use it as follows:</p>\n\n<pre><code>it('should preselect first client in array', function() {\n    //this passes:\n    expect(scope.selected.client).toEqualData(RESPONSE[0]);\n\n    //this fails:\n    expect(scope.selected.client).toEqual(RESPONSE[0]);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I'm just starting out writing tests for my AngularJS app and am doing so in Jasmine.</p>\n\n<p>Here are the relevant code snippets</p>\n\n<p>ClientController:</p>\n\n<pre><code>'use strict';\n\nadminConsoleApp.controller('ClientController',\n    function ClientController($scope, Client) {\n\n        //Get list of clients\n        $scope.clients = Client.query(function () {\n            //preselect first client in array\n            $scope.selected.client = $scope.clients[0];\n        });\n\n        //necessary for data-binding so that it is accessible in child scopes.\n        $scope.selected = {};\n\n        //Current page\n        $scope.currentPage = 'start.html';\n\n        //For Client nav bar\n        $scope.clientNavItems = [\n            {destination: 'features.html', title: 'Features'},\n        ];\n\n        //Set current page\n        $scope.setCurrent = function (title, destination) {\n            if (destination !== '') {\n                $scope.currentPage = destination;\n            }\n\n        };\n\n        //Return path to current page\n        $scope.getCurrent = function () {\n            return 'partials/clients/' + $scope.currentPage;\n        };\n\n        //For nav bar highlighting of active page\n        $scope.isActive = function (destination) {\n            return $scope.currentPage === destination ? true : false;\n        };\n\n        //Reset current page on client change\n        $scope.clientChange = function () {\n            $scope.currentPage = 'start.html';\n        };\n    });\n</code></pre>\n\n<p>ClientControllerSpec:</p>\n\n<pre><code>'use strict';\n\nvar RESPONSE = [\n    {\n        \"id\": 10,\n        \"name\": \"Client Plus\",\n        \"ref\": \"client-plus\"\n    },\n    {\n        \"id\": 13,\n        \"name\": \"Client Minus\",\n        \"ref\": \"client-minus\"\n    },\n    {\n        \"id\": 23805,\n        \"name\": \"Shaun QA\",\n        \"ref\": \"saqa\"\n    }\n];\n\ndescribe('ClientController', function() {\n\n    var scope;\n\n    beforeEach(inject(function($controller, $httpBackend, $rootScope) {\n        scope = $rootScope;\n        $httpBackend.whenGET('http://localhost:3001/clients').respond(RESPONSE);\n        $controller('ClientController', {$scope: scope});\n        $httpBackend.flush();\n    }));\n\n    it('should preselect first client in array', function() {\n        //this fails.\n        expect(scope.selected.client).toEqual(RESPONSE[0]);\n    });\n\n    it('should set current page to start.html', function() {\n        expect(scope.currentPage).toEqual('start.html');\n    });\n});\n</code></pre>\n\n<p>The test fails:</p>\n\n<pre><code>Chrome 25.0 (Mac) ClientController should preselect first client in array FAILED\n    Expected { id : 10, name : 'Client Plus', ref : 'client-plus' } to equal { id : 10, name : 'Client Plus', ref : 'client-plus' }.\n    Error: Expected { id : 10, name : 'Client Plus', ref : 'client-plus' } to equal { id : 10, name : 'Client Plus', ref : 'client-plus' }.\n        at null.&lt;anonymous&gt; (/Users/shaun/sandbox/zong-admin-console-app/test/unit/controllers/ClientControllerSpec.js:43:39) \n</code></pre>\n\n<p>Does anyone have any ideas on why this might be happening?</p>\n\n<p>Also .. as I'm new to writing AngularJS tests, any comments on whether I'm setting up my test wrong or whether it can be improved will be welcome.</p>\n\n<p>Thanks,\nShaun</p>\n\n<p>Update:</p>\n\n<p>Including ClientService:</p>\n\n<pre><code>'use strict';\n\nAdminConsoleApp.services.factory('Client', function ($resource) {\n    //API is set up such that if clientId is passed in, will retrieve client by clientId, else retrieve all.\n    return $resource('http://localhost:port/clients/:clientId', {port: ':3001', clientId: '@clientId'}, {\n\n    });\n});\n</code></pre>\n\n<p>Also, I got around the problem by comparing ids instead:</p>\n\n<pre><code>it('should preselect first client in array', function () {\n    expect(scope.selected.client.id).toEqual(RESPONSE[0].id);\n});\n</code></pre>\n",
            "last_activity_date": 1413382762,
            "question_id": 15487510,
            "score": 10,
            "tags": [
                "javascript",
                "unit-testing",
                "angularjs",
                "tdd",
                "jasmine"
            ],
            "title": "AngularJS + Jasmine: Comparing objects"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><em>Shader language scripts are just text.</em>  The text can be grabbed or generated from anywhere (that you can read or generate text).  Many tutorials just skip over the part where the magic happens and and the WebGL shader instances are created from the string obtained.  There's no reason you couldn't refer to the scripts externally like you propose, but you would need additional JavaScript to load the contents, <em>not the browser</em>.  Script tags are likely used in the tutorials primarily because if you give a script tag a type that the browser doesn't understand, the browser <em>skips execution of the tag's contents <strike>or retrieval of the script's source</strike></em>, so the tag's contents and attributes can be used however you desire.</p>\n\n<p>Edit: Well, I have to take some things back.  I decided to go through four browsers (Chrome, Firefox, IE9, Opera), and see what happens when you have a line</p>\n\n<pre><code>&lt;script type=\"x-shader/x-fragment\" id=\"shader-fs\" src=\"util/fs\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>in your html.  Turns out, the browser <em>does</em> load the file in every browser I tried, so I was wrong.  However, that doesn't mean the browser knows what to do with the file besides cache it.  I don't know what you mean by \"Why doesn't src=\"util/fs\" work???\".  In every browser I've tried, </p>\n\n<pre><code>alert(document.getElementById('shader-fs').src);\n</code></pre>\n\n<p>alerts the full path to the file when given a partial path. (Maybe this is your problem? You're expecting a partial path when the browser gives you a full one?)  Besides that, I'm not sure how to interpret your problem.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I tried your example but the browsers I tested do not give the contents of the a script tag if it is downloaded so the simple answer of why you can't do it is because browsers don't support what you want to do. </p>\n\n<p>I'm pretty sure the reason is it would allow cross origin resource access. The <code>&lt;script&gt;</code> tag was designed before people figured out cross origin access was a problem so they couldn't turn off cross origin scripts without breaking a bunch of sites. They could make everything else more strict. </p>\n\n<p>XMLHttpRequest for example does not allow cross origin access unless the server you're contacting gives permission. If script tags let you access that content you could use script tags to work around that restriction.</p>\n\n<p>The standard solution if you want to separate your shaders into separate files is to use XMLHttpRequest to download your files of which there are examples all over the place although I can post one here if you want.</p>\n\n<p>Another solution would be to use some kind of pre-compiler that takes a bunch of organized files and concatenates them into one big file. Lots of devs use this to merge their JavaScript files into 1 file for quicker downloading. So for example you could write a program that inserts script tags with your shaders into your html. Edit your source html file and script files separately, run the script, upload the resulting file.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You don't have to use <code>&lt;script&gt;</code> tags at all to load a shader program. Most tutorials and examples just use them as a container to store a string in the DOM of the webpage. The script type <code>\"x-shader/x-fragment\"</code> is meaningless for web browsers, so they don't execute the script. They do, however, store the content of that tag as a string in the DOM which can then later be accessed by \"real\" scripts. This only works when the script content is in the HTML file. <strong>When you load the script via a src attribute, the content does not become a text childnode of the script tag and thus can not be accessed through the DOM tree</strong>.</p>\n\n<p>You can just as well store the sourcecode for the shader as a string in a Javascript file:</p>\n\n<pre><code>// myVertextShader.glsl.js\nvar myVertexShaderSrc =         \n        \"attribute vec3 pos;\"+      \n        \"void main() {\"+        \n        \"   gl_Position = vec4(pos, 1.0);\"+     \n        \"}\"\n    ;\n</code></pre>\n\n<p>You would then compile the shader like this:</p>\n\n<pre><code>var vertexShader = gl.createShader(gl.VERTEX_SHADER);\ngl.shaderSource(vertexShader, myVertexShaderSrc);\ngl.compileShader(vertexShader);\n\ngl.attachShader(program, vertexShader);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>I have seen the following question where someone asked how to remove shaders from html:\n<a href=\"http://stackoverflow.com/questions/5878703/webgl-is-there-an-alternative-to-embedding-shaders-in-html\">WebGL - is there an alternative to embedding shaders in HTML?</a></p>\n\n<p>There are elaborate workarounds to load in a file containing the shader suggested in the answers to the question.</p>\n\n<p>In the tutorial I saw, the shader code is embedded directly in the html.\nThe javascript code refers to it using getElementById.  But it's ugly embedding the shader directly in the html for many reasons.  Why can't I just refer to it externally using the src= attribute?</p>\n\n<pre><code>&lt;script type=\"x-shader/x-fragment\" id=\"shader-fs\" src=\"util/fs\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>The above doesn't work, I just want to know why not.  This is clearly something to do with limitations on script itself, but I don't get it.</p>\n",
            "last_activity_date": 1403722513,
            "question_id": 14219947,
            "score": 10,
            "tags": [
                "javascript",
                "three.js",
                "glsl",
                "webgl"
            ],
            "title": "Why do shaders have to be in html file for webgl program?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>If I've understood your question correctly, you want to toggle between 'Open Curtain' and 'Close Curtain' -- changing to the 'open curtain' if it's closed or vice versa. If that's what you need this will work.</p>\n\n<pre><code>function change() // no ';' here\n{\n    if (this.value==\"Close Curtain\") this.value = \"Open Curtain\";\n    else this.value = \"Close Curtain\";\n}\n</code></pre>\n\n<p>Note that you don't need to use <code>document.getElementById(\"myButton1\")</code> inside change as it is called in the <strong>context</strong> of <code>myButton1</code> -- what I mean by context you'll come to know later, on reading books about JS.</p>\n\n<p><strong>UPDATE</strong>:</p>\n\n<p>I was wrong. Not as I said earlier, <code>this</code> won't refer to the element itself. You can use this:</p>\n\n<pre><code>function change() // no ';' here\n{\n    var elem = document.getElementById(\"myButton1\");\n    if (elem.value==\"Close Curtain\") elem.value = \"Open Curtain\";\n    else elem.value = \"Close Curtain\";\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>You are missing an opening quote on the id= and you have a semi-colon after the function declaration. Also, the input tag does not need a closing tag.</p>\n\n<p>This works:</p>\n\n<pre><code>&lt;input onclick=\"change()\" type=\"button\" value=\"Open Curtain\" id=\"myButton1\"&gt;\n\n&lt;script type=\"text/javascript\"&gt;\nfunction change()\n{\ndocument.getElementById(\"myButton1\").value=\"Close Curtain\";\n}\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It seems like there is just a simple typo error:</p>\n\n<ol>\n<li>Remove the semicolon after change(), there should not be any in the\nfunction declaration. </li>\n<li>Add a quote in front of the myButton1 declaration.</li>\n</ol>\n\n<p>Corrected code:</p>\n\n<pre><code>&lt;input onclick=\"change()\" type=\"button\" value=\"Open Curtain\" id=\"myButton1\" /&gt;\n...\nfunction change()\n{\n    document.getElementById(\"myButton1\").value=\"Close Curtain\"; \n}\n</code></pre>\n\n<p>A faster and simpler solution would be to include the code in your button and use the keyword this to access the button. </p>\n\n<pre><code>&lt;input onclick=\"this.value='Close Curtain'\" type=\"button\" value=\"Open Curtain\" id=\"myButton1\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Try this,</p>\n\n<pre><code>&lt;input type=\"button\" id=\"myButton1\" value=\"Open Curtain\" onClick=\"javascript:change(this);\"&gt;&lt;/input&gt;\n&lt;script&gt;\nfunction change(ref) {\n    ref.value=\"Close Curtain\";\n}\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There are lots of ways. And this should work too in all browsers and you don't have to use document.getElementById anymore since you're passing the element itself to the function.</p>\n\n<pre><code>&lt;input type=\"button\" value=\"Open Curtain\" onclick=\"return change(this);\" /&gt;\n\n&lt;script type=\"text/javascript\"&gt;\nfunction change( el )\n{\n    if ( el.value === \"Open Curtain\" )\n        el.value = \"Close Curtain\";\n    else\n        el.value = \"Open Curtain\";\n}\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>This is simple way to change Submit to loading state   \n\n &lt;button id=\"custSub\" type=\"submit\" class=\"button left tiny\" data-text-swap=\"Processing.. &amp;nbsp;\"&gt;Submit &amp;nbsp;&lt;i class=\"fa fa-angle-double-right\"&gt;&lt;/i&gt;&lt;/button&gt;\n\n\n    &lt;script&gt;\n    jQuery(document).ready(function ($) {\n\n        $(\"button\").on(\"click\", function() {\n          var el = $(this);\n          if (el.html() == el.data(\"text-swap\")) {\n            el.html(el.data(\"text-original\"));\n          } else {\n            el.data(\"text-original\", el.html());\n            el.html(el.data(\"text-swap\"));\n          }\n          setTimeout(function () {\n                el.html(el.data(\"text-original\"));\n           }, 500);\n        });\n\n    });\n    &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<pre><code>&lt;input type=\"button\" class=\"btn btn-default\"  value=\"click me changtext\"               id=\"myButton1\" onClick=\"changetext()\"  &gt;\n\n            &lt;script&gt;\n            function changetext() {\n                 var elem = document.getElementById(\"myButton1\");\n                if (elem.value==\"click me change text\")\n                    { \n                        elem.value = \"changed text here\";\n                    }\n                else\n                 {\n                     elem.value = \"click me change text\";\n                 }\n            }\n            &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>When I click on this button, I want the value to change. HTML:</p>\n\n<pre><code>&lt;input onclick=\"change()\" type=\"button\" value=\"Open Curtain\" id=myButton1\"&gt;&lt;/input&gt;\n</code></pre>\n\n<p>Javascript:</p>\n\n<pre><code>function change();\n{\ndocument.getElementById(\"myButton1\").value=\"Close Curtain\";\n}\n</code></pre>\n\n<p>The button is displaying open curtain right now and I want it to change to close curtain, is this correct? </p>\n",
            "last_activity_date": 1415605443,
            "question_id": 10671174,
            "score": 10,
            "tags": [
                "javascript",
                "button"
            ],
            "title": "Changing button text onclick"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Something like this will work?</p>\n\n<pre><code> (() =&gt; this.get(\"firstName\") * this.get(\"lastName\")).property()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think this is how you're supposed to write it:</p>\n\n<pre><code>MyApp.president = SC.Object.create {\n  firstName: \"Barack\",\n  lastName: \"Obama\",\n  fullName: (-&gt; \n    return @get 'firstName' + ' ' + @get 'lastName'\n    # Call this flag to mark the function as a property\n  ).property('firstName', 'lastName')\n}\n</code></pre>\n\n<p><a href=\"http://jashkenas.github.com/coffee-script/#try%3a%0AMyApp.president%20=%20SC.Object.create%20%7B%0A%20%20firstName%3a%20%22Barack%22,%0A%20%20lastName%3a%20%22Obama%22,%0A%20%20fullName%3a%20%28-%3E%20%0A%20%20%20%20return%20@get%20%27firstName%27%20+%20%27%20%27%20+%20@.get%20%27lastName%27%0A%20%20%20%20#%20Call%20this%20flag%20to%20mark%20the%20function%20as%20a%20property%0A%20%20%29.property%28%29%0A%7D\" rel=\"nofollow\">checkout this link</a></p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>There are a couple ways to define computed properties. Here are examples of each:</p>\n\n<pre><code>MyApp.president = Ember.Object.create\n  firstName: \"Barack\"\n  lastName: \"Obama\"\n  fullName: (-&gt; \n    @get 'firstName' + ' ' + @get 'lastName'\n  ).property('firstName', 'lastName')\n\nMyApp.president = Ember.Object.create\n  firstName: \"Barack\"\n  lastName: \"Obama\"\n  fullName: Ember.computed(-&gt; \n    @get 'firstName' + ' ' + @get 'lastName'\n  ).property('firstName', 'lastName')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>When using Ember.computed, you do not need to call .property() so you can use this form as well:</p>\n\n<pre><code>MyApp.president = Ember.Object.create\n  firstName: \"Barack\"\n  lastName: \"Obama\"\n  fullName: Ember.computed -&gt; @get 'firstName' + ' ' + @get 'lastName'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How would you translate this snippet of javascript to coffeescript?  Specifically I'm struggling with how to call <code>.property()</code> on the function definition.</p>\n\n<pre><code>MyApp.president = SC.Object.create({\n  firstName: \"Barack\",\n  lastName: \"Obama\",\n\n  fullName: function() {\n    return this.get('firstName') + ' ' + this.get('lastName');\n\n    // Call this flag to mark the function as a property\n  }.property('firstName', 'lastName')\n});\n</code></pre>\n",
            "last_activity_date": 1392824382,
            "question_id": 8464739,
            "score": 10,
            "tags": [
                "javascript",
                "coffeescript",
                "ember.js"
            ],
            "title": "Calling a method on a function definition in coffeescript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Numbers start with <code>0</code>(not <code>0x</code>) are octal numbers. Therefore <code>8</code> and <code>9</code> are not a valid octal numbers.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>here is a hint:</p>\n\n<pre><code>parseInt('011') = 9\n</code></pre>\n\n<p>If it's starting with 0 it's parsed as an octal number.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Always use the overload that takes the radix as the second parameter:</p>\n\n<pre><code>parseInt('011',10) = 11\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Others have answered why part.</p>\n\n<p>To remove, you can use <code>parseFloat</code>() or parseInt(value, base)\n<a href=\"http://jsfiddle.net/gbsandeep/HsrDx/\" rel=\"nofollow\">Fiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>When converting a string into decimal number in JavaScript, you may use the plus operator instead parseInt or parseFloat, like in this example:</p>\n\n<p>x = +(\"12\"); // to x is assigned a number 12, after its conversion from a string \"12\" </p>\n\n<p>x = +(\"1\" + \"2\"); // to x is assigned a number 12, after its conversion from a string \"12\" </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p><code>parseInt('1') = 1</code><br>\n<code>parseInt('01') = 1</code><br>\n<code>parseInt('5') = 5</code><br>\n<code>parseInt('05') = 5</code><br>\n<code>parseInt('8') = 8</code>  </p>\n\n<p>But why:<br>\n<code>parseInt('08') = 0</code><br>\n<code>parseInt('09') = 0</code></p>\n",
            "last_activity_date": 1355433996,
            "question_id": 8444980,
            "score": 10,
            "tags": [
                "javascript"
            ],
            "title": "Why does parseInt() return an unexpected result when I pass a string with a leading zero?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>/*jshint boss:true */\n</code></pre>\n\n<p>Experiment with the <a href=\"http://www.jshint.com/docs/options/\">options</a>.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I'm sure that jshint understands the expression fine, it is just that most people who write <code>if (a = b)</code> actually meant <code>if (a == b)</code> and so this generates a warning.</p>\n\n<p>Since your code is what you intended you could add an explicit test:</p>\n\n<pre><code>while ((element_iterator = element_iterator.nextSibling) !== null) { ... }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>It is an expression, and you can modify it to work with JSHint (although it's not nice) like so:</p>\n\n<pre><code>while(element_iterator.nextSibling) {\n    element_iterator = element_iterator.nextSibling;\n</code></pre>\n\n<p>For your last example. However, you don't need to do this. JSHint is only a tool to help you improve coding habits and correct mistakes, but given that what you have is clear, concise, and (in my opinion) the best way of doing it - just ignore those messages.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you really want to listen to JSHint, convert the expression to a boolean by:</p>\n\n<pre><code>while (!!(bookmark_element=bookmark_list[iterator++]))\n\n! means: Something that evaluates to true is converted to false,\n         something that evaluates to false is converted to true.\n</code></pre>\n\n<p>So, <code>!!</code> means: Convert something to the conditional representation.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>jshint can't tell if you really meant to make an assignment in the condition block, or if that was really supposed to be a comparison. The concern would be that other humans might have the same doubt. </p>\n\n<p>In the case of an iterator, I think you're okay.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How do I need to modify these lines to make jshint.com happy?</p>\n\n<p>An assignment is and expression...why doesn't jshint undersand this..obviously the intepreter does.</p>\n\n<pre><code>Line 572: while(bookmark_element=bookmark_list[iterator++])\n\nExpected a conditional expression and instead saw an assignment.\n\n\nLine 582: while(bookmark_element=bookmark_list[iterator++])\n\nExpected a conditional expression and instead saw an assignment.\n\n\nLine 623: while(element_iterator=element_iterator.nextSibling)\n\nExpected a conditional expression and instead saw an assignment.\n</code></pre>\n",
            "last_activity_date": 1386613759,
            "question_id": 8108184,
            "score": 10,
            "tags": [
                "javascript",
                "jshint"
            ],
            "title": "Why does jshint not recognize an assignment as an expression?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You should be able to reference the \"this\" keyword in your canceledUpload event handler.  That refers to the XMLHttpRequest.  Put this in the handler:</p>\n\n<pre><code>this.abort();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><code>addEventListener</code> will set the context (<code>this</code>) of <code>uploadCanceled</code> to <code>xhr</code>:</p>\n\n<pre><code>function uploadCanceled(evt) {\n    console.log(\"Cancelled: \" + this.status);\n}\n</code></pre>\n\n<p>Example: <a href=\"http://jsfiddle.net/wJt8A/\">http://jsfiddle.net/wJt8A/</a></p>\n\n<hr>\n\n<p>If, instead, you need to trigger <code>xhr.abort</code> through a \"Cancel\" click, you can return a reference and add any listeners you need after that:</p>\n\n<pre><code>function uploadFile() {\n    /* snip */\n    xhr.send(fd);\n\n    return xhr;\n}\n\ndocument.getElementById('submit').addEventListener('click', function () {\n    var xhr = uploadFile(),\n        submit = this,\n        cancel = document.getElementById('cancel');\n\n    function detach() {\n        // remove listeners after they become irrelevant\n        submit.removeEventListener('click', canceling, false);\n        cancel.removeEventListener('click', canceling, false);\n    }\n\n    function canceling() {\n        detach();\n        xhr.abort();\n    }\n\n    // detach handlers if XHR finishes first\n    xhr.addEventListener('load', detach, false);\n\n    // cancel if \"Submit\" is clicked again before XHR finishes\n    submit.addEventListener('click', canceling, false);\n\n    // and, of course, cancel if \"Cancel\" is clicked\n    cancel.addEventListener('click', canceling, false);\n}, false);\n</code></pre>\n\n<p>Example: <a href=\"http://jsfiddle.net/rC63r/1/\">http://jsfiddle.net/rC63r/1/</a></p>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>I am using HTML5 for uploading files . I have a button click event attached to the function uploadFile().It works fine. I also have a separate button to cancel the upload . I know we need to call xhr.abort(); But how do I access the xhr object in the uploadCanceled function ? I can make the xhr object global but that is not the proper way . Can  someone guide me here ?</p>\n\n<pre><code>function uploadFile(){ \n    var filesToBeUploaded = document.getElementById(\"fileControl\"); \n    var file = filesToBeUploaded.files[0]; \n    var xhr= new XMLHttpRequest(); \n    xhr.upload.addEventListener(\"progress\", uploadProgress, false);\n    xhr.addEventListener(\"load\", uploadComplete, false);\n    xhr.addEventListener(\"error\", uploadFailed, false);\n    xhr.addEventListener(\"abort\", uploadCanceled, false);\n\n\n    xhr.open(\"POST\", \"upload.php\", true); \n\n    var fd = new FormData();\n    fd.append(\"fileToUpload\", file);\n     xhr.send(fd); \n}\n\n\n    function uploadCanceled(evt) {\n        alert(\"Upload has been cancelled\");\n    } \n</code></pre>\n\n<p>Cheers</p>\n",
            "last_activity_date": 1355932879,
            "question_id": 7940213,
            "score": 10,
            "tags": [
                "javascript",
                "html5",
                "xmlhttprequest"
            ],
            "title": "Aborting the xmlhttprequest"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<pre><code>    var obj = {\n            'key1':'value',\n            '2':'value',\n            'key 1':'value'\n    }\n\n    console.log(obj.key1)\n    console.log(obj['key1'])\n    console.log(obj['2'])\n    console.log(obj['key 1'])\n    // will not work\n    console.log(obj.2)\n</code></pre>\n\n<p>Edit:</p>\n\n<blockquote>\n  <p>\"I'm specifically looking to target the index, just like the first example - if it's possible.\"</p>\n</blockquote>\n\n<p>Actually the 'index' is the key. If you want to store the position of a key you need to create a custom object to handle this.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p><em>\"I'm specifically looking to target the index, just like the first example - if it's possible.\"</em></p>\n</blockquote>\n\n<p>No, it isn't possible.</p>\n\n<p>The closest you can get is to get an Array of the object's keys, and use that:</p>\n\n<pre><code>var keys = Object.keys( obj );\n</code></pre>\n\n<p>...but there's no guarantee that the keys will be returned in the order you defined. So it could end up looking like:</p>\n\n<pre><code>keys[ 0 ];  // 'evenmore'\nkeys[ 1 ];  // 'something'\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>The only way I can think of doing this is by creating a method that gives you the property using <code>Object.keys();</code>.</p>\n\n<pre><code>var obj = {\n    dog: \"woof\",\n    cat: \"meow\",\n    key: function(n) {\n        return this[Object.keys(this)[n]];\n    }\n};\nobj.key(1); // \"meow\"\n</code></pre>\n\n<p>Demo: <a href=\"http://jsfiddle.net/UmkVn/\">http://jsfiddle.net/UmkVn/</a></p>\n\n<p>It would be possible to extend this to all objects using <code>Object.prototype;</code> but that isn't usually recommended.</p>\n\n<p>Instead, use a function helper:</p>\n\n<pre><code>var object = {\n  key: function(n) {\n    return this[ Object.keys(this)[n] ];\n  }\n};\n\nfunction key(obj, idx) {\n  return object.key.call(obj, idx);\n}\n\nkey({ a: 6 }, 0); // 6\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>If you are not sure Object.keys() is going to return you the keys in the right order, you can try this logic instead</p>\n\n<pre><code>var keys = []\nvar obj = {\n    'key1' : 'value1',\n    'key2' : 'value2',\n    'key3' : 'value3',\n}\nfor (var key in obj){\n    keys.push(key)\n}\nconsole.log(obj[keys[1]])\nconsole.log(obj[keys[2]])\nconsole.log(obj[keys[3]])\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>If I have an array like this:</p>\n\n<pre><code>var arr = ['one','two','three'];\n</code></pre>\n\n<p>I can access different parts by doing this:</p>\n\n<pre><code>console.log(arr[1]);\n</code></pre>\n\n<p>How can I access object properties by their order rather than by key?</p>\n\n<p>Example:</p>\n\n<pre><code>var obj = {\n    'something' : 'awesome',\n    'evenmore'  : 'crazy'\n},\njbo = {\n    'evenmore'  : 'crazy',\n    'something' : 'awesome'\n};\n</code></pre>\n\n<p>How would I get the first property for each object\u2013\"something\" from <code>obj</code> and \"evenmore\" from <code>jbo</code>\u2013without explicitly using the property name?</p>\n\n<p>Now, a few of you seem to think I'm after something like:</p>\n\n<pre><code>console.log(obj['something']);\n</code></pre>\n\n<p>This is not the case, I'm specifically looking to target the index, just like the first example - if it's possible.</p>\n",
            "last_activity_date": 1422627015,
            "question_id": 7866275,
            "score": 10,
            "tags": [
                "javascript",
                "arrays"
            ],
            "title": "Access non-numeric Object properties by index?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Just concatenate the two:</p>\n\n<pre><code>$(selectedTable).find(\"td.ms-cal-nav-buttonsltr\");\n</code></pre>\n\n<p>the selectors you tried were looking for a <code>.ms-cal-nav-buttonsltr</code> element underneath the <code>td</code>.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<pre><code>$('td.ms-cal-nav-buttonsltr', selectedTable);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>I have an element we'll call <code>selectedTable</code> that contains this <code>innerHtml</code>:</p>\n\n<pre><code>&lt;TBODY&gt;\n    &lt;TR&gt;\n        &lt;TD&gt;&lt;/TD&gt;\n        &lt;TD&gt;&lt;/TD&gt;\n        &lt;TD class='ms-cal-nav-buttonsltr'&gt;&lt;/TD&gt;\n    &lt;/TR&gt;\n&lt;/TBODY&gt;\n</code></pre>\n\n<p>I'm trying to use JQuery selectors to return the <code>&lt;TD&gt;</code> tag with the \"ms-cal-nav-buttonsltr\" class. I've found that <code>$(selectedTable).find(\"TD\")</code> returns all the TD tags in the table as expected, but I'm wondering how I might go about combining the <code>TD</code> element selector with a class selector. I've tried <code>$(subnode).find(\"TD\").find(\".ms-cal-nav-buttonsltr\")</code> and <code>$(subnode).find(\"TD .ms-cal-nav-buttonsltr\")</code> to no avail, but those were just shots in the dark. What's the most efficient way to accomplish this? Thanks in advance.</p>\n",
            "last_activity_date": 1314206096,
            "question_id": 7179526,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "jquery-selectors",
                "css-selectors"
            ],
            "title": "Jquery Selector for Element type and Class name?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Let your callback return <code>false</code> and pass that on to the <code>onclick</code> handler:</p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"return callmymethod(24)\"&gt;Call&lt;/a&gt;\n\nfunction callmymethod(myVal){\n    //doing custom things with myVal\n    //here I want to prevent default\n    return false;\n}\n</code></pre>\n\n<hr>\n\n<p>To create <em>maintainable</em> code, however, you should abstain from using <em>\"inline Javascript\"</em> (i.e.: code that's directly within an element's tag) and modify an element's behavior via an included Javascript source file (it's called <a href=\"http://en.wikipedia.org/wiki/Unobtrusive_JavaScript\">unobtrusive Javascript</a>).</p>\n\n<p>The mark-up:</p>\n\n<pre><code>&lt;a href=\"#\" id=\"myAnchor\"&gt;Call&lt;/a&gt;\n</code></pre>\n\n<p>The code (separate file):</p>\n\n<pre><code>// Code example using Prototype JS API\n$('myAnchor').observe('click', function(event) {\n    Event.stop(event); // suppress default click behavior, cancel the event\n    /* your onclick code goes here */\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>Try</p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"callmymethod(24); return false;\"&gt;Call&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>In my opinion the answer is wrong! He asked for <code>event.preventDefault();</code> when you simply return false; it calls <code>event.preventDefault();</code> AND <code>event.stopPropagation();</code> as well!</p>\n\n<p>You can solve it by this:</p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"callmymethod(event, 24)\"&gt;Call&lt;/a&gt;\n\nfunction callmymethod(event, myVal){\n    //doing custom things with myVal\n\n    //here I want to prevent default\n    event.preventDefault();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Just place \"javascript:void(0)\", in place of \"#\" in href tag</p>\n\n<pre><code>&lt;a href=\"javascript:void(0);\" onclick=\"callmymethod(24)\"&gt;Call&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Give a class or id to the element and use jquery function unbind();</p>\n\n<pre><code>$(\".slide_prevent\").click(function(){\n                $(\".slide_prevent\").unbind();\n              });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can catch the event and then block it with preventDefault() -- works with pure Javascript</p>\n\n<pre><code>document.getElementById(\"xyz\").addEventListener('click', function(event){\n    event.preventDefault();\n    console.log(this.getAttribute(\"href\"));\n    /* Do some other things*/\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How to prevent default in onclick method. I have a method in which I am also passing a custom value</p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"callmymethod(24)\"&gt;Call&lt;/a&gt;\n\nfunction callmymethod(myVal){\n    //doing custom things with myVal\n    //here I want to prevent default\n}\n</code></pre>\n",
            "last_activity_date": 1424361123,
            "question_id": 7056669,
            "score": 10,
            "tags": [
                "javascript"
            ],
            "title": "prevent default event in onclick"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>It might be that your script <code>src</code> attribute is not properly understood with the <code>~</code> and being parsed as an empty <code>&lt;script&gt;</code> tag instead.  Use the full path to the javascript file, or a path relative to the page it's loading on:</p>\n\n<pre><code>&lt;script src=\"/full/path/to/Scripts/scriptname.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"../relative/to/Scripts/scriptname.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>For some reason, your script file is being treated by Firefox as an XML file.  My guess is that you have included <code>script</code> tags in your Javascript file.  E.g.</p>\n\n<pre><code>&lt;script&gt;\n    $(\"[id*='txtAddress1S']\").blur(function(){$(\"[id*='txtAddress1S']\").val().match(/\\b[p]*(ost)*\\.*\\s*[o|0]*(ffice)*\\.*\\s*b[o|0]x\\b/i)&amp;&amp;(alert(\"Packages are not deliverable to a Post Office Box.\\nPlease provide a different shipping address.\"),$(\"[id*='txtAddress1S']\").focus())});\n&lt;/script&gt;\n</code></pre>\n\n<p>You don't need <code>script</code> tags in an external JS file.</p>\n\n<p>The equivalent error in Chrome is</p>\n\n<blockquote>\n  <p>Uncaught SyntaxError: Unexpected token &lt;</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Shooting from the hip: I actually got this error because I added a wildcard mapping for aspnet_isapi.dll in my IIS 5.1 / WinXP (for some MVC related work). This means .js files got processed by IIS differently. Once I removed the mapping, the error you describe disappeared.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just had the same error.  Make sure the javascript include file does not contain &lt; script> tags.  Once those are pulled out of your include file, the error goes away (assuming that's all that is wrong). </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I found another reason for<code>\"XML can't be the whole program</code> in FF and <code>Uncaught SyntaxError: Unexpected token &lt;</code> in Chrome. In my case, everything was failing with <code>ScriptResource.axd</code>.</p>\n\n<p>The reason was that I'm serving some pages from https and I have a manager switching between http and https requests depending on what is currently required. Due to incorrect configuration the manager was serving ScriptResource.axd always over http, which caused errors  on https pages.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I experienced this same error today. In my case it was because I didn't use HTML codes for special characters in my URL while doing an AJAX request. For example...</p>\n\n<p>Using <strong><code>&amp;amp;</code></strong> instead of using <strong>&amp;</strong></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>When I include the following js file (with jquery in it), I get the error in Firebug \"XML can't be the whole program\"</p>\n\n<p>JS file include reference:</p>\n\n<pre><code>&lt;script src=\"~/Scripts/scriptname.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>JS file contents:</p>\n\n<pre><code>$(\"[id*='txtAddress1S']\")\n  .blur(function(){\n   $(\"[id*='txtAddress1S']\")\n      .val().match(\n          /\\b[p]*(ost)*\\.*\\s*[o|0]*(ffice)*\\.*\\s*b[o|0]x\\b/i)&amp;&amp;\n         (alert(\"Packages are not deliverable to a Post Office Box.\n         \\nPlease provide a different shipping address.\"),\n    $(\"[id*='txtAddress1S']\").focus())\n  });\n</code></pre>\n\n<p>Thanks in advance!</p>\n",
            "last_activity_date": 1383305090,
            "question_id": 5717249,
            "score": 10,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "XML can&#39;t be the whole program"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You could try using a javascript profiling library (using timers for example) by a bit of searching I've found <a href=\"http://remysharp.com/2007/04/20/performance-profiling-javascript/\" rel=\"nofollow\">http://remysharp.com/2007/04/20/performance-profiling-javascript/</a> but since I didn't test it I can't tell you if its any good. \nYou could place timers at various locations in your code and try to track down the bottlenecks that way.</p>\n\n<p>(Js Microtime Library <a href=\"http://phpjs.org/functions/microtime:472\" rel=\"nofollow\">http://phpjs.org/functions/microtime:472</a>)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you have access to an Android phone, you can profile your application using desktop Chrome's developer tools and a USB cable (very convenient).</p>\n\n<p>Android and iPhone behave+perform similarly, but not identically. That said, for 90% of use cases, if you improve performance on Android, you'll see the same improvements on iPhone.</p>\n\n<p>Hour for hour, at least for the first pass of profiling, I think you'll get better results on iPhone using chrome+android to profile than using a less rich toolset.</p>\n\n<p><a href=\"https://developers.google.com/chrome/mobile/docs/debugging\" rel=\"nofollow\">https://developers.google.com/chrome/mobile/docs/debugging</a></p>\n\n<p>It'll require Chrome, an Android device able to run the android Chrome app, and a USB cable.</p>\n\n<p>You have to install and use the ADB console command, but once its working, you'll have the full chrome developer tools interface available for debugging mobile.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Javascript performance on mobile Safari (iPad) is much more sensitive for my application that it is on the desktop. Some operations that work super-smooth on the desktop take a while on the iPad, and I'd like to track down where the bottlenecks are. Is there some way to profile Javascript code on the iPad?</p>\n",
            "last_activity_date": 1361375066,
            "question_id": 5384575,
            "score": 10,
            "tags": [
                "javascript",
                "ipad",
                "mobile-safari"
            ],
            "title": "Profile mobile Safari (iPad) javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Is your Javascript enabled in the Chrome options?\nOther thing is any other js library included which might change default js behaviour?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Do you have a another pop up blocker plug-in installed on Chrome? If you do, disable/remove it and see if the error goes away. </p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>As epascarello said its because of popup blocker plugin and I faced this problem with my localhost websites and prompt method.<br>\nSo i fixed it by adding my localhost url to popup blocker's whitelist: <code>http://localhost</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>This is weird, The following line of javascript:</p>\n\n<pre><code>alert(\"test\");\n</code></pre>\n\n<p>gives the following error in chrome:</p>\n\n<blockquote>\n  <p>Uncaught TypeError: Property 'alert' of object [object DOMWindow] is not a function</p>\n</blockquote>\n\n<p>It also breaks when using a prompt. Oddly it works in firefox. Any ideas? </p>\n",
            "last_activity_date": 1383137258,
            "question_id": 4996394,
            "score": 10,
            "tags": [
                "javascript",
                "google-chrome"
            ],
            "title": "Javascript Alert Boxes not working in Chrome"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>If you want to use a variable property name, use subscript syntax:</p>\n\n<pre><code>var fieldname = 'test';\n\n//These two lines are equivalent as long as fieldname is 'test':\ngridObject[fieldname] = fieldvalue;\ngridObject.test = fieldvalue\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 27
                }
            ],
            "body": "<p>I am creating my own object:</p>\n\n<pre><code>gridObject = new Object();\n</code></pre>\n\n<p>I'm then using jquery to pull the contents of list item tags, which themselves are filled with <p> tags that have specific class names:</p>\n\n<pre><code>&lt;li row=\"1\"&gt;&lt;p class=\"department\" rowitem=\"department\"&gt;Photography&lt;/p&gt;...&lt;/li&gt;\n</code></pre>\n\n<p>I'm pulling them using this code:  </p>\n\n<pre><code>//make object from results\ngridObject = new Object();\n\n//get all the rows\nvar rowlist = $('li[row]');\n\nfor(var r=0; r&lt;rowlist.length; r++) {\n\n    //make gridObject row element here\n\n    //get the row content\n    var thisrow = $(rowlist[r]).html();\n\n    //get all the p tags\n    var rowitems = $(thisrow + 'p.[rowitem]');\n\n    //get field name\n    for(var ri=0; ri&lt;rowitems.length; ri++) {\n    if (r &lt; 2) { //this is temporary just for testing\n         var fieldname = $(rowitems[ri]).attr('rowitem');\n         var fieldvalue = $(rowitems[ri]).html();\n    }\n    }\n</code></pre>\n\n<p>I'm getting hung up passing this into my object. Two questions. Can an object property be made with a variable name, like so</p>\n\n<pre><code>griObject.fieldname = fieldvalue;\n</code></pre>\n\n<p>and can the objects have parent/child relationships such as:</p>\n\n<pre><code>gridObject.r.fieldname = fieldvalue; \n</code></pre>\n\n<p>in this case both r and fieldname would be variables. Or should I just be working associative arrays to achieve something similar?</p>\n\n<p>This is in answer to a follow up question I posted below, \"is there a print_r equivalent in javascript\" - you can use iterator, a bit more typing but does the trick:</p>\n\n<pre><code>//loop through search data\nvar it = Iterator(filteritems); \nfor(var pair in it) { \n    console.log(\"key:\" + pair[0] + \", value:\" + pair[1] + \"\\n\");\n}\n</code></pre>\n",
            "last_activity_date": 1339719269,
            "question_id": 4694652,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "object",
                "properties"
            ],
            "title": "JavaScript - creating object and using variable for property name?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>write a js function to do it for you?</p>\n\n<p>something like</p>\n\n<pre><code>var presentInteger = function(toPresent) {\n    if (toPresent &gt; 0) return \"+\" + toPresent;\n    else return \"\" + toPresent;\n}\n</code></pre>\n\n<p>you could also use the conditional operator:</p>\n\n<pre><code>var stringed = (toPresent &gt; 0) ? \"+\" + toPresent : \"\" + toPresent;\n</code></pre>\n\n<p>Thanx to the comments for pointing out that \"-\" + toPresent would put a double -- on the string....</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>something along the lines of:</p>\n\n<pre><code>if (num &gt; 0)\n{\n   numa = \"+\" + num;\n}\nelse\n{\n   numa = num.toString();\n}\n</code></pre>\n\n<p>and then print the string <code>numa</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>// Forces signing on a number, returned as a string\nfunction getNumber(theNumber)\n{\n    if(theNumber &gt; 0){\n        return \"+\" + theNumber;\n    }else{\n        return theNumber.toString();\n    }\n}\n</code></pre>\n\n<p>This will do it for you.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<pre><code>printableNumber = function(n) { return (n &gt; 0) ? \"+\" + n : n; };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can use a simple expression like this:</p>\n\n<pre><code>(n&lt;0?'':'+') + n\n</code></pre>\n\n<p>The conditional expression results in a plus sign if the number is positive, and an empty string if the number is negative.</p>\n\n<p>You havent's specified how to handle zero, so I assumed that it would be displayed as <code>+0</code>. If you want to display it as just <code>0</code>, use the <code>&lt;=</code> operator instead:</p>\n\n<pre><code>(n&lt;=0?'':'+') + n\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>function format(n) {\n    return (n&gt;0?'+':'') + n;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How would I display positive number such as 3 as +3 and negative numbers such -5 as -5? So, as follows:</p>\n\n<p>1, 2, 3 goes into +1, +2, +3</p>\n\n<p>but if those are </p>\n\n<p>-1, -2, -3 then goes into -1, -2, -3</p>\n",
            "last_activity_date": 1385045213,
            "question_id": 4347016,
            "score": 10,
            "tags": [
                "javascript",
                "numbers"
            ],
            "title": "JavaScript: Display positive numbers with the plus sign"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>It's all or nothing. Of course jquery is open source and you could extract the part you are interested in in your own library (good luck with this). You may consider using a CDN which will ensure that most users will already have it cached in their browsers so you shouldn't be concerned about size.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is none out of the box but you can of course cut and paste from the existing file and then minimize it.</p>\n\n<p>If you are just worried about the size of the library serving it from a CDN from Google, MS or jQuery will probably require less data traffic as most browsers already have the files cached.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As Darin already says, it's all or nothing. JQuery's Ajax functions are closely intertwined with the rest of the functionality.</p>\n\n<p>There are a few other, stand-alone Ajax libraries around like <a href=\"http://www.ajaxtoolbox.com/\" rel=\"nofollow\">Matt Kruse's Ajax toolbox</a> - maybe that helps. </p>\n\n<p>I would consider loading the full jQuery library. If you link to <a href=\"http://docs.jquery.com/Downloading_jQuery#CDN_Hosted_jQuery\" rel=\"nofollow\">jQuery on a CDN,</a> loading times will be minuscule.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If you really really want just the Ajax parts of jQuery you can get the code from their repository (<a href=\"https://github.com/jquery/jquery\" rel=\"nofollow\">https://github.com/jquery/jquery</a>), glancing at it you would want to look at \"ajax.js\" and \"core.js\" in the \"src\" directory. You would then want to compile them together with the closure compiler or something.</p>\n\n<p>But as others stated, it would be a lot easier to just load it from one of the CDNs (jQuery, Google, Microsoft) which most users will have cached anyway.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've created a custom build of jQuery 1.7.1 here:</p>\n\n<p><a href=\"https://github.com/dtjm/jquery/tree/ajaxonly\" rel=\"nofollow\">https://github.com/dtjm/jquery/tree/ajaxonly</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As of jQuery 1.8 you can do it: <a href=\"https://github.com/jquery/jquery#how-to-build-your-own-jquery\" rel=\"nofollow\">LINK</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>YES, I just did mine, \n<a href=\"http://noypi-linux.blogspot.com/2013/05/build-jquery-with-ajax-only.html\" rel=\"nofollow\">http://noypi-linux.blogspot.com/2013/05/build-jquery-with-ajax-only.html</a></p>\n\n<p>you only need these files (resulting minified is about 30Kb):</p>\n\n<pre><code>/d/dev/javascript/jquery/jquery/src/intro.js\n/d/dev/javascript/jquery/jquery/src/core.js\n/d/dev/javascript/jquery/jquery/src/callbacks.js\n/d/dev/javascript/jquery/jquery/src/deferred.js\n/d/dev/javascript/jquery/jquery/src/support.js\n/d/dev/javascript/jquery/jquery/src/data.js\n/d/dev/javascript/jquery/jquery/src/event.js\n/d/dev/javascript/jquery/jquery/src/serialize.js\n/d/dev/javascript/jquery/jquery/src/ajax.js\n/d/dev/javascript/jquery/jquery/src/ajax/xhr.js\n/d/dev/javascript/jquery/jquery/src/exports.js\n /d/dev/javascript/jquery/jquery/src/outro.js\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there only Ajax part of jQuery? The matter is I do not need the whole library but only its Ajax part (I need to include this part on several iframes). </p>\n",
            "last_activity_date": 1405057092,
            "question_id": 4132163,
            "score": 10,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Is there only Ajax part of jQuery?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><strong>Straight from <a href=\"http://www.w3.org/TR/html401/interact/scripts.html#h-18.3.2\">the source</a></strong></p>\n\n<blockquote>\n  <p>18.3.2 Hiding script data from user agents</p>\n</blockquote>\n\n<p>User agents that don't recognize the SCRIPT element will likely render that element's contents as text. Some scripting engines, including those for languages JavaScript, VBScript, and Tcl allow the script statements to be enclosed in an SGML comment. User agents that don't recognize the SCRIPT element will thus ignore the comment while smart scripting engines will understand that the script in comments should be executed.</p>\n\n<p>Another solution to the problem is to keep scripts in external documents and refer to them with the src attribute.</p>\n\n<p><strong>Commenting scripts in JavaScript</strong>\nThe JavaScript engine allows the string \"<code>&lt;!--</code>\" to occur at the start of a SCRIPT element, and ignores further characters until the end of the line. JavaScript interprets \"<code>//</code>\" as starting a comment extending to the end of the current line. This is needed to hide the string \"<code>--&gt;</code>\" from the JavaScript parser.</p>\n\n<pre><code>&lt;SCRIPT type=\"text/javascript\"&gt;\n&lt;!--  to hide script contents from old browsers\n  function square(i) {\n    document.write(\"The call passed \", i ,\" to the function.\",\"&lt;BR&gt;\")\n    return i * i\n  }\n  document.write(\"The function returned \",square(5),\".\")\n// end hiding contents from old browsers  --&gt;\n&lt;/SCRIPT&gt;\n</code></pre>\n\n<p>Furthermore, if you really want to understand what all of this means, read this <a href=\"http://lachy.id.au/log/2005/05/script-comments\">excellent article</a>. It's lengthy, <strong>but worth it</strong>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The HTML comment was intended to hide the JavaScript from ancient browsers that didn't understand the <code>&lt;script&gt;</code> element and instead render its contents on the page. That was way back in the mid-90es, iirc. <strong>Nowadays you can safely assume that browsers from that era are no longer present on the web and omit the comments.</strong></p>\n\n<p>Some nice history on that can be found <a href=\"http://javascript.about.com/library/blhtmcmt.htm\" rel=\"nofollow\">here</a>:</p>\n\n<blockquote>\n  <p>The general rule regarding HTML tags that browsers do not understand is that the browser should ignore the tag completely and treat the content of the page as if that tag were not there. This means that when Netscape 2 first introduced JavaScript (or LiveScript as it was called then), it was necessary to place an HTML comment around the actual script in order to hide the code from other browsers that didn't understand the script tag and which therefore would have displayed the code rather than running it.</p>\n  \n  <p>The JavaScript language was specifically written to accept the start of an HTML comment as the very first thing in the script and to ignore it in order that the HTML comment could be used to hide the script from people using Netscape 1, Mozaic, Internet Explorer 1, Internet Explorer 2, and other browsers of similar vintage none of which anyone uses any more. It is these prehistoric browsers (in JavaScript terms) that are meant when you see references in antiquated JavaScript tutorials to wrapping your JavaScript inside an HTML comment in order to hide it from \"older\" browsers.</p>\n  \n  <p>With Internet Explorer 3, Microsoft introduced their own equivalent to JavaScript which they call JScript. Since then all browsers have at least recognised the script tag and more modern browsers (Netscape 2+, IE3+ etc) the HTML comment is no longer required.So once all your visitors have upgraded to use either Netscape 2, Internet Explorer 3, or a more recent browser than either of those two the commenting out of the script becomes redundant code.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>Some years ago, I was taught that JavaScript code blocks embedded inside HTML should always be capsulated inside HTML comments as following:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n&lt;!--\nvar hello = \"world\";\n--&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>I was told to do this, but I never kind of fully figured out why. It kind of seems hacky to use HTML comments, so nowadays I have started using writing my JavaScript code inside the script block without the HTML comments:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar hello = \"world\";\n&lt;/script&gt;\n</code></pre>\n\n<p>So my question is: should I use HTML comments to capsulate JavaScript code blocks? Is it safe to just write the script without the comments? I mean am I risking something when I leave out the comment tags?</p>\n",
            "last_activity_date": 1374692532,
            "question_id": 3912963,
            "score": 10,
            "tags": [
                "javascript"
            ],
            "title": "Should I use HTML comments to capsulate JavaScript code blocks?"
        }
    ]
}
