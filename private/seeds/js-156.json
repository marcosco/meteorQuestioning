{
    "items": [
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>With some tuning, this is a valid equivalent, you receive notifications with fade-in/fade-out effect and it disappears automatically too:</p>\n\n<p><a href=\"http://projects.zoulcreations.com/jquery/growl/\" rel=\"nofollow\">http://projects.zoulcreations.com/jquery/growl/</a></p>\n\n<p>It is based on the way it looks Growl in Mac: Growl is a notification system for Mac OS X: it allows applications that support Growl to send you notifications.</p>\n\n<p>There is something similar for Mootools:</p>\n\n<blockquote>\n  <p><a href=\"http://icebeat.bitacoras.com/mootools/growl/\" rel=\"nofollow\">http://icebeat.bitacoras.com/mootools/growl/</a></p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>After some googling i found a similar jquery effect tutorial here <a href=\"http://roshanbh.com.np/2008/07/top-floating-message-box-using-jquery.html\" rel=\"nofollow\">http://roshanbh.com.np/2008/07/top-floating-message-box-using-jquery.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>These ribbon in stackoverflow and uservoice.com looks nice. is there any javascript library/jquery plugin for that effect?</p>\n",
            "last_activity_date": 1228216097,
            "question_id": 333553,
            "score": 6,
            "tags": [
                "javascript",
                "jquery",
                "design"
            ],
            "title": "Is there a javascript library to produce the top message ribbon in stackoverflow?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>It looks like what you want is to whitelist the domain these videos will be served from. You can do this using <a href=\"http://docs.angularjs.org/api/ng/provider/%24sceDelegateProvider#methods_resourceUrlWhitelist\" rel=\"nofollow\">$sceDelegateProvider</a></p>\n\n<p>All you need to do is add a bit of config as follows:</p>\n\n<pre><code>app.config(function($sceDelegateProvider) {\n $sceDelegateProvider.resourceUrlWhitelist([\n   // Allow same origin resource loads.\n   'self',\n   // Allow loading from our assets domain.  Notice the difference between * and **.\n   'http://media.w3.org/**']);\n});\n</code></pre>\n\n<p>I've updated your fiddle with a working demo: <a href=\"http://jsfiddle.net/spikeheap/ACJ77/1/\" rel=\"nofollow\">http://jsfiddle.net/spikeheap/ACJ77/1/</a></p>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>JSfiddle here: <a href=\"http://jsfiddle.net/TegFf/73/\">http://jsfiddle.net/TegFf/73/</a></p>\n\n<p>From this <a href=\"http://stackoverflow.com/questions/19372300/angular-js-dynamic-ng-src-not-working-in-1-2-0-rc-2\">answer</a>, I understand Angular 1.2 ships with Strict Contextual Escaping (SCE) enabled. This affects the parser of expressions using <code>ng-src</code> with an HTML5 video. I understand that if I wrap <code>$sce.trustAsResourceUrl(videoURL)</code> around each of my video sources, then Angular will play them as normal. However, I am getting a list of video sources back from an API. It is expensive for me to loop over item in the array, assign each source as a <code>$sce.trustAsResourceUrl</code>, and then loop over that new array in my view.</p>\n\n<p>What is the most efficient way of assigning all my video sources as trusted without having to loop over all of them? Can I assign all video sources to be <code>$sce</code> trusted beforehand?</p>\n",
            "last_activity_date": 1403884456,
            "question_id": 21884666,
            "score": 5,
            "tags": [
                "javascript",
                "html5",
                "angularjs",
                "video"
            ],
            "title": "Angular JS Handling Ng-Repeated HTML5 Video &amp; $SCE"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I don't think it's a good idea to process response received from the 3rd party server. This will only increase your proxy server's memory footprint. Further, it's the reason why your code is not working.</p>\n\n<p>Instead try passing the response through to the client. Consider following snippet:</p>\n\n<pre><code>var http = require('http');\n\nhttp.createServer(onRequest).listen(3000);\n\nfunction onRequest(client_req, client_res) {\n  console.log('serve: ' + client_req.url);\n\n  var options = {\n    hostname: 'www.google.com',\n    port: 80,\n    path: client_req.url,\n    method: 'GET'\n  };\n\n  var proxy = http.request(options, function (res) {\n    res.pipe(client_res, {\n      end: true\n    });\n  });\n\n  client_req.pipe(proxy, {\n    end: true\n  });\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>Your code doesn't work for binary files because they can't be cast to strings in the data event handler.  If you need to manipulate binary files you'll need to use a <a href=\"http://nodejs.org/api/buffer.html\" rel=\"nofollow\">buffer</a>.  Sorry, I do not have an example of using a buffer because in my case I needed to manipulate HTML files. I just check the content type and then for text/html files update them as needed:</p>\n\n<pre><code>app.get('/*', function(clientRequest, clientResponse) {\n  var options = { \n    hostname: 'google.com',\n    port: 80, \n    path: clientRequest.url,\n    method: 'GET'\n  };  \n\n  var googleRequest = http.request(options, function(googleResponse) { \n    var body = ''; \n\n    if (String(googleResponse.headers['content-type']).indexOf('text/html') !== -1) {\n      googleResponse.on('data', function(chunk) {\n        body += chunk;\n      }); \n\n      googleResponse.on('end', function() {\n        // Make changes to HTML files when they're done being read.\n        body = body.replace(/google.com/gi, host + ':' + port);\n        body = body.replace(\n          /&lt;\\/body&gt;/, \n          '&lt;script src=\"http://localhost:3000/new-script.js\" type=\"text/javascript\"&gt;&lt;/script&gt;&lt;/body&gt;'\n        );\n\n        clientResponse.writeHead(googleResponse.statusCode, googleResponse.headers);\n        clientResponse.end(body);\n      }); \n    }   \n    else {\n      googleResponse.pipe(clientResponse, {\n        end: true\n      }); \n    }   \n  }); \n\n  googleRequest.end();\n});    \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's a proxy server using <a href=\"https://github.com/request/request\" rel=\"nofollow\">request</a> that handles redirects. Use it by hitting your proxy URL <a href=\"http://domain.com:3000/?url=[your_url]\" rel=\"nofollow\">http://domain.com:3000/?url=[your_url]</a></p>\n\n<pre><code>var http = require('http');\nvar url = require('url');\nvar request = require('request');\n\nhttp.createServer(onRequest).listen(3000);\n\nfunction onRequest(req, res) {\n\n    var queryData = url.parse(req.url, true).query;\n    if (queryData.url) {\n        request({\n            url: queryData.url\n        }).on('error', function(e) {\n            res.end(e);\n        }).pipe(res);\n    }\n    else {\n        res.end(\"no url found\");\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to create a proxy server to pass <code>HTTP GET</code> requests from a client to a third party website (say google). My proxy just needs to mirror incoming requests to their corresponding path on the target site, so if my client's requested url is:</p>\n\n<pre><code>127.0.0.1/images/srpr/logo11w.png\n</code></pre>\n\n<p>the following resource should be served:</p>\n\n<pre><code>http://www.google.com/images/srpr/logo11w.png\n</code></pre>\n\n<p>here is what I came up with:</p>\n\n<pre><code>http.createServer(onRequest).listen(80);\n\nfunction onRequest (client_req, client_res) {\n    client_req.addListener(\"end\", function() {\n        var options = {\n            hostname: 'www.google.com',\n            port: 80,\n            path: client_req.url,\n            method: 'GET'\n        };\n        var req=http.request(options, function(res) {\n            var body;\n            res.on('data', function (chunk) {\n                body += chunk;\n            });\n            res.on('end', function () {\n                 client_res.writeHead(res.statusCode, res.headers);\n                 client_res.end(body);\n            });\n        });\n        req.end();\n    });\n}\n</code></pre>\n\n<p>it works well with html pages, but for other types of files, it just returns a blank page or some error message from target site (which varies in different sites).</p>\n",
            "last_activity_date": 1422906356,
            "question_id": 20351637,
            "score": 5,
            "tags": [
                "javascript",
                "node.js",
                "proxy"
            ],
            "title": "How to create a simple http proxy in node.js?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The Collection associated with your CollectionView must be consistent with what you are rendering, or you'll run into problems. You should not have to empty your tbody manually. You should update the collection, and listen to events emitted by the collection in the CollectionView and use that to update the view. In your search method, you should only update your Collection and not your CollectionView. This is one way you can implement it in the CollectionView initialize method:</p>\n\n<pre><code>\ninitialize: function() {\n  //...\n\n  this.listenTo(this.collection, \"reset\", this.render);\n  this.listenTo(this.collection, \"add\", this.addOne);\n}\n</code></pre>\n\n<p>And in your search method, you can just reset your collection and the view will render automatically:</p>\n\n<pre><code>\nsearch: function() {\n  this.collection.reset(filteredModels);\n}\n</code></pre>\n\n<p>where <code>filteredModels</code> is an array of the models that match the search query. Note that once you reset your collection with filtered models, you'll lose access to the other models that were originally there before the search. You should have a reference to a master collection that contains all of your models regardless of the search. This \"master collection\" is not associated with your view per se, but you could use the filter on this master collection and update the view's collection with the filtered models.</p>\n\n<p>As for your second question, you should not have a reference to the view from the model. The model should be completely independent from the View - only the view should reference the model.</p>\n\n<p>Your <code>addOne</code> method could be refactored like this for better performance (always use $el to attach subviews):</p>\n\n<pre><code>\nvar view = new RowView({ model: model });\nthis.$el.find('tbody').append(view.render().el);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I got a little bit carried away while playing with your question.</p>\n\n<p>First, I would create a dedicated collection to hold the filtered models and a \"state model\" to handle the search. For example,</p>\n\n<pre><code>var Filter = Backbone.Model.extend({\n    defaults: {\n        what: '', // the textual search\n        where: 'all' // I added a scope to the search\n    },\n    initialize: function(opts) {\n        // the source collection\n        this.collection = opts.collection; \n        // the filtered models\n        this.filtered = new Backbone.Collection(opts.collection.models); \n        //listening to changes on the filter\n        this.on('change:what change:where', this.filter); \n    },\n\n    //recalculate the state of the filtered list\n    filter: function() {\n        var what = this.get('what').trim(),\n            where = this.get('where'),\n            lookin = (where==='all') ? ['first', 'last'] : where,\n            models;\n\n        if (what==='') {\n            models = this.collection.models;            \n        } else {\n            models = this.collection.filter(function(model) {\n                return _.some(_.values(model.pick(lookin)), function(value) {\n                    return ~value.toLowerCase().indexOf(what);\n                });\n            });\n        }\n\n        // let's reset the filtered collection with the appropriate models\n        this.filtered.reset(models); \n    }\n});\n</code></pre>\n\n<p>which would be instantiated as </p>\n\n<pre><code>var people = new Backbone.Collection([\n    {first: 'John', last: 'Doe'},\n    {first: 'Mary', last: 'Jane'},\n    {first: 'Billy', last: 'Bob'},\n    {first: 'Dexter', last: 'Morgan'},\n    {first: 'Walter', last: 'White'},\n    {first: 'Billy', last: 'Bobby'}\n]);\nvar flt = new Filter({collection: people});\n</code></pre>\n\n<p>Then I would create separated views for the list and the input fields: easier to maintain and to move around</p>\n\n<pre><code>var BaseView = Backbone.View.extend({\n    render:function() {\n        var html, $oldel = this.$el, $newel;\n\n        html = this.html();\n        $newel=$(html);\n\n        this.setElement($newel);\n        $oldel.replaceWith($newel);\n\n        return this;\n    }\n});\nvar CollectionView = BaseView.extend({\n    initialize: function(opts) {\n        // I like to pass the templates in the options\n        this.template = opts.template;\n        // listen to the filtered collection and rerender\n        this.listenTo(this.collection, 'reset', this.render);\n    },\n    html: function() {\n        return this.template({\n            models: this.collection.toJSON()\n        });\n    }\n});\nvar FormView = Backbone.View.extend({\n    events: {\n        // throttled to limit the updates\n        'keyup input[name=\"what\"]': _.throttle(function(e) {\n             this.model.set('what', e.currentTarget.value);\n        }, 200),\n\n        'click input[name=\"where\"]': function(e) {\n            this.model.set('where', e.currentTarget.value);\n        }\n    }\n});\n</code></pre>\n\n<p><code>BaseView</code> allows to change the DOM in place, see <a href=\"http://stackoverflow.com/questions/11594961/backbone-not-this-el-wrapping/11598543#11598543\">Backbone, not &quot;this.el&quot; wrapping</a> for details</p>\n\n<p>The instances would look like</p>\n\n<pre><code>var inputView = new FormView({\n    el: 'form',\n    model: flt\n});\nvar listView = new CollectionView({\n    template: _.template($('#template-list').html()),\n    collection: flt.filtered\n});\n$('#content').append(listView.render().el);\n</code></pre>\n\n<p>And a demo of the search at this stage <a href=\"http://jsfiddle.net/XxRD7/2/\">http://jsfiddle.net/XxRD7/2/</a></p>\n\n<p>Finally, I would modify <code>CollectionView</code>  to graft the row views in my render function, something like</p>\n\n<pre><code>var ItemView = BaseView.extend({\n    events: {\n        'click': function() {\n            console.log(this.model.get('first'));\n        }\n    }\n});\n\nvar CollectionView = BaseView.extend({\n    initialize: function(opts) {\n        this.template = opts.template;\n        this.listenTo(this.collection, 'reset', this.render);\n    },\n    html: function() {\n        var models = this.collection.map(function (model) {\n            return _.extend(model.toJSON(), {\n                cid: model.cid\n            });\n        });\n        return this.template({models: models});\n    },\n    render: function() {\n        BaseView.prototype.render.call(this);\n\n        var coll = this.collection;\n        this.$('[data-cid]').each(function(ix, el) {\n            new ItemView({\n                el: el,\n                model: coll.get($(el).data('cid'))\n            });\n        });\n\n        return this;\n    }\n});\n</code></pre>\n\n<p>Another Fiddle <a href=\"http://jsfiddle.net/XxRD7/3/\">http://jsfiddle.net/XxRD7/3/</a></p>\n",
                    "is_accepted": true,
                    "score": 10
                }
            ],
            "body": "<p>Several places in my Backbone application I'd like to have an instant search over a collection, but I'm having a hard time coming up with the best way to implement it.</p>\n\n<p>Here's a quick implementation. <a href=\"http://jsfiddle.net/7YgeE/\">http://jsfiddle.net/7YgeE/</a> Keep in mind my collection could contain upwards of 200 models.</p>\n\n<pre><code>var CollectionView = Backbone.View.extend({\n\n  template: $('#template').html(),\n\n  initialize: function() {\n\n    this.collection = new Backbone.Collection([\n      { first: 'John', last: 'Doe' },\n      { first: 'Mary', last: 'Jane' },\n      { first: 'Billy', last: 'Bob' },\n      { first: 'Dexter', last: 'Morgan' },\n      { first: 'Walter', last: 'White' },\n      { first: 'Billy', last: 'Bobby' }\n    ]);\n    this.collection.on('add', this.addOne, this);\n\n    this.render();\n  },\n\n  events: {\n    'keyup .search': 'search',\n  },\n\n  // Returns array subset of models that match search.\n  search: function(e) {\n\n    var search = this.$('.search').val().toLowerCase();\n\n    this.$('tbody').empty(); // is this creating ghost views?\n\n    _.each(this.collection.filter(function(model) {\n      return _.some(\n        model.values(), \n        function(value) {\n          return ~value.toLowerCase().indexOf(search);\n        });\n    }), $.proxy(this.addOne, this));\n  },\n\n  addOne: function(model) {\n\n    var view = new RowView({ model: model });\n    this.$('tbody').append(view.render().el);\n  },\n\n  render: function() {\n\n    $('#insert').replaceWith(this.$el.html(this.template));\n      this.collection.each(this.addOne, this);\n  }\n});\n</code></pre>\n\n<p>And a tiny view for each model...</p>\n\n<pre><code>var RowView = Backbone.View.extend({\n\n  tagName: 'tr',\n\n  events: {\n    'click': 'click'\n  },\n\n  click: function () {\n    // Set element to active \n    this.$el.addClass('selected').siblings().removeClass('selected');\n\n    // Some detail view will listen for this.\n    App.trigger('model:view', this.model);\n  },\n\n  render: function() {\n\n    this.$el.html('&lt;td&gt;' + this.model.get('first') + '&lt;/td&gt;&lt;td&gt;' + this.model.get('last') + '&lt;/td&gt;');\n      return this;\n  }\n});\n\nnew CollectionView;\n</code></pre>\n\n<p><strong>Question 1</strong></p>\n\n<p>On every keydown, I filter the collection, <strong>empty the <code>tbody</code></strong>, and render the results, thereby creating a new view for every model. I've just created ghost views, yes? Would it be best to properly destroy each view? Or should I attempt to manage my <code>RowView</code>s... creating each one only once, and looping through them to only render the results? An array in my <code>CollectionView</code> perhaps? After emptying the <code>tbody</code>, would the <code>RowViews</code> still have their <code>el</code> or is that now null and need to be re-rendered?</p>\n\n<p><strong>Question 2, Model Selection</strong></p>\n\n<p>You'll notice I'm triggering a custom event in my <code>RowView</code>. I'd like to have a detail view somewhere to handle that event and display the entirety of my model. When I search my list, if my selected model remains in the search results, I want to keep that state and let it remain in my detail view. Once it is no longer in my results, I'll empty the detail view. So I'll certainly need to manage an array of views, right? I've considered a doubly linked structure where each view points to it's model, and each model to it's view... but if I'm to implement a singleton factory on my models in the future, I can't impose that on the model. :/</p>\n\n<p>So what's the best way to manage these views?</p>\n",
            "last_activity_date": 1376156278,
            "question_id": 18157333,
            "score": 5,
            "tags": [
                "javascript",
                "backbone.js"
            ],
            "title": "Backbone.js - Best Practice for Implementing &quot;Instant&quot; Search"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You're on the right track by rewriting <code>form.onPart</code>. Formidable writes to disk by default, so you want to act before it does.</p>\n\n<p>Parts themselves are Streams, so you can pipe them to whatever you want, including <code>gm</code>. I haven't tested it, but this makes sense based on the documentation:</p>\n\n<pre><code>var form = new formidable.IncomingForm;\nform.onPart = function (part) {\n  if (!part.filename) return this.handlePart(part);\n\n  gm(part).resize(200, 200).stream(function (err, stdout, stderr) {\n    stdout.pipe(fs.createWriteStream('my/new/path/to/img.png'));\n  });\n};\n</code></pre>\n\n<p>As for the middleware, I'd copypaste the <code>multipart</code> middleware from Connect/Express and add the <code>onPart</code> function to it: <a href=\"http://www.senchalabs.org/connect/multipart.html\">http://www.senchalabs.org/connect/multipart.html</a></p>\n\n<p>It'd be a lot nicer if <code>formidable</code> didn't write to disk by default or if it took a flag, wouldn't it? You could send them an issue.</p>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>I'm using <code>Express.js</code> and have a route to upload images that I then need to resize.  Currently I just let <code>Express</code> write the file to disk (which I think uses <code>node-formidable</code> under the covers) and then resize using <code>gm</code> (http://aheckmann.github.com/gm/) which writes a second version to disk.</p>\n\n<pre><code>gm(path)\n  .resize(540,404)\n  .write(dest, function (err) { ... });\n</code></pre>\n\n<p>I've read that you can get a hold of the <code>node-formidable</code> file stream before it writes it to disk, and since <code>gm</code> can accept a stream instead of just a path, I should be able to pass this right through eliminating the double write to disk.</p>\n\n<p>I think I need to override <code>form.onPart</code> but I'm not sure where (should it be done as <code>Express</code> middleware?) and I'm not sure how to get a hold of <code>form</code> or what exactly to do with the <code>part</code>.  This is the code skeleton that I've seen in a few places:</p>\n\n<pre><code>form.onPart = function(part) {\n    if (!part.filename) { form.handlePart(part); return; }\n\n    part.on('data', function(buffer) {\n\n    });\n    part.on('end', function() {\n\n    }\n}\n</code></pre>\n\n<p>Can somebody help me put these two pieces together?  Thanks!</p>\n",
            "last_activity_date": 1344018530,
            "question_id": 11764585,
            "score": 5,
            "tags": [
                "javascript",
                "node.js",
                "express",
                "graphicsmagick"
            ],
            "title": "Stream file uploaded with Express.js through gm to eliminate double write"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Your extension needs to send the user to your app to sign in, so that the appropriate cookies will be set and your extension can authenticate as the user. The Chrome to Phone extension does this, and you can <a href=\"http://code.google.com/p/chrometophone/\">examine its source</a> to see how.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>This is a follow up to <a href=\"http://stackoverflow.com/questions/7827769/how-to-add-the-user-name-in-the-url-for-a-chrome-extension\">my previous question</a>. </p>\n\n<p>I am working on a Chrome extension <a href=\"http://ting-1.appspot.com/\">http://ting-1.appspot.com/</a> that saves the bookmarked page to Google App Engine backend. Looking at the Chrome web store I see that extensions have an \"add to chrome\" button. Since my extension requires communication with the backend (so the user must have a gmail account to use this extension) how do I indicate in the extension to use the username (the gmail address of the person who added the extension to Chrome) to write the bookmark to google app engine with his user id? I have a gap in my understanding and I don't seem to find anything related to this question in the documentation. My <code>background.html</code> is below. Thanks.</p>\n\n<p><strong>background.html</strong></p>\n\n<pre><code>&lt;html&gt;\n&lt;script&gt;\nchrome.browserAction.onClicked.addListener(function(tab) {\nchrome.tabs.getSelected(null, function(tab) {\n\n  // Send a request to the content script.\n  chrome.tabs.sendRequest(tab.id, {action: \"getDOM\"}, function(response) {\n    var firstParagraph = response.dom;\n    console.log(\"background -- before *console.log(response.dom)*\")\n    console.log(\"this is *console.log(response.dom)*: \" + response.dom)\n    console.log(\"background -- after *console.log(response.dom)*\")\n  //}); moved to end to get the variable firstParagraph\n\nvar formData = new FormData();\nformData.append(\"url\", tab.url);\nformData.append(\"title\", tab.title);\nformData.append(\"pitch\", firstParagraph);\n\nvar xhr = new XMLHttpRequest();\nxhr.open(\"POST\", \"http://ting-1.appspot.com/submithandlertest\", true);\nxhr.onreadystatechange = function (aEvt) {\n    if (xhr.readyState == 4) {\n        if (xhr.status == 200){ \n            console.log(\"request 200-OK\");\n            chrome.browserAction.setBadgeText ( { text: \"done\" } );\n            setTimeout(function () {\n            chrome.browserAction.setBadgeText( { text: \"\" } );\n            }, 2000);\n        }else{\n            console.log(\"connection error\");\n            chrome.browserAction.setBadgeText ( { text: \"ERR\" } );\n     }        \n  }        \n};\nxhr.send(formData);\n}); //chrome.tabs.sendRequest\n        });\n    });\n&lt;/script&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1319078803,
            "question_id": 7830209,
            "score": 5,
            "tags": [
                "javascript",
                "google-app-engine",
                "google-chrome-extension"
            ],
            "title": "How do I implement user authentication in a Chrome Extension using Google App Engine as backend?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I'm using YUI with it.  I'm saving the position of each box item being connected in a table.  I them have a separate table the stores a parent to child relationship between the items, which is used to determine the lines jsPlumb should draw.  I determine this using a selection process in which the first item selected is the parent, and all other items are children.  When the \"connect\" button is clicked, the parent/child selection of the items is cleared.  I also toggle this if you click the selected parent - it clear the child selections as well.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I recently wrote this blog post about why jsPlumb doesn't have a save function (and what I recommend you do):</p>\n\n<p><a href=\"http://jsplumb.tumblr.com/post/11297005239/why-doesnt-jsplumb-offer-a-save-function\" rel=\"nofollow\">http://jsplumb.tumblr.com/post/11297005239/why-doesnt-jsplumb-offer-a-save-function</a></p>\n\n<p>...maybe someone will find it useful.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I managed to save the chart  by simply having all the elements inside an array of objects, where each object has <strong>source</strong> and <strong>target nodes, x, y coordinates</strong>.</p>\n\n<p>When saving, simply do <code>JSON.stringify(whole_object)</code>, and if loading, simply <code>JSON.parse()</code> and manually position the nodes as well as connect them.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>My solution save and load jsPlumb: </p>\n\n<pre><code>function Save() {\n    $(\".node\").resizable(\"destroy\");\n    Objs = [];\n    $('.node').each(function() {\n        Objs.push({id:$(this).attr('id'), html:$(this).html(),left:$(this).css('left'),top:$(this).css('top'),width:$(this).css('width'),height:$(this).css('height')});\n    });\n    console.log(Objs);\n}\n\n\nfunction Load() {\n    var s=\"\";\n    for(var i in Objs) {\n        var o = Objs[i];\n        console.log(o);\n        s+='&lt;div id=\"'+ o.id+'\" class=\"node\" style=\"left:'+ o.left+'; top:'+ o.top+'; width:'+ o.width +'; height:'+ o.height +' \"&gt; '+ o.html+'&lt;/div&gt;';\n    }\n    $('#main').html(s);\n}\n</code></pre>\n\n<p>UPD Demo: <a href=\"http://jsfiddle.net/Rra6Y/137/\" rel=\"nofollow\">http://jsfiddle.net/Rra6Y/137/</a></p>\n\n<p>Note: if demo does not work in JsFiddle, make sure it points to an existing jsPlumb link (links are listed in \"External Resources\" JsFiddle menu item</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>My save functionality does a bit more than just save the x, y position of the element and its connections. I also added saving a connection Label overlay as well as custom text for each element. You can tailor this solution as per your requirements but here it is basically:</p>\n\n<pre><code>   //save functionality\n    function IterateDrawnElements(){  //part of save\n        var dict = {};\n        $('#id_diagram_container').children('div.window').each(function () {\n            var pos = $(this).position()\n            var diagram_label = $(this).children('div.asset-label').children('div.asset-diagram-label').text()\n            if (diagram_label == null || diagram_label == ''){\n                diagram_label='';\n            }\n            dict[this.id] = [pos.left, pos.top, diagram_label];\n        });\n        return dict;\n    }\n    function IterateConnections(){  //part of save\n        var list = [];\n        var conns = jsPlumb.getConnections()\n        for (var i = 0; i &lt; conns.length; i++) {\n            var source = conns[i].source.id;\n            var target = conns[i].target.id;\n            try{\n                var label = conns[i].getOverlay(\"label-overlay\").labelText;\n            }\n            catch(err) {\n                label = null\n            }\n            //list.push([source, target])\n            if (source != null &amp;&amp; target != null){\n                list.push([source, target, label]);\n            };\n        }\n        return list;\n    }\n</code></pre>\n\n<p>I initiate all this when the user hits the save button, an ajax call is made back to the server, in this case Django is intercepting the ajax request and saves the data to the database.</p>\n\n<p>//ajax call when save button pressed\n$save_btn.click(function() {</p>\n\n<pre><code>//drawn elements\nvar d_elements = IterateDrawnElements();\nvar d_conns = IterateConnections();\nvar d_name =$('#id_diagram_name').val();\n\n$.ajax({\n    url : \".\",\n    type : \"POST\",\n    dataType: \"json\",\n    data : {\n        drawn_elements: JSON.stringify(d_elements),\n        conns: JSON.stringify(d_conns),\n        diagram_name: d_name,\n        csrfmiddlewaretoken: '{{ csrf_token }}'\n    },\n    success: function (result) {\n\n        if (result.success == true){\n            save_status.html(result.message)\n        }\n        //console.log(JSON.stringify(result));\n        $save_btn.attr('disabled','disabled');\n        if (result.old_name != false){\n            //alert()\n            $('#id_diagram_name').val(result.old_name)\n        }\n    },\n    error: function(xhr, textStatus, errorThrown) {\n        alert(\"Please report this error: \"+errorThrown+xhr.status+xhr.responseText);\n    }\n});\n//return false; // always return error?\n</code></pre>\n\n<p>});</p>\n\n<p>To load all this up is even easier and there are many ways you can do this.  In Django you can just generate the html straight in your template as well as the js for the connections or you can create a JSON object in javascript for everything and then have javascript draw it all based on the array. I used jquery for this.</p>\n\n<pre><code>//js &amp; connections load\n\nvar asset_conns = [\n    {% for conn in diagram_conns  %}\n    [ {{ conn.source.id }}, {{ conn.target.id }}, '{{ conn.name }}' ],\n    {% endfor %}\n]\n\n\n// Takes loaded connections and connects them\nfor (var i = 0; i&lt; asset_conns.length; i++){\n    var source = asset_conns[i][0].toString();\n    var target = asset_conns[i][1].toString();\n    var label = asset_conns[i][2];\n    var c = jsPlumb.connect({source: source, target: target, detachable:true, reattach: true });  //on init already know what kind of anchor to use!\n    if (label != null &amp;&amp; label != 'None'){\n        c.addOverlay([ \"Label\", { label: label,  id:\"label-overlay\"} ]);\n    }\n}\n\n//html right into django template to draw elements, asset element interchangeable terms\n\n{% for element in drawn_elements %}\n    &lt;div id=\"{{ element.asset.id }}\" class=\"window\" style=\"left:{{ element.left }}px;top:{{ element.top }}px;background-image: url('{% static element.asset.asset_mold.image.url %}'); width: {{ element.asset.asset_mold.image.width }}px;height: {{ element.asset.asset_mold.image.height }}px;\"&gt;\n        &lt;div class=\"asset-label\" id=\"label-{{ element.asset.id }}\"&gt;\n            {#{{ element.asset }}#}&lt;a class=\"lbl-link\" id=\"lbl-link-{{ element.asset.id }}\" href=\"{{ element.asset.get_absolute_url }}\"&gt;{{ element.asset }}&lt;/a&gt;\n            &lt;div class='asset-diagram-label' id=\"lbl-{{ element.asset.id }}\"&gt;{% if element.asset.diagram_label  %}{{ element.asset.diagram_label }}{% endif %}&lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class='ep' id=\"ep-{{ element.asset.id }}\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n{% endfor %}\n</code></pre>\n\n<p>You can greatly simplify this but mine also gets a background for the element, as well as label and the shape of the element to use with perimeter anchors.  This solution works and is tested. I'll release an open source Djago application for this soon on PyPi.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>What's the best approach to save and load an flowchart on <a href=\"http://jsplumb.org\" rel=\"nofollow\">jsPlumb</a>?</p>\n",
            "last_activity_date": 1401765285,
            "question_id": 7405637,
            "score": 5,
            "tags": [
                "javascript",
                "jquery",
                "jquery-plugins",
                "jsplumb"
            ],
            "title": "Save and load a flowchart on jsPlumb"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Your user collection url should be set to /user.  Once that's set, your models should utilize that url in order to do their magic.  I believe (not completely positive) that if a model is in a collection, calling the 'url' method will return /user/:id.  So all your typical REST-ish functionality will be utilized on '/user/:id'.  If you are trying to do something with a relationship (a user has many documents) it's kind of rinse and repeat.  So, for your documents collection (which belogs to user correct?) you'd set the url to 'user_instance.url/documents'.</p>\n\n<p>To show a one to many relationship with a backbone model, you'd do something like this (upgrade to backbone 0.5.1 for urlRoot):</p>\n\n<pre><code>var User = Backbone.Model.extend({\n    initialize: function() {\n        // note, you are passing the function url.  This is important if you are\n        // creating a new user that's not been sync'd to the server yet.  If you\n        // did something like: {user_url: this.url()} it wouldn't contain the id\n        // yet... and any sync through docs would fail... even if you sync'd the\n        // user model!\n        this.docs = new Docs([], {user_url: this.url});\n    },\n    urlRoot: '/user'\n});\n\nvar Doc  = Backbone.Model.extend();\n\nvar Docs = Backbone.Collection.extend({\n    initialize: function(models, args) {\n        this.url = function() { args.user_url() + '/documents'; };\n    }\n});\n\nvar user = new User([{id: 1234}]);\nuser.docs.fetch({ success: function() { alert('win') });\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Why do you need to override the URL property of the collection with a function?.. you could do:</p>\n\n<pre><code> this.collection = new Docs();\n this.collection.project_id = this.options.project_id;\n this.collection.url = '/project/api/' + this.options.project_id + '/docs';\n this.collection.fetch();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I like the answer from Craig Monson, but to get it working I needed to fix two things:</p>\n\n<ul>\n<li>Binding the User url method before passing it to the Docs</li>\n<li>A return statement from the url function in Docs</li>\n</ul>\n\n<p>Updated example:</p>\n\n<pre><code>var User = Backbone.Model.extend({\n    initialize: function() {\n        // note, you are passing the function url.  This is important if you are\n        // creating a new user that's not been sync'd to the server yet.  If you\n        // did something like: {user_url: this.url()} it wouldn't contain the id\n        // yet... and any sync through docs would fail... even if you sync'd the\n        // user model!\n        this.docs = new Docs([], { user_url: this.url.bind(this) });\n        },\n        urlRoot: '/user'\n    });\n\nvar Doc  = Backbone.Model.extend();\n\nvar Docs = Backbone.Collection.extend({\n    initialize: function(models, args) {\n        this.url = function() { return args.user_url() + '/documents'; };\n    }\n});\n\nvar user = new User([{id: 1234}]);\nuser.docs.fetch({ success: function() { alert('win') });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to pass an id to a collection for use in the url (e.g. /user/1234/projects.json) but am not sure how to do this, an example would be wonderful. </p>\n\n<p>The way my application is structured is on launch a collection of 'users' is pulled and rendered, I then want when a user is clicked their 'documents' are pulled from the server into a new collection and rendered in a new view. The issue is getting the user id into the documents collection to give the relevant URL for the documents.fetch().</p>\n\n<hr>\n\n<p>think I've got it, here is an example:</p>\n\n<pre><code>  //in the the view initialize function     \n  this.collection = new Docs();\n  this.collection.project_id = this.options.project_id;\n  this.collection.fetch();\n\n  //in the collection\n  url: function() {\n     return '/project/api/' +this.project_id+'/docs';\n  }\n</code></pre>\n",
            "last_activity_date": 1395244848,
            "question_id": 6734789,
            "score": 5,
            "tags": [
                "javascript",
                "backbone.js"
            ],
            "title": "Backbone set collection attribute (for the url)"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Here is a simple hair simulation that seems to be what you are looking for. The basic idea is to draw a bezier curve (in this case I use two curves to provide thickness for the hair). The curve will have a base, a bending point, and a tip. I set the bending point halfway up the hair. The tip of the hair will rotate about the axis of the base of the hair in response to mouse movement.</p>\n\n<p>Place this code in a script tag below the canvas element declaration.</p>\n\n<pre><code>    function Point(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    function Hair( )  {\n        this.height = 100;   // hair height\n        this.baseWidth = 3;    // hair base width.\n        this.thickness = 1.5; // hair thickness\n        this.points = {};\n\n        this.points.base1 = new Point(Math.random()*canvas.width, canvas.height);\n\n        // The point at which the hair will bend. I set it to the middle of the hair, but you can adjust this.\n        this.points.bendPoint1 = new Point(this.points.base1.x-this.thickness, this.points.base1.y - this.height / 2)\n\n        this.points.bendPoint2 = new Point(this.points.bendPoint1.x, this.points.bendPoint1.y-this.thickness); // complement of bendPoint1 - we use this because the hair has thickness\n        this.points.base2 = new Point(this.points.base1.x + this.baseWidth, this.points.base1.y) // complement of base1 - we use this because the hair has thickness\n    }\n\n    Hair.prototype.paint = function(mouseX, mouseY, direction) {    \n        ctx.save();\n\n        // rotate the the tip of the hair\n        var tipRotationAngle = Math.atan(Math.abs(this.points.base1.y - mouseY)/Math.abs(this.points.base1.x - mouseX));\n\n        // if the mouse is on the other side of the hair, adjust the angle\n        if (mouseX &lt; this.points.base1.x) {\n            tipRotationAngle = Math.PI - tipRotationAngle;\n        }\n\n        // if the mouse isn't close enough to the hair, it shouldn't affect the hair\n        if (mouseX &lt; this.points.base1.x - this.height/2 || mouseX &gt; this.points.base1.x + this.height/2 || mouseY &lt; this.points.base1.y - this.height || mouseY &gt; this.points.base1.y) {\n            tipRotationAngle = Math.PI/2; // 90 degrees, which means the hair is straight\n        }\n\n        // Use the direction of the mouse to as a lazy way to simulate the direction the hair should bend.\n        // Note that in real life, the direction that the hair should bend has nothing to do with the direction of motion. It actually depends on which side of the hair the force is being applied.\n        // Figuring out which side of the hair the force is being applied is a little tricky, so I took this shortcut.\n        // If you run your finger along a comb quickly, this approximation will work. However if you are in the middle of the comb and slowly change direction, you will notice that the force is still applied in the opposite direction of motion as you slowly back off the set of tines.\n        if ((mouseX &lt; this.points.base1.x &amp;&amp; direction == 'right') || (mouseX &gt; this.points.base1.x &amp;&amp; direction == 'left')) {\n            tipRotationAngle = Math.PI/2; // 90 degrees, which means the hair is straight\n        }\n\n        var tipPoint = new Point(this.points.base1.x + this.baseWidth + this.height*Math.cos(tipRotationAngle), this.points.base1.y - this.height*Math.sin(tipRotationAngle));\n\n        ctx.beginPath();\n        ctx.moveTo(this.points.base1.x, this.points.base1.y); // start at the base\n        ctx.bezierCurveTo(this.points.base1.x, this.points.base1.y, this.points.bendPoint1.x, this.points.bendPoint1.y, tipPoint.x, tipPoint.y); // draw a curve to the tip of the hair\n        ctx.bezierCurveTo(tipPoint.x, tipPoint.y, this.points.bendPoint2.x, this.points.bendPoint2.y, this.points.base2.x, this.points.base2.y); // draw a curve back down to the base using the complement points since the hair has thickness.\n        ctx.closePath(); // complete the path so we have a shape that we can fill with color\n        ctx.fillStyle='rgb(0,0,0)';\n        ctx.fill();\n\n        ctx.restore();\n    }  \n\n    // I used global variables to keep the example simple, but it is generally best to avoid using global variables\n    window.canvas = document.getElementById('myCanvas');\n    window.ctx = canvas.getContext('2d');\n    ctx.fillStyle = 'rgb(200,255,255)'; // background color\n    window.hair = [];\n    window.prevClientX = 0;\n\n    for (var i = 0; i &lt; 100; i++) {\n        hair.push(new Hair());\n    }\n\n    // initial draw\n    ctx.fillRect(0,0,canvas.width,canvas.height); // clear canvas\n    for (var i = 0; i &lt; hair.length; i++) {\n        hair[i].paint(0, 0, 'right');\n    }\n\n    window.onmousemove = function(e)    {\n        ctx.fillRect(0,0,canvas.width,canvas.height); // clear canvas\n\n        for (var i = 0; i &lt; hair.length; i++) {\n            hair[i].paint(e.clientX, e.clientY, e.clientX &gt; window.prevClientX ? 'right' : 'left');\n        }\n        window.prevClientX = e.clientX;\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<h2>Waving grass algorithm</h2>\n\n<p><strong>UPDATE</strong></p>\n\n<p>I made a reduced update to better meet what I believe is your requirements. To use mouse you just calculate the angle between the mouse point and the strain root and use that for new angle in the update.</p>\n\n<p>I have incorporated a simple mouse-move sensitive approach which makes the strains \"point\" towards the mouse, but you can add random angles to this as deltas and so forth. Everything you need is as said in the code - adjust as needed.</p>\n\n<p>New fiddle (based on previous with a few modifications):<br>\n<a href=\"http://jsfiddle.net/AbdiasSoftware/yEwGc/\" rel=\"nofollow\">http://jsfiddle.net/AbdiasSoftware/yEwGc/</a></p>\n\n<p><img src=\"http://i.stack.imgur.com/az9b9.png\" alt=\"enter image description here\"></p>\n\n<p><img src=\"http://i.stack.imgur.com/1NUzB.png\" alt=\"Grass simulation snaphot - 150 strains\">\n<em>Image showing 150 strains being simulated.</em></p>\n\n<p>Grass simulation demo:<br>\n<a href=\"http://jsfiddle.net/AbdiasSoftware/5z89V/\" rel=\"nofollow\">http://jsfiddle.net/AbdiasSoftware/5z89V/</a></p>\n\n<p>This will generate a nice realistic looking grass field. The demo has 70 grass rendered (works best in Chrome or just lower the number for Firefox).</p>\n\n<p>The code is rather simple. It consists of a main object (<code>grassObj</code>) which contains its geometry as well as functions to calculate the angles, segments, movements and so forth. I'll show this in detail below.</p>\n\n<p>First some inits that are accessed globally by the functions:</p>\n\n<pre><code>var numOfGrass = 70,  /// number of grass strains\n    grass,\n\n    /// get canvas context\n    ctx = canvas.getContext('2d'),\n    w = canvas.width,\n    h = canvas.height,\n\n    /// we use an animated image for the background\n    /// The image also clears the canvas for each loop call\n    /// I rendered the clouds in a 3D software.\n    img = document.createElement('img'),\n    ix = 0,  /// background image position\n    iw = -1; /// used for with and initial for flag\n\n    /// load background image, use it whenever it's ready\n    img.onload = function() {iw = this.width}\n    img.src = 'http://i.imgur.com/zzjtzG7.jpg';\n</code></pre>\n\n<h2>The heart - grassObj</h2>\n\n<p>The main object as mentioned above is the <code>grassObj</code>:</p>\n\n<pre><code>function grassObj(x, y, seg1, seg2, maxAngle) {\n\n    /// exposed properties we need for rendering\n    this.x = x;        /// bottom position of grass\n    this.y = y;\n    this.seg1 = seg1;  /// segments of grass\n    this.seg2 = seg2; \n    this.gradient = getGradient(Math.random() * 50 + 50, 100 * Math.random() + 170);\n\n    this.currentAngle; ///current angle that will be rendered\n\n    /// internals used for calculating new angle, goal, difference and speed\n    var counter,       /// counter between 0-1 for ease-in/out\n        delta,         /// random steps in the direction goal rel. c.angle.\n        angle,         /// current angle, does not change until goal is reached\n        diff,          /// diff between goal and angle\n        goal = getAngle();\n\n    /// internal: returns an angel between 0 and maxAngle\n    function getAngle() {\n        return maxAngle * Math.random();\n    }\n\n    /// ease in-out function\n    function easeInOut(t) {\n        return t &lt; 0.5 ? 4 * t * t * t : (t-1) * (2 * t - 2) * (2 * t - 2) + 1;\n    }\n\n    /// sets a new goal for grass to move to. Does the main calculations\n    function newGoal() {\n        angle = goal;        /// set goal as new angle when reached\n        this.currentAngle = angle;\n        goal = getAngle();   /// get new goal\n        diff = goal - angle; /// calc diff\n        counter = 0;         /// reset counter\n\n        delta = (4 * Math.random() + 1) / 100;\n    }\n\n    /// creates a gradient for this grass to increase realism\n    function getGradient(min, max) {\n\n        var g = ctx.createLinearGradient(0, 0, 0, h);\n        g.addColorStop(1,   'rgb(0,' + parseInt(min) + ', 0)');\n        g.addColorStop(0,   'rgb(0,' + parseInt(max) + ', 0)');\n\n        return g;\n    }\n\n    /// this is called from animation loop. Counts and keeps tracks of \n    /// current position and calls new goal when current goal is reached\n    this.update = function() {\n\n        /// count from 0 to 1 with random delta value   \n        counter += delta;\n\n        /// if counter passes 1 then goal is reached -&gt; get new goal\n        if (counter &gt; 1) {\n            newGoal();\n            return;\n        }\n\n        /// ease in/out function\n        var t = easeInOut(counter);\n\n        /// update current angle for render\n        this.currentAngle = angle + t * diff;\n    }\n\n    /// init\n    newGoal();\n\n    return this;\n}\n</code></pre>\n\n<h2>Grass generator</h2>\n\n<p>We call <code>makeGrass</code> to generate grass at random positions, random heights and with random segments. The function is called with number of grass to render, width and height of canvas to fill and a variation variable in percent (0 - 1 float).</p>\n\n<p>The single grass consist only of four points in total. The two middle points are spread about 1/3 and 2/3 of the total height with a little variation to break pattern. The points when rendered, are smoother using a cardinal spline with full tension to make the grass look smooth.</p>\n\n<pre><code>function makeGrass(numOfGrass, width, height, hVariation) {\n\n    /// setup variables\n    var x, y, seg1, seg2, angle,\n        hf = height * hVariation,  /// get variation\n        i = 0,\n        grass = [];                /// array to hold the grass\n\n    /// generate grass\n    for(; i &lt; numOfGrass; i++) {\n\n        x = width * Math.random();        /// random x position\n        y = height - hf * Math.random();  /// random height\n\n        /// break grass into 3 segments with random variation\n        seg1 = y / 3 + y * hVariation * Math.random() * 0.1;\n        seg2 = (y / 3 * 2) + y * hVariation * Math.random() * 0.1;\n\n        grass.push(new grassObj(x, y, seg1, seg2, 15 * Math.random() + 50));\n}\n\n    return grass;\n}\n</code></pre>\n\n<h2>Render</h2>\n\n<p>The render function just loops through the objects and updates the current geometry:</p>\n\n<pre><code>function renderGrass(ctx, grass) {\n\n    /// local vars for animation\n    var len = grass.length,\n        i = 0,\n        gr, pos, diff, pts, x, y;\n\n    /// renders background when loaded\n    if (iw &gt; -1) {\n        ctx.drawImage(img, ix--, 0);\n        if (ix &lt; -w) {\n            ctx.drawImage(img, ix + iw, 0);\n        }\n        if (ix &lt;= -iw) ix = 0;\n    } else {\n        ctx.clearRect(0, 0, w, h);\n    }\n\n    /// loops through the grass object and renders current state\n    for(; gr = grass[i]; i++) {\n\n        x = gr.x;\n        y = gr.y;\n\n        ctx.beginPath();\n\n        /// calculates the end-point based on length and angle\n        /// Angle is limited [0, 60] which we add 225 deg. to get\n        /// it upwards. Alter 225 to make grass lean more to a side.\n        pos = lineToAngle(ctx, x, h, y, gr.currentAngle + 225);\n\n        /// diff between end point and root point\n        diff = (pos[0] - x)\n\n        pts = [];\n\n        /// starts at bottom, goes to top middle and then back\n        /// down with a slight offset to make the grass\n\n        pts.push(x); /// first couple at bottom\n        pts.push(h);\n\n        /// first segment 1/4 of the difference\n        pts.push(x + (diff / 4));\n        pts.push(h - gr.seg1);\n\n        /// second segment 2/3 of the difference\n        pts.push(x + (diff / 3 * 2));\n        pts.push(h - gr.seg2);\n\n        pts.push(pos[0]);    /// top point\n        pts.push(pos[1]);\n\n        /// re-use previous data, but go backward down to root again\n        /// with a slight offset\n        pts.push(x + (diff / 3 * 2) + 10);\n        pts.push(h - gr.seg2);\n\n        pts.push(x + (diff / 4) + 12);\n        pts.push(h - gr.seg1 + 10);\n\n        pts.push(x + 15); /// end couple at bottom\n        pts.push(h);\n\n        /// smooth points (extended context function, see demo)\n        ctx.curve(pts, 0.8, 5);\n\n        ctx.closePath();\n\n        /// fill grass with its gradient\n        ctx.fillStyle = gr.gradient;\n        ctx.fill();\n    }\n}\n</code></pre>\n\n<h2>Animate</h2>\n\n<p>The main loop where we animate everything:</p>\n\n<pre><code>function animate() {\n\n    /// update each grass objects\n    for(var i = 0;i &lt; grass.length; i++) grass[i].update();            \n\n    /// render them\n    renderGrass(ctx, grass);\n\n    /// loop\n    requestAnimationFrame(animate);\n}\n</code></pre>\n\n<p>And that's all there is to it for this version.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><strong>Update:</strong> I'm currently adjusting the <a href=\"http://jsfiddle.net/qXpZR/8/\" rel=\"nofollow\">code</a> to produce the requested result and commenting it. </p>\n\n<pre><code>(function() { // The code is encapsulated in a self invoking function  to isolate the scope\n  \"use strict\";\n\n   // The following lines creates shortcuts to the constructors of the Box2D types used\n   var B2Vec2 = Box2D.Common.Math.b2Vec2,\n      B2BodyDef = Box2D.Dynamics.b2BodyDef,\n      B2Body = Box2D.Dynamics.b2Body,\n      B2FixtureDef = Box2D.Dynamics.b2FixtureDef,\n      B2Fixture = Box2D.Dynamics.b2Fixture,\n      B2World = Box2D.Dynamics.b2World,\n      B2PolygonShape = Box2D.Collision.Shapes.b2PolygonShape,\n      B2RevoluteJoint = Box2D.Dynamics.Joints.b2RevoluteJoint,\n      B2RevoluteJointDef = Box2D.Dynamics.Joints.b2RevoluteJointDef;\n\n  // This makes sure that there is a method to request a callback to update the graphics for next frame\n  window.requestAnimationFrame =\n    window.requestAnimationFrame || // According to the standard\n    window.mozRequestAnimationFrame || // For mozilla\n    window.webkitRequestAnimationFrame || // For webkit\n    window.msRequestAnimationFrame || // For ie\n    function (f) { window.setTimeout(function () { f(Date.now()); }, 1000/60); }; // If everthing else fails\n\n  var world = new B2World(new B2Vec2(0, -10), true), // Create a world with gravity\n      physicalObjects = [], // Maintain a list of the simulated objects\n      windInput = 0, // The input for the wind in the current frame\n      wind = 0, // The current wind (smoothing the input values + randomness)\n      STRAW_COUNT = 10, // Number of straws\n      GRASS_RESET_SPEED = 2, // How quick should the straw reset to its target angle\n      POWER_MOUSE_WIND = 120, // How much does the mouse affect the wind\n      POWER_RANDOM_WIND = 180; // How much does the randomness affect the wind\n\n  // GrassPart is a prototype for a piece of a straw. It has the following properties\n  //  position: the position of the piece\n  //  density: the density of the piece\n  //  target: the target angle of the piece\n  //  statik: a boolean stating if the piece is static (i.e. does not move)\n  function GrassPart(position, density, target, statik) {\n    this.width = 0.05;\n    this.height = 0.5;\n    this.target = target;\n\n    // To create a physical body in Box2D you have to setup a body definition\n    // and create at least one fixture.\n    var bdef = new B2BodyDef(), fdef = new B2FixtureDef();\n    // In this example we specify if the body is static or not (the grass roots \n    // has to be static to keep the straw in its position), and its original\n    // position.\n    bdef.type = statik? B2Body.b2_staticBody : B2Body.b2_dynamicBody;\n    bdef.position.SetV(position);\n\n    // The fixture of the piece is a box with a given density. The negative group index\n    // makes sure that the straws does not collide.\n    fdef.shape = new B2PolygonShape();\n    fdef.shape.SetAsBox(this.width/2, this.height/2);\n    fdef.density = density;\n    fdef.filter.groupIndex = -1;\n\n    // The body and fixture is created and added to the world\n    this.body = world.CreateBody(bdef);\n    this.body.CreateFixture(fdef);\n  }\n\n  // This method is called for every frame of animation. It strives to reset the original\n  // angle of the straw (the joint). The time parameter is unused here but contains the\n  // current time.\n  GrassPart.prototype.update = function (time) {\n    if (this.joint) {\n      this.joint.SetMotorSpeed(GRASS_RESET_SPEED*(this.target - this.joint.GetJointAngle()));\n    }\n  };\n\n  // The link method is used to link the pieces of the straw together using a joint\n  // other: the piece to link to\n  // torque: the strength of the joint (stiffness)\n  GrassPart.prototype.link = function(other, torque) {\n    // This is all Box2D specific. Look it up in the manual.\n    var jdef = new B2RevoluteJointDef();\n    var p = this.body.GetWorldPoint(new B2Vec2(0, 0.5)); // Get the world coordinates of where the joint\n    jdef.Initialize(this.body, other.body, p);\n    jdef.maxMotorTorque = torque;\n    jdef.motorSpeed = 0;\n    jdef.enableMotor = true;\n\n    // Add the joint to the world\n    this.joint = world.CreateJoint(jdef);\n  };\n\n  // A prototype for a straw of grass\n  // position: the position of the bottom of the root of the straw\n  function Grass(position) {\n    var pos = new B2Vec2(position.x, position.y);\n    var angle = 1.2*Math.random() - 0.6; // Randomize the target angle\n\n    // Create three pieces, the static root and to more, and place them in line.\n    // The second parameter is the stiffness of the joints. It controls how the straw bends.\n    // The third is the target angle and different angles are specified for the pieces.\n    this.g1 = new GrassPart(pos, 1, angle/4, true); // This is the static root\n    pos.Add(new B2Vec2(0, 1));\n    this.g2 = new GrassPart(pos, 0.75, angle);\n    pos.Add(new B2Vec2(0, 1));\n    this.g3 = new GrassPart(pos, 0.5);\n\n    // Link the pieces into a straw\n    this.g1.link(this.g2, 20);\n    this.g2.link(this.g3, 3);\n\n    // Add the pieces to the list of simulate objects\n    physicalObjects.push(this.g1);\n    physicalObjects.push(this.g2);\n    physicalObjects.push(this.g3);\n  }\n\n  Grass.prototype.draw = function (context) {\n      var p = new B2Vec2(0, 0.5);\n      var p1 = this.g1.body.GetWorldPoint(p);\n      var p2 = this.g2.body.GetWorldPoint(p);\n      var p3 = this.g3.body.GetWorldPoint(p);\n\n      context.strokeStyle = 'grey';\n      context.lineWidth = 0.4;\n      context.lineCap = 'round';\n\n      context.beginPath();\n      context.moveTo(p1.x, p1.y);\n      context.quadraticCurveTo(p2.x, p2.y, p3.x, p3.y);\n      context.stroke();\n  };\n\n    var lastX, grass = [], context = document.getElementById('canvas').getContext('2d');\n\n    function updateGraphics(time) {\n      window.requestAnimationFrame(updateGraphics);\n\n      wind = 0.95*wind + 0.05*(POWER_MOUSE_WIND*windInput + POWER_RANDOM_WIND*Math.random() - POWER_RANDOM_WIND/2);\n      windInput = 0;\n      world.SetGravity(new B2Vec2(wind, -10));\n\n      physicalObjects.forEach(function(obj) { if (obj.update) obj.update(time); });\n      world.Step(1/60, 8, 3);\n      world.ClearForces();\n\n      context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n      context.save();\n      context.translate(context.canvas.width/2, context.canvas.height/2);\n      context.scale(context.canvas.width/20, -context.canvas.width/20);\n      grass.forEach(function (o) { o.draw(context); });\n      context.restore();\n    }\n\n    document.getElementsByTagName('body')[0].addEventListener(\"mousemove\", function (e) {\n      windInput = Math.abs(lastX - e.x) &lt; 200? 0.2*(e.x - lastX) : 0;\n      lastX = e.x;\n    });\n\n    var W = 8;\n    for (var i = 0; i &lt; STRAW_COUNT; i++) {\n      grass.push(new Grass(new B2Vec2(W*(i/(STRAW_COUNT-1))-W/2, -1)));\n    }\n\n    window.requestAnimationFrame(updateGraphics);\n})();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p><strong>Darn! Late to the party...</strong></p>\n\n<p>But LOTS of neat answers here -- I'm upvoting all !</p>\n\n<p>Anyway, here's my idea:</p>\n\n<p><img src=\"http://i.stack.imgur.com/IqK1w.png\" alt=\"enter image description here\"></p>\n\n<p>Here's code and a Fiddle:  <a href=\"http://jsfiddle.net/m1erickson/MJjHz/\" rel=\"nofollow\">http://jsfiddle.net/m1erickson/MJjHz/</a></p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n\n    &lt;link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"css/reset.css\" /&gt; &lt;!-- reset css --&gt;\n    &lt;script src=\"http://code.jquery.com/jquery-1.9.1.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"http://code.jquery.com/ui/1.10.1/jquery-ui.js\"&gt;&lt;/script&gt;\n\n    &lt;style&gt;\n      body { font-family: arial; padding:15px; }\n      canvas { border: 1px solid red;}\n      input[type=\"text\"]{width:35px;}\n    &lt;/style&gt;\n\n  &lt;/head&gt;\n  &lt;body&gt;\n      &lt;p&gt;Move mouse across hairs&lt;/p&gt;\n      &lt;canvas height=\"100\" width=\"250\" id=\"canvas\"&gt;&lt;/canvas&gt;\n  &lt;script&gt;\n\n      $(function() {\n\n        var canvas=document.getElementById(\"canvas\");\n        var ctx = canvas.getContext(\"2d\");\n        var canvasOffset=$(\"#canvas\").offset();\n        var offsetX=canvasOffset.left;\n        var offsetY=canvasOffset.top;\n\n        var cHeight=canvas.height;\n        var showControls=false;\n        var lastMouseX=0;\n\n        // preset styling CONSTANTS\n        var SWAY=.55;     // max endpoint sway from center \n        var C1Y=.40;      // fixed Y of cp#1\n        var C2SWAY=.20    // max cp#2 sway from center\n        var C2Y=.75;      // fixed Y of cp#2\n        var YY=20;        // max height of ellipse at top of hair\n        var PIPERCENT=Math.PI/100;\n\n        var hairs=[];\n\n        // create hairs\n        var newHairX=40;\n        var hairCount=20;\n        for(var i=0;i&lt;hairCount;i++){\n            var randomLength=50+parseInt(Math.random()*5);\n            addHair(newHairX+(i*8),randomLength);\n        }\n\n        function addHair(x,length){\n            hairs.push({\n                x:x,\n                length:length,\n                left:0,\n                right:0,\n                top:0,\n                s:{x:0,y:0},\n                c1:{x:0,y:0},\n                c2:{x:0,y:0},\n                e:{x:0,y:0},\n                isInMotion:false,\n                currentX:0\n            });\n        }\n\n        for(var i=0;i&lt;hairs.length;i++){\n            var h=hairs[i];\n            setHairPointsFixed(h);\n            setHairPointsPct(h,50);\n            draw(h);\n        }\n\n        function setHairPointsFixed(h){\n            h.s.x   = h.x;\n            h.s.y   = cHeight;\n            h.c1.x  = h.x;\n            h.c1.y  = cHeight-h.length*C1Y;\n            h.c2.y  = cHeight-h.length*C2Y;\n            h.top   = cHeight-h.length;\n            h.left  = h.x-h.length*SWAY;\n            h.right = h.x+h.length*SWAY;\n        }\n\n\n        function setHairPointsPct(h,pct){\n            // endpoint\n            var a=Math.PI+PIPERCENT*pct;\n            h.e.x  = h.x - ((h.length*SWAY)*Math.cos(a));\n            h.e.y  = h.top + (YY*Math.sin(a));\n            // controlpoint#2\n            h.c2.x = h.x + h.length*(C2SWAY*2*pct/100-C2SWAY);\n        }\n\n        //////////////////////////////\n\n        function handleMouseMove(e){\n          mouseX=parseInt(e.clientX-offsetX);\n          mouseY=parseInt(e.clientY-offsetY);\n\n          // draw this frame based on mouse moves\n          ctx.clearRect(0,0,canvas.width,canvas.height);\n          for(var i=0;i&lt;hairs.length;i++){\n              hairMoves(hairs[i],mouseX,mouseY);\n          }\n\n          lastMouseX=mouseX;\n        }\n        $(\"#canvas\").mousemove(function(e){handleMouseMove(e);});\n\n\n\n        function hairMoves(h,mouseX,mouseY){\n\n          // No hair movement if not touching hair\n          if(mouseY&lt;cHeight-h.length-YY){\n              if(h.isInMotion){\n                  h.isInMotion=false;\n                  setHairPointsPct(h,50);\n              }\n              draw(h);\n              return;\n          }\n\n          // No hair movement if too deep in hair\n          if(mouseY&gt;h.c1.y){\n              draw(h);\n              return;\n          }\n\n          //\n          var pct=50;\n          if(mouseX&gt;=h.left &amp;&amp; mouseX&lt;=h.right){\n\n              if(h.isInMotion){\n\n                  var pct=-(mouseX-h.right)/(h.right-h.left)*100;\n                  setHairPointsPct(h,pct);\n                  draw(h);\n\n              }else{\n\n                  // if hair is at rest \n                  // but mouse has just contacted hair\n                  // set hair in motion\n                  if(   (lastMouseX&lt;=h.x &amp;&amp; mouseX&gt;=h.x )\n                      ||(lastMouseX&gt;=h.x &amp;&amp; mouseX&lt;=h.x )\n                  ){\n                      h.isInMotion=true;\n                      var pct=-(mouseX-h.right)/(h.right-h.left)*100;\n                  }\n                  setHairPointsPct(h,pct);\n                  draw(h);\n\n              }\n\n          }else{\n              if(h.isInMotion){\n                  h.isInMotion=false;\n                  setHairPointsPct(h,50);\n              };\n              draw(h);\n          }\n\n        }\n\n\n        function dot(pt,color){\n            ctx.beginPath();\n            ctx.arc(pt.x,pt.y,5,0,Math.PI*2,false);\n            ctx.closePath();\n            ctx.fillStyle=color;\n            ctx.fill();\n        }\n\n\n        function draw(h){\n\n            ctx.beginPath();\n            ctx.moveTo(h.s.x,h.s.y);\n            ctx.bezierCurveTo(h.c1.x,h.c1.y,h.c2.x,h.c2.y,h.e.x,h.e.y);\n            ctx.strokeStyle=\"orange\";\n            ctx.lineWidth=3;\n            ctx.stroke();\n\n            if(showControls){\n                dot(h.s,\"green\");\n                dot(h.c1,\"red\");\n                dot(h.c2,\"blue\");\n                dot(h.e,\"purple\");\n\n                ctx.beginPath();\n                ctx.rect(h.left,h.top-YY,(h.right-h.left),h.length*(1-C1Y)+YY)\n                ctx.lineWidth=1;\n                ctx.strokeStyle=\"lightgray\";\n                ctx.stroke();\n            }\n\n        }\n\n\n    });\n    &lt;/script&gt;\n\n  &lt;/body&gt;   \n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>This is what I am trying to achieve--<a href=\"http://cssdeck.com/labs/4ksohwya\" rel=\"nofollow\">GRASS Animation</a>(Desired animation)</p>\n\n<p>This is where the project is standing currently <a href=\"http://jsfiddle.net/jayeshjain24/UmSss/2/\" rel=\"nofollow\">--My hair animation</a></p>\n\n<p>This is a more structurised code of the above code --My hair animation(by markE)<a href=\"http://jsfiddle.net/m1erickson/8K825/\" rel=\"nofollow\">--markE`s code of hair animation</a></p>\n\n<p><strong>PROBLEM:--</strong></p>\n\n<p>I am able to give movements to hairs but animation should be more like wavy grass like freeflowing.Its not very smooth now.What can be done to make the hairs flow in more natural manner. \nPlease provide me with a small sample if possible!!!</p>\n\n<pre><code>    &lt;canvas id=\"myCanvas\" width=\"500\" height=\"500\" style=\"background-color: antiquewhite\" &gt;&lt;/canvas&gt;\n</code></pre>\n\n<p>JAVASCRIPT</p>\n\n<pre><code>//mouse position\nvar x2=0;\nvar y2=0;\n\nwindow.addEventListener(\"mousemove\",function(){moving(event);init()},false)\n\n//these variables define the bend in our bezier curve\nvar bend9=0;\nvar bend8=0;\nvar bend7=0;\nvar bend6=0;\nvar bend5=0;\nvar bend4=0;\nvar bend3=0;\nvar bend2=0;\nvar bend1=0;\n\n//function to get the mouse cordinates\nfunction moving(event) {\n    bend_value();//this function is defined below\n    try\n    {\n        x2 = event.touches[0].pageX;\n        y2 = event.touches[0].pageY;\n    }\n    catch (error)\n    {\n        try\n        {\n            x2 = event.clientX;\n            y2 = event.clientY;\n        }\n        catch (e)\n        {\n        }\n    }\n\n    try\n    {\n        event.preventDefault();\n    }\n    catch (e)\n    {\n    }\n    if(between(y2,204,237) &amp;&amp; between(x2,115,272))\n    {\n    console.log(\"Xmove=\"+x2,\"Ymove=\"+y2)\n    }\n\n}\n\n//function for declaring range of bezier curve\nfunction between(val, min, max)\n{\n    return val &gt;= min &amp;&amp; val &lt;= max;\n}\n\n(function() {\n    hair = function() {\n        return this;\n    };\n\n    hair.prototype={\n\n     draw_hair:function(a,b,c,d,e,f,g,h){\n\n            var sx  =136+a;//start position of curve.used in moveTo(sx,sy)\n            var sy  =235+b;\n            var cp1x=136+c;//control point 1\n            var cp1y=222+d;\n            var cp2x=136+e;//control point 2\n            var cp2y=222+f;\n            var endx=136+g;//end points\n            var endy=210+h;\n\n         var canvas = document.getElementById('myCanvas');\n         var context = canvas.getContext('2d');\n//         context.clearRect(0, 0,500,500);\n         context.strokeStyle=\"grey\";\n         context.lineWidth=\"8\";\n         context.beginPath();\n         context.moveTo(sx,sy);\n         context.bezierCurveTo(cp1x,cp1y,cp2x,cp2y,endx,endy);\n         context.lineCap = 'round';\n         context.stroke();\n//         context.restore();\n//         context.save();\n    }\n};\n})();\n\n//this function provides and calculate the bend on mousemove\nfunction bend_value(){\n    var ref1=135;//this is ref point for  hair or curve no 1\n    var ref2=150;//hair no 2 and so on\n    var ref3=165;\n    var ref4=180;\n    var ref5=195;\n    var ref6=210;\n    var ref7=225;\n    var ref8=240;\n    var ref9=255;\nif(between(x2,115,270) &amp;&amp; between(y2,205,236))\n{\n    if(x2&gt;=135 &amp;&amp; x2&lt;=145){bend1=(x2-ref1)*(2.2);}\n    if(x2&lt;=135 &amp;&amp; x2&gt;=125){bend1=(x2-ref1)*(2.2);}\n\n    if(x2&gt;=150 &amp;&amp; x2&lt;=160){bend2=(x2-ref2)*(2.2);}\n    if(x2&lt;=150 &amp;&amp; x2&gt;=140){bend2=(x2-ref2)*(2.2);}\n\n    if(x2&gt;=165 &amp;&amp; x2&lt;=175){bend3=(x2-ref3)*(2.2);}\n    if(x2&lt;=165 &amp;&amp; x2&gt;=155){bend3=(x2-ref3)*(2.2);}\n\n    if(x2&gt;=180 &amp;&amp; x2&lt;=190){bend4=(x2-ref4)*(2.2);}\n    if(x2&lt;=180 &amp;&amp; x2&gt;=170){bend4=(x2-ref4)*(2.2);}\n\n    if(x2&gt;=195 &amp;&amp; x2&lt;=205){bend5=(x2-ref5)*(2.2);}\n    if(x2&lt;=195 &amp;&amp; x2&gt;=185){bend5=(x2-ref5)*(2.2);}\n\n    if(x2&gt;=210 &amp;&amp; x2&lt;=220){bend6=(x2-ref6)*(2.2);}\n    if(x2&lt;=210 &amp;&amp; x2&gt;=200){bend6=(x2-ref6)*(2.2);}\n\n    if(x2&gt;=225 &amp;&amp; x2&lt;=235){bend7=(x2-ref7)*(2.2);}\n    if(x2&lt;=225 &amp;&amp; x2&gt;=215){bend7=(x2-ref7)*(2.2);}\n\n    if(x2&gt;=240 &amp;&amp; x2&lt;=250){bend8=(x2-ref8)*(2.2);}\n    if(x2&lt;=240 &amp;&amp; x2&gt;=230){bend8=(x2-ref8)*(2.2);}\n\n    if(x2&gt;=255 &amp;&amp; x2&lt;=265){bend9=(x2-ref9)*(2.2);}\n    if(x2&lt;=255 &amp;&amp; x2&gt;=245){bend9=(x2-ref9)*(2.2);}\n    }\n}\n\nfunction init(){//this function draws each hair/curve\n    var canvas = document.getElementById('myCanvas');\n    var context = canvas.getContext('2d');\n    var clear=context.clearRect(0, 0,500,500);\n    var save=context.save();\n\n//   /* console.log(\"bend2=\"+bend2)\n//    console.log(\"bend3=\"+bend3)\n//    console.log(\"bend4=\"+bend4)\n//    console.log(\"bend5=\"+bend5)\n//    console.log(\"bend6=\"+bend6)\n//    console.log(\"bend7=\"+bend7)\n//    console.log(\"bend8=\"+bend8)\n//    console.log(\"bend9=\"+bend9)*/\n\n    hd1 = new hair();//hd1 stands for hair draw 1.this is an instance created for drawing hair no 1\n    clear;\n    hd1.draw_hair(0,0,0,0,0,0,0+bend1/2,0);//these parameters passed to function drawhair and bend is beint retrieved from function bend_value()\n    save;\n\n    hd2 = new hair();\n    clear;\n    hd2.draw_hair(15,0,15,0,15,0,15+bend2/2,0);\n    save;\n\n    hd3 = new hair();\n    clear;\n    hd3.draw_hair(30,0,30,0,30,0,30+bend3/2,0);\n    save;\n\n    hd4 = new hair();\n    clear;\n    hd4.draw_hair(45,0,45,0,45,0,45+bend4/2,0);\n    save;\n\n    hd5 = new hair();\n    clear;\n    hd5.draw_hair(60,0,60,0,60,0,60+bend5/2,0);\n    save;\n }\n\nwindow.onload = function() {\n    init();\n    disableSelection(document.body)\n}\n\nfunction disableSelection(target){\n    if (typeof target.onselectstart!=\"undefined\") //IE\n        target.onselectstart=function(){return false}\n    else if (typeof target.style.MozUserSelect!=\"undefined\") //Firefox\n        target.style.MozUserSelect=\"none\"\n    else //All other ie: Opera\n        target.onmousedown=function(){return false}\n    target.style.cursor = \"default\"\n}\n</code></pre>\n",
            "last_activity_date": 1384200906,
            "question_id": 17171010,
            "score": 4,
            "tags": [
                "javascript",
                "animation",
                "canvas",
                "bezier-curve",
                "requestanimationframe"
            ],
            "title": "Grass like smoothing animation on beziercurve?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I have already answered this question few times on SO see <a href=\"http://stackoverflow.com/questions/6293401/alternative-to-google-maps/8179560#8179560\">Similar Answer</a>, I suggest u search before posting a question...\n<strong>Available Solutions for the Address / ZipCode to (latitude, longitude) mapping...</strong></p>\n\n<p><strong>Google API</strong>, <a href=\"http://code.google.com/apis/maps/documentation/geocoding/\">http://code.google.com/apis/maps/documentation/geocoding/</a> )\nThe <strong>most popular</strong> due to Google\u2019s name. \nExtensive support available on internet (less development time).\nAlas! not available freely for commercial usage. \nThe free version has 2500 queries/day limitations. ( <a href=\"http://code.google.com/apis/maps/documentation/geocoding/\">http://code.google.com/apis/maps/documentation/geocoding/</a> )\nTheir is one clause in \u201cUsage Terms\u201d which says the result must be displayed in google maps, reference <a href=\"http://code.google.com/apis/maps/documentation/geocoding/#GeocodingRequests\">http://code.google.com/apis/maps/documentation/geocoding/#GeocodingRequests</a>  terms and conditions are mentioned here. <a href=\"http://code.google.com/apis/maps/terms.html#section_10_12\">http://code.google.com/apis/maps/terms.html#section_10_12</a></p>\n\n<p><strong>Nominatium,</strong> (http://wiki.openstreetmap.org/wiki/Nominatim )\nA <strong>less common organization</strong> which provides an open source, free ware solution for the address to (latitude, longitude) mapping.\nCan be also used in commercial projects.\nTheir are no restrictions for number of queries per day and no hidden clauses in \u201cusage terms\u201d.\nSince the organization itself is not much popular, very less support is available. </p>\n\n<p><strong>Yahoo API</strong>, <a href=\"http://developer.yahoo.com/geo/placefinder/\">http://developer.yahoo.com/geo/placefinder/</a> \nAnother <strong>popular API</strong> like google\u2019s but some what more available.\nsupports upto 50000 requests per day.\nLike google extensive support is available. \nYahoo encourages us to use the \u201cpowered by yahoo logo\u201d but doesn\u2019t force us for that. ( <a href=\"http://info.yahoo.com/legal/us/yahoo/api/api-2140.html\">http://info.yahoo.com/legal/us/yahoo/api/api-2140.html</a> )\nCan be used for non-commercial purposes (I have read Yahoo Terms and doesnt find any clause which restricts us in doing that, reference <a href=\"http://info.yahoo.com/legal/us/yahoo/maps/mapsapi/mapsapi-2141.html\">http://info.yahoo.com/legal/us/yahoo/maps/mapsapi/mapsapi-2141.html</a> ).</p>\n\n<p><strong>YQL</strong> (Yahoo Query language see:- <a href=\"http://developer.yahoo.com/yql/\">http://developer.yahoo.com/yql/</a> )\nA SQl based query language which queries yahoo web service. for example if we have a zip code \u201c382025\u201d we can write a YQL as [ select centroid from geo.places where text=\"Enter some pin code here\"].\n<strong>Yahoo encourages us to use YQL in commercial applications.</strong> (http://developer.yahoo.com/yql/faq/ )\nMost number of allowed queries as compared to all other options. (see <a href=\"http://developer.yahoo.com/yql/faq/\">http://developer.yahoo.com/yql/faq/</a> ), Support available for YQL is quite good, see the links...</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>Googles services are free up untill a certain limit (which actually is quite hard to hit) and the API is very friendly to work with. I am using it in a couple of applications myself and it works flawlessly and is extremely fast</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Gisgraphy is a alternative to Nominatim, a geocoding service on top of OpenStreetMaps data.\nThey provide a hosted solution - and you can install their software for free.</p>\n\n<p>More information at <a href=\"http://www.gisgraphy.com/\" rel=\"nofollow\">http://www.gisgraphy.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Mapquest Open Api has a geocoding service that uses OSM data.</p>\n\n<p><a href=\"http://open.mapquestapi.com/\" rel=\"nofollow\">http://open.mapquestapi.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I want to use geo coding services in my site which are the APIs available for this, Java based solutions will be preferred and I want to use this in a commercial project so please suggest appropriate options i.e. APIs which can be used in such projects freely..</p>\n\n<p>Before asking this question I have tried searching on net and found that few popular geoCoding APIs are the ones from Google and yahoo. And few answers in SO suggest using Google API (Which seems very popular one), before deciding I want to know is their any other option and what are the available solutions for this ? </p>\n\n<p>Even A Link to some blog/ site which contains detailed analysis of all these sites will be of great help.</p>\n",
            "last_activity_date": 1367106325,
            "question_id": 8180623,
            "score": 4,
            "tags": [
                "javascript",
                "google-maps",
                "geocoding"
            ],
            "title": "Which are the best geo Coding APIs available for free?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Sounds like a good job for <a href=\"http://www.json.org/\" rel=\"nofollow\">JSON</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can create an Array of your custom Detail objects pretty easily with object literals:</p>\n\n<pre><code>var details = [];\ndetails.push({id:'abc1234', price:999.99, description:'Tesla Roadster'});\ndetails.push({id:'xyz5678', price:129.99, description:'Land Rover'});\n</code></pre>\n\n<p>Then you can post your data to the server when the user clicks \"Add.\"</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Sure, since it's a table it makes sense to have an array of objects.  Note that an object is surrounded by curly braces and an array is surrounded by brackets:</p>\n\n<pre><code>var myArray = [];  // Initialize empty array\nvar myObject = {}; // Initialize empty object\n</code></pre>\n\n<p>This should accomplish what you need:</p>\n\n<pre><code>// Initialize variables\nvar newEntry, table = [];\n\n// Create a new object\nnewEntry = {\n  id: '',\n  price: '',\n  description: ''\n};\n\n// Add the object to the end of the array\ntable.push(newEntry);\n</code></pre>\n\n<p>Which is the same as this:</p>\n\n<pre><code>// Initialize array\nvar table = [];\n\n// Create object and add the object to the end of the array\ntable.push({\n  id: '22',\n  price: '$222',\n  description: 'Foo'\n});\n</code></pre>\n\n<p>You can now access properties like this:\n    table[0].id;  // '22'</p>\n\n<p>On modern browsers, if you want the data to persist across sessions (like cookies) you could use the sessionStorage or localStorage objects.</p>\n\n<p>When you want to send the data to the server, you'll send a JSON version of the table across the wire:</p>\n\n<pre><code>var data = JSON.stringify(table);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>I need to store data temporarily at the client-side to allow users to add, edit or delete items without having to query the server for each of these actions; just when the user finishes adding items and clicks on the <strong>Add</strong> button, the list is sent to the server to be saved permanently.</p>\n\n<p>This <a href=\"http://img574.imageshack.us/i/details01.png/\" rel=\"nofollow\">image</a> describes what I want to achieve.\nI know I have to use arrays in JavaScript, but I don't know how to create one to store objects (in this case <strong>Detail</strong> which contains :id, price and description).</p>\n\n<p>I hope you can help me out.\nThanks in advance.\nPS: I'm using JSP and... sorry for my English </p>\n",
            "last_activity_date": 1291272326,
            "question_id": 4329860,
            "score": 4,
            "tags": [
                "javascript",
                "jquery",
                "jsp"
            ],
            "title": "How to store temporary data at the client-side and then send it to the server"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I'd suggest you walk through the code with a debugger and see if you can determine why the append is causing an error (or if the error is someplace else).  Something like:</p>\n\n<pre><code>$('selector').append('&lt;p&gt;&lt;/p&gt;');\n</code></pre>\n\n<p>should work just fine.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The problem is that jQuery is creating the new node in the current <strong>document</strong> of the web page, so in result the node can't be appended to a different XML Document. So the node must be created in the XML Document.</p>\n\n<p>You can do this like so</p>\n\n<pre><code>var xml = $('&lt;?xml version=\"1.0\"?&gt;&lt;foo&gt;&lt;bar&gt;&lt;/bar&gt;&lt;bar&gt;&lt;/bar&gt;&lt;/foo&gt;'); // Your xml\nvar xmlCont = $('&lt;xml&gt;'); // You create a XML container\nxmlCont.append(xml); // You append your XML to the Container created in the main document\n\n// Now you can append without problems to you xml\nxmlCont.find('foo bar:first').append('&lt;div /&gt;');\n\nxmlCont.find('foo bar div'); // Test so you can see it works\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 10
                }
            ],
            "body": "<p>chaning xml attributes through jquery is easy-peasy, just:</p>\n\n<pre><code>$(this).attr('name', 'hello');\n</code></pre>\n\n<p>but how can I add another tag into the file? I tried using append the JS dies silently.</p>\n\n<p>Is there any way to do this?</p>\n\n<p><strong>Clarifications:</strong> this code is part of an extension to firefox, so don't worry about saving into the user file system. Still append doesn't work for xml documents yet I can change xml attribute values</p>\n",
            "last_activity_date": 1248958536,
            "question_id": 1086655,
            "score": 4,
            "tags": [
                "javascript",
                "jquery",
                "xml"
            ],
            "title": "writing XML files with jQuery"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>There are two things I would do:</p>\n\n<ol>\n<li><p>Read. If there's documentation files, read those. If there's comments, read those. If neither of those help you, then go to the source and read that.</p></li>\n<li><p>When you talk about open source Javascript, I assume you mean this JS is collected into some kind of project; all client-side JS is open source :P. In that case, the authors may be willing to tell you about their code. Locate their email on the project page, and ask them to give you a high-level overview of the code so you can start reading it and understanding it yourself. They probably won't be willing to hold your hand through the entire thing, but having that as a starting point would probably help.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I agree with allyourcode there's no magic trick.  You have to read the code and read the docs.  And if the docs are no good, maybe you should think about using a different framework.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>First of all I think that you have to understand how JavaScript object orientation works, JavaScript OO is <a href=\"http://en.wikipedia.org/wiki/Prototype-based%5Fprogramming\">Prototype-based</a>, in which <em>classes</em> are not present, and behavior reuse is implemented by prototyping.</p>\n\n<p>I've seen that this can be hard to catch at the beginning for programmers that have been working on conventional class-based object-oriented languages (like C++, C#, Java, etc).</p>\n\n<p>Recommended articles:</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en/Introduction%5Fto%5FObject-Oriented%5FJavaScript\">Introduction to Object-Oriented JavaScript</a></li>\n<li><a href=\"http://javascript.crockford.com/javascript.html\">JavaScript: The World's Most Misunderstood Programming Language</a></li>\n<li><a href=\"http://javascript.crockford.com/inheritance.html\">Classical Inheritance in JavaScript</a></li>\n<li><a href=\"http://www.crockford.com/javascript/private.html\">Private Members in JavaScript</a></li>\n<li><a href=\"https://developer.mozilla.org/En/Core%5FJavaScript%5F1.5%5FGuide:Class-Based%5Fvs.%5FPrototype-Based%5FLanguages\">Class-Based vs. Prototype-Based Languages</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>A good start is in understanding the difference between traditional OO and Javascript's Prototype model. (Crockford has some <a href=\"http://javascript.crockford.com/\" rel=\"nofollow\">articles</a>s that implement traditional OO for Javascript in order to contrast the behaviors.)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have a copy of</p>\n\n<ul>\n<li><a href=\"http://oreilly.com/catalog/9780596517748/\" rel=\"nofollow\">Javascript: The Good Parts</a></li>\n</ul>\n\n<p>and</p>\n\n<ul>\n<li><a href=\"http://oreilly.com/catalog/9780596000486/\" rel=\"nofollow\">Javascript: The Definitive Guide</a></li>\n</ul>\n\n<p>sitting on my desk right now.  Incidentally these are the only two Javascript books which Douglas Crockford thinks are any good ;)</p>\n\n<p>They'll teach you how Javascript works, specifically how its object model is different to most (but not all) other object-oriented languages.</p>\n\n<p>Other than that, do check out all <a href=\"http://javascript.crockford.com/\" rel=\"nofollow\">the articles on Crockford's website</a>, as have already been mentioned in other answers.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>In the course of programming we encounter large javascript files which are open source and written in an object oriented manner( like JQuery ).</p>\n\n<p>If we need to modify these files we have to have a basic knowledge of the members and the flow. If we have multiple files then the task is much more difficult.</p>\n\n<p>Where do I start to get the flow of this??</p>\n",
            "last_activity_date": 1240991140,
            "question_id": 800856,
            "score": 4,
            "tags": [
                "javascript"
            ],
            "title": "Object Oriented Javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>AngularJs is clientside. It is the external data resource's provider who should support those parameters.</p>\n\n<p>A possible solution for your problem could be <a href=\"http://docs.angularjs.org/api/ngResource.%24resource\" rel=\"nofollow\">$resource</a> (or the <a href=\"http://stackoverflow.com/a/14177369/1916258\">params option Mark mentioned</a>):</p>\n\n<pre><code>var UserAccounts = $resource('/useraccounts/:userId/limit/:limit/offset:offset', {userId:'@id'});\nvar accounts = User.get({userId:123, limit:10, offset:10}, function() {\n});\n</code></pre>\n\n<p>Of course, server side will need to read the parameters differently.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm not sure I understand your question, but $http methods have a <code>config</code> parameter which is an object, one property of which is the \"params\" object:</p>\n\n<blockquote>\n  <p><strong>params</strong> \u2013 {Object.} \u2013 Map of strings or objects which will be turned to<br> <code>?key1=value1&amp;key2=value2</code> after the url.  If the value is not a string, it will be JSONified.</p>\n</blockquote>\n\n<p>If your \"limit\" and \"offset\" values are in $routParams, then that seems like a fine place to get them from.  However, you may want to consider wrapping the code that interfaces with your server into an Angular service.  This service could store the current limit and offset values.  You can inject the service into your controllers to get access to the functions (and/or data) that the service provides.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A complete pagination solution is: (1) a service that communicates with the server/database, (2) a directive to handle next/prev, and (3) a controller to glue it together.</p>\n\n<p>Once you have the directive and the service, your controller is as simple as this:</p>\n\n<pre><code>app.controller('MainCtrl', function($scope, myData) {\n  $scope.numPerPage = 5;\n  $scope.noOfPages = Math.ceil(myData.count() / $scope.numPerPage);\n  $scope.currentPage = 1;\n\n  $scope.setPage = function () {\n    $scope.data = myData.get( ($scope.currentPage - 1) * $scope.numPerPage, $scope.numPerPage );\n  };\n\n  $scope.$watch( 'currentPage', $scope.setPage );\n});\n</code></pre>\n\n<p>With equally simple HTML:</p>\n\n<pre><code>&lt;body ng-controller=\"MainCtrl\"&gt;\n  &lt;ul&gt;\n    &lt;li ng-repeat=\"item in data\"&gt;{{item.name}}&lt;/li&gt;\n  &lt;/ul&gt;\n  &lt;pagination num-pages=\"noOfPages\" current-page=\"currentPage\" class=\"pagination-small\"&gt;&lt;/pagination&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>Here's a complete Plunker: <a href=\"http://plnkr.co/edit/Mg0USx?p=preview\">http://plnkr.co/edit/Mg0USx?p=preview</a>. It uses the pagination directive of <a href=\"https://github.com/angular-ui/bootstrap\">ui-bootstrap</a>, which is a work in progress.</p>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>Does AngularJS have Limit and Offset request methods when calling an external data resource that supports them?</p>\n\n<p>I imagine there is a more elegant solution than this, where I am passing the limit and offset via the routeParams:</p>\n\n<pre><code>function ListCtrl($scope, $http, $routeParams) {\n$http.jsonp('http://www.example.com/api/list.jsonp?callback=JSON_CALLBACK&amp;limit=' + $routeParams.limit + '&amp;offset=' + $routeParams.offset,{callback: 'JSON_CALLBACK'}).success(function(data) {\n$scope.list = data;\n  });\n}\n</code></pre>\n",
            "last_activity_date": 1366622990,
            "question_id": 14176936,
            "score": 3,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "Limit and Offset data results in AngularJS for Pagination"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>possibly if you want to just transfer data to be used by JavaScript then you can use Hash Tags\nlike this</p>\n\n<pre><code>http://localhost/project/index.html#exist\n</code></pre>\n\n<p>so once when you are done retriving the data show the message and change the \nwindow.location.hash to a suitable value.. now whenever you ll refresh the page the <code>hashtag</code> wont be present<br>\n<strong>NOTE:</strong> when you will use this instead ot query strings the data being sent cannot be retrived/read by the server</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>why don't you store your values in HTML5 storage objects such as <code>sessionStorage</code> or <code>localStorage</code>, visit <a href=\"http://diveintohtml5.info/storage.html\" rel=\"nofollow\">HTML5 Storage Doc</a> to get more details. Using this you can store intermediate values temporarily/permanently locally and then access your values later.</p>\n\n<p>To store values for a session:</p>\n\n<pre><code>sessionStorage.getItem('label')\nsessionStorage.setItem('label', 'value')\n</code></pre>\n\n<p>or more permanently:</p>\n\n<pre><code>localStorage.getItem('label')\nlocalStorage.setItem('label', 'value')\n</code></pre>\n\n<p>So you can store (temporarily) form data between multiple pages using HTML5 storage objects which you can even retain after reload..</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Well, you can actually send data via JavaScript - but you should know that this is the #1 exploit source in web pages as it's XSS :)</p>\n\n<p>I personally would suggest to use an HTML formular instead and modify the javascript data on the server side.</p>\n\n<p>But if you want to share between two pages (I assume they are not both on localhost, because that won't make sense to share between two both-backend-driven pages) you will need to specify the CORS headers to allow the browser to send data to the whitelisted domains.</p>\n\n<p>These two links might help you, it shows the example via Node backend, but you get the point how it works:</p>\n\n<p><a href=\"http://www.bennadel.com/blog/2327-Cross-Origin-Resource-Sharing-CORS-AJAX-Requests-Between-jQuery-And-Node-js.htm\" rel=\"nofollow\">Link 1</a></p>\n\n<p>And, of course, the CORS spec:</p>\n\n<p><a href=\"http://www.w3.org/TR/cors/\" rel=\"nofollow\">Link 2</a></p>\n\n<p>~Cheers</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I know this is an old post, but figured I'd share my two cents. @Neji is correct in that you can use <code>sessionStorage.getItem('label')</code>, and <code>sessionStorage.setItem('label', 'value')</code> (although he had the <code>setItem</code> parameters backwards, not a big deal). I much more prefer the following, I think it's more succinct:</p>\n\n<pre><code>var val = sessionStorage.myValue\n</code></pre>\n\n<p>in place of <code>getItem</code> and</p>\n\n<pre><code>sessionStorage.myValue = 'value'\n</code></pre>\n\n<p>in place of <code>setItem</code>.</p>\n\n<p>Also, it should be noted that in order to store JavaScript objects, they must be stringified to set them, and parsed to get them, like so:</p>\n\n<pre><code>sessionStorage.myObject = JSON.stringify(myObject); //will set object to the stringified myObject\nvar myObject = JSON.parse(sessionStorage.myObject); //will parse JSON string back to object\n</code></pre>\n\n<p>The reason is that sessionStorage stores everything as a string, so if you just say <code>sessionStorage.object = myObject</code> all you get is [object Object], which doesn't help you too much.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I want to send some data from one html page to another. I send it through URL nad capture it on other page as.. <code>http://localhost/project/index.html?status=exist</code>. on the basis of this data java script has to display message. but the problem is after recieving this this data whenever I refresh the page it captures the same data again and displays message. I dont want to do this every time. How it can be resolved or is there any other method to send data across html pages using JavaScript or jquery etc </p>\n",
            "last_activity_date": 1407322793,
            "question_id": 11609376,
            "score": 3,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "Passing data between html pages"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You could try something like the following demo</p>\n\n<p><strong><a href=\"http://jsfiddle.net/loktar/dQppK/23/\">Live Demo</a></strong></p>\n\n<p>Your most likely using <code>moveTo</code> and <code>lineTo</code> to create the paths, if you do it that way the properties will be shared for the path until you close the path. So everytime you change the thickness youd need to call <code>closePath</code> and then <code>beginPath</code> again.</p>\n\n<p>In my example I use <a href=\"http://en.wikipedia.org/wiki/Bresenham%27s_line_algorithm\">Bresenham's line algorithm</a> to plot the points. Basically onmousedown it starts painting. Then onmousemove it compares the current coordinates with the last coordinates and plots all of the points between. Its also using <code>fillRect</code> to paint. Based on how fast your moving the line will be thicker or thinner.</p>\n\n<p>Heres the code for the drawing function</p>\n\n<pre><code>var canvas = document.getElementById(\"canvas\"),\n    ctx = canvas.getContext(\"2d\"),\n    painting = false,\n    lastX = 0,\n    lastY = 0,\n    lineThickness = 1;\n\ncanvas.width = canvas.height = 600;\nctx.fillRect(0, 0, 600, 600);\n\ncanvas.onmousedown = function(e) {\n    painting = true;\n    ctx.fillStyle = \"#ffffff\";\n    lastX = e.pageX - this.offsetLeft;\n    lastY = e.pageY - this.offsetTop;\n};\n\ncanvas.onmouseup = function(e){\n    painting = false;\n}\n\ncanvas.onmousemove = function(e) {\n    if (painting) {\n        mouseX = e.pageX - this.offsetLeft;\n        mouseY = e.pageY - this.offsetTop;\n\n        // find all points between        \n        var x1 = mouseX,\n            x2 = lastX,\n            y1 = mouseY,\n            y2 = lastY;\n\n\n        var steep = (Math.abs(y2 - y1) &gt; Math.abs(x2 - x1));\n        if (steep){\n            var x = x1;\n            x1 = y1;\n            y1 = x;\n\n            var y = y2;\n            y2 = x2;\n            x2 = y;\n        }\n        if (x1 &gt; x2) {\n            var x = x1;\n            x1 = x2;\n            x2 = x;\n\n            var y = y1;\n            y1 = y2;\n            y2 = y;\n        }\n\n        var dx = x2 - x1,\n            dy = Math.abs(y2 - y1),\n            error = 0,\n            de = dy / dx,\n            yStep = -1,\n            y = y1;\n\n        if (y1 &lt; y2) {\n            yStep = 1;\n        }\n\n        lineThickness = 5 - Math.sqrt((x2 - x1) *(x2-x1) + (y2 - y1) * (y2-y1))/10;\n        if(lineThickness &lt; 1){\n            lineThickness = 1;   \n        }\n\n        for (var x = x1; x &lt; x2; x++) {\n            if (steep) {\n                ctx.fillRect(y, x, lineThickness , lineThickness );\n            } else {\n                ctx.fillRect(x, y, lineThickness , lineThickness );\n            }\n\n            error += de;\n            if (error &gt;= 0.5) {\n                y += yStep;\n                error -= 1.0;\n            }\n        }\n\n\n\n        lastX = mouseX;\n        lastY = mouseY;\n\n    }\n}\n</code></pre>\n\n<p>\u200b</p>\n",
                    "is_accepted": true,
                    "score": 18
                }
            ],
            "body": "<p>First I want to say that I made a lot of research and tries myself without any success. </p>\n\n<p>I am working on a MSPaint-like application using Canvas, and <strong>I would like to create a pencil tool which looks realistic like handmade drawings</strong>... Here is an example in the link below with the default tool :\n<a href=\"http://www.onemotion.com/flash/sketch-paint/\" rel=\"nofollow\">http://www.onemotion.com/flash/sketch-paint/</a></p>\n\n<p>I tried to play with mousespeed and linewidth properties but it is not working well (the entire line enlarge and shrink as I move the mouse). I have no idea of an algorithm acting on pixel raw data.</p>\n\n<p>Do you know something existing or a suitable algorithm to apply ? Thank you very much for your help</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>I decided to add the solution I've chosen because it seems to interest lot of people. \nSo, the best thing I found so far is to draw an image onto the canvas, using the technique explained here : <a href=\"http://css.dzone.com/articles/sketching-html5-canvas-and\" rel=\"nofollow\">http://css.dzone.com/articles/sketching-html5-canvas-and</a>.\nIt works like a charm, the result is really convincing and this is quite easy to implement. Try it out here : <a href=\"http://tricedesigns.com/portfolio/sketch/brush.html#\" rel=\"nofollow\">http://tricedesigns.com/portfolio/sketch/brush.html#</a> </p>\n\n<p>Good luck everyone :)</p>\n",
            "last_activity_date": 1353348826,
            "question_id": 10122553,
            "score": 3,
            "tags": [
                "javascript",
                "image-processing",
                "canvas",
                "html5-canvas"
            ],
            "title": "Create a realistic pencil tool for a painting app with HTML5 Canvas"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The way how one slice of the pie is created is like this:</p>\n\n<blockquote>\n  <ol>\n  <li>move to the center of the circle (cx,cy): <strong>\"M\", cx, cy</strong></li>\n  <li>draw a line until the edge, where the arc will start (x1,y1): <strong>\"L\", x1, y1</strong></li>\n  <li>draw an arc based on some mathematical calculations: <strong>\"A\", r, r, 0, +(endAngle - startAngle > 180), 0, x2, y2</strong></li>\n  <li>draw a line back to the middle of the circle: <strong>in this case \"z\" is used; it means move to origin(cx,cy)</strong></li>\n  </ol>\n</blockquote>\n\n<p>and the slice(path) is ready.</p>\n\n<p>In order to create the donut you need to modify how the path is composed. You need to have a path composed of 2 arcs(inside and outside) and 2 lines to complete it.</p>\n\n<p>So first you need to find the starting point for the path, based on the radius of the imaginary empty circle that will be in the middle of the donut (with the radius <strong>rin</strong>). Lets call the coordinates of this point xx1 and yy1:</p>\n\n<pre><code>xx1 = cx + rin * Math.cos(-startAngle * rad)\nyy1 = cy + rin * Math.sin(-startAngle * rad)\n</code></pre>\n\n<p>You start building the path from this point( <strong>\"M\", xx1, yy1</strong> );\n<img src=\"http://jsfiddle.net/EuMQ5/425/\" alt=\"enter image description here\"></p>\n\n<p>Next step is to draw the line to the edge of the circle( <strong>\"L\", x1, y1</strong> ). From there you will have to draw the outer arc( <strong>\"A\", r, r, 0, +(endAngle - startAngle > 180), 0, x2, y2</strong> ) then one more line to the other edge of the inner arc( <strong>\"L\", xx2, yy2</strong> ). To get the values for xx2 and yy2:</p>\n\n<pre><code>xx2 = cx + rin * Math.cos(-endAngle * rad)\nyy2 = cy + rin * Math.sin(-endAngle * rad)  \n</code></pre>\n\n<p>and the last step is to complete the path by drawing the inner arc( <strong>\"A\", rin, rin, 0, +(endAngle - startAngle > 180), 1, xx1, yy1</strong> ). And now you have a piece of a donut.</p>\n\n<p><a href=\"http://jsfiddle.net/EuMQ5/425/\" rel=\"nofollow\"><strong>The fiddle is here.</strong></a></p>\n\n<p>**updated fiddle link</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Why dont you just draw a circle at the center of the pie chart? </p>\n\n<pre><code>paper.add([\n    {\n        type: \"circle\",\n        cx: 250,\n        cy: 250,\n        r: 150,\n        fill: \"#ffffff\"\n    },\n]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to use a raphael.js example located here:</p>\n\n<p><a href=\"http://raphaeljs.com/pie.html\" rel=\"nofollow\">http://raphaeljs.com/pie.html</a></p>\n\n<p>but I want to convert the pie graph into a donut graph (have a hole in the middle of all the slices). Currently, each slice is being created with the following code:</p>\n\n<pre><code>function sector(cx, cy, r, startAngle, endAngle, params) {\n        //console.log(params.fill);\n        var x1 = cx + r * Math.cos(-startAngle * rad),\n            x2 = cx + r * Math.cos(-endAngle * rad),\n            y1 = cy + r * Math.sin(-startAngle * rad),\n            y2 = cy + r * Math.sin(-endAngle * rad);\n        return paper.path([\"M\", cx, cy, \"L\", x1, y1, \"A\", r, r, 0, +(endAngle - startAngle &gt; 180), 0, x2, y2, \"z\"]).attr(params);\n    }\n</code></pre>\n\n<p>How would I modify this so that a hole of a fixed radius was removed from the overall pie? I saw this post here, which helps, but I can't quite tell how or where to apply it to my code above:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/3349651/how-to-achieve-donut-holes-with-paths-in-raphael\">How to achieve &#39;donut holes&#39; with paths in Raphael</a></p>\n",
            "last_activity_date": 1392982321,
            "question_id": 7972347,
            "score": 3,
            "tags": [
                "javascript",
                "jquery",
                "raphael"
            ],
            "title": "raphael.js - converting pie graph to donut graph"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The browser can perform the tranform for you. No javascript is needed, just link the .xsl from the .xml like this:</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;?xml-stylesheet type=\"text/xsl\" href=\"site-index.xsl\" ?&gt;\n</code></pre>\n\n<p>and just serve the xml, no html. Assuming your .xsl contains the right code, along the lines</p>\n\n<pre><code>&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"&gt;\n&lt;xsl:output method=\"html\" version=\"4.01\" indent=\"yes\"/&gt;\n&lt;xsl:output doctype-system=\"http://www.w3.org/TR/html4/strict.dtd\"/&gt;\n&lt;xsl:output doctype-public=\"-//W3C//DTD HTML 4.01//EN\"/&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>You are probably better off allowing the browser to perform the transformation using the method Xenan outlines.  However, it is perfectly possible to do this in JavaScript as well.  Here is an outline of how you might accomplish this in a cross-browser manner.</p>\n\n<p>First, you will need to load the XML and XSL.  There are many ways of doing this.  Usually, it will involve some sort of AJAX, but not necessarily.  To keep this answer simple, I will assume you have this part covered, but please let me know if you need more help, and I will edit to include an example of loading XML.</p>\n\n<p>Therefore, let us assume we have these objects:</p>\n\n<pre><code>var xml, xsl;\n</code></pre>\n\n<p>Where <code>xml</code> contains an XML structure, and <code>xsl</code> contains the stylesheet that you wish to transform with.</p>\n\n<hr>\n\n<p><strong>Edit:</strong></p>\n\n<p>If you need to load those objects, you will end up using some form of AJAX to do so.  There are many examples of cross-browser AJAX out there.  You will be better off using a library to accomplish this, rather than rolling your own solution.  I suggest you look into jquery or YUI, both of which do an excellent job of this.</p>\n\n<p>However, the basic idea is pretty simple.  To complete this answer, here is some non-library specific code that accomplishes this in a cross-browser manner:</p>\n\n<pre><code>function loadXML(path, callback) {\n    var request;\n\n    // Create a request object. Try Mozilla / Safari method first.\n    if (window.XMLHttpRequest) {\n        request = new XMLHttpRequest();\n\n    // If that doesn't work, try IE methods.\n    } else if (window.ActiveXObject) {\n        try {\n            request = new ActiveXObject(\"Msxml2.XMLHTTP\");\n        } catch (e1) {\n            try {\n                request = new ActiveXObject(\"Microsoft.XMLHTTP\");\n            } catch (e2) {\n            }\n        }\n    }\n\n    // If we couldn't make one, abort.\n    if (!request) {\n        window.alert(\"No ajax support.\");\n        return false;\n    }\n\n    // Upon completion of the request, execute the callback.\n    request.onreadystatechange = function () {\n        if (request.readyState === 4) {\n            if (request.status === 200) {\n                callback(request.responseXML);\n            } else {\n                window.alert(\"Could not load \" + path);\n            }\n        }\n    };\n\n    request.open(\"GET\", path);\n    request.send();\n}\n</code></pre>\n\n<p>You would use this code by giving it a path to your XML, and a function to execute when loading is complete:</p>\n\n<pre><code>loadXML('/path/to/your/xml.xml', function (xml) {\n    // xml contains the desired xml document.\n    // do something useful with it!\n});\n</code></pre>\n\n<p>I have updated my example to show this technique.  You can find some working demonstration code <a href=\"http://chris.photobooks.com/tests/xsl/5722410.html\">here</a>.</p>\n\n<hr>\n\n<p>To perform a transformation, you will end up with a third XML document, which is the result of that transformation.  If you are working with IE, you use the \"<a href=\"http://msdn.microsoft.com/en-us/library/ms766561.aspx\">transformNodeToObject</a>\" method, and if you are working with other browsers, you use the \"<a href=\"https://developer.mozilla.org/en/using_the_mozilla_javascript_interface_to_xsl_transformations#transformToDocument\">transformToDocument</a>\" method:</p>\n\n<pre><code>var result;\n\n// IE method\nif (window.ActiveXObject) {\n    result = new ActiveXObject(\"MSXML2.DOMDocument\");\n    xml.transformNodeToObject(xsl, result);\n\n// Other browsers\n} else {\n    result = new XSLTProcessor();\n    result.importStylesheet(xsl);\n    result = result.transformToDocument(xml);\n}\n</code></pre>\n\n<p>At this point, <code>result</code> should contain the resulting transformation.  This is still an XML document, and you should treat it as such.  If you want a string which you can pass into <code>document.write</code> or <code>innerHTML</code>, you have a little more work to do.</p>\n\n<p>Once again, there is an IE method for this, and a method that applies to other browsers.</p>\n\n<pre><code>var x, ser, s = '';\n\n// IE method.\nif (result.childNodes[0] &amp;&amp; result.childNodes[0].xml) {\n    for (x = 0; x &lt; result.childNodes.length; x += 1) {\n        s += result.childNodes[x].xml;\n    }\n// Other browsers\n} else {\n    ser = new XMLSerializer();\n    for (x = 0; x &lt; result.childNodes.length; x += 1) {\n        s += ser.serializeToString(result.childNodes[x]);\n    }\n}\n</code></pre>\n\n<p>Now <code>s</code> should contain the resulting XML as a string.  You should be able to pass this into document.write or innerHTML and have it do something useful.  Note that it may contain an XML declaration, which you might want to strip out, or not.</p>\n\n<p>I've tested this in Chrome, IE9, and FF4.  You can find a simplified, barebones, <a href=\"http://chris.photobooks.com/tests/xsl/5722410.html\">working example of this in my testbed</a>.</p>\n\n<p>Good luck and happy coding!</p>\n",
                    "is_accepted": false,
                    "score": 16
                }
            ],
            "body": "<p>I want to use JavaScript to show my XSLT, but on my server nothing is showing up in the browser.</p>\n\n<pre><code>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"main.js\"&gt;&lt;/script&gt;\n&lt;meta http-equiv=\"Content-Language\" content=\"en-us\"/&gt;\n&lt;title&gt;Contracting, Licensing and Compliance News&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;script language=\"javascript\"&gt;\n    function displayMessage() {\n        // Load XML \n\n        var xml = new ActiveXObject(\"Microsoft.XMLDOM\")\n        xml.async = false\n        xml.load(\"site-index.xml\")\n\n        // Load the XSL\n        var xsl = new ActiveXObject(\"Microsoft.XMLDOM\")\n        xsl.async = false\n        xsl.load(\"site-index.xsl\")\n\n        // Transform\n        document.write(xml.transformNode(xsl))\n    }\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1303318758,
            "question_id": 5722410,
            "score": 3,
            "tags": [
                "javascript",
                "xml",
                "internet-explorer",
                "browser",
                "xslt"
            ],
            "title": "How can I use javascript to transform xml &amp; xslt"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<pre><code>img.thespecialimage {\n  min-height : 100%;\n  min-width : 100%;\n  max-height : 100%;\n  max-width : 100%;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Set the image containers width in percent as in <code>width:{amount}%;</code>, then set the image's width in percent also.  This way your image container expands as your image expands also, or at least it will seem like so, because the image is actually expanding as the container expands.  You dont necessarily need to set the image width to 100%, but whatever with you set is relative the containers width.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you're willing to rely on CSS3 and display your image as a background in an element, consider using <code>background-size</code>. Going this route allows you to resize the image while preserving its aspect ratio.</p>\n\n<p><a href=\"http://robertnyman.com/css3/background-size/background-size.html\" rel=\"nofollow\">Here's a quick example of background-size.</a></p>\n\n<p>This can of course be done manually if you monitor the window size using JS and resize accordingly. If you are interested in going this route, let us know. I would advocate using a pure CSS solution for something so trivial, if possible, so you don't alienate users with JS disabled.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>&lt;style&gt;\n.wrapper {width:58.536585%; /*960/1640 = .58536585*/ margin:0 auto;}\n.resize {width:100%; height:auto;}\n&lt;/style&gt;    \n\n&lt;div class=\"wrapper\"&gt;\n  &lt;img class=\"resize\" src=\"image.jpg\" /&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>This will resize your image to match your container and keep the ratio in place. If you set the container to a percentage everything will scale.</p>\n\n<p>wrapper width = 960px divided by screen width = 1640px </p>\n\n<p>If you want the entire site to be responsive you have to do the math all the way down. divide the child by it's parent. Hope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have a basic web page layout with a 100% width header and a sticky footer. In between the two I have a large graphic.</p>\n\n<p>I would like the graphic to resize dynamically depending on the size of the window.</p>\n\n<p>I prefer not to use flash, and was wondering if there is an easy way to do this with jquery/javascript.</p>\n\n<p>I'm not much of a jquery/javascript expert so I was wondering how to approach this of there is a component out there that already does it.</p>\n",
            "last_activity_date": 1367508370,
            "question_id": 4572621,
            "score": 3,
            "tags": [
                "javascript",
                "jquery",
                "css"
            ],
            "title": "Auto image resize based on browser window dimensions"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Somewhere at the beginning of your script (probably on the button's click event), set the button's disabled attribute to true:</p>\n\n<pre><code>$(\"#mybutton\").attr(\"disabled\", true);\n</code></pre>\n\n<p>Then, when complete, remove that attribute:</p>\n\n<pre><code>$(\"#mybutton\").removeAttr(\"disabled\");\n</code></pre>\n\n<p>EDIT:</p>\n\n<p>If you want to get (slightly) fancy, change the text of the button while you're doing the work.  If it's an image button, you can change the src to a friendly \"please wait\" message.  Here's an example of the button text version:</p>\n\n<pre><code>$(\"#mybutton\").click(function() {\n  var origVal = $(this).attr(\"value\");\n\n  $(this).attr(\"value\", \"Please wait...\");\n  $(this).attr(\"disabled\", true);\n\n  //Do your processing.\n\n  $(this).removeAttr(\"disabled\");\n  $(this).attr(\"value\", origVal);\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>This is one area where I like to extend jQuery:</p>\n\n<pre><code>$.fn.disable = function() {\n    return this.each(function() {\n        if (typeof this.disabled != \"undefined\") this.disabled = true;\n    });\n}\n\n$.fn.enable = function() {\n    return this.each(function() {\n        if (typeof this.disabled != \"undefined\") this.disabled = false;\n    });\n}\n</code></pre>\n\n<p>and then you can do:</p>\n\n<pre><code>$(\"#button\").disable();\n$(\"#button\").enable();\n</code></pre>\n\n<p>I find myself disabling/enabling controls a lot.</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>Thanks cletus for your function. I have used your function and created my own to toggle disabled elements. </p>\n\n<pre><code>$.fn.toggleDisable = function() {\n    return this.each(function() {\n        if (typeof this.disabled != \"undefined\"){\n                if(this.disabled){\n                    this.disabled = false;\n                }else{\n                    this.disabled = true;\n                }\n        }\n    });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>If I have a button that sets off a jquery script is there a way to make sure the button is inactive until the script completes?</p>\n",
            "last_activity_date": 1389158298,
            "question_id": 625109,
            "score": 3,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "JQuery Script Load Timing"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>JavaScript cannot access the file system of the browser's computer. It has no way to read the width and height of that file.</p>\n",
                    "is_accepted": true,
                    "score": 1
                },
                {
                    "body": "<p>Please read this</p>\n\n<p><a href=\"http://stackoverflow.com/questions/4776670/should-setting-an-image-src-to-dataurl-be-available-immediately\">Should setting an image src to dataURL be available immediately?</a></p>\n\n<p><a href=\"http://stackoverflow.com/questions/4094012/how-to-upload-preview-image-before-upload-through-javascript\">How to upload preview image before upload through JavaScript</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicates:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/1310378/determining-image-file-size-dimensions-via-javascript\">Determining image file size + dimensions via Javascript?</a><br>\n  <a href=\"http://stackoverflow.com/questions/4094012/how-to-upload-preview-image-before-upload-through-javascript\">How to upload preview image before upload through JavaScript</a><br>\n  <a href=\"http://stackoverflow.com/questions/6633197/get-image-height-and-width-in-file-tag-using-javascript\">get image height and width in file tag using javascript</a>  </p>\n</blockquote>\n\n\n\n<p>how can i get the height and width of image without page refresh in file tag?</p>\n\n<pre><code>&lt;HTML&gt;\n\n&lt;HEAD&gt;\n\n&lt;TITLE&gt;&lt;/TITLE&gt;\n\n&lt;script language=\"javascript\"&gt;\n\nfunction getW()\n\n{\n\nvar theImg = document.getElementById('testimg');\n\nalert(theImg.width);\n\n}\n\nfunction getH()\n\n{\n\nvar theImg = document.getElementById('testimg');\n\nalert(theImg.height);\n\n}\n\n&lt;/script&gt;\n\n&lt;/HEAD&gt;\n\n\n\n&lt;BODY&gt;\n\n\n&lt;input type=\"file\" id=\"testimg\"/&gt;\n\n&lt;input type=\"button\" value=\"get Width\" onclick=\"getW()\"/&gt;\n\n&lt;input type=\"button\" value=\"get Height\" onclick=\"getH()\"/&gt;\n\n&lt;/BODY&gt;\n\n&lt;/HTML&gt;\n</code></pre>\n\n<p>i get the image height and width of image using php code, but that time page will be refreshed, without page refresh i get image size but not a height and width....</p>\n",
            "last_activity_date": 1310204306,
            "question_id": 6633190,
            "score": 2,
            "tags": [
                "javascript"
            ],
            "title": "get image height and width in file tag javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can't just pass images as \"data\" into a JavaScript for display, at least not in a reasonable manner.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>the <code>glob</code> function will scan a folder and return an array:</p>\n\n<pre><code>$jpgs = glob(\"*.jpg\");\n</code></pre>\n\n<p>you can then pass it back to jQuery by using JSON:</p>\n\n<pre><code>echo json_encode($jpgs);\n</code></pre>\n\n<p>it'd then just be a case of looping through the result, generating the necessary HTML.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>To generate the list items you could use something like this (assuming images is the result of json_encode()):  </p>\n\n<pre><code>var images = {'image1':'images/image1.jpg','image2':'images/image2.jpg'}\n\njQuery('#imagelist').empty();\njQuery.each(images, function() {\n  jQuery('#imagelist').append('&lt;li&gt;'+this+'&lt;/li&gt;');\n});\n</code></pre>\n\n<p>And make sure you have an unordered/ordered list in the HTML source:</p>\n\n<pre><code>&lt;ul id=\"imagelist\"&gt;\n  &lt;li&gt;No images found&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>To continue on from <a href=\"http://stackoverflow.com/questions/758594/load-list-of-image-from-folder/758603#758603\">nickf's excellent answer</a>, this is slightly more robust for images of different types.</p>\n\n<pre><code>$imagesDir = 'path/to/your/images/';\n$images = glob($imagesDir . '*.{jpg,jpeg,png,gif}', GLOB_BRACE);\n\necho json_encode($images);\n</code></pre>\n\n<p>There are other ways of doing this, but this is the easiest. Note some file systems are case sensitive, so ensure the extension list is matching precisely what you're after.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>I will give a try here with answer from many</p>\n\n<p>Alex and Nick : </p>\n\n<pre><code>&lt;?php\n  $imagesDir = 'path/to/your/images/';\n  $images = glob($imagesDir . '*.{jpg,jpeg,png,gif}', GLOB_BRACE);\n  echo json_encode($images);\n?&gt;\n</code></pre>\n\n<p>and from mattoc (modify) to get used for the <a href=\"http://buildinternet.com/2009/02/supersized-full-screen-backgroundslideshow-jquery-plugin/\" rel=\"nofollow\">supersized</a></p>\n\n<pre><code>jQuery('#imagelist').empty();\njQuery.each(images, function() {\n  jQuery('#imagelist').append('&lt;img src=\"'+this+'\"/&gt;');\n});\n</code></pre>\n\n<p>and hope to get something like that at the end !</p>\n\n<pre><code>&lt;div id=\"supersize\"&gt;\n    &lt;img  src=\"images/001.jpg\"/&gt;\n    &lt;img  src=\"images/002.jpg\"/&gt;\n    &lt;img  src=\"images/003.jpg\"/&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>for the final piece of code, i will have to find a solution to send image to supersize plugin \"one by one\" with preloading without problem with bug list of images</p>\n\n<p>Let supposed i get 150 images list... it will be a problem, so letting the plugin just know there is 2 images, preload the next and \"ajax\" change the next image</p>\n\n<pre><code>image001.jpg is display\n... preload image002.jpg\ndisplay image002.jpg\n... preload image003.jpg\non and on and on....\n</code></pre>\n\n<p>all this dynamicly until the end of the array !</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a folder of images, from 10 to 200, a webpage, a jquery fade and a php script that read folder full of images</p>\n\n<p>Is there any way to make the php script scan a folder, get a list of image (in an array ?) and pass it to jquery script ? (first question)</p>\n\n<p>Now, i can make a xml file from the result php list of files found or make a html <code>&lt;li&gt;</code> from the list in the html. is there ANY other way to do that ? (question #2)</p>\n",
            "last_activity_date": 1294188510,
            "question_id": 758594,
            "score": 2,
            "tags": [
                "php",
                "javascript",
                "jquery"
            ],
            "title": "Load list of image from folder"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You have a simple spelling mistake:</p>\n\n<pre><code>self.addTask = fuction() {\n</code></pre>\n\n<p>Should be:</p>\n\n<pre><code>self.addTask = function() { //Notice the added 'n' in 'function'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The problem happened because I was trying to bind a <code>HTML</code> element before it was created.</p>\n\n<p>My script was loaded on top of the <code>HTML</code> and it needs to be loaded at the bottom of my <code>HTML</code> code.</p>\n\n<p>Thanks for your attention <a href=\"http://stackoverflow.com/users/790695/james-allardice\">James Allardice</a>.</p>\n\n<p>A possible workaround is using <code>defer=\"defer\"</code></p>\n\n<pre><code>&lt;script src=\"script.js\" type=\"text/javascript\" defer=\"defer\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Use this if the script is not going to generate any document content. This will tell the browser that it can wait for the content to be load before loading the script.</p>\n\n<p><a href=\"http://www.w3.org/TR/html4/interact/scripts.html#edef-SCRIPT\">Further reading</a>.</p>\n\n<p>Hope it helps.</p>\n",
                    "is_accepted": true,
                    "score": 129
                },
                {
                    "body": "<p>You might want to consider using the jquery ready handler for this</p>\n\n<pre><code>$(function() {\n   function TaskListViewModel() {\n   ...\n   ko.applyBindings(new TaskListViewModel());\n});\n</code></pre>\n\n<p>Then you achieve two things:</p>\n\n<ol>\n<li>Avoid polluting the global namespace</li>\n<li>Knockout binding occurs AFTER the DOM is created.  You can place your javascript wherever it is suited for organization.</li>\n</ol>\n\n<p>See <a href=\"http://api.jquery.com/ready/\">http://api.jquery.com/ready/</a></p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>if you have jQuery put apply binding inside <code>onload</code> so that knockout looks for the DOM when DOM is ready.</p>\n\n<pre><code>$(document).ready(function(){\n    ko.applyBindings(new TaskListViewModel());\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                }
            ],
            "body": "<p>I have this knockout code:</p>\n\n<pre><code>function Task(data) {\n    this.title = ko.observable(data.title);\n    this.isDone = ko.observable(data.isDone);\n}\n\nfunction TaskListViewModel() {\n    // Data\n    var self = this;\n    self.tasks = ko.observableArray([]);\n    self.newTaskText = ko.observable();\n    self.incompleteTasks = ko.computed(function() {\n        return ko.utils.arrayFilter(self.tasks(), function(task) { return !task.isDone() });\n    });\n\n    // Operations\n    self.addTask = function() {\n        self.tasks.push(new Task({ title: this.newTaskText() }));\n        self.newTaskText(\"\");\n    };\n    self.removeTask = function(task) { self.tasks.remove(task) };\n}\n\nko.applyBindings(new TaskListViewModel());\n</code></pre>\n\n<p>This html:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;head&gt;\n    &lt;script type=\"text/javascript\" src=\"jquery-1.7.1.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"knockout-2.0.0.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"script.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h3&gt;Tasks&lt;/h3&gt;\n\n    &lt;form data-bind=\"submit: addTask\"&gt;\n        Add task: &lt;input data-bind=\"value: newTaskText\" placeholder=\"What needs to be done?\" /&gt;\n        &lt;button type=\"submit\"&gt;Add&lt;/button&gt;\n    &lt;/form&gt;\n\n    &lt;ul data-bind=\"foreach: tasks, visible: tasks().length &gt; 0\"&gt;\n        &lt;li&gt;\n            &lt;input type=\"checkbox\" data-bind=\"checked: isDone\" /&gt;\n            &lt;input data-bind=\"value: title, disable: isDone\" /&gt;\n            &lt;a href=\"#\" data-bind=\"click: $parent.removeTask\"&gt;Delete&lt;/a&gt;\n        &lt;/li&gt; \n    &lt;/ul&gt;\n\n    You have &lt;b data-bind=\"text: incompleteTasks().length\"&gt;&amp;nbsp;&lt;/b&gt; incomplete task(s)\n    &lt;span data-bind=\"visible: incompleteTasks().length == 0\"&gt; - it's beer time!&lt;/span&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>The example is the same as the one found on the Knockout website, but when I run it, it returns this message on Chrome Fire Bug:</p>\n\n<blockquote>\n  <p>Uncaught TypeError: Cannot read property 'nodeType' of null</p>\n</blockquote>\n\n<p>This one is related to the knockout file and to this line of my script:</p>\n\n<pre><code>ko.applyBindings(new TaskListViewModel());\n</code></pre>\n\n<p>And this error is pointing to this line (1766) on knockout:</p>\n\n<pre><code>var isElement = (nodeVerified.nodeType == 1);\n</code></pre>\n\n<p>What am I doing wrong?</p>\n",
            "last_activity_date": 1422311830,
            "question_id": 9128015,
            "score": 72,
            "tags": [
                "javascript",
                "knockout.js"
            ],
            "title": "Getting &quot;Cannot read property &#39;nodeType&#39; of null&quot; when calling ko.applyBindings"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Both do the same on all browsers, AFAIK. Checked on Chrome and Firefox, both append <code>display:none</code> to the <code>style</code> attribute of the element.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://api.jquery.com/hide/\"><code>.hide()</code></a> stores the <em>previous</em> <code>display</code> property just before setting it to <code>none</code>, so if it wasn't the standard <code>display</code> property for the element you're a bit safer, <a href=\"http://api.jquery.com/show/\"><code>.show()</code></a> will use that stored property as what to go back to.  So...it does some extra work, but unless you're doing <em>tons</em> of elements, the speed difference should be negligible.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Looking at the jQuery code, this is what happens: </p>\n\n<pre><code>hide: function( speed, easing, callback ) {\n    if ( speed || speed === 0 ) {\n        return this.animate( genFx(\"hide\", 3), speed, easing, callback);\n\n    } else {\n        for ( var i = 0, j = this.length; i &lt; j; i++ ) {\n            var display = jQuery.css( this[i], \"display\" );\n\n            if ( display !== \"none\" ) {\n                jQuery.data( this[i], \"olddisplay\", display );\n            }\n        }\n\n        // Set the display of the elements in a second loop\n        // to avoid the constant reflow\n        for ( i = 0; i &lt; j; i++ ) {\n            this[i].style.display = \"none\";\n        }\n\n        return this;\n    }\n},\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>From the jQuery page about <a href=\"http://api.jquery.com/hide/\">.hide()</a>:</p>\n\n<blockquote>\n  <p>\"The matched elements will be hidden immediately, with no animation. This is roughly equivalent to calling .css('display', 'none'), except that the value of the display property is saved in jQuery's data cache so that display can later be restored to its initial value. If an element has a display value of inline, then is hidden and shown, it will once again be displayed inline.\"</p>\n</blockquote>\n\n<p>So if it's important that you're able to revert to the previous value of <code>display</code>, you'd better use <code>hide()</code> because that way the previous state is remembered. Apart from that there's no difference.<div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>$(function() {\r\n    $('.hide').click(function(){\r\n        $('.toggle').hide();\r\n        setDisplayValue();\r\n    });\r\n    $('.show').click(function(){\r\n        $('.toggle').show();\r\n        setDisplayValue();\r\n    });\r\n});\r\n\r\nfunction setDisplayValue() {\r\n    var display = $('.toggle')[0].style.display;\r\n    $('.displayvalue').text(display);\r\n}</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>div {\r\n    display: table-cell;\r\n    border: 1px solid;\r\n    padding: 5px;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;p&gt;\r\n    &lt;button class=\"hide\"&gt;Hide&lt;/button&gt;\r\n    &lt;button class=\"show\"&gt;Show&lt;/button&gt;\r\n&lt;/p&gt;\r\n\r\n&lt;div class=\"toggle\"&gt;Lorem Ipsum&lt;/div&gt;\r\n\r\n&lt;p&gt;\r\n    The display value of the div is:\r\n    &lt;span class=\"displayvalue\"&gt;&lt;/span&gt;\r\n&lt;/p&gt;</code></pre>\r\n</div>\r\n</div>\r\n  </p>\n",
                    "is_accepted": true,
                    "score": 71
                },
                {
                    "body": "<p>They are the same thing. .hide() calls a jQuery function and allows you to add a callback function to it. So, with .hide() you can add an animation for instance. </p>\n\n<p>.css(\"display\",\"none\") changes the attribute of the element to display:none. It is the same as if you do the following in JavaScript:</p>\n\n<pre><code>document.getElementById('elementId').style.display = 'none';\n</code></pre>\n\n<p>The .hide() function obviously takes more time to run as it checks for callback functions, speed, etc...</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>See there is no difference if you use basic hide method.\nBut jquery provides various hide method which give effects to the element.\nRefer below link for detailed explanation:\n<a href=\"http://aspdotnetraining.blogspot.in/2013/11/jquery-hide.html\" rel=\"nofollow\">Effects for Hide in Jquery</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>Which am I better off doing? <code>.hide()</code> is quicker than writing out <code>.css(\"display\",\"none\")</code> but whats the difference and what are both of them actually doing to the HTML element?</p>\n",
            "last_activity_date": 1411776238,
            "question_id": 4396983,
            "score": 57,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "hide"
            ],
            "title": ".hide() or display: none? jQuery"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Semicolons in Python are totally optional (unless you want to have multiple statements in a single line, of course). I personally think Python code with semicolons at the end of every statement looks very ugly.</p>\n\n<p>Now in Javascript, if you don't write a semicolon, one is automatically inserted<sup>1</sup> at the end of line. And this can cause problems. Consider:</p>\n\n<pre><code>function add(a, b) {\n  return\n    a + b\n}\n</code></pre>\n\n<p>You'd think this returns <code>a + b</code>, but Javascript just outsmarted you and sees this as:</p>\n\n<pre><code>function add() {\n  return;\n    a + b;\n}\n</code></pre>\n\n<p>Returning <code>undefined</code> instead.</p>\n\n<p><sup>1</sup> See page 27, item 7.9 - Automatic Semicolon Insertion on <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\">ECMAScript Language Specification</a> for more details and caveats.</p>\n",
                    "is_accepted": true,
                    "score": 66
                },
                {
                    "body": "<p>Aside from the syntactical issues, it is partly cultural.  In Python culture any extraneous characters are an anathema, and those that are not white-space or alphanumeric, doubly so.</p>\n\n<p>So things like leading $ signs, semi-colons, and curly braces, are not liked.  What you do in your code though, is up to you, but to really understand a language it is not enough just to learn the syntax. </p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>JavaScript is designed to \"look like C\", so semicolons are part of the culture. Python syntax is different enough to not make programmers feel uncomfortable if the semicolons are \"missing\".</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The answer why you don't see them in Python code is: no one needs them, and the code looks cleaner without them.</p>\n\n<p>Generally speaking, semicolons is just a tradition. Many new languages have just dropped them for good (take Python, Ruby, Scala, Go, Groovy, Io for example). Programmers don't need them, neither do compilers. If a language lets you not type an extra character you never needed, you will want to take advantage of that, won't you?</p>\n\n<p>It's just that JavaScript's attempt to drop them wasn't very successful, and many prefer the convention to always use them, because that makes code less ambiguous.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This had me confused for the longest time. I thought it was just a cultural difference, and that everyone complaining about semicolon insertion being the worst feature in the language was an <em>idiot</em>. The oft-repeated example from <a href=\"http://stackoverflow.com/q/7219549/1114\">NullUserException's answer</a> didn't sway me because, disregarding indentation, Python behaves the same as JavaScript in that case.</p>\n\n<p>Then one day, I wrote something vaguely like this:</p>\n\n<pre><code>alert(2)\n(x = $(\"#foo\")).detach()\n</code></pre>\n\n<p>I expected it to be interpreted like this:</p>\n\n<pre><code>alert(2);\n(x = $(\"#foo\")).detach();\n</code></pre>\n\n<p>It was actually interpreted like this:</p>\n\n<pre><code>alert(2)(x = $(\"#foo\")).detach();\n</code></pre>\n\n<p>I now use semicolons.</p>\n\n<p>JavaScript will only<sup>1</sup> treat a newline as a semicolon in these cases:</p>\n\n<ul>\n<li>It's a syntax error not to.</li>\n<li>The newline is between the <code>throw</code> or <code>return</code> keyword and an expression.</li>\n<li>The newline is between the <code>continue</code> or <code>break</code> keyword and an identifier.</li>\n<li>The newline is between a variable and a postfix <code>++</code> or <code>--</code> operator.</li>\n</ul>\n\n<p>This leaves cases like this where the behaviour is not what you'd expect. Some people<sup>2</sup> have adopted conventions that only use semicolons where necessary. I prefer to follow the standard convention of always using them, now that I know it's not pointless.</p>\n\n<hr>\n\n<p><sup>1</sup> I've omitted a few minor details, consult <a href=\"http://ecma262-5.com/ELS5_Section_7.htm#Section_7.9\">ECMA-262 5e Section 7.9</a> for the exact description.<br>\n<sup>2</sup> <a href=\"https://github.com/twitter/bootstrap/blob/master/js/bootstrap-dropdown.js\">Twitter Bootstrap</a> is one high-profile example.</p>\n",
                    "is_accepted": false,
                    "score": 59
                },
                {
                    "body": "<p>I always thought this convention had less to do with edge cases and more to do with the fact that Javascript is frequently compressed/minified in order to save bandwidth. Such minified code would almost certainly break without semicolons. </p>\n\n<pre><code>a = 2\nb = 3\nreturn a + b\n\n// minified\na=2b=3return a+b\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It is mostly that python looks nothing like java, and javascript does, which leads people to treat it that way. It is very simple to not get into trouble using semicolons with javascript (<a href=\"http://mislav.uniqpath.com/2010/05/semicolons/\" rel=\"nofollow\">http://mislav.uniqpath.com/2010/05/semicolons/</a>), anything else is FUD.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Python and JavaScript both allow developers to use or to omit semicolons. However, I've often seen it suggested (in books and blogs) that I should not use semicolons in Python, while I should always use them in JavaScript.</p>\n\n<p>Is there a technical difference between how the languages use semicolons or is this just a cultural difference?</p>\n",
            "last_activity_date": 1334669120,
            "question_id": 7219541,
            "score": 55,
            "tags": [
                "javascript",
                "python",
                "syntax"
            ],
            "title": "What is the difference between semicolons in JavaScript and in Python?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Knockout includes a function called <code>ko.isObservable()</code>.   You can call it like <code>ko.isObservable(vm[key])</code>.  </p>\n\n<p>Update from comment:</p>\n\n<p>Here is a function to determine if something is a computed observable:</p>\n\n<pre><code>ko.isComputed = function (instance) {\n    if ((instance === null) || (instance === undefined) || (instance.__ko_proto__ === undefined)) return false;\n    if (instance.__ko_proto__ === ko.dependentObservable) return true;\n    return ko.isComputed(instance.__ko_proto__); // Walk the prototype chain\n};\n</code></pre>\n\n<p>UPDATE: If you are using KO 2.1+ - then you can use <code>ko.isComputed</code> directly.</p>\n",
                    "is_accepted": true,
                    "score": 86
                },
                {
                    "body": "<p>Knockout has the following function which I think is what you are looking for:</p>\n\n<pre><code>ko.isObservable(vm[key])\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I'm using</p>\n\n<pre><code>ko.utils.unwrapObservable(vm.key)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using <a href=\"http://knockoutjs.com/\">KnockoutJS</a> version 2.0.0</p>\n\n<p>If I'm looping through all properties of an object, how can I test whether each property is a <code>ko.observable</code>?  Here's what I've tried so far:</p>\n\n<pre><code>    var vm = {\n        prop: ko.observable(''),\n        arr: ko.observableArray([]),\n        func: ko.computed(function(){\n            return this.prop + \" computed\";\n        }, vm)\n    };\n\n    for (var key in vm) {\n        console.log(key, \n            vm[key].constructor === ko.observable, \n            vm[key] instanceof ko.observable);\n    }\n</code></pre>\n\n<p>But so far everything is false.</p>\n",
            "last_activity_date": 1406626077,
            "question_id": 9625591,
            "score": 53,
            "tags": [
                "javascript",
                "knockout.js"
            ],
            "title": "Determine if an object property is ko.observable"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I think this should do the trick:</p>\n\n<pre><code>$('#item1 span').text()\n</code></pre>\n\n<p>or </p>\n\n<pre><code>$('#item1 span').html()\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 115
                },
                {
                    "body": "<p>Since you did not provided an attribute for the 'item' value, I am assuming a class is being used:</p>\n\n<pre><code>&lt;div class='item1'>\n&lt;span>This is my name&lt;/span>\n&lt;/div></code></pre>\n\n<pre><code> alert($(\".item span\").text()); </code></pre>\n\n<p>Make sure you wait for the DOM to load to use your code, in jQuery you use the ready() function for that:</p>\n\n<pre><code>&lt;html>\n&lt;head>\n  &lt;title>jQuery test&lt;/title>\n  &lt!-- script that inserts jquery goes here -->\n  &lt;script type='text/javascript'>\n     $(document).ready(function() { alert($(\".item span\").text()); });\n  &lt;/script>\n&lt;/head>\n&lt;body>\n&lt;div class='item1'>\n&lt;span>This is my name&lt;/span>\n&lt;/div>\n&lt;/body>\n&lt;/html>\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Assuming you intended it to read id=\"item1\", you need</p>\n\n<pre><code>$('#item1 span').text()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>$(\"#item1 span\").text();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>In javascript wouldn't you use <code>getelementbyid('item1').innertext</code>?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>$('#item1').text(); or $('#item1').html();</code> works fine for <code>id=\"item1\"</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>     $('span id').text(); worked with me\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>This is basic.</p>\n\n<p>How do I get the value 'This is my name' of the above span?</p>\n\n<pre><code>&lt;div id='item1'&gt;\n&lt;span&gt;This is my name&lt;/span&gt;\n&lt;/div&gt;\n</code></pre>\n",
            "last_activity_date": 1400770498,
            "question_id": 1921342,
            "score": 49,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "How do I get a value of a &lt;span&gt; using jQuery?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Using var is the cleanest way, buth both work as described here: <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Statements/for...in\" rel=\"nofollow\">https://developer.mozilla.org/en/JavaScript/Reference/Statements/for...in</a></p>\n\n<p>Basicly with using var you ensure that you create a new variable, otherwise you might accidentally use some previously defined variable.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use the one where you declare the loop variable with <code>var</code>.  Implicitly declared variables have a  different scope that's probably not what you intended.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I think var is good for performance reasons. </p>\n\n<p>Javascript won't look through the whole global scope to see if x already exists somewhere else.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You really should declare local variables with <code>var</code>, <strong>always</strong>.</p>\n\n<p>You also should not use \"for ... in\" loops unless you're absolutely sure that that's what you want to do. For iterating through real arrays (which is pretty common), you should always use a loop with a numeric index:</p>\n\n<pre><code>for (var i = 0; i &lt; array.length; ++i) {\n  var element = array[i];\n  // ...\n}\n</code></pre>\n\n<p>Iterating through a plain array with \"for ... in\" can have unexpected consequences, because your loop may pick up attributes of the array besides the numerically indexed ones.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>From a general point of view, first version will be for an index that must live within loop's scope, while the other one would be any variable in the scope where loop's constructor got invoked.</p>\n\n<p>If you're going to use loop's index inside for loop and this won't be required by others in next lines, better declare the variable with \"var\" so you'll be sure \"x\" is for loop's index initialized with 0, while the other one, if other \"x\" variable is available in this context, this will get overwritten by loop's index - that's you'll have some logical errors -.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use <code>var</code>, it reduces the scope of the variable otherwise the variable looks up to the nearest closure searching for a <code>var</code> statement. If it cannot find a <code>var</code> then it is global (if you are in a strict mode, <code>using strict</code>, global variables throw an error). This can lead to problems like the following.</p>\n\n<pre><code>function f (){\n    for (i=0; i&lt;5; i++);\n}\nvar i = 2;\nf ();\nalert (i); //i == 5. i should be 2\n</code></pre>\n\n<p>If you write <code>var i</code> in the for loop the alert shows <code>2</code>.</p>\n\n<p><a href=\"http://www.adequatelygood.com/JavaScript-Scoping-and-Hoisting.html\">JavaScript Scoping and Hoisting</a></p>\n",
                    "is_accepted": true,
                    "score": 44
                },
                {
                    "body": "<p>The first version:</p>\n\n<pre><code>for (var x in set) {\n    ...\n}\n</code></pre>\n\n<p>declares a local variable called <code>x</code>. The second version:</p>\n\n<pre><code>for (x in set) {\n    ...\n}\n</code></pre>\n\n<p>does not.</p>\n\n<p>If <code>x</code> is already a local variable (i.e. you have a <code>var x;</code> or <code>var x = ...;</code> somewhere earlier in your current scope (i.e. the current function)) then they will be equivalent. If <code>x</code> is not already a local variable, then using the second will implicitly declare a global variable <code>x</code>. Consider this code:</p>\n\n<pre><code>var obj1 = {hey: 10, there: 15};\nvar obj2 = {heli: 99, copter: 10};\nfunction loop1() {\n    for (x in obj1) alert(x);\n}\nfunction loop2() {\n    for (x in obj2) {\n        loop1(); \n        alert(x);\n    }\n}\nloop2();\n</code></pre>\n\n<p>you might expect this to alert <code>hey</code>, <code>there</code>, <code>heli</code>, <code>hey</code>, <code>there</code>, <code>copter</code>, but since the <code>x</code> is one and the same it will alert <code>hey</code>, <code>there</code>, <code>there</code>, <code>hey</code>, <code>there</code>, <code>there</code>. You don't want that! Use <code>var x</code> in your <code>for</code> loops.</p>\n\n<p>To top it all off: if the <code>for</code> loop is in the global scope (i.e. not in a function), then the local scope (the scope <code>x</code> is declared in if you use <code>var x</code>) is the same as the global scope (the scope <code>x</code> is implicitly declared in if you use <code>x</code> without a var), so the two versions will be identical.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Actually, if you dislike declaration within <code>for</code> heading, you can do:</p>\n\n<pre><code>var x;\nfor (x in set) {\n    ...\n}\n</code></pre>\n\n<p>As mentioned above multiple times, not using <code>var</code> at all produces unnecessary side-effects like assigning a global property.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>What's the correct way to do a for in loop in JavaScript? The browser doesn't complain about each approach. There's this, which actually declares x:</p>\n\n<pre><code>for (var x in set) {\n    ...\n}\n</code></pre>\n\n<p>And this, which reads more natural but doesn't seem correct:</p>\n\n<pre><code>for (x in set) {\n    ...\n}\n</code></pre>\n",
            "last_activity_date": 1381214294,
            "question_id": 5717126,
            "score": 46,
            "tags": [
                "javascript",
                "syntax",
                "for-in-loop"
            ],
            "title": "&quot;var&quot; or no &quot;var&quot; in JavaScript&#39;s for in loop?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Javascript does require semi-colons, it's just that the interpret will insert it for you on line-breaks when the code becomes syntax-error without it*.</p>\n\n<p>Unfortunately, the code</p>\n\n<pre><code>var a = new B(args)(stuff)()\n</code></pre>\n\n<p>is <em>not</em> a syntax error, so no <code>;</code> will be inserted. (An example which can run is</p>\n\n<pre><code>var answer = new Function(\"x\", \"return x\")(function(){return 42;})();\n</code></pre>\n\n<p>)</p>\n\n<p>To avoid surprises like this, train yourself to always end a statement with <code>;</code>. </p>\n\n<p>(*: Just a thumb-rule. Not always true. The insertion rule is much more complicated. This <a href=\"http://inimino.org/~inimino/blog/javascript_semicolons\">blog page</a> about semicolon insertion has more detail.)</p>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p>Your code experiences a case where the <a href=\"http://stackoverflow.com/questions/2846283/what-are-the-rules-for-javascripts-automatic-semicolon-insertion\">Automatic Semicolon Insertion</a> (ASI) process don't happens.</p>\n\n<p>You should never rely on ASI, you should use semicolons to properly separate statements:</p>\n\n<pre><code>var postTypes = new Array('hello', 'there'); // &lt;--- Place a semicolon here!!\n\n(function() { alert('hello there') })();\n</code></pre>\n\n<p>Your code before, was actually trying to invoke the array object.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I got a similar error and it took me a while to realize that in my case I named the array variable payInvoices and the function also payInvoices. It confused AngularJs. Once I changed the name to processPayments() it finally worked. Just wanted to share this error and solution as it took me long time to figure this out.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Code is as follows:</p>\n\n<pre><code>&lt;body&gt;\n    &lt;a href=\"javascript:;\" id=\"test\"&gt;hello&lt;/a&gt;\n&lt;/body&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    document.getElementById(\"test\").addEventListener(\"click\", function () {\n      test()\n    }, false)\n    function test() {\n      var postTypes = new Array('hello', 'there')   \n      (function() { alert('hello there') })()\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>This will throw an \"Uncaught TypeError: object is not a function\".  If I wrap the anonymous function call/invocation in another set of parentheses it will execute the alert, but still give me an error.  If I put a semi-colon after the \"var postTypes\" definition then it will completely fine.</p>\n\n<p>I was led to believe that javascript does not require semi-colons, so I'm making a guess that there is some weird associativity rules of function application that I am not fully understanding.  I hope someone can give me the answer to why I am getting this error.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1416887939,
            "question_id": 4026891,
            "score": 44,
            "tags": [
                "javascript"
            ],
            "title": "Javascript &quot;Uncaught TypeError: object is not a function&quot; associativity question"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Listen to the change event.</p>\n\n<pre><code>input.onchange = function(e) { \n  ..\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 55
                },
                {
                    "body": "<p>When you have to reload the file, you can erase the value of input. Next time you add a file, 'on change' event will trigger.</p>\n\n<pre><code>document.getElementById('my_input').value = null;\n// ^ that just erase the file path but do the trick\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Let's say we have this code:</p>\n\n<pre><code>&lt;form action='' method='POST' enctype='multipart/form-data'&gt;\n    &lt;input type='file' name='userFile'&gt;&lt;br&gt;\n    &lt;input type='submit' name='upload_btn' value='upload'&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>which results in this:</p>\n\n<p><img src=\"http://i.stack.imgur.com/bT2hc.png\" alt=\"image showing browse and upload button\"></p>\n\n<p>When the user clicks the 'Browse...' button, a file search dialog box is opened:</p>\n\n<p><img src=\"http://i.stack.imgur.com/Y10eN.png\" alt=\"image showing a file search dialog box with a file selected\"></p>\n\n<p>The user will select the file either by double-clicking the file or by clicking the 'Open' button .</p>\n\n<p>Is there a Javascript Event that I can use to be notified after after the file is selected? </p>\n",
            "last_activity_date": 1423066811,
            "question_id": 3528359,
            "score": 39,
            "tags": [
                "javascript",
                "html",
                "javascript-events"
            ],
            "title": "HTML &lt;input type=&#39;file&#39;&gt; File Selection Event"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Use the global flag, <code>g</code>:</p>\n\n<pre><code>foo.replace(/&lt;br&gt;/g,\"\\n\")\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 60
                },
                {
                    "body": "<p>JS idiom for non-Regexp global replace:</p>\n\n<pre><code>input_content.split('&lt;br&gt;').join('\\n')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>I am using a simple regex to replace break tags with newlines:</p>\n\n<pre><code>br_regex = /&lt;br&gt;/;\ninput_content = input_content.replace(br_regex, \"\\n\");\n</code></pre>\n\n<p>This only replaces the first instance of a break tag, but I need to replace all. <code>preg_match_all()</code> would do the trick in PHP, but I'd like to know the JavaScript equivalent.</p>\n",
            "last_activity_date": 1348736042,
            "question_id": 407256,
            "score": 38,
            "tags": [
                "php",
                "javascript",
                "regex"
            ],
            "title": "JavaScript equivalent of PHP&#39;s preg_replace"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Yes, you can point to the git url, or use name/repo shorthand (for github repos): </p>\n\n<p><strong>bower.json</strong></p>\n\n<pre><code>  \"name\": \"bower-test\",\n  \"dependencies\": {\n    \"dpm\": \"git@github.com:okfn/dpm.git\",\n    \"docker-nmpjs\": \"terinjokes/docker-npmjs\"\n  }\n</code></pre>\n\n<p>More in the <a href=\"http://bower.io/#install-packages\">docs</a></p>\n\n<p>As @roi noted in the comments, you can use the <code>--save</code> flag to automatically add dependencies to <code>bower.json</code>, e.g. <code>bower install terinjokes/docker-npmjs --save</code></p>\n",
                    "is_accepted": true,
                    "score": 60
                }
            ],
            "body": "<p>I am trying to use bower to pull down a git repository when I run a <code>bower install</code>.  Is there any way of listing a git repository as a dependency?  I can't find any info in the documentation, but maybe I am looking in the wrong place.</p>\n",
            "last_activity_date": 1420664132,
            "question_id": 20196707,
            "score": 36,
            "tags": [
                "javascript",
                "bower"
            ],
            "title": "Can I add a git repository to my bower.json?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>1) I think the easiest way it to put <code>autoscroll=\"false\"</code> on the ui-view and manipulate the scrolling in the <code>$viewContentLoaded</code> event.</p>\n\n<p>2) This is the browser's default behavior on anchors</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>when ever the path changes the router broadcasts an event: $stateChangeSuccess i.e. the url has changed so just listen to it and use jquery to scroll to the top of the page</p>\n\n<pre><code>$rootScope.$on('$stateChangeSuccess',function(){\n    $(\"html, body\").animate({ scrollTop: 0 }, 200);\n})\n</code></pre>\n\n<p>place the above code inside</p>\n\n<pre><code>yourAppName.run(function(){\n\n    //the above code here\n })\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Another approach is to decorate the default <code>$uiViewScroll</code> service, effectively overriding the default behaviour. </p>\n\n<pre><code>app.config(function ($provide) {\n  $provide.decorator('$uiViewScroll', function ($delegate) {\n    return function (uiViewElement) {\n      // var top = uiViewElement.getBoundingClientRect().top;\n      // window.scrollTo(0, (top - 30));\n      // Or some other custom behaviour...\n    }; \n  });\n});\n</code></pre>\n\n<p>And as Hubrus mentioned, for any <code>&lt;ui-view&gt;</code> you do not wish this to apply for, simply add <code>autoscroll=\"false\"</code>. I haven't taken a good look into the actual scrolling implementation, I just figured I'd mention the decorator way (it's alot of fun) as an alternative. I'm sure you can work out the exact scrolling behaviour. </p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>Since <code>$stateChangeSuccess</code> seems not to be available anymore in current AngularJS (as 1.2.x) I changed\nRishul Mattas example to the following which works fine for me:</p>\n\n<pre><code>app.run(function (rootScope) {\n  $rootScope.$on('$viewContentLoaded',function(){\n    jQuery('html, body').animate({ scrollTop: 0 }, 200);\n  });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>So I had this same problem. I have a fixed-top nav bar. If I put autoscroll=\"true\" in the ui-view it would scroll to the top minus the height of the height of the scroll bar.</p>\n\n<p>So I got rid of the style that added the padding to the body for the top navbar</p>\n\n<pre><code>// fixed navigation at top\n//body { padding-top: 100px; }\n</code></pre>\n\n<p>And applied it to the ui-view</p>\n\n<pre><code>[ui-view=main] {\n    padding-top: 100px;\n}\n</code></pre>\n\n<p>Now autoscroll=\"true\" works as expected.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Apart from the other solutions, you can also place the following jQuery code inside your controllers to scroll to the top of the page when view changes.</p>\n\n<pre><code>$(\"html, body\").animate({ scrollTop: 0 }, 200);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If one combines Angular + Material Design, this is also required to scroll to top:</p>\n\n<pre><code>app.run(function ($rootScope) {\n    $rootScope.$on('$viewContentLoaded', function () {\n        $(\"md-content\").animate({ scrollTop: 0 }, \"fast\"); /* &lt;------- Notice this line */\n        jQuery('html, body').animate({ scrollTop: 0 }, 200);\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think that we don't need scrolling to top if navigating state is child state, so I wrote this:</p>\n\n<pre><code>$rootScope.$on('$stateChangeSuccess',function(_, _, _, os){\n    if(!$state.includes(os) || $state.is(os))\n        $(\"html, body\").animate({ scrollTop: 0 }, 200);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've just upgraded to <code>ui-router 0.2.8</code> from <code>0.2.0</code> and I've noticed that when the state changes, the scroll position jumps to the top of te child <code>ui-view</code> that is the subject of the new state.</p>\n\n<p>This is fine but I have two problems with it:</p>\n\n<p>1) I have 30px padding between the top of the page and the <code>ui-view</code> and I would like it to scroll to the top of the page, leaving a gap. At the moment it goes exactly to the top of the <code>ui-view</code> which looks ugly. To achieve this I guess I either need to know how to get it to scroll to the top of the div that the ui-view is in (not the browser <code>viewport</code>), or I need to find out how to override <code>$uiViewScroll</code> to scroll to the <code>ui-view</code> minus 30px.</p>\n\n<p>I have tried <code>$uiViewScrollProvider.useAnchorScroll();</code> but if I do that it doesn't scroll at all. I have also tried <code>&lt;ui-view autoscroll=\"false\"&gt;;</code>, which also stops the scrolling completely.</p>\n\n<p>2) It doesn't actually scroll at the moment, just jumps. Is it suppose to scroll or is it up to the developer to do this with CSS transitions?</p>\n\n<p>Any help would really be appreciated :)</p>\n",
            "last_activity_date": 1418568596,
            "question_id": 22290570,
            "score": 33,
            "tags": [
                "javascript",
                "angularjs",
                "angular-ui",
                "angular-ui-router"
            ],
            "title": "Angular ui-router scroll to top, not to ui-view"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p><code>.length</code> is undefined because <code>getMinutes</code> is returning a number, not a string. numbers don't have a <code>length</code> property.  You could do</p>\n\n<p><code>var m = \"\" + date.getMinutes();</code></p>\n\n<p>to make it a string, <strong>then</strong> check the length (you would want to check for <code>length === 1</code>, not 0).  </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>you should check if it is less than 10... not looking for the length of it , because this is a number and not a string</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Numbers don't have a length, but you can easily convert the number to a string, check the length and then prepend the 0 if it's necessary:</p>\n\n<pre>\nvar strMonth = '' + date.getMinutes();\nif (strMonth.length == 1) {\n  strMonth = '0' + strMonth;\n}\n</pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>var date = new Date(\"2012-01-18T16:03\");\n\nconsole.log( (date.getMinutes()&lt;10?'0':'') + date.getMinutes() );\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 80
                },
                {
                    "body": "<p>I assume you would need the value as string. You could use the code below.\nIt will always return give you the two digit minutes as string.</p>\n\n<p><code>\nvar date = new Date(date);<br />\nvar min = date.getMinutes();<br /></p>\n\n<p>if (min &lt; 10) { <br />\nmin = '0' + min;<br />\n} else {<br />\nmin = min + '';<br />\n}<br /><br />\nconsole.log(min);\n</code></p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I usually use this piece of code :</p>\n\n<pre><code>var start = new Date(timestamp),\n    startMinutes = start.getMinutes() &lt; 10 ? '0' + start.getMinutes() : start.getMinutes();\n</code></pre>\n\n<p>It is quite similar to the @ogur accepted answer but does not concatenate an empty string in the case that 0 is not needed. Not sure it is better. Just an other way to do it !</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I suggest:</p>\n\n<pre><code>var minutes = data.getMinutes();\nminutes = minutes &gt; 9 ? minutes : '0' + minutes;\n</code></pre>\n\n<p>it is one function call fewer. It is always good to think about performance.\nIt is short as well; </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>$(\".min\").append( (date.getMinutes()&lt;10?'0':'') + date.getMinutes() );\n</code></pre>\n\n<p>new to JS so this was very helpful\nthe most ppl looking at this prob new too\nso this is how i got it to show in the div called \"class=\"min\"</p>\n\n<p>hope it helps someone</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Another option:</p>\n\n<pre><code>var dateTime = new Date();\nvar minutesTwoDigitsWithLeadingZero = (\"0\" + dateTime.getMinutes()).substr(-2);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I would like to provide a more neat solution to the problem if I may.The accepted answer is very good. But I would have done it like this.</p>\n\n<pre><code>Date.prototype.getFullMinutes = function () {\n   if (this.getMinutes() &lt; 10) {\n       return '0' + this.getMinutes();\n   }\n   return this.getMinutes();\n};\n</code></pre>\n\n<p>Now if you want to use this.</p>\n\n<pre><code>console.log(date.getFullMinutes());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yikes these answers aren't great, even the top post upticked. Here y'go, cross-browser and cleaner int/string conversion. Plus my advice is don't use a variable name 'date' with code like <code>date = Date(...)</code> where you're relying heavily on language case sensitivity (it works, but risky when you're working with server/browser code in different languages with different rules). So assuming the javascript Date in a var <code>current_date</code>:</p>\n\n<pre><code>mins = ('0'+current_date.getMinutes()).slice(-2);\n</code></pre>\n\n<p>The technique is take the rightmost 2 characters <code>(slice(-2))</code> of \"0\" prepended onto the string value of <code>getMinutes()</code>. So:</p>\n\n<pre><code>\"0\"+\"12\" -&gt; \"012\".slice(-2) -&gt; \"12\"\n</code></pre>\n\n<p>and</p>\n\n<pre><code>\"0\"+\"1\" -&gt; \"01\".slice(-2) -&gt; \"01\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<pre><code>var date = \"2012-01-18T16:03\";\nvar date = new Date(date);\n\nconsole.log(date.getMinutes());\nconsole.log(date.getMinutes().length)\n</code></pre>\n\n<p>This returns 3. </p>\n\n<ol>\n<li>How do I make it return '03'? </li>\n<li>Why does <code>.length</code> return undefinded? </li>\n</ol>\n\n<p>I tried this, but it did not work: </p>\n\n<p>If <code>strlen == 1</code> then <code>num = ('0' + num);</code></p>\n",
            "last_activity_date": 1399717387,
            "question_id": 8935414,
            "score": 32,
            "tags": [
                "javascript"
            ],
            "title": "getMinutes() 0-9 - how to with two numbers?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>The only drawback of not binding an event to the document in a <code>document.ready</code> block would be that it will be possible to fire the event before all the page content has been loaded, which may not be what you want.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If you are binding to the document itself, you don't need to wait until it is ready. There shouldn't be any downsides to not wrapping it in document.ready in this case.</p>\n\n<p>document.ready gets fired when the DOMReady event is triggered by the browser, or when a specific test is successful for versions of browsers that don't support the DOMReady event.</p>\n\n<p><strong>Additional information.</strong> <em>(5/22/12)</em></p>\n\n<p>Most modern browsers implement the <a href=\"https://developer.mozilla.org/en/DOM/DOM_event_reference/DOMContentLoaded\">DOMContentLoaded</a> event which fires when all elements defined on the document are ready to be manipulated by javascript. Other browsers either rely on a setTimeout loop that continuously checks the readystate of the document or binds directly to the onreadystatechanged method of the document (taken from <a href=\"http://code.jquery.com/jquery-latest.js\">jquery core</a>). The document itself is ready to be manipulated before javascript is ever executed, therefore you never need to wait when binding directly to the document.</p>\n\n<p>The only gotcha here is that if the code interacts with elements other than the document, there is a chance that the event could be triggered on the document before those elements exist. It is very unlikely for that to happen, but it can happen. If that is something that can happen with your code, then it makes sense to place it inside of <code>$(document).ready()</code> to prevent that scenario. Your sample doesn't warrant being placed inside of <code>$(document).ready()</code>.</p>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>The point of <code>$(document).ready</code> is to execute code after the entire document has been parsed.</p>\n\n<p>You only need to use it if you want to use elements that don't exist yet.<br>\n(eg, if your script is in the <code>&lt;head&gt;</code>)</p>\n\n<p>If the elements you're using already exist (either because they're global or because your <code>&lt;script&gt;</code> is below them), you don't need it.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>When using actions to elements or calling them (that will be generated in DOM or don't exist yet) you need to use <code>$(document).ready</code></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In addition to the answers: you can mere use jquery <em>live</em> function (instead of keydown, etc.) to be free of the situation 'DOM elements must be finished'. </p>\n\n<p>So the next must work properly:</p>\n\n<pre><code>$( \"#somediv\" ).live( 'keydown', function(){ ... } );\n</code></pre>\n\n<p>In this case jQuery binds the event when it is possible. You don't have a pain to place all bindings in one (<em>ready</em>) function, your bindings can be placed in independent parts of your HTML page or Javascript files.</p>\n\n<p>So, the result answer is: no, you don't need to place your code in document.ready when you use <em>the mentioned function</em>.</p>\n\n<p><strong>Update</strong></p>\n\n<p>In the last versions of <strong>jQuery</strong> (>= 1.7) use <a href=\"http://api.jquery.com/on/\" rel=\"nofollow\">on()</a> function instead of <a href=\"http://api.jquery.com/live/\" rel=\"nofollow\">live()</a> because the last one is depricated. So, it's not necessary to place event bindings into ready().</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p>This event gets triggered when the DOM hierarchy has been fully\n  constructed i.e. all assets <del>such as images</del> have been completely\n  received.</p>\n</blockquote>\n\n<p>You asked:</p>\n\n<ul>\n<li>When binding event handlers to the document itself, is it necessary to put that code in a document.ready?\n<ul>\n<li><strong>Answer</strong>: Nope.  When using code that rely on the value of CSS style properties, it's important to reference external stylesheets or embed style elements before referencing the script in which your code resides or just before <code>document.ready()</code> block.</li>\n</ul></li>\n</ul>\n\n<hr>\n\n<ul>\n<li>Are there any downsides to not wrapping the code in the document.ready ?\n<ul>\n<li><strong>Answer</strong>: No. But when you've to create elements inside your documents by using JavaScript, then should wait for sake until your DOM gets ready. For this, you should put your code inside <code>document.ready()</code> block.</li>\n</ul></li>\n</ul>\n\n<hr>\n\n<ul>\n<li>What sequence of events take place when the document is being constructed, right before the document.ready is fired ?\n<ul>\n<li><strong>Answer</strong>: Before document.ready gets fired, <code>DOMContentLoaded</code> is already triggered by browser.</li>\n</ul></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><strong>1. When binding event handlers to the document itself, is it necessary to put that code in a document.ready?</strong></p>\n\n<p>No. In fact, the 'on' methods for binding in JQ can delegate at the document so you could use those at any time on any element safely as long as there wasn't a lot of bubbling being stopped at container elements with stopPropagation.</p>\n\n<p><strong>2. Are there any downsides to not wrapping the code in the document.ready?</strong></p>\n\n<p>Only that scripts in the head might try to hit HTML that isn't there yet. The converse is that HTML might be ready and getting events from the user before the doc is. See 'on' methods or google 'event delegation' for having your cake and eating it too where events are concerned (the caveat is libraries that use stopPropagation stupidly). document.ready is mostly just a way to be certain your code is firing when the HTML is ready to be hit. It's not necessary for code that falls at the bottom of the body tag unless (maybe) you're hitting body itself with something.</p>\n\n<p><strong>3. What sequence of events take place when the document is being constructed, right before the document.ready is fired ?</strong></p>\n\n<p>At the point that document ready is fired, all tags have been parsed and the layout dimensions have been established. Images do not need to have fully loaded, and I'm only guessing, but I suspect non-layout impacting CSS may not be in effect yet in some browsers. An element is considered 'ready' when its closing tag has been read and executed on by the HTML parser. JS in script tags must be handled by an interpreter before HTML parsing can continue, which is why we tend to put our code at the bottom of the doc nowadays anyway, for faster perceived loading time.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>The <code>document.ready</code> is used to execute code after the DOM is fully loaded. This can be used to attach event handlers to elements on the page e.g </p>\n\n<pre><code>$(function(){ \n    $('#somediv').click(function(){ \n\n    }); \n}) \n\n&lt;div id=\"somediv\"&gt; &lt;/div&gt; \n</code></pre>\n\n<p>Internally, jQuery hooks up to <a href=\"https://developer.mozilla.org/en/DOM/DOM_event_reference/DOMContentLoaded\" rel=\"nofollow\"><code>DOMContentLoaded</code></a> and <code>window.onload</code> as a fallback. <strike>In IE's case <a href=\"https://github.com/jquery/jquery/blob/master/src/core.js#L869\" rel=\"nofollow\">an attempt is made to scroll the viewport over and over until successful</a></strike>. </p>\n\n<p>I have a few questions, my first one being, when binding event handlers to the <code>document</code> itself, is it necessary to put that code in a <code>document.ready</code> ? I have always been writing the code below without wrapping it in a <code>document.ready</code></p>\n\n<pre><code>$(document).keydown(function(e){\n    if (e.which == 39) { \n       alert( \"right arrow pressed\" );\n       return false;\n    }\n});\n</code></pre>\n\n<p>And as you can see, it <a href=\"http://jsfiddle.net/dPBTZ/4/\" rel=\"nofollow\">works</a>. My understanding is, since this code doesn't hook up to any elements within the document, but the document itself, there's no need to wrap it in a <code>document.ready</code> handler. Another reason i don't wrap it is because i used to do the same in vanilla javascript the equivalent would be the code below, which also <a href=\"http://jsfiddle.net/dPBTZ/5/\" rel=\"nofollow\">works</a>. </p>\n\n<pre><code>document.onkeydown= function(){\nvar keyCode = event.keyCode || event.which;   \n    if (keyCode == 39) { \n       alert( \"right arrow pressed\" );\n       return false;\n    }\n}\n</code></pre>\n\n<p>I've seen numerous posts where people wrap it in a <code>document.ready</code>, is there any downside of not wrapping this code in <code>document.ready</code> ? </p>\n\n<p>Also i think this question stems from my lack of clarity of what happens during this time when the DOM is being constructed, so if someone can explain what happens during the period right before the DOM is ready. To me the document is <em>ready</em> when the html has been parsed and converted into a DOM tree, or is there more to it ?  </p>\n\n<p>In summary, here are my questions </p>\n\n<ol>\n<li>When binding event handlers to the <code>document</code> itself, is it\n    necessary to put that code in a <code>document.ready</code>.</li>\n<li>Are there any downsides to not wrapping the code in the <code>document.ready</code> ?</li>\n<li>What sequence of events take place when the document is being constructed, right before the <code>document.ready</code> is fired ?  </li>\n</ol>\n",
            "last_activity_date": 1366736771,
            "question_id": 10642156,
            "score": 31,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Does this code need to be in a document.ready?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You need to remove <code>list-style-type:none</code> from your prettify.css</p>\n\n<pre><code>/* Specify class=linenums on a pre to get line numbering */\nol.linenums { margin-top: 0; margin-bottom: 0 } /* IE indents via margin-left */\nli.L0,\nli.L1,\nli.L2,\nli.L3,\nli.L5,\nli.L6,\nli.L7,\nli.L8 { list-style-type: none /* &lt;&lt;&lt; remove this! */ }\n/* Alternate shading for lines */\nli.L1,\nli.L3,\nli.L5,\nli.L7,\nli.L9 { background: #eee }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>I like having the alternating background colors, so did it this way:</p>\n\n<pre><code>li.L0,\nli.L1,\nli.L2,\nli.L3,\nli.L5,\nli.L6,\nli.L7,\nli.L8  { background: #fff; }\n/* Alternate shading for lines */\nli.L1,\nli.L3,\nli.L5,\nli.L7,\nli.L9 { background: #eee }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<h2>Solution</h2>\n\n<p>Instead of modifying the CSS you can simply add in a line of CSS to achieve the desired behavior:</p>\n\n<pre><code>&lt;style&gt;\n\n    .prettyprint ol.linenums &gt; li { list-style-type: decimal; }\n\n&lt;/style&gt;  \n</code></pre>\n\n<h2>Example</h2>\n\n<p>A full example might have the code below. <a href=\"http://jsfiddle.net/AgEjk/\">View results via jsfiddle</a> or see below </p>\n\n<pre><code>&lt;link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/prettify/r298/prettify.min.css\" /&gt;\n\n    &lt;style&gt;\n        .prettyprint ol.linenums &gt; li { list-style-type: decimal; }\n    &lt;/style&gt;\n\n&lt;pre class=\"prettyprint linenums\"&gt;\n foo\n bar\n bis\n sed\n awk\n cat\n&lt;/pre&gt;\n\n\n&lt;script src=\"//cdnjs.cloudflare.com/ajax/libs/prettify/r298/prettify.min.js\"&gt;&lt;/script&gt;\n&lt;script src=\"//cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p><img src=\"http://img801.imageshack.us/img801/8498/al6c.png\" /></p>\n",
                    "is_accepted": false,
                    "score": 16
                }
            ],
            "body": "<p>I am using prettify:</p>\n\n<pre><code>&lt;pre class=\"prettyprint linenums\"&gt;\n  some code\n&lt;/pre&gt;\n</code></pre>\n\n<p>It works but the line number show every 5 lines and not for every line. I am using these files</p>\n\n<pre><code>&lt;link href=\"../src/prettify.css\" type=\"text/css\" rel=\"stylesheet\" /&gt;\n&lt;script type=\"text/javascript\" src=\"../src/prettify.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Basically at the end of this page <a href=\"http://google-code-prettify.googlecode.com/svn/trunk/styles/index.html\">http://google-code-prettify.googlecode.com/svn/trunk/styles/index.html</a> you can see that I want, but I looked at that code and I can't figure it out. </p>\n",
            "last_activity_date": 1390298882,
            "question_id": 8399547,
            "score": 31,
            "tags": [
                "javascript",
                "css",
                "prettify"
            ],
            "title": "How to add line numbers to all lines in Google Prettify?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>As a general direction, I would try using <a href=\"http://html5doctor.com/html5-custom-data-attributes/\" rel=\"nofollow\">HTML5 data attributes</a> instead. There's nothing to stop you putting in valid JSON. e.g.: </p>\n\n<pre><code>&lt;div id=\"mydiv\" data-unicorns='{\"unicorns\":\"awesome\", \"abc\":[1,2,3]}' class=\"hidden\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>If you're using jQuery, then retrieving it is as easy as:</p>\n\n<pre><code>var stuff = JSON.parse($('#mydiv').attr('data-unicorns'));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I'd suggest to put JSON into an inline script with a function callback (kind of <a href=\"http://en.wikipedia.org/wiki/JSONP\" rel=\"nofollow\">JSONP</a>):</p>\n\n<pre><code>&lt;script&gt;\nsomeCallback({\n    \"unicorns\": \"awesome\",\n    \"abc\": [1, 2, 3]\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>If the executing script is loaded after the document you can store this somewhere, possibly with an additional identifier argument: <code>someCallback(\"stuff\", { ... });</code></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>My recommendation would be to keep JSON data in external <code>.json</code> files, and then retrieve those files via Ajax. You don't put CSS and JavaScript code onto the web-page (inline), so why would you do it with JSON?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think your original method is the best. The HTML5 spec even addresses this use:</p>\n\n<blockquote>\n  <p>\"When used to include data blocks (as opposed to scripts), the data\n  must be embedded inline, the format of the data must be given using\n  the type attribute, the src attribute must not be specified, and the\n  contents of the script element must conform to the requirements\n  defined for the format used.\"</p>\n</blockquote>\n\n<p>Read here: <a href=\"http://dev.w3.org/html5/spec/Overview.html#the-script-element\">http://dev.w3.org/html5/spec/Overview.html#the-script-element</a></p>\n\n<p>You've done exactly that. What is not to love? No character encoding as needed with attribute data. You can format it if you want. It's expressive and the intended use is clear. It doesn't feel like a hack (e.g. as using CSS to hide your \"carrier\" element does). It's perfectly valid. </p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>This method of embedding json in a script tag has a potential security issue.  Assuming the json data originated from user input, it is possible to craft a data member that will in effect break out of the script tag and allow direct injection into the dom.  See here:</p>\n\n<p><a href=\"http://jsfiddle.net/YmhZv/1/\" rel=\"nofollow\">http://jsfiddle.net/YmhZv/1/</a></p>\n\n<p>Here is the injection</p>\n\n<pre><code>&lt;script type=\"application/json\" id=\"stuff\"&gt;\n{\n    \"unicorns\": \"awesome\",\n    \"abc\": [1, 2, 3],\n    \"badentry\": \"blah &lt;/script&gt;&lt;div id='baddiv'&gt;I should not exist.&lt;/div&gt;&lt;script type=\"application/json\" id='stuff'&gt; \",\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>There is just no way around escaping/encoding.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm thinking about embedding arbitrary JSON in the DOM like this:</p>\n\n<pre><code>&lt;script type=\"application/json\" id=\"stuff\"&gt;\n    {\n        \"unicorns\": \"awesome\",\n        \"abc\": [1, 2, 3]\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>This is similar to the way one might store an arbitrary HTML template in the DOM for later use with a JavaScript template engine. In this case, we could later retrieve the JSON and parse it with:</p>\n\n<pre><code>var stuff = JSON.parse(document.getElementById('stuff').innerHTML);\n</code></pre>\n\n<p><a href=\"http://jsbin.com/epodeh/edit#javascript,html\">This works</a>, but is it the best way? Does this violate any best practice or standard?</p>\n\n<p><i>Note: I'm not looking for alternatives to storing JSON in the DOM, I've already decided that's the best solution for the particular problem I'm having. I'm just looking for the best way to do it.</i></p>\n",
            "last_activity_date": 1424955869,
            "question_id": 9320427,
            "score": 30,
            "tags": [
                "javascript",
                "json",
                "dom",
                "embedding",
                "decoupling"
            ],
            "title": "Best practice for embedding arbitrary JSON in the DOM?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Yes, we still need backup code for people who have JavaScript disabled.</p>\n\n<ul>\n<li>JavaScript is often used to do things that break in screen readers (so many screen reader users disable it) or to cause changes to appear out of sight of a screen magnifier.</li>\n<li>JavaScript is still one of the biggest attack vectors to exploit security holes in browsers.</li>\n<li>Add-ons such as <a href=\"http://noscript.net/\">No-Script</a> are increasing in popularity.</li>\n<li>Search engines tend not to execute it (so you don't want to hide your content behind it)</li>\n</ul>\n\n<p>I prefer to think of it as a <a href=\"http://icant.co.uk/articles/pragmatic-progressive-enhancement/#build\">foundation</a> rather than backup.</p>\n\n<blockquote>\n  <p>I understand about visually impaired users, but do people care (harsh, yes) if their experience is buggy?</p>\n</blockquote>\n\n<p>Nasty people don't.</p>\n\n<p>The law (in many jurisdictions) does.</p>\n\n<blockquote>\n  <p>Not to sound disrespectful, but not sticking to strict standards will alienate people using Internet Explorer 4 and 5 too, but we don't seem to care about them...?</p>\n</blockquote>\n\n<p>IE 4/5 have:</p>\n\n<ul>\n<li>a smaller market share than users without JS</li>\n<li>many security holes</li>\n<li>no support from their own publisher</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Yes. Especially when it comes to 508 and WCAG compliance. While the technologies to create accessible JavaScript are coming out of their infancy (see ARIA), developer's should still be coding sites in a way the does not require JavaScript.</p>\n\n<p><a href=\"http://www.w3.org/WAI/aria/faq\" rel=\"nofollow\">http://www.w3.org/WAI/aria/faq</a></p>\n\n<p><a href=\"http://www.w3.org/TR/WCAG10/\" rel=\"nofollow\">http://www.w3.org/TR/WCAG10/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It is not merely a question of whether a browser is capable of executing javascript, but if a user has disabled it for some reason.</p>\n\n<p>For example, you need to be aware of vison-impaired users. Such users might disable javascript, because the effects are confusing their screen reader software.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have a different opinion to many here. I don't think you necessarily should care in some scenarios, especially if your website is targeting a particular group of people or that it is going to mean a lot of work.</p>\n\n<p>if you refer to:</p>\n\n<p><a href=\"http://visualrevenue.com/blog/2007/08/eu-and-us-javascript-disabled-index.html\">http://visualrevenue.com/blog/2007/08/eu-and-us-javascript-disabled-index.html</a></p>\n\n<p><img src=\"http://visualrevenue.com/media/uploaded_images/JavaScript-Disabled-735177.JPG\" alt=\"alt text\"></p>\n\n<p>You can see that year on year <strong>more browsers than ever have Javascript enabled</strong>, contrary to the other answers' claims. It was at 96.9% in 2007.</p>\n\n<p>So you lose 3% of potential viewers, so what, your advertising campaign will do a lot more damage than that!</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>All the other questions got most of the points covered, but I'll chime in with this: it's not a big deal to have your page(s) degrade gracefully in the absence of javascript. If you've got some super-whizzy ajax-infested real-time comet style app that really isn't going to work without javascript, you should at least render a nice message to the effect that javascript is required.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>My recent experience:</p>\n\n<p>My former supervisor claimed, in earnest, that because Google Analytics told us that \"87% of our users have Java enabled and less than 3% are using IE6,\" that we didn't have to worry about supporting older browsers or users with JavaScript disabled. </p>\n\n<p>Problem 1: Java is not JavaScript.</p>\n\n<p>Problem 2: In order for Google Analytics to track a hit, the browser must have JavaScript enabled because the GA interface is a JS include. GA is not, and can not, be aware of users with JS disabled, which can potentially severely skew its reports.</p>\n\n<p>Problem 3: one of our biggest customers requires that all engineers use IE6 with JS disabled. </p>\n\n<p>Problem 4: The boss (at the time) didn't know how to read analytics reports.</p>\n\n<p>If you want to know how important this support is to your business, a good place to start is the IIS logs. Just about everything related to the browser caps is stored by IIS. I regularly import the logs into SQL Server and run some basic reports from my admin site, which come in handy every time someone starts suggesting that we go crazy with the jQuery BS.</p>\n\n<p>If you decide to start building complicated, script-dependent interfaces, be sure that your interface degrades gracefully and doesn't remove required functionality if JS is disabled.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It depends on your audience and type of website.</p>\n\n<p>For instance, a graphic artist portfolio will not be visited by blind people or people using text browsers. So in that case it's not so important to build nice degradable JS, expecially because it will most probably be used for graphic effects.</p>\n\n<p>If, on the other hand you're developing a news website and you decide (for whatever reason) to dynamically load your news with JS then you should definitely make it degradable. Also, remember that the spiders of indexing engines may have difficulties in indexing content loaded with JS in your page.</p>\n\n<p>At the end of the day, in most cases it's not so difficult to program the site so that it works without JS. If you're retrieving content dynamically you already have the server-side code to load the content, you just need to accomodate how the page is called.\nSame thing for forms, you can send the content via AJAX or via a normal POST, the backend will be pretty much the same, so it's again easy to implement.</p>\n\n<p>Of course, the problem is not even posed for JS code that is purely graphical.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Support for JavaScript-disabled web sites a nice thought, but not of much help, and of questionable value, IMHO</p>\n\n<p>It is almost impossible to design a robust website without java script, and those that disable JS, for whatever reason, probably don't expect much of a user experience.  So if you are coding for that 1% of the population, you have no choice.  But for the majority of us, it is a given that JS is there.  Accessibility is a different issue, with its own challenges.  When I was doing web sites for Hewlett-Packard, they had to meet strict accessibility standards, and it was tough to create anything more than very basic web pages.  I wouldn't wish that on anybody. </p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>As a developer I no longer worry about 1% of users who turn off Javascript. It is too time consuming and development time is too expensive to waste on such nonsense. AJAX saves an incredible amount of bandwidth which turns directly into $$$ savings, which makes profits higher. If I lose one or two potential users of the site for every 100 users, those one or two lost users will cost a lot more in development than the potential income of they could ever bring in.</p>\n\n<p>Try turning off Javascript and logging into Facebook, it becomes a very broken website after that. If it's good enough for Facebook, its good enough for me.</p>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>I hear about it a bit in tutorials that I watch, that certain things won't work if javascript is disabled. Occasionally I see workarounds.</p>\n\n<p>The question is, are these relevent? I can't imagine anyone not having a javascript enabled browser nowadays, except the most ancient of phones, and chances are your page won't render on them properly anyway.</p>\n\n<p>Do people still bother to write backup code for javascript being disabled?</p>\n\n<p>Edit: As a test, I turned javascript off. Facebook doesn't work.</p>\n\n<p>Edit: I understand about visually impaired users, but do people care (harsh, yes) if their experience is buggy? Not to sound disrespectful, but not sticking to strict standards will alienate people using Internet Explorer 4 and 5 too, but we don't seem to care about them...?</p>\n\n<p>Edit: Saying that people should do it seems like a very automatic response, considering how many people use JQuery and other groovy addon libraries.</p>\n\n<p>Edit: I tried a bunch of fortune 500 sites, and so far about 70% of the ones I tried have broken</p>\n\n<pre><code>Dell\nWalmart\nFedex\nIntel\nCoca Cola\n</code></pre>\n",
            "last_activity_date": 1306475824,
            "question_id": 2905077,
            "score": 30,
            "tags": [
                "javascript"
            ],
            "title": "Do we still need backup code for people who have javascript disabled?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I have experienced this as well on Windows, it seems that this will happen in general when using the browser (not only within the web inspector).  It also seems to happen more often when loading flash content (such as a game).  The browser and flash areas are responding normally, but the browser thinks that they are not for whatever reason.  Pressing wait seems to hide the dialog for a few minutes until it will re-appear again.</p>\n\n<p>I've read that this bug is fixed in the next beta (version 33).</p>\n\n<p>Regards,\nMoses</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I started getting this problem as well.</p>\n\n<p>In searching, I came accross this issue <a href=\"https://code.google.com/p/chromium/issues/detail?id=335248\" rel=\"nofollow\">https://code.google.com/p/chromium/issues/detail?id=335248</a>.</p>\n\n<p>As best I figured out, the bug is related to:</p>\n\n<ul>\n<li>Windows 7/8 with Aero Theme</li>\n<li>Scrollbars on pages (such as in the developer console)</li>\n<li>Pages with popups (in particular Window.open() calls)</li>\n</ul>\n\n<p>I guess they are slated to push the fix into version 33...and maybe leave the stable* 32 how it is (although I hope not).</p>\n\n<p>So there are a few options:</p>\n\n<ul>\n<li>Switch away from Aero Theme until version 33 is in stable</li>\n<li>Upgrade to the beta channel, i.e. version 33</li>\n<li>Click on the Wait button every 30 seconds whenever the chrome developer tools is open.</li>\n</ul>\n\n<hr>\n\n<p>Update: </p>\n\n<p>Chrome has released a hotfix into the version 32 stable channel. <a href=\"http://googlechromereleases.blogspot.ro/2014/01/stable-channel-update_27.html\" rel=\"nofollow\">http://googlechromereleases.blogspot.ro/2014/01/stable-channel-update_27.html</a></p>\n\n<p>Thanks to @probackpacker for bringing it to my attention.</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>I have also experienced <a href=\"http://frankcode.wordpress.com/2014/01/21/chrome-32-broke-the-internet/\" rel=\"nofollow\">this issue</a>. The change of theme workaround has worked, and the Chromium team has provided the following update today:</p>\n\n<blockquote>\n  <p>... We understand your frustration and are actively working to resolve\n  it. When you add that comment, it\u2019s confusing the comments around\n  whether we\u2019re able to fully fix it on canary. If we can confirm it\u2019s\n  fully fixed in canary, we can merge into the stable channel and\n  everyone can get the fix. So please refrain from saying thatyou\u2019re\n  having this problem, too. I assure you we\u2019re actively working on a\n  fix.</p>\n</blockquote>\n\n<p>This statement was taken from <a href=\"https://code.google.com/p/chromium/issues/detail?id=335248\" rel=\"nofollow\">Chromium ticket #335248</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Okay here\u2019s the solution you can do without changing your theme, right click on my computer, go to your System Properties, and then go to \"Advanced\", click on \"Settings\" under Performance, then check the below radio button.  This seems to stop it</p>\n\n<p><img src=\"http://i.stack.imgur.com/H16cz.jpg\" alt=\"Windows Visual Effects\"></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If the aero fix isn't working for you, download <a href=\"https://www.google.ca/intl/en/chrome/browser/beta.html\" rel=\"nofollow\">Chrome Beta</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have had this same issue with Chrome 32 (there are so many problems in the dev tools...) but it ONLY happens for me when I have the dev tools detached / undocked from the main browser window.\nYou might be able to avoid it by re-docking the devtools if you are using them in un-docked mode.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>August 6, 2014 - I solved this by installing the latest Chrome Beta  <a href=\"https://www.google.com/chrome/browser/beta.html\" rel=\"nofollow\">https://www.google.com/chrome/browser/beta.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Ever since Chrome updated itself to version 32, I have been experiencing aggravating bugs. One of the worst is when editing the DOM using the Web Inspector, and Chrome will about every minute start popping up this dialog, which yanks focus from the Web Inspector: </p>\n\n<p><img src=\"http://i.stack.imgur.com/ye6WG.png\" alt=\"enter image description here\"></p>\n\n<p>It's complaining about the Web Inspector itself being \"unresponsive\", when it really isn't, and nothing's gone wrong. </p>\n\n<p>This particular page I'm messing with is making use of the <a href=\"https://code.google.com/p/mutation-summary/\">mutation-summary</a> library. Perhaps the bug in Chrome that thinks stuff is unresponsive could be related to setting various continuously-running setTimeouts. I say this because I observe similar behavior in the web app we build at work where this has also started happening (and is equally annoying).</p>\n\n<p>The workaround is I believe it is possible to just ignore the dialog and work can continue. I wonder if anyone else (or everyone else) has been experiencing this issue?</p>\n",
            "last_activity_date": 1407455560,
            "question_id": 21196189,
            "score": 29,
            "tags": [
                "javascript",
                "google-chrome",
                "google-chrome-devtools"
            ],
            "title": "Chrome &quot;Unresponsive Page&quot; false-positive (since Chrome 32)"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>document.getElementsByTagName('audio').addEventListener('playing',function() { myfunction(); },false); \n</code></pre>\n\n<p>Should do the trick.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>While there is no method called isPlaying or something similar, there are a few ways to accomplish this.</p>\n\n<p>This method gets the % of progress as audio is playing:</p>\n\n<pre><code>function getPercentProg() {\n    var myVideo = document.getElementsById('myVideo');\n    var endBuf = myVideo.buffered.end(0);\n    var soFar = parseInt(((endBuf / myVideo.duration) * 100));\n    document.getElementById(\"loadStatus\").innerHTML =  soFar + '%';\n}\n</code></pre>\n\n<p>If percent is greater than 0 and less than 100, it is playing, else it is stopped.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<pre><code>function isPlaying(audelem) { return !audelem.paused; }\n</code></pre>\n\n<p>The Audio tag has a <code>paused</code> property. If it is not paused, then it's playing.</p>\n",
                    "is_accepted": true,
                    "score": 44
                },
                {
                    "body": "<p>You can check the duration. Its playing if the duration is more than 0 seconds and the its not paused. </p>\n\n<pre><code>var myAudio = document.getElementsById('myAudioID');\n\nif (myAudio.duration &gt; 0 &amp;&amp; !myAudio.paused) {\n\n    //Its playing...do your job\n\n} else {\n\n    //Not playing...maybe paused, stoped or never played.\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try this function!\nAudio playing would not be executed if the position is the beginning or ending</p>\n\n<pre><code>function togglePause() {\n     if (myAudio.paused &amp;&amp; myAudio.currentTime &gt; 0 &amp;&amp; !myAudio.ended) {\n         myAudio.play();\n     } else {\n         myAudio.pause();\n     }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What's the javascript api for checking if an html5 audio element is currently playing?</p>\n",
            "last_activity_date": 1423396226,
            "question_id": 9437228,
            "score": 29,
            "tags": [
                "javascript",
                "html5",
                "audio"
            ],
            "title": "HTML5 check if audio is playing?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>For a starter check the numerous (!) other questions on this site which related to your problem.e.g.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/300855/looking-for-a-better-javascript-unit-test-tool\">Looking for a better JavaScript unit test tool</a></p>\n\n<p><a href=\"http://stackoverflow.com/questions/32809/javascript-unit-testing\">Javascript Unit-testing?</a></p>\n\n<p><a href=\"http://stackoverflow.com/questions/209418/what-are-some-javascript-unit-testing-and-mocking-frameworks-you-have-used\">What are some JavaScript Unit Testing and Mocking Frameworks you have used?</a></p>\n",
                    "is_accepted": false,
                    "score": 38
                },
                {
                    "body": "<p>There's also <a href=\"http://docs.jquery.com/QUnit\">qUnit</a> which is used by the <a href=\"http://jquery.com/\">jQuery</a> project.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>i recently got a couple of them, didnt start using. Just posted to let all know these stuff are available</p>\n\n<p>Qunit (<a href=\"http://qunitjs.com/\">http://qunitjs.com/</a>)<br/>\nMocha (<a href=\"http://visionmedia.github.com/mocha/\">http://visionmedia.github.com/mocha/</a>)<br/>\nTutti (<a href=\"http://tuttijs.com\">http://tuttijs.com</a>)<br/>\nTestSwarm (<a href=\"http://swarm.jquery.org/\">http://swarm.jquery.org/</a>)<br/>\nJsTestDriver (<a href=\"http://code.google.com/p/js-test-driver/\">http://code.google.com/p/js-test-driver/</a>)<br/>\njsUnity (<a href=\"http://jsunity.com\">http://jsunity.com</a>), <br/>\nJasmine (<a href=\"http://pivotal.github.com/jasmine/\">http://pivotal.github.com/jasmine/</a>)<br/></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I'm a big fan of Jasmine framework. And I use Jasmine to test my JS. <a href=\"http://pivotal.github.com/jasmine/\" rel=\"nofollow\">http://pivotal.github.com/jasmine/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/300855/looking-for-a-better-javascript-unit-test-tool\">Looking for a better JavaScript unit test tool</a>  </p>\n</blockquote>\n\n\n\n<p>Can anybody recommend a Javascript unit testing framework. I've found <a href=\"https://github.com/pivotal/jsunit\">JsUnit</a> and will start evaluating it. I just thought it would be good to get some input from the community.</p>\n",
            "last_activity_date": 1370698348,
            "question_id": 1692873,
            "score": 29,
            "tags": [
                "javascript",
                "unit-testing",
                "jsunit"
            ],
            "title": "Javascript Unit Testing Frameworks?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You can't get the tool-tip to show on a disabled button. This is because disabled elements don't trigger any events, including the tool-tip. Your best bet would be to fake the button being disabled (so it looks and acts like its disabled), so you can then trigger the tool-tip.</p>\n\n<p>Eg. Javascript:</p>\n\n<pre><code>$('[rel=tooltip].disabled').tooltip();\n\n$('[rel=tooltip].disabled').bind('click', function(){\n     return false;\n});\n</code></pre>\n\n<p>Instead of just <code>$('[rel=tooltip]').tooltip();\u200b</code></p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;hr&gt;\n&lt;button class=\"btn disabled\" rel=\"tooltip\" data-title=\"Dieser Link f\u00fchrt zu Google\"&gt;button disabled&lt;/button&gt;\n\n&lt;button class=\"btn\" rel=\"tooltip\" data-title=\"Dieser Link f\u00fchrt zu Google\"&gt;button not disabled&lt;/button&gt;\n</code></pre>\n\n<p>JSFiddle: <a href=\"http://jsfiddle.net/BA4zM/75/\" rel=\"nofollow\">http://jsfiddle.net/BA4zM/75/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here is some working code: <a href=\"http://jsfiddle.net/mihaifm/W7XNU/1/\">http://jsfiddle.net/mihaifm/W7XNU/1/</a></p>\n\n<pre><code>$('body').tooltip({\n    selector: '[rel=\"tooltip\"]'\n});\n\n$(\".btn\").click(function(e) {\n    if (! $(this).hasClass(\"disabled\"))\n    {\n        $(\".disabled\").removeClass(\"disabled\").attr(\"rel\", null);\n\n        $(this).addClass(\"disabled\").attr(\"rel\", \"tooltip\");\n    }\n});\n</code></pre>\n\n<p>The idea is to add the tooltip to a parent element with the <code>selector</code> option, and then add/remove the <code>rel</code> attribute when enabling/disabling the button.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>If you're desperate (like i was) for tooltips on checkboxes, textboxes and the like, then here is my hackey workaround:</p>\n\n<pre><code>$('input:disabled, button:disabled').after(function (e) {\n    d = $(\"&lt;div&gt;\");\n    i = $(this);\n    d.css({\n        height: i.outerHeight(),\n        width: i.outerWidth(),\n        position: \"absolute\",\n    })\n    d.css(i.offset());\n    d.attr(\"title\", i.attr(\"title\"));\n    d.tooltip();\n    return d;\n});\n</code></pre>\n\n<p>Working examples: <a href=\"http://jsfiddle.net/WB6bM/11/\">http://jsfiddle.net/WB6bM/11/</a></p>\n\n<p>For what its worth, I believe tooltips on disabled form elements is very important to the UX. If you're preventing somebody from doing something, you should tell them why.</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>You can wrap the disabled button and put the tooltip on the wrapper:</p>\n\n<pre><code>&lt;div class=\"tooltip-wrapper\" data-title=\"Dieser Link f\u00fchrt zu Google\"&gt;\n  &lt;button class=\"btn btn-default\" disabled&gt;button disabled&lt;/button&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>If the wrapper has <code>display:inline</code> then the tooltip doesn't seem to work. Using <code>display:block</code> and <code>display:inline-block</code> seem to work fine. It also appears to work fine with a floated wrapper.</p>\n\n<p>This answer applies to Bootstrap 3.0.2. Here's a JSFiddle: <a href=\"http://jsfiddle.net/cSSUA/2/\">http://jsfiddle.net/cSSUA/2/</a></p>\n",
                    "is_accepted": false,
                    "score": 39
                },
                {
                    "body": "<p>This can be done via CSS. The \"pointer-events\" property is what's preventing the tooltip from appearing. You can get disabled buttons to display tooltip by overriding the \"pointer-events\" property set by bootstrap.</p>\n\n<pre><code>.btn.disabled {\n    pointer-events: auto;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>This is what myself and tekromancr came up with.</p>\n\n<p>Example element:</p>\n\n<pre><code>&lt;a href=\"http://www.google.com\" id=\"btn\" type=\"button\" class=\"btn btn-disabled\" data-placement=\"top\" data-toggle=\"tooltip\" data-title=\"I'm a tooltip\"&gt;Press Me&lt;/a&gt;\n</code></pre>\n\n<p>note: the tooltip attributes can be added to a separate div, in which the id of that div is to be used when calling .tooltip('destroy'); or .tooltip();</p>\n\n<p>this enables the tooltip, put it in any javascript that is included in the html file. this line might not be necessary to add, however. (if the tooltip shows w/o this line then don't bother including it)</p>\n\n<pre><code>$(\"#element_id\").tooltip();\n</code></pre>\n\n<p>destroys tooltip, see below for usage.</p>\n\n<pre><code>$(\"#element_id\").tooltip('destroy');\n</code></pre>\n\n<p>prevents the button from being clickable. because the disabled attribute is not being used, this is necessary, otherwise the button would still be clickable even though it \"looks\" as if it is disabled.</p>\n\n<pre><code>$(\"#element_id\").click(\n  function(evt){\n    if ($(this).hasClass(\"btn-disabled\")) {\n      evt.preventDefault();\n      return false;\n    }\n  });\n</code></pre>\n\n<p>Using bootstrap, the classes btn and btn-disabled are available to you.\nOverride these in your own .css file. you can add any colors or whatever you want the button to look like when disabled. Make sure you keep the cursor: default; you can also change what .btn.btn-success looks like.</p>\n\n<pre><code>.btn.btn-disabled{\n    cursor: default;\n}\n</code></pre>\n\n<p>add the code below to whatever javascript is controlling the button becoming enabled.</p>\n\n<pre><code>$(\"#element_id\").removeClass('btn-disabled');\n$(\"#element_id\").addClass('btn-success');\n$('#element_id).tooltip('destroy');\n</code></pre>\n\n<p>tooltip should now only show when the button is disabled.</p>\n\n<p>if you are using angularjs i also have a solution for that, if desired.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I need to display a tooltip on disabled button and remove it on enabled button.\nActually it works in reverse way.</p>\n\n<p>What is the best way to invert this behaviour?</p>\n\n<p>Here is the js code:</p>\n\n<pre><code>  $('[rel=tooltip]').tooltip();\u200b\n</code></pre>\n\n<p>Here is the demo: <a href=\"http://jsfiddle.net/BA4zM/68/\">http://jsfiddle.net/BA4zM/68/</a></p>\n\n<p>P.S.: I want to keep the attribute disabled. </p>\n",
            "last_activity_date": 1406567957,
            "question_id": 13311574,
            "score": 28,
            "tags": [
                "javascript",
                "jquery",
                "twitter-bootstrap"
            ],
            "title": "how to enable bootstrap tooltip on disabled button"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The issue is that the boostrap dropdown jQuery plugin closes the dropped-menu when you click anywhere else.  You can disable that behavior by capturing the click events on your dropdown-menu element and keeping it from reaching the click event listeners on the body element.</p>\n\n<p>Just add</p>\n\n<pre><code>$('.dropdown-menu').click(function(event){\n     event.stopPropagation();\n });\u200b\n</code></pre>\n\n<p>jsfiddle can be found <a href=\"http://jsfiddle.net/8afrw/6/\">here</a></p>\n",
                    "is_accepted": true,
                    "score": 59
                },
                {
                    "body": "<p>I know this question isn't for Angular per se, but for anyone using Angular you can pass the event from the HTML and stop propagation via $event:</p>\n\n<pre><code>&lt;div ng-click=\"preventClose($event)\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>And in the controller:</p>\n\n<pre><code>$scope.preventClose = function(event) { event.stopPropagation(); };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>After trying a lot of techniques I found that the best one to use, that causes no drawbacks which is even simple:</p>\n\n<pre><code>$('body')\n.on( 'click', '.dropdown-menu', function (e){\n    e.stopPropagation();\n});\n</code></pre>\n\n<p>Which lets you also do some live binding for inner elements inside dropdowns.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>also, prevent click unless clicks a button element </p>\n\n<pre><code>$('.dropdown-menu').click(function(e) {\n    if (e.target.nodeName !== 'BUTTON') e.stopPropagation();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a button dropdown (just one, not all of them), and inside of it, I want to have several input field where people can type stuff inside without the dropdown hiding as soon as you click on it (but it does close if you click outside of it).</p>\n\n<p>I created a jsfiddle:  <a href=\"http://jsfiddle.net/denislexic/8afrw/2/\" rel=\"nofollow\">http://jsfiddle.net/denislexic/8afrw/2/</a></p>\n\n<p>And here is the code, it's basic:</p>\n\n<pre><code>&lt;div class=\"btn-group\" style=\"margin-left:20px;\"&gt;\n  &lt;a class=\"btn dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\"&gt;\n    Action\n    &lt;span class=\"caret\"&gt;&lt;/span&gt;\n  &lt;/a&gt;\n  &lt;ul class=\"dropdown-menu\"&gt;\n    &lt;!-- dropdown menu links --&gt;\n      &lt;li&gt;Email&lt;input type=\"text\" place-holder=\"Type here\" /&gt;&lt;/li&gt;\n      &lt;li&gt;Password&lt;input type=\"text\" place-holder=\"Type here\" /&gt;&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/div&gt;\u200b\n</code></pre>\n\n<p>So basically, I want it to not close on click of the dropdown (but close on click of the action button or outside the dropdown). My best guess so far was to add a class to it and try to do some JS, but I couldn't figure it out. </p>\n\n<p>Thanks for any help. </p>\n",
            "last_activity_date": 1420472630,
            "question_id": 11617048,
            "score": 28,
            "tags": [
                "javascript",
                "drop-down-menu",
                "twitter-bootstrap"
            ],
            "title": "Stop just one dropdown toggle from closing on click"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Thats not possible afaik. What you could try is to remove that style and set it using javascript after you got the height. Not the most elegant solution, but i think its the only one.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Well, you cannot do it that way, but it's possible when adding a  inner element to your container, like this:</p>\n\n<pre><code>&lt;div id=\"element\" style=\"height: 20px; overflow: hidden;\"&gt;\n    &lt;p id=\"innerElement\"&gt; &lt;!-- notice this inner element --&gt;\n        content&lt;br /&gt;content&lt;br /&gt;content&lt;br /&gt;\n        content&lt;br /&gt;content&lt;br /&gt;content&lt;br /&gt;\n        content&lt;br /&gt;content&lt;br /&gt;content&lt;br /&gt;\n    &lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><em>sidenote:</em> wrapping content inside paragraphs is a good practice too, plus that one extra element isn't giving that much of problems, if any at all...</p>\n\n<p>And JavaScript:</p>\n\n<pre><code>var innerHeight = document.getElementById('innerElement').offsetHeight;\nalert(innerHeight);\n</code></pre>\n\n<p>P.S. For this JavaScript to work, put it after your <code>#element</code> div, because plain JavaScript is executed before DOM is ready if it's not instructed to do so. To make this work when DOM is ready, <a href=\"http://www.javascriptkit.com/dhtmltutors/domready.shtml\">check this</a>.</p>\n\n<p>But I'd suggest getting <a href=\"http://jquery.com/\">jQuery</a>, it will come in handy later on if you're going to extend JavaScript operations in your site. </p>\n\n<p>Plus, jQuery is <strong>the power</strong>, for real!</p>\n\n<p>That way, simply add this script to your <code>&lt;head /&gt;</code> (assuming you've jQuery included):</p>\n\n<pre><code>$(document).ready(function() {\n var innerHeight = $('#innerElement').height();\n alert(innerHeight);\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/psycketom/Gm3nK/\">Example @jsFiddle using jQuery way!</a></p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>Here is one way to achieve what you need, using Fabian idea:</p>\n\n<pre><code>function GetHeight() {\n    var oDiv = document.getElementById(\"MyDiv\");\n    var sOriginalOverflow = oDiv.style.overflow;\n    var sOriginalHeight = oDiv.style.height;\n    oDiv.style.overflow = \"\";\n    oDiv.style.height = \"\";\n    var height = oDiv.offsetHeight;\n    oDiv.style.height = sOriginalHeight;\n    oDiv.style.overflow = sOriginalOverflow;\n    alert(\"Real height is \" + height);\n}\n</code></pre>\n\n<p>Live demo and test case: <a href=\"http://jsfiddle.net/yahavbr/7Lbz9/\">http://jsfiddle.net/yahavbr/7Lbz9/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>This works in all cases, whether you have a text node inside or a container. This is using jquery, but you don't need to.</p>\n\n<pre>\n<code>//return the total height.\ntotalHeight = $('#elem')[0].scrollHeight;\n//return the clipped height.\nvisibleHeight = $('#elem').height();</code>\n</pre>\n\n<p>$('#elem')[0] is returning the dom element from the jquery call. so you can use that on any dom elem using plain ol' javascript.</p>\n",
                    "is_accepted": false,
                    "score": 17
                }
            ],
            "body": "<p>How do I get the height of the div which includes the clipped area of the div ?</p>\n\n<pre><code>&lt;div style=\"height: 20px; overflow: hidden\"&gt;\n  content&lt;br&gt;content&lt;br&gt;content&lt;br&gt;\n  content&lt;br&gt;content&lt;br&gt;content&lt;br&gt;\n  content&lt;br&gt;content&lt;br&gt;content&lt;br&gt;\n&lt;/div&gt;\n</code></pre>\n",
            "last_activity_date": 1349950569,
            "question_id": 4612992,
            "score": 28,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Get full height of a clipped DIV"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can't achieve this using standard input control. Common techniques include validating this on the server side or use some Flash upload control which allows more customizations. Also bare in mind that verifying the file extension is a necessary but not a sufficient condition that a file is image. There's nothing preventing the user from renaming an executable to <code>.jpg</code> for example.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Use the <strong>accept</strong> parameter of the input tag. So to accept only pngs, jpegs and gifs you can use the following code :</p>\n\n<pre><code>&lt;input type=\"file\" name=\"imagefilename\" accept=\"image/x-png, image/gif, image/jpeg\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 80
                },
                {
                    "body": "<p>Using this:</p>\n\n<pre><code>&lt;input type=\"file\" accept=\"image/*\"&gt;\n</code></pre>\n\n<p>works in both FF and Chrome.</p>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction load_image(id,ext)\n{\n   if(validateExtension(ext) == false)\n   {\n      alert(\"Upload only JPEG or JPG format \");\n      document.getElementById(\"imagePreview\").innerHTML = \"\";\n      document.getElementById(\"file\").focus();\n      return;\n   }\n}\n\nfunction validateExtension(v)\n{\n      var allowedExtensions = new Array(\"jpg\",\"JPG\",\"jpeg\",\"JPEG\");\n      for(var ct=0;ct&lt;allowedExtensions.length;ct++)\n      {\n          sample = v.lastIndexOf(allowedExtensions[ct]);\n          if(sample != -1){return true;}\n      }\n      return false;\n}\n&lt;/script&gt;\n\n\n&lt;div id=\"imagePreview\"&gt;&lt;/div&gt;\n   &lt;br&gt;&lt;input type=\"file\" id=\"recentphoto\" class=\"custom-file-input\" name=\"new_image\"   accept=\"image/jpg, image/JPG,image/JPEG, image/jpeg\" required=\"required\"  onChange=\"load_image(this.id,this.value)\" /&gt;\n   &lt;br /&gt;\n   &lt;br /&gt;\n &lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>I need to upload a file which is an image. I am using <code>&lt;input type=\"file\"&gt;</code>. </p>\n\n<p>However, this accepts all types of files. </p>\n\n<p>I need only files with extensions such as <code>.jpg</code>, <code>.gif</code> etc . </p>\n\n<p>How can I make the upload dialogue allow selection of only image files. </p>\n",
            "last_activity_date": 1420409014,
            "question_id": 3828554,
            "score": 28,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "How to allow input type=file to accept only image files"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p><a href=\"http://msdn.microsoft.com/en-us/library/adwtk1fy.aspx\"><code>HttpUtility.UrlDecode</code></a> should do the trick.</p>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p><code>escape()</code> is equivalent to</p>\n\n<pre><code>HttpUtility.UrlDecode(str, System.Text.Encoding.Default);\n</code></pre>\n\n<hr>\n\n<p>By default the <code>UrlDecode</code> uses UTF8 while <code>escape()</code> don't.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Aw man, why do we over-think stuff so much sometimes.\nWhen an API function is being silly, send a karma cuss at the library developer, then work-around it...</p>\n\n<pre><code>HttpUtility.UrlEncode(editext, System.Text.Encoding.Default).Replace(\"+\",\"%20\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I spent 8 hours trying to get </p>\n\n<pre><code>HttpUtility.UrlDecode \n</code></pre>\n\n<p>to work, and gave up and used </p>\n\n<pre><code>HttpUtility.HtmlDecode\n</code></pre>\n\n<p>which worked instantly. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>    internal static string UnJavascriptEscape(string s)\n    {\n        // undo the effects of JavaScript's escape function\n        return HttpUtility.UrlDecode(s.Replace(\"+\", \"%2b\"), Encoding.Default);\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>To unescape without having to reference System.Web in order to use HttpUtility, try this:</p>\n\n<pre><code>Str = Str.Replace(\"+\", \" \");\nStr = Regex.Replace(Str, \"%([A-Fa-f\\\\d]{2})\", a =&gt; \"\" + Convert.ToChar(Convert.ToInt32(a.Groups[1].Value, 16)));\n</code></pre>\n\n<p>Also, when I tried HttpUtility.UrlDecode, it didn't work for special characters &aacute;&eacute;&iacute;&oacute;&uacute;&ntilde;.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is the best way I found to work with these:</p>\n\n<p>Encode in C#:</p>\n\n<pre><code>System.Uri.EscapeDataString(\"&lt;string&gt;\");\n</code></pre>\n\n<p>Decode in JavaScript:</p>\n\n<pre><code>decodeURI(\"&lt;string&gt;\");\n</code></pre>\n\n<p>Encode in JavaScript:</p>\n\n<pre><code>encodeURI(\"&lt;string&gt;\");\n</code></pre>\n\n<p>Decode in C#:</p>\n\n<pre><code>System.Uri.UnescapeDataString(\"&lt;string&gt;\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Are the any functions in C# that handle escape/unescape like JavaScript?</p>\n\n<p>I have a JSON string like this:</p>\n\n<p><code>{\"Feeds\":[{\"Url\":\"www.test.com\",\"FeedType\":\"Twitter\"},{\"Url\":\"www.test2.com\",\"FeedType\":\"Youtube\"}]}</code></p>\n\n<p>Which looks like this after <code>escape()</code></p>\n\n<p><code>%7B%22Feeds%22%3A%5B%7B%22Url%22%3A%22www.test.com%22%2C%22FeedType%22%3A%22Twitter%22%7D%2C%7B%22Url%22%3A%22www.test2.com%22%2C%22FeedType%22%3A%22Youtube%22%7D%5D%7D</code></p>\n\n<p>In my C# code I would like to unescape this string so that it looks exactly the same as it did before the <code>escape()</code></p>\n\n<p>Is this possible?</p>\n",
            "last_activity_date": 1365712913,
            "question_id": 3778165,
            "score": 27,
            "tags": [
                "c#",
                "javascript",
                "asp.net"
            ],
            "title": "Unescape JavaScript&#39;s escape() using C#"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You can test the <code>constructor</code> property:</p>\n\n<pre><code>if (param.constructor == Array) {\n    ...\n}\n</code></pre>\n\n<p>Though this will include objects that have an array prototype, </p>\n\n<pre><code>function Stack() {\n}\nStack.prototype = [];\n</code></pre>\n\n<p>unless they also define constructor:</p>\n\n<pre><code>Stack.prototype.constructor = Stack;\n</code></pre>\n\n<p>or:</p>\n\n<pre><code>function Stack() {\n    this.constructor = Stack;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I found this <a href=\"http://www.bram.us/2008/02/01/javascript-isarray-check-if-an-elementobject-is-an-array/\" rel=\"nofollow\">here</a>: </p>\n\n<pre><code>function isArray(obj) {\n    return obj.constructor == Array; \n}\n</code></pre>\n\n<p>also this one</p>\n\n<pre><code>function isArray(obj) {\n    return (obj.constructor.toString().indexOf(\u201dArray\u201d) != -1);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>if (param instanceof Array)\n    ...\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>This is the approach jQuery 1.4.2 uses:</p>\n\n<pre><code>var toString = param.prototype.toString;\nvar isArray = function(obj) {\n        return toString.call(obj) === \"[object Array]\";\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Some <a href=\"http://gist.github.com/369052\" rel=\"nofollow\">days ago</a> I was building a simple <em>type detection</em> function, maybe its useful for you:</p>\n\n<p>Usage:</p>\n\n<pre><code>//...\nif (typeString(obj) == 'array') {\n  //..\n}\n</code></pre>\n\n<p>Implementation:</p>\n\n<pre><code>function typeString(o) {\n  if (typeof o != 'object')\n    return typeof o;\n\n  if (o === null)\n      return \"null\";\n  //object, array, function, date, regexp, string, number, boolean, error\n  var internalClass = Object.prototype.toString.call(o)\n                                               .match(/\\[object\\s(\\w+)\\]/)[1];\n  return internalClass.toLowerCase();\n}\n</code></pre>\n\n<p>The <a href=\"http://gist.github.com/369052#file_type_string_no_host_types.js\" rel=\"nofollow\">second variant</a> of this function is more strict, because it returns only object types described in the ECMAScript specification (possible output values: <code>\"object\"</code>, <code>\"undefined\"</code>, <code>\"null\"</code>, and <code>\"function\"</code>, <code>\"array\"</code>, <code>\"date\"</code>, <code>\"regexp\"</code>, <code>\"string\"</code>, <code>\"number\"</code>, <code>\"boolean\"</code> <code>\"error\"</code>, using the <a href=\"http://bclary.com/2004/11/07/#a-8.6.2\" rel=\"nofollow\"><code>[[Class]]</code></a> internal property).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<h3>Duck Typying</h3>\n\n<p>Actually, you don't necessarily want to check that an object is an array. You should <a href=\"http://en.wikipedia.org/wiki/Duck_typing\" rel=\"nofollow\">duck type</a> it and the only thing you want that object to implement is the <code>length</code> property. After this you can transform it into an array:</p>\n\n<pre><code>var arrayLike = {\n    length : 3,\n\n    0: \"foo\"\n};\n\n// transform object to array\nvar array = Array.prototype.slice.call(arrayLike);\n\nJSON.stringify(array); // [\"foo\", null, null]\n</code></pre>\n\n<p><code>Array.prototype.slice.call(object)</code> will transform into an array every object that exposes a <code>length</code> property. In the case of strings for example:</p>\n\n<pre><code>var array = Array.prototype.slice.call(\"123\");\nJSON.stringify(array); // [\"1\", \"2\", \"3\"]\n</code></pre>\n\n<p>Well, this technique it's not quite working on IE6 (I don't know about later versions), but it's easy to create a small utility function to transform objects in arrays.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/1058427/how-to-detect-if-a-variable-is-an-array\">How to detect if a variable is an array</a>  </p>\n</blockquote>\n\n\n\n<p>I have a simple question:</p>\n\n<p>How do I detect if a parameter passed to my javascript function is an array? I don't believe that I can test:</p>\n\n<pre><code>if (typeof paramThatCouldBeArray == 'array') \n</code></pre>\n\n<p>So is it possible?</p>\n\n<p>How would I do it?</p>\n\n<p>Thanks in advance.</p>\n",
            "last_activity_date": 1272963763,
            "question_id": 2763024,
            "score": 27,
            "tags": [
                "javascript",
                "arrays",
                "arguments",
                "parameter-passing"
            ],
            "title": "Detect if parameter passed is an array? Javascript"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>You can use first jQuery.merge() and then jQuery.unique() to achieve this. merge() will add all the items in one array and unique() will remove the duplicates from that array.</p>\n\n<p><a href=\"http://api.jquery.com/jQuery.merge/\" rel=\"nofollow\">http://api.jquery.com/jQuery.merge/</a></p>\n\n<p><a href=\"http://api.jquery.com/jQuery.unique/\" rel=\"nofollow\">http://api.jquery.com/jQuery.unique/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>i just about always use underscore.js because it has such good support for arrays and \"map reduce\" which this problem can be solved with.</p>\n\n<p>here is a fiddle with a solution for your question  ( it assumes there is only one question per user as your original post suggests)</p>\n\n<p><a href=\"http://jsfiddle.net/x5Z7f/\" rel=\"nofollow\">http://jsfiddle.net/x5Z7f/</a></p>\n\n<p>(open the browser console to see the output)</p>\n\n<pre><code>    var userProfiles = [{ id:'1', name:'john' }, { id:'2', name:'mary' }];\n\nvar questions =[ { id:'1', text:'question john', createdBy:'1' }, { id:'2', text:'question mary', createdBy:'2' }];\n\nvar rows = _.map(userProfiles, function(user){ \n    var question = _.find(questions, function(q){ return q.createdBy == user.id });\n    user.text = question? question.text:'';\n    return user; \n})\n\n_.each(rows, function(row){ console.log(row) });\n</code></pre>\n\n<p>the above answer assumes you are using id == createdBy as the joining column.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I don't know any built-in function allowing to do so.</p>\n\n<p>You can program your own function, something similar to <a href=\"http://jsfiddle.net/FrsbL/2/\" rel=\"nofollow\">this jsFiddle</a> :</p>\n\n<pre><code>var userProfiles = [{id:1, name:'name1'},{id:2,name:'name2'}];\n    var questions = [\n        {id:1, text:'text1', createdBy:'foo'},\n        {id:1, text:'text2', createdBy:'bar'},\n        {id:2, text:'text3', createdBy:'foo'}];\n\n    merged = mergeMyArrays(userProfiles,questions);\n\n    console.log(merged);\n    /**\n     * This will give you an array like this:\n     * [{id:1, name:name1, text:text1}, {...]\n     * params : 2 arrays to merge by id\n     */\n    function mergeMyArrays(u,q){\n        var ret = [];\n        for(var i = 0, l = u.length; i &lt; l; i++){\n            var curU = u[i];\n            for(var j = 0, m = q.length; j&lt;m; j++){\n                if(q[j].id == curU.id){\n                    ret.push({\n                        id: curU.id,\n                        name: curU.name,\n                        text: q[j].text\n                    });\n                }\n            }\n        }\n        return ret;\n    }\n</code></pre>\n\n<p>Or if you want a better \"join\" (SQL-y) :</p>\n\n<pre><code>var userProfiles = [{id:1, name:'name1'},{id:2,name:'name2'}];\nvar questions = [\n    {id:1, text:'text1', createdBy:'foo'},\n    {id:1, text:'text2', createdBy:'bar'},\n    {id:2, text:'text3', createdBy:'foo'}];\n\nmerged = mergeMyArrays(userProfiles,questions);\n\nconsole.log(merged);\n/**\n * This will give you an array like this:\n * [{id:1, name:name1, questions:[{...}]]\n * params : 2 arrays to merge by id\n */\nfunction mergeMyArrays(u,q){\n    var ret = [];\n    for(var i = 0, l = u.length; i &lt; l; i++){\n        var curU = u[i],\n            curId = curU.id,\n            tmpObj = {id:curId, name:curU.name, questions:[]};\n        for(var j = 0, m = q.length; j&lt;m; j++){\n            if(q[j].id == curId){\n                tmpObj.questions.push({\n                    text: q[j].text,\n                    createdBy: q[j].createdBy\n                });\n            }\n        }\n        ret.push(tmpObj);\n    }\n    return ret;\n}\n</code></pre>\n\n<p>Like in <a href=\"http://jsfiddle.net/FrsbL/1/\" rel=\"nofollow\">this jsFiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>all u want is the <code>ResultArray</code> calculated below:  </p>\n\n<pre><code>    var userProfiles1= new Array(1, \"ashok\");\n    var userProfiles2= new Array(2, \"amit\");\n    var userProfiles3= new Array(3, \"rajeev\");\n\n    var UArray = new Array(userProfiles1, userProfiles2, userProfiles3);\n\n    var questions1= new Array(1, \"text1\", 2);\n    var questions2= new Array(2, \"text2\", 2);\n    var questions3= new Array(3, \"text3\", 1);\n    var questions4= new Array(4, \"text4\", 2);\n    var questions5= new Array(5, \"text5\", 3);\n    var questions6= new Array(6, \"text6\", 3);\n\n    var QArray = new Array(questions1, questions2, questions3, questions4, questions5, questions6);\n\n    var ResultArray = new Array();\n\n    for (var i=0; i&lt;UArray.length; i++)\n    {\n        var uid = UArray[i][0];\n        var name = UArray[i][1];\n\n        for(var j=0; j&lt;QArray.length; j++)\n        {\n            if(uid == QArray[j][2])\n            {\n                 var qid = QArray[j][0]\n                 var text = QArray[j][1];\n\n                 ResultArray.push(qid +\",\" + text +\",\"+ name)\n            }\n        }    \n    }\n\nfor(var i=0; i&lt;ResultArray.length; i++)\n    {\n        document.write(ResultArray[i] + \"&lt;br&gt;\")\n    }\n</code></pre>\n\n<p>demo : <a href=\"http://jsfiddle.net/VqmVv/\" rel=\"nofollow\">http://jsfiddle.net/VqmVv/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If it were me, I'd approach this in the following manner:</p>\n\n<p>The set-up:</p>\n\n<pre><code>var userProfiles = [], questions = [];\n\nuserProfiles.push( {id:1, name:'test'} );\nuserProfiles.push( {id:2, name:'abc'} );\nuserProfiles.push( {id:3, name:'def'} );\nuserProfiles.push( {id:4, name:'ghi'} );\n\nquestions.push( {id:1, text:'monkey', createdBy:1} );\nquestions.push( {id:2, text:'Monkey', createdBy:1} );\nquestions.push( {id:3, text:'big',    createdBy:2} );\nquestions.push( {id:4, text:'string', createdBy:2} );\nquestions.push( {id:5, text:'monKey', createdBy:3} );\n</code></pre>\n\n<p>First, would be to create a look-up object, where the linking id is used as a key</p>\n\n<pre><code>var createObjectLookup = function( arr, key ){\n  var i, l, obj, ret = {};\n  for ( i=0, l=arr.length; i&lt;l; i++ ) {\n    obj = arr[i];\n    ret[obj[key]] = obj;\n  }\n  return ret;\n};\n\nvar up = createObjectLookup(userProfiles, 'id');\n</code></pre>\n\n<p>Now that you have this, it should be easy to step through the questions, and find your user object to merge:</p>\n\n<pre><code>var i, l, question, user, result = [];\nfor ( i=0, l=questions.length; i&lt;l; i++ ) {\n  if ( (question = questions[i]) &amp;&amp; (user = up[question.createdBy]) ) {\n    result.push({\n      id: question.id,\n      text: question.text,\n      name: user.name\n    });\n  }\n}\n</code></pre>\n\n<p>You should now have everything you need in <code>result</code></p>\n\n<pre><code>console.log(result);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I think what you want is an <a href=\"http://en.wikipedia.org/wiki/Join_%28SQL%29#Inner_join\">inner join</a>, which is simple enough to implement in JavaScript:</p>\n\n<pre><code>function innerJoin(a, b, select) {\n    var m = a.length, n = b.length, c = [];\n\n    for (var i = 0; i &lt; m; i++) {\n        var x = a[i];\n\n        for (var j = 0; j &lt; n; j++) { // cartesian product - all combinations\n            var y = select(x, b[j]);  // filter out the rows and columns you want\n            if (y) c.push(y);         // if a row is returned add it to the table\n        }\n    }\n\n    return c;\n}\n</code></pre>\n\n<p>For the purpose of demonstration we'll use the following data set (thank you @AshokDamani):</p>\n\n<pre><code>var userProfiles = [\n    {id: 1, name: \"Ashok\"},\n    {id: 2, name: \"Amit\"},\n    {id: 3, name: \"Rajeev\"}\n];\n\nvar questions = [\n    {id: 1, text: \"text1\", createdBy: 2},\n    {id: 2, text: \"text2\", createdBy: 2},\n    {id: 3, text: \"text3\", createdBy: 1},\n    {id: 4, text: \"text4\", createdBy: 2},\n    {id: 5, text: \"text5\", createdBy: 3},\n    {id: 6, text: \"text6\", createdBy: 3}\n];\n</code></pre>\n\n<p>This is how you would use it:</p>\n\n<pre><code>var c = innerJoin(userProfiles, questions, function (userProfile, question) {\n    if (question.createdBy === userProfile.id) {\n        return {\n            id: question.id,\n            text: question.text,\n            name: userProfile.name\n        };\n    }\n});\n</code></pre>\n\n<p>In SQL terms this would be similar to:</p>\n\n<pre><code>SELECT questions.id, questions.text, userProfiles.name\nFROM userProfiles INNER JOIN questions\nON questions.createdBy = userProfiles.id;\n</code></pre>\n\n<p>Here's the working demo: <a href=\"http://jsfiddle.net/zvHVv/\">http://jsfiddle.net/zvHVv/</a></p>\n\n<hr>\n\n<p><strong>Edit:</strong> However this is not the best solution. Since the above solution loops through the <a href=\"http://en.wikipedia.org/wiki/Cartesian_product\">Cartesian product</a> it takes <code>O(m \u00d7 n)</code> time to run. With a little bit of modification we can make it run in <code>O(m + n)</code> time - @pebbl <a href=\"http://stackoverflow.com/a/17500750/783743\">found it first</a>:</p>\n\n<pre><code>function equijoin(primary, foreign, primaryKey, foreignKey, select) {\n    var m = primary.length, n = foreign.length, index = [], c = [];\n\n    for (var i = 0; i &lt; m; i++) {     // loop through m items\n        var row = primary[i];\n        index[row[primaryKey]] = row; // create an index for primary table\n    }\n\n    for (var j = 0; j &lt; n; j++) {     // loop through n items\n        var y = foreign[j];\n        var x = index[y[foreignKey]]; // get corresponding row from primary\n        c.push(select(x, y));         // select only the columns you need\n    }\n\n    return c;\n}\n</code></pre>\n\n<p>Now you could use it as follows:</p>\n\n<pre><code>var c = equijoin(userProfiles, questions, \"id\", \"createdBy\", function (a, b) {\n    return {\n        id: b.id,\n        text: b.text,\n        name: a.name\n    };\n});\n</code></pre>\n\n<p>See the demo here: <a href=\"http://jsfiddle.net/zvHVv/1/\">http://jsfiddle.net/zvHVv/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>This is my attempt to make a somehow generic solution. I'm using <code>Array.map</code> and the <code>Array.index</code> methods here:</p>\n\n<pre><code>var arr1 = [\n    {id: 1, text:\"hello\", oid:2},\n    {id: 2, text:\"juhu\", oid:3},\n    {id: 3, text:\"wohoo\", oid:4},\n    {id: 4, text:\"yeehaw\", oid:1}\n];\nvar arr2 = [\n    {id: 1, name:\"yoda\"},\n    {id: 2, name:\"herbert\"},\n    {id: 3, name:\"john\"},\n    {id: 4, name:\"walter\"},\n    {id: 5, name:\"clint\"}\n];\n\nfunction merge(arr1, arr2, prop1, prop2) {\n    return arr1.map(function(item){\n        var p = item[prop1];\n        el = arr2.filter(function(item) {\n            return item[prop2] === p;\n        });\n        if (el.length === 0) {\n            return null;\n        }\n        var res = {};\n        for (var i in item) {\n            if (i !== prop1) {\n                res[i] = item[i];\n            }\n        }\n        for (var i in el[0]) {\n            if (i !== prop2) {\n                res[i] = el[0][i];\n            }\n        }\n        return res;\n    }).filter(function(el){\n        return el !== null;\n    });\n}\n\nvar res = merge(arr1, arr2, \"oid\", \"id\");\nconsole.log(res);\n</code></pre>\n\n<p>So basically you can define two arrays and one property for each array, so that prop1 will be replaced with all the properties of an item in array2 whose prop2 is equal to prop1.</p>\n\n<p>The result in this case would be:</p>\n\n<pre><code>var res = [\n    {id: 1, text:\"hello\", name:\"herbert\"},\n    {id: 2, text:\"juhu\", name:\"john\"},\n    {id: 3, text:\"wohoo\", name:\"walter\"},\n    {id: 4, text:\"yeehaw\", name:\"yoda\"}\n];\n</code></pre>\n\n<p>Note that if there is more then one match, the first item will be used and if there is no match, the object will be removed from the resulting array.</p>\n\n<p><strong><a href=\"http://jsfiddle.net/c6Wb9/\" rel=\"nofollow\">FIDDLE</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just wanted to share some generic code:</p>\n\n<pre><code>// Create a cartesian product of the arguments.\n// product([1,2],['a','b'],['X']) =&gt; [[1,\"a\",\"X\"],[1,\"b\",\"X\"],[2,\"a\",\"X\"],[2,\"b\",\"X\"]]\n// Accepts any number of arguments.\nproduct = function() {\n    if(!arguments.length)\n        return [[]];\n    var p = product.apply(null, [].slice.call(arguments, 1));\n    return arguments[0].reduce(function(r, x) {\n        return p.reduce(function(r, y) {\n            return r.concat([[x].concat(y)]);\n        }, r);\n    }, []);\n}\n</code></pre>\n\n<p>Your problem:</p>\n\n<pre><code>result = product(userProfiles, questions).filter(function(row) {\n    return row[0].id == row[1].createdBy;\n}).map(function(row) {\n    return {\n        userName: row[0].name,\n        question: row[1].text\n    }\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can do this using <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\" rel=\"nofollow\">reduce</a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\" rel=\"nofollow\">map</a>.</p>\n\n<p>First, create a mapping from IDs to names:</p>\n\n<pre><code>var id2name = userProfiles.reduce(function(id2name, profile){\n    id2name[profile.id] = profile.name;\n    return id2name;\n}, {});\n</code></pre>\n\n<p>Second, create a new array of questions but with the name of the user who created the question in place of their ID:</p>\n\n<pre><code>var qs = questions.map(function(q){\n    q.createdByName = id2name[q.createdBy];\n    delete q.createdBy;\n    return q;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This seems to be an important general-purpose question, and although there are many answers, some have borderline behavior like modifying the existing data, solving a completely different problem than the issue at hand, using up to 93,057 bytes of JavaScript (not to mention producing the wrong result), producing overly complex additional nesting of data structures, requiring a lot of code on each invocation, and most seriously, not being a self-contained solution to the important more general-purpose problem at the heart of this question.</p>\n\n<p>So for better or for worse, I wrote a shim that extends the JavaScript <code>Array</code> object with a method <code>.joinWith</code> intended to be used in order to join <code>this</code> array of objects with <code>that</code> array of objects, <code>by</code> a common indexing field. It is possible to <code>select</code> a list of fields desired in output (good for merging arrays of objects with many fields when only a few are wanted) or to <code>omit</code> a list of fields in output (good for merging arrays of objects when most fields are desired but a few are not).</p>\n\n<p>The shim code isn't made to look pretty, so it will be at the end, with the example of how to use it for the OP's particular kind of data coming first:</p>\n\n<pre><code>/* this line will produce the array of objects as desired by the OP */\njoined_objects_array = userProfiles.joinWith(questions, 'id', ['createdBy'], 'omit');\n\n/* edit: I just want to make 100% sure that this solution works for you, i.e.,\n *       does exactly what you need. I haven't seen your actual data, so it's\n *       possible that your IDs are are not in common, (i.e., your createdBy\n *       is in common like you said, but not the IDs, and if so you could\n *       morph your data first like this:\n * questions.map(function(x) { x.id = x.createdBy; });\n *       before joining the arrays of objects together.\n *\n */\n</code></pre>\n\n<p>The following code is for demonstration:</p>\n\n<pre><code>var array1 = [{ id: 3124, name: 'Mr. Smith' },\n              { id: 710, name: 'Mrs. Jones' }];\nvar array2 = [{ id: 3124, text: 'wow', createdBy: 'Mr. Jones' },\n              { id: 710, text: 'amazing' }];\n\nvar results_all = array1.joinWith(array2, 'id');\n\n// [{id:3124, name:\"Mr. Smith\", text:\"wow\", createdBy:\"Mr. Jones\"},\n// {id:710, name:\"Mrs. Jones\", text:\"amazing\"}]*\n\nvar results_selected = array1.joinWith(array2, 'id', ['id', 'text', 'name']);\n\n// [{id:3124, name:\"Mr. Smith\", text:\"wow\"},\n// {id:710, name:\"Mrs. Jones\", text:\"amazing\"}]*\n\n/* or equivalently, */\nvar results_omitted = array1.joinWith(array2, 'id', ['createdBy'], 1);\n\n// [{id:3124, name:\"Mr. Smith\", text:\"wow\"},\n// {id:710, name:\"Mrs. Jones\", text:\"amazing\"}]*\n</code></pre>\n\n<p>There are some other nice things this solution does (one of them is preserving the ability to access the resulting data by its indexing key, despite returning an array).</p>\n\n<p>Enjoy!</p>\n\n<pre><code>/* Array.joinWith - shim by Joseph Myers 7/6/2013 */\n\n\nif (!Array.prototype.joinWith) {\n    +function () {\n        Array.prototype.joinWith = function(that, by, select, omit) {\n            var together = [], length = 0;\n            if (select) select.map(function(x){select[x] = 1;});\n            function fields(it) {\n                var f = {}, k;\n                for (k in it) {\n                    if (!select) { f[k] = 1; continue; }\n                    if (omit ? !select[k] : select[k]) f[k] = 1;\n                }\n                return f;\n            }\n            function add(it) {\n                var pkey = '.'+it[by], pobj = {};\n                if (!together[pkey]) together[pkey] = pobj,\n                    together[length++] = pobj;\n                pobj = together[pkey];\n                for (var k in fields(it))\n                    pobj[k] = it[k];\n            }\n            this.map(add);\n            that.map(add);\n            return together;\n        }\n    }();\n}\n</code></pre>\n\n<p>Documentation:</p>\n\n<pre><code>        /* this and that both refer to an array of objects, each containing\n           object[by] as one of their fields */\n        /*\n         N.B. It is the responsibility of the user of this method\n         to ensure that the contents of the [by] fields are\n         consistent with each other between the two arrays!\n        */\n        /* select is an array of field names to be included in the resulting\n           objects--all other fields will be excluded, or, if the Boolean value\n           of omit evaluates to true, then select is an array of field names to\n           be excluded from the resulting objects--all others will be included.\n        */\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 3
                }
            ],
            "body": "<p>I have two arrays: Question and UserProfile</p>\n\n<ul>\n<li>The <code>userProfiles</code>: [] array contain <code>{ id, name }</code> objects</li>\n<li>The <code>questions</code>: [] array contains <code>{ id, text, createdBy }</code> objects</li>\n</ul>\n\n<p>The <code>createdBy</code> integer in questions is always one of the id values in <code>userProfiles</code>. </p>\n\n<p>Is there a way I could \"join\" the arrays in much the same way as I would join up two SQL tables if I was using a database.</p>\n\n<p>What I need as an end result is an array that contains</p>\n\n<pre><code>{ id, text, name }\n</code></pre>\n",
            "last_activity_date": 1373257024,
            "question_id": 17500312,
            "score": 26,
            "tags": [
                "javascript"
            ],
            "title": "Is there some way I can &quot;join&quot; the contents of two javascript arrays much like I would do a join in SQL"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The <a href=\"https://developer.mozilla.org/en-US/docs/DOM/Storage\">MDN documentation</a> shows how the <code>getItem</code> method is implementated:</p>\n\n<pre><code>Object.defineProperty(oStorage, \"getItem\", {\n      value: function (sKey) { return sKey ? this[sKey] : null; },\n      writable: false,\n      configurable: false,\n      enumerable: false\n    });\n</code></pre>\n\n<p>If the value isn't set, it returns <code>null</code>. You are testing to see if it is <code>undefined</code>. Check to see if it is <code>null</code> instead.</p>\n\n<pre><code>if(localStorage.getItem(\"username\") === null){\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Quoting from the <a href=\"http://www.w3.org/TR/webstorage/#dom-storage-getitem\">specification</a>:</p>\n\n<blockquote>\n  <p>The getItem(key) method must return the current value associated with the given key. If the given key does not exist in the list associated with the object then this method must <strong>return null.</strong></p>\n</blockquote>\n\n<p>You should actually check against <code>null</code>. </p>\n\n<pre><code>if (localStorage.getItem(\"username\") === null) {\n  //...\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 62
                },
                {
                    "body": "<p>This method work for me:</p>\n\n<pre><code>if(\"username\" in localStorage){\n    alert('yes');\n} else {\n   alert('no');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Another way is: </p>\n\n<pre><code>if (localStorage[\"username\"]) {\n  //\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Why this does not work ? </p>\n\n<pre><code>if(typeof(localStorage.getItem(\"username\"))=='undefined'){\n    alert('no');\n};\n</code></pre>\n\n<p>The goal is to redirect the user from the index page to the login page if not already logged.\nHere the <code>localStorage.getItem(\"username\"))</code> variable is not defined for the moment.</p>\n\n<p>It's for an ios phonegap app.</p>\n",
            "last_activity_date": 1409028891,
            "question_id": 16010827,
            "score": 26,
            "tags": [
                "javascript",
                "html5",
                "cordova",
                "local-storage"
            ],
            "title": "HTML5 LocalStorage: Checking if a key exists"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>In short, its a design conflict to implement that method.</p>\n\n<p>From MDN:</p>\n\n<blockquote>\n  <h1>Why can't I use forEach or map on a NodeList?</h1>\n  \n  <p>NodeList are used very much like arrays and it would be tempting to\n  use Array.prototype methods on them. This is, however, impossible.</p>\n  \n  <p>JavaScript has an inheritance mechanism based on prototypes. Array\n  instances inherit array methods (such as forEach or map) because their\n  prototype chain looks like the following:</p>\n  \n  <p><code>myArray --&gt; Array.prototype --&gt; Object.prototype --&gt; null</code> (the\n  prototype chain of an object can be obtained by calling several times\n  Object.getPrototypeOf)</p>\n  \n  <p>forEach, map and the likes are own properties of the Array.prototype\n  object.</p>\n  \n  <p>Unlike arrays, NodeList prototype chain looks like the following:</p>\n  \n  <p><code>myNodeList --&gt; NodeList.prototype --&gt; Object.prototype --&gt; null</code></p>\n  \n  <p>NodeList.prototype contains the item method, but none of the\n  Array.prototype methods, so they cannot be used on NodeLists.</p>\n</blockquote>\n\n<p>Source: <a href=\"https://developer.mozilla.org/en-US/docs/DOM/NodeList\">https://developer.mozilla.org/en-US/docs/DOM/NodeList</a> (scroll down to <strong>Why can't I use forEach or map on a NodeList?</strong>)</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>NodeList is part of the DOM API. Look at the ECMAScript bindings which apply to JavaScript as well. <a href=\"http://www.w3.org/TR/DOM-Level-2-Core/ecma-script-binding.html\" rel=\"nofollow\">http://www.w3.org/TR/DOM-Level-2-Core/ecma-script-binding.html</a>. The nodeList and a read-only length property and item(index) function to return a node. </p>\n\n<p>The answer is, you have to iterate. There is no alternative. Foreach will not work.\nI work with Java DOM API bindings and have the same problem. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can consider creating a new array of nodes. </p>\n\n<pre><code>  var nodeList = document.getElementsByTagName('div'),\n\n      nodes = Array.prototype.slice.call(nodeList,0); \n\n  // nodes is an array now.\n  nodes.forEach(function(node){ \n\n       // do your stuff here.  \n\n  });\n</code></pre>\n\n<p>Note: This is just a list/array of node references we are creating here, no duplicate nodes.</p>\n\n<pre><code>  nodes[0] === nodeList[0] // will be true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>You can do</p>\n\n<pre><code>Array.prototype.forEach.call (nodeList, function (node) {\n\n    // Your code here.\n\n} );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>If you would like using forEach on NodeList, just copy that function from Array:</p>\n\n<pre><code>NodeList.prototype.forEach = Array.prototype.forEach;\n</code></pre>\n\n<p>Thats all, now you can use it at the same manner you would for Array:</p>\n\n<pre><code>document.querySelectorAll('td').forEach(function(o){\n   o.innerHTML = 'text';\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>None of these answers explain <em>why</em> NodeList doesn't inherit from Array, thus allowing it to have <code>forEach</code> and all the rest.</p>\n\n<p>The answer is found <a href=\"https://esdiscuss.org/topic/why-does-legacy-content-break-when-making-array-likes-real-arrays\">on this es-discuss thread</a>. In short, it breaks the web:</p>\n\n<blockquote>\n  <p>The problem was code that incorrectly assumed instanceof to mean that the instance was an Array in combination with Array.prototype.concat.</p>\n  \n  <p>There was a bug in Google's Closure Library which caused almost all Google's apps to fail due to this. The library was updated as soon as this was found but there might still be code out there that makes the same incorrect assumption in combination with concat.</p>\n</blockquote>\n\n<p>That is, some code did something like</p>\n\n<pre><code>if (x instanceof Array) {\n  otherArray.concat(x);\n} else {\n  doSomethingElseWith(x);\n}\n</code></pre>\n\n<p>However, <code>concat</code> will treat \"real\" arrays (not instanceof Array) differently from other objects:</p>\n\n<pre><code>[1, 2, 3].concat([4, 5, 6]) // [1, 2, 3, 4, 5, 6]\n[1, 2, 3].concat(4) // [1, 2, 3, 4]\n</code></pre>\n\n<p>so that means that the above code broke when <code>x</code> was a NodeList, because before it went down the <code>doSomethingElseWith(x)</code> path, whereas afterward it went down the <code>otherArray.concat(x)</code> path, which did something weird since <code>x</code> wasn't a real array.</p>\n\n<p>Fortunately, there is hope. The DOM standard now includes an <a href=\"https://dom.spec.whatwg.org/#elements\">Elements class</a> that is a real subclass of array. This isn't implemented anywhere yet (largely because ES6 subclassing isn't implemented anywhere yet). But when it is, we'll finally have a good alternative to NodeList.</p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I was working on a short script to change <code>&lt;abbr&gt;</code> elements' inner text, but found that <code>nodelist</code> does not have a <code>forEach</code> method.  I know that <code>nodelist</code> doesn't inherit from <code>Array</code>, but doesn't it seem like <code>forEach</code> would be a useful method to have? Is there a particular implementation issue I am not aware of that prevents adding <code>forEach</code> to <code>nodelist</code>?</p>\n\n<p>Note: I am aware that Dojo and jQuery both have <code>forEach</code> in some form for their nodelists.  I cannot use either due to limitations.</p>\n",
            "last_activity_date": 1420771475,
            "question_id": 13433799,
            "score": 26,
            "tags": [
                "javascript",
                "foreach"
            ],
            "title": "Why doesn&#39;t nodelist have forEach?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I asked the same thing in the Mocha mailing list. They basically told me this : to write asynchronous test with Mocha and Chai :</p>\n\n<ul>\n<li>always start the test with <code>if (err) done(err);</code></li>\n<li>always end the test with <code>done()</code>. </li>\n</ul>\n\n<p>It solved my problem, and didn't change a single line of my code in-between (Chai expectations amongst other). The <code>setTimout</code> is not the way to do async tests.</p>\n\n<p>Here's the <a href=\"https://groups.google.com/forum/?fromgroups#!topic/mochajs/4tDByBROM1Y%5B1-25%5D\" rel=\"nofollow\">link to the discussion in the mailing list</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Your asynchronous test generates an exception, on failed expect()ation, that cannot be captured by it() because the exception is thrown outside of it()'s scope.</p>\n\n<p>The captured exception that you see displayed is captured using process.on( 'uncaughtException' ) under node or using window.onerror in the browser. </p>\n\n<p>To fix this issue, you need to capture the exception within the asynchronous function called by setTimeout() in order to call done() with the exception as the first parameter. You also need to call done() with no parameter to indicate success, otherwise mocha would report a timeout error because your test function would never have signaled that it was done():</p>\n\n<pre><code>window.expect = chai.expect;\ndescribe('my test', function() {\n  it( 'should do something', function (done) {\n    // done() is provided by it() to indicate asynchronous completion\n    // call done() with no parameter to indicate that it() is done() and successful\n    // or with an error to indicate that it() failed\n    setTimeout( function () {\n      // Called from the event loop, not it()\n      // So only the event loop could capture uncaught exceptions from here\n      try {\n        expect( true ).to.equal( false );\n        done()    // success: call done with no parameter to indicate that it() is done()\n      } catch( e ) {\n        done( e ) // failure: call done with an error Object to indicate that it() failed\n      }\n    }, 100 );\n    // returns immediately after setting timeout\n    // so it() can no longer catch exception happening asynchronously\n  }\n}\n</code></pre>\n\n<p>Doing so on all your test cases is annoying and not DRY so you might want to provide a function to do this for you. Let's call this function check():</p>\n\n<pre><code>function check( done, f ) {\n  try {\n    f()\n    done()\n  } catch( e ) {\n    done( e )\n  }\n}\n</code></pre>\n\n<p>With check() you can now rewrite your asynchronous tests as follows:</p>\n\n<pre><code>window.expect = chai.expect;\ndescribe('my test', function() {\n  it( 'should do something', function (done) {\n    setTimeout( function () {\n      check( done, function() {\n        expect(true).to.equal(false);\n      } )\n    }, 100);\n  }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>If you like promised, try <a href=\"http://chaijs.com/plugins/chai-as-promised\">Chai as Promised</a> + <a href=\"https://github.com/kriskowal/q\">Q</a>, which allow something like this:</p>\n\n<pre><code>doSomethingAsync().should.eventually.equal(\"foo\").notify(done);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I'm running some asynchronous tests in Mocha using the Browser Runner and I'm trying to use Chai's expect style assertions:</p>\n\n<pre><code>window.expect = chai.expect;\ndescribe('my test', function() {\n  it('should do something', function (done) {\n    setTimeout(function () {\n      expect(true).to.equal(false);\n    }, 100);\n  }\n}\n</code></pre>\n\n<p>This doesn't give me the normal failed assertion message, instead I get:</p>\n\n<pre><code>Error: the string \"Uncaught AssertionError: expected true to equal false\" was thrown, throw an Error :)\n    at Runner.fail (http://localhost:8000/tests/integration/mocha/vendor/mocha.js:3475:11)\n    at Runner.uncaught (http://localhost:8000/tests/integration/mocha/vendor/mocha.js:3748:8)\n    at uncaught (http://localhost:8000/tests/integration/mocha/vendor/mocha.js:3778:10)\n</code></pre>\n\n<p>So it's obviously catching the error, it's just not displaying it correctly. Any ideas how to do this? I guess I could just call \"done\" with an error object but then I lose all the elegance of something like Chai and it becomes very clunky...</p>\n",
            "last_activity_date": 1392046425,
            "question_id": 11235815,
            "score": 26,
            "tags": [
                "javascript",
                "unit-testing",
                "mocha"
            ],
            "title": "Is there a way to get Chai working with asynchronous Mocha tests?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><strong>Try changing your server encoding to gzip.</strong></p>\n\n<p>Your request header shows three potential encodings (gzip,deflate,sdch), so the server can pick any one of those three. By the response header, we can see that your server is choosing to respond with deflate.</p>\n\n<p>Gzip is an encoding format that includes a deflate payload in addition to additional headers and footer (which includes the original uncompressed length) and a different checksum algorithm:</p>\n\n<p><a href=\"http://en.wikipedia.org/wiki/Gzip\" rel=\"nofollow\">Gzip at Wikipedia</a></p>\n\n<p>Deflate has some issues. Due to legacy issues dealing with improper decoding algorithms, client implementations of deflate have to run through silly checks just to figure out which implementation they're dealing with, and unfortunately, they often still get it wrong:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/388595/why-use-deflate-instead-of-gzip-for-text-files-served-by-apache\">Why use deflate instead of gzip for text files served by Apache?</a></p>\n\n<p>In the case of your question, the browser probably sees a deflate file coming down the pipe and just throws up its arms and says, \"When I don't even know exactly how I'll end up decoding this thing, how can you expect me to worry about getting the progress right, human?\"</p>\n\n<p>If you switch your server configuration so the response is gzipped (i.e., gzip shows up as the content-encoding), I'm hopeful your script works as you'd hoped/expected it would.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Don't get stuck just because there isn't a native solution; a hack of one line can solve your problem without messing with Apache configuration (that in some hostings is prohibited or very restricted):</p>\n\n<p><strong>PHP to the rescue:</strong></p>\n\n<pre><code>var size = &lt;?php echo filesize('file.json') ?&gt;;\n</code></pre>\n\n<p>That's it, you probably already know the rest, but just as a reference here it is:</p>\n\n<pre><code>&lt;script&gt;\nvar progressBar = document.getElementById(\"p\"),\n    client = new XMLHttpRequest(),\n    size = &lt;?php echo filesize('file.json') ?&gt;;\n\nprogressBar.max = size;\n\nclient.open(\"GET\", \"file.json\")\n\nfunction loadHandler () {\n  var loaded = client.responseText.length;\n  progressBar.value = loaded;\n}\n\nclient.onprogress = loadHandler;\n\nclient.onloadend = function(pe) {\n  loadHandler();\n  console.log(\"Success, loaded: \" + client.responseText.length + \" of \" + size)\n}\nclient.send()\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>Live example:</strong></p>\n\n<p>Another SO user thinks I am lying about the validity of this solution so here it is live: <a href=\"http://nyudvik.com/zip/\" rel=\"nofollow\">http://nyudvik.com/zip/</a>, it is gzip-ed and the real file weights 8 MB</p>\n\n<p><br></p>\n\n<hr>\n\n<p>Related links:</p>\n\n<ul>\n<li><a href=\"http://serverfault.com/questions/183843/content-length-not-sent-when-gzip-compression-enabled-in-apache\">SO: Content-Length not sent when gzip compression enabled in Apache?</a></li>\n<li><a href=\"http://httpd.apache.org/docs/2.2/mod/mod_deflate.html\" rel=\"nofollow\">Apache Module mod_deflate doc</a></li>\n<li><a href=\"http://php.net/manual/en/function.filesize.php\" rel=\"nofollow\">PHP filsize function doc</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The only solution I can think of is manually compressing the data (rather than leaving it to the server and browser), as that allows you to use the normal progress bar and should still give you considerable gains over the uncompressed version. If for example the system only is required to work in latest generation web browsers you can for example zip it on the server side (whatever language you use, I am sure there is a zip function or library) and on the client side you can use <a href=\"http://gildas-lormeau.github.com/zip.js/\" rel=\"nofollow\">zip.js</a>. If more browser support is required you can check <a href=\"http://stackoverflow.com/questions/294297/javascript-implementation-of-gzip\">this SO answer</a> for a number of compression and decompression functions (just choose one which is supported in the server side language you're using). Overall this should be reasonably simple to implement, although it will perform worse (though still good probably) than native compression/decompression. (Btw, after giving it a bit more thought it could in theory perform even better than the native version in case you would choose a compression algorithm which fits the type of data you're using and the data is sufficiently big)</p>\n\n<p>Another option would be to use a websocket and load the data in parts where you parse/handle every part at the same time it's loaded (you don't need websockets for that, but doing 10's of http requests after eachother can be quite a hassle). Whether this is possible depends on the specific scenario, but to me it sounds like report data is the kind of data that can be loaded in parts and isn't required to be first fully downloaded.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I do not clearly understand the issue, it should not happen since the decompression should done by the browser.</p>\n\n<p>You may try to move away from jQuery or hack jQuery  because the $.ajax does not seems to work well with binary data:</p>\n\n<p>Ref: <a href=\"http://blog.vjeux.com/2011/javascript/jquery-binary-ajax.html\" rel=\"nofollow\">http://blog.vjeux.com/2011/javascript/jquery-binary-ajax.html</a></p>\n\n<p>You could try to do your own implementation of the ajax request\nSee: <a href=\"https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/Using_XMLHttpRequest#Handling_binary_data\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/Using_XMLHttpRequest#Handling_binary_data</a></p>\n\n<p>You could try to uncompress the json the content by javascript (see resources in comments).</p>\n\n<p><strong>* UPDATE 2 *</strong></p>\n\n<p>the $.ajax function does not support the progress event handler or it is not part of the jQuery documentation (see comment below).</p>\n\n<p>here is a way to get this handler work but I never tried it myself:\n<a href=\"http://www.dave-bond.com/blog/2010/01/JQuery-ajax-progress-HMTL5/\" rel=\"nofollow\">http://www.dave-bond.com/blog/2010/01/JQuery-ajax-progress-HMTL5/</a></p>\n\n<p><strong>* UPDATE 3 *</strong></p>\n\n<p>The solution use tierce third party library to extend (?) jQuery ajax functionnality, so my suggestion do not apply</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I wasn't able to solve the issue of using <code>onProgress</code> on the compressed content itself, but I came up with this semi-simple workaround. <strong>In a nutshell</strong>: send a <code>HEAD</code> request to the server at the same time as a <code>GET</code> request, and render the progress bar once there's enough information to do so.</p>\n\n<hr>\n\n<pre><code>function loader(onDone, onProgress, url, data)\n{\n    // onDone = event handler to run on successful download\n    // onProgress = event handler to run during a download\n    // url = url to load\n    // data = extra parameters to be sent with the AJAX request\n    var content_length = null;\n\n    self.meta_xhr = $.ajax({\n        url: url,\n        data: data,\n        dataType: 'json',\n        type: 'HEAD',\n        success: function(data, status, jqXHR)\n        {\n            content_length = jqXHR.getResponseHeader(\"X-Content-Length\");\n        }\n    });\n\n    self.xhr = $.ajax({\n        url: url,\n        data: data,\n        success: onDone,\n        dataType: 'json',\n        progress: function(jqXHR, evt)\n        {\n            var pct = 0;\n            if (evt.lengthComputable)\n            {\n                pct = 100 * evt.position / evt.total;\n            }\n            else if (self.content_length != null)\n            {\n                pct = 100 * evt.position / self.content_length;\n            }\n\n            onProgress(pct);\n        }\n    });\n}\n</code></pre>\n\n<p>And then to use it:</p>\n\n<pre><code>loader(function(response)\n{\n    console.log(\"Content loaded! do stuff now.\");\n},\nfunction(pct)\n{\n    console.log(\"The content is \" + pct + \"% loaded.\");\n},\n'&lt;url here&gt;', {});\n</code></pre>\n\n<hr>\n\n<p>On the server side, set the <code>X-Content-Length</code> header on both the <code>GET</code> and the <code>HEAD</code> requests (which should represent the <em>uncompressed</em> content length), and abort sending the content on the <code>HEAD</code> request. </p>\n\n<p>In PHP, setting the header looks like:</p>\n\n<pre><code>header(\"X-Content-Length: \".strlen($payload));\n</code></pre>\n\n<p>And then abort sending the content if it's a <code>HEAD</code> request:</p>\n\n<pre><code>if ($_SERVER['REQUEST_METHOD'] == \"HEAD\")\n{\n    exit;\n}\n</code></pre>\n\n<hr>\n\n<p>Here's what it looks like in action:</p>\n\n<p><img src=\"http://i.stack.imgur.com/UkqS8.png\" alt=\"screenshot\"></p>\n\n<p>The reason the <code>HEAD</code> takes so long in the below screenshot is because the server still has to parse the file to know how long it is, but that's something I can definitely improve on, and it's definitely an improvement from where it was.</p>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>I've seen a bunch of similar questions to this get asked before, but I haven't found one that describes my current problem exactly, so here goes:</p>\n\n<p>I have a page which loads a large (between 0.5 and 10 MB) JSON document via AJAX so that the client-side code can process it. Once the file is loaded, I don't have any problems that I don't expect. However, it takes a long time to download, so I tried leveraging the <a href=\"https://dvcs.w3.org/hg/progress/raw-file/tip/Overview.html\">XHR Progress API</a> to render a progress bar to indicate to the user that the document is loading. This worked well.</p>\n\n<p>Then, in an effort to speed things up, I tried compressing the output on the server side via gzip and deflate. This worked too, with tremendous gains, however, my progress bar stopped working.</p>\n\n<p>I've looked into the issue for a while and found that if a proper <code>Content-Length</code> header isn't sent with the requested AJAX resource, the <code>onProgress</code> event handler cannot function as intended because it doesn't know how far along in the download it is. When this happens, a property called <code>lengthComputable</code> is set to <code>false</code> on the event object.</p>\n\n<p>This made sense, so I tried setting the header explicitly with both the uncompressed and the compressed length of the output. I can verify that the header is being sent, and I can verify that my browser knows how to decompress the content. But the <code>onProgress</code> handler still reports <code>lengthComputable = false</code>.</p>\n\n<p>So my question is: <strong>is there a way to gzipped/deflated content with the AJAX Progress API?</strong> And if so, what am I doing wrong right now?</p>\n\n<hr>\n\n<p>This is how the resource appears in the Chrome Network panel, showing that compression is working:</p>\n\n<p><img src=\"http://dl.dropbox.com/u/1766969/Screenshots/m_b4.png\" alt=\"network panel\"></p>\n\n<p>These are the relevant <strong>request</strong> headers, showing that the request is AJAX and that <code>Accept-Encoding</code> is set properly:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>GET /dashboard/reports/ajax/load HTTP/1.1\nConnection: keep-alive\nCache-Control: no-cache\nPragma: no-cache\nAccept: application/json, text/javascript, */*; q=0.01\nX-Requested-With: XMLHttpRequest\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_5) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.99 Safari/537.22\nAccept-Encoding: gzip,deflate,sdch\nAccept-Language: en-US,en;q=0.8\nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3\n</code></pre>\n\n<p>These are the relevant <strong>response</strong> headers, showing that the <code>Content-Length</code> and <code>Content-Type</code> are being set correctly:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>HTTP/1.1 200 OK\nCache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0\nContent-Encoding: deflate\nContent-Type: application/json\nDate: Tue, 26 Feb 2013 18:59:07 GMT\nExpires: Thu, 19 Nov 1981 08:52:00 GMT\nP3P: CP=\"CAO PSA OUR\"\nPragma: no-cache\nServer: Apache/2.2.8 (Unix) mod_ssl/2.2.8 OpenSSL/0.9.8g PHP/5.4.7\nX-Powered-By: PHP/5.4.7\nContent-Length: 223879\nConnection: keep-alive\n</code></pre>\n\n<p>For what it's worth, I've tried this on both a standard (http) and secure (https) connection, with no differences: the content loads fine in the browser, but isn't processed by the Progress API.</p>\n\n<hr>\n\n<p>Per <a href=\"http://stackoverflow.com/a/15172401/350278\">Adam's suggestion</a>, I tried switching the server side to gzip encoding with no success or change. Here are the relevant response headers:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>HTTP/1.1 200 OK\nCache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0\nContent-Encoding: gzip\nContent-Type: application/json\nDate: Mon, 04 Mar 2013 22:33:19 GMT\nExpires: Thu, 19 Nov 1981 08:52:00 GMT\nP3P: CP=\"CAO PSA OUR\"\nPragma: no-cache\nServer: Apache/2.2.8 (Unix) mod_ssl/2.2.8 OpenSSL/0.9.8g PHP/5.4.7\nX-Powered-By: PHP/5.4.7\nContent-Length: 28250\nConnection: keep-alive\n</code></pre>\n\n<p>Just to repeat: the content is being downloaded and decoded properly, it's just the progress API that I'm having trouble with.</p>\n\n<hr>\n\n<p>Per <a href=\"http://stackoverflow.com/questions/15097712/how-can-i-use-deflated-gzipped-content-with-an-xhr-onprogress-function?noredirect=1#comment21565866_15097712\">Bertrand's request</a>, here's the request:</p>\n\n<pre><code>$.ajax({\n    url: '&lt;url snipped&gt;',\n    data: {},\n    success: onDone,\n    dataType: 'json',\n    cache: true,\n    progress: onProgress || function(){}\n});\n</code></pre>\n\n<p>And here's the <code>onProgress</code> event handler I'm using (it's not too crazy):</p>\n\n<pre><code>function(jqXHR, evt)\n{\n    // yes, I know this generates Infinity sometimes\n    var pct = 100 * evt.position / evt.total;\n\n    // just a method that updates some styles and javascript\n    updateProgress(pct);\n});\n</code></pre>\n",
            "last_activity_date": 1362854676,
            "question_id": 15097712,
            "score": 25,
            "tags": [
                "javascript",
                "jquery",
                "xmlhttprequest",
                "compression"
            ],
            "title": "How can I use deflated/gzipped content with an XHR onProgress function?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<pre><code>$(\"table\").find(\"tr:first td\").length;\n</code></pre>\n\n<p>I edited as I didn't realize you were counting the colspan's.</p>\n\n<p>If you want to include using colspan try a loop through the td's in the first row:</p>\n\n<pre><code>var cols = $(\"table\").find(\"tr:first td\");\nvar count = 0;\nfor(var i = 0; i &lt; cols.length; i++)\n{\n   var colspan = cols.eq(i).attr(\"colspan\");\n   if( colspan &amp;&amp; colspan &gt; 1)\n   {\n      count += colspan;\n   }else{\n      count++;\n   }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Here you go:</p>\n\n<p><a href=\"http://jsfiddle.net/craigm/XQjFB/\">jsFiddle</a></p>\n\n<pre><code>$(function() {\n    var colCount = 0;\n    $('tr:nth-child(1) td').each(function () {\n        if ($(this).attr('colspan')) {\n            colCount += +$(this).attr('colspan');\n        } else {\n            colCount++;\n        }\n    });\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p><a href=\"http://jsfiddle.net/WvN9u/\" rel=\"nofollow\">http://jsfiddle.net/WvN9u/</a></p>\n\n<p>Just paying attention to <code>colspan attr</code></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>function(){\n    num_columns = 0;\n    $(\"table td]\").each(function(){\n        num_columns = num_columns + ($(this).attr('colspan') == undefined ? 1 : $(this).attr('colspan'));\n    });\n    return num_columns;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You have to set an ID to the header row:</p>\n\n<pre><code>&lt;table&gt;\n    &lt;tr id=\"headerRow\"&gt;\n        &lt;td&gt;spans one column&lt;/td&gt;\n        &lt;td colspan=\"2\"&gt;spans two columns&lt;/td&gt;\n        &lt;td colspan=\"3\"&gt;spans three columns&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>And then you can use the following function:</p>\n\n<pre><code>function getColumnCount(headerRowId) {\n    var columnCount = 0;\n    $('#' + headerRowId + ' &gt; td').each(function() {\n        var colspanValue = $(this).attr('colspan');\n        if (colspanValue == undefined) {\n            columnCount++;\n        } else {\n            columnCount = columnCount + parseInt(colspanValue);\n        }\n    });\n    return columnCount;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In POJS (Plain Old JavaScript):</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;table id=\"foo\"&gt;\n    &lt;thead&gt;&lt;/thead&gt;\n    &lt;tbody&gt;\n        &lt;tr&gt;\n            &lt;td&gt;1&lt;/td&gt;\n            &lt;td colspan=\"2\"&gt;2&lt;/td&gt;\n            &lt;td colspan=\"3\"&gt;3&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/tbody&gt;\n    &lt;tfoot&gt;&lt;/tfoot&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>JS:</p>\n\n<pre><code>var foo = document.getElementById(\"foo\"), i = 0, j = 0, row, cell, numCols = 0;\n//loop through HTMLTableElement.rows (includes thead, tbody, tfoot)\nfor(i;i&lt;foo.rows.length;i++)\n{\n    row = foo.rows[i];\n    //loop through HTMLTableRowElement.cells\n    for(j = 0;j&lt;row.cells.length;j++)\n    {\n        cell = row.cells[j];\n        numCols += cell.colSpan;\n        cell = null;\n    }\n    row = null;\n}\n\nalert(numCols) //6;\n</code></pre>\n\n<p><a href=\"http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-64060425\" rel=\"nofollow\" title=\"HTMLTableElement\">HTMLTableElement</a><a href=\"http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-6156016\" rel=\"nofollow\" title=\"HTMLTableElement.rows\">.rows</a> will collect rows from every <a href=\"http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-67417573\" rel=\"nofollow\" title=\"HTMLTableSectionElement\">HTMLTableSectionElement</a> (THead, TBody, and TFoot). Each section also has its own <code>rows</code> HTMLCollection, so you can filter them if need be.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>To be robust..I'd do something like <a href=\"http://jsfiddle.net/ZErS7/\" rel=\"nofollow\">this</a></p>\n\n<pre><code>alert(numCol(\"table\") + \" is the max number of cols\");\n\nfunction numCol(table) {\n    var maxColNum = 0;\n\n    var i=0;\n    var trs = $(table).find(\"tr\");\n\n    for ( i=0; i&lt;trs.length; i++ ) {\n        maxColNum = Math.max(maxColNum, getColForTr(trs[i]));\n    }\n\n    return maxColNum;\n}\n\nfunction getColForTr(tr) {\n\n    var tds = $(tr).find(\"td\");\n\n    var numCols = 0;\n\n    var i=0;\n    for ( i=0; i&lt;tds.length; i++ ) {\n        var span = $(tds[i]).attr(\"colspan\");\n\n        if ( span )\n            numCols += parseInt(span);\n        else {\n            numCols++;\n        }\n    }\n    return numCols;\n}\n</code></pre>\n\n<p>Just in case we have some funkiness going on between different rows.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is the cleanest in my opinion. It handles tables within tables. And is short and simple:</p>\n\n<pre><code>$(\"table &gt; tbody\").find(\"&gt; tr:first &gt; td\").length\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Pass in a table with something like $('foo#table') or $('table:first')</p>\n\n<pre><code>function getColumnCount(e) { //Expects jQuery table object\n    var c= 0;\n    e.find('tbody tr:first td').map(function(i,o) { c += ( $(o).attr('colspan') === undefined ? 1 : parseInt($(o).attr('colspan')) ) } );\n    return c;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>To circumvent the td/th issue (and also fix a potential issue where attr('colspan') was giving me strings) I went with this:</p>\n\n<pre><code>var colspan = 0;\n$('#table').find('tr:first').children().each(function(){\n    var cs = $(this).attr('colspan');\n    if(cs &gt; 0){ colspan += Number(cs); }\n    else{ colspan++; }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Using jQuery, how would you figure out how many columns are in a table?</p>\n\n<pre><code>&lt;script&gt;\n    alert($('table').columnCount());\n&lt;/script&gt;\n\n&lt;table&gt;\n    &lt;tr&gt;\n        &lt;td&gt;spans one column&lt;/td&gt;\n        &lt;td colspan=\"2\"&gt;spans two columns&lt;/td&gt;\n        &lt;td colspan=\"3\"&gt;spans three columns&lt;/td&gt;\n    &lt;tr&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>The total number of columns in this example is 6. How could I determine this using jQuery?</p>\n",
            "last_activity_date": 1422301034,
            "question_id": 6683882,
            "score": 25,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery: How to count table columns?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Use <code>window.location.protocol</code> to check if it is <code>https:</code></p>\n\n<pre><code>function isSecure()\n{\n   return window.location.protocol == 'https:';\n}\n</code></pre>\n\n<p>Alternatively you can omit specifying \"window\" if you don't have a locally scoped location.</p>\n\n<pre><code>function isSecure()\n{\n   return location.protocol == 'https:';\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 50
                },
                {
                    "body": "<p>As google analytics taught me:</p>\n\n<pre><code>if (\"https:\" == document.location.protocol) {\n    /* secure */\n} else {\n    /* unsecure */\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Is it possible to detect, on the client side, whether the user is using an encrypted page or not?</p>\n\n<p>Put another way -- I want to know if the URL of the current page starts with http or https.</p>\n",
            "last_activity_date": 1268971703,
            "question_id": 282444,
            "score": 25,
            "tags": [
                "javascript",
                "http",
                "https"
            ],
            "title": "How can I use JavaScript on the client side to detect if the page was encrypted?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Small tip: Both <code>parseInt</code> and <code>Number#toString</code> support radix arguments. Try using a radix of 36 to encode numbers (or indexes into lists) in URLs.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>It looks like the Github APIs have numeric IDs for many things (looks like repos and users have them, but labels don't) under the covers. It might be possible to use those numbers instead of names wherever advantageous. You then have to figure out how to best encode those in something that'll survive in a query string, e.g. something like base64(url).</p>\n\n<p>For example, your hoodie.js repository has ID <code>4780572</code>.</p>\n\n<p>Packing that into a big-endian unsigned int (as many bytes as we need) gets us <code>\\x00H\\xf2\\x1c</code>.</p>\n\n<p>We'll just toss the leading zero, we can always restore that later, now we have <code>H\\xf2\\x1c</code>.</p>\n\n<p>Encode as URL-safe base64, and you have <code>SPIc</code> (toss any padding you might get).</p>\n\n<p>Going from <code>hoodiehq/hoodie.js</code> to <code>SPIc</code> seems like a good-sized win!</p>\n\n<p>More generally, if you're willing to invest the time, you can try to exploit a bunch of redudancies in your query strings. Other ideas are along the lines of packing the two boolean params into a single character, possibly along with other state (like what fields are included). If you use base64-encoding (which seems the best option here due to the URL-safe version -- I looked at base85, but it has a bunch of characters that won't survive in a URL), that gets you 6 bits of entropy per character... there's a lot you can do with that.</p>\n\n<p>To add to Thomas Fuchs' note, yes, if there's some kind of inherent, immutable ordering in some of things you're encoding, than that would obviously also help. However, that seems hard for both the labels and the milestones.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I have a cunning plan! <sup>(And a drink of gin tonic)</sup></p>\n\n<p>You doesn't seem to care about the length of the bytestream but of the length of the resulting glyphs, e.g. what the string which is displayed to the user.</p>\n\n<p>Browser are pretty good in converting an <a href=\"http://en.wikipedia.org/wiki/Internationalized_Resource_Identifier\">IRI</a> to the underlying [URI][2] while still displaying the IRI in the address bar. IRIs have a greater repertoire of possible characters while your set of possible chars is rather limited.</p>\n\n<p>That means you can encode bigrams of your chars (aa, ab, ac, \u2026, zz &amp; special chars) into one char of the full unicode spectrum. Say you've got 80 possible ASCII chars: the number of possible combinations of two chars is 6400. Which are easy findable in Unicodes assigned chars, e.g. in the han unified CJK spectrum:</p>\n\n<pre><code>aa  \u2192  \u4e00\nab  \u2192  \u4e01\nac  \u2192  \u4e02\nad  \u2192  \u4e03\n\u2026\n</code></pre>\n\n<p>I picked CJK because this is only (slighty) reasonable if the target chars are assigned in unicode and have assigned glyphs on the major browser and operating systems. For that reason the private use area is out and the more efficient version using trigrams (whose possible combinations could use all of Unicodes 1114112 possible code points) are out.</p>\n\n<p>To recap: the underlying bytes are still there and \u2013 given UTF-8 encoding \u2013 possible even longer, but the string of displayed characters the user sees and copies is 50% shorter.</p>\n\n<h3>Ok, Ok, reasons, why this solution is insane:</h3>\n\n<ul>\n<li><p>IRIs are not perfect. A lot of lesser tools than modern browser have their problems.</p></li>\n<li><p>The algorithm needs obviously a lot of more work. You'll need a function which maps the bigrams to the target chars and back. And it should preferable work arithmetically to avoid big hash tables in memory.</p></li>\n<li><p>The target chars should be checked if they are assigned and if they are simple chars and not fancy unicodian things like combining chars or stuff that got lost somewhere in Unicode normalization. Also if the target area is an continuous span of assigned chars with glyphs.</p></li>\n<li><p>Browser are sometimes wary of IRIs. For good reason, given the IDN homograph attacks. Are they OK with all these non-ASCII-chars in their address bar?</p></li>\n<li><p>And the biggest: people are notoriously bad at remembering characters in scripts they don't know. They are even worse at trying to (re)-type these chars. And copy'n'paste can go wrong in many different clicks. There is a reason URL shorteners use Base64 and even smaller alphabets. </p></li>\n</ul>\n\n<p>\u2026 speaking of which: That would be my solution. Offloading the work of shortening links either to the user or integrating goo.gl or bit.ly via their APIs.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Perhaps you can find a url shortener with a jsonp API, that way you could make all the URLs really short automatically.</p>\n\n<p><a href=\"http://yourls.org/\" rel=\"nofollow\">http://yourls.org/</a> even has jsonp support.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Just as you yourself propose, I would first get rid of all the characters that are not carrying any information, because they are part of the \"format\".</p>\n\n<p>E.g. turn \"labels=open,ssl,cypher&amp;repository=275643&amp;username=ryanbrg&amp;milestones=&amp;with_comment=yes\" to\n\"open,ssl,cyper|275643|ryanbrg||yes\".</p>\n\n<p>Then use a Huffmann encoding with a fixed probability vector (resulting in a fixed mapping from characters to variable length bitstrings - with the most probable characters mapped to shorter bitstrings and less probable characters mapped to longer bitstrings).</p>\n\n<p>You could even use different probability vectors for the different parameters.  For example in the parameter \"labels\" the alpha characters will have high probability, but in the \"repository\" parameter the numeric characters will have the highest probability. If you do this, you should consider the separator \"|\" a part of the preceeding parameter.</p>\n\n<p>And finally turn the long bitstring (which is the concatenation all the bitstrings to which the characters were mapped) into something you can put into an URL by base64url encoding it.</p>\n\n<p>If you could send me a set of representative parameter lists, I could run them through a Huffmann coder to see how well they compress.</p>\n\n<p>The probability vector (or equivalently the mapping from characters to bitstrings) should be encoded as constant arrays into the Javascript function that is sent to the browser.</p>\n\n<p>Of course you could go even further and - for example - try to get a list of possible lables with their probabilities.  Then you could map entire lables to bitstrings with a Huffmann encoding.  This will give you better compression, but you will have extra work for those labels that are new (e.g. falling back to the single character encoding), and of course the mapping (which - as mentioned above - is a constant array in the Javascript function) will be much larger.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Maybe any simple JS minifier will help you. You'll need only to integrate it on serialization and deserialization points only. I think it'd be the easiest solution.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A working solution putting various bits of good (or so I think) ideas together</p>\n\n<p>I did this for fun, mainly because it gave me an opportunity to implement an Huffman encoder in PHP and I could not find a satisfactory existing implementation.</p>\n\n<p>However, this might save you some time if you plan to explore a similar path.</p>\n\n<h3>Burrows-Wheeler+move-to-front+Huffman transform</h3>\n\n<p>I'm not quite sure BWT would be best suited for your kind of input.<br>\nThis is no regular text, so recurring patterns would probably not occur as often as in source code or plain English.</p>\n\n<p>Besides, a dynamic Huffman code would have to be passed along with the encoded data which, for very short input strings, would harm the compression gain badly.</p>\n\n<p>I might well be wrong, in which case I would gladly see someone prove me to be.</p>\n\n<p>Anyway, I decided to try another approach.</p>\n\n<h3>General principle</h3>\n\n<p>1) define a structure for your URL parameters and strip the constant part</p>\n\n<p>for instance, starting from:</p>\n\n<pre><code>repos=aaa,bbb,ccc&amp;\nlabels=ddd,eee,fff&amp;\nmilestones=ggg,hhh,iii&amp;\nusername=kkk&amp;\nshow_open=0&amp;\nshow_closed=1&amp;\nshow_commented=1&amp;\nshow_uncommented=0\n</code></pre>\n\n<p>extract:</p>\n\n<pre><code>aaa,bbb,ccc|ddd,eee,fff|ggg,hhh,iii|kkk|0110\n</code></pre>\n\n<p>where <code>,</code> and <code>|</code> act as string and/or field terminators, while boolean values don't need any.</p>\n\n<p>2) define a static repartition of symbols based on the expected average input and derive a static Huffman code</p>\n\n<p>Since transmitting a dynamic table would take more space than your initial string, I think the only way to achhieve any compression at all is to have a static huffman table.</p>\n\n<p>However, you can use the structure of your data to your advantage to compute reasonable probabilities.</p>\n\n<p>You can start with the repartition of letters in English or other languages and throw in a certain percentage of numbers and other punctuation signs.</p>\n\n<p>Testing with a dynamic Huffman coding, I saw compression rates of 30 to 50%.</p>\n\n<p>This means with a static table you can expect maybe a .6 compression factor (reducing the lenght of your data by 1/3), not much more.</p>\n\n<p>3) convert this binary Huffmann code into something an URI can handle</p>\n\n<p>The 70 regular ASCII 7 bits chars in that list</p>\n\n<pre><code>!'()*-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz\n</code></pre>\n\n<p>would give you an expansion factor of about 30%, practically no better than a base64 encode.</p>\n\n<p>A 30% expansion would ruin the gain from a static Huffman compression, so this is hardly an option!</p>\n\n<p>However, since you control the encoding client and server side, you can use about anything that is not an URI reserved character.</p>\n\n<p>An interesting possiblity would be to complete the above set up to 256 with whatever unicode glyphs, which would allow to encode your binary data with the same number of URI-compliant characters, thus replacing a painful and slow bunch of long integer divisions with a lightning fast table lookup.</p>\n\n<h3>Structure description</h3>\n\n<p>The codec is meant to be used both client and server side, so it is essential that server and clients share a common data structure definition.</p>\n\n<p>Since the interface is likely to evolve, it seems wise to store a version number for upward compatibility.</p>\n\n<p>The interface definition will use a very minimalistic description language, like so:</p>\n\n<pre><code>v   1               // version number (between 0 and 63)\na   en              // alphabet used (English)\no   10              // 10% of digits and other punctuation characters\nf   1               // 1% of uncompressed \"foreign\" characters\ns 15:3 repos        // list of expeced 3 strings of average length 15\ns 10:3 labels\ns 8:3  milestones\ns 10   username     // single string of average length 10\nb      show_open    // boolean value\nb      show_closed\nb      show_commented\nb      show_uncommented\n</code></pre>\n\n<p>Each language supported will have a frequency table for all its used letters</p>\n\n<p>digits and other computerish symbols like <code>-</code>, <code>.</code> or <code>_</code> will have a global frequency, regardless of languages</p>\n\n<p>separators (<code>,</code> and <code>|</code>) frequencies will be computed according to the number of lists and fields present in the structure.</p>\n\n<p>All other \"foreign\" characters will be escaped with a specific code and encoded as plain UTF-8.</p>\n\n<h1>Implementation</h1>\n\n<p>The bidirectional conversion path is as follows:</p>\n\n<p>list of fields &lt;-> UTF-8 data stream &lt;-> huffman codes &lt;-> URI</p>\n\n<p>Here is the main codec</p>\n\n<pre><code>include ('class.huffman.codec.php');\nclass IRI_prm_codec\n{\n    // available characters for IRI translation\n    static private $translator = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\u00c0\u00c1\u00c2\u00c3\u00c4\u00c5\u00c6\u00c7\u00c8\u00c9\u00ca\u00cb\u00cc\u00cd\u00ce\u00cf\u00d0\u00d1\u00d2\u00d3\u00d4\u00d5\u00d6\u00d9\u00da\u00db\u00dc\u00dd\u00de\u00df\u00e0\u00e1\u00e2\u00e3\u00e4\u00e5\u00e6\u00e7\u00e8\u00e9\u00ea\u00eb\u00ec\u00ed\u00ee\u00ef\u00f0\u00f1\u00f2\u00f3\u00f4\u00f5\u00f6\u00f9\u00fa\u00fb\u00fc\u00fd\u00fe\u00ff\u0100\u0101\u0102\u0103\u0104\u0105\u0106\u0107\u0108\u0109\u010a\u010b\u010c\u010d\u010e\u010f\u0110\u0111\u0112\u0113\u0114\u0115\u0116\u0117\u0118\u0119\u011a\u011b\u011c\u011d\u011e\u011f\u0120\u0121\u0122\u0123\u0124\u0125\u0126\u0127\u0128\u0129\u012a\u012b\u012c\u012d\u012e\u012f\u0130\u0131\u0132\u0133\u0134\u0135\u0136\u0137\u0138\u0139\u013a\u013b\u013c\u013d\u013e\u013f\u0140\u0141\u0142\u0143\u0144\u0145\u0146\u0147\u0148\u0149\u014a\u014b\u014c\u014d\u014e\u014f\u0150\u0151\u0152\u0153\u0154\u0155\u0156\u0157\u0158\u0159\u015a\u015b\u015c\u015d\u015e\u015f\u0160\u0161\u0162\u0163\u0164\u0165\u0166\u0167\u0168\u0169\u016a\u016b\u016c\u016d\u016e\u016f\u0170\u0171\u0172\u0173\u0174\u0175\u0176\u0177\u0178\u0179\u017a\u017b\u017c\u017d\u017e\u017f\u0180\u0181\u0182\u0183\u0184\u0185\";\n\n    const VERSION_LEN = 6; // version number between 0 and 63\n\n    // ========================================================================\n    // constructs an encoder\n    // ========================================================================\n    public function __construct ($config)\n    {\n        $num_record_terminators = 0;\n        $num_record_separators = 0;\n        $num_text_sym = 0;\n\n        // parse config file\n        $lines = file($config, FILE_IGNORE_NEW_LINES|FILE_SKIP_EMPTY_LINES);\n        foreach ($lines as $line)\n        {\n            list ($code, $val) = preg_split('/\\s+/', $line, 2);\n            switch ($code)\n            {\n            case 'v': $this-&gt;version = intval($val); break;\n            case 'a': $alphabet = $val; break;\n            case 'o': $percent_others = $val; break;\n            case 'f': $percent_foreign = $val; break;\n            case 'b':\n                $this-&gt;type[$val] = 'b';\n                break;\n            case 's':\n                list ($val, $field) = preg_split('/\\s+/u', $val, 2);\n                @list ($len,$num) = explode (':', $val);\n                if (!$num) $num=1;\n                $this-&gt;type[$field] = 's';\n                $num_record_terminators++;\n                $num_record_separators+=$num-1;\n                $num_text_sym += $num*$len;\n                break;\n\n            default: throw new Exception (\"Invalid config parameter $code\");\n            }\n        }\n\n        // compute symbol frequencies           \n        $total = $num_record_terminators + $num_record_separators + $num_text_sym + 1;\n\n        $num_chars = $num_text_sym * (100-($percent_others+$percent_foreign))/100;\n        $num_sym = $num_text_sym * $percent_others/100;\n        $num_foreign = $num_text_sym * $percent_foreign/100;\n\n        $this-&gt;get_frequencies ($alphabet, $num_chars/$total);\n        $this-&gt;set_frequencies (\" .-_0123456789\", $num_sym/$total);\n        $this-&gt;set_frequencies (\"|\", $num_record_terminators/$total);\n        $this-&gt;set_frequencies (\",\", $num_record_separators/$total);\n        $this-&gt;set_frequencies (\"\\1\", $num_foreign/$total);\n        $this-&gt;set_frequencies (\"\\0\", 1/$total);\n\n        // create Huffman codec\n        $this-&gt;huffman = new Huffman_codec();\n        $this-&gt;huffman-&gt;make_code ($this-&gt;frequency);\n    }\n\n    // ------------------------------------------------------------------------\n    // grab letter frequencies for a given language\n    // ------------------------------------------------------------------------\n    private function get_frequencies ($lang, $coef)\n    {\n        $coef /= 100;\n        $frequs = file(\"$lang.dat\", FILE_IGNORE_NEW_LINES|FILE_SKIP_EMPTY_LINES);\n        foreach ($frequs as $line)\n        {\n            $vals = explode (\" \", $line);\n            $this-&gt;frequency[$vals[0]] = floatval ($vals[1]) * $coef;\n        }\n    }\n\n    // ------------------------------------------------------------------------\n    // set a given frequency for a group of symbols\n    // ------------------------------------------------------------------------\n    private function set_frequencies ($symbols, $coef)\n    {\n        $coef /= strlen ($symbols);\n        for ($i = 0 ; $i != strlen($symbols) ; $i++) $this-&gt;frequency[$symbols[$i]] = $coef;\n    }\n\n    // ========================================================================\n    // encodes a parameter block\n    // ========================================================================\n    public function encode($input)\n    {\n        // get back input values\n        $bools = '';\n        foreach (get_object_vars($input) as $prop =&gt; $val)\n        {\n            if (!isset ($this-&gt;type[$prop])) throw new Exception (\"unknown property $prop\");\n            switch ($this-&gt;type[$prop])\n            {\n            case 'b': $bools .= $val ? '1' : '0'; break;\n            case 's': $strings[] = $val; break;\n            default: throw new Exception (\"Uh oh... type \".$this-&gt;type[$prop].\" not handled ?!?\");\n            }\n        }\n\n        // set version number and boolean values in front\n        $prefix = sprintf (\"%0\".self::VERSION_LEN.\"b$bools\", $this-&gt;version);\n\n        // pass strings to our Huffman encoder\n        $strings = implode (\"|\", $strings);\n        $huff = $this-&gt;huffman-&gt;encode ($strings, $prefix, \"UTF-8\");\n\n        // translate into IRI characters\n        mb_internal_encoding(\"UTF-8\");\n        $res = '';\n        for ($i = 0 ; $i != strlen($huff) ; $i++) $res .= mb_substr (self::$translator, ord($huff[$i]), 1);\n\n        // done\n        return $res;\n    }\n\n    // ========================================================================\n    // decodes an IRI string into a lambda object\n    // ========================================================================\n    public function decode($input)\n    {\n        // convert IRI characters to binary\n        mb_internal_encoding(\"UTF-8\");\n        $raw = '';\n        $len = mb_strlen ($input);\n        for ($i = 0 ; $i != $len ; $i++)\n        {\n            $c = mb_substr ($input, 0, 1);\n            $input = mb_substr ($input, 1);\n            $raw .= chr(mb_strpos (self::$translator, $c));\n        }\n\n        $this-&gt;bin = '';        \n\n        // check version\n        $version = $this-&gt;read_bits ($raw, self::VERSION_LEN);\n        if ($version != $this-&gt;version) throw new Exception (\"Version mismatch: expected {$this-&gt;version}, found $version\");\n\n        // read booleans\n        foreach ($this-&gt;type as $field =&gt; $type)\n            if ($type == 'b')\n                $res-&gt;$field = $this-&gt;read_bits ($raw, 1) != 0;\n\n        // decode strings\n        $strings = explode ('|', $this-&gt;huffman-&gt;decode ($raw, $this-&gt;bin));\n        $i = 0;\n        foreach ($this-&gt;type as $field =&gt; $type) \n            if ($type == 's')\n                $res-&gt;$field = $strings[$i++];\n\n        // done\n        return $res;\n    }\n\n    // ------------------------------------------------------------------------\n    // reads raw bit blocks from a binary string\n    // ------------------------------------------------------------------------\n    private function read_bits (&amp;$raw, $len)\n    {\n        while (strlen($this-&gt;bin) &lt; $len)\n        {\n            if ($raw == '') throw new Exception (\"premature end of input\"); \n            $this-&gt;bin .= sprintf (\"%08b\", ord($raw[0]));\n            $raw = substr($raw, 1);\n        }\n        $res = bindec (substr($this-&gt;bin, 0, $len));\n        $this-&gt;bin = substr ($this-&gt;bin, $len);\n        return $res;\n    }\n}\n</code></pre>\n\n<p>The underlying Huffman codec</p>\n\n<pre><code>include ('class.huffman.dict.php');\n\nclass Huffman_codec\n{\n    public  $dict = null;\n\n    // ========================================================================\n    // encodes a string in a given string encoding (default: UTF-8)\n    // ========================================================================\n    public function encode($input, $prefix='', $encoding=\"UTF-8\")\n    {\n        mb_internal_encoding($encoding);\n        $bin = $prefix;\n        $res = '';\n        $input .= \"\\0\";\n        $len = mb_strlen ($input);\n        while ($len--)\n        {\n            // get next input character\n            $c = mb_substr ($input, 0, 1);\n            $input = substr($input, strlen($c)); // avoid playing Schlemiel the painter\n\n            // check for foreign characters\n            if (isset($this-&gt;dict-&gt;code[$c]))\n            {\n                // output huffman code\n                $bin .= $this-&gt;dict-&gt;code[$c];\n            }\n            else // foreign character\n            {\n                // escape sequence\n                $lc = strlen($c);\n                $bin .= $this-&gt;dict-&gt;code[\"\\1\"] \n                     . sprintf(\"%02b\", $lc-1); // character length (1 to 4)\n\n                // output plain character\n                for ($i=0 ; $i != $lc ; $i++) $bin .= sprintf(\"%08b\", ord($c[$i]));\n            }\n\n            // convert code to binary\n            while (strlen($bin) &gt;= 8)\n            {\n                $res .= chr(bindec(substr ($bin, 0, 8)));\n                $bin = substr($bin, 8);\n            }\n        }\n\n        // output last byte if needed\n        if (strlen($bin) &gt; 0)\n        {\n            $bin .= str_repeat ('0', 8-strlen($bin));\n            $res .= chr(bindec($bin));\n        }\n\n        // done\n        return $res;\n    }\n\n    // ========================================================================\n    // decodes a string (will be in the string encoding used during encoding)\n    // ========================================================================\n    public function decode($input, $prefix='')\n    {\n        $bin = $prefix;\n        $res = '';\n        $len = strlen($input);\n        for ($i=0 ;;)\n        {\n            $c = $this-&gt;dict-&gt;symbol($bin);\n\n            switch ((string)$c)\n            {\n            case \"\\0\": // end of input\n                break 2;\n\n            case \"\\1\": // plain character\n\n                // get char byte size\n                if (strlen($bin) &lt; 2)\n                {\n                    if ($i == $len) throw new Exception (\"incomplete escape sequence\"); \n                    $bin .= sprintf (\"%08b\", ord($input[$i++]));\n                }\n                $lc = 1 + bindec(substr($bin,0,2));\n                $bin = substr($bin,2);\n                // get char bytes\n                while ($lc--)\n                {\n                    if ($i == $len) throw new Exception (\"incomplete escape sequence\"); \n                    $bin .= sprintf (\"%08b\", ord($input[$i++]));\n                    $res .= chr(bindec(substr($bin, 0, 8)));\n                    $bin = substr ($bin, 8);\n                }\n                break;\n\n            case null: // not enough bits do decode further\n\n                // get more input\n                if ($i == $len) throw new Exception (\"no end of input mark found\"); \n                $bin .= sprintf (\"%08b\", ord($input[$i++]));\n                break;\n\n            default:  // huffman encoded\n\n                $res .= $c;\n                break;          \n            }\n        }\n\n        if (bindec ($bin) != 0) throw new Exception (\"trailing bits in input\");\n        return $res;\n    }\n\n    // ========================================================================\n    // builds a huffman code from an input string or frequency table\n    // ========================================================================\n    public function make_code ($input, $encoding=\"UTF-8\")\n    {\n        if (is_string ($input))\n        {\n            // make dynamic table from the input message\n            mb_internal_encoding($encoding);\n            $frequency = array();\n            while ($input != '')\n            {\n                $c = mb_substr ($input, 0, 1);\n                $input = mb_substr ($input, 1);\n                if (isset ($frequency[$c])) $frequency[$c]++; else $frequency[$c]=1;\n            }\n            $this-&gt;dict = new Huffman_dict ($frequency);\n        }\n        else // assume $input is an array of symbol-indexed frequencies\n        {\n            $this-&gt;dict = new Huffman_dict ($input);\n        }\n    }\n}\n</code></pre>\n\n<p>And the huffman dictionary</p>\n\n<pre><code>class Huffman_dict\n{\n    public  $code = array();\n\n    // ========================================================================\n    // constructs a dictionnary from an array of frequencies indexed by symbols\n    // ========================================================================\n    public function __construct ($frequency = array())\n    {\n        // add terminator and escape symbols\n        if (!isset ($frequency[\"\\0\"])) $frequency[\"\\0\"] = 1e-100;\n        if (!isset ($frequency[\"\\1\"])) $frequency[\"\\1\"] = 1e-100;\n\n        // sort symbols by increasing frequencies\n        asort ($frequency);\n\n        // create an initial array of (frequency, symbol) pairs\n        foreach ($frequency as $symbol =&gt; $frequence) $occurences[] = array ($frequence, $symbol);\n\n        while (count($occurences) &gt; 1)\n        {\n            $leaf1 = array_shift($occurences);\n            $leaf2 = array_shift($occurences);\n            $occurences[] = array($leaf1[0] + $leaf2[0], array($leaf1, $leaf2));\n            sort($occurences);\n        }\n        $this-&gt;tree = $this-&gt;build($occurences[0], '');\n\n    }\n\n    // -----------------------------------------------------------\n    // recursive build of lookup tree and symbol[code] table\n    // -----------------------------------------------------------\n    private function build ($node, $prefix)\n    {\n        if (is_array($node[1]))\n        {\n            return array (\n                '0' =&gt; $this-&gt;build ($node[1][0], $prefix.'0'),\n                '1' =&gt; $this-&gt;build ($node[1][1], $prefix.'1'));\n        }\n        else\n        {\n            $this-&gt;code[$node[1]] = $prefix;\n            return $node[1];\n        }\n    }\n\n    // ===========================================================\n    // extracts a symbol from a code stream\n    // if found     : updates code stream and returns symbol\n    // if not found : returns null and leave stream intact\n    // ===========================================================\n    public function symbol(&amp;$code_stream)\n    {\n        list ($symbol, $code) = $this-&gt;get_symbol ($this-&gt;tree, $code_stream);\n        if ($symbol !== null) $code_stream = $code;\n        return $symbol;\n    }\n\n    // -----------------------------------------------------------\n    // recursive search for a symbol from an huffman code\n    // -----------------------------------------------------------\n    private function get_symbol ($node, $code)\n    {\n        if (is_array($node))\n        {\n            if ($code == '') return null;\n            return $this-&gt;get_symbol ($node[$code[0]], substr($code, 1));\n        }\n        return array ($node, $code);\n    }\n}\n</code></pre>\n\n<h3>Example</h3>\n\n<pre><code>include ('class.iriprm.codec.php');\n\n$iri = new IRI_prm_codec (\"config.txt\");\nforeach (array (\n    'repos' =&gt; \"discussion,documentation,hoodie-cli\",\n    'labels' =&gt; \"enhancement,release-0.3.0,starter\",\n    'milestones' =&gt; \"1.0.0,1.1.0,v0.7\",\n    'username' =&gt; \"mklappstuhl\",\n    'show_open' =&gt; false,\n    'show_closed' =&gt; true,\n    'show_commented' =&gt; true,\n    'show_uncommented' =&gt; false\n) as $prop =&gt; $val) $iri_prm-&gt;$prop = $val;\n\n$encoded = $iri-&gt;encode ($iri_prm);\necho \"encoded as $encoded\\n\";\n$decoded = $iri-&gt;decode ($encoded);\nvar_dump($decoded);\n</code></pre>\n\n<p>output:</p>\n\n<pre><code>encoded as 5\u0136\u016f\u0165\u00ca\u0115CO\u0114\u0180\u016a\u013c\u0164\u0142m\u0104ZE\u00c7\u017d\u00c9\u012f\u00f3\u0161\u00fc\u00ffj\u0127\u0169\u00c5\u00ec\u00c7\u0113O\u012a\u00e4\u0156\u00cf\u0145\u00ed\u017b\u00c9\u0112Qm\u00ecFOy\u00e4\u0156\u011eq\u00e6\u0160\u0179\u014d\u00cd\u0118\u00c6\u0164\u0145\u00cb\u0126\n\nobject(stdClass)#7 (8) {\n  [\"show_open\"]=&gt;\n  bool(false)\n  [\"show_closed\"]=&gt;\n  bool(true)\n  [\"show_commented\"]=&gt;\n  bool(true)\n  [\"show_uncommented\"]=&gt;\n  bool(false)\n  [\"repos\"]=&gt;\n  string(35) \"discussion,documentation,hoodie-cli\"\n  [\"labels\"]=&gt;\n  string(33) \"enhancement,release-0.3.0,starter\"\n  [\"milestones\"]=&gt;\n  string(16) \"1.0.0,1.1.0,v0.7\"\n  [\"username\"]=&gt;\n  string(11) \"mklappstuhl\"\n}\n</code></pre>\n\n<p>In that example, the input got packed into 64 unicode characters, for an input length of about 100, yielding a 1/3 reduction.</p>\n\n<p>An equivalent string:</p>\n\n<pre><code>discussion,documentation,hoodie-cli|enhancement,release-0.3.0,starter|\n1.0.0,1.1.0,v0.7|mklappstuhl|0110\n</code></pre>\n\n<p>Would be compressed by a dynamic Huffman table to 59 characters. Not much of a difference.  </p>\n\n<p>No doubt smart data reordering would reduce that, but then you would need to pass the dynamic table along...</p>\n\n<h3>Chinese to the rescue?</h3>\n\n<p>Drawing on <strong>ttepasse</strong>'s idea, one could take advantage of the huge number of Asian characters to find a range of 0x4000 (12 bits) contiguous values, to code 3 bytes into 2 CJK characters, like so:</p>\n\n<pre><code>    // translate into IRI characters\n    $res = '';\n    $len = strlen ($huff);\n    for ($i = 0 ; $i != $len ; $i++)\n    {\n        $byte = ord($huff[$i]);\n        $quartet[2*$i  ] = $byte &gt;&gt; 4;\n        $quartet[2*$i+1] = $byte &amp;0xF;\n    }\n    $len *= 2;\n    while ($len%3 != 0) $quartet[$len++] = 0;\n    $len /= 3;\n    for ($i = 0 ; $i != $len ; $i++)\n    {\n        $utf16 = 0x4E00 // CJK page base, enough range for 2**12 (0x4000) values\n               + ($quartet[3*$i+0] &lt;&lt; 8)\n               + ($quartet[3*$i+1] &lt;&lt; 4)\n               + ($quartet[3*$i+2] &lt;&lt; 0);\n        $c = chr ($utf16 &gt;&gt; 8) . chr ($utf16 &amp; 0xFF);\n        $res .= $c;\n    }\n    $res = mb_convert_encoding ($res, \"UTF-8\", \"UTF-16\");\n</code></pre>\n\n<p>and back:</p>\n\n<pre><code>    // convert IRI characters to binary\n    $input = mb_convert_encoding ($input, \"UTF-16\", \"UTF-8\");\n    $len = strlen ($input)/2;\n    for ($i = 0 ; $i != $len ; $i++)\n    {\n        $val = (ord($input[2*$i  ]) &lt;&lt; 8) + ord ($input[2*$i+1]) - 0x4E00;\n        $quartet[3*$i+0] = ($val &gt;&gt; 8) &amp;0xF;\n        $quartet[3*$i+1] = ($val &gt;&gt; 4) &amp;0xF;\n        $quartet[3*$i+2] = ($val &gt;&gt; 0) &amp;0xF;\n    }\n    $len *= 3;\n    while ($len %2) $quartet[$len++] = 0;\n    $len /= 2;\n    $raw = '';\n    for ($i = 0 ; $i != $len ; $i++)\n    {\n        $raw .= chr (($quartet[2*$i+0] &lt;&lt; 4) + $quartet[2*$i+1]);\n    }\n</code></pre>\n\n<p>The previous output of 64 Latin chars</p>\n\n<pre><code>5\u0136\u016f\u0165\u00ca\u0115CO\u0114\u0180\u016a\u013c\u0164\u0142m\u0104ZE\u00c7\u017d\u00c9\u012f\u00f3\u0161\u00fc\u00ffj\u0127\u0169\u00c5\u00ec\u00c7\u0113O\u012a\u00e4\u0156\u00cf\u0145\u00ed\u017b\u00c9\u0112Qm\u00ecFOy\u00e4\u0156\u011eq\u00e6\u0160\u0179\u014d\u00cd\u0118\u00c6\u0164\u0145\u00cb\u0126\n</code></pre>\n\n<p>would \"shrink\" to 42 Asian characters:</p>\n\n<pre><code>\u4e59\u583d\u5b74\u5cf4\u52c0\u57a7\u58e9\u5778\u51ab\u5698\u4f70\u5ada\u51f2\u54a9\u4fc7\u5671\u5235\u5dcb\u5a1c\u597e\u57f5\u5cfc\u5714\u594c\u5911\u555d\u556f\u5dbc\u52f2\u5a52\u5a45\u51cb\u51cb\u4f13\u508a\u53b7\u4f96\u54a5\u5304\u51af\u5871\u50cc\n</code></pre>\n\n<p>However, as you can see, the sheer bulk of your average ideogram makes the string actually longer (pixel-wise), so even if the idea was promising, the outcome is rather disappointing.</p>\n\n<h3>Picking thinner glyphs</h3>\n\n<p>On the other hand, you can try to pick \"thin\" characters as a base for URI encoding. For instance:</p>\n\n<pre><code>\u2588\u144a\u1d44\u2032\u04cf\u1d9f\u2c66\u1d4b\u1d4ei\u00ef\u1d43\u1dbe\u16ec\u0163\u1dab\ua78c\u1da9\u1807\u0702\u0627l\u1da8\u1dbe\u16c1\u205a\u1d49\u0287\u020b\u0287\u03af\u05df\u1819\u06c3\u1fd7\u1963\u1d4b\u012d\ua78c\u17f2\u16e7\u0f1a\u01ab\u0719\u06d4\u02c0\u0237\u02c1\u0287\u02b9\u012d\u2215\u0671;\u0142\u1da5\u0575;\u1d36\u205a\u0129i\u2044\u0288\u2588\n</code></pre>\n\n<p>instead of</p>\n\n<pre><code>\u25885\u0136\u016f\u0165\u00ca\u0115CO\u0114\u0180\u016a\u013c\u0164\u0142m\u0104ZE\u00c7\u017d\u00c9\u012f\u00f3\u0161\u00fc\u00ffj\u0127\u0169\u00c5\u00ec\u00c7\u0113O\u012a\u00e4\u0156\u00cf\u0145\u00ed\u017b\u00c9\u0112Qm\u00ecFOy\u00e4\u0156\u011eq\u00e6\u0160\u0179\u014d\u00cd\u0118\u00c6\u0164\u0145\u00cb\u0126\u2588\n</code></pre>\n\n<p>That will shrink the length by half with proportional fonts, including in a browser address bar.</p>\n\n<p>My best candidate set of 256 \"thin\" glyphs so far:</p>\n\n<pre><code>\u180a\u0f0d\u144a\u02b2\u0f0b\u0f0c\u1d4e\u1d62\u1da4\u1da9\u1daa\u1da6\u1da7\u02e1\u2006\u2044\u2215\u0e40'\ua78b\ua78c\ua876\u1da5\u1d57\u1db5\u1da8|\u00a6\u01c0\u1d35\u2009\u202f\u1427\u1da0\u1da1\u0f34\u02e2\u1db3\u204f\u1db4\u02b3\u02b4\u02b5\u0589\u16ec\u236e\u02b9\u2032\u205f\u205a\u205d\u1d63\u2358\u0f14\u237f\u1835\u1963\u1d4b\u1d4c\u1d9f\u1d36\u01c2\u02c0\u02c1\u02e4\u0f11,. \u2005\u2008\u2219\u0196\u17f2\u1819\u1d49\u1d4a\u1d53\u1d9c\u1d9d\u2091\u2094\u0575\u2d4f\u2d51\u0f1d\u0f0e\u055b\u1d5e\u1d67\u16bd\u16c1\u16c2\u16cc\u16cd\u16d9\u16e7\u1da2\u1dbe\u09f7\u2373\u0269\u0390\u03af\u03b9\u03ca\u1d7c\u1f30\u1f31\u1f32\u1f33\u1f34\u1f35\u1f36\u1f37\u1f76\u1f77\u1fd0\u1fd1\u1fd2\u1fd3\u1fd6\u1fd7\u23b0\u23b1\u1806\u1dbf\u055d\u1d5f\u1dab\u1d43\u1d44\u1dbb\u1dbc\u2090\u222b\u00aa\u0c79\u1814/:;\\ijlt\u00ec\u00ed\u00ee\u00ef\u0129\u012b\u012d\u012f\u0131\u0135\u013a\u013c\u0142\u0163\u0167\u017f\u019a\u01ab\u01ad\u01d0\u01f0\u0209\u020b\u021b\u0234\u0237\u0249\u0268\u026a\u026b\u026c\u026d\u0287\u0288\u029d\u02d0\u02d1\u02f8\u037e\u0387\u03f3\u0456\u0457\u0458\u04cf\u1807\u1d09\u1d75\u1d7b\u1d85\u1d96\u1e2d\u1e2f\u1e37\u1e39\u1e3b\u1e3d\u1e6b\u1e6d\u1e6f\u1e71\u1e97\u1e9b\u1ec9\u1ecb\u205e\u23ba\u23bb\u23bc\u23bd\u2c61\u2c66\ua789\u0f08\u01c1\u2016\u0f05\u0f1a\u1d51\u1d5d\u1d61\u1d66\u1d6a\u0e32\u1811\u2af6\u1d9e\u1681\u1686\u168b\u1690\u1695\u1d52\u1d54\u1d55\u1db1\u2092\u2d57\u02e3\u2093\u1db9\u0e45\u02b6\u02e0\u16eb\u1d5b\u1d65\u1dba\u1d0a\n</code></pre>\n\n<h1>Conclusion</h1>\n\n<p>This implementation should be ported to JavaScript to allow client-server exchange.<br>\nYou should also provide a way to share the structure and Huffman codes with the clients.</p>\n\n<p>It is not difficult and rather fun to do, but that means even more work :).</p>\n\n<p>The Huffman gain in term of <em>characters</em> is around 30%.</p>\n\n<p>Of course these characters are multibyte for the most part, but if you aim for the shortest URI it does not matter.<br>\nExcept for the booleans that can easily be packed to 1 bit, those pesky strings seem rather reluctant to be compressed.<br>\nIt might be possible to better tune the frequencies, but I doubt you will get above 50% compression rate.</p>\n\n<p>On the other hand, picking thin glyphs does actually more to shrink the string.</p>\n\n<p>So all in all the combination of both might indeed achieve something, though it's a lot of work for a modest result.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Why not use a third party link shortener?</p>\n\n<p>(I am assuming you don't have a problem with <a href=\"/questions/417142/what-is-the-maximum-length-of-a-url-in-different-browsers\">URI length limits</a> since you mentioned this is an existing application.)</p>\n\n<p>It looks like you're writing a <a href=\"https://addons.mozilla.org/en-US/firefox/addon/greasemonkey/\" rel=\"nofollow\">Greasemonkey</a> script or thereabouts, so perhaps you have access to <a href=\"http://wiki.greasespot.net/GM_xmlhttpRequest\" rel=\"nofollow\">GM_xmlhttpRequest()</a>, which would allow use of a third party link shortener.</p>\n\n<p>Otherwise, you'd need to use <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\" rel=\"nofollow\">XMLHttpRequest()</a> and host your own link shortening service on the same server to avoid crossing the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Same_origin_policy_for_JavaScript\" rel=\"nofollow\">same-origin policy</a> boundary.  A quick online search for hosting your own shorteners supplied me with a <a href=\"http://www.webresourcesdepot.com/7-open-source-and-free-url-shortener-scripts-to-create-your-own/\" rel=\"nofollow\">list of 7 free/open source PHP link shortener scripts</a> and <a href=\"https://github.com/davidkrisch/link-shortener\" rel=\"nofollow\">one more</a> on GitHub, though the question likely excludes this kind of approach since \"The app\u2019s logic is in-browser only, and there is no backend I can write to.\"</p>\n\n<p>You can see example code implementing this kind of thing in the <a href=\"http://userscripts.org/scripts/show/22029\" rel=\"nofollow\">URL Shortener</a> UserScript (for Greasemonkey), which pops up a shortened version of the current page's URL when you press SHIFT+T.</p>\n\n<p>Of course, shorteners will redirect users to the long form URL, but this would be a problem in any non-server-side solution.  At least a shortener can theoretically proxy (like Apache's <a href=\"https://httpd.apache.org/docs/current/mod/mod_rewrite.html#rewriterule\" rel=\"nofollow\">RewriteRule</a> with [P]) or use a &lt;frame&gt; tag.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Why not using <a href=\"https://developers.google.com/protocol-buffers/docs/overview\" rel=\"nofollow\">protocol-buffers</a>?</p>\n\n<blockquote>\n  <p>Protocol buffers are a flexible, efficient, automated mechanism for serializing structured data \u2013 think XML, but smaller, faster, and simpler. You define how you want your data to be structured once, then you can use special generated source code to easily write and read your structured data to and from a variety of data streams and using a variety of languages. You can even update your data structure without breaking deployed programs that are compiled against the \"old\" format.</p>\n</blockquote>\n\n<p><a href=\"https://github.com/dcodeIO/ProtoBuf.js/\" rel=\"nofollow\">ProtoBuf.js</a> converts objects to protocol buffer messages and vice vera.</p>\n\n<p>The following object converts to: <code>CgFhCgFiCgFjEgFkEgFlEgFmGgFnGgFoGgFpIgNqZ2I=</code></p>\n\n<pre><code>{\n    repos : ['a', 'b', 'c'],\n    labels: ['d', 'e', 'f'],\n    milestones : ['g', 'h', 'i'],\n    username : 'jgb'\n}\n</code></pre>\n\n<h2>Example</h2>\n\n<p>The following example is built using <a href=\"http://requirejs.org/\" rel=\"nofollow\">require.js</a>. Give it a try on this <a href=\"http://jsfiddle.net/PAXD8/\" rel=\"nofollow\">jsfiddle</a>.</p>\n\n<pre><code>require.config({\n    paths : {\n        'Math/Long'  : '//rawgithub.com/dcodeIO/Long.js/master/Long.min',\n        'ByteBuffer' : '//rawgithub.com/dcodeIO/ByteBuffer.js/master/ByteBuffer.min',\n        'ProtoBuf'   : '//rawgithub.com/dcodeIO/ProtoBuf.js/master/ProtoBuf.min'\n    }\n})\n\nrequire(['message'], function(message) {\n    var data = {\n        repos : ['a', 'b', 'c'],\n        labels: ['d', 'e', 'f'],\n        milestones : ['g', 'h', 'i'],\n        username : 'jgb'\n    }\n\n    var request = new message.arguments(data);\n\n    // Convert request data to base64\n    var base64String = request.toBase64();\n    console.log(base64String);\n\n    // Convert base64 back\n    var decodedRequest = message.arguments.decode64(base64String);\n    console.log(decodedRequest);\n});\n\n// Protobuf message definition\n// Message definition could also be stored in a .proto definition file\n// See: https://github.com/dcodeIO/ProtoBuf.js/wiki\ndefine('message', ['ProtoBuf'], function(ProtoBuf) {\n    var proto = {\n        package : 'message',\n        messages : [\n            {\n                name : 'arguments',\n                fields : [\n                    {\n                        rule : 'repeated',\n                        type : 'string',\n                        name : 'repos',\n                        id : 1\n                    },\n                    {\n                        rule : 'repeated',\n                        type : 'string',\n                        name : 'labels',\n                        id : 2\n                    },\n                    {\n                        rule : 'repeated',\n                        type : 'string',\n                        name : 'milestones',\n                        id : 3\n                    },\n                    {\n                        rule : 'required',\n                        type : 'string',\n                        name : 'username',\n                        id : 4\n                    },\n                    {\n                        rule : 'optional',\n                        type : 'bool',\n                        name : 'with_comments',\n                        id : 5\n                    },\n                    {\n                        rule : 'optional',\n                        type : 'bool',\n                        name : 'without_comments',\n                        id : 6\n                    }\n                ],\n            }\n        ]\n    };\n\n    return ProtoBuf.loadJson(proto).build('message')\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Say I have a <a href=\"http://espy.github.io/ubersicht/\">single-page application</a> that uses a third party API for content. The app\u2019s logic is in-browser only, and there is no backend I can write to.</p>\n\n<p>To allow deep-linking into the state of the app, I use pushState to keep track of a few variables that determine the state of the app (note that Ubersicht\u2019s public version doesn\u2019t do this yet). In this case <code>repos</code>, <code>labels</code>, <code>milestones</code> and <code>username</code>, <code>show_open</code> (bool) and <code>with_comments</code> (bool) and <code>without_comments</code> (bool). The URL format is <code>?label=label_1,label_2,label_3&amp;repos=repo_1\u2026</code>. Values are the usual suspects, roughly <code>[a-zA-Z][a-zA-Z0-9_-]</code>, or any boolean indicator.</p>\n\n<p>So far so good. Now since the query string can be a bit long and unwieldy and I would like to be able to pass around URLs like <code>http://espy.github.io/ubersicht/?state=SOMOPAQUETOKENTHATLOSSLESSLYDECOMPRESSESINTOTHEORIGINALVALUES#hoodiehq</code>, the shorter the better.</p>\n\n<p>My first attempt was going to be using some zlib like algorithm for this (<a href=\"https://github.com/imaya/zlib.js\">https://github.com/imaya/zlib.js</a>) and @flipzagging pointed to antirez/smaz (https//github.com/antirez/smaz) which sounds more suitable for short strings (JavaScript version at <a href=\"https://github.com/personalcomputer/smaz.js\">https://github.com/personalcomputer/smaz.js</a>).</p>\n\n<p>Since <code>=</code> and <code>&amp;</code> are not specifically handled in <a href=\"https://github.com/personalcomputer/smaz.js/blob/master/lib/smaz.js#L9\">https://github.com/personalcomputer/smaz.js/blob/master/lib/smaz.js#L9</a>, we might be able to tweak things a little there.</p>\n\n<p>Furthermore, there is an option for encoding the values in a fixed table, e.g. the order of arguments is pre-defined and all we need to keep track of is the actual value. E.g. turn <code>a=hamster&amp;b=cat</code> into <code>7hamster3cat</code> (length+chars)or hamster|cat (value + <code>|</code>), potentially before the smaz compression.</p>\n\n<p>Is there anything else I should be looking for?</p>\n",
            "last_activity_date": 1393278654,
            "question_id": 21802866,
            "score": 24,
            "tags": [
                "javascript",
                "url",
                "browser",
                "compression",
                "single-page-application"
            ],
            "title": "How to compress URL parameters"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I think click() is a reserved procedure name, so you can't overwrite it. Explains why changing the name and nothing else gets it working.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think the click() method in javascript simulates clicking the button. So this must be a sort of infinite loop...</p>\n\n<p>Edited to add: Check out <a href=\"http://msdn.microsoft.com/en-us/library/aa752277%28VS.85%29.aspx\" rel=\"nofollow\">MSDN</a> for documentation of the click method</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Code within inline event handlers is scoped to the element, as if it was in a <code>with</code> block.</p>\n\n<p>Therefore, within the <code>onclick</code> handler, the name <code>click</code> resolves to the element's <code>click</code> method.</p>\n\n<p>This can be <a href=\"http://jsbin.com/ugilu\">demonstrated</a> by writing <code>alert(nodeName)</code> in the handler</p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>DOM elements have a native <a href=\"https://developer.mozilla.org/en/DOM/element.click\">click()</a> method.</p>\n\n<p>The following will show that click is a native method:</p>\n\n<pre><code>&lt;input type=\"radio\" onclick=\"alert(click.toString())\"&gt;\n</code></pre>\n\n<p>You can register your click function as the event handler as follows. Within the handler, <code>this</code> will refer to the HTML element.</p>\n\n<pre><code>&lt;input type=\"radio\" id=\"foo\" &gt;\n\nfunction click()\n{\n    alert(\"click\");\n}\ndocument.getElementById('foo').onclick = click;\n</code></pre>\n\n<p>There is an excellent series of articles about browser events at <a href=\"http://www.quirksmode.org/js/introevents.html\">http://www.quirksmode.org/js/introevents.html</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>'click' by itself is NOT a javascript <a href=\"https://developer.mozilla.org/En/Core_JavaScript_1.5_Reference/Reserved_Words\" rel=\"nofollow\">reserved keyword</a> outside the context of the inline event handler as Slaks answered.</p>\n\n<p>That is to say the \"click\" method defined in the question is valid. Attaching the event handler 'externally' will work. E.g. using jQuery:</p>\n\n<pre><code>$('input').click(click);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I was playing around with JavaScript in FireFox, and hit a problem that is illustrated in the following example:</p>\n\n<pre><code>&lt;HEAD&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction click()\n{\n    alert(\"click\");\n}\n\n&lt;/script&gt;\n&lt;/HEAD&gt;\n\n&lt;BODY&gt;\n\n&lt;input type=\"radio\" onclick=\"click()\"&gt;\n&lt;/BODY&gt;\n</code></pre>\n\n<p>When I click on the radio button, nothing happens, and no errors (in Firebug)</p>\n\n<p>If I change the name of the function to do_click, and change the onclick, then I get the alert.</p>\n\n<p>So question is: what is happening? click does not appear to be a reserved word, or an existing symbol</p>\n",
            "last_activity_date": 1265339586,
            "question_id": 2204538,
            "score": 24,
            "tags": [
                "javascript"
            ],
            "title": "What is &#39;click()&#39; in JavaScript"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You might want to try removing the \"pause\" attribute.  It's not necessary if you are not automatically cycling through the images.  My assumption (and I'm going to look at the bootstrap code to verify) is that when the \"mouseleave\" event fires, the cycling resumes -- even if it was turned off in the first place.  When it resumes, it uses the default speed.</p>\n\n<p>Here is a solution: </p>\n\n<pre><code>$(function() {\n    $('.carousel').each(function(){\n        $(this).carousel({\n            interval: false\n        });\n    });\n});\u200b\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>Apart from what @dgabriel suggests, do make sure that the JavaScript call that initializes Bootstrap carousel is AFTER the <code>&lt;script&gt;</code> references to jQuery, bootstrap-transition.js, and bootstrap-carousel.js, pretty much like this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://twitter.github.com/bootstrap/assets/js/jquery.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"http://twitter.github.com/bootstrap/assets/js/bootstrap-transition.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"http://twitter.github.com/bootstrap/assets/js/bootstrap-carousel.js\"&gt;&lt;/script&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n$(document).ready(function() {\n    $('.gallery-carousel').each(function(){\n        $(this).carousel({\n            interval: false\n        });\n    });\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>This makes sure that the carousel works as intended (errors like <strong><code>Uncaught ReferenceError: $ is not defined (anonymous function)</code></strong> for example.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I'm not sure why but the main solution didn't work for me either. Weird.</p>\n\n<p>To fix my problem I did the following code.</p>\n\n<pre><code>$('.carousel').carousel({interval: false});\n\n$(document).on('mouseleave', '.carousel', function() {\n\n    $(this).carousel('pause');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I just came up with a solution for this issue. None of the above worked for me, but it did get me to look at the bootstrap code. I believe the reason for this bug is in the bootstrap-carousel.js file in the defaults object:</p>\n\n<pre><code>  $.fn.carousel.defaults = {\n    interval: 5000\n  , pause: 'hover'\n  }\n</code></pre>\n\n<p>After the carousel slides, it ends up reverting to these default values. If you want the carousel to not slide and only be controlled by the user, you can change the defaults object to have an interval of false. Hope this helps. </p>\n\n<pre><code>  $.fn.carousel.defaults = {\n    interval: false\n  , pause: 'hover'\n  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>To disable cycling, one working solution is to add data-interval=\"false\" to the carousel container:</p>\n\n<pre><code>&lt;div id=\"myCarousel\" class=\"carousel slide\" data-interval=\"false\"&gt;\n    &lt;div class=\"carousel-inner\"&gt;\n        &lt;div class=\"active item\"&gt;toto&lt;/div&gt;\n        &lt;div class=\"item\"&gt;tata&lt;/div&gt;\n        &lt;div class=\"item\"&gt;tutu&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;a class=\"carousel-control left\" href=\"#myCarousel\" data-slide=\"prev\"&gt;&amp;lsaquo;&lt;/a&gt;\n    &lt;a class=\"carousel-control right\" href=\"#myCarousel\" data-slide=\"next\"&gt;&amp;rsaquo;&lt;/a&gt;                                                                        \n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>I tried everything, but nothing worked. I solved the issue in changing files bootstrap.min.js &amp; bootstrap.js. You have to looking for \"carousel.defaults\" with Ctrl+F in these files and replace what it contains by:</p>\n\n<pre><code>interval:false \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>&lt;div id=\"carousel-example-generic\" class=\"carousel slide\" data-wrap=\"false\"&gt;\n</code></pre>\n\n<p><a href=\"http://getbootstrap.com/javascript/#carousel\" rel=\"nofollow\">http://getbootstrap.com/javascript/#carousel</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think @dgabriel's answer should work, because :</p>\n\n<p>bootstrap carousel's pause() method doesn't treat its argument the way you think it does. pause(true) doesn't mean \"yes, pause it\", nor does pause(false) mean \"no, don't pause it\".</p>\n\n<p>it can be seen in the source code, </p>\n\n<pre><code>Carousel.prototype.pause = function (e) {\n  e || (this.paused = true)\n  ...\n  this.interval = clearInterval(this.interval)\n\n  return this\n}\n</code></pre>\n\n<p>github link <a href=\"https://github.com/twbs/bootstrap/blob/master/js/carousel.js#L68\" rel=\"nofollow\">here</a></p>\n\n<p>as can be seen, if <code>e</code> is true, <code>this.paused = true</code> won't execute. so when event \"mouseleave\" fires, cycle() method still see \"paused == false\" and setInterval is executed again, so your carousel won't stay still.</p>\n\n<pre><code>// mouseleave event fires using cycle() with no arguments\n.on('mouseleave', $.proxy(this.cycle, this))\n\n// so when cycle() is called, this.paused == false.\nCarousel.prototype.cycle =  function (e) {\n  e || (this.paused = false)\n\n  this.interval &amp;&amp; clearInterval(this.interval)\n\n  // set interval == false to prevent setInterval\n  this.options.interval\n    &amp;&amp; !this.paused\n    &amp;&amp; (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\n\n  return this\n}\n</code></pre>\n\n<p>to pause, use <code>.pause()</code> and <code>interval=false</code> to prevent \"mouseleave\" event to recycle. bootstrap itself uses it this way, it can be seen <a href=\"https://github.com/twbs/bootstrap/blob/master/js/carousel.js#L111\" rel=\"nofollow\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p><strong>Twitter Bootstrap Version:</strong> 2.0.3</p>\n\n<p><strong>Example HTML code:</strong></p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html dir=\"ltr\" lang=\"en-US\" xmlns:og=\"http://opengraphprotocol.org/schema/\"&gt;\n&lt;head&gt;\n&lt;link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"reddlec/style.css\" /&gt;\n&lt;script type=\"text/javascript\"&gt;\n$(document).ready(function() {\n    $('.carousel').each(function(){\n        $(this).carousel({\n            pause: true,\n            interval: false\n        });\n    });\n});\u200b\n&lt;/script&gt;\n&lt;script src=\"http://twitter.github.com/bootstrap/assets/js/jquery.js\"&gt;&lt;/script&gt;\n&lt;script src=\"http://twitter.github.com/bootstrap/assets/js/bootstrap-transition.js\"&gt;&lt;/script&gt;\n&lt;script src=\"http://twitter.github.com/bootstrap/assets/js/bootstrap-carousel.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id=\"myCarousel\" class=\"carousel slide\"&gt;\n  &lt;!-- Carousel items --&gt;\n  &lt;div class=\"carousel-inner\"&gt;\n    &lt;div class=\"active item\"&gt;\u2026&lt;/div&gt;\n    &lt;div class=\"item\"&gt;\u2026&lt;/div&gt;\n    &lt;div class=\"item\"&gt;\u2026&lt;/div&gt;\n  &lt;/div&gt;\n  &lt;!-- Carousel nav --&gt;\n  &lt;a class=\"carousel-control left\" href=\"#myCarousel\" data-slide=\"prev\"&gt;&amp;lsaquo;&lt;/a&gt;\n  &lt;a class=\"carousel-control right\" href=\"#myCarousel\" data-slide=\"next\"&gt;&amp;rsaquo;&lt;/a&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>CSS:</strong> Provided with <a href=\"http://twitter.github.com/bootstrap/assets/css/bootstrap.css\">bootstrap.css</a></p>\n\n<p><strong>Problem:</strong> As you can see, I've enabled <strong>paused</strong> mode, and disabled <strong>cycling</strong>. But when I click the carousel's left or right controls, the carousel starts cycling at the default interval (5 seconds per cycle) on mouseleave.</p>\n\n<p>How do I forcefully disable cycling? I want the images to be cycled manually by the user.</p>\n\n<p><em>You can test the problem live on my test site <a href=\"http://whatthenerd.com/apps/apple-shares-top-500-mark-70-billion-richer-than-its-nearest-competitor-201205.html\">here</a>.</em></p>\n",
            "last_activity_date": 1396566169,
            "question_id": 10521165,
            "score": 23,
            "tags": [
                "javascript",
                "twitter-bootstrap"
            ],
            "title": "Bootstrap JavaScript Carousel Doesn&#39;t Stop Cycling"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The textarea has background-color: transparent; the extra div you're looking for is behind it, with the same text and font as the textarea, but different colours.</p>\n\n<p>A short example to illustrate the point:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Demo&lt;/title&gt;\n&lt;style&gt;\n* { font-family: sans-serif; font-size: 10pt; font-weight: normal; }\n.wrapper     { position: relative; width: 400px; height: 400px; outline: solid 1px #666; }\n.wrapper &gt; * { position: absolute; top: 0; left: 0; height: 100%; width: 100%; margin: 0; padding: 0; }\n.highlighter { background-color: #fff; color: #fff; }\n.highlight   { background-color: #9ff; color: #9ff; }\ntextarea     { background-color: transparent; border: 0; }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div class=\"wrapper\"&gt;\n&lt;div class=\"highlighter\"&gt;\nThis &lt;span class=\"highlight\"&gt;is a&lt;/span&gt; demonstration.\n&lt;/div&gt;\n&lt;textarea&gt;\nThis is a demonstration.\n&lt;/textarea&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Of course, this does not update the special div as you type into the textarea, you need a lot of JavaScript for that.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>See <a href=\"http://jsfiddle.net/HR5N8/\">this example here</a>. I used only CSS and HTML... The JS is very more complex for now. I don't know exactly what you expect.</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div id=\"textback\"&gt;\n    &lt;div id=\"backmodel\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;textarea id=\"textarea\"&gt;Hey Nicolae, it is just a test!&lt;/textarea&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>#textarea {\n    background: transparent;\n    border: 1px #ddd solid;\n    position: absolute;\n    top: 5px;\n    left: 5px;\n    width: 400px;\n    height: 120px;\n    font: 9pt Consolas;\n}\n\n#backmodel {\n    position: absolute;\n    top: 7px;\n    left: 32px;\n    background-color: #D8DFEA;\n    width: 53px;\n    height: 9pt;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>I would suggest changing the text you want to assign a background inline to to <code>display: inline-block; background-color: #YOURCOLOR;</code>. This should do exactly what you want it to do without all the complexities of some of the above answers.</p>\n\n<p>Ultimately your CSS should look something like this:</p>\n\n<pre><code>.name {display: inline-block; background-color: purple;}\n</code></pre>\n\n<p>Then add some sort of event listener in jQuery (not sure how you're identifying that it is a name) and inside that conditional put:</p>\n\n<pre><code>$(yourNameSelectorGoesHere).addClass(\".name\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>hi you can check this jquery autosuggest plugin similar to facebook .I have used this to achive the same functionality you required\n<a href=\"http://www.devthought.com/2008/01/12/textboxlist-meets-autocompletion/\" rel=\"nofollow\">http://www.devthought.com/2008/01/12/textboxlist-meets-autocompletion/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I have a completely different approach to this issue using HTML5. I use a <code>div</code> with <code>contentEditable=\"true\"</code> instead of a textarea (wich I was using until I got stuck with the same problem you had).</p>\n\n<p>Then if I want to change the background color of a specified part I just wrapp that text with a span.</p>\n\n<p>I am not 100% sure if it is the correct approach as I am a newbie in HTML5 but it works fine in all the browsers I have tested it (Firefox 15.0.1 , Chrome 22.0.1229.79 and IE8).</p>\n\n<p>Hope it helps</p>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>I try to achieve something like the Facebook does when you type @&lt;NAME_OF_A_FRIEND&gt; in a reply. After you choose a friend, the name of that friend is highlighted with a blueish background, so you know it's a separate entity in that text.</p>\n\n<p>I've \"inspect element\"-ed that textarea and there is no div placed on top of the textarea.</p>\n\n<p>Can anyone give me a clue about how that is done ?</p>\n\n<p><img src=\"http://i.stack.imgur.com/g7DNX.png\" alt=\"enter image description here\"></p>\n",
            "last_activity_date": 1415271449,
            "question_id": 8438371,
            "score": 23,
            "tags": [
                "javascript",
                "html",
                "css",
                "facebook"
            ],
            "title": "Highlight text inside textarea like Facebook does"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>1.Try this:</p>\n\n<pre><code>&lt;input type=\"button\" onclick=\"function1();function2();\" value=\"Call2Functions\" /&gt;\n</code></pre>\n\n<p>2.Call second function at the end of first function</p>\n\n<pre><code>   function func1(){\n     //--- some logic\n     func2();\n   }\n\n   function func2(){\n    //--- some logic\n   }\n</code></pre>\n\n<p>and call func1() onclick of button:</p>\n\n<pre><code>&lt;input type=\"button\" onclick=\"func1();\" value=\"Call2Functions\" /&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>As stated by Harry Joy, you can do it on the <code>onclick</code> attr like so:</p>\n\n<pre><code>&lt;input type=\"button\" onclick=\"func1();func2();\" value=\"Call2Functions\" /&gt;\n</code></pre>\n\n<p>Or, in your JS like so:</p>\n\n<pre><code>document.getElementById( 'Call2Functions' ).onclick = function()\n{\n    func1();\n    func2();\n};\n</code></pre>\n\n<p>Or, if you are assigning an onclick programmatically, and aren't sure if a previous onclick existed (and don't want to overwrite it):</p>\n\n<pre><code>var Call2FunctionsEle = document.getElementById( 'Call2Functions' ),\n    func1 = Call2FunctionsEle.onclick;\n\nCall2FunctionsEle.onclick = function()\n{\n    if( typeof func1 === 'function' )\n    {\n        func1();\n    }\n    func2();\n};\n</code></pre>\n\n<p>If you need the functions run in scope of the element which was clicked, a simple use of apply could be made:</p>\n\n<pre><code>document.getElementById( 'Call2Functions' ).onclick = function()\n{\n    func1.apply( this, arguments );\n    func2.apply( this, arguments );\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p><strong>The modern event handling method:</strong></p>\n\n<pre><code>element.addEventListener('click', startDragDrop, false);\nelement.addEventListener('click', spyOnUser, false);\n</code></pre>\n\n<p>The first argument is the event, the second is the function and the third specifies whether to allow event bubbling.</p>\n\n<p>From <a href=\"http://www.quirksmode.org/js/events_advanced.html\" rel=\"nofollow\">QuirksMode</a>:</p>\n\n<blockquote>\n  <p>W3C\u2019s DOM Level 2 Event specification pays careful attention to the problems of the traditional model. It offers a simple way to register as many event handlers as you like for the same event on one element.</p>\n  \n  <p>The key to the W3C event registration model is the method <code>addEventListener()</code>. You give it three arguments: the event type, the function to be executed and a boolean (true or false) that I\u2019ll explain later on. To register our well known doSomething() function to the onclick of an element you do:</p>\n</blockquote>\n\n<p>Full details here: <a href=\"http://www.quirksmode.org/js/events_advanced.html\" rel=\"nofollow\">http://www.quirksmode.org/js/events_advanced.html</a></p>\n\n<p><strong>Using jQuery</strong></p>\n\n<p>if you're using jQuery, there is a nice API for event handling:</p>\n\n<pre><code>$('#myElement').bind('click', function() { doStuff(); });\n$('#myElement').bind('click', function() { doMoreStuff(); });\n$('#myElement').bind('click', doEvenMoreStuff);\n</code></pre>\n\n<p>Full details here: <a href=\"http://api.jquery.com/category/events/\" rel=\"nofollow\">http://api.jquery.com/category/events/</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<pre><code>&lt;input type=\"button\" onclick=\"functionA();functionB();\" /&gt;\n\nfunction functionA()\n{\n\n}\n\nfunction functionB()\n{\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>Hi,</strong></p>\n\n<p>You can also do as like below... In this way, your both functions should call and if both functions return true then it will return true else return false.</p>\n\n<pre><code>&lt;input type=\"button\" \n     onclick=\"var valFunc1 = func1(); var valFunc2 = func2(); if(valFunc1 == true &amp;&amp; valFunc2 ==true) {return true;} else{return false;}\" \n     value=\"Call2Functions\" /&gt;\n</code></pre>\n\n<p><strong>Thank you,\nVishal Patel</strong></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How to call two methods on button's onclick method in HTML or JavaScript ?</p>\n",
            "last_activity_date": 1421833652,
            "question_id": 5882313,
            "score": 23,
            "tags": [
                "javascript",
                "html",
                "onclick"
            ],
            "title": "How to call two methods on button&#39;s onclick method in HTML or JavaScript?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>In jQuery, when you handle the click event, <del>return false to stop the link from responding the usual way</del> prevent the default action, which is to visit the <code>href</code> attribute, from taking place (per PoweRoy's comment and <a href=\"http://stackoverflow.com/questions/3252730/a-tag-question/3252745#3252745\">Erik's answer</a>):</p>\n\n<pre><code>$('a.someclass').click(function(e)\n{\n    // Special stuff to do when this link is clicked...\n\n    // Cancel the default action\n    e.preventDefault();\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 58
                },
                {
                    "body": "<p>You can use <code>event.preventDefault()</code> to avoid this. Read more here: <a href=\"http://api.jquery.com/event.preventDefault/\">http://api.jquery.com/event.preventDefault/</a>.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>you can even write it just like this:</p>\n\n<pre><code>&lt;a href=\"javascript:void(0);\"&gt;&lt;/a&gt;\n</code></pre>\n\n<p>im not sure its a better way but it is a way :)</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>If you want to use a anchor you can use <a href=\"http://api.jquery.com/event.preventDefault/\">http://api.jquery.com/event.preventDefault/</a> like the other answers suggested. </p>\n\n<p>You can also use any other element like a span and attach the click event to that.</p>\n\n<pre><code>$(\"span.clickable\").click(function(){\nalert('Yeah I was clicked');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Just use <code>&lt;input type=\"button\" /&gt;</code> instead of <code>&lt;a&gt;</code> and use CSS to style it to look like a link if you wish.</p>\n\n<p>Buttons are made specifically for clicking, and they don't need any href attributes.</p>\n\n<p>The best way is to use onload action to create the button and append it where you need via javascript, so with javascript disabled, they will not show at all and do not confuse the user.</p>\n\n<p>When you use <code>href=\"#\"</code> you get tons of different links pointing to the same location, which won't work when the agent does not support JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If the  element doesn't have a meaningful href value, then it isn't really a link, so why not use some other element instead?</p>\n\n<p>As suggested by Neothor, a span is just as appropriate and, if styled correctly, will be visibly obvious as an item that can be clicked on. You could even attach an hover event, to make the elemnt 'light up' as the user's mouse moves over it.</p>\n\n<p>However, having said this, you may want to rethink the design of your site so that it functions without javascript, but is enhanced by javascript when it is available.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Just use</p>\n\n<p><strong></strong></p>\n\n<pre><code>&lt;a href=\"javascript:;\" class=\"someclass\"&gt;Text&lt;/a&gt;\n</code></pre>\n\n<p><strong>JQUERY</strong> </p>\n\n<pre><code>$('.someclass').click(function(e) { alert(\"action here\"); }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You could just pass an anchor tag without an href property, and use jQuery to do the required action:</p>\n\n<p><code>&lt;a class=\"foo\"&gt;bar&lt;/a&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>So this is old but... just in case someone finds this in a search.</p>\n\n<p>Just use \"#/\" instead of \"#\" and the page won't jump.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can also return false after processing your jquery.</p>\n\n<p>Eg.</p>\n\n<pre><code>$(\".clickableAnchor\").live(\n    \"click\",\n    function(){\n        //your code\n        return false; //&lt;- prevents redirect to href address\n    }\n);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I use something like this:</p>\n\n<pre><code>&lt;a href=\"#null\" class=\"someclass\"&gt;Text&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Warning: This may be a very stupid question...</p>\n\n<p>I'm currently using <code>&lt;A&gt;</code> tags with jquery to initiate things like click events, etc. </p>\n\n<p>Example is <code>&lt;a href=\"#\" class=\"someclass\"&gt;Text&lt;/a&gt;</code></p>\n\n<p>But I hate how the '#' makes the page jump to the top of the page...what can I do instead?</p>\n",
            "last_activity_date": 1416505121,
            "question_id": 3252730,
            "score": 23,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "How to prevent a click on a &#39;#&#39; link from jumping to top of page in jQuery"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You could use apply and pass an empty object as the <code>this</code> argument:</p>\n\n<pre><code>var mid_parser = {};\nParser.apply(mid_parser, mid_patterns);\n</code></pre>\n\n<p>But that solution will not take care about the prototype chain.</p>\n\n<p>You could create a <code>Parser</code> object, using the <code>new</code> operator, but without passing arguments, and then use <code>apply</code> to re-run the constructor function:</p>\n\n<pre><code>var mid_parser = new Parser();\nParser.apply(mid_parser, mid_patterns);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>You can exploit the fact that you can chain constructors using <code>apply(...)</code> to achieve this, although this requires the creation of a proxy class.  The <code>construct()</code> function below lets you do:</p>\n\n<pre><code>var f1 = construct(Foo, [2, 3]);\n// which is more or less equivalent to\nvar f2 = new Foo(2, 3);\n</code></pre>\n\n<p>The <code>construct()</code> function:</p>\n\n<pre><code>function construct(klass, args) {\n\n  function F() {\n    return klass.apply(this, arguments[0]); \n  }; \n\n  F.prototype = klass.prototype; \n\n  return new F(args);\n\n}\n</code></pre>\n\n<p>Some sample code that uses it:</p>\n\n<pre><code>function Foo(a, b) {\n  this.a = a; this.b = b;\n}\n\nFoo.prototype.dump = function() {\n  console.log(\"a = \", this.a);\n  console.log(\"b = \", this.b);\n};\n\nvar f = construct(Foo, [7, 9]);\n\nf.dump();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>A better solution is to create a temporary constructor function, apply the prototype of the class that you want (to ensure prototype chains are preserved) and then apply the constructor manually. This prevents calling the constructor twice unnecessarily...</p>\n\n<pre><code>applySecond = function(){\n    function tempCtor() {};\n    return function(ctor, args){\n        tempCtor.prototype = ctor.prototype;\n        var instance = new tempCtor();\n        ctor.apply(instance,args);\n        return instance;\n    }\n}();\n</code></pre>\n\n<p>I tested the performance and found that this method is, in fact, a bit slower in the <em>very</em> simple case. However, it only takes the construction of a single Date() object in the constructor for this to be more efficient. Also, don't forget that some constructors may throw exceptions if there are no parameters passed, so this is also more correct. </p>\n\n<p>My validation code:</p>\n\n<pre><code>var ExpensiveClass = function(arg0,arg1){\n    this.arg0 = arg0;\n    this.arg1 = arg1;\n    this.dat = new Date();\n}\n\nvar CheapClass = function(arg0,arg1){\n    this.arg0 = arg0;\n    this.arg1 = arg1;\n}\n\napplyFirst = function(ctor, args){\n    var instance = new ctor();\n    ctor.apply(instance, args);\n    return instance;\n}\n\napplySecond = function(){\n    function tempCtor() {};\n    return function(ctor, args){\n        tempCtor.prototype = ctor.prototype;\n        var instance = new tempCtor();\n        ctor.apply(instance,args);\n        return instance;\n    }\n}();\n\nconsole.time('first Expensive');\nfor(var i = 0; i &lt; 10000; i++){\n    test = applyFirst(ExpensiveClass ,['arg0','arg1']);\n}\nconsole.timeEnd('first Expensive');\n\nconsole.time('second Expensive');\nfor(var i = 0; i &lt; 10000; i++){\n    test = applySecond(ExpensiveClass ,['arg0','arg1']);\n}\nconsole.timeEnd('second Expensive');\n\nconsole.time('first Cheap');\nfor(var i = 0; i &lt; 10000; i++){\n    test = applyFirst(CheapClass,['arg0','arg1']);\n}\nconsole.timeEnd('first Cheap');\n\nconsole.time('second Cheap');\nfor(var i = 0; i &lt; 10000; i++){\n    test = applySecond(CheapClass,['arg0','arg1']);\n}\nconsole.timeEnd('second Cheap');\n</code></pre>\n\n<p>The results:</p>\n\n<pre><code>first Expensive: 76ms\nsecond Expensive: 66ms\nfirst Cheap: 52ms\nsecond Cheap: 52ms\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>To complete @CMS solution and preserve the prototype chain, you can do this:</p>\n\n<pre><code>var mid_parser = {};\nmid_parser.__proto__ = Parser.prototype;\nParser.apply(mid_parser, mid_patterns);\n</code></pre>\n\n<p>As a side note, it will not work with IE 8-.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>thanks to wonderful responses to <a href=\"http://stackoverflow.com/questions/1959040/possible-to-send-javascript-varargs\">this question</a> I understand how to call javascript functions with varargs.</p>\n\n<p>now I'm looking to use <strong>apply with a constructor</strong></p>\n\n<p>I found some interesting information <a href=\"http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\">on this post</a>.</p>\n\n<p>but my code is throwing errors</p>\n\n<p>attempt 1:</p>\n\n<pre><code>var mid_parser = new Parser.apply(null, mid_patterns);\n</code></pre>\n\n<p>error:</p>\n\n<pre><code>TypeError: Function.prototype.apply called on incompatible [object Object]\n</code></pre>\n\n<p>attempt 2:\nattempt 1:</p>\n\n<pre><code>var mid_parser = new Parser.prototype.apply(null, mid_patterns);\n</code></pre>\n\n<p>error:</p>\n\n<pre><code>TypeError: Function.prototype.apply called on incompatible [object Object]\n</code></pre>\n\n<p>attempt 2:</p>\n\n<pre><code>function Parser()\n{\n    this.comparemanager = new CompareManager(arguments);\n}\n\nmid_patterns = [objA,objB,objC]\nvar mid_parser = new Parser();\nParser.constructor.apply(mid_parser, mid_patterns);\n</code></pre>\n\n<p>error:</p>\n\n<pre><code>syntax_model.js:91: SyntaxError: malformed formal parameter\n</code></pre>\n\n<p>attempt 3:</p>\n\n<pre><code>var mid_parser = Parser.apply(null, mid_patterns);\n</code></pre>\n\n<p>error :</p>\n\n<pre><code>TypeError: this.init is undefined // init is a function of Parser.prototype\n</code></pre>\n\n<p>I have a workaround for the time being:</p>\n\n<pre><code>function Parser()\n{\n    if(arguments.length) this.init.call(this,arguments); // call init only if arguments\n}\nParser.prototype = {\n   //...\n   init: function()\n   {\n         this.comparemanager = new CompareManager(arguments);\n   }\n   //...\n}\n\nvar normal parser = new Parser(objA,objB,objC);\n\nmid_patterns = [objA,objB,objC]\nvar dyn_parser = new Parser();\ndyn_parser.init.apply(dyn_parser, mid_patterns);\n</code></pre>\n\n<p>this works pretty well, but it's not as clean and universal as I'd like.</p>\n\n<p>is it possible in javascript to call a constructor with varargs?</p>\n",
            "last_activity_date": 1353069823,
            "question_id": 1959247,
            "score": 23,
            "tags": [
                "javascript",
                "constructor",
                "varargs"
            ],
            "title": "javascript apply on constructor, throwing &quot;malformed formal parameter&quot;"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<pre><code>var s = $('body').scrollTop();\n</code></pre>\n\n<p>or</p>\n\n<pre><code>var s = $(document).scrollTop();\n</code></pre>\n\n<p>or even</p>\n\n<pre><code>var s = $(window).scrollTop();\n</code></pre>\n\n<p>depending on what element the scrollbar is attached to</p>\n\n<p><a href=\"http://api.jquery.com/scrollTop/\"><strong>jQuery scrollTop() docs</strong></a> </p>\n\n<blockquote>\n  <p>Description: Get the current vertical position of the scroll bar for\n  the first element in the set of matched elements or set the vertical\n  position of the scroll bar for every matched element.</p>\n</blockquote>\n\n<hr>\n\n<blockquote>\n  <p>...nothing that works for my div, just the full page</p>\n</blockquote>\n\n<p>If it's for a DIV, you can use this </p>\n\n<pre><code>$('div').scrollTop();\n</code></pre>\n\n<p>to get the elements scroll position if it has a scrollbar, or if you need to get the elements distance from the top of the document, you can do</p>\n\n<pre><code>$('div').offset().top\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Use <a href=\"http://api.jquery.com/scrollTop/\" rel=\"nofollow\">scrollTop()</a> to get or set the scroll position.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I believe the best method with jQuery is using <a href=\"http://api.jquery.com/scrollTop/\" rel=\"nofollow\"><code>.scrollTop()</code></a>:</p>\n\n<pre><code>var pos = $('body').scrollTop();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>cross browser variant</p>\n\n<pre><code>$(document).scrollTop();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 53
                }
            ],
            "body": "<p>Strange request, but I need to get the current browser scroll position as a variable. What js or jquery function should I use? I need it to figure out what elements to display on the side. I've found a few things online but nothing that works for my div, just the full page. </p>\n",
            "last_activity_date": 1421961128,
            "question_id": 14886038,
            "score": 22,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Get scroll position using jquery"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<pre><code>var fs = require('fs');\nfs.write(myfile, myData, 'w');\n</code></pre>\n\n<p>for saving daily scrapes I do:</p>\n\n<pre><code>var currentTime = new Date();\nvar month = currentTime.getMonth() + 1;\nvar day = currentTime.getDate();\nvar year = currentTime.getFullYear();\nvar myfile = \"data-\"+year + \"-\" + month + \"-\" + day+\".html\";\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>A full '<code>then</code>' function, that scrap data from a site, returns a <code>json</code> and store it to a file\"myFile\" should looks like this:</p>\n\n<pre><code>casper.then(function paso2() {\nvar jsonStr = this.evaluate(function(){\n    var puntos = {};\n    puntos.alafecha = document.querySelector('div.cont_item_productos_puntos &gt; p.txt_negro').textContent;\n    puntos.totales = document.querySelector('ul.lista_prod_puntos &gt; li.ppuntos_1 &gt; span.ppuntos_2').textContent;\n    return JSON.stringify(puntos);\n});\nconsole.log(\"this is a response in json format: \"+json);\nfs.write('myFile.json', jsonStr, 'w');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You could also append to a text file using the method below</p>\n\n<pre><code>    var casper = require('casper').create();\n    var fs = require('fs');\n    var fname = new Date().getTime() + '.txt';\n    var save = fs.pathJoin(fs.workingDirectory, 'nwaomachux', fname);\n\n    casper.start('http://www.po3w.com/', function() {\n        fs.write(save, this.getTitle() + '\\n', 'w');\n    });\n\n    casper.thenOpen('http://phantomjs.org', function() {\n        fs.write(save, this.getTitle(), 'a');\n    });\n\n    casper.run();\n</code></pre>\n\n<ul>\n<li>If the folder, <strong>nwaomachux</strong>, doesn't yet exist, it'll be automatically\ncreated for you.</li>\n<li>If you saved the file as <strong>save.js</strong>, run it from    PhantomJS with the\nfollowing command <strong>on a Linux PC</strong></li>\n</ul>\n\n<blockquote>\n  <p>./phantom casperjs/bin/bootstrap.js --casper-path=casperjs --cli\n  save.js</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here is a helper function that you can use to add this functionality to the casper object.</p>\n\n<pre><code>/**\n * Save page markup to a file. Respect an existing savePageContent function, if\n * casper.js core introduces one.\n * \n * @param String targetFile\n *   A target filename.\n * @return Casper\n */\ncasper.savePageContent = casper.savePageContent || function(targetFile) {\n  var fs = require('fs');\n  var f  = require('utils').format;\n\n  // Get the absolute path.\n  targetFile = fs.absolute(targetFile);\n  // Let other code modify the path.\n  targetFile = this.filter('page.target_filename', targetFile) || targetFile;\n  this.log(f(\"Saving page html to %s\", targetFile), \"debug\");\n  // Try saving the file.\n  try {\n    fs.write(targetFile, this.getPageContent(), 'w');\n  } catch(err) {\n    this.log(f(\"Failed to save page html to %s; please check permissions\", targetFile), \"error\");\n    this.log(err, \"debug\");\n    return this;\n  }\n\n  this.log(f(\"Page html saved to %s\", targetFile), \"info\");\n  // Trigger the page.saved event.\n  this.emit('page.saved', targetFile);\n\n  return this;\n};\n</code></pre>\n\n<p>It is helpful to note that 'fs' in this case is not the Node JS FileSystem object, but rather a <a href=\"http://phantomjs.org/api/fs/\" rel=\"nofollow\">PhantomJS module</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How do I create a file in the file system and place the content of <code>this.getPageContent()</code> inside it?</p>\n",
            "last_activity_date": 1415605160,
            "question_id": 12826596,
            "score": 22,
            "tags": [
                "javascript",
                "casperjs"
            ],
            "title": "Write results into a file using CasperJS"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><code>location.protocol+'//'+location.host+location.pathname</code> is the correct syntax if you do not care about port number or querystring</p>\n\n<p>If you do care:</p>\n\n<p><a href=\"https://developer.mozilla.org/en/DOM/window.location\">https://developer.mozilla.org/en/DOM/window.location</a></p>\n\n<p><code>location.protocol+'//'+location.host+location.pathname+(location.search?location.search:\"\")</code></p>\n\n<p>or</p>\n\n<p><code>location.protocol+'//'+location.hostname+(location.port?\":\"+location.port:\"\")+location.pathname+(location.search?location.search:\"\")</code></p>\n\n<p>You can also just do a <code>location.href.replace(location.hash,\"\")</code> </p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<pre><code>location.href.replace(location.hash,\"\")\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>var uri = window.location.href.split(\"#\")[0];\n\n// Returns http://mysite.com/something\n\nvar hash = window.location.href.split(\"#\")[1];\n\n// Returns #hash\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>Shorter solutions:</p>\n\n<ul>\n<li><p>without query string and hash <code>location.href.split(location.search||location.hash||/[?#]/)[0]</code></p></li>\n<li><p>only without hash <code>location.href.split(location.hash||\"#\")[0]</code></p></li>\n</ul>\n\n<p>(I usually use the first one)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Is the universal way also the smaller? </p>\n\n<p><code>location.href.split(/\\?|#/)[0]</code> </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>i have \n<code>var uri = window.location.href;</code> that provides <a href=\"http://mysite.com/something#hash\">http://mysite.com/something#hash</a></p>\n\n<p>what's the best and easiest way to get the entire path without the #hash?</p>\n\n<p>uri = <a href=\"http://mysite.com/something#hash\">http://mysite.com/something#hash</a>\nnohash = <a href=\"http://mysite.com/something\">http://mysite.com/something</a></p>\n\n<p>I tried using <code>location.origin+location.pathname</code> which doesn't work in every browser. I tried using <code>location.protocol+'//'+location.host+location.pathname</code> which looks like kind of a crappy solution to me.</p>\n\n<p>What is the best and easiest way to do so? maybe I query for location.hash and try to substr() this from the uri?</p>\n\n<p>any ideas?</p>\n",
            "last_activity_date": 1419957336,
            "question_id": 5818269,
            "score": 22,
            "tags": [
                "javascript",
                "location",
                "substring"
            ],
            "title": "javascript window location href without hash?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You need to format the array into a JavaScript array syntax.</p>\n\n<pre><code>var someArray = [&lt;%= Model.SomeArray.Select(x =&gt; \"'\" + x +\"'\")\n                           .Aggregate((x,y) =&gt; x + \", \" + y);  %&gt;];\n</code></pre>\n\n<p>This will surround each entry by single quotes and then join them together with commas between square brackets.</p>\n\n<p>Updated: removed extra parenthesis.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>something like this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar myArr = [&lt;%=string.Join(\",\", strArr.Select(o =&gt; \"\\\"\" + o + \"\\\"\")) %&gt;];\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This should do</p>\n\n<pre><code>var someArray=[&lt;%foreach (var s in myStringArray){%&gt;'&lt;%=s%&gt;',&lt;%}%&gt;];\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>You could JSON serialize it. This way could could pass even more complex values and not worry about escaping simple quotes, double quotes, etc :</p>\n\n<pre><code>var categoriesList = &lt;%= new JavaScriptSerializer().Serialize(new[] { \"value1\", \"value2\" }) %&gt;;\n</code></pre>\n\n<p>Writing an HTML helper to do this would be even better:</p>\n\n<pre><code>public static class HtmlExtensions\n{\n    public static string JsonSerialize(this HtmlHelper htmlHelper, object value)\n    {\n        return new JavaScriptSerializer().Serialize(value);\n    }\n}\n</code></pre>\n\n<p>and then in your view:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var categoriesList = &lt;%= Html.JsonSerialize(new[] { \"value1\", \"value2\" }) %&gt;;\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>You could let .NET handle all the heavy lifting for you with this simple line of code.</p>\n\n<p>This assumes you're using MVC Razor syntex.</p>\n\n<p><code>var yourJavaScriptArray = @Html.Raw(Json.Encode(Model.YourDotNetArray));</code></p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>Just wanted to provide an answer using Razor syntax:</p>\n\n<p>We have a <code>Dictionary&lt;int, int&gt;</code> that we are rendering for a jQuery Sparkline, in the form of \"an array of arrays\". </p>\n\n<pre><code>var usageData = [ @string.Join(\",\", Model.UsageData.Select(d =&gt; string.Format(\"[{0},{1}]\", d.Key, d.Value)).ToArray()) ];\n</code></pre>\n\n<p>Which is used like so:</p>\n\n<pre><code>$('#sparkline').UsageSparkline(usageData, { tooltipFormatter: cachedTooltips });\n</code></pre>\n\n<p>This is what we get when viewing the source:</p>\n\n<pre><code>var usageData = [ [-13,0],[-12,1],[-11,0],[-10,0],[-9,1],[-8,1],[-7,0],[-6,2],[-5,2],[-4,0],[-3,0],[-2,9],[-1,3],[0,4] ];\n$('#sparkline').UsageSparkline(usageData, { tooltipFormatter: cachedTooltips });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>One liner:</strong></p>\n\n<pre><code>var data = [@Html.Raw(String.Join(\",\", Model.MyArray.Select(i =&gt; \"'\" + i + \"'\")))];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I can pass a variable from MVC ASP.NET by using this : </p>\n\n<pre><code>var lastCategoryId = '&lt;%=Model.CS.LastSelectedCategory %&gt;';\n</code></pre>\n\n<p>This work fine with string or integer but how do I do with an array of strings? I have tried to pass the array the same way but the variable is set to System.String[] ?</p>\n",
            "last_activity_date": 1397584563,
            "question_id": 3850958,
            "score": 22,
            "tags": [
                "javascript",
                "asp.net-mvc"
            ],
            "title": "Pass Array from MVC to javascript?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>There are no technical reasons to prefer one version over the other. For me is usually depends on two things:</p>\n\n<ol>\n<li>I want to resuse the passed callback in another context. In this case I define the function standalone and pass the reference.</li>\n<li>The callback is larger than ~10 lines of code and the function expects additional arguments after the callback. In this case it is hard to reconstruct, which values are actually passed to the function. </li>\n</ol>\n\n<p>Example:</p>\n\n<pre><code>setTimeout(function() { // I need to scroll to see the other arguments\n\n  // many lines of code\n\n}, 0); // &lt;- where does this '0' belong to?\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I suggest a full duel between opposing team members to settle such arguments.</p>\n\n<p>More seriously, in the end it just doesn't matter.  The first form (non-named functions) tends to get unwieldy with larger functions, but isn't a big deal at all with small (1-2 line) functions.  The second form is similarly harmless.</p>\n\n<p>Any argument against either style is pure <a href=\"http://en.wikipedia.org/wiki/Bikeshedding\" rel=\"nofollow\">bikeshedding</a>, imo.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>IMO, declaring a function will be useful only if you intend to re-use it later, in some other way.</p>\n\n<p>I personally use function expressions (first way) for <code>setTimeout</code> handlers.</p>\n\n<p>However you might want to know the <em>differences</em> between function declarations and function expressions, I recommend you the following article:</p>\n\n<ul>\n<li><a href=\"http://kangax.github.com/nfe/\" rel=\"nofollow\">Named function expressions demystified</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I think that the only difference in a code like that is that with the second piece of code you can re-call the same function (sometimes with \"timer functions\" it's useful):</p>\n\n<pre><code>(function(){\n  function invokeMe() {\n    if(..) setTimeout(invokeMe, 5);\n  }\n  setTimeout(invokeMe, 5);\n})();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is <em>one</em> significant difference between the two: The latter one has a name.</p>\n\n<p>I like to help my tools help me, and so I mostly <a href=\"http://blog.niftysnippets.org/2010/03/anonymouses-anonymous.html\" rel=\"nofollow\">avoid anonymous functions</a> as my tools can't give me meaningful information about them (for instance, in a call stack list in a debugger, etc.). So I'd go with the </p>\n\n<pre><code>(function(){\n  function invokeMe() {\n    /*code*/\n  }\n  setTimeout(invokeMe, 5);\n})();\n</code></pre>\n\n<p>...form in general. Rules are meant to be broken, though, not slavishly bowed to. :-)</p>\n\n<p>Note that according to the specification, there's a third alternative: You can have an inline function that also has a name:</p>\n\n<pre><code>(function(){\n  setTimeout(function invokeMe(){ /*some code here*/ }, 5);\n})();\n</code></pre>\n\n<p>The problem, though, is that every version so far of the JavaScript interpreter from Microsoft (\"JScript\"), including (astonishingly) the one in IE9, handles that <em>named function expression</em> incorrectly and creates <strong>two</strong> completely distinct functions at different times. (<a href=\"http://jsbin.com/avorov\" rel=\"nofollow\">Proof</a>, try it in IE9 or earlier and also in just about any other browser.) IE gets it wrong in two ways: 1. It creates two separate function objects, and 2. As a consequence of one of those, it \"bleeds\" the name symbol into the enclosing scope of the expression (in clear violation of <a href=\"http://es5.github.com/#x13\" rel=\"nofollow\">Section 13</a> of the specification). Details here: <a href=\"http://blog.niftysnippets.org/2010/09/double-take.html\" rel=\"nofollow\"><em>Double take</em></a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>An inline function avoids namespace pollution and predefined functions have higher reuse. I think you could make cases where each is appropriate.  </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In the example provided, the declaration and use of the function are so close that I think the only difference is readability. I prefer the second example.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I prefer to use named functions. Named functions show by name on all debuggers (air, firebug, IE).</p>\n\n<p>Example:</p>\n\n<p>Notice that you can also have inline named functions like</p>\n\n<pre><code>{\n    method: function obj_method(){}\n}\n</code></pre>\n\n<p>This way, when you look at the stack trace, you'll see function obj_method instead of anonymous.</p>\n\n<p>Were you asking about when to inline a function rather than declare it? When it makes sense in the code. If you need it from two different places, it can't be inline. Sometimes inline make the code easier to read, sometimes harder.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I tend towards named functions as well.  Anonymous function refs are quick, but should only be used for simple stuff.  My rule of thumb is that if the function is more than 2 lines of code, it probably belongs in it's own definition.</p>\n\n<p>This is complicated by most example code making use of Anonymous functions.  But the samples are usually very simplistic.  The method falls apart as things get more complicated.  I've seen function refs nested in function refs as the developer realized that more callbacks were needed in subsequent steps.  Instead of this tree based logic, I prefer the organization of isolated functions.</p>\n\n<p>And usually end up happy that I can reuse one of the functions I define later.  </p>\n\n<p>One important use of an Anonymous Function is when you need to pass scoped data into your function call, but then I usually just wrap my function into the anonymous function.  </p>\n\n<p>Named functions are also absolutely necessary if you ever get into Test Driven Development.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Named functions</strong></p>\n\n<p>There is some serious misuse of terminology in the question and answers on this page. There is nothing about whether or not a function is inline (a function expression) that says you cannot name it.</p>\n\n<p>This is using a <strong>function expression</strong>:</p>\n\n<pre><code>setTimeout(function doSomethingLater() { alert('In a named function.'); }, 5);\n</code></pre>\n\n<p>and this is using a <strong>function statement</strong>:</p>\n\n<pre><code>function doSomethingLater() { alert('In a named function.'); }\nsetTimeout(doSomethingLater, 5);\n</code></pre>\n\n<p><em>Both examples are using named functions and both get the same benefits when it comes to debugging and profiling tools!</em></p>\n\n<p>If the name is specified (the text after \"function\" but before the parenthesis) then it is a named function regardless of whether it is inline or declared separately.  If the name is not specified then it is \"anonymous\".</p>\n\n<p><em>Note: T.J. points out that IE mishandles named function expressions in a non-trivial way (See: <a href=\"http://kangax.github.com/nfe/#jscript-bugs\">http://kangax.github.com/nfe/#jscript-bugs</a>) and this is important to note, I'm simply trying to make a point about the terminology.</em></p>\n\n<p><strong>Which should you use?</strong></p>\n\n<p>In response to your direct question, you should use a named function statement if the function could ever be used from any other place in your code.  If the function is being used in exactly one place and has no relevance anywhere else then I would use a function expression unless it is prohibitively long or otherwise feels out of place (for style reasons).  If you use an inline function expression then it is often useful to name it anyway for the purposes of debugging or code clarity.</p>\n\n<p><strong>Memory leaks</strong></p>\n\n<p>Whether you name your function, use a function statement, or use a function expression has little impact on the memory leak issue.  Let me try to explain what causes these leaks. Take a look at this code:</p>\n\n<pre><code>(function outerFunction() {\n    var A = 'some variable';\n\n   doStuff();\n})();\n</code></pre>\n\n<p>In the code above, when \"outerFunction\" finishes \"A\" goes out of scope and can be garbage collected, freeing that memory.</p>\n\n<p>What if we add a function in there?</p>\n\n<pre><code>(function outerFunction() {\n    var A = 'some variable';\n\n   setTimeout(function(){ alert('I have access to A whether I use it or not'); }, 5);\n})();\n</code></pre>\n\n<p>In this code (above) the function expression we are passing to setTimeout has a reference to \"A\" (through the magic of closure) and even after \"outerFunction\" finishes <strong>\"A\" will remain in memory until the timeout is triggered and the function is dereferenced</strong>.</p>\n\n<p>What if we pass that function to something other than setTimeout?</p>\n\n<pre><code>(function outerFunction() {\n    var A = 'some variable';\n\n   doStuff(function(){ alert('I have access to A whether I use it or not'); });\n})();\n\nfunction doStuff(fn) {\n    someElement.onclick = fn;\n}\n</code></pre>\n\n<p>Now the function expression we are passing to \"doStuff\" has access to \"A\" and even after \"outerFunction\" finishes <strong>\"A\" will remain in memory for as long as there is a reference to the function we passed into doStuff</strong>.  In this case, we are creating a reference to that function (as an event handler) and therefore \"A\" will remain in memory until that event handler is cleared.  (e.g. someone calls <code>someElement.onclick = null</code>)</p>\n\n<p>Now look at what happens when we use a function statement:</p>\n\n<pre><code>(function outerFunction() {\n    var A = 'some variable';\n\n    function myFunction() { alert('I have also have access to A'); };\n    doStuff(myFunction);\n})();\n</code></pre>\n\n<p>The same problem! \"myFunction\" will be cleaned up only if \"doStuff\" does not hold a reference to it and \"A\" will only be cleaned up when \"myFunction\" is cleaned up. It does not matter whether we used a statement or an expression; what matters is if a reference to that function is created in \"doStuff\"!</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>Can't we all just get along?</p>\n\n<pre><code>(function(){\n  setTimeout( (function InvokeMe(){ /*some code here*/ }), 5);\n})();\n</code></pre>\n\n<p>Only one thing really matters, IMO and that's ease of debug. A lot of step tracers won't be able to tell you anything about the func other than the fact that it was anonymous and had args but you can still define inline with a name by putting the definition in parens to force evaluation. For very simple or obvious breaking funcs, I suppose it's not a big deal but to me it's like semis. I really don't care what the other guy does if it doesn't cause pain but I try to always name my funcs because it's not hard and it can be an advantage.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Inline function definitions are much slower.</p>\n\n<p><a href=\"http://jsperf.com/function-defined-inline\" rel=\"nofollow\">http://jsperf.com/function-defined-inline</a></p>\n\n<p><a href=\"https://github.com/petkaantonov/bluebird/issues/381#issuecomment-62644026\" rel=\"nofollow\">https://github.com/petkaantonov/bluebird/issues/381#issuecomment-62644026</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Can any body throw me some arguments for using inline functions against passing predefined function name to some handler. </p>\n\n<p>I.e. which is better:</p>\n\n<pre><code>(function(){\n  setTimeout(function(){ /*some code here*/ }, 5);\n})();\n</code></pre>\n\n<p>versus</p>\n\n<pre><code>(function(){\n  function invokeMe() {\n    /*code*/\n  }\n  setTimeout(invokeMe, 5);\n})();\n</code></pre>\n\n<p>Strange question, but we are almost fighting in the team about this</p>\n",
            "last_activity_date": 1422729516,
            "question_id": 2539205,
            "score": 22,
            "tags": [
                "javascript",
                "coding-style"
            ],
            "title": "Javascript: Inline function vs predefined functions"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><a href=\"https://github.com/jdc0589/JsFormat\">Here</a> is a tool for this.  Found it on the <a href=\"http://www.sublimetext.com/forum/viewtopic.php?f=5&amp;t=2430\">sublime forums</a>.</p>\n\n<ul>\n<li><a href=\"https://sublime.wbond.net/installation\">Install Package control</a></li>\n<li>Run Package Control: Install Package from the command palette. Type <kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd>P</kbd> (Windows) or <kbd>Command</kbd> + <kbd>Shift</kbd> + <kbd>P</kbd> to open the command palette</li>\n<li>Search for <code>jsFormat</code> and hit enter</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 57
                },
                {
                    "body": "<p>You could give <a href=\"https://github.com/jdc0589/JsFormat\">JsFormat</a> a go. \"ctrl-alt-f\" formats the selected text.</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>If you specifically want to go from 2 to 4 spaces, click on the tab menu in the lower right corner. Click \"convert indentation to tabs\", change width to 4, then \"convert indentation to spaces.\"</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can select all your code(ctrl+A) and use the in-app functionality, reindent(Edit -> Line -> Reindent) It will format your code with looking at the Sublime's tab/intent setting.</p>\n\n<p><strong>Alternatively:</strong> You can use <a href=\"https://github.com/jdc0589/JsFormat\"><strong>JsFormat</strong></a> formatting plugin for Sublime Text 2 if you would like to have more customizable settings on how to format your code to addition to the Sublime Text's default tab/indent settings.</p>\n\n<p><a href=\"https://github.com/jdc0589/JsFormat\">https://github.com/jdc0589/JsFormat</a></p>\n\n<p><strong>More info how to install JsFormat to your Sublime IDE:</strong>  You can easily install JsFormat with using Package Control (Preferences -> Package Control) Open package control then type install, hit enter. Then type \"js format\" and hit enter, you're done. (The package controller will show the status of the installation with success and errors on the bottom left bar of Sublime)</p>\n\n<p><strong>Setting the shortcut:</strong> Add the following line to your key bindings (Preferences -> Key Bindings User)</p>\n\n<p>{ \"keys\": [\"ctrl+alt+2\"], \"command\": \"js_format\"}\nI'm using ctrl+alt+2, you can change this shortcut key whatever you want to. </p>\n\n<p><strong>My opinion;</strong> JsFormat is a good one, definetly worth to try it!</p>\n\n<p>Cheers</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>The fastest way to do this, in general, is with a regex:</p>\n\n<ul>\n<li>Press <kbd>CTRL</kbd>+<kbd>H</kbd></li>\n<li>Enable the <em>Regular Expression</em> button to the bottom-left (or press <kbd>ALT</kbd>+<kbd>R</kbd>)</li>\n<li>Enter <code>^(\\s+)</code> in <em>Find What</em></li>\n<li>Enter <code>\\1\\1</code> in <em>Replace With</em></li>\n<li>Click <kbd>Replace All</kbd> to the right</li>\n</ul>\n\n<p>This will double the number of prefixed spaces (bringing 2 spaces to 4). The replace window can then be left open to easily apply this to multiple files.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Here's some sample code I have, currently I'm set to only indent using 4 spaces at a time. Is there a way to highlight a block of javascript and press a single button or menu option to format it nicely like so:</p>\n\n<p>Before:</p>\n\n<pre><code>app.get('/csvtest', function (req, res) {\n  MyModel.find(function (err, mymodel) {\n    if (!err) {\n      var csv = [];\n      _.each(mymodel, function(obj) {\n       csv.push(obj['mymodel']);\n      });\n      res.send(csv.join());\n    } else {\n      console.log(err);\n    }\n  });\n});\n</code></pre>\n\n<p>After:</p>\n\n<pre><code>app.get('/csvtest', function (req, res) {\n    MyModel.find(function (err, mymodel) {\n        if (!err) {\n            var csv = [];\n            _.each(mymodel, function(obj) {\n                csv.push(obj['mymodel']);\n            });\n            res.send(csv.join());\n        } else {\n            console.log(err);\n        }\n    });\n});\n</code></pre>\n",
            "last_activity_date": 1423059160,
            "question_id": 12866964,
            "score": 21,
            "tags": [
                "javascript",
                "sublimetext2"
            ],
            "title": "Sublime Text 2: Auto fix indentation for javascript?"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>They are actually strings not numbers. The easiest way to produce a number from a string is to prepend it with<code>+</code>:</p>\n\n<pre><code>var x = +y + +z;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 55
                },
                {
                    "body": "<p>You need to use javaScript's parseInt() method to turn the strings back into numbers. Right now they are strings so adding two strings concatenates them, which is why you're getting \"12\".</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Use <a href=\"http://www.w3schools.com/jsref/jsref_parseint.asp\" rel=\"nofollow\">parseInt(...)</a> but make sure you specify a radix value; otherwise you will run into several bugs (if the string begins with \"0\", the radix is octal/8 etc.).</p>\n\n<pre><code>var x = parseInt(stringValueX, 10);\nvar y = parseInt(stringValueY, 10);\n\nalert(x + y);\n</code></pre>\n\n<p>Hope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can do a precheck with regular expression wheather they are numbers as like </p>\n\n<pre><code>function myFunction() {\n    var y = document.getElementById(\"txt1\").value;\n    var z = document.getElementById(\"txt2\").value;\n    if((x.search(/[^0-9]/g) != -1)&amp;&amp;(y.search(/[^0-9]/g) != -1))\n      var x = Number(y)+ Number(z);\n    else\n      alert(\"invalid values....\");\n    document.getElementById(\"demo\").innerHTML = x;\n  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>An alternative solution, just sharing :) :</p>\n\n<pre><code>var x = (y/1)+ (z/1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>boss just add a simple type casting method as the input is taken in text\nuse following</p>\n\n<pre><code>    var y = parseInt(document.getElementById(\"txt1\").value);\n    var z = parseInt(document.getElementById(\"txt2\").value);\n    var x = y + z;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Hey Friends Its Very Simple</p>\n\n<pre><code>&lt;html&gt;\n&lt;body&gt;\n&lt;p&gt;Click the button to calculate x.&lt;/p&gt;\n&lt;button onclick=\"myFunction()\"&gt;Try it&lt;/button&gt;\n&lt;br/&gt;\n&lt;br/&gt;Enter first number:\n&lt;input type=\"text\" id=\"txt1\" name=\"text1\"&gt;Enter second number:\n&lt;input type=\"text\" id=\"txt2\" name=\"text2\"&gt;\n&lt;p id=\"demo\"&gt;&lt;/p&gt;\n&lt;script&gt;\n  function myFunction() {\n    var y = document.getElementById(\"txt1\").value;\n    var z = document.getElementById(\"txt2\").value;\n    var x = +y + +z;\n    document.getElementById(\"demo\").innerHTML = x;\n  }\n&lt;/script&gt;\n</code></pre>\n\n<p>\n</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I just use <code>Number()</code>:  </p>\n\n<pre><code>var i=2;  \nvar j=3;  \nvar k = Number(i) + Number(j); // 5  \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>var x = +y + +z;\nit's the correct and best suited way...as it also works when you are taking values for y and z through prompt.. :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>An alternative solution, just sharing :) :</p>\n\n<p>var result=eval(num1)+eval(num2);</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>try this</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;body&gt;\n\n&lt;p&gt; Add Section &lt;/p&gt;\n\n&lt;label&gt;First No :&lt;/label&gt;\n&lt;input id=\"txt1\"  type=\"text\"/&gt;&lt;br /&gt;\n&lt;label&gt;Second No :&lt;/label&gt;\n&lt;input id=\"txt2\"  type=\"text\"/&gt;&lt;br /&gt;\n\n&lt;input type=\"button\" name=\"Add\" value=\"Add\" onclick=\"addTwoNumber()\"/&gt;\n&lt;p id=\"demo\"&gt;&lt;/p&gt;\n&lt;script&gt;\nfunction myFunction() {\n    document.getElementById(\"demo\").innerHTML = Date();\n}\n\nfunction addTwoNumber(){\n    var a = document.getElementById(\"txt1\").value;\n    var b = document.getElementById(\"txt2\").value;\n\n    var x = Number(a) + Number(b);\n    document.getElementById(\"demo\").innerHTML = \"Add Value: \" + x;\n}\n&lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt; \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Simple</p>\n\n<pre><code>var result = parseInt(\"1\") + parseInt(\"2\");\nconsole.log(result ); // Outputs 4\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You are missing the type conversion during the addition step...<br>\n<code>var x = y + z;</code> should be <code>var x = parseInt(y) + parseInt(z);</code></p>\n\n<pre><code> &lt;!DOCTYPE html&gt;\n\n &lt;html&gt;\n &lt;body&gt;\n  &lt;p&gt;Click the button to calculate x.&lt;/p&gt;\n  &lt;button onclick=\"myFunction()\"&gt;Try it&lt;/button&gt;\n  &lt;br/&gt;\n  &lt;br/&gt;Enter first number:\n  &lt;input type=\"text\" id=\"txt1\" name=\"text1\"&gt;Enter second number:\n  &lt;input type=\"text\" id=\"txt2\" name=\"text2\"&gt;\n  &lt;p id=\"demo\"&gt;&lt;/p&gt;\n &lt;script&gt;\n    function myFunction() \n    {\n      var y = document.getElementById(\"txt1\").value;\n      var z = document.getElementById(\"txt2\").value;\n      var x = parseInt(y) + parseInt(z);\n      document.getElementById(\"demo\").innerHTML = x;\n    }\n &lt;/script&gt;\n &lt;/body&gt;\n &lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am adding two numbers, but I don't get a correct value.</p>\n\n<p>For example, doing <code>1 + 2</code> returns 12 and not 3</p>\n\n<p>What am I doing wrong in this code?</p>\n\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;p&gt;Click the button to calculate x.&lt;/p&gt;\n    &lt;button onclick=\"myFunction()\"&gt;Try it&lt;/button&gt;\n    &lt;br/&gt;\n    &lt;br/&gt;Enter first number:\n    &lt;input type=\"text\" id=\"txt1\" name=\"text1\"&gt;Enter second number:\n    &lt;input type=\"text\" id=\"txt2\" name=\"text2\"&gt;\n    &lt;p id=\"demo\"&gt;&lt;/p&gt;\n    &lt;script&gt;\n      function myFunction() {\n        var y = document.getElementById(\"txt1\").value;\n        var z = document.getElementById(\"txt2\").value;\n        var x = y + z;\n        document.getElementById(\"demo\").innerHTML = x;\n      }\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1425154873,
            "question_id": 14496531,
            "score": 20,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Adding two numbers using javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>if you want you can add jquery and use $.trim(....) this will work..</p>\n\n<pre><code>$.trim(\"  hello \");\n</code></pre>\n\n<p>give you</p>\n\n<pre><code>\"hello\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>IE8 doesn't support the trim function.\nHere's a polyfill:</p>\n\n<pre><code>if(typeof String.prototype.trim !== 'function') {\n  String.prototype.trim = function() {\n    return this.replace(/^\\s+|\\s+$/g, ''); \n  };\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 64
                },
                {
                    "body": "<p>Internet Explorer only started support for <code>trim()</code> from version 9.</p>\n\n<p>For reference, the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\" rel=\"nofollow\">MDN Polyfill for <code>String.prototype.trim()</code></a> is:</p>\n\n<pre><code>if (!String.prototype.trim) {\n  (function() {\n    // Make sure we trim BOM and NBSP\n    var rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n    String.prototype.trim = function() {\n      return this.replace(rtrim, '');\n    };\n  })();\n}\n</code></pre>\n\n<p>and the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Browser_compatibility\" rel=\"nofollow\">support</a> for it is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>+--------+---------+----+-------+--------+\n| Chrome | Firefox | IE | Opera | Safari |\n+--------+---------+----+-------+--------+\n| All    | 3.5     |  9 | 10.5  |      5 |\n+--------+---------+----+-------+--------+\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Whenever I use the <code>trim()</code> function on a string, it works fine with Chrome and Firefox but I get an error in IE8 saying :</p>\n\n<blockquote>\n  <p>Object doesn't support this property or method</p>\n</blockquote>\n\n<p>Can anyone tell me why this happens and if there is a work around?</p>\n",
            "last_activity_date": 1426176671,
            "question_id": 11219731,
            "score": 20,
            "tags": [
                "javascript",
                "internet-explorer",
                "internet-explorer-8"
            ],
            "title": "trim() function doesn&#39;t work in IE8?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The general rule applying to all languages is: keep functions (methods, procedures) as small as possible. When you add proper naming, you get very maintainable and readable code where you can easily focus on general picture and <em>drill down</em> to interesting details. With one huge method you are always looking at the details and the big picture is hidden.</p>\n\n<p>This rule applies specifically to clever languages and compiler that can do fancy optimizations like <a href=\"http://en.wikipedia.org/wiki/Inline_function\">inlining</a> or discovering which methods aren't really virtual so double dispatch isn't needed.</p>\n\n<p>Back to JavaScript - this is heavily dependant on JavaScript engine. In some cases I would expect decent engine to inline function, avoiding the cost of execution, especially in tight loops. However, unless you have a performance problem, prefer smaller functions. Readability is much more important.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>In a perfect world, where there's no bugs (because code just fixes itself magically), and requirements are frozen from the day one, it may be possible to live with huge omnipotent functions.</p>\n\n<p>But in this world it turns to be just too expensive - and not only in terms of 'man-month'. Nicholas Zakas wrote <a href=\"http://www.nczonline.net/blog/2012/06/12/the-care-and-feeding-of-software-engineers-or-why-engineers-are-grumpy/\">a brilliant article</a> describing most of the challenges software developers face these days. </p>\n\n<p>The transition may seem somewhat artificial, but my point is that 'one function - one task' approach is much more maintainable and flexible - in other words, it's what makes BOTH developers and customers happy, in the end.</p>\n\n<p>It doesn't mean, though, that you'd not strive to use as few function calls as possible: just remember that it's not a top priority.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>My rule of thumb is that it's time to break a function into smaller pieces if it is more than a screen-full of lines long, though many of my functions just naturally end up somewhat smaller than that without being \"artificially\" split. And I generally leave enough white-space that even a screen-full isn't really a whole lot of code.</p>\n\n<p>I try to have each function do only one task, but then one task might be \"repaint the screen\" which would involve a series of sub-tasks implemented in separate functions that in turn might have their own sub-tasks in separate functions.</p>\n\n<p>Having started with what feels natural (to me) for readability (and therefore ease of maintenance) I don't worry about function calls being expensive unless a particular piece of code performs badly when tested - then I'd look at bringing things back in-line (particularly in loops, starting with nested loops). Though having said that sometimes you just know that a particular piece of code isn't going to perform well and rewrite it before getting as far as testing...</p>\n\n<p>I'd avoid \"premature optimisation\", particularly with languages that use smart compilers that might do those same optimisations behind the scenes. When I first started C# I was told that breaking code up into smaller functions can be <em>less</em> expensive at run-time because of the way the JIT compiler works.</p>\n\n<p>Going back to my one screen-full rule, in JavaScript it is common to have nested functions (due to the way JS closures work), and this can make the containing function longer than I'd like if I were using another language, so sometimes the end result is a compromise.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>On the one hand, I read or hear that \"function calls are expensive\" and that they impact efficiency (for example, <a href=\"http://www.youtube.com/watch?v=mHtdZgou0qU\">on Nicholas Zakas' Google tech talk</a>).</p>\n\n<p>On the other hand, however, it seems accepted that functions/methods are best kept short and should only really perform one task, as generally accepted in <a href=\"http://stackoverflow.com/questions/406760/whats-your-most-controversial-programming-opinion\">here</a>.</p>\n\n<p>Am I missing something here, or don't these two pieces of advice run contrary to one another? Is there some rule-of-thumb that allows one to maintain a Zen-like balance? </p>\n",
            "last_activity_date": 1340458630,
            "question_id": 11168939,
            "score": 20,
            "tags": [
                "javascript",
                "performance"
            ],
            "title": "JavaScript: &quot;Function calls are expensive&quot; vs. &quot;Keep functions small&quot;"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Structure your code so that all your temporary objects are located inside closures instead of global namespace / global object properties and go out of scope when you've done with them. GC will take care of the rest.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can't delete objects, they are removed when there are no more references to them.  You can delete references with <code>delete</code>.</p>\n\n<p>However, if you have created <strong>circular references</strong> in your objects you may have to de-couple some things.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>You could put all your code under one namespace like this:</p>\n\n<pre><code>var namespace = {};\n\nnamespace.someClassObj = {};\n\ndelete namespace.someClassObj;\n</code></pre>\n\n<p>using the delete keyword will delete the reference to the property, but on the low level the javascript GC will get more information about which objects to be reclaimed.</p>\n\n<p>you could also use chrome to get memory profile of you app, and which objects in you app are need to be scale down.</p>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>I was facing a problem like this, and had the idea of simply changing the innerHTML of the problematic object's children.</p>\n\n<pre><code>adiv.innerHTML = \"&lt;div...&gt; the original html that js uses &lt;/div&gt;\";\n</code></pre>\n\n<p>Seems dirty, but it saved my life, as it works!</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Recently, I came across one of my application which consumes too much memory and increasing by 10 MB/sec.</p>\n\n<p>So, I like to know the best way to destroy javascript object and variables so memory consumption stay down and my FF can't get destroyed.</p>\n\n<p>I am calling two of my javascript in every 8 sec interval without reloading the page.</p>\n\n<pre><code>function refresh() {\n    $('#table_info').remove();\n    $('#table').hide();\n    if (refreshTimer) {\n        clearTimeout(refreshTimer);\n        refreshTimer = null ;\n    }\n    document.getElementById('refresh_topology').disabled=true; \n    $('&lt;div id=\"preload_xml\"&gt;&lt;/div&gt;').html('&lt;img src=\"pic/dataload.gif\" alt=\"loading data\" /&gt;&lt;h3&gt;Loading Data...&lt;/h3&gt;').prependTo($(\"#td_123\"));\n    $(\"#topo\").hide();\n    $('#root').remove();\n    show_topology();\n}\n</code></pre>\n\n<p>How can I see which variable cause <strong>Memory overhead</strong> and method to stop execution of that process? </p>\n",
            "last_activity_date": 1370895606,
            "question_id": 10246215,
            "score": 20,
            "tags": [
                "javascript",
                "object",
                "destroy"
            ],
            "title": "How to destroy javascript object?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>.wrapper{position:relative;}\n.bottom{position:absolute; bottom:0;}\n</code></pre>\n\n<p><strong>Edited</strong></p>\n\n<p>Thanks to @centr0 and @T.J Crowder\nthe key thing to understand here is that <code>position:relative</code> in <code>.wrapper</code> will \"contain\" any element that has <code>position:absolute</code>. It's like declaring boundaries for <code>.bottom</code>. Without <code>position:relative</code> in <code>.wrapper</code>, <code>.bottom</code> would break out of that <code>div</code></p>\n",
                    "is_accepted": true,
                    "score": 62
                },
                {
                    "body": "<p>I run to a similiar problem. The solution from Val is good, but has one issue - the inner div will stick to bottom, but it will not affect the height of parrent div, thanks to its \"position: absolute;\" (it is out of the page layout flow).</p>\n\n<p>So here is my expanded solution for anyone having similiar problem:</p>\n\n<pre><code>.wrapper {\n    position: relative;\n    padding-bottom: 50px;\n}\n\n.wrapper .bottom {\n    position: absolute;\n    bottom: 0px;\n    height: 50px;\n}\n</code></pre>\n\n<p>As you can see, I set height of the .bottom ang padding-bottom of the wrapper. Disadvantage is, that the height of the footer is on two places. But I think it is a good solution for example for product list, where there is fixed height in footer of the box (like for price etc). </p>\n\n<p>Remember, that everytime you set \"position: absolute;\", the element will be absolutely positioned against first parent div, which has set position attribute. Or, eventualy, against the page itself.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>could anyone please help me making div#bottom stick to the bottom of the parent div, so when I click on the button inside it will allow me to show elements from div#list above itself?</p>\n\n<p>preferably I would want to avoid js, jquery etc. or at least in the layout</p>\n\n<pre><code>&lt;div class=\"wrapper\"&gt;\n   &lt;div id=\"top\"&gt;\n     &lt;ul&gt;\n      ...\n      ...\n     &lt;/ul&gt;\n   &lt;/div&gt;\n   &lt;div class=\"bottom\"&gt;\n      &lt;div id=\"button\"&gt;\n         &lt;div id=\"list\"&gt;\n            &lt;ul&gt;\n               &lt;li&gt;elem 1&lt;/li&gt;\n               &lt;li&gt;elem 2&lt;/li&gt;\n            &lt;/ul&gt;\n         &lt;/div&gt;\n      &lt;/div&gt;\n   &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
            "last_activity_date": 1421676565,
            "question_id": 5106181,
            "score": 20,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css"
            ],
            "title": "How to make div stick to the bottom of parent div?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>2 is a bad idea since, as you pointed out, it increases load times. If I were you I would do a combination of 1 and 3. I don't agree that this makes the JSON data messy or the REST interface non-optimal.</p>\n\n<p>This is a classic tradeoff where to accept a bit more complexity in the protocol in order to simplify the client-side code.</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>have same problem. #1 is solution i guess. You should send all components of date (year, month, day, hours) at special container from client to server</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>My single-page javascript app retrieves data in JSON format via REST calls. Dates come formatted using the UTC timezone in standard ISO8601 format, such as <code>2011-02-04T19:31:09Z</code>.</p>\n\n<p>When signing up for the service, users select their timezone from a drop down list. This timezone could be different than the user's browser's timezone. The javascript app knows what the user's selected timezone is at all times.</p>\n\n<p>I know how to convert the UTC string into a date. I understand that Javascript only represents dates in the local timezone. </p>\n\n<p>But I'm having troubles figuring out <strong>how to display a date formatted for a timezone OTHER than the user's local timezone</strong>. It must account for DST on all dates. Internally, I want to deal with all dates as UTC and only convert to string representation of a date in another timezone at display time. I need to display the dates in the timezone selected in the user's profile, not their browser's timezone.</p>\n\n<p>I've experimented with the server sending the timezone offset difference in milliseconds between the user's browser's timezone and the user's profile timezone. But I've found I can't just send one offset value, but need to send an offset for every date to account for variations in DST.</p>\n\n<p>Any suggestions or sample code on how to display dates formatted in various timezones? The options I've found so far:</p>\n\n<ol>\n<li>Server sends dates as strings already formatted in the right timezone and no date parsing or manipulation is done on the client. This makes doing certain things on the client difficult if not impossible.</li>\n<li>Use a library such as <a href=\"https://github.com/mde/timezone-js\">https://github.com/mde/timezone-js</a>, which includes the entire Olson TZ database into Javascript. This means longer load times more memory usage, etc.</li>\n<li>Send a timezoneOffsetMillis value with every date sent to the client. This results in messy JSON data and non-optimal REST interfaces.</li>\n</ol>\n\n<p>Are there any simpler or better solutions?</p>\n",
            "last_activity_date": 1398829332,
            "question_id": 4903722,
            "score": 20,
            "tags": [
                "javascript",
                "datetime",
                "timezone",
                "utc",
                "dst"
            ],
            "title": "Working with timezones and daylight savings time in Javascript"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>If you are using a button or hyperlink or something to trigger the popup to show, could you also add an additional handler to the onClick event of the trigger which should still fire the modal popup and run the javascript at the same time?</p>",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The ModalPopupExtender modifies the button/hyperlink that you tell it to be the \"trigger\" element. The onclick script I add triggers before the popup is shown.  I want script to fire after the popup is shown.</p>\r\n\r\n<p>Also, still leaves me with the problem of when I show the modal from server side.</p>",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>hmmm... I'm <em>pretty sure</em> that there's a shown event for the MPE... this is off the top of my head, but I think you can add an event handler to the shown event on page_load</p>\r\n\r\n<pre><code>function pageLoad()<br>{<br>    var popup = $find('ModalPopupClientID');<br>    popup.add_shown(SetFocus);<br>}<br><br>function SetFocus()<br>{<br>    $get('TriggerClientId').focus();<br>}<br></code></pre>\r\n\r\n<p>i'm not sure tho if this will help you with calling it from the server side tho</p>",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>TinyMCE work on invisible textbox if you hide it with css (display:none;)\nYou make an \"onclick\" event on TargetControlID, for init TinyMCE, if you use also an updatepanel</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You should use the BehaviorID value (\"mpeBID\") of your ModalPopupExtender.</p>\n\n<pre><code>function pageLoad() {\n    $find('mpeBID').add_shown(HideMediaPlayer);\n}\n\nfunction HideMediaPlayer() {\n    var divMovie = $get('&lt;%=divMovie.ClientID%&gt;');\n    divMovie.style.display = \"none\";\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Here's a simple way to do it in markup:</p>\n\n<pre><code>&lt;ajaxToolkit:ModalPopupExtender \n                ID=\"ModalPopupExtender2\" runat=\"server\" \n                TargetControlID=\"lnk_OpenGame\" \n                PopupControlID=\"Panel1\" \n                BehaviorID=\"SilverPracticeBehaviorID\"  &gt;\n            &lt;Animations&gt;\n                &lt;OnShown&gt;\n                     &lt;ScriptAction Script=\"InitializeGame();\" /&gt;  \n                &lt;/OnShown&gt;\n            &lt;/Animations&gt;                \n&lt;/ajaxToolkit:ModalPopupExtender&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code> var launch = false;\n function launchModal() {\n     launch = true;\n }\n function pageLoad() {\n     if (launch) {\n\n           var ModalPedimento = $find('ModalPopupExtender_Pedimento');\n           ModalPedimento.show();\n           ModalPedimento.add_shown(SetFocus);\n\n       }\n\n       function SetFocus() {\n           $get('TriggerClientId').focus();\n       }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For two modal forms:</p>\n\n<pre><code> var launch = false;\n var NameObject = '';\n function launchModal(ModalPopupExtender) {\n     launch = true;\n     NameObject = ModalPopupExtender;\n }\n function pageLoad() {\n     if (launch) {\n         var ModalObject = $find(NameObject);\n         ModalObject.show();\n         ModalObject.add_shown(SetFocus);\n                 }\n } \n\n       function SetFocus() {\n           $get('TriggerClientId').focus();\n       }\n</code></pre>\n\n<p>Server side: behand</p>\n\n<pre><code>    protected void btnNuevo_Click(object sender, EventArgs e)\n    {\n\n        //Para recuperar el formulario modal desde el lado del sercidor\n        ScriptManager.RegisterStartupScript(Page, Page.GetType(), \"key\", \"&lt;script&gt;launchModal('\" + ModalPopupExtender_Factura.ID.ToString() + \"');&lt;/script&gt;\", false);\n\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>The ASP.NET AJAX ModalPopupExtender has OnCancelScript and OnOkScript properties, but it doesn't seem to have an OnShowScript property.  I'd like to specify a javascript function to run each time the popup is shown.</p>\n\n<p>In past situations, I set the TargetControlID to a dummy control and provide my own control that first does some JS code and then uses the JS methods to show the popup.  But in this case, I am showing the popup from both client and server side code.</p>\n\n<p>Anyone know of a way to do this?</p>\n\n<p>BTW, I needed this because I have a textbox in the modal that I want to make a TinyMCE editor. But the TinyMCE init script doesn't work on invisible textboxes, so I had to find a way to run it at the time the modal was shown</p>\n",
            "last_activity_date": 1375126943,
            "question_id": 5482,
            "score": 20,
            "tags": [
                "asp.net",
                "javascript",
                "asp.net-ajax"
            ],
            "title": "How to specify javascript to run when ModalPopupExtender is shown"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There is the <a href=\"https://github.com/yahoo/istanbul\">Istanbul</a> code coverage tool. And, as there is a <a href=\"https://github.com/maenu/grunt-template-jasmine-istanbul\">grunt plugin for Istanbul/Jasmine</a> it should work with Jasmine.</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>May be a little bit late, but if test coverage is important, you can also try <a href=\"http://visionmedia.github.io/mocha/\" rel=\"nofollow\">mocha</a> which has a built-in support for test coverage, a good reputation too, a syntax close to jasmine and a good integration (grunt, karma, ...)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>A quick Googling turns up this <a href=\"http://blog.johnryding.com/post/46757192364/javascript-code-coverage-with-phantomjs-jasmine-and\">blog post</a> evaluating a bunch of options: <a href=\"http://gotwarlost.github.io/istanbul/\">Istanbul</a>, <a href=\"http://karma-runner.github.io/\">Karma</a>, <a href=\"http://blanketjs.org/\">Blanket.js</a>, and <a href=\"http://tntim96.github.io/JSCover/\">JSCover</a>.</p>\n\n<p>For Rails, the <a href=\"https://github.com/firstbanco/jasmine-coverage\">jasmine-coverage</a> (based on <a href=\"http://siliconforks.com/jscoverage/manual.html\">JSCoverage</a>) gem gives you a Rake task that generates output in different formats</p>\n\n<p><a href=\"http://stackoverflow.com/questions/53249/are-there-any-good-javascript-code-coverage-tools\">similar question from a few years ago</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>We are planning to introduce JavaScript unit testing in our project and so far Jasmine appears to be one of the better BDD unit testing frameworks for JavaScript. Now I am wondering how can we monitor code coverage of our JavaScript code. Are there any tools/plugins that we could use? We are a Microsoft shop and use .NET/MVC 4.</p>\n",
            "last_activity_date": 1380760594,
            "question_id": 16171589,
            "score": 19,
            "tags": [
                "javascript",
                "code-coverage",
                "jasmine"
            ],
            "title": "JavaScript code coverage with Jasmine"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Here are both fixes.</p>\n\n<p>First, regarding the fixed sidebar, you need to give it a height for it to overflow:</p>\n\n<p>HTML Code:</p>\n\n<pre><code>&lt;div id=\"sidebar\"&gt;Menu&lt;/div&gt;\n&lt;div id=\"content\"&gt;Text&lt;/div&gt;\n</code></pre>\n\n<p>CSS Code:</p>\n\n<pre><code>body {font:76%/150% Arial, Helvetica, sans-serif; color:#666; width:100%; height:100%;}\n#sidebar {position:fixed; top:0; left:0; width:20%; height:100%; background:#EEE; overflow:auto;}\n#content {width:80%; padding-left:20%;}\n\n@media screen and (max-height:200px){\n    #sidebar {color:blue; font-size:50%;}\n}\n</code></pre>\n\n<p>Live example:\n<a href=\"http://jsfiddle.net/RWxGX/3/\" rel=\"nofollow\">http://jsfiddle.net/RWxGX/3/</a></p>\n\n<p>It's impossible NOT to get a scroll bar if your content overflows the height of the div. That's why I've added a media query for screen height. Maybe you can adjust your styles for short screen sizes so the scroll doesn't need to appear.</p>\n\n<p>Cheers,\nIgnacio</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I know this is an old question, but I just thought I'd throw this answer out there.</p>\n\n<p>The problem with using height:100% is that it will be 100% of the page instead of 100% of the window (as you would probably expect it to be). This will cause the problem that you're seeing, because the non-fixed content is long enough to include the fixed content with 100% height without requiring a scroll bar. The browser doesn't know/care that you can't actually scroll that bar down to see it</p>\n\n<p>However, because fixed has the properties that it does, you can do this instead, and accomplish what you're trying to do:</p>\n\n<pre><code>.fixed-content {\n    top: 0;\n    bottom:0;\n    position:fixed;\n    overflow-y:scroll;\n    overflow-x:hidden;\n}\n</code></pre>\n\n<p>Here's a fork of your jsfiddle to show my fix working:\n<a href=\"http://jsfiddle.net/strider820/84AsW/1/\">http://jsfiddle.net/strider820/84AsW/1/</a></p>\n",
                    "is_accepted": true,
                    "score": 35
                }
            ],
            "body": "<p>I have actually two issues, but lets resolve the primary issue first as I believe the other is easier to address.</p>\n\n<p>I have a fixed position div on the left side of the scroll for a menu. Right side is a standard div that scrolls properly. The issue is that when the browser view-port is too small to see the entire menu.. there is no way to get it to scroll that I can find (at least not with css). I've tried using different overflows in css, but nothing makes the div scroll. The div that contains the menu is set to min-height:100% and position:fixed.. both attributes I need to keep. </p>\n\n<p>The div containing the <em>menu</em> is inside another wrapper div that is positioned absolutely and height set to 100%.</p>\n\n<p>How can I get it to scroll vertically if the content is too tall for the div?</p>\n\n<p>That leads me to the other issue, that i don't want a scroll bar to display.. but I think I may already have an answer to that (only it doesn't work yet because I can't get the div to scroll to begin with).</p>\n\n<p>Any solutions? Perhaps javascript is needed? (of which i know little about)</p>\n\n<p><a href=\"http://jsfiddle.net/csdigitaldesign/NDx47/\">JS Fiddle Example</a></p>\n\n<p>and the relevant code that is causing the issue (since posting the whole thing in here is waaay too long):</p>\n\n<pre><code>.fixed-content {\n    min-height:100%;\n    position:fixed;\n    overflow-y:scroll;\n    overflow-x:hidden;\n} \n</code></pre>\n\n<p>Also tried adding height:100% as well just to see if that was an issue but it didn't work either... nor did a fixed height, such as 600px.</p>\n",
            "last_activity_date": 1377115278,
            "question_id": 16094785,
            "score": 19,
            "tags": [
                "javascript",
                "css",
                "scroll",
                "overflow",
                "css-position"
            ],
            "title": "Have a fixed position div that needs to scroll if content overflows"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>This is code that listens for mutations on the childlist of <code>#foo</code> and checks to see if a child with the id of <code>bar</code> is added.</p>\n\n<pre><code>MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\n\n$(\"#foo\").live(\"click\",function(e) {\n    e.preventDefault();\n    $(this).append($(\"&lt;div /&gt;\").html(\"new div\").attr(\"id\",\"bar\"));\n});\n\n// define a new observer\nvar obs = new MutationObserver(function(mutations, observer) {\n    // look through all mutations that just occured\n    for(var i=0; i&lt;mutations.length; ++i) {\n        // look through all added nodes of this mutation\n        for(var j=0; j&lt;mutations[i].addedNodes.length; ++j) {\n            // was a child added with ID of 'bar'?\n            if(mutations[i].addedNodes[j].id == \"bar\") {\n                console.log(\"bar was added!\");\n            }\n        }\n    }\n});\n\n// have the observer observe foo for changes in children\nobs.observe($(\"#foo\").get(0), {\n  childList: true\n});\n</code></pre>\n\n<p>However, this only observes <code>#foo</code>. If you want to look for the addition of <code>#bar</code> as a new child of other nodes, you need to observe those potential parents with additional calls to <code>obs.observe()</code>. To observe a node with the id of <code>baz</code>, you might do:</p>\n\n<pre><code>obs.observe($('#baz').get(0), {\n  childList: true,\n  subtree: true\n});\n</code></pre>\n\n<p>The addition of the <code>subtree</code> option means that the observer will look for the addition of <code>#bar</code> as either a child <em>or</em> a deeper descendant (e.g. grandchild).</p>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>I am trying to make a function go off when a particular div is created. In the simplest of terms, I have something like this:</p>\n\n<pre><code>&lt;a href=\"\" id=\"foo\"&gt;Click me!&lt;/a&gt;\n&lt;script&gt;\n$(\"#foo\").live(\"click\",function(e) {\n    e.preventDefault();\n    $(this).append($(\"&lt;div /&gt;\").html(\"new div\").attr(\"id\",\"bar\"));\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>Before, I had mutation events listen for the creation of div#bar - something like this:</p>\n\n<pre><code>$(\"#bar\").live(\"DOMNodeInserted\", function(event) {\n    console.log(\"a new div has been appended to the page\");\n});\n</code></pre>\n\n<p>Is there an equivalent using Mutation Observers? I tried attrchange.js featured on <a href=\"http://stackoverflow.com/questions/10868104/\">Can you have a javascript hook trigger after a DOM element&#39;s style object changes?</a> but that plugin only detects when an element has been modified, not when it's created.</p>\n",
            "last_activity_date": 1352407011,
            "question_id": 13277212,
            "score": 19,
            "tags": [
                "javascript",
                "jquery",
                "mutation-observers",
                "dom4"
            ],
            "title": "Mutation Observer for creating new elements"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>As a matter of fact you'll have to use the new <code>--web-security=no</code>\nfeature provided by <code>Phantomjs 1.5</code> in order to be able to access those\n<code>iFrames</code> and their contents.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Spent forever looking for this, and of course I found the answer minutes after posting the question.</p>\n\n<p>I can use the new frame switching commands added to phantomjs in <a href=\"https://github.com/ariya/phantomjs/commit/f386f7d484\">this commit</a>.  Specifically, the <code>this.page.switchToChildFrame(0)</code> and <code>this.page.switchToParentFrame()</code> functions.  It appears undocumented, and it also seems that the methods have been <a href=\"http://code.google.com/p/phantomjs/issues/detail?id=654\">changed</a> for upcoming releases, but it does work:</p>\n\n<pre><code>var casper = require('casper').create({\n    verbose: true,\n    logLevel: \"debug\"\n});\n\ncasper.start(\"http://jim.sh/~jim/tmp/casper/main.html\", function() {\n    this.click('a#main-a');\n    this.click('a#main-b');\n    this.page.switchToChildFrame(0);\n    this.click('a#iframe-c');\n    this.page.switchToParentFrame();\n});\n\ncasper.run(function() {\n    this.exit();\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>From 1.0 you can use <a href=\"http://docs.casperjs.org/en/latest/modules/casper.html#withframe\">withFrame</a></p>\n\n<pre><code>  casper.open(\"http://www.example.com/page.html\", function() {\n    casper.withFrame('flashHolder', function() {\n      this.test.assertSelectorExists('#the-flash-thing', 'Should show Flash');\n    });\n  });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                }
            ],
            "body": "<p>I have a webpage with an iframe.  I'd like to access the contents of the iframe using <a href=\"http://www.casperjs.org\">CasperJS</a>.  In particular, I need to click buttons and fill a form.  How can I do that?</p>\n\n<p>The main webpage is\n<a href=\"http://jim.sh/~jim/tmp/casper/main.html\">main.html</a>:</p>\n\n<pre><code>&lt;html&gt;&lt;body&gt;\n&lt;a id='main-a' href=\"javascript:console.log('pressed main-a');\"&gt;main-a&lt;/a&gt;\n&lt;iframe src=\"iframe.html\"&gt;&lt;/iframe&gt;\n&lt;a id='main-b' href=\"javascript:console.log('pressed main-b');\"&gt;main-b&lt;/a&gt;\n&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n\n<p>The iframe is:</p>\n\n<pre><code>&lt;html&gt;&lt;body&gt;\n&lt;a id='iframe-c' href=\"javascript:console.log('pressed iframe-c');\"&gt;iframe-c&lt;/a&gt;\n&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n\n<p>My na\u00efve approach:</p>\n\n<pre><code>var casper = require('casper').create({\n    verbose: true,\n    logLevel: \"debug\"\n});\n\ncasper.start(\"http://jim.sh/~jim/tmp/casper/main.html\", function() {\n    this.click('a#main-a');\n    this.click('a#main-b');\n    this.click('a#iframe-c');\n});\n\ncasper.run(function() {\n    this.exit();\n});\n</code></pre>\n\n<p>Doesn't work, of course, because the <code>a#iframe-c</code> selector isn't valid in the main frame:</p>\n\n<pre><code>[info] [phantom] Starting...\n[info] [phantom] Running suite: 2 steps\n[debug] [phantom] opening url: http://jim.sh/~jim/tmp/casper/main.html, HTTP GET\n[debug] [phantom] Navigation requested: url=http://jim.sh/~jim/tmp/casper/main.html, type=Other, lock=true, isMainFrame=true\n[debug] [phantom] url changed to \"http://jim.sh/~jim/tmp/casper/main.html\"\n[debug] [phantom] Navigation requested: url=http://jim.sh/~jim/tmp/casper/iframe.html, type=Other, lock=true, isMainFrame=false\n[debug] [phantom] Successfully injected Casper client-side utilities\n[info] [phantom] Step 2/2 http://jim.sh/~jim/tmp/casper/main.html (HTTP 200)\n[debug] [phantom] Mouse event 'click' on selector: a#main-a\n[info] [remote] pressed main-a\n[debug] [phantom] Mouse event 'click' on selector: a#main-b\n[info] [remote] pressed main-b\n[debug] [phantom] Mouse event 'click' on selector: a#iframe-c\nFAIL CasperError: Cannot dispatch click event on nonexistent selector: a#iframe-c\n#    type: uncaughtError\n#    error: \"CasperError: Cannot dispatch click event on nonexistent selector: a#iframe-c\"\nCasperError: Cannot dispatch click event on nonexistent selector: a#iframe-c    \n  /tmp:901 in mouseEvent\n  /tmp:365 in click\n  /tmp/test.js:9\n  /tmp:1103 in runStep\n  /tmp:324 in checkStep\n</code></pre>\n\n<p>Is there any way to make this work?  A hack that involves poking into phantomjs directly would be fine, but I don't know what to do there.</p>\n\n<p>I'm using CasperJS version 1.0.0-RC1 and phantomjs version 1.6.0.</p>\n",
            "last_activity_date": 1384336472,
            "question_id": 12150194,
            "score": 19,
            "tags": [
                "javascript",
                "iframe",
                "webkit",
                "phantomjs",
                "casperjs"
            ],
            "title": "How do I access an iframe from CasperJS?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I don't think you can't do anything about the behavior in isolation.</p>\n\n<p>One thing you can try is keep the page from zooming at all. This is good if your page is designed for the phone.</p>\n\n<pre><code>&lt;meta name=\"viewport\" content=\"width=device-width\" /&gt;\n</code></pre>\n\n<p>Another thing you could try is using a JavaScript construct instead of the generic \"select\" statement. Create a hidden div to show your menu,  process the clicks in javascript.</p>\n\n<p>Good luck!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>user-scalable=no is what you need, just so there's actually a definitive answer to this question</p>\n\n<pre><code>&lt;meta name=\"viewport\" content=\"width=device-width, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>It is probably because the browser is trying to zoom the area since the font size is less than the threshold, this generally happens in iphone.</p>\n\n<p>Giving a metatag attribute \"user-scalable=no\" will restrict the user from zooming elsewhere. Since the problem is with <strong>select</strong> element only, try using the following in your css, this hack is originally used for jquery mobile. Since the text is hidden it will not bring any layout issues.</p>\n\n<pre><code>select{\nfont-size: 50px;\n}\n</code></pre>\n\n<p>src: <a href=\"https://github.com/jquery/jquery-mobile/issues/2069\">unzoom after selecting in iphone</a></p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>This seemed to work for my case in addressing this issue:</p>\n\n<pre><code>@media screen and (-webkit-min-device-pixel-ratio: 0) {\nselect:focus, textarea:focus, input:focus {\n        font-size: 16px;\n    }\n}\n</code></pre>\n\n<p>Suggested <a href=\"http://stackoverflow.com/questions/2989263/disable-auto-zoom-in-input-text-tag-safari-on-iphone\">here</a> by <a href=\"http://stackoverflow.com/users/1004312/christina-arasmo-beymer\">Christina Arasmo Beymer</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>function DisablePinchZoom() \n{\n    $('meta[name=viewport]').attr(\"content\", \"\");\n    $('meta[name=viewport]').attr(\"content\", \"width=yourwidth, user-scalable=no\");\n}\n\nfunction myFunction() \n{\n    $('meta[name=viewport]').attr(\"content\", \"width=1047, user-scalable=yes\");\n}\n\n\n&lt;select id=\"cmbYo\" onchange=\"javascript: myFunction();\" onclick=\"javascript: DisablePinchZoom();\"&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>DisablePinchZoom will be fired before the onchange so zoom will be disable at the time the onchange is fired.\nOn the onchange function, at the end you can restore the initial situation.</p>\n\n<p>Tested on an iPhone 5S</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I've got this code:</p>\n\n<pre><code>&lt;select&gt;\n    &lt;option value=\"c\"&gt;Klassen&lt;/option&gt;\n    &lt;option value=\"t\"&gt;Docenten&lt;/option&gt;\n    &lt;option value=\"r\"&gt;Lokalen&lt;/option&gt;\n    &lt;option value=\"s\"&gt;Leerlingen&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>I run it in a full-screen web-app on iPhone.</p>\n\n<p>And when I select something from this list, the iPhone zooms in on the <code>select</code>-element. And doesn't zoom back out after selecting something.</p>\n\n<p>How can I prevent this? Or zoom back out?</p>\n",
            "last_activity_date": 1402325499,
            "question_id": 6483425,
            "score": 19,
            "tags": [
                "javascript",
                "css",
                "html5",
                "iphone-web-app"
            ],
            "title": "Prevent iPhone from zooming in on `select` in web-app"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I think you need the <code>decodeURI</code> function.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could use <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Functions/decodeURIComponent\">the <code>decodeURIComponent</code> function</a> to convert the %xx into characters. However, to convert <code>+</code> into spaces you need to replace them in an extra step.</p>\n\n<pre><code>function urldecode(url) {\n  return decodeURIComponent(url.replace(/\\+/g, ' '));\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>Check out this one</p>\n\n<pre><code>function urldecode (str) {\n  return decodeURIComponent((str + '').replace(/\\+/g, '%20'));\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I wrote a custom xml parser and its locking up on special characters. So naturally I urlencoded them into my database.</p>\n\n<p>I can't seem to find an equivalent to php's <code>urldecode()</code>.</p>\n\n<p>Are there any extentions for <a href=\"http://jquery.com\">jquery</a> or javascript that can accomplish this?</p>\n",
            "last_activity_date": 1388605009,
            "question_id": 3431512,
            "score": 19,
            "tags": [
                "javascript",
                "urldecode"
            ],
            "title": "Javascript equivalent to php&#39;s urldecode()"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Here is the code I have so far. It seems like there should be a better way:</p>\n\n<pre><code>jQuery(\"#myGrid\").getDataIDs().length;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>How about this?</p>\n\n<pre><code>jQuery(\"#myGrid tr\").length;\n</code></pre>\n\n<p>Actually, you can take that a step further with the optional context parameter.</p>\n\n<pre><code>jQuery(\"tr\", \"#myGrid\").length;\n</code></pre>\n\n<p>Either one will search for every \"tr\" inside of \"#myGrid\".  However, from my own testing,  specifying the context parameter is usually faster.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>jQuery(\"#myGrid\").jqGrid('getGridParam', 'records');\n</code></pre>\n\n<p><strong>Update</strong></p>\n\n<p>Note there are two parameters to determine record count:</p>\n\n<blockquote>\n  <p><b>records</b></p>\n  \n  <p>integer</p>\n  \n  <p>Readonly property. Gives the number of records returned as a result of a query to the server.</p>\n</blockquote>\n\n<hr />\n\n<blockquote>\n  <p><b>reccount</b></p>\n  \n  <p>integer</p>\n  \n  <p>Readonly property. Determines the exact number of rows in the grid. Do not confuse this with <code>records</code> parameter. Although in many cases they may be equal, there are cases where they are not. For example, if you define rowNum to be 15, but the request to the server returns 20 records, the records parameter will be 20, but the reccount parameter will be 15 (the grid you will have 15 records and not 20).</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<pre><code>jQuery(\"#myGrid\").jqGrid('getGridParam', 'records');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>$(\"#grid\").getGridParam(\"reccount\");\n</code></pre>\n\n<p>Readonly property. Returns integer. Determines the <strong>exact number of rows</strong> in the grid. (And not the number of records fetched).</p>\n\n<p>More information <a href=\"http://www.trirand.com/jqgridwiki/doku.php?id=wiki%3aoptions\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You could try:</p>\n\n<pre><code>jQuery(\"#GridId\").jqGrid('getDataIDs');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How do I count the number of rows in a jqGrid?</p>\n\n<p>To clarify, there is not much data involved so the grid is pulling all of its data back from the server in a single query, instead of using pagination.</p>\n",
            "last_activity_date": 1370515950,
            "question_id": 1566617,
            "score": 19,
            "tags": [
                "javascript",
                "jquery",
                "jqgrid"
            ],
            "title": "How to count the number of rows in a jqGrid?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Quick Fix: \nRemoved the button tag altogether and modified the datepicker code, so it looks like this :</p>\n\n<pre><code>&lt;input type=\"text\" \n       datepicker-popup=\"dd-MMMM-yyyy\"\n       ng-model=\"cdate.customStartDate\"\n       is-open=\"cdate.customStartDate.open\"\n       ng-click = \"cdate.customStartDate.open = true\"\n       max-date=\"maxDate\"\n       datepicker-options=\"dateOptions\"\n       date-disabled=\"disabled(date, mode)\" \n       ng-required=\"true\"\n       close-text=\"Close\"\n       class=\"input-md\" /&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>I was having the same issue whereby I could only open the date picker control once using the button, but it would not open a second time.  The problem may be related to a scope issue which might be coming about because the button is not a child of the input HTML element.  I was able to get the button to work by changing the data model a little bit.  For example, instead of using <code>$scope.isDatePickerOpen</code> as the model, I changed to <code>$scope.datePicker.isOpen</code> (and set <code>is_open=\"datePicker.isOpen\"</code>).  Note that the new data model for is_open does not hang directly off of <code>$scope</code>, but was moved one level deep (off the <code>$scope.datePicker</code> object).  This seems to make the data more \"findable\".  </p>\n\n<p>The other thing I had to do was change the data model on a timer.  For example:</p>\n\n<pre><code>$scope.openDatePicker = function($event) {\n  $event.preventDefault();\n  $event.stopPropagation();\n  $timeout( function(){\n     $scope.datePicker.isOpen = true;  \n  }, 50);\n};\n</code></pre>\n\n<p>At any rate, your workaround posted above was what gave me the motivation to keep looking for a solution, so thanks!</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>Found answer on other StackOverflow question, just use is-open=\"$parent.isOpen\"</p>\n\n<p><a href=\"http://stackoverflow.com/a/20213924/1596661\">http://stackoverflow.com/a/20213924/1596661</a></p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>I solved the problem like this :</p>\n\n<p>In the html file:</p>\n\n<pre><code>&lt;input is-open=\"opened\"\n       type=\"text\" class=\"form-control\" datepicker-popup=\"{{format}}\" \n       ng-model=\"md\" /&gt;\n</code></pre>\n\n<p>and in the Javascript file, i just added a timeout to 'notify' that it's closed in order to be able to open it again : </p>\n\n<pre><code>$scope.open = function($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        $scope.opened = true;\n        setTimeout(function() {\n            $scope.opened = false;\n        }, 10);              \n    };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I had the same problem, but by simply putting the \"opened\" boolean var in an object solved the problem for me:</p>\n\n<pre><code>&lt; .. is-open=\"datePicker.opened\" &gt;\n...\n$scope.datePicker = {opened:false};\n$scope.openDate = function($event) {\n     $event.preventDefault();\n     $event.stopPropagation();\n     $scope.datePicker.opened = true;\n};\n</code></pre>\n\n<p>I have not used angular for that long but I think this is scope problem and then I learned that it is always good to have \"a dot in the variable name\"... ( datePicker.opened )</p>\n\n<p>(I now see a post above with a similar solution. But I did not need to use the timeout. This code was enough.)</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I solved this problem by adding changing is-open from \"opened\" to \"$parent.opened\"\nLike this.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>seanControllers.controller('TracksController', ['$scope',\r\n  function($scope) {\r\n    $scope.openCalendar = function($event) {\r\n      $event.preventDefault();\r\n      $event.stopPropagation();\r\n\r\n      $scope.opened = true;\r\n    };\r\n  }\r\n]);</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;form&gt;\r\n  &lt;label&gt;Eindtijd&lt;/label&gt;\r\n  &lt;div class=\"input-group\"&gt;\r\n    &lt;input type=\"text\" class=\"form-control\" datetime-picker=\"dd-MM-yyyy HH:mm\" ng-model=\"track.eindtijd\" is-open=\"$parent.opened\" /&gt;\r\n    &lt;span class=\"input-group-btn\"&gt;\r\n\t&lt;button class=\"btn btn-default\" type=\"button\" ng-click=\"openCalendar($event)\"&gt;&lt;i class=\"glyphicon glyphicon-calendar\"&gt;&lt;/i&gt;&lt;/button&gt;\r\n    &lt;/span&gt;\r\n  &lt;/div&gt;\r\n&lt;/form&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to have 2 datepickers and I am using Angular UI version 0.11.0.</p>\n\n<p>My HTML code</p>\n\n<pre><code>&lt;span ng-if=\"periods.period == 10\"&gt;\n     &lt;input type=\"text\" datepicker-popup=\"dd-MMMM-yyyy\" ng-model=\"cdate.customStartDate\" is-open=\"opened1\"  max-date=\"maxDate\" datepicker-options=\"dateOptions\" date-disabled=\"disabled(date, mode)\" ng-required=\"true\" close-text=\"Close\" class=\"input-md\" /&gt;\n     &lt;button class=\"btn\" ng-click=\"open($event,'opened1')\"&gt;&lt;span class=\"glyphicon glyphicon-calendar\"&gt;&lt;/span&gt;&lt;/button&gt;\n\n&lt;/span&gt;\n\n\n&lt;span ng-if=\"periods.period == 10\"&gt; \n- \n    &lt;input type=\"text\" datepicker-popup=\"dd-MMMM-yyyy\" ng-model=\"cdate.customEndDate\" is-open=\"opened2\"  min-date=\"cdate.customStartDate\" max-date=\"maxDate\" datepicker-options=\"dateOptions\" date-disabled=\"disabled(date, mode)\"  ng-required=\"true\" close-text=\"Close\" class=\"input-md\" /&gt;\n    &lt;button class=\"btn\" ng-click=\"open($event,'opened2')\"&gt;&lt;span class=\"glyphicon glyphicon-calendar\"&gt;&lt;/span&gt;&lt;/button&gt;   \n&lt;/span&gt;\n</code></pre>\n\n<p>and my JS code is \n`</p>\n\n<pre><code>                     $scope.disabled = function(date, mode) {\n                      return ( mode === 'day' &amp;&amp; ( date.getDay() === -1 || date.getDay() === 7 ) );\n                     };\n\n                     $scope.maxDate = new Date();\n\n\n                       $scope.open = function($event,opened) {\n                            $event.preventDefault();\n                            $event.stopPropagation();\n\n                            $scope[opened] = true;\n                          };\n\n\n                     $scope.dateOptions = {\n                     'year-format': \"'yy'\",\n                     'starting-day': 1\n                     };\n</code></pre>\n\n<p>`\nAt first, when I click on the button, datepicker opens up just fine. But once it has been opened once,the problem is that the datepicker popup doesn't open the next time I click on the button.</p>\n",
            "last_activity_date": 1424249983,
            "question_id": 23474054,
            "score": 18,
            "tags": [
                "javascript",
                "angularjs",
                "datepicker",
                "angular-ui",
                "angular-ui-bootstrap"
            ],
            "title": "Datepicker not opening twice in angular-ui version 0.11.0"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Put this into <code>oauthWindow.html</code> file</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;script type=\"text/javascript\"&gt;\n      if (window.opener &amp;&amp; window.opener.oauth2 &amp;&amp; window.opener.oauth2.__doLogin) {\n        window.opener.oauth2.__doLogin(location.hash);\n      } else {\n        document.body.innerText = \"Your browser seems to be stopping this window from communicating with the main window.\";\n      }\n    &lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body&gt;&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 1
                }
            ],
            "body": "<p>Good pic that shows exactly how OAUTH2 work's\n<img src=\"http://i.stack.imgur.com/WS30g.jpg\" alt=\"enter image description here\">\nI'm kind a lazy to even start looking on this <a href=\"http://oauth.googlecode.com/svn/code/javascript/oauth.js\">2</a> <a href=\"http://oauth.googlecode.com/svn/code/javascript/sha1.js\">files</a> and <a href=\"http://oauth.googlecode.com/svn/code/javascript/oauthTest.js\">test</a>\nso I searched for easyest way to</p>\n\n<p>1.get token</p>\n\n<p>2.access with that token</p>\n\n<p>with help of <a href=\"http://code.google.com/p/gwt-oauth2/source/browse/trunk/samples/script/gwt-oauth2.js\">gwt-oauth2</a></p>\n\n<p>put it into index.php head :\n<code>&lt;script type=\"text/javascript\" src=\"gwt-oauth2.js\"&gt;&lt;/script&gt;</code></p>\n\n<p>and this in body</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n(function() {\nvar GOOGLE_AUTH_URL = \"https://accounts.google.com/o/oauth2/auth\";\nvar GOOGLE_CLIENT_ID = \"CLIENT_ID\";\n//var PLUS_ME_SCOPE = \"https://www.googleapis.com/auth/plus.me\";\n//var FusionTable_SCOPE = \"https://www.googleapis.com/auth/fusiontables\";       \nvar button = document.createElement(\"button\");\nbutton.innerText = \"Authenticate with Google\";\nbutton.onclick = function() {\n\nvar req = {\n    'authUrl' : GOOGLE_AUTH_URL,\n    'clientId' : GOOGLE_CLIENT_ID,\n    'scopes': ['https://www.googleapis.com/auth/plus.me',\n               'https://www.googleapis.com/auth/fusiontables'\n              ],\n};\n\noauth2.login(req, function(token) {\n    alert('Got an OAuth token:\\n'+ token +'\\n'+ 'Token expires in '+ oauth2.expiresIn(req) +' ms\\n');\n  }, function(error) {\n    alert(\"Error:\\n\" + error);\n  });\n};\n\nvar dv = document.getElementById('admin-content');\ndv.appendChild(button);\nvar clearTokens = document.createElement('button');\nclearTokens.innerText = 'Clear all tokens'\nclearTokens.onclick = oauth2.clearAllTokens;\ndv.appendChild(clearTokens);\n})();\n&lt;/script&gt;\n</code></pre>\n\n<p>OK, </p>\n\n<p>Now you can see connection and redirection to oauthWindow.html in new window without errors. GET parameters now showing you <code>access_token</code> <code>token_type</code> <code>expires_in</code>. Check the access_token <a href=\"http://ft2json.appspot.com/api/samples.html\">HERE</a></p>\n\n<p>As you see access_token working great BUT</p>\n\n<p>What you still don't get is first alert from that :</p>\n\n<pre><code>oauth2.login(req, function(token) {\n  alert('Got an OAuth token:\\n' + token + '\\n'\n  + 'Token expires in ' + oauth2.expiresIn(req) + ' ms\\n');\n}, function(error) {\n  alert(\"Error:\\n\" + error);\n});\n</code></pre>\n\n<p>Second alert works fine and when you try to Auth. again if oauthWindow.html still open it shows you an error alert(so it's working!)\nNow let's add that little code to oauthWindow.html</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;script type=\"text/javascript\"&gt;\n      if (window.opener &amp;&amp; window.opener.oauth2 &amp;&amp; window.opener.oauth2.__doLogin) {\n        window.opener.oauth2.__doLogin(location.hash);\n      } else {\n        document.body.innerText = \"Your browser seems to be stopping this window from communicating with the main window.\";\n      }\n    &lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body&gt;&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Perfect!</p>\n\n<p>Now if you want to work with private tables all you need is to add an access_token to url. </p>\n\n<p>Thanks for giving me the reason to answer myself!</p>\n",
            "last_activity_date": 1340658029,
            "question_id": 10996487,
            "score": 18,
            "tags": [
                "javascript",
                "oauth-2.0",
                "google-fusion-tables"
            ],
            "title": "FusionTables private table with OAUTH2"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I dont think there is anything wrong with the script your using or phantomjs (at least in v1.5).</p>\n\n<p>If you try this script:</p>\n\n<pre><code>var page = require('webpage').create(),\n    system = require('system'),\n    t, address;\n\npage.settings.userName = 'test';\npage.settings.password = 'test';\n\nif (system.args.length === 1) {\n    console.log('Usage: loadspeed.js &lt;some URL&gt;');\n    phantom.exit();\n} else {\n    t = Date.now();\n    address = system.args[1];\n    page.open(address, function (status) {\n        if (status !== 'success') {\n            console.log('FAIL to load the address');\n        } else {\n            t = Date.now() - t;\n            console.log('Page title is ' + page.evaluate(function () {\n                return document.title;\n            }));\n            console.log('Loading time ' + t + ' msec');\n        }\n        phantom.exit();\n    });\n}\n</code></pre>\n\n<p>phantomjs loadspeed.js <a href=\"http://browserspy.dk/password-ok.php\">http://browserspy.dk/password-ok.php</a></p>\n\n<p>The auth is successful.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>PhantomJS (at least as of 1.9.0) has a bug with auth: it sends the request without the auth headers, and then only after it gets the 401 back does it do the request again but this time with the headers. (That is for GET; with POST it doesn't work at all.)</p>\n\n<p>The workaround is simple, so instead of:</p>\n\n<pre><code>page.settings.userName = 'username';\npage.settings.password = 'password';\n</code></pre>\n\n<p>you can use:</p>\n\n<pre><code>page.customHeaders={'Authorization': 'Basic '+btoa('username:password')};\n</code></pre>\n\n<p>(I just covered this in a blog post: <a href=\"http://darrendev.blogspot.jp/2013/04/phantomjs-post-auth-and-timeouts.html\">http://darrendev.blogspot.jp/2013/04/phantomjs-post-auth-and-timeouts.html</a>, and learnt that workaround on the PhantomJS mailing list from Igor Semenko.)</p>\n",
                    "is_accepted": true,
                    "score": 17
                }
            ],
            "body": "<p>I'm trying to open a web page which requires HTTP authentication, in PhantomJS.\nMy script is based off the loadspeed.js example:</p>\n\n<pre><code>var page = require('webpage').create(),\n    t, address;\npage.settings.userName = \"user\";\npage.settings.password = \"password\";\nif (phantom.args.length === 0) {\n  console.log('Usage: loadspeed.js &lt;some URL&gt;');\n  phantom.exit();\n} else {\n  t = Date.now();\n  address = phantom.args[0];\n  page.open(address, function (status) {\n      if (status !== 'success') {\n          console.log('FAIL to load the address');\n      } else {\n          t = Date.now() - t;\n          console.log('Loading time ' + t + ' msec');\n          page.render('page.jpg');\n      }\n      phantom.exit();\n  });\n}\n</code></pre>\n\n<p>I can see from the rendered page.jpg that I'm getting a 401 every time.\nI've also traced the HTTP session using Wireshark, which reveals that no authentication header is sent in the GET request to the given URL.</p>\n\n<p>What am I doing wrong here? I'm just getting started with PhantomJS but I've been searching all evening and not gotten far...</p>\n",
            "last_activity_date": 1402871004,
            "question_id": 10114925,
            "score": 18,
            "tags": [
                "javascript",
                "http",
                "phantomjs"
            ],
            "title": "PhantomJS doesn&#39;t send authentication header"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>window[someMethod] is simply a reference. Only the reference is deleted, not the function itself.\nOnce the function is done, and all reference to it are removed, garbage collection should take care of it, avoiding memory leaks.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<ol>\n<li>It's not setting <em>itself</em> to undefined, it's setting a reference to itself to undefined. If you think of a function as a block of code in memory, that block of code isn't deleted in this case, just the reference to it. You never explicitly delete anything in JavaScript, you simply remove references to it and leave it to the garbage collector to clean up. Note, this might not be the case for actual code, just heap objects, as its up to the engine how to treat it (interpret it, compile it, execute it on an abacus, whatever)</li>\n<li>Based on that logic, once the function is executing, the original reference to it is no longer required as it was needed only initially to transfer execution to it.</li>\n<li>You're misunderstanding JS evaluation as requiring a reference to it for every statement. In all likelihood, this method has been Just-In-Time compiled and is now executing just like any other non-JS function would run.</li>\n<li>There are no apparent memory leaks in the code above.</li>\n</ol>\n\n<p>Hopefully this is making sense.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Remember you can't ever <em>explicitly</em> delete something in Javascript. All you can do is remove all the references to it and so let the garbage collector remove it on the next cycle. By the end of this function, the function itself is still in memory, but there are no external references to it. Next time the GC runs, it will spot this and deallocate its memory.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>So I found this piece of code and it obviously works (as it has been in production for years):</p>\n\n<pre><code>window[someMethod] = function (tmp) {\n    callback({prop:\"val\"}, tmp); \n\n    // Garbage collect\n    window[someMethod] = undefined;\n    try { \n        delete window[someMethod]; \n    } \n    catch (e) { }\n    if (head) { \n        head.removeChild(script); \n    }   \n    // head refers to DOM head elem and script refers to some script file elem\n};\n</code></pre>\n\n<p>Curious to know, how does it work? </p>\n\n<ol>\n<li>How can it set itself to <code>undefined</code> within its body and <code>try</code> to\n<code>delete</code> itself?</li>\n<li>Does the browser know to not execute the <code>undefined</code> and <code>delete</code> until the call is finished? And how?</li>\n<li>If the browser deletes it right away, then what happens after? Does the last line run? </li>\n<li>Finally, do you guys see this leaking memory? If yes, how?</li>\n</ol>\n",
            "last_activity_date": 1311605051,
            "question_id": 6817667,
            "score": 18,
            "tags": [
                "javascript",
                "closures"
            ],
            "title": "Self destructing Javascript function - How does it work?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You could start by reading about the <a href=\"http://www.w3.org/TR/html401/interact/forms.html#h-17.11.2\" rel=\"nofollow\"><code>accesskey</code> attribute</a>:</p>\n\n<blockquote>\n  <p>This attribute assigns an access key to an element. An access key is a single character from the document character set. Note. Authors should consider the input method of the expected reader when specifying an accesskey.<br>\n  [...]<br>\n  The invocation of access keys depends on the underlying system. For instance, on machines running MS Windows, one generally has to press the \"alt\" key in addition to the access key. On Apple systems, one generally has to press the \"cmd\" key in addition to the access key.</p>\n</blockquote>\n\n<p>You can also put the <code>accesskey</code> attribute on <code>&lt;a&gt;</code> elements, an example of this usage can be found on the \"Random Article\" sidebar link on <a href=\"http://en.wikipedia.org/wiki/Main_Page\" rel=\"nofollow\">Wikipedia</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Check out my project:</p>\n\n<p><a href=\"https://github.com/oscargodson/jkey\">https://github.com/oscargodson/jkey</a></p>\n\n<p>And demos:</p>\n\n<p><a href=\"http://oscargodson.github.com/jKey/\">http://oscargodson.github.com/jKey/</a></p>\n\n<p>Feel free to use it and if you want, contribute :)</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>You can use <a href=\"https://github.com/jeresig/jquery.hotkeys\" rel=\"nofollow\">Hotkeys</a> - plugin for JQuery. JQuery is quite lightweight javascript library - is required js file for using Hotkeys.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p><a href=\"http://www.openjs.com/scripts/events/keyboard_shortcuts\" rel=\"nofollow\">This one</a> is very easy to use.</p>\n\n<p>Ex:</p>\n\n<pre><code>shortcut.add(\"Up\",     // key\n             go_up()); // function\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I just developed one of my own called mousetrap.  Check it out <a href=\"http://craig.is/killing/mice\">http://craig.is/killing/mice</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>You could use the <a href=\"http://www.w3.org/TR/html401/interact/forms.html#h-17.11.2\" rel=\"nofollow\">accesskey</a> html attribute as it would then make your webapp accessible.</p>\n\n<p>Use the <a href=\"https://damianedwards.wordpress.com/2009/04/19/access-key-highlighter-plugin-for-jquery-now-available/\" rel=\"nofollow\">KeyTips</a> jQuery Plugin to display them to the user in a similar way to <a href=\"http://office.microsoft.com/en-us/powerpoint-help/use-the-keyboard-to-work-with-ribbon-programs-HA010091908.aspx\" rel=\"nofollow\">Office Ribbon keyboard shortcuts</a>.</p>\n\n<p><img src=\"http://i.stack.imgur.com/RnZS1.jpg\" alt=\"enter image description here\"></p>\n\n<p><a href=\"http://damianedwards.com/files/KeyTips/\" rel=\"nofollow\">Try the Demo</a>. <a href=\"https://github.com/DamianEdwards/KeyTips-jQuery-Plugin\" rel=\"nofollow\">Code on Github</a>.</p>\n\n<p>Note that <a href=\"http://en.wikipedia.org/wiki/Access_key\" rel=\"nofollow\">Wikipedia page on accesskey</a> lists the modifier keys to invoke access keys for different browsers.</p>\n\n<p>See also the A List Apart article: <a href=\"http://www.alistapart.com/articles/accesskeys/\" rel=\"nofollow\">Accesskeys: Unlocking Hidden Navigation</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I would strongly encourage you to check out Thomas Fuchs' keymaster for doing keyboard shortcuts in webapps: <a href=\"https://github.com/madrobby/keymaster\" rel=\"nofollow\">https://github.com/madrobby/keymaster</a></p>\n\n<p>It makes it quite simple:</p>\n\n<pre><code>// define short of 'a'\nkey('a', function(){ alert('you pressed a!') });\n\n// returning false stops the event and prevents default browser events\nkey('ctrl+r', function(){ alert('stopped reload!'); return false });\n\n// multiple shortcuts that do the same thing\nkey('\u2318+r, ctrl+r', function(){ });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I want to develop a web application, which should (idealy) be fully usable via the keyboard. I know how to handle keyboard events in javascript, but managing them for a larger application is quite boring. I wonder if somebody knows a library which makes that process easier. Any hint? Please not that I'm not interested in a full blown Web GUI framework. I want to keep control over my webpage/app.</p>\n",
            "last_activity_date": 1377972604,
            "question_id": 5836596,
            "score": 18,
            "tags": [
                "javascript",
                "keyboard-shortcuts",
                "accessibility",
                "access-keys"
            ],
            "title": "Javascript keyboard shortcuts for web application"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You could try timing some basic operations - have a look at Steve Souder's Episodes and Yahoo's boomerang for good ways of timing stuff browserside. However its going to be rather complicated to work out how the metrics relate to an acceptable level of performance / a rewarding user experience.</p>\n\n<p>If you're going to provide a UI to let users opt in / opt out, why not just let the user choose the level of eye candy in the app vs the rendering speed?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Not to be a killjoy here, but this is not a feat that is currently possible in any meaningful way in my opinion. </p>\n\n<p>There are several reasons for this, the main ones being:</p>\n\n<ol>\n<li><p>Whatever measurement you do, if it is to have any meaning, will have to test the maximum potential of the browser/cpu, which you cannot do and maintain any kind of reasonable user experience</p></li>\n<li><p>Even if you could, it would be a meaningless snapshot since you have no idea what kind of load the cpu is under from other applications than the browser while your test is running, and weather or not that situation will continue while the user is visiting your website.</p></li>\n<li><p>Even if you could do that, every browser has their own strengths and weaknesses, which means, you'd have to test every dom manipulation function to know how fast the browser would complete it, there is no \"general\" or \"average\" that makes sense here in my experience, and even if there was, the speed with which dom manipulation commands execute, is based on the context of what is currently in the dom, which changes when you manipulate it.</p></li>\n</ol>\n\n<p>The best you can do is to either </p>\n\n<ol>\n<li><p>Let your users decide what they want, and enable them to easily change that decision if they regret it</p>\n\n<p>or better yet</p></li>\n<li><p>Choose to give them something that you can be reasonably sure that the greater part of your target audience will be able to enjoy.</p></li>\n</ol>\n\n<p>Slightly off topic, but following this train of thought: if your users are not techleaders in their social circles (like most users in here are, but most people in the world are not) don't give them too much choice, ie. any choice that is not absolutely nescessary - they don't want it and they  don't understand the technical consequences of their decision before it is too late.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Take a look at some of Google's (copyrighted!) benchmarks for <a href=\"http://en.wikipedia.org/wiki/V8_%28JavaScript_engine%29\" rel=\"nofollow\">V8</a>:</p>\n\n<ul>\n<li><p><a href=\"http://v8.googlecode.com/svn/data/benchmarks/v4/regexp.js\" rel=\"nofollow\">http://v8.googlecode.com/svn/data/benchmarks/v4/regexp.js</a></p></li>\n<li><p><a href=\"http://v8.googlecode.com/svn/data/benchmarks/v4/splay.js\" rel=\"nofollow\">http://v8.googlecode.com/svn/data/benchmarks/v4/splay.js</a></p></li>\n</ul>\n\n<p>I chose a couple of the simpler ones to give an idea of similar benchmarks you could create yourself to test feature sets.  As long as you keep the run-time of your tests between time logged at start to time logged at completion to less than 100&nbsp;ms on the slowest systems (which these Google tests are vastly greater than) you should get the information you need without being detrimental to user experience.  While the Google benchmarks care at a granularity between the faster systems, you don't.  All that you need to know is which systems take longer than XX&nbsp;ms to complete.</p>\n\n<p>Things you could test are regular expression operations (similar to the above), string concatenation, page scrolling, anything that causes a browser repaint or reflow, etc.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A different approach, that does not need explicit benchmark, would be to progressively enable features. </p>\n\n<p>You could apply features in prioritized order, and after each one, drop the rest if a certain amount of time has passed. </p>\n\n<p>Ensuring that the most expensive features come last, you would present the user with a somewhat appropriate selection of features based on how speedy the browser is.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><strong>Some Ideas:</strong></p>\n\n<ul>\n<li>Putting a time-limit on the tests seems like an obvious choice.</li>\n<li>Storing test results in a cookie also seems obvious.</li>\n<li>Poor test performance on a test could pause further scripts \n<ul>\n<li>and trigger display of a non-blocking prompt UI (like the save password prompts common in modern web browsers) </li>\n<li>that asks the user if they want to opt into further scripting effects - and store the answer in a cookie.</li>\n<li>while the user hasn't answered the prompt, then periodically repeat the tests and auto-accept the scripting prompt if consecutive tests finish faster than the first one.<br>\n.</li>\n</ul></li>\n<li>On a sidenote - Slow network speeds could also probably be tested\n<ul>\n<li>by timing the download of external resources (like the pages own CSS or JavaScript files)</li>\n<li>and comparing that result with the JavaScript benchmark results.</li>\n<li>this may be useful on sites relying on loads of XHR effects and/or heavy use of <code>&lt;img/&gt;</code>s.<br>\n.</li>\n</ul></li>\n<li>It seems that DOM rendering/manipulation benchmarks are difficult to perform before the page has started to render - and are thus likely to cause quite noticable delays for all users.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>You could run all the benchmarks you want using Web Workers, then, according to results, store your detection about the performance of the machine in a cookie.\nThis is only for HTML5 Supported browsers, of-course </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm toying with the idea of progressively enabling/disabling JavaScript (and CSS) effects on a page - depending on how fast/slow the browser seems to be.</p>\n\n<p>I'm specifically thinking about low-powered mobile devices and old desktop computers -- not just IE6 :-)</p>\n\n<p>Are there any examples of this sort of thing being done?</p>\n\n<p>What would be the best ways to measure this - accounting for things, like temporary slowdowns on busy CPUs?</p>\n\n<p><strong>Notes:</strong> </p>\n\n<ul>\n<li>I'm not interested in browser/OS detection.</li>\n<li>At the moment, I'm not interested in bandwidth measurements - only browser/cpu performance.</li>\n<li>Things that might be interesting to measure: \n<ul>\n<li>Base JavaScript</li>\n<li>DOM manipulation</li>\n<li>DOM/CSS rendering</li>\n</ul></li>\n<li>I'd like to do this in a way that affects the page's render-speed as little as possible.</li>\n</ul>\n\n<p>BTW: In order to not confuse/irritate users with inconsistent behavior - this would, of course, require on-screen notifications to allow users to opt in/out of this whole performance-tuning process.</p>\n\n<p>[<strong>Update</strong>: there's a related question that I missed: <a href=\"http://stackoverflow.com/questions/3276321/disable-javascript-function-based-on-users-computers-performance\">Disable JavaScript function based on user's computer's performance</a>. Thanks <a href=\"http://stackoverflow.com/users/99209/andrioid\">Andrioid</a>!]</p>\n",
            "last_activity_date": 1389192970,
            "question_id": 4734518,
            "score": 18,
            "tags": [
                "javascript",
                "performance",
                "browser",
                "benchmarking"
            ],
            "title": "What&#39;s the best way to determine at runtime if a browser is too slow to gracefully handle complex JavaScript/CSS?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Try:\n<code>$('#mytable').attr('offsetTop')</code></p>\n",
                    "is_accepted": false,
                    "score": -6
                },
                {
                    "body": "<p><code>document.getElementById(\"elem\").style.top</code> is how you reach this in JS.</p>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<pre><code>$(\"#myTable\").offset().top;\n</code></pre>\n\n<p>This will give you the computed offset (relative to document) of any object. </p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>If you want the position relative to the document then:</p>\n\n<pre><code>$(\"#myTable\").offset().top;\n</code></pre>\n\n<p>but often you will want the position relative to the closest positioned parent:</p>\n\n<pre><code>$(\"#myTable\").position().top;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 35
                }
            ],
            "body": "<p>Is possible with javascript/jquery to get the top position of an element? </p>\n\n<p>The element is a table, if that matter.</p>\n",
            "last_activity_date": 1374587355,
            "question_id": 1101292,
            "score": 18,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to get the top position of an element?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>have you tried JSON-RPC.  Apparently Dojo has good support for it, though I haven't tried it thoroughly</p>\n\n<p><a href=\"http://en.wikipedia.org/wiki/JSON-RPC\" rel=\"nofollow\">JSON-RPC</a></p>\n\n<p><a href=\"http://dojotoolkit.org/book/dojo-book-0-9/part-3-programmatic-dijit-and-dojo/ajax-transports/remote-procedure-call-rpc\" rel=\"nofollow\">Dojo Documentation</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is a <a href=\"http://plugins.jquery.com/project/Comet\">jquery comet plugin</a>\nProbably the best version though is the <a href=\"http://www.dojotoolkit.org/about\">Dojo library</a></p>\n\n<p>I have a quick list of commands I used to get a jetty server with comet up and running <a href=\"http://www.hallofbrightcarvings.com/getting-started-with-comet/\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>It's not just the javascript library that you need, but a server-side implementation as well. Depending on your needs, you'll need to pick a proper implementation.</p>\n\n<p>You mentioned PHP, which is typically difficult with long-held requests. Other options include having a separate server for your comet requests, or using a SaaS solution, such as <a href=\"http://www.frozenmountain.com/websync\" rel=\"nofollow\">WebSync OnDemand</a>. </p>\n\n<p>Depending on which option you pick for the server, you will have one or more javascript clients available. But you need to determine your server implementation first, then use the appropriate javascript implementation to match.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Have a look at <a href=\"http://www.ape-project.org/\" rel=\"nofollow\">http://www.ape-project.org/</a> Pretty quick setup process.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am looking for a simple and reliable Comet javascript library. I want to keep a persistent streaming of data from my server (via PHP script) to the client side. I tried building my own using the iframe technique, but there are lots of issues with safari which I experienced. I am just hoping someone else has created a simple library for it? </p>\n",
            "last_activity_date": 1315926030,
            "question_id": 916669,
            "score": 18,
            "tags": [
                "javascript",
                "comet"
            ],
            "title": "COMET javascript library"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p><a href=\"https://developer.mozilla.org/en/DOM/document.getElementsByClassName\"><code>document.getElementsByClassName(klass)</code></a></p>\n\n<p>Be aware that some engines (particularly the older browsers) don't have it. You might consider using a shim, if that's the case. It will be slow, and iterate over the whole document, but it will work.</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>I just googled this</p>\n\n<p><a href=\"http://robertnyman.com/2008/05/27/the-ultimate-getelementsbyclassname-anno-2008/\" rel=\"nofollow\">http://robertnyman.com/2008/05/27/the-ultimate-getelementsbyclassname-anno-2008/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In <a href=\"http://www.quirksmode.org/dom/w3c_core.html#t11\" rel=\"nofollow\">some browsers</a> there is a <code>document.getElementsByClassName(class)</code> function. Otherwise, the only option you have is to iterate over all elements in the document by checking each of it against your condition of having the required class name.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>document.getElementsByClassName('your class');  \n</code></pre>\n\n<p>or you can build your classname like this, if that doesn't work try this</p>\n\n<pre><code>if (!document.getElementsByClassName) {\n    document.getElementsByClassName=function(cn) {\n        var allT=document.getElementsByTagName('*'), allCN=[], i=0, a;\n        while(a=allT[i++]) {\n            a.className==cn ? allCN[allCN.length]=a : null;\n        }\n        return allCN\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>This should work:</p>\n\n<pre><code>function(className)\n{\n    var matchingItems = [];\n    var allElements = document.getElementsByTagName(\"*\");\n\n    for(var i=0; i &lt; allElements.length; i++)\n    {\n        if(allElements [i].className == className)\n        {\n            matchingItems.push(allElements[i]);\n        }\n    }\n\n    return matchingItems;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre>\n<code>\nfunction getElementsByClassName(oElm, strTagName, strClassName){\n    var arrElements = (strTagName == \"*\" && oElm.all)? oElm.all :\n        oElm.getElementsByTagName(strTagName);\n    var arrReturnElements = new Array();\n    strClassName = strClassName.replace(/\\-/g, \"\\\\-\");\n    var oRegExp = new RegExp(\"(^|\\\\s)\" + strClassName + \"(\\\\s|$)\");\n    var oElement;\n    for(var i=0; i&lt;arrElements.length; i++){\n        oElement = arrElements[i];     \n        if(oRegExp.test(oElement.className)){\n            arrReturnElements.push(oElement);\n        }   \n    }\n    return (arrReturnElements)\n}\n\n</code>\n</pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Several techniques described and speed tested here: <a href=\"http://ejohn.org/blog/getelementsbyclassname-speed-comparison/\" rel=\"nofollow\">http://ejohn.org/blog/getelementsbyclassname-speed-comparison/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A Simple and an easy way      </p>\n\n<pre><code>var cusid_ele = document.getElementsByClassName('custid');\nfor (var i = 0; i &lt; cusid_ele.length; ++i) {\n    var item = cusid_ele[i];  \n    item.innerHTML = 'this is value';\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>How to get all elements by class name on pure javascript ? Analog $('.class') in Jquery ?</p>\n",
            "last_activity_date": 1411459250,
            "question_id": 9427311,
            "score": 17,
            "tags": [
                "javascript"
            ],
            "title": "How to get all elements by class name?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Here are some libraries that you may find helpful:</p>\n\n<p><a href=\"https://github.com/afiore/arboreal\">arboreal.js</a>, a \"micro-library for traversing and manipulating tree-like data structures\" in node.js and the browser.</p>\n\n<p><a href=\"https://github.com/mauriciosantos/buckets/\">buckets</a>, a \"complete, fully tested and documented data structure library\" that includes BSTs, a heap, and a bunch of other goodies.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Wish I'd seen that solution before, because those libraries look helpful!  </p>\n\n<p>Here is one I put together which is an alternative.  Meant for traversal, manipulation and loading of hierarchical tree structures from self referencing flat tables, not for balanced binary trees.</p>\n\n<p><a href=\"https://github.com/stephen-james/DataStructures.Tree\" rel=\"nofollow\">DataStructures.Tree</a> and <a href=\"http://stephenjamescode.blogspot.co.uk/2013/03/building-tree-in-javascript-to-convert.html\" rel=\"nofollow\">related blog post</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Two libraries to add to the list are:</p>\n\n<ul>\n<li><a href=\"https://github.com/aaronj1335/t-js\">t.js</a> - Seems to be good for traversal;</li>\n<li><a href=\"http://jnuno.com/tree-model-js/\">TreeModel</a> - Manipulation and traversal.</li>\n</ul>\n\n<p><em>disclaimer: I built TreeModel</em></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I am not sure what your needs are so this is a shot in the dark.\nI normally use (for lightweight Javascript) an array of arrays, like this:</p>\n\n<pre><code>node[i] = [parent, firstChild, secondChild, ... nthChild];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try the DOM</p>\n\n<pre><code>var o = document.createElement( 'WHAT_YOU_WANT' )\n// o.appendChild( ... )\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You can use this API : </p>\n\n<pre><code>TreeNode=function(data,parent){\n    this.data=data;\n    this.parent=parent;\n    this.children=[];\n    return this;\n};\nTreeNode.prototype.addChild=function(data){\n   this.children.push(new TreeNode(data,this));\n  return this;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Are there good libraries for manipulating trees in javascript? Just to be clear, I am looking for tree as in data structure not display model.</p>\n",
            "last_activity_date": 1423952226,
            "question_id": 8640823,
            "score": 17,
            "tags": [
                "javascript",
                "tree"
            ],
            "title": "What javascript tree data structures are available?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Use <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/Special/typeof\"><code>typeof</code></a>:</p>\n\n<pre><code>if (typeof console == \"object\") {\n}\n</code></pre>\n\n<p>or check the property exists as a member of <code>window</code>:</p>\n\n<pre><code>if (\"console\" in window) {\n}\n</code></pre>\n\n<p>... although that's not quite as robust.</p>\n\n<blockquote>\n  <p><em>next to that problem i am interested in all informations about the console object. has anybody some documentation link, or so? is it a standard? and so on...</em></p>\n</blockquote>\n\n<p>Check out the <a href=\"http://getfirebug.com/wiki/index.php/Console_API\">Firebug documentation for the Console API</a>; Chrome and Safari implement most, but not all, of the methods listed there.  There's no standard defining what should be in the console, so you'll need to test each browser to see if it supports the feature.</p>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>maybe...</p>\n\n<pre><code>if (console) {\n    // do stuff\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>Defined by <a href=\"http://getfirebug.com/logging\" rel=\"nofollow\">firebug</a>, IE8 (need to open the developer tools with F12), Chrome, etc but there is no defined spec for it. There is a <a href=\"http://benalman.com/projects/javascript-debug-console-log/\" rel=\"nofollow\">console.log wrapper</a> that makes it a very easy to use, cross browser logging solution so if the console doesn't exist your code doesn't explode.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>A nice simple and short way of outputting to the console safely is as follows:</p>\n\n<pre><code>window.console &amp;&amp; console.log('Debug message');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I always include this in the top of my HTML-header before I load anything else. Debugging with console.debug is just too long for me. And I like to toggle the usage of these console functions.</p>\n\n<p>Don't know how optimized the code is, but it always does the job.</p>\n\n<pre><code>(function() {\n    var consoleDisabled = false;\n    if (consoleDisabled) {\n        window.console = undefined;\n    }\n    if (window.console == undefined) {\n        window.console = {\n            debug: function() {\n                return true;\n            },\n            info: function() {\n                return false;\n            },\n            warn: function() {\n                return false;\n            },\n            log: function() {\n                return false;\n            }\n        }\n    }\n    debug = (function(args) {\n        window.console.debug(args);\n    });\n    info = (function(args) {\n        window.console.info(args);\n    });\n    warn = (function(args) {\n        window.console.warn(args);\n    });\n    log = (function(args) {\n        window.console.log(args);\n    });\n})();\ndebug(somevar);\ninfo(somevar);\nwarn(somevar);\nlog(somevar);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>try{\nconsole.log(\"test\")\n}\ncatch(e){\nconsole={},\nconsole.log=function(a){}\n}\n</code></pre>\n\n<p>just put it at the top of your JS file and then use consol.log(); without any worry for browser error, i also had this error in IE9</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>here's what i use. bear in mind that i am only half-heartedly supporting browsers with no support for console. and i only ever use console.log(), but you can see how it can be extended to support console.dir(), console.info(), etc</p>\n\n<pre><code>var console = console || {\n    \"log\": function(stuff) {}\n};\n</code></pre>\n\n<p>I like it because calling it does not cause an error, but it returns [undefined], which i think is appropriate.</p>\n\n<p>Note that many many people before (and after) us have written similar polyfills:</p>\n\n<p><a href=\"https://gist.github.com/search?q=console+%7C%7C+console\" rel=\"nofollow\">https://gist.github.com/search?q=console+%7C%7C+console</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Simplest way would be:</p>\n\n<pre><code>if (window.console){\n   console.log('do something');\n}\n</code></pre>\n\n<p>instead of just writing:</p>\n\n<pre><code>console.log('do something');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I was wondering, how can i find out with <strong>javascript</strong> if the console object is available?</p>\n\n<p>i have the problem that if i forget to remove a debug output like <code>console.log('sthg')</code> i get errors in several browsers, if there is no firebug, or similar, active.</p>\n\n<p>thanks for help</p>\n\n<p><em>next to that problem i am interested in all informations about the console object. has anybody some documentation link, or so? is it a standard? and so on...</em></p>\n",
            "last_activity_date": 1415304957,
            "question_id": 4946287,
            "score": 17,
            "tags": [
                "javascript",
                "debugging"
            ],
            "title": "finding out if console is available"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The built-in Node.js http client is pretty low level, it doesn't support HTTP Basic auth out of the box. The second argument to <code>http.createClient</code> is just a hostname. It doesn't expect credentials in there.</p>\n\n<p>You have two options:</p>\n\n<p><strong>1. Construct the HTTP Basic Authorization header yourself</strong></p>\n\n<pre><code>var Base64 = require('Base64');\nvar couchdb = http.createClient(443, 'weng.cloudant.com', true);\nvar request = couchdb.request('GET', '/my_app/_all_docs', {\n    'Host': 'weng.cloudant.com',\n    'Authorization': 'Basic ' + Base64.encode('weng:password')\n});\nrequest.end();\nrequest.on('response', function (response) {\n    response.on('data', function (data) {\n        util.print(data);\n    });\n});\n</code></pre>\n\n<p>You will need a Base64 lib such as <a href=\"http://github.com/pkrumins/node-base64\">one for node written in C</a>, or a pure-JS one (e.g. <a href=\"http://cloudant.cloudant.com/_utils/script/base64.js\">the one that CouchDB Futon uses</a>).</p>\n\n<p><strong>2. Use a more high-level Node.js HTTP client</strong></p>\n\n<p>A more featureful HTTP client, like <a href=\"http://github.com/danwrong/restler\">Restler</a>, will make it much easier to do the request above, including credentials:</p>\n\n<pre><code>var restler = require('restler');\nrestler.get('https://weng.cloudant.com:443/my_app/_all_docs', {\n    username: 'weng',\n    password: 'password'\n}).on('complete', function (data) {\n    util.print(data);\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>There are lots of CouchDB modules for Node.js.</p>\n\n<ul>\n<li><a href=\"http://github.com/sixtus/node-couch/tree/master\">node-couch</a> - a CouchDB connector</li>\n<li><a href=\"http://github.com/felixge/node-couchdb\">node-couchdb</a> - A full API implementation</li>\n<li><a href=\"http://github.com/rsms/node-couchdb-min\">node-couchdb-min</a> - Light-weight client with low level of abstraction and connection pooling.</li>\n<li><a href=\"http://github.com/cloudhead/cradle\">cradle</a> - a high-level, caching, CouchDB client</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Just wanted to add</p>\n\n<ul>\n<li><a href=\"https://github.com/dscape/nano\" rel=\"nofollow\">nano</a> - minimalistic couchdb driver for node.js</li>\n</ul>\n\n<p>to the list. It is written by Nuno Job, CCO of <a href=\"https://www.nodejitsu.com/\" rel=\"nofollow\">nodejitsu</a>, and actively maintained.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I am trying to connect to my CouchDB database on Cloudant using Node.js.</p>\n\n<p>This worked on the shell:</p>\n\n<pre><code>    curl https://weng:password@weng.cloudant.com/my_app/_all_docs\n</code></pre>\n\n<p>But this node.js code didn't work:</p>\n\n<pre><code>    var couchdb = http.createClient(443, 'weng:password@weng.cloudant.com', true);\n    var request = couchdb.request('GET', '/my_app/_all_docs', {\n        'Host': 'weng.cloudant.com'\n    });\n    request.end();\n    request.on('response', function (response) {\n        response.on('data', function (data) {\n            util.print(data);\n        });\n    });\n</code></pre>\n\n<p>It gave me this data back:</p>\n\n<pre><code>    {\"error\":\"unauthorized\",\"reason\":\"_reader access is required for this request\"}\n</code></pre>\n\n<p>How do I do to list all my databases with Node.js?</p>\n",
            "last_activity_date": 1410873143,
            "question_id": 4070331,
            "score": 17,
            "tags": [
                "javascript",
                "node.js",
                "couchdb",
                "cloudant"
            ],
            "title": "Connect to Cloudant CouchDB with Node.js?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>There is the Cobra Engine for Java (<a href=\"http://lobobrowser.org/cobra.jsp\" rel=\"nofollow\">http://lobobrowser.org/cobra.jsp</a>), which handles Javascript (it also has a renderer, but that is optional). I've never used it, but have heard nice things said about it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can look at <a href=\"http://htmlunit.sourceforge.net/faq.html\" rel=\"nofollow\">HTMLUnit</a>. It's main purpose is automatic web testing, but I think it may let you get the rendered page.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>We used <a href=\"http://www.mozilla.org/rhino/\" rel=\"nofollow\">Rhino</a> sometime ago to do some automated testing from Java. It seems it'll do the job for you :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Well, there's the <a href=\"http://trac.webkit.org/browser/trunk/WebKitTools/DumpRenderTree\" rel=\"nofollow\">DumpRenderTree</a> tool which is used as part of the WebKit test suites. I'm not sure how suitable it is for turning into a standalone tool, but it does what you ask for (render HTML, run JavaScript, and dump its render tree out to disk).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>i think there's an example code for Qt that uses the included WebKit to render a page to a pixmap.  from there to a full CLI utility is just defining your needs.</p>\n\n<p>of course, for most screen-scraping need you want the text, not a pixmap... if that's what you want, better check Rhino</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It's very little code to have a WebView render a page without displaying anything, but it has to be a GUI application. They can take command line arguments as well, and hide the window. Using WebKit directly it might be possible in a tool.</p>\n\n<p>Apart from the complicated DOM access in Objective-C WebKit can also inject JavaScript, and together with jQuery that makes for a nice scraping solution. I don't know of any universal application doing that, though.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Since JavaScript can do quite a lot of manipulations to the web page's document object model (DOM), it seems like to accurately scrape the content of an arbitrary page, you'd need to not only run a JavaScript engine, you'd also need a complete and accurate DOM representation of the page.  That's something you'll only get if you have a real browser engine instantiated.  It is possible to use an embedded, not-displayed WebKit or Gecko engine for this, then after a suitable loading delay to allow for script execution, just dump the DOM contents in HTML form.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>web kit html to pdf works perfect, it can even produce jpg </p>\n\n<p><a href=\"http://wkhtmltopdf.googlecode.com\" rel=\"nofollow\">http://wkhtmltopdf.googlecode.com</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Page-scraping on the Internet has seem to have hit somewhat of a wall for me, as there are more and more sites that are dependent on JavaScript for rendering portions of the screen.</p>\n\n<p>It seems to me that with so many open source layout and JavaScript renderers released (like <a href=\"http://webkit.org/\">WebKit</a>, <a href=\"https://developer.mozilla.org/en/Gecko\">Gecko</a> and <a href=\"http://code.google.com/chromium/\">Chromium</a> + <a href=\"http://code.google.com/p/v8/\">V8</a>) that someone must have made a tool for downloading a page and rendering its JavaScript without having to run an actual browser.  However, I'm not turning up what I'm looking for with my searches - I've found tools like <a href=\"http://seleniumhq.org/projects/remote-control/\">Selenium-rc</a>, but they depend on a running browser.  I'm interested in any tool or library which can do one (or both) of the following:</p>\n\n<ol>\n<li><p>A program that can be run from the command line (*nix) which, given the source of a page, returns the page's source as rendered by some JS engine.</p></li>\n<li><p>Integrated support in a particular language that allows one to (easily) pass the source of a page to it and returns the page's source as rendered by some JS engine.</p></li>\n</ol>\n\n<p>I think #1 is preferable in a general sense, but #2 would be more useful if the tool exists in the language I want to work in.  Also, I'm not concerned with the particular JS engine - any relatively modern one will do.  What is out there?</p>\n",
            "last_activity_date": 1301459880,
            "question_id": 727283,
            "score": 17,
            "tags": [
                "javascript",
                "html",
                "command-line"
            ],
            "title": "Are there command line or library tools for rendering webpages that use JavaScript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><a href=\"http://getbootstrap.com/javascript/#dropdowns\" rel=\"nofollow\">Bootstrap provides the following function:</a></p>\n\n<pre>                 | This event is fired immediately when the hide instance method \nhide.bs.dropdown | has been called. The toggling anchor element is available as the \n                 | relatedTarget property of the event.</pre>\n\n<p>Therefore, implementing this function should be able to disable the dropdown from closing.</p>\n\n<pre><code>$('#myDropdown').on('hide.bs.dropdown', function (e) {\n    var target = $(e.target);\n    if(target.hasClass(\"keepopen\") || target.parents(\".keepopen\").length){\n        return false; // returning false should stop the dropdown from hiding.\n    }else{\n        return true;\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Removing the data attribute <code>data-toggle=\"dropdown\"</code> and implementing the open/close of the dropdown can be a solution.</p>\n\n<p>First by handling the click on the link to open/close the dropdown like this :</p>\n\n<pre><code>$('li.dropdown.mega-dropdown a').on('click', function (event) {\n    $(this).parent().toggleClass('open');\n});\n</code></pre>\n\n<p>and then listening the clicks outside of the dropdown to close it like this :</p>\n\n<pre><code>$('body').on('click', function (e) {\n    if (!$('li.dropdown.mega-dropdown').is(e.target) \n        &amp;&amp; $('li.dropdown.mega-dropdown').has(e.target).length === 0 \n        &amp;&amp; $('.open').has(e.target).length === 0\n    ) {\n        $('li.dropdown.mega-dropdown').removeClass('open');\n    }\n});\n</code></pre>\n\n<p>Here is the demo :\n<a href=\"http://jsfiddle.net/RomaLefrancois/hh81rhcm/2/\">http://jsfiddle.net/RomaLefrancois/hh81rhcm/2/</a></p>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>You can stop click on the dropdown from propagating and then manually reimplement the carousel controls using <a href=\"http://getbootstrap.com/javascript/#carousel\" rel=\"nofollow\">carousel javascript methods</a>.</p>\n\n<pre><code>$('ul.dropdown-menu.mega-dropdown-menu').on('click', function(event) {\n    event.stopPropagation();\n});\n\n$('a.left').click(function () {\n    $('#carousel').carousel('prev');\n});\n\n$('a.right').click(function () {\n    $('#carousel').carousel('next');\n});\n\n$('ol.carousel-indicators li').click(function (event) {\n    var index = $(this).data(\"slide-to\");\n    $('#carousel').carousel(index);\n});\n</code></pre>\n\n<p>Here is the <a href=\"http://jsfiddle.net/bo93ba38/\" rel=\"nofollow\">jsfiddle</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<blockquote>\n  <ul>\n  <li><strong>demo:</strong> <a href=\"http://jsfiddle.net/4y8tLgcp/\" rel=\"nofollow\">http://jsfiddle.net/4y8tLgcp/</a></li>\n  </ul>\n</blockquote>\n\n<pre><code>$('ul.nav.navbar-nav').on('click.bs.dropdown', function(e){\n    var $a  = $(e.target), is_a = $a.is('.is_a');\n    if($a.hasClass('dropdown-toggle')){   \n        $('ul.dropdown-menu', this).toggle(!is_a);\n        $a.toggleClass('is_a', !is_a);\n    }\n}).on('mouseleave', function(){\n    $('ul.dropdown-menu',this).hide();\n    $('.is_a', this).removeClass('is_a');\n});\n</code></pre>\n\n<p>i have updated it once again to be the smartest and functional as possible. it now close when you hover outside the nav, remaining open while you are inside it. simply perfect.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I also found a solution.</p>\n\n<p>Assuming that the <code>Twitter Bootstrap Components</code> related events handlers are delegated to the <code>document</code> object, I loop the attached handlers and check if the current clicked element (or one of its parents) is concerned by a delegated event.</p>\n\n<pre><code>$('ul.dropdown-menu.mega-dropdown-menu').on('click', function(event){\n    var events = $._data(document, 'events') || {};\n    events = events.click || [];\n    for(var i = 0; i &lt; events.length; i++) {\n        if(events[i].selector) {\n\n            //Check if the clicked element matches the event selector\n            if($(event.target).is(events[i].selector)) {\n                events[i].handler.call(event.target, event);\n            }\n\n            // Check if any of the clicked element parents matches the \n            // delegated event selector (Emulating propagation)\n            $(event.target).parents(events[i].selector).each(function(){\n                events[i].handler.call(this, event);\n            });\n        }\n    }\n    event.stopPropagation(); //Always stop propagation\n});\n</code></pre>\n\n<p>Hope it helps any one looking for a similar solution.</p>\n\n<p>Thank you all for your help.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have a Twitter Bootstrap dropdown menu. As all Twitter Bootstrap users know, the dropdown menu closes on click (even clicking inside it).</p>\n\n<p>To avoid this, I can easily attach a click event handler on the dropdown menu and simply add the famous <code>event.stopPropagation()</code>. </p>\n\n<pre><code>&lt;ul class=\"nav navbar-nav\"&gt;\n  &lt;li class=\"dropdown mega-dropdown\"&gt;\n    &lt;a href=\"javascript:;\" class=\"dropdown-toggle\" data-toggle=\"dropdown\"&gt;\n      &lt;i class=\"fa fa-list-alt\"&gt;&lt;/i&gt; Menu item 1\n      &lt;span class=\"fa fa-chevron-down pull-right\"&gt;&lt;/span&gt;\n    &lt;/a&gt;\n    &lt;ul class=\"dropdown-menu mega-dropdown-menu\"&gt;\n      &lt;li&gt;\n        &lt;div id=\"carousel\" class=\"carousel slide\" data-ride=\"carousel\"&gt;\n          &lt;ol class=\"carousel-indicators\"&gt;\n            &lt;li data-slide-to=\"0\" data-target=\"#carousel\"&gt;&lt;/li&gt;\n            &lt;li class=\"active\" data-slide-to=\"1\" data-target=\"#carousel\"&gt;&lt;/li&gt;\n          &lt;/ol&gt;\n          &lt;div class=\"carousel-inner\"&gt;\n            &lt;div class=\"item\"&gt;\n              &lt;img alt=\"\" class=\"img-rounded\" src=\"img1.jpg\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"item active\"&gt;\n              &lt;img alt=\"\" class=\"img-rounded\" src=\"img2.jpg\"&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n          &lt;a data-slide=\"prev\" role=\"button\" href=\"#carousel\" \n             class=\"left carousel-control\"&gt;\n            &lt;span class=\"glyphicon glyphicon-chevron-left\"&gt;&lt;/span&gt;\n          &lt;/a&gt;\n          &lt;a data-slide=\"next\" role=\"button\" href=\"#carousel\" \n             class=\"right carousel-control\"&gt;\n            &lt;span class=\"glyphicon glyphicon-chevron-right\"&gt;&lt;/span&gt;\n          &lt;/a&gt;\n        &lt;/div&gt;\n      &lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>This looks easy and a very common behavior, however, and since <code>carousel-controls</code> (as well as <code>carousel indicators</code>) events handlers are delegated to the <code>document</code> object, the <em>click</em> event on these elements (<strong>prev/next</strong> controls, ...) will be \"ignored\".</p>\n\n<pre><code>$('ul.dropdown-menu.mega-dropdown-menu').on('click', function(event){\n    // The event won't be propagated up to the document NODE and \n    // therefore delegated events won't be fired\n    event.stopPropagation();\n});\n</code></pre>\n\n<p><strong>UPDATE</strong>  </p>\n\n<p>Relying on Twitter Bootstrap dropdown <code>hide/hidden</code> events is not a solution for many reasons : </p>\n\n<ul>\n<li>The provided event for both events handler doesn't give you reference to the clicked element</li>\n<li>The dropdown menu content is dynamically generated so adding a <code>flag</code> class is not possible</li>\n</ul>\n\n<p><a href=\"http://jsfiddle.net/zend_php_dev/80oLdtbf/1/\" rel=\"nofollow\">This fiddle</a>  is the normal behavior. and<br>\n<a href=\"http://jsfiddle.net/zend_php_dev/80oLdtbf/2/\" rel=\"nofollow\">This fiddle</a>  is with <code>event.stopPropagation()</code> added.</p>\n\n<p>Any piece of help is very appreciated.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1425559391,
            "question_id": 25089297,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "twitter-bootstrap-3"
            ],
            "title": "Twitter Bootstrap - Avoid dropdown menu close on click inside"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I haven't tested this, but it might work if you submit the form to a hidden iframe (so that the form is actually submitted but the current page is not reloaded).</p>\n\n<pre><code>&lt;iframe name=\"my_iframe\" src=\"about:blank\"&gt;&lt;/iframe&gt;\n\n&lt;form target=\"my_iframe\" action=\"about:blank\" method=\"get\"&gt;...&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>From what i searched.. it seems you need to identify the names. Some standard names like 'name', 'email', 'phone', 'address' are automatically saved in most browser.</p>\n\n<p>Well, the problem is, browsers handle these names differenetly. For example, here is chrome's regex:</p>\n\n<ul>\n<li>first name: \"first.*name|initials|fname|first$\" </li>\n<li>email: \"e.?mail\"</li>\n<li>address (line 1): \"address.*line|address1|addr1|street\"</li>\n<li>zipcode: \"zip|postal|post.*code|pcode|^1z$\"</li>\n</ul>\n\n<p>But chrome also uses <code>x-autocompletetype</code>, so you can customize the name and put an autocomplete type, but i believe this is not for custom fields..</p>\n\n<p><a href=\"http://googlewebmastercentral.blogspot.com/2012/01/making-form-filling-faster-easier-and.html\" rel=\"nofollow\">Here is chrome's experiment</a></p>\n\n<p>And it's another thing in IE, Opera, and Mozilla. For now, you can try the iframe solution there, so you can submit it. (Maybe it's something semi-standard)</p>\n\n<p>Well, that's all i can help.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Maybe you can use this <a href=\"http://twitter.github.com/typeahead.js/\" rel=\"nofollow\">Twitter Typeahead</a>...is a very complete implementation of a autocomplete, with local and remote prefetch, and this make use of localStorage to persist results and also it show a hint in the input element...the code is easy to understand and if you don't want to use the complete jquery plugin, I think you can take a look of the code to see how to achieve what you want...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use jQuery to persist autocomplete data in the localstorage when focusout and when focusin it autocompletes to the value persisted.</p>\n\n<p>i.e.</p>\n\n<pre><code>$(function(){\n $('#txtElement').on('focusout',function(){\n   $(this).data('fldName',$(this).val());\n }\n\n $('#txtElement').on('focusin',function(){\n   $(this).val($(this).data('fldName'));\n }\n}\n</code></pre>\n\n<p>You can also bind persistence logic on other events also depending on the your application requirement.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Tested with Chrome, IE and Firefox:</p>\n\n<pre><code>&lt;iframe id=\"remember\" name=\"remember\" class=\"hidden\" src=\"/content/blank\"&gt;&lt;/iframe&gt;\n\n&lt;form target=\"remember\" method=\"post\" action=\"/content/blank\"&gt;\n  &lt;fieldset&gt;\n    &lt;label for=\"username\"&gt;Username&lt;/label&gt;\n    &lt;input type=\"text\" name=\"username\" id=\"username\" value=\"\"&gt;\n    &lt;label for=\"password\"&gt;Password&lt;/label&gt;\n    &lt;input type=\"password\" name=\"password\" id=\"password\" value=\"\"&gt;\n  &lt;/fieldset&gt;\n  &lt;button type=\"submit\" class=\"hidden\"&gt;&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>In your Javascript trigger the submit, e.g. <del><code>$(\"form\").submit();</code></del> <code>$(\"#submit_button\").click()</code> (updated from comments)</p>\n\n<p>You need to return an empty page at /content/blank for get &amp; post (about:blank didn't work for me but YMMV).</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Make sure you're submitting the form via POST. If you're submitting via ajax, do <code>&lt;form autocomplete=\"on\" method=\"post\"&gt;</code>, omitting the <code>action</code> attribute.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I am writing a very simple web app with three text inputs. The inputs are used to generate a result, but all the work is done in Javascript, so there is no need to submit a form. I'm trying to find a way to get the browser to store input values for autocomplete as it would if they were in a form that was submitted.</p>\n\n<p>I have tried giving the inputs autocomplete=\"on\" manually, but without a form to submit, the browser has no way of knowing when it should store the values, so this has no effect.</p>\n\n<p>I have also tried wrapping the inputs in a form that has onSubmit=\"return false;\", but preventing the form from actually submitting appears to also prevent the browser from storing its inputs' values.</p>\n\n<p>It is of course possible to manually use localStorage or a cookie to persist inputs and then generate autocomplete hints from those, but I'm hoping to find a solution that taps into native browser behavior instead of duplicating it by hand.</p>\n",
            "last_activity_date": 1404943776,
            "question_id": 15462991,
            "score": 16,
            "tags": [
                "javascript",
                "html",
                "forms"
            ],
            "title": "Trigger autocomplete without submitting a form"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Yes, as of <a href=\"http://phantomjs.org/release-1.7.html\">1.7</a> Phantom has complete cookie handling, enabled by default.  Cookies are retained for the duration of the process's life.</p>\n\n<p>If you'd like to retain cookies across runs of Phantom, there's a <a href=\"https://github.com/ariya/phantomjs/wiki/API-Reference\">command-line option <code>cookies-file</code></a> where you can specify where to store persistent cookies.</p>\n\n<blockquote>\n  <p><code>--cookies-file=/path/to/cookies.txt</code> specifies the file name to store the persistent cookies.</p>\n</blockquote>\n\n<p>In page script, you can use the regular <code>document.cookie</code> property.  Like in browsers, this property returns a string similar to that which would be sent in the <code>Cookie:</code> HTTP header.</p>\n\n<p>In Phantom script, you can access cookies for a page (subject to the usual origin restrictions) via <code>page.cookies</code>, which returns <strong>objects</strong>.</p>\n\n<p>You can also access <em>all</em> cookies (from all domains) using <code>phantom.cookies</code>.</p>\n\n<pre><code>var page = require('webpage').create();\npage.open('http://example.com', function (status) {\n    page.evaluate(function() {\n        document.cookie; // =&gt; \"test=test-value;\"\n    });\n    page.cookies; // =&gt; [{\n                  //   domain: \"example.com\",\n                  //   expires: \"Wed, 08 Jan 2014 00:00:00 GMT\"\n                  //   httponly: false,\n                  //   name: \"test\",\n                  //   path: \"/\",\n                  //   secure: false,\n                  //   value: \"test-value\"\n                  // }]\n    phantom.cookies; // contains ALL cookies in Phantom's jar\n});\n</code></pre>\n\n<p>To <a href=\"https://github.com/ariya/phantomjs/wiki/API-Reference#wiki-cookie\">add/edit/delete cookies</a>, use the <code>addCookie</code>, <code>deleteCookie</code>, and <code>clearCookies</code> methods of either a <code>WebPage</code> object or the <code>phantom</code> object.</p>\n\n<p>When you use the methods of a <code>WebPage</code> object, you only modify the cookies that are visible to the page.  Access to other domains is blocked.</p>\n\n<p>However, using <code>phantom</code>'s cookie methods allow access to <em>all</em> cookies.  <code>phantom.addCookie</code> requires a domain (<code>WebPage.addCookie</code> assumes the current domain if you don't specify one), and <code>phantom.deleteCookie</code> deletes <strong>any</strong> cookie matching the specified name.</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>I haven't tried it yet, but doesn't <code>--cookies-file=/path/to/cookies.txt</code> work?</p>\n\n<p>It's the first item in <a href=\"http://code.google.com/p/phantomjs/wiki/Interface\" rel=\"nofollow\">API</a> reference...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It does, through <a href=\"http://phantomjs.org/api/webpage/method/add-cookie.html\" rel=\"nofollow\">WebPage.addCookie()</a> - which incidentally <em>doesn't work</em> neither for me nor <a href=\"http://michielve.blogspot.com/2013/04/phantomjs-cookie.html\" rel=\"nofollow\">someone else</a>. </p>\n\n<p>You can use this instead:</p>\n\n<pre><code>phantom.addCookie({\n    'name': 'mycookie',\n    'value': 'something really important',\n    'domain': 'example.com'\n})\npage.open('http://example.com/url/path/', function() {\n    console.log(page.cookies);\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I had graded information within session recently. You should set cookie in page object, like below (coffeescript):</p>\n\n<pre class=\"lang-coffee prettyprint-override\"><code>@page.clearCookies()\n@page.addCookie\n  'name'     : \"JSESSIONID\"\n  'value'    : \"0000rN3YAlVAU0xdHkKc6BEzWj9:-1\"\n  'domain'   : 'some.domain.com'\n  'path'     : '/'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Does <a href=\"http://www.phantomjs.org/\">PhantomJS</a> support cookies? If yes, where can I find the API details?</p>\n\n<p>I am not able to figure it out after searching for a while now. </p>\n",
            "last_activity_date": 1408982545,
            "question_id": 9504765,
            "score": 16,
            "tags": [
                "javascript",
                "cookies",
                "phantomjs"
            ],
            "title": "Does PhantomJS support cookies?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>There is no cross browser way of doing it, for security reasons. What people usually do is overlay the input file over something else and set it's visibility to hidden so it gets triggered on it's own. <a href=\"http://www.quirksmode.org/dom/inputfile.html\" rel=\"nofollow\">More info here.</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Using jQuery you can call <a href=\"http://api.jquery.com/click/\" rel=\"nofollow\"><code>click()</code></a> to simulate a click.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I'm not sure how browsers handle clicks on <code>type=\"file\"</code> elements (security concerns and all), but this should work:</p>\n\n<pre><code>$('input[type=\"file\"]').click();\n</code></pre>\n\n<p>I've tested <a href=\"http://jsfiddle.net/ebSS2/\">this JSFiddle</a> in Chrome, Firefox and Opera and they all show the file browse dialog.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>If you're looking to have your own button to upload a file instead of using <code>&lt;input type=\"file\" /&gt;</code>, you can do something like:</p>\n\n<pre><code>&lt;input id=\"myInput\" type=\"file\" style=\"visibility:hidden\" /&gt;\n&lt;input type=\"button\" value=\"Show Dialog\" onclick=\"$('#myInput').click();\" /&gt;\n</code></pre>\n\n<p>Note that I used <code>visiblity:hidden</code>, not <code>display:none</code>. You cannot call the click event on a non-displayed file input.</p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>Most answers here are lacking a useful information:</p>\n\n<p><strong>Yes, you can programmatically click the input element(with type=file) using jquery, javascript but only if you do it in an event handler belonging to an event THAT WAS STARTED BY THE USER!</strong></p>\n\n<p>So, for example if you(the script) programmatically click the button in an ajax callback nothing will happen, but if you put the same line of code in an event handler that was raised by the user, it will work.</p>\n\n<p>P.S. javascripts debugger;(if it is before the programmatical click) keyword also disrupts the browse window somehow...at least in chrome 33...</p>\n",
                    "is_accepted": false,
                    "score": 14
                }
            ],
            "body": "<p>I have a hidden file input element. Is it possible to trigger its <em>select file</em> dialog box from a button's click event?</p>\n",
            "last_activity_date": 1391620307,
            "question_id": 8595389,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "Programmatically trigger &quot;select file&quot; dialog box"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Returning false from the function, will abort the effect of the checking. Because the native of functions that written hardcoded into html properties (it became some new local function), writing the html without the word \"return\" will just run the function, and lose its returning value, as if you've wrote:</p>\n\n<pre><code>function doAlert() {\n   if(some_condition)\n     return false;\n   else\n     return true;\n}\nfunction some_local_function() {\n   doAlert();\n}\n</code></pre>\n\n<p>Function <code>some_local_function</code> won't return any value, although <code>doAlert</code> returns.</p>\n\n<p>When you write \"return\", it's like you wrote the second function like this:</p>\n\n<pre><code>function some_local_function() {\n   return doAlert();\n}\n</code></pre>\n\n<p>which preserves the returning value of doAlert, whatever it will be. If it's true - the action will perform (the checkbox will be checked) - otherwise - it will cancel.</p>\n\n<p>You can see live expamle here: <a href=\"http://jsfiddle.net/RaBfM/1/\" rel=\"nofollow\">http://jsfiddle.net/RaBfM/1/</a></p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Some html elements have JS events that behave differently when true/false is returned.  For instance: </p>\n\n<pre><code>&lt;input type='submit' value='Click Me' onSubmit='ValidateForm();'&gt;\n</code></pre>\n\n<p>...vs...</p>\n\n<pre><code>&lt;input type='submit' value='Click Me' onSubmit='return ValidateForm();'&gt;\n</code></pre>\n\n<p>In the second instance, if the <code>ValidateForm</code> function returned false the form will not submit, in the first even if the function returns false the form will still submit.  </p>\n\n<p>I think this scenario, you can see the different between using the <code>return</code> keyword and not.</p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I am really new to javascript, and stumbled upon the return function. Basically, what is the difference in terms of these 2 statements?</p>\n\n<pre><code>&lt;input type=\"checkbox\" onclick=\"doAlert()\" /&gt;\n</code></pre>\n\n<p>vs </p>\n\n<pre><code>&lt;input type=\"checkbox\" onclick=\"return doAlert();\" /&gt;\n</code></pre>\n\n<p>Essentially both returned the same results and called the function, but is there more to it? Any help greatly appreciated :). Thanks!</p>\n",
            "last_activity_date": 1397634338,
            "question_id": 7814949,
            "score": 16,
            "tags": [
                "javascript",
                "html",
                "onclick",
                "return"
            ],
            "title": "Javascript onclick return functionality"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You can replace this div with text input (after onclick event is called).<br/>\nI have used something similar to <a href=\"http://www.appelsiini.net/projects/jeditable\" rel=\"nofollow\">this plugin</a> and it worked fine.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think you are looking for a <code>contenteditable</code> <code>div</code> with only one line of text that scrolls horizontally when it overflows the <code>div</code>. This should do the trick: <a href=\"http://jsfiddle.net/F6C9T/1\" rel=\"nofollow\">http://jsfiddle.net/F6C9T/1</a></p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;div contenteditable&gt;\n    Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas.\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>CSS:</strong></p>\n\n<pre><code>div{\n    font-family: Arial;\n    font-size: 18px;\n    min-height: 40px;\n    width:300px;\n    border:1px solid red;\n    overflow:auto;\n    white-space: nowrap;\n}\n</code></pre>\n\n<p>The <code>min-height:40px</code> incorporates the height for when the horizontal scroll bar appears. A <code>min-height:20px</code> would automatically expand when the horizontal scroll bar appears, but this doesn't work in IE7 (though you could use conditional comments to apply separate styling if you wanted it).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>So, for posterity: the simplest solution is to get your product manager to change the requirements so you can do multiline editing. This is what ended up happening in our case.</p>\n\n<p>However, before that happened, I ended up going quite a way in creating a manually moving single-line richtext editor. I wrapped it up in a jQuery plugin in the end. I don't have time to finish it up (there are probably bugs in IE, Firefox works best and Chrome works pretty well - comments are sparse and sometimes not very clear). It uses parts of the <a href=\"http://code.google.com/p/rangy/\" rel=\"nofollow\">Rangy library</a> (extracted because I didn't want to rely on the complete library) to get screen positions of selections in order to test for mouse position vs. selection (so you can drag selections and move the box).</p>\n\n<p>Roughly, it works by using 3 elements. An outer div (the thing you call the plugin on), which gets overflow: hidden, and then 2 levels of nesting inside it. The first level is absolutely positioned, the second level is the actual contenteditable. This separation is necessary because otherwise some browsers will give the contenteditable absolutely positioned element grippies, to let the user move it around...</p>\n\n<p>In any case, then there is a whole bunch of code to move the absolutely positioned element around inside the top element, thus moving the actual contenteditable. The contenteditable itself has white-space nowrap, etc. etc. to force it to stay a single line.</p>\n\n<p>There is also code in the plugin that strips out anything that isn't an image (like <code>br</code>, tables, etc. etc.) from any text that's pasted / dragged into the box. You need some parts of this (like the brs, stripping/normalizing paragraphs, etc.) but maybe you would normally want to keep links, <code>em</code>, <code>strong</code> and/or some other formatting.</p>\n\n<p>Source: <a href=\"https://gist.github.com/1161922\" rel=\"nofollow\">https://gist.github.com/1161922</a></p>\n",
                    "is_accepted": true,
                    "score": 1
                },
                {
                    "body": "<p>with jQuery I have set a .keypress event and then tests for e.keyCode == 13 (return key) and if is return false from the event and the editing is not able to make multilines</p>\n\n<pre><code>$('*[contenteditable=yes]').keypress(function(e) {\n  if(e.keyCode == 13 &amp;&amp; !$(this).data('multiline')) {\n    return false;\n  }\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Check out this answer I just posted. This should help you out:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/11222213/how-to-create-a-html5-single-line-contenteditable-tab-which-listens-to-enter-and\">How to create a HTML5 single line contentEditable tab which listens to Enter and Esc</a></p>\n\n<p>Here is the HTML markup:</p>\n\n<pre><code>&lt;span contenteditable=\"false\"&gt;&lt;/span&gt;\n</code></pre>\n\n<p>Here is the jQuery/javascript:</p>\n\n<pre><code>$(document).ready(function() {\n    $('[contenteditable]').dblclick(function() {\n        $(this).attr('contenteditable', 'true');\n        clearSelection();\n        $(this).trigger('focus');\n    });\n\n    $('[contenteditable]').live('focus', function() {\n        before = $(this).text();\n        if($(this).attr('contenteditable') == \"true\") { $(this).css('border', '1px solid #ffd646'); }\n    //}).live('paste', function() {\n    }).live('blur', function() {\n        $(this).attr('contenteditable', 'false');\n        $(this).css('border', '1px solid #fafafa');\n        $(this).text($(this).text().replace(/(\\r\\n|\\n|\\r)/gm,\"\"));\n\n        if (before != $(this).text()) { $(this).trigger('change'); }\n    }).live('keyup', function(event) {\n        // ESC=27, Enter=13\n        if (event.which == 27) {\n            $(this).text(before);\n            $(this).trigger('blur');\n        } else if (event.which == 13) {\n            $(this).trigger('blur');\n        }\n    });\n\n    $('[contenteditable]').live('change', function() {\n        var $thisText = $(this).text();\n        //Do something with the new value.\n    });\n});\n\nfunction clearSelection() {\n    if ( document.selection ) {\n        document.selection.empty();\n    } else if ( window.getSelection ) {\n        window.getSelection().removeAllRanges();\n    }\n}\n</code></pre>\n\n<p>Hope this helps someone!!!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here's a relatively simple solution that uses the contenteditable's input event to scan the dom and filter out various flavors of new lines (so it should be robust against copy/paste, drag 'n drop, hitting enter on the keyboard, etc). It condenses multiple TextNodes into single TextNodes, strips newlines from TextNodes, kills BRs, and puts a \"display: inline\" on any other element that it touches. Tested on Chrome, no guarantees anywhere else.</p>\n\n<p><a href=\"http://jsfiddle.net/tG9Qa/\" rel=\"nofollow\">http://jsfiddle.net/tG9Qa/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>&lt;style&gt;\n    [contenteditable=\"true\"].single-line {\n        white-space: nowrap;\n        width:200px;\n        overflow: hidden;\n    } \n    [contenteditable=\"true\"].single-line br {\n        display:none;\n\n    }\n    [contenteditable=\"true\"].single-line * {\n        display:inline;\n        white-space:nowrap;\n    }\n&lt;/style&gt;\n\n&lt;div contenteditable=\"true\" class=\"single-line\"&gt;\n    This should works\n&lt;/div&gt;\u200b\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 36
                }
            ],
            "body": "<p>For an application we're developing at the company where I work, we need an input that supports inserting emoticons inside our JS-based web app. We're currently using an input with the emoticon shortcodes (ie ':-)') and would like to switch to inserting actual, graphical images.</p>\n\n<p>Our original plan was to use a <code>contenteditable</code> <code>&lt;div&gt;</code>. We're using listeners for the paste event as well as the different key/mouse interactions to ensure no unwanted markup enters the contenteditable (we strip text out of its container tags and leave only image tags that we inserted ourselves).</p>\n\n<p>However, the problem right now is that the div resizes if you put in enough content (ie its height increases). We don't want this to happen, nor is it acceptable for the text to just be hidden (ie plain <code>overflow: hidden</code>). So:</p>\n\n<p><strong>Is there a way to make the contenteditable div behave like a single-line input?</strong></p>\n\n<p>I'd like it best if there is a relatively simple attribute/css property that I've missed that will do what I want, but if necessary CSS+JS suggestions will also be appreciated.</p>\n",
            "last_activity_date": 1353405406,
            "question_id": 6831482,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "contenteditable"
            ],
            "title": "contenteditable single-line input"
        }
    ]
}
