{
    "items": [
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can use CSS:</p>\n\n<pre><code>p.capitalize {text-transform:capitalize;}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 49
                },
                {
                    "body": "<p>There's a good answer <a href=\"http://stackoverflow.com/questions/196972/convert-string-to-proper-case-with-javascript/196991#196991\">here</a>:</p>\n\n<pre><code>function toTitleCase(str)\n{\n    return str.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 144
                },
                {
                    "body": "<p>The JavaScript function:</p>\n\n<pre><code>String.prototype.capitalize = function(){\n       return this.replace( /(^|\\s)([a-z])/g , function(m,p1,p2){ return p1+p2.toUpperCase(); } );\n      };\n</code></pre>\n\n<p>To use this function:</p>\n\n<pre><code>capitalizedString = someString.toLowerCase().capitalize();\n</code></pre>\n\n<p>Also, this would work on multiple words string.  </p>\n\n<p>To make sure the converted City name is injected into the database, lowercased and first letter capitalized, then you would need to use JavaScript before you send it over to server side.  CSS simply styles, but the actual data would remain pre-styled.  Take a look at this <a href=\"http://jsfiddle.net/BgxMJ/1\" rel=\"nofollow\">jsfiddle</a> example and compare the alert message vs the styled output.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>function convert_case(str) {\n  var lower = str.toLowerCase();\n  return lower.replace(/(^| )(\\w)/g, function(x) {\n    return x.toUpperCase();\n  });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/196972/convert-string-to-title-case-with-javascript\">Convert string to title case with javascript</a>  </p>\n</blockquote>\n\n\n\n<p>My JS woks well when the city has one word:</p>\n\n<ul>\n<li>cHIcaGO ==> Chicago</li>\n</ul>\n\n<p>But when it's</p>\n\n<ul>\n<li>san diego ==> San diego</li>\n</ul>\n\n<p>How do I make it become San Diego?</p>\n\n<pre><code>function convert_case() {\ndocument.profile_form.city.value =\ndocument.profile_form.city.value.substr(0,1).toUpperCase() + \ndocument.profile_form.city.value.substr(1).toLowerCase();\n}\n</code></pre>\n",
            "last_activity_date": 1411513251,
            "question_id": 4878756,
            "score": 54,
            "tags": [
                "javascript",
                "uppercase",
                "lowercase"
            ],
            "title": "Javascript - How to capitalize first letter of each word, like a 2-word city?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>yes, it's really just a matter of showing/hiding an animated gif.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I did it in my project ,</p>\n\n<p>make a div with back ground url as gif , which is nothing but animation gif</p>\n\n<pre><code>&lt;div class=\"busyindicatorClass\"&gt; &lt;/div&gt;\n\n.busyindicatorClass\n{\nbackground-url///give animation here\n}\n</code></pre>\n\n<p>in your ajax call , add this class to the div and in ajax success remove the class.</p>\n\n<p>it will do the trick thatsit.</p>\n\n<p>let me know if you need antthing else , i can give you more details</p>\n\n<p>in the ajax success remove the class</p>\n\n<pre><code>success: function(data) {\n    remove class using jquery\n  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can just show / hide a gif, but you can also embed that to ajaxSetup, so it's called on every ajax request.</p>\n\n<pre><code>$.ajaxSetup({\n    beforeSend:function(){\n        // show gif here, eg:\n        $(\"#loading\").show();\n    },\n    complete:function(){\n        // hide gif here, eg:\n        $(\"#loading\").hide();\n    }\n});\n</code></pre>\n\n<p>One note is that if you want to do an specific ajax request without having the loading spinner, you can do it like this:</p>\n\n<pre><code>$.ajax({\n   global: false,\n   // stuff\n});\n</code></pre>\n\n<p>That way the previous $.ajaxSetup we did will not affect the request with <code>global: false</code>.</p>\n\n<p>More details available at: <a href=\"http://api.jquery.com/jQuery.ajaxSetup\">http://api.jquery.com/jQuery.ajaxSetup</a></p>\n",
                    "is_accepted": true,
                    "score": 54
                },
                {
                    "body": "<p>You can use:</p>\n\n<ul>\n<li><a href=\"http://kammerer.boo.pl/code/jquery-busy/\">jQuery-busy</a></li>\n<li><a href=\"http://plugins.jquery.com/project/Spinner\">Spinner</a> from jQueryin (<a href=\"http://www.jqueryin.com/projects/spinner-jquery-preloader-plugin/#demos\">demos</a>)</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I tend to just show/hide a IMG as other have stated. I found a good website which generates \"loading gifs\"</p>\n\n<p><a href=\"http://www.ajaxload.info/\" rel=\"nofollow\">Link</a>\nI just put it inside a <code>div</code> and hide by default <code>display: none;</code> (css) then when you call the function show the image, once its complete hide it again.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The jQuery documentation recommends doing something like the following:</p>\n\n<pre><code>$(\"#loading\").ajaxStart(function(){\n  $(this).show();\n}).ajaxStop(function(){\n  $(this).hide();\n});\n</code></pre>\n\n<p>Where <code>#loading</code> is the element with your busy indicator in it.</p>\n\n<p>References:</p>\n\n<ul>\n<li><a href=\"http://api.jquery.com/ajaxStart/\">http://api.jquery.com/ajaxStart/</a></li>\n<li><a href=\"http://api.jquery.com/ajaxStop/\">http://api.jquery.com/ajaxStop/</a></li>\n</ul>\n\n<p><strong>EDIT</strong> (2013-01-21): From the jQuery API documentation</p>\n\n<p><em>As of jQuery 1.8, however, the <code>.ajaxStop()</code> method should only be\nattached to <code>document</code></em></p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I did it in my project:</p>\n\n<p>Global Events\nin application.js:</p>\n\n<pre><code>$(document).bind(\"ajaxSend\", function(){\n   $(\"#loading\").show();\n }).bind(\"ajaxComplete\", function(){\n   $(\"#loading\").hide();\n });\n</code></pre>\n\n<p>\"loading\" is the element to show and hide!</p>\n\n<p>References:\n<a href=\"http://api.jquery.com/Ajax_Events/\" rel=\"nofollow\">http://api.jquery.com/Ajax_Events/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had to use</p>\n\n<pre><code>HTML:\n   &lt;img id=\"loading\" src=\"~/Images/spinner.gif\" alt=\"Updating ...\" style=\"display: none;\" /&gt;\n\nIn script file:\n  // invoked when sending ajax request\n  $(document).ajaxSend(function () {\n      $(\"#loading\").show();\n  });\n\n  // invoked when sending ajax completed\n  $(document).ajaxComplete(function () {\n      $(\"#loading\").hide();\n  });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How do I display a spinning \"busy\" indicator at a specific point in a web page?</p>\n\n<p>I want to start/stop the indicator when an Ajax request commences/completes.</p>\n\n<p>Is it really just a matter of showing/hiding an animated gif, or is there a more elegant solution?</p>\n",
            "last_activity_date": 1412732081,
            "question_id": 4355268,
            "score": 39,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to display a &quot;busy&quot; indicator with jQuery?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Yes they are different.</p>\n\n<p><code>return false</code> is basically the same as calling both, <a href=\"http://api.jquery.com/event.stopPropagation/\"><strong><code>event.stopPropagation()</code></strong></a> and <a href=\"http://api.jquery.com/event.preventDefault/\"><strong><code>event.preventDefault()</code></strong></a>.</p>\n\n<p>Whereas <a href=\"http://api.jquery.com/event.stopImmediatePropagation/\"><strong><code>event.stopImmediatePropagation()</code></strong></a> is the same as <code>event.stopPropagation()</code> <em>plus</em> preventing other registered event handlers on the same element to be executed. So it does not prevent the default action for an event, such as following a clicked link.</p>\n\n<p>In short:</p>\n\n<pre><code>                            stop   |    prevent     | prevent \"same element\"\n                          bubbling | default action | event handlers\n\nreturn false                 Yes           Yes             No\npreventDefault               No            Yes             No\nstopPropagation              Yes           No              No\nstopImmediatePropagation     Yes           No              Yes\n</code></pre>\n\n<p><del><code>return false</code> also works in \"normal\" JavaScript event handlers</del></p>\n\n<p><code>event.stopPropagation()</code> and <code>event.preventDefault()</code> also work in \"normal\" JavaScript event handlers (in a W3C compatible browser),  whereas <code>event.stopImmediatePropagation()</code> is an extension from jQuery (<strong>update:</strong> apparently it is part of the <a href=\"http://www.w3.org/TR/DOM-Level-3-Events/#widl-Event-stopImmediatePropagation\">DOM Level 3 Events specification</a>).</p>\n\n<p><strong>Note:</strong> <code>return false</code> <strong>does not</strong> prevent the event from bubbling up in <strong>\"normal\"</strong> (non-jQuery) event handlers (see <a href=\"http://stackoverflow.com/questions/1357118/javascript-event-preventdefault-vs-return-false/1357151#1357151\">this answer</a>)(but still prevents the default action).</p>\n\n<hr>\n\n<p>Maybe worth reading: </p>\n\n<ul>\n<li><a href=\"http://fuelyourcoding.com/jquery-events-stop-misusing-return-false/\"><em>jQuery Events: Stop (Mis)Using Return False</em></a></li>\n<li><a href=\"http://www.quirksmode.org/js/events_order.html\"><em>quirksmode.org - Event order</em></a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 83
                },
                {
                    "body": "<p>Yes. event.stopImmediatePropagation() won't let any other handlers for that event be called, regardless of where they are bound. Return false only stops handlers bound to other elements (ie not the same element as the event handler dealing with the stopImmediatePropagation() call) from receiving the event.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Returning <code>false</code> will stop event bubbling, but other bound events will fire.  However <code>stopImmediatePropagation</code> prevents other bound events from firing and stops bubbling.</p>\n\n<p><strong>Code Example of this on <a href=\"http://jsfiddle.net/markcoleman/PcUfP/\" rel=\"nofollow\">jsfiddle</a>.</strong></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>@FelixKling answer's table having great concept:</p>\n\n<p>I am posting more explained table:</p>\n\n<pre><code>                            stop   |    prevent     |       prevent          |\n                          bubbling | default action |    event handlers      |\n                                                     Same Element  |  Parent Element\n\nreturn false                 Yes           Yes             No           No\npreventDefault               No            Yes             No           No\nstopPropagation              Yes           No              No           Yes\nstopImmediatePropagation     Yes           No              Yes          No\n</code></pre>\n\n<blockquote>\n  <p>Reference: <a href=\"http://stackoverflow.com/a/5302939/2236219\">http://stackoverflow.com/a/5302939/2236219</a></p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there any difference between calling <code>event.stopImmediatePropagation()</code> and <code>return false</code> inside an event handler ?</p>\n",
            "last_activity_date": 1420608717,
            "question_id": 5302903,
            "score": 37,
            "tags": [
                "javascript",
                "jquery",
                "events"
            ],
            "title": "jquery: event.stopImmediatePropagation() vs return false"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>In grunt 0.4 you can specify multiple dest/src pairs like this:</p>\n\n<pre><code>uglify: {\n    dist: {\n        files: {\n            'dist/main.js': 'src/main.js',\n            'dist/widget.js': 'src/widget.js'\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>You also can use copy and <a href=\"https://github.com/buunguyen/grunt-mindirect\" rel=\"nofollow\">grunt-mindirect</a>.</p>\n\n<pre><code>copy: {\n  dist: {\n    src: 'a.js',\n    dest: 'a.min.js'\n  }\n},\nminidirect: {\n  all: 'js/min/*.min.js'\n}\n</code></pre>\n\n<p>This should work.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>From the grunt docs for min:</p>\n\n<blockquote>\n  <p>This task is a multi task, meaning that grunt will automatically\n  iterate over all min targets if a target is not specified.</p>\n</blockquote>\n\n<p>So you can do this:</p>\n\n<pre><code>  min: {\n    min_a: {\n       src:  'a.js',\n       dest: 'a.min.js'\n    },\n    min_b: {\n       src:  'b.js',\n       dest: 'b.min.js'\n    },\n    min_c: {\n       src:  'c.js',\n       dest: 'c.min.js'\n }\n</code></pre>\n\n<p>There's nothing special about the name 'dist' for these tasks.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I guess it only matters for watch tasks.</p>\n\n<p>In grunt 0.4 you can do this</p>\n\n<pre><code>  var filesA = 'a.js', filesB = 'b.js', filesC = 'c.js';\n\n  ...\n\n  min: {\n      min_a: {\n         src:  filesA,\n         dest: 'a.min.js'\n      },\n      min_b: {\n         src:  filesB,\n         dest: 'b.min.js'\n      },\n      min_c: {\n         src:  filesC,\n         dest: 'c.min.js'\n  }\n\n  watch: {\n      min_a: {\n         files:  filesA,\n         tasks: ['min:min_a']\n      },\n      min_b: {\n         files:  filesB,\n         tasks: ['min:min_b']\n      },\n      min_c: {\n         files:  filesC,\n         tasks: ['min:min_c']\n      }\n  }\n</code></pre>\n\n<p>After that just start <code>grunt watch</code> and all will be fine automagically.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Had the same problem and found a solution that would automatically minify all my scripts separately:</p>\n\n<pre><code>uglify: {\n      build: {\n        files: [{\n            expand: true,\n            src: '**/*.js',\n            dest: 'build/scripts',\n            cwd: 'app/scripts'\n        }]\n      }\n    }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>Or you can use expandMapping, like this:</p>\n\n<pre><code>min: {\n    files: grunt.file.expandMapping(['path/*.js', 'path2/*.js'], 'destination/', {\n        rename: function(destBase, destPath) {\n            return destBase+destPath.replace('.js', '.min.js');\n        }\n    })\n}\n</code></pre>\n\n<p>And the output:</p>\n\n<p>path/test.js => destination/path/test.min.js <br />\npath2/foo.js => destination/path2/foo.min.js</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>This below gruntjs works for me for creating minified files for all the js files under a dir</p>\n\n<pre><code>module.exports = function(grunt) {\n\n  // Project configuration.\n  grunt.initConfig({\n    pkg: grunt.file.readJSON('package.json'),\n    uglify: {\n    build: {\n        files: [{\n            expand: true,\n            src: '**/*.js',\n            dest: 'build/scripts',\n            cwd: 'public_html/app',\n        ext: '.min.js'\n        }]\n      }\n    }\n  });\n\n  // Load the plugin that provides the \"uglify\" task.\n  grunt.loadNpmTasks('grunt-contrib-uglify');\n\n  // Default task(s).\n  grunt.registerTask('default', ['uglify']);\n\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I like to keep the original files and also create uglified ones:</p>\n\n<pre><code>uglify: {\n  dist: {\n    files: [{\n      expand: true,\n      src: '**/*.js',\n      dest: 'destdir',\n      cwd: 'srcdir',\n      rename: function(dest, src) { return dest + '/' + src.replace('.js', '.min.js'); }\n    }]\n  }\n},\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use the <code>ext</code> option to name the files <code>.min.js</code> instead of <code>.js</code></p>\n\n<pre><code>uglify: {\n      build: {\n        files: [{\n            expand: true,\n            src: '**/*.js',\n            dest: 'build/scripts',\n            cwd: 'app/scripts',\n            ext: '.min.js'\n        }]\n      }\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For explicitly export some files into separate output files (in this case <strong>all.min.js</strong> and <strong>all.jquery.js</strong>) use:</p>\n\n<pre><code>uglify: {\n  js: {\n    files : {\n        'js/all.min.js' : [\n          'js/modernizr.js',\n          'js/vendor/modernizr-2.6.2-respond-1.1.0.min.js',\n          'js/bootstrap.min.js',\n          'js/main.js',\n          'js/ZeroClipboard.min.js',\n          'js/bootstrap-datepicker/bootstrap-datepicker.js'\n        ],\n\n        'js/all.jquery.js' : [\n          'js/vendor/jquery-1.9.1.js',\n          'js/vendor/jquery-migrate-1.2.1.js',\n          'js/vendor/jquery-ui.js'\n        ]\n\n    }\n  },\n  options: {\n    banner: '\\n/*! &lt;%= pkg.name %&gt; &lt;%= grunt.template.today(\"dd-mm-yyyy\") %&gt; */\\n',\n    preserveComments: 'some',\n    report: 'min'\n  }\n},\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>there are some js files in static/js/</p>\n\n<pre><code>    1. a.js\n    2. b.js\n    3. c.js   \n</code></pre>\n\n<p>how to config grunt.js to get below files:</p>\n\n<pre><code>    1. a.min.js\n    2. b.min.js\n    3. c.min.js\n</code></pre>\n\n<p>as far, I have to type specific file name:</p>\n\n<pre><code>  min: {\n    dist: {\n    src:  'js/**/*.js',\n    dest: 'js/min/xxx.min.js'\n   }\n }\n</code></pre>\n",
            "last_activity_date": 1418814462,
            "question_id": 13358680,
            "score": 32,
            "tags": [
                "javascript",
                "compression",
                "gruntjs"
            ],
            "title": "how to config grunt.js to minify files separately"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Here are my tips</p>\n\n<p>1) Use clearRect to clear the canvas instead of canvas.width=canvas.width, because later resets the canvas states</p>\n\n<p>2) If you are using mouse events on the canvas use following function, its is reliable and works in most of the cases.</p>\n\n<pre><code>/**  returns the xy point where the mouse event was occured. \n @param ev The event object.\n*/\nfunction getXY(ev){\n   return getMousePosition(ev, ev.srcElement || ev.originalTarget);\n}\n\n /**  returns the top-left point of the element\n       @param elem The element\n   */\nfunction getElementPos(elem){\n   var obj = elem;\n   var top = 0;\n   var left = 0;\n    while (obj &amp;&amp; obj.tagName != \"BODY\") {\n      top += obj.offsetTop-obj.scrollTop;\n      left += obj.offsetLeft -obj.scrollLeft ;\n      obj = obj.offsetParent;\n     }\n  return {\n    top: top,\n    left: left\n    };\n};\n\n/**  returns the xy point where the mouse event was occured inside an element. \n@param ev The event object.\n @param elem The element\n*/\nfunction getMousePosition(evt, elem){\nvar pageX, pageY;\nif(typeof(window.pageYOffset)=='number') {\n    pageX=window.pageXOffset;\n    pageY=window.pageYOffset;\n}else{\n    pageX=document.documentElement.scrollLeft;\n    pageY=document.documentElement.scrollTop;\n}\nvar mouseX = evt.clientX - getElementPos(elem).left + pageX;\nvar mouseY = evt.clientY - getElementPos(elem).top + pageY;\nreturn {\n    x: mouseX,\n    y: mouseY\n};\n};\n</code></pre>\n\n<p>3) Use ExplorerCanvas if you want to support IE7</p>\n\n<p>4) Instead of clearing the whole canvas clear only the part which is needed to be cleaned. Its good for performance.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<h1>Redraw Regions</h1>\n\n<p>The best canvas optimization technique for animations is to limit the amount of pixels that get cleared/painted on each frame. The easiest solution to implement is resetting the entire canvas element and drawing everything over again but that is an expensive operation for your browser to process.</p>\n\n<p>Reuse as many pixels as possible between frames. What that means is the fewer pixels that need to be processed each frame, the faster your program will run. For example, when erasing pixels with the clearRect(x, y, w, h) method, it is very beneficial to clear and redraw only the pixels that have changed and not the full canvas.</p>\n\n<h1>Procedural Sprites</h1>\n\n<p>Generating graphics procedurally is often the way to go, but sometimes that's not the most efficient one. If you're drawing simple shapes with solid fills then drawing them procedurally is the best way do so. But if you're drawing more detailed entities with strokes, gradient fills and other performance sensitive make-up you'd be better off using image sprites.</p>\n\n<p>It is possible to get away with a mix of both. Draw graphical entities procedurally on the canvas once as your application starts up. After that you can reuse the same sprites by painting copies of them instead of generating the same drop-shadow, gradient and strokes repeatedly.</p>\n\n<h1>State Stack &amp; Transformation</h1>\n\n<p>The canvas can be manipulated via transformations such as rotation and scaling, resulting in a change to the canvas coordinate system. This is where it's important to know about the state stack for which two methods are available: context.save() (pushes the current state to the stack) and context.restore() (reverts to the previous state). This enables you to apply transformation to a drawing and then restore back to the previous state to make sure the next shape is not affected by any earlier transformation. The states also include properties such as the fill and stroke colors.</p>\n\n<h1>Compositing</h1>\n\n<p>A very powerful tool at hand when working with canvas is compositing modes which, amongst other things, allow for masking and layering. There's a wide array of available composite modes and they are all set through the canvas context's globalCompositeOperation property. The composite modes are also part of the state stack properties, so you can apply a composite operation, stack the state and apply a different one, and restore back to the state before where you made the first one. This can be especially useful.</p>\n\n<h1>Anti-Aliasing</h1>\n\n<p>To allow for sub-pixel drawings, all browser implementations of canvas employ anti-aliasing (although this does not seem to be a requirement in the HTML5 spec). Anti-aliasing can be important to keep in mind if you want to draw crisp lines and notice the result looks blurred. This occurs because the browser will interpolate the image as though it was actually between those pixels. It results in a much smoother animation (you can genuinely move at half a pixel per update) but it'll make your images appear fuzzy.</p>\n\n<p>To work around this you will need to either round to whole integer values or offset by half a pixel depending on if you're drawing fills or strokes.</p>\n\n<h2>Using Whole Numbers for drawImage() x and y positions</h2>\n\n<p>If you call drawImage on the Canvas element, it's much faster if you round the x and y position to a whole number. </p>\n\n<p><a href=\"http://jsperf.com/drawimage-whole-pixels\">Here's a test case on jsperf</a> showing how much faster using whole numbers is compared to using decimals.</p>\n\n<p>So round your x and y position to whole numbers before rendering. </p>\n\n<h3>Faster than Math.round()</h3>\n\n<p><a href=\"http://jsperf.com/math-round-vs-hack/3\">Another jsperf test shows</a> that Math.round() is not necessarily the fastest method for rounding numbers. Using a bitwise hack actually turns out to be faster than the built in method.</p>\n\n<p><a href=\"http://sebleedelisle.com/2011/02/html5-canvas-sprite-optimisation/\">Canvas Sprite Optimization</a></p>\n\n<h1>Clearing the Canvas</h1>\n\n<p>To clear the entire canvas of any existing pixels context.clearRect(x, y, w, h) is typically used \u2013 but there is another option available. Whenever the width/height of the canvas are set, even if they are set to the same value repeatedly, the canvas is reset. This is good to know when working with a dynamically sized canvas as you will notice drawings disappearing.</p>\n\n<h1>Computation Distribution</h1>\n\n<p>The Chrome Developer Tools profiler is very useful for finding out what your performance bottlenecks are. Depending on your application you may need to refactor some parts of your program to improve the performance and how browsers handle specific parts of your code.</p>\n\n<p><a href=\"http://hakim.se/thoughts/canvas-optimization\">Optimization techniques</a></p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>After having worked on a <a href=\"http://apps.facebook.com/samsunggenomeproject/\" rel=\"nofollow\">recently launched Facebook app that uses Canvas</a> and users Facebook profile information (the amount of data it must accommodate is massive for some) to match you and friends of yours also using the app, to Olympic athletes like a 6 degrees of separation type of thing, there's quite a lot I have learned in my extensive efforts to do everything I could possibly try for increasing performance within the app.</p>\n\n<p>I literally spent months, and days at a time just working to re-factor the code which I knew already so well, and believed it to be the most optimal way to do things.</p>\n\n<h2>Use DOM Elements Whenever Possible</h2>\n\n<p>The fact is, browsers are still just not ready to handle more intensive running applications in Canvas, especially if you're required to develop the app with support for IE 8. There are sometimes cases where the DOM is faster than the current implementation of the Canvas API at the time of writing this. <em>At least I've found it to be while working on a massively complex single page animating html5 and canvas application for Samsung.</em></p>\n\n<p>We were able to do quite well at improving the performance of things while still using Canvas to do some complex work to crop images into circles, which would've probably been ok to stick with how we were doing it.</p>\n\n<p>Days before the launch, we decided to try a different technique, and rather than create temporary canvases off-screen which were placed on the visible canvas once cropped into circles etc.., we just appended Image DOM elements on the Canvas, using the x and y coordinates that we had been using for placing the temp canvases before. </p>\n\n<p>For cropping the images into circles, well that was simple, we just used the CSS3 border-radius property to do it which was far less work than the complex series of state changes and while ingenious and creative yet over-use of the .clip() method. </p>\n\n<p>Once they are placed in the DOM, the animation of images the occurs, and the DOM nodes for each image are animated as separate entities of the Canvas. Ones that we can have full control over the styling off easily through CSS.</p>\n\n<p>This technique is similar to another method for doing this type of work that is quite good to know as well, which involves layering Canvases on top of each other, rather than draw them to one context.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's some more tips and suggestions I put into a list last night worth sharing.</p>\n\n<ul>\n<li><p><strong>Don't include jQuery unless you need to do more than just selecting the <code>&lt;canvas&gt;</code>.</strong></p>\n\n<p>I've managed to get by without it for almost everything I've made in canvas</p></li>\n<li><p><strong><a href=\"http://en.wikipedia.org/wiki/Abstraction_%28computer_science%29\" rel=\"nofollow\">Create abstracted functions</a></strong> and <strong>decouple your code</strong>. Separate functionality from appearance or initial draw state. </p>\n\n<p>Make common functions reusable as much as possible. Ideally, you should use a module pattern, which you can create a utils object that contains common functions.</p></li>\n<li><p><strong>Use single and double letter variable names when it makes sense</strong> (<em>x, y, z</em>).</p>\n\n<p>The coordinate system in Canvas adds more single letters that are\ncommonly declared as variables. Which can lead to creating multiple\nsingle/double variables (<em>dX, dY, aX, aY, vX, vY</em>) as part of an element.</p>\n\n<p>I suggest you type out or abbr. the word (<em>dirX, accelX, velX</em>) or be descriptive, otherwise things could get pretty confusing for you later on, trust me.</p></li>\n<li><p>Create constructor functions which can be invoked as needed for making game elements. You can add custom methods and properties within the constructor, and create any number of you may need and they all will have their own properties and methods.</p>\n\n<p><strong>Example of a Ball constructor function I made:</strong></p>\n\n<pre><code>// Ball constructor\nvar Ball = function(x, y) {\n    this.x = x;\n    this.y = y;\n\n    this.radius = 10;\n    this.color = '#fff';\n\n    // Direction and min, max x,y\n    this.dX = 15;\n    this.dY = -15;\n\n    this.minX = this.minY = 20 + this.radius;\n    this.maxX = this.radius - (canvasWidth - 20);\n    this.maxY = this.radius + canvasHeight;\n\n    this.draw = function(ctx) {\n        ctx.beginPath();\n            ctx.arc(this.x, this.y, this.radius, 0, twoPI, true);\n        ctx.closePath();\n        ctx.save();\n            ctx.fillStyle = this.color;\n            ctx.fill();\n        ctx.restore();\n    };\n};\n</code></pre></li>\n</ul>\n\n<p>Creating the Ball</p>\n\n<pre><code>ball = new Ball(centerX, canvasHeight - paddle.height - 30);\nball.draw(ctx);\n</code></pre>\n\n<ul>\n<li><p>A good base to work with is to create 3 functions:\n    init() - do all the initial work, and setup the base vars and event handlers etc...\n    draw() - called once to begin the game and draws the first frame of the game, including the creation of elements that may be changing or need constructing.\n    update() - called at the end of draw() and within itself via requestAnimFrame. Updates properties of changing elements, only do what you need to do here.</p></li>\n<li><p><strong>Do the least amount of work within the loop, making updates to the changing parts or elements</strong>. Create the game elements do any other UI work outside the animation loop. </p>\n\n<p>The animation loop is often a recursive function, meaning it calls itself rapidly and repeatedly during the animation to draw each frame.</p>\n\n<p>If there are many elements being animated at once, you might want to first create the elements using a constructor function if your not already, and then within the constructor make a 'timer' method that has requestAnimFrame/setTimeout using it just how you would normally within any animation loop, but effects this element specifically only.</p>\n\n<p><strong>You could make each game element have it's own timer, draw, and animate methods</strong> in the constructor. </p>\n\n<p>Doing this gives you full separation of control for each element and one big animation loop will not be necessary at all since the loop is broken up into each element and you start/stop at will.</p></li>\n</ul>\n\n<p>Or another option:</p>\n\n<ul>\n<li><strong>Create a Timer() constructor function</strong> which you can use and give each animating element individually, thereby minimizing work load within animation loops</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<h1>DO YOU KNOW SOME MORE BEST PRACTICES FOR CANVAS??</h1>\n\n<h2>Please add to this thread what you know, have learned, or have read online any and all Canvas best practices, tips/tricks for performance</h2>\n\n<p>With Canvas being still very new to internet, and no signs of it ever getting old that I can see in the future, there are not too many documented \"best practices\" or other really important tips that are a 'must know' for developing with it in any one particular place. Things like this are scattered around and many times on lesser known sites. </p>\n\n<p><strong>There's so many things that people need to know about, and still so much to learn about too.</strong> </p>\n\n<hr>\n\n<p>I wanted to share some things to help people who are learning Canvas and maybe some who already know it quite well and am hoping to get some feedback from others about what they feel are some best practices or other tips and tricks for working with Canvas in HTML5. </p>\n\n<p>I want to start off with one I personally found to be quite a useful yet surprisingly uncommon thing for developers to do.</p>\n\n<h1>1. Indent your code</h1>\n\n<p>Just as you would any other time, in any other language whatever the case may be. It has been a best practice for everything else, and I have come to find that in a complex canvas app, things can get a little confusing when dealing with several different contexts and saved/restore states. Not to mention the code is just more readable and overall cleaner looking too. </p>\n\n<p>For example:</p>\n\n<pre><code>...\n// Try to tell me this doesn't make sense to do\nctx.fillStyle = 'red';\nctx.fill();\nctx.save();\n    if (thing &lt; 3) {\n        // indenting\n        ctx.beginPath();\n            ctx.arc(2, 6, 11, 0, Math.PI*2, true);\n        ctx.closePath();\n        ctx.beginPath();\n            ctx.moveTo(20, 40);\n            ctx.lineTo(10, 200);\n            ctx.moveTo(20, 40);\n            ctx.lineTo(100, 40);\n        ctx.closePath();\n        ctx.save();\n            ctx.fillStyle = 'blue'\n            ctx.fill();\n        ctx.restore();\n    } else { \n        // no indenting\n        ctx.drawImage(img, 0, 0, 200, 200);\n        ctx.save();\n        ctx.shadowBlur();\n        ctx.beginPath();\n        ctx.arc(2, 60, 10, 0, Math.PI*2, false);\n        ctx.closePath();\n        ctx.fillStyle 'green';\n        ctx.fill();\n        ctx.restore();\n    }\nctx.restore();\nctx.drawRect();\nctx.fill();\n...\n</code></pre>\n\n<p>Is the IF statement not easier and cleaner to read and know what is what immediately going on than the ELSE statement in this? Can you see what I'm saying here? I think this should be a method that developers should continue to practice just as they would when writing plain 'ol javascript or any other language even.</p>\n\n<h1>Use requestAnimationFrame instead of setInterval / setTimeout</h1>\n\n<p>setInterval and setTimeout were never intended to be used as animation timers, they're just generic methods for calling functions after a time delay.  If you set an interval for 20ms in the future, but your queue of functions takes longer than that to execute, your timer won't fire until after these functions have completed.  That could be a while, which isn't ideal where animation is concerned. <strong>RequestAnimationFrame</strong> is a method which tells the browser that an animation is taking place, so it can optimize repaints accordingly.  It also throttles the animation for inactive tabs, so it won't kill your mobile device's battery if you leave it open in the background.</p>\n\n<p>Nicholas Zakas wrote a hugely detailed and informative <a href=\"http://www.nczonline.net/blog/2011/05/03/better-javascript-animations-with-requestanimationframe/\">article about requestAnimationFrame</a> on his blog which is well worth reading.  If you want some hard and fast implementation instructions, then <a href=\"http://paulirish.com/2011/requestanimationframe-for-smart-animating/\">Paul Irish has written a requestAnimationFrame shim</a> \u2013 this is what I've used in every one of the Canvas apps I have made until recently.</p>\n\n<h2>ACTUALLY</h2>\n\n<p>Even better than using requestAnimationFrame in place of setTimeout and setInterval, Joe Lambert has written a <a href=\"http://blog.joelambert.co.uk/2011/06/01/a-better-settimeoutsetinterval/\">NEW and improved shim</a> called requestInterval and requestTimeout, which he explains what issues exist when using requestAnimFrame.\nYou can view the <a href=\"https://gist.github.com/1002116#file_request_interval.js\">gist of the script</a>.</p>\n\n<h2>ACTUALLY x2</h2>\n\n<p>Now that all the browsers have caught up on the spec for this, there has been an <a href=\"http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\">update to the requestAnimFrame() polyfill</a>, one which will probably remain the one to use to cover all vendors. </p>\n\n<h1>Use more than one canvas</h1>\n\n<p>A technique for animation-heavy games which <a href=\"https://twitter.com/nicolahibbert\">@nicolahibbert</a> wrote about in a <a href=\"http://nicolahibbert.com/optimising-html5-canvas-games/\">post of hers on optimizing Canvas games</a> mentions that it may be better to use multiple canvasses layered on top of one another rather than do everything in a single canvas. Nicola explains that \"drawing too many pixels to the same canvas at the same time will cause your frame rate to fall through the floor. Take Breakout for example. Trying to draw the bricks, the ball, the paddle, any power-ups or weapons, and then each star in the background \u2013 this simply won't work, it takes too long to execute each of these instructions in turn. By splitting the starfield and the rest of the game onto separate canvases, you are able to ensure a decent framerate.\"</p>\n\n<h2>Render Elements Off-screen</h2>\n\n<p>I have had to do this for a few apps I've made including <a href=\"http://www.facebook.com/samsunggenomeproject/app_197458140327772\">Samsung's Olympic Genome Project facebook app</a>. It's an extremely useful thing to know and to make use of whether it's needed or not. It decreases load time immensely, plus it can be a really useful technique to load images off screen since they can sometimes take a while.</p>\n\n<pre><code>var tmpCanvas = document.createElement('canvas'),\n    tmpCtx = tmpCanvas.getContext('2d'),\n    img = document.createElement('img');\n\nimg.onload = function() {\n    tmpCtx.drawImage(thumbImg, 0, 0, 200, 200);\n};\nimg.src = '/some/image/source.png';\n</code></pre>\n\n<p>Notice that the src of the image is set after it is loaded. This is a key thing to remember to do too. Once the images are done loading and drawn into these temp canvases, you can then draw them to your main canvas by using the same ctx.drawImage(), but instead of putting the image as the first argument, you use 'tmpCtx.canvas' to reference the temp canvas.</p>\n\n<h3>Other tips, tricks and resources</h3>\n\n<ul>\n<li><strong><a href=\"http://philip.html5.org/tests/canvas/suite/tests/\">Canvas test cases</a></strong></li>\n<li><strong><a href=\"http://kangax.github.com/jstests/\">Some more canvas and JS tests</a></strong></li>\n<li><strong><a href=\"http://www.html5rocks.com/en/tutorials/canvas/performance/\">HTML5Rocks performance Improving</a></strong></li>\n<li>**<a href=\"http://blog.digitalbackcountry.com/2012/05/using-requestanimationframe-to-optimize-dragging-events/\">requestAnimFrame to Optimize Dragging Events</a></li>\n</ul>\n\n<h3>Canvas has a back-reference</h3>\n\n<p>The 2d context has a back reference to it's associated DOM element:</p>\n\n<pre><code>var ctx = doc.getElementById('canvas').getContext('2d');\nconsole.log(ctx.canvas);    // HTMLCanvasElement\n</code></pre>\n\n<p>I'd love to hear more from other people on this. I am working on making a list of things that we should standardize to add a new section to my company's <a href=\"http://na.standards.com/standards\">Front-end Code Standards and Best Practices</a>. I'd love to get as much feedback on this as I can.</p>\n",
            "last_activity_date": 1343592717,
            "question_id": 8205828,
            "score": 21,
            "tags": [
                "javascript",
                "performance",
                "optimization",
                "canvas"
            ],
            "title": "HTML5 Canvas Performance and Optimization Tips, Tricks and Coding Best Practices"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I would suggest that you use jQuery. The \"saving\" part still has to be done on the backend, of course, but jQuery makes the submission of AJAX requests a breeze.</p>\n\n<p>If you have an ASP.NET backend, you can simply call a WebMethod and submit the associated string (content of a textbox etc.) at a specified interval:</p>\n\n<pre><code>[WebMethod]\npublic void AutoSave(String autoSaveContent)\n{\n // Save\n}\n</code></pre>\n\n<p>The jQuery request to call this method would be:</p>\n\n<pre><code>$.ajax({  \ntype: \"POST\",  \ncontentType: \"application/json; charset=utf-8\",  \nurl: \"AutoSaveService.asmx/AutoSave\", \ndata: \"{textBoxToAutosaveText}\",  \ndataType: \"json\"\n});\n</code></pre>\n\n<p>That's all. You can find jQuery at <a href=\"http://jquery.com/\" rel=\"nofollow\">http://jquery.com/</a> .</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you're looking for simple and lightweight, I think the most lightweight you can get is using JavaScript's built-in <code>setTimeout()</code> function. Use it in combination with your choice of framework for the AJAX, and you're good to go.</p>\n\n<pre><code>function autoSave()\n{\n  $.get(URL, DATA); // Use any AJAX code here for the actual autosaving. This is lightweight jQuery.\n  setTimeout(\"autoSave()\", 60000); // Autosaves every minute.\n}\nautoSave(); // Initiate the auto-saving.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Autosave should be pretty simple to implement, and you could use one of the major frameworks like jquery or mootools. All you need to do is use window.setTimeout() once your user edits something that should be autosaved, and have that timeout call the javascript frameworks standard AJAX stuff.</p>\n\n<p>For example (with jquery):</p>\n\n<pre><code>var autosaveOn = false;\nfunction myAutosavedTextbox_onTextChanged()\n{\n    if (!autosaveOn)\n    {\n        autosaveOn = true;\n\n        $('#myAutosavedTextbox').everyTime(\"300000\", function(){\n             $.ajax({\n                 type: \"POST\",\n                 url: \"autosavecallbackurl\",\n                 data: \"id=1\",\n                 success: function(msg) {\n                     $('#autosavenotify').text(msg);\n                 }\n             });\n        }); //closing tag\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>You could save on a set time, by using timeout, but, a better method may be to just have some sort of onchange event handler, so that when data is changed, if you haven't saved within a set amount of time, then save, but, don't save on every keystroke.</p>\n\n<p>So, you look to see when you last saved, before calling the ajax function.</p>\n\n<p>This will enable you to save only when needed, but at a predetermined rate. So, if you want to save every 5 minutes, then regardless of what changes were made, if a change was made within that 5 minute window you save.</p>\n\n<p>Making the ajax call is trivial, but jQuery can simplify it. Unfortunately, to get what you want, from what I have seen, you will need to just implement your own functionality. It is difficult to do in a general way as different people may want to save if only certain fields are changed. So, just because I click on a select box may not lead to the save function, but changing something in a text box may.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://code.google.com/p/antonytrupe/wiki/synchronize\" rel=\"nofollow\">synchronize</a> is a <a href=\"http://plugins.jquery.com/project/synchronize\" rel=\"nofollow\">jquery plugin</a> that adds functionality to your html page to periodically automatically send user input back to the server. (<a href=\"http://antonytrupe.googlecode.com/files/jquery.synchronize.js\" rel=\"nofollow\">source code</a>)</p>\n\n<p>JavaScript and HTML sample:</p>\n\n<pre><code>&lt;script&gt;\n  $(\"input\").synchronize();\n&lt;/script&gt;\n\n&lt;input type=\"text\" value=\"initial_value\" \n       class=\"{url:'/entity.cfc?method=updateDescription',data:{ID1:'1',ID2:'2'}}\" /&gt;\n</code></pre>\n\n<p>resulting ajax request after the default delay of 1s:</p>\n\n<pre><code>http://localhost/entity.cfc?method=updateDescription&amp;value=update_value&amp;preVal=initial_value&amp;ID1=1&amp;ID2=2\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Isn't all you need a timer that fires every x seconds? The callback function will do an AJAX postback to the server of the form with a \"autosave=true\" field added. Just handle this postback on the server and you are done.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For simple autosave of form fields in cookies I use this great plugin <a href=\"http://rikrikrik.com/jquery/autosave/\" rel=\"nofollow\">http://rikrikrik.com/jquery/autosave/</a>\nIt doesn't send data to the server, but if you don't find anything better, it's easier to upgrade it's funcitonalily than do it from scratch.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>What's the best javascript library, or plugin or extension to a library, that has implemented autosaving functionality?</p>\n\n<p>The specific need is to be able to 'save' a data grid. Think gmail and Google Documents' autosave.</p>\n\n<p>I don't want to reinvent the wheel if its already been invented. I'm looking for an existing implementation of the magical autoSave() function.</p>\n\n<p>Auto-Saving:pushing to server code that saves to persistent storage, usually a DB. The server code framework is outside the scope of this question.</p>\n\n<p>Note that I'm not looking for an Ajax library, but a library/framework a level higher: interacts with the form itself.</p>\n\n<p>daemach introduced an implementation on top of jQuery @ <a href=\"http://daemach.blogspot.de/2007/03/autosave-jquery-plugin.html\" rel=\"nofollow\">http://daemach.blogspot.de/2007/03/autosave-jquery-plugin.html</a> [script host down]. I'm not convinced it meets the lightweight and well engineered criteria though.</p>\n\n<p><strong>Criteria</strong></p>\n\n<ul>\n<li>stable, lightweight, well engineered</li>\n<li>saves onChange and/or onBlur</li>\n<li>saves no more frequently then a given number of milliseconds</li>\n<li>handles multiple updates happening at the same time</li>\n<li>doesn't save if no change has occurred since last save</li>\n<li>saves to different urls per input class</li>\n</ul>\n",
            "last_activity_date": 1391803451,
            "question_id": 931252,
            "score": 9,
            "tags": [
                "javascript",
                "ajax",
                "synchronize"
            ],
            "title": "AJAX Autosave functionality"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>mime-types starting with <code>x-</code> are not standardized. In case of javascript it's kind of outdated. \nAdditional the second code snippet</p>\n\n<pre><code>&lt;?Header('Content-Type: text/javascript');?&gt;\n</code></pre>\n\n<p>requires <code>short_open_tags</code> to be enabled. you should avoid it.</p>\n\n<pre><code>&lt;?php Header('Content-Type: text/javascript');?&gt;\n</code></pre>\n\n<p>However, the <em>completely</em> correct mime-type for javascript is</p>\n\n<pre><code>application/javascript\n</code></pre>\n\n<p><a href=\"http://www.iana.org/assignments/media-types/application/index.html\">http://www.iana.org/assignments/media-types/application/index.html</a></p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<blockquote>\n  <p><code>text/javascript</code></p>\n</blockquote>\n\n<p>Obsolete:</p>\n\n<blockquote>\n  <p><code>application/x-javascript</code></p>\n</blockquote>\n\n<p>Experimental (hence the <code>x-</code> prefix) for a transitional period until <code>application/javascript</code> could be standardised. </p>\n\n<hr>\n\n<p><strong>You should use <code>application/javascript</code>.</strong> This is documented in the <a href=\"http://www.rfc-editor.org/rfc/rfc4329.txt\">RFC</a>.</p>\n\n<p>As far a browsers are concerned, there is no difference (at least in HTTP headers). This was just a change so that the <code>text/*</code> and <code>application/*</code> MIME type groups had a consistent meaning where possible. (<code>text/*</code> MIME types are intended for human readable content, JavaScript is not designed to directly convey meaning to humans).</p>\n\n<p>Note that using <code>application/javascript</code> in the <code>type</code> attribute of a script element will cause the script to be ignored (as being in an unknown language) in some older browsers. Either continue to use <code>text/javascript</code> there or omit the attribute entirely (which is permitted in HTML 5).</p>\n\n<p>This isn't a problem in HTTP headers as browsers universally (as far as I'm aware) either ignore the HTTP content-type of scripts entirely, or are modern enough to recognise <code>application/javascript</code>.</p>\n",
                    "is_accepted": true,
                    "score": 126
                },
                {
                    "body": "<p>According to RFC 4329 the correct MIME type for JavaScript should be <code>application/javascript</code>. Howerver, older IE versions choke on this since they expect <code>text/javascript</code>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This attribute specifies the scripting language of the element's contents and overrides the default scripting language. The scripting language is specified as a content type (e.g., \"text/javascript\"). Authors must supply a value for this attribute. There is no default value for this attribute.</p>\n\n<p>I think it is server dependent some servers still use application/x-javascript ,must be outdated  .</p>\n\n<p>Nowadays all browsers accept both</p>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>What is the difference between these headers?</p>\n\n<pre><code>Content-Type: application/javascript\nContent-Type: application/x-javascript\nContent-Type: text/javascript\n</code></pre>\n\n<p>Which one is best and why?</p>\n\n<p>Please do not say they are identical - if they were identical there would not have been two of them. I know both work - but I would like to know the difference.</p>\n",
            "last_activity_date": 1417993110,
            "question_id": 9664282,
            "score": 93,
            "tags": [
                "javascript",
                "http-headers",
                "content-type"
            ],
            "title": "Difference between application/x-javascript and text/javascript content types"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<pre><code>switch (pageid)\n{\ncase \"listing-page\":\ncase \"home-page\":\n    alert(\"hello\");\n    break;\ncase \"details-page\":\n    alert(\"goodbye\");\n    break;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 155
                },
                {
                    "body": "<p>You need to make two <code>case</code> labels.</p>\n\n<p>Control will fall through from the first label to the second, so they'll both execute the same code.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Since the other answers explained how to do it without actually explaining why it works:</p>\n\n<p>When the <code>switch</code> executes, it finds the first matching <code>case</code> statement and then executes each line of code after the switch until it hits either a <code>break</code> statement or the end of the <code>switch</code> (or a <code>return</code> statement to leave the entire containing function). When you deliberately omit the <code>break</code> so that code under the next <code>case</code> gets executed too that's called a <em>fall-through</em>. So for the OP's requirement:</p>\n\n<pre><code>switch (pageid) {\n   case \"listing-page\":\n   case \"home-page\":\n      alert(\"hello\");\n      break;\n\n   case \"details-page\":\n      alert(\"goodbye\");\n      break;\n} \n</code></pre>\n\n<p>Forgetting to include <code>break</code> statements is a fairly common coding mistake and is the first thing you should look for if your <code>switch</code> isn't working the way you expected. For that reason some people like to put a comment in to say \"fall through\" to make it clear when break statements have been omitted on purpose. I do that in the following example since it is a bit more complicated and shows how some cases can include code to execute before they fall-through:</p>\n\n<pre><code>switch (someVar) {\n   case 1:\n      someFunction();\n      alert(\"It was 1\");\n      // fall through\n   case 2:\n      alert(\"The 2 case\");\n      // fall through\n   case 3:\n      // fall through\n   case 4:\n      // fall through\n   case 5:\n      alert(\"The 5 case\");\n      // fall through\n   case 6:\n      alert(\"The 6 case\");\n      break;\n\n   case 7:\n      alert(\"Something else\");\n      break;\n\n   case 8:\n      // fall through\n   default:\n      alert(\"The end\");\n      break;\n}\n</code></pre>\n\n<p>You can also (optionally) include a <code>default</code> case, which will be executed if none of the other cases match - if you don't include a <code>default</code> and no cases match then nothing happens. You can (optionally) fall through to the default case.</p>\n\n<p>So in my second example if <code>someVar</code> is 1 it would call <code>someFunction()</code> and then you would see four alerts as it falls through multiple cases some of which have alerts under them. Is <code>someVar</code> is 3, 4 or 5 you'd see two alerts. If <code>someVar</code> is 7 you'd see \"Something else\" and if it is 8 or any other value you'd see \"The end\".</p>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<p>Use commas to separate case</p>\n\n<pre><code>switch (pageid)\n{\n    case \"listing-page\",\"home-page\":\n        alert(\"hello\");\n        break;\n    case \"details-page\":\n        alert(\"goodbye\");\n        break;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How would you use a switch case when you need to test for \"a\" <strong>or</strong> \"b\" in the same case?</p>\n\n<pre><code>switch (pageid)\n{\n    case \"listing-page\" || \"home-page\":\n        alert(\"hello\");\n        break;\n    case \"details-page\":\n        alert(\"goodbye\");\n        break;\n}\n</code></pre>\n",
            "last_activity_date": 1410693388,
            "question_id": 6513585,
            "score": 73,
            "tags": [
                "javascript",
                "switch-statement",
                "fall-through"
            ],
            "title": "JavaScript or-expression in a switch case"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Partial views cannot participate in their parent views' sections.</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>You could have a second partial that is only in charge of injecting the necessary javascript. Place several scripts in there around <code>@if</code> blocks, if you want:</p>\n\n<pre><code>@model string\n@if(Model == \"bla\") {\n    &lt;script type=\"text/javascript\"&gt;...&lt;/script&gt;\n}\n\n@else if(Model == \"bli\") {\n    &lt;script type=\"text/javascript\"&gt;...&lt;/script&gt;\n}\n</code></pre>\n\n<p>This could obviously be cleaned up a bit, but then, in the <code>Scripts</code> section of your view:</p>\n\n<pre><code>@section Scripts\n{\n    @Html.Partial(\"_Scripts\", \"ScriptName_For_Partial1\")\n}\n</code></pre>\n\n<p>Again, it might not win a beauty prize but it will work.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>The way I dealt with this is to write a couple extension methods to the HtmlHelper class. That allows partials views to say that they require a script, and then in the layout view that writes the  tag I call to my helper method to emit the required scripts</p>\n\n<p>Here are the helper methods:</p>\n\n<pre><code>public static string RequireScript(this HtmlHelper html, string path, int priority = 1)\n{\n    var requiredScripts = HttpContext.Current.Items[\"RequiredScripts\"] as List&lt;ResourceInclude&gt;;\n    if (requiredScripts == null) HttpContext.Current.Items[\"RequiredScripts\"] = requiredScripts = new List&lt;ResourceInclude&gt;();\n    if (!requiredScripts.Any(i =&gt; i.Path == path)) requiredScripts.Add(new ResourceInclude() { Path = path, Priority = priority });\n    return null;\n}\n\npublic static HtmlString EmitRequiredScripts(this HtmlHelper html)\n{\n    var requiredScripts = HttpContext.Current.Items[\"RequiredScripts\"] as List&lt;ResourceInclude&gt;;\n    if (requiredScripts == null) return null;\n    StringBuilder sb = new StringBuilder();\n    foreach (var item in requiredScripts.OrderByDescending(i =&gt; i.Priority))\n    {\n        sb.AppendFormat(\"&lt;script src=\\\"{0}\\\" type=\\\"text/javascript\\\"&gt;&lt;/script&gt;\\n\", item.Path);\n    }\n    return new HtmlString(sb.ToString());\n}\npublic class ResourceInclude\n{\n    public string Path { get; set; }\n    public int Priority { get; set; }\n}\n</code></pre>\n\n<p>Once you have that in place your partial view just needs to call <code>@Html.RequireScript(\"/Path/To/Script\")</code>.</p>\n\n<p>And in the layout view's head section you call <code>@Html.EmitRequiredScripts()</code>.</p>\n\n<p>An added bonus of this is that it allows you to weed out duplicate script requests. If you have multiple views/partial views that need a given script you can safely assume that you will only output it once</p>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p>The more elegant way to do this is to move partial view scripts into separate file and then render it in Scripts section of view:</p>\n\n<pre><code>&lt;h2&gt;This is the view&lt;/h2&gt;\n\n@Html.RenderPartial(\"_Partial\")\n\n@section Scripts\n{\n    @Html.RenderPartial(\"_PartialScripts\")\n\n    &lt;script type=\"text/javascript\"&gt;\n        alert(\"I'm a view script.\");\n    &lt;/script&gt;\n}\n</code></pre>\n\n<p>The partial view _<em>Partial.cshtml</em>:</p>\n\n<pre><code>&lt;p&gt;This is the partial.&lt;/p&gt;\n</code></pre>\n\n<p>The partial view _<em>PartialScripts.cshtml</em> with scripts only:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    alert(\"I'm a partial script!\");\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Base on the answer from Mr Bell And Shimmy above, I add on extra function for Bundle script.</p>\n\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;\nusing System.Text;\nusing System.Web.Mvc;\nnamespace ABC.Utility\n{\npublic static  class PartialViewHelper\n{\n    public static string RequireScript(this HtmlHelper html, string path, int priority = 1)\n    {\n        var requiredScripts = HttpContext.Current.Items[\"RequiredScripts\"] as List&lt;ResourceInclude&gt;;\n        if (requiredScripts == null) HttpContext.Current.Items[\"RequiredScripts\"] = requiredScripts = new List&lt;ResourceInclude&gt;();\n        if (!requiredScripts.Any(i =&gt; i.Path == path)) requiredScripts.Add(new ResourceInclude() { Path = path, Priority = priority });\n        return null;\n    }\n\n    public static string RequireBundleStyles(this HtmlHelper html, string bundleName)\n    {\n        var a = System.Web.Optimization.Styles.Render(bundleName);\n        var requiredStyles = HttpContext.Current.Items[\"RequiredStyles\"] as IHtmlString;\n        if (requiredStyles == null) HttpContext.Current.Items[\"RequiredStyles\"] = requiredStyles = a;\n        return null;\n    }\n\n    public static string RequireBundleScripts(this HtmlHelper html, string bundleName)\n    {\n        var a=System.Web.Optimization.Scripts.Render(bundleName);\n        var requiredScripts = HttpContext.Current.Items[\"RequiredScripts\"] as IHtmlString;\n        if (requiredScripts == null) HttpContext.Current.Items[\"RequiredScripts\"] = requiredScripts = a;\n        return null;\n    }\n\n    public static HtmlString EmitRequiredBundleStyles(this HtmlHelper html)\n    {\n        var requiredStyles = HttpContext.Current.Items[\"RequiredStyles\"] as IHtmlString;\n        if (requiredStyles == null) return null;\n        return MvcHtmlString.Create(requiredStyles.ToHtmlString()) ;\n    }\n\n    public static HtmlString EmitRequiredBundleScripts(this HtmlHelper html)\n    {\n        var requiredScripts = HttpContext.Current.Items[\"RequiredScripts\"] as IHtmlString;\n        if (requiredScripts == null) return null;\n        return MvcHtmlString.Create(requiredScripts.ToHtmlString());\n    }\n\n    public static HtmlString EmitRequiredScripts(this HtmlHelper html)\n    {\n        var requiredScripts = HttpContext.Current.Items[\"RequiredScripts\"] as List&lt;ResourceInclude&gt;;\n        if (requiredScripts == null) return null;\n        StringBuilder sb = new StringBuilder();\n        foreach (var item in requiredScripts.OrderByDescending(i =&gt; i.Priority))\n        {\n            sb.AppendFormat(\"&lt;script src=\\\"{0}\\\" type=\\\"text/javascript\\\"&gt;&lt;/script&gt;\\n\", item.Path);\n        }\n        return new HtmlString(sb.ToString());\n    }\n    public class ResourceInclude\n    {\n        public string Path { get; set; }\n        public int Priority { get; set; }\n    }\n}//end class\n}// end namespace  \n</code></pre>\n\n<p>Sample on PartialView :-\n    @Html.RequireBundleStyles(\"~/bundles/fileupload/bootstrap/BasicPlusUI/css\");\n    @Html.RequireBundleScripts(\"~/bundles/fileupload/bootstrap/BasicPlusUI/js\"); </p>\n\n<p>Sample on MasterPage :-\n    @Html.EmitRequiredBundleStyles()</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use <code>@using(Html.Delayed()){ ...your content... }</code> extensions from answer <a href=\"http://stackoverflow.com/a/18790222/1037948\">http://stackoverflow.com/a/18790222/1037948</a> to render any content (scripts or just HTML) later in the page.  Internal <code>Queue</code> should ensure correct ordering.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Install the <strong><a href=\"https://www.nuget.org/packages/Forloop.HtmlHelpers/\" rel=\"nofollow\">Forloop.HtmlHelpers</a></strong> nuget package - it adds some helpers for managing scripts in partial views and editor templates.</p>\n\n<p>Somewhere in your layout, you need to call </p>\n\n<pre><code>@Html.RenderScripts()\n</code></pre>\n\n<p>This will be where any script files and script blocks will be outputted in the page so I would recommend putting it after your main scripts in the layout and after a scripts section (if you have one).</p>\n\n<p>If you're using The Web Optimization Framework with bundling, you can use the overload</p>\n\n<pre><code>@Html.RenderScripts(Scripts.Render)\n</code></pre>\n\n<p>so that this method is used for writing out script files.</p>\n\n<p>Now, anytime you want to add script files or blocks in a view, partial view or template, simply use</p>\n\n<pre><code>@using (Html.BeginScriptContext())\n{\n  Html.AddScriptFile(\"~/Scripts/jquery.validate.js\");\n  Html.AddScriptBlock(\n    @&lt;script type=\"text/javascript\"&gt;\n       $(function() { $('#someField').datepicker(); });\n     &lt;/script&gt;\n  );\n}\n</code></pre>\n\n<p>The helpers ensure that only one script file reference is rendered if added multiple times and it also ensures that script files are rendered out in an expected order i.e.</p>\n\n<ol>\n<li>Layout</li>\n<li>Partials and Templates (in the order in which they appear in the view, top to bottom)</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This functionality is also implemented in ClientDependency.Core.Mvc.dll. It provides the html helpers: @Html.RequiresJs and @Html.RenderJsHere(). Nuget package: ClientDependency-Mvc </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>My main motivation for trying to do this is to get Javascript that is only required by a partial at the bottom of the page with the rest of the Javascript and not in the middle of the page where the partial is rendered. </p>\n\n<p>Here's a simplified example of what I'm trying to do:</p>\n\n<p>Here is the layout with a Scripts section right before the body.</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;@ViewBag.Title&lt;/title&gt;\n    &lt;link href=\"@Url.Content(\"~/Content/Site.css\")\" rel=\"stylesheet\" type=\"text/css\" /&gt;    \n&lt;/head&gt;\n\n&lt;body&gt;\n    @RenderBody()\n    &lt;script src=\"@Url.Content(\"~/Scripts/jquery-1.4.4.min.js\")\" type=\"text/javascript\"&gt;&lt;/script&gt;\n    @RenderSection(\"Scripts\", false)\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Here's an example view using this layout. </p>\n\n<pre><code>&lt;h2&gt;This is the view&lt;/h2&gt;\n\n@{Html.RenderPartial(\"_Partial\");}\n\n@section Scripts {\n&lt;script type=\"text/javascript\"&gt;\n        alert(\"I'm a view.\");\n&lt;/script&gt;\n}\n</code></pre>\n\n<p>And here's the partial being rendered from the view.</p>\n\n<pre><code>&lt;p&gt;This is the partial.&lt;/p&gt;\n\n@* this never makes it into the rendered page *@\n@section Scripts {\n&lt;script type=\"text/javascript\"&gt;\n    alert(\"I'm a partial.\"); \n&lt;/script&gt;\n}\n</code></pre>\n\n<p>In this example, the markup specified in the view is placed into the section, but the markup from the partial is not. Is it possible to populate a section from a partial view with Razor? If not, what are some other methods of getting Javascript that's only needed by partials at the bottom of the page without including it globally?</p>\n",
            "last_activity_date": 1406812992,
            "question_id": 5355427,
            "score": 71,
            "tags": [
                "javascript",
                "asp.net-mvc-3",
                "razor"
            ],
            "title": "Populate a Razor Section From a Partial"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Something like this:</p>\n\n<pre><code>[array].sort(function(a, b){\n var nameA=a.name.toLowerCase(), nameB=b.name.toLowerCase()\n if (nameA &lt; nameB) //sort string ascending\n  return -1 \n if (nameA &gt; nameB)\n  return 1\n return 0 //default return value (no sorting)\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 47
                },
                {
                    "body": "<pre><code>user.sort(function(a, b){\n    if(a.firstname &lt; b.firstname) return -1;\n    if(a.firstname &gt; b.firstname) return 1;\n    return 0;\n})\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 153
                },
                {
                    "body": "<p>Basically you can sort arrays with method sort, but if you want to sort objects then you have to pass function to sort method of array, so I will give you an example using your array</p>\n\n<pre><code>user = [{\nbio: \"&lt;null&gt;\",\nemail: \"user@domain.com\",\nfirstname: 'Anna',\nid: 318,\n\"last_avatar\": \"&lt;null&gt;\",\n\"last_message\": \"&lt;null&gt;\",\nlastname: 'Nickson',\nnickname: 'anny'\n},\n{\nbio: \"&lt;null&gt;\",\nemail: \"user@domain.com\",\nfirstname: 'Senad',\nid: 318,\n\"last_avatar\": \"&lt;null&gt;\",\n\"last_message\": \"&lt;null&gt;\",\nlastname: 'Nickson',\nnickname: 'anny'\n},\n{\nbio: \"&lt;null&gt;\",\nemail: \"user@domain.com\",\nfirstname: 'Muhamed',\nid: 318,\n\"last_avatar\": \"&lt;null&gt;\",\n\"last_message\": \"&lt;null&gt;\",\nlastname: 'Nickson',\nnickname: 'anny'\n}];\n\nvar ar = user.sort(function(a, b)\n{\n  var nA = a.firstname.toLowerCase();\n  var nB = b.firstname.toLowerCase();\n\n  if(nA &lt; nB)\n    return -1;\n  else if(nA &gt; nB)\n    return 1;\n return 0;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If compared strings contain unicode characters you can use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare\"><code>localeCompare</code> function</a> of <code>String</code> class like the following:</p>\n\n<pre><code>users.sort(function(a,b){\n    return a.firstname.localeCompare(b.firstname);\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 37
                },
                {
                    "body": "<p><a href=\"http://underscorejs.org/#sortBy\">underscorejs</a> offers the very nice _.sortBy function:</p>\n\n<pre><code>_.sortBy([{a:1},{a:3},{a:2}], \"a\")\n</code></pre>\n\n<p>or you can use a custom sort function:</p>\n\n<pre><code>_.sortBy([{a:\"b\"},{a:\"c\"},{a:\"a\"}], function(i) {return i.a.toLowerCase()})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>A more compact notation:</p>\n\n<pre><code>user.sort(function(a, b){\n    return a.firstname == b.firstname ? 0 : a.firstname &lt; b.firstname ? -1 : 1;\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I got an array (see below for one object in the array) that I need to sort by firstname using JavaScript.\nHow can I do it?</p>\n\n<pre><code>var user = {\n   bio: null,\n   email:  \"user@domain.com\",\n   firstname: \"Anna\",\n   id: 318,\n   lastAvatar: null,\n   lastMessage: null,\n   lastname: \"Nickson\",\n   nickname: \"anny\"\n};\n</code></pre>\n",
            "last_activity_date": 1424788584,
            "question_id": 6712034,
            "score": 70,
            "tags": [
                "javascript"
            ],
            "title": "Sort array by firstname (alphabetically) in Javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Well, I can think of a CSS hack that will resolve this issue.</p>\n\n<p>You could add the following line in your CSS file:</p>\n\n<pre><code>* html .blog_list div.postbody img { width:75px; height: SpecifyHeightHere; }\n</code></pre>\n\n<p>The above code will only be seen by IE6.\nThe aspect ratio won't be perfect, but you could make it look somewhat normal.\nIf you really wanted to make it perfect, you would need to write some javascript that would read the original picture width, and set the ratio accordingly to specify a height.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The only way to do explicit scaling in CSS is to use tricks such as found <a href=\"http://www.markschenk.com/cssexp/background/scaledbgimage.html\" rel=\"nofollow\">here</a>.</p>\n\n<p>IE6 only, you could also use filters (check out <a href=\"http://homepage.ntlworld.com/bobosola/pngtestfixed.htm\" rel=\"nofollow\">PNGFix</a>).  But applying them automatically to the page will need javascript, though that javascript could be embedded in the CSS file.</p>\n\n<p>If you are going to require javascript, then you might want to just have javascript fill in the missing value for the height by inspecting the image once the content has loaded.  (Sorry I do not have a reference for this technique).</p>\n\n<p>Finally, and pardon me for this soapbox, you might want to eschew IE6 support in this matter.  You could add <code>_width: auto</code> after your <code>width: 75px</code> rule, so that IE6 at least renders the image reasonably, even if it is the wrong size.</p>\n\n<p>I recommend the last solution simply because IE6 is on the way out: 20% and going down almost a <a href=\"http://marketshare.hitslink.com/browser-market-share.aspx?qprid=3\" rel=\"nofollow\">percent a month</a>.  Also, I note that your site is recreational and in the UK.  Both of these help the demographic lean to be away from IE6:  IE6 usage drops nearly 40% during weekends (no citation sorry), and UK has a much lower IE6 demographic (again no citation, sorry).</p>\n\n<p>Good luck!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Adam Luter gave me the idea for this, but it actually turned out to be really simple:</p>\n\n<pre><code>img {\n  width:  75px;\n  height: auto;\n}\n</code></pre>\n\n<p>IE6 now scales the image fine and this seems to be what all the other browsers use by default.</p>\n\n<p>Thanks for both the answers though!</p>\n",
                    "is_accepted": true,
                    "score": 136
                },
                {
                    "body": "<p>I'm glad that worked out, so I guess you had to explicitly set 'auto' on IE6 in order for it to mimic other browsers!</p>\n\n<p>I actually recently found another technique for scaling images, again designed for backgrounds.  This technique has some interesting features:</p>\n\n<ol>\n<li>The image aspect ratio is preserved</li>\n<li>The image's original size is maintained (that is, it can never shrink only grow)</li>\n</ol>\n\n<p>The markup relies on a wrapper element:</p>\n\n<pre><code>&lt;div id=\"wrap\"&gt;&lt;img src=\"test.png\" /&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Given the above markup you then use these rules:</p>\n\n<pre><code>#wrap {\n  height: 100px;\n  width: 100px;\n}\n#wrap img {\n  min-height: 100%;\n  min-width: 100%;\n}\n</code></pre>\n\n<p>If you then control the size of wrapper you get the interesting scale effects that I list above.</p>\n\n<p>To be explicit, consider the following base state: A container that is 100x100 and an image that is 10x10.  The result is a scaled image of 100x100.</p>\n\n<ol>\n<li>Starting at the base state, the\ncontainer resized to 20x100, the\nimage stays resized at 100x100.</li>\n<li>Starting at the base state, the\nimage is changed to 10x20, the image\nresizes to 100x200.</li>\n</ol>\n\n<p>So, in other words, the image is always <em>at least</em> as big as the container, but will scale <em>beyond</em> it to maintain it's aspect ratio.</p>\n\n<p>This probably isn't useful for your site, and it doesn't work in IE6.  But, it <em>is</em> useful to get a scaled background for your view port or container.</p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>Here's the problem. I have an image:</p>\n\n<pre><code>&lt;img alt=\"alttext\" src=\"filename.jpg\"/&gt;\n</code></pre>\n\n<p>Note no height or width specified.</p>\n\n<p>On certain pages I want to only show a thumbnail. I can't alter the html, so I use the following CSS:</p>\n\n<pre><code>.blog_list div.postbody img { width:75px; }\n</code></pre>\n\n<p>Which (in most browsers) makes a page of uniformly wide thumbnails, all with preserved aspect ratios.</p>\n\n<p>In IE6 though, the image is only scaled in the dimension specified in the CSS. It retains the 'natural' height.</p>\n\n<p>Here's an example of a pair of pages that illustrate the problem:</p>\n\n<ul>\n<li><a href=\"http://www.escapelondon.co.uk/profiles/blog/list\">The list, which should show thumbnails</a></li>\n<li><a href=\"http://www.escapelondon.co.uk/profiles/blogs/epernay-champagne\">A single blog post, which shows the full-size image.</a></li>\n</ul>\n\n<p>I'd be very grateful for all suggestions, but would like to point out that (due to the limitations of the clients chosen platform) I'm looking for something that doesn't involve modifying the html. CSS would also be preferable to javascript.</p>\n\n<p>EDIT: Should mention that the images are of different sizes and aspect ratios.</p>\n",
            "last_activity_date": 1326390030,
            "question_id": 757782,
            "score": 57,
            "tags": [
                "javascript",
                "css",
                "internet-explorer",
                "image",
                "internet-explorer-6"
            ],
            "title": "How to preserve aspect ratio when scaling image using one (CSS) dimension in IE6?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.whitefrost.com/documents/html/technical/dhtml/jsprof.html\" rel=\"nofollow\">JavaScript Profiler</a> is a decent tool.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I don't think <a href=\"http://www.debugbar.com/\" rel=\"nofollow\">debugbar</a> has a profiler.. but it does have a debugger and a console... so you can fake it...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>We use Firebugs console.log, console.time and console.timeEnd (I think) a lot.</p>\n\n<p>Firebug also has a built in profiler.</p>\n",
                    "is_accepted": false,
                    "score": -6
                },
                {
                    "body": "<p>YUI also provides a <a href=\"http://developer.yahoo.com/yui/profiler/\" rel=\"nofollow\">profiler</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The Internet Explorer 8 beta (2) has a builtin Javascript profiler (in the developer toolbar).  It's worth playing with at least...</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p><a href=\"http://github.com/jeremi/js-profiler\" rel=\"nofollow\">js-profiler</a> also provide a profiler that is working in any browser and does not depend on any framework.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Checkout <a href=\"http://ejohn.org/blog/deep-tracing-of-internet-explorer/\">http://ejohn.org/blog/deep-tracing-of-internet-explorer/</a> the dynaTrace tool shown here is fantastic and works with IE7.</p>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>Does anyone know a tool for Profiling JavaScript in IE?</p>\n\n<p>List available:</p>\n\n<ul>\n<li><a href=\"http://blogs.msdn.com/ie/archive/2008/09/11/introducing-the-ie8-developer-tools-jscript-profiler.aspx\">IE8</a> (Internet Explorer 8 only)</li>\n<li><a href=\"http://www.whitefrost.com/documents/html/technical/dhtml/jsprof.html\">JavaScript Profiler</a></li>\n<li><a href=\"http://developer.yahoo.com/yui/profiler/\">YUI!</a></li>\n</ul>\n",
            "last_activity_date": 1275047354,
            "question_id": 20376,
            "score": 51,
            "tags": [
                "javascript",
                "performance",
                "internet-explorer",
                "profiling"
            ],
            "title": "JavaScript Profiler in IE"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>A primary use of shim is with libraries that don't support AMD, but you need to manage their dependencies. For example, in the Backbone and Underscore example above: you know that Backbone requires Underscore, so suppose you wrote your code like this:</p>\n\n<pre><code>require(['underscore', 'backbone']\n, function( Underscore, Backbone ) {\n\n    // do something with Backbone\n\n}\n</code></pre>\n\n<p>RequireJS will kick off asynchronous requests for both Underscore and Backbone, but you <em>don't know which one will come back first</em> so it's possible that Backbone would try to do something with Underscore before it's loaded.</p>\n\n<p><strong>NOTE:</strong> this underscore/backbone example was written before both those libraries supported AMD. But the principle holds true for any libraries today that don't support AMD.</p>\n\n<p>The \"init\" hook lets you do other advanced things, e.g. if a library would normally export two different things into the global namespace but you want to redefine them under a single namespace. Or, maybe you want to do some monkey patching on a methods in the library that you're loading.</p>\n\n<p>More background: </p>\n\n<ul>\n<li><a href=\"https://github.com/jrburke/requirejs/wiki/Upgrading-to-RequireJS-2.0#shim-config-\">Upgrading to RequireJS 2.0</a> gives some history on how the order plugin tried to solve this in the past.</li>\n<li>See the \"Loading Non-Modules\" section of <a href=\"http://aaronhardy.com/javascript/javascript-architecture-requirejs-dependency-management/\">This article by Aaron Hardy</a> for another good description.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 57
                },
                {
                    "body": "<p>As per RequireJS API documentation, shim lets you</p>\n\n<blockquote>\n  <p>Configure the dependencies, exports, and custom initialization for\n  older, traditional \"browser globals\" scripts that do not use define()\n  to declare the dependencies and set a module value.</p>\n</blockquote>\n\n<p><strong>- Configuring dependencies</strong></p>\n\n<p>Lets say you have 2 javascript modules(moduleA and moduleB) and one of them(moduleA) depends on the other(moduleB). Both of these are necessary for your own module so you specify the dependencies in require() or define()</p>\n\n<pre><code>require(['moduleA','moduleB'],function(A,B ) {\n    ...\n}\n</code></pre>\n\n<p>But since require itself follow AMD, you have no idea which one would be fetched early. This is where shim comes to rescue.</p>\n\n<pre><code>require.config({\n    shim:{\n       moduleA:{\n         deps:['moduleB']\n        } \n    }\n\n})\n</code></pre>\n\n<p>This would make sure moduleB is always fetched before moduleA is loaded.</p>\n\n<p><strong>- Configuring exports</strong>    </p>\n\n<p>Shim export tells RequireJS what member on the global object (the window, assuming you're in a browser, of course) is the actual module value. Lets say moduleA adds itself to the <code>window</code> as 'modA'(just like jQuery and underscore does as $ and _ respectively), then we make our exports value 'modA'. </p>\n\n<pre><code>require.config({\n    shim:{\n       moduleA:{\n         exports:'modA'\n        } \n    }\n</code></pre>\n\n<p>It will give RequireJS a local reference to this module. The global modA will still exist on the page too.</p>\n\n<p><strong>-Custom initialization for older \"browser global\" scripts</strong></p>\n\n<p>This is probably the most important feature of shim config which allow us to add 'browser global', 'non-AMD' scripts(that do not follow modular pattern either) as dependencies in our own module.</p>\n\n<p>Lets say moduleB is plain old javascript with just two functions funcA() and funcB().</p>\n\n<pre><code>function funcA(){\n    console.log(\"this is function A\")\n}\nfunction funcB(){\n    console.log(\"this is function B\")\n}\n</code></pre>\n\n<p>Though both of these functions are available in window scope, RequireJS recommends us to use them through their global identifier/handle to avoid confusions. So configuring the shim as</p>\n\n<pre><code>shim: {\n    moduleB: {\n        deps: [\"jquery\"],\n        exports: \"funcB\",\n        init: function () {\n            return {\n                funcA: funcA,\n                funcB: funcB\n            };\n        }\n    }\n}\n</code></pre>\n\n<p>The return value from init function is used as the module export value instead of the object found via the 'exports' string. This will allow us to use funcB in our own module as</p>\n\n<pre><code>require([\"moduleA\",\"moduleB\"], function(A, B){\n    B.funcB()\n})\n</code></pre>\n\n<p>Hope this helped.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>i read the <strong>requirejs</strong> document from here <a href=\"http://requirejs.org/docs/api.html#config-shim\">api</a></p>\n\n<pre><code>requirejs.config({\n    shim: {\n        'backbone': {\n            //These script dependencies should be loaded before loading\n            //backbone.js\n            deps: ['underscore', 'jquery'],\n            //Once loaded, use the global 'Backbone' as the\n            //module value.\n            exports: 'Backbone'\n        },\n        'underscore': {\n            exports: '_'\n        },\n        'foo': {\n            deps: ['bar'],\n            exports: 'Foo',\n            init: function (bar) {\n                //Using a function allows you to call noConflict for\n                //libraries that support it, and do other cleanup.\n                //However, plugins for those libraries may still want\n                //a global. \"this\" for the function will be the global\n                //object. The dependencies will be passed in as\n                //function arguments. If this function returns a value,\n                //then that value is used as the module export value\n                //instead of the object found via the 'exports' string.\n                return this.Foo.noConflict();\n            }\n        }\n    }\n});\n</code></pre>\n\n<p>but i am not getting <strong>shim</strong> part of it.\nwhy should i use shim and how should i configure, can i get some more clarification </p>\n\n<p>please can any one explain with example why and when should we use shim.\nthanks.</p>\n",
            "last_activity_date": 1424772140,
            "question_id": 15471088,
            "score": 40,
            "tags": [
                "javascript",
                "requirejs",
                "amd"
            ],
            "title": "Requirejs why and when to use shim config"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The second one doesn't really create an instance, it simply returns an object. That means you can't take advantage of operators like <code>instanceof</code>. Eg. with the first case you can do <code>if (myBook instanceof Book)</code> to  check if the variable is a type of Book, while with the second example this would fail.</p>\n\n<p>If you want to specify your object methods in the constructor, this is the proper way to do it:</p>\n\n<pre><code>function Book(title) {\n    this.title = title;\n\n    this.getTitle = function () {\n        return this.title;\n    };\n}\n\nvar myBook = new Book('War and Peace');\nalert(myBook.getTitle())\n</code></pre>\n\n<p>While in this example the both behave the exact same way, there are differences. With closure-based implementation you can have private variables and methods (just don't expose them in the <code>this</code> object). So you can do something such as:</p>\n\n<pre><code>function Book(title) {\n    var title_;\n\n    this.getTitle = function() {\n        return title_;\n    };\n\n    this.setTitle = function(title) {\n        title_ = title;\n    };\n\n    // should use the setter in case it does something else than just assign\n    this.setTitle(title);\n}\n</code></pre>\n\n<p>Code outside of the Book function can not access the member variable directly, they have to use the accessors.</p>\n\n<p>Other big difference is performance; Prototype based classing is usually much faster, due to some overhead included in using closures. You can read about the performance differences in this article: <a href=\"http://blogs.msdn.com/b/kristoffer/archive/2007/02/13/javascript-prototype-versus-closure-execution-speed.aspx\">http://blogs.msdn.com/b/kristoffer/archive/2007/02/13/javascript-prototype-versus-closure-execution-speed.aspx</a></p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>The former method is how JavaScript was intended to be used. The latter is the more modern technique, popularised in part by Douglas Crockford. This technique is much more flexible.</p>\n\n<p>You could also do:</p>\n\n<pre><code>function Book(title) {\n    return {\n        getTitle: function () {\n            return title;\n        }\n    }\n}\n</code></pre>\n\n<p>The returned object would just have an accessor called <code>getTitle</code>, which would return the argument, held in closure.</p>\n\n<p>Crockford has a good page on <a href=\"http://javascript.crockford.com/private.html\">Private Members in JavaScript</a> - definitely worth a read to see the different options.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>here is an article <a href=\"http://mckoss.com/jscript/object.htm\" rel=\"nofollow\">about this</a>\nin general Book inharets from Book.prototype. In first example you add function to getTitle Book.prototype </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It's also a little bit about <em>re-usability under the hood</em>. In the first example with the <code>Function.prototype</code> property usage all the instances of the Book function-object will share the same copy of the <code>getTitle</code> method. While the second snippet will make the <code>Book</code> function execution create and keep in the heap 'bookshelf' different copies of the local <em>closurable</em> <code>book</code> object.</p>\n\n<pre><code>function Book(title) {\n    var book = {\n        title: title\n    };\n    book.getTitle = function () {\n        return this.title += '#';\n    };\n    return book;\n}\n\nvar myBook = Book('War and Peace');\nvar myAnotherBook = Book('Anna Karenina');\nalert(myBook.getTitle()); // War and Peace#\nalert(myBook.getTitle()); // War and Peace##\nalert(myAnotherBook.getTitle()); // Anna Karenina#\nalert(myBook.getTitle());// War and Peace###\n</code></pre>\n\n<p>The prototype members exist in the only copy for all the <code>new</code> instances  of the object on the other hand. So this is one more subtle difference between them that is not very obvious from the first sigh due to the closure trick.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm curious what the difference is between the following OOP javascript techniques. They seem to end up doing the same thing but is one considered better than the other?</p>\n\n<pre><code>function Book(title) {\n    this.title = title;\n}\n\nBook.prototype.getTitle = function () {\n    return this.title;\n};\n\nvar myBook = new Book('War and Peace');\nalert(myBook.getTitle())\n</code></pre>\n\n<p>vs</p>\n\n<pre><code>function Book(title) {\n    var book = {\n        title: title\n    };\n    book.getTitle = function () {\n        return this.title;\n    };\n    return book;\n}\n\nvar myBook = Book('War and Peace');\nalert(myBook.getTitle())\n</code></pre>\n",
            "last_activity_date": 1370508744,
            "question_id": 3564238,
            "score": 36,
            "tags": [
                "javascript",
                "oop"
            ],
            "title": "Object oriented javascript with prototypes vs closures"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>UPDATE: Now there is a gem that does this for you: <a href=\"https://github.com/railsware/js-routes\" rel=\"nofollow\">js-routes</a></p>\n\n<hr>\n\n<p>The problem is that Sprockets is evaluating the ERB outside of the context of your Rails app, and most of the stuff you're expecting isn't there.</p>\n\n<p>I can make some of them work like this:</p>\n\n<pre><code>&lt;% url = MyRailsApp::Application.routes.url_helpers %&gt;\n\nvar events_path = \"&lt;%= url.events_path %&gt;\";\n</code></pre>\n\n<p>That's all well and good, but getting the helpers that require an id to work is a little trickier. I'm going to use a technique called a <a href=\"http://tools.ietf.org/html/rfc6570\" rel=\"nofollow\">URI Template</a>:</p>\n\n<pre><code>var event_path = \"&lt;%= CGI.unescape url.event_path('{event_id}') %&gt;\";\n</code></pre>\n\n<p>which returns <code>/events/{event_id}</code> which you could render into a url using an object like <code>{ event_id: 1 }</code>. See SugarJS's <a href=\"http://sugarjs.com\" rel=\"nofollow\">String#assign</a> method as example implementation of this. You could also <a href=\"https://github.com/lyconic/jquery.rest/blob/master/jquery.rest.js#L77\" rel=\"nofollow\">roll your own</a> like I did.</p>\n",
                    "is_accepted": true,
                    "score": 67
                },
                {
                    "body": "<p>You could move the file to views where it has access to the proper context, then pull it down to the client from a JS source tag.  Referring to MyRailsApp::Application.routes.url_helpers may not be the best if you are writing an engine.  </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>using Rails 3.1.0.rc4, I'm trying to access a route helper in a javascript file (event.js.erb in this case) and it seems like they are not loaded at that moment. When requesting the merged /assets/application.js file, I get:</p>\n\n<pre><code>throw Error(\"NameError: undefined local variable or method `events_path' for #&lt;#&lt;Class:0x00000001580010&gt;:0x00000003191510&gt;\\n  (in /&lt;...&gt;/app/assets/javascripts/event.js.erb)\")\n</code></pre>\n\n<p>Any idea how to access the route helper in there?</p>\n",
            "last_activity_date": 1425950126,
            "question_id": 6725629,
            "score": 35,
            "tags": [
                "javascript",
                "ruby-on-rails-3",
                "assets",
                "asset-pipeline"
            ],
            "title": "Route helpers in asset pipeline"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>Put jQuery and your jQuery dependent code at the end of your HTML file.</p>\n\n<p>Edit:  A little more clear</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;&lt;/head&gt;\n&lt;body&gt;\n    &lt;!-- Your normal content here --&gt;\n    &lt;script type=\"text/javascript\" src=\"http://path/to/jquery/jquery.min.js\"&gt;&lt;/script&gt;\n    &lt;script&gt;//Put your jQuery code here&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The following code should load your scripts after the window is finished loading:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;script&gt;\n    var jQueryLoaded = false;\n    function test() {\n        var myScript = document.createElement('script');\n        myScript.type = 'text/javascript';\n        myScript.async = true;\n        myScript.src = jQueryLoaded ? 'http://ajax.googleapis.com/ajax/libs/jquery/1.5.1/jquery.js' : 'http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.11/jquery-ui.min.js';\n        document.body.appendChild(myScript);\n\n        if(!jQueryLoaded){\n            alert('jquery was loaded');\n            jQueryLoaded = true;\n            test();\n        } else {\n            alert('jqueryui was loaded');   \n        }\n    }\n\n    if (window.addEventListener){\n        alert('window.addEventListener');\n        window.addEventListener(\"load\", test, false);\n    } else if (window.attachEvent){\n        alert('window.attachEvent');\n        window.attachEvent(\"onload\", test);\n    } else{\n        alert('window.onload');\n        window.onload = test;\n    }\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;p&gt;Placeholder text goes here&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Worked for me in Chrome, FF and IE9 - let me know if that helps</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Well it seems to me, all you have to do is either a) add the jQuery code you want to run on load, to the end of the jQuery file or b) append it to the <code>downloadJSAtOnload</code> function like so:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n // Add a script element as a child of the body\n function downloadJSAtOnload() {\n var element = document.createElement(\"script\");\n element.src = \"deferredfunctions.js\";\n document.body.appendChild(element);\n $(\"#tabs\").tabs(); // &lt;==== NOTE THIS. This should theoretically run after the\n                    // script has been appended, though you'll have to test this\n                    // because I don't know if the JavaScript above will wait for\n                    // the script to load before continuing\n }\n\n // Check for browser support of event handling capability\n if (window.addEventListener)\n window.addEventListener(\"load\", downloadJSAtOnload, false);\n else if (window.attachEvent)\n window.attachEvent(\"onload\", downloadJSAtOnload);\n else window.onload = downloadJSAtOnload;\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Appears that you just need <code>&lt;script defer&gt;</code> : <a href=\"http://www.w3schools.com/tags/att_script_defer.asp\" rel=\"nofollow\">http://www.w3schools.com/tags/att_script_defer.asp</a> </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>element.addEventListener(\"load\", function () {\n    $('#tabs').tabs()\n}, false);\n</code></pre>\n\n<p>Try that.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Try this, which is something I edited a while ago from the jQuerify bookmarklet. I use it frequently to load jQuery and execute stuff after it's loaded. You can of course replace the url there with your own url to your customized jquery. </p>\n\n<pre><code>(function() {\n    \u00a0 function getScript(url,success){\n    \u00a0 \u00a0 var script=document.createElement('script');\n    \u00a0 \u00a0 script.src=url;\n    \u00a0 \u00a0 var head=document.getElementsByTagName('head')[0],\n    \u00a0 \u00a0 \u00a0 \u00a0 done=false;\n    \u00a0 \u00a0 script.onload=script.onreadystatechange = function(){\n    \u00a0 \u00a0 \u00a0 if ( !done &amp;&amp; (!this.readyState || this.readyState == 'loaded' || this.readyState == 'complete') ) {\n    \u00a0 \u00a0 \u00a0 \u00a0 done=true;\n    \u00a0 \u00a0 \u00a0 \u00a0 success();\n    \u00a0 \u00a0 \u00a0 \u00a0 script.onload = script.onreadystatechange = null;\n    \u00a0 \u00a0 \u00a0 \u00a0 head.removeChild(script);\n    \u00a0 \u00a0 \u00a0 }\n    \u00a0 \u00a0 };\n    \u00a0 \u00a0 head.appendChild(script);\n    \u00a0 }\n        getScript('http://ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js',function(){\n            // YOUR CODE GOES HERE AND IS EXECUTED AFTER JQUERY LOADS\n        });\n    })();\n</code></pre>\n\n<p>I would really combine jQuery and jQuery-UI into one file and use a url to it. If you REALLY wanted to load them separately, just chain the getScripts:</p>\n\n<pre><code>getScript('http://myurltojquery.js',function(){\n        getScript('http://myurltojqueryUI.js',function(){\n              //your tab code here\n        })\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>Take a look <code>jQuery.holdReady()</code></p>\n\n<p>\"Holds or releases the execution of jQuery's ready event.\" (jQuery 1.6+)</p>\n\n<p><a href=\"http://api.jquery.com/jQuery.holdReady/\" rel=\"nofollow\">http://api.jquery.com/jQuery.holdReady/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's my version which supports chaining to be sure the scripts are loaded one after each other, based on <em>ampersand</em>'s code:</p>\n\n<pre><code>var deferredJSFiles = ['jquery/jquery', 'file1', 'file2', 'file3'];\nfunction downloadJSAtOnload() {\n    if (!deferredJSFiles.length)\n        return;\n    var deferredJSFile = deferredJSFiles.shift();\n    var element = document.createElement('script');\n    element.src = deferredJSFile.indexOf('http') == 0 ? deferredJSFile : '/js/' + deferredJSFile + '.js';\n    element.onload = element.onreadystatechange = function() {\n        if (!this.readyState || this.readyState == 'loaded' || this.readyState == 'complete')\n            downloadJSAtOnload();\n    };\n    document.body.appendChild(element);\n}\nif (window.addEventListener)\n    window.addEventListener('load', downloadJSAtOnload, false);\nelse if (window.attachEvent)\n    window.attachEvent('onload', downloadJSAtOnload);\nelse\n    window.onload = downloadJSAtOnload;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As this is a top ranking question on a important subject let me be so bold to provide my own take on this based on a previous answer from @valmarv and @amparsand.</p>\n\n<p>I'm using a multi-dimensional array to load the scripts. Grouping together those that have no dependencies between them:</p>\n\n<pre><code>var dfLoadStatus = 0;\nvar dfLoadFiles = [\n      [\"http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js\"],\n      [\"http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.11/jquery-ui.min.js\",\n       \"/js/somespecial.js\",\n       \"/js/feedback-widget.js#2312195\",\n       \"/js/nohover.js\"]\n     ];\n\nfunction downloadJSAtOnload() {\n    if (!dfLoadFiles.length) return;\n\n    var dfGroup = dfLoadFiles.shift();\n    dfLoadStatus = 0;\n\n    for(var i = 0; i&lt;dfGroup.length; i++) {\n        dfLoadStatus++;\n        var element = document.createElement('script');\n        element.src = dfGroup[i];\n        element.onload = element.onreadystatechange = function() {\n        if ( ! this.readyState || \n               this.readyState == 'complete') {\n            dfLoadStatus--;\n            if (dfLoadStatus==0) downloadJSAtOnload();\n        }\n    };\n    document.body.appendChild(element);\n  }\n\n}\n\nif (window.addEventListener)\n    window.addEventListener(\"load\", downloadJSAtOnload, false);\nelse if (window.attachEvent)\n    window.attachEvent(\"onload\", downloadJSAtOnload);\nelse window.onload = downloadJSAtOnload;\n</code></pre>\n\n<p>It loads first jquery after it is loaded it continue to load the other scripts at once. You can add scripts easy by adding to the array anywhere on your page:</p>\n\n<pre><code>dfLoadFiles.push([\"/js/loadbeforeA.js\"]);\ndfLoadFiles.push([\"/js/javascriptA.js\", \"/js/javascriptB.js\"]);\ndfLoadFiles.push([\"/js/loadafterB.js\"]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>&lt;!doctype html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;p&gt;If you click on the \"Hide\" button, I will disappear.&lt;/p&gt;\n        &lt;button id=\"hide\" &gt;Hide&lt;/button&gt;\n        &lt;button id=\"show\" &gt;Show&lt;/button&gt;\n\n        &lt;script type=\"text/javascript\"&gt;\n            function loadScript(url, callback) {\n\n                var script = document.createElement(\"script\")\n                script.type = \"text/javascript\";\n\n                if (script.readyState) {  //IE\n                    script.onreadystatechange = function() {\n                        if (script.readyState == \"loaded\" ||\n                                script.readyState == \"complete\") {\n                            script.onreadystatechange = null;\n                            callback();\n                        }\n                    };\n                } else {  //Others\n                    script.onload = function() {\n                        callback();\n                    };\n                }\n\n                script.src = url;\n                document.body.appendChild(script);\n            }\n            loadScript(\"http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\",\n                    function() {\n                        //YAHOO.namespace(\"mystuff\");\n                        $(\"#show\").click(function() {\n                            $(\"p\").show();\n                        });\n                        $(\"#hide\").click(function() {\n                            $(\"p\").hide();\n                        });\n\n                        //more...\n                    });\n        &lt;/script&gt;\n\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In certain situation you could fire an event when jquery is loaded. </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    (function (window) {\n\n        window.jQueryHasLoaded = false;\n\n        document.body.addEventListener('jqueryloaded', function (e) {\n            console.log('jqueryloaded ' + new Date() );\n        }, false);\n\n        function appendScript(script) {\n            var tagS = document.createElement(\"script\"), \n                s = document.getElementsByTagName(\"script\")[0];\n            tagS.src = script.src;\n            s.parentNode.insertBefore(tagS, s);\n\n            if ( script.id == 'jquery' ) {\n                tagS.addEventListener('load', function (e) {\n                    window.jQueryHasLoaded = true;\n                    var jQueryLoaded = new Event('jqueryloaded');\n                    document.body.dispatchEvent(jQueryLoaded);\n                }, false);\n            }\n        }\n\n        var scripts = [\n            {\n                'id': 'jquery',\n                'src': 'js/libs/jquery/jquery-2.0.3.min.js'\n            },\n            {\n                'src': 'js/myscript1.js'\n            },\n            {\n                'src': 'js/myscript2.js'\n            }\n        ];\n\n        for (var i=0; i &lt; scripts.length; i++) {\n            appendScript(scripts[i]);\n        }\n\n    }(window));\n&lt;/script&gt;\n</code></pre>\n\n<p>Then wrap your dependencies in a function: </p>\n\n<pre><code>// myscript1.js \n(function(){ \n\n    function initMyjQueryDependency() {\n        console.log('my code is executed after jquery is loaded!');\n        // here my code that depends on jquery\n    }\n\n    if ( jQueryHasLoaded === true )\n        initMyjQueryDependency();\n    else\n        document.body.addEventListener('jqueryloaded', initMyjQueryDependency, false);\n\n}());\n</code></pre>\n\n<p>If jquery finishes to load after the other scripts, your dependencies will be executed when the jqueryloaded event is fired. </p>\n\n<p>If jquery is already loaded, <code>jQueryHasLoaded === true</code>, your dependency will be executed <code>initMyjQueryDependency()</code>. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Load all scripts at the end of html with <a href=\"http://labjs.com\" rel=\"nofollow\">http://labjs.com</a>, it is 100% solution and I tested it many times against gtmetrix rules.  example <a href=\"http://gtmetrix.com/reports/interactio.cz/jxomHSLV\" rel=\"nofollow\">http://gtmetrix.com/reports/interactio.cz/jxomHSLV</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think Modernizr.load() is worth a mention here - it handles dependency loading very nicely</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Let's face it, jQuery/jQuery-ui is a heavy download.</p>\n\n<p>Google recommends <a href=\"http://code.google.com/speed/page-speed/docs/payload.html#DeferLoadingJS\">deferred loading of JavaScript</a> to speed up initial rendering. My page uses jQuery to set up some tabs which are placed low on the page (mostly out of initial view) and I'd like to defer jQuery until AFTER the page has rendered.</p>\n\n<p>Google's deferral code adds a  tag to the DOM after the page loads by hooking into the body onLoad event:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n // Add a script element as a child of the body\n function downloadJSAtOnload() {\n var element = document.createElement(\"script\");\n element.src = \"deferredfunctions.js\";\n document.body.appendChild(element);\n }\n\n // Check for browser support of event handling capability\n if (window.addEventListener)\n window.addEventListener(\"load\", downloadJSAtOnload, false);\n else if (window.attachEvent)\n window.attachEvent(\"onload\", downloadJSAtOnload);\n else window.onload = downloadJSAtOnload;\n\n&lt;/script&gt;\n</code></pre>\n\n<p>I'd like to defer loading of jQuery this way, but when I tried it my jQuery code failed to find jQuery (not completely unexpected on my part):</p>\n\n<pre><code>$(document).ready(function() {\n    $(\"#tabs\").tabs();\n});\n</code></pre>\n\n<p>So, it seems I need to find a way to defer execution of my jQuery code until jQuery is loaded. How do I detect that the added  tag has finished loading and parsing?</p>\n\n<p>As a corollary, it appears that <a href=\"http://code.google.com/speed/page-speed/docs/rtt.html#PreferAsyncResources\">asynchronous loading</a> may also contain an answer.</p>\n\n<p>Any thoughts?</p>\n",
            "last_activity_date": 1418859258,
            "question_id": 5852767,
            "score": 31,
            "tags": [
                "javascript",
                "jquery",
                "pagespeed"
            ],
            "title": "Possible to defer loading of jQuery?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.xstandard.com/\" rel=\"nofollow\">XStandard</a> fits most of your requirements, but it does require your clients to install a browser plug-in.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I really like <a href=\"http://tinymce.moxiecode.com/\">TinyMCE</a> which also should fit your requirements. It is well documented and offers a lot of possibilities to configure.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p><a href=\"http://ckeditor.com/\">CKEditor</a> (the next version of FCKEditor) is in beta, but looks like it might eventually be pretty nice.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Search on the JQuery homepage for a list of JQuery compatible WYSIWYG editors. There are quite a few there: <a href=\"http://plugins.jquery.com/search/node/wysiwyg%2Btype:project%5Fproject\" rel=\"nofollow\">JQuery plugins</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here is a good link to using FckEditor with MVC Framework</p>\n\n<p><a href=\"http://msmvps.com/blogs/superska/archive/2009/04/06/using-fck-editor-with-asp-net-mvc.aspx\">Using FCK Editor with ASP.NET MVC</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I really like the simplicity and extensability of <a href=\"http://markitup.jaysalvat.com/home/\" rel=\"nofollow\">markItUp!</a></p>\n\n<p>It's actually not a WYSIWYG, but we just changed from using TinyMCE to markItUp quite recently and I must say that it has been working very well!</p>\n\n<p>And best of all, it's <strong>very</strong> easy to extend.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Have a look at Aloha Editor <a href=\"http://aloha-editor.org\">http://aloha-editor.org</a> which comes with a new concept: complete frontend editing with no iframe and real WYSIWYG.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Was wondering what the best WYSIWYG editor that I can embed in a web-site based on the ASP.NET MVC Framework? Ideally it should be Xhtml compliant and allow users to embed images etc.</p>\n\n<p>The only one I've used before is the <a href=\"http://www.fckeditor.net/\">FCKEditor</a>, how well does this work with the MVC - has anyone tried...?</p>\n\n<p>My main requirements are:</p>\n\n<ul>\n<li>Xhtml compliance</li>\n<li>Deprecate (as best it can) when Javascript is disabled</li>\n<li>Modify the toolbar options</li>\n<li>Skinable (at least easily change the look and feel)</li>\n<li>Easy to use client side api</li>\n<li>Plays nicely with the ASP.NET MVC framework</li>\n</ul>\n\n<p><strong>Edit:</strong></p>\n\n<p>As <a href=\"http://stackoverflow.com/questions/590960/whats-the-best-wysiwyg-editor-when-using-the-asp-net-mvc-framework/591025#591025\">Nick</a> said, the <a href=\"http://www.xstandard.com/\">XStandard</a> editor is good, but requires a plug-in...what are your thoughts on requiring a plug-in for web-site functionality?</p>\n\n<p>Thanks,<br />\nKieron</p>\n\n<p><strong>Additional info:</strong></p>\n\n<p>As <a href=\"http://stackoverflow.com/questions/590960/whats-the-best-wysiwyg-editor-when-using-the-asp-net-mvc-framework/591037#591037\">Hippo</a> answered, the TinyMCE edit is ideal - for completness here's there download page:</p>\n\n<p><a href=\"http://tinymce.moxiecode.com/download.php\">http://tinymce.moxiecode.com/download.php</a></p>\n\n<p>There's a download for .NET, JSP, ColdFusion, PHP and a jQuery plug-in too.\nAlso, there are language packs available.</p>\n\n<p>Been using it for a while now, best editor I've used. Thanks all!</p>\n",
            "last_activity_date": 1293227063,
            "question_id": 590960,
            "score": 25,
            "tags": [
                "javascript",
                "asp.net-mvc",
                "xhtml",
                "wysiwyg"
            ],
            "title": "What&#39;s the best WYSIWYG editor when using the ASP.NET MVC Framework?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>When the browser first loads, it always fires a popstate event. So you need to determine if this popstate is yours or not.</p>\n\n<p>When you do your pushState, make sure you have a state object. That way you can check it later.</p>\n\n<p>Then on the popstate handler, check the state object :)</p>\n\n<pre><code>$(function() {\n    $(window).bind(\"popstate\", function(data) {\n        if (data.state.isMine)\n            $.getScript(location.href); \n    });\n});\n\n// then add the state object\nhistory.pushState({isMine:true},title,url);\n</code></pre>\n\n<p>Let me know if you need any more help :)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>When the popstate event is fired on page load it will not have a state property in the event object.  This allows you to check if the event is fired for a page load or not.</p>\n\n<pre><code>window.onpopstate = function (event) {\n  if (event.state) {\n    // do your thing\n  } else {\n    // triggered by a page load\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Using the native HTML5 History API you're going to run into some problems, every HTML5 browser handles the API a little bit differently so you can't just code it once and expect it to work without implementing workarounds. <a href=\"https://github.com/browserstate/history.js\">History.js</a> provides a cross-browser API for the HTML5 History API and a optional <code>hashchange</code> fallback for HTML4 browsers if you want to go down that route.</p>\n\n<p>For upgrading your website into a RIA/Ajax-Application you can use this code snippet:\n<a href=\"https://github.com/browserstate/ajaxify\">https://github.com/browserstate/ajaxify</a></p>\n\n<p>Which is part of the longer article <a href=\"https://github.com/browserstate/history.js/wiki/Intelligent-State-Handling\">Intelligent State Handling</a> which goes into explanations about hashbang, hashes and the html5 history api.</p>\n\n<p>Let me know if you need any further help :) Cheers.</p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>You need to get the event.originalEvent</p>\n\n<pre><code>// Somewhere in your previous code\nif (history &amp;&amp; history.pushState) {\n  history.pushState({module:\"leave\"}, document.title, this.href);\n}\n\n\n$(window).bind(\"popstate\", function(evt) {\n  var state = evt.originalEvent.state;\n  if (state &amp;&amp; state.module === \"leave\") {\n    $.getScript(location.href);\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                }
            ],
            "body": "<p>Hello\nI'm working on a site that serves content via ajax (Im using ruby on rails btw)</p>\n\n<p>if you click an item in the menu, a content div gets updated with $.get response, nothing fancy</p>\n\n<p>I'm implementing history.pushState to allow navigation with the browser's back/forward button</p>\n\n<p>I have the following to load content on history navigation:</p>\n\n<pre><code>$(function() {\n    $(window).bind(\"popstate\", function() {\n        $.getScript(location.href); \n    });\n});\n</code></pre>\n\n<p>the problem is, when a page is loaded for the first time, this function does $.getScript so the page is loaded immediately again,\nas I mentioned before, I'm using ruby on rails, so the first time the site is loaded it renders the html view, then on the second load it renders the js view, since its a js request</p>\n\n<p>how could I prevent this event from firing on pages with html requests?</p>\n",
            "last_activity_date": 1372620344,
            "question_id": 5210034,
            "score": 21,
            "tags": [
                "javascript",
                "jquery",
                "ruby-on-rails",
                "history",
                "getscript"
            ],
            "title": "history.pushState"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>1) Yes your code is right.</p>\n\n<p>2) I use functions defined within the constructor function when I want to access other members defined privately inside the scope of the constructor function itself, for example, when you want to create <a href=\"http://www.crockford.com/javascript/private.html\" rel=\"nofollow\">privileged methods</a>. </p>\n\n<p>Public functions defined on the constructor function, are more computationally expensive than adding a simple function to the object prototype, but they also give you much more flexibility.</p>\n\n<p>3) Yes, if the property is public you are able to access it by using the <code>this</code> keyword inside of a prototype extended function, since <code>this</code> refers to the instance of your object.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Regarding the second point, you extend the prototype so that all the already created objects get the new method.</p>\n\n<p>Also, allows you to add methods to the built-in objects (like adding <code>trim()</code> to <code>string</code>).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can actually add another level of privilege via wrapping the whole thing in a self-executing function:</p>\n\n<pre><code>var MyObj = (function() { // scoping\n    var privateSharedVar = 'foo';\n\n    function privateSharedFunction() {\n        // has access to privateSharedVar\n        // may also access publicSharedVar via explicit MyObj.prototype\n        // can't be called via this\n    }\n\n    function MyObj() { // constructor\n        var privateInstanceVar = 'bar';\n        this.publicInstanceVar = 'baz';\n\n        function privateInstanceFunction() {\n            // has access to all vars\n            // can't be called via this\n        };\n\n        this.publicInstanceMethod = function() {\n            // has access to all vars\n            // also known as a privileged method\n        };\n    }\n\n    MyObj.prototype.publicSharedVar = 'quux';\n\n    MyObj.prototype.publicSharedMethod = function() {\n        // has access to shared and public vars\n        // canonical way for method creation:\n        // try to use this as much as possible\n    };\n\n    return MyObj;\n})();\n</code></pre>\n\n<p>Only 'public' properties can be accessed from outside via <code>this</code>.</p>\n\n<p>For performance reasons, you should avoid what I called 'instance' methods: For each of these, a new function object must be created for each <code>MyObject</code> instance, whereas there's only a single function object per 'shared' method.</p>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<blockquote>\n  <p>Are these correct?</p>\n</blockquote>\n\n<p>Err. Well, it depends what you want to do. There is no one accepted canonical model for implementing class/instance-style inheritance in JavaScript.</p>\n\n<p>But this:</p>\n\n<blockquote>\n<pre><code>    if (propOne)\n</code></pre>\n</blockquote>\n\n<p>Is probably a mistake, in that <code>this.propOne</code> is a property of the owner object, whereas <code>propOne</code> by itself is a variable that hasn't been declared (this defaults to a global variable, but is usually a wrongness).</p>\n\n<blockquote>\n  <p>In what cases should one put functions on the prototype (e.g. protoFunc) vs. in the constructor (e.g. publicInstanceFunc)?</p>\n</blockquote>\n\n<p>A function set on the prototype is the same function shared amongst all objects. The only way it can work out what instance it belongs to is by reading \u2018this\u2019 when it is called.</p>\n\n<p>A function set on \u2018this\u2019 in the constructor is a new function for every instance of the <code>MyObj</code>. You can possibly use this as an alternative way to bind to the owner object based on closures instead of \u2018this\u2019, which can save writing out function-binding stuff. It's a different style of object-orientation which normally you wouldn't mix with the this-based style.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/310870/use-of-prototype-vs-this-in-javascript\">Use of &#39;prototype&#39; vs. &#39;this&#39; in Javascript?</a>  </p>\n</blockquote>\n\n\n\n<p>My understanding of the different kinds of JavaScript functions are as follows:</p>\n\n<pre><code>function MyObj() {\n    this.propOne = true;\n    this.publicInstanceFunc = function() {\n        if (propOne)\n            return 'public instance function';\n    }\n    function privateFunc() {\n        return 'private function only visible inside this constructor';\n    }\n}\n\nMyObj.prototype.protoFunc = function() {\n    if (this.propOne)\n        return 'prototype function shared amongst all instances of MyObj';\n}\n</code></pre>\n\n<ol>\n<li>Are these correct?</li>\n<li>In what cases should one put functions on the prototype (e.g. <code>protoFunc</code>) vs. in the constructor (e.g. <code>publicInstanceFunc</code>)?</li>\n<li>Is using <code>this</code> the correct way to access properties inside prototype functions?</li>\n</ol>\n",
            "last_activity_date": 1361367179,
            "question_id": 1441212,
            "score": 21,
            "tags": [
                "javascript",
                "syntax",
                "prototype-programming"
            ],
            "title": "JavaScript instance functions versus prototype functions"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>If you use the <code>overflow:hidden</code> hack on the <code>&lt;body&gt;</code> element, to get back normal scrolling behavior, you can position a <code>&lt;div&gt;</code> absolutely inside of the  element to get scrolling back with <code>overflow:auto</code>. I think this is the best option, and it's quite easy to implement using only css!</p>\n\n<p>Or, you can try with jQuery:</p>\n\n<pre><code>$(document).bind(\n'touchmove',\nfunction(e) {\ne.preventDefault();\n}\n);\n</code></pre>\n\n<p>Same in javasrcipt:</p>\n\n<pre><code>document.addEventListener(\n'touchmove',\nfunction(e) {\ne.preventDefault();\n},\nfalse\n);\n</code></pre>\n\n<p>Last option, check <a href=\"http://stackoverflow.com/questions/7768269/ipad-safari-disable-scrolling-and-bounce-effect\">ipad safari: disable scrolling, and bounce effect?</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>You can achieve this more universally by applying the following CSS:</p>\n\n<pre><code>html,\nbody {\n  height: 100%;\n  width: 100%;\n  overflow: auto;\n}\n</code></pre>\n\n<p>This allows your content, whatever it is, to become scrollable within <code>body</code>, but be aware that the scrolling context where <code>scroll</code> event is fired is now <code>document.body</code>, not <code>window</code>.</p>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>None of the 'overflow' solutions worked for me. I'm coding a parallax effect with JavaScript using jQuery. In Chrome and Safari on OSX the elastic/rubber-band effect was messing up my scroll numbers, since it actually scrolls past the document's height and updates the window variables with out-of-boundary numbers. What I had to do was check if the scrolled amount was larger than the actual document's height, like so:</p>\n\n<pre><code>$(window).scroll(\n    function() {\n        if ($(window).scrollTop() + $(window).height() &gt; $(document).height()) return;\n        updateScroll(); // my own function to do my parallaxing stuff\n    }\n);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I made an extension to disable it on all sites. In doing so I used three techniques: pure CSS, pure JS and hybrid.</p>\n\n<p>The CSS version is similar to the above solutions. The JS one goes a bit like this:</p>\n\n<pre><code>var scroll = function(e) {\n    // compute state\n    if (stopScrollX || stopScrollY) {\n        e.preventDefault();              // this one is the key\n        e.stopPropagation();\n        window.scroll(scrollToX, scrollToY);\n    }\n}\n\ndocument.addEventListener('mousewheel', scroll, false);\n</code></pre>\n\n<p>The CSS one works when one is using position: fixed elements and let the browser do the scrolling. The JS one is needed when some other JS depends on window (e.g events), which would get blocked by the previous CSS (since it makes the body scroll instead of the window), and works by stopping event propagation at the edges, but needs to synthesize the scrolling of the non-edge component; the downside is that it prevents some types of scrolling to happen (those do work with the CSS one). The hybrid one tries to take a mixed approach by selectively disabling directional overflow (CSS) when scrolling reaches an edge (JS), and in theory could work in both cases, but doesn't quite currently as it has some leeway at the limit.</p>\n\n<p>So depending on the implementations of one's website, one needs to either take one approach or the other.</p>\n\n<p>See here if one wants more details: <a href=\"https://github.com/lloeki/unelastic\" rel=\"nofollow\">https://github.com/lloeki/unelastic</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You could check if the scroll-offsets are in the bounds. If they go beyond, set them back.</p>\n\n<pre><code>var scrollMinX = 0;\nvar scrollMinY = 0;\nvar scrollMaxX = document.body.scrollWidth - window.innerWidth;\nvar scrollMaxY = document.body.scrollHeight - window.innerHeight;\n\n// make sure that we work with the correct dimensions\nwindow.onresize = function () {\n    scrollMaxX = document.body.scrollWidth - window.innerWidth;\n    scrollMaxY = document.body.scrollHeight - window.innerHeight;\n};\n\n// where the magic happens\ndocument.onscroll = function () {    \n    if (window.scrollX &lt;= scrollMinX) scrollTo(scrollMinX, window.scrollY);\n    if (window.scrollX &gt;= scrollMaxX) scrollTo(scrollMaxX, window.scrollY);\n\n    if (window.scrollY &lt;= scrollMinY) scrollTo(window.scrollX, scrollMinY);\n    if (window.scrollY &gt;= scrollMaxY) scrollTo(window.scrollX, scrollMaxY);\n};\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/yckart/3YnUM/\" rel=\"nofollow\">http://jsfiddle.net/yckart/3YnUM/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I just wanted to <strong>diable the elastic scrolling/bounce effect</strong> in Safari (OSX Lion).</p>\n\n<p>I found the solution to set <code>overflow: hidden</code> for body in css, but as expected it only <strong>disables the scrollbar</strong>, so if the website is \"longer\" than the screen you <em>won't be able to scroll!</em></p>\n\n<p>Any solutions or hints are welcome!\nThanks!</p>\n",
            "last_activity_date": 1415726957,
            "question_id": 8150191,
            "score": 17,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "safari",
                "osx-lion"
            ],
            "title": "Disable elastic scrolling in Safari"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Server side javascript code is completely closed source. No-one can read it.</p>\n\n<p>Client side javascript code is completely open source. Everyone can read it.</p>\n\n<p>For the latter you can do nothing but the same applies for RoR, ASP.NET, PHP, etc.</p>\n\n<p>The actual server code is closed unless you publicly make it available.</p>\n\n<p>If your making a library and trying to sell it as 3rd party source then it's open and can be stolen. Of course you can sue them for copyright breach. </p>\n\n<p>There are various big companies like <a href=\"http://www.sencha.com/products/extjs/\" rel=\"nofollow\">extjs</a> which sell libraries which could be stolen that's why what they actually sell you is the code and a support service.</p>\n\n<p>Most commercial projects build on node are services.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There is no way you can be absolutely sure that nobody will be able to read your code. You could use obfuscation or minification, which can make it significantly harder to decode your code, though. One example of an obfuscator/minifier is Google's <a href=\"http://code.google.com/intl/de-DE/closure/compiler/\" rel=\"nofollow\">Closure Compiler</a> for JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>you can use <a href=\"https://github.com/evanw/packer\" rel=\"nofollow\" title=\"Packer for nodejs\">packer</a> for nodejs for obfuscate your script...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just include a license agreement and give them the source code. They might want to customize it anyway.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>To be very clear, client-side Javascript (as downloaded from a remote server into a standard web browser) cannot be protected from viewing and/or modification no matter how you obfuscate it since reconstruction (\"de-obfuscation\") of the original source is technically trivial. (Javascript obfuscation is simply another example of the widely used security misnomer \"security through obscurity\".)</p>\n\n<p>If you wish to use Javascript and Node.js to provide a protected \"product\" (which in this context is an application or service requiring installation on a server your company does not control), you cannot secure it either as the only option available to you (obfuscation) provides no such protection.</p>\n\n<p>It should be noted that even if your product is provided as a binary executable that is no guarantee you can protect the intellectual property it contains as any binary can be decompiled into an understandable format. In this case, we enjoy some level of security based on the excessive resources (time/expertise) required to convert low-level machine code (as provided by decompilation) into the higher-level logic constructs used by modern programming languages. (This from one who once decompiled CP/M into an understanding of its internal design by hand. ;)</p>\n\n<p>All however is not lost: if we assume that one can protect intellectual property programmatically (the jury is still out on this one), there is a way to provide a Node.js-based product in a secure fashion, but it is not for the technically unadventurous as it would require substantial refactoring of the Node.js source code (to add support for cryptographically secure libraries and remove--or otherwise protect--object reflection for your proprietary libraries.)</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You could accomplish this with a NativeExtension for node</p>\n\n<p>You'd have a <code>boostrap.js</code> file that adds a extension handler for .jse files</p>\n\n<pre><code>// register extension\nrequire.extensions[\".jse\"] = function (m) {\n m.exports = MyNativeExtension.decrypt(fs.readFileSync(m.filename));\n};\n\nrequire(\"YourCode.jse\");\n</code></pre>\n\n<p><code>YourCode.jse</code> would be the encrypted version of your source code (the key for decryption wouldn't be anywhere in plain-text because the decryption process takes place in the native extension).</p>\n\n<p>Now you have your NativeExtensions <code>decrypt</code> function transform the source back to javascript. Just have your build process create encrypted <code>.jse</code> versions of all your files and release those to your customers. They'd also need the native extension but now you've made it a little harder to modify your code without too much effort. You can even make the native extension call home and check license information to prevent help prevent piracy (keep in mind this won't stop piracy, there's no solution for that).</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Package your core logic into modules.. these modules can be built then run through <a href=\"https://developers.google.com/closure/compiler/\" rel=\"nofollow\">Google's closure</a>. You could even be able to do this as a <a href=\"https://github.com/thanpolas/grunt-closure-tools\" rel=\"nofollow\">Grunt task</a> as part of your build process.</p>\n\n<p>It's an old question but worth pointing out.  Note: nothing you do will truly hide your code, but neither will anything shipped via .Net (C#) or Java for that matter.  In general, simply using a tool like uglify, or closure should be enough of an obfuscation point.  By being modular and using closure you can actually do a lot of optimizations that otherwise would be difficult.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://jxcore.com\" rel=\"nofollow\">JXcore</a> (node.js 0.11.X distro) has its own JX packaging feature that secure the source code and assets. You can even select whether that particular package can be used from other applications or not. (standalone OR library)</p>\n\n<p>Let's say you have many JS etc. files and the entry point to your module is something like;</p>\n\n<pre><code>exports.doThis = function() { ...... };\n</code></pre>\n\n<p>if you simply call the method below and compile it to JX package, the source code will be safe.</p>\n\n<pre><code>jxcore.utils.hideMethod(exports.doThis);\n</code></pre>\n\n<p>this is (method hiding) would only required for the entry file since all the other sub JS files not reachable from the calling application.</p>\n\n<p>You need JXcore to run JX packages.</p>\n\n<p>More information is available from <a href=\"http://jxcore.com/packaging-code-protection/\" rel=\"nofollow\">JXcore</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As I have just completed a huge pure Nodejs project in 80+ files I had the same problem as OP. I needed at least a minimal protection for my hard work, but it seems this very basic need had not been covered by the NPMjs OS community. Add salt to injury the JXCore package encryption system was cracked last week in a few hours so back to obfuscation...</p>\n\n<p>So I created the complete solution, that handles file merging, uglifying. You have the option of leaving out specified files/folders as well from merging. These files are then copied to the new output location of the merged file and references to them are rewritten auto.</p>\n\n<p><a href=\"https://www.npmjs.org/package/node-uglifier\" rel=\"nofollow\">NPMjs link of node-uglifier</a></p>\n\n<p><a href=\"https://github.com/zsoltszabo/node-uglifier\" rel=\"nofollow\">Github repo of of node-uglifier</a></p>\n\n<p>PS: I would be glad if people would contribute to make it even better. This is a war between thieves and hard working coders like yourself. Lets join our forces, increase the pain of reverse engineering!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use <a href=\"http://enclosejs.com\" rel=\"nofollow\">EncloseJS</a> - compiler for node.js projects. It really compiles JavaScript to native code, and your sources are not included to binary.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to use node.js in my next project, but my boss does not like that our competitors can read the source code.</p>\n\n<p>Is there a way to protect the JavaScript code?</p>\n",
            "last_activity_date": 1424107850,
            "question_id": 5951302,
            "score": 17,
            "tags": [
                "javascript",
                "node.js",
                "code-protection"
            ],
            "title": "node.js - Code Protection?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Dividing the number by its absolute value also gives its sign. Using the short-circuiting logical AND operator allows us to special-case <code>0</code> so we don't end up dividing by it:</p>\n\n<pre><code>var sign = number &amp;&amp; number / Math.abs(number);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>You could bit shift the number and check the Most Significant Bit (MSB). If the MSB is a 1 then the number is negative.  If it is 0 then the number is positive (or 0).  </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>More elegant version of fast solution:</p>\n\n<pre><code>var sign = number?number&lt;0?-1:1:0\n</code></pre>\n\n<p>Regards</p>\n",
                    "is_accepted": true,
                    "score": 52
                },
                {
                    "body": "<p>The function you're looking for is called <a href=\"http://en.wikipedia.org/wiki/Signum_function\">signum</a>, and the best way to implement it is:</p>\n\n<pre><code>function sgn(x) {\n  return (x &gt; 0) - (x &lt; 0);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>I just was about to ask the same question, but came to a solution before i was finished writing, saw this Question already existed, but didn't saw this solution.</p>\n\n<p><code>(n &gt;&gt; 31) + (n &gt; 0)</code></p>\n\n<p><em>it seems to be faster by adding a ternary though <code>(n &gt;&gt; 31) + (n&gt;0?1:0)</code></em></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Should this not support JavaScript\u2019s (ECMAScript\u2019s) signed zeroes? It seems to work when returning x rather than 0 in the \u201cmegafast\u201d function:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function sign(x) {\n    return typeof x === 'number' ? x ? x &lt; 0 ? -1 : 1 : x === x ? x : NaN : NaN;\n}\n</code></pre>\n\n<p>This makes it compatible with a draft of <a href=\"http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.sign\">ECMAScript\u2019s Math.sign</a> (<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\">MDN</a>):</p>\n\n<blockquote>\n  <p>Returns the sign of the x, indicating whether x is positive, negative or zero.</p>\n  \n  <ul>\n  <li>If x is NaN, the result is NaN.</li>\n  <li>If x is \u22120, the result is \u22120.</li>\n  <li>If x is +0, the result is +0.</li>\n  <li>If x is negative and not \u22120, the result is \u22121.</li>\n  <li>If x is positive and not +0, the result is +1.</li>\n  </ul>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>var sign = number &gt;&gt; 31 | -number &gt;&gt;&gt; 31;\n</code></pre>\n\n<p>Superfast if you do not need Infinity, found in openjdk-7 source: java.lang.Integer.signum()</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Very similar to Martijn's answer is</p>\n\n<pre><code>function sgn(x) {\n    isNaN(x) ? NaN : (x === 0 ? x : (x &lt; 0 ? -1 : 1));\n}\n</code></pre>\n\n<p>I find it more readable. Also (or, depending on your point of view, however), it also groks things that can be interpreted as a number; e.g., it returns <code>-1</code> when presented with <code>'-5'</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I thought I'd add this just for fun:</p>\n\n<pre><code>function sgn(x){\n  return 2*(x&gt;0)-1;\n}\n</code></pre>\n\n<p>0 and NaN will return -1<br>works fine on +/-Infinity</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Wonder if there are any nontrivial ways of finding number's sign (<a href=\"http://en.wikipedia.org/wiki/Signum_function\">signum function</a>)?<br>\nMay be shorter / faster / more elegant solutions than the obvious one</p>\n\n<pre><code>var sign = number &gt; 0 ? 1 : number &lt; 0 ? -1 : 0;\n</code></pre>\n\n<hr>\n\n<h2>Short excerpt</h2>\n\n<p>Use this and you'll be safe and fast</p>\n\n<pre><code>function sign(x) {\n    return typeof x === 'number' ? x ? x &lt; 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\n}\n</code></pre>\n\n<hr>\n\n<h2>Results</h2>\n\n<p>For now we have these solutions:</p>\n\n<hr>\n\n<p><strong>1.</strong> Obvious and fast</p>\n\n<pre><code>function sign(x) { return x &gt; 0 ? 1 : x &lt; 0 ? -1 : 0; }\n</code></pre>\n\n<hr>\n\n<p><strong>1.1.</strong> Modification from <a href=\"/users/854291/kbec\">kbec</a> - one type cast less, more performant, shorter <strong>[fastest]</strong></p>\n\n<pre><code>function sign(x) { return x ? x &lt; 0 ? -1 : 1 : 0; }\n</code></pre>\n\n<p><em>caution:</em> <code>sign(\"0\") -&gt; 1</code></p>\n\n<hr>\n\n<p><strong>2.</strong> Elegant, short, not so fast <strong>[slowest]</strong></p>\n\n<pre><code>function sign(x) { return x &amp;&amp; x / Math.abs(x); }\n</code></pre>\n\n<p><em>caution:</em> <code>sign(+-Infinity) -&gt; NaN</code>, <code>sign(\"0\") -&gt; NaN</code></p>\n\n<p>As of <code>Infinity</code> is a legal number in JS this solution doesn't seem fully correct.</p>\n\n<hr>\n\n<p><strong>3.</strong> The art... but very slow <strong>[slowest]</strong></p>\n\n<pre><code>function sign(x) { return (x &gt; 0) - (x &lt; 0); }\n</code></pre>\n\n<hr>\n\n<p><strong>4.</strong> Using bit-shift<br>\n    <em>fast, but <code>sign(-Infinity) -&gt; 0</code></em></p>\n\n<pre><code>function sign(x) { return (x &gt;&gt; 31) + (x &gt; 0 ? 1 : 0); }\n</code></pre>\n\n<hr>\n\n<p><strong>5.</strong> Type-safe <strong>[megafast]</strong></p>\n\n<p><strong>!</strong> Seems like browsers (especially chrome's v8) make some magic optimizations and this solution turns out to be much more performant than others, even than (1.1) despite it contains 2 extra operations and logically never can't be faster.</p>\n\n<pre><code>function sign(x) {\n    return typeof x === 'number' ? x ? x &lt; 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\n}\n</code></pre>\n\n<hr>\n\n<h2>Tools</h2>\n\n<ul>\n<li><a href=\"http://jsperf.com/signs/3\">jsperf</a> preformance tests;</li>\n<li><a href=\"http://jsfiddle.net/disfated/NJFSa/\">fiddle</a> - type-cast tests;</li>\n</ul>\n\n<p>Improvements are welcome!</p>\n\n<hr>\n\n<h3>[Offtopic] Accepted answer</h3>\n\n<ul>\n<li><p><a href=\"/a/14418335/489553\">Andrey Tarantsov</a> - +100 for the art, but sadly it is about 5 times slower than the obvious approach</p></li>\n<li><p><a href=\"/a/7624945/489553\">Fr\u00e9d\u00e9ric Hamidi</a> - somehow the most upvoted answer (for the time writing) and it's kinda cool, but it's definitely not how things should be done, imho. Also it doesn't correctly handle Infinity numbers, which are also numbers, you know.</p></li>\n<li><p><a href=\"/a/9079549/489553\">kbec</a> - is an improvement of the obvious solution. Not that revolutionary, but taking all together I consider this approach the best. Vote for him :)</p></li>\n</ul>\n",
            "last_activity_date": 1425674655,
            "question_id": 7624920,
            "score": 65,
            "tags": [
                "javascript",
                "algorithm",
                "numbers",
                "sign"
            ],
            "title": "Number.sign() in javascript"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>what i've used before is you have to detect the mousedown event, record its x,y location (whichever is relevant) then detect the mouseup event, and subtract the two values. </p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I found this jquery touchwipe plugin which works on both my first generation ipod touch and my droid incredible.\n<a href=\"http://www.netcu.de/jquery-touchwipe-iphone-ipad-library\">http://www.netcu.de/jquery-touchwipe-iphone-ipad-library</a></p>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>jQuery Mobile also includes swipe support: <a href=\"http://api.jquerymobile.com/swipe/\" rel=\"nofollow\">http://api.jquerymobile.com/swipe/</a></p>\n\n<p>Example</p>\n\n<pre><code>$(\"#divId\").on(\"swipe\", function(event) {\n    alert(\"It's a swipe!\");\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Have you tried hammer.js? <a href=\"http://eightmedia.github.com/hammer.js/\">http://eightmedia.github.com/hammer.js/</a>\nAlso works on Windows Phones..</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I've repackaged <a href=\"http://www.netcu.de/jquery-touchwipe-iphone-ipad-library\" rel=\"nofollow\"><code>TouchWipe</code></a> as a short jquery plugin: <a href=\"https://github.com/marcandre/detect_swipe\" rel=\"nofollow\"><code>detectSwipe</code></a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Simple vanilla JS code sample:</p>\n\n<pre><code>document.addEventListener('touchstart', handleTouchStart, false);        \ndocument.addEventListener('touchmove', handleTouchMove, false);\n\nvar xDown = null;                                                        \nvar yDown = null;                                                        \n\nfunction handleTouchStart(evt) {                                         \n    xDown = evt.touches[0].clientX;                                      \n    yDown = evt.touches[0].clientY;                                      \n};                                                \n\nfunction handleTouchMove(evt) {\n    if ( ! xDown || ! yDown ) {\n        return;\n    }\n\n    var xUp = evt.touches[0].clientX;                                    \n    var yUp = evt.touches[0].clientY;\n\n    var xDiff = xDown - xUp;\n    var yDiff = yDown - yUp;\n\n    if ( Math.abs( xDiff ) &gt; Math.abs( yDiff ) ) {/*most significant*/\n        if ( xDiff &gt; 0 ) {\n            /* left swipe */ \n        } else {\n            /* right swipe */\n        }                       \n    } else {\n        if ( yDiff &gt; 0 ) {\n            /* up swipe */ \n        } else { \n            /* down swipe */\n        }                                                                 \n    }\n    /* reset values */\n    xDown = null;\n    yDown = null;                                             \n};\n</code></pre>\n\n<p>Tested in Android.</p>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>If anyone is trying to use jQuery Mobile on Android and has problems with JQM swipe detection</p>\n\n<p>(I had some on Xperia Z1, Galaxy S3, Nexus 4 and some Wiko phones too) this can be useful :</p>\n\n<pre><code> //Fix swipe gesture on android\n    if(android){ //Your own device detection here\n        $.event.special.swipe.verticalDistanceThreshold = 500\n        $.event.special.swipe.horizontalDistanceThreshold = 10\n    }\n</code></pre>\n\n<p>Swipe on android wasn't detected unless it was a very long, precise and fast swipe. </p>\n\n<p>With these two lines it works correctly</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How can you detect that a user swiped his finger in some direction over a web page with JavaScript?</p>\n\n<p>I was wondering if there was one solution that would work for websites on both the iPhone and an Android phone.</p>\n",
            "last_activity_date": 1405617562,
            "question_id": 2264072,
            "score": 55,
            "tags": [
                "javascript",
                "iphone",
                "android",
                "swipe"
            ],
            "title": "Detect a finger swipe through JavaScript on the iPhone and Android"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Google Maps allows you to only have one info window open. So if you open a new window, then the other one closes automatically.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You need to keep track of your previous <a href=\"http://code.google.com/apis/maps/documentation/v3/reference.html#InfoWindow\" rel=\"nofollow\">InfoWindow</a> object <strike>and call the <em>close</em> method on it when you handle the click event on a new marker</strike>.</p>\n\n<p><strong>N.B</strong> It is not necessary to call close on the shared info window object, calling open with a different marker will automatically close the original. See <a href=\"http://stackoverflow.com/questions/1875596/have-just-one-infowindow-open-in-google-maps-api-v3/3722454#3722454\">Daniel's answer</a> for details.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Create your infowindow out of the scope so that you can share it. </p>\n\n<p>Here is a simple example:</p>\n\n<pre><code>var markers = [AnArrayOfMarkers];\nvar infowindow = new google.maps.InfoWindow();\n\nfor (var i = 0, marker; marker = markers[i]; i++) {\n  google.maps.event.addListener(marker, 'click', function(e) {\n    infowindow.setContent('Marker position: ' + this.getPosition());\n    infowindow.open(map, this);\n  });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>You need to create just one <code>InfoWindow</code> object, keep a reference to it, and reuse if for all the markers. <a href=\"https://developers.google.com/maps/documentation/javascript/infowindows#add\">Quoting from the Google Maps API Docs</a>:</p>\n\n<blockquote>\n  <p>If you only want one info window to display at a time (as is the behavior on Google Maps), you need only create one info window, which you can reassign to different locations or markers upon map events (such as user clicks).</p>\n</blockquote>\n\n<p>Therefore, you may simply want to create the <code>InfoWindow</code> object just after you initialize your map, and then handle the <code>click</code> event handlers of your markers as follows. Let's say you have a marker called <code>someMarker</code>:</p>\n\n<pre><code>google.maps.event.addListener(someMarker, 'click', function() {\n   infowindow.setContent('Hello World');\n   infowindow.open(map, this);\n});\n</code></pre>\n\n<p>Then the <code>InfoWindow</code> should automatically close when you click on a new marker without having to call the <code>close()</code> method.</p>\n",
                    "is_accepted": true,
                    "score": 82
                },
                {
                    "body": "<p>I had the same problem but the best answer didn't solve it completely, what I had to do in my for statement was using the this relating to my current marker. Maybe this helps someone.</p>\n\n<pre><code>for(var i = 0; i &lt; markers.length; i++){\n    name = markers[i].getAttribute(\"name\");\n    address = markers[i].getAttribute(\"address\");        \n    point = new google.maps.LatLng(parseFloat(markers[i].getAttribute(\"lat\")), parseFloat(markers[i].getAttribute(\"lng\")));                                     \n    contentString = '&lt;div style=\"font-family: Lucida Grande, Arial, sans-serif;&gt;'+'&lt;div&gt;&lt;b&gt;'+ name +'&lt;/b&gt;&lt;/div&gt;'+'&lt;div&gt;'+ address +'&lt;/div&gt;';                    \n    marker = new google.maps.Marker({                       \n        map: map,\n        position: point,\n        title: name+\" \"+address,\n        buborek: contentString \n    });                                     \n    google.maps.event.addListener(marker, 'click', function(){\n        infowindow.setContent(this.buborek); \n        infowindow.open(map,this); \n    });                                                         \n    marker.setMap(map);                 \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Basically you want one function that keeps reference to one <code>new InfoBox()</code> => delegate the onclick event.\nWhile creating your markers (in a loop) use <code>bindInfoBox(xhr, map, marker);</code></p>\n\n<pre><code>// @param(project): xhr : data for infoBox template\n// @param(map): object : google.maps.map\n// @param(marker): object : google.maps.marker\nbindInfoBox: (function () {\n    var options = $.extend({}, cfg.infoBoxOptions, { pixelOffset: new google.maps.Size(-450, -30) }),\n        infoBox = new window.InfoBox(options);\n\n    return function (project, map, marker) {\n        var tpl = renderTemplate(project, cfg.infoBoxTpl); // similar to Mustache, Handlebars\n\n        google.maps.event.addListener(marker, 'click', function () {\n            infoBox.setContent(tpl);\n            infoBox.open(map, marker);\n        });\n    };\n}())\n</code></pre>\n\n<p><code>var infoBox</code> is assigned asynchronously and kept in memory. Every time you call <code>bindInfoBox()</code> the return function will be called instead. Also handy to pass the <code>infoBoxOptions</code> only once!</p>\n\n<p>In my example I've had to add an extra param to the <code>map</code> as my initialization is delayed by tab events.</p>\n\n<p><a href=\"https://google-maps-utility-library-v3.googlecode.com/svn/trunk/infobox/docs/reference.html#InfoBoxOptions\" rel=\"nofollow\">InfoBoxOptions</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>a tad late, but I managed to have only one infowindow open by maken infowindow a global variable. </p>\n\n<pre><code>var infowindow = new google.maps.InfoWindow({});\n</code></pre>\n\n<p>then inside the listner</p>\n\n<pre><code>infowindow.close();\ninfowindow = new google.maps.InfoWindow({   \n    content: '&lt;h1&gt;'+arrondissement+'&lt;/h1&gt;'+ gemeentesFiltered                           \n});\n\ninfowindow.open(map, this);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Declare a globar <code>var selectedInfoWindow;</code> and use it to hold the opened info window:</p>\n\n<pre><code>      var infoWindow = new google.maps.InfoWindow({\n        content: content\n      });\n\n      // Open the infowindow on marker click\n      google.maps.event.addListener(marker, \"click\", function() {\n      //Check if there some info window selected and if is opened then close it\n        if (selectedInfoWindow != null &amp;&amp; selectedInfoWindow.getMap() != null) {\n            selectedInfoWindow.close();\n            //If the clicked window is the selected window, deselect it and return\n            if (selectedInfoWindow == infoWindow) {\n                selectedInfoWindow = null;\n                return;\n            }\n        }\n        //If arrive here, that mean you should open the new info window \n        //because is different from the selected\n        selectedInfoWindow = infoWindow;\n        selectedInfoWindow.open(map, marker);\n      });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Solved it this way:</p>\n\n<pre><code>    function window(content){\n        google.maps.event.addListener(marker,'click', (function(){ \n            infowindow.close();\n            infowindow = new google.maps.InfoWindow({\n                content: content\n        });\n        infowindow.open(map, this);\n        }))\n\n    }\n    window(contentHtml);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to open only one InfoWindow on my Google Map. I need to close any other InfoWindow before i open a new one.</p>\n\n<p>Can you some one guide me on this?</p>\n",
            "last_activity_date": 1424940750,
            "question_id": 1875596,
            "score": 53,
            "tags": [
                "javascript",
                "google-maps",
                "google-maps-api-3"
            ],
            "title": "Have just one InfoWindow open in Google Maps API v3"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Generally you only use RequireJS in its loading form during development. Once the site is done and ready for deployment, you minify the code. The advantage here is RequireJS knows exactly what your dependencies are, and thus can easily minify the code in the correct order. Here is what it says on the <a href=\"http://requirejs.org/docs/start.html#optimize\">RequireJS website</a>:</p>\n\n<blockquote>\n  <p>Once you are finished doing development and want to deploy your code for your end users, you can use the optimizer to combine the JavaScript files together and minify it. In the example above, it can combine main.js and helper/util.js into one file and minify the result.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>This is a hotly contested issue among many proficient javascript developers. Many other languages have a \"compilation\" phase where the entire program is bundled up for deployment (JBoss's .WAR files come to mind). Programmers that come from more traditional backgrounds often favor this approach.</p>\n\n<p>Javascript has seen such growth in recent years that it is difficult to chart exact best practices, but those that appreciate the more functional nature of Javascript often prefer the module loading approach (like require.js uses).</p>\n\n<p>I wrote <a href=\"https://github.com/bishopZ/Frame.js\">Frame.js</a> which works much like require.js, so my bias is towards the module loader approach.</p>\n\n<p>To answer your question directly, yes, it is one or the other.</p>\n\n<p>Most that argue for packing your scripts into a single file believe it enables more compression and is thus more efficient. I believe the efficiency advantages of packaging are negligible in most cases because: (1) module load times are distributed over the entire session, (2) individual modules can be compressed to nearly the same percentage, (3) individual modules can be cached by the server and routers separately, and (4) loading scripts only when they are needed ultimately allows you load less code for some users and more code overall.</p>\n\n<p>In the long run, if you can see an advantage to dynamic script loading use it. If not, bundle your scripts into a single file.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>It depends on your application. If you're making a server-side app with only modest javascript (less than 100kb minified) then go for total bundling, you're probably going to be fine.</p>\n\n<p>But if you're making a javascript app and have a ton of code in it, then your needs are going to be different.</p>\n\n<p>For example, in my app I bundle all the core files. There's jQuery, underscore, backbone, my main app files, my user login system, my layout system, my notifications and chat system, all are part of my big initial file.</p>\n\n<p>But I have many other modules as well that isn't part of the initial bundle, that are loaded after those.</p>\n\n<p>The forums, the wiki, the wysiwyg, color picker, drag/drop, calendar, and some animation files are part of the second category. You need to make reasonable decisions about what's commonly used and needed immediately vs what can be delayed.</p>\n\n<p>If I include everything immediately I can get above a meg of javascript, which would be insane and make the initial boot unacceptably slow.</p>\n\n<p>The second category starts downloading after <code>initSuccess</code> event fires from the initial file.</p>\n\n<p>But the second category is more intelligent than the first in that it loads what's more important first. For example if you're looking at the wiki it'll load the wiki before it loads the color picker.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>This may be a dumb question for web guys. But I am a little confused over this. Now, I have an application where I am using a couple of Javascript files to perform different tasks. Now, I am using Javascript <a href=\"https://github.com/ServiceStack/Bundler\">bundler</a> to combine and minify all the files. So, at runtime there will be only one app.min.js file. Now, <a href=\"http://requirejs.org/\">Requirejs</a> is used to load modules or files at runtime. So, the question is if I already have all things in one file, then do I need requirejs? Or what is a use case scenario where I can use requirejs and/or bundler?</p>\n\n<p>Please let me know if any further details are needed.</p>\n",
            "last_activity_date": 1376261434,
            "question_id": 12232848,
            "score": 47,
            "tags": [
                "javascript",
                "requirejs",
                "servicestack"
            ],
            "title": "When to use Requirejs and when to use bundled javascript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Use jsPlumb - best library for drawing custom lines on webpage.</p>\n\n<p><a href=\"http://jsplumb.org/jquery/demo.html\">http://jsplumb.org/jquery/demo.html</a></p>\n",
                    "is_accepted": true,
                    "score": 95
                },
                {
                    "body": "<p>hi check this one <a href=\"http://raphaeljs.com/graffle.html\">http://raphaeljs.com/graffle.html</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>Yes I know that this kind of questions have been asked before in the following links: <a href=\"http://stackoverflow.com/questions/4684568/how-to-connect-draggable-divs\">Question 1</a>, <a href=\"http://stackoverflow.com/questions/4712189/how-to-draw-a-line-between-2-elements-using-jquery-and-refreshing-that-line\">Question 2</a> and <a href=\"http://stackoverflow.com/questions/536676/how-to-draw-a-line-between-draggable-and-droppable\">Question 3</a>. But my question is quite different from already asked questions. </p>\n\n<p>What I want is following: I have two draggable divs and have a connector (a straight line) between them (drawn with SVG line). When I move these draggable divs I need to move a connector between them accordingly. My question is more similar to the <a href=\"http://stackoverflow.com/questions/536676/how-to-draw-a-line-between-draggable-and-droppable\">Question 3</a>, but there in that question, once a user creates a connection between divs those divs stop being draggable, so they don't care about refreshing connectors. </p>\n\n<p>Has anybody ever met any working example or demo of what I am saying? Or, could anybody give me any ideas of how to do that in an optimal way please? </p>\n\n<p>Just in case, I am using jQuery as a javascript framework (if it worth to know that).</p>\n\n<p>Thanks a lot.</p>\n\n<p><strong>UPDATE 1</strong></p>\n\n<p>I have found this <a href=\"http://kennykee.com/?p=15\">demo</a> also, but it works very very bad, I would say incorrectly.</p>\n",
            "last_activity_date": 1421383516,
            "question_id": 6278152,
            "score": 37,
            "tags": [
                "javascript",
                "html",
                "connection",
                "line",
                "jquery-ui-draggable"
            ],
            "title": "Drawing a line between two draggable divs"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I don't know the exact reasons for this, but here are my reasons</p>\n\n<p>I think this argue is the same as Dynamic vs Static, a class is the static definition of the object, that can be used easily to know what to expect from an object, it also helps tooling the languages to have proper intellisense support and documentation because you can easily know what are the different members and methods in the object, another thing is the different paradigm of having the ability to declare private members in the class that doesn't show on the object, this can't be done in the prototype paradigm.</p>\n\n<p>The prototype paradigm is nice, however it lacks the ability for providing information about the methods and members in the object, which makes the tooling harder, and it also makes more sense for dynamic typing programming.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p><a href=\"http://en.wikipedia.org/wiki/Prototype-based_programming#Criticism\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Prototype-based_programming#Criticism</a> explains it quite well I think.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you're looking for someone to point out the advantages/disadvantages of each as an explanation for their popularity, I think you're falling for a fallacy which is for some reason very common in technology - that popularity has something to do with some absolute measure of quality.</p>\n\n<p>The truth is a lot more bland - class based OO is popular because Java uses classic OO, and Sun spent millions of dollars and a very long time building the popularity of Java - making sure people know it's used successfully in corporations, taught widely in universities, and on high school AP tests.</p>\n\n<p>Prototypal/classical OO are just different ways of organizing your ideas. You can implement either one in languages that don't support it natively (<a href=\"http://mail.python.org/pipermail/python-list/2000-September/053605.html\">Python</a> and <a href=\"http://steve-yegge.blogspot.com/2008/10/universal-design-pattern.html\">Java</a> come to mind, and <a href=\"http://justin.harmonize.fm/index.php/2009/01/cobra-a-little-javascript-class-library/\">JavaScript</a> on the other side).</p>\n\n<p>In classical OO, you define an abstract hierarchy of classes for your objects, and then actually work with instances of those classes. In prototypal inheritance, you create a hierarchy of object instances. Although I imagine it might be a bit heretical in both camps, I don't see a reason you couldn't mix the two...</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>I think the difference is in the power dynamic (prototyped) language gives to you. Javascript, same like LISP, gives almost unlimited power to a programmer. This power is only limited by programmer's responsibility and the level of his self-confidence. So the discussion is as old as it is - same as static typing vs. typeless. If you consider your programming power and self-discipline are strong enough - go for prototyped style.</p>\n\n<p>Paraphrasing one famous saying:</p>\n\n<p>Talent does what he can (read: class-based), genius does what he wants (read: prototype-based). </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The advantage of prototypal inheritance is that it potentially allows fancy metaprogramming in a straightforward way because the prototype chain is easily manipulated. This is a rather academic advantage because metaprogramming is the wrong answer 99% of the time. As an example, you could have a Javascript Key-Value Observer style data manipulation layer with a special DSL that transparently switched between a local SQLite backing when offline and a REST based server store when online via prototype swapping. I'm not sure it's the best way to do this, but it's the best I can come up with this late. It's not the sort of thing you generally want to do in project code since this sort of indirection is hell to debug once you start getting it going on multiple layers, but it's not bad when you keep it in a library.</p>\n\n<p>Another less helpful advantage is that it allows you to design your own class system. I say less helpful because more or less all javascript libraries have their own slightly incompatible approach to how 'classes' are put together.</p>\n\n<p>There are a lot of people replying who are mixing the inheritance model with the languages implemented in that model. The fact that javascript is dynamic and weakly typed and thus hard to tool has nothing to do with it being a prototypal language.</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>This question had me intrigued so I went back and read some of the original papers on the concept.  It appears to have begun in the mid-1980s in the Smalltalk world but eventually became one of the founding principals of <a href=\"http://selflanguage.org\">Self</a>.  Much later Javascript also adopted it.</p>\n\n<p>The argument put forth in the papers is that it is easier to learn.  There is really no technical benefit proposed other than learning.  The papers all explain how it is just as expressive as a class-based language but much easier to learn.  People naturally think about things in a concrete manner rather than in the abstract.  We think of the elephant we saw at the zoo, not a generic \"elephant\".  When we see other elephants, we classify them as differences from the first one.  A prototype-based language facilitates this thinking.  Think of it as programming by differential.</p>\n\n<p>Is that a sufficient reason to use it in a language?  Perhaps.  In the 25 years since the idea first started percolating, I would argue that abstracted concepts like class-based OO has not been too hard for most people to learn.  On the other hand perhaps there is a need for a blue-collar programming language (like Javascript) which is easier and this may be a way to accomplish that.</p>\n\n<p>If interested, you might start with <a href=\"http://selflanguage.org/documentation/published/organizing-programs.html\">this paper</a> about self.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I really don't want to write another article about prototypal inheritance again so I'll just link you to my previous articles. Mind you, they are really long but well worth the read:</p>\n\n<ol>\n<li><a href=\"http://stackoverflow.com/a/16872315/783743\" title=\"javascript - Benefits of prototypal inheritance over classical? - Stack Overflow\">Benefits of prototypal inheritance over classical?</a></li>\n<li><a href=\"http://aaditmshah.github.io/why-prototypal-inheritance-matters/\" rel=\"nofollow\" title=\"Aadit M Shah | Why Prototypal Inheritance Matters\">Why Prototypal Inheritance Matters</a></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Why is class based OO so popular instead of prototype based OO? Do they teach the latter in schools? Though Javascript is prototype based, most people use it mostly functionally, or via frameworks that try to emulate a class based system.</p>\n\n<p>I know that Sun has had some research on <a href=\"http://research.sun.com/self/\">Self</a> - is there any other source of knowledge on prototype based oo? preferably something that is accessible for self learned.</p>\n\n<p>I found a book that contains published papers: <a href=\"http://rads.stackoverflow.com/amzn/click/9814021253\">Prototype-Based Programming: Concepts, Languages and Applications</a></p>\n\n<p>Has anyone read it?</p>\n\n<p>--</p>\n\n<p>So I gave the bounty for the answer that gave me most. Still, I'm not really satisfied. I would have liked to hear much more techical answers. Maybe I didn't explain myself well.</p>\n",
            "last_activity_date": 1370093894,
            "question_id": 879061,
            "score": 34,
            "tags": [
                "javascript",
                "oop",
                "class",
                "programming-languages",
                "selflanguage"
            ],
            "title": "What are the advantages that prototype based OO has over class based OO?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>jQuery uses it to parse JSON strings when a JSON parser object is not available.  Seems legit to me :)</p>\n\n<pre><code>        // Try to use the native JSON parser first\n        return window.JSON &amp;&amp; window.JSON.parse ?\n            window.JSON.parse( data ) :\n            (new Function(\"return \" + data))();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I use the <code>new Function()</code> constructor as an in-line JS interpreter in one of the web apps I'm developing:</p>\n\n<pre><code>function interpret(s) {\n  //eval(s); &lt;-- even worse practice\n  try {\n      var f = new Function(s);\n      f();\n    }\n  catch (err) {\n      //graceful error handling in the case of malformed code\n  }\n}\n</code></pre>\n\n<p>As I get stuff streaming over AJAX (<strong>not</strong> an iframe), I continuously <code>interpret()</code> it on <code>readyStateChange == 3</code>. This works surprisingly well.</p>\n\n<p><strong>Edit</strong>: here's a clear case study that shows that <code>new Function()</code> is categorically faster than <code>eval()</code>. I.e. you should never (rarely?) use eval in lieu of <code>new Function()</code>.</p>\n\n<p><a href=\"http://polyfx.com/stuff/bsort.html\">http://polyfx.com/stuff/bsort.html</a> &lt;- the 1000 iteration version, may crash your browser</p>\n\n<p><a href=\"http://polyfx.com/stuff/bsort10.html\">http://polyfx.com/stuff/bsort10.html</a> &lt;- the shorter version</p>\n\n<p>Eval is on average, almost <strong>8 times</strong> slower than <code>new Function()</code>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>This is a separate case from my other answer.</p>\n\n<p>I used the Function constructor a while back to create custom string formatters that were being called repeatedly.  The overhead of creating the function (which I take it is the performance issue you're talking about) was far outweighed by the improved performance of the custom-built functions, which were created at runtime specifically to process a particular format string, and therefore did not need to evaluate tons of irrelevant cases &#8212; or parse a format string, for that matter.  It's a bit like compiling a regular expression, I suppose.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>John Resig used the Function constructor to create \"compiled\" versions of client-side templates written in an asp syntax.  <a href=\"http://ejohn.org/blog/javascript-micro-templating/\">http://ejohn.org/blog/javascript-micro-templating/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><a href=\"http://github.com/dperini/nwmatcher/\" rel=\"nofollow\">NWMatcher</a> \u2014 Javascript CSS selector and matcher, by Diego Perini \u2014 uses <code>Function</code> constructor (<a href=\"http://github.com/dperini/nwmatcher/blob/master/src/nwmatcher.js#L910\" rel=\"nofollow\">1</a>, <a href=\"http://github.com/dperini/nwmatcher/blob/master/src/nwmatcher.js#L914\" rel=\"nofollow\">2</a>, <a href=\"http://github.com/dperini/nwmatcher/blob/master/src/nwmatcher.js#L1311\" rel=\"nofollow\">3</a>, <a href=\"http://github.com/dperini/nwmatcher/blob/master/src/nwmatcher.js#L1316\" rel=\"nofollow\">4</a>, etc.) to create (\"compile\") highly-efficient versions of selector matchers.</p>\n\n<p>The <a href=\"http://fusejs.com/nwmatcher/match/\" rel=\"nofollow\">benchmark</a> (which I just ran on Chrome 5) speaks for itself:</p>\n\n<p><img src=\"http://chart.apis.google.com/chart?chtt=NWMatcher%3a%20benchmarking%20the%20match%28%29%20method|Ops/sec%20%28Chrome%205.0.375.70%20on%20Intel%20Mac%20OS%20X%2010_6_3%29&amp;chts=000000,10&amp;cht=bhg&amp;chd=t:164699,57012,153583,16110,15935&amp;chds=0,164699&amp;chxt=x&amp;chxl=0%3a|0|164.7K&amp;chsp=0,1&amp;chm=t%20Webkit%20N%28164.7K%29,000000,0,0,10|t%20Native%20QSA%2857K%29,000000,0,1,10|t%20NWMatcher%201.2.x%28153.6K%29,000000,0,2,10|t%20Prototype%201.6.1%2816.1K%29,000000,0,3,10|t%20Sizzle%201.x%2815.9K%29,000000,0,4,10&amp;chbh=15,0,5&amp;chs=250x170\" alt=\"alt text\"></p>\n\n<p>Note the difference between NWMatcher and Sizzle, which is a very similar selector engine, only <strong>without function compilation</strong> :)</p>\n\n<p>On a side note, ECMAScript 5 <strong>doesn't throw any errors</strong> on invocation of <code>Function</code>. Neither in strict, nor in \"standard\" modes. Strict mode, however, introduces few restrictions on presence of identifiers such as \"eval\" and \"arguments\": </p>\n\n<ul>\n<li><p>You can't have declare variables/functions/arguments with such names:</p>\n\n<pre><code>function eval() { }\nvar eval = { };\nfunction f(eval) { } \nvar o = { set f(eval){ } };\n</code></pre></li>\n<li><p>You can't assign to such identifier:</p>\n\n<pre><code>eval = { };\n</code></pre></li>\n</ul>\n\n<p>Also note that in strict mode, <code>eval</code> semantics is slightly different from that in ES3. Strict mode code <strong>can not instantiate variables</strong> or functions in the environment from which it was called:</p>\n\n<pre><code> eval(' \"use strict\"; var x = 1; ');\n typeof x; // \"undefined\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>The only legitimate use I have come for it is when I wrote this:</p>\n\n<pre><code>Function.prototype.New = (function () {\n  var fs = [];\n  return function () {\n    var f = fs [arguments.length];\n    if (f) {\n      return f.apply (this, arguments);\n    }\n    var argStrs = [];\n    for (var i = 0; i &lt; arguments.length; ++i) {\n      argStrs.push (\"a[\" + i + \"]\");\n    }\n    f = new Function (\"var a=arguments;return new this(\" + argStrs.join () + \");\");\n    if (arguments.length &lt; 100) {\n      fs [arguments.length] = f;\n    }\n    return f.apply (this, arguments);\n  };\n}) ();\n</code></pre>\n\n<p>The code allows you to use <code>Function.prototype.apply</code> while 'using' the <code>new</code> keyword. </p>\n\n<p>Example:</p>\n\n<pre><code>function Foo (x, y, z) {\n  this.x = x;\n  this.y = y;\n  this.z = z;\n  this.otherArgs = Array.prototype.slice.call (arguments, 3);\n}\n\nvar foo = Function.prototype.New.apply (Foo, [1, 2, 3, 4, 5, 6, 7]);\n// /*equiv*/ var foo = Foo.New.apply (Foo, [1, 2, 3, 4, 5, 6, 7]);\n// /*equiv*/ var foo = Foo.New (1, 2, 3, 4, 5, 6, 7);\nvar bool = true\n  &amp;&amp; foo.x == 1\n  &amp;&amp; foo.y == 2\n  &amp;&amp; foo.z == 3\n  &amp;&amp; foo.otherArgs.length == 4\n  &amp;&amp; foo.otherArgs [0] == 4\n  &amp;&amp; foo.otherArgs [1] == 5\n  &amp;&amp; foo.otherArgs [2] == 6\n  &amp;&amp; foo.otherArgs [3] == 7\n  ;\n\nalert (bool);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You might want to execute a string of code more than once. Using the Function constructor means that you only have to compile it once.</p>\n\n<p>You might want to pass arguments to the code, for instance if you're polyfilling an event you can retrieve the event attribute and construct a Function expecting an event argument.</p>\n\n<p>You can combine the two and compile it in one location and execute it at another and still manage to pass arguments in the variables that the string of code expects.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>As repeatedly said, it is considered bad practice to use the <a href=\"https://developer.mozilla.org/En/Core_JavaScript_1.5_Reference/Functions#The_Function_constructor\">Function constructor</a> (also see the <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\">ECMAScript Language Specification</a>, 5<sup>th</sup> edition, \u00a7 15.3.2.1):</p>\n\n<pre><code>new Function ([arg1[, arg2[, \u2026 argN]],] functionBody)\n</code></pre>\n\n<p>(where all arguments are strings containing argument names and the last (or only) string contains the function body).</p>\n\n<p>To recapitulate, it is said to be slow, as explained by <a href=\"http://dev.opera.com/articles/view/efficient-javascript/?page=2#avoideval\">the Opera team</a>:</p>\n\n<blockquote>\n  <p>Each time [\u2026] the <code>Function</code>\n  constructor is called on a string\n  representing source code, the script\n  engine must start the machinery that\n  converts the source code to executable\n  code. This is usually expensive for\n  performance \u2013 easily a hundred times\n  more expensive than a simple function\n  call, for example. (Mark \u2018Tarquin\u2019 Wilton-Jones)</p>\n</blockquote>\n\n<p>Though it's not <em>that</em> bad, according to <a href=\"https://developer.mozilla.org/Talk%3aEn/Core_JavaScript_1.5_Reference/Functions_and_function_scope#new_Function%28%29_vs_function%28%29.7b.7d\">this post</a> on MDC (I didn't test this myself using the current version of Firefox, though).</p>\n\n<p>Crockford <a href=\"http://javascript.crockford.com/survey.html\">adds</a> that</p>\n\n<blockquote>\n  <p>[t]he quoting conventions of the\n  language make it very difficult to\n  correctly express a function body as a\n  string. In the string form, early\n  error checking cannot be done. [\u2026] And\n  it is wasteful of memory because each\n  function requires its own independent\n  implementation.</p>\n</blockquote>\n\n<p>Another difference is that</p>\n\n<blockquote>\n  <p>a function defined by a Function\n  constructor does not inherit any scope\n  other than the global scope (which all\n  functions inherit). (<a href=\"https://developer.mozilla.org/En/Core_JavaScript_1.5_Reference/Functions#Function_constructor_vs._function_declaration_vs._function_expression\">MDC</a>)</p>\n</blockquote>\n\n<p>Apart from this, you have to be attentive to avoid injection of malicious code, when you create a <code>new Function</code> using dynamic contents.</p>\n\n<p>That said, T.J. Crowder says in <a href=\"http://stackoverflow.com/questions/3024584/improve-javascript-prototypal-inheritance/3024655#3024655\">an answer</a> that </p>\n\n<blockquote>\n  <p>[t]here's almost never any need for\n  the similar [\u2026] new Function(...),\n  either, again except for some advanced\n  edge cases.</p>\n</blockquote>\n\n<p>So, now I am wondering: what are these \u201cadvanced edge cases\u201d? <strong>Are there legitimate uses of the Function constructor?</strong></p>\n",
            "last_activity_date": 1335898928,
            "question_id": 3026089,
            "score": 32,
            "tags": [
                "javascript",
                "function-constructor"
            ],
            "title": "Legitimate uses of the Function constructor"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You want to use the <a href=\"http://developer.apple.com/library/safari/#documentation/UserExperience/Reference/GestureEventClassReference/GestureEvent/GestureEvent.html\"><code>gesturestart</code>, <code>gesturechange</code>, and <code>gestureend</code> events</a>. These get triggered any time 2 or more fingers touch the screen.</p>\n\n<p>Depending on what you need to do with the pinch gesture, your approach will need to be adjusted. The <code>scale</code> multiplier can be examined to determine how dramatic the user's pinch gesture was. See <a href=\"http://developer.apple.com/library/safari/#documentation/UserExperience/Reference/TouchEventClassReference/TouchEvent/TouchEvent.html#//apple_ref/doc/uid/TP40009358\">Apple's TouchEvent documentation</a> for details about how the <code>scale</code> property will behave.</p>\n\n<pre><code>node.addEventListener('gestureend', function(e) {\n    if (e.scale &lt; 1.0) {\n        // User moved fingers closer together\n    } else if (e.scale &gt; 1.0) {\n        // User moved fingers further apart\n    }\n}, false);\n</code></pre>\n\n<p>You could also intercept the <code>gesturechange</code> event to detect a pinch as it happens if you need it to make your app feel more responsive.</p>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>Think about what a <code>pinch</code> event is: two fingers on an element, moving toward or away from each other.\nGesture events are, to my knowledge, a fairly new standard, so probably the safest way to go about this is to use touch events like so:</p>\n\n<p>(ontouchstart event)</p>\n\n<pre><code>if(e.touches.length == 2) {\n    scaling = true;\n    pinchStart(e);\n}\n</code></pre>\n\n<p>(ontouchmove event)</p>\n\n<pre><code>if(scaling) {\n    pinchMove(e);\n}\n</code></pre>\n\n<p>(ontouchend event)</p>\n\n<pre><code>if(scaling) {\n    pinchEnd(e);\n    scaling = false;\n}\n</code></pre>\n\n<p>To get the distance between the two fingers, use pythagorean theorem:</p>\n\n<pre><code>var dist =\nMath.sqrt(\n    (e.touches[0].x-e.touches[1].x) * (e.touches[0].x-e.touches[1].x) +\n    (e.touches[0].y-e.touches[1].y) * (e.touches[0].y-e.touches[1].y));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>Hammer.js all the way! It handles \"transforms\" (pinches).\n<a href=\"http://eightmedia.github.com/hammer.js/\">http://eightmedia.github.com/hammer.js/</a></p>\n\n<p>But if you wish to implement it youself, i think that Jeffrey's answer is pretty solid.</p>\n",
                    "is_accepted": false,
                    "score": 16
                }
            ],
            "body": "<p>This is a <strong>WEB APP</strong> not a native app. Please no Objective-C NS commands.</p>\n\n<p>So I need to detect 'pinch' events on iOS. Problem is every plugin or method I see for doing gestures or multi-touch events, is (usually) with jQuery and is a whole additional pluggin for every gesture under the sun. My application is huge, and I am very sensitive to deadwood in my code. All I need is to detect a pinch, and using something like jGesture is just way to bloated for my simple needs.</p>\n\n<p>Additionally, I have a limited understanding of how to detect a pinch manually. I can get the position of both fingers, can't seem to get the mix right to detect this. Does anyone have a simple snippet that JUST detects pinch?</p>\n",
            "last_activity_date": 1353024564,
            "question_id": 11183174,
            "score": 28,
            "tags": [
                "javascript",
                "jquery",
                "ios",
                "mobile-safari"
            ],
            "title": "Simplest way to detect a pinch"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>jQuery <a href=\"http://docs.jquery.com/Plugins/Autocomplete\">autocomplete</a> plugin</p>\n\n<p>EDIT: I initially linked to the wrong autocomplete plugin.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Check these plugins:</p>\n\n<ul>\n<li><a href=\"http://plugins.jquery.com/project/SexyCombo\" rel=\"nofollow\">SexyCombo</a></li>\n<li><a href=\"http://plugins.jquery.com/project/quickselect\" rel=\"nofollow\">QuickSelect</a></li>\n<li><a href=\"http://plugins.jquery.com/project/droplist%5Ffilter\" rel=\"nofollow\">DropList Filter</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I wrote <a href=\"http://andrew.hedges.name/experiments/narrowing/\">a little script to do this</a> a few years ago. It could be packaged up as a jQuery plug-in quite easily, probably. You're welcome to it.</p>\n\n<p>I also do this in my <a href=\"http://andrew.hedges.name/widgets/#phpfr\">PHP Function Reference</a> Dashboard widget if you want to look at the code there.</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>Try the \"jquery options filter\", based on real select box and matching in the mid of option texts:\n<a href=\"http://plugins.jquery.com/project/jquery_options_filter\" rel=\"nofollow\">http://plugins.jquery.com/project/jquery_options_filter</a></p>\n\n<p>for diyism</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I was just looking for something similar, and the best one for what I need seems to be the <a href=\"http://www.quasipartikel.at/multiselect/\">JQuery UI MultiSelect</a>.  It turns Multi-select boxes into a pretty slick dual-list view, with live filtering on the master list.</p>\n\n<p><strong>EDIT: New Development!</strong></p>\n\n<blockquote>\n  <p>\"<a href=\"http://harvesthq.github.com/chosen/\">Chosen</a> is a JavaScript plugin that makes long, unwieldy select boxes much more user-friendly. It is currently available in both jQuery and Prototype flavors.\"</p>\n</blockquote>\n\n<p>I'm totally using <a href=\"http://harvesthq.github.com/chosen/\">Chosen</a> on all select-using projects in the foreseeable future.</p>\n",
                    "is_accepted": false,
                    "score": 42
                },
                {
                    "body": "<p><a href=\"http://ivaynberg.github.com/select2/\">Select2</a> is a fairly recent fork of Chosen and has tons more features (e.g. AJAX + custom HTML for individual items).</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>I just implemented this feature quick and dirty. It uses some global variables, you might want to improve the implementation to remove these.</p>\n\n<p>Here the '#xsca_member_filter' is the filter as a text input and '#members' is the select input.</p>\n\n<pre><code>$('documenet').ready(function(){\n    init();\n   $('#xsca_member_filter').keyup(function(){\n       filter($(this));\n   });\n});\n\n//save all available options with their values and the empty option.\ninit = function(){\n    options = new Object();\n    $('#owner option').each(function(){\n        var obj = $(this);\n        if(obj.attr(\"value\") != \"\")\n            options[obj.attr('value')] = obj.html();\n        else\n            emptyOption = obj.html();\n    });\n    selObj = $('#owner');\n};\n\nfilter = function(elem){\n    var filter = elem.val();\n    var selected = $('#owner option:selected').val();\n\n    //delete all options and add the empty option\n    selObj.html(\"\");\n    selObj.append(\"&lt;option&gt; \"+emptyOption+\" &lt;/option&gt;\");\n\n    //add all options conaining the filter string\n    for(value in options){\n        var option = options[value];\n        if((options[value]).indexOf(filter) != -1){\n            selObj.append(\"&lt;option value='\"+value+\"'&gt; \"+options[value]+\" &lt;/option&gt;\");\n        }\n    }\n\n    //select the previously selected option\n    $(\"#owner option[value = '\"+selected+\"']\").prop(\"selected\", true);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have used a prototype plugin which filters the contents of a dropdown as you type. So for example if you typed 'cat' into the text box, only items containing the substring 'cat' would be left as options in the drop down.</p>\n\n<p>Does anyone know of a jquery plugin which can do this?</p>\n",
            "last_activity_date": 1367017360,
            "question_id": 706906,
            "score": 25,
            "tags": [
                "javascript",
                "jquery",
                "jquery-plugins"
            ],
            "title": "Jquery: Filter dropdown list as you type"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>As mentioned in a comment, <a href=\"http://api.jquery.com/category/dimensions/\" rel=\"nofollow\">the documentation</a> tells you exactly what the differences are. But in summary:</p>\n\n<ul>\n<li>innerWidth / innerHeight - includes padding but not border</li>\n<li>outerWidth / outerHeight - includes padding, border, and optionally margin</li>\n<li>height / width - element height (no padding, margin, or border)</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Did you see these examples? Looks similar to your question.</p>\n\n<p><a href=\"http://www.jquery-tutorial.net/dimensions/working-with-widths-and-heights/\">Working with widths and heights</a></p>\n\n<p><img src=\"http://i.stack.imgur.com/2sJsn.gif\" alt=\"enter image description here\"></p>\n\n<p><a href=\"http://www.w3schools.com/jquery/jquery_dimensions.asp\">jQuery - Dimensions</a></p>\n\n<p><a href=\"http://www.midnight-coding.com/2012/09/jquery-height-width-inner-and-outer.html\">jQuery: height, width, inner and outer</a></p>\n",
                    "is_accepted": true,
                    "score": 66
                },
                {
                    "body": "<p>width = get the width,\ninnerWidth = get width + padding,\nouterWidth = get width + padding + border and optionally the margin</p>\n\n<p>If you want to test add some padding, margins, borders to your .test classes and try again.</p>\n\n<p>Also read up in the jQuery docs...everything you need is pretty much there</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I wrote some example to see what is the difference, but they display me same results for width and height.</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;script type=\"text/javascript\" src=\"jquery.js\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\"&gt;\n            $(document).ready(function(){\n                var div = $('.test');\n                var width = div.width(); // 200 px\n                var innerWidth = div.innerWidth(); // 200px\n                var outerWidth = div.outerWidth(); // 200px\n\n                var height = div.height(); // 150 px\n                var innerHeight = div.innerHeight(); // 150 px\n                var outerHeight = div.outerHeight(); // 150 px\n            });\n\n        &lt;/script&gt;\n        &lt;style type=\"text/css\"&gt;\n            .test\n            {\n                width: 200px;\n                height: 150px;\n                background: black;\n            }\n        &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div class=\"test\"&gt;&lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>In this example you can see that they output same results. If anyone know what is the difference please show me appropriate answer.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1376664767,
            "question_id": 17845027,
            "score": 23,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "dom",
                "styles"
            ],
            "title": "What is difference between width, innerWidth and outerWidth, height, innerHeight and outerHeight in jQuery"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>JQuery <a href=\"http://docs.jquery.com/Downloading%5FjQuery\" rel=\"nofollow\">http://docs.jquery.com/Downloading_jQuery</a><br>\nJQuery Effects <a href=\"http://docs.jquery.com/Effects/animate#paramsoptions\" rel=\"nofollow\">http://docs.jquery.com/Effects/animate#paramsoptions</a></p>\n\n<p><br>Example<br></p>\n\n<pre><code> $(\"#go1\").click(function(){\n      $(\"#block1\").animate( { width:\"90%\" }, { queue:false, duration:3000 } )\n         .animate( { fontSize:\"24px\" }, 1500 )\n         .animate( { borderRightWidth:\"15px\" }, 1500);\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>You'll need to do this in two steps: (1) animation (2) rehoming.</p>\n\n<p>The animation you can take care of with .animate(), as @Ballsacian points out.  The rehoming can be accomplished with .html() - for the example above,</p>\n\n<pre><code>var arrowMarkup = $('#cell1').html(); //grab the arrow\n$('#cell1').html(\"\"); //delete it from the first cell\n$('#cell2').html(arrowMarkup); //add it to the second cell\n</code></pre>\n\n<p>Of course, you'll have to complicate that code to integrate the animation.  And this way of doing it won't cause the selection (I'm assuming you're selecting a table row?) to activate rows between the old selection and the new one, as the arrow passes by them.  That'd be even more complex to achieve.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is actually quite difficult because you have to remove and add it to the DOM but keep its position. I think your looking for something like this. Basically we don't animate either the arrow in <code>#cell1</code> or <code>#cell2</code>. We just create a new one in the <code>body</code>-tag and animate that. That way we don't have to worry about the table cell positions because we can position relative to the document.</p>\n\n<pre><code>var $old = $('#cell1 img');\n//First we copy the arrow to the new table cell and get the offset to the document\nvar $new = $old.clone().appendTo('#cell2');\nvar newOffset = $new.offset();\n//Get the old position relative to document\nvar oldOffset = $old.offset();\n//we also clone old to the document for the animation\nvar $temp = $old.clone().appendTo('body');\n//hide new and old and move $temp to position\n//also big z-index, make sure to edit this to something that works with the page\n$temp\n  .css('position', 'absolute')\n  .css('left', oldOffset.left)\n  .css('top', oldOffset.top)\n  .css('zIndex', 1000);\n$new.hide();\n$old.hide();\n//animate the $temp to the position of the new img\n$temp.animate( {'top': newOffset.top, 'left':newOffset.left}, 'slow', function(){\n   //callback function, we remove $old and $temp and show $new\n   $new.show();\n   $old.remove();\n   $temp.remove();\n});\n</code></pre>\n\n<p>I think this should point you in the right direction.</p>\n",
                    "is_accepted": false,
                    "score": 36
                },
                {
                    "body": "<p>@Pim Jager's answer is pretty good, however if you have object references to the original element they would break since the the original element was replaced with a clone</p>\n\n<p>I came up with what I think is a slightly cleaner solution in that it only has a single clone that show up for animation then goes away, leaving the original in the new location.</p>\n\n<pre><code>function moveAnimate(element, newParent){\n    //Allow passing in either a jQuery object or selector\n    element = $(element);\n    newParent= $(newParent);\n\n    var oldOffset = element.offset();\n    element.appendTo(newParent);\n    var newOffset = element.offset();\n\n    var temp = element.clone().appendTo('body');\n    temp.css({\n        'position': 'absolute',\n        'left': oldOffset.left,\n        'top': oldOffset.top,\n        'z-index': 1000\n    });\n    element.hide();\n    temp.animate({'top': newOffset.top, 'left': newOffset.left}, 'slow', function(){\n       element.show();\n       temp.remove();\n    });\n}\n</code></pre>\n\n<p>To use: <code>moveAnimate('#ElementToMove', '#newContainer')</code></p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>I have extended <a href=\"http://stackoverflow.com/a/5212193/58792\">one of the other answers</a> a little further so that now you can pass an object as a third parameter which serves as a vehicle during the animation. For example, if you want to move some &lt;li&gt; from one &lt;ul&gt; to another, your &lt;ul&gt; likely has a certain class that gives the &lt;li&gt; its styling. So, it would really be handy to animate your &lt;li&gt; inside a temporary vehicle &lt;ul&gt; that provides for the same styling as either the source or the target &lt;ul&gt; of the animation:</p>\n\n<pre><code>//APPENDS AN ELEMENT IN AN ANIMATED FASHION\nfunction animateAppendTo(el, where, float){\n    var pos0 = el.offset();\n    el.appendTo(where);\n    var pos1 = el.offset();\n    el.clone().appendTo(float ? float : 'body');\n    float.css({\n        'position': 'absolute',\n        'left': pos0.left,\n        'top': pos0.top,\n        'zIndex': 1000\n    });\n    el.hide();\n    float.animate(\n        {'top': pos1.top,'left': pos1.left},\n        'slow',\n        function(){\n           el.show();\n           float.remove();\n        });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have an image tag inside of a table cell, that I'd love to move to <em>another</em> table cell, and have that movement animated.</p>\n\n<p>The code looks something like this...</p>\n\n<pre><code>&lt;td id=\"cell1\"&gt;&lt;img src=\"arrow.png\" alt=\"Arrow\"/&gt;&lt;/td&gt;\n&lt;td id=\"cell2\"&gt;&lt;/td&gt;\n</code></pre>\n\n<p>I'd like to move \"arrow.png\" to \"cell2\", and have some kind of transition effect, preferably with JQuery.</p>\n\n<p>Any ideas?</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1425630532,
            "question_id": 907279,
            "score": 23,
            "tags": [
                "javascript",
                "jquery",
                "dom",
                "jquery-ui",
                "animation"
            ],
            "title": "JQuery - animate moving DOM element to new parent?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>In general, no.  Firebase is essentially a \"realtime database\", constantly streaming updates to you as data changes, so it's more difficult to do general-purpose querying.  For now, there are a couple of (admittedly limited) querying primitives that are provided.  See the <a href=\"http://www.firebase.com/docs/queries.html\">Queries/Limits</a> page in the docs.</p>\n\n<p>You can often work around these limitations through a variety of approaches:</p>\n\n<ul>\n<li><strong>Use location names and priorities intelligently.</strong> If you structure your data as /users/[userid]/name, you can accomplish your first \"query\" by just retrieving /users/147/name.  If you know you'll want to query by age, you can use age as the priority for user nodes and then do \"usersRef.startAt(21).endAt(21).on('child_added', ...)\" to get all users age 21.  You still have to count them manually.</li>\n<li><strong>Do client-side querying.</strong>  If the entire data set is smallish, you may be able to retrieve the entire data set and then filter / process it manually on the client.</li>\n<li><strong>Run a separate server</strong>.  It can connect to Firebase, sync data and then answer \"queries\" for clients.  It can still communicate to clients through Firebase, and Firebase can still be the primary data store, but your separate server can do the work to perform queries quickly.</li>\n</ul>\n\n<p>We intend to improve on this over time, as we realize it's a weak spot compared to the flexible querying provided by traditional relational database systems.</p>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>Mr. Lehenbauer is of course the master of all things Firebase, so listen to him. ;) However, this particular topic is one I've been laboring over for a couple of weeks now.</p>\n\n<p>Here are a few of my thoughts, to enhance the \"Run a separate server\" and \"Client-side querying\" responses:</p>\n\n<p><strong>ElasticSearch (a node.js script)</strong></p>\n\n<p>With a node.js script on the server, you can have ElasticSearch integrated and providing some solid content searches in under an hour. Here's a blog post and a lib that makes it even easier: <a href=\"https://www.firebase.com/blog/2014-01-02-queries-part-two.html\">https://www.firebase.com/blog/2014-01-02-queries-part-two.html</a></p>\n\n<p><strong>cacheable/common queries</strong></p>\n\n<p>These can be handled by a server/cron process which reads the table and duplicates the data. For instance, assume I want to show \"unavailable/available\" for a user's login name during registration, but store the user records by a different unique ID for some complex reason.</p>\n\n<p>My cron/server could read all the records from the users table, then insert them into another table that is stored by email address, with a value of the user's record ID (or any other data I might want to know).</p>\n\n<p>This duplicated data approach is sort a manual caching technique and is a common practice in No-SQL environs; we're trading storage space (which is presumed to be cheap and available) for speed and simplified processes.</p>\n\n<p><strong>customized queries (using a queue)</strong></p>\n\n<p>Custom queries could be sent via XHR (ajax) directly to a server, which could do the hard labor and return better results. Alternately, you could utilize Firebase to connect with a server back-end by utilizing a queue.</p>\n\n<p>The client places the query request as a JSON into a special Firebase table called <code>queue</code> and awaits a response.</p>\n\n<p>The server listens for <code>queue.on('child_added', ...)</code> and serves the data back using `queue_record.child('response', ...data here...)</p>\n\n<p>This has some nice advantages. For one, any number of servers could listen and serve responses, making load balancing a breeze. The code for this is very simplistic to set up and <a href=\"http://stackoverflow.com/questions/11248095/how-can-i-create-a-queue-with-multiple-workers\">covered in another thread</a> here in SO.</p>\n\n<p>Hope this is helpful!</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>I created my own CMS for firebase so when creating a table of the firebase data i filtered it with this</p>\n\n<pre><code>var child = ref.child();\nvar compare;\nswitch(filter){\n          case \"First_Name\":\n            compare = child.First_Name;\n          break;\n          case \"Last_Name\":\n            compare = child.Last_Name;\n          break;\n          case \"Phone_Number\":\n            compare = child.Phone_Number;\n          break;\n          case \"Department_Number\":\n            compare = child.Department_Number;\n          break;\n          case \"Position\":\n            compare = child.Position;\n          break;\n          case \"Status\":\n            compare = child.Status;\n          break;\n          case \"Tier\":\n            compare = child.Tier;\n          break;\n      }\n\n\n      if(compare.match(\"^\" + string)){\n        //display items \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a fast way to perform database-style queries with Firebase?</p>\n\n<p>For example:</p>\n\n<p>Given a firebase reference <code>users</code> with fields <code>user_id</code>, <code>name</code>, and <code>age</code>, what would be the best way to do a query similar to this:</p>\n\n<pre><code>SELECT name FROM users WHERE `user_id`=147;\n</code></pre>\n\n<p>and</p>\n\n<pre><code>SELECT COUNT(*) FROM users WHERE age=21;\n</code></pre>\n",
            "last_activity_date": 1416287239,
            "question_id": 11587775,
            "score": 20,
            "tags": [
                "javascript",
                "firebase"
            ],
            "title": "Database-style Queries with Firebase"
        },
        {
            "answer_count": 16,
            "answers": [
                {
                    "body": "<p>Disable the button at the very end of your submit handler.  If the validation fails, it should return false before that.</p>\n\n<p>However, the JavaScript approach is not something that can be relied upon, so you should have something to detect duplicates on the server as well.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Not sure if this will help, but there's onsubmit event in form. You can use this event whenever the form submit (from any button or controls).\nFor reference: <a href=\"http://www.htmlcodetutorial.com/forms/_FORM_onSubmit.html\" rel=\"nofollow\">http://www.htmlcodetutorial.com/forms/_FORM_onSubmit.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The following function is useful without needing the disabling part which tends to be unreliable. Just use \"return check_submit();\" as part of the onclick handler of the submit buttons.</p>\n\n<p>There should also be a hidden field to hold the form_submitted initial value of 0;</p>\n\n<pre><code>&lt;input type=\"hidden\" name=\"form_submitted\" value=\"0\"&gt;\n\nfunction check_submit (){\n        \tif (document.Form1.form_submitted.value == 1){\n        \t\talert(\"Don't submit twice. Please wait.\");\n        \t\treturn false;\n        \t}\n        \telse{\n        \t\tdocument.Form1.form_submitted.value = 1;\n        \t\treturn true;\n        \t}\n        \treturn false;\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>A solution will be to set a hidden field when the button is clicked, with the number 1.  </p>\n\n<p>On the button click handler first thing is to check that number if it is something other than 1 just return out of the function.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You may also be able to take advantage of the onsubmit() javascript event that is available on forms. This event fires when the form is actually submit and shouldn't trap  until after the validation is complete.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Give this a whirl:</p>\n\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\nusing System.Threading;\n\npublic partial class _Default : System.Web.UI.Page \n{\n    protected void Page_Load(object sender, EventArgs e)\n    {\n\n         // Identify button as a \"disabled-when-clicked\" button...\n         WebHelpers.DisableButtonOnClick( buttonTest, \"showPleaseWait\" ); \n    }\n\n    protected void buttonTest_Click( object sender, EventArgs e )\n    {\n        // Emulate a server-side process to demo the disabled button during\n        // postback.\n        Thread.Sleep( 5000 );\n    }\n}\n\n\n\nusing System;\nusing System.Web;\nusing System.Web.UI.WebControls;\nusing System.Text;\n\npublic class WebHelpers\n{\n    //\n    // Disable button with no secondary JavaScript function call.\n    //\n    public static void DisableButtonOnClick( Button ButtonControl )\n    {\n        DisableButtonOnClick( ButtonControl, string.Empty );    \n    }\n\n    //\n    // Disable button with a JavaScript function call.\n    //\n    public static void DisableButtonOnClick( Button ButtonControl, string ClientFunction )\n    {   \n        StringBuilder sb = new StringBuilder( 128 );\n\n        // If the page has ASP.NET validators on it, this code ensures the\n        // page validates before continuing.\n        sb.Append( \"if ( typeof( Page_ClientValidate ) == 'function' ) { \" );\n        sb.Append( \"if ( ! Page_ClientValidate() ) { return false; } } \" );\n\n        // Disable this button.\n        sb.Append( \"this.disabled = true;\" ); \n\n        // If a secondary JavaScript function has been provided, and if it can be found,\n        // call it. Note the name of the JavaScript function to call should be passed without\n        // parens.\n        if ( ! String.IsNullOrEmpty( ClientFunction ) ) \n        {\n            sb.AppendFormat( \"if ( typeof( {0} ) == 'function' ) {{ {0}() }};\", ClientFunction );  \n        }\n\n        // GetPostBackEventReference() obtains a reference to a client-side script function \n        // that causes the server to post back to the page (ie this causes the server-side part \n        // of the \"click\" to be performed).\n        sb.Append( ButtonControl.Page.ClientScript.GetPostBackEventReference( ButtonControl ) + \";\" );\n\n        // Add the JavaScript created a code to be executed when the button is clicked.\n        ButtonControl.Attributes.Add( \"onclick\", sb.ToString() );\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>if the validation is successful, then disable the button. if it's not, then don't.</p>\n\n<pre><code>function validate(form) {\n  // perform validation here\n  if (isValid) {\n    form.mySubmitButton.disabled = true;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n&lt;form onsubmit=\"return validate(this);\"&gt;...&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is an easier but similar method than what <a href=\"http://stackoverflow.com/questions/106509/disable-button-on-form-submission#106958\">rp</a> has suggested:</p>\n\n<pre><code>function submit(button) {\n        Page_ClientValidate(); \n        if(Page_IsValid)\n        {\n            button.disabled = true;\n        }\n}\n\n &lt;asp:Button runat=\"server\" ID=\"btnSubmit\" OnClick=\"btnSubmit_OnClick\" OnClientClick=\"submit(this)\" Text=\"Submit Me\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Set the visibility on the button to 'none';</p>\n\n<pre><code>\nbtnSubmit.Attributes(\"onClick\") = document.getElementById('btnName').style.display = 'none';</code></pre>\n\n<p>Not only does it prevent the double submission, but it is a clear indicator to the user that you don't want the button pressed more than once.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm not a huge fan of writing all that javascript in the code-behind.  Here is what my final solution looks like.</p>\n\n<p>Button:</p>\n\n<pre><code>&lt;asp:Button ID=\"btnSubmit\" runat=\"server\" Text=\"Submit\" OnClick=\"btnSubmit_Click\" OnClientClick=\"doSubmit(this)\" /&gt;\n</code></pre>\n\n<p>Javascript:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;&lt;!--\nfunction doSubmit(btnSubmit) {\n    if (typeof(Page_ClientValidate) == 'function' &amp;&amp; Page_ClientValidate() == false) { \n        return false;\n    }    \n    btnSubmit.disabled = 'disabled';\n    btnSubmit.value = 'Processing. This may take several minutes...';\n    &lt;%= ClientScript.GetPostBackEventReference(btnSubmit, string.Empty) %&gt;;    \n}\n//--&gt;\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Just heard about the \"DisableOnSubmit\" property of an &lt;asp:Button&gt;, like so:</p>\n\n<pre><code>&lt;asp:Button ID=\"submit\" runat=\"server\" Text=\"Save\"\n    OnClick=\"yourClickEvent\" DisableOnSubmit=\"true\" /&gt;\n</code></pre>\n\n<p>When rendered, the button's onclick attribute looks like so:</p>\n\n<pre><code>onclick=\"this.disabled=true; setTimeout('enableBack()', 3000);\n  WebForm_DoPostBackWithOptions(new\n  WebForm_PostBackOptions('yourControlsName', '', true, '', '', false, true))\n</code></pre>\n\n<p>And the \"enableBack()' javascript function looks like this:</p>\n\n<pre><code>function enableBack()\n{\n    document.getElementById('yourControlsName').disabled=false;\n}\n</code></pre>\n\n<p>So when the button is clicked, it becomes disabled for 3 seconds.  If the form posts successfully then you never see the button re-enable.  If, however, any validators fail then the button becomes enabled again after 3 seconds.</p>\n\n<p>All this just by setting an attribute on the button--no javascript code needs to be written by hand.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Note that rp's approach will double submit your form if you are using buttons with <code>UseSubmitBehavior=\"false\"</code>.</p>\n\n<p>I use the following variation of rp's code:</p>\n\n<pre><code>public static void DisableButtonOnClick(Button button, string clientFunction)\n{\n    // If the page has ASP.NET validators on it, this code ensures the\n    // page validates before continuing.\n    string script = \"if (typeof(Page_ClientValidate) == 'function') { \"\n            + \"if (!Page_ClientValidate()) { return false; } } \";\n\n    // disable the button\n    script += \"this.disabled = true; \";\n\n    // If a secondary JavaScript function has been provided, and if it can be found, call it.\n    // Note the name of the JavaScript function to call should be passed without parens.\n    if (!string.IsNullOrEmpty(clientFunction))\n        script += string.Format(\"if (typeof({0}) == 'function') {{ {0}() }} \", clientFunction);\n\n    // only need to post back if button is using submit behaviour\n    if (button.UseSubmitBehavior)\n        script += button.Page.GetPostBackEventReference(button) + \"; \";\n\n    button.Attributes.Add(\"onclick\", script);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The correct (as far as user-friendliness is concerned, at least) way would be to disable the button using the OnClientClick attribute, perform the client-side validation, and then use the result of that to continue or re-enable the button.</p>\n\n<p>Of course, you should ALSO write server-side code for this, as you cannot rely on the validation even being carried out due to a lack, or particular implementation, of JavaScript. However, if you rely on the server controlling the button's enabled / disabled state, then you basically have no way of blocking the user submitting the form multiple times anyway. For this reason you should have some kind of logic to detect multiple submissions from the same user in a short time period (identical values from the same Session, for example).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>one of my solution is as follow:</p>\n\n<p>add the script in the page_load of your aspx file</p>\n\n<pre><code>    HtmlGenericControl includeMyJava = new HtmlGenericControl(\"script\");\n    includeMyJava.Attributes.Add(\"type\", \"text/javascript\");\n    includeMyJava.InnerHtml = \"\\nfunction dsbButton(button) {\";\n    includeMyJava.InnerHtml += \"\\nPage_ClientValidate();\";\n    includeMyJava.InnerHtml += \"\\nif(Page_IsValid)\";\n    includeMyJava.InnerHtml += \"\\n{\";\n    includeMyJava.InnerHtml += \"\\nbutton.disabled = true;\";\n    includeMyJava.InnerHtml += \"}\";\n    includeMyJava.InnerHtml += \"\\n}\";\n    this.Page.Header.Controls.Add(includeMyJava);\n</code></pre>\n\n<p>and then set your aspx button parameters as follow:</p>\n\n<pre><code>&lt;asp:Button ID=\"send\" runat=\"server\" UseSubmitBehavior=\"false\" OnClientClick=\"dsbButton(this);\" Text=\"Send\" OnClick=\"send_Click\" /&gt;\n</code></pre>\n\n<p>Note that \"onClientClick\" helps to disable to button and \"UseSubmitBehaviour\" disables the traditional submitting behaviour of page and allows asp.net to render the submit behaviour upon user script.</p>\n\n<p>good luck</p>\n\n<p>-Waqas Aslam</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>So simply disabling the button via javascript is not a cross-browser compatible option. Chrome will not submit the form if you just use <code>OnClientClick=\"this.disabled=true;\"</code><br>\nBelow is a solution that I have tested in Firefox 9, Internet Explorer 9, and Chrome 16:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar buttonToDisable;\nfunction disableButton(sender)\n{\n    buttonToDisable=sender;\n    setTimeout('if(Page_IsValid==true)buttonToDisable.disabled=true;', 10);\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>Then register 'disableButton' with the click event of your form submission button, one way being:</p>\n\n<pre><code>&lt;asp:Button runat=\"server\" ID=\"btnSubmit\" Text=\"Submit\" OnClientClick=\"disableButton(this);\" /&gt;\n</code></pre>\n\n<p>Worth noting that this gets around your issue of the button being disabled if client side validation fails. Also requires no server side processing.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Building on @rp.'s answer, I modified it to invoke the custom function and either submit and disable on success or \"halt\" on error:</p>\n\n<pre><code>public static void DisableButtonOnClick(Button ButtonControl, string ClientFunction)\n{\n    StringBuilder sb = new StringBuilder(128);\n\n    if (!String.IsNullOrEmpty(ClientFunction))\n    {\n        sb.AppendFormat(\"if (typeof({0}) == 'function') {{ if ({0}()) {{ {1}; this.disabled=true; return true; }} else {{ return false; }} }};\", ClientFunction, ButtonControl.Page.ClientScript.GetPostBackEventReference(ButtonControl, null));\n    }\n    else\n    {\n        sb.Append(\"return true;\");\n    }\n\n    ButtonControl.Attributes.Add(\"onclick\", sb.ToString());\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a button that I would like to disable when the form submits to prevent the user submitting multiple times.</p>\n\n<p>I have tried naively disabling the button with javascript onclick but then if a client side validation that fails the button remains disabled.</p>\n\n<p>How do I disable the button when the form successfully submits not just when the user clicks?</p>\n\n<p>This is an ASP.NET form so I would like to hook in nicely with the asp.net ajax page lifecycle if possible.</p>\n",
            "last_activity_date": 1400752709,
            "question_id": 106509,
            "score": 15,
            "tags": [
                "asp.net",
                "javascript",
                "webforms"
            ],
            "title": "Disable button on form submission"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Using vanilla Javascript:</p>\n\n<pre><code>Array.prototype.remove = function(elem) {\n    var match = -1;\n\n    while( (match = this.indexOf(elem)) &gt; -1 ) {\n        this.splice(match, 1);\n    }\n};\n\nvar a = [4, 8, 2, 3];\n\na.remove(8);\n</code></pre>\n\n<p>Only jQuery:</p>\n\n<pre><code>jQuery.removeFromArray = function(value, arr) {\n    return jQuery.grep(arr, function(elem, index) {\n        return elem !== value;\n    });\n};\n\nvar a = [4, 8, 2, 3];\n\na = jQuery.removeFromArray(8, a);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>This seems pretty clean and understandable; unlike other answers, it takes into account the possibility of an element showing up more than once.</p>\n\n<pre><code>Array.prototype.remove = function (value) {\n    for (var i = 0; i &lt; this.length; ) {\n        if (this[i] === value) {\n            this.splice(i, 1);\n        } else {\n           ++i;\n        }\n    }\n}\n</code></pre>\n\n<p>In CoffeeScript:</p>\n\n<pre><code>Array::remove = (value) -&gt;\n    i = 0\n    while i &lt; @length\n        if @[i] == value\n            @splice i, 1\n        else\n            ++i\n    return @\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>CoffeeScript:</p>\n\n<pre><code>Array::remove = (e) -&gt; @[t..t] = [] if (t = @indexOf(e)) &gt; -1\n</code></pre>\n\n<p>Which simply splices out the element at position <code>t</code>, the index where <code>e</code> was found (if it was actually found <code>t &gt; -1</code>). Coffeescript translates this to:</p>\n\n<pre><code>Array.prototype.remove = function(e) {\n    var t, _ref;\n    if ((t = this.indexOf(e)) &gt; -1) {\n        return ([].splice.apply(this, [t, t - t + 1].concat(_ref = [])), _ref);\n    }\n};\n</code></pre>\n\n<p>And if you want to remove all matching elements, and return a new array, using CoffeeScript and jQuery:</p>\n\n<pre><code>Array::remove = (v) -&gt; $.grep @,(e)-&gt;e!=v\n</code></pre>\n\n<p>which translates into:</p>\n\n<pre><code>Array.prototype.remove = function(v) {\n    return $.grep(this, function(e) {\n        return e !== v;\n    });\n};\n</code></pre>\n\n<p>Or doing the same without jQuery's grep:</p>\n\n<pre><code>Array::filterOutValue = (v) -&gt; x for x in @ when x!=v\n</code></pre>\n\n<p>which translates to:</p>\n\n<pre><code>Array.prototype.filterOutValue = function(v) {\n    var x, _i, _len, _results;\n    _results = [];\n    for (_i = 0, _len = this.length; _i &lt; _len; _i++) {\n        x = this[_i];\n        if (x !== v) {\n            _results.push(x);\n        }\n    }\n    return _results;\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 84
                },
                {
                    "body": "<p>This is just a slight change to <a href=\"http://stackoverflow.com/questions/4825812/clean-way-to-remove-element-from-javascript-array-with-jquery-coffeescript/4826179#4826179\">Amir's awesome solution</a>:</p>\n\n<pre><code>Array::remove = (e) -&gt; @splice(t,1)[0] if (t = @indexOf(e)) &gt; -1\n</code></pre>\n\n<p>which returns the element iff the list has it, so you can do something like:</p>\n\n<pre><code>do_something 100 if a.remove(100)\n</code></pre>\n\n<p>The remove coffee script translates to this javascript:</p>\n\n<pre><code>Array.prototype.remove = function(e) {\n  var t, _ref;\n  if ((t = this.indexOf(e)) &gt; -1) {\n    return ([].splice.apply(this, [t, t - t + 1].concat(_ref = [])), _ref);\n  }};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>if you are also using CoffeeScript creator's <a href=\"http://documentcloud.github.com/underscore/#\" rel=\"nofollow\">underscore.js</a> library, here's a one-liner that will work nicely:</p>\n\n<pre><code>a = _(a).reject (v)-&gt; v is e\n</code></pre>\n\n<p>or in js:</p>\n\n<pre><code>a = _(a).reject(function(v) { return v == e; });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This is really easy with jQuery:</p>\n\n<pre><code>var index = $.inArray(\"value\", myArray);\nif(index != -1)\n{\n  myArray.splice(index, 1);\n}\n</code></pre>\n\n<p>Notes:</p>\n\n<p><code>splice</code> returns the elements that were removed, so don't do <code>myArray = myArray.splice()</code>.  <code>myArray.splice(index,1)</code> means \"remove the array element at index <code>'index'</code> from the array\".</p>\n\n<p><code>$.inArray</code> returns the index in the array of the value you're looking for, or -1 if the value isn't in the array.  </p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>You might just try jQuery's grep utility:</p>\n\n<pre><code>a = [4,8,2,3]\n$.grep(a,function(v){return v!=8;})\n</code></pre>\n\n<p>There may be a performance issue here, as you're technically causing the variable to reference a <em>new</em> array; you're not really modifying the original one. Assuming the original isn't referenced somewhere else, the garbage collector should take or this pretty quickly. This has never been an issue for me, but others might know better. Cheers!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Although you are asking for a clean approach using Coffeescript or jQuery, I find the cleanest approach is using the vanilla javascript method <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/filter\" rel=\"nofollow\">filter</a>:</p>\n\n<pre><code>array.filter(function (item) { return item !== match });\n</code></pre>\n\n<p>It looks cleaner in coffeescript but this translates to the exact same javascript, so I only consider it a visual difference, and not an advanced feature of coffeescript:</p>\n\n<pre><code>array.filter (item) -&gt; item isnt match\n</code></pre>\n\n<p>Filter is not supported in legacy browsers, but Mozilla provides a <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/filter#Compatibility\" rel=\"nofollow\">polyfill</a> that adheres to the ECMA standard. I think this is a perfectly safe approach because you are only bringing old browsers to modern standards, and you are not inventing any new functionality in your polyfill.</p>\n\n<p>Sorry if you were specifically looking for a jQuery or Coffeescript only method, but I think you were mainly asking for a library method because you were unaware of a clean javascript only method.</p>\n\n<p>There you have it, no libraries needed!</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>There are many questions about this, not least:\n  <a href=\"http://stackoverflow.com/questions/450717/jquery-version-of-array-contains\">jQuery version of array contains</a>, <a href=\"http://stackoverflow.com/questions/3231453/in-javascript-how-do-i-remove-an-element-from-an-array-of-objects\">a solution with the splice method</a> and many more. However, they all seem complicated and annoying.</p>\n\n<p>With the combined powers of javascript, jQuery and coffeescript, what is the very cleanest way to remove an element from a javascript array? We don't know the index in advance. In code:</p>\n\n<pre><code>a = [4,8,2,3]\na.remove(8)     # a is now [4,2,3]\n</code></pre>\n\n<p>Failing a good built-in method, what is a clean way of extending javascript arrays to support such a method? If it helps, I'm really using arrays as sets. Solutions will ideally work nicely in coffeescript with jQuery support. Also, I couldn't care less about speed, but instead prioritize clear, simple code.</p>\n",
            "last_activity_date": 1366835826,
            "question_id": 4825812,
            "score": 58,
            "tags": [
                "javascript",
                "jquery",
                "coffeescript"
            ],
            "title": "Clean way to remove element from javascript array (with jQuery, coffeescript)"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Google have messed up their script. There's not much you can do about it.</p>\n\n<p>For some reason <code>http://pagead2.googlesyndication.net/pagead/expansion_embed.js</code>, included in the parent page by the AdSense scripts, is trying to send information about the advert into a newly-written <code>&lt;iframe&gt;</code> created to hold the advert, using the new HTML5 <a href=\"http://www.w3.org/TR/html5/comms.html#dom-window-postmessage-2\">postMessage</a> facility:</p>\n\n<pre><code>            ha(this, function (f, e) {\n                d[Pa](this.a[A]+\"|\"+f+\":\"+e, this.la)\n            });\n</code></pre>\n\n<p>Yeah. Some nice minified/obfuscated code there. Trust me, <code>Pa</code> is <code>'postMessage'</code>!</p>\n\n<p>The <code>targetOrigin</code> argument in this call, <code>this.la</code> is set to <code>http://googleads.g.doubleclick.net</code>. However, the new iframe was written with its <code>src</code> set to <code>about:blank</code>. This doesn't match the target origin, so the browser must refuse to send the message. Only Chrome seems to be dropping an actual whinge to the console log about it though.</p>\n\n<p>No idea why it's doing this at all, never mind why it's not just using <code>'*'</code> as a target origin... I'm not really feeling like wading into the obfuscated script to find out. However, this error should not cause page loading to slow down. If you're seeing pauses it's usually resolving and fetching other external scripts.</p>\n",
                    "is_accepted": true,
                    "score": 66
                },
                {
                    "body": "<p>Google's trying to exploit a browser quirk whereby some browsers ignore the same-origin policy for windows with about:blank as the URL, allowing that window to submit XMLHttpRequest or, in this case, postMessage requests to any site.</p>\n\n<p>As far as I know, browsers have recently been disabling this behaviour. You must have one such patched browser.</p>\n\n<p>Hopefully, this broken functionality doesn't affect your ability to earn money from the ads.</p>\n\n<p>It's annoying for your site to generate Javascript errors through no fault of your own, but it is a possibility you must accept when you run someone else's Javascript on your page.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>This seems to be a case of the error message masking the real cause. The real cause is probably some kind of Adsense misconfiguration; unfortunately Adsense doesn't seem to do sufficient checks to give a more relevant error message.</p>\n\n<p>I had this error myself and came to this conclusion after researching the forums, where some people reported it was fixed after verifying their bank account or whatever. In my case, my server-side environment was messing with the google_ad_client parameter, so the real problem was that parameter being null. Once I fixed that, ads were showing and no more error message.</p>\n\n<p>So in practice, it's really nothing to do with same-origin policy. Now that the adsense code is correct, I'm even now able to show ads when running on localhost, as well as on the server.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A crossdomain.xml file in the site root allowing access to googleads.g.doubleclick.net should fix it.</p>\n\n<p>See this page, <a href=\"http://www.warriorforum.com/adsense-ppc-seo-discussion-forum/458906-adsense-blank-space-problem.html\" rel=\"nofollow\">http://www.warriorforum.com/adsense-ppc-seo-discussion-forum/458906-adsense-blank-space-problem.html</a></p>\n\n<p>\n\n\n  \n</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Just got a similar problem. Not sure if it's related, but I'll explain anyway.</p>\n\n<p>I had two ads showing on my page and wanted to \"refactor\" the code by only calling this script once at the end of the page: </p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://pagead2.googlesyndication.com/pagead/show_ads.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>My ads broke and I figured out that this script tag has to be placed just after each ads var script:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;&lt;!--\ngoogle_ad_client = \"ca-pub-872346872364872364\";\ngoogle_ad_slot = \"719238712983\";\ngoogle_ad_width = 728;\ngoogle_ad_height = 90;\n//--&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>But when I had reverted my changes the first script tag was still also placed at the bottom of my page and thusly trying to load another one of my script-tags as an ad. This failed and I got this error you saw.</p>\n\n<p>So check that you keep the two ads script tags after eachother and no place else, ex:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;&lt;!--\ngoogle_ad_client = \"ca-pub-872346872364872364\";\ngoogle_ad_slot = \"719238712983\";\ngoogle_ad_width = 728;\ngoogle_ad_height = 90;\n//--&gt;\n&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"http://pagead2.googlesyndication.com/pagead/show_ads.js\"&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Its normal because our website preventing CSRF attack from other website.</p>\n\n<p>to solve this problem, create file crossdomain.xml in your webroot, we will allow googleads to our website and fill with this text</p>\n\n<pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;!DOCTYPE cross-domain-policy \n  SYSTEM \"http://www.macromedia.com/xml/dtds/cross-domain-policy.dtd\"&gt;\n&lt;cross-domain-policy&gt;\n  &lt;allow-access-from domain=\"googleads.g.doubleclick.net\" /&gt;\n&lt;/cross-domain-policy&gt;\n</code></pre>\n\n<p>to test it, go to your domain <a href=\"http://your-domain.com/crossdomain.xml\">http://your-domain.com/crossdomain.xml</a> and make sure there is no errors for that page. You also allowed to use wildcards, etc (look at reference). When you're done, refresh your page.\nHope that helps.</p>\n\n<p>live example:\n<a href=\"http://www.blanjamudah.com/crossdomain.xml\">http://www.blanjamudah.com/crossdomain.xml</a></p>\n\n<p>reference:\n<a href=\"http://en.wikipedia.org/wiki/Cross-site_request_forgery\">http://en.wikipedia.org/wiki/Cross-site_request_forgery</a>\n<a href=\"http://curtismorley.com/2007/09/01/flash-flex-tutorial-how-to-create-a-crossdomainxml-file/\">http://curtismorley.com/2007/09/01/flash-flex-tutorial-how-to-create-a-crossdomainxml-file/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>For those who land on this page after searching for the domain and protocol error code:</p>\n\n<p>AdSense has released a new <a href=\"https://support.google.com/adsense/answer/3221666?hl=en\" rel=\"nofollow\">async version</a> of their javascript that addressed the cross-domain errors being generated when we used their older embed code. When we used their standard embed code on our AJAX-heavy site, we got the cross-domain error. When we implemented their async code, and <a href=\"https://support.google.com/richmedia/answer/156396?hl=en\" rel=\"nofollow\">in combination with a properly defined crossdomain.xml</a> the cross-domain error went away.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>On several of my adsense running sites, I have been getting the following errors:</p>\n\n<blockquote>\n  <p><strong>Unable to post message to [http://]googleads.g.doubleclick.net.\n  Recipient has origin\n  <a href=\"http://www.anekdotz.com\">http://www.anekdotz.com</a>.</strong></p>\n  \n  <p>Unsafe JavaScript attempt to access\n  frame with URL\n  [http://]www.anekdotz.com/ from frame\n  with URL\n  [http://]googleads.g.doubleclick.net/pagead/ads?client=ca-pub-9099580055602120&amp;output=html&amp;h=250&amp;slotname=9210181593&amp;w=300&amp;flash=10.0.42&amp;url=http%3A%2F%2Fwww.anekdotz.com%2F&amp;dt=1269901036429&amp;correlator=1269901036438&amp;frm=0&amp;ga_vid=711000587.1269901037&amp;ga_sid=1269901037&amp;ga_hid=654061172&amp;ga_fc=0&amp;u_tz=-240&amp;u_his=2&amp;u_java=1&amp;u_h=900&amp;u_w=1440&amp;u_ah=878&amp;u_aw=1436&amp;u_cd=24&amp;u_nplug=10&amp;u_nmime=101&amp;biw=1365&amp;bih=806&amp;eid=44901212&amp;fu=0&amp;ifi=1&amp;dtd=153&amp;xpc=Xkfk1oufPQ&amp;p=http%3A//www.anekdotz.com.\n  <strong>Domains, protocols and ports must match.</strong></p>\n</blockquote>\n\n<p>(from the Chrome javascript console)</p>\n\n<p>The ads seem to show properly and it doesn't affect my native javascript code.  However sometimes these errors seem to slow down page loading.  How can I fix this problem?</p>\n\n<p>(I modified the URLs to let me post this as I'm a new user)</p>\n",
            "last_activity_date": 1381328339,
            "question_id": 2541797,
            "score": 57,
            "tags": [
                "javascript",
                "adsense"
            ],
            "title": "Javascript errors from Google Adsense"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><del>I might be missing something, but afaik, you get <code>undefined</code> only</del></p>\n\n<p><strong>Update:</strong> Ok, I missed a lot, trying to complete:</p>\n\n<p>You get <code>undefined</code>...</p>\n\n<p>... when you try to access properties of an object that don't exist:</p>\n\n<pre><code>var a = {}\na.foo // undefined\n</code></pre>\n\n<p>... when you have declared a variable but not initialized it:</p>\n\n<pre><code>var a;\n// a is undefined\n</code></pre>\n\n<p>... when you access a parameter for which no value was passed:</p>\n\n<pre><code>function foo (a, b) {\n    // something\n}\n\nfoo(42); // b inside foo is undefined\n</code></pre>\n\n<p>... when a function does not return a value:</p>\n\n<pre><code>function foo() {};\nvar a = foo(); // a is undefined\n</code></pre>\n\n<hr>\n\n<p>It might be that some built-in functions return <code>null</code> on some error, but if so, then it is documented. <code>null</code> is a concrete value in JavaScript, <code>undefined</code> is not.</p>\n\n<hr>\n\n<p>Normally you don't need to distinguish between those. Depending on the possible values of a variable, it is sufficient to use <code>if(variable)</code> to test whether a value is set or not (both, <code>null</code> and <code>undefined</code> evaluate to <code>false</code>).</p>\n\n<blockquote>\n  <p>Also different browsers seem to be returning these differently.</p>\n</blockquote>\n\n<p>Please give a concrete example.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>A property, when it has no definition, is undefined. \nnull is an object. It's type is null. undefined is not an object, it's type is undefined. </p>\n\n<p>This is a good article explaining the difference and also giving some examples.</p>\n\n<p><a href=\"http://saladwithsteve.com/2008/02/javascript-undefined-vs-null.html\" rel=\"nofollow\">null vs undefined</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You get undefined for the various scenarios:</p>\n\n<p>You declare a variable with var but never set it.</p>\n\n<pre><code>var foo; \nalert(foo); //undefined.\n</code></pre>\n\n<p>You attempt to access a property on an object you've never set.</p>\n\n<pre><code>var foo = {};\nalert(foo.bar); //undefined\n</code></pre>\n\n<p>You attempt to access an argument that was never provided.</p>\n\n<pre><code>function myFunction (foo) {\n  alert(foo); //undefined.\n}\n</code></pre>\n\n<p>As cwolves pointed out in a comment on another answer, functions that don't return a value.</p>\n\n<pre><code>function myFunction () {\n}\nalert(myFunction());//undefined\n</code></pre>\n\n<p>A null usually has to be intentionally set on a variable or property (see comments for a case in which it can appear without having been set). In addition a null is of type <code>object</code> and undefined is of type <code>undefined</code>.</p>\n\n<p>I should also note that null is valid in JSON but undefined is not:</p>\n\n<pre><code>JSON.parse(undefined); //syntax error\nJSON.parse(null); //null\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 44
                },
                {
                    "body": "<p>The DOM methods getElementById, nextSibling, childNodes[n], parentNode and so on return null (defined but having no value) when the call does not return a node object. </p>\n\n<p>The <strong>property</strong> is defined, but the object it refers to does not exist.</p>\n\n<p>This is one of the few times you may <strong>not</strong> want to test for equality-</p>\n\n<p>if(x!==undefined) will be true for a null value</p>\n\n<p>but if(x!= undefined) will be true (only) for  values that are not either undefined or null.</p>\n",
                    "is_accepted": true,
                    "score": 48
                },
                {
                    "body": "<p>I find that some of these answers are vague and complicated, I find the best way to figure out these things for sure is to just open up the console and test it yourself.</p>\n\n<pre><code>var x;\n\nx == null            // true\nx == undefined       // true\nx === null           // false\nx === undefined      // true\n\nvar y = null;\n\ny == null            // true\ny == undefined       // true\ny === null           // true\ny === undefined      // false\n\ntypeof x             // 'undefined'\ntypeof y             // 'object'\n\nvar z = {abc: null};\n\nz.abc == null        // true\nz.abc == undefined   // true\nz.abc === null       // true\nz.abc === undefined  // false\n\nz.xyz == null        // true\nz.xyz == undefined   // true\nz.xyz === null       // false\nz.xyz === undefined  // true\n\nnull = 1;            // throws error: invalid left hand assignment\nundefined = 1;       // works fine: this can cause some problems\n</code></pre>\n\n<p>So this is definitely one of the more subtle nuances of JavaScript. As you can see, you can override the value of <code>undefined</code>, making it somewhat unreliable compared to <code>null</code>. Using the <code>==</code> operator, you can reliably use <code>null</code> and <code>undefined</code> interchangeably as far as I can tell. However, because of the advantage that <code>null</code> cannot be redefined, I might would use it when using <code>==</code>.</p>\n\n<p>For example, <code>variable != null</code> will ALWAYS return false if <code>variable</code> is equal to either <code>null</code> or <code>undefined</code>, whereas <code>variable != undefined</code> will return false if <code>variable</code> is equal to either <code>null</code> or <code>undefined</code> UNLESS <code>undefined</code> is reassigned beforehand.</p>\n\n<p>You can reliably use the <code>===</code> operator to differentiate between <code>undefined</code> and <code>null</code>, if you need to make sure that a value is actually <code>undefined</code> (rather than <code>null</code>).</p>\n\n<h3>According to the ECMAScript 5 spec:</h3>\n\n<ul>\n<li>Both <strong><code>Null</code></strong> and <strong><code>Undefined</code></strong> are two of the six built in types.</li>\n</ul>\n\n<p><strong>4.3.9 undefined value</strong></p>\n\n<blockquote>\n  <p>primitive value used when a variable has not been assigned a value</p>\n</blockquote>\n\n<p><strong>4.3.11 null value</strong></p>\n\n<blockquote>\n  <p>primitive value that represents the intentional absence of any object value</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 51
                },
                {
                    "body": "<p>Regarding this topic the specification (ecma-262) is quite clear </p>\n\n<p>I found it really useful and straightforward, so that I share it:\n- Here you will find <a href=\"http://ecma-international.org/ecma-262/5.1/#sec-11.9.3\" rel=\"nofollow\">Equality algorithm</a>\n- Here you will find <a href=\"http://ecma-international.org/ecma-262/5.1/#sec-11.9.6\" rel=\"nofollow\">Strict equality algorithm</a></p>\n\n<p>I bumped into it reading \"Abstract equality, strict equality, and same value\" from mozilla developer site, section sameness.</p>\n\n<p>I hope you find it useful.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am really confused as to when Javascript returns <code>null</code> or <code>undefined</code>. Also different browsers seem to be returning these differently.</p>\n\n<p>Could you please give some examples of <code>null</code>/<code>undefined</code> with the browser that return them.</p>\n\n<p>While I am now clear on the <code>undefined</code> aspect, I am still not 100% clear on <code>null</code>.Is it similar to a blank value ? </p>\n\n<p>E.g. You have a text box which does not have any value set. Now when you try to access it's value, will it be <code>null</code> or <code>undefined</code> and are they similar ?</p>\n",
            "last_activity_date": 1394727244,
            "question_id": 6429225,
            "score": 56,
            "tags": [
                "javascript",
                "null",
                "undefined"
            ],
            "title": "Javascript null or undefined"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>While no option is perfect, there are a few choices:</p>\n\n<p>1.) Adobe has a SVG plugin for IE8 <a href=\"http://www.iegallery.com/en/addons/detail.aspx?id=444\">http://www.iegallery.com/en/addons/detail.aspx?id=444</a></p>\n\n<p>2.) The Raphael JavaScript Framework allows vector graphics cross browser - <a href=\"http://raphaeljs.com/\">http://raphaeljs.com/</a></p>\n\n<p>3.) Then there are the Open Source projects: <a href=\"http://code.google.com/p/svg2vml/\">http://code.google.com/p/svg2vml/</a> and <a href=\"http://code.google.com/p/svgweb/\">http://code.google.com/p/svgweb/</a></p>\n\n<p>4.) There is the option to display flash for IE8 and below.</p>\n\n<p>5.) There is the option to gracefully degrade for IE8 and below and show a static image in place of the animation.</p>\n\n<p>Based on your reason for the animation - I would recomend 4 or 5.</p>\n",
                    "is_accepted": true,
                    "score": 59
                },
                {
                    "body": "<p>There are two options that will not tie you to specific frameworks (raphael) or complicated solutions (svgweb):</p>\n\n<ol>\n<li>Chrome Frame: if you're going to get an extension, get that one</li>\n<li>Server-side rasterization: send your SVG back to the server, inkscape rasterize to png, send it back. </li>\n</ol>\n\n<p>If you go number 2 (yes it is a crappy option), and want to keep clickable parts and tooltips, you will have to use invisible divs, or labels that are in HTML on top of the rendered svg. </p>\n\n<p>You can reuse the positioning information from the svg to position those divs in order to avoid overhead for that part.</p>\n\n<p>The best option probably is to diplomatically encourage them to use a real browser, but then it's not always possible for those who live under the rule of an unskilled IT department ;)</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I created animation in flash and converted it into HTML5 using <a href=\"http://www.google.com/doubleclick/studio/swiffy/\">Swiffy</a>.</p>\n\n<p>I think it's using SVG to render all of it; is there some JavaScript or a trick to make IE8 and below support it? My animation is working well with Internet Explorer 9.</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1372417194,
            "question_id": 9353798,
            "score": 44,
            "tags": [
                "javascript",
                "html5",
                "internet-explorer",
                "svg",
                "cross-browser"
            ],
            "title": "SVG support for Internet Explorer 8 and below"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Be careful, <code>d</code> is the list.</p>\n\n<pre><code>for (var i = 0; i &lt; result.d.length; i++) { \n    alert(result.d[i].employeename);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 45
                },
                {
                    "body": "<p>It's close!  Try this:</p>\n\n<pre><code>for (var prop in result) {\n    if (result.hasOwnProperty(prop)) {\n        alert(result[prop]);\n    }\n}\n</code></pre>\n\n<p>Update:</p>\n\n<p>If your result is truly is an array of one object, then you might have to do this:</p>\n\n<pre><code>for (var prop in result[0]) {\n    if (result[0].hasOwnProperty(prop)) {\n        alert(result[0][prop]);\n    }\n}\n</code></pre>\n\n<p>Or if you want to loop through each result in the array if there are more, try:</p>\n\n<pre><code>for (var i = 0; i &lt; results.length; i++) {\n    for (var prop in result[i]) {\n        if (result[i].hasOwnProperty(prop)) {\n            alert(result[i][prop]);\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Since you are using jQuery, you might as well use the each method... Also, it seems like everything is a value of the property 'd' in this JS Object [Notation]. </p>\n\n<pre><code>$.each(result.d,function(i) {\n    // In case there are several values in the array 'd'\n    $.each(this,function(j) {\n        // Apparently doesn't work...\n        alert(this.EmployeeName);\n        // What about this?\n        alert(result.d[i][j]['EmployeeName']);\n        // Or this?\n        alert(result.d[i][j].EmployeeName);\n    });\n});\n</code></pre>\n\n<p>That should work. if not, then maybe you can give us a longer example of the JSON.</p>\n\n<p><strong>Edit:</strong> If none of this stuff works then I'm starting to think there might be something wrong with the syntax of your JSON. </p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>had same problem today, Your topic helped me so here goes solution ;)</p>\n\n<pre><code> alert(result.d[0].EmployeeTitle);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>Here it is:</p>\n\n<pre><code>success: \n    function(data) {\n        $.each(data, function(i, item){\n            alert(\"Mine is \" + i + \"|\" + item.title + \"|\" + item.key);\n        });\n    }\n</code></pre>\n\n<p>Sample JSON text:</p>\n\n<pre><code>{\"title\": \"camp crowhouse\", \n\"key\": \"agtnZW90YWdkZXYyMXIKCxIEUG9zdBgUDA\"}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I have the following call:</p>\n\n<pre><code>$('#select_box_id').change(function() {\n        var action = $('#my_form').attr('action');\n    $.get(action,{},function(response){\n        $.each(response.result,function(i) {\n\n            alert(\"key is: \" + i + \", val is: \" + response.result[i]);\n\n        });\n    }, 'json');\n    });\n</code></pre>\n\n<p>The structure coming back from the server look like:</p>\n\n<pre><code>{\"result\":{\"1\":\"waterskiing\",\"2\":\"canoeing\",\"18\":\"windsurfing\"}}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var d = $.parseJSON(result.d);\nfor(var i =0;i&lt;d.length;i++){\n    alert(d[i].EmployeeName);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I am returning a List&lt;> from a webservice as a List of JSON objects. I am trying to use a for loop to iterate through the list and grab the values out of the properties. This is a sample of the returning JSON:</p>\n\n<pre><code>{\"d\":[{\"__type\":\"FluentWeb.DTO.EmployeeOrder\",\n \"EmployeeName\":\"Janet Leverling\",\n \"EmployeeTitle\":\"Sales Representative\",\n \"RequiredDate\":\"\\/Date(839224800000)\\/\",\n \"OrderedProducts\":null}]}\n</code></pre>\n\n<p>So I am trying to extract the contents using something like this:</p>\n\n<pre><code>function PrintResults(result) {\n\nfor (var i = 0; i &lt; result.length; i++) { \n    alert(result.employeename);\n}\n</code></pre>\n\n<p>How should this be done?</p>\n",
            "last_activity_date": 1414398962,
            "question_id": 800593,
            "score": 38,
            "tags": [
                "javascript",
                "jquery",
                "web-services",
                "json"
            ],
            "title": "Loop through JSON object List"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Use the $location service - it will return your path, the hash, the server address.. Everything you need! Your call would be to <code>$location.path()+\"/GetUserList\"</code> or something similar.</p>\n\n<p>See here: <a href=\"http://docs.angularjs.org/guide/dev_guide.services.%24location\" rel=\"nofollow\">http://docs.angularjs.org/guide/dev_guide.services.$location</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'd suggest using an HTML base tag in the head, and coding all paths relative to this. In ASP.NET, for example, you can get a reference to the base of the application, which may or may not be the root path of the site, so using a base tag helps. Bonus: it works for every other asset too.</p>\n\n<p>You can have a base path like this:</p>\n\n<pre><code>&lt;base href=\"/application_root/\" /&gt;\n</code></pre>\n\n<p>...and then links like \"foo/bar.html\" will actually be /application_root/foo/bar.html.</p>\n\n<p>Another approach I like to use is to put named links in the header. I will often have an API root in one location and a directive template root somewhere else. In the head, I'll then add some tags like this:</p>\n\n<pre><code>&lt;link id=\"linkApiRoot\" href=\"/application_root/api/\"/&gt;\n&lt;link id=\"linkTemplateRoot\" href=\"/application_root/Content/Templates/\"/&gt;\n</code></pre>\n\n<p>... and then use $provide in the module to get the link href and expose it to services and directives like so:</p>\n\n<pre><code>angular.module(\"app.services\", [])\n    .config([\"$provide\", function ($provide) {\n        $provide.value(\"apiRoot\", $(\"#linkApiRoot\").attr(\"href\"));\n    }]);\n</code></pre>\n\n<p>... and then inject it to a service like this:</p>\n\n<pre><code>angular.module(\"app.services\").factory(\"myAdminSvc\", [\"apiRoot\", function (apiRoot) {\n    var apiAdminRoot = apiRoot + \"admin/\";\n    ...\n</code></pre>\n\n<p>Just my opinion though. Do the least complex thing for your application.</p>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>I would suggest defining a module that contains a global config that you can then pass around your application:</p>\n\n<pre><code>// Module specific configuration\nangular.module('app.config')\n  .value('app.config', {\n    basePath: '/' // Set your base path here\n  });\n</code></pre>\n\n<p>Then you can access this from anywhere within your application thanks to AngularJS dependency injection:</p>\n\n<pre><code>// Make sure your config is included in your module\nangular.module('app', ['app.config']);\n\n// Access your config e.g. in a controller\nangular.module('app')\n  .controller('TestCtrl', ['$scope','app.config', function($scope, config){\n\n    // Use config base path to assemble url\n    $scope.url = config.basePath + 'GetUserList';\n    ...\n  }]);\n</code></pre>\n\n<p>Whenever the base path changes (e.g. when you change to another server or host), you just need to change it in your global config and you're done.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I wasn't able to use <code>&lt;base&gt;</code> tag since my application was created in a popup dynamically from another origion. I was considering the others option in this thread to use something like a basePath variable and use it in every <code>$http, ng-src, templateUrl</code> etc</p>\n\n<p>But that was a bit overhead, built a interceptor that change every url before a xhr is made</p>\n\n<pre><code>var app = angular.module(\"myApp\", []);\n\napp.config([\"$httpProvider\", function($httpProvider) {\n    $httpProvider.interceptors.push('middleware');\n}]);\n\napp.factory('middleware', function() {\n    return {\n        request: function(config) {\n            // need more controlling when there is more than 1 domain involved\n            config.url = \"//example.com/api/\" + config.url\n            return config;\n        }\n    };\n});\n\napp.controller(\"Ctrl\", [\"$http\", function($http) {\n    $http.get(\"books\"); // actually requestUrl = http://example.com/api/books\n}])\n</code></pre>\n\n<p>And html aswell</p>\n\n<pre><code>&lt;div ng-include src=\"'view'\"&gt;\n    &lt;!-- actually src = http://example.com/api/view --&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>But i do recommend to use <code>&lt;base&gt;</code> tag instead unless you are using window.popup()</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>The accepted answer helped me. I'm using Angular served up my an MVC app.\nI took one extra step so that my baseUrl could be used within my angular controllers for web api calls or for accessing templates.</p>\n\n<p>Using ng-init to set the baseUrl (from a server side populated value)</p>\n\n<pre><code>&lt;html ng-app=\"app\" ng-controller=\"AppController\"&gt;\n&lt;head&gt;\n    &lt;base href=\"{{baseUrl}}\" ng-init=\"baseUrl = '@Model.BaseUrl'\" /&gt;\n&lt;/head&gt;\n</code></pre>\n\n<p>Angular controller</p>\n\n<pre><code>    $scope.manageCustomerGroups = function () {\n        openDialog($scope.baseUrl + 'content/templates/customerGroups.html');\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have the following code, which was working fine until I deployed to a test server:</p>\n\n<pre><code>$scope.getUserList = function (userName) {\n    $http({\n        method: \"get\",\n        url: \"GetUserList\",\n        params: { userName: userName }\n    }).\n        success(function (data) {\n            $scope.users = data;\n        }).\n        error(function () {\n            alert(\"Error getting users.\");\n</code></pre>\n\n<p>The problem is that I deployed to a virtual directory, and the call below is attempting to hit GetUserList from the server root.  This makes sense, and I know a number of ways to fix it.</p>\n\n<p>What I would like to know is the <em>right</em> way to reference the service URL in a way that is portable and maintainable in Angular.</p>\n",
            "last_activity_date": 1424185787,
            "question_id": 17011616,
            "score": 31,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "Using a Relative Path for a Service Call in AngularJS"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I would inspect element using firebug and use <code>display:none !important;</code> to remove these styles if Google does not allow you to access them directly via the API (which I would think you should be able to)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Suggest you look at the answer I gave here:\n<a href=\"http://stackoverflow.com/q/7538444/492335\">G Map api v3: remove default markers?</a></p>\n\n<pre><code>var myStyles =[\n    {\n        featureType: \"poi\",\n        elementType: \"labels\",\n        stylers: [\n              { visibility: \"off\" }\n        ]\n    }\n];\n\nvar myOptions = {\n    zoom: 10,\n    center: homeLatlng,\n    mapTypeId: google.maps.MapTypeId.ROADMAP,\n    styles: myStyles \n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>Ok, after searching everywhere it looks like you can't just display the POIs with clicking disabled, you could look here for more discussions:</p>\n\n<p><a href=\"http://groups.google.com/group/google-maps-js-api-v3/browse_thread/thread/f1ac9ad4da3606fe/3975bbda46904ae7?lnk=gst&amp;q=disable+poi#3975bbda46904ae7\">http://groups.google.com/group/google-maps-js-api-v3/browse_thread/thread/f1ac9ad4da3606fe/3975bbda46904ae7?lnk=gst&amp;q=disable+poi#3975bbda46904ae7</a></p>\n\n<p>and this exchange in particular:</p>\n\n<hr>\n\n<blockquote>\n  <p>Hi,</p>\n  \n  <p>Is there any possibilltiy to make POIs visible but not clickable?</p>\n  \n  <p>Thanks\n   Lorenzo</p>\n</blockquote>\n\n<hr>\n\n<blockquote>\n  <p>Chris Broadfoot       </p>\n  \n  <p>Unfortunately not Lorenzo. You'll need to apply a map style to hide\n  poi labels:</p>\n  \n  <p>[ { featureType: \"poi\", elementType: \"labels\", stylers: [ {\n  visibility: \"off\" } ] } ]</p>\n  \n  <p>(or to just hide business pois, \"poi.business\")</p>\n</blockquote>\n\n<hr>\n\n<p>This comes from Google Maps developers, so means you can't disable the popup, just the POIs. </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><strong>Found a workaround!</strong> It's pretty dirty so it might stop work if google changes something, but it works! </p>\n\n<p>You have to find the layers where google puts the infoWindows for POIs. Fortunatelly these layers are different from the layers used for users infoWindows. The trick is to find the proper layers. The shadow layer can be found easily, but the infoWindow layer is created after some POI infoWindow is created, so you have to listener to the click event on the same div as google does. Then you find the POI infoWindow layer by z-index, or by image urls but this is not well tested... Note that if google changes the z-index, it will stop work...</p>\n\n<pre><code>var lis = google.maps.event.addListener(my_map, 'tilesloaded', function () {\n\n    $('*').filter(function () { return $(this).css('z-index') == 104 }).remove();\n        // remove layer for POI infoWindow shadow - has z-index: 104\n\n    var eventDiv = $(my_map.getDiv()).children().children()[0];\n        // this div is used by google to handle events\n\n    $(eventDiv).click(function clickHandler() {\n        var timeout = 100;\n        var attempts = 20;\n        setTimeout(function timeoutHandler() {\n            // there are 2 ways how to find POI infoWindow layer\n            // 1st way - by the z-index\n            var poiInfoLayer = $('*').filter(function () { \n                return $(this).css('z-index') == 169 || \n                       $(this).css('z-index') == 248 \n            });\n            // 2nd way - by the images :-)\n            // but not tested much - it may also find normal infoWindows!\n            //var poiInfoLayer = $('[src*=\"/mapfiles/iw3.png\"]').parent().parent();\n\n            if (poiInfoLayer.length) {\n                    poiInfoLayer.remove();\n                    $(eventDiv).unbind('click', clickHandler);\n            }\n            else {\n                    if (attempts &gt; 0) {\n                            setTimeout(timeoutHandler, timeout);\n                            attempts--;\n                    }\n            }\n\n        }, timeout);\n    });\n    google.maps.event.removeListener(lis);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<blockquote>\n  <p><strong>No longer works, since update of Google Maps API.</strong></p>\n</blockquote>\n\n<p>I've found it finally!</p>\n\n<p>Here is the demo: <a href=\"http://jsfiddle.net/fbDDZ/14/\" rel=\"nofollow\">http://jsfiddle.net/fbDDZ/14/</a> (clicking \"open\" or POI does nothing, clicking \"open please\" opens InfoWindow)</p>\n\n<p>The idea is to patch InfoWindow.prototype.open so to allow it accept the third argument. Google does not pass it, but we should.</p>\n\n<p>The code:</p>\n\n<pre><code>function fixInfoWindow() {\n    var proto = google.maps.InfoWindow.prototype,\n        open = proto.open;\n    proto.open = function(map, anchor, please) {\n        if (please) {\n            return open.apply(this, arguments);\n        }\n    }\n}\n</code></pre>\n\n<p>Google opens InfoWindow on POI like that:</p>\n\n<pre><code>myInfoWin.open(map, poiMarker)\n</code></pre>\n\n<p>The window will not open, because Google didnt say \"please\". That is how we should open our info windows:</p>\n\n<pre><code>myInfoWin.open(map, poiMarker, true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<blockquote>\n  <p><strong>Version ~3.12 fix</strong>. <a href=\"http://jsfiddle.net/mrak/dHWVM/\" rel=\"nofollow\">Demo</a></p>\n</blockquote>\n\n<p>Here is a new patch that works again. I have tested it with version 3.14.</p>\n\n<p>Now we gonna patch <code>set()</code> instead of <code>open()</code>.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function fixInfoWindow() {\n    // Here we redefine the set() method.\n    // If it is called for map option, we hide the InfoWindow, if \"noSuppress\"  \n    // option is not true. As Google Maps does not know about this option,  \n    // its InfoWindows will not be opened.\n\n    var set = google.maps.InfoWindow.prototype.set;\n\n    google.maps.InfoWindow.prototype.set = function (key, val) {\n        if (key === 'map' &amp;&amp; ! this.get('noSuppress')) {\n            console.warn('This InfoWindow is suppressed.');\n            console.log('To enable it, set \"noSuppress\" option to true.');\n            return;\n        }\n\n        set.apply(this, arguments);\n    }\n}\n</code></pre>\n\n<p>What you have to do is set option <code>noSuppress</code> to <code>true</code> for your own <code>InfoWindow</code>'s in order to open them, for example:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var popup = new google.maps.InfoWindow({\n    content: 'Bang!',\n    noSuppress: true\n});\n\npopup.setPosition(new google.maps.LatLng(-34.397, 150.644));\n\npopup.open(map);\n</code></pre>\n\n<p>or:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var popup = new google.maps.InfoWindow({\n    content: 'Bang!',\n});\n\npopup.set('noSuppress', true);\npopup.setPosition(new google.maps.LatLng(-34.397, 150.644));\n\npopup.open(map);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                }
            ],
            "body": "<p>So I'm working on a new web app that has a big focus on maps.  Using Google Maps API v3 and really happy with it but noticed that the points of interest (POI's) have automatically bubbles with more details and a link to the Google Places page.  I don't want these.  Here is my code:</p>\n\n<pre><code>map = new google.maps.Map(document.getElementById(\"map\"), {\n    center:new google.maps.LatLng(default_latitude,default_longitude),\n    zoom:11,\n    mapTypeId:google.maps.MapTypeId.ROADMAP,\n    mapTypeControl:false,\n    panControl:false\n});\n</code></pre>\n\n<p>I know you can remove the POI's entirely.  Here is my code for that:</p>\n\n<pre><code>map = new google.maps.Map(document.getElementById(\"map\"),{\n    center:new google.maps.LatLng(default_latitude,default_longitude),\n    zoom:11,\n    mapTypeId:google.maps.MapTypeId.ROADMAP,\n    mapTypeControl:false,\n    panControl:false,\n    styles:[{\n        featureType:\"poi\",\n        elementType:\"labels\",\n        stylers:[{\n            visibility:\"off\"\n        }]\n    }]\n});\n</code></pre>\n\n<p>This removes everything entirely and I still would like to see the labels as I think they bring value but just think the bubbles are too much of a distraction.</p>\n\n<p>For reference here is the bubble I want to remove:</p>\n\n<p><img src=\"http://i.stack.imgur.com/KSh1s.png\" alt=\"Example\"></p>\n\n<p>And here is the same map with POI's removed entirely:</p>\n\n<p><img src=\"http://i.stack.imgur.com/4Svr1.png\" alt=\"Example\"></p>\n",
            "last_activity_date": 1419611341,
            "question_id": 7950030,
            "score": 25,
            "tags": [
                "javascript",
                "google-maps",
                "google-maps-api-3"
            ],
            "title": "Can I remove just the popup bubbles of POI&#39;s in Google Maps API v3?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Not my fiddle, but <a href=\"http://jsfiddle.net/maxisam/QrCXh/\">http://jsfiddle.net/maxisam/QrCXh/</a> shows the difference.  The key piece is:</p>\n\n<pre><code>           scope:{\n            /* NOTE: Normally I would set my attributes and bindings\n            to be the same name but I wanted to delineate between \n            parent and isolated scope. */                \n            isolatedAttributeFoo:'@attributeFoo',\n            isolatedBindingFoo:'=bindingFoo',\n            isolatedExpressionFoo:'&amp;'\n        }        \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p><code>@</code> allows a value defined on the directive attribute to be passed to the directive's isolate scope. The value could be a simple string value (<code>myattr=\"hello\"</code>) or it could be an AngularJS interpolated string with embedded expressions (<code>myattr=\"my_{{helloText}}\"</code>). You can think of it as \"one-way\" communication from the parent scope into the child directive.  John Lindquist has a series of short screencasts explaining each of these.  Screencast on @ is here: <a href=\"https://egghead.io/lessons/angularjs-isolate-scope-attribute-binding\">https://egghead.io/lessons/angularjs-isolate-scope-attribute-binding</a></p>\n\n<p><code>&amp;</code> allows the directive's isolate scope to pass values into the parent scope for evaluation in the expression defined in the attribute. Note that the directive attribute is implicitly an expression and does not use double curly brace expression syntax. This one is tougher to explain in text. Screencast on &amp; is here: <a href=\"https://egghead.io/lessons/angularjs-isolate-scope-expression-binding\">https://egghead.io/lessons/angularjs-isolate-scope-expression-binding</a></p>\n\n<p><code>=</code> sets up a two-way binding expression between the directive's isolate scope and the parent scope. Changes in the child scope and propagated to the parent and vice-versa. Think of = as a combination of @ and &amp;. Screencast on = is here: <a href=\"https://egghead.io/lessons/angularjs-isolate-scope-expression-binding\">https://egghead.io/lessons/angularjs-isolate-scope-expression-binding</a></p>\n\n<p>And finally here is a screencast that shows all three used together in a single view: <a href=\"https://egghead.io/lessons/angularjs-isolate-scope-review\">https://egghead.io/lessons/angularjs-isolate-scope-review</a></p>\n",
                    "is_accepted": true,
                    "score": 48
                },
                {
                    "body": "<p>I would like to explain the concepts from the perspective of JavaScript prototype inheritance. Hopefully help to understand.</p>\n\n<p>Be noted that by default a directive creates a child scope (<code>childScope</code>), which is inheritated from the parent scope (<code>parentScope</code>)\u3002</p>\n\n<p>But one exception is when you define an isolated scope (<code>isolatedScope</code>) for the directive. An <code>isolatedScope</code> does not inherit properties from <code>parentScope</code>, although <code>isolatedScope.$parent === parentScope</code>. It is defined through:</p>\n\n<pre><code>app.directive(\"myDirective\", function() {\n    return {\n        scope: {\n            ... // defining scope means that 'no inheritance from parent'.\n        },\n    }\n})\n</code></pre>\n\n<p><code>isolatedScope</code> does not have direct access to <code>parentScope</code>. But sometimes the directive needs to communicate with the <code>parentScope</code>. They communicate through <code>@</code>, <code>=</code> and <code>&amp;</code>. <strong>The topic about using symbols <code>@</code>, <code>=</code> and <code>&amp;</code> are talking about scenarios using <code>isolatedScope</code></strong>.</p>\n\n<p>It is usually used for some common components shared by different pages, like Modals. An isolated scope prevents polluting the global scope and is easy to share among pages.</p>\n\n<p>Here is a basic directive: <a href=\"http://jsfiddle.net/7t984sf9/5/\" rel=\"nofollow\">http://jsfiddle.net/7t984sf9/5/</a>. An image to illustrate is:</p>\n\n<p><img src=\"http://i.stack.imgur.com/wooNr.png\" alt=\"enter image description here\"></p>\n\n<p>So, <code>@</code> simply passes the property from <code>parentScope</code> to <code>isolatedScope</code>. It is called <code>one-way binding</code>, which means you cannot modify the value of <code>parentScope</code> properties. If you are familiar with JavaScript inheritance, you can understand these two scenarios easily:</p>\n\n<ul>\n<li><p>If the binding property is a primitive type, like <code>interpolatedProp</code> in the example: you can modify <code>interpolatedProp</code>, but <code>parentProp1</code> would not be changed. However, if you change the value of <code>parentProp1</code>, <code>interpolatedProp</code> will be overwritten with the new value (when angular $digest). </p></li>\n<li><p>If the binding property is some object, like <code>parentObj</code>: since the one passed to <code>isolatedScope</code> is a reference, modifying the value will trigger this error:</p>\n\n<p><code>TypeError: Cannot assign to read only property 'x' of {\"x\":1,\"y\":2}</code></p></li>\n</ul>\n\n<p><code>=</code> is called <code>two-way binding</code>, which means any modification in <code>childScope</code> will also update the value in <code>parentScope</code>, and vice versa. This rule works for both primitives and objects. If you change the binding type of <code>parentObj</code> to be <code>=</code>, you will find that you can modify the value of <code>parentObj.x</code>.</p>\n\n<p><code>&amp;</code> allows the directive to call some <code>parentScope</code> function and pass in its parameters.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am very new to AngularJS. can anybody explain me the difference among these (&amp;, @ and =) when isolating scope with proper example.</p>\n",
            "last_activity_date": 1419988944,
            "question_id": 14908133,
            "score": 24,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "What is the difference between &amp; vs @ and = in angularJS"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><code>$.getJSON</code> is asynchronous.  That is, the code after the call is executed while <code>$.getJSON</code> fetches and parses the data and calls your callback.</p>\n\n<p>So, given this:</p>\n\n<pre><code>a();\n\n$.getJSON(\"url\", function() {\n    b();\n});\n\nc();\n</code></pre>\n\n<p>The order of the calls of <code>a</code>, <code>b</code>, and <code>c</code> may be either <code>a b c</code> (what <em>you</em> want, in this case) or <code>a c b</code> (more likely to actually happen).</p>\n\n<p>The solution?</p>\n\n<h3>Synchronous XHR requests</h3>\n\n<p>Make the request synchronous instead of asynchronous:</p>\n\n<pre><code>a();\n\n$.ajax({\n    async: false,\n    url: \"url\",\n    success: function() {\n        b();\n    }\n});\n\nc();\n</code></pre>\n\n<h3>Restructure code</h3>\n\n<p>Move the call to <code>c</code> after the call to <code>b</code>:</p>\n\n<pre><code>a();\n\n$.getJSON(\"url\", function() {\n    b();\n\n    c();\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>You are just running into scoping issues.  </p>\n\n<p><strong>Short answer:</strong></p>\n\n<pre><code>window.jsonIssues = {};  // or tack on to some other accessible var\n\n$.getJSON(\"url\", function(data) {\n    window.jsonIssues = data.Issues;\n});\n\n// see results here\nalert(window.jsonIssues);\n</code></pre>\n\n<p><strong>Long answers:</strong></p>\n\n<p><a href=\"http://stackoverflow.com/questions/327454/scoping-issue-in-javascript\">http://stackoverflow.com/questions/327454/scoping-issue-in-javascript</a>\n<a href=\"http://stackoverflow.com/questions/1046332/javascript-closure-scoping-issue\">http://stackoverflow.com/questions/1046332/javascript-closure-scoping-issue</a></p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>\"But this is done via subsequent interactions on the page, and I cannot foresee what the user will want to do with the JSON object within the callback.\"</p>\n\n<p>The callback is your opportunity to set the screen up for the user's interaction with the data.</p>\n\n<p>You can create or reveal HTML for the user, and set up more callbacks.</p>\n\n<p>Most of the time, none of your code will be running. Programming an Ajax page is all about thinking about which events might happen when.</p>\n\n<p>There's a reason it's \"Ajax\" and not \"Sjax.\" There's a reason it's a pain to change from async to sync. It's expected you'll do the page async.</p>\n\n<p>Event-driven programming can be frustrating at first.</p>\n\n<p>I've done computationally intensive financial algorithms in JS. Even then, it's the same thing--you break it up into little parts, and the events are timeouts.</p>\n\n<p>Animation in JavaScript is also event driven. In fact, the browser won't even show the movement unless your script relinquishes control repeatedly.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Remember that when you supply a callback function, the point of that is to defer the execution of that callback until later and immediately continue execution of whatever is next.  This is necessary because of the single-threaded execution model of JavaScript in the browser.  Forcing synchronous execution is possible, but it hangs the browser for the entire duration of the operation.  In the case of something like $.getJSON, that is a prohibitively long time for the browser to stop responding.</p>\n\n<p>In other words, you're trying to find a way to use this procedural paradigm:</p>\n\n<pre><code>var foo = {};\n\n$.getJSON(\"url\", function(data) {\n  foo = data.property;\n});\n\n// Use foo here.\n</code></pre>\n\n<p>When you need to refactor your code so that it flows more like this:</p>\n\n<pre><code>$.getJSON(\"url\", function(data) {\n  // Do something with data.property here.\n});\n</code></pre>\n\n<p>\"Do something\" could be a call to another function if you want to keep the callback function simple.  The important part is that you're waiting until $.getJSON finishes before executing the code.</p>\n\n<p>You could even use custom events so that the code you had placed after $.getJSON subscribes to an IssuesReceived event and you raise that event in the $.getJSON callback:</p>\n\n<pre><code>$(document).ready(function() {\n  $(document).bind('IssuesReceived', IssuesReceived)\n\n  $.getJSON(\"url\", function(data) {\n    $(document).trigger('IssuesReceived', data);\n  });\n});\n\nfunction IssuesReceived(evt, data) {\n  // Do something with data here.\n}\n</code></pre>\n\n<p><strong>Update:</strong></p>\n\n<p>Or, you could store the data globally and just use the custom event for notification that the data had been received and the global variable updated.</p>\n\n<pre><code>$(document).ready(function() {\n  $(document).bind('IssuesReceived', IssuesReceived)\n\n  $.getJSON(\"url\", function(data) {\n    // I prefer the window.data syntax so that it's obvious\n    //  that the variable is global.\n    window.data = data;\n\n    $(document).trigger('IssuesReceived');\n  });\n});\n\nfunction IssuesReceived(evt) {\n  // Do something with window.data here.\n  //  (e.g. create the drag 'n drop interface)\n}\n\n// Wired up as the \"drop\" callback handler on \n//  your drag 'n drop UI.\nfunction OnDrop(evt) {\n  // Modify window.data accordingly.\n}\n\n// Maybe wired up as the click handler for a\n//  \"Save changes\" button.\nfunction SaveChanges() {\n  $.post(\"SaveUrl\", window.data);\n}\n</code></pre>\n\n<p><strong>Update 2:</strong></p>\n\n<p>In response to this:</p>\n\n<blockquote>\n  <p>Does anyone have an idea how I should be blocking user interaction while this is going on? Why is it such a concern? Thanks again for all the responses.</p>\n</blockquote>\n\n<p>The reason that you should avoid blocking the browser with synchronous AJAX calls is that <strong>a blocked JavaScript thread blocks everything else in the browser too</strong>, including other tabs and even other windows.  That means no scrolling, no navigation, no nothing.  For all intents and purposes, it appears as though the browser has crashed.  As you can imagine, a page that behaves this way is a <em>significant</em> nuisance to its users. </p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>maybe this work, works to me.. :)</p>\n\n<pre><code>$variable= new array();\n\n$.getJSON(\"url\", function(data){\nasignVariable(data);\n}\n\nfunction asignVariable(data){\n$variable = data;\n}\n\nconsole.log($variable);\n</code></pre>\n\n<p>Hope it help you..\n:)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You could approach this with promises:</p>\n\n<pre><code>var jsonPromise = $.getJSON(\"url\")\n\njsonPromise.done(function(data) {\n    // success\n    // do stuff with data\n});\n\njsonPromise.fail(function(reason) {\n    // it failed... handle it\n});\n\n// other stuff ....\n\njsonPromise.then(function(data) {\n    // do moar stuff with data\n    // will perhaps fire instantly, since the deferred may already be resolved.\n});\n</code></pre>\n\n<p>It is pretty straight forward and a viable way to make async code feel more imperative.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>This may be more of a scoping question. I'm trying to set a JSON object within a $.getJSON function, but I need to be able to use that object outside of the callback.</p>\n\n<pre><code>var jsonIssues = {};  // declare json variable\n\n$.getJSON(\"url\", function(data) {\n    jsonIssues = data.Issues;\n});\n\n// jsonIssues not accessible here\n</code></pre>\n\n<p>A similar question like this one was asked in another post, and the consensus was that anything I need to do with the JSON objects needs to be done within the callback function, and cannot be accessed anywhere else. Is there really no way that I can continue to access/manipulate that JSON object outside of the $.getJSON callback? What about returning the variable, or setting a global?</p>\n\n<p>I'd appreciate any help. This just doesn't seem right...</p>\n\n<p><strong>UPDATE:</strong></p>\n\n<p>Tried setting the $.ajax() async setting to false, and running through the same code, with no luck. Code I tried is below:</p>\n\n<pre><code>var jsonIssues = {};  // declare json variable\n\n$.ajax({ async: false });\n\n$.getJSON(\"url\", function(data) {\n    jsonIssues = data.Issues;\n});\n\n// jsonIssues still not accessible here\n</code></pre>\n\n<p>Also, I've had a couple responses that a global variable should work fine. I should clarify that all of this code is within <code>$(document).ready(function() {</code>. To set a global variable, should I just declare it before the document.ready? As such:</p>\n\n<pre><code>var jsonIssues = {};\n\n$(document).ready(function() {\n\n  var jsonIssues = {};  // declare json variable\n\n  $.getJSON(\"url\", function(data) {\n      jsonIssues = data.Issues;\n  });\n\n  // now accessible?\n}\n</code></pre>\n\n<p>I was under the impression that that a variable declared within document.ready should be \"globally\" accessible and modifiable within any part of document.ready, including subfunctions like the $.getJSON callback function. I may need to read up on javascript variable scoping, but there doesn't seem to be an easy to achieve what I'm going for. Thanks for all the responses.</p>\n\n<p><strong>UPDATE #2:</strong>\nPer comments given to answers below, I did use $.ajax <em>instead of</em> .getJSON, and achieved the results I wanted. Code is below:</p>\n\n<pre><code>var jsonIssues = {};\n    $.ajax({\n    \turl: \"url\",\n    \tasync: false,\n    \tdataType: 'json',\n    \tsuccess: function(data) {\n    \t\tjsonIssues = data.Issues;\n    \t}\n    });\n\n    // jsonIssues accessible here -- good!!\n</code></pre>\n\n<p>Couple follow-up comments to my answers (and I appreciate them all). My purpose in doing this is to load a JSON object initially with a list of Issues that the user can then remove from, and save off. But this is done via subsequent interactions on the page, and I cannot foresee what the user will want to do with the JSON object <em>within</em> the callback. Hence the need to make it accessible once the callback complete. Does anyone see a flaw in my logic here? Seriously, because there may be something I'm not seeing...</p>\n\n<p>Also, I was reading through the .ajax() jQuery documentation, and it says that setting async to false \"Loads data synchronously. Blocks the browser while the requests is active. It is better to block user interaction by other means when synchronization is necessary.\"</p>\n\n<p>Does anyone have an idea how I should be blocking user interaction while this is going on? Why is it such a concern? Thanks again for all the responses.</p>\n",
            "last_activity_date": 1377615346,
            "question_id": 1739800,
            "score": 19,
            "tags": [
                "javascript",
                "jquery",
                "variables",
                "scope",
                "callback"
            ],
            "title": "Variables set during $.getJSON function only accessible within function"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There are already couple of good html/javascript editors.</p>\n\n<p><a href=\"http://ckeditor.com/demo\" rel=\"nofollow\">http://ckeditor.com/demo</a></p>\n\n<p><a href=\"http://tinymce.moxiecode.com/tryit/full.php\" rel=\"nofollow\">http://tinymce.moxiecode.com/tryit/full.php</a></p>\n\n<p>and others.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As alfred said there are already well-developed editors, especially for the basic features. You can restrict it to use as few, or as many features, as you would like.  </p>\n\n<p>The difficult part in developing it from scratch, is that all browsers act slightly differently. The following <strong>should</strong> get you moving in the right direction in most browsers, other than IE:</p>\n\n<pre><code>var selected = document.getSelection();\ndocument.execCommand(\"insertHTML\",false,\"&lt;a href='\"+href+\"'&gt;\"+selected+\"&lt;/a&gt;\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><code>document.execCommand()</code> does this for you in all major browsers:</p>\n\n<pre><code>document.execCommand(\"CreateLink\", false, \"http://stackoverflow.com/\");\n</code></pre>\n\n<p>To preserve the selection while your link dialog is displayed, you can use the following functions:</p>\n\n<pre><code>function saveSelection() {\n    if (window.getSelection) {\n        sel = window.getSelection();\n        if (sel.getRangeAt &amp;&amp; sel.rangeCount) {\n            var ranges = [];\n            for (var i = 0, len = sel.rangeCount; i &lt; len; ++i) {\n                ranges.push(sel.getRangeAt(i));\n            }\n            return ranges;\n        }\n    } else if (document.selection &amp;&amp; document.selection.createRange) {\n        return document.selection.createRange();\n    }\n    return null;\n}\n\nfunction restoreSelection(savedSel) {\n    if (savedSel) {\n        if (window.getSelection) {\n            sel = window.getSelection();\n            sel.removeAllRanges();\n            for (var i = 0, len = savedSel.length; i &lt; len; ++i) {\n                sel.addRange(savedSel[i]);\n            }\n        } else if (document.selection &amp;&amp; savedSel.select) {\n            savedSel.select();\n        }\n    }\n}\n</code></pre>\n\n<p>jsFiddle example: <a href=\"http://jsfiddle.net/JRKwH/1/\">http://jsfiddle.net/JRKwH/1/</a></p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>To get hold of the link(s) created (if any were created at all) is tricky. You could use my own <a href=\"http://code.google.com/p/rangy\">Rangy</a> library:</p>\n\n<pre><code>var sel = rangy.getSelection();\nif (sel.rangeCount) {\n    var links = sel.getRangeAt(0).getNodes([1], function(el) {\n        return el.nodeName.toLowerCase() == \"a\";\n    });\n    alert(links.length);\n}\n</code></pre>\n\n<p>... or something like the following:</p>\n\n<pre><code>function getLinksInSelection() {\n    var selectedLinks = [];\n    var range, containerEl, links, linkRange;\n    if (window.getSelection) {\n        sel = window.getSelection();\n        if (sel.getRangeAt &amp;&amp; sel.rangeCount) {\n            linkRange = document.createRange();\n            for (var r = 0; r &lt; sel.rangeCount; ++r) {\n                range = sel.getRangeAt(r);\n                containerEl = range.commonAncestorContainer;\n                if (containerEl.nodeType != 1) {\n                    containerEl = containerEl.parentNode;\n                }\n                if (containerEl.nodeName.toLowerCase() == \"a\") {\n                    selectedLinks.push(containerEl);\n                } else {\n                    links = containerEl.getElementsByTagName(\"a\");\n                    for (var i = 0; i &lt; links.length; ++i) {\n                        linkRange.selectNodeContents(links[i]);\n                        if (linkRange.compareBoundaryPoints(range.END_TO_START, range) &lt; 1 &amp;&amp; linkRange.compareBoundaryPoints(range.START_TO_END, range) &gt; -1) {\n                            selectedLinks.push(links[i]);\n                        }\n                    }\n                }\n            }\n            linkRange.detach();\n        }\n    } else if (document.selection &amp;&amp; document.selection.type != \"Control\") {\n        range = document.selection.createRange();\n        containerEl = range.parentElement();\n        if (containerEl.nodeName.toLowerCase() == \"a\") {\n            selectedLinks.push(containerEl);\n        } else {\n            links = containerEl.getElementsByTagName(\"a\");\n            linkRange = document.body.createTextRange();\n            for (var i = 0; i &lt; links.length; ++i) {\n                linkRange.moveToElementText(links[i]);\n                if (linkRange.compareEndPoints(\"StartToEnd\", range) &gt; -1 &amp;&amp; linkRange.compareEndPoints(\"EndToStart\", range) &lt; 1) {\n                    selectedLinks.push(links[i]);\n                } \n            }\n        }\n    }\n    return selectedLinks;\n}\n</code></pre>\n\n<p>jsFiddle: <a href=\"http://jsfiddle.net/JRKwH/3/\">http://jsfiddle.net/JRKwH/3/</a></p>\n",
                    "is_accepted": true,
                    "score": 32
                }
            ],
            "body": "<p>I'm working on a simple blog system and I'm using contenteditable so that users can format the text.</p>\n\n<p>Up to now everything works like a charm.</p>\n\n<p>Next thing i want is that users can add a hyperlink in the text.</p>\n\n<p>The user have to select (part of) the text and click on the link button. After that a popup opens where users should enter the link address.</p>\n\n<p>When the user clicks on the accept button I want to add the link to the text they selected in the contenteditable.</p>\n\n<p>How can I implement this functionality, since I have no clue how to do this?</p>\n\n<p>My site: <a href=\"http://82.170.147.49/blog/3/alpha-release\">http://82.170.147.49/blog/3/alpha-release</a></p>\n\n<p>jsFiddle of my site: <a href=\"http://jsfiddle.net/qhN9j/\">http://jsfiddle.net/qhN9j/</a></p>\n",
            "last_activity_date": 1302789051,
            "question_id": 5605401,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "hyperlink",
                "contenteditable"
            ],
            "title": "Insert link in contenteditable element"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Try this :)</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://www.google.com/jsapi\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction initialize() {\n    var loc = {};\n    var geocoder = new google.maps.Geocoder();\n    if(google.loader.ClientLocation) {\n        loc.lat = google.loader.ClientLocation.latitude;\n        loc.lng = google.loader.ClientLocation.longitude;\n\n        var latlng = new google.maps.LatLng(loc.lat, loc.lng);\n        geocoder.geocode({'latLng': latlng}, function(results, status) {\n            if(status == google.maps.GeocoderStatus.OK) {\n                alert(results[0]['formatted_address']);\n            };\n        });\n    }\n}\n\ngoogle.load(\"maps\", \"3.x\", {other_params: \"sensor=false\", callback:initialize});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>I couldn't get the above code to work.</p>\n\n<p>Google does a great explanation though here: \n<a href=\"http://code.google.com/apis/maps/documentation/javascript/basics.html#DetectingUserLocation\">http://code.google.com/apis/maps/documentation/javascript/basics.html#DetectingUserLocation</a></p>\n\n<p>Where they first use the W3C Geolocation method and then offer the Google.gears fallback method for older browsers.</p>\n\n<p>The example is here:</p>\n\n<p><a href=\"http://code.google.com/apis/maps/documentation/javascript/examples/map-geolocation.html\">http://code.google.com/apis/maps/documentation/javascript/examples/map-geolocation.html</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>It seems you now do not need to reverse geocode and now get the address directly from ClientLocation:</p>\n\n<pre><code>google.loader.ClientLocation.address.city\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Abit late but i got somethng simerlar that im busy building and here is the code to get current location - be sure to use local server to test</p>\n\n<pre><code> &lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" /&gt;\n    &lt;style type=\"text/css\"&gt;\n      html { height: 100% }\n      body { height: 100%; margin: 0; padding: 0 }\n      #map-canvas { height: 100% }\n    &lt;/style&gt;\n    &lt;!--jquery API--&gt;\n    &lt;script src=\"jquery.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n    &lt;!--google maps API--&gt;\n    &lt;script type=\"text/javascript\"\n      src=\"https://maps.googleapis.com/maps/api/js?v=3&amp;sensor=true\"&gt;\n    &lt;/script&gt;\n\n    &lt;script&gt;\n    /*function for button*/\n\n    jQuery(window).ready(function(){  \n        jQuery(\"#btnInit\").click(initiate_geolocation);  \n    });  \n    function initiate_geolocation() {  \n        navigator.geolocation.getCurrentPosition(handle_geolocation_query);  \n    }  \n    function handle_geolocation_query(position){\n    var lng = position.coords.longitude;\n    var lat = position.coords.latitude;\n\n        var mapOptions = {\n          center: new google.maps.LatLng(lat, lng),\n          zoom: 16\n        };\n        var map = new google.maps.Map(document.getElementById(\"map-canvas\"),\n            mapOptions);\n      }\n      google.maps.event.addDomListener(window, 'load', initialize);  \n\n    &lt;/script&gt;\n\n\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;button id=\"btnInit\" style=\"z-index: 99999 !important;\"&gt;Find Me&lt;/button&gt;\n    &lt;div id=\"map-canvas\"&gt;&lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>No need to do your own implementation. I can recommend using <code>geolocationmarker</code> from <a href=\"http://google-maps-utility-library-v3.googlecode.com/svn/trunk/geolocationmarker/docs/reference.html\" rel=\"nofollow\">google-maps-utility-library-v3</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How do you get Client location using Google Maps API v3? I tried the following code but kept getting the \"google.loader.ClientLocation is null or not an object\" error. Any ideas why ??</p>\n\n<pre><code>if (google.loader.ClientLocation) {\n            alert(google.loader.ClientLocation.latitude+\" \"+google.loader.ClientLocation.longitude);\n        }\n</code></pre>\n\n<p>Thank You</p>\n",
            "last_activity_date": 1389688751,
            "question_id": 3940767,
            "score": 7,
            "tags": [
                "javascript",
                "google-maps"
            ],
            "title": "How to get Client location using Google Maps API v3?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>In order to comply with boneheaded precedent, <code>getYear()</code> returns the number of years since 1900.</p>\n\n<p>Instead, you should call <code>getFullYear()</code>, which returns the actual year.</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/getYear\">https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/getYear</a></p>\n\n<blockquote>\n  <p><code>getYear</code> is no longer used and has been replaced by the <code>getFullYear</code> method.</p>\n  \n  <p>The <code>getYear</code> method returns the year minus 1900; thus:</p>\n  \n  <ul>\n  <li>For years greater than or equal to 2000, the value returned by <code>getYear</code> is 100 or greater. For example, if the year is 2026, <code>getYear</code> returns 126.</li>\n  <li>For years between and including 1900 and 1999, the value returned by <code>getYear</code> is between 0 and 99. For example, if the year is 1976, <code>getYear</code> returns 76.</li>\n  <li>For years less than 1900, the value returned by <code>getYear</code> is less than 0. For example, if the year is 1800, <code>getYear</code> returns -100.</li>\n  <li>To take into account years before and after 2000, you should use <code>getFullYear</code> instead of <code>getYear</code> so that the year is specified in full.</li>\n  </ul>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 168
                },
                {
                    "body": "<p>From what I've read on Mozilla's JS pages, getYear is deprecated. As pointed out many times, <code>getFullYear()</code> is the way to go. If you're really wanting to use <code>getYear()</code> add 1900 to it.</p>\n\n<pre><code>var now = new Date(),\n    year = now.getYear() + 1900;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have this javascript for automatically setting a date filter to the first and last day of the previous month:</p>\n\n<pre><code>$(document).ready(function () {\n    $(\"#DateFrom\").datepicker({ dateFormat: 'dd/mm/yy' });\n    $(\"#DateTo\").datepicker({ dateFormat: 'dd/mm/yy' });\n\n    var now = new Date();\n    var firstDayPrevMonth = new Date(now.getYear(), now.getMonth() - 1, 1);\n    var firstDayThisMonth = new Date(now.getYear(), now.getMonth(), 1);\n    var lastDayPrevMonth = new Date(firstDayThisMonth - 1);\n\n    $(\"#DateFrom\").datepicker(\"setDate\", firstDayPrevMonth);\n    $(\"#DateTo\").datepicker(\"setDate\", lastDayPrevMonth);\n}); \n</code></pre>\n\n<p>BUT <code>now.getYear()</code> is returning 111 instead of the expected 2011.  Is there something obvious I've missed?</p>\n",
            "last_activity_date": 1391292637,
            "question_id": 4754938,
            "score": 98,
            "tags": [
                "javascript",
                "datepicker"
            ],
            "title": "Javascript date.getYear() returns 111 in 2011?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>The <a href=\"http://www.datejs.com/\">date.js</a> library is handy for these things. It makes all JS date-related scriping a lot easier.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Make sure you construct <code>userDate</code> with a 4 digit year as <code>setFullYear(10, ...) !== setFullYear(2010, ...)</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm still learning JavaScript, and the only way that I've found which works for me to compare two dates without the time is to use the <code>setHours</code> method of the Date object and set the hours, minutes, seconds and milliseconds to zero. Then compare the two dates.</p>\n\n<p>For example,</p>\n\n<pre><code>date1 = new Date()\ndate2 = new Date(2011,8,20)\n</code></pre>\n\n<p><code>date2</code> will be set with hours, minutes, seconds and milliseconds to zero, but date1 will have them set to the time that date1 was created. To get rid of the hours, minutes, seconds and milliseconds on date1 do the following:</p>\n\n<pre><code>date1.setHours(0,0,0,0)\n</code></pre>\n\n<p>Now you can compare the two dates as DATES only without worrying about time elements.</p>\n",
                    "is_accepted": true,
                    "score": 271
                },
                {
                    "body": "<p>This might be a little cleaner version, also note that you should always use a radix when using parseInt.</p>\n\n<pre><code>window.addEvent('domready', function() {\n    // Create a Date object set to midnight on today's date\n    var today = new Date((new Date()).setHours(0, 0, 0, 0)),\n    input = $('datum').getValue(),\n    dateArray = input.split('/'),\n    // Always specify a radix with parseInt(), setting the radix to 10 ensures that\n    // the number is interpreted as a decimal.  It is particularly important with\n    // dates, if the user had entered '09' for the month and you don't use a\n    // radix '09' is interpreted as an octal number and parseInt would return 0, not 9!\n    userMonth = parseInt(dateArray[1], 10) - 1,\n    // Create a Date object set to midnight on the day the user specified\n    userDate = new Date(dateArray[2], userMonth, dateArray[0], 0, 0, 0, 0);\n\n    // Convert date objects to milliseconds and compare\n    if(userDate.getTime() &gt; today.getTime())\n    {\n            alert(today+'\\n'+userDate);\n    }\n});\n</code></pre>\n\n<p>Checkout the MDC <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/parseInt\" rel=\"nofollow\">parseInt</a> page for more information about the radix.</p>\n\n<p><a href=\"http://www.jslint.com/\" rel=\"nofollow\">JSLint</a> is a great tool for catching things like a missing radix and many other things that can cause obscure and hard to debug errors.  It forces you to use better coding standards so you avoid future headaches. I use it on every JavaScript project I code.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This is the way I do it:</p>\n\n<pre><code>var myDate  = new Date($('input[name=frequency_start]').val()).setHours(0,0,0,0);\nvar today   = new Date().setHours(0,0,0,0);\nif(today&gt;myDate){\n    jAlert('Please Enter a date in the future','Date Start Error', function(){\n        $('input[name=frequency_start]').focus().select();\n    });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>After reading this question quite same time after it is posted I have decided to post another solution, as I didn't find it that quite satisfactory, at least to my needs:</p>\n\n<p>I have used something like this:</p>\n\n<pre><code>var currentDate= new Date().setHours(0,0,0,0);\n\nvar startDay = new Date(currentDate - 86400000 * 2);\nvar finalDay = new Date(currentDate + 86400000 * 2);\n</code></pre>\n\n<p>In that way I could have used the dates in the format I wanted for processing afterwards. But this was only for my need, but I have decided to post it anyway, maybe it will help someone</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>What is wrong with the code below?</p>\n\n<p>Maybe it would be simpler to just compare date and not time. I am not sure how to do this either, and I searched, but I couldn't find my exact problem.</p>\n\n<p>BTW, when I display the two dates in an alert, they show as exactly the same.</p>\n\n<p>My code:</p>\n\n<pre><code>window.addEvent('domready', function() {\n    var now = new Date();\n    var input = $('datum').getValue();\n    var dateArray = input.split('/');\n    var userMonth = parseInt(dateArray[1])-1;\n    var userDate = new Date();\n    userDate.setFullYear(dateArray[2], userMonth, dateArray[0], now.getHours(), now.getMinutes(), now.getSeconds(), now.getMilliseconds());\n\n    if (userDate &gt; now)\n    {\n        alert(now + '\\n' + userDate);\n    }\n});\n</code></pre>\n\n<p>Is there a simpler way to compare dates and not including the time?</p>\n",
            "last_activity_date": 1403420386,
            "question_id": 2698725,
            "score": 97,
            "tags": [
                "javascript",
                "date",
                "comparison",
                "mootools"
            ],
            "title": "Comparing date part only without comparing time in JavaScript"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>There is no way to get the first element, seeing as \"hashes\" (objects) in JavaScript have unordered properties. Your best bet is to store the keys in an array:</p>\n\n<pre><code>var keys = [\"foo\", \"bar\", \"baz\"];\n</code></pre>\n\n<p>Then use that to get the proper value:</p>\n\n<pre><code>object[keys[0]]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>I had the same problem yesterday. I solved it like this:</p>\n\n<pre><code>var obj = {\n        foo:{},\n        bar:{},\n        baz:{}\n    },\n   first = null,\n   key = null;\nfor (var key in obj) {\n    first = obj[key];\n    if(typeof(first) !== 'function') {\n        break;\n    }\n}\n// first is the first enumerated property, and key it's corresponding key.\n</code></pre>\n\n<p>Not the most elegant solution, and I am pretty sure that it may yield different results in different browsers (i.e. the specs says that enumeration is not required to enumerate the properties in the same order as they were defined). However, I only had a single property in my object so that was a non-issue. I just needed the first key.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You could do something like this:</p>\n\n<pre><code>var object = {\n    foo:{a:'first'},\n    bar:{},\n    baz:{}\n}\n\n\nfunction getAttributeByIndex(obj, index){\n  var i = 0;\n  for (var attr in obj){\n    if (index === i){\n      return obj[attr];\n    }\n    i++;\n  }\n  return null;\n}\n\n\nvar first = getAttributeByIndex(object, 0); // returns the value of the\n                                            // first (0 index) attribute\n                                            // of the object ( {a:'first'} )\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If the order of the objects is significant, you should revise your JSON schema to store the objects in an array:</p>\n\n<pre><code>[\n    {\"name\":\"foo\", ...},\n    {\"name\":\"bar\", ...},\n    {\"name\":\"baz\", ...}\n]\n</code></pre>\n\n<p>or maybe:</p>\n\n<pre><code>[\n    [\"foo\", {}],\n    [\"bar\", {}],\n    [\"baz\", {}]\n]\n</code></pre>\n\n<p>As Ben Alpert points out, properties of Javascript objects are unordered, and your code is broken if you expect them to enumerate in the same order that they are specified in the object literal\u2014there is no \"first\" property.</p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>they're not <em>really</em> ordered, but you can do:</p>\n\n<pre><code>var first;\nfor (var i in obj) {\n    if (obj.hasOwnProperty(i) &amp;&amp; typeof(i) !== 'function') {\n        first = obj[i];\n        break;\n    }\n}\n</code></pre>\n\n<p>the <code>.hasOwnProperty()</code> is important to ignore prototyped objects.</p>\n",
                    "is_accepted": false,
                    "score": 48
                },
                {
                    "body": "<p>If you want something concise try:</p>\n\n<pre><code>for (first in obj) break;\n\nalert(first);\n</code></pre>\n\n<p>wrapped as a function:</p>\n\n<pre><code>function first(obj) {\n    for (var a in obj) return a;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 126
                },
                {
                    "body": "<p>My solution:</p>\n\n<pre><code>Object.prototype.__index\n=function(index)\n         {var i=-1;\n          for (var key in this)\n              {if (this.hasOwnProperty(key) &amp;&amp; typeof(this[key])!=='function')\n                  {++i;\n                  }\n               if (i&gt;=index)\n                  {return this[key];\n                  }\n              }\n          return null;\n         }\naObj={'jack':3, 'peter':4, '5':'col', 'kk':function(){alert('hell');}, 'till':'ding'};\nalert(aObj.__index(4));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Based on <a href=\"http://stackoverflow.com/users/5445/cms\">CMS</a> <a href=\"http://stackoverflow.com/a/909036/1250044\">answer</a>. I don't get the value directly, instead I take the key at its index and use this to get the value:</p>\n\n<pre><code>Object.keyAt = function(obj, index) {\n    var i = 0;\n    for (var key in obj) {\n        if ((index || 0) === i++) return key;\n    }\n};\n\n\nvar obj = {\n    foo: '1st',\n    bar: '2nd',\n    baz: '3rd'\n};\n\nvar key = Object.keyAt(obj, 1);\nvar val = obj[key];\n\nconsole.log(key); // =&gt; 'bar'\nconsole.log(val); // =&gt; '2nd'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Just for fun this works in JS 1.8.5</p>\n\n<pre><code>var obj = {a: 1, b: 2, c: 3};\nObject.keys(obj)[0]; // \"a\"\n</code></pre>\n\n<p>This matches the same order that you would see doing</p>\n\n<pre><code>for (o in obj) { ... }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 59
                },
                {
                    "body": "<p>Using underscore you can use _.pairs to get the first object entry as a key value pair as follows:</p>\n\n<pre><code>_.pairs(obj)[0]\n</code></pre>\n\n<p>Then the key would be available with a further [0] subscript, the value with [1]</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This will not give you the first one as javascript objects are unordered, however this is fine in some cases.</p>\n\n<pre><code>myObject[Object.keys(myObject)[0]]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                }
            ],
            "body": "<p>Consider:</p>\n\n<pre><code>var object = {\n    foo:{},\n    bar:{},\n    baz:{}\n}\n</code></pre>\n\n<p>How would I ... </p>\n\n<pre><code>var first=object[0];\nconsole.log(first);\n</code></pre>\n\n<p>Obviously that doesn't work because the first index is named \"foo\", \nnot 0.</p>\n\n<pre><code>console.log(object['foo']);\n</code></pre>\n\n<p>Works, but I don't know it's named foo.  It could be named anything.  I just want the first :)</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1391362325,
            "question_id": 909003,
            "score": 79,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "Javascript: Getting the first index of an object"
        },
        {
            "answer_count": 16,
            "answers": [
                {
                    "body": "<pre><code>var $ = function( id ) { return document.getElementById( id ); };\n\n$( 'someID' )\n</code></pre>\n\n<p>Here I used <code>$</code>, but you can use any valid variable name.</p>\n\n<pre><code>var byId = function( id ) { return document.getElementById( id ); };\n\nbyId( 'someID' )\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 89
                },
                {
                    "body": "<pre><code>&lt;script&gt;\n_ = function(eId)\n{\n    return getElementById(eId);\n}\n&lt;/script&gt;\n\n&lt;script&gt;\nvar myDiv = _('id');\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>There's none built-in.</p>\n\n<p>If you don't mind polluting the global namespace, why not:</p>\n\n<pre><code>function $e(id) {\n    return document.getElementById(id);\n}\n</code></pre>\n\n<p>EDIT - I changed the function name to be something <em>unusual</em>, but <em>short</em> and not otherwise clashing with jQuery or anything else that uses a bare <code>$</code> sign.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can easily create shorthand easily yourself:</p>\n\n<pre><code>function getE(id){\n   return document.getElementById(id);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>There are several good answers here and several are dancing around jQuery-like syntax, but not one mentions actually using jQuery.  If you're not against trying it, check out <a href=\"http://jquery.com/\" rel=\"nofollow\">jQuery</a>.  It let's you select elements super easy like this.. </p>\n\n<p><a href=\"http://api.jquery.com/id-selector/\" rel=\"nofollow\">By ID</a>:</p>\n\n<pre><code>$('#elementId')\n</code></pre>\n\n<p><a href=\"http://api.jquery.com/class-selector/\" rel=\"nofollow\">By CSS class</a>: </p>\n\n<pre><code>$('.className')\n</code></pre>\n\n<p><a href=\"http://api.jquery.com/element-selector/\" rel=\"nofollow\">By element type</a>: </p>\n\n<pre><code>$('a')  // all anchors on page \n$('inputs')  // all inputs on page \n$('p a')  // all anchors within paragaphs on page \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>To save an extra character you could pollute the String prototype like this:</p>\n\n<pre><code>pollutePrototype(String, '\u7ece', {\n    configurable: false, // others must fail\n    get: function() {\n        return document.getElementById(this);\n    },\n    set: function(element) {\n        element.id = this;\n    }\n});\n\nfunction pollutePrototype(buildIn, name, descr) {\n    var oldDescr = Object.getOwnPropertyDescriptor(buildIn.prototype, name);\n    if (oldDescr &amp;&amp; !oldDescr.configurable) {\n        console.error('Unable to replace ' + buildIn.name + '.prototype.' + name + '!');\n    } else {\n        if (oldDescr) {\n            console.warn('Replacing ' + buildIn.name + '.prototype.' + name + ' might cause unexpected behaviour.');\n        }\n        Object.defineProperty(buildIn.prototype, name, descr);\n    }\n}\n</code></pre>\n\n<p>It works in some browsers and you can access elements this way:</p>\n\n<pre><code>document.body.appendChild(\n    'footer'.\u7ece = document.createElement('div')\n);\n'footer'.\u7ece.textContent = 'btw nice browser :)';\n</code></pre>\n\n<p>I have chosen the name of the property almost randomly. If you actually wanted to use this shorthand I would suggest coming up with something easier to type.</p>\n",
                    "is_accepted": false,
                    "score": 82
                },
                {
                    "body": "<p>A quick alternative to contribute:</p>\n\n<pre><code>HTMLDocument.prototype.e = document.getElementById\n</code></pre>\n\n<p>Then just do:</p>\n\n<pre><code>document.e('id');\n</code></pre>\n\n<p>There's a catch, it doesn't work in browsers that don't let you extend prototypes (e.g. IE6).</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>(Shorthand for not only getting element by ID, but also getting element by class :P)</p>\n\n<p>I use something like</p>\n\n<pre><code>function _(s){\n    if(s.charAt(0)=='#')return [document.getElementById(s.slice(1))];\n    else if(s.charAt(0)=='.'){\n        var b=[],a=document.getElementsByTagName(\"*\");\n        for(i=0;i&lt;a.length;i++)if(a[i].className.split(' ').indexOf(s.slice(1))&gt;=0)b.push(a[i]);\n        return b;\n    }\n}\n</code></pre>\n\n<p>Usage : <code>_(\".test\")</code> returns all elements with class name <code>test</code>, and <code>_(\"#blah\")</code> returns an element with id <code>blah</code>.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>If this is on your own site, consider using a library like <a href=\"http://jquery.com/\" rel=\"nofollow\">jQuery</a> to give you this and many other useful shorthands that also abstract away browser differences. Personally, if I wrote enough code to be bothered by the longhand, I would include jQuery.</p>\n\n<p>In jQuery, the syntax would be <code>$(\"#someid\")</code>. If you then want the actual DOM element and not the jQuery wrapper, it's <code>$(\"#someid\")[0]</code>, but you could most likely do whatever you're after with the jQuery wrapper.</p>\n\n<p>Or, if you're using this in a browser developer console, research their built-in utilities. As someone else mentioned, the Chrome JavaScript console includes a <code>$(\"someid\")</code> method, and you can also click an element in the developer tools \"Elements\" view and then reference it with <code>$0</code> from the console. The previously selected element becomes <code>$1</code> and so on.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Well, if the id of the element does not compete with any properties of the global object, you don't have to use any function.</p>\n\n<pre><code>myDiv.appendChild(document.createTextNode(\"Once I was myDiv. \"));\nmyDiv.id = \"yourDiv\";\nyourDiv.appendChild(document.createTextNode(\"But now I'm yourDiv.\"));\n</code></pre>\n\n<p>edit: But you <strong>don't</strong> want to make use of this 'feature'.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If the only issue here is typing, maybe you should just get yourself a JavaScript editor with intellisense.</p>\n\n<p>If the purpose is to get shorter code, then you could consider a JavaScript library like jQuery, or you can just write your own shorthand functions, like:</p>\n\n<pre><code>function byId(string) {return document.getElementById(string);}\n</code></pre>\n\n<p>I used to do the above for better performance. What I learnt last year is that with compression techniques the server does it automatically for you, so my shortening technique was actually making my code heavier. Now I am just happy with typing the whole document.getElementById.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yes, it gets repetitive to use the same function <strong>over</strong> and <strong>over</strong> each time with a different argument:</p>\n\n<pre><code>var myImage = document.getElementById(\"myImage\");\nvar myDiv = document.getElementById(\"myDiv\");\n</code></pre>\n\n<p>So a nice thing would be a function that takes all those arguments at the same time:</p>\n\n<pre><code>function getElementsByIds(/* id1, id2, id3, ... */) {\n    var elements = {};\n    for (var i = 0; i &lt; arguments.length; i++) {\n        elements[arguments[i]] = document.getElementById(arguments[i]);\n    }\n    return elements;\n}\n</code></pre>\n\n<p>Then you would have references to all your elements stored in one object:</p>\n\n<pre><code>var el = getElementsByIds(\"myImage\", \"myDiv\");\nel.myImage.src = \"test.gif\";\n</code></pre>\n\n<p>But you would still have to list all those ids.</p>\n\n<p>You could simplify it even more if you want <strong>all</strong> elements with ids:</p>\n\n<pre><code>function getElementsWithIds() {\n    var elements = {};\n    var elementList = document.querySelectorAll(\"[id]\");\n    for (var i = 0; i &lt; elementList.length; i++) {\n        elements[elementList[i].id] = elementList[i];\n    }\n    return elements;\n}\n</code></pre>\n\n<p>But it would be pretty expensive to call this function if you have many elements.</p>\n\n<hr>\n\n<p>So, theoretically, if you would use the <code>with</code> keyword you could write code like this:</p>\n\n<pre><code>with (getElementsByIds('myButton', 'myImage', 'myTextbox')) {\n    myButton.onclick = function() {\n        myImage.src = myTextbox.value;\n    };\n}\n</code></pre>\n\n<p>But I don't want to promote the use of <code>with</code>. Probably there's a better way to do it.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Well, you could create a shorthand function, that's what I do.</p>\n\n<pre><code>function $(element) {\n    return document.getElementById(element);\n}\n</code></pre>\n\n<p>and then when you wanted to get it, you just do</p>\n\n<pre><code>$('yourid')\n</code></pre>\n\n<p>Also, another useful trick that I found, is that if you want to get the value or innerHTML of an item ID, you can make functions like this: </p>\n\n<pre><code>function $val(el) {\n    return $(el).value;\n}\n\nfunction $inner(el) {\n    return $(el).innerHTML;\n}\n</code></pre>\n\n<h3>Hope you like it!</h3>\n\n<p>I actually made a kind of mini javascript library based on this whole idea.\n<a href=\"http://jsbin.com/xomazibu/5/\" rel=\"nofollow\">Here</a> it is.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>id's are saved to the window.</p>\n\n<p>HTML</p>\n\n<pre><code> &lt;div id='logo'&gt;logo&lt;/div&gt;\n</code></pre>\n\n<p>JS</p>\n\n<pre><code>logo.innerHTML;\n</code></pre>\n\n<p>is the same as writing:</p>\n\n<pre><code>var logoHTML = document.getElementById( 'logo' ).innerHtml;\n</code></pre>\n\n<p>But I don't suggest doing it this way. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I frequently use:</p>\n\n<pre><code>var byId='getElementById'\nvar byClass='getElementsByClass'\nvar byTag='getElementsByTag'\n\n\nvar mydiv=document[byId]('div') \n/* as document[\"getElementById\"] === document.getElementById */\n</code></pre>\n\n<p>I think it's better than a external function (e.g. <code>$()</code> or <code>byId()</code>) because you can do things like this:</p>\n\n<pre><code>var link=document[byId]('list')[byClass]('li')[0][byTag]('a')[0]\n</code></pre>\n\n<p><br>Btw, don't use jQuery for this, jQuery is much, much slower than <code>document.getElementById()</code>, an external function like <code>$()</code> or <code>byId()</code>, or my method:  <a href=\"http://jsperf.com/document-getelementbyid-vs-jquery/5\" rel=\"nofollow\">http://jsperf.com/document-getelementbyid-vs-jquery/5</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you are asking for a shorthand function... </p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\n&lt;body&gt;\nThe content of the body element is displayed in your browser.\n&lt;div id=\"d1\"&gt;DIV&lt;/div&gt;\n&lt;script&gt;\nvar d=document;\nd.g=document.getElementById;\nd.g(\"d1\").innerHTML = \"catch\";\n&lt;/script&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n\n<p>or </p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\n&lt;body&gt;\nThe content of the body element is displayed in your browser.\n&lt;div id=\"d1\"&gt;DIV&lt;/div&gt;\n&lt;script&gt;\nvar w=window;\nw[\"d1\"].innerHTML = \"catch2\";\n&lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there any shorthand for the JavaScript document.getElementById? Or is there any way I can define one? It gets repetitive retyping that <strong>over</strong> and <strong>over</strong>.</p>\n",
            "last_activity_date": 1415013775,
            "question_id": 6398787,
            "score": 69,
            "tags": [
                "javascript"
            ],
            "title": "Javascript Shorthand for getElementById"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p><code>docs</code> is an array of documents. so it doesn't have a <code>mongooseModel.remove()</code> method.</p>\n\n<p>You can iterate and remove each document in the array separately.</p>\n\n<p>Or - since it looks like you are finding the documents by a (probably) unique id - use <code>findOne</code> instead of <code>find</code>.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>To generalize you can use:</p>\n\n<pre><code>SomeModel.find( $where, function(err,docs){\n  if (err) return console.log(err);\n  if (!docs || !Array.isArray(docs) || docs.length === 0) \n    return console.log('no docs found');\n  docs.forEach( function (doc) {\n    doc.remove();\n  });\n});\n</code></pre>\n\n<p>Another way to achieve this is:</p>\n\n<pre><code>SomeModel.collection.remove( function (err) {\n  if (err) throw err;\n  // collection is now empty but not deleted\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>If you don't feel like iterating, try <code>FBFriendModel.find({ id:333 }).remove( callback );</code> or <code>FBFriendModel.find({ id:333 }).remove().exec();</code></p>\n\n<p><code>mongoose.model.find</code> returns a <a href=\"http://mongoosejs.com/docs/api.html#query-js\">Query</a>, which has a <a href=\"http://mongoosejs.com/docs/api.html#query_Query-remove\"><code>remove</code> function</a>.</p>\n",
                    "is_accepted": false,
                    "score": 225
                },
                {
                    "body": "<p>As of <code>\"mongoose\": \"&gt;=2.7.1\"</code> you can remove the document directly with the <code>.remove()</code> method rather than finding the document and then removing it which seems to me more efficient and easy to maintain.</p>\n\n<p>See example:</p>\n\n<pre><code>Model.remove({ _id: req.body.id }, function(err) {\n    if (!err) {\n            message.type = 'notification!';\n    }\n    else {\n            message.type = 'error';\n    }\n});\n</code></pre>\n\n<p><strong>UPDATE:</strong></p>\n\n<p>As of mongoose <code>3.8.1</code>, there are several methods that lets you remove directly a document, say:</p>\n\n<ul>\n<li><code>remove</code></li>\n<li><code>findByIdAndRemove</code></li>\n<li><code>findOneAndRemove</code></li>\n</ul>\n\n<p>Refer to mongoose API docs for further information.</p>\n",
                    "is_accepted": false,
                    "score": 80
                },
                {
                    "body": "<p>Simply:</p>\n\n<p><code>\nFBFriendModel.remove().exec();\n</code></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p><code>mongoose.model.find()</code> returns a <a href=\"http://mongoosejs.com/docs/api.html#query_Query-remove\">Query Object</a> which also has a <code>remove()</code> function.</p>\n\n<p>You can use <code>mongoose.model.findOne()</code> as well, if you want to remove only one unique document.</p>\n\n<p>Else you can follow traditional approach as well where you first retrieving the document and then remove.</p>\n\n<pre><code>yourModelObj.findById(id, function (err, doc) {\n  if (err) ..\n  doc.remove(callback); //Removes the document\n})\n</code></pre>\n\n<p>Following are the ways, on <code>model</code> object you can do any of the following to remove document(s):</p>\n\n<p><code>yourModelObj.findOneAndRemove(conditions, options, callback)</code><br/></p>\n\n<p><code>yourModelObj.findByIdAndRemove(id, options, callback)</code><br/></p>\n\n<p><code>yourModelObj.remove(conditions, callback);</code></p>\n\n<pre><code>var query = Comment.remove({ _id: id });\nquery.exec();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>model.remove({title:'danish'}, function(err){\n    if(err) throw err;\n});\n</code></pre>\n\n<p>Ref: <a href=\"http://mongoosejs.com/docs/api.html#model_Model.remove\" rel=\"nofollow\">http://mongoosejs.com/docs/api.html#model_Model.remove</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>Becarefull with findOne and remove!</strong></p>\n\n<pre><code>  User.findOne({name: 'Alice'}).remove().exec();\n</code></pre>\n\n<p>The code above <strong>removes ALL</strong> users named 'Alice' instead of <strong>the first one</strong>.</p>\n\n<p><em>By the way, I prefer to remove documents like this:</em></p>\n\n<pre><code>  User.remove({...}).exec();\n</code></pre>\n\n<p><em>Or provide a callback and omit the exec()</em></p>\n\n<pre><code>  User.remove({...}, callback);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><code>.remove()</code> works like <code>.find()</code>:</p>\n\n<pre><code>MyModel.remove({search: criteria}, function() {\n    // removed.\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>This for me is the best as of version 3.8.1:</p>\n\n<pre><code>MyModel.findOneAndRemove({field: 'newValue'}, function(err){...});\n</code></pre>\n\n<p>And it requires only one DB call. \nUse this given that you don't perform any <code>remove</code> actions pior to the search and removal.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can just use the query directly within the remove function, so:</p>\n\n<pre><code>FBFriendModel.remove({ id: 333}, function(err){});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<pre><code>FBFriendModel.find({ id:333 },function(err,docs){\n    docs.remove();  //Remove all the documents that match!\n});\n</code></pre>\n\n<p>The above doesn't seem to work. The records are still there. Can someone fix? Thanks.</p>\n",
            "last_activity_date": 1425926079,
            "question_id": 5809788,
            "score": 53,
            "tags": [
                "javascript",
                "database",
                "mongodb",
                "node.js",
                "mongoose"
            ],
            "title": "How do I remove documents using Node.js Mongoose?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>In the early days of the v3 API, the <code>getBounds()</code> method required the map tiles to have finished loading for it to return correct results. However now it seems that you can listen to <code>bounds_changed</code> event, which is fired even before the <code>tilesloaded</code> event:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt; \n&lt;head&gt; \n   &lt;meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\"/&gt; \n   &lt;title&gt;Google Maps v3 - getBounds is undefined&lt;/title&gt; \n   &lt;script src=\"http://maps.google.com/maps/api/js?sensor=false\" \n           type=\"text/javascript\"&gt;&lt;/script&gt; \n&lt;/head&gt; \n&lt;body&gt; \n   &lt;div id=\"map\" style=\"width: 500px; height: 350px;\"&gt;&lt;/div&gt; \n\n   &lt;script type=\"text/javascript\"&gt; \n      var map = new google.maps.Map(document.getElementById(\"map\"), {\n         zoom: 12,\n         center: new google.maps.LatLng(55.755327, 37.622166),\n         mapTypeId: google.maps.MapTypeId.ROADMAP\n      });\n\n      google.maps.event.addListener(map, 'bounds_changed', function() {\n         alert(map.getBounds());\n      });\n   &lt;/script&gt; \n&lt;/body&gt; \n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 88
                },
                {
                    "body": "<p>It should be working, atleast according to the documentation for getBounds(). Nevertheless:</p>\n\n<pre><code>var gMap;\n$(document).ready(function() {\n    var latlng = new google.maps.LatLng(55.755327, 37.622166);\n    var myOptions = {\n        zoom: 12,\n        center: latlng,\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n    };\n    gMap = new google.maps.Map(document.getElementById(\"GoogleMapControl\"), myOptions);\n    google.maps.event.addListenerOnce(gMap, 'idle', function(){\n        alert(this.getBounds());\n    });\n});\n</code></pre>\n\n<p>See it working <a href=\"http://jsfiddle.net/CT3AE/\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>I was saying Salman's solution is better because the <code>idle</code> event is called earlier than the <code>tilesloaded</code> one, since it waits for all the tiles to be loaded. But on a closer look, it seems <code>bounds_changed</code> is called even earlier and it also makes more sense, since you're looking for the bounds, right? :)</p>\n\n<p>So my solution would be:</p>\n\n<pre><code>google.maps.event.addListenerOnce(gMap, 'bounds_changed', function(){\n    alert(this.getBounds());\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>In other comments here, it's adviced to use the \"bounds_changed\" event over \"idle\", which I agree with. Certainly under IE8 which triggers \"idle\" before \"bounds_changed\" on my dev machine at least, leaving me with a reference to null on getBounds.</p>\n\n<p>The \"bounds_changed\" event however, will be triggered continuously when you'll drag the map. Therefor, if you want to use this event to start loading markers, it will be heavy on your webserver.</p>\n\n<p>My multi browser solution to this problem:</p>\n\n<pre><code>google.maps.event.addListenerOnce(gmap, \"bounds_changed\", function(){\n   loadMyMarkers();\n   google.maps.event.addListener(gmap, \"idle\", loadMyMarkers);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Well, i'm not sure if i'm too late, but here's my solution using <em>gmaps.js</em> plugin:</p>\n\n<pre><code>map = new GMaps({...});\n\n// bounds loaded? if not try again after 0.5 sec\nvar check_bounds = function(){\n\n        var ok = true;\n\n        if (map.getBounds() === undefined)\n            ok = false;\n\n        if (! ok) \n            setTimeout(check_bounds, 500);\n        else {\n             //ok to query bounds here\n              var bounds = map.getBounds();\n        }   \n    }\n\n    //call it\n    check_bounds();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm switching from v2 to v3 google maps api and got a problem with gMap.getBounds() function.</p>\n\n<p>I need to get the bounds of my map after its initialization.</p>\n\n<p>Here is my javascript code:</p>\n\n<pre><code>\nvar gMap;\n$(document).ready(\n\n    function() {\n\n        var latlng = new google.maps.LatLng(55.755327, 37.622166);\n        var myOptions = {\n            zoom: 12,\n            center: latlng,\n            mapTypeId: google.maps.MapTypeId.ROADMAP\n        };\n        gMap = new google.maps.Map(document.getElementById(\"GoogleMapControl\"), myOptions);\n\n        alert(gMap.getBounds());\n    }\n);\n</code></pre>\n\n<p>So now it alerts me that gMap.getBounds() is undefined. </p>\n\n<p>I've tried to get getBounds values in click event and it works fine for me, but I cannot get the same results in load map event.</p>\n\n<p>Also getBounds works fine while document is loading in Google Maps API v2, but it fails in V3.</p>\n\n<p>Could you please help me to solve this problem?</p>\n",
            "last_activity_date": 1382469564,
            "question_id": 2832636,
            "score": 52,
            "tags": [
                "javascript",
                "google-maps",
                "google-maps-api-3"
            ],
            "title": "Google Maps Api v3 - getBounds is undefined"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>In javascript and other languages with <a href=\"http://en.wikipedia.org/wiki/Closure_%28computer_science%29\" rel=\"nofollow\">closures</a>, this can be a very important thing to do.  The object that <code>this</code> refers to in a method <a href=\"http://www.fitzblog.com/bid/2127/Nine-Javascript-Gotchas\" rel=\"nofollow\">can actually change</a>.  Once you set your <code>self</code> variable equal to <code>this</code>, then <em>self</em> will reliably remain a reference to the object in question, even if <code>this</code> later points to something different.</p>\n\n<p>This is an important difference in javascript compared to many other languages we work in.  I'm coming from .Net, so this type of thing seemed strange to me at first too.</p>\n\n<p><strong>Edit</strong>:\nAh, okay, you know all that.  (maybe still helpful for someone else.)  I'll add that Apply (and Call) are more for using from \"the outside\", giving to a function you're calling a specific scope that you already know about.  Once you're inside a function and you're about to cascade further down into closures, the technique:</p>\n\n<pre><code>  var self = this;\n</code></pre>\n\n<p>is the more appropriate way (<strong>easy</strong> and <strong>clear</strong>) way to anchor your <em>current</em> scope.  </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Most likely this is done as a way to maintain a reference to <code>this</code> when the scope is about to change (in the case of a closure).  I don't know that I'd consider it a bad practice or pattern in and of itself, no.  You see similar things a lot with libraries like jQuery and a great deal with working with AJAX.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As others have said: This \"extra variable\" is (at some level) the only way to get about the fact that <code>this</code> is a special expression and thus, being not a variable, is not bound in an execution context/closure.</p>\n\n<p>However, what I think you are asking (or what I really want to answer) is:</p>\n\n<blockquote>\n  <blockquote>\n    <p>Should one put <code>var self = this</code> at the top of every method/constructor?</p>\n  </blockquote>\n</blockquote>\n\n<h3>Summary</h3>\n\n<p>While I tried this once, and had the same question, I no longer use this approach. Now I reserve the construct for when I need access in a closure. To me it adds a little \"hey, this is what I really want!\" semantic to my code:</p>\n\n<p><code>this -&gt; this</code> and <code>self -&gt; this (but really that) in a closure</code></p>\n\n<h3>Questions ala carte:</h3>\n\n<blockquote>\n  <blockquote>\n    <p>...Although this is commonly done, it feels a bit wrong. What I'm hoping to find in this question is a better way to deal with this, or a something to convince me this is quite alright.</p>\n  </blockquote>\n</blockquote>\n\n<p>Do what feels right to you. Don't be afraid to try one method and switch back later (but please try to remain consistent within each project :-)</p>\n\n<blockquote>\n  <blockquote>\n    <p>Is this the standard way to keep the correct bindings around? Should I standardize on using 'self' everywhere, unless i explicitly need 'this'.</p>\n  </blockquote>\n</blockquote>\n\n<p>\"self\" is the most common name used. As per above, I prefer the opposite approach -- to use <code>this</code> except when a closure binding is required.</p>\n\n<blockquote>\n  <blockquote>\n    <p>..if it's considered a bit evil and why.</p>\n  </blockquote>\n</blockquote>\n\n<p>Evil is a silly subjective term (albeit fun sometimes). I've never said it was evil, just why I do not follow the approach. Some people tell me I am \"evil\" for not using semi-colons. I tell them they should actually come up with good arguments and/or learn JavaScript better :-)</p>\n\n<blockquote>\n  <blockquote>\n    <p>I'm aware there's also the 'apply' built-in javascript function to explicitly define scope when calling a method. Is it better?</p>\n  </blockquote>\n</blockquote>\n\n<p>The problem with <code>apply/call</code> is that you must use them at point of the function invocation. It won't help if someone <em>else</em> calls one of your methods as the <code>this</code> may already be off. It's most useful for doing things like the jQuery-style callbacks where the <code>this</code> is the element/item of the callback, etc.</p>\n\n<h3>As an aside...</h3>\n\n<p>I <em>like to avoid \"needing self\" on members</em> and thus generally promote all member functions to properties where the receiver (<code>this</code>) just \"flows through\", which is normally \"as expected\".</p>\n\n<p>The \"private\" methods in my code begin with a \"_\" and if the user calls them, that's on them. This also works better (is required, really) when using the prototype approach to object creation. However, <a href=\"http://www.crockford.com/javascript/private.html\">Douglas Crockford disagrees</a> with this \"private\" approach of mine and there are some cases where the look-up chain may thwart you by injecting an unexpected receiver:</p>\n\n<p><em><strong>Using the \"self\" bound in the constructor also locks the upper limit of the look-up chain for a method</em></strong> (it is no longer polymorphic upward!) which may or may not be correct. I think it's normally incorrect.</p>\n\n<p>Happy coding.</p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>Yes, this is the standard way.</p>\n\n<p><code>Function.apply()</code> and <code>Function.call()</code> can help, but not always.</p>\n\n<p>Consider the following</p>\n\n<pre><code>function foo()\n{\n  var self = this;\n  this.name = 'foo';\n\n  setTimeout( function()\n  {\n    alert( \"Hi from \" + self.name );\n  }, 1000 );       \n}\n\nnew foo();\n</code></pre>\n\n<p>If you wanted to do this but avoid the usage of a variable like <code>self</code> and use <code>call()</code> or <code>apply()</code> instead... well... you look at it and start to try, but soon realize you just can't. <code>setTimeout()</code> is responsible for the invocation of the lambda, making it impossible for you to leverage these alternate invocation styles.  You'd still end up creating some intermediary variable to hold a reference to the object.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I like it. It is \"self\"-explanatory. Douglas Crockford has some things to say about this. He states that using \"that\" is convention. You can see Crockford for free if you scoot over to yui-theater and watch hes videos about <a href=\"http://developer.yahoo.com/yui/theater/\" rel=\"nofollow\">Javascript</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<blockquote>\n  <p>Is this the standard way to keep the correct bindings around?</p>\n</blockquote>\n\n<p>There is no standard, where JavaScript and class/instance systems are concerned. You will have to choose what kind of object model you prefer. Here's <a href=\"http://stackoverflow.com/questions/1595611/how-to-properly-create-a-custom-object-in-javascript\">another link</a> to a backgrounder; conclusion: there is no conlusion.</p>\n\n<p>Typically keeping a copy <code>var self= this;</code>(*) in a closure goes hand-in-hand with an object model built around closures with per-instance copies of each method. That's a valid way of doing things; a bit less efficient, but also typically a bit less work than the alternative, an object model built around prototyping, using <code>this</code>, <code>apply()</code> and ECMAScript Fifth Edition's <code>bind()</code> to get bound methods.</p>\n\n<p>What could be counted more as \u2018evil\u2019 is when you have a mish-mash of both styles in the same code. Unfortunately a lot of common JS code does this (because let's face it, no-one <em>really</em> understands JavaScript's bizarre native object model).</p>\n\n<p>(*: I typically use <code>that</code> instead of <code>self</code>; you can use any variable name you like, but <code>self</code> already has an somewhat obscure and completely pointless meaning as a <code>window</code> member that points to the window itself.)</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I think there's an argument to be made for always including <code>var self = this</code> in every method: human factors.  </p>\n\n<p>It's needed often enough that you wind up having a mishmash of methods accessing <code>this</code> and others using <code>self</code> for the same purpose.  If you move code from one to the other, suddenly you get a bunch of errors.</p>\n\n<p>At the same time, I catch myself absent-mindedly writing <code>self.foo</code> out of habit when I haven't needed or added a <code>var self = this</code>.  So I think it could make sense to just make a habit of always including it, needed or not.</p>\n\n<p>The only trouble is... <code>this</code>, <code>self</code>, or <code>that</code> are all an ugly pox on your code and I kind of hate them all. So I think it is better to avoid using delegated methods where possible so that you can avoid using <code>this</code>, <code>that</code> or <code>self</code> the vast majority of the time, and use <code>.bind(this)</code> when you might otherwise resort to <code>self</code>/<code>that</code>.  It's very rare that using delegates on the prototype is actually going to save you any substantial amount of memory anyway.</p>\n\n<p>A nice side effect of that approach is that you don't have to prefix all your private variables with <code>_</code>, as they will be truly private and the public properties will be called out by the leading <code>this.</code>, making your code more readable.</p>\n\n<p>As bobince said, <code>var that = this</code> is better because it doesn't shadow <code>window.self</code>.  <code>self = this</code> sounds less awkward to me, but sometimes you get confusing error messages like <code>property myMethod not found on global</code>, because you forgot the <code>self = this</code> line.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I just want to point out that 'self' is equivalent to 'window', try outputting window === self to the console. You should use this pattern with 'that' or something similar as a variable name, avoid using 'self' since it is already in use by the browser (one mistake and you will create yourself a global variable).\nEven though it sounds weird, it is better to use 'that' for its name because other developers will immediately know what you were trying to accomplish in your code, avoid using nonstandard variable names.\nI believe that this is an important note, but it was only mentioned in one comment, so I wanted to make it more visible.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I find myself needing:</p>\n\n<pre><code>var self = this;\n</code></pre>\n\n<p>a lot within my javascript 'classes'. Although this is commonly done, it feels a bit wrong.\nWhat I'm hoping to find in this question is a better way to deal with this, or a something to convince me this is quite alright.</p>\n\n<p>Is this the standard way to keep the correct bindings around? Should I standardize on using 'self' everywhere, unless i explicitly need 'this'.</p>\n\n<p><strong>edit</strong>: I know exactly why I need this, I'm just wondering if it's considered a bit evil and why. I'm aware there's also the 'apply' built-in javascript function to explicitly define scope when calling a method. Is it better?</p>\n",
            "last_activity_date": 1407630616,
            "question_id": 4371333,
            "score": 49,
            "tags": [
                "javascript"
            ],
            "title": "Is var self = this; a bad pattern?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>I'm afraid not, Handlebars is based heavily on <a href=\"http://mustache.github.com/mustache.5.html\" rel=\"nofollow\">Mustache</a> which is intentionally kept super simple. You'd need to adopt a much more full-featured templating engine to do something like this.</p>\n",
                    "is_accepted": false,
                    "score": -7
                },
                {
                    "body": "<p>Handlebars partials take a second parameter which becomes the context for the partial:</p>\n\n<pre><code>{{&gt; person this}}\n</code></pre>\n\n<p>In versions v2.0.0 alpha and later, you can also pass a hash of named parameters:</p>\n\n<pre><code>{{&gt; person headline='Headline'}}\n</code></pre>\n\n<p>You can see the tests for these scenarios: <a href=\"https://github.com/wycats/handlebars.js/blob/ce74c36118ffed1779889d97e6a2a1028ae61510/spec/qunit_spec.js#L456-L462\" rel=\"nofollow\">https://github.com/wycats/handlebars.js/blob/ce74c36118ffed1779889d97e6a2a1028ae61510/spec/qunit_spec.js#L456-L462</a>\n<a href=\"https://github.com/wycats/handlebars.js/blob/e290ec24f131f89ddf2c6aeb707a4884d41c3c6d/spec/partials.js#L26-L32\" rel=\"nofollow\">https://github.com/wycats/handlebars.js/blob/e290ec24f131f89ddf2c6aeb707a4884d41c3c6d/spec/partials.js#L26-L32</a></p>\n",
                    "is_accepted": true,
                    "score": 72
                },
                {
                    "body": "<p>This is very possible if you write your own helper. We are using a custom <code>$</code> helper to accomplish this type of interaction (and more):</p>\n\n<pre><code>/*///////////////////////\n\nAdds support for passing arguments to partials. Arguments are merged with \nthe context for rendering only (non destructive). Use `:token` syntax to \nreplace parts of the template path. Tokens are replace in order.\n\nUSAGE: {{$ 'path.to.partial' context=newContext foo='bar' }}\nUSAGE: {{$ 'path.:1.:2' replaceOne replaceTwo foo='bar' }}\n\n///////////////////////////////*/\n\nHandlebars.registerHelper('$', function(partial) {\n    var values, opts, done, value, context;\n    if (!partial) {\n        console.error('No partial name given.');\n    }\n    values = Array.prototype.slice.call(arguments, 1);\n    opts = values.pop();\n    while (!done) {\n        value = values.pop();\n        if (value) {\n            partial = partial.replace(/:[^\\.]+/, value);\n        }\n        else {\n            done = true;\n        }\n    }\n    partial = Handlebars.partials[partial];\n    if (!partial) {\n        return '';\n    }\n    context = _.extend({}, opts.context||this, _.omit(opts, 'context', 'fn', 'inverse'));\n    return new Handlebars.SafeString( partial(context) );\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Just in case, here is what I did to get partial arguments, kind of. I\u2019ve created a little helper that takes a partial name and a hash of parameters that will be passed to the partial:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>Handlebars.registerHelper('render', function(partialId, options) {\n  var selector = 'script[type=\"text/x-handlebars-template\"]#' + partialId,\n      source = $(selector).html(),\n      html = Handlebars.compile(source)(options.hash);\n\n  return new Handlebars.SafeString(html);\n});\n</code></pre>\n\n<p>The key thing here is that <a href=\"http://handlebarsjs.com/block_helpers.html#hash-arguments\">Handlebars helpers accept a Ruby-like hash of arguments</a>. In the helper code they come as part of the function\u2019s last argument\u2014<code>options</code>\u2014 in its <code>hash</code> member. This way you can receive the first argument\u2014the partial name\u2014and get the data after that.</p>\n\n<p>Then, you probably want to return a <code>Handlebars.SafeString</code> from the helper or use \u201ctriple\u2011stash\u201d\u2014<code>{{{</code>\u2014 to prevent it from double escaping.</p>\n\n<p>Here is a more or less complete usage scenario:</p>\n\n\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;script id=\"text-field\" type=\"text/x-handlebars-template\"&gt;\n  &lt;label for=\"{{id}}\"&gt;{{label}}&lt;/label&gt;\n  &lt;input type=\"text\" id=\"{{id}}\"/&gt;\n&lt;/script&gt;\n\n&lt;script id=\"checkbox-field\" type=\"text/x-handlebars-template\"&gt;\n  &lt;label for=\"{{id}}\"&gt;{{label}}&lt;/label&gt;\n  &lt;input type=\"checkbox\" id=\"{{id}}\"/&gt;\n&lt;/script&gt;\n\n&lt;script id=\"form-template\" type=\"text/x-handlebars-template\"&gt;\n  &lt;form&gt;\n    &lt;h1&gt;{{title}}&lt;/h1&gt;\n    {{ render 'text-field' label=\"First name\" id=\"author-first-name\" }}\n    {{ render 'text-field' label=\"Last name\" id=\"author-last-name\" }}\n    {{ render 'text-field' label=\"Email\" id=\"author-email\" }}\n    {{ render 'checkbox-field' label=\"Private?\" id=\"private-question\" }}\n  &lt;/form&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>Hope this helps \u2026someone. :)</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>This can also be done in later versions of handlebars using the <code>key=value</code> notation:</p>\n\n<pre><code> {{&gt; mypartial foo='bar' }}\n</code></pre>\n\n<p>Allowing you to pass specific values to your partial context.</p>\n\n<p>Reference: <a href=\"https://github.com/wycats/handlebars.js/pull/182#issuecomment-32659931\">Context different for partial #182</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Yes, I was late, but I can add for <em>Assemble</em> users: you can use buil-in <code>\"parseJSON\"</code> helper <a href=\"http://assemble.io/helpers/helpers-data.html\" rel=\"nofollow\">http://assemble.io/helpers/helpers-data.html</a>. (Discovered in <a href=\"https://github.com/assemble/assemble/issues/416\" rel=\"nofollow\">https://github.com/assemble/assemble/issues/416</a>).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Sounds like you want to do something like this:</p>\n\n<pre><code>{{&gt; person {another: 'attribute'} }}\n</code></pre>\n\n<p>Yehuda already gave you a way of doing that:</p>\n\n<pre><code>{{&gt; person this}}\n</code></pre>\n\n<p>But to clarify:</p>\n\n<p>To give your partial its own data, just give it its own model inside the existing model, like so:</p>\n\n<pre><code>{{&gt; person this.childContext}}\n</code></pre>\n\n<p>In other words, if this is the model you're giving to your template: </p>\n\n<pre><code>var model = {\n    some : 'attribute'\n}\n</code></pre>\n\n<p>Then add a new object to be given to the partial:</p>\n\n<pre><code>var model = {\n    some : 'attribute',\n    childContext : {\n        'another' : 'attribute' // this goes to the child partial\n    }\n}\n</code></pre>\n\n<p><code>childContext</code> becomes the context of the partial like Yehuda said -- in that, it only sees the field <code>another</code>, but it doesn't see (or care about the field <code>some</code>).  If you had <code>id</code> in the top level model, and repeat <code>id</code> again in the childContext, that'll work just fine as the partial only sees what's inside <code>childContext</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The accepted answer works great if you just want to use a different context in your partial. However, it doesn't let you reference any of the parent context. To pass in multiple arguments, you need to write your own helper. Here's a working helper for Handlebars <code>2.0.0</code> (the other answer works for versions <code>&lt;2.0.0</code>):</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>Handlebars.registerHelper('renderPartial', function(partialName, options) {\n    if (!partialName) {\n        console.error('No partial name given.');\n        return '';\n    }\n    var partial = Handlebars.partials[partialName];\n    if (!partial) {\n        console.error('Couldnt find the compiled partial: ' + partialName);\n        return '';\n    }\n    return new Handlebars.SafeString( partial(options.hash) );\n});\n</code></pre>\n\n<p>Then in your template, you can do something like:</p>\n\n<pre><code>{{renderPartial 'myPartialName' foo=this bar=../bar}}\n</code></pre>\n\n<p>And in your partial, you'll be able to access those values as context like:</p>\n\n<pre><code>&lt;div id={{bar.id}}&gt;{{foo}}&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm currently dealing with handlebars.js in an express.js application. To keep things modular, I split all my templates in partials.</p>\n\n<p><strong>My problem</strong>: I couldn't find a way to pass variables through an partial invocation. Let's say I have a partial which looks like this:</p>\n\n<pre><code>&lt;div id=myPartial&gt;\n    &lt;h1&gt;Headline&lt;h1&gt;\n    &lt;p&gt;Lorem ipsum&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Let's assume I registered this partial with the name 'myPartial'. In another template I can then say something like:</p>\n\n<pre><code>&lt;section&gt;\n    {{&gt; myPartial}}\n&lt;/section&gt;\n</code></pre>\n\n<p>This works fine, the partial will be rendered as expected and I'm a happy developer. But what I now need, is a way to pass different variables throught this invocation, to check within a partial for example, if a headline is given or not. Something like:</p>\n\n<pre><code>&lt;div id=myPartial&gt;\n    {{#if headline}}\n    &lt;h1&gt;{{headline}}&lt;/h1&gt;\n    {{/if}}\n    &lt;p&gt;Lorem Ipsum&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>And the invokation should look something like this:</p>\n\n<pre><code>&lt;section&gt;\n    {{&gt; myPartial|'headline':'Headline'}}\n&lt;/section&gt;\n</code></pre>\n\n<p>or so.</p>\n\n<p>I know, that I'm able to define all the data I need, before I render a template. But I need a way to do it like just explained. Is there a possible way?</p>\n",
            "last_activity_date": 1424620909,
            "question_id": 11523331,
            "score": 48,
            "tags": [
                "javascript",
                "html",
                "handlebars.js",
                "templating"
            ],
            "title": "Passing variables through handlebars partial"
        },
        {
            "answer_count": 17,
            "answers": [
                {
                    "body": "<pre><code>var total = 0;\n$.each(arr,function() {\n    total += this;\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 62
                },
                {
                    "body": "<pre><code>var arr = [1,2,3,4];\nvar total=0;\nfor(var i in arr) { total += arr[i]; }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<p>I would just loop through the elements and add them up.</p>\n\n<p>However, <a href=\"http://code.google.com/p/jquery-utils/wiki/JqueryArrayUtils\" rel=\"nofollow\">jquery.arrayUtils.js</a> looks interesting.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p><strong>WARNING:</strong> Some people insist this is not to be used in production code, because <code>eval</code> invokes the JavaScript compiler.</p>\n\n<pre><code>var arr=[1,2,3,4];\nalert(eval(arr.join('+')));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 103
                },
                {
                    "body": "<p>Why not reduce? It's usually a bit counter intuitive, but using it to find an average is pretty straight forward:</p>\n\n<pre><code>var a = [1,2,3];\nvar average = a.reduce(function(a, b) { return a + b; }, 0) /  a.length;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>Very simple when using MooTools:</p>\n\n<pre><code>arr.sum();\n</code></pre>\n\n<p>I believe you do have to have the More extension. More info: <a href=\"http://mootools.net/docs/more/Types/Array.Extras#Array:sum\" rel=\"nofollow\">http://mootools.net/docs/more/Types/Array.Extras#Array:sum</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I know thread is old, but for others possibly seeking a standard javascript solution:</p>\n\n<pre><code>var addition = [];\naddition.push(2);\naddition.push(3);\n\nvar total = 0;\nfor (i=0;i&lt;addition.length;i++)\n    {\n        total += addition[i];\n    }\nalert(total);          //just to output example\n/* console.log(total); //just to output example w. firebug */\n</code></pre>\n\n<p>This works for me (Result should be 5). Hope there is no hidden disadvantage in this kind of solution, as i'm still learning javascript. But maybe it helps.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>// Given array 'arr'\nvar i = arr.length;\nvar sum = 0;\nwhile (--i) sum += arr[i];\n</code></pre>\n\n<p>This will take on average 1.57 ms/run (measured over 1000 runs on an array of 100 random normal numbers), compared to 3.604 ms/run with the <code>eval()</code> method above and 2.151 ms/run with a standard for(i,length,++) loop.</p>\n\n<p>Methodology note: this test was run on a Google Apps Script server, so their javascript engines are pretty much the same as Chrome.</p>\n\n<p>EDIT: <code>--i</code> instead of <code>i--</code> saves 0.12 ms each run (i-- is 1.7)</p>\n\n<p>EDIT: Holy expletive, never mind this whole post. <strong>Use the reduce() method mentioned above, it's only 1 ms/run.</strong></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I am surprised that no ones mentioned map.</p>\n\n<pre><code>var sum = 0;\narr.map(function(item){\n    sum += item;\n});\n\n// sum now contains the total.\n</code></pre>\n\n<p>You could potentially add the method to the Array prototype.</p>\n\n<pre><code>Array.prototype.sum = function(){\n    var sum = 0;\n    this.map(function(item){\n        sum += item;\n    });\n    return sum;\n}\n</code></pre>\n\n<p>Then you can use it on any Array like so:</p>\n\n<pre><code>arr.sum();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This is possible by looping over all items, and adding them on each iteration to a <code>sum</code>-variable.</p>\n\n<pre><code>var array = [1, 2, 3];\n\nfor (var i = 0, sum = 0; i &lt; array.length; sum += array[i++]);\n</code></pre>\n\n<p>Javascript doesn't know block scoping, so <code>sum</code> will be accesible:</p>\n\n<pre><code>console.log(sum); // =&gt; 6\n</code></pre>\n\n<p>The same as above, however annotated and prepared as a simple function:</p>\n\n<pre><code>function sumArray(array) {\n  for (\n    var\n      index = 0,              // the iterator\n      length = array.length,  // cache the array length\n      sum = 0;                // the total amount\n      index &lt; length;         // the for-loop condition\n      sum += array[index++]   // on each iteration\n  );\n  return sum;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>In lisp, this'd be exactly the job for <code>reduce</code>. You'd see this kind of code:</p>\n\n<pre><code>(reduce #'+ '(1 2 3)) ; 6\n</code></pre>\n\n<p>Fortunately, in JavaScript, we also have <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/Reduce\"><code>reduce</code></a>! Unfortunately, <code>+</code> is an operator, not a function. But we can make it pretty! Here, look:</p>\n\n<pre><code>var sum = [1, 2, 3].reduce(add, 0);\n\nfunction add(a, b) {\n    return a + b;\n}\n\nconsole.log(sum); // 6\n</code></pre>\n\n<p>Ain't that pretty? :-)</p>\n",
                    "is_accepted": false,
                    "score": 39
                },
                {
                    "body": "<pre><code>for (var i = 0, sum = 0; i &lt; arr.length; sum += arr[i++]);\n</code></pre>\n\n<p>Now that's elegance. Thank you, yckart : )</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Using map()</p>\n\n<pre><code>function arraySum(a) {\n    var c = 0; a.map(function(i) { c += i; } ); return c;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Use <strong><a href=\"http://jsfiddle.net/abdennour/70vv57ef/\" rel=\"nofollow\">inject</a></strong>: </p>\n\n<pre><code>[2,3,4].inject(0,function(a,b){return a+b});\n   // 2+3+4=9\n</code></pre>\n\n<p>Even product:</p>\n\n<pre><code>    [2,3,4].inject(1,function(a,b){return a*b})\n   // 2*3*4=24\n</code></pre>\n\n<h1>Syntax:</h1>\n\n<blockquote>\n  <h3>myArray.inject(intiValue,callback) ;</h3>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A short javascript would do this job:</p>\n\n<pre><code>var numbers = [1,2,3,4]; \nvar totalAmount = 0;\n\nfor (var x = 0; x &lt; numbers.length; x++) {\n\n    totalAmount += numbers[x]; \n} \n\nconsole.log(totalAmount); //10 (1+2+3+4)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>arr.reduce(function (a, b) {\n    return a + b;\n  });\n</code></pre>\n\n<p>Reference:\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Anyone looking for a functional oneliner like me? Take this:</p>\n\n<pre><code>sum= arr.length ? arr.reduce(function (a, b) {return a + b;}) : 0\n</code></pre>\n\n<p>We have to care for empty array though.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I was wondering how is it possible to go through the values of an array and add their values together.</p>\n\n<pre><code>var arr = [1, 2, 3, 4];\n</code></pre>\n\n<p>should I use </p>\n\n<pre><code>var add = $.each(arr, function() {\n\n});\n</code></pre>\n\n<p>but how can I add the values together.</p>\n\n<p>thanks</p>\n",
            "last_activity_date": 1425044663,
            "question_id": 1230233,
            "score": 46,
            "tags": [
                "javascript",
                "jquery",
                "arrays"
            ],
            "title": "How to go through an array and add their values"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Try preventing default on mousedown event:</p>\n\n<pre><code>&lt;div onmousedown=\"event.preventDefault ? event.preventDefault() : event.returnValue = false\"&gt;asd&lt;/div&gt;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>&lt;div onmousedown=\"return false\"&gt;asd&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>This might work: You can disable selecting with css3 for text, image and basically everything.</p>\n\n<pre><code>.unselectable {\n   -moz-user-select: -moz-none;\n   -khtml-user-select: none;\n   -webkit-user-select: none;\n\n   /*\n     Introduced in IE 10.\n     See http://ie.microsoft.com/testdrive/HTML5/msUserSelect/\n   */\n   -ms-user-select: none;\n   user-select: none;\n}\n</code></pre>\n\n<p>Of course only for the newer browsers. For more details check:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/826782/css-rule-to-disable-text-selection-highlighting\">css rule to disable text selection highlighting</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>This thing works.....Try it.</p>\n\n<pre><code>&lt;BODY ondragstart=\"return false;\" ondrop=\"return false;\"&gt;\n</code></pre>\n\n<p>hope it helps. Thanks</p>\n",
                    "is_accepted": false,
                    "score": 42
                },
                {
                    "body": "<p>With jQuery it will be something like that:</p>\n\n<pre><code>$(document).ready(function() {\n  $('#yourDiv').on('mousedown', function(e) {\n      e.preventDefault();\n  });\n});\n</code></pre>\n\n<p>In my case I wanted to disable the user from drop text in the inputs so I used \"drop\" instead \"mousedown\".</p>\n\n<pre><code>$(document).ready(function() {\n  $('input').on('drop', function(event) {\n    event.preventDefault();\n  });\n});\n</code></pre>\n\n<p>Instead event.preventDefault() you can return false. <a href=\"http://stackoverflow.com/questions/1357118/event-preventdefault-vs-return-false\">Here's the difference.</a></p>\n\n<p>And the code:</p>\n\n<pre><code>$(document).ready(function() {\n  $('input').on('drop', function() {\n    return false;\n  });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I'm working on a web application for which I'm attempting to implement a full featured windowing system. Right now it's going very well, I'm only running into one minor issue. Sometimes when I go to drag a part of my application (most often the corner div of my window, which is supposed to trigger a resize operation) the web browser gets clever and thinks I mean to drag and drop something. End result, my action gets put on hold while the browser does its drag and drop thing.</p>\n\n<p>Is there an easy way to disable the browser's drag and drop? I'd ideally like to be able to turn it off while the user is clicking on certain elements, but re-enable it so that users can still use their browser's normal functionality on the contents of my windows. I'm using jQuery, and although I wasn't able to find it browsing the docs, if you know a pure jQuery solution it would be excellent.</p>\n\n<p>In short: I need to disable browser text selection and drag-and-drop functions while my user has the mouse button down, and restore that functionality when the user releases the mouse.</p>\n\n<p>Thanks for any advice, I've been searching for a while on this with no luck.</p>\n",
            "last_activity_date": 1388140849,
            "question_id": 704564,
            "score": 44,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "webbrowser-control"
            ],
            "title": "Disable Drag and Drop on HTML elements?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You pretty much have to do this:</p>\n\n<pre><code>google.setOnLoadCallback(function() {\n  $(function() {\n    // init my stuff\n  });\n});\n</code></pre>\n\n<p>You can't do $(document).ready() without $ (the jQuery object) being available, so that needs to go inside the callback.  And you can't be sure the document is ready inside the callback so you have to do ready() too.</p>\n",
                    "is_accepted": true,
                    "score": 61
                },
                {
                    "body": "<p>If your JavaScript code resides in its own js file and not inside the HTML document you could also do this in the document:</p>\n\n<pre><code>&lt;script&gt;\n        google.load(\"jquery\", \"1.7.0\");\n        google.load(\"jqueryui\", \"1.8.16\");\n        google.setOnLoadCallback(function() {\n             var script = document.createElement(\"script\");\n             script.setAttribute(\"type\", \"text/javascript\");\n             script.setAttribute(\"src\", \"my.js\");\n             document.getElementsByTagName(\"html\")[0].appendChild(script);\n        });\n&lt;/script&gt;\n</code></pre>\n\n<p>This loads <code>my.js</code> after all other stuff is loaded from google. In your <code>my.js</code> file you can then do <code>$(document).ready(...)</code>. So your application code is independent from \"loaded by google\" or \"loaded directly from your server\".</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Sorry to be raising this from the dead, but 1) It still comes up as an 'answer' to this problem and 2) I've found a better solution.</p>\n\n<p>There is an optional 3rd argument on the <code>google.load</code> function that takes an object of configuration options. One of the options is <code>callback</code>.  It also gets rid of the need for a separate <code>setOnLoadCallback</code> call.</p>\n\n<p>E.g.   </p>\n\n<pre><code>google.load('visualization', '1.0', {\n    'packages': \"charttype\", \n    'callback': $jQ.proxy(me.setupChart, me)\n});\n</code></pre>\n\n<p>So:</p>\n\n<pre><code>&lt;script src=\"https://www.google.com/jsapi\"&gt;&lt;/script&gt;\n&lt;script&gt;\n$(document).ready(function () {\n    function mapsLoaded() {\n        etc etc etc\n    }\n\n    google.load(\"maps\", \"2\", {\"callback\" : mapsLoaded});\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>See:\n<a href=\"https://developers.google.com/loader/#Dynamic\" rel=\"nofollow\">https://developers.google.com/loader/#Dynamic</a></p>\n",
                    "is_accepted": false,
                    "score": 39
                },
                {
                    "body": "<p>Why mix when you can do it all with $(document).ready()?  In other words, just get rid of the google.setOnLoadCallback function and use jQuery's $(document).ready().  </p>\n\n<p>This:  </p>\n\n<pre><code>google.setOnLoadCallback(chartEnrolment);\n</code></pre>\n\n<p>Becomes:</p>\n\n<pre><code>$(document).ready(chartEnrolment);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm using Google Ajax API and they suggest I use <code>google.setOnLoadCallback()</code> to do various things related to their API but I'm using also jQuery's <code>$(document).ready()</code> to do other JS things, not related to Google API.</p>\n\n<p>Is it safe to mix these two approaches in one document? I did not notice any problems yet but I suppose it's a matter of scale.</p>\n",
            "last_activity_date": 1424305447,
            "question_id": 556406,
            "score": 43,
            "tags": [
                "javascript",
                "jquery",
                "onload",
                "google-ajax-api"
            ],
            "title": "google.setOnLoadCallback with jQuery $(document).ready(), is it OK to mix?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It's entirely possible in browser-side javascript.</p>\n\n<p><strong>The easy way:</strong></p>\n\n<p>The <a href=\"https://developer.mozilla.org/en/DOM/FileReader#readAsDataURL%28%29\">readAsDataURL()</a> method might already encode it as base64 for you. You'll probably need to strip out the beginning stuff (up to the first ,), but that's no biggie. This would take all the fun out though.</p>\n\n<p><strong>The hard way:</strong></p>\n\n<p>If you want to try it the hard way (or it doesn't work), look at <code>readAsArrayBuffer()</code>. This will give you a Uint8Array and you can use the method specified. This is probably only useful if you want to mess with the data itself, such as manipulating image data or doing other voodoo magic before you upload.</p>\n\n<p>There are two methods:</p>\n\n<ul>\n<li>Convert to string and use the built-in <code>btoa</code> or similar\n<ul>\n<li>I haven't tested all cases, but works for me- just get the char-codes</li>\n</ul></li>\n<li>Convert directly from a Uint8Array to base64</li>\n</ul>\n\n<p>I recently implemented <a href=\"https://github.com/beatgammit/tar-js\">tar in the browser</a>.  As part of that process, I made my own direct Uint8Array->base64 implementation. I don't think you'll need that, but it's <a href=\"https://github.com/beatgammit/tar-js/blob/master/lib/utils.js#L57\">here</a> if you want to take a look; it's pretty neat.</p>\n\n<p><strong>What I do now:</strong></p>\n\n<p>The code for converting to string from a Uint8Array is pretty simple (where buf is a Uint8Array):</p>\n\n<pre><code>function uint8ToString(buf) {\n    var i, length, out = '';\n    for (i = 0, length = buf.length; i &lt; length; i += 1) {\n        out += String.fromCharCode(buf[i]);\n    }\n    return out;\n}\n</code></pre>\n\n<p>From there, just do:</p>\n\n<p><code>var base64 = btoa(uint8ToString(yourUint8Array));</code></p>\n\n<p>Base64 will now be a base64-encoded string, and it should upload just peachy. Try this if you want to double check before pushing:</p>\n\n<p><code>window.open(\"data:application/octet-stream;base64,\" + base64);</code></p>\n\n<p>This will download it as a file.</p>\n\n<p><strong>Other info:</strong></p>\n\n<p>To get the data as a Uint8Array, look at the MDN docs:</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en/DOM/FileReader\">https://developer.mozilla.org/en/DOM/FileReader</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>I've started to think that using the 'iframe' for Ajax style upload might be a much better choice for my situation until <em>HTML5</em> comes full circle and I don't have to support legacy browsers in my app!  </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>After struggling with this myself, I've come to implement FileReader for browsers that support it (Chrome, Firefox and the as-yet unreleased Safari 6), and a PHP script that echos back POSTed file data as Base64-encoded data for the other browsers.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I used FileReader to display image on click of the file upload button not using any Ajax requests. Following is the code hope it might help some one.</p>\n\n<pre><code>$(document).ready(function($) {\n    $.extend( true, jQuery.fn, {        \n        imagePreview: function( options ){          \n            var defaults = {};\n            if( options ){\n                $.extend( true, defaults, options );\n            }\n            $.each( this, function(){\n                var $this = $( this );              \n                $this.bind( 'change', function( evt ){\n\n                    var files = evt.target.files; // FileList object\n                    // Loop through the FileList and render image files as thumbnails.\n                    for (var i = 0, f; f = files[i]; i++) {\n                        // Only process image files.\n                        if (!f.type.match('image.*')) {\n                        continue;\n                        }\n                        var reader = new FileReader();\n                        // Closure to capture the file information.\n                        reader.onload = (function(theFile) {\n                            return function(e) {\n                                // Render thumbnail.\n                                    $('#imageURL').attr('src',e.target.result);                         \n                            };\n                        })(f);\n                        // Read in the image file as a data URL.\n                        reader.readAsDataURL(f);\n                    }\n\n                });\n            });\n        }   \n    });\n    $( '#fileinput' ).imagePreview();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I've got a basic HTML form from which I can grab a bit of information that I'm examining in Firebug.</p>\n\n<p>My only issues is that I'm trying to <strong><em>base64</em></strong> encode the file data before it's sent to the server where it's required to be in that form to be saved to the database.</p>\n\n<pre><code>&lt;input type=\"file\" id=\"fileupload\" /&gt;\n</code></pre>\n\n<p>And in Javascript+jQuery:</p>\n\n<pre><code>var file = $('#fileupload').attr(\"files\")[0];\n</code></pre>\n\n<p>I have some operations based on avaliable javascript: <em>.getAsBinary(), .getAsText(), .getAsTextURL</em></p>\n\n<p>However none of these return usable text that can be inserted as they contain <em>unusable 'characters'</em> - I don't want to have a 'postback' occur in my file uploaded, and I need to have multiple forms targeting specific objects so it's important I get the file and use Javascript this way.</p>\n\n<p>How should I get the file in such a way that I can use one of the Javascript base64 encoders that are widely avaliable!? </p>\n\n<h2>Thanks</h2>\n\n<h2>Update - Starting bounty here, need cross browser support!!!</h2>\n\n<p><em>Here is where I'm at:</em> </p>\n\n<pre><code>&lt;input type=\"file\" id=\"fileuploadform\" /&gt;\n\n&lt;script type=\"text/javascript&gt;\nvar uploadformid = 'fileuploadform';\nvar uploadform = document.getElementById(uploadformid);\n\n\n/* method to fetch and encode specific file here based on different browsers */\n\n&lt;/script&gt;\n</code></pre>\n\n<p>Couple of issues with cross browser support:</p>\n\n<pre><code>var file = $j(fileUpload.toString()).attr('files')[0];\nfileBody = file.getAsDataURL(); // only works in Firefox\n</code></pre>\n\n<p>Also, IE doesn't support:</p>\n\n<pre><code>var file = $j(fileUpload.toString()).attr('files')[0];\n</code></pre>\n\n<p>So I have to replace with:</p>\n\n<pre><code>var element = 'id';\nvar element = document.getElementById(id);\n</code></pre>\n\n<p>For IE Support.</p>\n\n<p>This works in Firefox, Chrome, Safari (but doesn't properly encode the file, or at least after it's been posted the file doesn't come out right)        </p>\n\n<pre><code>var file = $j(fileUpload.toString()).attr('files')[0];\nvar encoded = Btoa(file);\n</code></pre>\n\n<p>Also,</p>\n\n<pre><code>file.readAsArrayBuffer() \n</code></pre>\n\n<p>Seems to be only supported in HTML5?</p>\n\n<p><em><strong>Lots of people suggested:</em></strong> <a href=\"http://www.webtoolkit.info/javascript-base64.html\">http://www.webtoolkit.info/javascript-base64.html</a></p>\n\n<p>But this only returns en error on the UTF_8 method before it base64 encodes? (or an empty string)</p>\n\n<pre><code>var encoded = Base64.encode(file); \n</code></pre>\n",
            "last_activity_date": 1340345991,
            "question_id": 6978156,
            "score": 37,
            "tags": [
                "javascript",
                "html",
                "file-upload",
                "base64"
            ],
            "title": "Get Base64 encode file-data from Input Form"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>It lets Google change the URL (but they can't since the URL method is already established)</p>\n\n<p>In theory, if you do several google.load()s, Google can bundle then into one file, but I don't think that is implemented.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<ol>\n<li>It allows you to <a href=\"http://code.google.com/apis/ajax/documentation/#Dynamic\" rel=\"nofollow\">dynamically load</a> the libraries in your code, wherever you want.</li>\n<li>Because it lets you switch directly to a new version of the library in the javascript, without forcing you to rebuild/change templates all across your site.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You might want to load a library only under special conditions. </p>\n\n<p>Additionally the google.load method would speed up the initial page display. Otherwise the page rendering will freeze until the file has been loaded if you include script tags in your html code.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Aside from the benefit of Google being able to bundle multiple files together on the request, there is no perk to using google.load. In fact, if you know all libraries that you want to use (say just jQuery 1.2.6), you're possibly making the user's browser perform one unneeded HTTP connection. Since the whole point of using Google's hosting is to reduce bandwidth consumption and response time, the best decision - if you're just using 1 library - is to call that library directly.</p>\n\n<p>Also, if your site will be using any SSL certificates, you want to plan for this by calling the script via Google's HTTPS connection. There's no downside to calling a https script from an http page, but calling an http script from an https page will causing more obscure debugging problems than you would want to think about.</p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>I find it's very useful for testing different libraries and different methods, particularly if you're not used to them and want to see their differences side by side, without having to download them. It appears that one of the primary reason to do it, would be that it is asynchronous versus the synchronous script call. You also get some neat stuff that is directly included in the google loader, like client location. You can get their latitude and longitude from it. Not necessarily useful, but it may be helpful if you're planning to have targeted advertising or something of the like. </p>\n\n<p>Not to mention that dynamic loading is always useful. Particularly to smooth out the initial site load. Keeping the initial \"site load time\" down to as little as possible is something every web designer is fighting an uphill battle on.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Personally, I'm interested in whether there's a caching benefit for browsers that will already have loaded that library as well.  Seems like if someone browses to google and loads the right jQuery lib and then browses to my site and loads the right jQuery lib... ...both might well use the same cached jQuery.  That's just a speculative possibility, though.</p>\n\n<p>Edit:  Yep, at very least when using the direct script tags to the location, the javascript library will be cached if someone has already called for the library from google (e.g. if it were included by another site somewhere).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you were to write a boatload of JavaScript that only used the library when a particular event happens, you could wait until the event happens to download the library, which avoids unnecessary HTTP requests for those who don't actually end up triggering the event. However, in the case of libraries like Prototype + Scriptaculous, which downloads over 300kb of JavaScript code, this isn't practical.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Dave Ward wrote an indepth post about this entitled 3 reasons why you should\nlet google host jquery for you:</p>\n\n<p><a href=\"http://encosia.com/2008/12/10/3-reasons-why-you-should-let-google-host-jquery-for-you/\" rel=\"nofollow\">http://encosia.com/2008/12/10/3-reasons-why-you-should-let-google-host-jquery-for-you/</a></p>\n\n<p>broken down from the above post</p>\n\n<ol>\n<li>Decreased Latency</li>\n<li>Increased parallelism</li>\n<li>Better caching</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Google hosts some popular JavaScript libraries at:\n<a href=\"http://code.google.com/apis/ajaxlibs/\">http://code.google.com/apis/ajaxlibs/</a></p>\n\n<p>According to google:</p>\n\n<blockquote>\n  <p>The most powerful way to load the libraries is by using google.load() ...</p>\n</blockquote>\n\n<p>What are the real advantages of using </p>\n\n<p><code>google.load(\"jquery\", \"1.2.6\")</code></p>\n\n<p>vs.</p>\n\n<p><code>&lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.2.6/jquery.min.js\"&gt;&lt;/script&gt;</code></p>\n\n<p>?</p>\n",
            "last_activity_date": 1313601403,
            "question_id": 208869,
            "score": 37,
            "tags": [
                "javascript",
                "optimization"
            ],
            "title": "What are advantages of using google.load(&#39;jQuery&#39;, ...) vs direct inclusion of hosted script URL?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I'm going to assume that your lack of quotes around the selector is just a transcription error, but you should check it anyway.  Also, I don't see where you are actually giving the form an id.  Usually you do this with the htmlAttributes parameter.  I don't see you using the signature that has it. Again, though, if the form is submitting at all, this could be a transcription error.</p>\n\n<p>If the selector and the id aren't the problem I'm suspicious that it might be because the click handler is added via markup when you use the Ajax BeginForm extension.  You might try using $('form').trigger('submit') or in the worst case, have the click handler on the anchor create a hidden submit button in the form and click it.  Or even create your own ajax submission using pure jQuery (which is probably what I would do).</p>\n\n<p>Lastly, you should realize that by replacing the submit button, you're going to totally break this for people who don't have javascript enabled.  The way around this is to also have a button hidden using a noscript tag and handle both AJAX and non-AJAX posts on the server.</p>\n\n<p>BTW, it's consider standard practice, Microsoft not withstanding, to add the handlers via javascript not via markup.  This keeps your javascript organized in one place so you can more easily see what's going on on the form.  Here's an example of how I would use the trigger mechanism.</p>\n\n<pre><code>  $(function() {\n      $('form#ajaxForm').find('a.submit-link').click( function() {\n           $('form#ajaxForm').trigger('submit');\n      }).show();\n  }\n\n&lt;% using (Ajax.BeginForm(\"Update\", \"Description\", new { id = Model.Id },\n     new AjaxOptions\n     {\n       UpdateTargetId = \"DescriptionDiv\",\n       HttpMethod = \"post\"\n     }, new { id = \"ajaxForm\" } )) {%&gt;\n   Description:\n   &lt;%= Html.TextBox(\"Description\", Model.Description) %&gt;&lt;br /&gt;\n   &lt;a href=\"#\" class=\"submit-link\" style=\"display: none;\"&gt;Save&lt;/a&gt;\n   &lt;noscript&gt;\n       &lt;input type=\"submit\" value=\"Save\" /&gt;\n   &lt;/noscript&gt;\n&lt;% } %&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>I've tried a few times to get the ajax form submit working nicely, but always met with either complete failure or too many compromises. Here's an example of page that uses the <a href=\"http://malsup.com/jquery/form/\" rel=\"nofollow\">jQuery Form plug-in</a> inside of a MVC page to update a list of projects (using a partially rendered control) as the user types in an input box:</p>\n\n<pre><code>&lt;div class=\"searchBar\"&gt;\n    &lt;form action=\"&lt;%= Url.Action (\"SearchByName\") %&gt;\" method=\"get\" class=\"searchSubmitForm\"&gt;\n        &lt;label for=\"projectName\"&gt;Search:&lt;/label&gt;\n        &lt;%= Html.TextBox (\"projectName\") %&gt;\n        &lt;input class=\"submit\" type=\"submit\" value=\"Search\" /&gt;\n    &lt;/form&gt;\n&lt;/div&gt;\n&lt;div id=\"projectList\"&gt;\n    &lt;% Html.RenderPartial (\"ProjectList\", Model); %&gt;\n&lt;/div&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    jQuery(document).ready(function() {\n        jQuery(\"#projectName\").keyup(function() {\n            jQuery(\".searchSubmitForm\").submit();\n        });\n\n        jQuery(\".searchSubmitForm\").submit(function() {\n            var options = {\n                target : '#projectList'\n            }\n\n            jQuery(this).ajaxSubmit(options);\n\n            return false;\n        });\n\n        // We remove the submit button here - good Javascript depreciation technique\n        jQuery(\".submit\").remove();\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>And on the controller side:</p>\n\n<pre><code>public ActionResult SearchByName (string projectName)\n{\n    var service = Factory.GetService&lt;IProjectService&gt; ();\n    var result = service.GetProjects (projectName);\n\n    if (Request.IsAjaxRequest ())\n        return PartialView (\"ProjectList\", result);\n    else\n    {\n        TempData[\"Result\"] = result;\n        TempData[\"SearchCriteria\"] = projectName;\n\n        return RedirectToAction (\"Index\");\n    }\n}\n\npublic ActionResult Index ()\n{\n    IQueryable&lt;Project&gt; projects;\n    if (TempData[\"Result\"] != null)\n        projects = (IQueryable&lt;Project&gt;)TempData[\"Result\"];\n    else\n    {\n        var service = Factory.GetService&lt;IProjectService&gt; ();\n        projects = service.GetProjects ();\n    }\n\n    ViewData[\"projectName\"] = TempData[\"SearchCriteria\"];\n\n    return View (projects);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>A simple example, where a change on a dropdown list triggers an ajax form-submit to reload a datagrid:</p>\n\n<pre><code>&lt;div id=\"pnlSearch\"&gt;\n\n    &lt;% using (Ajax.BeginForm(\"UserSearch\", \"Home\", new AjaxOptions { UpdateTargetId = \"pnlSearchResults\" }, new { id=\"UserSearchForm\" }))\n    { %&gt;\n\n        UserType: &lt;%: Html.DropDownList(\"FilterUserType\", Model.UserTypes, \"--\", new { onchange = \"$('#UserSearchForm').trigger('submit');\" })%&gt;\n\n    &lt;% } %&gt;\n\n&lt;/div&gt;\n</code></pre>\n\n<p>The trigger('onsubmit') is the key thing: it calls the onsubmit function that MVC has grafted onto the form.</p>\n\n<p>NB. The UserSearchResults controller returns a PartialView that renders a table using the supplied Model</p>\n\n<pre><code>&lt;div id=\"pnlSearchResults\"&gt;\n    &lt;% Html.RenderPartial(\"UserSearchResults\", Model); %&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Rather than using JavaScript perhaps try something like </p>\n\n<pre><code>&lt;a href=\"#\"&gt;\n\n  &lt;input type=\"submit\" value=\"save\" style=\"background: transparent none; border: 0px none; text-decoration: inherit; color: inherit; cursor: inherit\" /&gt;\n\n&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Unfortunately triggering the onsubmit or submit events wont work in all browsers.</p>\n\n<ul>\n<li>Works in IE and Chrome: #('form#ajaxForm')trigger('onsubmit');</li>\n<li>Works in Firefox and Safari: #('form#ajaxForm')trigger('submit');</li>\n</ul>\n\n<p>Also, if you trigger('submit') in Chrome or IE, it causes the entire page to be posted rather than doing an AJAX behavior. </p>\n\n<p>What works for all browsers is <a href=\"http://paululvinius.wordpress.com/2009/03/03/how-you-dynamically-submit-a-aspnet-mvc-ajax-form-from-javascript-and-jquery/\">removing the onsubmit event behavior and just calling submit() on the form itself</a>.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n$(function() {\n\n    $('form#ajaxForm').submit(function(event) { \n        eval($(this).attr('onsubmit')); return false; \n        });\n\n    $('form#ajaxForm').find('a.submit-link').click( function() { \n        $'form#ajaxForm').submit();\n        });\n\n  }\n&lt;/script&gt;\n  &lt;% using (Ajax.BeginForm(\"Update\", \"Description\", new { id = Model.Id },\n     new AjaxOptions\n     {\n       UpdateTargetId = \"DescriptionDiv\",\n       HttpMethod = \"post\"\n     }, new { id = \"ajaxForm\" } )) {%&gt;\n   Description:\n   &lt;%= Html.TextBox(\"Description\", Model.Description) %&gt;&lt;br /&gt;\n   &lt;a href=\"#\" class=\"submit-link\"&gt;Save&lt;/a&gt; \n&lt;% } %&gt;\n</code></pre>\n\n<p>Also, the link doesn't have to be contained within the form in order for this to work.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Ajax.BeginForm looks to be a fail.</p>\n\n<p>Using a regular Html.Begin for, this does the trick just nicely:</p>\n\n<pre><code>$('#detailsform').submit(function(e) {\n    e.preventDefault();\n    $.post($(this).attr(\"action\"), $(this).serialize(), function(r) {\n        $(\"#edit\").html(r);\n    });\n}); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try the following way:</p>\n\n<pre><code>&lt;input type=\"submit\" value=\"Search\" class=\"search-btn\" /&gt;\n&lt;a href=\"javascript:;\" onclick=\"$('.search-btn').click();\"&gt;Go&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have a simple form created using <strong><code>Ajax.BeginForm</code></strong>:</p>\n\n<pre><code>&lt;% using (Ajax.BeginForm(\"Update\", \"Description\", new { id = Model.Id },\n     new AjaxOptions\n     {\n       UpdateTargetId = \"DescriptionDiv\",\n       HttpMethod = \"post\"\n     },new {id ='AjaxForm' })) {%&gt;\nDescription:\n&lt;%= Html.TextBox(\"Description\", Model.Description) %&gt;&lt;br /&gt;\n&lt;input type=\"submit\" value=\"save\" /&gt;\n&lt;% }%&gt;\n</code></pre>\n\n<p>The controller is wired up and returns a partial view that updates the <code>DescriptionDiv</code>. And it all works neatly.</p>\n\n<p>Now I would like to be able to submit this form without having the submit button (via a clik on a link or on an image or whatever). Unfortunately this little jQuery snippet does not do the job:</p>\n\n<pre><code>$('form#AjaxForm').submit();\n</code></pre>\n\n<p>It does submit the form, but does (I suppose not surprisingly) a regular post-back and not an Ajax one.</p>\n\n<p>For the sake of simplicity the above jQuery is wired up like this:</p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"$('form#AjaxForm').submit(); return false;\"&gt;submit&lt;/a&gt;\n</code></pre>\n\n<p>The form's onsubmit is using the Sys.Mvc.AsyncForm.handleSubmit() but the jQuery submit seems to be bypassing this.</p>\n\n<p>PS. I am looking for a solution in this particular approach. I know how to achieve the same using a normal form and posting it using AJAX+jQuery. I am interested in this particular solution though.</p>\n",
            "last_activity_date": 1395047095,
            "question_id": 1305601,
            "score": 32,
            "tags": [
                "javascript",
                "asp.net-mvc",
                "asp.net-ajax",
                "jquery"
            ],
            "title": "How to post ASP.NET MVC Ajax form using JavaScript rather than submit button"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Depending on your target browsers, setting the <a href=\"http://www.w3.org/TR/2011/WD-html5-20110113/video.html#attr-media-preload\" rel=\"nofollow\" title=\"WC3 HTML5 Specification\"><code>prelaod</code></a> attribute on the <code>audio</code> tag may be sufficient.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<blockquote>\n  <ul>\n  <li><strong>DEMO:</strong> <a href=\"http://aseptik.net/demo/how-to-preload-a-sound-in-javascript/\" rel=\"nofollow\">http://aseptik.net/demo/how-to-preload-a-sound-in-javascript/</a></li>\n  </ul>\n</blockquote>\n\n<pre><code>//Tested on Chrome, FF, IE6\n\nfunction LoadSound(filename) {\n    var xmlhttp;\n    if (window.XMLHttpRequest) { // code for IE7+, Firefox, Chrome, Opera, Safari\n        xmlhttp = new XMLHttpRequest();\n    } else { // code for IE6, IE5\n        xmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\n    }\n    xmlhttp.onreadystatechange = function() {\n        if (xmlhttp.readyState == 4 &amp;&amp; xmlhttp.status == 200) {\n            document.getElementById(\"load-sound\").innerHTML = '&lt;embed src=\"' + filename + '\" controller=\"1\" autoplay=\"0\" autostart=\"0\" /&gt;';\n        }\n    }\n    xmlhttp.open(\"GET\", filename, true);\n    xmlhttp.send();\n}\n</code></pre>\n\n<p><strong>Reference</strong></p>\n\n<blockquote>\n  <ul>\n  <li><a href=\"http://sharkysoft.com/tutorials/jsa/content/048.html\" rel=\"nofollow\">http://sharkysoft.com/tutorials/jsa/content/048.html</a></li>\n  <li><a href=\"http://stackoverflow.com/questions/2762865/jquery-how-do-you-preload-sound\">jQuery: How do you preload sound?</a></li>\n  <li><a href=\"http://jsarchive.8m.com/Main/audio.html\" rel=\"nofollow\">http://jsarchive.8m.com/Main/audio.html</a></li>\n  </ul>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Remy came up with a solution for iOS that utilizes the sprite concept:</p>\n\n<p><a href=\"http://remysharp.com/2010/12/23/audio-sprites/\" rel=\"nofollow\">http://remysharp.com/2010/12/23/audio-sprites/</a></p>\n\n<p>Not sure it directly addresses the preload, but has the advantage that you only need to load one audio file (which is also a drawback, I suppose). </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Did you try making an ajax request for the file? You wouldn't show/use it until it was all the way loaded. </p>\n\n<p>E.g. <a href=\"http://stackoverflow.com/questions/2762865/jquery-how-do-you-preload-sound/2763101#2763101\">jQuery: How do you preload sound?</a> (you wouldn't have to use jQuery).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Your problem is that Audio objects don't support the 'load' event.</p>\n\n<p>Instead, there's an event called 'canplaythrough' that doesn't mean it's fully loaded, but enough of it is loaded that at the current download rate, it will finish by the time the track has had enough time to play through.</p>\n\n<p>So instead of</p>\n\n<pre><code>audio.onload = isAppLoaded;\n</code></pre>\n\n<p>try</p>\n\n<pre><code>audio.oncanplaythrough = isAppLoaded;\n</code></pre>\n\n<p>Or better yet.. ;)</p>\n\n<pre><code>audio.addEventListener('canplaythrough', isAppLoaded, false);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>I tried the accepted answer by tylermwashburn and it didn't work in Chrome. So I moved on and created this and it benefits from jQuery. It also sniffs for ogg and mp3 support. The default is ogg because some experts say a 192KBS ogg file is as good as a 320KBS MP3, so you save 40% on your required audio downloads. However mp3 is required for IE9:</p>\n\n<pre><code>// Audio preloader\n\n$(window).ready(function(){\n  var audio_preload = 0;\n  function launchApp(launch){\n    audio_preload++;\n    if ( audio_preload == 3 || launch == 1) {  // set 3 to # of your files\n      start();  // set this function to your start function\n    }\n  }\n  var support = {};\n  function audioSupport() {\n    var a = document.createElement('audio');\n    var ogg = !!(a.canPlayType &amp;&amp; a.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/no/, ''));\n    if (ogg) return 'ogg';\n    var mp3 = !!(a.canPlayType &amp;&amp; a.canPlayType('audio/mpeg;').replace(/no/, ''));\n    if (mp3) return 'mp3';\n    else return 0;\n  }\n  support.audio = audioSupport();\n  function loadAudio(url, vol){\n    var audio = new Audio();\n    audio.src = url;\n    audio.preload = \"auto\";\n    audio.volume = vol;\n    $(audio).on(\"loadeddata\", launchApp);  // jQuery checking\n    return audio;\n  }\n  if (support.audio === 'ogg') {\n    var snd1 = loadAudio(\"sounds/sound1.ogg\", 1);  // ie) the 1 is 100% volume\n    var snd2 = loadAudio(\"sounds/sound2.ogg\", 0.3);  // ie) the 0.3 is 30%\n    var snd3 = loadAudio(\"sounds/sound3.ogg\", 0.05);\n        // add more sounds here\n  } else if (support.audio === 'mp3') { \n    var snd1 = loadAudio(\"sounds/sound1.mp3\", 1);\n    var snd2 = loadAudio(\"sounds/sound2.mp3\", 0.3);\n    var snd3 = loadAudio(\"sounds/sound3.mp3\", 0.05);\n        // add more sounds here\n  } else {\n    launchApp(1);  // launch app without audio\n  }\n\n// this is your first function you want to start after audio is preloaded:\n  function start(){\n     if (support.audio) snd1.play();  // this is how you play sounds\n  }\n\n});\n</code></pre>\n\n<p>Furthermore:\nHere is an mp3 to ogg converter:\n<a href=\"http://audio.online-convert.com/convert-to-ogg\">http://audio.online-convert.com/convert-to-ogg</a>\nOr you can use VLC Media player to convert.\nCheck your mp3 bitrate by right-clicking on the mp3 file (in Windows) and going to the file details. Try to reduce by 40% when selecting your new bitrate for your new 'ogg' file. The converter may throw an error, so keep increasing the size until is accepted. Of course test sounds for satisfactory quality. Also (and this applied to me) if you are using VLC Media player to test your audio tracks make sure you set the volume at 100% or below or otherwise you'll hear audio degradation and might mistakenly think it is the result of compression.</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I'm making games in Javascript. But I have a problem.</p>\n\n<p>I can preload images easily thanks to the 'onload' function. But it doesn't work with the audio! Browsers like Chrome, Safari, Firefox... doesn't support the 'onload' functions in the audio!</p>\n\n<p>How to preload a sound in Javascript without using JS libraries and without using or creating HTML tags? Thanks for all!!</p>\n\n<hr>\n\n<p>EDIT: The <code>loadAudio</code> function is solved by <a href=\"http://stackoverflow.com/a/5380837/168775\">tylermwashburn's answer below</a>. Thanks a lot! Here's my working code:</p>\n\n<pre><code>mySound = loadAudio('src/ogg/music.ogg'); //Doesn't count in 'filesLoaded'!!\nmyImage = loadImage('src/png/home.png');\n\nfilesToLoad = 2;\nfilesLoaded = 0;\n\nfunction loadImage(uri)\n{\n    var img = new Image();\n    img.onload = isAppLoaded;\n    img.src = uri;\n    return img;\n}\n\nfunction loadAudio(uri)\n{\n    var audio = new Audio();\n    //audio.onload = isAppLoaded; // It doesn't works!\n    audio.addEventListener('canplaythrough', isAppLoaded, false); // It works!!\n    audio.src = uri;\n    return audio;\n}\n\nfunction isAppLoaded()\n{\n    filesLoaded++;\n    if (filesLoaded &gt;= filesToLoad) main();\n}\n</code></pre>\n",
            "last_activity_date": 1351951671,
            "question_id": 5313646,
            "score": 31,
            "tags": [
                "javascript",
                "audio",
                "preload"
            ],
            "title": "How to preload a sound in Javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Have you removed any event listeners? That <a href=\"http://javascript.crockford.com/memory/leak.html\">can cause memory leaks</a>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The DOM preserves all DOM nodes, even if they have been removed from the DOM tree itself, the only way to remove these nodes is to do a page refresh (if you put the list into an iframe the refresh won't be as noticable)</p>\n\n<p>Otherwise, you could wait for the problem to get bad enough that the browsers garbage collector is forced into action (talking hundreds of megabytes of unused nodes here)</p>\n\n<p>Best practice is to reuse nodes.</p>\n\n<p><strong>EDIT: Try this:</strong></p>\n\n<pre><code>var garbageBin;\nwindow.onload = function ()\n    {\n    if (typeof(garbageBin) === 'undefined')\n        {\n        //Here we are creating a 'garbage bin' object to temporarily \n        //store elements that are to be discarded\n        garbageBin = document.createElement('div');\n        garbageBin.style.display = 'none'; //Make sure it is not displayed\n        document.body.appendChild(garbageBin);\n        }\n    function discardElement(element)\n        {\n        //The way this works is due to the phenomenon whereby child nodes\n        //of an object with it's innerHTML emptied are removed from memory\n\n        //Move the element to the garbage bin element\n        garbageBin.appendChild(element);\n        //Empty the garbage bin\n        garbageBin.innerHTML = \"\";\n        }\n    }\n</code></pre>\n\n<p>To use it in your context, you would do it like this:</p>\n\n<pre><code>discardElement(this);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>The code below does not leak on my IE7 and other browsers:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;&lt;/head&gt;\n&lt;body&gt;\n    &lt;a href=\"javascript:\" onclick=\"addRemove(this)\"&gt;add&lt;/a&gt;\n    &lt;ul&gt;&lt;/ul&gt;\n    &lt;script&gt;\n        function addRemove(a) {\n            var ul = document.getElementsByTagName('UL')[0],\n                li, i = 20000;\n            if (a.innerHTML === 'add') {\n                while (i--) {\n                    li = document.createElement('LI');\n                    ul.appendChild(li);\n                    li.innerHTML = i;\n                    li.onclick = function() {\n                        alert(this.innerHTML);\n                    };\n                }\n                a.innerHTML = 'remove';\n            } else {\n                while (ul.firstChild) {\n                    ul.removeChild(ul.firstChild);\n                }\n                a.innerHTML = 'add';\n            }\n        }\n    &lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>May be you can try to spot some differences with your code.<br/>\nI know that IE leaks far less when you insert first the node in the DOM before doing anything to it, eg: attaching events to it or filling its <code>innerHTML</code> property.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is more of an <em>FYI</em> than an actual answer, but it is also quite interesting.</p>\n\n<p>From the W3C <em>DOM core specification</em> (http://www.w3.org/TR/DOM-Level-2-Core/core.html): </p>\n\n<blockquote>\n  <p>The Core DOM APIs are designed to be compatible with a wide range of languages, including both general-user scripting languages and the more challenging languages used mostly by professional programmers. Thus, the DOM APIs need to operate across a variety of memory management philosophies, from language bindings that do not expose memory management to the user at all, through those (notably Java) that provide explicit constructors but provide an automatic garbage collection mechanism to automatically reclaim unused memory, to those (especially C/C++) that generally require the programmer to explicitly allocate object memory, track where it is used, and explicitly free it for re-use. To ensure a consistent API across these platforms, the DOM does not address memory management issues at all, but instead leaves these for the implementation. Neither of the explicit language bindings defined by the DOM API (for ECMAScript and Java) require any memory management methods, but DOM bindings for other languages (especially C or C++) may require such support. These extensions will be the responsibility of those adapting the DOM API to a specific language, not the DOM Working Group.</p>\n</blockquote>\n\n<p>In other words: memory management is left to the implementation of the DOM specification in various languages. You would have to look into the documentation of the DOM implementation in javascript to find out any method to remove a DOM object from memory, which is not a hack. (There is however very little information on the MDC site on that topic.)</p>\n\n<hr>\n\n<p><strike>As a note on <code>jQuery#remove</code> and <code>jQuery#empty</code>: from what I can tell neither of these methods does anything other than removing <code>Object</code>s from DOM <code>node</code>s or removing DOM <code>node</code>s from the <code>document</code>. They only remove That of course does not mean that there is no memory allocated to these objects (even though they aren't in the <code>document</code> anymore).</strike></p>\n\n<p><strong>Edit:</strong> The above passage was superfluous since obviously jQuery cannot do wonders and work around the DOM implementation of the used browser.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>If you have to \"post-fix\" leakage, and must do so without rewriting all your code to take closures, circular references etc in account, use Douglas Crockfords Purge-method prior to delete: </p>\n\n<p><a href=\"http://javascript.crockford.com/memory/leak.html\" rel=\"nofollow\">http://javascript.crockford.com/memory/leak.html</a></p>\n\n<p>Or use this closure-fix workaround:</p>\n\n<p><a href=\"http://laurens.vd.oever.nl/weblog/items2005/closures/\" rel=\"nofollow\">http://laurens.vd.oever.nl/weblog/items2005/closures/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>My Javascript build a list of \"LI\" elements. When I update the list memory usage grows and never goes down. I am wondering what should I do to remove DOM nodes without memory leak. </p>\n\n<p>I tested in sIEve and it shows that browser keeps all elements which I thought was deleted by $.remove() or $.empty jQuery commands.</p>\n\n<p>Help!!!</p>\n",
            "last_activity_date": 1366266486,
            "question_id": 3785258,
            "score": 28,
            "tags": [
                "javascript",
                "jquery",
                "dom",
                "memory-leaks"
            ],
            "title": "How to remove DOM elements without memory leaks?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>There's a variable conflict in your <code>run_cmd</code> function:</p>\n\n<pre><code>  var me = this;\n  child.stdout.on('data', function(me, data) {\n    // me is overriden by function argument\n    cb(me, data);\n  });\n</code></pre>\n\n<p>Simply change it to this:</p>\n\n<pre><code>  var me = this;\n  child.stdout.on('data', function(data) {\n    // One argument only!\n    cb(me, data);\n  });\n</code></pre>\n\n<p>In order to see errors always add this:</p>\n\n<pre><code>  child.stderr.on('data', function(data) {\n      console.log( data );\n  });\n</code></pre>\n\n<p><strong>EDIT</strong> You're code fails because you are trying to run <code>dir</code> which is <strong>not</strong> provided as a separate standalone program. It is a command in <code>cmd</code> process. If you want to play with filesystem use native <code>require( 'fs' )</code>.</p>\n\n<p>Alternatively ( which I do not recommend ) you can create a batch file which you can then run. Note that OS by default fires batch files via <code>cmd</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There are three issues here that need to be fixed:</p>\n\n<p><strong>First</strong> is that you are expecting synchronous behavior while using stdout asynchronously. All of the calls in your <code>run_cmd</code> function are asynchronous, so it will spawn the child process and return immediately regardless of whether some, all, or none of the data has been read off of stdout. As such, when you run</p>\n\n<pre><code>console.log(foo.stdout);\n</code></pre>\n\n<p>you get whatever happens to be stored in foo.stdout at the moment, and there's no guarantee what that will be because your child process might still be running.</p>\n\n<p><strong>Second</strong> is that stdout is a <a href=\"http://nodejs.org/api/stream.html#stream_readable_stream\">readable stream</a>, so 1) the data event can be called multiple times, and 2) the callback is given a buffer, not a string. Easy to remedy; just change</p>\n\n<pre><code>foo = new run_cmd(\n    'netstat.exe', ['-an'], function (me, data){me.stdout=data;}\n);\n</code></pre>\n\n<p>into</p>\n\n<pre><code>foo = new run_cmd(\n    'netstat.exe', ['-an'], function (me, buffer){me.stdout+=buffer.toString();}\n);\n</code></pre>\n\n<p>so that we convert our buffer into a string and append that string to our stdout variable.</p>\n\n<p><strong>Third</strong> is that you can only know you've received all output when you get the 'end' event, which means we need another listener and callback:</p>\n\n<pre><code>function run_cmd(cmd, args, cb, end) {\n    // ...\n    child.stdout.on('end', end);\n}\n</code></pre>\n\n<p>So, your final result is this:</p>\n\n<pre><code>function run_cmd(cmd, args, cb, end) {\n    var spawn = require('child_process').spawn,\n        child = spawn(cmd, args),\n        me = this;\n    child.stdout.on('data', function (buffer) { cb(me, buffer) });\n    child.stdout.on('end', end);\n}\n\n// Run C:\\Windows\\System32\\netstat.exe -an\nvar foo = new run_cmd(\n    'netstat.exe', ['-an'],\n    function (me, buffer) { me.stdout += buffer.toString() },\n    function () { console.log(foo.stdout) }\n);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>You're not actually returning anything from your run_cmd function.</p>\n\n<pre><code>function run_cmd(cmd, args, done) {\n    var spawn = require(\"child_process\").spawn;\n    var child = spawn(cmd, args);\n    var result = { stdout: \"\" };\n    child.stdout.on(\"data\", function (data) {\n            result.stdout += data;\n    });\n    child.stdout.on(\"end\", function () {\n            done();\n    });\n    return result;\n}\n\n&gt; foo = run_cmd(\"ls\", [\"-al\"], function () { console.log(\"done!\"); });\n{ stdout: '' }\ndone!\n&gt; foo.stdout\n'total 28520...'\n</code></pre>\n\n<p>Works just fine. :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had a similar problem and I ended up writing a node extension for this. You can check out the git repository. It's open source and free and all that good stuff !</p>\n\n<p><a href=\"https://github.com/aponxi/npm-execxi\" rel=\"nofollow\">https://github.com/aponxi/npm-execxi</a></p>\n\n<blockquote>\n  <p>ExecXI is a node extension written in C++ to execute shell commands\n  one by one, outputting the command's output to the console in\n  real-time. Optional chained, and unchained ways are present; meaning\n  that you can choose to stop the script after a command fails\n  (chained), or you can continue as if nothing has happened !</p>\n</blockquote>\n\n<p>Usage instructions are in the <a href=\"https://github.com/aponxi/npm-execxi/blob/master/README.md\" rel=\"nofollow\">ReadMe file</a>. Feel free to make pull requests or submit issues!</p>\n\n<p>I thought it was worth to mention it.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>A simplified version of the accepted answer (third point), just worked for me.</p>\n\n<pre><code>function run_cmd(cmd, args, callBack ) {\n    var spawn = require('child_process').spawn;\n    var child = spawn(cmd, args);\n    var resp = \"\";\n\n    child.stdout.on('data', function (buffer) { resp += buffer.toString() });\n    child.stdout.on('end', function() { callBack (resp) });\n} // ()\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>run_cmd( \"ls\", [\"-l\"], function(text) { console.log (text) });\n\nrun_cmd( \"hostname\", [], function(text) { console.log (text) });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I used this more concisely :</p>\n\n<pre><code>var sys = require('sys')\nvar exec = require('child_process').exec;\nfunction puts(error, stdout, stderr) { sys.puts(stdout) }\nexec(\"ls -la\", puts);\n</code></pre>\n\n<p>it works perfectly. :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I cleaned up <a href=\"http://stackoverflow.com/questions/14458508/node-js-shell-command-execution#answer-14510775\">James White's solution</a> to be a bit more readable:</p>\n\n<pre><code>executeCommand('netstat.exe', ['-an'], function(result) {\n\n    console.log(result)\n\n})\n\nfunction executeCommand(cmd, args, cb) {\n\n    var spawn = require('child_process').spawn\n    var child = spawn(cmd, args)\n    var result = ''\n\n    child.stdout.on('data', function(buffer) {\n\n        result += buffer.toString()\n\n    })\n\n    child.stdout.on('end', function() {\n\n        cb(result)\n\n    })\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Simplest way is to just use the ShellJS lib ...</p>\n\n<pre><code>$ npm install [-g] shelljs\n</code></pre>\n\n<p>EXEC Example:</p>\n\n<pre><code>require('shelljs/global');\n\n// Sync call to exec()\nvar version = exec('node --version', {silent:true}).output;\n\n// Async call to exec()\nexec('netstat.exe -an', function(status, output) {\n  console.log('Exit status:', status);\n  console.log('Program output:', output);\n});\n</code></pre>\n\n<p><a href=\"http://shelljs.org\">ShellJs.org</a> supports many common shell commands mapped as NodeJS functions including:</p>\n\n<ul>\n<li><strong>cat</strong></li>\n<li><strong>cd</strong></li>\n<li><strong>chmod</strong></li>\n<li><strong>cp</strong></li>\n<li><strong>dirs</strong></li>\n<li><strong>echo</strong></li>\n<li><strong>exec</strong></li>\n<li><strong>exit</strong></li>\n<li><strong>find</strong></li>\n<li><strong>grep</strong></li>\n<li><strong>ln</strong></li>\n<li><strong>ls</strong></li>\n<li><strong>mkdir</strong></li>\n<li><strong>mv</strong></li>\n<li><strong>popd</strong></li>\n<li><strong>pushd</strong></li>\n<li><strong>pwd</strong></li>\n<li><strong>rm</strong></li>\n<li><strong>sed</strong></li>\n<li><strong>test</strong></li>\n<li><strong>which</strong></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I am still trying to grasp the finer points of how I can run a linux or windows shell command and capture output within node.js; ultimately, I want to do something like this...</p>\n\n<pre><code>//pseudocode\noutput = run_command(cmd, args)\n</code></pre>\n\n<p>The important piece is that <code>output</code> must be available to a globally scoped variable (or object).  I tried the following function, but for some reason, I get <code>undefined</code> printed to the console...</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function run_cmd(cmd, args, cb) {\n  var spawn = require('child_process').spawn\n  var child = spawn(cmd, args);\n  var me = this;\n  child.stdout.on('data', function(me, data) {\n    cb(me, data);\n  });\n}\nfoo = new run_cmd('dir', ['/B'], function (me, data){me.stdout=data;});\nconsole.log(foo.stdout);  // yields \"undefined\" &lt;------\n</code></pre>\n\n<p>I'm having trouble understanding where the code breaks above... a very simple prototype of that model works...</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function try_this(cmd, cb) {\n  var me = this;\n  cb(me, cmd)\n}\nbar = new try_this('guacamole', function (me, cmd){me.output=cmd;})\nconsole.log(bar.output); // yields \"guacamole\" &lt;----\n</code></pre>\n\n<p>Can someone help me understand why <code>try_this()</code> works, and <code>run_cmd()</code> does not?  FWIW, I need to use <a href=\"http://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options\"><code>child_process.spawn</code></a>, because <a href=\"http://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback\"><code>child_process.exec</code></a> has a 200KB buffer limit.</p>\n\n<p><strong>BOUNTY AWARD</strong></p>\n\n<p>I tried the first answer with no success so far...</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>// run my shell command\nfunction run_cmd(cmd, args, cb) {\n  var spawn = require('child_process').spawn\n  var child = spawn(cmd, args);\n  var me = this;\n  child.stdout.on('data', function(data) {\n    cb(me, data);\n  });\n}\n\n// Run C:\\Windows\\System32\\netstat.exe -an\nfoo = new run_cmd('netstat.exe', ['-an'], function (me, data){me.stdout=data;});\n\napp.listen(3000);\nconsole.log('Express app started on port 3000');\nconsole.log(foo.stdout); // &lt;----- Still yields 'undefined'\n</code></pre>\n\n<p>The bonus will be awarded to the person who can correct what is wrong with my existing code, such that I can call <code>foo = new run_cmd('netstat.exe', ['-an'], function (me, data){me.stdout=data;});</code> and receive the output in <code>foo.stdout</code> (in the global variable scope).</p>\n\n<h2>Final Resolution</h2>\n\n<p>I'm accepting James White's answer, but this is the exact code that worked for me...</p>\n\n<pre><code>function cmd_exec(cmd, args, cb_stdout, cb_end) {\n  var spawn = require('child_process').spawn,\n    child = spawn(cmd, args),\n    me = this;\n  me.exit = 0;  // Send a cb to set 1 when cmd exits\n  child.stdout.on('data', function (data) { cb_stdout(me, data) });\n  child.stdout.on('end', function () { cb_end(me) });\n}\nfoo = new cmd_exec('netstat', ['-rn'], \n  function (me, data) {me.stdout += data.toString();},\n  function (me) {me.exit = 1;}\n);\nfunction log_console() {\n  console.log(foo.stdout);\n}\nsetTimeout(\n  // wait 0.25 seconds and print the output\n  log_console,\n250);\n</code></pre>\n",
            "last_activity_date": 1421718246,
            "question_id": 14458508,
            "score": 25,
            "tags": [
                "javascript",
                "node.js",
                "shell"
            ],
            "title": "node.js shell command execution"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>The main issue with any iOS app is memory usage. So, it is likely that your pages are using too much memory.</p>\n\n<p>Mobile Safari use some clever technique so that not the whole page has to reside in memory at any given time, only a portion of it. Maybe you could check if anything in your page defeats this mechanism or makes it less effective.</p>\n\n<p>In any case, to give more up to the point suggestions, more information about your page would be really great.</p>\n\n<p>By the way, you could have some hints from the crash log that the device store. Check to see if you can find it under Settings:</p>\n\n<ol>\n<li>General</li>\n<li>About</li>\n<li>Diagnostics &amp; Usage</li>\n<li>Diagnostics &amp; Usage Data</li>\n</ol>\n\n<p>If it's a memory problem, you should find something like \"signal (0)\"; not sure if this can only mean \"killed due to memory usage\", but I usually take this for granted when I found a signal (0).</p>\n\n<p>Otherwise, it might tell you what is wrong...</p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>There are both memory limits and Javascript execution time limits, though it's a little fuzzy as to how you may actually hit those. Common reports come in that a page with a size greater than 10MB will have issues, and Javascript execution is limited to 10 seconds.</p>\n\n<p>See <a href=\"http://developer.apple.com/library/safari/#documentation/AppleApplications/Reference/SafariWebContent/CreatingContentforSafarioniPhone/CreatingContentforSafarioniPhone.html#//apple_ref/doc/uid/TP40006482-SW15\" rel=\"nofollow\" title=\"Apple's documentation\">Apple's documentation</a> for more info.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I actually found the problem. It wasn't with JS as I thought, but with the CSS. I added class to make a CSS transition to fade in some elements. For anonymous users these elements had <code>display: none;</code> and probably never ran the opacity transition.</p>\n\n<p>The strange thing is that the transitions was on exactly two elements. So why would this only crash on long threads with 100+ comments?</p>\n\n<p>So the bottom line is: -webkit-transition crashed the page on mobile safari.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Had the same issue, for me it was <code>-webkit-transform: translateZ(0);</code> that caused the crash of Safari. </p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>I know this question has been successfully answered but I just wanted to put my five cents in too as I have been banging my head against the wall over this one quite a few times:</p>\n\n<p>As most answers have pointed out already it usually comes down to memory issues. Almost anything can be the last bit that finally tips over the \"memory pile\" much like a <code>translateZ</code> or anything else. </p>\n\n<p>However in my experience it has nothing to do with the actual CSS (or JS) command in specific. It just happens to be that the last transition was one too much.</p>\n\n<p>What tends to help me a lot is to keep anything that is not visible at this time under <code>display: none</code>. This might sound primitive but actually does the trick. It's a simple way to tell the renderer of the browser that you don't need this element at this time and therefore releases memory. This allows you to create mile long vertical scrollers with all sorts of 3d effects as long as you hide elements that you are not using at this time. </p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I had a similar problem, the web page worked like a charm on android devices and crashed on IOS (iphone and simulator).</p>\n\n<p>After a lot of research (using also the ios_webkit_debug_proxy) I found that the problem was connected to the jQuery ready event.</p>\n\n<p>Adding a little timeout solved the problem. My application was also using iframes.</p>\n\n<pre><code>$(document).ready(function () {\n    window.setTimeout(function () { ready(); }, 10);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I recently had an issue with mobile safari crashing on web-app pages containing a lot of images (30+ were enough) and a few transformations for the menu. After a lot of trial and error, I settled with a solution similar to what <a href=\"http://engineering.linkedin.com/linkedin-ipad-5-techniques-smooth-infinite-scrolling-html5\" rel=\"nofollow\">LinkedIn</a> does, but for infinite scrolling using angularjs. I used <strong>requestAnimFrame</strong> and two <strong>expanding/shrinking divs</strong> (with js style attributes) on the top and bottom of the list to remove all image containers (with other stuff overlayed on top) except for a few ones which are close to the viewport. Scrolling performance (native, no js) is fine and memory consumption is in check.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a problem where Mobile Safari crashes when loading and manipulating the DOM with jQuery when the pages get too big.</p>\n\n<p>I get the same problem on both iPhone and iPad.</p>\n\n<p>What are the best way to troubleshoot mobile pages to find the error? Are there any known problems that might crash Mobile Safari? </p>\n",
            "last_activity_date": 1424134777,
            "question_id": 11831429,
            "score": 23,
            "tags": [
                "javascript",
                "css",
                "debugging",
                "mobile-safari"
            ],
            "title": "Mobile Safari on iOS crashes on big pages"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>We have the following lists:</p>\n\n<ul>\n<li>touches: A list of information for every finger currently touching the screen</li>\n<li>targetTouches: Like touches, but is filtered to only the information for finger touches that started out within the same node</li>\n<li>changedTouches: A list of information for every finger involved in the event (see below)\nTo better understand what might be in these lists, let\u2019s go over some examples quickly</li>\n</ul>\n\n<p>They vary in the following pattern: </p>\n\n<ul>\n<li>When I put a finger down, all three lists will have the same information. It will be in changedTouches because putting the finger down is what caused the event</li>\n<li>When I put a second finger down, touches will have two items, one for each finger. targetTouches will have two items only if the finger was placed in the same node as the first finger. changedTouches will have the information related to the second finger, because it\u2019s what caused the event</li>\n<li>If I put two fingers down at exactly the same time, it\u2019s possible to have two items in changedTouches, one for each finger</li>\n<li>If I move my fingers, the only list that will change is changedTouches and will contain information related to as many fingers as have moved (at least one).</li>\n<li>When I lift a finger, it will be removed from touches, targetTouches and will appear in changedTouches since it\u2019s what caused the event</li>\n<li>Removing my last finger will leave touches and targetTouches empty, and changedTouches will contain information for the last finger</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 73
                }
            ],
            "body": "<p>So let's say I am listening for touchstart, touchmove and touchend on the body element.</p>\n\n<p>Let me know if I'm wrong, but I think e.touches is the same as e.targetTouches ? If so, how e.changedTouches varies in relation with them ? </p>\n\n<p>I mean, given one touch at one given moment, I fetch the touchevent and parse it. In my experience all three touch variables are the same. </p>\n\n<p>I have to send the parsed data to the server and it's quite redundant to send 3 times the same exact string, isn't there any way to send them once and programatically reproduce the touchevent on the server?</p>\n",
            "last_activity_date": 1314654185,
            "question_id": 7056026,
            "score": 21,
            "tags": [
                "javascript",
                "webkit",
                "touch"
            ],
            "title": "Variation of e.touches, e.targetTouches and e.changedTouches"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Looking at the angular-resource source indicates that triggering caching isn't possible with the way it is currently written.</p>\n\n<p>Here's the request object from the source:</p>\n\n<pre><code>$http({\n    method: action.method,\n    url: route.url(extend({}, extractParams(data), action.params || {}, params)),\n    data: data\n }).then(...)\n</code></pre>\n\n<p>There are a few potential ways to deal with this.</p>\n\n<p>First, you could cache locally using client-side persistence.  I use <a href=\"http://amplifyjs.com/api/store/\" rel=\"nofollow\">amplify.store</a> with wrapper (b/c I don't really like the API syntax).  There are a variety other storage solutions depending on what you're looking for and what browser's your targeting.  Quite a few people use <a href=\"http://brian.io/lawnchair/\" rel=\"nofollow\">lawnchair</a> as well.</p>\n\n<p>You can then stringify and store your models locally and update them based on whatever rules or time limits you desire.</p>\n\n<p>Another solution is to simply modify angular resource to accept the parameters you're looking for. This could be as simple (simply add an additional argument to $resource) or complex as you need it to be.</p>\n\n<p>e.g.</p>\n\n<pre><code>function ResourceFactory(url, paramDefaults, actions, cache) {\n   ...\n   var cache = cache != null ? cache : false; // Set default to false\n   $http({\n        method: action.method,\n        url: route.url(extend({}, extractParams(data), action.params || {}, params)),\n        data: data,\n        cache: cache\n    }).then(...)       \n}\n</code></pre>\n\n<p>Finally, depending on you requirements, it might be significantly easier to simply create your own resource, using angular.factory to create a service.  One of the advantages of ngResource is that is does all of the string interpolation work for you when translating parameters.  However, you can certainly barrow this logic for parsing if you need it, or write your own based on the models you're using.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Implementing your own cache in AngularJs is quite easy. Just use <a href=\"http://docs.angularjs.org/api/ng.%24cacheFactory\">$cacheFactory</a>:</p>\n\n<pre><code>app.factory('myService', function($resource, $cacheFactory) {\n   var cache = $cacheFactory('myService');\n   var User = $resource('/user/:userId', {userId:'@id'});\n\n   return {\n      getResource: function(userId) {\n         var user = cache.get(userId);\n         if (!user) {\n            user = User.get({userId:userId});\n            cache.put(userId, user);   \n         }\n         return user;\n      }\n   };\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 47
                },
                {
                    "body": "<p>Since 1.1.2 (<a href=\"https://github.com/angular/angular.js/commit/af89daf4641f57b92be6c1f3635f5a3237f20c71\">commit</a>), all the $httpConfig options are directly exposed in $resource action objects:</p>\n\n<pre><code>return {\n  Things: $resource('url/to/:thing', {}, {\n    list : {\n      method : 'GET',\n      cache : true\n    }\n  })\n };\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>This doesn't seem to be mentioned here but you can also overwrite the default methods.</p>\n\n<pre><code>app.factory(\"List\", [\"$resource\", function($resource) {\n    return $resource(\"./lists/:path/:action.json\", {}, {\n        get: {\n            method: \"GET\",\n            cache: true\n        }\n    });\n}]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>As the docs state, <a href=\"http://docs.angularjs.org/api/ngResource/service/$resource\" rel=\"nofollow\">$resource</a> has built-in support for <a href=\"http://docs.angularjs.org/api/ng/service/$cacheFactory\" rel=\"nofollow\">$cacheFactory</a>. You can pass it in via the <code>cache</code> property of each action:</p>\n\n<blockquote>\n  <p><code>cache</code> \u2013 <code>{boolean|Cache}</code> \u2013 If <code>true</code>, a default <code>$http</code> cache will be used to cache the <code>GET</code> request, otherwise if a cache instance built with <code>$cacheFactory</code>, this cache will be used for caching.</p>\n</blockquote>\n\n<p>Example usage:</p>\n\n<pre><code>app.factory('Todos', function($resource, $cacheFactory) {\n    var todosCache = $cacheFactory('Todos');\n    return $resource(apiBaseUrl + '/todos/:id', {id: '@id'}, {\n        'get': { method:'GET', cache: todosCache},\n        'query': { method:'GET', cache: todosCache, isArray:true }\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can also set default cache for $http and thus for $resource which is based on it.</p>\n\n<p>My settings with the excellent <a href=\"https://github.com/jmdobry/angular-cache\">angular-cache</a> allowing LocalStorage and compliant with $cacheFactory:</p>\n\n<pre><code>app.run(function($http, DSCacheFactory) {\n\n    DSCacheFactory('defaultCache', {\n        deleteOnExpire: 'aggressive',\n        storageMode: 'localStorage' \n    });\n\n    $http.defaults.cache = DSCacheFactory.get('defaultCache');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>To add caching inside http is pretty straight forward. ( by passing cache=true )</p>\n\n<p><a href=\"http://docs.angularjs.org/api/ng.%24http\">http://docs.angularjs.org/api/ng.$http</a> has Cache option.</p>\n\n<p>How do I add similar functionality in $resource in angularjs ?</p>\n",
            "last_activity_date": 1423520069,
            "question_id": 12225475,
            "score": 20,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "angularjs: how to add caching to resource object?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Why not to use sockets <a href=\"http://uk1.php.net/manual/en/book.sockets.php\" rel=\"nofollow\">http://uk1.php.net/manual/en/book.sockets.php</a> ? It's well documented (not only in PHP context) and has good examples <a href=\"http://uk1.php.net/manual/en/sockets.examples.php\" rel=\"nofollow\">http://uk1.php.net/manual/en/sockets.examples.php</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I was in the same boat as you recently, and here is what I did:</p>\n\n<p>1) I used the phpwebsockets code as a reference for how to structure the server-side code. (You seem to already be doing this, and as you noted, the code doesn't actually work for a variety of reasons.)</p>\n\n<p>2) I used PHP.net to read the details about every socket function used in the phpwebsockets code. By doing this, I was finally able to understand how the whole system works conceptually. This was a pretty big hurdle.</p>\n\n<p>3) I read the actual WebSocket draft (please do a web search for it, as I can't post more than two links per post). I had to read this thing a bunch of times before it finally started to sink in. You will likely have to go back to this document again and again throughout the process, as it is the one definitive resource with correct, up-to-date information about the WebSocket API.</p>\n\n<p>4) I coded the proper handshake procedure based on the instructions in the draft in #3. This wasn't too bad.</p>\n\n<p>5) I kept getting a bunch of garbled text sent from the clients to the server after the handshake and I couldn't figure out why until I realized that the data is encoded and must be unmasked. The following link helped me a lot here: <a href=\"http://srchea.com/blog/2011/12/build-a-real-time-application-using-html5-websockets/\" rel=\"nofollow\">http://srchea.com/blog/2011/12/build-a-real-time-application-using-html5-websockets/</a></p>\n\n<p>Please note that the code available at this link has a number of problems and won't work properly without further modification.</p>\n\n<p>6) I then came across the following SO thread, which clearly explains how to properly encode and decode messages being sent back and forth: <a href=\"http://stackoverflow.com/questions/8125507/how-can-i-send-and-receive-websocket-messages-on-the-server-side\">How can I send and receive WebSocket messages on the server side?</a></p>\n\n<p>This link was really helpful. I recommend consulting it while looking at the WebSocket draft. It'll help make more sense out of what the draft is saying.</p>\n\n<p>7) I was almost done at this point, but had some issues with a WebRTC app I was making using WebSocket, so I ended up asking my own question on SO, which I eventually solved. To reference the question and answer, please do a web search for \"SO What is this data at the end of WebRTC candidate info?\" (without the quotation marks).</p>\n\n<p>8) At this point, I pretty much had it all working. I just had to add some additional logic for handling the closing of connections, and I was done.</p>\n\n<p>That process took me about two weeks total. The good news is that I understand WebSocket really well now and I was able to make my own client and server scripts from scratch that work great.\nHopefully the culmination of all that information will give you enough guidance and information to code your own WebSocket PHP script.\nGood luck!</p>\n\n<p><strong>Edit</strong>: This edit is a couple of years after my original answer, and while I do still have a working solution, it's not really ready for sharing. Luckily, someone else on GitHub has almost identical code to mine (but much cleaner), so I recommend using the following code for a working PHP WebSocket solution:<br>\n<a href=\"https://github.com/ghedipunk/PHP-Websockets/blob/master/websockets.php\" rel=\"nofollow\">https://github.com/ghedipunk/PHP-Websockets/blob/master/websockets.php</a></p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>As far as I'm aware <a href=\"http://socketo.me/\">Ratchet</a> is the best PHP WebSocket solution available at the moment. And since it's <a href=\"https://github.com/cboden/Ratchet\">open source</a> you can see how the author has built this WebSocket solution using PHP.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>&lt;?php\n\n// server.php\n\n$server = stream_socket_server(\"tcp://127.0.0.1:8001\", $errno, $errorMessage);\n\nif($server == false) {\n    throw new Exception(\"Could not bind to socket: $errorMessage\");\n\n}\n\nfor(;;) {\n    $client = @stream_socket_accept($server);\n\n    if($client) {\n        stream_copy_to_stream($client, $client);\n        fclose($client);\n    }\n}\n</code></pre>\n\n<p>from one terminal run : php server.php</p>\n\n<p>from another terminal run: echo \"hello woerld\" | nc 127.0.0.1 8002</p>\n",
                    "is_accepted": false,
                    "score": -6
                }
            ],
            "body": "<p>Are there any tutorials or guides showing how to write myself a simple websockets server in PHP? I have tried looking for it on google but I didn't find many. I found phpwebsockets but it is outdated now and doesn't support newest protocol. I tried updating it myself but it doesn't seem to work.  </p>\n\n<pre><code>#!/php -q\n&lt;?php  /*  &gt;php -q server.php  */\n\nerror_reporting(E_ALL);\nset_time_limit(0);\nob_implicit_flush();\n\n$master  = WebSocket(\"localhost\",12345);\n$sockets = array($master);\n$users   = array();\n$debug   = false;\n\nwhile(true){\n  $changed = $sockets;\n  socket_select($changed,$write=NULL,$except=NULL,NULL);\n  foreach($changed as $socket){\n    if($socket==$master){\n      $client=socket_accept($master);\n      if($client&lt;0){ console(\"socket_accept() failed\"); continue; }\n      else{ connect($client); }\n    }\n    else{\n      $bytes = @socket_recv($socket,$buffer,2048,0);\n      if($bytes==0){ disconnect($socket); }\n      else{\n        $user = getuserbysocket($socket);\n        if(!$user-&gt;handshake){ dohandshake($user,$buffer); }\n        else{ process($user,$buffer); }\n      }\n    }\n  }\n}\n\n//---------------------------------------------------------------\nfunction process($user,$msg){\n  $action = unwrap($msg);\n  say(\"&lt; \".$action);\n  switch($action){\n    case \"hello\" : send($user-&gt;socket,\"hello human\");                       break;\n    case \"hi\"    : send($user-&gt;socket,\"zup human\");                         break;\n    case \"name\"  : send($user-&gt;socket,\"my name is Multivac, silly I know\"); break;\n    case \"age\"   : send($user-&gt;socket,\"I am older than time itself\");       break;\n    case \"date\"  : send($user-&gt;socket,\"today is \".date(\"Y.m.d\"));           break;\n    case \"time\"  : send($user-&gt;socket,\"server time is \".date(\"H:i:s\"));     break;\n    case \"thanks\": send($user-&gt;socket,\"you're welcome\");                    break;\n    case \"bye\"   : send($user-&gt;socket,\"bye\");                               break;\n    default      : send($user-&gt;socket,$action.\" not understood\");           break;\n  }\n}\n\nfunction send($client,$msg){\n  say(\"&gt; \".$msg);\n  $msg = wrap($msg);\n  socket_write($client,$msg,strlen($msg));\n}\n\nfunction WebSocket($address,$port){\n  $master=socket_create(AF_INET, SOCK_STREAM, SOL_TCP)     or die(\"socket_create() failed\");\n  socket_set_option($master, SOL_SOCKET, SO_REUSEADDR, 1)  or die(\"socket_option() failed\");\n  socket_bind($master, $address, $port)                    or die(\"socket_bind() failed\");\n  socket_listen($master,20)                                or die(\"socket_listen() failed\");\n  echo \"Server Started : \".date('Y-m-d H:i:s').\"\\n\";\n  echo \"Master socket  : \".$master.\"\\n\";\n  echo \"Listening on   : \".$address.\" port \".$port.\"\\n\\n\";\n  return $master;\n}\n\nfunction connect($socket){\n  global $sockets,$users;\n  $user = new User();\n  $user-&gt;id = uniqid();\n  $user-&gt;socket = $socket;\n  array_push($users,$user);\n  array_push($sockets,$socket);\n  console($socket.\" CONNECTED!\");\n}\n\nfunction disconnect($socket){\n  global $sockets,$users;\n  $found=null;\n  $n=count($users);\n  for($i=0;$i&lt;$n;$i++){\n    if($users[$i]-&gt;socket==$socket){ $found=$i; break; }\n  }\n  if(!is_null($found)){ array_splice($users,$found,1); }\n  $index = array_search($socket,$sockets);\n  socket_close($socket);\n  console($socket.\" DISCONNECTED!\");\n  if($index&gt;=0){ array_splice($sockets,$index,1); }\n}\n\nfunction dohandshake($user,$buffer){\n  console(\"\\nRequesting handshake...\");\n  console($buffer);\n  //list($resource,$host,$origin,$strkey1,$strkey2,$data) \n  list($resource,$host,$u,$c,$key,$protocol,$version,$origin,$data) = getheaders($buffer);\n  console(\"Handshaking...\");\n\n    $acceptkey = base64_encode(sha1($key . \"258EAFA5-E914-47DA-95CA-C5AB0DC85B11\",true));\n  $upgrade  = \"HTTP/1.1 101 Switching Protocols\\r\\nUpgrade: websocket\\r\\nConnection: Upgrade\\r\\nSec-WebSocket-Accept: $acceptkey\\r\\n\";\n\n  socket_write($user-&gt;socket,$upgrade,strlen($upgrade));\n  $user-&gt;handshake=true;\n  console($upgrade);\n  console(\"Done handshaking...\");\n  return true;\n}\n\nfunction getheaders($req){\n    $r=$h=$u=$c=$key=$protocol=$version=$o=$data=null;\n    if(preg_match(\"/GET (.*) HTTP/\"   ,$req,$match)){ $r=$match[1]; }\n    if(preg_match(\"/Host: (.*)\\r\\n/\"  ,$req,$match)){ $h=$match[1]; }\n    if(preg_match(\"/Upgrade: (.*)\\r\\n/\",$req,$match)){ $u=$match[1]; }\n    if(preg_match(\"/Connection: (.*)\\r\\n/\",$req,$match)){ $c=$match[1]; }\n    if(preg_match(\"/Sec-WebSocket-Key: (.*)\\r\\n/\",$req,$match)){ $key=$match[1]; }\n    if(preg_match(\"/Sec-WebSocket-Protocol: (.*)\\r\\n/\",$req,$match)){ $protocol=$match[1]; }\n    if(preg_match(\"/Sec-WebSocket-Version: (.*)\\r\\n/\",$req,$match)){ $version=$match[1]; }\n    if(preg_match(\"/Origin: (.*)\\r\\n/\",$req,$match)){ $o=$match[1]; }\n    if(preg_match(\"/\\r\\n(.*?)\\$/\",$req,$match)){ $data=$match[1]; }\n    return array($r,$h,$u,$c,$key,$protocol,$version,$o,$data);\n}\n\nfunction getuserbysocket($socket){\n  global $users;\n  $found=null;\n  foreach($users as $user){\n    if($user-&gt;socket==$socket){ $found=$user; break; }\n  }\n  return $found;\n}\n\nfunction     say($msg=\"\"){ echo $msg.\"\\n\"; }\nfunction    wrap($msg=\"\"){ return chr(0).$msg.chr(255); }\nfunction  unwrap($msg=\"\"){ return substr($msg,1,strlen($msg)-2); }\nfunction console($msg=\"\"){ global $debug; if($debug){ echo $msg.\"\\n\"; } }\n\nclass User{\n  var $id;\n  var $socket;\n  var $handshake;\n}\n\n?&gt;\n</code></pre>\n\n<p>and the client:  </p>\n\n<pre><code>var connection = new WebSocket('ws://localhost:12345');\nconnection.onopen = function () {\n  connection.send('Ping'); // Send the message 'Ping' to the server\n};\n\n// Log errors\nconnection.onerror = function (error) {\n  console.log('WebSocket Error ' + error);\n};\n\n// Log messages from the server\nconnection.onmessage = function (e) {\n  console.log('Server: ' + e.data);\n};\n</code></pre>\n\n<p>If there is anything wrong in my code can you help me fix it? Concole in firefox says <code>Firefox can't establish a connection to the server at ws://localhost:12345/.</code></p>\n\n<p><strong>EDIT</strong><br>\nSince there is much interest in this question I decided to provide you with what I finally came up with. <a href=\"http://dharman.eu/?menu=phpWebSocketsTutorial\">Here is my full code.</a></p>\n",
            "last_activity_date": 1421609164,
            "question_id": 14512182,
            "score": 18,
            "tags": [
                "php",
                "javascript",
                "websocket"
            ],
            "title": "How to create websockets server in PHP"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I've plagiarized this from <a href=\"http://parentnode.org/javascript/working-with-the-cursor-position/\" rel=\"nofollow\">here</a>.</p>\n\n<pre><code>function setCaretTo(obj, pos) { \n    if(obj.createTextRange) { \n        /* Create a TextRange, set the internal pointer to\n           a specified position and show the cursor at this\n           position\n        */ \n        var range = obj.createTextRange(); \n        range.move(\"character\", pos); \n        range.select(); \n    } else if(obj.selectionStart) { \n        /* Gecko is a little bit shorter on that. Simply\n           focus the element and set the selection to a\n           specified position\n        */ \n        obj.focus(); \n        obj.setSelectionRange(pos, pos); \n    } \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Why not look at our API documentation. It provides instructions on how to manipulate the selection of the editor instances.</p>\n",
                    "is_accepted": false,
                    "score": -10
                },
                {
                    "body": "<p>After spending over 15 hours on this issue (dedication, I know), I found a partial solution that works in FF and Safari, but not in IE. For the moment, this is good enough for me although I might continue working on it in the future.</p>\n\n<p>The solution: When inserting HTML at the current caret position, the best function to use is:</p>\n\n<p><code>tinyMCE.activeEditor.selection.setContent(htmlcontent);</code></p>\n\n<p>In Firefox and Safari, this function will insert the content at the current caret position within the iframe that WordPress uses as a TinyMCE editor. The issue with IE 7 and 8 is that the function seems to add the content to the top of the page, not the iframe (i.e. it completely misses the text editor). To address this issue, I added a conditional statement <a href=\"http://www.quirksmode.org/js/detect.html\">based on this code</a> that will use this function instead for IE:</p>\n\n<p><code>tinyMCE.activeEditor.execCommand(\"mceInsertRawHTML\", false, htmlcontent);</code></p>\n\n<p>The issue for this second function, however, is that the caret position is set to the beginning of the post area after it has been called (with no hope of recalling it based on the browser range, etc.). Somewhere near the end I discovered that this function works to restore the caret position at the end of the inserted content with the first function:</p>\n\n<p><code>tinyMCE.activeEditor.focus();</code></p>\n\n<p>In addition, it restores the caret position to the end of the inserted content without having to calculate the length of the inserted text. The downside is that it only works with the first insertion function which seems to cause problems in IE 7 and IE 8 (which might be more of a WordPress fault than TinyMCE).</p>\n\n<p>A wordy answer, I know. Feel free to ask questions for clarification.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>First what you should do is add a span at the end of the content you want to create.</p>\n\n<pre><code>var ed = tinyMCE.activeEditor;\n\n//add an empty span with a unique id\nvar endId = tinymce.DOM.uniqueId();\ned.dom.add(ed.getBody(), 'span', {'id': endId}, '');\n\n//select that span\nvar newNode = ed.dom.select('span#' + endId);\ned.selection.select(newNode[0]);\n</code></pre>\n\n<p>This is a strategy used by the TinyMCE developers themselves in writing Selection.js. Reading the underlying source can be massively helpful for this kind of problem.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>The best way that I have found is to insert the content with a temp id and then give that focus using some trickery I found in the <a href=\"https://github.com/tinymce/tinymce/blob/master/jscripts/tiny_mce/plugins/advlink/js/advlink.js\" rel=\"nofollow\">advlink plugin</a>.</p>\n\n<p>Hope this helps.</p>\n\n<pre><code>            var ed = tinyMCE.activeEditor;\n\n            ed.execCommand('mceInsertContent', false, '&lt;a id=\"_mce_temp_rob\" href=\"http://robubu.com\"&gt;robubu.com&lt;/a&gt;');\n\n            //horrible hack to put the cursor in the right spot\n            ed.focus(); //give the editor focus\n            ed.selection.select(ed.dom.select('#_mce_temp_rob')[0]); //select the inserted element\n            ed.selection.collapse(0); //collapses the selection to the end of the range, so the cursor is after the inserted element\n            ed.dom.setAttrib('_mce_temp_rob', 'id', ''); //remove the temp id\n</code></pre>\n\n<p>If you're doing this from a popup I think you also need to add</p>\n\n<pre><code>        tinyMCEPopup.storeSelection();\n</code></pre>\n\n<p>before closing the popup.</p>\n\n<p>For anyone trying to insert content from a Wordpress custom meta box into the TinyMCE editor, this is the solution that works. I tried a ton of other scripts, including another on this page, the answer above by Gary Tan, which worked for me when installing custom TinyMCE buttons but didnt work out in this scenario.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It is so simple to move the cursor to the end that I can't believe the awful kludges that have been posted elsewhere online to do this.  Mr. Spocke's answer wasn't initially helpful but in the end the API docs provided me with the answer.  \"Select all content and then collapse the selection\":</p>\n\n<pre><code>ed.selection.select(ed.getBody(), true); // ed is the editor instance\n\ned.selection.collapse(false);\n</code></pre>\n\n<p>I hope this helps someone else as this thread is one of the first to come up in Google.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>The correct solution is to use the tinyMCE api tinymce.dom.Selection</p>\n\n<p><a href=\"http://www.tinymce.com/wiki.php/API3:class.tinymce.dom.Selection\" rel=\"nofollow\">http://www.tinymce.com/wiki.php/API3:class.tinymce.dom.Selection</a></p>\n\n<p>the syntaxe is something like : </p>\n\n<pre><code>var rng = tinymce.DOM.createRng();  // the range obj\nvar newNode = editor.dom.select(...    // find the correct selector so that newNode is the element of your editor text\nrng.setStart(newNode.firstChild, 0); // 0 is the offset : here it will be at the beginning of the line.\nrng.setEnd(newNode.firstChild, 0);\neditor.selection.setRng(rng);\n</code></pre>\n\n<p>it works I use this myself.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Insert a DOM node at the current selection/caret location.</p>\n\n<pre><code>tinyMCE.activeEditor.selection.setNode(tinyMCE.activeEditor.dom.create('img', {src : 'some.gif', title : 'some title'}));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is the solution that works for me:</p>\n\n<pre><code>// params: \n//   $node: jquery node with tinymce loaded \n//   text: text to set at then before caret\nfunction setTextAndCaretToEnd($node, text) {\n     var ed = window.tinyMCE.get($node.attr(\"id\"));\n     ed.focus();\n     ed.selection.setContent(text);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>If I'm inserting content into a textarea that TinyMCE has co-opted, what's the best way to set the position of the cursor/caret?</p>\n\n<p>I'm using <code>tinyMCE.execCommand(\"mceInsertRawHTML\", false, content);</code> to insert the content, and I'd like set the cursor position to the end of the content.</p>\n\n<p>Both <code>document.selection</code> and <code>myField.selectionStart</code> won't work for this, and I feel as though this is going to be supported by TinyMCE (through something I can't find on their forum) or it's going to be a really ugly hack.</p>\n\n<p><strong>Later:</strong> It gets better; I just figured out that, when you load TinyMCE in WordPress, it loads the entire editor in an embedded iframe.</p>\n\n<p><strong>Later (2):</strong> I can use <code>document.getElementById('content_ifr').contentDocument.getSelection();</code> to get the selection as a string, but not a Selection Object that I can use <code>getRangeAt(0)</code> on. Making progress little by little.</p>\n",
            "last_activity_date": 1409048719,
            "question_id": 1253303,
            "score": 18,
            "tags": [
                "javascript",
                "wordpress",
                "iframe",
                "tinymce",
                "getselection"
            ],
            "title": "What&#39;s the best way to set cursor/caret position?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>There are some libraries for building tables with angular:</p>\n\n<ul>\n<li><a href=\"http://ngmodules.org/modules/ng-table\">ng-table</a></li>\n<li><a href=\"http://angular-ui.github.io/ng-grid/\">ng-grid</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Just want to share with what I used so far to save your time. </p>\n\n<p>Here are examples of <em>hard-coded headers</em> and <em>dynamic headers</em> (in case if don't care about data structure). In both cases I wrote some simple directive: <code>customSort</code></p>\n\n<p><strong>customSort</strong></p>\n\n<pre><code>.directive(\"customSort\", function() {\n    return {\n        restrict: 'A',\n        transclude: true,    \n        scope: {\n          order: '=',\n          sort: '='\n        },\n        template : \n          ' &lt;a ng-click=\"sort_by(order)\" style=\"color: #555555;\"&gt;'+\n          '    &lt;span ng-transclude&gt;&lt;/span&gt;'+\n          '    &lt;i ng-class=\"selectedCls(order)\"&gt;&lt;/i&gt;'+\n          '&lt;/a&gt;',\n        link: function(scope) {\n\n        // change sorting order\n        scope.sort_by = function(newSortingOrder) {       \n            var sort = scope.sort;\n\n            if (sort.sortingOrder == newSortingOrder){\n                sort.reverse = !sort.reverse;\n            }                    \n\n            sort.sortingOrder = newSortingOrder;        \n        };\n\n\n        scope.selectedCls = function(column) {\n            if(column == scope.sort.sortingOrder){\n                return ('icon-chevron-' + ((scope.sort.reverse) ? 'down' : 'up'));\n            }\n            else{            \n                return'icon-sort' \n            } \n        };      \n      }// end link\n    }\n    });\n</code></pre>\n\n<h2>[1st option with static headers]</h2>\n\n<p>I used single <code>ng-repeat</code></p>\n\n<p>This is a good example in <kbd><strong><a href=\"http://jsfiddle.net/SAWsA/1758/\" rel=\"nofollow\">Fiddle</a></strong></kbd>  (<em>Notice, there is no jQuery library!</em>)</p>\n\n<p><img src=\"http://i.stack.imgur.com/k67Vc.png\" alt=\"enter image description here\"></p>\n\n<pre><code>           &lt;tbody&gt;\n                &lt;tr ng-repeat=\"item in pagedItems[currentPage] | orderBy:sortingOrder:reverse\"&gt;\n                    &lt;td&gt;{{item.id}}&lt;/td&gt;\n                    &lt;td&gt;{{item.name}}&lt;/td&gt;\n                    &lt;td&gt;{{item.description}}&lt;/td&gt;\n                    &lt;td&gt;{{item.field3}}&lt;/td&gt;\n                    &lt;td&gt;{{item.field4}}&lt;/td&gt;\n                    &lt;td&gt;{{item.field5}}&lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/tbody&gt;\n</code></pre>\n\n<h2>[2nd option with dynamic headers]</h2>\n\n<p>Demo 2: <kbd><strong><a href=\"http://jsfiddle.net/SAWsA/2281/\" rel=\"nofollow\">Fiddle</a></strong></kbd></p>\n\n<hr>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;table class=\"table table-striped table-condensed table-hover\"&gt;\n            &lt;thead&gt;\n                &lt;tr&gt;\n                   &lt;th ng-repeat=\"header in table_headers\"  \n                     class=\"{{header.name}}\" custom-sort order=\"header.name\" sort=\"sort\"\n                    &gt;{{ header.name }}\n\n                        &lt;/th&gt; \n                  &lt;/tr&gt;\n            &lt;/thead&gt;\n            &lt;tfoot&gt;\n                &lt;td colspan=\"6\"&gt;\n                    &lt;div class=\"pagination pull-right\"&gt;\n                        &lt;ul&gt;\n                            &lt;li ng-class=\"{disabled: currentPage == 0}\"&gt;\n                                &lt;a href ng-click=\"prevPage()\"&gt;\u00ab Prev&lt;/a&gt;\n                            &lt;/li&gt;\n\n                            &lt;li ng-repeat=\"n in range(pagedItems.length, currentPage, currentPage + gap) \"\n                                ng-class=\"{active: n == currentPage}\"\n                            ng-click=\"setPage()\"&gt;\n                                &lt;a href ng-bind=\"n + 1\"&gt;1&lt;/a&gt;\n                            &lt;/li&gt;\n\n                            &lt;li ng-class=\"{disabled: (currentPage) == pagedItems.length - 1}\"&gt;\n                                &lt;a href ng-click=\"nextPage()\"&gt;Next \u00bb&lt;/a&gt;\n                            &lt;/li&gt;\n                        &lt;/ul&gt;\n                    &lt;/div&gt;\n                &lt;/td&gt;\n            &lt;/tfoot&gt;\n            &lt;pre&gt;pagedItems.length: {{pagedItems.length|json}}&lt;/pre&gt;\n            &lt;pre&gt;currentPage: {{currentPage|json}}&lt;/pre&gt;\n            &lt;pre&gt;currentPage: {{sort|json}}&lt;/pre&gt;\n            &lt;tbody&gt;\n\n                &lt;tr ng-repeat=\"item in pagedItems[currentPage] | orderBy:sort.sortingOrder:sort.reverse\"&gt;\n                     &lt;td ng-repeat=\"val in item\" ng-bind-html-unsafe=\"item[table_headers[$index].name]\"&gt;&lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/tbody&gt;\n        &lt;/table&gt;\n</code></pre>\n\n<hr>\n\n<p><em>As a side note:</em></p>\n\n<p>The <code>ng-bind-html-unsafe</code> is deprecated, so I used it only for Demo (2nd example). You welcome to edit.   </p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>Here's an example of one with dynamic columns and rows with angularJS: <a href=\"http://plnkr.co/edit/0fsRUp?p=preview\" rel=\"nofollow\">http://plnkr.co/edit/0fsRUp?p=preview</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://grid.tesseris.com/Home/Demo\" rel=\"nofollow\">TGrid</a> is another option that people don't usually find in a google search. If the other grids you find don't suit your needs, you can give it a try, its free</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Check out this <a href=\"http://github.com/samu/angular-table\" rel=\"nofollow\">angular-table</a> directive.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>First off all I would like to thanks @MaximShoustin.</p>\n\n<p>Thanks of you I have really nice table.</p>\n\n<p>I provide some small modification in <code>$scope.range</code> and <code>$scope.setPage</code>.</p>\n\n<p>In this way I have now possibility to go to the last page or come back to the first page.\nAlso when I'm going to next or prev page the navigation is changing when <code>$scope.gap</code> is crossing. And the current page is not always on first position. For me it's looking more nicer.</p>\n\n<p>Here is the new fiddle example:\n<a href=\"http://jsfiddle.net/qLBRZ/3/\" rel=\"nofollow\">http://jsfiddle.net/qLBRZ/3/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Given a json like this:</p>\n\n<pre><code>{\n   \"name\": \"john\"\n   \"colours\": [{\"id\": 1, \"name\": \"green\"},{\"id\": 2, \"name\": \"blue\"}]\n}\n</code></pre>\n\n<p>and two regular html inputs:</p>\n\n<pre><code>&lt;input type=\"text\" name=\"name\" /&gt;\n&lt;input type=\"text\" name=\"color\" /&gt;\n&lt;input type=\"submit\" value=\"submit\" /&gt;\n</code></pre>\n\n<p>I need to build a table with all the possible variations, ex:</p>\n\n<pre><code>John green\nJohn blue\n</code></pre>\n\n<p>That means that if a user continues adding values through the inputs new rows will appear building the new variations, for instance: </p>\n\n<p>I also need to have available the id to handle it, and I need that when I add new values using the inputs for instance: \"Peter\" \"Black\", I need to autofill the id (colour id) dynamically like an auto increment in mysql, resulting in something like this:</p>\n\n<pre><code>{\n  \"colours\": [\u2026...{\"id\": 3, \"name\": \"black\"}]\n}\n</code></pre>\n\n<p>Is that possible? Which options do I have for doing that with angular? I'm still thinking in the jQuery way and I would like to do it in the angular way.</p>\n\n<p>I took a look to hg-repeat, and used it, but I'm not figuring out how to deliver the expected result, the only thing that come to my mind was to use nested ng-repeats, but it didm\u00b4t work.</p>\n\n<p>Thanks so much in advance,</p>\n\n<p>Guillermo</p>\n",
            "last_activity_date": 1403179942,
            "question_id": 18357370,
            "score": 8,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "AngularJS - Building a dynamic table based on a json"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Add <code>.toLowerCase()</code> after <code>referrer</code>. This method turns the string in a lower case string. Then, use <code>.indexOf()</code> using <code>ral</code> instead of <code>Ral</code>.</p>\n\n<pre><code>if (referrer.toLowerCase().indexOf(\"ral\") === -1) { \n</code></pre>\n\n<p>The same can also be achieved using a Regular Expression (especially useful when you want to test against dynamic patterns):</p>\n\n<pre><code>if (!/Ral/i.test(referrer)) {\n   //    ^i = Ignore case flag for RegExp\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 168
                },
                {
                    "body": "<pre><code>if (referrer.toUpperCase().indexOf(\"RAL\") == -1) { ...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Use a RegExp:</p>\n\n<pre><code>if (!/ral/i.test(referrer)) {\n    ...\n}\n</code></pre>\n\n<p>Or, use <code>.toLowerCase()</code>:</p>\n\n<pre><code>if (referrer.toLowerCase().indexOf(\"ral\") == -1)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>There are a couple of approaches here.</p>\n\n<p>If you want to perform a case-insensitive check for just this instance, do something like the following.</p>\n\n<pre><code>if (referrer.toLowerCase().indexOf(\"Ral\".toLowerCase()) == -1) {\n    ...\n</code></pre>\n\n<p>Alternatively, if you're performing this check regularly, you can add a new <code>indexOf()</code>-like method to <code>String</code>, but make it case insensitive.</p>\n\n<pre><code>String.prototype.indexOfInsensitive = function (s, b) {\n    return this.toLowerCase().indexOf(s.toLowerCase(), b);\n}\n\n// Then invoke it\nif (referrer.indexOfInsensitive(\"Ral\") == -1) { ...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>To do a better search use the following code,</p>\n\n<pre><code>var myFav   = \"javascript\";\nvar theList = \"VB.NET, C#, PHP, Python, JavaScript, and Ruby\";\n\n// Check for matches with the plain vanilla indexOf() method:\nalert( theList.indexOf( myFav ) );\n\n// Now check for matches in lower-cased strings:\nalert( theList.toLowerCase().indexOf( myFav.toLowerCase() ) );\n</code></pre>\n\n<p>In the first alert(), JavaScript returned \"-1\" - in other words, indexOf() did not find a match: this is simply because \"JavaScript\" is in lowercase in the first string, and properly capitalized in the second. To perform case-insensitive searches with indexOf(), you can make both strings either uppercase or lowercase. This means that, as in the second alert(), JavaScript will only check for the occurrence of the string you are looking for, capitalization ignored.</p>\n\n<p>Reference,\n<a href=\"http://freewebdesigntutorials.com/javaScriptTutorials/jsStringObject/indexOfMethod.htm\" rel=\"nofollow\">http://freewebdesigntutorials.com/javaScriptTutorials/jsStringObject/indexOfMethod.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Another options is to use the search method as follow:</p>\n\n<pre><code>if (referrer.search(new RegExp(\"Ral\", \"i\")) == -1) { ...\n</code></pre>\n\n<p>It looks more elegant then converting the whole string to lower case and it may be more efficient. <br>\nWith <code>toLowerCase()</code> the code have two pass over the string, one pass is on the entire string to convert it to lower case and another is to look for the desired index.<br>\nWith <code>RegExp</code> the code have one pass over the string which it looks to match the desired index.<br></p>\n\n<p>Therefore, on long strings I recommend to use the <code>RegExp</code> version (I guess that on short strings this efficiency comes on the account of creating the <code>RegExp</code> object though)</p>\n",
                    "is_accepted": false,
                    "score": 18
                }
            ],
            "body": "<p>I have the following:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>if (referrer.indexOf(\"Ral\") == -1) { ... }\n</code></pre>\n\n<p>What I like to do is to make <code>Ral</code> case insensitive, so that it can be <code>RAl</code>, <code>rAl</code>, etc. and still match.</p>\n\n<p>Is there a way to say that <code>Ral</code> has to be case-insensitive? </p>\n",
            "last_activity_date": 1410355831,
            "question_id": 8993773,
            "score": 103,
            "tags": [
                "javascript",
                "string",
                "case-sensitive",
                "case-insensitive"
            ],
            "title": "Javascript indexOf case insensitive"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>Update: As of November 6, 2012, <code>console.clear()</code> is <a href=\"http://trac.webkit.org/changeset/133614\">now available</a> in Chrome Canary.</p>\n</blockquote>\n\n<hr>\n\n<p>If you type <code>clear()</code> into the console it clears it.</p>\n\n<p>I don't think there is a way to programmatically do it, as it could be misused. (console is cleared by some web page, end user can't access error information)</p>\n\n<p>one possible workaround:</p>\n\n<p>in the console type <code>window.clear = clear</code>, then you'll be able to use clear in any script on your page.</p>\n",
                    "is_accepted": true,
                    "score": 93
                },
                {
                    "body": "<p>There's always the good ol' trick:</p>\n\n<pre><code>console.log(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\n</code></pre>\n\n<p>Not the most elegant solution, I know :) ... but works.</p>\n\n<p>For me, I usually just print a long \"-----\" separator line to help make the logs easier to read.</p>\n",
                    "is_accepted": false,
                    "score": 69
                },
                {
                    "body": "<pre><code>console._inspectorCommandLineAPI.clear()\n</code></pre>\n\n<p>That is working</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Chrome:</p>\n\n<pre><code>console._commandLineAPI.clear();\n</code></pre>\n\n<p>Safari:</p>\n\n<pre><code>console._inspectorCommandLineAPI.clear();\n</code></pre>\n\n<p>You can create your own variable, which works in both:</p>\n\n<pre><code>if (typeof console._commandLineAPI !== 'undefined') {\n    console.API = console._commandLineAPI;\n} else if (typeof console._inspectorCommandLineAPI !== 'undefined') {\n    console.API = console._inspectorCommandLineAPI;\n} else if (typeof console.clear !== 'undefined') {\n    console.API = console;\n}\n</code></pre>\n\n<p>After that, you can simply use <code>console.API.clear()</code>.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I think this is no longer available due to 'security issues'.</p>\n\n<p><code>console.log(console)</code> from code gives:</p>\n\n<pre><code>Console\nmemory: MemoryInfo\nprofiles: Array[0]\n__proto__: Console\n</code></pre>\n\n<p>From outside of code, _commandLineAPI is available. Kind of annoying because sometimes I want to just log and not see the old output.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Based on Cobbal's <em>answer</em>, here's what I did:</p>\n\n<p>In my <code>JavaScript</code> I put the following:</p>\n\n<pre><code>setInterval(function() {\n  if(window.clear) {\n    window.clear();\n    console.log(\"this is highly repeated code\");\n  }\n}, 10);\n</code></pre>\n\n<p>The conditional code won't run until you ASSIGN window.clear (meaning your log is empty until you do so). <strong>IN THE DEBUG CONSOLE TYPE:</strong></p>\n\n<pre><code>window.clear = clear;\n</code></pre>\n\n<p>And viola - a log that clears itself. </p>\n\n<p><em>Mac OS 10.6.8 - Chrome 15.0.874.106</em></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>On the Chrome console right click  with the mouse and  We have the option to clear the console</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>On the Mac you can also use <code>\u2318+K</code> just like in Terminal.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><img src=\"http://i.stack.imgur.com/gWtuq.png\" alt=\"Chrome Console Clear button\"></p>\n\n<p>If you want to just clear the console when debugging, you can simply click the \"ban-circle\"  \u20e0 button to clear console.log. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>RE:Chrome, console.clear() clears the user console, visible when you have console pane selected. It does not clear the browser console, visible ( or potentially visible ) from all the panes.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you use <code>console.clear()</code>, that seems to work in chrome. Note, it will output a \"Console was cleared\" message.</p>\n\n<p><img src=\"http://i.stack.imgur.com/0gf0J.png\" alt=\"I tested this by racking up a ton of Javascript errors.\"></p>\n\n<p>Note, I got an error right after clearing the console, so it doesn't disable the console, only clears it. Also, I have only tried this in chrome, so I dont know how cross-browser it is.</p>\n\n<p><strong>EDIT:</strong> I tested this in Chrome, IE, Firefox, and Opera. It works in Chrome, MSIE and Opera's default consoles, but not in Firefox's, however, it does work in Firebug.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I use the following to alias <code>cls</code> when debugging locally in Chrome (enter the following JavaScript into the console):</p>\n\n<pre><code>Object.defineProperty(window, 'cls', {\n    get: function () {\n        return console.clear();\n    }\n});\n</code></pre>\n\n<p>now entering <code>cls</code> in the console will clear the console.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I was wondering if I could clear up the console with some command..</p>\n\n<p><code>console.log()</code>, can print... is there a command to clear up console?..</p>\n\n<p>I've tried to <code>console.log(console);</code> and got this functions below... </p>\n\n<pre><code>assert: function assert() { [native code] }\nconstructor: function Console() { [native code] }\ncount: function count() { [native code] }\ndebug: function debug() { [native code] }\ndir: function dir() { [native code] }\ndirxml: function dirxml() { [native code] }\nerror: function error() { [native code] }\ngroup: function group() { [native code] }\ngroupEnd: function groupEnd() { [native code] }\ninfo: function info() { [native code] }\nlog: function log() { [native code] }\nmarkTimeline: function markTimeline() { [native code] }\nprofile: function profile() { [native code] }\nprofileEnd: function profileEnd() { [native code] }\ntime: function time() { [native code] }\ntimeEnd: function timeEnd() { [native code] }\ntrace: function trace() { [native code] }\nwarn: function warn() { [native code] }\n__proto__: Object\n</code></pre>\n\n<p>[ I guess there's no way to clear up the console... but I wanted someone to say it to me... ]</p>\n",
            "last_activity_date": 1424392439,
            "question_id": 3011600,
            "score": 64,
            "tags": [
                "javascript",
                "console",
                "google-chrome"
            ],
            "title": "clear javascript console in Google Chrome"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>You can use the extend function from JQuery:</p>\n\n<pre><code>var newClone= jQuery.extend({}, oldObject);  \nvar deepClone = jQuery.extend(true, {}, oldObject); \n</code></pre>\n\n<p>There is a Node.js Plugin too:</p>\n\n<p><a href=\"https://github.com/shimondoodkin/nodejs-clone-extend\">https://github.com/shimondoodkin/nodejs-clone-extend</a></p>\n\n<p>To do it without JQuery or Plugin read this here:</p>\n\n<p><a href=\"http://my.opera.com/GreyWyvern/blog/show.dml/1725165\">http://my.opera.com/GreyWyvern/blog/show.dml/1725165</a></p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<pre><code>Object.defineProperty(Object.prototype, \"extend\", {\n    enumerable: false,\n    value: function(from) {\n        var props = Object.getOwnPropertyNames(from);\n        var dest = this;\n        props.forEach(function(name) {\n            if (name in dest) {\n                var destination = Object.getOwnPropertyDescriptor(from, name);\n                Object.defineProperty(dest, name, destination);\n            }\n        });\n        return this;\n    }\n});\n</code></pre>\n\n<p>This will define an extend method that you can use. Code comes <a href=\"http://onemoredigit.com/post/1527191998/extending-objects-in-node-js\">from this article.</a></p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Simple and the fastest way to clone an Object in NodeJS is to use Object.keys( obj ) method</p>\n\n<pre><code>var a = {\"a\": \"a11\", \"b\": \"avc\"};\nvar b;\n\nfor(var keys = Object.keys(a), l = keys.length; l; --l)\n{\n   b[ keys[l-1] ] = a[ keys[l-1] ];\n}\nb.a = 0;\n\nconsole.log(\"a: \" + JSON.stringify(a)); // LOG: a: {\"a\":\"a11\",\"b\":\"avc\"} \nconsole.log(\"b: \" + JSON.stringify(b)); // LOG: b: {\"a\":0,\"b\":\"avc\"}\n</code></pre>\n\n<p>The method Object.keys requires JavaScript 1.8.5; nodeJS v0.4.11 supports this method</p>\n\n<p>but of course for nested objects need to implement recursive func</p>\n\n<hr>\n\n<p>Other solution is to use native JSON (Implemented in JavaScript 1.7), but it's much slower (~10 times slower) than previous one</p>\n\n<pre><code>var a = {\"a\": i, \"b\": i*i};\nvar b = JSON.parse(JSON.stringify(a));\nb.a = 0;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If you're using coffee-script, it's as easy as:</p>\n\n<pre><code>newObject = {}\nnewObject[key] = value  for own key,value of oldObject\n</code></pre>\n\n<p>Though this isn't a deep clone.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There are some Node modules out there if don't want to \"roll your own\". This one looks good: <a href=\"http://search.npmjs.org/#/clone\" rel=\"nofollow\">http://search.npmjs.org/#/clone</a></p>\n\n<p>Looks like it handles all kinds of stuff, including circular references. From the <a href=\"https://github.com/pvorb/node-clone\" rel=\"nofollow\">github</a> page:</p>\n\n<blockquote>\n  <p>clone masters cloning objects, arrays, Date objects, and RegEx\n  objects. Everything is cloned recursively, so that you can clone dates\n  in arrays in objects, for example. [...] Circular references? Yep!</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There is also a project on Github that aims to be a more direct port of the <code>jQuery.extend()</code>:</p>\n\n<p><a href=\"https://github.com/dreamerslab/node.extend\" rel=\"nofollow\">https://github.com/dreamerslab/node.extend</a></p>\n\n<p>An example, modified from the <a href=\"http://api.jquery.com/jQuery.extend/\" rel=\"nofollow\">jQuery docs</a>:</p>\n\n<pre><code>var extend = require('node.extend');\n\nvar object1 = {\n    apple: 0,\n    banana: {\n        weight: 52,\n        price: 100\n    },\n    cherry: 97\n};\n\nvar object2 = {\n    banana: {\n        price: 200\n    },\n    durian: 100\n};\n\nvar merged = extend(object1, object2);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Looking for a true clone option, I stumbled across ridcully's link to here:</p>\n\n<p><a href=\"http://my.opera.com/GreyWyvern/blog/show.dml/1725165\" rel=\"nofollow\">http://my.opera.com/GreyWyvern/blog/show.dml/1725165</a></p>\n\n<p>I modified the solution on that page so that the function attached to the <code>Object</code> prototype is not enumerable.  Here is my result:</p>\n\n<pre><code>Object.defineProperty(Object.prototype, 'clone', {\n    enumerable: false,\n    value: function() {\n        var newObj = (this instanceof Array) ? [] : {};\n        for (i in this) {\n        if (i == 'clone') continue;\n            if (this[i] &amp;&amp; typeof this[i] == \"object\") {\n                newObj[i] = this[i].clone();\n            } else newObj[i] = this[i]\n        } return newObj;\n    }\n});\n</code></pre>\n\n<p>Hopefully this helps someone else as well.  Note that there are some caveats... particularly with properties named \"clone\".  This works well for me.  I don't take any credit for writing it.  Again, I only changed how it was being defined.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Check out <a href=\"http://underscorejs.org\">underscore.js</a>. It has both <a href=\"http://underscorejs.org/#clone\">clone</a> and <a href=\"http://underscorejs.org/#extend\">extend</a> and many other very useful functions.</p>\n\n<p>This can be useful: <a href=\"http://stackoverflow.com/questions/5691901/using-the-underscore-module-with-node-js\">Using the Underscore module with Node.js</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Low-frills deep copy:</p>\n\n<pre><code>var obj2 = JSON.parse(JSON.stringify(obj1));\n</code></pre>\n\n<p>For a shallow copy, use Node's built-in <code>util._extend()</code> function.</p>\n\n<pre><code>var extend = require('util')._extend;\n\nvar obj1 = {x: 5, y:5};\nvar obj2 = extend({}, obj1);\nobj2.x = 6;\nconsole.log(obj1.x); // still logs 5\n</code></pre>\n\n<p>Source code of Node's <code>_extend</code> function is in here: <a href=\"https://github.com/joyent/node/blob/master/lib/util.js\">https://github.com/joyent/node/blob/master/lib/util.js</a></p>\n\n<pre><code>exports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || typeof add !== 'object') return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 96
                },
                {
                    "body": "<pre><code>var obj2 = JSON.parse(JSON.stringify(obj1));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>None of the answers satisfied me, several don't work or are just shallow clones, answers from @clint-harris and using JSON.parse/stringify are good but quite slow. I found a module that does deep cloning fast: <a href=\"https://github.com/AlexeyKupershtokh/node-v8-clone\" rel=\"nofollow\">https://github.com/AlexeyKupershtokh/node-v8-clone</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can also use SugarJS in NodeJS.</p>\n\n<p><a href=\"http://sugarjs.com/\" rel=\"nofollow\">http://sugarjs.com/</a></p>\n\n<p>They have a very clean clone feature:\n<a href=\"http://sugarjs.com/api/Object/clone\" rel=\"nofollow\">http://sugarjs.com/api/Object/clone</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is no built-in way to do a real clone (deep copy) of an object in node.js. There are some tricky edge cases so you should definitely use a library for this. I wrote such a function for my <a href=\"https://github.com/mbrowne/simpleoo.js\" rel=\"nofollow\">simpleoo</a> library. You can use the <code>deepCopy</code> function without using anything else from the library (which is quite small) if you don't need it. This function supports cloning multiple data types, including arrays, dates, and regular expressions, it supports recursive references, and it also works with objects whose constructor functions have required parameters.</p>\n\n<p>Here is the code:</p>\n\n<pre><code>//If Object.create isn't already defined, we just do the simple shim, without the second argument,\n//since that's all we need here\nvar object_create = Object.create;\nif (typeof object_create !== 'function') {\n    object_create = function(o) {\n        function F() {}\n        F.prototype = o;\n        return new F();\n    };\n}\n\n/**\n * Deep copy an object (make copies of all its object properties, sub-properties, etc.)\n * An improved version of http://keithdevens.com/weblog/archive/2007/Jun/07/javascript.clone\n * that doesn't break if the constructor has required parameters\n * \n * It also borrows some code from http://stackoverflow.com/a/11621004/560114\n */ \nfunction deepCopy = function deepCopy(src, /* INTERNAL */ _visited) {\n    if(src == null || typeof(src) !== 'object'){\n        return src;\n    }\n\n    // Initialize the visited objects array if needed\n    // This is used to detect cyclic references\n    if (_visited == undefined){\n        _visited = [];\n    }\n    // Ensure src has not already been visited\n    else {\n        var i, len = _visited.length;\n        for (i = 0; i &lt; len; i++) {\n            // If src was already visited, don't try to copy it, just return the reference\n            if (src === _visited[i]) {\n                return src;\n            }\n        }\n    }\n\n    // Add this object to the visited array\n    _visited.push(src);\n\n    //Honor native/custom clone methods\n    if(typeof src.clone == 'function'){\n        return src.clone(true);\n    }\n\n    //Special cases:\n    //Array\n    if (Object.prototype.toString.call(src) == '[object Array]') {\n        //[].slice(0) would soft clone\n        ret = src.slice();\n        var i = ret.length;\n        while (i--){\n            ret[i] = deepCopy(ret[i], _visited);\n        }\n        return ret;\n    }\n    //Date\n    if (src instanceof Date) {\n        return new Date(src.getTime());\n    }\n    //RegExp\n    if (src instanceof RegExp) {\n        return new RegExp(src);\n    }\n    //DOM Element\n    if (src.nodeType &amp;&amp; typeof src.cloneNode == 'function') {\n        return src.cloneNode(true);\n    }\n\n    //If we've reached here, we have a regular object, array, or function\n\n    //make sure the returned object has the same prototype as the original\n    var proto = (Object.getPrototypeOf ? Object.getPrototypeOf(src): src.__proto__);\n    if (!proto) {\n        proto = src.constructor.prototype; //this line would probably only be reached by very old browsers \n    }\n    var ret = object_create(proto);\n\n    for(var key in src){\n        //Note: this does NOT preserve ES5 property attributes like 'writable', 'enumerable', etc.\n        //For an example of how this could be modified to do so, see the singleMixin() function\n        ret[key] = deepCopy(src[key], _visited);\n    }\n    return ret;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>npm install node-v8-clone\n</code></pre>\n\n<p>Fastest cloner, it open native clone method from node.js</p>\n\n<pre><code>var clone = require('node-v8-clone').clone;\nvar newObj = clone(obj, true); //true - deep recursive clone\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What is the best way to clone an object in node.js</p>\n\n<p>e.g. I want to avoid the situation where:</p>\n\n<pre><code>var obj1 = {x: 5, y:5};\nvar obj2 = obj1;\nobj2.x = 6;\nconsole.log(obj1.x); // logs 6\n</code></pre>\n\n<p>The object may well contain complex types as attributes, so a simple for(var x in obj1) wouldn't solve.  Do I need to write a recursive clone myself or is there something built in that I'm not seeing?</p>\n",
            "last_activity_date": 1417353722,
            "question_id": 5055746,
            "score": 59,
            "tags": [
                "javascript",
                "node.js"
            ],
            "title": "Cloning an Object in Node.js"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>How about storing the alerts as records in an array instead of properties of a single object  ?</p>\n\n<pre><code>var alerts = [ \n    {num : 1, app:'helloworld',message:'message'},\n    {num : 2, app:'helloagain',message:'another message'} \n]\n</code></pre>\n\n<p>And then to add one, just use <code>push</code>:</p>\n\n<pre><code>alerts.push({num : 3, app:'helloagain_again',message:'yet another message'});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 121
                },
                {
                    "body": "<p>Do you have the ability to change the outer-most structure to an array?  So it would look like this</p>\n\n<pre><code>var alerts = [{\"app\":\"helloworld\",\"message\":null},{\"app\":\"helloagain\",\"message\":\"another message\"}];\n</code></pre>\n\n<p>So when you needed to add one, you can just push it onto the array</p>\n\n<pre><code>alerts.push( {\"app\":\"goodbyeworld\",\"message\":\"cya\"} );\n</code></pre>\n\n<p>Then you have a built-in zero-based index for how the errors are enumerated.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You should really go with the array of alerts suggestions, but otherwise adding to the object you mentioned would look like this:</p>\n\n<pre><code>alerts[3]={\"app\":\"goodbyeworld\",\"message\":\"cya\"};\n</code></pre>\n\n<p>But since you shouldn't use literal numbers as names quote everything and go with</p>\n\n<pre><code>alerts['3']={\"app\":\"goodbyeworld\",\"message\":\"cya\"};\n</code></pre>\n\n<p>or you can make it an array of objects.</p>\n\n<p>Accessing it looks like</p>\n\n<pre><code>alerts['1'].app\n=&gt; \"helloworld\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>alerts.splice(0,0,{\"app\":\"goodbyeworld\",\"message\":\"cya\"});\n</code></pre>\n\n<p>Works pretty well, it'll add it to the start of the array.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>jQuery <code>$.extend(obj1, obj2)</code> would merge 2 objects for you, but you should really be using an array.</p>\n\n<pre><code>var alertsObj = {\n    1: {app:'helloworld','message'},\n    2: {app:'helloagain',message:'another message'}\n};\n\nvar alertArr = [\n    {app:'helloworld','message'},\n    {app:'helloagain',message:'another message'}\n];\n\nvar newAlert = {app:'new',message:'message'};\n\n$.extend(alertsObj, newAlert);\nalertArr.push(newAlert);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<pre><code>alerts.unshift({\"app\":\"goodbyeworld\",\"message\":\"cya\"});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I have an object that holds alerts and some information about them:</p>\n\n<pre><code>var alerts = { \n    1: {app:'helloworld','message'},\n    2: {app:'helloagain',message:'another message'}\n}\n</code></pre>\n\n<p>In addition to this, I have a variable that says how many alerts there are, <code>alertNo</code>. My question is, when I go to add a new alert, is there a way to append the alert onto the <code>alerts</code> object?</p>\n",
            "last_activity_date": 1401965445,
            "question_id": 617036,
            "score": 56,
            "tags": [
                "javascript"
            ],
            "title": "Appending to an object"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><em><strong>Important Edit:</em></strong> This answer is outdated. Since writing it, the Visibility API (<a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/User_experience/Using_the_Page_Visibility_API\">mdn</a>, <a href=\"http://www.html5rocks.com/en/tutorials/pagevisibility/intro/\">example</a>, <a href=\"http://www.w3.org/TR/page-visibility/\">spec</a>) has been introduced. It is the better way to solve this problem.</p>\n\n<hr>\n\n<pre><code>var focused = true;\n\nwindow.onfocus = function() {\n    focused = true;\n};\nwindow.onblur = function() {\n    focused = false;\n};\n</code></pre>\n\n<p>AFAIK, <code>focus</code> and <code>blur</code> are all supported on...everything. (see <a href=\"http://www.quirksmode.org/dom/events/index.html\">http://www.quirksmode.org/dom/events/index.html</a> )</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Yes, <code>window.onfocus</code> and <code>window.onblur</code> should work for your scenario:</p>\n\n<p><a href=\"http://www.thefutureoftheweb.com/blog/detect-browser-window-focus\">http://www.thefutureoftheweb.com/blog/detect-browser-window-focus</a></p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>Yes those should work for you. You just reminded me of this link I came across that exploits those techniques. <a href=\"http://www.azarask.in/blog/post/a-new-type-of-phishing-attack/\">interesting read</a></p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>While searching about this problem, I found a recommendation that <a href=\"http://www.w3.org/TR/page-visibility/\">Page Visibility API</a> should be used. Most modern browsers support this API according to Can I Use: <a href=\"http://caniuse.com/#feat=pagevisibility\">http://caniuse.com/#feat=pagevisibility</a>.</p>\n\n<p>Here's a working example (derived from <a href=\"http://jsfiddle.net/0GiS0/cAG5N/\">this snippet</a>):</p>\n\n<pre><code>$(document).ready(function() {\n  var hidden, visibilityState, visibilityChange;\n\n  if (typeof document.hidden !== \"undefined\") {\n    hidden = \"hidden\", visibilityChange = \"visibilitychange\", visibilityState = \"visibilityState\";\n  } else if (typeof document.mozHidden !== \"undefined\") {\n    hidden = \"mozHidden\", visibilityChange = \"mozvisibilitychange\", visibilityState = \"mozVisibilityState\";\n  } else if (typeof document.msHidden !== \"undefined\") {\n    hidden = \"msHidden\", visibilityChange = \"msvisibilitychange\", visibilityState = \"msVisibilityState\";\n  } else if (typeof document.webkitHidden !== \"undefined\") {\n    hidden = \"webkitHidden\", visibilityChange = \"webkitvisibilitychange\", visibilityState = \"webkitVisibilityState\";\n  } // if\n\n  var document_hidden = document[hidden];\n\n  document.addEventListener(visibilityChange, function() {\n    if(document_hidden != document[hidden]) {\n      if(document[hidden]) {\n        // Document hidden\n      } else {\n        // Document shown\n      } // if\n\n      document_hidden = document[hidden];\n    } // if\n  });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I would do it this way (Reference <a href=\"http://www.w3.org/TR/page-visibility/\" rel=\"nofollow\">http://www.w3.org/TR/page-visibility/</a>):</p>\n\n<pre><code>    window.onload = function() {\n\n        // check the visiblility of the page\n        var hidden, visibilityState, visibilityChange;\n\n        if (typeof document.hidden !== \"undefined\") {\n            hidden = \"hidden\", visibilityChange = \"visibilitychange\", visibilityState = \"visibilityState\";\n        }\n        else if (typeof document.mozHidden !== \"undefined\") {\n            hidden = \"mozHidden\", visibilityChange = \"mozvisibilitychange\", visibilityState = \"mozVisibilityState\";\n        }\n        else if (typeof document.msHidden !== \"undefined\") {\n            hidden = \"msHidden\", visibilityChange = \"msvisibilitychange\", visibilityState = \"msVisibilityState\";\n        }\n        else if (typeof document.webkitHidden !== \"undefined\") {\n            hidden = \"webkitHidden\", visibilityChange = \"webkitvisibilitychange\", visibilityState = \"webkitVisibilityState\";\n        }\n\n\n        if (typeof document.addEventListener === \"undefined\" || typeof hidden === \"undefined\") {\n            // not supported\n        }\n        else {\n            document.addEventListener(visibilityChange, function() {\n                console.log(\"hidden: \" + document[hidden]);\n                console.log(document[visibilityState]);\n\n                switch (document[visibilityState]) {\n                case \"visible\":\n                    // visible\n                    break;\n                case \"hidden\":\n                    // hidden\n                    break;\n                }\n            }, false);\n        }\n\n        if (document[visibilityState] === \"visible\") {\n            // visible\n        }\n\n    };  \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a reliable cross-browser way to detect that a tab has focus.</p>\n\n<p>The scenario is that we have an application that polls regularly for stock prices, and if the page doesn't have focus we could stop the polling and save everyone the traffic noise, especially as people are fans of opening several tabs with different portfolios.</p>\n\n<p>Is <code>window.onblur</code> and <code>window.onfocus</code> an option for this?</p>\n",
            "last_activity_date": 1409677192,
            "question_id": 7389328,
            "score": 53,
            "tags": [
                "javascript",
                "optimization",
                "polling"
            ],
            "title": "Detect If Browser Tab Has Focus"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.google.com/support/forum/p/Google%20Analytics/thread?tid=4731d8a407382376&amp;hl=en\" rel=\"nofollow\">This person</a> is having the same problem on the Google Analytics help fourm. I'd suggest taking a look at the thread. But regularly GA doesn't support multiple trackers.</p>\n\n<p>I like <a href=\"http://getclicky.com\" rel=\"nofollow\">Clicky</a> myself, but it costs money.</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>Don't have to use different cookie names as Google Analytics happily works with multiple trackers on the same page. See answers for question <em><a href=\"http://stackoverflow.com/questions/1264630/google-analytics-multiple-trackers-for-several-accounts\">Google Analytics - Multiple Trackers for Several Accounts?</a></em>.</p>\n\n<p><em>Update</em></p>\n\n<p>It turns out that using <a href=\"http://www.lunametrics.com/blog/2009/02/26/pitfalls-tracking-multiple-accounts-ga/\">multiple trackers is a working method but has some pitfalls</a>. One of those, that is, you cannot apply different user segmentation for each of them. John Henson demonstrates a workaround that <a href=\"http://www.lunametrics.com/blog/2009/03/06/cookies-tracking-multiple-accounts-ga/\">coerces GA to use different cookies</a>, may be you should check it.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>According to the <a href=\"http://www.lunametrics.com/blog/2009/03/06/cookies-tracking-multiple-accounts-ga/\" rel=\"nofollow\">documentation</a> listed by T\u00f6r\u00f6k, it seems the correct answer is to use <a href=\"http://code.google.com/apis/analytics/docs/gaJS/gaJSApiDomainDirectory.html#%5Fgat.GA%5FTracker%5F.%5FsetCookiePath\" rel=\"nofollow\">_setCookiePath</a>. This causes each tracker to use completely different cookies. </p>\n\n<p>Example code from website:</p>\n\n<pre><code>&lt;script type=\u201dtext/javascript\u201d&gt;\n    var pageTracker = _gat._getTracker(\u201dUA-11111-1\u2033);\n\n    pageTracker._setDomainName(\u2019domain.com\u2019);\n\n    pageTracker._setCookiePath(\u2019/subdirectory/\u2019);\n    pageTracker._trackPageview();\n\n    var otherTracker = _gat._getTracker(\u201dUA-22222-1\u2033);\n    otherTracker._setDomainName(\u2019domain.com\u2019);\n    otherTracker._trackPageview();\n&lt;/script&gt;\n</code></pre>\n\n<p>When you link from one domain to another, every link that posts to the other domain has to look like this:</p>\n\n<pre><code>&lt;a href=\"pageTracker._linkByPost('otherdomain.com/petStoreCart/legalTerms.php');\"\n</code></pre>\n\n<p>This will add Google Analytics specific query string values that will be used by the above script to set the cookie (<a href=\"http://code.google.com/apis/analytics/docs/tracking/gaTrackingSite.html\" rel=\"nofollow\">source</a>).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>var otherTracker = _gat._getTracker(\u201dUA-22222-1\u2033);\notherTracker._setDomainName(\u2019domain.com\u2019);\notherTracker._trackPageview();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Now made easy with the new asynchronous tracking code. :)</p>\n\n<p><a href=\"https://developers.google.com/analytics/devguides/collection/gajs/#MultipleCommands\" rel=\"nofollow\">https://developers.google.com/analytics/devguides/collection/gajs/#MultipleCommands</a></p>\n",
                    "is_accepted": true,
                    "score": 50
                },
                {
                    "body": "<p>I have used this structure on our site and clients sites and it works like a charm... </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt; \nvar gaJsHost = ((\"https:\" == document.location.protocol) ? \"https://ssl.\" : \"http://www.\");    \ndocument.write(unescape(\"%3Cscript src='\" + gaJsHost + \"google-analytics.com/ga.js'     type='text/javascript'%3E%3C/script%3E\")); \n&lt;/script&gt; &lt;script type=\"text/javascript\"&gt; \n\ntry {\n\n//Original tracking\nvar pageTracker_ORIG = _gat._getTracker(\"UA-XXXXXXX-1\");\npageTracker_ORIG._setDomainName('.sleepinggiantmedia.co.uk');\npageTracker_ORIG._trackPageview();\n\n//New Analytics tag\nvar pageTracker_SGM = _gat._getTracker(\"UA-XXXXXXX-1\");\npageTracker_SGM._setDomainName('.sleepinggiantmedia.co.uk');\npageTracker_SGM._trackPageview();\n\n\n} catch(err) {}\n</code></pre>\n\n<p></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It looks like Google recommends against this practice:</p>\n\n<blockquote>\n  <p>Installing multiple instances of the Google Analytics Tracking code on a single web page is not a supported implementation. We suggest that you remove all but one instance, and make sure that you have the code from the correct profile installed on every page that you would like to track.</p>\n</blockquote>\n\n<p><a href=\"https://support.google.com/analytics/bin/answer.py?hl=en-GB&amp;answer=1032400\" rel=\"nofollow\">https://support.google.com/analytics/bin/answer.py?hl=en-GB&amp;answer=1032400</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In case anyone still has this issue and wants an easy paste, my issue was using my own google tracking for my code that was being added to other people's pages that might also be using google tracking. I have tested this and confirm it works as expected:</p>\n\n<pre><code>var _gaq = _gaq || [];\n\n_gaq.push(['some_unique_name._setAccount', 'UA-xxxxxxxx-1']);\n_gaq.push(['some_unique_name._trackPageview']);\n\n(function() {\n    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</code></pre>\n\n<p>I am using also using events</p>\n\n<pre><code>_gaq.push(['some_unique_name._trackEvent', 'Event Category', 'Event Action', 'Event Label']);\n</code></pre>\n\n<p>If anyone sees an issue with it, please let me know.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can install multiple instances of the Google Analytics tracking code on your web pages to send data to multiple properties in your account.\n<a href=\"https://support.google.com/analytics/answer/1032400?hl=en\">https://support.google.com/analytics/answer/1032400?hl=en</a></p>\n\n<p>Or you can get creative and do the following per Google's instructions. <a href=\"https://developers.google.com/analytics/devguides/collection/analyticsjs/advanced#multipletrackers\">https://developers.google.com/analytics/devguides/collection/analyticsjs/advanced#multipletrackers</a></p>\n\n<pre><code>&lt;script&gt;\n  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\n  ga('create', 'UA-XXXX-Y', 'auto');\n  ga('create', 'UA-XXXX-Y', 'auto', {'name': 'newTracker'});\n  ga('send', 'pageview');\n  ga('newTracker.send', 'pageview');\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I'm writing a web application that's supposed to be embedded in other people's websites (kind of a widget). I'm using Google Analytics to track all the people that visit all instances of my script on the embedding websites. The problem is that I don't know how to use it so that it doesn't interfere with those websites' own Google Analytics accounts. I'm storing the tracker variable in a namespace, so I thought that should do it, but I haven't realized that GA stores its settings in cookies (__utma, __utmz etc.), and those cookies are used by both trackers, if there are two of them on the same page... So for example if I use _setVar to store some kind of user-defined variable in Google Analytics, and the embedding site does the same, we overwrite each other's values...</p>\n\n<p>Of course it would be easiest if Google provided a way to change the name of the cookies to a custom one, but I can't find any way to do it. I thought about using cookie domain or path to force a separate cookie, but this doesn't work, because if I set domain or path to something other than the real domain/path, then the cookie is not readable for the page after reload...</p>\n\n<p>Does anyone know a way to have two trackers on one page and make them use separate cookies so that they don't overwrite each other's settings?</p>\n\n<p>Or, if that's completely impossible - is there any other analytics service with similar functionality as GA in which this is possible? (it would have to have advanced features like event and campaign tracking...)</p>\n",
            "last_activity_date": 1423222826,
            "question_id": 1239042,
            "score": 48,
            "tags": [
                "javascript",
                "cookies",
                "google-analytics",
                "widget"
            ],
            "title": "google analytics - multiple trackers on one page (cookie conflict)"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Trivial with <a href=\"http://docs.jquery.com/Manipulation/insertAfter#selector\">jQuery</a></p>\n\n<pre><code>$('#div1').insertAfter('#div3');\n$('#div3').insertBefore('#div2');\n</code></pre>\n\n<p>If you want to do it repeatedly, you'll need to use different selectors since the divs will retain their ids as they are moved around.</p>\n\n<pre><code>$(function() {\n    setInterval( function() {\n        $('div:first').insertAfter($('div').eq(2));\n        $('div').eq(1).insertBefore('div:first');\n    }, 3000 );\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 66
                },
                {
                    "body": "<p>If you have jQuery on the page, <a href=\"http://stackoverflow.com/questions/233936/jquery-swapping-elements\">this post should answer your question</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>jQuery.fn.swap = function(b){ \n    b = jQuery(b)[0]; \n    var a = this[0]; \n    var t = a.parentNode.insertBefore(document.createTextNode(''), a); \n    b.parentNode.insertBefore(a, b); \n    t.parentNode.insertBefore(b, t); \n    t.parentNode.removeChild(t); \n    return this; \n};\n</code></pre>\n\n<p>and use it like this:</p>\n\n<pre><code>$('#div1').swap('#div2');\n</code></pre>\n\n<p>if you don't want to use jQuery you could easily adapt the function.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>There's no need to use a library for such a trivial task:</p>\n\n<pre><code>var divs = document.getElementsByTagName(\"div\");   // order: first, second, third\ndivs[2].parentNode.insertBefore(divs[2], divs[0]); // order: third, first, second\ndivs[2].parentNode.insertBefore(divs[2], divs[1]); // order: third, second, third\n</code></pre>\n\n<p>This takes account of the fact that <code>getElementsByTagName</code> returns a live NodeList that is automatically updated to reflect the order of the elements in the DOM as they are manipulated.</p>\n\n<p>You could also use:</p>\n\n<pre><code>var divs = document.getElementsByTagName(\"div\");   // order: first, second, third\ndivs[0].parentNode.appendChild(divs[0]);           // order: second, third, first\ndivs[1].parentNode.insertBefore(divs[0], divs[1]); // order: third, second, third\n</code></pre>\n\n<p>and there are various other possible permutations, if you feel like experimenting:</p>\n\n<pre><code>divs[0].parentNode.appendChild(divs[0].parentNode.replaceChild(divs[2], divs[0]));\n</code></pre>\n\n<p>for example :-)</p>\n",
                    "is_accepted": false,
                    "score": 54
                },
                {
                    "body": "<p>Jquery approach mentioned on the top will work.\nYou can also use JQuery and CSS .Say for e.g on Div one you have applied class1 and div2 you have applied class class2 (say for e.g each class of css provides specific position on the browser), now you can interchange the classes use jquery or javascript (that will change the position)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var swap = function () {\n    var divs = document.getElementsByTagName('div');\n    var div1 = divs[0];\n    var div2 = divs[1];\n    var div3 = divs[2];\n\n    div3.parentNode.insertBefore(div1, div3);\n    div1.parentNode.insertBefore(div3, div2);\n};\n</code></pre>\n\n<p>This function may seem strange, but it heavily relies on standards in order to function properly. In fact, it may seem to function better than <a href=\"http://stackoverflow.com/questions/1363650/javascript-moving-element-in-the-dom/1363659#1363659\">the jQuery version that tvanfosson posted</a> which seems to do the swap only twice.</p>\n\n<p>What standards peculiarities does it rely on?</p>\n\n<blockquote>\n  <p>insertBefore\n      Inserts the node newChild before the existing child node refChild. If\n  refChild is null, insert newChild at\n  the end of the list of children.\n      If newChild is a DocumentFragment object, all of its children are\n  inserted, in the same order, before\n  refChild. <strong>If the newChild is already\n  in the tree, it is first removed.</strong></p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Sorry for bumping this thread\nI stumbled over the \"swap DOM-elements\" problem and played around a bit</p>\n\n<p>The result is a jQuery-native \"solution\" which seems to be really pretty (unfortunately i don't know whats happening at the jQuery internals when doing this)</p>\n\n<p>The Code:</p>\n\n<pre><code>$('#element1').insertAfter($('#element2'));\n</code></pre>\n\n<p>The jQuery documentation says that <code>insertAfter()</code> <strong>moves</strong> the element and doesn't clone it</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Let's say I have three <code>&lt;div&gt;</code> elements on a page. How can I swap positions of the first and third <code>&lt;div&gt;</code>? jQuery is fine.</p>\n",
            "last_activity_date": 1352946860,
            "question_id": 1363650,
            "score": 44,
            "tags": [
                "javascript",
                "jquery",
                "dom"
            ],
            "title": "JavaScript moving element in the DOM"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You need to add <code>.toArray()</code> to the end of your <code>.map()</code> function</p>\n\n<pre><code>$(\"#merge_button\").click(function(event){\n    event.preventDefault();\n    var searchIDs = $(\"#find-table input:checkbox:checked\").map(function(){\n        return $(this).val();\n    }).toArray();\n    console.log(searchIDs);\n});\n</code></pre>\n\n<p>Demo: <a href=\"http://jsfiddle.net/sZQtL/\">http://jsfiddle.net/sZQtL/</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Call <code>.get()</code> at the very end to turn the resulting jQuery object into a true array.</p>\n\n<pre><code>$(\"#merge_button\").click(function(event){\n    event.preventDefault();\n    var searchIDs = $(\"#find-table input:checkbox:checked\").map(function(){\n      return $(this).val();\n    }).get(); // &lt;----\n    console.log(searchIDs);\n});\n</code></pre>\n\n<p>Per <a href=\"http://api.jquery.com/map/\">the documentation</a>:</p>\n\n<blockquote>\n  <p>As the return value is a jQuery object, which contains an array, <strong>it's very common to call .get() on the result to work with a basic array.</strong></p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 88
                },
                {
                    "body": "<p>I refactored your code a bit and believe I came with the solution for which you were looking.  Basically instead of setting <code>searchIDs</code> to be the result of the <code>.map()</code> I just pushed the values into an array.</p>\n\n<pre><code>$(\"#merge_button\").click(function(event){\n  event.preventDefault();\n\n  var searchIDs = [];\n\n  $(\"#find-table input:checkbox:checked\").map(function(){\n    searchIDs.push($(this).val());\n  });\n\n  console.log(searchIDs);\n});\n</code></pre>\n\n<p>I created a <a href=\"http://jsfiddle.net/nuclearghost/XNjBd/\">fiddle</a> with the code running.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>DEMO: <a href=\"http://jsfiddle.net/PBhHK/\">http://jsfiddle.net/PBhHK/</a></p>\n\n<pre><code>$(document).ready(function(){\n\n    var searchIDs = $('input:checked').map(function(){\n\n      return $(this).val();\n\n    });\n    console.log(searchIDs.get());\n\n});\n</code></pre>\n\n<p>Just call get() and you'll have your array as it is written in the specs: <a href=\"http://api.jquery.com/map/\">http://api.jquery.com/map/</a></p>\n\n<pre><code>$(':checkbox').map(function() {\n      return this.id;\n    }).get().join();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Do not use \"each\". It is used for operations and changes in the same element. Use \"map\" to extract data from the element body and using it somewhere else.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to get values of all checkboxes that are currently checked and store them into an array. Here is my code so far:</p>\n\n<pre><code> $(\"#merge_button\").click(function(event){\n    event.preventDefault();\n    var searchIDs = $(\"#find-table input:checkbox:checked\").map(function(){\n      return $(this).val();\n    });\n    console.log(searchIDs);\n  });\n</code></pre>\n\n<p>However this outputs more than I need. I not only get the values, but some other stuff I don't want.</p>\n\n<blockquote>\n  <p>[\"51729b62c9f2673e4c000004\", \"517299e7c9f26782a7000003\",\n  \"51729975c9f267f3b5000002\", prevObject: jQuery.fn.jQuery.init[3],\n  context: document, jquery: \"1.9.1\", constructor: function, init:\n  function\u2026]</p>\n</blockquote>\n\n<p>I would like just ID's (first 3 items in this case).</p>\n\n<p>By using <code>$.each</code> and pushing values to an array I get desired output:</p>\n\n<pre><code>$(\"#find-table input:checkbox:checked\").each(function(){ myArray.push($(this).val()); })\n</code></pre>\n\n<blockquote>\n  <p>[\"51729b62c9f2673e4c000004\", \"517299e7c9f26782a7000003\",\n  \"51729975c9f267f3b5000002\"]</p>\n</blockquote>\n\n<p>However I'd like to use <code>$.map</code>, since it saves me a line of code and is prettier.</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1424426483,
            "question_id": 16170828,
            "score": 43,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery get values of checked checkboxes into array"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The regex matches the <code>_</code> character.</p>\n\n<p>The <code>g</code> means <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Regular_Expressions#Advanced_Searching_With_Flags\">Global</a>, and causes the <code>replace</code> call to replace all matches, not just the first one.</p>\n",
                    "is_accepted": true,
                    "score": 80
                },
                {
                    "body": "<p>Returns a new string with all the underscores in the source string replaced with spaces.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Like everyone else has said, it replaces all underscores with spaces. So <code>\"Hello_there.\"</code> would become <code>\"Hello there.\"</code></p>\n\n<p>But along with the answer, I want to suggest something to you. Use comments.</p>\n\n<p>In your code say something like:</p>\n\n<pre><code>// Replaces all underscores so that blah blah blah blah blah..\nvar hello = \"Hello_there.\"\n    .replace(/_/g, ' ');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<p>javascript:</p>\n\n<pre><code>.replace(/_/g,\" \");\n</code></pre>\n\n<p>I have it in my code but can't remember why or what it does! Can one of you regular expression gurus help? I know this may seem basic, but regular expressions are not my cup of tea, and googling for /g won't help much...</p>\n",
            "last_activity_date": 1305767053,
            "question_id": 6052616,
            "score": 41,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "What does the regular expression /_/g mean?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><code>&lt;noscript&gt;</code> is not meant for meaningless warnings like:</p>\n\n<blockquote>\n  <p><code>&lt;noscript&gt;</code><br>\n  Oh, no!  You don't have JavaScript enabled!  If you don't enable JS, you're doomed. [Long explanation about how to enable JS in every browser ever made]<br>\n  <code>&lt;/noscript&gt;</code></p>\n</blockquote>\n\n<p>It's meant for you to provide as much content as you can, along with a polite mention that enabling JS will provide access to certain extra features.  You'll find that basically every popular site follows this guideline.</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>I don't think using <code>&lt;noscript&gt;</code> is a good idea. I've heard that it is ineffective when the client is behind a JavaScript-blocking firewall - if the client's browser has JavaScript enabled the <code>&lt;noscript&gt;</code> tag won't activate, because, as far as the browser's concerned, JavaScript is fully operable within the document...</p>\n\n<p>A better method IMO, is to have all would-be 'noscript' content hidden by JavaScript.</p>\n\n<p>Here's a very basic example:</p>\n\n<pre><code>...\n&lt;body&gt;\n\n    &lt;script&gt;\n        document.body.className += ' js-enabled';\n    &lt;/script&gt;\n\n    &lt;div id=\"noscript\"&gt;\n        Welcome... here's some content...\n    &lt;/div&gt;\n</code></pre>\n\n<p>And within your StyleSheet:</p>\n\n<pre><code>body.js-enabled #noscript { display: none; }\n</code></pre>\n\n<p><hr /></p>\n\n<p>More info:</p>\n\n<ul>\n<li><a href=\"http://dev.opera.com/articles/view/replacing-noscript-with-accessible-un/\">Replacing <code>&lt;noscript&gt;</code> with accessible, unobtrusive DOM/JavaScript</a></li>\n<li><a href=\"http://javascript.about.com/od/reference/a/noscriptnomore.htm\">Reasons to avoid NOSCRIPT</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Put the <code>&lt;noscript&gt;</code> content at the <strong>end</strong> of your HTML, and then use CSS to position it at the top of the browser window.  Google will no longer consider it important.</p>\n\n<p>Stack Overflow itself uses this technique - do a View Source on this page and you'll see a \"works best with JavaScript\" warning near the end of the HTML, which appears at the top of the page when you switch off JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 36
                },
                {
                    "body": "<p>Somebody on another forum mentioned using an image for the warning. The way I see it, this would have three benefits:</p>\n\n<ol>\n<li>There wouldn't be any irrelevant text for search engines to index.</li>\n<li>The code to display a single image is less bulky than a text warning (which gets loaded on every page).</li>\n<li>Tracking could be implemented to determine how many times the image is called, to give an idea of how many visitors have JavaScript disabled or blocked.</li>\n</ol>\n\n<p>If you combine this with something like the non-noscript technique mentioned by J-P, it seems to be the best possible solution.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Just wanted to post an interesting tidbit related to this. For a site of mine I have ended up doing something similar to what stack overflow uses, but with the addition of a \"find out more\" link as my users are not as technical as this site. </p>\n\n<p>The interesting part is that following advice of people aboce, my solution ditched the noscript tag, instead opting to hide the message divs with javascript. But I found that if firefox is waiting for its master password, this hiding of the message is interupted, so I think I will go back to noscript.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you choose a solution based on replacing the div content (if js is enabled, then the div content gets updated) rather than using a noscript tag, <strong>be careful</strong> about how google views this practice:</p>\n\n<p><a href=\"http://support.google.com/webmasters/bin/answer.py?hl=en&amp;answer=66353\" rel=\"nofollow\">http://support.google.com/webmasters/bin/answer.py?hl=en&amp;answer=66353</a></p>\n\n<p>I'm not sure google will consider it deceptive, but it's something to consider and research further. Here's another stackoverflow post about this: <a href=\"http://stackoverflow.com/questions/9980385/noscript-google-snapshot-the-safe-way\">noscript google snapshot, the safe way</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have been using a noscript tag to show a warning when users have JavaScript disabled or are using script blocking plugins like Noscript. The website will not function properly if JavaScript is disabled and users may not figure out why it is not working without the warning.</p>\n\n<p>After the latest Google algorithm shuffle, I have seen the daily traffic drop to about 1/3 of what it was in the previous months. I have also seen pages that were ranking #1 or #2 in the SERPS drop out of the results. After doing some investigating in webmaster tools, I noticed that \"JavaScript\" is listed as #16 in the keywords section. This makes no sense because the site has nothing to do with JavaScript and the only place that word appears is in the text between the noscript tags.</p>\n\n<p>It seems that Google is now including and indexing the content between the noscript tags. I don't believe that this was happening before. The warning is three sentences. I'd imagine that having the same three sentences appearing at the top of every single page on the site could have a damaging effect on the SEO.</p>\n\n<p>Do you think this could be causing a problem with SEO? And, is there any other method to provide a warning to users who have JavaScript disabled in a way that won't be indexed or read by search engines?</p>\n",
            "last_activity_date": 1387324586,
            "question_id": 993387,
            "score": 40,
            "tags": [
                "javascript",
                "seo",
                "noscript"
            ],
            "title": "Noscript Tag, JavaScript Disabled Warning and Google Penalty"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Simply replace <code>d3.json</code> call with</p>\n\n<pre><code>json = JSON.parse( myjson );\n</code></pre>\n\n<p>IE: </p>\n\n<pre><code>var myjson = '{\"name\": \"flare\",\"children\": [{\"name\": \"analytics\",\"children\": [{\"name\": \"cluster\",\"children\": [{\"name\": \"MergeEdge\", \"size\": 10 }]}]}]}';\n\n// d3.json(\"/path/flare.json\", function(json) { #delete this line\n\n    json = JSON.parse( myjson ); //add this line\n\n    //rendering logic here\n\n//} #delete this line\n</code></pre>\n\n<p><strong>UPDATE 09/2013</strong></p>\n\n<p>Original code has changed. So varname <code>json</code> should be <code>root</code>:</p>\n\n<pre><code>// d3.json(\"flare.json\", function(error, root) { #delete this line\n\n    root = JSON.parse( myjson ); //add this line\n\n    //rendering logic here\n\n//} #delete this line\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>According to this example:</p>\n\n<p><a href=\"http://phrogz.net/JS/d3-playground/#StockPrice_HTML\" rel=\"nofollow\">http://phrogz.net/JS/d3-playground/#StockPrice_HTML</a></p>\n\n<p>Here they are storing the graph data within the variable $data, and setting it via the .data($data) function.</p>\n\n<p>I'd apply this method to whatever graph you are using.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The answer from chumkiu worked great for me but needed a couple of tweaks - in the latest version of the d3 bubble chart, you need to define root rather than json, as in</p>\n\n<pre><code> root = JSON.parse( myjson );\n</code></pre>\n\n<p>Alternatively, you could replace \"root\" with \"json\" in the rest of the code of course. :-)</p>\n\n<p>For anyone coming to this answer with questions about d3 node-link trees that utilize local data sets, this answer worked great for me - many thanks to the contributors on this page.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am learning d3. There are <a href=\"https://github.com/mbostock/d3/wiki/Requests#wiki-d3_xhr\">certain ways of loading the data</a> in d3 js. But all of them seem to make a HTTP GET. In my scenario, I already have the json data in a string. How can I use this string instead of making another http request? I tried to look for documentation for this but found none.</p>\n\n<p>This works:</p>\n\n<pre><code>d3.json(\"/path/flare.json\", function(json) {\n    //rendering logic here\n}\n</code></pre>\n\n<p>Now, if I have:</p>\n\n<pre><code>//assume this json comes from a server (on SAME DOMAIN)\nvar myjson = '{\"name\": \"flare\",\"children\": [{\"name\": \"analytics\",\"children\": [{\"name\": \"cluster\",\"children\": [{\"name\": \"MergeEdge\", \"size\": 10 }]}]}]}'; \n</code></pre>\n\n<p>How do I use already computed 'myjson' in d3 &amp; avoid a async call to server? Thanks.</p>\n",
            "last_activity_date": 1379537080,
            "question_id": 10934853,
            "score": 30,
            "tags": [
                "javascript",
                "json",
                "d3.js",
                "bubble-chart"
            ],
            "title": "d3 js - loading json without a http get"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>I have no idea what's causing the problem but I know who might be able to help you. Safari is built on <a href=\"http://webkit.org/\" rel=\"nofollow\">Webkit</a> and short of Apple (who are not so community minded) the <a href=\"http://webkit.org/contact.html\" rel=\"nofollow\">Webkit team</a> might know what the issue is.</p>\n\n<p>It's not a stupid question at all.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I've noticed something very similar. I think it is because Firefox and IE, when going back, are retrieving the page from the server again and Safari is not. Have you tried adding a page expiry/no cache header? I was going to look into it when I discovered the behaviour but haven't had time yet.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>@Autodidact: It's definitely not a stupid question, any time when the behaviour of webkit differs from both IE and Firefox is a bug a should be filed at <a href=\"http://bugs.webkit.org\"><a href=\"http://bugs.webkit.org\">http://bugs.webkit.org</a></a> (I would file it myself, but then i'd be the one who had to confirm the fix, rather than you, which would be rather silly given you're the person experiencing this bug :D)\n[Edit: I just realised that your example will be in the back/forward cache -- the onload won't fire again as the entire JS state will be stored, it seems unlikely in this case that that is causing a bug, so when you file a bug report, if at all possible you should try to include the code or the url that fails]</p>\n\n<p>@Teifon: Um, Apple engineers do almost all of the active development on WebKit (WebKit is a MacOS system framework after all, and apple started the project (as a fork of khtml, but they are now substantially diverged)), non-apple developers focus almost entirely on their respective back and front ends (eg. gtk, qt, wx)  -- if you look at <a href=\"http://trac.webkit.org\"><a href=\"http://trac.webkit.org/\">http://trac.webkit.org/</a></a> you can see that fairly clearly the majority of dev work is from apple -- and the most active irc-ers are apple engineers, so i'm really not sure how you've come to the conclusion that webkit is somehow community minded when apple is not :D (Sorry for long reply, I'm just tired of seeing this particular misconception repeated :-/ )</p>\n\n<p>[Edit: @Stefan Koenig I believe that any place where the caching behaviour differs from IE and Firefox in a way that actually breaks a site is a bug]</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>An iframe solves the problem:</p>\n\n<pre><code>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;\n&lt;html&gt;\n&lt;head&gt;&lt;title&gt;Safari Back Button Test&lt;/title&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\"&gt;\n&lt;/head&gt;\n&lt;body onload=\"alert('Hello');\"&gt;\n&lt;a href=\"http://www.codinghorror.com\"&gt;Coding Horror&lt;/a&gt;\n&lt;iframe style=\"height:0px;width:0px;visibility:hidden\" src=\"about:blank\"&gt;\nthis prevents back forward cache\n&lt;/iframe&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>more <a href=\"http://developer.apple.com/internet/safari/faq.html#anchor5\">details</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Stefan's iframe solution works, but if that's not elegant enough, I find the following JavaScript also solves it:</p>\n\n<pre><code>window.onunload = function(){};\n</code></pre>\n\n<p>That is, if your menu is JavaScript, then you might prefer to solve this issue with JavaScript too.</p>\n\n<p>The unload event handler definition idea came from this Firefox 1.5 article: <a href=\"https://developer.mozilla.org/en/Using_Firefox_1.5_caching\">https://developer.mozilla.org/en/Using_Firefox_1.5_caching</a>.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>I know this thread is a year old, but I just fixed an identical Safari-only problem using ProjectSeven's Safari backbutton fix. Works like a charm.</p>\n\n<p><a href=\"http://www.projectseven.com/extensions/info/safaribbfix/index.htm\" rel=\"nofollow\">http://www.projectseven.com/extensions/info/safaribbfix/index.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just put this in body tag\n<code>&lt;body onunload=\"\"&gt;</code></p>\n\n<p>this will force safari, chrome, FF reload every time you hit Back button</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here is a good solution for Mobile Safari:</p>\n\n<pre><code>/*! Reloads page on every visit */\nfunction Reload() {\n    try {\n        var headElement = document.getElementsByTagName(\"head\")[0];\n        if (headElement &amp;&amp; headElement.innerHTML)\n            headElement.innerHTML += \" \";\n        } catch (e) {}\n    }\n\n    /*! Reloads on every visit in mobile safari */\n    if ((/iphone|ipod|ipad.*os 5/gi).test(navigator.appVersion)) {\n        window.onpageshow = function(evt) {\n            if (evt.persisted) {\n                document.body.style.display = \"none\";\n                location.reload();\n            }\n        };\n    }\n</code></pre>\n\n<p>(<a href=\"https://coderwall.com/p/ndecha\">source</a>)</p>\n\n<p>I modified it to my needs, but as is it is okay. (annoying white screen on refresh if you dont modify it).</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Had the same problem on iPad.</p>\n\n<p>Not that beautiful but it works :). How it works.</p>\n\n<p>I realised that on iPad Safari, the page was not reloaded when the back button was pressed. I put a counter every second on the page and I save the current timestamp.</p>\n\n<p>When the page is loaded the counter and time are synchronized. On back button, counter continue where it stopped and there is a gap between timestamp and counter. If the gap is grater than 500ms, force reload the page.</p>\n\n<p>In the file action.js</p>\n\n<pre><code>var showLoadingBoxSetIntervalVar;\nvar showLoadingBoxCount = 0;\nvar showLoadingBoxLoadedTimestamp = 0\n\nfunction showLoadingBox(text) {\n\n    var showLoadingBoxSetIntervalVar=self.setInterval(function(){showLoadingBoxIpadRelaod()},1000);\n    showLoadingBoxCount = 0\n    showLoadingBoxLoadedTimestamp = new Date().getTime();\n\n    //Here load the spinner\n\n}\n\nfunction showLoadingBoxIpadRelaod()\n{\n    //Calculate difference between now and page loaded time minus threshold 500ms\n    var diffTime = ( (new Date().getTime()) - showLoadingBoxLoadedTimestamp - 500)/1000;\n\n    showLoadingBoxCount = showLoadingBoxCount + 1;\n    var isiPad = navigator.userAgent.match(/iPad/i) != null;\n\n    if(diffTime &gt; showLoadingBoxCount &amp;&amp; isiPad){\n        location.reload();\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Please do not follow any of the advice that tells you to ignore the cache.  Pages are cached for a reason -- to improve user experience.  The methods you're using will make user experience worse, so unless you hate your users, don't do that.</p>\n\n<p>The correct solution for Safari (Desktop and iOS) is to use the <code>pageshow</code> event instead of the <code>onload</code> event (See <a href=\"https://developer.mozilla.org/en-US/docs/Using_Firefox_1.5_caching\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Using_Firefox_1.5_caching</a> for what these are).</p>\n\n<p>The <code>pageshow</code> event will fire at the same time you expect the <code>onload</code> event to fire, but it will also work when pages are served via the cache.  This appears to be what you want anyway.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I do some minor programming and web work for a local community college. Work that includes maintaining a very large and soul destroying website that consists of a hodge podge of VBScript, javascript, Dreamweaver generated cruft and a collection of add-ons that various conmen have convinced them to buy over the years. </p>\n\n<p>A few days ago I got a call \"The website is locking up for people using Safari!\" Okay, step one download Safari(v3.1.2), step two surf to the site. Everything appears to work fine.</p>\n\n<p>Long story short I finally isolated the problem and it relates to Safari's back button. The website uses a fancy-pants javascript menu that works in every browser I've tried including Safari, the first time around. But in Safari if you follow a link off the page and then hit the back button the menu no longer works.</p>\n\n<p>I made a pared down webpage to illustrate the principle.</p>\n\n<pre><code>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;\n&lt;html&gt;\n&lt;head&gt;&lt;title&gt;Safari Back Button Test&lt;/title&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\"&gt;\n&lt;/head&gt;\n&lt;body onload=\"alert('Hello');\"&gt;\n&lt;a href=\"http://www.codinghorror.com\"&gt;Coding Horror&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Load the page and you see the alert box. Then follow the link off the page and hit the back button. In IE and Firefox you see the alert box again, in Safari you do not.</p>\n\n<p>After a vigorous googling I've discovered others with similar problems but no really satisfactory answers. So my question is how can I make my pages work the same way in Safari after the user hits the back button as they do in other browsers?</p>\n\n<p>If this is a stupid question please be gentle, javascript is somewhat new to me.</p>\n",
            "last_activity_date": 1384294694,
            "question_id": 24046,
            "score": 30,
            "tags": [
                "javascript",
                "safari"
            ],
            "title": "The Safari Back Button Problem"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Depending on what your requirements are, you may get off easily by using Gears. Gears supports threads, which could do what you want.</p>\n\n<p>As you mentioned, setTimeout is the other option. Depending on the type of your task, you can hand off each iteration of a loop to a separate setTimeout call with some spacing in between, or you may need to separate pieces of your main algorithm into separate functions which can be called one by one in a same manner as you'd call each iteration.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>My strongest recommendation is to display a simple loading.gif during the operation. User often accepts some duration if they have been \"told\" that it could take some time.</p>\n\n<p><a href=\"http://www.ajaxload.info\" rel=\"nofollow\">Ajaxload - Ajax loading gif generator</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Basically, what you want to do is to divide the operation into pieces. So say you have 10 000 items you want to process, store them in a list and then process a small number of them with a small delay between each call. Here's a simple structure you could use:</p>\n\n<pre><code>function performTask(items, numToProcess, processItem) {\n    var pos = 0;\n    // This is run once for every numToProcess items.\n    function iteration() {\n        // Calculate last position.\n        var j = Math.min(pos + numToProcess, items.length);\n        // Start at current position and loop to last position.\n        for (var i = pos; i &lt; j; i++) {\n            processItem(items, i);\n        }\n        // Increment current position.\n        pos += numToProcess;\n        // Only continue if there are more items to process.\n        if (pos &lt; items.length)\n            setTimeout(iteration, 10); // Wait 10 ms to let the UI update.\n    }\n    iteration();\n}\n\nperformTask(\n    // A set of items.\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o'],\n    // Process two items every iteration.\n    2,\n    // Function that will do stuff to the items. Called once for every item. Gets\n    // the array with items and the index of the current item (to prevent copying\n    // values around which is unnecessary.)\n    function (items, index) {\n        // Do stuff with items[index]\n        // This could also be inline in iteration for better performance.\n    });\n</code></pre>\n\n<p>Also note that <a href=\"http://code.google.com/apis/gears/api%5Fworkerpool.html\">Google Gears has support to do work on a separate thread</a>. Firefox 3.5 also introduced <a href=\"https://developer.mozilla.org/En/Using%5Fweb%5Fworkers\">its own workers that do the same thing</a> (although they follow <a href=\"http://www.w3.org/TR/workers/\">the W3 standard</a>, while Google Gears uses its own methods.)</p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>This is a very basic example of how to create threads in JavaScript.\nNote that is is up to you to interrupt your thread functions (yeld instruction). If you want, you can use a setTimeout instead of my <em>while</em> loop to run the scheduler periodically.\nNote also that this example only works with JavaScript version 1.7+ (firefox 3+)\nyou can try it here: <a href=\"http://jslibs.googlecode.com/svn/trunk/jseval.html\" rel=\"nofollow\">http://jslibs.googlecode.com/svn/trunk/jseval.html</a></p>\n\n<pre><code>//// thread definition\nfunction Thread( name ) {\n\n    for ( var i = 0; i &lt; 5; i++ ) {\n\n        Print(i+' ('+name+')');\n        yield;\n    }\n}\n\n//// thread management\nvar threads = [];\n\n// thread creation\nthreads.push( new Thread('foo') );\nthreads.push( new Thread('bar') );\n\n// scheduler\nwhile (threads.length) {\n\n    var thread = threads.shift();\n    try {\n        thread.next();\n        threads.push(thread);\n    } catch(ex if ex instanceof StopIteration) { }\n}\n</code></pre>\n\n<p>The output is:</p>\n\n<pre><code>0 (foo) 0 (bar) 1 (foo) 1 (bar) 2 (foo) 2 (bar) 3 (foo) 3 (bar) 4 (foo) 4 (bar)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you can enforce the browser to be used, or you otherwise already know it to be a new version of Firefox, you could use the new <a href=\"https://developer.mozilla.org/En/Using%5Fweb%5Fworkers\" rel=\"nofollow\">WebWorkers</a> from Mozilla. It allows you to spawn new threads.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I had a similar problem to solve recently where i needed to keep my UI thread free while crunching some data to display. </p>\n\n<p>I wrote a library Background.js to handle a few scenarios: a sequential background queue (based on the WorkerQueue library), a list of jobs where each is called on every timer, and an array iterator to help break up your work into smaller chunks. Examples and code here: <a href=\"https://github.com/kmalakoff/background\">https://github.com/kmalakoff/background</a></p>\n\n<p>Enjoy!</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Great answer Kevin!  I wrote something similar a few years back, though less sophisticated.  Source code is here if anyone wants it:</p>\n\n<p><a href=\"http://www.leapbeyond.com/ric/jsUtils/TaskQueue.js\" rel=\"nofollow\">http://www.leapbeyond.com/ric/jsUtils/TaskQueue.js</a></p>\n\n<p>Anything with a <code>run()</code> method can be queued as a task.  Tasks can re-queue themselves to perform work in chunks.  You can prioritize tasks, add/remove them at will, pause / resume the entire queue, etc.  Works well with asynchronous operations - my original use for this was to manage several concurrent XMLHttpRequests.</p>\n\n<p>Basic usage is pretty simple:</p>\n\n<pre><code>var taskQueue = new TaskQueue();\ntaskQueue.schedule(\"alert('hello there')\");\n</code></pre>\n\n<p>The header comments in the .js file provide more advanced examples.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Seems this problem has been solved in node itself.\n<br />require child_process which is included in nodejs 0.10.4</p>\n\n<p>Regards,\nChris</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is my solution to the problem, in case someone wants simple copy-pasteable piece of code:</p>\n\n<pre><code>    var iterate = function (from, to, action, complete) {\n        var i = from;\n        var impl = function () {\n            action(i);\n            i++;\n            if (i &lt; to) setTimeout(impl, 1);\n            else complete();\n        };\n        impl();\n    };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a cpu intensive task that I need to run on the client.   Ideally, I'd like to be able to invoke the function and trigger progress events using jquery so I can update the UI.  </p>\n\n<p>I know javascript does not support threading, but I've seen a few promising articles trying to mimic threading using setTimeout.  </p>\n\n<p>What is the best approach to use for this?  Thanks.</p>\n",
            "last_activity_date": 1400664400,
            "question_id": 1160137,
            "score": 27,
            "tags": [
                "javascript",
                "multithreading"
            ],
            "title": "Execute Background Task In Javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Generally use the <a href=\"http://www.w3schools.com/jsref/jsref_prototype_math.asp\">prototype</a> property:</p>\n\n<pre><code>function YourObject()\n{\n    //\n}\n\nYourObject.prototype.yourMethod= function()\n{\n   //\n}\n</code></pre>\n\n<p>One thing I haven't seen anyone mention yet is why you might want to use the <code>prototype</code> property over, say, object-literal notation:  doing so ensures the function definition gets shared across all instances of the objects created from your function prototype, rather than once per instantiation.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<pre><code>var newObj = {\n    met1 : function () {\n        alert('hello');\n    }\n}\n</code></pre>\n\n<p>Then, the method can be called like such : </p>\n\n<pre><code>newObj.met1();\n</code></pre>\n\n<p>Btw, when declaring a new object, use the object literal (<code>{}</code>), not the <code>new Object()</code> constructor.</p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>You can see from the answers that you have already that there is more than one way.  </p>\n\n<pre><code>#1\nvar o = new Object();\no.method = function(){}\n\n#2\nvar o = new Object();\no.prototype.method = function(){}\n\n#3\nfunction myObject() {\n    this.method = function(){}\n}\nvar o = new myObject();\n\n#4\nfunction myObject() {}\nmyObject.prototype.method = function(){}\nvar o = new myObject();\n\n#5\nvar o = {\n    method: function(){}\n}\n</code></pre>\n\n<p>#3 and #4 are using a constructor function. this means you can use them to create a number of objects of the same 'class' (classes don't really exist in JavaScript)</p>\n\n<p>#4 is different to #3 because all objects constructed with #4 will share an identical 'method' method because it is a property of their prototype. This saves memory (but only a very tiny amount) and if you change the method of the prototype, all #4 objects will immediately be updated - even if they've already been instantiated. </p>\n\n<p>#1, #2 and #5 are all pretty much equivalent. This is because there will probably only ever be one of them at a time, so the fact that #2 has the method added to the prototype doesn't really matter. (not taking cloning into account)  </p>\n\n<p>There are still more ways of adding methods to objects using factories with closure or adding 'static' properties/methods to functions or private nested functions... :)</p>\n",
                    "is_accepted": false,
                    "score": 61
                },
                {
                    "body": "<pre><code>\nFunction.prototype.implement = function(member, value) {\n   this[member] = value;\n   return this;\n}\n\nfunction MyFunction() {\n //...\n}\n\n(function($){\n\n $.implement(\"a\", \"blabla\")\n .implement(\"b\", function(){ /* some function */ })\n .implement(\"c\" {a:'', b:''});\n\n})(MyFunction);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Don't worry bro, here the code is:</p>\n\n<pre><code>  var myObj=function(){\n      var value=null\n\n     this.setValue=function(strValue){\n\n     this.value=strValue;\n     };\n\n     this.getValue=function(){\n     return this.value;\n     };    \n};\n</code></pre>\n\n<p>You can call this object like this:</p>\n\n<pre><code>    var obj= new myObj();\n    obj.setValue(\"Hi!\");\n    alert(obj.getValue());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is it like...</p>\n\n<pre><code>var obj = new Object();\n\nobj.function1 = function(){\n    //code\n}\n</code></pre>\n\n<p>or something like that?</p>\n",
            "last_activity_date": 1382521158,
            "question_id": 504803,
            "score": 26,
            "tags": [
                "javascript",
                "object",
                "methods"
            ],
            "title": "How do you create a method for a custom object in JavaScript?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Store the time-zone in the table, and use it in a calculation to find that users local time in comparison to the local time of the user viewing the page.</p>\n\n<p><strong>Edit:</strong></p>\n\n<p>Better yet, store all times as the server time, and base all calculations relative only to the server time.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It sounds like your \"is the person online\" comparison logic isn't taking into account the timezones.  If you are dealing with timezones in this manner, I strongly recommend that you store all your times in GMT, and convert them to local time for your users right before you display them.  This will make any comparison operations very simple.</p>\n\n<p>There's a nice SO thread about timezones <a href=\"http://stackoverflow.com/questions/11975/handling-timezones-in-storage\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Don't bother with figuring out the differences between timezones. That's not necessary.</p>\n\n<p>Whenever the user accesses a page, update a field in their record of the Users table last-updated-time. Then do a query for all users having a last-updated-time within the last 5 minutes. Anything more than this, and they are considered \"offline.\"</p>\n\n<p>If you use your server-time, via the NOW() function in MySQL, you'll side-step calculating differences between timezones.</p>\n\n<p>This is the standard way of tracking how many users are presently online (Meaning, active within the last couple of minutes).</p>\n\n<h3>Constantly Updated</h3>\n\n<p>If you would like to know they are still active even when they're not jumping from page to page, include a bit of javascript to ping your server every 60 seconds or so to let you know they are still alive. It'll work the same way as my original suggestion, but it will update your records without requiring them to be frantically browsing your site at least once every five minutes.</p>\n\n<pre><code>var stillAlive = setInterval(function () {\n    /* XHR back to server\n       Example uses jQuery */\n    $.get(\"stillAlive.php\");\n}, 60000);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>Depends on your situation, it may be better for you to create a separate table \"whose-online\" with the columns: \"ip\" and \"last-updated-time\" and query/update this table every time a user loads a page.</p>\n\n<p><strong>On page load queries may include</strong>:</p>\n\n<ol>\n<li>Update/insert \"whose-online\" table for current user based on ip.</li>\n<li>Delete \"expired\" rows (can also be done periodically using cronjob).</li>\n<li>Count \"active\" users.</li>\n</ol>\n\n<p><strong>Benefits of using this technique</strong>:</p>\n\n<ol>\n<li>If a user is not logged in, he/she is still being counted/tracked.</li>\n<li>Depends on the amount of users you have, querying this table may be quicker.</li>\n</ol>\n\n<p>Note: If you use this you should want to take into consideration that any pageview will create a row in your table so based on useragent you can disregard bots or only count the popular ones (Firefox, IE, Safari, Opera, etc).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>What you are asking for (after the clarification) is, by definition, impossible.  HTTP is a connectionless protocol, so as soon as a user has hit a page and all the content comes back from the server to the user's browser, there is no connection between the two.  Someone is \"online\" with your website for less than a second.  </p>\n\n<p>One thing you <em>could</em> do is to have JavaScript on your web page make AJAX requests back to your server on a regular basis which includes identifying information, and a different AJAX request when the user leaves the page, using <strong>window.onbeforeunload</strong>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>One thing I would advise is to store this kind of information in memory with for example memcached or mysql heap or redis. Because otherwise the database will be hit a lot.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The solution that I have implemented for this is to, on every page load by an authenticated user, set/reset a memcache var such as \"user_{userid}<em>isonline\" => true and expire it in 5 minutes. Then check if the var is in the cache when I access the user's info.  Depending on the size of your user base, if you want to get a list of everyone online, you could use a memcache getmulti call with an array of \"user</em>{userid}_isonline\" keys for all of your users.</p>\n\n<p>of course, this really depends on how often a user will change pages on your site... to get a more accurate representation of the users online, you could implement an ajax xmlhttprequest call on your page running at a small interval (30 seconds or so) that resets the memcache var, and have the memcache var expire in less time (1 minute to account for possible browser issues).  This is not COMPLETELY accurate, but as http does not have a persistent connection to the server, you are pretty limited on what you can do.</p>\n\n<p>IF you require an up to the second representation of who is online, you could maybe have a flash app loaded in your page that connects to a jabber server, then just check if that particular user is logged in on the server.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>My way may not be the best way but since my site and userbase is all in mysql DB, when a user logins into my site, </p>\n\n<ol>\n<li>I update the user table to say they\nare online</li>\n<li>Insert them into an Online table</li>\n<li>Then I set a session with the\ncurrent time</li>\n</ol>\n\n<p>Then on every page load I check for the online time session, if it exist, I check to see how old it is, if it is less then 5 minutes old, I do nothing, if it is older then 5 minutes, then I update the session time again with current time and also update the online users table with the time</p>\n\n<p>Then I have a cron job that runs every 10 - 15 minutes that deletes any uses from online table and marks there user table as offline if there online time has updated within X amount of minutes</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is there a way I can piggy back sessions to know is the user is online?</p>\n\n<p>I.e: use logs on, I set a $_SESSION variable, user times out- cookie Garbage collector updates the database to update their status as offline.</p>\n\n<p><code>EDIT:</code> I want a solution that does not involve times or dates.  I want something to ride on sessions or something similar.  Guessing if someone is online is not good enough for what I need.</p>\n",
            "last_activity_date": 1387628638,
            "question_id": 1051895,
            "score": 13,
            "tags": [
                "php",
                "javascript",
                "mysql",
                "offline"
            ],
            "title": "Whats the easiest way to determine is a user in online? (PHP/MYSQL)"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<pre><code>&gt; \"Hello world!\".split('')\n[\"H\", \"e\", \"l\", \"l\", \"o\", \" \", \"w\", \"o\", \"r\", \"l\", \"d\", \"!\"]\n</code></pre>\n\n<p>Just split it by an empty string.</p>\n",
                    "is_accepted": true,
                    "score": 146
                },
                {
                    "body": "<p>It already is:</p>\n\n<pre><code>var mystring = 'foobar';\n\nconsole.log(mystring[0]); // Outputs 'f'\nconsole.log(mystring[3]); // Outputs 'b'\n</code></pre>\n\n<p>Or for a more older browser friendly version, use:</p>\n\n<pre><code>console.log(mystring.charAt(3)); // Outputs 'b'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you don't want to use <strong>split()</strong> you can also try this:</p>\n\n<pre><code>var myString = \"Hello world!\";\nvar myArray = new Array();\nfor (var i=0; i &lt; myString.length; i++){\n     myArray.push(myString[i]);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You do not need to do anything. It is already array of char.</p>\n",
                    "is_accepted": false,
                    "score": -3
                }
            ],
            "body": "<p>How do you get a string to a character array in JavaScript?</p>\n\n<p>I'm thinking getting a string like <code>\"Hello world!\"</code> to the array <code>['H','e','l','l','o',' ','w','o','r','l','d']</code></p>\n",
            "last_activity_date": 1400711448,
            "question_id": 4547609,
            "score": 75,
            "tags": [
                "javascript",
                "arrays",
                "string",
                "character-arrays"
            ],
            "title": "How do you get a string to a character array in JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Try using</p>\n\n<pre><code>img.style.webkitTransform = \"rotate(60deg)\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>The JavaScript style names are <code>WebkitTransformOrigin</code> and <a href=\"http://developer.apple.com/safari/library/documentation/AppleApplications/Reference/SafariJSRef/WebKitCSSTransformValue/WebKitCSSTransformValue.html\"><code>WebkitTransform</code></a></p>\n\n<pre><code>element.style.webkitTransform = \"rotate(-2deg)\";\n</code></pre>\n\n<p>Check the dom extension reference for Webkit <a href=\"http://developer.apple.com/safari/library/documentation/AppleApplications/Reference/SafariJSRef/index.html#//apple%5Fref/doc/uid/TP40001482\">here.</a></p>\n",
                    "is_accepted": true,
                    "score": 117
                },
                {
                    "body": "<p>Here are the js notations for most common vendors:</p>\n\n<pre><code>webkitProperty\nMozProperty\nmsProperty\nOProperty\nproperty\n</code></pre>\n\n<p>I reset inline transform styles like:</p>\n\n<pre><code>element.style.webkitTransform = \"\";\nelement.style.MozTransform = \"\";\nelement.style.msTransform = \"\";\nelement.style.OTransform = \"\";\nelement.style.transform = \"\";\n</code></pre>\n\n<p>and like this using jQuery:</p>\n\n<pre><code>$(element).css({\n    \"webkitTransform\":\"\",\n    \"MozTransform\":\"\",\n    \"msTransform\":\"\",\n    \"OTransform\":\"\",\n    \"transform\":\"\"\n});\n</code></pre>\n\n<p><a href=\"http://www.developerdrive.com/2012/03/coding-vendor-prefixes-with-javascript/\">http://www.developerdrive.com/2012/03/coding-vendor-prefixes-with-javascript/</a></p>\n",
                    "is_accepted": false,
                    "score": 43
                }
            ],
            "body": "<p>I want to change the <strong><em>-webkit-transform: rotate()</em></strong> property using Javascript dynamically. But the commonly used setAttribute is not working:</p>\n\n<pre><code>img.setAttribute('-webkit-transform', 'rotate(60deg)');\n</code></pre>\n\n<p>The <strong><em>.style</em></strong> is not working either..</p>\n\n<p>How can I set this dynamically in Javascript? I know some of you have experience dealing with this before.</p>\n\n<p>-</p>\n\n<p>Thanks to all the guys that helped me out!</p>\n",
            "last_activity_date": 1394989828,
            "question_id": 708895,
            "score": 57,
            "tags": [
                "javascript",
                "webkit"
            ],
            "title": "How to set the style -webkit-transform dynamically using Javascript?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><a href=\"http://help.dottoro.com/ljcadejj.php\">clientHeight</a>:</p>\n\n<blockquote>\n  <p>Returns the height of the visible area for an object, in pixels. The value contains the height with the padding, but it does not include the scrollBar, border, and the margin.</p>\n</blockquote>\n\n<p><a href=\"http://help.dottoro.com/ljuxqbfx.php\">offsetHeight</a>:</p>\n\n<blockquote>\n  <p>Returns the height of the visible area for an object, in pixels. The value contains the height with the padding, scrollBar, and the border, but does not include the margin.</p>\n</blockquote>\n\n<p>So, <code>offsetHeight</code> includes scrollbar and border, <code>clientHeight</code> doesn't.</p>\n",
                    "is_accepted": false,
                    "score": 80
                }
            ],
            "body": "<p>In the javascript dom  - what is the difference between offsetHeight and clientHeight of an element?</p>\n",
            "last_activity_date": 1421829877,
            "question_id": 4106538,
            "score": 56,
            "tags": [
                "javascript"
            ],
            "title": "difference between offsetHeight and clientHeight"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You have 2 options :</p>\n\n<ol>\n<li><p>Create a third method that wrap both methods. Advantage here is that you are putting less logic in your template.</p></li>\n<li><p>Otherwise if you really want to add 2 calls in ng-click you can add ';' after <code>edit($index)</code> like this</p>\n\n<p><code>ng-click=\"edit($index); open()\"</code></p></li>\n</ol>\n\n<p>See here : <a href=\"http://jsfiddle.net/laguiz/ehTy6/\">http://jsfiddle.net/laguiz/ehTy6/</a></p>\n",
                    "is_accepted": true,
                    "score": 126
                }
            ],
            "body": "<p>Ive be looking for how to execute this but I can't find anything related so far, :( \nI could nest both functions yes but Im just wondering if this is possible?\nI'd like to do this literally:</p>\n\n<pre><code>&lt;td&gt;&lt;button class=\"btn\" ng-click=\"edit($index) open()\"&gt;Open me!&lt;/button&gt;&lt;/td&gt;\n</code></pre>\n\n<p>My JS code at the moment:</p>\n\n<pre><code>$scope.open = function () {\n  $scope.shouldBeOpen = true;\n};      \n\n$scope.edit = function(index){\n\n  var content_1, content_2;\n      content_1 = $scope.people[index].name;\n      content_2 = $scope.people[index].age;\n\n  console.log(content_1);\n};\n</code></pre>\n\n<p>I'd like to call two functions with just one click, how can I do this in angularJS?\nI thought it'd be straight forward like in CSS when you add multiple classes...but it's not :(</p>\n\n<p>Thanks for yr time</p>\n",
            "last_activity_date": 1388514628,
            "question_id": 16813945,
            "score": 50,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "How to add many functions in ONE ng-click?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>It means that once you instantiate the object, you can't change its properties.  In your first alert you aren't changing foo.  You're creating a new string.  This is why in your second alert it will show \"foo\" instead of oo.</p>\n\n<blockquote>\n  <p>Does it mean, when calling methods on\n  a string, it will return the modified\n  string, but it won't change the\n  initial string?</p>\n</blockquote>\n\n<p>Yes.  Nothing can change the string once it is created.  Now this doesn't mean that you can't assign a new string object to the <code>str</code> variable.  You just can't change the current object that str references.</p>\n\n<blockquote>\n  <p>If the string was mutable, does that\n  mean the 2nd alert() would return oo\n  as well?</p>\n</blockquote>\n\n<p>Technically, no, because the substring method returns a new string.  Making an object mutable, wouldn't change the method.  Making it mutable means that technically, you could make it so that substring would change the original string instead of creating a new one.</p>\n",
                    "is_accepted": true,
                    "score": 50
                },
                {
                    "body": "<p>Immutable means that which cannot be changed or modified. </p>\n\n<p>So when you assign a value to a string, this value is created from scratch as opposed to being replaced. So everytime a new value is assigned to the same string, a copy is created. So in reality, you are never changing the original value.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>From strings to stacks... a simple to understand example taken from <a href=\"http://blogs.msdn.com/b/ericlippert/\" rel=\"nofollow\">Eric Lippert's blog</a>:</p>\n\n<p><a href=\"http://blogs.msdn.com/b/ericlippert/archive/2007/10/04/path-finding-using-a-in-c-3-0-part-two.aspx\" rel=\"nofollow\">Path Finding Using A* in C# 3.0, Part Two</a>...</p>\n\n<blockquote>\n  <p>A mutable stack like System.Collections.Generic.Stack \n  is clearly not suitable. We want to be\n  able to take an existing path and\n  create new paths from it for all of\n  the neighbours of its last element,\n  but pushing a new node onto the\n  standard stack modifies the stack.\n  We\u2019d have to make copies of the stack\n  before pushing it, which is silly\n  because then we\u2019d be duplicating all\n  of its contents unnecessarily.</p>\n  \n  <p>Immutable stacks do not have this problem. Pushing onto an immutable\n  stack merely creates a brand-new stack\n  which links to the old one as its\n  tail. Since the stack is immutable,\n  there is no danger of some other code\n  coming along and messing with the tail\n  contents. You can keep on using the\n  old stack to your heart\u2019s content.</p>\n</blockquote>\n\n<p>To go deep on understaning immutability, read Eric's posts starting with this one:</p>\n\n<p><a href=\"http://blogs.msdn.com/b/ericlippert/archive/2007/11/13/immutability-in-c-part-one-kinds-of-immutability.aspx\" rel=\"nofollow\">Immutability in C# Part One: Kinds of Immutability</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>On a lower level, immutability means that the memory the string is stored in will not be modified. Once you create a string <code>\"foo\"</code>, some memory is allocated to store the value <code>\"foo\"</code>. This memory will not be altered. If you modify the string with, say, <code>substr(1)</code>, a new string is created and a different part of memory is allocated which will store <code>\"oo\"</code>. Now you have two strings in memory, <code>\"foo\"</code> and <code>\"oo\"</code>. Even if you're not going to use <code>\"foo\"</code> anymore, it'll stick around until it's garbage collected.</p>\n\n<p>One reason why string operations are comparatively expensive.</p>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>I'm not certain about JavaScript, but in Java, strings take an additional step to immutability, with the \"String Constant Pool\". Strings can be constructed with string literals (<code>\"foo\"</code>) or with a <code>String</code> class constructor. Strings constructed with string literals are a part of the String Constant Pool, and the same string literal will always be the same memory address from the pool.</p>\n\n<p>Example:</p>\n\n<pre><code>    String lit1 = \"foo\";\n    String lit2 = \"foo\";\n    String cons = new String(\"foo\");\n\n    System.out.println(lit1 == lit2);      // true\n    System.out.println(lit1 == cons);      // false\n\n    System.out.println(lit1.equals(cons)); // true\n</code></pre>\n\n<p>In the above, both <code>lit1</code> and <code>lit2</code> are constructed using the same string literal, so they're pointing at the same memory address; <code>lit1 == lit2</code> results in <code>true</code>, because they are exactly the same object.</p>\n\n<p>However, <code>cons</code> is constructed using the class constructor. Although the parameter is the same string constant, the constructor allocates new memory for <code>cons</code>, meaning <code>cons</code> is not the same object as <code>lit1</code> and <code>lit2</code>, despite containing the same data.</p>\n\n<p>Of course, since the three strings all contain the same character data, using the <code>equals</code> method will return true.</p>\n\n<p>(Both types of string construction are immutable, of course)</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Immutable means the value can not be changed. Once created a string object can not be modified as its immutable. If you request a substring of a string a new String with the requested part is created.</p>\n\n<p>Using StringBuffer while manipulating Strings instead makes the operation more efficient as StringBuffer stores the string in a character array with variables to hold the capacity of the character array and the length of the array(String in a char array form)</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>If a string is immutable, does that mean that....\n(let's assume JavaScript)</p>\n\n<pre><code>var str = 'foo';\n\nalert(str.substr(1)); // oo\n\nalert(str); // foo\n</code></pre>\n\n<p>Does it mean, when calling methods on a string, it will return the modified string, but it won't change the initial string?</p>\n\n<p>If the string was mutable, does that mean the 2nd <code>alert()</code> would return <code>oo</code> as well?</p>\n",
            "last_activity_date": 1425090189,
            "question_id": 3200211,
            "score": 37,
            "tags": [
                "javascript",
                "variables",
                "immutability"
            ],
            "title": "What does immutable mean?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>[Updated to fix mistake]</p>\n\n<p>Here is an example that is adapted from this answer that appears to work well in Chrome - <a href=\"http://stackoverflow.com/questions/3771824/select-range-in-contenteditable-div\">Select range in contenteditable div</a></p>\n\n<pre><code>var elm = document.getElementById(\"myText\"),\n    fc = elm.firstChild,\n    ec = elm.lastChild,\n    range = document.createRange(),\n    sel;\nelm.focus();\nrange.setStart(fc,1);\nrange.setEnd(ec,3);\nsel = window.getSelection();\nsel.removeAllRanges();\nsel.addRange(range);\n</code></pre>\n\n<p>HTML is:</p>\n\n<pre><code>&lt;div id=\"myText\" contenteditable&gt;test&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>contenteditable</code> is just an attribute, that is interpreted by browser. You can modify such elements with ordinary DOM functions.</p>\n\n<p>See <a href=\"http://www.webreference.com/js/column12/trmethods.html\" rel=\"nofollow\">javascript TextRanges</a>.</p>\n\n<p>Btw, quick search in SO, gave me <a href=\"http://www.google.com/search?q=javascript%20select%20in%20contenteditable\" rel=\"nofollow\">couple results</a>.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>If you want to select all the content of an element (contenteditable or not) in Chrome, here's how. This will also work in Firefox, Safari 3+, Opera 9+ (possibly earlier versions too) and IE 9. You can also create selections down to the character level. The APIs you need are DOM Range (current spec is <a href=\"http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html\">DOM Level 2</a>, see also <a href=\"https://developer.mozilla.org/En/DOM%3arange\">MDN</a>) and Selection, which is being specified as part of a <a href=\"http://html5.org/specs/dom-range.html\">new Range spec</a> (<a href=\"https://developer.mozilla.org/en/DOM/Selection\">MDN docs</a>).</p>\n\n<pre><code>function selectElementContents(el) {\n    var range = document.createRange();\n    range.selectNodeContents(el);\n    var sel = window.getSelection();\n    sel.removeAllRanges();\n    sel.addRange(range);\n}\n\nvar el = document.getElementById(\"foo\");\nselectElementContents(el);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 48
                },
                {
                    "body": "<p>In addition to <a href=\"http://stackoverflow.com/a/6150060/1250044\">Tim Downs answer</a>, i made a solution that work even in oldIE:</p>\n\n<pre><code>var selectText = function() {\n  var range, selection;\n  if (document.body.createTextRange) {\n    range = document.body.createTextRange();\n    range.moveToElementText(this);\n    range.select();\n  } else if (window.getSelection) {\n    selection = window.getSelection();\n    range = document.createRange();\n    range.selectNodeContents(this);\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n};\n\ndocument.getElementById(\"foo\").ondblclick = selectText;\u200b\n</code></pre>\n\n<p>Tested in IE 8+, Firefox 3+, Opera 9+, &amp; Chrome 2+. Even I've set it up into a jQuery plugin:</p>\n\n<pre><code>jQuery.fn.selectText = function() {\n  var range, selection;\n  return this.each(function() {\n    if (document.body.createTextRange) {\n      range = document.body.createTextRange();\n      range.moveToElementText(this);\n      range.select();\n    } else if (window.getSelection) {\n      selection = window.getSelection();\n      range = document.createRange();\n      range.selectNodeContents(this);\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  });\n};\n\n$('#foo').dblclick(function() {\n    $(this).selectText();\n});\n</code></pre>\n\n<p>...and who's intereseted in, here's the same for all coffee-junkies:</p>\n\n<pre><code>jQuery.fn.selectText = -&gt;\n  if document.body.createTextRange\n    range = document.body.createTextRange()\n    range.moveToElementText @[0]\n    range.select()\n  else if window.getSelection\n    selection = window.getSelection()\n    range = document.createRange()\n    range.selectNodeContents @[0]\n    selection.removeAllRanges()\n    selection.addRange range\n</code></pre>\n\n<p><strong>Update:</strong></p>\n\n<p>If you need to highlight the entire page or text in elements flagged with <code>contenteditable</code>, so you can do it much simpler:</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Rich-Text_Editing_in_Mozilla#Executing_Commands\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Rich-Text_Editing_in_Mozilla#Executing_Commands</a></p>\n\n<pre><code>var selectText = function () {\n    document.execCommand('selectAll', false, null);\n};\n</code></pre>\n\n<p>(works well in IE6+, Opera 9+, Firefoy 3+, Chrome 2+)</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>Rangy allows you to do this cross-browser with the same code. Rangy is a cross-browser implementation of the DOM methods for selections. It is well tested and makes this a lot less painful. I refuse to touch contenteditable without it.</p>\n\n<p>You can find rangy here:</p>\n\n<p><a href=\"http://code.google.com/p/rangy/\" rel=\"nofollow\">http://code.google.com/p/rangy/</a></p>\n\n<p>With rangy in your project, you can always write this, even if the browser is IE 8 or earlier and has a completely different native API for selections:</p>\n\n<pre><code>var range = rangy.createRange();\nrange.selectNodeContents(contentEditableNode);\nvar sel = rangy.getSelection();\nsel.removeAllRanges();\nsel.addRange(range);\n</code></pre>\n\n<p>Where \"contentEditableNode\" is the DOM node that has the contenteditable attribute. You might fetch it like this:</p>\n\n<pre><code>var contentEditable = document.getElementById('my-editable-thing');\n</code></pre>\n\n<p>Or if jQuery is part of your project already and you find it convenient:</p>\n\n<pre><code>var contentEditable = $('.some-selector')[0];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>In JavaScript, it's possible to programmatically select text in an <code>input</code> or <code>textarea</code> element. You can focus an input with <code>ipt.focus()</code>, and then select its contents with <a href=\"https://developer.mozilla.org/en/DOM/Input.select\"><code>ipt.select()</code></a>. You can even select a specific range with <a href=\"https://developer.mozilla.org/en/DOM/Input.setSelectionRange\"><code>ipt.setSelectionRange(from,to)</code></a>.</p>\n\n<p>My question is: is there any way to do this in a <code>contenteditable</code> element too? </p>\n\n<p>I found that I can do <code>elem.focus()</code>, to put the caret in a <code>contenteditable</code> element, but subsequently running <code>elem.select()</code> doesn't work (and nor does <code>setSelectionRange</code>). I can't find anything on the web about it, but maybe I'm searching for the wrong thing...</p>\n\n<p>By the way, if it makes any difference, I only need it to work in Google Chrome, as this is for a Chrome extension.</p>\n",
            "last_activity_date": 1418649857,
            "question_id": 6139107,
            "score": 34,
            "tags": [
                "javascript",
                "contenteditable"
            ],
            "title": "Programatically select text in a contenteditable HTML element?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Welcome to SO.</p>\n\n<p>One issue I saw in your code is that you're never actually displaying the iframe. In order for it to appear on the page, you have to insert it into your document.  In my example, I create a <code>&lt;span&gt;</code> tag to act as the slot where the iframe will get inserted.</p>\n\n<p>See if this does what you're looking for.</p>\n\n<pre><code>&lt;!-- http://stackoverflow.com/questions/2181385/ie-issue-submitting-form-to-an-iframe-using-javascript --&gt;\n\n&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction submitFormToIFrame(){\n    var form=document.getElementById('myform');\n    form.setAttribute('target', 'frame_x');\n    form.submit();\n}\n&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;h1&gt;Hello Erwin!&lt;/h1&gt;\n\n&lt;form id=\"myform\" name=\"myform\" action=\"result.html\"&gt;\n    &lt;input type=\"button\" value=\"Submit the Form\" onClick=\"submitFormToIFrame();\"&gt;\n&lt;/form&gt;\n\n\n&lt;span id=\"iframeSlot\"&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    var iframe = document.createElement('iframe');\n    iframe.setAttribute('name', 'frame_x');\n    document.getElementById('iframeSlot').appendChild(iframe);\n&lt;/script&gt;\n&lt;/span&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<hr>\n\n<p><strong>UPDATE:</strong></p>\n\n<p>I found that this solution is only working in Firefox.  So I did some experimenting.  It seems that if you define the iframe in the html (instead of generating it via JS/DOM) then it works.  Here is the version that works with IE and Firefox:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction submitFormToIFrame(){\n    //IE\n    if( document.myform ){\n        document.myform.setAttribute('target','frame_x');\n        document.myform.submit();\n    //FF\n    } else {\n        var form=document.getElementById('myform');\n        form.setAttribute('target', 'frame_x');\n        form.submit();\n    }\n}\n&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;h1&gt;Hello Erwin!&lt;/h1&gt;\n\n&lt;form id=\"myform\" name=\"myform\" action=\"result.html\" target=\"\"&gt;\n    &lt;input type=\"button\" value=\"Submit the Form\" onClick=\"submitFormToIFrame();\"&gt;\n&lt;/form&gt;\n\n&lt;span id=\"iframeSlot\"&gt;\n&lt;iframe name=\"frame_x\"&gt;\n&lt;/iframe&gt;\n&lt;/span&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You've hit a <strong><a href=\"http://webbugtrack.blogspot.com/2007/10/bug-235-createelement-is-broken-in-ie.html\">bug in Internet Explorer</a></strong>.</p>\n\n<p>You <strong>CAN NOT</strong> set the name attribute of <em>ANY</em> element in IE using the standard DOM Method <strong><em><code>.setAttribute('name', value);</code></em></strong></p>\n\n<p>In IE (before version 8 running in IE8 standards mode) this method will not work to set the name attribute.</p>\n\n<p>You need to use one of the following:</p>\n\n<pre><code>//A (any browser)\nvar iframe = document.createElement('iframe');\niframe.name = 'frame_x';\n\n//B (only in IE)\nvar iframe = document.createElement('&lt;iframe name=\"frame_x\"/&gt;');\n\n//C (use a JS library that fixes the bug (e.g. jQuery))\nvar iframe = $('&lt;iframe name=\"frame_x\"&gt;&lt;/iframe&gt;');\n\n//D (using jQuery to set the attribute on an existing element)\n$('iframe:first').attr('name','frame_x');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 66
                },
                {
                    "body": "<pre><code>function sendForm(idform){\n    var nfi = \"RunF\"+tagRandom();\n    $(\"body\").append(\"&lt;iframe name=\\\"\"+nfi+\"\\\" id=\\\"\"+nfi+\"\\\" class=\\\"runAgents\\\" src=\\\"#\\\"&gt;&lt;/iframe&gt;\");\n    $(\"#\"+idform).attr(\"target\",nfi);\n    $(\"#\"+idform).submit();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To continue @scunliffe\u2019s answer, if using Prototype.js:</p>\n\n<pre><code>var iframe = Element('iframe', {name: 'frame_x'});\n</code></pre>\n\n<p>which works because this helper function detects <code>HAS_EXTENDED_CREATE_ELEMENT_SYNTAX</code> for IE, working around the <code>.name = \u2026</code> bug.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I was trying to create an iframe element using javascript, like so:</p>\n\n<pre><code>var iframe = document.createElement('iframe');\niframe.setAttribute('name', 'frame_x');\n</code></pre>\n\n<p>However, when I tried submitting a form using the newly-created iframe as target, IE opens up a new window, instead of using the iframe. </p>\n\n<pre><code>form.setAttribute('target', 'frame_x');\nform.submit();\n</code></pre>\n\n<p>This works perfectly in Firefox. Also, the iframe gets created, but is not used.</p>\n",
            "last_activity_date": 1389119731,
            "question_id": 2181385,
            "score": 32,
            "tags": [
                "javascript",
                "forms",
                "iframe"
            ],
            "title": "IE Issue: Submitting form to an iframe using javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I think this link should get you started\n<a href=\"http://msdn.microsoft.com/en-us/library/7seh8d72.aspx\" rel=\"nofollow\">debugging in Visual studio 2012</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<ol>\n<li><p>In IE9 (only one time): Tools > Internet Options > Advanced tab > In Browsing category > Clear \"Disable script debugging\" check boxes (both) > restart IE.</p></li>\n<li><p>In VS 2012: Run the Page Inspector  ( when javascript error box opens, click No ! )</p></li>\n<li><p>Choose from VS menu: DEBUG > Attach to process...</p></li>\n<li><p>Select \"WebBrowserServer.exe\" and click Attach</p></li>\n<li><p>In Page Inspector window click the Refresh icon.</p></li>\n</ol>\n\n<p>Debugging works pretty well, but it's one condition. Don't insert any breakpoints in your code (or clear them before - DEBUG > Delete All Breakpoints). There can cause a lot of problems - from hanging and frozing to entirely crashing your VS.</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>Until this week, I was able to carry debugging of JavaScript in Visual Studio 2012 merely by entering \"debugger\" in the JavaScript function which acted as a breakpoint, and was able to step through the JavaScript code in the Visual Studio window just the same as the C# code.  I did this for the past 11 months until 1 week ago.  I made no changes to the default installed settings.</p>\n\n<p>This was the solution suggested in the Asp.Net Forums by Rion Williams. <a href=\"http://forums.asp.net/t/1984115.aspx?Debugging+Javascript+in+MVC\" rel=\"nofollow\">http://forums.asp.net/t/1984115.aspx?Debugging+Javascript+in+MVC</a>  And as stated it has allowed me to properly step through my code for the last 11 months.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Visual Studio 2012 comes with the very nice Page Inspector. I like it! Problem though, I haven't found how (if?) I can turn on JavaScript debugging. Could someone point me in the right direction?</p>\n",
            "last_activity_date": 1418395714,
            "question_id": 12197255,
            "score": 29,
            "tags": [
                "javascript",
                "visual-studio-2012",
                "visual-studio-debugging"
            ],
            "title": "Enable the javascript debugger in the Page Inspector"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Hiya this might help <strong>demo</strong>: <a href=\"http://jsfiddle.net/xXM2z/\" rel=\"nofollow\">JSFiddle</a> <strong>Updated</strong> <a href=\"http://jsfiddle.net/5w5ku/1/\" rel=\"nofollow\">Updated JSFiddle</a></p>\n\n<p>Please let me know if doesn't help I will remove the post. :)</p>\n\n<p>Also if you can provide jsfiddle I might take a look. Cheerios</p>\n\n<p><strong>EDIT</strong></p>\n\n<ul>\n<li>Class name changed from <code>bar</code> to <code>progress-bar</code> in v3.1.1</li>\n</ul>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>@import url('http://twitter.github.com/bootstrap/assets/css/bootstrap.css');\n\n.container {\n    margin-top: 30px;\n    width: 400px;\n}\u200b\n</code></pre>\n\n<p><strong>JQuery Code</strong> used in the fiddle below: and on the document.ready</p>\n\n<pre><code>$(document).ready(function(){\n\n    var progress = setInterval(function() {\n    var $bar = $('.bar');\n\n    if ($bar.width()&gt;=400) {\n        clearInterval(progress);\n        $('.progress').removeClass('active');\n    } else {\n        $bar.width($bar.width()+40);\n    }\n    $bar.text($bar.width()/4 + \"%\");\n}, 800);\n\n});\u200b\n</code></pre>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"progress progress-striped active\"&gt;\n        &lt;div class=\"bar\" style=\"width: 0%;\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\u200b\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 57
                },
                {
                    "body": "<p>While Tats_innit's answer has a nice touch to it, I had to do it a bit differently since I have more than one progress bar on the page.</p>\n\n<p>here's my solution:</p>\n\n<p>JSfiddle: <a href=\"http://jsfiddle.net/vacNJ/\">http://jsfiddle.net/vacNJ/</a></p>\n\n<p>HTML (example):</p>\n\n<pre><code>&lt;div class=\"progress progress-success\"&gt;\n&lt;div class=\"bar\" style=\"float: left; width: 0%; \" data-percentage=\"60\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n\n&lt;div class=\"progress progress-success\"&gt;\n&lt;div class=\"bar\" style=\"float: left; width: 0%; \" data-percentage=\"50\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n\n&lt;div class=\"progress progress-success\"&gt;\n&lt;div class=\"bar\" style=\"float: left; width: 0%; \" data-percentage=\"40\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>\u200b</p>\n\n<p>JavaScript:</p>\n\n<pre><code>setTimeout(function(){\n\n    $('.progress .bar').each(function() {\n        var me = $(this);\n        var perc = me.attr(\"data-percentage\");\n\n        var current_perc = 0;\n\n        var progress = setInterval(function() {\n            if (current_perc&gt;=perc) {\n                clearInterval(progress);\n            } else {\n                current_perc +=1;\n                me.css('width', (current_perc)+'%');\n            }\n\n            me.text((current_perc)+'%');\n\n        }, 50);\n\n    });\n\n},300);\n</code></pre>\n\n<p>@Tats_innit: Using setInterval() to dynamically recalc the progress is a nice solution, thx mate! ;)</p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>A friend of mine wrote a nice jquery plugin for custom twitter bootstrap progress bars.\nHere's a demo:\n<a href=\"http://minddust.github.com/bootstrap-progressbar/\">http://minddust.github.com/bootstrap-progressbar/</a></p>\n\n<p>Here's the Github repo:\n<a href=\"https://github.com/minddust/bootstrap-progressbar\">https://github.com/minddust/bootstrap-progressbar</a></p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>Bootstrap uses CSS3 transitions so progress bars are automatically animated when you set the width of .bar trough javascript / jQuery.</p>\n\n<p><a href=\"http://jsfiddle.net/3j5Je/\">http://jsfiddle.net/3j5Je/</a> ..see? </p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>In contribution to ellabeauty's answer. you can also use this dynamic percentage values</p>\n\n<pre><code>$('.bar').css('width',  function(){ return ($(this).attr('data-percentage')+'%')});\n</code></pre>\n\n<p>And probably add custom easing to your css</p>\n\n<pre><code>.bar {\n -webkit-transition: width 2.50s ease !important;\n -moz-transition: width 2.50s ease !important;\n   -o-transition: width 2.50s ease !important;\n      transition: width 2.50s ease !important;\n }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I have a page with several bootstrap progress bars. Setting their values initially works fine. Though I would like the progress bars to animate/transition to their specific states when a user opens the page.</p>\n\n<p>This JS works fine, when you click on one of the bars. I would need something like that on an \"onload\" event of the bar. But the \"onload\" event is not available for s</p>\n\n<pre><code>//animate progress bars\n$('.progress .bar').on(\"click\", function(event) {\n  var me = $(this);\n  perc = me.attr(\"data-percentage\");\n  me.css('width', perc+'%');\n});\n</code></pre>\n\n<p>How can I achieve this behavior on page load for all progress bars on a page?</p>\n",
            "last_activity_date": 1404980447,
            "question_id": 10007212,
            "score": 29,
            "tags": [
                "javascript",
                "jquery",
                "twitter-bootstrap"
            ],
            "title": "Twitter bootstrap progress bar animation on page load"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You could handle the mousemove event and get the x,y coordinates from the event. Then you'll probably have to iterate over all your paths to test if the point is over the path. I had a <a href=\"http://stackoverflow.com/questions/1148424/registering-clicks-on-an-element-that-is-under-another-element\">similar problem</a> that might have some code you could use.</p>\n\n<p>Looping over things in this way can be slow, especially on IE. One way you could potentially speed it up - and this is a hack, but it would be quite effective - would be to change the color that each path is drawn with so that it is not noticeable by humans but so that each path is drawn in a different color. Have a table to look up colors to paths and just look up the color of the pixel under the mouse.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>This can't be done (well, at least not that easily), because objects you draw on the canvas (paths) are not represented as the same objects in the canvas. What I mean is that it is just a simple 2D context and once you drawn something on it, it completely forgets how it was drawn. It is just a set of pixels for it.</p>\n\n<p>In order to watch mouseover and the likes for it, you need some kind of vector graphics canvas, that is SVG or implement your own on top of existing  (which is what Sam Hasler suggested)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This could be done using the method ctx.isPointInPath, but it is not implemented in ExCanvas for IE.\nBut another solution would be to use HTML maps, like I did for this little library : <a href=\"http://phenxdesign.net/projects/phenx-web/graphics/example.htm\">http://phenxdesign.net/projects/phenx-web/graphics/example.htm</a> you can get inspiration from it, but it is still a little buggy.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I would suggest overlaying an image map with proper coordinates set on the areas to match your canvas-drawn items. This way, you get tooltips AND a whole lot of other DOM/Browser functionality for free.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>Shadow Canvas</strong></p>\n\n<p>The best method I have seen elsewhere for mouseover detection is to repeat the part of your drawing that you want to detect onto a hidden, cleared canvas. Then store the ImageData object. You can then check the ImageData array for the pixel of interest and return true if the alpha value is greater than 0.</p>\n\n<pre><code>// slow part\nctx.clearRect(0,0,canvas.width,canvas.height);\nctx.fillRect(100,100,canvas.width-100,canvas.height-100);\nvar pixels = ctx.getImageData(0,0,canvas.width,canvas.height).data;\n\n// fast part\nvar idx = 4 * (mouse_x + mouse_y * canvas.width) + 3;\nif (pixels[idx]) { // alpha &gt; 0\n  ...\n}\n</code></pre>\n\n<p><strong>Advantages</strong></p>\n\n<ul>\n<li>You can detect anything you want since you're just repeating the context methods. This works with PNG alpha, crazy compound shapes, text, etc.</li>\n<li>If your image is fairly static, then you only need to do this one time per area of interest.</li>\n<li>The \"mask\" is slow, but looking up the pixel is dirt cheap. So the \"fast part\" is great for mouseover detection.</li>\n</ul>\n\n<p><strong>Disadvantages</strong></p>\n\n<ul>\n<li>This is a memory hog. Each mask is W*H*4 values. If you have a small canvas area or few areas to mask, it's not that bad. Use chrome's task manager to monitor memory usage.</li>\n<li>There is currently a known issue with getImageData in Chrome and Firefox. The results are not garbage collected right away if you nullify the variable, so if you do this too frequently, you will see memory rise rapidly. It does eventually get garbage collected and it shouldn't crash the browser, but it can be taxing on machines with small amounts of RAM.</li>\n</ul>\n\n<p><strong>A Hack to Save Memory</strong></p>\n\n<p>Rather than storing the whole ImageData array, we can just remember which pixels have alpha values. It saves a great deal of memory, but adds a loop to the mask process.</p>\n\n<pre><code>var mask = {};\nvar len = pixels.length;\nfor (var i=3;i&lt;len;i+=4) if ( pixels[i] ) mask[i] = 1;\n\n// this works the same way as the other method\nvar idx = 4 * (mouse_x + mouse_y * canvas.width) + 3;\nif (mask[idx]) {\n  ...\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I needed to do detect mouse clicks for a grid of squares (like cells of an excel spreadsheet). To speed it up, I divided the grid into regions recursively halving until a small number of cells remained, for example for a 100x100 grid, the first 4 regions could be the 50x50 grids comprising the four quadrants.\nThen these could be divided into another 4 each (hence giving 16 regions of 25x25 each).\nThis requires a small number of comparisons and finally the 25x25 grid could be tested for each cell (625 comparisons in this example).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is a book by Eric Rowell named \"HTML5 CANVAS COOKBOOK\". In that book there is a chapter named \"Interacting with the Canvas: Attaching Event Listeners to Shapes and Regions\". mousedown, mouseup, mouseover, mouseout, mousemove, touchstart, touchend and touchmove events can be implemented. I highly suggest you read that.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I've built an analytical data visualization engine for Canvas and have been requested to add tooltip-like hover over data elements to display detailed metrics for the data point under the cursor.</p>\n\n<p>For simple bar &amp; Gaant charts, tree graphs and node maps with simple square areas or specific points of interest, I was able to implement this by overlaying absolutely-positioned DIVs with :hover attributes, but there are some more complicated visualizations such as pie charts and a traffic flow rendering which has hundreds of separate areas defined by bezeir curves.  </p>\n\n<p>Is is possible to somehow attach an overlay, or trigger an event when the user mouses over a specific closed path?  </p>\n\n<p>Each area for which hover needs to be specified is defined as follows:</p>\n\n<pre><code>context.beginPath();\ncontext.moveTo(segmentRight, prevTop);\ncontext.bezierCurveTo(segmentRight, prevTop, segmentLeft, thisTop, segmentLeft, thisTop);\ncontext.lineTo(segmentLeft, thisBottom);\ncontext.bezierCurveTo(segmentLeft, thisBottom, segmentRight, prevBottom, segmentRight, prevBottom);\n/*\n * ...define additional segments...\n */\n// &lt;dream&gt; Ideally I would like to attach to events on each path:\ncontext.setMouseover(function(){/*Show hover content*/});\n// &lt;/dream&gt;\ncontext.closePath();\n</code></pre>\n\n<p>Binding to an object like this is almost trivial to implement in Flash or Silverlight, since but the current Canvas implementation has the advantage of directly using our existing Javascript API and integrating with other Ajax elements, we are hoping to avoid putting Flash into the mix.</p>\n\n<p>Any ideas?</p>\n",
            "last_activity_date": 1331628772,
            "question_id": 1221347,
            "score": 29,
            "tags": [
                "javascript",
                "canvas"
            ],
            "title": "Detect mouseover of certain points within an HTML canvas?"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>It could refer to using javascript to post messages to a web server without re-loading the page: in other words, AJAX.</p>\n\n<p>But more likely I think it means something like <a href=\"http://www.aptana.com/\" rel=\"nofollow\">Aptana/Jaxer</a> (or, today, Node.js), which uses javascript for a server-side language.  In this case, remember that javascript is just a language: the DOM used in a web browser is a sort of API.  The server-side javascript engines would provide their own API objects, geared at server-side tasks like DB and file system access.</p>\n\n<p>Server-side javascript is an interesting idea because of the client-side validation problem: you want to do validation client-side to avoid posting needless queries to your server, but you <em>must</em> do validation server-side because you can't trust the client.  This results in a lot of duplicate code between the client and server.  </p>\n\n<p>The theory is that if your client and server languages match you'll no longer need two implementations of the same logic.  In practice it doesn't work so well, because the client and server views of a page request are so different and because you don't control the javascript engine used by the client.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Wikipedia has an <a href=\"http://en.wikipedia.org/wiki/Server-side_JavaScript\" rel=\"nofollow\">entry</a> but it tells me very little.</p>\n\n<p><a href=\"http://torino.sourceforge.net/\" rel=\"nofollow\">Torino</a> looks interesting : \"Server-side JavaScript environment for developing web applications. Provides a rich server-side programming environment using Java APIs. Released under the GPL3 license.\"</p>\n\n<p>This <a href=\"http://www.devarticles.com/c/a/JavaScript/Client-side-and-Server-side-JavaScript/3/\" rel=\"nofollow\">article</a> claims that SSJS is compiled into byte-code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You might want to have some functionality both in the browser and in the server to have the exact same implementation.</p>\n\n<p>An example would be a renderer for a wiki-syntax, that you run in the browser for the WYSIWYG editor and on the server to render the resulting page. This way you know that both the rendered results will be exactly the same in both cases.</p>\n\n<p>Apparently <a href=\"http://en.wikipedia.org/wiki/Rhino_(JavaScript_engine)\" rel=\"nofollow\">Rhino</a> can compile JavaScript to Java classes.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Traditionally, Javascript runs around the Document Object Model. But what if you work for a Java shop and would like a scripting engine around your custom object model? That's when Server-side Javascript comes in.</p>\n\n<p><a href=\"http://en.wikipedia.org/wiki/Server-side_JavaScript\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Server-side_JavaScript</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It really depends if you are talking about ASP.NET or Classic ASP. If you are using ASP.NET there aren't many good reasons for using Javascript.</p>\n\n<p>ASP Classic is an different case. You can use Javascript on the server side in ASP just the same way you would use VBScript. You can access the Application, Server, Request and Response objects just the same as via VBScript.</p>\n\n<p>There can be real benefits to using Javascript on the server side in ASP rather than VBScript. It means you can share code between the browser code and server code. It also means your developers don't need to deal with two different languages.</p>\n\n<p>There are some downsides to server side Javascript in ASP though. Firstly it doesn't appear to be as fast as VBScript on the server side at string concatenation. It also isn't as good as making calls to COM objects as VBScript (you can only get data back from COM calls via the return value, rather than via out/byref parameters).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It's not AJAX, unless people are using the term improperly.  As its name suggests, SSJS is JavaScript that runs on the server, interpreted by a standalone (i.e., browser-independent) JavaScript engine, like SpiderMonkey.</p>\n\n<p>Why bother?  Well, one area I currently see it underutilized in is in data validation.  With SSJS you write one piece of code that then gets used on both the server and the client.  Thus you get immediate user feedback from the client-side JS that will automatically match the data checking taking place on the server.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Classic ASP was able to use JavaScript on the server, although most people used VBScript.</p>\n\n<p>One compelling use of JavaScript on the server is as a complement to client-side data validation. For example, you might use the same JavaScript validation library on the client and on the server. This ensures you're using the same logic on the client as you are on the server, but (potentially) avoiding an unnecessary round-trip by pre-validating on the client side.</p>\n\n<p>Wikipedia lists a number of server-side JavaScript implementations <a href=\"http://en.wikipedia.org/wiki/Server-side_JavaScript\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>I remember with <a href=\"http://cocoon.apache.org/\" rel=\"nofollow\">Cocoon</a> (Apache's Java/XML/Javascript MVC framework) I used to use server-side Javascript since there was a something (I  believe cforms) that needed to be written in Javascript and was running on the server even though I believe you could write it in Java.</p>\n\n<p>We used Rhyno by that time, please check: <a href=\"http://peter.michaux.ca/articles/server-side-javascript-with-rhino-and-jetty\" rel=\"nofollow\">http://peter.michaux.ca/articles/server-side-javascript-with-rhino-and-jetty</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Yeah I've just read up about SSJS on a <a href=\"http://ejohn.org/blog/server-side-javascript-with-jaxer/\" rel=\"nofollow\">blog</a> by some guy named <a href=\"http://stackoverflow.com/users/6524/john-resig\">John</a> <a href=\"http://jquery.com/\" rel=\"nofollow\">Resig</a>.</p>\n\n<p>He describes an engine called Jaxer, which he says is \"Imagine ripping off the visual rendering part of Firefox and replacing it with a hook to Apache instead - roughly speaking that's what Jaxer is.\"</p>\n\n<p>For anyone who knows ASP.NET The HTML looks familiar</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n  &lt;script src=\"http://code.jquery.com/jquery.js\" runat=\"both\"&gt;&lt;/script&gt;\n  &lt;script&gt;\n    jQuery(function($){\n      $(\"form\").submit(function(){\n        save( $(\"textarea\").val() );\n        return false;\n      });\n    });\n  &lt;/script&gt;\n &lt;script runat=\"server\"&gt;\n    function save( text ){\n      Jaxer.File.write(\"tmp.txt\", text);\n    }\n    save.proxy = true;\n\n    function load(){\n      $(\"textarea\").val(\n        Jaxer.File.exists(\"tmp.txt\") ? Jaxer.File.read(\"tmp.txt\") : \"\");\n    }\n  &lt;/script&gt;\n&lt;/head&gt;\n&lt;body onserverload=\"load()\"&gt;\n   &lt;form action=\"\" method=\"post\"&gt;\n    &lt;textarea&gt;&lt;/textarea&gt;\n    &lt;input type=\"submit\"/&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Note the runat=\"sever\" and runat=\"both\"</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://steve-yegge.blogspot.com/2007/06/rhino-on-rails.html\" rel=\"nofollow\">http://steve-yegge.blogspot.com/2007/06/rhino-on-rails.html</a></p>\n\n<p>Check out how Steve Yegge is using Server-Side JavaScript with Rhino and why. He has a bunch of stuff on how he feels JavaScript is up and coming.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There's the project <a href=\"https://phobos.dev.java.net/\">Phobos</a>, which is a server side Javascript framework.</p>\n\n<p>Back In The Day, the Netscape web server offered server-side javascript as well.</p>\n\n<p>In both of these cases, Javascript is used just like you'd use any language on the server. Typically to handle HTTP requests and generate content.</p>\n\n<p><a href=\"http://www.mozilla.org/rhino/\">Rhino</a>, which is Mozillas Javascript system for Java, compiles Javascript in to Java byte codes, which the JVM can choose to JIT. Other systems use other means for executing javascript, even to the point that some are JIT compiling their javascript internal codes.</p>\n\n<p>I forsee that there will be more and more Javascript on the server. When you're writing \"thick\" applications in Javascript on the client, then you may as well be able to write your logic in Javascript on the server in order to not have to make the cognitive leaps from one language to another. The environments will be different, but much of your code and knowledge will be sharable.</p>\n\n<p>Finally, Javascript is probably the singular language that has the most money pointing at it right now in terms of implementations. From Apple, Mozilla, Google, and even Microsoft as well as the efforts to make it an even more advanced language (i.e. basically a Scheme with Algol syntax sans macros).</p>\n\n<p>Most of those implementation are buried in the browser, but that's not to say that there's no value on the server side as well.</p>\n\n<p>The tooling is the biggest place where Javascript is lacking, especially on the server side, but if you consider something like Phobos, where you can debug your server side Javascript in the IDE, that's a great advancement.</p>\n\n<p>Personally, I'm tossing Javascript around in my applications like white paint. It offers cheap extensibility for very little cost and is a great enabler.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>With <a href=\"http://aspjavascript.com/\" rel=\"nofollow\">ASP you can use Server Side JavaScript</a> in a number of ways. The way I most commonly use it is to have the <a href=\"http://stackoverflow.com/questions/459238/when-and-how-do-you-use-server-side-javascript/459288#459288\">same code executing on the client and on the server for validation</a>.</p>\n\n<p><code>file.js</code></p>\n\n<pre><code>&lt;!--//--&gt;&lt;%\n\n//javascript code\nfunction example(){return \"Hello, World!\";}\n\n//%&gt;\n</code></pre>\n\n<p><code>file.html</code></p>\n\n<pre><code>&lt;%@LANGUAGE=\"javascript\"%&gt;\n&lt;!-- METADATA TYPE=\"typelib\" \nFILE=\"C:\\Archivos de programa\\Archivos comunes\\System\\ado\\msado15.dll\" --&gt;\n&lt;!--#include file=\"file.js\"--&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;script language=\"javascript\" src=\"file.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;%=example();%&gt;\n&lt;script language=\"javascript\"&gt;alert(example());&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><code>file.js</code> starts and ends the way it does to allow for inclusion of the same file.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h2>2013's NEWS</h2>\n\n<p><strong><a href=\"http://nodejs.org/\" rel=\"nofollow\">Node.js</a></strong> (see also <a href=\"http://en.wikipedia.org/wiki/Node.js\" rel=\"nofollow\">at Wikipedia article</a>) is a sucess, and <a href=\"http://stackoverflow.com/questions/tagged/node.js\">its community is growing</a>!</p>\n\n<p><a href=\"http://docs.mongodb.org/manual/core/server-side-javascript/\" rel=\"nofollow\">MomgoDB</a> (at server), <a href=\"http://en.wikipedia.org/wiki/Google_Chrome\" rel=\"nofollow\">Chorme</a> (at client),  and <em>Node.js</em> (at server) use \n<a href=\"http://en.wikipedia.org/wiki/V8_%28JavaScript_engine%29\" rel=\"nofollow\">V8 JavaScript engine</a>. </p>\n\n<p>PS: you can use only one language, Javascript, to all your project modules: client-APIs, client interface, \"server hub\", and server database (ex. stored procedures). All programmers \"coding once\"!</p>\n\n<hr>\n\n<p>The main distinction between <em>\"Server-Javascript\"</em> and <em>\"Client-Javascript\"</em> languages, is explained at <a href=\"http://www.commonJS.org/\" rel=\"nofollow\">http://www.commonJS.org/</a> , the standard library for <em>Server-Javascript</em>.</p>\n\n<p><em>CommonJS</em> exists since 2009, and today (2013) <a href=\"http://en.wikipedia.org/wiki/CommonJS\" rel=\"nofollow\">is a mature standard</a>, used in both, <em>MongoDB</em> and <em>Node.js</em>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Occasionally I search for some JavaScript help and I come upon the term \"Server-side JavaScript\". When would you use JavaScript server-side? And how? </p>\n\n<p>My experiences of JavaScript have been in the browser. Is there a compiled version of JS?</p>\n",
            "last_activity_date": 1382642980,
            "question_id": 459238,
            "score": 28,
            "tags": [
                "javascript",
                "server-side"
            ],
            "title": "When and how do you use server side JavaScript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You should be able to.</p>\n\n<p>Onload, check if window.location.hash has a value. If it does, grab the element with an id that matches the hash value. Find the position of the element (recursive calls to offsetTop/offsetLeft) and then pass those values into the window.scrollTo(x, y) method.</p>\n\n<p>This should scroll the page to the desired element.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Ok, not sure if this is perfect, but it seems to work pretty well. There may be more corner cases you need to account for. Basically, if an anchor is used we bind to the windows scroll event. The idea being that the first scroll event has to belong to the automatic repositioning done by the browser. When this occurs we do our own repositioning and then remove the bound event. This prevents subsequent page scrolls from borking the system.</p>\n\n<pre><code>$(document).ready(function() {\n    if (window.location.hash) { \n        //bind to scroll function\n        $(document).scroll( function() {\n            var hash = window.location.hash\n            var hashName = hash.substring(1, hash.length);\n            var element;\n\n            //if element has this id then scroll to it\n            if ($(hash).length != 0) {\n                element = $(hash);\n            }\n            //catch cases of links that use anchor name\n            else if ($('a[name=\"' + hashName + '\"]').length != 0)\n            {\n                //just use the first one in case there are multiples\n                element = $('a[name=\"' + hashName + '\"]:first');\n            }\n\n            //if we have a target then go to it\n            if (element != undefined) {\n                window.scrollTo(0, element.position().top);\n            }\n            //unbind the scroll event\n            $(document).unbind(\"scroll\");\n        });\n    }\n\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>On Chrome, even if you force scrollTop to 0 it will jump afterwards after the first scroll event.</p>\n\n<p>You should bind the scroll to this:</p>\n\n<pre><code>$(window).on('beforeunload', function() {\n    $(window).scrollTop(0);\n});\n</code></pre>\n\n<p>So the browser is tricked to believe that it was on the beginning before the refresh.</p>\n",
                    "is_accepted": false,
                    "score": 44
                },
                {
                    "body": "<p>Here's a a more general approach. Instead of trying to prevent the browser from scrolling (or jumping to the top as it would look like) I just restore the previous position on the page.\nI.e. I'm recording the current y-offset of the page in localStorage and scroll to this position once the page has loaded.</p>\n\n<pre><code>function storePagePosition() {\n  var page_y = window.pageYOffset;\n  localStorage.setItem(\"page_y\", page_y);\n}\n\n\nwindow.addEventListener(\"scroll\", storePagePosition);\n\n\nvar currentPageY;\n\ntry {\n  currentPageY = localStorage.getItem(\"page_y\");\n\n  if (currentPageY === undefined) {\n    localStorage.setItem(\"page_y\") = 0;\n  }\n\n  window.scrollTo( 0, currentPageY );\n} catch (e) {\n    // no localStorage available\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>If you go to a page a and scroll around then refresh the page will refresh at the spot where you left it. This is great, however this also occurs on pages where there is a anchor location in the url. An example would be if you clicked on a link <code>http://example.com/post/244#comment5</code> and refreshed the page after looking around you would not be at the anchor and the page jumps around. Is there any way to prevent this with javascript? So that no-matter-what you would always navigate to the anchor.</p>\n",
            "last_activity_date": 1425569127,
            "question_id": 7035331,
            "score": 25,
            "tags": [
                "javascript",
                "browser"
            ],
            "title": "Prevent automatic browser scroll on refresh"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>A web page at a very fundamental level can't keep a live/running connection to a server.  Web browser sends a request to the server.  Server sends a response (the HTML and more) back to the client (web browser).  Think of this as a stateless model - no connection is ever kept alive after the request and response have been completed.  </p>\n\n<p>Therefore, you have to do it yourself.  You have to invoke additional, periodic requests from the client-side.</p>\n\n<p>One way would be to periodically call your AJAX/GET functionality via <a href=\"http://www.w3schools.com/jsref/met_win_setinterval.asp\" rel=\"nofollow\">setInterval()</a> function.  For example: </p>\n\n<pre><code>setInterval(function() {\n\n    $.ajax({\n      url: \"mydata/get\",\n      success: function(){\n        // update content.\n      }\n    });\n\n}, 5000);\n</code></pre>\n\n<p>This will fire off an AJAX request to mydata/get (or whatever URL you want to use) every 5 seconds. </p>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>The url you have specified in your question sends a JSON response stream. Due to cross domain security restrictions in browsers you cannot access it using javascript. You will need to implement a bridge server side script on your server which you could <em>poll</em> at regular intervals using AJAX requests or host your site on <code>twitter.com</code>. The first seems more feasible.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><strong>An Updated Answer</strong></p>\n\n<p>Most browsers now implement the <a href=\"http://www.w3.org/TR/eventsource/#the-eventsource-interface\" rel=\"nofollow\">EventSource API</a>, which makes this really easy, as long as the stream can be delivered with content-type <code>text/event-stream</code>. Older browsers or those who can't engineer the stream to have that content-type can use some <a href=\"https://github.com/Yaffle/EventSource\" rel=\"nofollow\">helper script</a> to do the same thing.</p>\n\n<p>Here's an example:</p>\n\n<pre><code>var jsonStream = new EventSource('https://example.com/yourstreamingservice')\njsonStream.onmessage = function (e) {\n   var message = JSON.parse(e.data);\n  // handle message\n};\n</code></pre>\n\n<p>This is basically a full-fledged version of the exact thing that I outline below.</p>\n\n<p><strong>The Old Service Streaming Answer</strong></p>\n\n<p>You'll need a custom AJAX <code>onreadystatechange</code> handling function. Instead of waiting until the entire stream has completed (since it never will), you'll need to examine the contents periodically. Note that you'll need to do some heavy lifting for this to work in IE, using an <code>iframe</code>.</p>\n\n<p>Roughly:</p>\n\n<ul>\n<li>Respond to each <code>onreadystatechange</code> event and examine the stream you've been given up to the current character to see if there is enough data to consume one or more discrete events. You'll need to parse the stream yourself with javascript string-handling functions. A combination of split, indexOf, regular expressions, looping, and so on can be used to accomplish this task.</li>\n<li>If there's not enough content yet, then exit and wait for the next event.</li>\n<li>I am pretty sure that each time the <code>onreadystatechange</code> handler fires, the <code>responseText</code> will be all the data that has been received so far. Define a persistent variable that will hold the position of the first character that hasn't been properly processed yet.</li>\n<li>Once there is enough content for one or more discrete events to appear in the stream, take them out one at a time and pass them to your JSON parser to actually render the text as objects. Use them normally.</li>\n</ul>\n\n<p>Check out <a href=\"http://ajaxpatterns.org/HTTP_Streaming\" rel=\"nofollow\">HTTP Streaming</a> at AJAX Patterns for a good discussion of this exact topic (it also covers Service Streaming which is what you're doing). As stated, if you must support IE, then you'll need to use the <code>iframe</code> method for that.</p>\n\n<blockquote>\n  <p>In summary, Service Streaming makes the HTTP Streaming approach more flexible, because you can stream arbitrary content rather than Javascript commands, and because you can control the connection's lifecycle. However, it combines two technologies that aren't consistent across browsers, with predictable portability issues. Experiments suggest that the Page Streaming technique does work on both IE and Firefox , but Service Streaming only works on Firefox, whether XMLHTTPRequest or IFrame is used. In the first case IE suppresses the response until its complete, with the IFrame it works if a workaround is used: The IE accepts a message from the server after the first 256 bytes so the only thing to do is to send 256 dummy Bytes before sending the messages. After this all messages will arrive as expected. So a full Service Streaming is possible in IE, too! </p>\n</blockquote>\n\n<p><strong>Security Issues</strong></p>\n\n<p>Normal AJAX cannot go cross-domain, meaning (now that I pay attention to the fact that you want to stream from twitter) that you won't be able to do what you're asking. This can be worked around with JSONP, but JSONP by nature can't be service streamed and moreover isn't offered by twitter anyway.bthere is also <a href=\"http://en.m.wikipedia.org/wiki/Cross-origin_resource_sharing\" rel=\"nofollow\">Cross-Origin Resource Sharing</a> (CORS) but twitter's not going to set that up for you--that's the kind of thing they'd only do for domains affiliated with them. And CORS requires a modern browser.</p>\n\n<p>Your only option is thus to create a proxy service on your web server that performs the requests to twitter for you and then hands out the data. This can only be done from the same domain as the main page was served from. Doing this would also allow you to create a version that will work for IE using the iframe technique. If you don't care about old IE versions, you can implement CORS yourself to defeat the domain restriction, if you know the domain that will be making the requests.</p>\n\n<p>If you have full control of the client software (like if this is for a corporate intranet) there is another option: hosting the web browser inside of a compiled locally-executed application's user form. I have only done this using C# but I imagine it's possible from other languages. When you use the right browser object, because it's hosted inside a C# application, the C# application can defeat the cross-domain security restrictions, reading and writing all page content no matter what domain it comes from. I doubt your situation is this one but I wanted to put the option here for others who might appreciate it.</p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>I've got an open source project which allows this on modern browsers (and falls back to a jQuery-style on older ones). The call syntax is similar to jQuery.ajax:</p>\n\n<p><a href=\"http://oboejs.com\" rel=\"nofollow\">http://oboejs.com</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>The page <a href=\"http://stream.twitter.com/1/statuses/sample.json\">http://stream.twitter.com/1/statuses/sample.json</a> returns a continuous and endless stream of JSON data. I'd like to process it using jQuery (or JavaScript, but preferably jQuery) inside my own web page to be able to display visual effects based on the live feed of tweets.</p>\n\n<p>Since as far as I know the jQuery <code>parseJSON</code> function will only execute the callback function after all the data has been sent by the server, but this is actually a continuous stream of data. How can I process the data \"as it happens\" but still keep the connection running?</p>\n",
            "last_activity_date": 1425509883,
            "question_id": 6558129,
            "score": 23,
            "tags": [
                "javascript",
                "jquery",
                "json",
                "data",
                "stream"
            ],
            "title": "Process a continuous stream of JSON"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>The main benefit of having them on a CDN is that the files can be downloaded in parallel to files downloaded from your own website. This reduces latency on every page. So, the flip side of this is a pitfall of hosting locally - <strong>increased latency</strong>. The main reason for that is that browsers are limited in the number of connections that they can make at the same time to the same webserver. In IE6 this was defaulted to 2 concurrent connections to the same domain - <em>shared between all open windows of IE!!</em> In IE8 it is a bit better, defaulting to 6, which is inline with FF, but still, if you have a lot of images and you are not using sprites, you will experience heavy latency.</p>\n\n<p>Using a CDN, I would <strong>always set the library version explicitly</strong> rather than getting the latest one. This reduces the risk of new versions breaking your code. Not very likely with jQuery, but possible.</p>\n\n<p>The other main benefit of using a CDN is <strong>reduced traffic on your site</strong>. If you pay per GB or you are on a virtual server with limited resources, you might find that overall site performance increases and hosting costs come down when you farm off some of your content to a public CDN. </p>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>Google CDN:</p>\n\n<ul>\n<li>caching, good for performance, more users likely to have it already, and it downloads in parallel</li>\n<li>if ever, heaver forbid cdn goes down. you're screwed.</li>\n<li>if a new version breaks your existing plugins or site, you'll know about it possibly too late</li>\n</ul>\n\n<p>Locally:</p>\n\n<ul>\n<li>development without being connected to the net is possible</li>\n<li>can still get some performance benefits by gzipping, in addition to minifying</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I always use the CDN from Google. But just in case it's offline:</p>\n\n<pre><code>&lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;!window.jQuery &amp;&amp; document.write('&lt;script src=\"jquery-1.4.2.min.js\"&gt;&lt;\\/script&gt;')&lt;/script&gt;\n</code></pre>\n\n<p>Grab Google CDN's jQuery and fallback to local if necessary</p>\n\n<p><strong>Edit</strong>:\nIf you don't need to support IE6 and your site has partial https usage you can remove the http as well:</p>\n\n<pre><code>&lt;script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js\"&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 47
                },
                {
                    "body": "<p>Benifits (iam talking of google cdn)</p>\n\n<ol>\n<li>downloaded  in parallel with ur files.</li>\n<li>goolge servers have less response time.</li>\n<li>files are cached.</li>\n<li>if some other site has already downloaded that file then your site wont download it again it will just pick it from cache.</li>\n<li>your bandwidth would be saved.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Virtually every way you look at it, using Google's CDN is a good thing.</p>\n\n<p>Performance will be improved (albeit fairly marginally, unless your site is really busy), and the amount of data your servers have to transmit will go down (although jQuery isn't exactly a massive thing to download), etc.</p>\n\n<p>The only reason you wouldn't want to use it is if you don't trust Google. By using it, you are effectively giving Google an additional window of information into your site's traffic profile, including knowledge of URLs that you may otherwise not want to make public (eg secure areas of your site).</p>\n\n<p>If you are paranoid about security then this may be enough to persuade you not to use them (after all, hosting it yourself isn't exactly going to slow your site down to a crawl), but in general most people would take the pragmatic view that Google knows enough about their site already that adding this won't make much difference.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I prefer to use my local version, because  I don't have control about what they will provide.\nFor example I don't want my users to get affected by google-analytics or anything similar, because this is a legal problem in my country.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Others have covered the benefits. Pitfalls:</p>\n\n<ul>\n<li><p>If you only include content from your own server, that's one server that needs to be running\u2014and not blocked by firewalls etc\u2014to make your site work. Pull script from a third party and now that's two servers that need to be running and unblocked to make your site work.</p></li>\n<li><p>Any site you pull <code>&lt;script&gt;</code> from can completely control the user's experience on your site. If Google were feeling evil they could put something in their copy of jQuery to log your keypresses, steal personal information from the page you're on to tie into their web tracking database, make you post \u201cI love Google!\u201d comments to every form, and so on.</p></li>\n</ul>\n\n<p>Google probably aren't actually going to do that, but it's a factor that's out of your control, and certainly something to worry about with other script-hosting services. There have been incidents before where stats scripts have been compromised with malware loaders.</p>\n\n<p>Before including any script from a third party\u2014even on one single page of your site\u2014you must 100% trust them with all user-accessible functionality visible on that hostname (including web-facing admin functions).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>To me it really depends on how much control you desire to have.  If you are like me and need to develop on local host when working and traveling.   Having the jquery files local is better than having it hosted on google or else where.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>We're currently pulling jQuery and jQueryUI (and jQueryUI CSS) libraries from the google CDN. I like this because I can call <code>google.load(\"jquery\", \"1\");</code><br>\n and the latest jQuery 1.x.x will be used.</p>\n\n<p>Now I am to pull the libraries locally because of security.</p>\n\n<p>I'm happy to pull them locally but I'm wondering what are some of the other benefits and pitfalls to watch out for?</p>\n",
            "last_activity_date": 1385651136,
            "question_id": 3832446,
            "score": 23,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui",
                "cdn"
            ],
            "title": "Benefits vs. Pitfalls of hosting jQuery locally"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.devbridge.com/projects/autocomplete/jquery/\" rel=\"nofollow\">THIS</a> should work. With regards to the @ kicking off the search, just add (dynamically or not) the symbol to the beginning of each possible search term.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I could not find any solution that matched my requirements perfectly, so I ended up with the following:</p>\n\n<p>I use the jQuery <code>keypress()</code> event to check for the user pressing the <code>@</code> character.<br>\nIf this is the case, a modal dialog is shown using jQuery UI. This dialog contains an autocomplete text field (many options can be used here, but I recommmend <a href=\"http://loopj.com/jquery-tokeninput/\" rel=\"nofollow\">jQuery Tokeninput</a>)<br>\nWhen the user selects an option in the dialog, a tag is added to the text field and the dialog is closed.</p>\n\n<p>This is not the most elegant solution, but it works and it does not require extra keypresses compared to my original design.</p>\n\n<p><strong>Edit</strong><br>\nSo basically, we have our large text box where the user can enter text. He should be able to \"tag\" a user (this just means inserting <code>#&lt;userid&gt;</code> in the text). I attach to the jQuery keyup event and detect the <code>@</code> character using <code>(e.which == 64)</code> to show a modal with a text field for selecting the users to tag.</p>\n\n<p>The meat of the solution is simply this modal dialog with a <a href=\"http://loopj.com/jquery-tokeninput/\" rel=\"nofollow\">jQuery Tokeninput</a> text box. As the user types here, the list of users is loaded through AJAX. See the examples on the website for how to use it properly. When the user closes the dialog, I insert the selected IDs into the large text box.</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>Try this:</p>\n\n<p>html:</p>\n\n<pre><code>&lt;textarea&gt;&lt;/textarea&gt;\n</code></pre>\n\n<p>css:</p>\n\n<pre><code>body, html {\n    font-family: \"lucida grande\",tahoma,verdana,arial,sans-serif;\n}\n\n.ui-tagging {\n    position: relative;\n    border: 1px solid #B4BBCD;\n    height: auto;\n}\n\n.ui-tagging .ui-tagging-highlight {\n    position: absolute;\n    padding: 5px;\n    overflow: hidden;\n}\n.ui-tagging .ui-tagging-highlight div {\n    color: transparent;\n    font-size: 13px;\n    line-height: 18px;\n    white-space: pre-wrap;\n}\n\n.ui-tagging .ui-tagging-wrap {\n    position: relative;\n    padding: 5px;\n    overflow: hidden;\n    zoom: 1;\n    border: 0;\n}\n\n.ui-tagging div &gt; span {\n    background-color: #D8DFEA;\n    font-weight: normal !important;\n}\n\n.ui-tagging textarea {\n    display: block;\n    font-family: \"lucida grande\",tahoma,verdana,arial,sans-serif;\n    background: transparent;\n    border-width: 0;\n    font-size: 13px;\n    height: 18px;\n    outline: none;\n    resize: none;\n    vertical-align: top;\n    width: 100%;\n    line-height: 18px;\n    overflow: hidden;\n}\n\n.ui-autocomplete {\n    font-size: 13px;\n    background-color: white;\n    border: 1px solid black;\n    margin-bottom: -5px;\n    width: 0;\n}\n</code></pre>\n\n<p>js:</p>\n\n<pre><code>(function($){\n\n    $.widget(\"ui.tagging\", {\n        // default options\n        options: {\n            source: [],\n            maxItemDisplay: 3,\n            autosize: true,\n            animateResize: false,\n            animateDuration: 50\n        },\n        _create: function() {\n            var self = this;\n\n            this.activeSearch = false;\n            this.searchTerm = \"\";\n            this.beginFrom = 0;\n\n            this.wrapper = $(\"&lt;div&gt;\")\n                .addClass(\"ui-tagging-wrap\");\n\n            this.highlight = $(\"&lt;div&gt;&lt;/div&gt;\");\n\n            this.highlightWrapper = $(\"&lt;span&gt;&lt;/span&gt;\")\n                .addClass(\"ui-corner-all\");\n\n            this.highlightContainer = $(\"&lt;div&gt;\")\n                .addClass(\"ui-tagging-highlight\")\n                .append(this.highlight);\n\n            this.meta = $(\"&lt;input&gt;\")\n                .attr(\"type\", \"hidden\")\n                .addClass(\"ui-tagging-meta\");\n\n            this.container = $(\"&lt;div&gt;&lt;/div&gt;\")\n                .width(this.element.width())\n                .insertBefore(this.element)\n                .addClass(\"ui-tagging\")\n                .append(\n                    this.highlightContainer, \n                    this.element.wrap(this.wrapper).parent(), \n                    this.meta\n                );\n\n            var initialHeight = this.element.height();\n\n            this.element.height(this.element.css('lineHeight'));\n\n            this.element.keypress(function(e) {\n                // activate on @\n                if (e.which == 64 &amp;&amp; !self.activeSearch) {\n                    self.activeSearch = true;\n                    self.beginFrom = e.target.selectionStart + 1;\n                }\n                // deactivate on space\n                if (e.which == 32 &amp;&amp; self.activeSearch) {\n                    self.activeSearch = false;\n                }\n            }).bind(\"expand keyup keydown change\", function(e) {\n                var cur = self.highlight.find(\"span\"),\n                    val = self.element.val(),\n                    prevHeight = self.element.height(),\n                    rowHeight = self.element.css('lineHeight'),\n                    newHeight = 0;\n                cur.each(function(i) {\n                    var s = $(this);\n                    val = val.replace(s.text(), $(\"&lt;div&gt;\").append(s).html());\n                });\n                self.highlight.html(val);\n                newHeight = self.element.height(rowHeight)[0].scrollHeight;\n                self.element.height(prevHeight);\n                if (newHeight &lt; initialHeight) {\n                    newHeight = initialHeight;\n                }\n                if (!$.browser.mozilla) {\n                    if (self.element.css('paddingBottom') || self.element.css('paddingTop')) {\n                        var padInt =\n                            parseInt(self.element.css('paddingBottom').replace('px', '')) + \n                            parseInt(self.element.css('paddingTop').replace('px', ''));\n                        newHeight -= padInt;\n                    }\n                }\n                self.options.animateResize ?\n                    self.element.stop(true, true).animate({\n                            height: newHeight\n                        }, self.options.animateDuration) : \n                    self.element.height(newHeight);\n\n                var widget = self.element.autocomplete(\"widget\");\n                    widget.position({\n                        my: \"left top\",\n                        at: \"left bottom\",\n                        of: self.container\n                    }).width(self.container.width()-4);\n\n            }).autocomplete({\n                minLength: 0,\n                delay: 0,\n                maxDisplay: this.options.maxItemDisplay,\n                open: function(event, ui) {\n                    var widget = $(this).autocomplete(\"widget\");\n                    widget.position({\n                        my: \"left top\",\n                        at: \"left bottom\",\n                        of: self.container\n                    }).width(self.container.width()-4);\n                },\n                source: function(request, response) {\n                    if (self.activeSearch) {\n                        self.searchTerm = request.term.substring(self.beginFrom); \n                        if (request.term.substring(self.beginFrom - 1, self.beginFrom) != \"@\") {\n                            self.activeSearch = false;\n                            self.beginFrom = 0;\n                            self.searchTerm = \"\";\n                        }\n                        if (self.searchTerm != \"\") {\n\n                            if ($.type(self.options.source) == \"function\") {\n                                self.options.source(request, response);                   \n                            } else {\n                                var re = new RegExp(\"^\" + escape(self.searchTerm) + \".+\", \"i\");\n                                var matches = [];\n                                $.each(self.options.source, function() {\n                                    if (this.label.match(re)) {\n                                        matches.push(this);\n                                    }\n                                });\n                                response(matches);\n                            }\n                        }\n                    }\n                },\n                focus: function() {\n                    // prevent value inserted on focus\n                    return false;\n                },\n                select: function(event, ui) {\n                    self.activeSearch = false;\n                    //console.log(\"@\"+searchTerm, ui.item.label);\n                    this.value = this.value.replace(\"@\" + self.searchTerm, ui.item.label) + ' ';\n                    self.highlight.html(\n                        self.highlight.html()\n                            .replace(\"@\" + self.searchTerm,\n                                     $(\"&lt;div&gt;\").append(\n                                         self.highlightWrapper\n                                             .text(ui.item.label)\n                                             .clone()\n                                     ).html()+' ')\n                    );\n\n                    self.meta.val((self.meta.val() + \" @[\" + ui.item.value + \":]\").trim());\n                    return false;\n                }\n            });\n\n        }\n    });\n\n})(jQuery);\n\n\n$(function() {\n\n    var names = [\n        {\n            value: 1,\n            label: \"Marcus Ekwall\"\n        }\n    ];\n\n    $(\"textarea\").tagging({\n        source: function(request, response) {\n            $.ajax({\n                type: \"post\",\n                url: \"/echo/json/\",\n                data: { term: request.term, json: JSON.stringify(names) },\n                success: function(data){\n                    response(data);\n                },\n                dataType: \"json\"\n            });\n        }\n    });\n\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/mekwall/mcWnL/52/\" rel=\"nofollow\">http://jsfiddle.net/mekwall/mcWnL/52/</a>\nThis link will help you</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Recently i had to face this problem and this is how i nailed down...</p>\n\n<ol>\n<li>Get the string index at the cursor position in the textarea by using selectionStart </li>\n<li>slice the string from index 0 to the cursor position</li>\n<li>Insert it into a span (since span has multiple border boxes)</li>\n<li>Get the dimensions of the border box using element.getClientRects() relative to the view port. (here is the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/element.getClientRects\" rel=\"nofollow\">MDN Reference</a>)</li>\n<li>Calculate the top and left and feed it to the dropdown</li>\n</ol>\n\n<p>This works in all latest browsers. haven't tested at old ones</p>\n\n<p>Here is <a href=\"http://jsbin.com/uyufiw/39/edit\" rel=\"nofollow\">Working bin</a> </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've created a <a href=\"http://www.meteor.com/\" rel=\"nofollow\">Meteor</a> package for this purpose. Meteor's data model allows for fast multi-rule searching with custom rendered lists. If you're not using Meteor for your web app, (I believe) you unfortunately won't find anything this awesome for autocompletion.</p>\n\n<p>Autocompleting users with <code>@</code>, where online users are shown in green:</p>\n\n<p><img src=\"http://i.stack.imgur.com/dQvMH.png\" alt=\"enter image description here\"></p>\n\n<p>In the same line, autocompleting something else with metadata and bootstrap icons:</p>\n\n<p><img src=\"http://i.stack.imgur.com/hax1m.png\" alt=\"enter image description here\"></p>\n\n<p>Fork, pull, and improve:</p>\n\n<blockquote>\n  <p><a href=\"https://github.com/mizzao/meteor-autocomplete\" rel=\"nofollow\">https://github.com/mizzao/meteor-autocomplete</a></p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm sure your problem is long since solved, but <a href=\"https://github.com/yuku-t/jquery-textcomplete\">jquery-textcomplete</a> looks like it would do the job.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Another great library which solves this problem At.js</p>\n\n<p><a href=\"https://github.com/ichord/At.js\" rel=\"nofollow\">Source</a></p>\n\n<p><a href=\"http://ichord.github.io/At.js/\" rel=\"nofollow\">Demo</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Have you tried this</p>\n\n<p>GITHUB: <a href=\"https://github.com/podio/jquery-mentions-input\">https://github.com/podio/jquery-mentions-input</a></p>\n\n<p>DEMO/CONFIG: <a href=\"http://podio.github.io/jquery-mentions-input/\">http://podio.github.io/jquery-mentions-input/</a></p>\n\n<p>It is pretty sample to implement.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I am looking for a Javascript autocomplete implementation which includes the following:</p>\n\n<ul>\n<li>Can be used in a HTML textarea</li>\n<li>Allows for typing regular text without invoking autocomplete</li>\n<li>Detects the <code>@</code> character and starts autocomplete when it is typed</li>\n<li>Loads list of options through AJAX</li>\n</ul>\n\n<p>I believe that this is similar to what Twitter is doing when tagging in a twwet, but I can't find a nice, reusable implementation.<br>\nA solution with jQuery would be perfect.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1405138257,
            "question_id": 6157992,
            "score": 19,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "ajax",
                "twitter"
            ],
            "title": "Twitter-style autocomplete in textarea"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>In my experience with Canvas you should be able to get a good 50 fps on Firefox and even a good 15 fps on iOS. IE9 will probably be the fastest browser, other versions don't really implement Canvas.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I have created equivalent tests to compare frame rates for moving an image via CSS versus drawing it on an HTML canvas. Here are the tests:</p>\n\n<ul>\n<li><a href=\"http://phrogz.net/tmp/image_move_speed_canvas.html\">Moving an Image via Canvas</a></li>\n<li><a href=\"http://phrogz.net/tmp/image_move_speed_css.html\">Moving an Image via CSS</a></li>\n<li><a href=\"http://phrogz.net/tmp/image_move_sprites_canvas.html\">Moving 20 Sprites via Canvas</a> over a 1024x768 background</li>\n<li><a href=\"http://phrogz.net/tmp/image_move_sprites_css.html\">Moving 20 Sprites via CSS</a> over a 1024x768 background</li>\n</ul>\n\n<p>And here are <a href=\"http://phrogz.net/tmp/image_move_speed.html\">the FPS results</a> (see URL for test details):</p>\n\n<pre>\n                  Image  Image  Sprite  Sprite\n        Browser  Canvas    CSS  Canvas     CSS\n----------------------------------------------\n  Safari v5.0.3      59     95      59      89\nFirefox v3.6.13      59     95      60      90\n Firefox v4.0b8      75     89      78      82\n    Chrome v8.0     108    230     120     204\n    iPad, Horiz      17     44       2      14\n     iPad, Vert       4     75       2      15\n</pre>\n\n<p>As you can see:</p>\n\n<ol>\n<li>You're always going to get better results moving an image as an HTML element than redrawing a portion of the canvas, and</li>\n<li>You're <strike>likely</strike> <em>possibly</em> doing something wrong if you're only getting 5fps.</li>\n</ol>\n\n<p><strong>Edit</strong>: Added tests for moving 20 small animated sprites over a background. The conclusions remain the same.</p>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>It's now been over 2 years and I decided to run these tests to see if this still holds true. It does...and it doesn't.</p>\n\n<ol>\n<li><p>Firefox Desktop <strong>and mobile</strong> both run CSS animations significantly faster than canvas.</p></li>\n<li><p>Chrome desktop runs canvas and CSS animations about the same</p></li>\n<li><p>Chrome Mobile (on Nexus 7) does the exact opposite: canvas runs significantly faster than CSS!</p></li>\n</ol>\n\n<p>(Using Firefox Android with Nexus 7 and desktop browsers on Linux with 1920x1080 resolution)</p>\n\n<pre>\n\nBrowser/OS          Canvas Image   CSS IMage   Canvas Sprites   CSS Sprites    \n-----------         ------------   ----------  --------------   -----------\nFirefox 16          56.7fps        215.6 fps   59.2fps          203.6fps\nFirefox 16 Android  17.1 fps       179.6fps    11.5fps          35.7\nChrome 22           192.3fps       223.5fps    170.1fps         164.3fps\nChrome Android      48.3fps        39.9fps     92.8fps          13.1fps\n</pre>\n\n<p>What does everyone else get? Can anyone test IE9, 10 for this?</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Figured I'd update this old question with my findings on a 3rd generation iPad:</p>\n\n<p>Canvas wins 2:1 with the sprite animations an average of about 120 fps with background clearing toggled both ways.  CSS could barely meet 60 fps.</p>\n\n<p>As for the single image, CSS was definitely quicker.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Further to MyNameIsKo findings on iPad 3 performance.  I was wondering if it was to do with the fact that the CSS DOM method had to worry about drawing on the retina screen of iPad 3 whereas the canvas would be drawn to at lower resolution and then blt'd to screen. An iPad 1 is significantly faster for CSS updates than the iPad3! </p>\n\n<p>I also made some changes to the canvas javascript to be able to draw to a retina resolution canvas. I added the following code after canv.height = h; in the bg.onload function:</p>\n\n<pre><code>if (window.devicePixelRatio) {\n    ctx.canvas.style.width = w + \"px\";\n    ctx.canvas.style.height = h + \"px\";\n    ctx.canvas.height = h * window.devicePixelRatio;\n    ctx.canvas.width = w * window.devicePixelRatio;\n    ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n}\n</code></pre>\n\n<p>which made a huge reduction in performance...</p>\n\n<p>iPad 1 (iOS 5.5.1)</p>\n\n<p>iPad 3 (iOS 6.1.3)</p>\n\n<pre><code>                      CSS Sprite        Canvas Sprites\n-----------------------------------------------------\niPad 1                   90                  100\niPad 3                   55                  120\niPad 1(canvas changes)   n/a                 100\niPad 3(canvas changes)   n/a                 35\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an image and move it around my web page (JavaScript) like this:</p>\n\n<pre><code>satelliteImage.style.top = coordinates.top + \"px\";\nsatelliteImage.style.left = coordinates.left + \"px\";\n</code></pre>\n\n<p>Unfortunately, the performance is quite bad in all browsers except Chrome. The bottleneck is rendering speed. I have no hope for IE, but I want to improve Firefox at least. Does anyone have experience with performance of HTML5 Canvas while moving an image, compared to Style change?</p>\n",
            "last_activity_date": 1375431994,
            "question_id": 4842872,
            "score": 17,
            "tags": [
                "javascript",
                "html5",
                "animation",
                "canvas",
                "css3"
            ],
            "title": "Performance of moving image on web page via CSS vs HTML5 Canvas"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>See \"Handling Orientation Events\" of <a href=\"http://developer.apple.com/safari/library/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html#//apple_ref/doc/uid/TP40006511-SW1\" rel=\"nofollow\">http://developer.apple.com/safari/library/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html#//apple_ref/doc/uid/TP40006511-SW1</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://developer.apple.com/safari/library/documentation/DataManagement/Reference/DOMWindowAdditionsReference/DOMWindowAdditions/DOMWindowAdditions.html#//apple_ref/javascript/instp/DOMWindow/orientation\">window.orientation</a> will give you an integer that denotes the rotation. You can listen for orientation changes by adding an event to the body:</p>\n\n<pre><code>&lt;body onorientationchange=\"updateOrientation();\"&gt;\n</code></pre>\n\n<hr />\n\n<p>Edited by OP, just on the off-chance that the link dies or gets moved at some point...</p>\n\n<pre><code>Value  |  Description\n-------+-------------------------------------------------------------------------------\n 0     |  Portrait orientation. This is the default value.\n-90    |  Landscape orientation with the screen turned clockwise.\n 90    |  Landscape orientation with the screen turned counterclockwise.\n 180   |  Portrait orientation with the screen turned upside down. This value is currently not supported on iPhone.\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 41
                },
                {
                    "body": "<p>I tried a similar approach for tablets cross-platform using .height() and .width() and then comparing which is larger. It works in iOS5 (tested on Ipad2) and the BlackBerry Rim but appearently not on Android (3.2 and 4.0.3). On Android the first time loading the site it gives me the right height and width but then changing the screen orientation it is always one step behind.<br>\nEx. using the dimensions 800x1200 starting in portrait mode:<br>\nh:1200 w: 800 (portrait)<br>\nh:1200 w: 800 (landscape)<br>\nh:800 w: 1200 (portrait)<br>\nh: 1200 w: 800 (landscape)<br>\n<br>\nLooking on I tripped over this solution with CSS3:<br>\n<a href=\"http://stackoverflow.com/questions/7625718/how-to-use-javascript-conditionally-like-css3-media-queries-orientation\">How to use javascript conditionally like CSS3 media queries, orientation?</a><br>\nThis is probably better than tweaking the Js solution.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>jQuery(window).bind('orientationchange', function(e) {\n\n  switch ( window.orientation ) {\n\n    case 0:\n        alert('portrait mode');\n    break;\n\n    case 90:\n        alert('landscape mode screen turned to the left');\n    break;\n\n    case -90:\n        alert('landscape mode screen turned to the right');\n    break;\n\n  }\n\n});\n</code></pre>\n\n<p><strong>edit:</strong></p>\n\n<p>While this is OK for the iPhone it may not work correctly in other devices.</p>\n\n<p>I would like to add some info I found at <a href=\"http://phoboslab.org/log/2012/06/x-type-making-of\">http://phoboslab.org/log/2012/06/x-type-making-of</a></p>\n\n<p>And his example is more cross browser/device compatible.</p>\n\n<blockquote>\n  <p>Mobile Safari and Chrome both support the orientationchange event,\n  which makes this easy. However, we can not rely on window.orientation,\n  which reports the rotation in degrees (0, 90, 180 or 270), because\n  some devices report 0\u00b0 for portrait mode, while others report 0\u00b0 for\n  landscape. How convenient!</p>\n  \n  <p>The solution is to just check if the window height is bigger than the\n  width \u2013 if so, we're obviously in portrait mode! But as this would be\n  too easy, Chrome's Browser offers another challenge for us: it only\n  updates the window dimensions after it has fired the orientationchange\n  event. So we listen for orientationchange and resize events. Sigh.</p>\n</blockquote>\n\n<pre><code>var wasPortrait = -1;\nvar checkOrientation = function() {\n    var isPortrait = (window.innerHeight &gt; window.innerWidth);\n    if( isPortrait === wasPortrait ) { return; // Nothing to do here }\n    wasPortrait = isPortrait;\n\n    // Do your stuff...\n};\nwindow.addEventListener( 'orientationchange', checkOrientation, false );\nwindow.addEventListener( 'resize', checkOrientation, false );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<h2>Mobile PHONES / TABLETS ONLY</h2>\n\n<pre><code>switch ( window.orientation ) {\n\n    case 0:\n        alert('portrait mode');\n    break;\n\n    case 90:\n        alert('landscape mode screen turned to the left');\n    break;\n\n    case -90:\n        alert('landscape mode screen turned to the right');\n    break;\n\n}\n</code></pre>\n\n<p><strong>This only work for phones and tablets</strong>! Basic orientation (case 0) differs between tablets. Samsung case 0 is landscape, iPad case 0 is portrait.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Out of curiosity I've been playing with jQuery to determine the browser's screen size, and it occurred to me that screen size could be used to determine whether or not a visitor was using an iPhone/iTouch to view the site.</p>\n\n<p>So I used the following to test this:</p>\n\n<pre><code>$(document).ready(\n\n    function() {\n\n        var screenX = screen.width,\n            screenY = screen.height;\n\n        alert(\"X: \" + screenX + \" Y: \" + screenY);\n\n        if (screenX == 320 &amp;&amp; screenY == 396) {\n            $('div#wrap').css('background-color','#f00');\n        }\n\n        else if (screenY == 320 &amp;&amp; screenX == 396) {\n            $('div#wrap').css('background-color','#0f0');\n        }\n    }\n);\n</code></pre>\n\n<p>On viewing the page via iPhone, I notice that the dimensions are consistently (regardless of orientation):</p>\n\n<p>x: 320, y: 396</p>\n\n<p>This is regardless of orientation. I haven't, as yet, attempted to use an <code>onChange</code> event to detect changes (mainly because I'm still so new at jQuery), but I wondered if there was a way to determine, via jQuery or plain javascript, the iPhone/iTouch's orientation?</p>\n",
            "last_activity_date": 1395750761,
            "question_id": 2323281,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "iphone",
                "ipod-touch"
            ],
            "title": "Can js/jQuery determine the orientation of the iPhone?"
        }
    ]
}
