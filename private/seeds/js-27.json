{
    "items": [
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><a href=\"http://davecardwell.co.uk/javascript/jquery/plugins/jquery-getpath/\">jQuery-GetPath</a> is a good starting point: it'll give you the item's ancestors, like this:</p>\n\n<pre><code>var path = $('#foo').getPath();\n// e.g., \"html &gt; body &gt; div#bar &gt; ul#abc.def.ghi &gt; li#foo\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I see now that a plugin existed (with the same name I thought of too), but here's just some quick JavaScript I wrote. It takes no consideration to the ids or classes of elements &ndash; only the structure (and adds <code>:eq(x)</code> where a node name is ambiguous).</p>\n\n<pre><code>jQuery.fn.getPath = function () {\n    if (this.length != 1) throw 'Requires one element.';\n\n    var path, node = this;\n    while (node.length) {\n        var realNode = node[0], name = realNode.localName;\n        if (!name) break;\n        name = name.toLowerCase();\n\n        var parent = node.parent();\n\n        var siblings = parent.children(name);\n        if (siblings.length &gt; 1) { \n            name += ':eq(' + siblings.index(realNode) + ')';\n        }\n\n        path = name + (path ? '&gt;' + path : '');\n        node = parent;\n    }\n\n    return path;\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>Here's a version of Blixt's answer that works in IE:</p>\n\n<pre><code>jQuery.fn.getPath = function () {\n    if (this.length != 1) throw 'Requires one element.';\n\n    var path, node = this;\n    while (node.length) {\n        var realNode = node[0];\n        var name = (\n\n            // IE9 and non-IE\n            realNode.localName ||\n\n            // IE &lt;= 8\n            realNode.tagName ||\n            realNode.nodeName\n\n        );\n\n        // on IE8, nodeName is '#document' at the top level, but we don't need that\n        if (!name || name == '#document') break;\n\n        name = name.toLowerCase();\n        if (realNode.id) {\n            // As soon as an id is found, there's no need to specify more.\n            return name + '#' + realNode.id + (path ? '&gt;' + path : '');\n        } else if (realNode.className) {\n            name += '.' + realNode.className.split(/\\s+/).join('.');\n        }\n\n        var parent = node.parent(), siblings = parent.children(name);\n        if (siblings.length &gt; 1) name += ':eq(' + siblings.index(node) + ')';\n        path = name + (path ? '&gt;' + path : '');\n\n        node = parent;\n    }\n\n    return path;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I just wanted to share my version too because it is very clear to understand. I tested this script in all common browsers and it is working like a boss.</p>\n\n<pre><code>jQuery.fn.getPath = function () {\n    var current = $(this);\n    var path = new Array();\n    var realpath = \"BODY\";\n    while ($(current).prop(\"tagName\") != \"BODY\") {\n        var index = $(current).parent().find($(current).prop(\"tagName\")).index($(current));\n        var name = $(current).prop(\"tagName\");\n        var selector = \" \" + name + \":eq(\" + index + \") \";\n        path.push(selector);\n        current = $(current).parent();\n    }\n    while (path.length != 0) {\n        realpath += path.pop();\n    }\n    return realpath;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Same solution like that one from @Blixt but compatible with multiple jQuery elements.</p>\n\n<p><code>jQuery('.some-selector')</code> can result in one or many DOM elements. @Blixt's solution works unfortunately only with the first one. My solution concatenates all them with <code>,</code>.</p>\n\n<p><strong>Improved</strong></p>\n\n<pre><code>jQuery.fn.extend({\n    getPath: function() {\n        var pathes = [];\n\n        this.each(function(index, element) {\n            var path, $node = jQuery(element);\n\n            while ($node.length) {\n                var realNode = $node.get(0), name = realNode.localName;\n                if (!name) { break; }\n\n                name = name.toLowerCase();\n                var parent = $node.parent();\n                var sameTagSiblings = parent.children(name);\n\n                if (sameTagSiblings.length &gt; 1)\n                {\n                    allSiblings = parent.children();\n                    var index = allSiblings.index(realNode) +1;\n                    if (index &gt; 0) {\n                        name += ':nth-child(' + index + ')';\n                    }\n                }\n\n                path = name + (path ? ' &gt; ' + path : '');\n                $node = parent;\n            }\n\n            pathes.push(path);\n        });\n\n        return pathes.join(',');\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Following up on what alex wrote.\njQuery-GetPath is a great starting point but I have modified it a little to incorporate :eq(), allowing me to distinguish between multiple id-less elements.</p>\n\n<p>Add this before the getPath return line:</p>\n\n<pre><code>if (typeof id == 'undefined' &amp;&amp; cur != 'body') {\n    allSiblings = $(this).parent().children(cur);\n    var index = allSiblings.index(this);// + 1;\n    //if (index &gt; 0) {\n        cur += ':eq(' + index + ')';\n    //}\n}\n</code></pre>\n\n<p>This will return a path like \"html > body > ul#hello > li.5:eq(1)\"</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>In psuedo code, this is what I want.</p>\n\n<pre><code>var selector = $(this).cssSelectorAsString(); // Made up method...\n// selector is now something like: \"html&gt;body&gt;ul&gt;li&gt;img[3]\"\nvar element = $(selector);\n</code></pre>\n\n<p>The reason is that I need to pass this off to an external environment, where a string is my only way to exchange data.  This external environment then needs to send back a result, along with what element to update.  So I need to be able to serialize a unique CSS selector for every element on the page.</p>\n\n<p>I noticed jquery has a <code>selector</code> method, but it does not appear to work in this context.  It only works if the object was created with a selector.  It does not work if the object was created with an HTML node object.</p>\n",
            "last_activity_date": 1416403441,
            "question_id": 2068272,
            "score": 23,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "jquery-selectors",
                "css-selectors"
            ],
            "title": "Getting a jQuery selector for an element"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>var keys = [];\nfor (var key in dictionary) {\n  if (dictionary.hasOwnProperty(key)) {\n    keys.push(key);\n  }\n}\n</code></pre>\n\n<p><code>hasOwnProperty</code> is needed because it's possible to insert keys into the prototype object of <code>dictionary</code>. But you typically don't want those keys included in your list.</p>\n\n<p>For example, if you do this:</p>\n\n<pre><code>Object.prototype.c = 3;\nvar dictionary = {a: 1, b: 2};\n</code></pre>\n\n<p>and then do a <code>for...in</code> loop over <code>dictionary</code>, you'll get <code>a</code> and <code>b</code>, but you'll also get <code>c</code>.</p>\n",
                    "is_accepted": true,
                    "score": 145
                },
                {
                    "body": "<pre><code>for (var key in dictionary) {\n  // do something with key\n}\n</code></pre>\n\n<p>It's the <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Statements/for...in\">for..in statement</a>.</p>\n",
                    "is_accepted": false,
                    "score": 146
                },
                {
                    "body": "<p>Just a quick note, be wary of using for..in if you use a library (jQuery, prototype, etc.), as most of them add methods to created Objects (including dictionaries). </p>\n\n<p>This will mean that when you loop over them, method names will appear as keys. If you are using a library, look at the documentation and look for an enumerable section, where you will find the right methods for iteration of your objects.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>You can use: <code>Object.keys(obj)</code></p>\n\n<p>Example:</p>\n\n<pre><code>var dictionary = {\"cats\":[1,2,37,38,40,32,33,35,39,36], \"dogs\": [4,5,6,3,2]};\n\n// Get the keys\nvar keys = Object.keys(dictionary);\n</code></pre>\n\n<p>See reference below for browser support. It is supported in Firefox 4.20, Chrome 5, IE9. The link below contains a code snippet that you can add if <code>Object.keys()</code> is not supported in your browser.</p>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/keys\">https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/keys</a></p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>This is what I use<br>\nDictionaryObj being the javascript dictionary object you want to go through.\nvalue, key ofcourse being the names of them in the dictionary.</p>\n\n<pre><code> $.each(DictionaryObj, function (value, key) {\n            $(\"#storeDuplicationList\")\n                .append($(\"&lt;li&gt;&lt;/li&gt;\")\n                .attr(\"value\", value)\n                .text(key));\n        });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have an associative array in JSON:</p>\n\n<pre><code>var dictionary = {\n    \"cats\": [1,2,3,4,5], \n    \"dogs\": [6,7,8,9,10]\n};\n</code></pre>\n\n<p>How do I get this dictionary's keys? i.e. I want</p>\n\n<pre><code>var keys = [\"cats\", \"dogs\"];\n</code></pre>\n",
            "last_activity_date": 1424462132,
            "question_id": 558981,
            "score": 105,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "Iterating through list of keys for associative array in JSON"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Three options for you:</p>\n\n<h3>1. Using just JavaScript's <code>Date</code> object (no libraries):</h3>\n\n<p>My previous answer for #1 was wrong (it added 24 hours, failing to account for transitions to and from daylight saving time; <a href=\"http://stackoverflow.com/users/22399/clever-human\">Clever Human</a> pointed out that it would fail with November 7, 2010 in the Eastern timezone). Instead, <a href=\"http://stackoverflow.com/questions/3674539/javascript-date-increment-question/3674559#3674559\">Jigar's answer</a> is the correct way to do this without a library:</p>\n\n<pre><code>var tomorrow = new Date();\ntomorrow.setDate(tomorrow.getDate() + 1);\n</code></pre>\n\n<p><em>(This answer is currently accepted, so I can't delete it. Before it was accepted I suggested to the OP they accept Jigar's, but perhaps they accepted this one for items #2 or #3 on the list.)</em></p>\n\n<h3>2. Using <a href=\"http://momentjs.com/\">MomentJS</a>:</h3>\n\n<pre><code>var today = moment();\nvar tomorrow = moment(today).add('days', 1);\n</code></pre>\n\n<p>(Beware that <code>add</code> modifies the instance you call it on, rather than returning a new instance, so <code>today.add('days', 1)</code> would modify <code>today</code>. That's why we start with a cloning op on <code>var tomorrow = ...</code>.)</p>\n\n<h3>3. Using <a href=\"http://www.datejs.com/\">DateJS</a>, but it hasn't been updated in a long time:</h3>\n\n<pre><code>var today = new Date(); // Or Date.today()\nvar tomorrow = today.add(1).day();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 139
                },
                {
                    "body": "<pre><code>var myDate = new Date();\n\n//add a day to the date\nmyDate.setDate(myDate.getDate() + 1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 60
                },
                {
                    "body": "<p>You first need to parse your string before following the other people's suggestion:</p>\n\n<pre><code>var dateString = \"2010-09-11\";\nvar myDate = new Date(dateString);\n\n//add a day to the date\nmyDate.setDate(myDate.getDate() + 1);\n</code></pre>\n\n<p>If you want it back in the same format again you will have to do that \"manually\":</p>\n\n<pre><code>var y = myDate.getFullYear(),\n    m = myDate.getMonth() + 1, // january is month 0 in javascript\n    d = myDate.getDate();\nvar pad = function(val) { var str = val.toString(); return (str.length &lt; 2) ? \"0\" + str : str};\ndateString = [y, pad(m), pad(d)].join(\"-\");\n</code></pre>\n\n<p>But I suggest getting Date.js as mentioned in other replies, that will help you <a href=\"http://hyperboleandahalf.blogspot.com/2010/04/alot-is-better-than-you-at-everything.html\" rel=\"nofollow\">alot</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>None of the examples in this answer seem to work with Daylight Saving Time adjustment days. On those days, the number of hours in a day are not 24 (they are 23 or 25, depending on if you are \"springing forward\" or \"falling back\".)</p>\n\n<p>The below AddDays javascript function accounts for daylight saving time:</p>\n\n<pre><code>function addDays(date, amount) {\n  var tzOff = date.getTimezoneOffset() * 60 * 1000,\n      t = date.getTime(),\n      d = new Date(),\n      tzOff2;\n\n  t += (1000 * 60 * 60 * 24) * amount;\n  d.setTime(t);\n\n  tzOff2 = d.getTimezoneOffset() * 60 * 1000;\n  if (tzOff != tzOff2) {\n    var diff = tzOff2 - tzOff;\n    t += diff;\n    d.setTime(t);\n  }\n\n  return d;\n}\n</code></pre>\n\n<p>Here are the tests I used to test the function:</p>\n\n<pre><code>    var d = new Date(2010,10,7);\n    var d2 = AddDays(d, 1);\n    document.write(d.toString() + \"&lt;br /&gt;\" + d2.toString());\n\n    d = new Date(2010,10,8);\n    d2 = AddDays(d, -1)\n    document.write(\"&lt;hr /&gt;&lt;br /&gt;\" +  d.toString() + \"&lt;br /&gt;\" + d2.toString());\n\n    d = new Date('Sun Mar 27 2011 01:59:00 GMT+0100 (CET)');\n    d2 = AddDays(d, 1)\n    document.write(\"&lt;hr /&gt;&lt;br /&gt;\" +  d.toString() + \"&lt;br /&gt;\" + d2.toString());\n\n    d = new Date('Sun Mar 28 2011 01:59:00 GMT+0100 (CET)');\n    d2 = AddDays(d, -1)\n    document.write(\"&lt;hr /&gt;&lt;br /&gt;\" +  d.toString() + \"&lt;br /&gt;\" + d2.toString());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Not entirelly sure if it is a BUG(Tested Firefox 32.0.3 and Chrome 38.0.2125.101), but the following code will fail on Brazil (-3 GMT):</p>\n\n<pre><code>Date.prototype.shiftDays = function(days){    \n  days = parseInt(days, 10);\n  this.setDate(this.getDate() + days);\n  return this;\n}\n\n$date = new Date(2014, 9, 16,0,1,1);\n$date.shiftDays(1);\nconsole.log($date+\"\");\n$date.shiftDays(1);\nconsole.log($date+\"\");\n$date.shiftDays(1);\nconsole.log($date+\"\");\n$date.shiftDays(1);\nconsole.log($date+\"\");\n</code></pre>\n\n<p>Result:</p>\n\n<pre><code>Fri Oct 17 2014 00:01:01 GMT-0300\nSat Oct 18 2014 00:01:01 GMT-0300\nSat Oct 18 2014 23:01:01 GMT-0300\nSun Oct 19 2014 23:01:01 GMT-0200\n</code></pre>\n\n<p>Adding one Hour to the date, will make it work perfectly (but does not solve the problem).</p>\n\n<pre><code>$date = new Date(2014, 9, 16,0,1,1);\n</code></pre>\n\n<p>Result:</p>\n\n<pre><code>Fri Oct 17 2014 01:01:01 GMT-0300\nSat Oct 18 2014 01:01:01 GMT-0300\nSun Oct 19 2014 01:01:01 GMT-0200\nMon Oct 20 2014 01:01:01 GMT-0200\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to increment a date value by one day in JavaScript.</p>\n\n<p>For example, I have a date value 2010-09-11 and I need to store the date of the next day in a JavaScript variable.</p>\n\n<p>How can I increment a date by a day?</p>\n",
            "last_activity_date": 1412884201,
            "question_id": 3674539,
            "score": 72,
            "tags": [
                "javascript",
                "date",
                "datetime"
            ],
            "title": "Incrementing a date in JavaScript"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>on the last line, don't use <code>$(this).remove()</code> use <code>$(this).hide()</code> instead.</p>\n\n<p>EDIT: To clarify,on the close click event you're removing the <code>#terms</code> div from the DOM which is why its not coming back. You just need to hide it instead.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Hi Guys I managed to solve it. </p>\n\n<p>I used destroy instead close function (It doesn't make any sense) but it worked!</p>\n\n<pre><code>$(document).ready(function() {\n$('#showTerms').click(function()\n{\n    $('#terms').css('display','inline');\n    $('#terms').dialog({resizable: false,\n        modal: true,\n        width: 400,\n        height: 450,\n        overlay: { backgroundColor: \"#000\", opacity: 0.5 },\n        buttons:{ \"Close\": function() { $(this).dialog('**destroy**'); } },\n        close: function(ev, ui) { $(this).close(); },\n    });         \n});   \n$('#form1 input#calendarTEST').datepicker({ dateFormat: 'MM d, yy' });\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<pre><code>$(this).dialog('destroy');\n</code></pre>\n\n<p>works!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You're actually supposed to use <code>$(\"#terms\").dialog({ autoOpen: false });</code> to initialize it.\nThen you can use <code>$('#terms').dialog('open');</code> to open the dialog, and <code>$('#terms').dialog('close');</code> to close it.</p>\n",
                    "is_accepted": false,
                    "score": 103
                },
                {
                    "body": "<p>I believe you can only initialize the dialog one time. The example above is trying to initialize the dialog every time #terms is clicked. This will cause problems. Instead, the initialization should occur outside of the click event. Your example should probably look something like this:</p>\n\n<pre><code>$(document).ready(function() {\n    // dialog init\n    $('#terms').dialog({\n        autoOpen: false,\n        resizable: false,\n        modal: true,\n        width: 400,\n        height: 450,\n        overlay: { backgroundColor: \"#000\", opacity: 0.5 },\n        buttons: { \"Close\": function() { $(this).dialog('close'); } },\n        close: function(ev, ui) { $(this).close(); }\n    });\n    // click event\n    $('#showTerms').click(function(){\n        $('#terms').dialog('open').css('display','inline');      \n    });\n    // date picker\n    $('#form1 input#calendarTEST').datepicker({ dateFormat: 'MM d, yy' });\n});\n</code></pre>\n\n<p>I'm thinking that once you clear that up, it should fix the 'open from link' issue you described.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>.close() is mor general and can be used in reference to more objects.  .dialog('close') can only be used with dialogs</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The jQuery documentation has a link to this article \n'<a href=\"http://blog.nemikor.com/2009/04/08/basic-usage-of-the-jquery-ui-dialog/\" rel=\"nofollow\">Basic usage of the jQuery UI dialog</a>'\nthat explains this situation and how to resolve it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For me this approach works: </p>\n\n<p>The dialog may be closed by clicking the X on the dialog or by clicking 'Bewaren'. I'm adding an (arbitrary) id because I need to be sure every bit of html added to the dom is removed afterwards.</p>\n\n<pre><code>$('&lt;div id=\"dossier_edit_form_tmp_id\"&gt;').html(data.form)\n.data('dossier_id',dossier_id)\n.dialog({\n        title: 'Opdracht wijzigen',\n        show: 'clip',\n        hide: 'clip',\n        minWidth: 520,\n        width: 520,\n        modal: true,\n        buttons: { 'Bewaren': dossier_edit_form_opslaan },\n        close: function(event, ui){ \n                                  $(this).dialog('destroy'); \n                                  $('#dossier_edit_form_tmp_id').remove();\n               }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I use the dialog as an dialog file browser and uploader then I rewrite the code like this</p>\n\n<pre><code>var dialog1 = $(\"#dialog\").dialog({ \n              autoOpen: false, \n              height: 480, \n              width: 640 \n}); \n$('#tikla').click(function() {  \n    dialog1.load('./browser.php').dialog('open');\n});   \n</code></pre>\n\n<p>everything seems to work great.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had the same problem with jquery-ui overlay dialog box - it would work only once and then stop unless i reload the page. I found the answer in one of their examples -<br>\nMultiple overlays on a same page<br>\n<a href=\"http://flowplayer.org/tools/demos/overlay/multiple.html\" rel=\"nofollow\">flowplayer_tools_multiple_open_close</a><br/>\n - who would have though, right?? :-) -  </p>\n\n<p>the important setting appeared to be </p>\n\n<pre><code>oneInstance: false\n</code></pre>\n\n<p>so, now i have it like this - </p>\n\n<pre><code>$(document).ready(function() {\n\n var overlays = null;\n\n overlays = jQuery(\"a[rel]\");\n\n for (var n = 0; n &lt; overlays.length; n++) {\n\n    $(overlays[n]).overlay({\n        oneInstance: false, \n        mask: '#669966',\n        effect: 'apple',\n        onBeforeLoad: function() {\n            overlay_before_load(this);\n        }\n    });\n\n  }\n\n}\n</code></pre>\n\n<p>and everything works just fine</p>\n\n<p>hope this helps somebody</p>\n\n<p>O.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code> &lt;button onClick=\"abrirOpen()\"&gt;Open Dialog&lt;/button&gt;\n\n&lt;script type=\"text/javascript\"&gt;\nvar $dialogo = $(\"&lt;div&gt;&lt;/div&gt;\").html(\"Aqui tu contenido(here your content)\").dialog({\n       title: \"Dialogo de UI\",\n       autoOpen: false,\n       close: function(ev, ui){\n               $(this).dialog(\"destroy\");\n       }\n function abrirOpen(){\n       $dialogo.dialog(\"open\");\n }\n});\n\n//**Esto funciona para mi... (this works for me)**\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is a super old thread but since the answer even says \"It doesn't make any sense\", I thought I'd add the answer...</p>\n\n<p>The original post used $(this).remove(); in the close handler, this would actually remove the dialog div from the DOM. Attempting to initialize a dialog again wouldn't work because the div was removed.</p>\n\n<p>Using $(this).dialog('destroy') is calling the method destroy defined in the dialog object which does not remove it from the DOM.</p>\n\n<p>From the documentation:</p>\n\n<blockquote>\n  <p>destroy()</p>\n  \n  <blockquote>\n    <p>Removes the dialog functionality completely. This will return the element back to its >>pre-init state.\n    This method does not accept any arguments.</p>\n  </blockquote>\n</blockquote>\n\n<p>That said, only destroy or remove on close if you have a good reason to.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a problem with the jquery-ui dialog box. The problem is that when I close the dialog box and then I click on the link that triggers it, it does not pop-up again unless I refresh the page. How can I call the dialog box back without refreshing the actual page. Have a look:</p>\n\n<pre><code>$(document).ready(function() {\n    $('#showTerms').click(function()\n    {\n        $('#terms').css('display','inline');\n        $('#terms').dialog({\n            resizable: false,\n            modal: true,\n            width: 400,\n            height: 450,\n            overlay: { backgroundColor: \"#000\", opacity: 0.5 },\n            buttons:{ \"Close\": function() { $(this).dialog(\"close\"); } },\n            close: function(ev, ui) { $(this).remove(); },\n    }); \n});\n</code></pre>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1382547462,
            "question_id": 366854,
            "score": 72,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui"
            ],
            "title": "jQuery UI Dialog Box - Close Function"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>var timeoutId = 0;\n\n$('#myElement').mousedown(function() {\n    timeoutId = setTimeout(myFunction, 1000);\n}).bind('mouseup mouseleave', function() {\n    clearTimeout(timeoutId);\n});\n</code></pre>\n\n<p><strong>Edit</strong>: correction per AndyE...thanks!</p>\n\n<p><strong>Edit 2</strong>: using bind now for two events with same handler per gnarf</p>\n",
                    "is_accepted": true,
                    "score": 91
                },
                {
                    "body": "<p>Presumably you could kick off a setTimeout call in mousedown, and then cancel it in mouseup (if mouseup happens before your timeout completes).</p>\n\n<p>However, looks like there is a plugin: <a href=\"http://plugins.jquery.com/project/longclick\">longclick</a>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here's my current implementation:</p>\n\n<pre><code>$.liveClickHold = function(selector, fn) {\n\n    $(selector).live(\"mousedown\", function(evt) {\n\n        var $this = $(this).data(\"mousedown\", true);\n\n        setTimeout(function() {\n            if ($this.data(\"mousedown\") === true) {\n                fn(evt);\n            }\n        }, 500);\n\n    });\n\n    $(selector).live(\"mouseup\", function(evt) {\n        $(this).data(\"mousedown\", false);\n    });\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Aircoded (but tested on <a href=\"http://www.jsfiddle.net/gnarf/pZ6BM/\">this fiddle</a>)</p>\n\n<pre><code>(function($) {\n    function startTrigger(e) {\n        var $elem = $(this);\n        $elem.data('mouseheld_timeout', setTimeout(function() {\n            $elem.trigger('mouseheld');\n        }, e.data));\n    }\n\n    function stopTrigger() {\n        var $elem = $(this);\n        clearTimeout($elem.data('mouseheld_timeout'));\n    }\n\n\n    var mouseheld = $.event.special.mouseheld = {\n        setup: function(data) {\n            // the first binding of a mouseheld event on an element will trigger this\n            // lets bind our event handlers\n            var $this = $(this);\n            $this.bind('mousedown', +data || mouseheld.time, startTrigger);\n            $this.bind('mouseleave mouseup', stopTrigger);\n        },\n        teardown: function() {\n            var $this = $(this);\n            $this.unbind('mousedown', startTrigger);\n            $this.unbind('mouseleave mouseup', stopTrigger);\n        },\n        time: 750 // default to 750ms\n    };\n})(jQuery);\n\n// usage\n$(\"div\").bind('mouseheld', function(e) {\n    console.log('Held', e);\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>    var _timeoutId = 0;\n\n    var _startHoldEvent = function(e) {\n      _timeoutId = setInterval(function() {\n         myFunction.call(e.target);\n      }, 1000);\n    };\n\n    var _stopHoldEvent = function() {\n      clearInterval(_timeoutId );\n    };\n\n    $('#myElement').on('mousedown', _startHoldEvent).on('mouseup mouseleave', _stopHoldEvent);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I made a simple JQuery plugin for this if anyone is interested.</p>\n\n<p><a href=\"http://plugins.jquery.com/pressAndHold/\" rel=\"nofollow\">http://plugins.jquery.com/pressAndHold/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to be able to fire an event when a user clicks on a button, then holds that click down for 1000 to 1500 ms. </p>\n\n<p>Is there jQuery core functionality or a plugin that already enables this?</p>\n\n<p>Should I roll my own? Where should I start? </p>\n",
            "last_activity_date": 1388790268,
            "question_id": 4080497,
            "score": 69,
            "tags": [
                "javascript",
                "jquery",
                "events"
            ],
            "title": "How can I listen for a click-and-hold in jQuery?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You can do it with Javascript:</p>\n\n<pre><code>// Classic JS\nwindow.onscroll = function(ev) {\n  ev.preventDefault();\n}\n\n// jQuery\n$(window).scroll(function(ev) {\n  ev.preventDefault();\n}\n</code></pre>\n\n<p>And then disable it when your lightbox is closed.</p>\n\n<p>But if your lightbox contains a scroll bar, you won't be able to scroll while it's open. This is because <code>window</code> contains both <code>body</code> and <code>#lightbox</code>.\nSo you have to use an architecture like the following one:</p>\n\n<pre><code>&lt;body&gt;\n  &lt;div id=\"global\"&gt;&lt;/div&gt;\n  &lt;div id=\"lightbox\"&gt;&lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>And then apply the <code>onscroll</code> event only on <code>#global</code>.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>you can keep overflow:hidden but manage scroll position manually:</p>\n\n<p>before showing keep trace of actual scroll position:</p>\n\n<pre><code>var scroll = [$(document).scrollTop(),$(document).scrollLeft()];\n//show your lightbox and then reapply scroll position\n$(document).scrollTop(scroll[0]).scrollLeft(scroll[1]);\n</code></pre>\n\n<p>it should work</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Crude but working way will be to force the scroll back to top, thus effectively disabling scrolling:</p>\n\n<pre><code>var _stopScroll = false;\nwindow.onload = function(event) {\n    document.onscroll = function(ev) {\n        if (_stopScroll) {\n            document.body.scrollTop = \"0px\";\n        }\n    }\n};\n</code></pre>\n\n<p>When you open the lightbox raise the flag and when closing it,lower the flag.</p>\n\n<p><a href=\"http://jsfiddle.net/yahavbr/b4XcG/\" rel=\"nofollow\">Live test case</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>it's a bit hacky (so it may not be suitable for your application) but if the page under the overlayer can be \"fixed\" at the top, when you open the overlay you can set</p>\n\n<pre><code>body { position: fixed; overflow-y:scroll }\n</code></pre>\n\n<p>you should still see the right scrollbar but the content is not scrollable. When you close the overlay just revert these properties with</p>\n\n<pre><code>body { position: static; overflow-y:auto }\n</code></pre>\n\n<p>I just proposed this way only because you wouldn't need to change any scroll event</p>\n\n<p><strong>Update</strong></p>\n\n<p>You could also do a slight improvement: if you get the <code>document.documentElement.scrollTop</code> property via javascript just before you open the layer, you could dynamically assign that value as <code>top</code> property of the body element :) In this way the page will stand in its place, no matter if you're on top or on bottom of it. </p>\n\n<p>So your code would become</p>\n\n<p><strong>Css</strong></p>\n\n<pre><code>.noscroll { position: fixed; overflow-y:scroll }\n</code></pre>\n\n<p><strong>JS</strong></p>\n\n<pre><code>$('body').css('top', -(document.documentElement.scrollTop) + 'px')\n         .addClass('noscroll');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 47
                },
                {
                    "body": "<p>Four little additions to the selected solution:</p>\n\n<ol>\n<li>Apply 'noscroll' to <strong>html instead of to body</strong> to prevent double scroll bars in IE</li>\n<li>To <strong>check if there's actually a scroll bar</strong> before adding the 'noscroll' class. Otherwise, the site will also jump pushed by the new non-scrolling scroll bar.</li>\n<li>To keep any possible <strong>scrollTop</strong> so the entire page doesn't go back to the top (like Fabrizio's update, but you need to grab the value before adding the 'noscroll' class)</li>\n<li>Not all browsers handle scrollTop the same way as documented at <a href=\"http://help.dottoro.com/ljnvjiow.php\">http://help.dottoro.com/ljnvjiow.php</a></li>\n</ol>\n\n<p>Complete solution that seems to work for most browsers:</p>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>html.noscroll {\n    position: fixed; \n    overflow-y: scroll;\n    width: 100%;\n}\n</code></pre>\n\n<p><strong>Disable scroll</strong></p>\n\n<pre><code>if ($(document).height() &gt; $(window).height()) {\n     var scrollTop = ($('html').scrollTop()) ? $('html').scrollTop() : $('body').scrollTop(); // Works for Chrome, Firefox, IE...\n     $('html').addClass('noscroll').css('top',-scrollTop);         \n}\n</code></pre>\n\n<p><strong>Enable scroll</strong></p>\n\n<pre><code>var scrollTop = parseInt($('html').css('top'));\n$('html').removeClass('noscroll');\n$('html,body').scrollTop(-scrollTop);\n</code></pre>\n\n<p>Thanks to Fabrizio and Dejan for putting me on the right track and to Brodingo for <a href=\"https://twitter.com/Brodingo/status/29599155414\">the solution to the double scroll bar</a></p>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>This is the solution we went with. Simply save the scroll position when the overlay is opened, scroll back to the saved position any time the user attempted to scroll the page, and turn the listener off when the overlay is closed.</p>\n\n<p>It's a bit jumpy on IE, but works like a charm on Firefox/Chrome.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var body = $(\"body\"),\r\n  overlay = $(\"#overlay\"),\r\n  overlayShown = false,\r\n  overlayScrollListener = null,\r\n  overlaySavedScrollTop = 0,\r\n  overlaySavedScrollLeft = 0;\r\n\r\nfunction showOverlay() {\r\n  overlayShown = true;\r\n\r\n  // Show overlay\r\n  overlay.addClass(\"overlay-shown\");\r\n\r\n  // Save scroll position\r\n  overlaySavedScrollTop = body.scrollTop();\r\n  overlaySavedScrollLeft = body.scrollLeft();\r\n\r\n  // Listen for scroll event\r\n  overlayScrollListener = body.scroll(function() {\r\n    // Scroll back to saved position\r\n    body.scrollTop(overlaySavedScrollTop);\r\n    body.scrollLeft(overlaySavedScrollLeft);\r\n  });\r\n}\r\n\r\nfunction hideOverlay() {\r\n  overlayShown = false;\r\n\r\n  // Hide overlay\r\n  overlay.removeClass(\"overlay-shown\");\r\n\r\n  // Turn scroll listener off\r\n  if (overlayScrollListener) {\r\n    overlayScrollListener.off();\r\n    overlayScrollListener = null;\r\n  }\r\n}\r\n\r\n// Click toggles overlay\r\n$(window).click(function() {\r\n  if (!overlayShown) {\r\n    showOverlay();\r\n  } else {\r\n    hideOverlay();\r\n  }\r\n});</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>/* Required */\r\nhtml, body { margin: 0; padding: 0; height: 100%; background: #fff; }\r\nhtml { overflow: hidden; }\r\nbody { overflow-y: scroll; }\r\n\r\n/* Just for looks */\r\n.spacer { height: 300%; background: orange; background: linear-gradient(#ff0, #f0f); }\r\n.overlay { position: fixed; top: 20px; bottom: 20px; left: 20px; right: 20px; z-index: -1; background: #fff; box-shadow: 0 0 5px rgba(0, 0, 0, .3); overflow: auto; }\r\n.overlay .spacer { background: linear-gradient(#88f, #0ff); }\r\n.overlay-shown { z-index: 1; }</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n\r\n&lt;h1&gt;Top of page&lt;/h1&gt;\r\n&lt;p&gt;Click to toggle overlay. (This is only scrollable when overlay is &lt;em&gt;not&lt;/em&gt; open.)&lt;/p&gt;\r\n&lt;div class=\"spacer\"&gt;&lt;/div&gt;\r\n&lt;h1&gt;Bottom of page&lt;/h1&gt;\r\n&lt;div id=\"overlay\" class=\"overlay\"&gt;\r\n  &lt;h1&gt;Top of overlay&lt;/h1&gt;\r\n  &lt;p&gt;Click to toggle overlay. (Containing page is no longer scrollable, but this is.)&lt;/p&gt;\r\n  &lt;div class=\"spacer\"&gt;&lt;/div&gt;\r\n  &lt;h1&gt;Bottom of overlay&lt;/h1&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to disable the html/body scrollbar of the parent while i'm using a lightbox. The main word here is disable i do not want to hide it with <code>overflow: hidden;</code>.</p>\n\n<p>reason for this is that <code>overflow: hidden</code> makes the site jump and take up the area where the scroll was.</p>\n\n<p><strong>EDIT</strong><br />\nI just want to know if its possible to disable a scrollbar while showing it. </p>\n\n<p><strong>SOLUTION</strong><br />\nI add this class</p>\n\n<pre><code>body.noscroll\n{\n    position: fixed; \n    overflow-y: scroll;\n    width: 100%;\n}\n</code></pre>\n\n<p>And add it to the body only when I open up the lightbox, and remove it when I close the lightbox</p>\n\n<pre><code>$('body').addClass('noscroll');\n$('body').removeClass('noscroll');\n</code></pre>\n\n<p>this works for me and I use the fancyapp.</p>\n\n<p>thanks to <strong>Fabrizio Calderan</strong></p>\n",
            "last_activity_date": 1411765364,
            "question_id": 8701754,
            "score": 43,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css"
            ],
            "title": "Just disable scroll not hide it?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>There is <a href=\"http://getfirebug.com/firebuglite\">Firebug Lite</a> which gives a lot of Firebug functionality in IE.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Try <a href=\"http://log4javascript.org/\">log4javascript</a>, which has a logging console that works in all mainstream browsers. Full disclosure: I wrote it.</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>You can access IE8 script console by launching the \"Developer Tools\" (F12). Click the \"Script\" tab, then click \"Console\" on the right.</p>\n\n<p>From within your JavaScript code, you can do any of the following:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    console.log('some msg');\n    console.info('information');\n    console.warn('some warning');\n    console.error('some error');\n    console.assert(false, 'YOU FAIL');\n&lt;/script&gt;\n</code></pre>\n\n<p>Also, you can clear the Console by calling <code>console.clear()</code>.</p>\n\n<p><strong>NOTE:</strong> It appears you must launch the Developer Tools first then refresh your page for this to work.</p>\n",
                    "is_accepted": true,
                    "score": 106
                },
                {
                    "body": "<h2>Extremely important if using console.log() in production:</h2>\n\n<p>if you end up releasing <code>console.log()</code> commands to production you need to put in some kind of fix for IE - because <code>console</code> is only defined when in <code>F12</code> debugging mode. </p>\n\n<pre><code>if (typeof console == \"undefined\") {\n    this.console = { log: function (msg) { alert(msg); } };\n}\n</code></pre>\n\n<p><em>[obviously remove the alert(msg); statement once you've verified it works]</em></p>\n\n<p>See also <a href=\"http://stackoverflow.com/questions/3326650/console-is-undefined-error-for-internet-explorer\">&#39;console&#39; is undefined error for internet explorer</a> for other solutions and more details</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>For IE8 or console support limited to console.log (no debug, trace, ...) you can do the following:</p>\n\n<ul>\n<li><p>If console OR console.log undefined: Create dummy functions for\nconsole functions (trace, debug, log, ...)</p>\n\n<p><code>window.console = {\n      debug : function() {}, ...};</code></p></li>\n<li><p>Else if console.log is defined (IE8) AND console.debug (any other) is not defined: redirect all logging functions to console.log, this allows to keep those logs !</p>\n\n<p><code>window.console = {\n          debug : window.console.log, ...};</code></p></li>\n</ul>\n\n<p>Not sure about the assert support in various IE versions, but any suggestions are welcome.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Simple IE7 and below shim that preserves Line Numbering for other browsers:</p>\n\n<pre><code>/* console shim*/\n(function () {\n    var f = function () {};\n    if (!window.console) {\n        window.console = {\n            log:f, info:f, warn:f, debug:f, error:f\n        };\n    }\n}());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In his book, \"Secrets of Javascript Ninja\", John Resig (creator of jQuery) has a really simple code which will handle cross-browser console.log issues. He explains that he would like to have a log message which works with all browsers and here is how he coded it:</p>\n\n<pre><code>function log() {\n  try {\n    console.log.apply(console, arguments);\n  } catch(e) {\n  try {\n    opera.postError.apply(opera, arguments);\n  }\n  catch(e) {\n    alert(Array.prototype.join.call( arguments, \" \"));\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use cross-browser wrapper: <a href=\"https://github.com/MichaelZelensky/log.js\" rel=\"nofollow\">https://github.com/MichaelZelensky/log.js</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a console logger for IE? I'm trying to log a bunch of tests/assertions to the console but I can't do this in IE.</p>\n",
            "last_activity_date": 1392740021,
            "question_id": 2656730,
            "score": 76,
            "tags": [
                "javascript",
                "internet-explorer",
                "internet-explorer-8",
                "console",
                "firebug"
            ],
            "title": "Internet Explorer Console"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Call the <code>marker.setIcon('newImage.png')</code>... Look <a href=\"http://code.google.com/apis/maps/documentation/v3/reference.html#Marker\">here</a> for the docs. Alternatively, you can also call it with a <a href=\"http://code.google.com/apis/maps/documentation/v3/reference.html#MarkerImage\">MarkerImage</a> object.</p>\n\n<p>Are you asking about the actual way to do it? You could just create each div, and a add a mouseover and mouseout listener that would change the icon and back for the markers. </p>\n",
                    "is_accepted": false,
                    "score": 105
                },
                {
                    "body": "<p>The <a href=\"http://code.google.com/p/gmaps-utility-library-dev/\">GMaps Utility Library</a> has a plugin called <a href=\"http://gmaps-utility-library-dev.googlecode.com/svn/tags/mapiconmaker/\">MapIconMaker</a> that makes it easy to generate different marker styles on the fly.  It uses Google Charts to draw the markers. </p>\n\n<p>There's a good demo <a href=\"http://gmaps-utility-library-dev.googlecode.com/svn/tags/mapiconmaker/1.1/examples/markericonoptions-wizard.html\">here</a> that shows what kind of markers you can make with it.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This thread might be dead, but <a href=\"http://google-maps-utility-library-v3.googlecode.com/svn/trunk/styledmarker/\">StyledMarker</a> is available for API v3. Just bind the color change you want to the correct DOM event using the <strong>addDomListener()</strong> method. This <a href=\"http://google-maps-utility-library-v3.googlecode.com/svn/trunk/styledmarker/examples/change_color.htm\">example</a> is pretty close to what you want to do. If you look at the page source, change:</p>\n\n<pre><code>google.maps.event.addDomListener(document.getElementById(\"changeButton\"),\"click\",function() {\n  styleIcon.set(\"color\",\"#00ff00\");\n  styleIcon.set(\"text\",\"Go\");\n});\n</code></pre>\n\n<p>to something like:</p>\n\n<pre><code>google.maps.event.addDomListener(\"mouseover\",function() {\n  styleIcon.set(\"color\",\"#00ff00\");\n  styleIcon.set(\"text\",\"Go\");\n});\n</code></pre>\n\n<p>That should be enough to get you moving along.</p>\n\n<p>The Wikipedia page on <a href=\"http://en.wikipedia.org/wiki/DOM_events\">DOM Events</a> will also help you target the event that you want to capture on the client-side.</p>\n\n<p>Good luck (if you still need it)</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You can also use a circle as a marker icon, for example:  </p>\n\n<pre><code>var oMarker = new google.maps.Marker({\n    position: latLng,\n    sName: \"Marker Name\",\n    map: map,\n    icon: {\n        path: google.maps.SymbolPath.CIRCLE,\n        scale: 8.5,\n        fillColor: \"#F00\",\n        fillOpacity: 0.4,\n        strokeWeight: 0.4\n    },\n});\n</code></pre>\n\n<p>and then, if you want to change the marker dynamically (like on mouseover), you can, for example:  </p>\n\n<pre><code>oMarker.setIcon({\n            path: google.maps.SymbolPath.CIRCLE,\n            scale: 10,\n            fillColor: \"#00F\",\n            fillOpacity: 0.8,\n            strokeWeight: 1\n        })\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Using Google Maps API v3, how do I pro grammatically change the marker icon?</p>\n\n<p>What I would like to do is, when someone hovers over a link - to have the corresponding marker icon on the map change colors to denote the marker in question.</p>\n\n<p>Essentially, the same function as what Roost does.</p>\n\n<p><a href=\"http://www.barbarashawaii.idx.roost.com/homes/,HI/?uuid=25ad2f61-1a33-46db-a184-7a063dd23b73&amp;source=REDIR\">See the live example</a></p>\n\n<p>When you hover over a home listing on the left, the corresponding marker on the right changes color</p>\n",
            "last_activity_date": 1412239454,
            "question_id": 1941260,
            "score": 57,
            "tags": [
                "javascript",
                "google-maps",
                "google-maps-api-3"
            ],
            "title": "Google Maps API v3: How do I dynamically change the marker icon?"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>Declare separate functions in the &lt;head&gt; section and invoke those in your onClick method. If you have lots you could use a naming scheme that numbers them, or pass an integer in in your onClicks and have a big fat switch statement in the function. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use the <a href=\"http://blogs.msdn.com/ace_team/archive/2006/11/20/microsoft-anti-cross-site-scripting-library-v1-5-is-done.aspx\" rel=\"nofollow\">Microsoft Anti-XSS library</a> which includes a javascript encode.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If it's going into an HTML attribute, you'll need to both HTML-encode (as a minimum: <code>&gt;</code> to <code>&amp;gt;</code> <code>&lt;</code> to <code>&amp;lt</code> and <code>\"</code> to <code>&amp;quot;</code>) it, <em>and</em> escape single-quotes (with a backslash) so they don't interfere with your javascript quoting. </p>\n\n<p>Best way to do it is with your templating system (extending it, if necessary), but you could simply make a couple of escaping/encoding functions and wrap them both around any data that's going in there.</p>\n\n<p>And yes, it's perfectly valid (correct, even) to HTML-escape the entire contents of your HTML attributes, even if they contain javascript.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>First, it would be simpler if the  onclick handler was set this way :</p>\n\n<pre><code>&lt;a id=\"someLinkId\"href=\"#\"&gt;Select&lt;/a&gt;\n&lt;script type=\"text/javascript\"&gt;\n  document.getElementById(\"someLinkId\").onClick = \n   function() {\n      SelectSurveyItem('&lt;%itemid%&gt;', '&lt;%itemname%&gt;'); return false;\n    };\n\n&lt;/script&gt;\n</code></pre>\n\n<p>Then itemid and itemname need to be escaped for javascript (i.e. \" becomes \\\" ...).\nIf you are using java on the server side, you might take a look at the class <a href=\"http://commons.apache.org/lang/api/org/apache/commons/lang/StringEscapeUtils.html#escapeJavaScript(java.lang.String)\" rel=\"nofollow\">StringEscapeUtils</a> from jakarta's common-lang . Otherwise It should not take to long do write your own 'escapeJavascript' method.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>try avoid using string-literals in your HTML and use javascript to bind javascript events. </p>\n\n<p>also, avoid 'href=#' unless you <em>really</em> know what you're doing, it breaks so much usability for compulsive middleclickers.( tab opener )</p>\n\n<pre><code>&lt;a id=\"tehbutton\" href=\"somewhereToGoWithoutWorkingJavascript.com\"&gt;Select&lt;/a&gt;\n</code></pre>\n\n<p>My JS lib of choice just happens to be jQuery:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;//&lt;!-- &lt;![CDATA[\njQuery(function($){ \n   $(\"#tehbutton\").click(function(){ \n        SelectSurveyItem('&lt;%itemid%&gt;', '&lt;%itemname%&gt;'); \n        return false;\n   }); \n}); \n//]]&gt;--&gt;&lt;/script&gt;\n</code></pre>\n\n<p>If you happen to be rendering a list of links like that, you may want to do this: </p>\n\n<pre><code>&lt;a id=\"link_1\" href=\"foo\"&gt;Bar&lt;/a&gt;\n&lt;a id=\"link_2\" href=\"foo2\"&gt;Baz&lt;/a&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n   jQuery(function($){ \n        var l = [[1,'Bar'],[2,'Baz']]; \n        $(l).each(function(k,v){ \n           $(\"#link_\" + v[0] ).click(function(){ \n                SelectSurveyItem(v[0],v[1]); \n                return false;\n           });\n        });\n   }); \n &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Another interesting solution might be to do this:</p>\n\n<pre><code>&lt;a href=\"#\" itemid=\"&lt;%itemid%&gt;\" itemname=\"&lt;%itemname%&gt;\" onclick=\"SelectSurveyItem(this.itemid, this.itemname); return false;\"&gt;Select&lt;/a&gt;\n</code></pre>\n\n<p>Then you can use a standard HTML-encoding on both the variables, without having to worry about the extra complication of the javascript quoting.</p>\n\n<p>Yes, this <em>does</em> create HTML that is strictly invalid. However, it <em>is</em> a valid technique, and all modern browsers support it.</p>\n\n<p>If it was my, I'd probably go with my first suggestion, and ensure the values are HTML-encoded <em>and</em> have single-quotes escaped.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In javascript you can encode single quotes as \"\\x27\" and double quotes as \"\\x22\", therefore with this method you can, once you're inside the (double or single) quotes of a javascript string literal, use the \\x27 \\x22 with impunity without fear of any embedded quotes \"breaking out\" of your string. </p>\n\n<p>\\xXX is for chars &lt; 127, and \\uXXXX for unicode, so armed with knowledge you can create a robust <em>JSEncode</em> function for all chars that are out of the usual whitelist.</p>\n\n<p>E.g.</p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"SelectSurveyItem('&lt;% JSEncode(itemid) %&gt;', '&lt;% JSEncode(itemname) %&gt;'); return false;\"&gt;Select&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 53
                },
                {
                    "body": "<p>Is the answers here that you can't escape quotes using JavaScript and that you need to start with escaped strings.</p>\n\n<p>Therefore.  There's no way of JavaScript being able to handle the string 'Marge said \"I'd look that was\" to Peter' and you need your data be cleaned before offering it to the script?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Any good templating engine worth its salt will have an \"escape quotes\" function. Ours (also home-grown, where I work) also has a function to escape quotes for javascript. In both cases, the template variable is then just appended with _esc or _js_esc, depending on which you want. You should never output user-generated content to a browser that hasn't been escaped, IMHO.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use hidden spans, one each for each of the parameters <code>&lt;%itemid%&gt;</code> and <code>&lt;%itemname%&gt;</code> and write their values inside them.</p>\n\n<p>For example, the span for <code>&lt;%itemid%&gt;</code> would look like <code>&lt;span id='itemid' style='display:none'&gt;&lt;%itemid%&gt;&lt;/span&gt;</code> and in the javascript function <code>SelectSurveyItem</code> to pick the arguments from these spans' <code>innerHTML</code>.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>i faced the same problem and i solve it in a tricky way first make global variable v1,v2,v3\nand in the onclick send an indicator 1, 2, 3 and in the function check for 1,2,3 to put the v1,v2,v3 like</p>\n\n<pre><code>onclick=\"myfun(1)\" \nonclick=\"myfun(2)\" \nonclick=\"myfun(3)\" \n\n\nfunction myfun(var)\n{\n if(var ==1)\n alert(v1);\n if(var ==2)\n alert(v2);\n\n if(var ==3)\n alert(v3);\n\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Depending on the server-side language, you could use one of these:</p>\n\n<p>.NET 4.0</p>\n\n<pre><code>string result = System.Web.HttpUtility.JavaScriptStringEncode(\"jsString\")\n</code></pre>\n\n<p>Java</p>\n\n<pre><code>import org.apache.commons.lang.StringEscapeUtils;\n...\n\nString result = StringEscapeUtils.escapeJavaScript(jsString);\n</code></pre>\n\n<p>Python</p>\n\n<pre><code>import json\nresult = json.dumps(jsString)\n</code></pre>\n\n<p>PHP</p>\n\n<pre><code>$result = strtr($jsString, array('\\\\' =&gt; '\\\\\\\\', \"'\" =&gt; \"\\\\'\", '\"' =&gt; '\\\\\"', \n                                 \"\\r\" =&gt; '\\\\r', \"\\n\" =&gt; '\\\\n' ));\n</code></pre>\n\n<p>Ruby on Rails</p>\n\n<pre><code>&lt;%= escape_javascript(jsString) %&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>I have face this problem as well. I made a script to convert single quotes into escaped double quotes that won't break the html.</p>\n\n<pre><code>function noQuote( text )\n{\nvar newtext = \"\";\nfor (var i = 0; i &lt; text.length; i++) {\n    if (text[i] == \"'\") {\n        newtext += \"\\\"\";\n    }\n\n    else {\n        newtext += text[i];\n    }\n}\nreturn newtext;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Maybe I'm just thinking about this too hard, but I'm having a problem figuring out what escaping to use on a string in some javascript inside a link's onClick handler.  Example:</p>\n\n<pre><code>&lt;a href=\"#\" onclick=\"SelectSurveyItem('&lt;%itemid%&gt;', '&lt;%itemname%&gt;'); return false;\"&gt;Select&lt;/a&gt;\n</code></pre>\n\n<p>The <code>&lt;%itemid%&gt;</code> and <code>&lt;%itemname%&gt;</code> are where template substitution occurs.  My problem is that the item name can contain any character, including single and double quotes.  Currently, if it contains single quotes it breaks the javascript.  My first thought was to use the template language's function to javascript-escape the item name, which just escapes the quotes.  That will not fix the case of the string containing double quotes which breaks the HTML of the link.  How is this problem normally addressed?  Do I need to HTML-escape the entire onClick handler?  If so, that would look really strange since the template language's escape function for that would also HTMLify the parentheses, quotes, and semicolons...  Your input is much appreciated.</p>\n\n<p>Edit:\nThis link is being generated for every result in a search results page, so creating a separate method inside a javascript tag is not possible because I'd need to generate one per result.</p>\n\n<p>Also, I'm using a templating engine that was home-grown at the company I work for, so toolkit-specific solutions will be of no use to me.</p>\n",
            "last_activity_date": 1329348937,
            "question_id": 97578,
            "score": 46,
            "tags": [
                "javascript",
                "html",
                "string",
                "escaping"
            ],
            "title": "How do I escape a string inside javascript inside an onClick handler?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This might be useful:\n<a href=\"http://jqueryui.com/demos/sortable/\" rel=\"nofollow\">http://jqueryui.com/demos/sortable/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You could also do something pretty simple with the adjustable up/down..</p>\n\n<p>given your links have a class of <code>up</code> or <code>down</code> you can wire this up in the click handler of the links.  This is also under the assumption that the links are within each row of the grid.</p>\n\n<pre><code>$(document).ready(function(){\n    $(\".up,.down\").click(function(){\n        var row = $(this).parents(\"tr:first\");\n        if ($(this).is(\".up\")) {\n            row.insertBefore(row.prev());\n        } else {\n            row.insertAfter(row.next());\n        }\n    });\n});\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;table&gt;\n    &lt;tr&gt;\n        &lt;td&gt;One&lt;/td&gt;\n        &lt;td&gt;\n            &lt;a href=\"#\" class=\"up\"&gt;Up&lt;/a&gt;\n            &lt;a href=\"#\" class=\"down\"&gt;Down&lt;/a&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Two&lt;/td&gt;\n        &lt;td&gt;\n            &lt;a href=\"#\" class=\"up\"&gt;Up&lt;/a&gt;\n            &lt;a href=\"#\" class=\"down\"&gt;Down&lt;/a&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Three&lt;/td&gt;\n        &lt;td&gt;\n            &lt;a href=\"#\" class=\"up\"&gt;Up&lt;/a&gt;\n            &lt;a href=\"#\" class=\"down\"&gt;Down&lt;/a&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Four&lt;/td&gt;\n        &lt;td&gt;\n            &lt;a href=\"#\" class=\"up\"&gt;Up&lt;/a&gt;\n            &lt;a href=\"#\" class=\"down\"&gt;Down&lt;/a&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Five&lt;/td&gt;\n        &lt;td&gt;\n            &lt;a href=\"#\" class=\"up\"&gt;Up&lt;/a&gt;\n            &lt;a href=\"#\" class=\"down\"&gt;Down&lt;/a&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/vaDkF/\">Demo - JsFiddle</a></p>\n",
                    "is_accepted": true,
                    "score": 96
                },
                {
                    "body": "<pre><code>$(document).ready(function () {\n   $(\".up,.down\").click(function () {\n      var $element = this;\n      var row = $($element).parents(\"tr:first\");\n\n      if($(this).is('.up')){\n         row.insertBefore(row.prev());\n      } \n      else{\n         row.insertAfter(row.next());\n      }\n\n  });\n</code></pre>\n\n<p>});</p>\n\n<p>Try using  <strong><a href=\"http://jsfiddle.net/shemeemsha/4dnoyo77/\" rel=\"nofollow\">JSFiddle</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Say I had to links with up/down arrows for moving a table row up or down in order. What would be the most straightforward way to move that row up or down one position (using jQuery)?</p>\n\n<p>There doesn't seem to be any direct way to do this using jQuery's built in methods, and after selecting the row with jQuery, I haven't found a way to then move it. Also, in my case, making the rows draggable (which I have done with a plugin previously) isn't an option.</p>\n",
            "last_activity_date": 1410357622,
            "question_id": 1569889,
            "score": 38,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "dom"
            ],
            "title": "jQuery: Move Table Row?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>If the callback is defined in the same scope the loop is defined in (which is frequently the case), then the callback will have access to the index variable. Leaving aside NodeJS particulars for a moment, let's consider this function:</p>\n\n<pre><code>function doSomething(callback) {\n    callback();\n}\n</code></pre>\n\n<p>That function accepts a callback function reference and all it does is call it. Not very exciting. :-)</p>\n\n<p>Now let's use that in a loop:</p>\n\n<pre><code>var index;\n\nfor (index = 0; index &lt; 3; ++index) {\n    doSomething(function() {\n        console.log(\"index = \" + index);\n    });\n}\n</code></pre>\n\n<p><em>(In compute-intensive code&nbsp;&mdash; like a server process&nbsp;&mdash; best not to literally do the above in production code, we'll come back to that in a moment.)</em></p>\n\n<p>Now, when we run that, we see the expected output:</p>\n\n<pre><code>index = 0\nindex = 1\nindex = 2\n</code></pre>\n\n<p>Our callback was able to access <code>index</code>, because the callback is a <em>closure</em> over the data in scope where it's defined. (Don't worry about the term \"closure,\" <a href=\"http://blog.niftysnippets.org/2008/02/closures-are-not-complicated.html\">closures are not complicated</a>.)</p>\n\n<p>The reason I said it's probably best not to literally do the above in compute-intensive production code is that the code creates a function on <em>every iteration</em> (barring fancy optimization in the compiler, and V8 is very clever, but optimizing out creating those functions is non-trivial). So here's a slightly reworked example:</p>\n\n<pre><code>var index;\n\nfor (index = 0; index &lt; 3; ++index) {\n    doSomething(doSomethingCallback);\n}\n\nfunction doSomethingCallback() {\n    console.log(\"index = \" + index);\n}\n</code></pre>\n\n<p>This may look a bit surprising, but it still works the same way, and still has the same output, because <code>doSomethingCallback</code> is still a closure over <code>index</code>, so it still sees the value of <code>index</code> as of when it's called. But now there's only one <code>doSomethingCallback</code> function, rather than a fresh one on every loop.</p>\n\n<p>Now let's take a negative example, something that <strong>doesn't</strong> work:</p>\n\n<pre><code>foo();\n\nfunction foo() {\n    var index;\n\n    for (index = 0; index &lt; 3; ++index) {\n        doSomething(myCallback);\n    }\n}\n\nfunction myCallback() {\n    console.log(\"index = \" + index); // &lt;== Error\n}\n</code></pre>\n\n<p>That fails, because <code>myCallback</code> is not defined in the same scope (or a nested scope) that <code>index</code> is in defined in, and so <code>index</code> is undefined within <code>myCallback</code>.</p>\n\n<p>Finally, let's consider setting up event handlers in a loop, because one has to be careful with that. Here we will dive into NodeJS a bit:</p>\n\n<pre><code>var spawn = require('child_process').spawn;\n\nvar commands = [\n    {cmd: 'ls', args: ['-lh', '/etc' ]},\n    {cmd: 'ls', args: ['-lh', '/usr' ]},\n    {cmd: 'ls', args: ['-lh', '/home']}\n];\nvar index, command, child;\n\nfor (index = 0; index &lt; commands.length; ++index) {\n    command = commands[index];\n    child = spawn(command.cmd, command.args);\n    child.on('exit', function() {\n        console.log(\"Process index \" + index + \" exited\"); // &lt;== WRONG\n    });\n}\n</code></pre>\n\n<p>It <em>seems</em> like the above should work the same way that our earlier loops did, but there's a crucial difference. In our earlier loops, the callback was being called immediately, and so it saw the correct <code>index</code> value because <code>index</code> hadn't had a chance to move on yet. In the above, though, we're going to spin through the loop before the callback is called. The result? We see</p>\n\n<pre><code>Process index 3 exited\nProcess index 3 exited\nProcess index 3 exited\n</code></pre>\n\n<p>This is a crucial point. A closure doesn't have a <em>copy</em> of the data it closes over, it has a <em>live reference</em> to it. So by the time the <code>exit</code> callback on each of those processes gets run, the loop will already be complete, so all three calls see the same <code>index</code> value (its value as of the <em>end</em> of the loop).</p>\n\n<p>We can fix this by having the callback use a <em>different</em> variable that won't change, like this:</p>\n\n<pre><code>var spawn = require('child_process').spawn;\n\nvar commands = [\n    {cmd: 'ls', args: ['-lh', '/etc' ]},\n    {cmd: 'ls', args: ['-lh', '/usr' ]},\n    {cmd: 'ls', args: ['-lh', '/home']}\n];\nvar index, command, child;\n\nfor (index = 0; index &lt; commands.length; ++index) {\n    command = commands[index];\n    child = spawn(command.cmd, command.args);\n    child.on('exit', makeExitCallback(index));\n}\n\nfunction makeExitCallback(i) {\n    return function() {\n        console.log(\"Process index \" + i + \" exited\");\n    };\n}\n</code></pre>\n\n<p>Now we output the correct values (in whatever order the processes exit):</p>\n\n<pre><code>Process index 1 exited\nProcess index 2 exited\nProcess index 0 exited\n</code></pre>\n\n<p>The way that works is that the callback we assign to the <code>exit</code> event closes over the <code>i</code> argument in the call we make to <code>makeExitCallback</code>. The first callback that <code>makeExitCallback</code> creates and returns closes over the <code>i</code> value for that call to <code>makeExitCallback</code>, the second callback it creates closes over the <code>i</code> value for <em>that</em> call to <code>makeExitCallback</code> (which is different than the <code>i</code> value for the earlier call), etc.</p>\n\n<p>If you give <a href=\"http://blog.niftysnippets.org/2008/02/closures-are-not-complicated.html\">the article linked above</a> a read, a number of things should be clearer. The terminology in the article is a bit dated (ECMAScript 5 uses updated terminology), but the concepts haven't changed.</p>\n",
                    "is_accepted": true,
                    "score": 77
                }
            ],
            "body": "<p>I am just starting with node.js. I have done a little ajax stuff but nothing too complicated so callbacks are still kind of over my head. I looked at async, but all I need is to run a few functions sequentially.</p>\n\n<p>I basically have something that pulls some JSON from an API, creates a new one and then does something with that. Obviously, I can't just run it because it runs everything at once and has an empty JSON. Mostly the processes have to run sequentially, but if while pulling JSON from the API it can pull other JSON while it's waiting then that is fine. I just got confused when putting the callback in a loop. What do I do with the index? I think I have seen some places that use callbacks inside the loop as kind of a recursive function and don't use for loops at all.</p>\n\n<p>Simple examples would help a lot.</p>\n",
            "last_activity_date": 1360613542,
            "question_id": 4506240,
            "score": 29,
            "tags": [
                "javascript",
                "callback",
                "node.js"
            ],
            "title": "understanding the concept of javascript callbacks with node.js, especially in loops"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>This is trickier than it might seem on first sight. Look at the code of this project:</p>\n\n<p><a href=\"https://github.com/knu/noreferrer\" rel=\"nofollow\">https://github.com/knu/noreferrer</a></p>\n\n<p>He promises quite what you want, but you have to do it on the linking page.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>What you're asking for cannot be done in Firefox.</p>\n\n<p>The <a href=\"https://hg.mozilla.org/mozilla-central/file/7edc6c4cf83d/browser/base/content/nsContextMenu.js#l702\" rel=\"nofollow\">current context menu implementation</a> always passes the current document as a referrer:</p>\n\n<pre><code>// Open linked-to URL in a new window.\nopenLink: function () {\n    var doc = this.target.ownerDocument;\n    urlSecurityCheck(this.linkURL, doc.nodePrincipal);\n    openLinkIn(this.linkURL, \"window\", {\n        charset: doc.characterSet,\n        referrerURI: doc.documentURIObject // &lt;----------------\n    });\n},\n\n// Open linked-to URL in a new tab.\nopenLinkInTab: function () {\n    var doc = this.target.ownerDocument;\n    urlSecurityCheck(this.linkURL, doc.nodePrincipal);\n    openLinkIn(this.linkURL, \"tab\", {\n        charset: doc.characterSet,\n        referrerURI: doc.documentURIObject // &lt;----------------\n    });\n},\n\n// open URL in current tab\nopenLinkInCurrent: function () {\n    var doc = this.target.ownerDocument;\n    urlSecurityCheck(this.linkURL, doc.nodePrincipal);\n    openLinkIn(this.linkURL, \"current\", {\n        charset: doc.characterSet,\n        referrerURI: doc.documentURIObject // &lt;----------------\n    });\n}, \n</code></pre>\n\n<p>Obviously, userscripts are not allowed to change the context menu implementation, so the only way out is a browser extension.</p>\n\n<p>(Or, which would be a pretty poor hack, disable the context menu by calling <code>preventDefault()</code> on the <code>contextmenu</code> event, and use your own custom context menu)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have found a solution which works in Chrome and Firefox. I've implemented the code in a Userscript, <strong><a href=\"http://userscripts.org/scripts/review/121923#root_footer\">Don't track me Google</a></strong>.</p>\n\n<p>Demo (tested in Firefox 9 and Chrome 17): <strong><a href=\"http://jsfiddle.net/RxHw5/\">http://jsfiddle.net/RxHw5/</a></strong></p>\n\n<h2>Referrer hiding for Webkit (Chrome, ..)</h2>\n\n<p>Webkit-based browsers (such as Chrome, Safari) <a href=\"http://blog.chromium.org/2009/12/links-that-open-in-new-processes.html\">support</a> <code>&lt;a rel=\"noreferrer\"&gt;</code><sup><a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/links.html#link-type-noreferrer\">spec</a></sup>.<br />\nReferrer hiding can fully be implemented by combining this method with two event listeners:</p>\n\n<ul>\n<li><strong><code>mousedown</code></strong> - On click, middle-click, right-click contextmenu, ...</li>\n<li><strong><code>keydown</code></strong> (<kbd>Tab</kbd> <kbd>Tab</kbd> <kbd>Tab</kbd> ... <kbd>Enter</kbd>).</li>\n</ul>\n\n<p>Code:</p>\n\n<pre><code>function hideRefer(e) {\n   var a = e.target;\n   // The following line is used to deal with nested elements,\n   //  such as: &lt;a href=\".\"&gt; Stack &lt;em&gt;Overflow&lt;/em&gt; &lt;/a&gt;.\n   if (a &amp;&amp; a.tagName !== 'A') a = a.parentNode;\n   if (a &amp;&amp; a.tagName === 'A') {\n      a.rel = 'noreferrer';\n   }\n}\nwindow.addEventListener('mousedown', hideRefer, true);\nwindow.addEventListener('keydown', hideRefer, true);\n</code></pre>\n\n<h2>Referrer hiding for Firefox</h2>\n\n<p>Unfortunately, Firefox does not (yet) support <code>rel=\"noreferrer\"</code><sup>[<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=530396\">bug 530396</a>]</sup>.</p>\n\n<p>A data-URI + <code>&lt;meta http-equiv=refresh&gt;</code> can be used to hide the referrer in Firefox (and IE). Implementing this feature is more complicated, but also requires two events:</p>\n\n<ul>\n<li><strong><code>click</code></strong> - On click, on middle-click, <kbd>Enter</kbd><br /></li>\n<li><strong><code>contextmenu</code></strong> - On right-click, <kbd>Tab</kbd> <kbd>Tab</kbd> ... <kbd>Contextmenu</kbd></li>\n</ul>\n\n<p>In Firefox, the <code>click</code> event is fired for each <code>mouseup</code> <em>and</em> hitting <kbd>Enter</kbd> on a link (or form control). The <code>contextmenu</code> event is required, because the <code>click</code> event fires too late for this case.</p>\n\n<p>Based on data-URIs and split-second time-outs:<br />\nWhen the <code>click</code> event is triggered, the <code>href</code> attribute is temporarily replaced with a data-URI. The event finished, and the default behaviour occurs: Opening the data-URI, dependent on the <code>target</code> attribute and SHIFT/CTRL modifiers.<br />\nMeanwhile, the <code>href</code> attribute is restored to its original state.</p>\n\n<p>When the <code>contextmenu</code> event is triggered, the link also changes for a split second.</p>\n\n<ul>\n<li>The <code>Open Link in ...</code> options will open the data-URI.</li>\n<li>The <code>Copy Link location</code> option refers to the restored, original URI.</li>\n<li>\u2639 The <code>Bookmark</code> option refers to the data-URI.</li>\n<li>\u2639 <code>Save Link as</code> points to the data-URI.</li>\n</ul>\n\n<p>Code:</p>\n\n<pre><code>// Create a data-URI, redirection by &lt;meta http-equiv=refresh content=\"0;url=..\"&gt;\nfunction doNotTrack(url) {\n   // As short as possible. \" can potentially break the &lt;meta content&gt; attribute,\n   // # breaks the data-URI. So, escape both characters.\n   var url = url.replace(/\"/g,'%22').replace(/#/g,'%23');\n   // In case the server does not respond, or if one wants to bookmark the page,\n   //  also include an anchor. Strictly, only &lt;meta ... &gt; is needed.\n   url = '&lt;title&gt;Redirect&lt;/title&gt;'\n       + '&lt;a href=\"' +url+ '\" style=\"color:blue\"&gt;' +url+ '&lt;/a&gt;'\n       + '&lt;meta http-equiv=refresh content=\"0;url=' +url+ '\"&gt;';\n   return 'data:text/html,' + url;\n}\nfunction hideRefer(e) {\n   var a = e.target;\n   if (a &amp;&amp; a.tagName !== 'A') a = a.parentNode;\n   if (a &amp;&amp; a.tagName === 'A') {\n      if (e.type == 'contextmenu' || e.button &lt; 2) {\n         var realHref = a.href; // Remember original URI\n         // Replaces href attribute with data-URI\n         a.href = doNotTrack(a.href);\n         // Restore the URI, as soon as possible\n         setTimeout(function() {a.href = realHref;}, 4);\n      }\n   }\n}\ndocument.addEventListener('click', hideRefer, true);\ndocument.addEventListener('contextmenu', hideRefer, true);\n</code></pre>\n\n<h2>Joining both methods</h2>\n\n<p>I created one Userscript for Chrome and Firefox. The script needed a effective method to determine which referrer-hiding method should be used. To get at this, I checked for the validity of a <code>webkit</code> CSS property:</p>\n\n<pre><code>var isWebkit = document.createElement(\"a\");\nisWebkit.style.cssText = \"-webkit-border-radius:1px;\";\nisWebkit = isWebkit.style.cssText.indexOf(\"radius\") !== -1;\n// Later: if (isWebkit) { /* Webkit-specific code */ } else { /* Other method */}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>Can't you create a linking system that resides within iframes?</p>\n\n<p>If you wrap an iframe around every link, the iframe can act as an external de-refer. The user would click on the link inside the frame, opening a page whose referrer is set to the iFrame's location, instead of the actual page.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>A very comprehensive (but short) analysis can be found at:</p>\n\n<p><a href=\"http://lincolnloop.com/blog/2012/jun/27/referrer-blocking-hard/\" rel=\"nofollow\">http://lincolnloop.com/blog/2012/jun/27/referrer-blocking-hard/</a></p>\n\n<p>this article analyses both methods explained in other answers (js method, iframe redirecting) and finally suggest a mediate redirector page approach, like the one seen in google search links.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is a cross browser solution in Javascript that removes the referrer, it uses Iframes created dynamically, you can take a look to a <a href=\"http://referrer-killer.googlecode.com/git/example.html\" rel=\"nofollow\">proof of concept</a> ( disclaimer: it uses a little JS library I wrote ).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>what if we submit a FORM using JavaScript, this way there will be no referrer.</p>\n\n<pre><code>document.form_name.submit()\n</code></pre>\n\n<p>basically we are submit a form with desired <strong>ACTION</strong> method.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You could use the new <a href=\"http://www.w3.org/TR/referrer-policy\" rel=\"nofollow\">Referrer Policy standard draft</a> to prevent that the referer header is sent to the request origin. Example:</p>\n\n<pre><code>&lt;meta name=\"referrer\" content=\"none\"&gt;\n</code></pre>\n\n<p>Although Chrome and Firefox have already implemented a draft version of the Referrer Policy, you should be careful with it because for example Chrome expects <code>no-referrer</code> instead of <code>none</code> (and I have also seen <code>never</code> somewhere). I don't know the behaviour if you just add three separate meta tags, but in case that does not work you could still just implement a short script which iterates over all three values and checks if the value was really set after setting the attribute/property of the meta tag.</p>\n\n<p>This meta tag applies to all requests on the current page (ajax, images, scripts, other resources...) and navigation to another page.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Normally, the referrer is traceable through:</p>\n\n<ul>\n<li>JavaScript's <code>document.referrer</code></li>\n<li>The request headers, e.g. PHP's <code>$_SERVER['HTTP_REFERER']</code></li>\n</ul>\n\n<p>I have set up a <strong><a href=\"http://codepad.viper-7.com/dRwtne.php53\">Codepad demo</a></strong> which shows these properties, for testing purposes.</p>\n\n<h1>Requirements:</h1>\n\n<ol>\n<li>The original referrer should effectively be hidden, at least for all mouse events.</li>\n<li>Cross-browser support (at least Chrome and Firefox).<br /></li>\n<li>Stand-alone, without any external content (plugins, libraries, redirection pages, ...).</li>\n<li>No side-effects: Links should <strong>not</strong> be rewritten, history entries should be <strong>preserved</strong>.</li>\n</ol>\n\n<p>The solution will be used to hide the referrer when following a link of <code>&lt;a href=\"url\"&gt;</code>.</p>\n\n<hr />\n\n<h2>Exact description of the use-case</h2>\n\n<p>As described in <a href=\"http://webapps.stackexchange.com/questions/22291/turning-off-google-search-results-indirection\">this question on Webapps</a>, links at Google Search are modified on click. Consequently,</p>\n\n<ol>\n<li>Google is able to track your search behaviour (Privacy-- )</li>\n<li>The page request is slightly delayed.</li>\n<li>The linked page cannot track your Google search query (Privacy++ )</li>\n<li>Dragged/Copied URLs look like <em><code>http://google.com/lotsoftrash?url=actualurl</code></em>.</li>\n</ol>\n\n<p>I'm developing a <a href=\"http://userscripts.org/scripts/show/121923\">Userscript (Firefox) / Content script (Chrome)</a> <sup>(<a href=\"http://userscripts.org/scripts/review/121923#root_footer\">code</a>)</sup>, which removes Google's link-mutilating event. As a result, points 1, 2 and 4 are dealt with.</p>\n\n<p>Point 3 remains.</p>\n\n<ul>\n<li>Chrome: <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/links.html#link-type-noreferrer\"><code>&lt;a rel=\"noreferrer\"&gt;</code></a></li>\n<li>Firefox: <a href=\"http://tools.ietf.org/html/rfc2397\"><code>data-URIs</code></a>. I have created a sophisticated approach to implement this feature for left- and middle-clicks, while still enforcing point 4. <strong>However, I'm struggling with the right-click method.</strong></li>\n</ul>\n",
            "last_activity_date": 1425398396,
            "question_id": 8893269,
            "score": 26,
            "tags": [
                "javascript",
                "mouseevent",
                "tracking",
                "referrer",
                "spoofing"
            ],
            "title": "What is the most reliable way to hide / spoof the referrer in JavaScript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Hell yeah!</p>\n\n<p>Set your <code>&lt;body&gt;</code> font size when the window is resized with a little javascript. (I've used jQuery for convenience here:</p>\n\n<pre><code>$( document ).ready( function() {\n            var $body = $('body'); //Cache this for performance\n\n            var setBodyScale = function() {\n                var scaleSource = $body.width(),\n                    scaleFactor = 0.35,                     \n                    maxScale = 600,\n                    minScale = 30; //Tweak these values to taste\n\n                var fontSize = scaleSource * scaleFactor; //Multiply the width of the body by the scaling factor:\n\n                if (fontSize &gt; maxScale) fontSize = maxScale;\n                if (fontSize &lt; minScale) fontSize = minScale; //Enforce the minimum and maximums\n\n                $('body').css('font-size', fontSize + '%');\n            }\n\n            $(window).resize(function(){\n                setBodyScale();\n            });\n\n            //Fire it when the page first loads:\n            setBodyScale();\n        });\n</code></pre>\n\n<p>Because your font size is set in em's (perfect) adjusting the percentage font-size of the body element acts as a universal 'text zoom'. This will scale any text set in em's - if you want to be more specific, you could set the percentage font-size on a <code>&lt;div&gt;</code> that surrounds just the elements you want to scale.</p>\n\n<p>Here's a quick example: <a href=\"http://www.spookandpuff.com/examples/dynamicTextSize.html\">http://www.spookandpuff.com/examples/dynamicTextSize.html</a></p>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>Another option for when you don't need as much precision (say, a couple sizes for different devices) is to use media queries.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Same as Beejamin's excellent answer, with a couple tweaks.</p>\n\n<ol>\n<li><p>The math was adjusted so that you can set the \"default width\" at which no scaling will occur. This makes it easier to design to a given width with exact font-sizes.</p></li>\n<li><p>The font-size is now set on the html element freeing up the body element to hold a font-size in the css.</p></li>\n</ol>\n\n<pre class=\"lang-js prettyprint-override\"><code>$(function() {\n\n  // At this width, no scaling occurs. Above/below will scale appropriately.\n  var defaultWidth = 1280;\n\n  // This controls how fast the font-size scales. If 1, will scale at the same \n  // rate as the window (i.e. when the window is 50% of the default width, the \n  // font-size will be scaled 50%). If I want the font to not shrink as rapidly \n  // when the page gets smaller, I can set this to a smaller number (e.g. at 0.5,\n  // when the window is 50% of default width, the font-size will be scaled 75%).\n  var scaleFactor = 0.5;\n\n  // choose a maximum and minimum scale factor (e.g. 4 is 400% and 0.5 is 50%)\n  var maxScale = 4;\n  var minScale = 0.5;\n\n  var $html = $(\"html\");\n\n  var setHtmlScale = function() {\n\n    var scale = 1 + scaleFactor * ($html.width() - defaultWidth) / defaultWidth;\n    if (scale &gt; maxScale) {\n      scale = maxScale;\n    }\n    else if (scale &lt; minScale) {\n      scale = minScale;\n    }\n    $html.css('font-size', scale * 100 + '%');\n  };\n\n  $(window).resize(function() {\n    setHtmlScale();\n  });\n\n  setHtmlScale();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>New units were added in CSS3 that will allow you to do this. <a href=\"http://www.sitepoint.com/new-css3-relative-font-size/\">Sitepoint has a good overview</a>.  You definitely want to provide a fallback for older browsers, but this is by far the simplest solution: </p>\n\n<pre><code>font-size: 35vmin;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here's another way I found to solve this. </p>\n\n<p>This code resizes the root element's font size, thereby proportionally resizing all subsequent sizing that have no exact pixel definition. </p>\n\n<p>A reference width is specified as the default size for which one rem is displayed at the default 16-pixel-ish size. Minimum and maximum resizes are given as well. </p>\n\n<p>DEMO: <a href=\"http://jsbin.com/kahabo/1/\" rel=\"nofollow\">http://jsbin.com/kahabo/1/</a></p>\n\n<p>JS:</p>\n\n<pre><code>var defaultReferenceWidthPx = 320; // Size at which 1 CSS rem displays as 1 rem.\nvar minRootFontSizePx = 16.363636016845703;\nvar maxRootFontSizePx = 1024 / 320 * 16.363636016845703;\nvar defaultRootFontSizePx = 16.363636016845703; // HTML default for 1 rem.\nvar rootResizeFactor = defaultRootFontSizePx / defaultReferenceWidthPx;\nvar docEl; // Document's root element (`html`).\n\nvar resizeRoot = function() {\n  // Use clientWidth (excludes border &amp; scrollbar) or offsetWidth (includes border &amp; scrollbar).\n  var referenceWidthPx = docEl.clientWidth;\n  var newRootFontSizePx = rootResizeFactor * referenceWidthPx;\n  if(newRootFontSizePx &lt; minRootFontSizePx) {\n    newRootFontSizePx = minRootFontSizePx;\n  } else if(newRootFontSizePx &gt; maxRootFontSizePx) {\n    newRootFontSizePx = maxRootFontSizePx;\n  }\n  docEl.style.fontSize = newRootFontSizePx + 'px';\n};\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  docEl = document.documentElement;\n  window.addEventListener('resize', resizeRoot, false);\n  resizeRoot();\n});\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div class=\"fixed\"&gt;\n  Lorem ipsum dolor sit amet, per iisque omnesque inciderint ex. Has at facete iuvaret pertinacia, vocibus nominavi intellegam per cu.\n&lt;/div&gt;\n&lt;div class=\"responsive\"&gt;\n  Lorem ipsum dolor sit amet, per iisque omnesque inciderint ex. Has at facete iuvaret pertinacia, vocibus nominavi intellegam per cu.\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>body {\n  margin: 0;\n}\n.fixed {\n  border: solid gray;\n  width: 100px;\n  padding: 10px;\n  border-width: 10px;\n  font-size: 10px;\n}\n.responsive {\n  border: solid gray;\n  width: 6.25rem;\n  padding: 0.5rem;\n  border-width: 0.75rem;\n  font-size: 0.6rem;\n}\n</code></pre>\n\n<p>REPO: <a href=\"https://github.com/janaspage/wtf-is-rem-in-css\" rel=\"nofollow\">https://github.com/janaspage/wtf-is-rem-in-css</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you use jQuery you might want to try <a href=\"http://fittextjs.com\" rel=\"nofollow\">FitText</a>. It lets you scale text to the width of the element really easily.</p>\n\n<p>The other option is <a href=\"http://simplefocus.com/flowtype/\" rel=\"nofollow\">FlowType.JS</a> which works in a similar way.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Here is the project this is for: <a href=\"http://phlak.github.com/jColorClock/\">http://phlak.github.com/jColorClock/</a>.  As you can see, right now the text size is just set to a static size.  I'd like the text to always be ~90% of the width of the window but to also scale the vertical size accordingly. Is there a relatively easy way of doing this?</p>\n",
            "last_activity_date": 1415549947,
            "question_id": 5358183,
            "score": 23,
            "tags": [
                "javascript",
                "html",
                "css",
                "xhtml"
            ],
            "title": "Is it possible to dynamically scale text size based on browser width?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<pre><code>    &lt;form id=\"form\" method=\"post\" action=\"action.php\"&gt;\n      &lt;input type=\"text\" class=\"removeLater\" name=\"name\" /&gt; Username&lt;br/&gt;\n      &lt;input type=\"text\" class=\"removeLater\" name=\"pass\" /&gt; Password&lt;br/&gt;\n      &lt;input type=\"text\" class=\"removeLater\" name=\"pass2\" /&gt; Password again&lt;br/&gt;\n    &lt;/form&gt;\n    &lt;script&gt;\n$(function(){\n    $(\"form\").submit(function(e){\n         //do anything you want\n         //&amp; remove values\n         $(\".removeLater\").val('');\n    }\n\n});\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Would something like work?</p>\n\n<p><a href=\"http://stackoverflow.com/questions/1860675/jquery-clear-form-on-close\">JQuery Clear Form on close</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use JavaScript's native <a href=\"https://developer.mozilla.org/en/DOM/form.reset\"><code>reset()</code></a> method to <em>reset</em> the entire form to its <em>default</em> state.</p>\n\n<p>Example provided by <strong>Ryan</strong>: </p>\n\n<pre><code>$('#myForm')[0].reset();\n</code></pre>\n\n<p><strong>Note:</strong> This may not reset certain fields, such as <code>type=\"hidden\"</code>.</p>\n\n<h3>UPDATE</h3>\n\n<p>As noted by <a href=\"http://stackoverflow.com/a/16286352/164998\">IlyaDoroshin</a> the same thing can be accomplished using jQuery's <a href=\"http://api.jquery.com/trigger/\"><code>trigger()</code></a>:</p>\n\n<pre><code>$('#myForm').trigger(\"reset\");\n</code></pre>\n\n<h3>UPDATE</h3>\n\n<p>If you need to do more than <em>reset</em> the form to its <em>default</em> state, you should review the answers to <a href=\"http://stackoverflow.com/questions/680241/resetting-a-multi-stage-form-with-jquery\">Resetting a multi-stage form with jQuery</a>.</p>\n",
                    "is_accepted": false,
                    "score": 160
                },
                {
                    "body": "<p>Set the <code>val</code> to \"\"</p>\n\n<pre><code>function clear_form_elements(ele) {\n\n        $(ele).find(':input').each(function() {\n            switch(this.type) {\n                case 'password':\n                case 'select-multiple':\n                case 'select-one':\n                case 'text':\n                case 'textarea':\n                    $(this).val('');\n                    break;\n                case 'checkbox':\n                case 'radio':\n                    this.checked = false;\n            }\n        });\n\n    }\n\n&lt;input onclick=\"clear_form_elements(this.form)\" type=\"button\" value=\"Clear All\" /&gt;  \n&lt;input onclick=\"clear_form_elements('#example_1')\" type=\"button\" value=\"Clear Section 1\" /&gt;\n&lt;input onclick=\"clear_form_elements('#example_2')\" type=\"button\" value=\"Clear Section 2\" /&gt;\n&lt;input onclick=\"clear_form_elements('#example_3')\" type=\"button\" value=\"Clear Section 3\" /&gt;\n</code></pre>\n\n<p>You could also try something like this:</p>\n\n<pre><code>  function clearForm(form) {\n\n    // iterate over all of the inputs for the form\n\n    // element that was passed in\n\n    $(':input', form).each(function() {\n\n      var type = this.type;\n\n      var tag = this.tagName.toLowerCase(); // normalize case\n\n      // it's ok to reset the value attr of text inputs,\n\n      // password inputs, and textareas\n\n      if (type == 'text' || type == 'password' || tag == 'textarea')\n\n        this.value = \"\";\n\n      // checkboxes and radios need to have their checked state cleared\n\n      // but should *not* have their 'value' changed\n\n      else if (type == 'checkbox' || type == 'radio')\n\n        this.checked = false;\n\n      // select elements need to have their 'selectedIndex' property set to -1\n\n      // (this works for both single and multiple select elements)\n\n      else if (tag == 'select')\n\n        this.selectedIndex = -1;\n\n    });\n\n  };\n</code></pre>\n\n<p>More info <a href=\"http://www.learningjquery.com/2007/08/clearing-form-data\">here</a> and <a href=\"http://www.electrictoolbox.com/jquery-clear-form/\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<pre><code>function reset_form() {\n $('#ID_OF_FORM').each (function(){  \n    this.reset();\n }); \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Something similar to $(\"#formId\").reset() will not clear form items that have had their defaults set to something other than \"\". One way this can happen is a previous form submission. Once a form has been submitted reset() would \"reset\" form values to those previously submitted which will likely not be \"\".</p>\n\n<p>One option to truly clear a form, and not simply reset it, is to call a function like this:</p>\n\n<pre><code>function clearForm()\n{\n    $(':input').not(':button, :submit, :reset, :hidden, :checkbox, :radio').val('');\n    $(':checkbox, :radio').prop('checked', false);\n}\n</code></pre>\n\n<p>When I originally came to this page I needed a solution that takes into account form defaults being changed and is still able to clear all input items.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>This works:</p>\n\n<pre><code>$('your form's selector').resetForm();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>To reset form just trigger <code>reset</code> event: </p>\n\n<pre><code>$('#form').trigger(\"reset\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 64
                },
                {
                    "body": "<p>the trigger idea was smart, however I wanted to do it the jQuery way, so here is a small function which will allow you to keep chaining.</p>\n\n<pre><code>$.fn.resetForm = function() {\n    return this.each(function(){\n        this.reset();\n    });\n}\n</code></pre>\n\n<p>Then just call it something like this</p>\n\n<pre><code>$('#divwithformin form').resetForm();\n</code></pre>\n\n<p>or</p>\n\n<pre><code>$('form').resetForm();\n</code></pre>\n\n<p>and of course you can still use it in the chain</p>\n\n<pre><code>$('form.register').resetForm().find('input[type=\"submit\"]').attr('disabled','disabled')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>HTML</p>\n\n<pre><code>&lt;form id=\"contactform\"&gt;&lt;/form&gt;\n</code></pre>\n\n<p>JavaScript</p>\n\n<pre><code> var $contactform = $('#contactform')\n    $($contactform).find(\"input[type=text] , textarea \").each(function(){\n                $(this).val('');            \n    });\n</code></pre>\n\n<p>Simple and short function to clear all fields </p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You can simply use the <code>reset</code> button type.</p>\n\n<pre><code>&lt;input type=\"text\" /&gt;\n&lt;input type=\"reset\" /&gt;\n</code></pre>\n\n<h3><a href=\"http://jsfiddle.net/moratto/85Bhs/\" rel=\"nofollow\">jsfiddle</a></h3>\n\n<p><strong>Edit:</strong> Remember that, the <code>reset</code> button, reset the form for the original values, so, if the field has some value set on the field <code>&lt;input type=\"text\" value=\"Name\" /&gt;</code> after press <code>reset</code> the field will reset the value inserted by user and come back with the word \"name\" in this example.</p>\n\n<p>Reference: <a href=\"http://api.jquery.com/reset-selector/\" rel=\"nofollow\">http://api.jquery.com/reset-selector/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am looking for a jQuery function that will clear all the fields of a form after having submitted the form.</p>\n\n<p>I do not have any HTML code to show, I need something generic.</p>\n\n<p>Can you help?</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1395444182,
            "question_id": 6653556,
            "score": 63,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery/Javascript function to clear all the fields of a form"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Using the prototype makes for faster object creation, since that function does not have to be re-created each time a new object is created.</p>\n\n<p>When you do this:</p>\n\n<pre><code>function animal(){\n    this.name = 'rover';\n    this.set_name = function(name){\n         this.name = name;\n    }\n}\n</code></pre>\n\n<p>The <code>set_name</code> function is created <em>de novo</em> each and every time you create an animal.  But when you do this</p>\n\n<pre><code>animal.prototype.set_name = function(name){\n    this.name = name;\n}\n</code></pre>\n\n<p>The function does not have to be re-created each time; it exists in one place in the prototype.  So when you call <code>someAnimal.set_name(\"Ubu\");</code> the <code>this</code> context will be set to <code>someAnimal</code> and (the one and only) <code>set_name</code> function will be called. </p>\n\n<hr>\n\n<p>There is one advantage to using the first syntax though: functions created in this manner will have access to private data:</p>\n\n<pre><code>function animal(){\n    var privateData = 'foo'\n\n    this.name = 'rover';\n    this.set_name = function(name){\n         this.name = name;\n         alert(privateData); //will alert 'foo'\n    }\n}\n</code></pre>\n\n<p>Douglas Crockford calls functions created like this \"privileged\" for that reason: they have access to both public, and private data.  </p>\n",
                    "is_accepted": true,
                    "score": 68
                },
                {
                    "body": "<p>The difference appears when you create new object from these function</p>\n\n<pre><code>var animal1 = new animal();\n</code></pre>\n\n<p>All objects created by the first function will have different <code>name</code> and <code>set_name</code> properties. However, all objects created by the second function will share the <code>set_name</code> property. </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>In the first example, each separate animal has an own property for the set_name function, while in the second example they share the same function via their prototype.</p>\n\n<p>The advantage of the first version is that the methods can access local (private) variables declared inside the constructor.</p>\n\n<p>The advantage of the second method is that it needs less memory (since you only store the method once instead of a million times) and is more performatic in current JS engines.</p>\n\n<p>Using the second method you can also modify or add methods to a class in a way that also affects instances that were already created.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/892595/javascript-prototype-inheritance\">Javascript: prototype inheritance</a>  </p>\n</blockquote>\n\n\n\n<p>OK, So I am somewhat new to the idea of OOP in JS. </p>\n\n<p>What is the different between these 2 snippets of code:</p>\n\n<pre><code>function animal(){\n    this.name = 'rover';\n    this.set_name = function(name){\n         this.name = name;\n    }\n}\n</code></pre>\n\n<hr>\n\n<pre><code>function animal(){\n    this.name = 'rover';\n}\nanimal.prototype.set_name = function(name){\n    this.name = name;\n}\n</code></pre>\n\n<p>They both do the same thing, so whats the difference?</p>\n",
            "last_activity_date": 1326435265,
            "question_id": 8433459,
            "score": 48,
            "tags": [
                "javascript",
                "prototype-programming"
            ],
            "title": "JS - Why use Prototype?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>This is a result of draggable's reliance on the jquery <code>offset()</code> function and <code>offset()</code>'s use of the native js function <code>getBoundingClientRect()</code>. Ultimately this is an issue with the jquery core not compensating for the inconsistencies associated with <code>getBoundingClientRect()</code>. Firefox's version of <code>getBoundingClientRect()</code> ignores the css3 transforms (rotation) whereas chrome/safari (webkit) don't.</p>\n\n<p><a href=\"http://jsfiddle.net/dwick/DAnGz/\">here</a> is an illustration of the issue.</p>\n\n<p>A hacky workaround:</p>\n\n<p>replace following in <a href=\"https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.draggable.js\">jquery.ui.draggable.js</a></p>\n\n<pre><code>\n//The element's absolute position on the page minus margins\nthis.offset = this.positionAbs = this.element.offset();\n</code></pre>\n\n<p><strong>with</strong></p>\n\n<pre><code>\n//The element's absolute position on the page minus margins\nthis.offset = this.positionAbs = { top: this.element[0].offsetTop, \n                                   left: this.element[0].offsetLeft };\n</code></pre>\n\n<p>and finally a monkeypatched version of your <a href=\"http://jsbin.com/ucehu/34/edit\">jsbin</a>.</p>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>the answer of David Wick was very helpful... thanks...\nhere i coded the same workaround for the resizeable, because it has the same problem:</p>\n\n<p>search for the following in <a href=\"https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.resizable.js\" rel=\"nofollow\">jquery.ui.resizable.js</a> </p>\n\n<pre><code>var o = this.options, iniPos = this.element.position(), el = this.element;\n</code></pre>\n\n<p>and replace with:</p>\n\n<pre><code>var o = this.options, iniPos = {top:this.element[0].offsetTop,left:this.element[0].offsetLeft}, el = this.element;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>David Wick is right about the general direction above, but computing the right coordinates is way more involved than that. Here's a more accurate monkey patch, based on MIT licensed Firebug code, which should work in far more situations where you have a complex DOM:</p>\n\n<p>Instead replace:</p>\n\n<pre>    //The element's absolute position on the page minus margins\n    this.offset = this.positionAbs = this.element.offset();</pre>\n\n<p>with the less hacky (be sure to get the whole thing; you'll need to scroll):</p>\n\n<pre>    //The element's absolute position on the page minus margins\n    this.offset = this.positionAbs = getViewOffset(this.element[0]);\n\n    function getViewOffset(node) {\n      var x = 0, y = 0, win = node.ownerDocument.defaultView || window;\n      if (node) addOffset(node);\n      return { left: x, top: y };\n\n      function getStyle(node) {\n        return node.currentStyle || // IE\n               win.getComputedStyle(node, '');\n      }\n\n      function addOffset(node) {\n        var p = node.offsetParent, style, X, Y;\n        x += parseInt(node.offsetLeft, 10) || 0;\n        y += parseInt(node.offsetTop, 10) || 0;\n\n        if (p) {\n          x -= parseInt(p.scrollLeft, 10) || 0;\n          y -= parseInt(p.scrollTop, 10) || 0;\n\n          if (p.nodeType == 1) {\n            var parentStyle = getStyle(p)\n              , localName   = p.localName\n              , parent      = node.parentNode;\n            if (parentStyle.position != 'static') {\n              x += parseInt(parentStyle.borderLeftWidth, 10) || 0;\n              y += parseInt(parentStyle.borderTopWidth, 10) || 0;\n\n              if (localName == 'TABLE') {\n                x += parseInt(parentStyle.paddingLeft, 10) || 0;\n                y += parseInt(parentStyle.paddingTop, 10) || 0;\n              }\n              else if (localName == 'BODY') {\n                style = getStyle(node);\n                x += parseInt(style.marginLeft, 10) || 0;\n                y += parseInt(style.marginTop, 10) || 0;\n              }\n            }\n            else if (localName == 'BODY') {\n              x += parseInt(parentStyle.borderLeftWidth, 10) || 0;\n              y += parseInt(parentStyle.borderTopWidth, 10) || 0;\n            }\n\n            while (p != parent) {\n              x -= parseInt(parent.scrollLeft, 10) || 0;\n              y -= parseInt(parent.scrollTop, 10) || 0;\n              parent = parent.parentNode;\n            }\n            addOffset(p);\n          }\n        }\n        else {\n          if (node.localName == 'BODY') {\n            style = getStyle(node);\n            x += parseInt(style.borderLeftWidth, 10) || 0;\n            y += parseInt(style.borderTopWidth, 10) || 0;\n\n            var htmlStyle = getStyle(node.parentNode);\n            x -= parseInt(htmlStyle.paddingLeft, 10) || 0;\n            y -= parseInt(htmlStyle.paddingTop, 10) || 0;\n          }\n\n          if ((X = node.scrollLeft)) x += parseInt(X, 10) || 0;\n          if ((Y = node.scrollTop))  y += parseInt(Y, 10) || 0;\n        }\n      }\n    }</pre>\n\n<p>It's a shame the DOM doesn't expose these calculations natively.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>@ecmanaut: Great solution. Thanks for your efforts. To assist others I turned your solution into a monkey-patch. Copy below code to a file. Include the file after loading jquery-ui.js as follows:</p>\n\n<pre><code>&lt;script src=\"javascripts/jquery/jquery.js\"&gt;&lt;/script&gt;\n&lt;script src=\"javascripts/jquery/jquery-ui.js\"&gt;&lt;/script&gt;\n\n&lt;!-- the file containing the monkey-patch to draggable --&gt;\n&lt;script src=\"javascripts/jquery/patch_draggable.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Here's the code to copy/paste into patch_draggable.js:</p>\n\n<pre><code>function monkeyPatch_mouseStart() {\n     // don't really need this, but in case I did, I could store it and chain\n     var oldFn = $.ui.draggable.prototype._mouseStart ;\n     $.ui.draggable.prototype._mouseStart = function(event) {\n\n            var o = this.options;\n\n           function getViewOffset(node) {\n              var x = 0, y = 0, win = node.ownerDocument.defaultView || window;\n              if (node) addOffset(node);\n              return { left: x, top: y };\n\n              function getStyle(node) {\n                return node.currentStyle || // IE\n                       win.getComputedStyle(node, '');\n              }\n\n              function addOffset(node) {\n                var p = node.offsetParent, style, X, Y;\n                x += parseInt(node.offsetLeft, 10) || 0;\n                y += parseInt(node.offsetTop, 10) || 0;\n\n                if (p) {\n                  x -= parseInt(p.scrollLeft, 10) || 0;\n                  y -= parseInt(p.scrollTop, 10) || 0;\n\n                  if (p.nodeType == 1) {\n                    var parentStyle = getStyle(p)\n                      , localName   = p.localName\n                      , parent      = node.parentNode;\n                    if (parentStyle.position != 'static') {\n                      x += parseInt(parentStyle.borderLeftWidth, 10) || 0;\n                      y += parseInt(parentStyle.borderTopWidth, 10) || 0;\n\n                      if (localName == 'TABLE') {\n                        x += parseInt(parentStyle.paddingLeft, 10) || 0;\n                        y += parseInt(parentStyle.paddingTop, 10) || 0;\n                      }\n                      else if (localName == 'BODY') {\n                        style = getStyle(node);\n                        x += parseInt(style.marginLeft, 10) || 0;\n                        y += parseInt(style.marginTop, 10) || 0;\n                      }\n                    }\n                    else if (localName == 'BODY') {\n                      x += parseInt(parentStyle.borderLeftWidth, 10) || 0;\n                      y += parseInt(parentStyle.borderTopWidth, 10) || 0;\n                    }\n\n                    while (p != parent) {\n                      x -= parseInt(parent.scrollLeft, 10) || 0;\n                      y -= parseInt(parent.scrollTop, 10) || 0;\n                      parent = parent.parentNode;\n                    }\n                    addOffset(p);\n                  }\n                }\n                else {\n                  if (node.localName == 'BODY') {\n                    style = getStyle(node);\n                    x += parseInt(style.borderLeftWidth, 10) || 0;\n                    y += parseInt(style.borderTopWidth, 10) || 0;\n\n                    var htmlStyle = getStyle(node.parentNode);\n                    x -= parseInt(htmlStyle.paddingLeft, 10) || 0;\n                    y -= parseInt(htmlStyle.paddingTop, 10) || 0;\n                  }\n\n                  if ((X = node.scrollLeft)) x += parseInt(X, 10) || 0;\n                  if ((Y = node.scrollTop))  y += parseInt(Y, 10) || 0;\n                }\n              }\n            }\n\n\n                //Create and append the visible helper\n                this.helper = this._createHelper(event);\n\n                //Cache the helper size\n                this._cacheHelperProportions();\n\n                //If ddmanager is used for droppables, set the global draggable\n                if($.ui.ddmanager)\n                    $.ui.ddmanager.current = this;\n\n                /*\n                 * - Position generation -\n                 * This block generates everything position related - it's the core of draggables.\n                 */\n\n                //Cache the margins of the original element\n                this._cacheMargins();\n\n                //Store the helper's css position\n                this.cssPosition = this.helper.css(\"position\");\n                this.scrollParent = this.helper.scrollParent();\n\n                //The element's absolute position on the page minus margins\n            this.offset = this.positionAbs = getViewOffset(this.element[0]);\n                this.offset = {\n                    top: this.offset.top - this.margins.top,\n                    left: this.offset.left - this.margins.left\n                };\n\n                $.extend(this.offset, {\n                    click: { //Where the click happened, relative to the element\n                        left: event.pageX - this.offset.left,\n                        top: event.pageY - this.offset.top\n                    },\n                    parent: this._getParentOffset(),\n                    relative: this._getRelativeOffset() //This is a relative to absolute position minus the actual position calculation - only used for relative positioned helper\n                });\n\n                //Generate the original position\n                this.originalPosition = this.position = this._generatePosition(event);\n                this.originalPageX = event.pageX;\n                this.originalPageY = event.pageY;\n\n                //Adjust the mouse offset relative to the helper if 'cursorAt' is supplied\n                (o.cursorAt &amp;&amp; this._adjustOffsetFromHelper(o.cursorAt));\n\n                //Set a containment if given in the options\n                if(o.containment)\n                    this._setContainment();\n\n                //Trigger event + callbacks\n                if(this._trigger(\"start\", event) === false) {\n                    this._clear();\n                    return false;\n                }\n\n                //Recache the helper size\n                this._cacheHelperProportions();\n\n                //Prepare the droppable offsets\n                if ($.ui.ddmanager &amp;&amp; !o.dropBehaviour)\n                    $.ui.ddmanager.prepareOffsets(this, event);\n\n                this.helper.addClass(\"ui-draggable-dragging\");\n                //JWL: Hier vindt de jump plaats\n                this._mouseDrag(event, true); //Execute the drag once - this causes the helper not to be visible before getting its correct position\n\n                //If the ddmanager is used for droppables, inform the manager that dragging has started (see #5003)\n                if ( $.ui.ddmanager ) $.ui.ddmanager.dragStart(this, event);\n\n                return true;\n\n     };\n\n }\nmonkeyPatch_mouseStart();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>You have to set the parent container of the draggable element to \"position: relative\".</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I draw a image to indicate the offset after rotate on different browsers as @David Wick's answer.</p>\n\n<p><img src=\"http://i.stack.imgur.com/aQPeA.png\" alt=\"offset after rotate\"></p>\n\n<p>Here's the code to fix if you don't want patch or modify jquery.ui.draggable.js</p>\n\n<pre><code>$(document).ready(function () {\n    var recoupLeft, recoupTop;\n    $('#box').draggable({\n        start: function (event, ui) {\n            var left = parseInt($(this).css('left'),10);\n            left = isNaN(left) ? 0 : left;\n            var top = parseInt($(this).css('top'),10);\n            top = isNaN(top) ? 0 : top;\n            recoupLeft = left - ui.position.left;\n            recoupTop = top - ui.position.top;\n        },\n        drag: function (event, ui) {\n            ui.position.left += recoupLeft;\n            ui.position.top += recoupTop;\n        }\n    });\n});\n</code></pre>\n\n<p>or you can see the <a href=\"http://jsbin.com/ojoyuc/4\">demo</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I used a lot of the solutions to get dragging working correctly. BUT, it still reacted wrong to a dropzone (like it wasn't rotated). The Solution really is to use a parent container that is positioned relative.</p>\n\n<p>This saved me soooo much time.</p>\n\n<pre><code>&lt;div id=\"drawarea\"&gt;\n    &lt;div class=\"rect-container h\"&gt;\n        &lt;div class=\"rect\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt; \n\n\n\n.rect-container {\n    position:relative; \n}\n</code></pre>\n\n<p>Full Solution here (it's not from me):\n<a href=\"http://jsfiddle.net/Sp6qa/2/\" rel=\"nofollow\">http://jsfiddle.net/Sp6qa/2/</a></p>\n\n<p>Also I researched a lot. And its just like this, jQuery doesn't have any plans to change that current behavior in the future. All submitted tickets about that topic were closed. So just start out with having parentcontainers that are positioned relative. It works like a charm and should be futureproof.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>As an experiment, I created a few div's and rotated them using CSS3.</p>\n\n<pre><code>    .items { \n        position: absolute;\n        cursor: pointer;\n        background: #FFC400;\n        -moz-box-shadow: 0px 0px 2px #E39900;\n        -webkit-box-shadow: 1px 1px 2px #E39900; \n        box-shadow: 0px 0px 2px #E39900;\n        -moz-border-radius: 2px; \n        -webkit-border-radius: 2px;\n        border-radius: 2px;\n    }\n</code></pre>\n\n<p>I then randomly styled them and made them draggable via jQuery.</p>\n\n<pre><code>    $('.items').each(function() {\n        $(this).css({\n            top: (80 * Math.random()) + '%',\n            left: (80 * Math.random()) + '%',\n            width: (100 + 200 * Math.random()) + 'px',\n            height: (10 + 10 * Math.random()) + 'px',\n            '-moz-transform': 'rotate(' + (180 * Math.random()) + 'deg)',\n            '-o-transform': 'rotate(' + (180 * Math.random()) + 'deg)',\n            '-webkit-transform': 'rotate(' + (180 * Math.random()) + 'deg)',\n        });\n    });\n\n    $('.items').draggable();\n</code></pre>\n\n<p>The dragging works, but I am noticing a sudden jump while dragging the div's only in webkit browsers, while everything is fine in Firefox.</p>\n\n<p>If I remove the <em>position: absolute</em> style, the 'jumping' is even worse. I thought there was maybe a difference in the transform origin between webkit and gecko, but they are both at the centre of the element by default.</p>\n\n<p>I have searched around already, but only came up with results about scrollbars or sortable lists.</p>\n\n<p>Here is a working demo of my problem. Try to view it in both Safari/Chrome and Firefox. <a href=\"http://jsbin.com/ucehu/\" rel=\"nofollow\">http://jsbin.com/ucehu/</a></p>\n\n<p>Is this a bug within webkit or how the browsers render webkit?</p>\n",
            "last_activity_date": 1412791716,
            "question_id": 3523747,
            "score": 32,
            "tags": [
                "javascript",
                "jquery",
                "css3",
                "webkit"
            ],
            "title": "Webkit and jQuery draggable jumping"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Many JavaScript libraries (especially non-recent ones) do not handle IE9 well because it breaks with IE8 in the handling of a lot of things.</p>\n\n<p>JS code that sniffs for IE will fail quite frequently in IE9, unless such code is rewritten to handle IE9 specifically.</p>\n\n<p>Before the JS code is updated, you should use the \"X-UA-Compatible\" meta tag to force your web page into IE8 mode.</p>\n\n<p><strong>EDIT:</strong> Can't believe that, 3 years later and we're onto IE11, and there are still up-votes for this.  :-)  Many JS libraries should now at least support IE9 natively and most support IE10, so it is unlikely that you'll need the meta tag these days, unless you don't intend to upgrade your JS library.  But beware that IE10 changes things regarding to cross-domain scripting and some CDN-based library code breaks.  Check your library version.  For example, Dojo 1.9 on the CDN will break on IE10, but 1.9.1 solves it.</p>\n\n<p><strong>EDIT 2:</strong> Hey, guys, you <em>REALLY</em> need to get your acts together now.  We are now in mid-2014!!!  I am <em>STILL</em> getting up-votes for this!  Revise your sites to get rid of old-IE hard-coded dependencies!</p>\n\n<p>Sigh...  If I had known that this would be by far my most popular answer, I'd probably have spent more time polishing it...</p>\n",
                    "is_accepted": true,
                    "score": 72
                },
                {
                    "body": "<p>May be I am late for it but as I was having same issue in IE 9\nI followed above answer and I added line </p>\n\n<pre><code>&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=8;FF=3;OtherUA=4\" /&gt;\n</code></pre>\n\n<p>in <code>&lt;head&gt;</code> and it worked</p>\n\n<p>Thank you.....</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Well, you should also try adding the Javascript code into a function, then calling the function after document body has loaded..it worked for me :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I was also facing the same issue. </p>\n\n<p>I was using the code below in .aspx page without writing authentication configuration in web.config file. After writing the settings in Web.config, I am able to run my code.</p>\n\n<pre><code>&lt;% If Request.IsAuthenticated Then%&gt;\n     &lt;table&gt;&lt;/table&gt;\n&lt;%end if%&gt; \n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I have written code that sniffs IE4 or greater and is currently functioning perfectly in sites for my company's clients, as well as my own personal sites.  </p>\n\n<p>Include the following enumerated constant and function variables into a javascript include file on your page...</p>\n\n<pre><code>//methods\nvar BrowserTypes = {\n    Unknown: 0,\n    FireFox: 1,\n    Chrome: 2,\n    Safari: 3,\n    IE: 4,\n    IE7: 5,\n    IE8: 6,\n    IE9: 7,\n    IE10: 8,\n    IE11: 8,\n    IE12: 8\n};\n\nvar Browser = function () {\n    try {\n        //declares\n        var type;\n        var version;\n        var sVersion;\n\n        //process\n        switch (navigator.appName.toLowerCase()) {\n            case \"microsoft internet explorer\":\n                type = BrowserTypes.IE;\n                sVersion = navigator.appVersion.substring(navigator.appVersion.indexOf('MSIE') + 5, navigator.appVersion.length);\n                version = parseFloat(sVersion.split(\";\")[0]);\n                switch (parseInt(version)) {\n                    case 7:\n                        type = BrowserTypes.IE7;\n                        break;\n                    case 8:\n                        type = BrowserTypes.IE8;\n                        break;\n                    case 9:\n                        type = BrowserTypes.IE9;\n                        break;\n                    case 10:\n                        type = BrowserTypes.IE10;\n                        break;\n                    case 11:\n                        type = BrowserTypes.IE11;\n                        break;\n                    case 12:\n                        type = BrowserTypes.IE12;\n                        break;\n                }\n                break;\n            case \"netscape\":\n                if (navigator.userAgent.toLowerCase().indexOf(\"chrome\") &gt; -1) { type = BrowserTypes.Chrome; }\n                else { if (navigator.userAgent.toLowerCase().indexOf(\"firefox\") &gt; -1) { type = BrowserTypes.FireFox } };\n                break;\n            default:\n                type = BrowserTypes.Unknown;\n                break;\n        }\n\n        //returns\n        return type;\n    } catch (ex) {\n    }\n};\n</code></pre>\n\n<p>Then all you have to do is use any conditional functionality such as...</p>\n\n<p>ie. <code>value = (Browser() &gt;= BrowserTypes.IE) ? node.text : node.textContent;</code></p>\n\n<p>or <code>WindowWidth = (((Browser() &gt;= BrowserTypes.IE9) || (Browser() &lt; BrowserTypes.IE)) ? window.innerWidth : document.documentElement.clientWidth);</code></p>\n\n<p>or <code>sJSON = (Browser() &gt;= BrowserTypes.IE) ? xmlElement.text : xmlElement.textContent;</code></p>\n\n<p>Get the idea?  Hope this helps.</p>\n\n<p>Oh, you might want to keep it in mind to QA the Browser() function after IE10 is released, just to verify they didn't change the rules.  </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You could also get this error if you are viewing accessing the page locally (via <code>file://</code> instead of <code>http://</code>)..</p>\n\n<p>There is some discussion about this here: <a href=\"https://github.com/jeromegn/Backbone.localStorage/issues/55\" rel=\"nofollow\">https://github.com/jeromegn/Backbone.localStorage/issues/55</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>My website works well on Chrome, Firefox, and Internet Explorer 8. But on Internet Explorer 9, very weird errors are triggered when just hovering over components.</p>\n\n<blockquote>\n  <p>SCRIPT5007: Unable to get value of the property 'ui': object is null or undefined \n  ScriptResource.axd?d=sTHNYcjtEdStW2Igkk0K4NaRiBDytPljgMCYpqxV5NEZ1IEtx3DRHufMFtEMwoh2L3771sigGlR2bqlOxaiwXVEvePerLDCL0hFHHUFdTOM0o55K0&amp;t=ffffffffd37cb3a1, line 181 character 1914</p>\n</blockquote>\n\n<p>And following the link to the error in the javascript shows me these bits of code:</p>\n\n<pre><code>onNodeOver:function(B,A){A.ui.onOver(B)},onNodeOut:function(B,A){A.ui.onOut(B)}\n</code></pre>\n\n<p>I'm a little clueless on how to go about solving this error. \nI've seen <a href=\"http://forums.asp.net/t/1672835.aspx/1?CollapsiblePanel%20not%20working%20on%20hosted%20server\">this</a> solution but that didn't solve the problem for me.</p>\n\n<p>Any Ideas?</p>\n",
            "last_activity_date": 1418029379,
            "question_id": 5787245,
            "score": 27,
            "tags": [
                "javascript",
                "asp.net",
                "internet-explorer-9"
            ],
            "title": "IE9 JavaScript error: SCRIPT5007: Unable to get value of the property &#39;ui&#39;: object is null or undefined"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The <a href=\"http://www.pixastic.com/\" rel=\"nofollow\">Pixastic</a> library does <a href=\"http://www.pixastic.com/lib/docs/actions/crop.\" rel=\"nofollow\">exactly what you want</a>. However, it will only work on browsers that have canvas support. For those older browsers, you'll either need to:</p>\n\n<ol>\n<li>supply a server-side fallback, or</li>\n<li>tell the user that you're very sorry, but he'll need to get a more modern browser.</li>\n</ol>\n\n<p>Of course, option #2 isn't very user-friendly. However, if your intent is to provide a pure client-only tool and/or you can't support a fallback back-end cropper (e.g. maybe you're writing a browser extension or offline Chrome app, or maybe you can't afford a decent hosting provider that provides image manipulation libraries), then it's probably fair to limit your user base to modern browsers.</p>\n\n<p><strong>EDIT</strong>: If you don't want to learn Pixastic, I have added a very simple cropper on jsFiddle <a href=\"http://jsfiddle.net/Yuwvq/1\" rel=\"nofollow\">here</a>. It should be possible to modify and integrate and use the <code>drawCroppedImage</code> function with Jcrop.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yes, it can be done.<br>\nIt is based on the new html5 \"download\" attribute of anchor tags.<br>\nThe flow should be something like this : </p>\n\n<ol>\n<li>load the image  </li>\n<li>draw the image into a canvas with the crop boundaries specified</li>\n<li>get the image data from the canvas and make it a <code>href</code> attribute for an anchor tag in the dom  </li>\n<li>add the download attribute (<code>download=\"desired-file-name\"</code>) to that <code>a</code> element\nThat's it. all the user has to do is click your \"download link\" and the image will be downloaded to his pc.  </li>\n</ol>\n\n<p>I'll come back with a demo when I get the chance.</p>\n\n<p><strong>Update</strong><br>\nHere's <a href=\"http://jsfiddle.net/gion_13/MmFkL/show/\">the live demo</a> as I promised.  It takes the <a href=\"http://jsfiddle.net/img/logo.png\">jsfiddle logo</a> and crops 5px of each margin.<br>\nThe code looks like this :  </p>\n\n<pre><code>var img = new Image();\nimg.onload = function(){\n    var cropMarginWidth = 5,\n        canvas = $('&lt;canvas/&gt;')\n                    .attr({\n                         width: img.width - 2 * cropMarginWidth,\n                         height: img.height - 2 * cropMarginWidth\n                     })\n                    .hide()\n                    .appendTo('body'),\n        ctx = canvas.get(0).getContext('2d'),\n        a = $('&lt;a download=\"cropped-image\" title=\"click to download the image\" /&gt;'),\n        cropCoords = {\n            topLeft : {\n                x : cropMarginWidth,\n                y : cropMarginWidth \n            },\n            bottomRight :{\n                x : img.width - cropMarginWidth,\n                y : img.height - cropMarginWidth\n            }\n        };\n\n    ctx.drawImage(img, cropCoords.topLeft.x, cropCoords.topLeft.y, cropCoords.bottomRight.x, cropCoords.bottomRight.y, 0, 0, img.width, img.height);\n    var base64ImageData = canvas.get(0).toDataURL();\n\n\n    a\n        .attr('href', base64ImageData)\n        .text('cropped image')\n        .appendTo('body');\n\n    a\n        .clone()\n        .attr('href', img.src)\n        .text('original image')\n        .attr('download','original-image')\n        .appendTo('body');\n\n    canvas.remove();\n}\nimg.src = 'some-image-src';\n</code></pre>\n\n<p><strong>Update II</strong><br>\nForgot to mention : of course there is a downside :(.<br>\nBecause of the same-origin policy that is applied to images too, if you want to access an image's data (through the canvas method <code>toDataUrl</code>).<br>\nSo you would still need a server-side proxy that would serve your image as if it were hosted on your domain.  </p>\n\n<p><strong>Update III</strong>\nAlthough I can't provide a live demo for this (for security reasons), here is a php sample code that solves the same-origin policy : </p>\n\n<p>file  <code>proxy.php</code> : </p>\n\n<pre><code>$imgData = getimagesize($_GET['img']);\nheader(\"Content-type: \" . $imgData['mime']);\necho file_get_contents($_GET['img']);  \n</code></pre>\n\n<p>This way, instead of loading the external image direct from it's origin : </p>\n\n<pre><code>img.src = 'http://some-domain.com/imagefile.png';\n</code></pre>\n\n<p>You can load it through your proxy : </p>\n\n<pre><code>img.src = 'proxy.php?img=' + encodeURIComponent('http://some-domain.com/imagefile.png');  \n</code></pre>\n\n<p>And here's a sample php code for saving the image data (base64) into an actual image : </p>\n\n<p>file <code>save-image.php</code> :  </p>\n\n<pre><code>$data = preg_replace('/data:image\\/(png|jpg|jpeg|gif|bmp);base64/','',$_POST['data']);\n$data = base64_decode($data);\n$img = imagecreatefromstring($data);\n\n$path = 'path-to-saved-images/';\n// generate random name\n$name  = substr(md5(time()),10);\n$ext = 'png';\n$imageName = $path.$name.'.'.$ext;\n\n// write the image to disk\nimagepng($img,  $imageName);\nimagedestroy($img);\n// return the image path\necho $imageName;\n</code></pre>\n\n<p>All you have to do then is post the image data to this file and it will save the image to disc and return you the existing image filename.  </p>\n\n<p>Of course all this might feel a bit complicated, but I wanted to show you that what you're trying to achieve is possible.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>If you will still use JCrop, you will need only this php functions to crop the file:</p>\n\n<pre><code>$img_src = imagecreatefromjpeg($src);\n$img_dest = imagecreatetruecolor($new_w,$new_h);\nimagecopyresampled($img_dest,$img_src,0,0,$x,$y,$new_w,$new_h,$w,$h);\nimagejpeg($img_dest,$dest);\n</code></pre>\n\n<p>client side:</p>\n\n<pre><code>jQuery(function($){\n\n    $('#target').Jcrop({\n    onChange:   showCoords,\n    onSelect:   showCoords,\n    onRelease:  clearCoords\n    });\n\n});\n\nvar x,y,w,h; //these variables are necessary to crop\nfunction showCoords(c)\n{\n    x = c.x;\n    y = c.y;\n    w = c.w;\n    h = c.h;\n};\nfunction clearCoords()\n{\n    x=y=w=h=0;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>#change-avatar-file</code> is a file input\n<code>#change-avatar-file</code> is a img tag (the target of jcrop)\nThe \"key\" is FR.onloadend  Event\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FileReader\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/FileReader</a></p>\n\n<pre><code>$('#change-avatar-file').change(function(){\n        var currentImg;\n        if ( this.files &amp;&amp; this.files[0] ) {\n            var FR= new FileReader();\n            FR.onload = function(e) {\n                $('#avatar-change-img').attr( \"src\", e.target.result );\n                currentImg = e.target.result;\n            };\n            FR.readAsDataURL( this.files[0] );\n            FR.onloadend = function(e){\n                //console.log( $('#avatar-change-img').attr( \"src\"));\n                var jcrop_api;\n\n                $('#avatar-change-img').Jcrop({\n                    bgFade:     true,\n                    bgOpacity: .2,\n                    setSelect: [ 60, 70, 540, 330 ]\n                },function(){\n                    jcrop_api = this;\n                });\n            }\n        }\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Many libraries I have found, like Jcrop, do not actually do the cropping, it only creates an image cropping UI. It then depends on the server doing the actual cropping.</p>\n\n<p>How can I make the image cropping <em>client-side</em> by using some <em>HTML5 feature</em> without using any server-side code.</p>\n\n<p>If yes, are there some examples or hints?</p>\n",
            "last_activity_date": 1422460001,
            "question_id": 12728188,
            "score": 21,
            "tags": [
                "javascript",
                "html5",
                "html5-canvas"
            ],
            "title": "Cropping images in the browser BEFORE the upload"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>On master, the correct API is:</p>\n\n<pre><code>App.Adapter.map('App.Post', {\n  comments: { embedded: 'always' }\n});\n</code></pre>\n\n<p>The two possible values of <code>embedded</code> are:</p>\n\n<ul>\n<li><code>load</code>: The child records are embedded when loading, but should be saved as standalone records. In order for this to work, the child records must have an ID.</li>\n<li><code>always</code>: The child records are embedded when loading, and are saved embedded in the same record. This, of course, affects the dirtiness of the records (if the child record changes, the adapter will mark the parent record as dirty).</li>\n</ul>\n\n<p>If you don't have a custom adapter, you can call <code>map</code> directly on <code>DS.RESTAdapter</code>:</p>\n\n<pre><code>DS.RESTAdapter.map('App.Post', {\n  comments: { embedded: 'always' }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 42
                },
                {
                    "body": "<p>I have the exact same problem.</p>\n\n<p>This bug has been reported on the ember data issue tracker.\nThe following PR adds 2 failing tests showing the problem: <a href=\"https://github.com/emberjs/data/pull/578\">https://github.com/emberjs/data/pull/578</a></p>\n\n<p>It seems that there is no workaround right now.</p>\n\n<p><strong>EDIT:</strong></p>\n\n<p><em>sebastianseilund</em> opened a PR 2 days ago which fixes your problem.\nHave a look at: <a href=\"https://github.com/emberjs/data/pull/629/files\">https://github.com/emberjs/data/pull/629/files</a></p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>Adding an update to this incase others come across this post and are having a hard time figuring out what works with the current version of ember-data.</p>\n\n<p>As of Ember Data 1.0.0.beta.7, you need to override the appropriate methods on the serializer.  Here's an example:</p>\n\n<p>1) Reopen the serializer (credit to <a href=\"http://mozmonkey.com/2013/12/serializing-embedded-relationships-ember-data-beta/\" rel=\"nofollow\">this post</a>):</p>\n\n<pre><code>DS.RESTSerializer.reopen({\n  serializeHasMany: function(record, json, relationship) {\n    var hasManyRecords, key;\n    key = relationship.key;\n    hasManyRecords = Ember.get(record, key);\n    if (hasManyRecords &amp;&amp; relationship.options.embedded === \"always\") {\n      json[key] = [];\n      hasManyRecords.forEach(function(item, index) {\n        // use includeId: true if you want the id of each model on the hasMany relationship\n        json[key].push(item.serialize({ includeId: true }));\n      });\n    } else {\n      this._super(record, json, relationship);\n    }\n  }\n});\n</code></pre>\n\n<p>2) Add the <code>embedded: 'always'</code> option to the relationship on the model:</p>\n\n<pre><code>App.Post = DS.Model.extend({\n  comments: DS.hasMany('comment', {\n    embedded: 'always'\n  })\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This is what worked for me (Ember 1.5.1+pre.5349ffcb, Ember Data 1.0.0-beta.7.f87cba88):</p>\n\n<pre><code>App.Post = DS.Model.extend({\n  comments: DS.hasMany('comment', { embedded: 'always' })\n});\n\nApp.PostSerializer = DS.ActiveModelSerializer.extend(DS.EmbeddedRecordsMixin, {\n  attrs: {\n    comments: { embedded: 'always' }\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I can't get embedded hasMany work correctly with ember data. </p>\n\n<p>I have something like this</p>\n\n<pre><code>App.Post = DS.Model.extend({\n  comments: DS.hasMany('App.Comment')\n});\n\nApp.Comment = DS.Model.extend({\n  post: DS.hasMany('App.Post'),\n  name: attr('string')\n});\n</code></pre>\n\n<p>And my API returns the following for <code>GET /post</code>:</p>\n\n<pre><code>[\n  {\n   id: 1\n   comments: [{name: 'test'}, {name: 'test2'}]\n  },\n  ...\n]\n</code></pre>\n\n<p>I need to send this with <code>POST /post</code>:</p>\n\n<pre><code>[\n  {\n    comments: [{name: 'test'}, {name: 'test2'}]\n  },\n  ...\n]\n</code></pre>\n\n<p>I want to work with Ember models and have them make the appropriate requests:</p>\n\n<pre><code>var post = App.store.createRecord(App.Post, hash_post_without_comments);\npost.get('comments').createRecord(hash_comment);\n\nApp.store.commit(); // This should call the POST api \n</code></pre>\n\n<p>and</p>\n\n<pre><code>var posts = App.store.find(App.Post); // This should call the GET api \n</code></pre>\n\n<p>When I try something like <code>post: DS.hasMany('App.Post', {embedded: true})</code>, the GET is working but the POST is trying to make a POST for the two records not only the parent one.</p>\n\n<p>EDIT : My Real use case </p>\n\n<p>1- J've just buit ember data from master</p>\n\n<p>2- My adapter: RESTAdapter</p>\n\n<p>3- The serializer: JSONSerializer</p>\n\n<p>4- I added</p>\n\n<pre><code>App.MyAdapter.map('App.Join', {\n    columns: { embedded: 'always' }\n});\n</code></pre>\n\n<p>5- My Models are:</p>\n\n<pre><code>App.Join = DS.Model.extend({\n    rowCount: DS.attr('number'),\n    columns: DS.hasMany('App.JoinColumn'),\n});\n\nApp.JoinColumn = DS.Model.extend({\n    join: DS.belongsTo('App.Join')\n});\n</code></pre>\n\n<p>6- WHen:</p>\n\n<pre><code>var a = App.Join.find(1);\na.get('columns').createRecord({});\nApp.store.commit();\n</code></pre>\n\n<p>a POST for joincolumn is sent and the parent is not dirty</p>\n\n<p>What am i missing?</p>\n",
            "last_activity_date": 1400013770,
            "question_id": 14320925,
            "score": 14,
            "tags": [
                "javascript",
                "ember.js",
                "ember-data"
            ],
            "title": "How to make embedded hasMany relationships work with ember data"
        },
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p>You can like this...</p>\n\n<pre><code>document.getElementById('my-image').ondragstart = function() { return false; };\n</code></pre>\n\n<p><a href=\"http://jsbin.com/ogibe3/edit\">See it working (or not working, rather)</a></p>\n\n<p>It seems you are using jQuery.</p>\n\n<pre><code>$('img').on('dragstart', function(event) { event.preventDefault(); });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 132
                },
                {
                    "body": "<pre><code>window.ondragstart = function() { return false; } \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Well, this is possible, and the other answers posted are perfectly valid, but you could take a brute force approach and prevent the default behavior of <code>mousedown</code> on images. Which, is to start dragging the image. </p>\n\n<p>Something like this:</p>\n\n<pre><code>window.onload = function () {  \n    var images = document.getElementsByTagName('img');   \n    for (var i = 0; img = images[i++];) {    \n        img.ondragstart = function() { return false; };\n    }  \n};  \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I tried myself and found this is working.</p>\n\n<pre><code>$(\"img\").mousedown(function(){\n    return false;\n});\n</code></pre>\n\n<p>I am sure this disables dragging of all the images. Not sure it effects something else. </p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Great solution, had one small issue with conflicts,\nIf anyone else has conflict from other js library simply enable no conflict like so.</p>\n\n<pre><code>var $j = jQuery.noConflict();$j('img').bind('dragstart', function(event) { event.preventDefault(); });\n</code></pre>\n\n<p>Hope this helps someone out.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Since my images were created using ajax, and therefore not available on windows.load.</p>\n\n<p><code>$(\"#page\").delegate('img', 'dragstart', function (event) { event.preventDefault(); });</code></p>\n\n<p>This way I can control which section blocks the behavior, it only uses one event binding and it works for future ajax created images without having to do anything.</p>\n\n<p>With jQuery new <code>on</code> binding:</p>\n\n<p><code>$('#page').on('dragstart', 'img', function(event) { event.preventDefault(); });</code>\n(thanks @ialphan)</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You can add the following to each image you don't want to be draggable, (inside the <code>img</code> tag):</p>\n\n<pre><code>onmousedown=\"return false;\"\n</code></pre>\n\n<p>e.g. </p>\n\n<pre><code>img src=\"Koala.jpg\" onmousedown=\"return false;\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>This code does exactly what you want. It prevents the image from dragging while allowing any other actions that depend on the event.</p>\n\n<p><code>$(\"img\").mousedown(function(e){\n    e.preventDefault()\n});</code></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>CSS only solution: use <code>pointer-events: none</code></p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/CSS/pointer-events\">https://developer.mozilla.org/en-US/docs/CSS/pointer-events</a></p>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<p>just add draggable=\"false\" to your image tag:</p>\n\n<pre><code>&lt;img draggable=\"false\" src=\"image.png\"&gt;\n</code></pre>\n\n<p>IE8 and under doesn't support however.</p>\n",
                    "is_accepted": false,
                    "score": 45
                },
                {
                    "body": "<p>I've used your answer to avoid dragging images.</p>\n\n<pre><code>    $(\"img\").mousedown(function(){\n        return false;\n    });\n</code></pre>\n\n<p>While I'm using <code>jQuery UI</code> to do some <code>drag and drop</code> mechanics, I needed to disable the drag after the correct drop interaction made, but when I added your solution my code started to fail.</p>\n\n<p>With the event bubbling, the drag functionality attached to the parent of the <code>image</code> is cancelled because of the <code>return false</code> on the <code>mousedown</code> event: the behavior bubble up and block the drag.</p>\n\n<p>So when the drop is made, I simply attach the event to the image, while is no longer necessary to drag that element over the page:</p>\n\n<pre><code>    $(element).draggable('disable').find('img').on('mousedown',false);\n</code></pre>\n\n<p>Take care when attaching broad events like yours to avoid headaches!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>See this <a href=\"http://stackoverflow.com/a/16283142/932282\">answer</a>; in Chrome and Safari you can use the following style to disable the default dragging:</p>\n\n<pre><code>-webkit-user-drag: auto | element | none;\n</code></pre>\n\n<p>You could try <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/user-select\" rel=\"nofollow\">user-select</a> for Firefox and IE(10+):</p>\n\n<pre><code>-moz-user-select: none | text | all | element\n-ms-user-select: none | text | all | element\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>document.getElementById('#yourImageId').addEventListener('dragstart', function(e) {\n     e.preventDefault();\n});\n</code></pre>\n\n<p>Works in this Plunker <a href=\"http://plnkr.co/edit/HbAbJkF0PVLIMjTmEZml\" rel=\"nofollow\">http://plnkr.co/edit/HbAbJkF0PVLIMjTmEZml</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Well I don't know if the answers in here have helped everyone or not, but here's a simple inline CSS trick which would definitely help you to disable dragging and selecting texts on a HTML page.</p>\n\n<p>On your <code>&lt;body&gt;</code> tag add <code>ondragstart=\"return false\"</code>. This will disable dragging of images. But if you also want to disable text selection then add <code>onselectstart=\"return false\"</code>.</p>\n\n<p>The code will look like this: <code>&lt;body ondragstart=\"return false\" onselectstart=\"return false\"&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;img draggable=\"false\" src=\"images/testimg1.jpg\" alt=\"\"/&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I need to put an image in my page. I want to disable dragging of that image. I am trying lot of things but no help. Can somebody help me out ?</p>\n\n<p>I don't want to keep that image as a background-image because I am resizing the image.</p>\n",
            "last_activity_date": 1416469531,
            "question_id": 4211909,
            "score": 80,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "image"
            ],
            "title": "Disable dragging an image from an HTML page"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>It seems that JSONP requests that don't return a successful result never trigger any event, success or failure, and for better or worse that's apparently by design.</p>\n\n<p>After searching their bug tracker, there's <a href=\"http://dev.jquery.com/attachment/ticket/3442/jsonabort.patch\">a patch</a> which may be a possible solution using a timeout callback.  See <a href=\"http://dev.jquery.com/attachment/ticket/3442\">bug report #3442</a>.  If you can't capture the error, you can at least timeout after waiting a reasonable amount of time for success.</p>\n",
                    "is_accepted": true,
                    "score": 44
                },
                {
                    "body": "<p>A working URI for Julian's solution for JSON-P with jQuery is <a href=\"https://github.com/jaubourg/jquery-jsonp\" rel=\"nofollow\">https://github.com/jaubourg/jquery-jsonp</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Seems like this is working now:</p>\n\n<pre><code>jQuery(document).ajaxError(function(event, request, settings){\n   alert(\"Error\");\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you collaborate with the provider, you could send another query string parameter being the function to callback when there's an error.</p>\n\n<p>?callback=?&amp;error=?</p>\n\n<p>This is called JSONPE but it's not at all a defacto standard.</p>\n\n<p>The provider then passes information to the error function to help you diagnose.</p>\n\n<p>Doesn't help with comm errors though - jQuery would have to be updated to also callback the error function on timeout, as in Adam Bellaire's answer.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I use this to catch an JSON error</p>\n\n<pre><code>try {\n   $.getJSON(ajaxURL,callback).ajaxError();\n} catch(err) {\n   alert(\"wow\");\n   alert(\"Error : \"+ err);\n}\n</code></pre>\n\n<p><strong>Edit:</strong> Alternatively you can get the error message also. This will let you know what the error is exactly. Try following syntax in catch block</p>\n\n<pre><code>alert(\"Error : \" + err);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<h1>Detecting JSONP problems</h1>\n\n<p>If you don't want to download a dependency, you can detect the error state yourself. It's easy.</p>\n\n<p>You will only be able to detect JSONP errors by using some sort of timeout. If there's no valid response in a certain time, then assume an error. The error could be basically anything, though.</p>\n\n<p>Here's a simple way to go about checking for errors. Just use a <code>success</code> flag:</p>\n\n<pre><code>var success = false;\n\n$.getJSON(url, function(json) {\n    success = true;\n    // ... whatever else your callback needs to do ...\n});\n\n// Set a 5-second (or however long you want) timeout to check for errors\nsetTimeout(function() {\n    if (!success)\n    {\n        // Handle error accordingly\n        alert(\"Houston, we have a problem.\");\n    }\n}, 5000);\n</code></pre>\n\n<p>As thedawnrider mentioned in comments, you could also use clearTimeout instead:</p>\n\n<pre><code>var errorTimeout = setTimeout(function() {\n    if (!success)\n    {\n        // Handle error accordingly\n        alert(\"Houston, we have a problem.\");\n    }\n}, 5000);\n\n$.getJSON(url, function(json) {\n    clearTimeout(errorTimeout);\n    // ... whatever else your callback needs to do ...\n});\n</code></pre>\n\n<p>Why? Read on...</p>\n\n<hr>\n\n<h2>Here's how JSONP works in a nutshell:</h2>\n\n<p>JSONP doesn't use XMLHttpRequest like regular AJAX requests. Instead, it injects a <code>&lt;script&gt;</code> tag into the page, where the \"src\" attribute is the URL of the request. The content of the response is wrapped in a Javascript function which is then executed when downloaded.</p>\n\n<p><strong>For example.</strong></p>\n\n<p>JSONP request: <code>https://api.site.com/endpoint?this=that&amp;callback=myFunc</code></p>\n\n<p>Javascript will inject this script tag into the DOM:</p>\n\n<pre><code>&lt;script src=\"https://api.site.com/endpoint?this=that&amp;callback=myFunc\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>What happens when a <code>&lt;script&gt;</code> tag is added to the DOM? Obviously, it gets executed.</p>\n\n<p>So suppose the response to this query yielded a JSON result like:</p>\n\n<pre><code>{\"answer\":42}\n</code></pre>\n\n<p>To the browser, that's the same thing as a script's source, so it gets executed. But what happens when you execute this:</p>\n\n<pre><code>&lt;script&gt;{\"answer\":42}&lt;/script&gt;\n</code></pre>\n\n<p>Well, nothing. It's just an object. It doesn't get stored, saved, and nothing happens.</p>\n\n<p>This is why JSONP requests wrap their results in a function. The server, which must support JSONP serialization, sees the <code>callback</code> parameter you specified, and returns this instead:</p>\n\n<pre><code>myFunc({\"answer\":42})\n</code></pre>\n\n<p>Then this gets executed instead:</p>\n\n<pre><code>&lt;script&gt;myFunc({\"answer\":42})&lt;/script&gt;\n</code></pre>\n\n<p>... which is much more useful. Somewhere in your code is, in this case, a global function called <code>myFunc</code>:</p>\n\n<pre><code>myFunc(data)\n{\n    alert(\"The answer to life, the universe, and everything is: \" + data.answer);\n}\n</code></pre>\n\n<p>That's it. That's the \"magic\" of JSONP. Then to build in a timeout check is very simple, like shown above. Make the request and immediately after, start a timeout. After X seconds, if your flag still hasn't been set, then the request timed out.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Mayby this works?</p>\n\n<pre><code>.complete(function(response, status) {\n    if (response.status == \"404\")\n        alert(\"404 Error\");\n    else{\n        //Do something\n    }   \n    if(status == \"error\")\n        alert(\"Error\");\n    else{\n        //Do something\n    }\n});\n</code></pre>\n\n<p>I dont know whenever the status goes in \"error\" mode. But i tested it with 404 and it responded</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>you ca explicitly handle any error number by adding this attribute in the ajax request:  </p>\n\n<pre><code>statusCode: {\n        404: function() {\n          alert(\"page not found\");\n        }\n    }\n</code></pre>\n\n<p>so, your code should be like this:   </p>\n\n<pre><code>jQuery.ajax({\ntype: \"GET\",\nstatusCode: {\n        404: function() {\n          alert(\"page not found\");\n        }\n},\nurl: handlerURL,\ndataType: \"jsonp\",\nsuccess: function(results){\n    alert(\"Success!\");\n},\nerror: function(XMLHttpRequest, textStatus, errorThrown){\n    alert(\"Error\");\n}\n});\n</code></pre>\n\n<p>hope this helps you :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I know this question is a little old but I didn't see an answer that gives a simple solution to the problem so I figured I would share my 'simple' solution. </p>\n\n<pre><code>$.getJSON(\"example.json\", function() {\n      console.log( \"success\" );\n}).fail(function() { \n      console.log( \"error\" ); \n}); \n</code></pre>\n\n<p>We can simply use the <code>.fail()</code> callback to check to see if an error occurred. </p>\n\n<p>Hope this helps :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://stackoverflow.com/a/19075640/2314737\">Here</a>'s my extensive answer to a similar question.</p>\n\n<p>Here's the code:</p>\n\n<pre><code>jQuery.getJSON(handlerURL + \"&amp;callback=?\", \n    function(jsonResult){\n        alert(\"Success!\");\n    })\n.done(function() { alert('getJSON request succeeded!'); })\n.fail(function(jqXHR, textStatus, errorThrown) { alert('getJSON request failed! ' + textStatus); })\n.always(function() { alert('getJSON request ended!'); });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I also posted this answer in <a href=\"http://stackoverflow.com/questions/1740218/error-handling-in-getjson-calls/20256885#20256885\">stack<strong>overflow</strong> - Error handling in getJSON calls</a></p>\n\n<p>I know it's been a while since someone answerd here and the poster probably already got his answer either from here or from somewhere else. I do however think that this post will help anyone looking for a way to keep track of errors and timeouts while doing getJSON requests. Therefore below my answer to the question</p>\n\n<p>The getJSON structure is as follows (found on <a href=\"http://api.jquery.com/jQuery.getJSON/#jQuery-getJSON-url-data-success-data--textStatus--jqXHR-\" rel=\"nofollow\" title=\"jquery api for getJSON\">http://api.jqueri.com</a>):</p>\n\n<pre><code>$(selector).getJSON(url,data,success(data,status,xhr))\n</code></pre>\n\n<p>most people implement that using </p>\n\n<pre><code>$.getJSON(url, datatosend, function(data){\n    //do something with the data\n});\n</code></pre>\n\n<p>where they use the url var to provide a link to the JSON data, the datatosend as a place to add the <code>\"?callback=?\"</code> and other variables that have to be send to get the correct JSON data returned, and the success funcion as a function for processing the data. </p>\n\n<p>You can however add the status and xhr variables in your success function. The status variable contains one of the following strings : \"success\", \"notmodified\", \"error\", \"timeout\", or \"parsererror\", and the xhr variable contains the returned XMLHttpRequest object\n(<a href=\"http://www.w3schools.com/jquery/ajax_getjson.asp\" rel=\"nofollow\" title=\"w3schools link to getJSON\">found on w3schools</a>)</p>\n\n<pre><code>$.getJSON(url, datatosend, function(data, status, xhr){\n    if (status == \"success\"){\n        //do something with the data\n    }else if (status == \"timeout\"){\n        alert(\"Something is wrong with the connection\");\n    }else if (status == \"error\" || status == \"parsererror\" ){\n        alert(\"An error occured\");\n    }else{\n        alert(\"datatosend did not change\");\n    }         \n});\n</code></pre>\n\n<p>This way it is easy to keep track of timeouts and errors without having to implement a custom timeout tracker that is started once a request is done.</p>\n\n<p>Hope this helps someone still looking for an answer to this question.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>Is it possible to catch an error when using JSONP with jQuery? I've tried both the $.getJSON and $.ajax methods but neither will catch the 404 error I'm testing. Here is what I've tried (keep in mind that these all work successfully, but I want to handle the case when it fails):</p>\n\n<pre><code>jQuery.ajax({\n    type: \"GET\",\n    url: handlerURL,\n    dataType: \"jsonp\",\n    success: function(results){\n        alert(\"Success!\");\n    },\n    error: function(XMLHttpRequest, textStatus, errorThrown){\n        alert(\"Error\");\n    }\n});\n</code></pre>\n\n<p>And also:</p>\n\n<pre><code>jQuery.getJSON(handlerURL + \"&amp;callback=?\", \n    function(jsonResult){\n        alert(\"Success!\");\n    });\n</code></pre>\n\n<p>I've also tried adding the $.ajaxError but that didn't work either:</p>\n\n<pre><code>jQuery(document).ajaxError(function(event, request, settings){\n   alert(\"Error\");\n});\n</code></pre>\n\n<p>Thanks in advance for any replies!</p>\n",
            "last_activity_date": 1390324892,
            "question_id": 309953,
            "score": 61,
            "tags": [
                "javascript",
                "jquery",
                "jsonp"
            ],
            "title": "How do I catch jQuery $.getJSON (or $.ajax with datatype set to &#39;jsonp&#39;) error when using JSONP?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>I wouldn't count on it. It'll likely get url encoded as <code>%3A</code> by many user-agents.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>From <code>URLEncoder</code> javadoc:</p>\n\n<blockquote>\n  <p>For more information about HTML form\n  encoding, consult the HTML\n  <a href=\"http://www.w3.org/TR/html4/\" rel=\"nofollow\">specification</a>. </p>\n  \n  <p>When encoding a String, the following\n  rules apply: </p>\n  \n  <ul>\n  <li>The alphanumeric characters \"a\"\n  through \"z\", \"A\" through \"Z\" and \"0\"\n  through \"9\" remain the same.  </li>\n  <li>The\n  special characters \".\", \"-\", \"*\", and\n  \"_\" remain the same.  </li>\n  <li>The space\n  character \" \" is converted into a plus\n  sign \"+\".</li>\n  <li>All other characters are\n  unsafe and are first converted into\n  one or more bytes using some encoding\n  scheme. Then each byte is represented\n  by the 3-character string \"%xy\", where\n  xy is the two-digit hexadecimal\n  representation of the byte. The\n  recommended encoding scheme to use is\n  UTF-8. However, for compatibility\n  reasons, if an encoding is not\n  specified, then the default encoding\n  of the platform is used.</li>\n  </ul>\n</blockquote>\n\n<p>That is, <code>:</code> is not safe.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Colon isn't safe. <a href=\"http://www.blooberry.com/indexdot/html/topics/urlencoding.htm\" rel=\"nofollow\">See here</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I don't see Firefox or IE8 encoding some of the Wikipedia <a href=\"http://en.wikipedia.org/wiki/Terminator_3:_Rise_of_the_Machines\" rel=\"nofollow\">URLs</a> that include the character.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Better to avoid it. A comma is preferable, for example: <code>example/key,value/key,value</code></p>\n\n<p>Or a slash and calculate which ones are keys and values.</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>It is not a safe character and is used to distinguish what port you connect to when it is right after your domain name</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I recently <a href=\"http://illegalargumentexception.blogspot.com/2009/12/java-safe-character-handling-and-url.html#URI2009_URL_BUILDER\">wrote</a> a URL encoder, so this is pretty fresh in my mind.</p>\n\n<blockquote>\n  <p><code>http://site/gwturl#user:45/comments</code></p>\n</blockquote>\n\n<p>All the characters in the <a href=\"http://tools.ietf.org/html/rfc3986#section-3.5\">fragment part</a> (<code>user:45/comments</code>) are perfectly legal for <a href=\"http://tools.ietf.org/html/rfc3986\">RFC 3986</a> URIs.</p>\n\n<p>The relevant parts of the <a href=\"http://tools.ietf.org/html/rfc3986#appendix-A\">ABNF</a>:</p>\n\n<pre><code>fragment      = *( pchar / \"/\" / \"?\" )\npchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\nunreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\npct-encoded   = \"%\" HEXDIG HEXDIG\nsub-delims    = \"!\" / \"$\" / \"&amp;\" / \"'\" / \"(\" / \")\"\n                 / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n</code></pre>\n\n<p>Apart from these restrictions, the fragment part has no defined structure beyond the one your application gives it. <em>The scheme, http, only says that you don't send this part to the server.</em></p>\n\n<hr>\n\n<p>EDIT:</p>\n\n<p><strong>D'oh!</strong></p>\n\n<p>Despite my assertions about the URI spec, <a href=\"http://stackoverflow.com/users/218978/irreputable\">irreputable</a> provides the correct answer when <a href=\"http://stackoverflow.com/questions/2053132/is-a-colon-safe-for-friendly-url-use/2053640#2053640\">he points out</a> that <strong>the HTML 4 spec restricts element names/identifiers</strong>.</p>\n\n<p><em>Note that identifier rules are <a href=\"http://dev.w3.org/html5/spec/dom.html#concept-id\">changing in HTML 5</a>. URI restrictions will still apply (at time of writing, there are some unresolved issues around HTML 5's use of URIs).</em></p>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>Colons are used as the split between username and password if a protocol requires authentication.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In addition to McDowell's analysis on URI standard, remember also that the fragment must be valid HTML anchor name. According to <a href=\"http://www.w3.org/TR/html4/types.html#type-name\">http://www.w3.org/TR/html4/types.html#type-name</a></p>\n\n<blockquote>\n  <p>ID and NAME tokens must begin with a\n  letter ([A-Za-z]) and may be followed\n  by any number of letters, digits\n  ([0-9]), hyphens (\"-\"), underscores\n  (\"_\"), colons (\":\"), and periods\n  (\".\").</p>\n</blockquote>\n\n<p>So you are in luck. \":\" is explicitly allowed. And nobody should \"%\"-escape it, not only because \"%\" is illegal char there, but also because fragment much match anchor name char-by-char, therefore no agent should try to temper with them in anyway. </p>\n\n<p>However you have to test it. Web standards are not strictly followed, sometimes the standards are conflicting. For example HTTP/1.1 RFC 2616 does not allow query string in the request URL, while HTML constructs one when submitting a form with GET method. Whichever implemented in the real world wins at the end of the day.</p>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>MediaWiki and other wiki engines use colons in their URLs to designate namespaces, with apparently no major problems.</p>\n\n<p>eg <a href=\"http://en.wikipedia.org/wiki/Template:Welcome\">http://en.wikipedia.org/wiki/Template:Welcome</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>We are designing a URL system that will specify application sections as words separated by slashes.  Specifically, this is in GWT, so the relevant parts of the URL will be in the hash (which will be interpreted by a controller layer on the client-side):</p>\n\n<pre><code>http://site/gwturl#section1/section2\n</code></pre>\n\n<p>Some sections may need additional attributes, which we'd like to specify with a <code>:</code>, so that the section parts of the URL are unambiguous.  The code would split first on <code>/</code>, then on <code>:</code>, like this:</p>\n\n<pre><code>http://site/gwturl#user:45/comments\n</code></pre>\n\n<p>Of course, we are doing this for url-friendliness, so we'd like to make sure that none of these characters which will hold special meaning will be url-encoded by browsers, or any other system, and end up with a url like this:</p>\n\n<pre><code>http://site/gwturl#user%3A45/comments &lt;--- BAD\n</code></pre>\n\n<p>Is using the colon in this way <b>safe</b> (by which I mean won't be automatically encoded) for browsers, bookmarking systems, even Javascript or Java code?</p>\n",
            "last_activity_date": 1360123481,
            "question_id": 2053132,
            "score": 56,
            "tags": [
                "java",
                "javascript",
                "url",
                "gwt",
                "friendly-url"
            ],
            "title": "Is a colon safe for friendly-URL use?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This is probably far from the most elegant solution, but its a solution nonetheless:</p>\n\n<pre><code>public class UpdatePanel : System.Web.UI.UpdatePanel\n{\n    /// &lt;summary&gt;\n    /// Javascript to be run when the updatepanel has completed updating\n    /// &lt;/summary&gt;\n    [Description(\"Javascript to be run when the updatepanel has completed updating\"),\n    \tCategory(\"Values\"),\n    \tDefaultValue(null),\n    \tBrowsable(true)]\n    public string OnUpdateCompleteClientScript\n    {\n    \tget\n    \t{\n    \t\treturn (string)ViewState[\"OnUpdateCompleteClientScript\"];\n    \t}\n    \tset\n    \t{\n    \t\tViewState[\"OnUpdateCompleteClientScript\"] = value;\n    \t}\n    }\n\n    protected override void OnPreRender(System.EventArgs e)\n    {\n    \tbase.OnPreRender(e);\n    \tif(!string.IsNullOrEmpty(this.OnUpdateCompleteClientScript))\n    \t\tPage.ClientScript.RegisterStartupScript(this.GetType(), this.ClientID, string.Concat(\"Sys.WebForms.PageRequestManager.getInstance().add_endRequest(function(sender, args){for(var panelId in sender._updatePanelClientIDs){if(sender._updatePanelClientIDs[panelId] == '\", this.ClientID, \"'){\", this.OnUpdateCompleteClientScript, \"}}});\"), true);\n    }\n}\n</code></pre>\n\n<p>Use it like this:</p>\n\n<pre><code>&lt;uc:UpdatePanel OnUpdateCompleteClientScript=\"alert('update complete');\"&gt;\n    &lt;!-- stuff in here --&gt;\n&lt;/uc:UpdatePanel&gt;\n</code></pre>\n\n<p>Of course you'll need to register the custom control in youre webconfig or page to use it like this.</p>\n\n<p>Edit: also, have you looked at <a href=\"http://docs.jquery.com/Events/live\">jquery.live?</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Instead of putting your jQuery code inside of <code>$(document).ready()</code>, put it inside </p>\n\n<pre><code>function pageLoad(sender, args) { \n    ... \n}\n</code></pre>\n\n<p><code>pageLoad</code> is executed after every postback, synchronous or asynchronous. <code>pageLoad</code> is a reserved function name in ASP.NET AJAX that is for this purpose. <code>$(document).ready()</code> on the other hand, is executed only once, when the DOM is initially ready/loaded.</p>\n\n<p>See this <a href=\"http://msdn.microsoft.com/en-us/library/bb386417.aspx\">Overview of  ASP.NET AJAX client lifecycle events</a></p>\n\n<p>And also take a look at Dave Ward's great post - <a href=\"http://encosia.com/2009/03/25/document-ready-and-pageload-are-not-the-same/\">$(document).ready() and pageLoad() are not the same!</a></p>\n",
                    "is_accepted": true,
                    "score": 126
                },
                {
                    "body": "<p>Found an elegant solution here:</p>\n\n<p><a href=\"http://www.codeproject.com/tips/51788/Ajax-Identify-the-control-that-caused-the-Async-Po.aspx\" rel=\"nofollow\">http://www.codeproject.com/tips/51788/Ajax-Identify-the-control-that-caused-the-Async-Po.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The pageLoad didn't work.  I used this instead:</p>\n\n<p><code>var prm = Sys.WebForms.PageRequestManager.getInstance();\nprm.add_pageLoaded(pageLoaded);</p>\n\n<p>function pageLoaded() {\n}\n</code></p>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>I'm using a jQuery tip plugin to show help tips when the user hovers certain elements of the page.</p>\n\n<p>I need to register the plugin events after the page is loaded using css selectors.</p>\n\n<p>The problem is I'm using an ASP.NET Update Panel and after the first postback, the tips stop working because the update panel replaces the page content but doesn't rebind the javascript events.</p>\n\n<p>I need a way to execute a javascript callback after the Update Panel refreshes its content, so I can rebind the javascript events to have the tips working again.</p>\n\n<p>Is there any way to do this?</p>\n",
            "last_activity_date": 1425331309,
            "question_id": 1152946,
            "score": 55,
            "tags": [
                "javascript",
                "asp.net-ajax",
                "updatepanel",
                "callback"
            ],
            "title": "How to have a javascript callback executed after an update panel postback?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You don't extend controllers. If they perform the same basic functions then those functions need to be moved to a service. That service can be injected into your controllers.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You can try something like this (have not tested):</p>\n\n<pre><code>function baseController(callback){\n    return function($scope){\n        $scope.baseMethod = function(){\n            console.log('base method');\n        }\n        callback.apply(this, arguments);\n    }\n}\n\napp.controller('childController', baseController(function(){\n\n}));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>For inheritance you can use standard JavaScript inheritance patterns.\nHere is a demo which uses <code>$injector</code></p>\n\n<pre><code>function Parent($scope) {\n    $scope.name = 'Human';\n    $scope.clickParent = function() {\n        $scope.name = 'Clicked from base controller';\n    }    \n}\n\nfunction Child($scope, $injector) {\n    $injector.invoke(Parent, this, {$scope: $scope});\n    $scope.name = 'Human Child';\n    $scope.clickChild = function(){\n        $scope.clickParent();\n    }       \n}\n\nChild.prototype = Object.create(Parent.prototype);\n</code></pre>\n\n<p>Another way could be to create just \"abstract\" constructor function which will be your base controller:</p>\n\n<pre><code>function BaseController() {\n    this.click = function () {\n        //some actions here\n    };\n}\n\nmodule.controller('ChildCtrl', ['$scope', function ($scope) {\n    BaseController.call($scope);\n    $scope.anotherClick = function () {\n        //other actions\n    };\n}]);\n</code></pre>\n\n<p><a href=\"http://blog.mgechev.com/2013/12/18/inheritance-services-controllers-in-angularjs/\" rel=\"nofollow\"><strong>Blog post on this topic</strong></a></p>\n\n<p><a href=\"http://ng-tutorial.mgechev.com/#?tutorial=controllers-communication&amp;step=invoke-methods\" rel=\"nofollow\"><strong>Tutorial</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>Well, I'm not exactly sure what you want to achieve, but usually Services are the way to go.\nYou can also use the Scope inheritance characteristics of Angular to share code between controllers:</p>\n\n<pre><code>&lt;body ng-controller=\"ParentCtrl\"&gt;\n &lt;div ng-controller=\"FirstChildCtrl\"&gt;&lt;/div&gt;\n &lt;div ng-controller=\"SecondChildCtrl\"&gt;&lt;/div&gt;\n&lt;/body&gt;\n\nfunction ParentCtrl($scope) {\n $scope.fx = function() {\n   alert(\"Hello World\");\n });\n}\n\nfunction FirstChildCtrl($scope) {\n  // $scope.fx() is available here\n}\n\nfunction SecondChildCtrl($scope) {\n  // $scope.fx() is available here\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Perhaps <em>you</em> don't extend a controller but it is possible to extend a controller or make a single controller a mixin of multiple controllers.</p>\n\n<pre><code>module.controller('CtrlImplAdvanced', ['$scope', '$controller', function ($scope, $controller) {\n    // Initialize the super class and extend it.\n    angular.extend(this, $controller('CtrlImpl', {$scope: $scope}));\n    \u2026 Additional extensions to create a mixin.\n}]);\n</code></pre>\n\n<p>When the parent controller is created the logic contained within it is also executed.\nSee $controller() for for more information about it but the second parameter is passing in the constructor arguments needed by the class, in this case being 'CtrlImpl' controller needs $scope</p>\n",
                    "is_accepted": true,
                    "score": 63
                },
                {
                    "body": "<p>You can extend with a <strong>services</strong>, <strong>factories</strong> or <strong>providers</strong>. they are the same but with different degree of flexibility.</p>\n\n<p>here an example using factory : <a href=\"http://jsfiddle.net/aaaflyvw/6KVtj/2/\" rel=\"nofollow\">http://jsfiddle.net/aaaflyvw/6KVtj/2/</a></p>\n\n<pre><code>angular.module('myApp',[])\n\n.factory('myFactory', function() {\n    var myFactory = {\n        save: function () {\n            // saving ...\n        },\n        store: function () {\n            // storing ...\n        }\n    };\n    return myFactory;\n})\n\n.controller('myController', function($scope, myFactory) {\n    $scope.myFactory = myFactory;\n    myFactory.save(); // here you can use the save function\n});\n</code></pre>\n\n<p>And here you can use the store function also:</p>\n\n<pre><code>&lt;div ng-controller=\"myController\"&gt;\n    &lt;input ng-blur=\"myFactory.store()\" /&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Yet another good solution taken from this <a href=\"http://www.jasonwatmore.com/post/2014/03/25/AngularJS-A-better-way-to-implement-a-base-controller.aspx\" rel=\"nofollow\">article</a>:</p>\n\n<pre><code>// base controller containing common functions for add/edit controllers\nmodule.controller('Diary.BaseAddEditController', function ($scope, SomeService) {\n    $scope.diaryEntry = {};\n\n    $scope.saveDiaryEntry = function () {\n        SomeService.SaveDiaryEntry($scope.diaryEntry);\n    };\n\n    // add any other shared functionality here.\n}])\n\nmodule.controller('Diary.AddDiaryController', function ($scope, $controller) {\n    // instantiate base controller\n    $controller('Diary.BaseAddEditController', { $scope: $scope });\n}])\n\nmodule.controller('Diary.EditDiaryController', function ($scope, $routeParams, DiaryService, $controller) {\n    // instantiate base controller\n    $controller('Diary.BaseAddEditController', { $scope: $scope });\n\n    DiaryService.GetDiaryEntry($routeParams.id).success(function (data) {\n        $scope.diaryEntry = data;\n    });\n}]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can create a service and inherit its behaviour in any controller just by injecting it.</p>\n\n<pre><code>app.service(\"reusableCode\", function() {\n\n    var reusableCode = {};\n\n    reusableCode.commonMethod = function() {\n        alert('Hello, World!');\n    };\n\n    return reusableCode;\n});\n</code></pre>\n\n<p>Then in your controller that you want to extend from the above reusableCode service:</p>\n\n<pre><code>app.controller('MainCtrl', function($scope, reusableCode) {\n\n    angular.extend($scope, reusableCode);\n\n    // now you can access all the properties of reusableCode in this $scope\n    $scope.commonMethod()\n\n});\n</code></pre>\n\n<p>DEMO PLUNKER: <a href=\"http://plnkr.co/edit/EQtj6I0X08xprE8D0n5b?p=preview\" rel=\"nofollow\">http://plnkr.co/edit/EQtj6I0X08xprE8D0n5b?p=preview</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use Angular \"as\" syntax combined with plain JavaScript inheritance</p>\n\n<p>See more details here\n<a href=\"http://blogs.microsoft.co.il/oric/2015/01/01/base-controller-angularjs/\" rel=\"nofollow\">http://blogs.microsoft.co.il/oric/2015/01/01/base-controller-angularjs/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What's the recommended way in Angular for extending controllers?\nI have three controllers that have several same functions. I want' to have a controller which these three extend and share its functions.</p>\n",
            "last_activity_date": 1426166458,
            "question_id": 16539999,
            "score": 43,
            "tags": [
                "javascript",
                "angularjs",
                "dry"
            ],
            "title": "Angular: Extending controller"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The beta version of <a href=\"http://www.sencha.com/products/touch/\" rel=\"nofollow\">Sencha Touch</a> has drag and drop support.</p>\n\n<p>You can refer to their <a href=\"http://www.sencha.com/deploy/touch/examples/dragdrop/\" rel=\"nofollow\">DnD Example</a>. This only works on webkit browsers by the way.</p>\n\n<p>Retrofitting that logic into a web page is probably going to be difficult. As I understand it they disable all browser panning and implement panning events entirely in javascript, allowing correct interpretation of drag and drop.</p>\n\n<p><strong>Update:</strong> the original example link is dead, but I found this alternative:<br>\n<a href=\"https://github.com/kostysh/Drag-Drop-example-for-Sencha-Touch\" rel=\"nofollow\">https://github.com/kostysh/Drag-Drop-example-for-Sencha-Touch</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>jQuery UI Touch Punch just solves it all. </p>\n\n<p>It's a Touch Event Support for jQuery UI. Basically, it just wires touch event back to jQuery UI.\nTested on iPad, iPhone, Android and other touch-enabled mobile devices.\nI used jQuery UI sortable and it works like a charm.</p>\n\n<p><a href=\"http://touchpunch.furf.com/\">http://touchpunch.furf.com/</a></p>\n",
                    "is_accepted": true,
                    "score": 48
                },
                {
                    "body": "<p>I needed to create a drag and drop + rotation that works on desktop, mobile, tablet including windows phone. The last one made it more complecated (mspointer vs. touch events).</p>\n\n<p>The solution came from The great Greensock library. <a href=\"http://www.greensock.com/draggable/\" rel=\"nofollow\">http://www.greensock.com/draggable/</a></p>\n\n<p>It took some jumping through hoops to make the same object draggable and rotatable but it works perfectly</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>When you add drag and drop to a web page using JavaScript, such as jQuery UI draggable and droppable, how do you get this to work when viewed via a browser on a mobile device - where the touch-screen actions for dragging are intercepted by the phone for scrolling around the page etc?</p>\n\n<p>All solutions welcome... my initial thoughts are:</p>\n\n<ol>\n<li><p>Have a button for mobile devices that \"lifts\" the item to be dragged and then get them to click the zone they want to drop the item on.</p></li>\n<li><p>Write an app that does this for mobile devices rather then try and get the web page to work on them!</p></li>\n<li><p>Your suggestions and comments please.</p></li>\n</ol>\n\n<p><strong>UPDATE: Bounty</strong></p>\n\n<p>If someone can tell me how to make drag and drop work in a web page on a mobile device, without resorting to points 1 and 2 above, I will swing a wonderful bounty of 50 rep your way!</p>\n",
            "last_activity_date": 1416460588,
            "question_id": 3172100,
            "score": 40,
            "tags": [
                "javascript",
                "html",
                "jquery-ui",
                "mobile-devices"
            ],
            "title": "HTML Drag And Drop On Mobile Devices"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Here is an example using <a href=\"http://jquery.com\">jQuery</a>...</p>\n\n<pre><code> &lt;head&gt;\n   &lt;title&gt;Test&lt;/title&gt;\n   &lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js\"&gt;&lt;/script&gt;\n   &lt;script type=\"text/javascript\" src=\"http://www.json.org/json2.js\"&gt;&lt;/script&gt;\n   &lt;script type=\"text/javascript\"&gt;\n     $(function() {\n       var frm = $(document.myform);\n       var dat = JSON.stringify(frm.serializeArray());\n\n       alert(\"I am about to POST this:\\n\\n\" + dat);\n\n       $.post(\n         frm.attr(\"action\"),\n         dat,\n         function(data) {\n           alert(\"Response: \" + data);\n         }\n       );\n     });\n   &lt;/script&gt;\n&lt;/head&gt;\n</code></pre>\n\n<p>The jQuery <a href=\"http://docs.jquery.com/Ajax/serializeArray\">serializeArray</a> function creates a Javascript object with the form values.  Then you can use <a href=\"http://www.json.org/js.html\">JSON.stringify</a> to convert that into a string, if needed.  And you can remove your body onload, too.</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>Not sure if you want jQuery.</p>\n\n<pre><code>var form;\n\nform.onsubmit = function (e) {\n  // stop the regular form submission\n  e.preventDefault();\n\n  // collect the form data while iterating over the inputs\n  var data = {};\n  for (var i = 0, ii = form.length; i &lt; ii; ++i) {\n    var input = form[i];\n    if (input.name) {\n      data[input.name] = input.value;\n    }\n  }\n\n  // construct an HTTP request\n  var xhr = new XMLHttpRequest();\n  xhr.open(form.method, form.action, true);\n  xhr.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n\n  // send the collected data as JSON\n  xhr.send(JSON.stringify(data));\n\n  xhr.onloadend = function () {\n    // done\n  };\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 47
                },
                {
                    "body": "<p>Going forward browsers should be able to do natively.</p>\n\n<p>Keep an eye here:\n<a href=\"http://www.w3.org/TR/html-json-forms/\" rel=\"nofollow\">http://www.w3.org/TR/html-json-forms/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have some data that I need converted to JSON format and then POSTed with a Javascript function.</p>\n\n<pre><code>&lt;body onload=\"javascript:document.myform.submit()\"&gt;\n&lt;form action=\"https://www.test.net/Services/RegistrationService.svc/InviteNewContact\" method=\"post\" name=\"myform\"&gt;\n&lt;input name=\"firstName\" value=\"harry\" /&gt;\n&lt;input name=\"lastName\" value=\"tester\" /&gt;\n&lt;input name=\"toEmail\" value=\"testtest@test.com\" /&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>This is the way the post looks now. I need it submit the values in JSON format and do the POST with javascript. Hope this makes sense.</p>\n",
            "last_activity_date": 1421943097,
            "question_id": 1255948,
            "score": 38,
            "tags": [
                "javascript",
                "json",
                "post"
            ],
            "title": "POST data in JSON format with JAVASCRIPT"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Using a text area field, you could use this: (Via Google)</p>\n\n<pre><code>&lt;form name=\"select_all\"&gt;\n\n    &lt;textarea name=\"text_area\" rows=\"10\" cols=\"80\" \n    onClick=\"javascript:this.form.text_area.focus();this.form.text_area.select();\"&gt;\n\n    Text Goes Here \n\n    &lt;/textarea&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>This is how I see most websites do it. They just style it with CSS so it doesn't look like a textarea.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><a href=\"http://www.hscripts.com/scripts/JavaScript/select-div-tag.php\" rel=\"nofollow\">This snippet provides the functionality you require</a>. What you need to do is add an event to that div that which activates fnSelect in it. A quick hack that you totally shouldn't do and possibly might not work, would look like this:</p>\n\n<pre><code>document.getElementById(\"selectable\").onclick(function(){\n    fnSelect(\"selectable\");\n});\n</code></pre>\n\n<p>Obviously assuming that the linked to snippet had been included.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>&lt;script type=\"text/javascript\"&gt;\n    function selectText(containerid) {\n        if (document.selection) {\n            var range = document.body.createTextRange();\n            range.moveToElementText(document.getElementById(containerid));\n            range.select();\n        } else if (window.getSelection) {\n            var range = document.createRange();\n            range.selectNode(document.getElementById(containerid));\n            window.getSelection().addRange(range);\n        }\n    }\n&lt;/script&gt;\n\n&lt;div id=\"selectable\" onclick=\"selectText('selectable')\"&gt;http://example.com/page.htm&lt;/div&gt;\n</code></pre>\n\n<p>Now you have to pass the ID as an argument, which in this case is \"selectable\", but it's more global, allowing you to use it anywhere multiple times without using, as chiborg mentioned, jQuery.</p>\n",
                    "is_accepted": true,
                    "score": 74
                },
                {
                    "body": "<p>The answer of Neuroxik was really helpful. I had only a trouble with Chrome, because when I clicked on an external div, It did not work. I could solve it removing the old ranges before add the new range:</p>\n\n<pre><code>function selectText(containerid) {\n    if (document.selection) {\n        var range = document.body.createTextRange();\n        range.moveToElementText(document.getElementById(containerid));\n        range.select();\n    } else if (window.getSelection()) {\n        var range = document.createRange();\n        range.selectNode(document.getElementById(containerid));\n        window.getSelection().removeAllRanges();\n        window.getSelection().addRange(range);\n    }\n}\n&lt;div id=\"selectable\" onclick=\"selectText('selectable')\"&gt;http://example.com/page.htm&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I found it useful to wrap this function as a jQuery plugin:</p>\n\n<pre><code>$.fn.selectText = function () {\n    return $(this).each(function (index, el) {\n        if (document.selection) {\n            var range = document.body.createTextRange();\n            range.moveToElementText(el);\n            range.select();\n        } else if (window.getSelection) {\n            var range = document.createRange();\n            range.selectNode(el);\n            window.getSelection().addRange(range);\n        }\n    });\n}\n</code></pre>\n\n<p>So, it becomes a reusable solution. Then you can do this:</p>\n\n<pre><code>&lt;div onclick=\"$(this).selectText()\"&gt;http://example.com/page.htm&lt;/div&gt;\n</code></pre>\n\n<p>And it will selected test in the div.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>All of the examples above use:</p>\n\n<pre><code>    var range = document.createRange();\n    range.selectNode( ... );\n</code></pre>\n\n<p>but the problem with that is that it selects the Node itself including the DIV tag etc.</p>\n\n<p>To select the Node's text as per the OP question you need to call instead:</p>\n\n<pre><code>    range.selectNodeContents( ... )\n</code></pre>\n\n<p>So the full snippet would be:</p>\n\n<pre><code>    function selectText( containerid ) {\n\n        var node = document.getElementById( containerid );\n\n        if ( document.selection ) {\n            var range = document.body.createTextRange();\n            range.moveToElementText( node  );\n            range.select();\n        } else if ( window.getSelection ) {\n            var range = document.createRange();\n            range.selectNodeContents( node );\n            window.getSelection().removeAllRanges();\n            window.getSelection().addRange( range );\n        }\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<pre><code>$.fn.selectText = function () {\n    return $(this).each(function (index, el) {\n        if (document.selection) {\n            var range = document.body.createTextRange();\n            range.moveToElementText(el);\n            range.select();\n        } else if (window.getSelection) {\n            var range = document.createRange();\n            range.selectNode(el);\n            window.getSelection().addRange(range);\n        }\n    });\n}\n</code></pre>\n\n<p>Above answer is not working in Chrome because addRange remove previous added range. I didnt find any solution for this beside fake selection with css.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>How about this simple solution? :)</p>\n\n<pre><code>&lt;input style=\"background-color:white; border:1px white solid;\" onclick=\"this.select();\" id=\"selectable\" value=\"http://example.com/page.htm\"&gt;\n</code></pre>\n\n<p>Sure it is not div-construction, like you mentioned, but still it is worked for me.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How to highlight/select the contents of a DIV tag when the user clicks on the DIV...the idea is that all of the text is highlighted/selected so the user doesn't need to manually highlight the text with the mouse and potentially miss a bit of the text?</p>\n\n<p>For example, say we've got a DIV as below:</p>\n\n<pre><code>&lt;div id=\"selectable\"&gt;http://example.com/page.htm&lt;/div&gt;\n</code></pre>\n\n<p>...and when the user clicks on any of that URL the whole URL text is highlighted so they can easily drag the selected text around in the browser, or copy the complete URL with a right click.</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1418334701,
            "question_id": 1173194,
            "score": 38,
            "tags": [
                "javascript"
            ],
            "title": "Select all DIV text with single mouse click"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The difference is when you derive a class from Message Class. Only the methods declared on the prototype will be available on child classes of Message.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If you bind methods by prototype JS only has to do it once and binds to an object class (which makes it elligible for OO JS extensions). </p>\n\n<p>If you do the binding within the \"class\" function, JS has to do the work of creating and assigning for each and every instance.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>foxxtrot and annakata are both correct, but I'll throw in my 2 cents.</p>\n\n<p>If you use the prototype then each instance of the \"MessageClass\" is really referencing the same functions.  The functions exist in memory only once and are used for all instances.  If you declare the methods in the constructor (or otherwise add it to a specific instance) rather than the prototype then a new function is created for each instance of MessageClass.</p>\n\n<p>That being said, there is probably not any noticeable performance difference for most cases and it is unlikely that you will see a memory usage difference either.  I would go with the prototype method unless you have a compelling reason to do otherwise.  The only reason I can thing that you might want to declare a method in the constructor is if you need a closure.  For example, if you have event handlers or you wanted to simulate private properties with getters/setters you might do:</p>\n\n<pre><code>function MessageClass() {\n    var self = this;\n    this.clickHander = function(e) { self.someoneClickedMe = true; };\n\n    var _private = 0;\n    this.getPrivate = function() { return _private; };\n    this.setPrivate = function(val) { _private = val; };\n}\n</code></pre>\n\n<p><strong>EDIT:</strong> Because there has been discussion about how this effects objects extended by another object with functions assigned in the constructor I'm adding a bit more detail. I might use the term \"class\" to simplify the discussion, but it is important to note that js does not support classes (that doesn't mean we can't do good OO development) or we would not be discussing this issue.</p>\n\n<p>Most javascript libraries call the constructor on the base class and the sub class. (e.g. Prototype.js's Object.extend) This means that methods assigned in the constructor of each will be available on the resulting objects.  However, if you are extending objects yourself there can be unexpected consequences.</p>\n\n<p>If I take the MessageClass above and extend it:</p>\n\n<pre><code>function ErrorMessageClass() {}\nErrorMessageClass.prototype = new MessageClass();\n\nerrorMsg = new ErrorMessageClass();\n</code></pre>\n\n<p>Then errorMsg will have a getPrivate and setPrivate method on it, but they may not behave as you would expect.  Because those functions were scoped when they were assigned (i.e. at \"ErrorMessageClass.prototype = new MessageClass()\" not only are the get/setPrivate methods shared, the _private variable gets shared across all instances of ErrorMessageClass as well.  This essentially makes _private a static property for ErrorMessageClass.  For example:</p>\n\n<pre><code>var errorA = new ErrorMessageClass();\nvar errorB = new ErrorMessageClass();\nerrorA.setPrivate('A');\nconsole.log(errorA.getPrivate()); // prints 'A'\nconsole.log(errorB.getPrivate()); // prints 'A'\nerrorB.setPrivate('B');\nconsole.log(errorA.getPrivate()); // prints 'B'\n</code></pre>\n\n<p>Likewise with the clickHandler function and someoneClickedMe property:</p>\n\n<pre><code>errorA.clickHandler();\nconsole.log(errorA.someoneClickedMe); // prints 'true'\nconsole.log(errorB.someoneClickedMe); // prints 'true'\n</code></pre>\n\n<p>However, change those function definitions to use this._private:</p>\n\n<pre><code>this.getPrivate = function() { return this._private; };\nthis.setPrivate = function(val) { this._private = val; };\n</code></pre>\n\n<p>and behavior of instances of ErrorMessageClass becomes more of what you would expect:</p>\n\n<pre><code>errorA.setPrivate('A');\nerrorB.setPrivate('B');\nconsole.log(errorA.getPrivate()); // prints 'A'\nconsole.log(errorB.getPrivate()); // prints 'B'\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 26
                }
            ],
            "body": "<p>Could you explain the difference between setting methods in the constructor and through prototype object? The following code shows these two ways of setting the methods - <code>say_hello</code> and <code>say_bye</code> both work fine:</p>\n\n<pre><code>function MessageClass() {\n  this.say_bye = function() { alert('see ya'); };\n}\n\nMessageClass.prototype.say_hello = function() { alert('hello'); };\n\nx = new MessageClass();\nx.say_hello();\nx.say_bye();\n</code></pre>\n",
            "last_activity_date": 1325389573,
            "question_id": 422476,
            "score": 14,
            "tags": [
                "javascript",
                "constructor",
                "prototype"
            ],
            "title": "Setting methods through prototype object or in constructor, difference?"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>If by \"empty\", you mean with no HTML content,</p>\n\n<pre><code>if($('#element').html() == \"\") {\n  //call function\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>if($(\"#element\").html() === \"\")\n{\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Empty as in contains no text?</p>\n\n<pre><code>if (!$('#element').text().length) {\n    ...\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can try:</p>\n\n<pre><code>if($('selector').html().toString().replace(/ /g,'') == \"\") {\n//code here\n}\n</code></pre>\n\n<p>*Replace white spaces, just incase ;)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>jQuery.fn.doSomething = function() {\n   //return something with 'this'\n};\n\n$('selector:empty').doSomething();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<pre><code>if ($('#element').is(':empty')){\n  //do something\n}\n</code></pre>\n\n<p>for more info see <a href=\"http://api.jquery.com/is/\">http://api.jquery.com/is/</a> and <a href=\"http://api.jquery.com/empty-selector/\">http://api.jquery.com/empty-selector/</a></p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>As some have pointed, the browser interpretation of an empty element can vary. If you would like to ignore invisible elements such as spaces and line breaks and make the implementation more consistent you can create a function (or just use the code inside of it).</p>\n\n<pre><code>  function isEmpty( el ){\n      return !$.trim(el.html())\n  }\n  if (isEmpty($('#element'))) {\n      // do something\n  }\n</code></pre>\n\n<p>You can also make it into a jQuery plugin, but you get the idea.</p>\n",
                    "is_accepted": true,
                    "score": 201
                },
                {
                    "body": "<p>Line breaks are considered as content to elements in FF.</p>\n\n<pre><code>&lt;div&gt;\n&lt;/div&gt;\n&lt;div&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Ex:</p>\n\n<pre><code>$(\"div:empty\").text(\"Empty\").css('background', '#ff0000');\n</code></pre>\n\n<p>In IE both divs are considered empty, in FF an Chrome only the last one is empty.</p>\n\n<p>You can use the solution provided by @qwertymk</p>\n\n<pre><code>if(!/[\\S]/.test($('#element').html())) { // for one element\n    alert('empty');\n}\n</code></pre>\n\n<p>or</p>\n\n<pre><code>$('.elements').each(function(){  // for many elements\n    if(!/[\\S]/.test($(this).html())) { \n        // is empty\n    }\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I found this to be the only reliable way (since Chrome &amp; FF consider whitespaces and linebreaks as elements):</p>\n\n<pre><code>if($.trim($(\"selector\").html())=='')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<pre><code>!elt.hasChildNodes()\n</code></pre>\n\n<p>Yes, I know, this is not jQuery, so you could use this:</p>\n\n<pre><code>!$(elt)[0].hasChildNodes()\n</code></pre>\n\n<p>Happy now?</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>White space and line breaks are the main issues with using :empty selector. Careful, in CSS the :empty pseudo class behaves the same way. I like this method:</p>\n\n<pre><code>if ($someElement.children().length == 0){\n     someAction();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>document.getElementById(\"id\").innerHTML == \"\" || null\n</code></pre>\n\n<p>or</p>\n\n<pre><code>$(\"element\")[0].innerHTML == \"\" || null\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Are you looking for <code>jQuery.isEmptyObject()</code> ?</p>\n\n<p><a href=\"http://api.jquery.com/jquery.isemptyobject/\" rel=\"nofollow\">http://api.jquery.com/jquery.isemptyobject/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here's a jQuery filter based on <a href=\"http://stackoverflow.com/a/6813294/698289\">http://stackoverflow.com/a/6813294/698289</a></p>\n\n<pre><code>$.extend($.expr[':'], {\n  trimmedEmpty: function(el) {\n    return !$.trim($(el).html());\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to call a function only if an HTML element is empty, using jQuery.</p>\n\n<p>Something like this:</p>\n\n<pre><code>if (isEmpty($('#element'))) {\n    // do something\n}\n</code></pre>\n",
            "last_activity_date": 1415279533,
            "question_id": 6813227,
            "score": 114,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How do I check if an HTML element is empty using jQuery?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>Should I use JSTL ? </p>\n</blockquote>\n\n<p>Yes</p>\n\n<p>you can use <code>&lt;c:if&gt;</code> , <code>&lt;c:choose&gt;</code> tags to make conditional rendering in jsp using JSTL</p>\n\n<p>to simulate if , you can use</p>\n\n<pre><code>&lt;c:if test=\"condition\"&gt;&lt;/c:if&gt;\n</code></pre>\n\n<p>to simulate if..else, you can use</p>\n\n<pre><code>&lt;c:choose&gt;\n      &lt;c:when test=\"${param.enter=='1'}\"&gt;pizza.\n      &lt;br /&gt;\n      &lt;/c:when&gt;\n\n      &lt;c:otherwise&gt;pizzas.\n      &lt;br /&gt;\n      &lt;/c:otherwise&gt;\n&lt;/c:choose&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 210
                },
                {
                    "body": "<p>The construct for this is:</p>\n\n<pre><code>&lt;c:choose&gt;\n   &lt;c:when test=\"${..}\"&gt;...&lt;/c:when&gt; &lt;!-- if condition --&gt;\n   &lt;c:when test=\"${..}\"&gt;...&lt;/c:when&gt; &lt;!-- else if condition --&gt;\n   &lt;c:otherwise&gt;...&lt;/c:otherwise&gt;    &lt;!-- else condition --&gt;\n&lt;/c:choose&gt;\n</code></pre>\n\n<p>If the condition isn't expensive, I sometimes prefer to simply use two distinct <code>&lt;c:if</code> tags - it makes it easier to read.</p>\n",
                    "is_accepted": false,
                    "score": 52
                },
                {
                    "body": "<p>If you just want to output different text, a more concise example would be </p>\n\n<pre><code>${condition ? \"some text when true\" : \"some text when false\"}\n</code></pre>\n\n<p>It is way shorter than <em>c:choose</em>.</p>\n",
                    "is_accepted": false,
                    "score": 87
                },
                {
                    "body": "<p>In case you want to <strong>compare strings</strong>, write the following JSTL:</p>\n\n<pre><code>&lt;c:choose&gt;\n    &lt;c:when test=\"${myvar.equals('foo')}\"&gt;\n        ...\n    &lt;/c:when&gt;\n    &lt;c:when test=\"${myvar.equals('bar')}\"&gt;\n        ...\n    &lt;/c:when&gt;\n    &lt;c:otherwise&gt;\n        ...\n    &lt;/c:otherwise&gt;\n&lt;/c:choose&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>&lt;%@ taglib prefix='c' uri='http://java.sun.com/jsp/jstl/core' %&gt;\n&lt;c:set var=\"val\" value=\"5\"/&gt;\n&lt;c:choose&gt; \n  &lt;c:when test=\"${val == '5'}\"&gt;\n    Value is 5\n  &lt;/c:when&gt;\n  &lt;c:otherwise&gt;\n    Value is not 5\n  &lt;/c:otherwise&gt;\n&lt;/c:choose&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>        &lt;%@ taglib prefix='c' uri='http://java.sun.com/jsp/jstl/core' %&gt;\n        &lt;c:set var=\"isiPad\" value=\"value\"/&gt;\n        &lt;c:choose&gt;\n           &lt;!-- if condition --&gt;\n           &lt;c:when test=\"${...}\"&gt;Html Code&lt;/c:when&gt; \n           &lt;!-- else condition --&gt;\n           &lt;c:otherwise&gt;Html code&lt;/c:otherwise&gt;   \n        &lt;/c:choose&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a kind of open-ended question..</p>\n\n<p>I want to have a HTML code based on condition (desktop/ipad)..say Condition 1/Condition 2</p>\n\n<p>I want to have separate HTML snippets for each of these conditions...</p>\n\n<pre><code>if (Condition 1)\nSome HTML code for con1\nelse if (Condition 2)\nSome HTML code for con2\n</code></pre>\n\n<p>The condition I want to test (in JS) is;</p>\n\n<pre><code>var isiPad = navigator.userAgent.match(/iPad/i) != null;\nif (isiPad)\n{}\nelse\n{}\n</code></pre>\n\n<p>Now this has to be implemented in a .jsp page...</p>\n\n<p>So how do I do that? Should I use JSTL ? \nWhat is the best way?</p>\n\n<p>The main thing is that only corresponding code should actually be loaded/rendered \ne.g. if condition 1 is true, the HTML code in condition 2 should not be executed at all (apart from being hidden in the browser)</p>\n",
            "last_activity_date": 1423294213,
            "question_id": 5935892,
            "score": 98,
            "tags": [
                "java",
                "javascript",
                "html",
                "jsp",
                "jstl"
            ],
            "title": "if...else within JSP or JSTL"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can just call a method on your scope to reverse it for you, like this:</p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;html ng-app=\"myApp\"&gt;\n&lt;head&gt;\n    &lt;script src=\"http://code.jquery.com/jquery-1.9.1.min.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"http://code.angularjs.org/1.0.5/angular.min.js\"&gt;&lt;/script&gt;\n    &lt;script&gt;\n    angular.module('myApp', []).controller('Ctrl', function($scope) {\n        $scope.items = [1, 2, 3, 4];\n        $scope.reverse = function(array) {\n            var copy = [].concat(array);\n            return copy.reverse();\n        }\n    });\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body ng-controller=\"Ctrl\"&gt;\n    &lt;ul&gt;\n        &lt;li ng-repeat=\"item in items\"&gt;{{item}}&lt;/li&gt;\n    &lt;/ul&gt;\n    &lt;ul&gt;\n        &lt;li ng-repeat=\"item in reverse(items)\"&gt;{{item}}&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Note that the <code>$scope.reverse</code> creates a copy of the array since <code>Array.prototype.reverse</code> modifies the original array.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I would suggest using a custom filter such as this:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>(function () {\n    'use strict';\n\n    angular.module('app').filter('reverse', function () {\n        return function (items) {\n            if (!angular.isArray(items)) {\n                return false;\n            }\n\n            return items.slice().reverse();\n        };\n    });\n}());\n</code></pre>\n\n<p>Which can then be used like:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;div ng-repeat=\"friend in friends | reverse\"&gt;{{friend.name}}&lt;/div&gt;\n</code></pre>\n\n<p>See it working here: <a href=\"http://plnkr.co/edit/REU7mTsfG5HISCnLKEr8?p=preview\" rel=\"nofollow\">Plunker Demonstration</a></p>\n\n<hr>\n\n<p>This filter can be customized to fit your needs as seen fit. I have provided other examples in the demonstration. Some options include checking that the variable is an array before performing the reverse, or making it more lenient to allow the reversal of more things such as strings.</p>\n",
                    "is_accepted": true,
                    "score": 123
                },
                {
                    "body": "<p>You can reverse by the $index parameter</p>\n\n<pre><code>&lt;tr ng-repeat=\"friend in friends | orderBy:'$index':true\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>This is what i used:</p>\n\n<pre><code>&lt;alert ng-repeat=\"alert in alerts.slice().reverse()\" type=\"alert.type\" close=\"alerts.splice(index, 1)\"&gt;{{$index + 1}}: {{alert.msg}}&lt;/alert&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 51
                },
                {
                    "body": "<p>Sorry for bringing this up after a year, but there is an easier solution, mentioned in the <a href=\"https://docs.angularjs.org/api/ng/filter/orderBy\" rel=\"nofollow\">docs</a>: </p>\n\n<p>\"If no property is provided, (e.g. '+') then the array element itself is used to compare where sorting\". So, the solution will be:</p>\n\n<p><code>ng-repeat=\"friend in friends | orderBy:'+':true\"</code></p>\n\n<p>Note that this works <strong>only in Angular v1.3.0-rc.5 and later</strong>.</p>\n\n<p>This solution does not modify array and does not require additional computational resources (at least in our code). I've read all existing answers and still prefer this one to them.</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>How can i get a reversed array in angular?\ni'm trying to use orderBy filter, but it needs a predicate(e.g. 'name') to sort:</p>\n\n<pre><code>&lt;tr ng-repeat=\"friend in friends | orderBy:'name':true\"&gt;\n      &lt;td&gt;{{friend.name}}&lt;/td&gt;\n      &lt;td&gt;{{friend.phone}}&lt;/td&gt;\n      &lt;td&gt;{{friend.age}}&lt;/td&gt;\n&lt;tr&gt;\n</code></pre>\n\n<p>Is there a way to reverse original array, without sorting.\nlike that:</p>\n\n<pre><code>&lt;tr ng-repeat=\"friend in friends | orderBy:'':true\"&gt;\n      &lt;td&gt;{{friend.name}}&lt;/td&gt;\n      &lt;td&gt;{{friend.phone}}&lt;/td&gt;\n      &lt;td&gt;{{friend.age}}&lt;/td&gt;\n&lt;tr&gt;\n</code></pre>\n",
            "last_activity_date": 1426109811,
            "question_id": 15266671,
            "score": 61,
            "tags": [
                "javascript",
                "arrays",
                "angularjs",
                "reverse",
                "angularjs-ng-repeat"
            ],
            "title": "angular ng-repeat in reverse"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Check out the JavaScript <a href=\"https://developer.mozilla.org/en/DOM/window.onbeforeunload\">onbeforeunload event</a>.  It's non-standard JavaScript introduced by Microsoft, however it works in most browsers and <a href=\"http://msdn.microsoft.com/en-us/library/ms536907%28VS.85%29.aspx\">their onbeforeunload documentation</a> has more information and examples.</p>\n",
                    "is_accepted": false,
                    "score": 57
                },
                {
                    "body": "<p>You can do this by <a href=\"https://developer.mozilla.org/en-US/docs/Web/Events/beforeunload\">handling the <code>beforeunload</code> event and returning a non-null string</a>:</p>\n\n<pre><code>window.addEventListener(\"beforeunload\", function (e) {\n    var confirmationMessage = 'It looks like you have been editing something.';\n    confirmationMessage += 'If you leave before saving, your changes will be lost.';\n\n    (e || window.event).returnValue = confirmationMessage; //Gecko + IE\n    return confirmationMessage; //Gecko + Webkit, Safari, Chrome etc.\n});\n</code></pre>\n\n<p>The problem with this approach is that <strong>submitting a form is also firing the unload event</strong>. This is fixed easily by adding the a flag that you're submitting a form:</p>\n\n<pre><code>var formSubmitting = false;\nvar setFormSubmitting = function() { formSubmitting = true; };\n\nwindow.onload = function() {\n    window.addEventListener(\"beforeunload\", function (e) {\n        var confirmationMessage = 'It looks like you have been editing something. ';\n        confirmationMessage += 'If you leave before saving, your changes will be lost.';\n\n        if (formSubmitting) {\n            return undefined;\n        }\n\n        (e || window.event).returnValue = confirmationMessage; //Gecko + IE\n        return confirmationMessage; //Gecko + Webkit, Safari, Chrome etc.\n    });\n};\n</code></pre>\n\n<p>Then calling the setter when submitting:</p>\n\n<pre><code>&lt;form method=\"post\" onsubmit=\"setFormSubmitting()\"&gt;     \n    &lt;input type=\"submit\" /&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>You also don't want to show this message when the user hasn't changed anything on your forms. One solution is to use the <code>beforeunload</code> event in combination with a \"dirty\" flag, which only triggers the prompt if it's really relevant.</p>\n\n<h1>Dirty forms</h1>\n\n<pre><code>var isDirty = function() { return false; }\n\nwindow.onload = function() {\n    window.addEventListener(\"beforeunload\", function (e) {\n        var confirmationMessage = 'It looks like you have been editing something. ';\n        confirmationMessage += 'If you leave before saving, your changes will be lost.';\n\n        if (formSubmitting || !isDirty()) {\n            return undefined;\n        }\n\n        (e || window.event).returnValue = confirmationMessage; //Gecko + IE\n        return confirmationMessage; //Gecko + Webkit, Safari, Chrome etc.\n    });\n};\n</code></pre>\n\n<p>Now to implement the <code>isDirty</code> method, there are various approaches. You can use jQuery and form serialization as <a href=\"http://stackoverflow.com/a/21061193/266143\">suggested by @Wasim</a>, but this approach has a few issues. First you have to alter the code to work on any form (<code>$(\"form\").each()</code> will do), but the greatest problem is that jQuery's <code>serialize()</code> will only work on named, non-disabled elements, so changing any disabled or unnamed element will not trigger the dirty flag. <a href=\"http://stackoverflow.com/questions/4748655/how-to-make-serialize-take-into-account-those-disabled-input-elements/4748748#4748748\">There are workarounds for that</a>.</p>\n\n<p>You can also try <a href=\"http://stackoverflow.com/a/20351967/266143\">@Jonathan's suggestion</a>, which listens for keypresses. This won't work for checkboxes, radio buttons, or other elements altered through mouse input (e.g. date pickers), nor for cutting or pasting text through context menus. Instead you can use <a href=\"http://stackoverflow.com/questions/1481152/how-to-detect-a-textboxs-content-has-changed\">jQuery's to bind the <code>input</code> event to all inputs (and textareas)</a> on your page to accomplish that. </p>\n\n<p>But before you think about implementing those solutions and following the workarounds, realize you're reinventing the wheel and you're prone to running into problems others have already solved for you. </p>\n\n<p>If your application already uses jQuery, you may as well use tested, maintained code instead of rolling your own, and use a third-part library for all of this. <a href=\"http://plugins.jquery.com/are-you-sure/\">jQuery's Are You Sure? plugin</a> works great, see their <a href=\"http://www.papercut.com/products/free_software/are-you-sure/demo/are-you-sure-demo.html\">demo page</a>.</p>\n",
                    "is_accepted": true,
                    "score": 97
                },
                {
                    "body": "<p>First of all, most browsers has this function by default.\nAnd why do you need this at all? Why not to keep the form synced? I mean, save it on any change without waiting any submitting from user. Like Google Contacts do. Of course if only all fields in form are mandatory. Users do not like when them force to fill something up without the opportunity to go away to think if they need it. :)</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Based on the previous answers, and cobbled together from various places in stack overflow, here is the solution I came up with which handles the case when you actually want to submit your changes:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>window.thisPage = window.thisPage || {};\nwindow.thisPage.isDirty = false;\n\nwindow.thisPage.closeEditorWarning = function (event) {\n    if (window.thisPage.isDirty)\n        return 'It looks like you have been editing something' +\n               ' - if you leave before saving, then your changes will be lost.'\n    else\n        return undefined;\n};\n\n$(\"form\").on('keyup', 'textarea', // You can use input[type=text] here as well.\n             function () { \n                 window.thisPage.isDirty = true; \n             });\n\n$(\"form\").submit(function () {\n    QC.thisPage.isDirty = false;\n});\nwindow.onbeforeunload = window.thisPage.closeEditorWarning;\n</code></pre>\n\n<p>It's worth noting that IE11 seems to require that the <code>closeEditorWarning</code> function returns <code>undefined</code> for it not to show an alert.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>via jquery</p>\n\n<pre><code>$('#form').data('serialize',$('#form').serialize());\n  // On load save form current state\n\n$(window).bind('beforeunload', function(e){\n    if($('#form').serialize()!=$('#form').data('serialize'))return true;\n    else e=null;\n    // i.e; if form state change show warning box, else don't show it.\n});\n</code></pre>\n\n<p>You can Google JQuery Form Serialize function, this will collect all form inputs and save it in array.  I guess this explain is enough :)</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<pre><code>      var unsaved = false;\n    $(\":input\").change(function () {         \n        unsaved = true;\n    });\n\n    function unloadPage() {         \n        if (unsaved) {             \n          alert(\"You have unsaved changes on this page. Do you want to leave this page and discard your changes or stay on this page?\");\n        }\n    } \n</code></pre>\n\n<p>window.onbeforeunload = unloadPage;</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have some pages with forms in my application. </p>\n\n<p>How can I secure the form in such a way that if someone navigates away or closes the browser tab, they should be prompted to to confirm they really want to leave the form with unsaved data?</p>\n",
            "last_activity_date": 1420750577,
            "question_id": 7317273,
            "score": 54,
            "tags": [
                "javascript",
                "forms"
            ],
            "title": "Warn user before leaving web page with unsaved changes"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><strike>you can use <a href=\"http://plugins.jquery.com/project/dimensions\">Dimensions</a> plugin</strike> [Deprecated... included in jQuery 1.3.2+]</p>\n\n<blockquote>\n  <p><strong>offset()</strong><br>\n  Get the current offset of the first matched element, in pixels, relative to the <strong>document</strong>.</p>\n  \n  <p><strong>position()</strong><br>Gets the top and left position of an element relative to its <strong>offset parent</strong>.</p>\n</blockquote>\n\n<p>knowing this, then it's easy... (using my little <a href=\"http://stackoverflow.com/questions/536676\">svg project</a> as an <a href=\"http://www.balexandre.com/jQuery/draganddrop/testing%5FDragAndDrop.htm\">example page</a>)</p>\n\n<pre><code>var x = $(\"#wrapper2\").offset().left;\nvar y = $(\"#wrapper2\").offset().top;\n\nconsole.log('x: ' + x + ' y: ' + y);\n</code></pre>\n\n<p>output:</p>\n\n<pre><code>x: 53 y: 177\n</code></pre>\n\n<p>hope it helps what you're looking for.</p>\n\n<p><strong>here's an image of offset() and position()</strong></p>\n\n<p>using <a href=\"https://addons.mozilla.org/en-US/firefox/addon/1802\">XRay</a></p>\n\n<p><img src=\"http://www.balexandre.com/temp/2009-06-16%5F2017%5FStackOverflow%5F1002934.png\" alt=\"alt text\" /></p>\n\n<p>using <a href=\"https://addons.mozilla.org/en-US/firefox/addon/60\">Web Developer</a> toolbar</p>\n\n<p><img src=\"http://www.balexandre.com/temp/2009-06-16%5F2023%5FStackOverflow%5F1002934%5F2.png\" alt=\"alt text\" /></p>\n",
                    "is_accepted": true,
                    "score": 86
                },
                {
                    "body": "<p>The <a href=\"http://docs.jquery.com/CSS/offset\" rel=\"nofollow\">offset</a> function will do that for you.</p>\n\n<p>Here is the example they give:</p>\n\n<pre><code>var p = $(\"p:last\");\nvar offset = p.offset();\np.html( \"left: \" + offset.left + \", top: \" + offset.top );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>My solution is a plugin with \"workarounds\" :+D .\nBut Works!</p>\n\n<pre><code>jQuery.fn.getPos = function(){\n        var o = this[0];\n        var left = 0, top = 0, parentNode = null, offsetParent = null;\n        offsetParent = o.offsetParent;\n        var original = o;\n        var el = o;\n        while (el.parentNode != null) {\n            el = el.parentNode;\n            if (el.offsetParent != null) {\n                var considerScroll = true;\n                if (window.opera) {\n                    if (el == original.parentNode || el.nodeName == \"TR\") {\n                        considerScroll = false;\n                    }\n                }\n                if (considerScroll) {\n                    if (el.scrollTop &amp;&amp; el.scrollTop &gt; 0) {\n                        top -= el.scrollTop;\n                    }\n                    if (el.scrollLeft &amp;&amp; el.scrollLeft &gt; 0) {\n                        left -= el.scrollLeft;\n                    }\n                }\n            }            \n            if (el == offsetParent) {\n                left += o.offsetLeft;\n                if (el.clientLeft &amp;&amp; el.nodeName != \"TABLE\") {\n                    left += el.clientLeft;\n                }\n                top += o.offsetTop;\n                if (el.clientTop &amp;&amp; el.nodeName != \"TABLE\") {\n                    top += el.clientTop;\n                }\n                o = el;\n                if (o.offsetParent == null) {\n                    if (o.offsetLeft) {\n                        left += o.offsetLeft;\n                    }\n                    if (o.offsetTop) {\n                        top += o.offsetTop;\n                    }\n                }\n                offsetParent = o.offsetParent;\n            }\n        }\n        return {\n            left: left,\n            top: top\n        };\n    };\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>var p = $(\"#wrapper2\").getPos();\nalert(\"top:\"+p.top+\"; left:\"+p.left);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I need to get the X,Y coordinates (relative to the document's top/left) for a DOM element.  I can't locate any plugins or jQuery property or method that can give these to me.  I can get the top and left of the DOM element, but that can be either relative to its current container/parent or to document. </p>\n",
            "last_activity_date": 1264397748,
            "question_id": 1002934,
            "score": 48,
            "tags": [
                "javascript",
                "jquery",
                "user-interface",
                "location"
            ],
            "title": "jQuery x y document coordinates of DOM object"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Who cares if modern browsers allow the attacks you mentioned. It is just as easy to make sure that the attacks don't happen by making sure your server side JSON services only respond to POST requests when returning any sensitive data. Just because \"Modern\" browsers don't allow the attack, doesn't stop the one poor sole still using IE5.5 from visiting your site and getting bit by a vulnerability. And, as in all security, your security is only as strong as the weakest link in the chain.</p>\n\n<p>Say that one IE5.5 user's login credentials are disclosed this way. Then that user's account is used to get information from other users, or used to commit a privilege escalation attack, or any number of things because the attacker is now inside and trusted. This is the absolute worst case scenario.</p>\n\n<p>The attack described in the OP's linked articles specifically refers to an attack site inducing your users to load their page and using the  tag to load your JSON resource with that user's stored credentials. This generates a GET request and so, the articles advise not to respond except on POST requests. This would also make it safe, from this type of attack anyway, to respond to PUT and DELETE requests as they could not be issued by this type of CSRF attack as mentioned in the comments.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>No, it is no longer possible to capture values passed to the <code>[]</code> or <code>{}</code> constructors in Firefox 21, Chrome 27, or IE 10. Here's a little test page, based on the main attacks described in <a href=\"http://www.thespanner.co.uk/2011/05/30/json-hijacking/\">http://www.thespanner.co.uk/2011/05/30/json-hijacking/</a>:</p>\n\n<p><a href=\"http://jsfiddle.net/ph3Uv/2/\">http://jsfiddle.net/ph3Uv/2/</a></p>\n\n<p>It overrides <code>window.Array</code> and adds a setter to <code>Object.prototype.foo</code> and tests initializing arrays and objects via the short and long forms.</p>\n\n<p>The <a href=\"http://www.ecmascript.org/es4/spec/incompatibilities.pdf\">ES4 spec</a>, in section 1.5, \"requires the global, standard bindings of Object and Array to be used to construct new objects for object and array initializers\" and notes in Implementation Precedent that \"Internet Explorer 6, Opera 9.20, and Safari 3 do not respect either local or global rebindings of Object and Array, but use the original Object and Array constructors.\" This is retained in <a href=\"http://ecma-international.org/ecma-262/5.1/#sec-11.1.4\">ES5, section 11.1.4</a>.</p>\n\n<p><a href=\"https://mail.mozilla.org/pipermail/es-discuss/2010-December/012494.html\">Allen Wirfs-Brock explained</a> that ES5 also specifies that object initialization should not trigger setters, as it uses DefineOwnProperty. <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects?redirectlocale=en-US&amp;redirectslug=JavaScript/Guide/Working_with_Objects#Defining_getters_and_setters\">MDN: Working with Objects</a> notes that \"Starting in JavaScript 1.8.1, setters are no longer called when setting properties in object and array initializers.\" This was addressed in <a href=\"http://code.google.com/p/v8/issues/detail?id=1015\">V8 issue 1015</a>.</p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>Yes, modern browsers are vulnerable when you send sensitive data without verifying that the request was generated by legitimate user intention. This vulnerabilities described in the linked posts are nothing more that a special case of cross-site request forgery. Every request for sensitive data should include a temporary token which is not available to third-party sites.</p>\n\n<p>I would not recommend simply switching to POST requests, as this does not address the core issue (POSTs are still vulnerable to CSRF in general), and it is a (minor) abuse of the HTTP standard.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am using Backbone.js and the Tornado web server.  The standard behavior for receiving collection data in Backbone is to send as a JSON Array.</p>\n\n<p>On the other hand, Tornado's standard behavior is to not allow JSON Array's due to the following vulnerability:</p>\n\n<p><a href=\"http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx\">http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx</a></p>\n\n<p>A related one is:\n<a href=\"http://haacked.com/archive/2009/06/25/json-hijacking.aspx\">http://haacked.com/archive/2009/06/25/json-hijacking.aspx</a></p>\n\n<p>It feels more natural for me to not have to wrap up my JSON in an object when it really is a list of objects.</p>\n\n<p>I was unable to reproduce these attacks in modern browsers (i.e. current Chrome, Firefox, Safari, and IE9).  At the same time I was unable to confirm anywhere that modern browsers had addressed these issues.</p>\n\n<p>To ensure that I am not mislead by any possible poor programming-skills nor poor googling-skills:</p>\n\n<p><strong>Are these JSON Hijacking attacks still an issue today in modern browsers?</strong></p>\n\n<p>(Note:  Sorry for the possible duplicate to: <a href=\"http://stackoverflow.com/questions/8587567/is-it-possible-to-do-json-hijacking-on-modern-browser\">Is it possible to do &#39;JSON hijacking&#39; on modern browser?</a>  but since the accepted answer does not seem to answer the question - I thought it was time to ask it again and get some clearer explanations.)</p>\n",
            "last_activity_date": 1422999706,
            "question_id": 16289894,
            "score": 42,
            "tags": [
                "javascript",
                "json",
                "security",
                "browser",
                "tornado"
            ],
            "title": "Is JSON Hijacking still an issue in modern browsers?"
        },
        {
            "answer_count": 18,
            "answers": [
                {
                    "body": "<p>The problem is that iScroll cancels the default behavior of your <code>select</code> tag (Not a very good implementation if you ask me).</p>\n\n<p>This occurs in the <code>_start()</code> function on line 195:</p>\n\n<pre><code>e.preventDefault();\n</code></pre>\n\n<p>If you comment that out you'll notice the <code>select</code> tag works again.</p>\n\n<p>But commenting it out means you've hacked the library which might break other desirable iScroll functionality. So here's a better workaround:</p>\n\n<pre><code>var selectField = document.getElementById('Field10');\nselectField.addEventListener('touchstart' /*'mousedown'*/, function(e) {\n    e.stopPropagation();\n}, false);\n</code></pre>\n\n<p>That code will allow the default behavior to occur, without propagating the event to iScroll where it screws everything up. </p>\n\n<p>Since your JS is not inside any jQuery-like <code>onReady()</code> event, you'll have to make sure to you put this code <em>AFTER</em> the HTML where your <code>select</code> elements are defined. </p>\n\n<p><em>Note that for mobile devices the event is <code>touchstart</code>, but for your PC browser it will be <code>mousedown</code></em></p>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>There is a bug with Android when -webkit-transform:translate3d is applied to a container that has a select box or password box[1].  The boxed area to activate those elements move, and are not where you think they'd be.  Additionally, password boxes paint in a different location, so it appears that you have two input elements instead of one.</p>\n\n<p>I work at AppMobi and we have developed a toolkit library that has fixes for these.  We've implemented custom select box widgets and a replacement for the password input field.  Check it out below.</p>\n\n<p><a href=\"https://github.com/imaffett/AppMobi.toolkit\" rel=\"nofollow\">https://github.com/imaffett/AppMobi.toolkit</a></p>\n\n<p>[1] I think the author of the comment is talking about this bug <a href=\"https://bugs.webkit.org/show_bug.cgi?id=50552\" rel=\"nofollow\">https://bugs.webkit.org/show_bug.cgi?id=50552</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is the solution</p>\n\n<pre><code>/* on page add this after all scripts */\n    &lt;script type=\"text/javascript\"&gt;\n            var myScroll;\n            function loaded() {\n                myScroll = new iScroll('wrapper');\n            }\n            document.addEventListener('DOMContentLoaded', function(){ setTimeout(loaded,500);}, false);\n    &lt;/script&gt;\n\n/* attach a script for fix */\n        $(document).ready(function(){\n            var my_select = document.getElementsByTagName('select');\n            for (var i=0; i&lt;my_select.length; i++) {\n                my_select[i].addEventListener('touchstart' /*'mousedown'*/, function(e) {\n                    myScroll.destroy();\n                    setTimeout(function(){myScroll = new iScroll('wrapper');},500);\n                }, false);\n            }\n\n    /*if you have input problems */\n\n            var input = document.getElementById('input');\n\n            if (input) {\n                input.addEventListener('touchstart' /*'mousedown'*/, function(e) {\n                    e.stopPropagation();\n                }, false);\n            }    \n        });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I had the same issue on the iScroll 4.1.9 on android, I just replaced the line 95 (on my version) :</p>\n\n<pre><code>onBeforeScrollStart: function (e) { e.preventDefault(); },\n</code></pre>\n\n<p>by :</p>\n\n<pre><code>onBeforeScrollStart: function (e) {var nodeType = e.explicitOriginalTarget ? e.explicitOriginalTarget.nodeName.toLowerCase():(e.target ? e.target.nodeName.toLowerCase():''); if(nodeType !='select' &amp;&amp; nodeType !='option' &amp;&amp; nodeType !='input' &amp;&amp; nodeType!='textarea') e.preventDefault(); },           \n</code></pre>\n\n<p>that enable focus on input, select and textarea tags</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>another code example for solution. and thanks for previous comments!\nUsing Jquery!</p>\n\n<p>After:</p>\n\n<pre><code>$(document).ready(function() {            \n    document.addEventListener('touchmove', function (e) { e.preventDefault(); }, false);\n\n    document.addEventListener('DOMContentLoaded', setTimeout(function () { loaded(); }, 200), false);\n});\n</code></pre>\n\n<p>in loaded function</p>\n\n<pre><code>function loaded() {\n    var allSelects = $('select');\n    allSelects.each(function(index, item) {\n                        item.addEventListener('touchstart' /*'mousedown'*/, function(e) { e.stopPropagation(); }, false);\n                    });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's a really easy fix that worked for me. I noticed in the Android browsers that on initial page load I could not click on a select box but I was able to click on a text input field that I was using for Search. Then I noticed that after I clicked on the text input field, it would recognize me clicking a select box. So all I did was add this to the javascript function I was using to load the Search page...</p>\n\n<pre><code>$('#search').focus();\n</code></pre>\n\n<p>So when the search page gets loaded, it automatically focuses on the text input field but does not pop up the keyboard, which is exactly what I wanted. Sorry my example is not publicly accessible, but hopefully this can still help somebody.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Finally fixed this for Android. Ended up modifying a couple of lines in iscroll.js</p>\n\n<p>Here's how we initialize iScroll.</p>\n\n<pre><code>// code from https://github.com/cubiq/iscroll/blob/master/examples/form-fields/index.html\n// don't preventDefault for form controls\n_menuScroll = new iScroll('menu_wrapper',{\n    useTransform: false,\n    onBeforeScrollStart: function (e) {\n        var target = e.target;\n        while (target.nodeType != 1) target = target.parentNode;\n\n        if (target.tagName != 'SELECT' &amp;&amp; target.tagName != 'INPUT' &amp;&amp; target.tagName != 'TEXTAREA')\n        e.preventDefault();\n    }\n});\n</code></pre>\n\n<p>The onBeforeScrollStart is what allows the controls' default behaviors to take place. Android browser seems to have problem with useTransform, so turn to false. </p>\n\n<p>Finally, some additional iscroll code needed to be excluded when useTransform is false:</p>\n\n<pre><code>// iscroll.js v4.1.9\n// line 216:\nif (that.options.useTransform) bar.style.cssText += ';pointer-events:none;-' + vendor + '-transition-property:-' + vendor + '-transform;-' + vendor + '-transition-timing-function:cubic-bezier(0.33,0.66,0.66,1);-' + vendor + '-transition-duration:0;-' + vendor + '-transform:' + trnOpen + '0,0' + trnClose;\n\n// line 295:\nif (that.options.useTransform) that[dir + 'ScrollbarIndicator'].style[vendor + 'Transform'] = trnOpen + (dir == 'h' ? pos + 'px,0' : '0,' + pos + 'px') + trnClose;\n</code></pre>\n\n<p>Tried several other methods before realizing that it had to do with the css that iscroll adds.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Replacing line, <code>onBeforeScrollStart: function (e) { e.preventDefault(); },</code></p>\n\n<p>By</p>\n\n<pre><code>onBeforeScrollStart: function (e) {\n    var nodeType = e.explicitOriginalTarget ? e.explicitOriginalTarget.nodeName.toLowerCase():(e.target ? e.target.nodeName.toLowerCase():'');\n\n    if(nodeType !='select' &amp;&amp; nodeType !='option' &amp;&amp; nodeType !='input' &amp;&amp; nodeType!='textarea') {\n         e.preventDefault();\n    }\n},\n</code></pre>\n\n<p>In <code>iScroll.js</code> Works</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I'm a bit late to the game, but if anyone is still interested, I took @bastien's <a href=\"http://stackoverflow.com/a/7687329/1021321\">approach</a> and tweaked it a bit to get it to work on Android. I'm using JQM with my implementation.</p>\n\n<p>Basically what I did was: </p>\n\n<pre><code>function scrollMe(element) {\n\nvar contentID = $wrapper.get(0).id;\nvar scroller = elm.find('[data-iscroll=\"scroller\"]').get(0);\nif (scroller) {\n    var iscroll = new iScroll(contentID, {\n        hScroll        : false,\n        vScroll        : true,\n        hScrollbar     : false,\n        vScrollbar     : true,\n        fixedScrollbar : true,\n        fadeScrollbar  : false,\n        hideScrollbar  : false,\n        bounce         : true,\n        momentum       : true,\n        lockDirection  : true,\n        useTransition  : true, \n        //the preceding options and their values do not have any to do with the fix\n        //THE FIX:\n        onBeforeScrollStart: function(e) {\n            var nodeType = e.explicitOriginalTarget ? e.explicitOriginalTarget.nodeName.toLowerCase() : (e.target ? e.target.nodeName.toLowerCase():''); //get element node type\n            if(nodeType !='select' &amp;&amp; nodeType !='option' &amp;&amp; nodeType !='input' &amp;&amp; nodeType!='textarea') e.preventDefault(); //be have normally if clicked element is not a select, option, input, or textarea.\n            else if (iscroll != null) {   //makes sure there is an instance to destory\n                     iscroll.destroy(); \n                     iscroll = null;\n            //when the user clicks on a form element, my previously instanced iscroll element is destroyed\n            }\n        },\n        onScrollStart: function(e) { \n            if (iscroll == null) {  //check to see if iscroll instance was previously destoryed \n                var elm = $.mobile.activePage; //gets current active page\n                var scrollIt = setTimeout( function(){ scrollMe(elm) }, 0 ); \n            } //recursively call function that re-instances iscroll element, as long as the user doesn't click on a form element\n        } \n    });\n    elm.data(\"iscroll-plugin\", iscroll);\n}\n\n}\n</code></pre>\n\n<p>Basically all you need to do is destroy your iScroll instance when a form element is selected by the user, but before they actually start scrolling (onBeforeScrollStart) and if the user clicks on anything else within the element with the custom attribute <code>data-iscroll=\"scroller\"</code>, they can scroll using iScroll as usual.</p>\n\n<pre><code>&lt;div data-role=\"page\" id=\"pageNameHere\" data-iscroll=\"enable\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>try this solution\n if (e.target.nodeName.toLowerCase() == \"select\" || e.target.tagName.toLowerCase() == 'input' || e.target.tagName.toLowerCase() == 'textarea')\n            {<br>\n                return;\n            }</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Start with this code. This solution worked for me:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\nvar myScroll;\nfunction iScrollLoad() {\n    myScroll = new iScroll('wrapper');\n    enableFormsInIscroll();\n}\n\nfunction enableFormsInIscroll(){\n  [].slice.call(document.querySelectorAll('input, select, button, textarea')).forEach(function(el){\n    el.addEventListener(('ontouchstart' in window)?'touchstart':'mousedown', function(e){\n      e.stopPropagation();\n    })\n  })\n}\n\ndocument.addEventListener('touchmove', function (e) { e.preventDefault(); }, false);\ndocument.addEventListener('DOMContentLoaded', function () { setTimeout(iScrollLoad, 200); }, false);\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I Know am late,but it might be helpful for some one,</p>\n\n<p>write the following code in pageshow event,but be sure that div ids not same.</p>\n\n<p>it is because, iscroller prevents the default behaviors of elements</p>\n\n<pre><code> $('#yourpage').bind('pageshow',function (event, ui) {\n\n       var myScroll;\n\n         if (this.id in myScroll) {\n         myScroll[this.id].refresh();\n\n         }else{ \n\n          myScroll[this.id] = new iScroll('wrapper', { //wrapper is div id\n                   checkDOMChanges: true,\n                   onBeforeScrollStart: function (e) {\n                         var target = e.target;\n                         while (target.nodeType != 1) \n                         target =target.parentNode;\n\n                   if (target.tagName != 'SELECT' &amp;&amp; target.tagName != 'INPUT' &amp;&amp; target.tagName != 'TEXTAREA'){  e.preventDefault();  }\n                                 }\n                               });\n                            }\n     document.addEventListener('touchmove', function (e) { e.preventDefault(); }, false);\n\n     });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm late but I leave you my solution.</p>\n\n<p>If your are using jQuery you can try that.</p>\n\n<pre><code>$('input, textarea, button, a, select').off('touchstart mousedown').on('touchstart mousedown', function(e) {\n    e.stopPropagation();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>  // Setup myScroll\n  myScroll = new IScroll('#wrapper', {\n    scrollX: horizontalSwipe,\n    scrollY: !horizontalSwipe,\n    momentum: false,\n    snap: document.querySelectorAll('#scroller .slide'),\n    snapSpeed: 400,\n    bounceEasing: 'back',\n    keyBindings: true,\n    click: true\n  });\n</code></pre>\n\n<p>For me, I just need to add click: true on the last line...\nSpent the whole day debugging and implementing all the suggested solutions to no avail...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>he anyone.</p>\n\n<p>i know's about all your answer's but i have new way to offer. without java-script or drop iscroll functions.</p>\n\n<p>the big problems with all this solution is when you scroll on input's element you have no scroll on the page. when you make just one or two input's isn't really matter but when the page is a form you have big problem to scroll the page.</p>\n\n<p>the solution i offering is to wrap the input in label tag or make the label tag with for pointer to the input. then make with absolute positioning and z-index the label above the input. when you touch on the label you focus the input.</p>\n\n<p>and example please</p>\n\n<p>HTML</p>\n\n<pre><code>&lt;fieldset&gt;\n&lt;label&gt;\n    &lt;input type=\"text\" /&gt;\n&lt;/label&gt;\n&lt;/fieldset&gt;\n</code></pre>\n\n<p>CSS</p>\n\n<pre><code>fieldset {position:relative;z-index:20;}\nlabel {position:relative;z-index:initial;}\ninput {position:relative;z-index:-1;}\n</code></pre>\n\n<p>you can also in this way put the label side of the input and with position absolute of the input put that into the label area</p>\n\n<p>is working in 100%, check it</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>What about, that works for me!:</p>\n\n<pre><code>$('input, select').on('touchstart', function(e) {\n    e.stopPropagation();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Even if you've excluded form elements in onBeforeScrollStart(), there is another bug in android 2.2/2.3 browser/webview:</p>\n\n<p><a href=\"https://www.html5dev-software.intel.com/viewtopic.php?f=26&amp;t=1278\" rel=\"nofollow\">https://www.html5dev-software.intel.com/viewtopic.php?f=26&amp;t=1278</a>\n<a href=\"https://github.com/01org/appframework/issues/104\" rel=\"nofollow\">https://github.com/01org/appframework/issues/104</a></p>\n\n<p>You can't input chinese characters in input elements in the div with \"-webkit-transform\" css style. The iscroll 4 applied the \"-webkit-transform\" with the scroller div.</p>\n\n<p>The solution is to keep form fields in a absolute div out of the scroller.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Android browser bug is result of very old version of WebKit inside Android, even inside Android 4.3. The root cause of bug - wrong processing of the click event that iScroll sends back to the browser (removing preventDefault just stops sending this click event)\nThe Android Chrome browser is free from this bug because it has upgraded WebKit library inside.</p>\n\n<p>Waiting for Android WebKit upgrade from Google.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using this HTML code:</p>\n\n<pre><code>&lt;form action=\"#\" method=\"post\"&gt;\n    &lt;fieldset&gt;\n        &lt;label class=\"desc\" id=\"title10\" for=\"Field10\"&gt;\n            How many children do you have?\n        &lt;/label&gt;        \n        &lt;select id=\"Field10\" name=\"Field10\" class=\"field select large\" tabindex=\"5\"&gt;\n            &lt;option value=\"0\" selected=\"selected\"&gt;0 &lt;/option&gt;\n            &lt;option value=\"1\"&gt;1 &lt;/option&gt;\n            &lt;option value=\"2\"&gt;2 &lt;/option&gt;\n            &lt;option value=\"3\"&gt;3 &lt;/option&gt;\n            &lt;option value=\"4\"&gt;4 &lt;/option&gt;\n            &lt;option value=\"5\"&gt;5 &lt;/option&gt;\n            &lt;option value=\"6\"&gt;6 &lt;/option&gt;\n            &lt;option value=\"7\"&gt;7 &lt;/option&gt;\n            &lt;option value=\"8\"&gt;8 &lt;/option&gt;\n            &lt;option value=\"9\"&gt;9 &lt;/option&gt;\n        &lt;/select&gt;\n        &lt;input type=\"submit\" value=\"Send message\" /&gt;\n    &lt;/fieldset&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p><code>&lt;select&gt;</code> is not working on iPhone and Android. When I tap on the selectbox nothing happens.</p>\n\n<p>I'm using iScroll 4 which is creating the problem.</p>\n\n<pre><code>&lt;script type=\"application/javascript\" src=\"iscroll-lite.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    var myScroll;\n    function loaded() {\n        myScroll = new iScroll('wrapper');\n    }\n    document.addEventListener('touchmove', function (e) { e.preventDefault(); }, false);\n    document.addEventListener('DOMContentLoaded', loaded, false);\n&lt;/script&gt;\n</code></pre>\n\n<p>I think <a href=\"https://groups.google.com/forum/#!topic/iscroll/Wy-61qpmeQc\" rel=\"nofollow\">this is a solution</a> but I don't know how to implement it.</p>\n",
            "last_activity_date": 1424331038,
            "question_id": 5745374,
            "score": 25,
            "tags": [
                "javascript",
                "android",
                "mobile-safari",
                "iphone",
                "iscroll4"
            ],
            "title": "iScroll 4 not working with form &lt;select&gt; element iPhone Safari and Android browser"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Alert boxes do not display HTML, just plain text. You can't get the HTML to show in an alert box.</p>\n\n<p>What you <em>can</em> do is use some JS alert box replacement instead of <code>alert</code>, such as <a href=\"http://docs.jquery.com/UI/Dialog\" rel=\"nofollow\">jQuery Dialog</a>, a jQuery plugin, or something else entirely.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's a function that will get you HTML corresponding to the current selection in all major browsers:</p>\n\n<pre><code>function getSelectionHtml() {\n    var html = \"\";\n    if (typeof window.getSelection != \"undefined\") {\n        var sel = window.getSelection();\n        if (sel.rangeCount) {\n            var container = document.createElement(\"div\");\n            for (var i = 0, len = sel.rangeCount; i &lt; len; ++i) {\n                container.appendChild(sel.getRangeAt(i).cloneContents());\n            }\n            html = container.innerHTML;\n        }\n    } else if (typeof document.selection != \"undefined\") {\n        if (document.selection.type == \"Text\") {\n            html = document.selection.createRange().htmlText;\n        }\n    }\n    return html;\n}\n\nalert(getSelectionHtml());\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 48
                },
                {
                    "body": "<p>Use Rangy: <a href=\"http://code.google.com/p/rangy/\">http://code.google.com/p/rangy/</a></p>\n\n<p>Cross-browser range and selection library.</p>\n\n<p>Check out the demos here: <a href=\"http://rangy.googlecode.com/svn/trunk/demos/index.html\">http://rangy.googlecode.com/svn/trunk/demos/index.html</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I have the following, very simple html page:</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        function alertSelection()\n        {\n            var selection = window.getSelection();\n            var txt = selection.toString();\n            alert(txt);\n        }\n    &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        This is &lt;span style=\"background-color:black;color:white\"&gt;the&lt;/span&gt; text.\n        &lt;div style=\"background-color:green;width:30px;height:30px;margin:30px\"\n            onmouseover=\"alertSelection()\"&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>When I select the entire first line and mouseover the square, I get an alert with \"This is the text.\".  </p>\n\n<p>How would I fix this so the the span tag or any other selected HTML isn't stripped out of the alert message?</p>\n\n<p><strong>edit:</strong> I'm looking specifically for how to get the full HTML from <code>window.getSelection()</code>.  The alert dialog was just how I was attempting to validate the code.  I'm only concerned about this working in Safari.</p>\n",
            "last_activity_date": 1390932491,
            "question_id": 4652734,
            "score": 15,
            "tags": [
                "javascript",
                "safari",
                "webkit",
                "textselection"
            ],
            "title": "Return HTML from a user-selected text"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Well, you can't check if it's down after the event, but you can check if it's Up... If it's up.. it means that no longer is down :P lol</p>\n\n<p>So the user presses the button down (onMouseDown event) ... and after that, you check if is up (onMouseUp). While it's not up, you can do what you need.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The following snippet will attempt to execute the \"doStuff\" function 2 seconds after the mouseDown event occurs in document.body.  If the user lifts up the button, the mouseUp event will occur and cancel the delayed execution.</p>\n\n<p>I'd advise using some method for cross-browser event attachment - setting the mousedown and mouseup properties explicitly was done to simplify the example.  </p>\n\n<pre><code>function doStuff() {\n  // does something when mouse is down in body for longer than 2 seconds\n}\n\nvar mousedownTimeout;\n\ndocument.body.onmousedown = function() { \n  mousedownTimeout = window.setTimeout(doStuff, 2000);\n}\n\ndocument.body.onmouseup = function() {\n  window.clearTimeout(mousedownTimeout);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I think the best approach to this is to keep your own record of the mouse button state, as follows:</p>\n\n<pre><code>var mouseDown = 0;\ndocument.body.onmousedown = function() { \n    mouseDown = 1;\n}\ndocument.body.onmouseup = function() {\n    mouseDown = 0;\n}\n</code></pre>\n\n<p>and then, later in your code:</p>\n\n<pre><code>if (mouseDown == 1) {\n    // the mouse is down, do what you have to do.\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>You can combine @Pax and my answers to also get the duration that the mouse has been down for:</p>\n\n<pre><code>var mousedownTimeout,\n    mousedown = 0;\n\ndocument.body.onmousedown = function() {\n  mousedown = 0; \n  window.clearInterval(mousedownTimeout);\n  mousedownTimeout = window.setInterval(function() { mousedown += 200 }, 200);\n}\n\ndocument.body.onmouseup = function() {\n  mousedown = 0;\n  window.clearInterval(mousedownTimeout);\n}\n</code></pre>\n\n<p>Then later:</p>\n\n<pre><code>if (mousedown &gt;= 2000) {\n  // do something if the mousebutton has been down for at least 2 seconds\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Regarding Pax' solution: it doesn't work if user clicks more than one button intentionally or accidentally. Don't ask me how I know :-(.</p>\n\n<p>The correct code should be like that:</p>\n\n<pre><code>var mouseDown = 0;\ndocument.body.onmousedown = function() { \n  ++mouseDown;\n}\ndocument.body.onmouseup = function() {\n  --mouseDown;\n}\n</code></pre>\n\n<p>With the test like this:</p>\n\n<pre><code>if(mouseDown){\n  // crikey! isn't she a beauty?\n}\n</code></pre>\n\n<p>If you want to know what button is pressed, be prepared to make mouseDown an array of counters and count them separately for separate buttons:</p>\n\n<pre><code>// let's pretend that a mouse doesn't have more than 9 buttons\nvar mouseDown = [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    mouseDownCount = 0;\ndocument.body.onmousedown = function(evt) { \n  ++mouseDown[evt.button];\n  ++mouseDownCount;\n}\ndocument.body.onmouseup = function(evt) {\n  --mouseDown[evt.button];\n  --mouseDownCount;\n}\n</code></pre>\n\n<p>Now you can check what buttons were pressed exactly:</p>\n\n<pre><code>if(mouseDownCount){\n  // alright, let's lift the little bugger up!\n  for(var i = 0; i &lt; mouseDown.length; ++i){\n    if(mouseDown[i]){\n      // we found it right there!\n    }\n  }\n}\n</code></pre>\n\n<p>Now be warned that the code above would work only for standard-compliant browsers that pass you a button number starting from 0 and up. IE uses a bit mask of currently pressed buttons:</p>\n\n<ul>\n<li>0 for \"nothing is pressed\"</li>\n<li>1 for left</li>\n<li>2 for right</li>\n<li>4 for middle</li>\n<li>and any combination of above, e.g., 5 for left + middle</li>\n</ul>\n\n<p>So adjust your code accordingly! I leave it as an exercise.</p>\n\n<p><strong>And remember: IE uses a global event object called &hellip; \"event\".</strong></p>\n\n<p>Incidentally IE has a feature useful in your case: when other browsers send \"button\" only for mouse button events (onclick, onmousedown, and onmouseup), IE sends it with onmousemove too. So you can start listening for onmousemove when you need to know the button state, and check for evt.button as soon as you got it &mdash; now you know what mouse buttons were pressed:</p>\n\n<pre><code>// for IE only!\ndocument.body.onmousemove = function(){\n  if(event.button){\n    // aha! we caught a feisty little sheila!\n  }\n};\n</code></pre>\n\n<p>Of course you get nothing if she plays dead and not moving.</p>\n\n<p>Relevant links:</p>\n\n<ul>\n<li><a href=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-MouseEvent-button\">MouseEvent's button (DOM 2)</a></li>\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ms533544(VS.85).aspx\">MSDN's button</a></li>\n</ul>\n\n<p><em><strong>Update #1</strong>: I don't know why I carried over the document.body-style of code. It will be better to attach event handlers directly to the document.</em></p>\n",
                    "is_accepted": true,
                    "score": 87
                },
                {
                    "body": "<p>You need to handle the MouseDown and MouseUp and set some flag or something to track it \"later down the road\"... :(</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>the solution isn't good.\none could \"mousedown\" on the document, then \"mouseup\" outside the browser, and on this case the browser would still be thinking the mouse is down.</p>\n\n<p>the only good solution is using IE.event object.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<h2>Short and sweet</h2>\n\n<p>I'm not sure why none of the previous answers worked for me, but I came up with this solution during a eureka moment. It not only works, but it is also most elegant:</p>\n\n<p>Add to body tag:</p>\n\n<pre><code>onmouseup=\"down=0;\" onmousedown=\"down=1;\"\n</code></pre>\n\n<p>Then test and execute <code>myfunction()</code> if <code>down</code> equals <code>1</code>:</p>\n\n<pre><code>onmousemove=\"if (down==1) myfunction();\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>        var mousedown = 0;\n        $(function(){\n            document.onmousedown = function(e){\n                mousedown = mousedown | getWindowStyleButton(e);\n                e = e || window.event;\n                console.log(\"Button: \" + e.button + \" Which: \" + e.which + \" MouseDown: \" + mousedown);\n            }\n\n            document.onmouseup = function(e){\n                mousedown = mousedown ^ getWindowStyleButton(e);\n                e = e || window.event;\n                console.log(\"Button: \" + e.button + \" Which: \" + e.which + \" MouseDown: \" + mousedown);\n            }\n\n            document.oncontextmenu = function(e){\n                // to suppress oncontextmenu because it blocks\n                // a mouseup when two buttons are pressed and \n                // the right-mouse button is released before\n                // the other button.\n                return false;\n            }\n        });\n\n        function getWindowStyleButton(e){\n            var button = 0;\n                if (e) {\n                    if (e.button === 0) button = 1;\n                    else if (e.button === 1) button = 4;\n                    else if (e.button === 2) button = 2;  \n                }else if (window.event){\n                    button = window.event.button;\n                }\n            return button;\n        }\n</code></pre>\n\n<p>this cross-browser version works fine for me.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Using jQuery, the following solution handles even the \"drag off the page then release case\".</p>\n\n<pre><code>$(document).mousedown(function(e) {\n    mouseDown = true;\n}).mouseup(function(e) {\n    mouseDown = false;\n}).mouseleave(function(e) {\n    mouseDown = false;\n});\n</code></pre>\n\n<p>I don't know how it handles multiple mouse buttons.\nIf there were a way to start the click outside the window, then bring the mouse into the window, then this would probably not work properly there either.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>Is there a way to detect if a mouse button is currently down in JavaScript?</p>\n\n<p>I know about the \"mousedown\" event, but that's not what I need.  Some time AFTER the mouse button is pressed, I want to be able to detect if it is still pressed down.</p>\n\n<p>Is this possible?</p>\n",
            "last_activity_date": 1409878079,
            "question_id": 322378,
            "score": 56,
            "tags": [
                "javascript",
                "input",
                "mouse",
                "user-input",
                "input-devices"
            ],
            "title": "JavaScript: Check if mouse button down?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>There is no equivalent of \"formatNumber\" in JavaScript. You can write it yourself or find a library that already does this.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think what you want is <code>f.nettotal.value = \"$\" + showValue.toFixed(2);</code></p>\n",
                    "is_accepted": true,
                    "score": 64
                },
                {
                    "body": "<p>Here's the best js money formatter I've seen:</p>\n\n<pre><code>Number.prototype.formatMoney = function(decPlaces, thouSeparator, decSeparator) {\n    var n = this,\n        decPlaces = isNaN(decPlaces = Math.abs(decPlaces)) ? 2 : decPlaces,\n        decSeparator = decSeparator == undefined ? \".\" : decSeparator,\n        thouSeparator = thouSeparator == undefined ? \",\" : thouSeparator,\n        sign = n &lt; 0 ? \"-\" : \"\",\n        i = parseInt(n = Math.abs(+n || 0).toFixed(decPlaces)) + \"\",\n        j = (j = i.length) &gt; 3 ? j % 3 : 0;\n    return sign + (j ? i.substr(0, j) + thouSeparator : \"\") + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thouSeparator) + (decPlaces ? decSeparator + Math.abs(n - i).toFixed(decPlaces).slice(2) : \"\");\n};\n</code></pre>\n\n<p>It was re-formatted and borrowed from here: <a href=\"http://stackoverflow.com/a/149099/751484\">http://stackoverflow.com/a/149099/751484</a></p>\n\n<p>You'll have to supply your own currency designator (you used $ above).</p>\n\n<p>Call it like this (although note that the args default to 2, comma, &amp; period, so you don't need to supply any args if that's your preference):</p>\n\n<pre><code>var myMoney=3543.75873;\nvar formattedMoney = '$' + myMoney.formatMoney(2,',','.'); // \"$3,543.76\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 79
                },
                {
                    "body": "<p>There is a built-in <code>function</code> <a href=\"http://www.w3schools.com/jsref/jsref_tofixed.asp\">toFixed</a> in <code>javascript</code> </p>\n\n<pre><code>var num = new Number(349);\ndocument.write(\"$\" + num.toFixed(2));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>+1 to Jonathan M for providing the original method. Since this is explicitly a currency formatter, I went ahead and added the currency symbol (defaults to '$') to the output, and added a default comma as the thousands separator. If you don't actually want a currency symbol (or thousands separator), just use \"\" (empty string) as your argument for it.</p>\n\n<pre><code>Number.prototype.formatMoney = function(decPlaces, thouSeparator, decSeparator, currencySymbol) {\n    // check the args and supply defaults:\n    decPlaces = isNaN(decPlaces = Math.abs(decPlaces)) ? 2 : decPlaces;\n    decSeparator = decSeparator == undefined ? \".\" : decSeparator;\n    thouSeparator = thouSeparator == undefined ? \",\" : thouSeparator;\n    currencySymbol = currencySymbol == undefined ? \"$\" : currencySymbol;\n\n    var n = this,\n        sign = n &lt; 0 ? \"-\" : \"\",\n        i = parseInt(n = Math.abs(+n || 0).toFixed(decPlaces)) + \"\",\n        j = (j = i.length) &gt; 3 ? j % 3 : 0;\n\n    return sign + currencySymbol + (j ? i.substr(0, j) + thouSeparator : \"\") + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thouSeparator) + (decPlaces ? decSeparator + Math.abs(n - i).toFixed(decPlaces).slice(2) : \"\");\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p><a href=\"http://code.google.com/p/javascript-number-formatter/\" rel=\"nofollow\">http://code.google.com/p/javascript-number-formatter/</a> :</p>\n\n<ul>\n<li>Short, fast, flexible yet standalone. Only 75 lines including MIT license info, blank lines &amp; comments.</li>\n<li>Accept standard number formatting like #,##0.00 or with negation -000.####.</li>\n<li>Accept any country format like # ##0,00, #,###.##, #'###.## or any type of non-numbering symbol.</li>\n<li>Accept any numbers of digit grouping. #,##,#0.000 or #,###0.## are all valid.</li>\n<li>Accept any redundant/fool-proof formatting. ##,###,##.# or 0#,#00#.###0# are all OK.</li>\n<li>Auto number rounding.</li>\n<li>Simple interface, just supply mask &amp; value like this: format( \"0.0000\", 3.141592)</li>\n</ul>\n\n<p><strong>UPDATE</strong> This is my home grown <code>pp</code> utilities for most common tasks:</p>\n\n<pre><code>var NumUtil = {};\n\n/**\n  Petty print 'num' wth exactly 'signif' digits.\n  pp(123.45, 2) == \"120\"\n  pp(0.012343, 3) == \"0.0123\"\n  pp(1.2, 3) == \"1.20\"\n*/\nNumUtil.pp = function(num, signif) {\n    if (typeof(num) !== \"number\")\n        throw 'NumUtil.pp: num is not a number!';\n    if (isNaN(num))\n        throw 'NumUtil.pp: num is NaN!';\n    if (num &lt; 1e-15 || num &gt; 1e15)\n        return num;\n    var r = Math.log(num)/Math.LN10;\n    var dot = Math.floor(r) - (signif-1);\n    r = r - Math.floor(r) + (signif-1);\n    r = Math.round(Math.exp(r * Math.LN10)).toString();\n    if (dot &gt;= 0) {\n        for (; dot &gt; 0; dot -= 1)\n            r += \"0\";\n        return r;\n    } else if (-dot &gt;= r.length) {\n        var p = \"0.\";\n        for (; -dot &gt; r.length; dot += 1) {\n            p += \"0\";\n        }\n        return p+r;\n    } else {\n        return r.substring(0, r.length + dot) + \".\" + r.substring(r.length + dot);\n    }\n}\n\n/** Append leading zeros up to 2 digits. */\nNumUtil.align2 = function(v) {\n    if (v &lt; 10)\n        return \"0\"+v;\n    return \"\"+v;\n}\n/** Append leading zeros up to 3 digits. */\nNumUtil.align3 = function(v) {\n    if (v &lt; 10)\n        return \"00\"+v;\n    else if (v &lt; 100)\n        return \"0\"+v;\n    return \"\"+v;\n}\n\nNumUtil.integer = {};\n\n/** Round to integer and group by 3 digits. */\nNumUtil.integer.pp = function(num) {\n    if (typeof(num) !== \"number\") {\n        console.log(\"%s\", new Error().stack);\n        throw 'NumUtil.integer.pp: num is not a number!';\n    }\n    if (isNaN(num))\n        throw 'NumUtil.integer.pp: num is NaN!';\n    if (num &gt; 1e15)\n        return num;\n    if (num &lt; 0)\n        throw 'Negative num!';\n    num = Math.round(num);\n    var group = num % 1000;\n    var integ = Math.floor(num / 1000);\n    if (integ === 0) {\n        return group;\n    }\n    num = NumUtil.align3(group);\n    while (true) {\n        group = integ % 1000;\n        integ = Math.floor(integ / 1000);\n        if (integ === 0)\n            return group + \" \" + num;\n        num = NumUtil.align3(group) + \" \" + num;\n    }\n    return num;\n}\n\nNumUtil.currency = {};\n\n/** Round to coins and group by 3 digits. */\nNumUtil.currency.pp = function(amount) {\n    if (typeof(amount) !== \"number\")\n        throw 'NumUtil.currency.pp: amount is not a number!';\n    if (isNaN(amount))\n        throw 'NumUtil.currency.pp: amount is NaN!';\n    if (amount &gt; 1e15)\n        return amount;\n    if (amount &lt; 0)\n        throw 'Negative amount!';\n    if (amount &lt; 1e-2)\n        return 0;\n    var v = Math.round(amount*100);\n    var integ = Math.floor(v / 100);\n    var frac = NumUtil.align2(v % 100);\n    var group = integ % 1000;\n    integ = Math.floor(integ / 1000);\n    if (integ === 0) {\n        return group + \".\" + frac;\n    }\n    amount = NumUtil.align3(group);\n    while (true) {\n        group = integ % 1000;\n        integ = Math.floor(integ / 1000);\n        if (integ === 0)\n            return group + \" \" + amount + \".\" + frac;\n        amount = NumUtil.align3(group) + \" \" + amount;\n    }\n    return amount;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here is a mootools 1.2 implementation from the code provided by XMLilley...</p>\n\n<pre><code>Number.implement('format', function(decPlaces, thouSeparator, decSeparator){\ndecPlaces = isNaN(decPlaces = Math.abs(decPlaces)) ? 2 : decPlaces;\ndecSeparator = decSeparator === undefined ? '.' : decSeparator;\nthouSeparator = thouSeparator === undefined ? ',' : thouSeparator;\n\nvar num = this,\n    sign = num &lt; 0 ? '-' : '',\n    i = parseInt(num = Math.abs(+num || 0).toFixed(decPlaces)) + '',\n    j = (j = i.length) &gt; 3 ? j % 3 : 0;\n\nreturn sign + (j ? i.substr(0, j) + thouSeparator : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + thouSeparator) + (decPlaces ? decSeparator + Math.abs(num - i).toFixed(decPlaces).slice(2) : '');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The new ECMAScript Internationalization API offers a numberformat function.</p>\n\n<ul>\n<li><a href=\"http://www.ecma-international.org/ecma-402/1.0/\">http://www.ecma-international.org/ecma-402/1.0/</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/NumberFormat\">https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/NumberFormat</a></li>\n</ul>\n\n<p>Using that API you do this:</p>\n\n<pre><code>// Create our number formatter.\nvar formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  minimumFractionDigits: 2,\n});\n\nalert(formatter.format(349)); /* $349.00 */\n</code></pre>\n\n<p>As this specification is relatively new, I compiled some information about browser support:</p>\n\n<ul>\n<li>IE supports it since <a href=\"http://msdn.microsoft.com/en-us/library/dn305667%28v=vs.85%29.aspx\">IE11</a></li>\n<li>Desktop FF supports it since v27</li>\n<li>Mobile FF nightly (v36) <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=864843\">doesn't support it yet</a>.</li>\n<li>Chrome supports it</li>\n<li>There is a <a href=\"https://github.com/andyearnshaw/Intl.js\">shim</a> to support it on older browsers, but I have not tested it.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>For the record, I found <a href=\"http://numeraljs.com/\">numeral.js</a> a convenient solution. Syntactically it's like <a href=\"http://momentjs.com/\">moment.js</a> but for numbers, rankings, percentages and so forth.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Here is the short and best one to convert numbers into currency format: </p>\n\n<pre><code>function toCurrency(amount){\n    return amount.replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\");\n}\n\n// usage: toCurrency(3939920.3030);\n</code></pre>\n\n<p>Cheers!\nAnunay</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Code from Jonathan M looks to complicated for me so I rewrote it and got about 30% on FF v30 and 60% on Chrome v35 speed boost (<a href=\"http://jsperf.com/number-formating2\" rel=\"nofollow\">http://jsperf.com/number-formating2</a>):</p>\n\n<pre><code>Number.prototype.formatNumber = function(decPlaces, thouSeparator, decSeparator) {\n    decPlaces = isNaN(decPlaces = Math.abs(decPlaces)) ? 2 : decPlaces;\n    decSeparator = decSeparator == undefined ? \".\" : decSeparator;\n    thouSeparator = thouSeparator == undefined ? \",\" : thouSeparator;\n\n    var n = this.toFixed(decPlaces);\n    if (decPlaces) {\n        var i = n.substr(0, n.length - (decPlaces + 1));\n        var j = decSeparator + n.substr(-decPlaces);\n    } else {\n        i = n;\n        j = '';\n    }\n\n    function reverse(str) {\n        var sr = '';\n        for (var l = str.length - 1; l &gt;= 0; l--) {\n            sr += str.charAt(l);\n        }\n        return sr;\n    }\n\n    if (parseInt(i)) {\n        i = reverse(reverse(i).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thouSeparator));\n    }\n    return i+j;\n};\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>var sum = 123456789.5698;\nvar formatted = '$' + sum.formatNumber(2,',','.'); // \"$123,456,789.57\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You should use an internationalization tool for solving this problem, because if you don't you need to hard code a lot of locale specific code and the amount of permutations is endless. I use <a href=\"http://l10ns.org\" rel=\"nofollow\">l10ns</a>. With L10ns you can just define your message string to be a currency amount: </p>\n\n<pre><code>{price, currency, local, symbol}\n</code></pre>\n\n<p>Compile the message:</p>\n\n<pre><code>$ l10ns compile\n</code></pre>\n\n<p>And require it and use it:</p>\n\n<pre><code>var l = requireLocalizations('en-US');\nvar carPrice = l('PRIZES__CAR_PRICE', { price: {\n  code: 'USD',\n  amount: 349\n}});\n// use carPrice...\n</code></pre>\n\n<p>PS. Don't forget that English uses parenthesis ($#,##0.00) for negative amounts.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am working with the following snippet and the end result is a number like <code>349</code>. How do I format it to be <code>$349.00</code>?  I thought <code>formatNumber()</code> would work?  What am I doing wrong? The javascript runs through a series of calculations and then presents Net Total, Tax and Total.  For Net Total and Tax I would like to see a $ and two decimal places.  </p>\n",
            "last_activity_date": 1416994782,
            "question_id": 9318674,
            "score": 53,
            "tags": [
                "javascript",
                "number-formatting"
            ],
            "title": "javascript number/currency formatting"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Good question.</p>\n\n<ul>\n<li><p>When in a CSS file, URLs will be relative to the CSS file.</p></li>\n<li><p>When writing properties using JavaScript, URLs should always be relative to the page (the main resource requested).</p></li>\n</ul>\n\n<p>There is no <code>tilde</code> functionality built-in in JS that I know of. The usual way would be to define a JavaScript variable specifying the base path:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n  directory_root = \"http://www.example.com/resources\";\n\n&lt;/script&gt; \n</code></pre>\n\n<p>and to reference that root whenever you assign URLs dynamically.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<h2>JavaScript file paths</h2>\n\n<p>When in script, <strong>paths are relative to displayed page</strong></p>\n\n<p>to make things easier you can print out a simple js declaration like this and using this variable all across your scripts:</p>\n\n<p>Solution, which was employed on <strong>StackOverflow</strong> around Feb 2010:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n   var imagePath = 'http://sstatic.net/so/img/';\n&lt;/script&gt;\n</code></pre>\n\n<p>If you were visiting this page around 2010 you could just have a look at <strong>StackOverflow's html source</strong>, you could find this badass one-liner [formatted to 3 lines :) ] in the <code>&lt;head /&gt;</code> section</p>\n",
                    "is_accepted": true,
                    "score": 73
                },
                {
                    "body": "<p>I used pekka's pattern.\nI think yet another pattern.</p>\n\n<pre><code>&lt;script src=\"&lt;% = Url.Content(\"~/Site/Scripts/myjsfile.js\") %&gt;?root=&lt;% = Page.ResolveUrl(\"~/Site/images\") %&gt;\"&gt;\n</code></pre>\n\n<p>and parsed querystring in myjsfile.js.</p>\n\n<p><a href=\"http://plugins.jquery.com/project/query-object\" rel=\"nofollow\" title=\"Plugins | jQuery Plugins\">Plugins | jQuery Plugins</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>get the location of your javascript file during run time using jQuery by parsing the DOM for the 'src' attribute that referred it:</p>\n\n<pre><code>var jsFileLocation = $('script[src*=example]').attr('src');  // the js file path\njsFileLocation = jsFileLocation.replace('example.js', '');   // the js folder path\n</code></pre>\n\n<p>(assuming your javascript file is named 'example.js')</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>A  proper solution is using a css class instead of writing src in js file.\nFor example instead of using:</p>\n\n<pre><code>$(this).css(\"background\", \"url('../Images/filters_collapse.jpg')\");\n</code></pre>\n\n<p>use:</p>\n\n<pre><code>$(this).addClass(\"xxx\");\n</code></pre>\n\n<p>and in a css file that is loaded in the page write:</p>\n\n<pre><code>.xxx {\n  background-image:url('../Images/filters_collapse.jpg');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>Please use the following syntax to enjoy the luxury of asp.net tilda (\"~\") in javascript</p>\n\n<pre><code>&lt;script src=&lt;%=Page.ResolveUrl(\"~/MasterPages/assets/js/jquery.js\")%&gt;&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You need to add <code>runat=\"server\"</code> and and to assign an ID for it, then specify the absolute path like this:</p>\n\n<p><code>&lt;script type=\"text/javascript\" runat=\"server\" id=\"myID\" src=\"~/js/jquery.jqGrid.js\"&gt;&lt;/script&gt;]</code></p>\n\n<p>From the codebehind, you can change the src programatically using the ID. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I found this to work for me.</p>\n\n<pre><code>    &lt;script&gt; document.write(unescape('%3Cscript src=\"' + window.location.protocol + \"//\" +     \n    window.location.host + \"/\" + 'js/general.js?ver=2\"%3E%3C/script%3E'))&lt;/script&gt;\n</code></pre>\n\n<p>between script tags of course... (I'm not sure why the script tags didn't show up in this post)...</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>This works well in ASP.NET webforms.</p>\n\n<p>Change the script to</p>\n\n<pre><code>&lt;img src=\"' + imagePath + 'chevron-large-right-grey.gif\" alt=\"'.....\n</code></pre>\n\n<p>I have a master page for each directory level and this is in the Page_Init event</p>\n\n<pre><code>  Dim vPath As String = ResolveUrl(\"~/Images/\")\n    Dim SB As New StringBuilder\n    SB.Append(\"var imagePath = '\" &amp; vPath &amp; \"'; \")\n    ScriptManager.RegisterClientScriptBlock(Me, Me.GetType(), \"LoadImagePath\", SB.ToString, True)\n</code></pre>\n\n<p>Now regardless of whether the application is run locally or deployed you get the correct full path</p>\n\n<pre><code>http://localhost:57387/Images/chevron-large-left-blue.png\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For the MVC4 app I am working on, I put a script element in _Layout.cshtml and created a global variable for the path required, like so:</p>\n\n<pre><code>&lt;body&gt;\n\n&lt;script&gt;\n    var templatesPath = \"@Url.Content(\"~/Templates/\")\";\n&lt;/script&gt;\n\n&lt;div class=\"page\"&gt;\n    &lt;div id=\"header\"&gt;\n\n       &lt;span id=\"title\"&gt;\n\n        &lt;/span&gt;\n    &lt;/div&gt;\n    &lt;div id=\"main\"&gt;\n\n\n        @RenderBody()\n    &lt;/div&gt;\n    &lt;div id=\"footer\"&gt;\n        &lt;span&gt;&lt;/span&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>So I'm running this javascript, and everything works fine, except the paths to the background image. It works on my local ASP.NET Dev environment, but it does NOT work when deployed to a server in a virtual directory.</p>\n\n<p>This is in an external .js file, folder structure is</p>\n\n<pre><code>Site/Content/style.css\nSite/Scripts/myjsfile.js\nSite/Images/filters_expand.jpg\nSite/Images/filters_colapse.jpg\n</code></pre>\n\n<p>then this is where the js file is included from</p>\n\n<pre><code>Site/Views/ProductList/Index.aspx\n\n$(\"#toggle\").click(function() {\n    if (left.width() &gt; 0) {\n        AnimateNav(left, right, 0);\n        $(this).css(\"background\", \"url('../Images/filters_expand.jpg')\");\n    }\n    else {\n        AnimateNav(left, right, 170);\n        $(this).css(\"background\", \"url('../Images/filters_collapse.jpg')\");\n    }\n});\n</code></pre>\n\n<p>I've tried using <code>'/Images/filters_collapse.jpg'</code> and that doesn't work either; however, it seems to work on the server if I use <code>'../../Images/filters_collapse.jpg'</code>.</p>\n\n<p>Basically, I want have the same functionallity as the ASP.NET tilda -- <code>~</code>.</p>\n\n<p><strong>update</strong></p>\n\n<p>Are paths in external .js files relative to the Page they are included in, or the actual location of the .js file?</p>\n",
            "last_activity_date": 1417053774,
            "question_id": 2188218,
            "score": 42,
            "tags": [
                "javascript",
                "html",
                "asp.net-mvc",
                "css",
                "path"
            ],
            "title": "Relative Paths in Javascript in an external file"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>I would suggest looking into minifying the files first and see if that gives you a big enough speed boost. If your host is slow, could try putting that static content on a CDN.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You might find this wiki article interesting :  <a href=\"http://ajaxpatterns.org/On-Demand_Javascript\" rel=\"nofollow\">http://ajaxpatterns.org/On-Demand_Javascript</a></p>\n\n<p>It explains how and when to use such technique.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Well, <code>x.parentNode</code> returns the HEAD element, so you are inserting the script just before the head tag. Maybe that's the problem.</p>\n\n<p>Try <code>x.parentNode.appendChild()</code> instead.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>One reason why your scripts could be loading so slowly is if you were running all of your scripts while loading the page, like this:</p>\n\n<pre><code>callMyFunctions();\n</code></pre>\n\n<p>instead of:</p>\n\n<pre><code>$(window).load(function() {\n      callMyFunctions();\n});\n</code></pre>\n\n<p>This second bit of script waits until the browser has completely loaded all of your Javascript code before it starts executing any of your scripts, making it appear to the user that the page has loaded faster.</p>\n\n<p>If you're looking to enhance the user's experience by decreasing the loading time, I wouldn't go for the \"loading screen\" option. In my opinion that would be much more annoying than just having the page load more slowly.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A couple solutions for async loading:</p>\n\n<pre><code>//this function will work cross-browser for loading scripts asynchronously\nfunction loadScript(src, callback)\n{\n  var s,\n      r,\n      t;\n  r = false;\n  s = document.createElement('script');\n  s.type = 'text/javascript';\n  s.src = src;\n  s.onload = s.onreadystatechange = function() {\n    //console.log( this.readyState ); //uncomment this line to see which ready states are called.\n    if ( !r &amp;&amp; (!this.readyState || this.readyState == 'complete') )\n    {\n      r = true;\n      callback();\n    }\n  };\n  t = document.getElementsByTagName('script')[0];\n  t.parentNode.insertBefore(s, t);\n}\n</code></pre>\n\n<p>If you've already got jQuery on the page, just use</p>\n\n<p><a href=\"http://api.jquery.com/jQuery.getScript/\"><code>$.getScript(url, successCallback)</code></a></p>\n\n<p>Additionally, it's possible that your scripts are being loaded/executed before the document is done loading, meaning that you'd need to wait for <code>document.ready</code> before events can be bound to the elements.</p>\n\n<p>It's not possible to tell specifically what your issue is without seeing the code.</p>\n\n<p>The simplest solution is to keep all of your scripts inline at the bottom of the page, that way they don't block the loading of HTML content while they execute. It also avoids the issue of having to asynchronously load each required script.</p>\n\n<p>If you have a particularly fancy interaction that isn't always used that requires a larger script of some sort, it could be useful to avoid loading that particular script until it's needed (lazy loading).</p>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>I would suggest you take a look at <a href=\"http://www.modernizr.com/docs/\" rel=\"nofollow\">Modernizr</a>. Its a small light weight library that you can asynchronously load your javascript with features that allow you to check if the file is loaded and execute the script in the other you specify.</p>\n\n<p>Here is an example of loading jquery:</p>\n\n<pre><code>Modernizr.load([\n  {\n    load: '//ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.js',\n    complete: function () {\n      if ( !window.jQuery ) {\n            Modernizr.load('js/libs/jquery-1.6.1.min.js');\n      }\n    }\n  },\n  {\n    // This will wait for the fallback to load and\n    // execute if it needs to.\n    load: 'needs-jQuery.js'\n  }\n]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I loaded the scripts asynchronously (html 5 has that feature) when all the scripts where done loading I redirected the page to index2.html where index2.html uses the same libraries. Because browsers have a cache once the page redirects to index2.html, index2.html loads in less than a second because it has all it needs to load the page.  In my index.html page I also load the images that I plan on using so that the browser place those images on the cache. so my index.html looks like:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" /&gt;\n    &lt;title&gt;Project Management&lt;/title&gt;\n\n    &lt;!-- the purpose of this page is to load all the scripts on the browsers cache so that pages can load fast from now on --&gt;\n\n    &lt;script type=\"text/javascript\"&gt;\n\n        function stylesheet(url) {\n            var s = document.createElement('link');\n            s.type = 'text/css';\n            s.async = true;\n            s.src = url;\n            var x = document.getElementsByTagName('head')[0];\n            x.appendChild(s);\n        }\n\n        function script(url) {\n            var s = document.createElement('script');\n            s.type = 'text/javascript';\n            s.async = true;\n            s.src = url;\n            var x = document.getElementsByTagName('head')[0];\n            x.appendChild(s);\n        }\n\n        //load scritps to the catche of browser\n        (function () {            \n                stylesheet('css/custom-theme/jquery-ui-1.8.16.custom.css');\n                stylesheet('css/main.css');\n                stylesheet('css/marquee.css');\n                stylesheet('css/mainTable.css');\n\n                script('js/jquery-ui-1.8.16.custom.min.js');\n                script('js/jquery-1.6.2.min.js');\n                script('js/myFunctions.js');\n                script('js/farinspace/jquery.imgpreload.min.js');\n                script('js/marquee.js');            \n        })();\n\n    &lt;/script&gt;\n\n    &lt;script type=\"text/javascript\"&gt;\n       // once the page is loaded go to index2.html\n        window.onload = function () {\n            document.location = \"index2.html\";\n        }\n    &lt;/script&gt;\n\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;div id=\"cover\" style=\"position:fixed; left:0px; top:0px; width:100%; height:100%; background-color:Black; z-index:100;\"&gt;Loading&lt;/div&gt;\n\n&lt;img src=\"images/home/background.png\" /&gt;\n&lt;img src=\"images/home/3.png\"/&gt;\n&lt;img src=\"images/home/6.jpg\"/&gt;\n&lt;img src=\"images/home/4.png\"/&gt;\n&lt;img src=\"images/home/5.png\"/&gt;\n&lt;img src=\"images/home/8.jpg\"/&gt;\n&lt;img src=\"images/home/9.jpg\"/&gt;\n&lt;img src=\"images/logo.png\"/&gt;\n&lt;img src=\"images/logo.png\"/&gt;\n&lt;img src=\"images/theme/contentBorder.png\"/&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>another nice thing about this is that I may place a loader in the page and when the page is done loading the loader will go away and in a matte of milliseconds the new page will be running. </p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Several notes: </p>\n\n<ul>\n<li><code>s.async = true</code> is not very correct for HTML5 doctype, correct is <code>s.async = 'async'</code></li>\n<li>Using timeouts to control the order is not very good and safe, and you also make the loading time much larger, to equal the sum of all timeouts!</li>\n</ul>\n\n<p>Since there is a recent reason to load files asynchronously, but in order, I'd recommend a bit more functional-driven way over your example (remove <code>console.log</code> for production use :) ):</p>\n\n<pre><code>(function() {\n    var prot = (\"https:\"===document.location.protocol?\"https://\":\"http://\");\n\n    var scripts = [\n        \"path/to/first.js\",\n        \"path/to/second.js\",\n        \"path/to/third.js\"\n    ];\n\n    function completed() { console.log('completed'); }  // FIXME: remove logs\n\n    function checkStateAndCall(path, callback) {\n        var _success = false;\n        return function() {\n            if (!_success &amp;&amp; (!this.readyState || (this.readyState == 'complete'))) {\n                _success = true;\n                console.log(path, 'is ready'); // FIXME: remove logs\n                callback();\n            }\n        };\n    }\n\n    function asyncLoadScripts(files) {\n        function loadNext() { // chain element\n            if (!files.length) completed();\n            var path = files.shift();\n            var scriptElm = document.createElement('script');\n            scriptElm.type = 'text/javascript';\n            scriptElm.async = 'async';\n            scriptElm.src = prot+path;\n            scriptElm.onload = scriptElm.onreadystatechange = \\\n                checkStateAndCall(path, loadNext); // load next file in chain when\n                                                   // this one will be ready \n            var headElm = document.head || document.getElementsByTagName('head')[0];\n            headElm.appendChild(scriptElm);\n        }\n        loadNext(); // start a chain\n    }\n\n    asyncLoadScripts(scripts);\n})();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I would complete zzzzBov's answer with a check for the presence of callback and allow passing of arguments:</p>\n\n<pre><code>    function loadScript(src, callback, args) {\n      var s, r, t;\n      r = false;\n      s = document.createElement('script');\n      s.type = 'text/javascript';\n      s.src = src;\n      if (typeof(callback) === 'function') {\n        s.onload = s.onreadystatechange = function() {\n          if (!r &amp;&amp; (!this.readyState || this.readyState === 'complete')) {\n            r = true;\n            callback.apply(args);\n          }\n        };\n      };\n      t = document.getElementsByTagName('script')[0];\n      t.parent.insertBefore(s, t);\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>HTML5's new 'async' attribute is supposed to do the trick. 'defer' is also supported in most browsers if you care about IE. </p>\n\n<p>async - The HTML</p>\n\n<pre><code>&lt;script async src=\"siteScript.js\" onload=\"myInit()\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>defer - The HTML</p>\n\n<pre><code>&lt;script defer src=\"siteScript.js\" onload=\"myInit()\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>While analyzing the new adsense ad unit code I noticed the attribute and a search lead me here: <a href=\"http://davidwalsh.name/html5-async\">http://davidwalsh.name/html5-async</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Example from google </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n  (function() {\n    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;\n    po.src = 'https://apis.google.com/js/plusone.js?onload=onLoadCallback';\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);\n  })();\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Check out this <a href=\"https://github.com/stephen-lazarionok/async-resource-loader\" rel=\"nofollow\">https://github.com/stephen-lazarionok/async-resource-loader</a>. It has an example that shows how to load JS, CSS and multiple files with one shot.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am using several plugins, custom widgets and some other libraries from JQuery. as a result I have several .js and .css files. I need to create a loader for my site because it takes some time to load. it will be nice if I can display the loader before importing all the:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"js/jquery-1.6.2.min.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"js/myFunctions.js\"&gt;&lt;/script&gt;\n&lt;link type=\"text/css\" href=\"css/main.css\" rel=\"stylesheet\" /&gt;\n... \n....\n etc\n</code></pre>\n\n<p>I have found several tutorials that enable me to import a JavaScript library asynchronously. for example I can do something like:</p>\n\n<pre><code>  (function () {\n        var s = document.createElement('script');\n        s.type = 'text/javascript';\n        s.async = true;\n        s.src = 'js/jquery-ui-1.8.16.custom.min.js';\n        var x = document.getElementsByTagName('script')[0];\n        x.parentNode.insertBefore(s, x);\n    })();\n</code></pre>\n\n<p>for some reason when I do the same thing for all my files the pages does not work. I have been trying for so long to try to find where the problem is but I just cannot find it. First I thought that it was probably because some javascript functions depended on the others. but I loaded them in the right order using the time out function when one completed I proceeded with the next and the page still behaves weird. for example I am not able to click on links etc... animations still work though..</p>\n\n<h2>Anyways</h2>\n\n<p>Here is what I have been thinking... I believe browsers have a cache that's why it takes a long time to load the page for the first time and the next time it is quick. so what I am thinking of doing is replacing my index.html page with a page that loads all this files asynchronously. when ajax is done loading all those files redirect to the page that I plan on using. when using that page it should not take long to load since the files should alredy be included on the cache of the browser. on my index page (page where .js and .css file get loaded asynchronously) I don't care of getting errors. I will just be displaying a loader and redirecting the page when done... </p>\n\n<p>Is this idea a good alternative? or should I keep trying on implementing the asynchronously methods?</p>\n\n<hr>\n\n<h2>EDIT</h2>\n\n<p>the way I load everything async is like:</p>\n\n<pre><code>importScripts();\n\nfunction importScripts()\n{\n    //import: jquery-ui-1.8.16.custom.min.js\n    getContent(\"js/jquery-1.6.2.min.js\",function (code) {\n                var s = document.createElement('script');\n                s.type = 'text/javascript';\n                //s.async = true;\n                s.innerHTML=code;\n                var x = document.getElementsByTagName('script')[0];\n                x.parentNode.insertBefore(s, x);\n                setTimeout(insertNext1,1);\n            });\n\n\n    //import: jquery-ui-1.8.16.custom.min.js\n    function insertNext1()\n    {\n        getContent(\"js/jquery-ui-1.8.16.custom.min.js\",function (code) {\n                    var s = document.createElement('script');\n                    s.type = 'text/javascript';\n                    s.innerHTML=code;\n                    var x = document.getElementsByTagName('script')[0];\n                    x.parentNode.insertBefore(s, x);\n                    setTimeout(insertNext2,1);\n                });\n    }\n\n    //import: jquery-ui-1.8.16.custom.css\n    function insertNext2()\n    {\n\n        getContent(\"css/custom-theme/jquery-ui-1.8.16.custom.css\",function (code) {\n                    var s = document.createElement('link');\n                    s.type = 'text/css';\n                    s.rel =\"stylesheet\";\n                    s.innerHTML=code;\n                    var x = document.getElementsByTagName('script')[0];\n                    x.parentNode.insertBefore(s, x);\n                    setTimeout(insertNext3,1);\n                });\n    }\n\n    //import: main.css\n    function insertNext3()\n    {\n\n        getContent(\"css/main.css\",function (code) {\n                    var s = document.createElement('link');\n                    s.type = 'text/css';\n                    s.rel =\"stylesheet\";\n                    s.innerHTML=code;\n                    var x = document.getElementsByTagName('script')[0];\n                    x.parentNode.insertBefore(s, x);\n                    setTimeout(insertNext4,1);\n                });\n    }\n\n    //import: jquery.imgpreload.min.js\n    function insertNext4()\n    {\n        getContent(\"js/farinspace/jquery.imgpreload.min.js\",function (code) {\n                    var s = document.createElement('script');\n                    s.type = 'text/javascript';\n                    s.innerHTML=code;\n                    var x = document.getElementsByTagName('script')[0];\n                    x.parentNode.insertBefore(s, x);\n                    setTimeout(insertNext5,1);\n                });\n    }\n\n\n    //import: marquee.js\n    function insertNext5()\n    {\n        getContent(\"js/marquee.js\",function (code) {\n                    var s = document.createElement('script');\n                    s.type = 'text/javascript';\n                    s.innerHTML=code;\n                    var x = document.getElementsByTagName('script')[0];\n                    x.parentNode.insertBefore(s, x);\n                    setTimeout(insertNext6,1);\n                });\n    }\n\n\n    //import: marquee.css\n    function insertNext6()\n    {\n\n        getContent(\"css/marquee.css\",function (code) {\n                    var s = document.createElement('link');\n                    s.type = 'text/css';\n                    s.rel =\"stylesheet\";\n                    s.innerHTML=code;\n                    var x = document.getElementsByTagName('script')[0];\n                    x.parentNode.insertBefore(s, x);\n                    setTimeout(insertNext,1);\n                });\n    }\n\n\n\n    function insertNext()\n    {\n        setTimeout(pageReadyMan,10);        \n    }\n}\n\n\n// get the content of url and pass that content to specified function\nfunction getContent( url, callBackFunction )\n{\n     // attempt to create the XMLHttpRequest and make the request\n     try\n     {\n        var asyncRequest; // variable to hold XMLHttpRequest object\n        asyncRequest = new XMLHttpRequest(); // create request object\n\n        // register event handler\n        asyncRequest.onreadystatechange = function(){\n            stateChange(asyncRequest, callBackFunction);\n        } \n        asyncRequest.open( 'GET', url, true ); // prepare the request\n        asyncRequest.send( null ); // send the request\n     } // end try\n     catch ( exception )\n     {\n        alert( 'Request failed.' );\n     } // end catch\n} // end function getContent\n\n// call function whith content when ready\nfunction stateChange(asyncRequest, callBackFunction)\n{\n     if ( asyncRequest.readyState == 4 &amp;&amp; asyncRequest.status == 200 )\n     {\n           callBackFunction(asyncRequest.responseText);\n     } // end if\n} // end function stateChange\n</code></pre>\n\n<p>and the weird part is that all the style's work plus all the javascript functions. the page is frozen for some reason though...</p>\n",
            "last_activity_date": 1425592220,
            "question_id": 7718935,
            "score": 30,
            "tags": [
                "javascript",
                "html",
                "ajax",
                "html5",
                "asynchronous"
            ],
            "title": "load scripts asynchronously"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This is something everyone did once upon a time before the introduction of cometd and nodejs. </p>\n\n<p>The issue as I see it is PHP requests on Apache are very expensive. If your chat application checks for messages every second you will find yourself in a situation where Apache does not have enough resources to respond to requests. The other area I think needs improvement is to improve the context of your chat application. </p>\n\n<p>Why does it update every second if not to retrieve new messages? \nWhat if there are no messages?</p>\n\n<p>Some techniques you can use;</p>\n\n<ul>\n<li><p>Provide a light-weight endpoint to your clients that has some context about the chat session, is a new message pending, how many messages etc. The client can respond to this by updating immediately or not if there are no new messages. This endpoint can provide a simple json object via http request. You are guaranteed that this status message will be a fixed size and if the response of the status does not change you can decay it. See next message. </p></li>\n<li><p>A simple decay in your javascript polling, if the client receives the same response from the server a few times in a row you can increment the poll by a set time, at present you said it was every second. If you did this you would increment to every 2,4,6,8,10 seconds. As soon as the response from the server changes you reset the decay.</p></li>\n</ul>\n\n<p>Some optimizations to consider;</p>\n\n<ul>\n<li><p>Use a PHP Opcode cache like APC.</p></li>\n<li><p>Set a low timeout on all requests, you do not want any requests to hang your server.</p></li>\n<li><p>Optimize your PHP code, make it lean and fast.</p></li>\n<li><p>Run some load tests to see what your limits are. </p></li>\n<li><p>Benchmark performance often to make sure your applications is getting faster.</p></li>\n<li><p>Check apache logs for tell tale signs of overall health of the application and response times.</p></li>\n</ul>\n\n<p>When scaling becomes necessary, add a new server and use a load balancer to distribute requests. I have used Varnish and HAProxy with great success, setting them up is not complicated either. </p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>If i were you i'd pick a library that uses html5 web sockets yet falls back on flash sockets if html5 isn't available, the browser that fall through the crack should be minute.</p>\n\n<p>Also you should either abandon php or supplement it with a threaded socket server written either in python or ruby with em-websocket.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A few notes:</p>\n\n<ul>\n<li>Polling every second is overkill. The app will still feel very responsive with a few seconds of delay between checks. </li>\n<li>To save your db's traffic and speed responses, consider using an in memory cache to store undelivered messages. You could still persist messages to the db, the in memory cache would simply be used for queries for new messages to avoid queries to the db every x seconds by each user.</li>\n<li>Timeout the user's chat after x seconds of inactivity to stop polling to your server. This assures someone leaving a window open won't continue to generate traffic. Offer a simple \"Still there? Continue chatting.\" link for sessions that timeout and warn the user before the timeout so they can extend the timeout.</li>\n<li>I'd suggest starting out with polling rather than comet/long polling/sockets. Polling is simple to build and support and will likely scale just fine in the short-term. If you get a lot of traffic you can throw hardware and a load balancer at the problem to scale. The entire web is based on polling - polling most certainly scales. There's a point where the complexity of alternatives like comet/long polling/etc make sense, but you need a lot of traffic before the extra development time/complexity are justified.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 29
                }
            ],
            "body": "<p>I run a website where users can chat with each other through the browser (think Facebook chat). What is the best way to handle the live interaction? (Right now I have a poll going every 30 seconds to update online users and new incoming messages, and another poll going on chat pages every second to get new messages.)</p>\n\n<p>Things I've considered:</p>\n\n<ul>\n<li>HTML5 Web Sockets: didn't use this because it doesn't work in all browsers (only chrome).</li>\n<li>Flash Sockets: didn't use this because I wanted to eventually support mobile web.</li>\n</ul>\n\n<p>Right now, I am using short polling because I don't know how scalable AJAX long polling would be. I'm running a VPS server from servint right now (running apache). Should I use long polling or short polling? I don't need absolutely immediate response times (just \"good enough\" for a chat app). Is short polling this often with a few hundred-thousand users going to kill my server? How do I scale this, please help!</p>\n",
            "last_activity_date": 1351426569,
            "question_id": 5313641,
            "score": 27,
            "tags": [
                "php",
                "javascript",
                "ajax",
                "sockets"
            ],
            "title": "Scaling a chat app - short polling vs. long polling (AJAX, PHP)"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The CLSID for the Chakra Javascript engine installed with IE9 is<br>\n<code>{16d51579-a30b-4c8b-a276-0ff4dc41e755}</code>.  </p>\n\n<p>The InProcServer32 is <code>%windir%\\System32\\jscript9.dll</code>  .</p>\n\n<p>There is no ProgId that I could find.  That's a bit odd; normally paired ProgId and CLSID entries refer to each other.  For a given COM object, the ProgId key in the registry has a subkey called CLSID, and the CLSID registry key has a subkey called ProgId, and they refer to each other.   But the ProgId subkey for the IE9 CLSID is \"JScript\", which of course refers to the v5.8 Jscript CLSID.  Not sure if this was a mistake by Microsoft, or a purposeful bit of obfuscation, because they don't want anyone using the Chakra engine outside of IE9. Looks purposeful to me. </p>\n\n<hr>\n\n<p>I learned of the CLSID by just searching the registry for jscript9.dll . </p>\n\n<hr>\n\n<p>If you have .NET code that hosts scripting engines, you can instantiate the IActiveScript object for the IE9 javascript engine (\"Chakra\") by using the CLSID directly.  The code needs to be something like this: </p>\n\n<pre><code>private const string clsIdPattern =\n    @\"^(?&lt;curly&gt;\\{)?[a-zA-Z0-9]{8}(?:-[a-zA-Z0-9]{4}){3}-[a-zA-Z0-9]{12}(?(curly)\\})$\";\n\npublic ScriptEngine(string language)\n{\n    if (language == null)\n        throw new ArgumentNullException(\"language\");\n\n    Type engineType = null;\n\n    if (Regex.IsMatch(language, clsIdPattern))\n    {\n        // it's a CLSID\n        var guid = new System.Guid(language);\n        engineType = Type.GetTypeFromCLSID(guid, true);\n    }\n    else\n    {\n        // assume vanilla progId\n        engineType = Type.GetTypeFromProgID(language, true);\n    }\n\n    var engine = Activator.CreateInstance(engineType) as IActiveScript;\n</code></pre>\n\n<p>In the above, <code>clsIdPattern</code> is a regular expression that matches the familiar GUID format, either with or without surrounding curlies. </p>\n\n<p>Given the code above, you could pass \"jscript\",  \"Javascript\", or \"ECMAScript\" and get the v5.8 JScript engine.  Or you could pass \"{16d51579-a30b-4c8b-a276-0ff4dc41e755}\" and get the IE9 Javascript engine.  Obviously you need to have IE9 installed in order for this to work. </p>\n\n<p>I just tried this and it works for simple cases. I'll be playing with that some more, real soon. </p>\n\n<hr>\n\n<p>If you want to run Chakra from WSH, like from cscript.exe, then you will need a ProgId, I think.<br>\nIf I create \"Chakra\" as a Progid in the registry, referring to the correct CLSID, I can run JS files through IE9's engine like this: </p>\n\n<pre><code>cscript.exe  module.js  //E:Chakra \n</code></pre>\n\n<p>For example, after inserting the new \"Chakra\" ProgId, given a script like this: </p>\n\n<pre><code>WScript.Echo( ScriptEngineMajorVersion() + \".\" +\n              ScriptEngineMinorVersion() + \".\" +\n              ScriptEngineBuildVersion());\n</code></pre>\n\n<p>...the output is like this:</p>\n\n<pre><code>C:\\dev\\js&gt;Version.js\n5.8.16982\n\nC:\\dev\\js&gt;cscript.exe Version.js  //E:Chakra\n9.0.16434\n</code></pre>\n\n<p>And here's the result of a test of AES encryption in Javascript, comparing Chakra with JScript 5.8:  </p>\n\n<pre><code>C:\\dev\\js\\SlowAES&gt;cscript.exe test.aes.js\nAES encryption in Javascript.\npassword  : Albatros1\nsalt      : saltines (73616c74696e6573)\niterations: 1000\nkey       : 172,52,20,51,98,71,49,195,14,31,141,51,129,8,94,66\niv        : 212,27,28,156,83,245,0,35,176,157,45,141,209,143,158,248\nplaintext : Hello, /r/javascript.\nciphertext: fdebac9f1ed1a13bac58f3cc6558e8b0367a94245dbbfe53cacc4979799fc182\ndecrypted : Hello, /r/javascript.\nelapsed   : 5011ms\n\nC:\\dev\\js\\SlowAES&gt;cscript.exe test.aes.js //E:Chakra\nAES encryption in Javascript.\npassword  : Albatros1\nsalt      : saltines (73616c74696e6573)\niterations: 1000\nkey       : 172,52,20,51,98,71,49,195,14,31,141,51,129,8,94,66\niv        : 212,27,28,156,83,245,0,35,176,157,45,141,209,143,158,248\nplaintext : Hello, /r/javascript.\nciphertext: fdebac9f1ed1a13bac58f3cc6558e8b0367a94245dbbfe53cacc4979799fc182\ndecrypted : Hello, /r/javascript.\nelapsed   : 2593ms\n</code></pre>\n\n<hr>\n\n<p>To set the ProgId in my registry, I used this:</p>\n\n<pre><code>Windows Registry Editor Version 5.00\n\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{16d51579-a30b-4c8b-a276-0ff4dc41e755}\\ProgID]\n@=\"Chakra\"\n\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Wow6432Node\\CLSID\\{16d51579-a30b-4c8b-a276-0ff4dc41e755}\\ProgID]\n@=\"Chakra\"\n\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Chakra]\n@=\"JScript Language\"\n\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Chakra\\CLSID]\n@=\"{16d51579-a30b-4c8b-a276-0ff4dc41e755}\"\n\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Chakra\\OLEScript]\n</code></pre>\n\n<p>and to unexpose Chakra, or revert the registry, I did this: </p>\n\n<pre><code>Windows Registry Editor Version 5.00\n\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{16d51579-a30b-4c8b-a276-0ff4dc41e755}\\ProgID]\n@=\"JScript\"\n\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Wow6432Node\\CLSID\\{16d51579-a30b-4c8b-a276-0ff4dc41e755}\\ProgID]\n@=\"JScript\"\n\n[-HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Chakra]\n</code></pre>\n\n<p>This registry script worked with x64 Windows; if you don't have x64, then you'll need to remove the WOW6432Node lines.  </p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>Might be a bit late, but:</p>\n\n<p>You can also simply specify the CLSID of the engine you want to use via the //E argument:</p>\n\n<pre>cscript.exe  &lt;file&gt;  //E:{16d51579-a30b-4c8b-a276-0ff4dc41e755}</pre>\n\n<p><b>Edit:</b> According to Cheeso's answer I found that it is enough to add the following registry entries to be able to use jscript9 without specifying the CLSID. I use the key name <em>JScript9</em> here, you may replace it with <em>Chakra</em> if you like. The key name is what you specify after //E: then:</p>\n\n<pre>\nWindows Registry Editor Version 5.00\n\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\JScript9]\n@=\"JScript9 Language\"\n\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\JScript9\\CLSID]\n@=\"{16d51579-a30b-4c8b-a276-0ff4dc41e755}\"\n\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\JScript9\\OLEScript]\n\n</pre>\n\n<p>And then:</p>\n\n<pre>cscript.exe  &lt;file&gt;  //E:JScript9</pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can now call the Chakra runtime directly through published api's and you don't have to use IActiveScript anymore.</p>\n\n<p>Here is an article on MSDN showing how to host the Chakra runtime in C++ or C#:</p>\n\n<p><a href=\"http://code.msdn.microsoft.com/windowsdesktop/JavaScript-Runtime-Hosting-d3a13880\" rel=\"nofollow\">http://code.msdn.microsoft.com/windowsdesktop/JavaScript-Runtime-Hosting-d3a13880</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Using .NET, I can write an app that hosts a scripting engine that complies with Microsoft's IActiveScript conventions.  This includes JScript and VBScript from Microsoft, and also PerlScript, RubyScript and <a href=\"http://en.wikipedia.org/wiki/Windows_Script_Host#Available_Scripting_Engines\">I don't know what else from third-parties</a>. </p>\n\n<p>The way to do it in code is something like this: </p>\n\n<pre><code>    Type engine = Type.GetTypeFromProgID(progId, true);\n    _engine = Activator.CreateInstance(engine) as IActiveScript;\n</code></pre>\n\n<p>where the <code>progId</code> can take the value Javascript, JScript, ECMAScript, VBScript, and others. You can do something similar when running cscript.exe, specifying the progId on the command line with the <code>//E</code> option.  For example, this command: </p>\n\n<pre><code>cscript.exe  &lt;file&gt;  //e:JScript\n</code></pre>\n\n<p>..will run the specified file, regardless of its extension, through the JScript engine. </p>\n\n<p>On my machine, if I look in <code>HKLM\\SW\\Classes\\</code> , the three progIds {Javascript, JScript, ECMAScript} all point to the same CLSID, which I guess is the JScript 5.8 script engine: <code>{f414c260-6ac0-11cf-b6d1-00aa00bbbb58}</code></p>\n\n<p>Is there a ProgId or CLSID I can specify to run IE9's Javascript engine, aka \"Chakra\"?  </p>\n\n<p>Does IE9's engine still get loaded by IActiveScript?<br>\n<a href=\"http://msdn.microsoft.com/en-us/library/xawadt95%28v=VS.94%29.aspx\">Microsoft's documentation suggests that it does</a>, but does not specify a ProgId or CLSID.</p>\n",
            "last_activity_date": 1389889523,
            "question_id": 7167690,
            "score": 16,
            "tags": [
                "javascript",
                ".net",
                "cscript",
                "chakra",
                "iactivescript"
            ],
            "title": "What is the ProgId or CLSID for IE9&#39;s Javascript engine (code-named &quot;Chakra&quot;)"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>It may not work in cases when execution context changed from console to any other object:</p>\n\n<blockquote>\n  <p>This is expected because console.info expects its \"this\" reference to\n  be console, not window.</p>\n\n<pre><code>console.info(\"stuff\")\nstuff\nundefined\nconsole.info.call(this, \"stuff\")\nTypeError: Illegal invocation\nconsole.info.call(console, \"stuff\")\nstuff\nundefined\n</code></pre>\n  \n  <p>This behavior is expected.</p>\n</blockquote>\n\n<p><a href=\"http://code.google.com/p/chromium/issues/detail?id=48662\">http://code.google.com/p/chromium/issues/detail?id=48662</a></p>\n",
                    "is_accepted": true,
                    "score": 99
                }
            ],
            "body": "<p>If you run this in the console;</p>\n\n<pre><code>console.log.apply(null, [array])\n</code></pre>\n\n<p>Chrome gives you back an error:</p>\n\n<pre><code>// TypeError: Illegal Invocation\n</code></pre>\n\n<p>Why? <em>(Tested on OS X Chrome 15)</em></p>\n",
            "last_activity_date": 1417222892,
            "question_id": 8159233,
            "score": 67,
            "tags": [
                "javascript",
                "google-chrome",
                "console",
                "apply"
            ],
            "title": "typeerror illegal invocation on console.log.apply"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<h1>Discussions</h1>\n\n<p>Most active and extensive discussions on StackExchange sites on this topic:</p>\n\n<ul>\n<li><a href=\"http://programmers.stackexchange.com/questions/26179/why-do-people-disable-javascript\">P.SE's <em>Why do People disable JavaScript?</em></a></li>\n<li><a href=\"http://webmasters.stackexchange.com/questions/4733/should-i-worry-about-people-disabling-javascript\">W.SE's <em>Should I Worry About People Disabling JavaScript?</em></a> </li>\n<li><a href=\"http://webmasters.stackexchange.com/questions/1115/can-we-ignore-visitors-without-javascript-enabled\">W.SE's <em>Can We Ignore Visitors Without JavaScript Enabled?</em></a> </li>\n<li><a href=\"http://programmers.stackexchange.com/questions/25969/should-i-bother-to-develop-for-javascript-disabled\">P.SE's <em>Should I Bother To Developer For JavaScript Disabled?</em></a></li>\n<li><a href=\"http://ux.stackexchange.com/questions/15140/is-it-ok-to-require-certain-users-to-have-javascript-enabled\">UX.SE's <em>Is It OK to Require Certains Users to Have JavaScript Enabled?</em></a> <em>(credit goes to <a href=\"http://stackoverflow.com/users/411495/ward-muylaert\">Ward Muylaert</a> for digging this one up)</em></li>\n</ul>\n\n<h3>Additional Links</h3>\n\n<ul>\n<li><a href=\"http://www.punkchip.com/2011/03/why-support-javascript-disabled/\"><em>Why Support JavaScript Disabled?</em></a> (PunkChip, 2011)</li>\n</ul>\n\n<h1>Stats</h1>\n\n<p>You're right... These are pretty hard to come to. Could actually only find the ones you mentioned, the YDN 2010 article being referenced quite often.</p>\n\n<p><em>I guess you could also use a traffic tracking and analysis suite to verify these stats on your own, if you have a site with sufficient traffic and the relevant demographic you are aiming for.</em></p>\n\n<h1>Personal Thoughts</h1>\n\n<p><strong>In my personal opinion</strong>, it's fair enough to require some very specific areas of a site to require JavaScript, but you should try as much as possible to provide an alternative if that's the case. For the rest of the site, I consider that, especially for government and educational websites, you have a duty towards minorities like disabled people and visually-impaired people to make the web readable and usable for them as for any other user.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Give the basic info, with a clear route for how to go further - update your browser!</p>\n\n<p>I think sacrificing functionality for 99% of users to accommodate 1% is sheer bloody mindedness. </p>\n\n<p>Sure, it is possible to allow for non-javascript enabled content for every aspect of a website, plus provide the optimal experience -  but the budget is going to sky-rocket for the build.</p>\n\n<p>There's some <em>seriously</em> awesome stuff going down with Javascript which actually makes sites far more accessible! - where do we draw the line here?</p>\n\n<p>\"Sorry, your computer is too old and slow to render this website.\" OR</p>\n\n<p>\"Sorry, 99.9% of the planet, we've presented you with a sub-optimal 1993 experience because 0.1% of you have outdated tech\"</p>\n\n<p>I don't buy the '1%' is important argument - if someone <em>Really</em> wants to access a website, they'll find a way - plus those instances where companies are forced to use, say, ie7 with javascript turned off - heck, they probably aren't allowed to browse anything but the corporate intranet anyway!</p>\n\n<p>Time to get off this dumb old idea you need to have a non-javascript option for everything on your website, it really is an outdated concept. </p>\n",
                    "is_accepted": false,
                    "score": 58
                },
                {
                    "body": "<p>Such statistics can only ever be useful for a specific site, and even then, there are cases hard to interpret:</p>\n\n<ul>\n<li>What about users that execute some, but not all scripts of a site?</li>\n<li>What about users that don\u2019t execute scripts of a site most of the time, but <em>occasionally</em> execute all/some?</li>\n</ul>\n\n<p>I have JavaScript disabled on almost all sites I visit. Sometimes I allow JS <em>temporary</em>, sometimes not at all. Sometimes I only allow <em>some</em> scripts temporary. Some scripts are allowed permanently, some scripts are disallowed permanently. Right now, typing this answer, some scripts on SO are blocked, some are allowed. How should statistics count me?</p>\n\n<p>Other factors to consider:</p>\n\n<ul>\n<li>Sites that require JS, even if only for some parts, can only gather biased statistics, as they have probably already put off the no-JS visitors in the past.</li>\n<li>If your site is JS-free, you gather statistics, and then start to add JS, blacklisters (which had JS enabled before) might block (some of) your scripts.</li>\n<li>No-JS visitors are probably more sensitive to privacy, so it\u2019s likely that they are taking other measures in addition \u2026  they might look like bots in site statistics ;)</li>\n<li>Site topic (what is your audience like and interested in?), browser stats (<a href=\"https://addons.mozilla.org/en-US/firefox/addon/noscript/\" rel=\"nofollow\">NoScript</a> is one of the <a href=\"https://addons.mozilla.org/en-US/firefox/extensions/?sort=users\" rel=\"nofollow\">most popular</a> Firefox add-ons.), country (The German <a href=\"http://en.wikipedia.org/wiki/Federal_Office_for_Information_Security\" rel=\"nofollow\">Federal Office for Information Security</a> strongly <a href=\"https://www.bsi-fuer-buerger.de/BSIFB/DE/SicherheitImNetz/SozialeNetze/Basisschutz/SicherePC/sicherepc_node.html\" rel=\"nofollow\">recommends</a> all citizens to install NoScript.) and also available competition on the market (if your site is unique and I really want to use it, I\u2019ll allow scripts; otherwise, I go to your competitor) might have a strong influence. </li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>These stats are from one site but its a good, up-to-date number and also considers JavaScript disabled vs. JavaScript 'not received or run'.</p>\n\n<p><a href=\"https://gds.blog.gov.uk/2013/10/21/how-many-people-are-missing-out-on-javascript-enhancement/\">https://gds.blog.gov.uk/2013/10/21/how-many-people-are-missing-out-on-javascript-enhancement/</a></p>\n\n<p>In the interests of link-rot, the number was 1.1% with 0.9% of that where it was enabled in the browser but otherwise not run, due to reasons guessed to be things like corporate content filters, mobile network errors, and even page-preloading.</p>\n\n<p>If we could find out what constitutes that 0.9% and how much is not a human sitting at an intentionally JS-disabled browser, then the effort and cost of investing in progressive enhancement/graceful degradation could be weakened.</p>\n\n<p>In any case, it looks to be a tiny proportion.</p>\n\n<p>Personally, my own opinion is that in 2014, it isn't worth the overhead to support this minority. I think its a bit like designing a door handle with consideration for the small minority of people have their hands full and need to use their foot, or just don't like touching door handles with their hands. Ugh, yucky JavaScript.</p>\n\n<p>Although progressive enhancement is dead to me, I do think JS should be used sparingly, unless its a single-page app.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>This is a bit old question, but a very important one: that's why i decided to give my two cents about it. I, for sure, prefer to use Javascript in my sites, so that i'm able to present the user a more friendly (and visually nice) interface. But this is just an opinion. </p>\n\n<p>Should i think about the problem from a more general point of view, i find the need to change the question in these terms: \"Do the content i'm going to publish need to be more leaned toward information or graphics?\"</p>\n\n<p>So, with that question in mind, i come across this sort of \"guidelines\":</p>\n\n<ul>\n<li>If i want the user to get to the information as soon as possible, without pretty fancy buttons and sliding content, then i really should build the site so that even those without javascript can fully access it (this can also be true for SEO-friendly sites)</li>\n<li>If, on the other side, i want to present the user a very nice interface, fully responsive and ajax-based contents, well, i'll forget someone doesn't have js enabled</li>\n<li>The two points above are -not- mutually exclusive: they can easily co-exist on the same website. For example, you could have a blog section, which should be focused on contents (so that search engines crawlers can find it easily) and an \"app\" section, that doesn't care about crawlers (an online calculator doesn't need to be indexed, does it?)</li>\n</ul>\n\n<p>:)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am having a hard time  collecting publically available statistics on the percentage of web users that browse with JavaScript disabled.</p>\n\n<p><a href=\"http://developer.yahoo.com/blogs/ydn/posts/2010/10/how-many-users-have-javascript-disabled/\">Yahoo has published data from 2010</a> and <a href=\"http://blog.strictly-software.com/2009/09/javascript-usage-browser-breakdown.html\">R. Reid published data from 2009</a> (picked from a site he had access to). </p>\n\n<p>The findings from Yahoo were rather interesting at that time:</p>\n\n<blockquote>\n  <p>We took a combination of access logs and beacon data (previously\n  included in the page) and filtered out all of the automated requests,\n  leaving us with a set of requests we could confirm were sent by actual\n  users. This data, which is completely anonymous, gave us a good\n  indication of traffic patterns in several countries.</p>\n  \n  <p>After crunching the numbers, we found a consistent rate of\n  JavaScript-disabled requests hovering around 1% of the actual visitor\n  traffic, with the highest rate being roughly 2 percent in the United\n  States and the lowest being roughly 0.25 percent in Brazil. All of the\n  other countries tested showed numbers very close to 1.3 percent.</p>\n  \n  <p><img src=\"http://i.stack.imgur.com/fpIkl.jpg\" alt=\"Yahoo browser percentage with JavaScript disabled, 2010\"></p>\n</blockquote>\n\n<p>This is about what i could find so far. But since this data is getting old, i wonder where the percentages are today. </p>\n\n<p>I also looked at <a href=\"http://gs.statcounter.com/\">Statcounter</a>, which seems to be the only company left to still openly publish browser statistics. But they do not publish data about javascript. I know that <a href=\"http://www.w3schools.com/browsers/browsers_stats.asp\">W3schools also publish stats</a>, but since the target is aimed at developers, this data is extremely biased and therefore not interesting for me. (it has to be representative for ordinary users).</p>\n\n<p>I therefore ask you to provide</p>\n\n<ul>\n<li>links to any open, freely available statistics which touches this area</li>\n<li>Your own stats, preferably from larger sites with do not target developers</li>\n</ul>\n",
            "last_activity_date": 1403997379,
            "question_id": 9478737,
            "score": 56,
            "tags": [
                "javascript",
                "statistics",
                "cross-browser"
            ],
            "title": "Browser statistics on JavaScript disabled"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><strong>Yes</strong>, always! So this way even if your minifer converts $scope to variable a and $http to variable b, their <strong>identity is still preserved</strong> in the strings.</p>\n\n<p>AngularJS docs -> <a href=\"http://docs.angularjs.org/tutorial/step_05\" rel=\"nofollow\">http://docs.angularjs.org/tutorial/step_05</a> . Scroll down to <strong>A Note on Minification</strong>.</p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>Alternatively, you can use <a href=\"https://github.com/olov/ng-annotate\" rel=\"nofollow\">ng-annotate</a> npm package in your build process to avoid this verbosity.</p>\n",
                    "is_accepted": true,
                    "score": 44
                },
                {
                    "body": "<p>It is safer to use the second variant but it is also possible to use the first variant safely with <a href=\"https://github.com/btford/ngmin\">ngmin</a>.</p>\n\n<p><strong>UPDATE:</strong><br>\nNow <a href=\"https://github.com/olov/ng-annotate\">ng-annotate</a> becomes a new default tool to solve this issue.</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p><strong>Just to point out that if you use</strong> </p>\n\n<p><a href=\"http://yeoman.io/\" rel=\"nofollow\">Yeoman</a></p>\n\n<p>there is no need to do like</p>\n\n<pre><code>var MyController = ['$scope', '$http', function($scope, $http) {\n  $http.get('https://api.github.com/repos/angular/angular.js/commits')\n    .success(function(commits) {\n      $scope.commits = commits\n    })\n}]\n</code></pre>\n\n<p>because  grunt during minify take into account how to manage DI.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Like OZ_ said, Use ngmin to minify all angular js file, like directive.js service.js. After that you can use Closure compiler to optimize it. </p>\n\n<p>ref: </p>\n\n<p><a href=\"http://chrislarson.me/blog/how-minify-angularjs-scripts\" rel=\"nofollow\">How to minify angularjs scripts</a></p>\n\n<p><a href=\"http://chrislarson.me/blog/angularjs-yeoman-grunt-and-bower\" rel=\"nofollow\">Build with YO</a> </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yes, you need to use <strong>explicit</strong> dependency injection (second variant). But since <a href=\"https://docs.angularjs.org/guide/di\" rel=\"nofollow\">Angular 1.3.1</a> you can <strong>turn off implicit</strong> dependency injection, it's really helpful to solve potential problems with renaming at once (before minification).</p>\n\n<p>Turning off implicit DI, using <code>strictDi</code> config property:</p>\n\n<pre><code>angular.bootstrap(document, ['myApp'], {\n    strictDi: true\n});\n</code></pre>\n\n<p>Turning off implicit DI, using <code>ng-strict-di</code> directive:</p>\n\n<pre><code>&lt;html ng-app=\"myApp\" ng-strict-di&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm reading  <a href=\"http://www.alexrothenberg.com/2013/02/11/the-magic-behind-angularjs-dependency-injection.html\">http://www.alexrothenberg.com/2013/02/11/the-magic-behind-angularjs-dependency-injection.html</a> and\nit turned out that angularjs dependency injection has problems if you minify your javascript\nso I'm wondering if instead of </p>\n\n<pre><code>var MyController = function($scope, $http) {\n    $http.get('https://api.github.com/repos/angular/angular.js/commits')\n      .success(function(commits) {\n        $scope.commits = commits\n      })\n  }\n</code></pre>\n\n<p>you should use </p>\n\n<pre><code>var MyController = ['$scope', '$http', function($scope, $http) {\n  $http.get('https://api.github.com/repos/angular/angular.js/commits')\n    .success(function(commits) {\n      $scope.commits = commits\n    })\n}]\n</code></pre>\n\n<p>all in all I thought the second snippet was for the old version of angularjs but ....</p>\n\n<p>Should I always use the inject way (the second one) ?</p>\n",
            "last_activity_date": 1422032844,
            "question_id": 18782324,
            "score": 43,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "Angularjs minify best practice"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Have you tried actually adding the Access-Control-Allow-Origin header to the response sent from your server? Like, <code>Access-Control-Allow-Origin: *</code>?</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>put it on top of retrieve.php</p>\n\n<pre><code> header('Access-Control-Allow-Origin: *');  \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 98
                },
                {
                    "body": "<p>I have fixed this problem when calling a MVC3 Controller.\nI added:</p>\n\n<pre><code>Response.AddHeader(\"Access-Control-Allow-Origin\", \"*\"); \n</code></pre>\n\n<p>before my</p>\n\n<pre><code>return Json(model, JsonRequestBehavior.AllowGet);\n</code></pre>\n\n<p>And also my <code>$.ajax</code> was complaining that it does not accept <strong>Content-type</strong> header in my ajax call, so I commented it out as I know its JSON being passed to the Action.</p>\n\n<p>Hope that helps.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Okay, but you all know that the * is a wildcard and allows cross site scripting from every domain?</p>\n\n<p>Why not put in a list with your own, trusted domains (and protocols);</p>\n\n<pre><code> header('Access-Control-Allow-Origin: http://mysite1.com');\n header('Access-Control-Allow-Origin: http://example.com');\n header('Access-Control-Allow-Origin: https://www.mysite2.com');\n header('Access-Control-Allow-Origin: http://www.mysite2.com');\n</code></pre>\n\n<p>Thats much safer.</p>\n",
                    "is_accepted": false,
                    "score": 66
                },
                {
                    "body": "<p>best would be to allow single domains, be careful about the http:// :</p>\n\n<pre><code>     header('Access-Control-Allow-Origin: http://www.foo.com');\n     header('Access-Control-Allow-Origin: http://www.foo2.com');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Works like charm to me in my mobile version:</p>\n\n<p>From <a href=\"http://m.example.com\" rel=\"nofollow\">http://m.example.com</a> was not able to reach a .php from my <a href=\"http://example.com\" rel=\"nofollow\">http://example.com</a></p>\n\n<p>So I modify my .php like this:</p>\n\n<pre><code>header('Access-Control-Allow-Origin: http://m.example.com');\n</code></pre>\n\n<p>Works awesome! Thanks</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>i'm doing a ajax call to my own server on a platform which they set prevent these ajax calls (but i need it to fetch the data from my server to display retrieved data from my server's database).\nMy ajax script is working , it can send the data over to my server's php script to allow it to process.\nHowever it cannot get the processed data back as it is blocked by \"Access-Control-Allow-Origin\"</p>\n\n<p>I have no access to that platform's source/core. so i can't remove the script that it disallowing me to do so.\n(P/S i used Google Chrome's Console and found out this error)</p>\n\n<p>The Ajax code as shown below:</p>\n\n<pre><code> $.ajax({\n     type: \"GET\",\n     url: \"http://mysite.com/retrieve.php\",\n     data: \"id=\" + id + \"&amp;url=\" + url,\n     dataType: 'json',   \n     cache: false,\n     success: function(data)\n      {\n        var friend = data[1];              \n        var blog = data[2];           \n        $('#user').html(\"&lt;b&gt;Friends: &lt;/b&gt;\"+friend+\"&lt;b&gt;&lt;br&gt; Blogs: &lt;/b&gt;\"+blog);\n\n      } \n  });\n</code></pre>\n\n<p>or is there a JSON equivalent code to the ajax script above ?  i think JSON is allowed.</p>\n\n<p>I hope someone could help me out. </p>\n\n<p>Thanks and have a wonderful day ! </p>\n",
            "last_activity_date": 1410829533,
            "question_id": 7564832,
            "score": 41,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "ajax",
                "json"
            ],
            "title": "how to bypass Access-Control-Allow-Origin?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can parse it in a regex to get the parts as matches... I don't have the full code right now, but this can be used to get the querydata:</p>\n\n<pre><code>var myUrl = window.location.href;\nvar matches = myUrl.match(/([^\\?]+)\\?(.+)/);\nvar queryData = matches[2];\n</code></pre>\n\n<p>matches[0] is the full string, matches(1) is the first part of the URL (up to the ?)... you could build up a regular expression to parse each part of a string url if you want...</p>\n\n<p>You can also use one of the many libraries already out there for this.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Well, you could use an anchor element to extract the url parts, for example:</p>\n\n<pre><code>var url = document.createElement('a');\nurl.href = \"http://www.example.com/some/path?name=value#anchor\";\nvar protocol = url.protocol;\nvar hash = url.hash;\n\nalert('protocol: ' + protocol);\nalert('hash: ' + hash);\n\u200b\n</code></pre>\n\n<p>It works on all modern browsers and even on IE 5.5+.</p>\n\n<p>Check an example <a href=\"http://jsbin.com/atije3/2/\">here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 84
                },
                {
                    "body": "<p>You can leverage the power of an anchor element</p>\n\n<pre><code>var aLink = document.createElement(\"a\");\naLink.href=\"http://www.example.com/foo/bar.html?q=123#asdf\";\nalert(aLink.pathname);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Is it possible to create a new Location object in javascript? I have a url as a string and I would like to leverage what javascript already provides to gain access to the different parts of it.</p>\n\n<p>Here's an example of what I'm talking about (I know this doesn't work):</p>\n\n<pre><code>var url = new window.location(\"http://www.example.com/some/path?name=value#anchor\");\nvar protocol = url.protocol;\nvar hash = url.hash;\n// etc etc\n</code></pre>\n\n<p>Is anything like this possible or would I essentially have to create this object myself?</p>\n",
            "last_activity_date": 1306681513,
            "question_id": 3213531,
            "score": 40,
            "tags": [
                "javascript",
                "url-parsing"
            ],
            "title": "Creating a new Location object in javascript"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>I would use an object/array notation:</p>\n\n<pre><code>var phrases={};\nphrases['fatalError'] ='On no!';\n</code></pre>\n\n<p>Then you can just swap the JS file, or use an Ajax call to redefine your phrase list.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Expanding on diodeus.myopenid.com's answer: Have your code write out a file containing a JS array with all the required strings, then load the appropriate file/script before the other JS code. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A basic JavaScript object is an associative array, so it can easily be used to store key/value pairs. So using <a href=\"http://www.json.org\" rel=\"nofollow\">JSON</a>, you could create an object for each string to be localized like this:</p>\n\n<pre><code>var localizedStrings={\n    confirmMessage:{\n        'en/US':'Are you sure?',\n        'fr/FR':'Est-ce que vous \u00eates certain?',\n        ...\n    },\n\n    ...\n}\n</code></pre>\n\n<p>Then you could get the locale version of each string like this:</p>\n\n<pre><code>var locale='en/US';\nvar confirm=localizedStrings['confirmMessage'][locale];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>Inspired by <a href=\"http://www.sproutcore.com/\">SproutCore</a> You can set properties of\nstrings:</p>\n\n<pre><code>'Hello'.fr = 'Bonjour';\n'Hello'.es = 'Hola';\n</code></pre>\n\n<p>and then simply spit out the proper localization based on your locale:</p>\n\n<pre><code>var locale = 'en';\nalert( message[locale] );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>With a satellite assembly (instead of a resx file) you can enumerate all strings on the server, where you know the language, thus generating a Javascript object with only the strings for the correct language. </p>\n\n<p>Something like this works for us (VB.NET code):</p>\n\n<pre><code>Dim rm As New ResourceManager([resource name], [your assembly])\nDim rs As ResourceSet = \n    rm.GetResourceSet(Thread.CurrentThread.CurrentCulture, True, True)\nFor Each kvp As DictionaryEntry In rs\n    [Write out kvp.Key and kvp.Value]\nNext\n</code></pre>\n\n<p>However, we haven't found a way to do this for .resx files yet, sadly.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>JSGettext does an excellent job -- dynamic loading of GNU Gettext .po files using pretty much any language on the backend.  Google for \"Dynamic Javascript localization with Gettext and PHP\" to find a walkthrough for JSGettext with PHP (I'd post the link, but this silly site won't let me, sigh...)</p>\n\n<p><strong>Edit</strong>: <a href=\"http://openflights.org/blog/2009/05/29/dynamic-javascript-localization-with-gettext-and-php/\" rel=\"nofollow\">this</a> should be the link</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The <a href=\"http://msdn.microsoft.com/en-us/library/bb398935.aspx\" rel=\"nofollow\"><code>MSDN</code> way of doing it</a>, basically is:</p>\n\n<blockquote>\n  <p>You create a separate script file for each supported language and culture. In each script file, you include an object in JSON format that contains the localized resources values for that language and culture.</p>\n</blockquote>\n\n<p>I can't tell you the best solution for your question, but IMHO this is the worst way of doing it. At least now you know how NOT to do it.</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>I did the following to localize JavaScript for a mobile app running HTML5:</p>\n\n<p>1.Created a set of resource files for each language calling them like \"en.js\" for English. Each contained the different strings the app as follows:</p>\n\n<pre><code>\n        var localString = {\n        appName: \"your app name\",\n        message1: \"blah blah\"\n      };\n</code></pre>\n\n<p>2.Used Lazyload to load the proper resource file based on the locale language of the app: <a href=\"https://github.com/rgrove/lazyload\" rel=\"nofollow\">https://github.com/rgrove/lazyload</a></p>\n\n<p>3.Pass the language code via a Query String (As I am launching the html file from Android using PhoneGap)</p>\n\n<p>4.Then I wrote the following code to load dynamically the proper resource file:</p>\n\n<pre><code>\nvar lang = getQueryString(\"language\");\nlocalization(lang);\nfunction localization(languageCode) {\n    try {\n        var defaultLang = \"en\";\n        var resourcesFolder = \"values/\";\n        if(!languageCode || languageCode.length == 0)\n            languageCode = defaultLang;\n        // var LOCALIZATION = null;\n        LazyLoad.js(resourcesFolder + languageCode + \".js\", function() {\n            if( typeof LOCALIZATION == 'undefined') {\n                LazyLoad.js(resourcesFolder + defaultLang + \".js\", function() {\n                    for(var propertyName in LOCALIZATION) {\n                        $(\"#\" + propertyName).html(LOCALIZATION[propertyName]);\n                    }\n                });\n            } else {\n                for(var propertyName in LOCALIZATION) {\n                    $(\"#\" + propertyName).html(LOCALIZATION[propertyName]);\n                }\n            }\n        });\n    } catch (e) {\n        errorEvent(e);\n    }\n}\nfunction getQueryString(name)\n{\n  name = name.replace(/[\\[]/, \"\\\\\\[\").replace(/[\\]]/, \"\\\\\\]\");\n  var regexS = \"[\\\\?&]\" + name + \"=([^&#]*)\";\n  var regex = new RegExp(regexS);\n  var results = regex.exec(window.location.href);\n  if(results == null)\n    return \"\";\n  else\n    return decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n}\n</code></pre>\n\n<p>5.From the html file I refer to the strings as follows:</p>\n\n<pre><code>\n    span id=\"appName\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There's a library for localizing JavaScript applications:\n<a href=\"https://github.com/wikimedia/jquery.i18n\" rel=\"nofollow\">https://github.com/wikimedia/jquery.i18n</a></p>\n\n<p>It can do parameter replacement, supports gender (clever he/she handling), number (clever plural handling, including languages that have more than one plural form), and custom grammar rules that some languages need.</p>\n\n<p>The strings are stored in JSON files.</p>\n\n<p>The only requirement is jQuery.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>After Googling a lot and not satisfied with the majority of solutions presented, I have just found an amazing/generic solution that uses <a href=\"http://www.leniel.net/2011/06/c-code-with-preprocessed-t4-templates.html\" rel=\"nofollow\">T4 templates</a>. The complete post by <a href=\"http://www.blogger.com/profile/01681886305363941109\" rel=\"nofollow\">Jochen van Wylick</a> you can read here:</p>\n\n<p><a href=\"http://jiffie.blogspot.com.br/2012/11/localized-javascript-resources-based-on.html\" rel=\"nofollow\">Using T4 for localizing JavaScript resources based on .resx files</a></p>\n\n<p>Main advantages are:</p>\n\n<ol>\n<li>Having only 1 place where resources are managed ( namely the .resx\nfiles )</li>\n<li>Support for multiple cultures</li>\n<li>Leverage IntelliSense - allow for code completion</li>\n</ol>\n\n<p>Disadvantages:</p>\n\n<blockquote>\n  <p>The shortcomings of this solution are of course that the size of the\n  .js file might become quite large. However, since it's cached by the\n  browser, we don't consider this a problem for our application. However\n  - this caching can also result in the browser not finding the resource called from code.</p>\n</blockquote>\n\n<hr>\n\n<p><strong>How this works?</strong></p>\n\n<p>Basically he defined a T4 template that points to your .resx files. With some C# code he traverses each and every resource string and add it to JavaScript pure key value properties that then are output in a single JavaScript file called <code>Resources.js</code> (you can tweak the names if you wish).</p>\n\n<hr>\n\n<p><strong>T4 template</strong> [ change accordingly to point to your .resx files location ]</p>\n\n<pre><code>&lt;#@ template language=\"C#\" debug=\"false\" hostspecific=\"true\"#&gt;\n&lt;#@ assembly name=\"System.Windows.Forms\" #&gt;\n&lt;#@ import namespace=\"System.Resources\" #&gt;\n&lt;#@ import namespace=\"System.Collections\" #&gt;\n&lt;#@ import namespace=\"System.IO\" #&gt;\n&lt;#@ output extension=\".js\"#&gt;\n&lt;#\n var path = Path.GetDirectoryName(Host.TemplateFile) + \"/../App_GlobalResources/\";\n var resourceNames = new string[1]\n {\n  \"Common\"\n };\n\n#&gt;\n/**\n* Resources\n* ---------\n* This file is auto-generated by a tool\n* 2012 Jochen van Wylick\n**/\nvar Resources = {\n &lt;# foreach (var name in resourceNames) { #&gt;\n &lt;#=name #&gt;: {},\n &lt;# } #&gt;\n};\n&lt;# foreach (var name in resourceNames) {\n var nlFile = Host.ResolvePath(path + name + \".nl.resx\" );\n var enFile = Host.ResolvePath(path + name + \".resx\" );\n ResXResourceSet nlResxSet = new ResXResourceSet(nlFile);\n ResXResourceSet enResxSet = new ResXResourceSet(enFile);\n#&gt;\n\n&lt;# foreach (DictionaryEntry item in nlResxSet) { #&gt;\nResources.&lt;#=name#&gt;.&lt;#=item.Key.ToString()#&gt; = {\n 'nl-NL': '&lt;#= (\"\" + item.Value).Replace(\"\\r\\n\", string.Empty).Replace(\"'\",\"\\\\'\")#&gt;',\n 'en-GB': '&lt;#= (\"\" + enResxSet.GetString(item.Key.ToString())).Replace(\"\\r\\n\", string.Empty).Replace(\"'\",\"\\\\'\")#&gt;'\n };\n&lt;# } #&gt;\n&lt;# } #&gt;\n</code></pre>\n\n<p><strong>In the Form/View side</strong></p>\n\n<p>To have the correct translation picked up, add this in your master if you're using WebForms:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    var locale = '&lt;%= System.Threading.Thread.CurrentThread.CurrentCulture.Name %&gt;';\n\n&lt;/script&gt;\n\n&lt;script type=\"text/javascript\" src=\"/Scripts/Resources.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>If you're using ASP.NET MVC (like me), you can do this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    // Setting Locale that will be used by JavaScript translations\n    var locale = $(\"meta[name='accept-language']\").attr(\"content\");\n\n&lt;/script&gt;\n\n&lt;script type=\"text/javascript\" src=\"/Scripts/Resources.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>The <code>MetaAcceptLanguage</code> helper I got from this awesome post by Scott Hanselman:</p>\n\n<p><a href=\"http://www.hanselman.com/blog/GlobalizationInternationalizationAndLocalizationInASPNETMVC3JavaScriptAndJQueryPart1.aspx\" rel=\"nofollow\">Globalization, Internationalization and Localization in ASP.NET MVC 3, JavaScript and jQuery - Part 1</a> </p>\n\n<pre><code>public static IHtmlString MetaAcceptLanguage&lt;T&gt;(this HtmlHelper&lt;T&gt; html)\n{\n     var acceptLanguage =\n         HttpUtility.HtmlAttributeEncode(\n                     Thread.CurrentThread.CurrentUICulture.ToString());\n\n      return new HtmlString(\n      String.Format(\"&lt;meta name=\\\"{0}\\\" content=\\\"{1}\\\"&gt;\", \"accept-language\",\n                    acceptLanguage));\n }\n</code></pre>\n\n<p><strong>Use it</strong></p>\n\n<pre><code>var msg = Resources.Common.Greeting[locale];\nalert(msg);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>We use MVC and have simply created a controller action to return a localized string. We maintain the user's culture in session and set the thread culture before any call to retrieve a language string, AJAX or otherwise. This means we always return a localized string.</p>\n\n<p>I'll admit, it isn't the most efficient method but getting a localised string in javascript is seldom required as most localization is done in our partial views.</p>\n\n<p><strong>Global.asax.cs</strong></p>\n\n<pre><code>protected void Application_PreRequestHandlerExecute(object sender, EventArgs e)\n{\n    if (Context.Handler is IRequiresSessionState || Context.Handler is IReadOnlySessionState)\n    {\n        // Set the current thread's culture\n        var culture = (CultureInfo)Session[\"CultureInfo\"];\n        if (culture != null)\n        {\n            Thread.CurrentThread.CurrentCulture = culture;\n            Thread.CurrentThread.CurrentUICulture = culture;\n        }\n    }\n}\n</code></pre>\n\n<p><strong>Controller Action</strong></p>\n\n<pre><code>public string GetString(string key)\n{\n    return Language.ResourceManager.GetString(key);\n}\n</code></pre>\n\n<p><strong>Javascript</strong></p>\n\n<pre><code>/*\n    Retrieve a localized language string given a lookup key.\n    Example use:\n      var str = language.getString('MyString');\n*/\nvar language = new function () {\n    this.getString = function (key) {\n        var retVal = '';\n        $.ajax({\n            url: rootUrl + 'Language/GetString?key=' + key,\n            async: false,\n            success: function (results) {\n                retVal = results;\n            }\n        });\n        return retVal;\n    }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Well, I think that you can consider this. English-Spanish example:</p>\n\n<p>Write 2 Js Scripts, like that:</p>\n\n<pre><code>en-GB.js\nlang = {\n    date_message: 'The start date is incorrect',\n    ...\n};\nes-ES.js\nlang = {\n    date_message: 'Fecha de inicio incorrecta',\n    ...\n};\n</code></pre>\n\n<p>Server side - code behind: </p>\n\n<pre><code>Protected Overrides Sub InitializeCulture()\n    Dim sLang As String \n    sLang = \"es-ES\" \n\n    Me.Culture = sLang\n    Me.UICulture = sLang\n    Page.ClientScript.RegisterClientScriptInclude(sLang &amp; \".js\", \"../Scripts/\" &amp; sLang &amp; \".js\")\n\n    MyBase.InitializeCulture()\nEnd Sub\n</code></pre>\n\n<p>Where sLang could be \"en-GB\", you know, depending on current user's selection ...</p>\n\n<p>Javascript calls:</p>\n\n<pre><code>alert (lang.date_message);\n</code></pre>\n\n<p>And it works, very easy, I think.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm currently using <code>.resx</code> files to manage my server side resources for .NET.</p>\n\n<p>the application that I am dealing with also allows developers to plugin JavaScript into various event handlers for client side validation, etc.. What is the best way for me to localize my JavaScript messages and strings?  </p>\n\n<p>Ideally, I would like to store the strings in the <code>.resx</code> files to keep them with the rest of the localized resources.</p>\n\n<p>I'm open to suggestions.</p>\n",
            "last_activity_date": 1413540027,
            "question_id": 104022,
            "score": 32,
            "tags": [
                "javascript",
                ".net",
                "localization",
                "resx"
            ],
            "title": "Localize Strings in Javascript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>During the preflight request, you should see the following two headers: Access-Control-Request-Method and Access-Control-Request-Headers. These request headers are asking the server for permissions to make the actual request. Your preflight response needs to acknowledge these headers in order for the actual request to work.</p>\n\n<p>For example, suppose the browser makes a request with the following headers:</p>\n\n<pre><code>Origin: http://yourdomain.com\nAccess-Control-Request-Method: POST\nAccess-Control-Request-Headers: X-Custom-Header\n</code></pre>\n\n<p>Your server should then respond with the following headers:</p>\n\n<pre><code>Access-Control-Allow-Origin: http://yourdomain.com\nAccess-Control-Allow-Methods: GET, POST\nAccess-Control-Allow-Headers: X-Custom-Header\n</code></pre>\n\n<p>Pay special attention to the Access-Control-Allow-Headers response header. The value of this header should be the same headers in the Access-Control-Request-Headers request header, and it can not be '*'. </p>\n\n<p>Once you send this response to the preflight request, the browser will make the actual request. You can learn more about CORS here: <a href=\"http://www.html5rocks.com/en/tutorials/cors/\">http://www.html5rocks.com/en/tutorials/cors/</a></p>\n",
                    "is_accepted": true,
                    "score": 43
                }
            ],
            "body": "<p>I am tying to make a cross domain http request to WCF service (that I own). I have read several techniques for working around the cross domain scripting limitations. Because my service must accommodate both GET and POST requests I cannot implement some dynamic script tag whose src is the url of a GET request. Since I am free to make changes at the server I have begun to try to implement a workaround that involves configuring the server responses to include the, \"Access-Control-Allow-Origin\" header and 'preflight' requests with and OPTIONS request. I got the idea from this post : <a href=\"http://remysharp.com/2011/04/21/getting-cors-working/\">Getting CORS working</a></p>\n\n<p>At the server side, my web method is adding 'Access-Control-Allow-Origin: *' to the http response. I can see that responses do include this header now. My question is: How do I 'preflight' a request (OPTIONS)? I am using jQuery.getJSON to make the GET request but the browser cancels the request right away with the infamous:</p>\n\n<blockquote>\n  <p>Orgin <a href=\"http://localhost\">http://localhost</a> is not allowed by Access-Control-Allow-Origin</p>\n</blockquote>\n\n<p>Is anyone familar with this CORS technique? What changes need to be made at the client to preflight my request?</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1325350525,
            "question_id": 8685678,
            "score": 29,
            "tags": [
                "javascript",
                "wcf",
                "jquery",
                "cors"
            ],
            "title": "CORS - How do &#39;preflight&#39; an httprequest?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The answer is really simple: This is not possible directly without some tricks in javascript.</p>\n\n<p>It depends on the browser. Mostly all browser catch this shortcuts and use it for their own events. (e.g open new tabs) The shortcut never reach the javascript engine.</p>\n\n<p>What is easy possible however, to catch the shortcuts with flash. But this is wide away from a user friendly website.</p>\n\n<p><strong>Update:</strong></p>\n\n<p>Here a short example. Mostly all browser will show the alert when <kbd>Ctrl</kbd>+<kbd>y</kbd> is pressed. (y = 89)</p>\n\n<pre><code>document.onkeydown = keyDownEvent;\ndocument.onkeyup = keyUpEvent;\n\nvar isCtrl = false;\n\nfunction keyDownEvent() {\n    var keyid = event.keyCode;\n\n    if(keyid == 17) {\n        isCtrl = true;\n    }\n}\n\nfunction keyUpEvent() {\n    var keyid = event.keyCode;\n\n    if(keyid == 17) {\n        isCtrl = false;\n    }\n\n    if(keyid == 89 &amp;&amp; isCtrl == true) {\n        alert('CTRL-Y pressed');   \n    }\n}\n</code></pre>\n\n<p>If you replace the 84 by 89, which represents a <kbd>t</kbd>, nothing will happen. You can try it <a href=\"http://jsfiddle.net/wHhEL/\" rel=\"nofollow\">on jsfiddle.net</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<h1>Capturing <kbd>Ctrl</kbd> keyboard events in Javascript</h1>\n\n<h3>Sample code:</h3>\n\n<pre><code>$(window).keydown(function(event) {\n  if(event.ctrlKey &amp;&amp; event.keyCode == 84) { \n    console.log(\"Hey! Ctrl+T event captured!\");\n    event.preventDefault(); \n  }\n  if(event.ctrlKey &amp;&amp; event.keyCode == 83) { \n    console.log(\"Hey! Ctrl+S event captured!\");\n    event.preventDefault(); \n  }\n});\n</code></pre>\n\n<hr>\n\n<h2>Firefox</h2>\n\n<p><sub>(6.0.1 tested)</sub></p>\n\n<p>In Firefox  both event listener works. If you press <kbd>Ctrl</kbd><kbd>T</kbd> or <kbd>Ctrl</kbd><kbd>S</kbd> keycombinations, you will get both message on the console, and the browser wont open a tab, nor ask for save.</p>\n\n<p><em>It is intresting that if you use <code>alert</code> instead of <code>console.log</code> the <code>event.preventDefault()</code> not works, and opens a new tab or asks for save. Maybe this bug needs to get fixed.</em></p>\n\n<hr>\n\n<h2>Chrome3</h2>\n\n<p>In Chrome 3 it works like in Firefox.</p>\n\n<hr>\n\n<h2>Chrome4</h2>\n\n<p><sub>(tested)</sub></p>\n\n<blockquote>\n  <p>In Chrome4, certain control key combinations have been reserved for browser \n  usage only and can no longer be intercepted by the client side JavaScript \n  in the web page.<br>\n  These restrictions did not exist in Chrome3 and are inconsistent with both \n  Firefox3/3.5 and IE7/8 (on Windows).</p>\n</blockquote>\n\n<p>In Chrome 4 it works similary to Firefox, except some keyboard combination:</p>\n\n<ul>\n<li><p><kbd>Ctrl</kbd><kbd>N</kbd></p></li>\n<li><p><kbd>Ctrl</kbd><kbd>Shift</kbd><kbd>N</kbd></p></li>\n<li><p><kbd>Ctrl</kbd><kbd>T</kbd></p></li>\n<li><p><kbd>Ctrl</kbd><kbd>Shift</kbd><kbd>T</kbd></p></li>\n<li><p><kbd>Ctrl</kbd><kbd>W</kbd></p></li>\n<li><p><kbd>Ctrl</kbd><kbd>Shift</kbd><kbd>W</kbd></p></li>\n</ul>\n\n<p>These combinations cannot get captured by Javascript, <strong>but</strong> embed plugins can capture these. For example if you focus in a Youtube video and press <kbd>Ctrl</kbd><kbd>T</kbd>, the browser won't open a new tab.</p>\n\n<hr>\n\n<h2>IE7/8</h2>\n\n<p>It works like in Firefox or Chrome3.</p>\n\n<hr>\n\n<h2>IE9</h2>\n\n<p><sub>(tested)</sub></p>\n\n<p>IE9 is a black sheep again, because it dosen't allow javascript to capture any <kbd>Ctrl</kbd><kbd>?</kbd> keyboard event. I tested with many keyboard combination (R,T,P,S,N,T) and neither worked. Also embed applications can't capture the event. Tested with Youtube videos.</p>\n\n<hr>\n\n<p><strong>Thanks to <a href=\"http://stackoverflow.com/questions/7295508/#comment-8789103\">@Lime</a> for the great <a href=\"http://code.google.com/p/chromium/issues/detail?id=33056\">link</a>.</strong></p>\n",
                    "is_accepted": true,
                    "score": 50
                },
                {
                    "body": "<p>As of March, 20th, 2012, there has been a Chrome fix that allows web applications to handle Control+NWT in Chrome in js keydown event (so it works in pure javascript, or any library like jQuery).</p>\n\n<p>This fix allows javascript to handle this key combinations if Chrome is opened in Application mode, which can be done in this way:</p>\n\n<ul>\n<li><a href=\"http://superuser.com/questions/33548/starting-google-chrome-in-application-mode\">Starting Google Chrome in application mode</a></li>\n</ul>\n\n<p>The fix is documented here:</p>\n\n<ul>\n<li><a href=\"http://src.chromium.org/viewvc/chrome?view=rev&amp;revision=127787\">Don't filter shortcut keys when a tab is opened in app mode (aka: windowed or pop-up mode).</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Instead of trapping the CTRL-W hotkey, <a href=\"https://developer.mozilla.org/en-US/docs/Web/Reference/Events/beforeunload\" rel=\"nofollow\">detect when the window is closed</a> might be a valid option:</p>\n\n<p>\"The beforeunload event is fired when the window, the document and its resources are about to be unloaded.</p>\n\n<p>When a non-empty string is assigned to the returnValue Event property, a dialog box appears, asking the users for confirmation to leave the page (see example below). When no value is provided, the event is processed silently.\"</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is it possible to capture these shortcuts?</p>\n\n<ul>\n<li><kbd>Ctrl</kbd>+<kbd>N</kbd> </li>\n<li><kbd>Ctrl</kbd>+<kbd>T</kbd> </li>\n<li><kbd>Ctrl</kbd>+<kbd>W</kbd></li>\n</ul>\n\n<p>I tried this but not works:</p>\n\n<pre><code>$(window).keydown(function(event) {\n  console.log(event.keyCode);\n  event.preventDefault();\n});\n</code></pre>\n\n<p>When I press <kbd>T</kbd> it shows <code>84</code> in the console, but if I press <kbd>Ctrl</kbd>+<kbd>T</kbd> it show nothing, but opens a new tab.</p>\n\n<p>I would like to capture these shortcuts and prevent any browser action.</p>\n",
            "last_activity_date": 1384589910,
            "question_id": 7295508,
            "score": 29,
            "tags": [
                "javascript",
                "events",
                "browser",
                "keyboard-shortcuts"
            ],
            "title": "javascript capture browser shortcuts (ctrl+t/n/w)"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>This is possible with JQuery and a bit of maths.</p>\n\n<p>Use JQuery to get the view ports width and height as well as the divs current dimensions.</p>\n\n<pre><code>$(document).width();\n</code></pre>\n\n<p>Calculate the divs current aspect ratio. eg width/height</p>\n\n<p>You need a bit of logic to determine whether to set the width or height first, then use the initial ratio to calculate the other side.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>jQuery has a plugin that grows an object until one of it's sides reaches a certain px-value. Coupling this will the viewport's height, you could expand any element to that size: <a href=\"http://css-tricks.com/maxside-jquery-plugin-and-how-to/\" rel=\"nofollow\">jQuery MaxSide</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There are a lot of ways to do this. I just slapped this together for a start.</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n   \"http://www.w3.org/TR/html4/strict.dtd\"&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;&lt;/title&gt;\n&lt;style type=\"text/css\"&gt;\nbody{height:100%;background-color:#eee}\ndiv{position:absolute;top:25%;bottom:25%;left:25%;right:25%;border:1px solid}\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Thanks to Geoff for the tip on how to structure the math and logic. Here's my jQuery implementation, which I'm using to size a lightbox so it fills the window:</p>\n\n<pre><code>var height = originalHeight;\nvar width = originalWidth;\naspect = width / height;\n\nif($(window).height() &lt; $(window).width()) {\n    var resizedHeight = $(window).height();\n    var resizedWidth = resizedHeight * aspect;\n}\n\nelse { // screen width is smaller than height (mobile, etc)\n    var resizedWidth = $(window).width();\n    var resizedHeight = resizedWidth / aspect;      \n}\n</code></pre>\n\n<p>This is working well for me right now across laptop and mobile screen sizes.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You don't need javascript for this.  You can use pure CSS.</p>\n\n<p>A padding-top percentage is interpreted relative to the containing block <strong>width</strong>.  Combine it with position: absolute on a child element, and you can put pretty much anything in a box that retains its aspect ratio.</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div class=\"aspectwrapper\"&gt;\n  &lt;div class=\"content\"&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>.aspectwrapper {\n  display: inline-block; /* shrink to fit */\n  width: 100%;           /* whatever width you like */\n  position: relative;    /* so .content can use position: absolute */\n}\n.aspectwrapper::after {\n  padding-top: 56.25%; /* percentage of containing block _width_ */\n  display: block;\n  content: '';\n}\n.content {\n  position: absolute;\n  top: 0; bottom: 0; right: 0; left: 0;  /* follow the parent's edges */\n  outline: thin dashed green;            /* just so you can see the box */\n}\n</code></pre>\n\n<p>The <code>display: inline-block</code> leaves a little extra space below the bottom edge of the <code>.aspectwrapper</code> box, so another element below it won't run flush against it. Using <code>display: block</code> will get rid of it.</p>\n\n<p>Thanks to <a href=\"http://ansciath.tumblr.com/post/7347495869/css-aspect-ratio\">this post</a> for the tip!</p>\n\n<hr>\n\n<p>Another approach relies on the fact that browsers respect an image's aspect ratio when you resize only its width or height.  (I'll let google generate a 16x9 transparent image for demonstration purposes, but in practice you would use your own static image.)</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div class=\"aspectwrapper\"&gt;\n  &lt;img class=\"aspectspacer\" src=\"http://chart.googleapis.com/chart?cht=p3&amp;chs=160x90\" /&gt;\n  &lt;div class=\"content\"&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>.aspectwrapper {\n  width: 100%;\n  position: relative;\n}\n.aspectspacer {\n  width: 100%; /* let the enlarged image height push .aspectwrapper's bottom edge */\n}\n.content {\n  position: absolute;\n  top: 0; bottom: 0; right: 0; left: 0;\n  outline: thin dashed green;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 35
                }
            ],
            "body": "<p>How can I scale a div to fit inside the browser view port but preserve the aspect ratio of the div. How can I do this using CSS and/or JQuery?</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1387465074,
            "question_id": 1311068,
            "score": 28,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "html"
            ],
            "title": "Scale a div to fit in window but preserve aspect ratio"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<blockquote>\n  <p><a href=\"http://www.antlr.org/\" rel=\"nofollow\">ANTLR</a>, ANother Tool for Language Recognition, is a language tool that provides a framework for constructing recognizers, interpreters, compilers, and translators from grammatical descriptions containing actions in a variety of target languages.</p>\n</blockquote>\n\n<p>The <a href=\"http://www.antlr.org/\" rel=\"nofollow\">ANTLR</a> site provides many grammars , including <a href=\"http://www.antlr.org/grammar/1153976512034/ecmascriptA3.g\" rel=\"nofollow\">one for JavaScript</a>.</p>\n\n<p>As it happens, there is a <a href=\"http://www.antlr3.org/api/Python/index.html\" rel=\"nofollow\">Python API</a> available - so you can call the lexer (recognizer) generated from the grammar directly from Python (good luck).</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>You can try <a href=\"http://wwwsearch.sourceforge.net/python-spidermonkey/\">python-spidermonkey</a>\nIt is a wrapper over <a href=\"http://www.mozilla.org/js/spidermonkey/\">spidermonkey</a> which is codename for Mozilla's C implementation of javascript.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><a href=\"http://code.google.com/p/pynarcissus/\">http://code.google.com/p/pynarcissus/</a> seems to have a parser. I'm not sure what state it is in, but it looks to be complete.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>As pib mentioned, <a href=\"http://code.google.com/p/pynarcissus/\">pynarcissus</a> is a Javascript tokenizer written in Python.  It seems to have some rough edges but so far has been working well for what I want to accomplish.</p>\n\n<p>Updated: Took another crack at pynarcissus and below is a working direction for using PyNarcissus in a visitor pattern like system.  Unfortunately my current client bought the next iteration of my experiments and have decided not to make it public source.  A cleaner version of the code below is on gist <a href=\"https://gist.github.com/1598830/495dc623541ffe3f5a95d6822b9b42cab09def1b\">here</a></p>\n\n<pre><code>from pynarcissus import jsparser\nfrom collections import defaultdict\n\nclass Visitor(object):\n\n    CHILD_ATTRS = ['thenPart', 'elsePart', 'expression', 'body', 'initializer']\n\ndef __init__(self, filepath):\n    self.filepath = filepath\n    #List of functions by line # and set of names\n    self.functions = defaultdict(set)\n    with open(filepath) as myFile:\n        self.source = myFile.read()\n\n    self.root = jsparser.parse(self.source, self.filepath)\n    self.visit(self.root)\n\n\ndef look4Childen(self, node):\n    for attr in self.CHILD_ATTRS:\n        child = getattr(node, attr, None)\n        if child:\n            self.visit(child)\n\ndef visit_NOOP(self, node):\n    pass\n\ndef visit_FUNCTION(self, node):\n    # Named functions\n    if node.type == \"FUNCTION\" and getattr(node, \"name\", None):\n        print str(node.lineno) + \" | function \" + node.name + \" | \" + self.source[node.start:node.end]\n\n\ndef visit_IDENTIFIER(self, node):\n    # Anonymous functions declared with var name = function() {};\n    try:\n        if node.type == \"IDENTIFIER\" and hasattr(node, \"initializer\") and node.initializer.type == \"FUNCTION\":\n            print str(node.lineno) + \" | function \" + node.name + \" | \" + self.source[node.start:node.initializer.end]\n    except Exception as e:\n        pass\n\ndef visit_PROPERTY_INIT(self, node):\n\n    # Anonymous functions declared as a property of an object\n    try:\n        if node.type == \"PROPERTY_INIT\" and node[1].type == \"FUNCTION\":\n            print str(node.lineno) + \" | function \" + node[0].value + \" | \" + self.source[node.start:node[1].end]\n    except Exception as e:\n        pass\n\n\ndef visit(self, root):\n\n    call = lambda n: getattr(self, \"visit_%s\" % n.type, self.visit_NOOP)(n)\n    call(root)\n    self.look4Childen(root)\n    for node in root:\n        self.visit(node)\n\nfilepath = r\"C:\\Users\\dward\\Dropbox\\juggernaut2\\juggernaut\\parser\\test\\data\\jasmine.js\"\nouterspace = Visitor(filepath)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Nowadays, there is at least one better tool, called <a href=\"https://pypi.python.org/pypi/slimit\" rel=\"nofollow\"><code>slimit</code></a>:</p>\n\n<blockquote>\n  <p>SlimIt is a JavaScript minifier written in Python. It compiles\n  JavaScript into more compact code so that it downloads and runs\n  faster.</p>\n  \n  <p>SlimIt also provides a library that includes a JavaScript parser,\n  lexer, pretty printer and a tree visitor.</p>\n</blockquote>\n\n<p>Demo:</p>\n\n<p>Imagine we have the following javascript code:</p>\n\n<pre><code>$.ajax({\n    type: \"POST\",\n    url: 'http://www.example.com',\n    data: {\n        email: 'abc@g.com',\n        phone: '9999999999',\n        name: 'XYZ'\n    }\n});\n</code></pre>\n\n<p>And now we need to get <code>email</code>, <code>phone</code> and <code>name</code> values from the <code>data</code> object.</p>\n\n<p>The idea here would be to instantiate a <code>slimit</code> parser, visit all nodes, filter all assignments and put them into the dictionary:</p>\n\n<pre><code>from slimit import ast\nfrom slimit.parser import Parser\nfrom slimit.visitors import nodevisitor\n\n\ndata = \"\"\"\n$.ajax({\n    type: \"POST\",\n    url: 'http://www.example.com',\n    data: {\n        email: 'abc@g.com',\n        phone: '9999999999',\n        name: 'XYZ'\n    }\n});\n\"\"\"\n\nparser = Parser()\ntree = parser.parse(data)\nfields = {getattr(node.left, 'value', ''): getattr(node.right, 'value', '')\n          for node in nodevisitor.visit(tree)\n          if isinstance(node, ast.Assign)}\n\nprint fields\n</code></pre>\n\n<p>It prints:</p>\n\n<pre><code>{'name': \"'XYZ'\", \n 'url': \"'http://www.example.com'\", \n 'type': '\"POST\"', \n 'phone': \"'9999999999'\", \n 'data': '', \n 'email': \"'abc@g.com'\"}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I have translated esprima.js (the best JavaScript parser out there) to Python. You can give it a try:\n<a href=\"https://github.com/PiotrDabkowski/Js2Py/blob/master/examples/pyesprima.py\" rel=\"nofollow\">pyesprima</a>. </p>\n\n<p>Note this was translated automatically so the code is ugly and you will have to download <a href=\"https://github.com/PiotrDabkowski/Js2Py\" rel=\"nofollow\">Js2Py</a> to use it.</p>\n\n<p>Example:</p>\n\n<pre><code>&gt;&gt;&gt; parse('var a = 1')\n{body: [{declarations: [{id: {name: 'a', type: 'Identifier'}, init: {raw: '', type: 'Literal', value: 1}, type: 'VariableDeclarator'}], kind: 'var', type: 'VariableDeclaration'}], type: 'Program'}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>There is a JavaScript parser at least in C and Java (Mozilla), in JavaScript (Mozilla again) and Ruby. Is there any currently out there for Python?</p>\n\n<p>I don't need a JavaScript interpreter, per se, just a parser that's up to ECMA-262 standards.</p>\n\n<p>A quick google search revealed no immediate answers, so I'm asking the SO community.</p>\n",
            "last_activity_date": 1418603872,
            "question_id": 390992,
            "score": 24,
            "tags": [
                "javascript",
                "python",
                "parsing"
            ],
            "title": "JavaScript parser in Python"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The following function will insert text at the caret position and delete the existing selection. It works in all the mainstream desktop browsers:</p>\n\n<pre><code>function insertTextAtCursor(text) {\n    var sel, range, html;\n    if (window.getSelection) {\n        sel = window.getSelection();\n        if (sel.getRangeAt &amp;&amp; sel.rangeCount) {\n            range = sel.getRangeAt(0);\n            range.deleteContents();\n            range.insertNode( document.createTextNode(text) );\n        }\n    } else if (document.selection &amp;&amp; document.selection.createRange) {\n        document.selection.createRange().text = text;\n    }\n}\n</code></pre>\n\n<p><strong>UPDATE</strong></p>\n\n<p>Based on comment, here's some code for saving and restoring the selection. Before displaying your context menu, you should store the return value of <code>saveSelection</code> in a variable and then pass that variable into <code>restoreSelection</code> to restore the selection after hiding the context menu and before inserting text.</p>\n\n<pre><code>function saveSelection() {\n    if (window.getSelection) {\n        sel = window.getSelection();\n        if (sel.getRangeAt &amp;&amp; sel.rangeCount) {\n            return sel.getRangeAt(0);\n        }\n    } else if (document.selection &amp;&amp; document.selection.createRange) {\n        return document.selection.createRange();\n    }\n    return null;\n}\n\nfunction restoreSelection(range) {\n    if (range) {\n        if (window.getSelection) {\n            sel = window.getSelection();\n            sel.removeAllRanges();\n            sel.addRange(range);\n        } else if (document.selection &amp;&amp; range.select) {\n            range.select();\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 56
                }
            ],
            "body": "<p>I have a contenteditable div where I need to insert text at the caret position,</p>\n\n<p>This can be easily done in IE by <code> document.selection.createRange().text = \"banana\" </code></p>\n\n<p>Is there a similar way of implementing this in Firefox/Chrome?</p>\n\n<p>(I know a solution exists <a href=\"http://stackoverflow.com/questions/1621931/insert-text-on-the-current-place-of-the-cursor-in-the-browser/1884285#1884285\">here</a> , but it can't be used in contenteditable div, and looks clumsy)</p>\n\n<p>Thank you!</p>\n",
            "last_activity_date": 1405472106,
            "question_id": 2920150,
            "score": 21,
            "tags": [
                "javascript",
                "contenteditable"
            ],
            "title": "Insert text at cursor in a content editable div"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>From the documentation ...</p>\n\n<p><a href=\"http://docs.jquery.com/Ajax/load\" rel=\"nofollow\"><code>$(selector).load(..)</code></a></p>\n\n<blockquote>\n  <p>Load HTML from a remote file and inject it into the DOM.</p>\n</blockquote>\n\n<p><a href=\"http://docs.jquery.com/Ajax/jQuery.ajax\" rel=\"nofollow\"><code>$.ajax(...)</code></a></p>\n\n<blockquote>\n  <p>Load a remote page using an HTTP request. This is jQuery's low-level AJAX implementation.</p>\n</blockquote>\n\n<p><code>load</code> is specifically for fetching (via GET unless parameters are provided, then POST is used) an HTML page and directly inserting it into the selected nodes (those selected by the <code>$(selector)</code> portion of <code>$(selector).load(...)</code>.</p>\n\n<p><code>$.ajax(...)</code> is a more general method that allows you to make GET and POST requests, and does nothing specific with the response.</p>\n\n<p>I encourage you to read the documentation.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://api.jquery.com/load/\"><code>load()</code></a> initiates an Ajax request to retrieve HTML that, when returned, is set to the given selector.</p>\n\n<p>All the <a href=\"http://api.jquery.com/category/ajax/\">jQuery Ajax functions</a> are simply wrappers for <a href=\"http://api.jquery.com/jQuery.ajax/\"><code>$.ajax()</code></a> so:</p>\n\n<pre><code>$(\"#id\").load(...);\n</code></pre>\n\n<p>is probably equivalent to:</p>\n\n<pre><code>$.ajax({\n  url: \"...\",\n  dataType: \"html\",\n  success: function(data) {\n    $(\"#id\").html(data);\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Let me clarify things for you a little bit :</p>\n\n<p><code>$.ajax()</code> is the basic and low-level ajax function jQuery provides which means you can do what ever you want to like you can work with <code>XmlHttpRequest</code> object. But once upon a time jQuery Developers thought that actually besides <code>$.ajax()</code>, they could provide more specific methods to developers so they wouldn't need to pass more parameters to make <code>$.ajax()</code> method work the way they want. For example they said instead of passing <code>json</code> as a parameter to <code>$.ajax()</code> to indicate return data type, they provided <code>$.getJSON()</code> so we would all know that the return type we expected was <code>json</code>, or instead of indicating send method as <code>post</code> or <code>get</code>, you could use <code>$.post()</code> or <code>$.get()</code> respectively.</p>\n\n<p>So <code>load()</code> is the same thing, it can help you inject html data into your html. with <code>load()</code> method you know that an html portion is being expected.</p>\n\n<p>Isn't that cool ?</p>\n\n<p>I think I've been fallen in love.</p>\n\n<p>For more information, you can visit jquery.com, they are even providing their new library and api tutorial page.</p>\n\n<p><strong>Edit :</strong></p>\n\n<pre><code> $.ajax({\n   type: \"POST\",\n   url: \"some.php\",\n   data: \"name=John&amp;location=Boston\",\n   success: function(msg){\n     alert( \"Data Saved: \" + msg );\n   }\n }); \n</code></pre>\n\n<p>is the same as below :</p>\n\n<pre><code>$.post(\"some.php\", { name: \"John\", time: \"2pm\" },\n   function(data){\n     alert(\"Data Loaded: \" + data);\n   });\n</code></pre>\n\n<p>Now as you can see it is the simplified version of <code>$.ajax()</code>, to make post call, you need to pass some information of send method type which is <code>post</code> as shown at the first example but instead of doing this you can use <code>$.post()</code> because you know what you are doing is <code>post</code> so this version is more simplified and easy to work on.</p>\n\n<p>But don't forget something. Except for <code>load()</code>, all other ajax methods return XHR (XmlHttpRequest instance) so you can treat them as if you were working with XmlHttpRequest, actually you are working with it tho :) and but <code>load()</code> returns jQuery which means :</p>\n\n<pre><code>$(\"#objectID\").load(\"test.php\", { 'choices[]': [\"Jon\", \"Susan\"] } );\n</code></pre>\n\n<p>in the example above, you can easly inject the return html into <code>#objectID</code> element. Isn't it cool ? If it wasn't returning jQuery, you should have been working with callback function where you probably get the result out of like <code>data</code> object and inject it manually into the html element you want. So it would be hassle but with <code>$.load()</code> method, it is really simplified in jQuery.</p>\n\n<pre><code>$(\"#feeds\").load(\"feeds.php\", {limit: 25}, function(){\n   alert(\"The last 25 entries in the feed have been loaded\");\n }); \n</code></pre>\n\n<p>You can even post parameters, so according to those parameters you can do some work at server-side and send html portion back to the client and your cute jQuery code takes it and inject it into <code>#feeds</code> html element in the example right above.</p>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>Here's the source code for the <code>load</code> function: <a href=\"http://github.com/jquery/jquery/blob/master/src/ajax.js#L15\" rel=\"nofollow\">http://github.com/jquery/jquery/blob/master/src/ajax.js#L15</a></p>\n\n<p>As you can see, it's a <code>$ajax</code> with some options handling. In other words, a convenience method.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A more concise summary and the most important difference is that <code>$.ajax</code> allows you to set <code>content-type</code> and <code>datatype</code>.</p>\n\n<p>These two are important for making JSON requests, or XML requests. ASP.NET is more fussy with a missing content-type field (atleast when you use <code>[WebMethod]</code>) and will simply return the HTML of the page instead of JSON.</p>\n\n<p><code>$.load()</code> is intended to simply return straight HTML. <code>$.ajax</code> also gives you</p>\n\n<ul>\n<li>caching</li>\n<li>error handling</li>\n<li>filtering of data</li>\n<li>password</li>\n</ul>\n\n<p>plus others.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The above answer may not be valid anymore in light of the use of deferred and promise objects. I believe that with .ajax you can use .when but you cannot do so with .load. In short, I believe that .ajax is more powerful than .load. For example:</p>\n\n<pre><code>      some_promise = $.ajax({....});\n      .when(some_promise).done(function(){.... });\n</code></pre>\n\n<p>You get more granular control over the html loading. There is also .fail and .always for failure and \"no matter what\" cases. You don't get this in load. Hope I am correct on this.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>does anyone know what is the difference between $(\"#id\").load and $.ajax?</p>\n",
            "last_activity_date": 1384703142,
            "question_id": 2076642,
            "score": 13,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "difference between $(&quot;#id&quot;).load and $.ajax?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>The <code>!!~expr</code> returns <code>false</code> when <code>expr</code> is <code>-1</code>; it returns <code>true</code> otherwise. It works like this:</p>\n\n<pre><code>   -1 = 1111 1111 1111 1111 1111 1111 1111 1111b\n  ~-1 = 0000 0000 0000 0000 0000 0000 0000 0000b // ~ = bitwise not = invert all bits\n   !0 = true\n!true = false\n</code></pre>\n\n<p>A value other than <code>-1</code> will have at least one bit set to zero; inverting it will create a truthy value; applying <code>!</code> operator twice to a truthy value yields boolean true.</p>\n\n<p>The above-mentioned function returns true if the searched string/array contains the specified needle:</p>\n\n<pre><code>!!~\"abc\".indexOf(\"d\") // indexOf() returns -1, the expression evaluates to false\n!!~\"abc\".indexOf(\"a\") // indexOf() returns  0, the expression evaluates to true\n!!~\"abc\".indexOf(\"b\") // indexOf() returns +1, the expression evaluates to true\n</code></pre>\n\n<p>I personally think this is poor coding considering how much time you spent deciphering this one line of code. It could easily have been written as follows:</p>\n\n<pre><code>return this.modifiedPaths.indexOf(path) != -1; // note: indexOf returns a number &gt;= -1\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 71
                },
                {
                    "body": "<p>You're right: This code will return <code>false</code> when the <code>indexOf</code> call returns -1; otherwise <code>true</code>.</p>\n\n<p>As you say, it would be much more sensible to use something like</p>\n\n<pre><code>return this.modifiedPaths.indexOf(path) !== -1;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>My guess is that it is there because it's a few characters shorter (which library authors are always after). It also uses operations that only take a few machine cycles when compiled into the native code (as opposed to the comparison to a number.)</p>\n\n<p>I agree with another answer that it's an overkill but perhaps might make sense in a tight loop (requires performance gain estimation, though, otherwise may turn out to be premature optimization.)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I assume, since it is a bitwise operation, it is the fastest (computationally cheap) way to check whether path appears in modifiedPaths</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As <code>(~(-1)) === 0</code>, so: </p>\n\n<pre><code>!!(~(-1)) === Boolean(~(-1)) === Boolean(0) === false\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>~foo.indexOf(bar)</code> is a common shorthand to represent <code>foo.contains(bar)</code> because the <code>contains</code> function doesn't exist.</p>\n\n<p>Typically the cast to boolean is unnecessary due to JavaScript's concept of \"falsy\" values. In this case it's used to force the output of the function to be <code>true</code> or <code>false</code>.</p>\n",
                    "is_accepted": false,
                    "score": 26
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/9316612/what-does-tilde-preceding-jquery-object-do\">What does tilde (~) preceding jQuery object do?</a>  </p>\n</blockquote>\n\n\n\n<p>I found a strange <code>!!~</code> in the code when reading: <a href=\"https://github.com/LearnBoost/mongoose/blob/master/lib/document.js#L678\">https://github.com/LearnBoost/mongoose/blob/master/lib/document.js#L678</a></p>\n\n<pre><code>Document.prototype.isModified = function (path) {\n  return !!~this.modifiedPaths.indexOf(path);\n};\n</code></pre>\n\n<p>I have read that <a href=\"http://stackoverflow.com/questions/784929/what-is-the-not-not-operator-in-javascript\">What is the !! (not not) operator in JavaScript?</a> and <a href=\"http://stackoverflow.com/questions/6260475/how-to-the-operator\">How to: The ~ operator?</a>; why did the author use <code>!!~</code> here?</p>\n\n<p>I tried:</p>\n\n<pre><code>!!~1  // -&gt; true\n!!~0  // -&gt; true\n!!~-1 // -&gt; false\n!!~-2 // -&gt; true\n</code></pre>\n\n<p>It seems that it only be <code>false</code> when the number is <code>-1</code>. Is it right? Why not just check the number is not <code>-1</code> or <code>&gt;=0</code>?</p>\n",
            "last_activity_date": 1354544391,
            "question_id": 10582286,
            "score": 45,
            "tags": [
                "javascript",
                "operators",
                "mongoose",
                "bitwise-operators",
                "comparison-operators"
            ],
            "title": "What does `!!~` mean in javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Maybe something like this, where you could select more than one element if you'd like?</p>\n\n<pre><code>$(\"#number\").each(function(){\n  $(this).val(parseFloat($(this).val()).toFixed(2));\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 45
                },
                {
                    "body": "<p>If you're doing this to several fields, or doing it quite often, then perhaps a plugin is the answer.<br />\nHere's the beginnings of a jQuery plugin that formats the value of a field to two decimal places.<br />\nIt is triggered by the onchange event of the field. You may want something different.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    // mini jQuery plugin that formats to two decimal places\n    (function($) {\n        $.fn.currencyFormat = function() {\n            this.each( function( i ) {\n                $(this).change( function( e ){\n                    if( isNaN( parseFloat( this.value ) ) ) return;\n                    this.value = parseFloat(this.value).toFixed(2);\n                });\n            });\n            return this; //for chaining\n        }\n    })( jQuery );\n\n    // apply the currencyFormat behaviour to elements with 'currency' as their class\n    $( function() {\n        $('.currency').currencyFormat();\n    });\n\n&lt;/script&gt;   \n&lt;input type=\"text\" name=\"one\" class=\"currency\"&gt;&lt;br&gt;\n&lt;input type=\"text\" name=\"two\" class=\"currency\"&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 76
                },
                {
                    "body": "<p>We modify a Meouw function to be used with keyup, because when you are using an input it can be more helpful.</p>\n\n<p>Check this:</p>\n\n<p>Hey there!, @heridev and I created a small function in jQuery.</p>\n\n<p>You can try next:</p>\n\n<p>HTML</p>\n\n<pre><code>&lt;input type=\"text\" name=\"one\" class=\"two-digits\"&gt;&lt;br&gt;\n&lt;input type=\"text\" name=\"two\" class=\"two-digits\"&gt;\u200b\n</code></pre>\n\n<p>jQuery</p>\n\n<pre><code>// apply the two-digits behaviour to elements with 'two-digits' as their class\n$( function() {\n    $('.two-digits').keyup(function(){\n        if($(this).val().indexOf('.')!=-1){         \n            if($(this).val().split(\".\")[1].length &gt; 2){                \n                if( isNaN( parseFloat( this.value ) ) ) return;\n                this.value = parseFloat(this.value).toFixed(2);\n            }  \n         }            \n         return this; //for chaining\n    });\n});\n</code></pre>\n\n<p>\u200b\nDEMO ONLINE:</p>\n\n<p><a href=\"http://jsfiddle.net/c4Wqn/\" rel=\"nofollow\">http://jsfiddle.net/c4Wqn/</a></p>\n\n<p>(@heridev, @vicmaster)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>This is what I have right now: </p>\n\n<pre><code>$(\"#number\").val(parseFloat($(\"#number\").val()).toFixed(2));\n</code></pre>\n\n<p>It looks messy to me.  I don't think I'm chaining the functions correctly.  Do I have to call it for each textbox, or can I create a separate function?</p>\n",
            "last_activity_date": 1354035471,
            "question_id": 477892,
            "score": 43,
            "tags": [
                "javascript",
                "jquery",
                "rounding",
                "decimal-point",
                "number-formatting"
            ],
            "title": "In jQuery, what&#39;s the best way of formatting a number to 2 decimal places?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>function intersect(a, b) {\n  return (a.left &lt;= b.right &amp;&amp;\n          b.left &lt;= a.right &amp;&amp;\n          a.top &lt;= b.bottom &amp;&amp;\n          b.top &lt;= a.bottom)\n}\n</code></pre>\n\n<p>This assumes that the <code>top</code> is normally less than <code>bottom</code> (i.e. that <code>y</code> coordinates increase downwards).</p>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>This is how that code can be translated to JavaScript. Note that there is a typo in your code, and in that of the article, as the comments have suggested. Specifically <code>r2-&gt;right left</code> should be <code>r2-&gt;right &lt; r1-&gt;left</code> and <code>r2-&gt;bottom top</code> should be <code>r2-&gt;bottom &lt; r1-&gt;top</code> for the function to work.</p>\n\n<pre><code>function intersectRect(r1, r2) {\n  return !(r2.left &gt; r1.right || \n           r2.right &lt; r1.left || \n           r2.top &gt; r1.bottom ||\n           r2.bottom &lt; r1.top);\n}\n</code></pre>\n\n<p>Test case:</p>\n\n<pre><code>var rectA = {\n  left:   10,\n  top:    10,\n  right:  30,\n  bottom: 30\n};\n\nvar rectB = {\n  left:   20,\n  top:    20,\n  right:  50,\n  bottom: 50\n};\n\nvar rectC = {\n  left:   70,\n  top:    70,\n  right:  90,\n  bottom: 90\n};\n\nintersectRect(rectA, rectB);  // returns true\nintersectRect(rectA, rectC);  // returns false\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 64
                },
                {
                    "body": "<p>This is how the .NET Framework implements Rectangle.Intersect</p>\n\n<pre><code>public bool IntersectsWith(Rectangle rect)\n{\n  if (rect.X &lt; this.X + this.Width &amp;&amp; this.X &lt; rect.X + rect.Width &amp;&amp; rect.Y &lt; this.Y + this.Height)\n    return this.Y &lt; rect.Y + rect.Height;\n  else\n    return false;\n}\n</code></pre>\n\n<p>Or the static version:</p>\n\n<pre><code>public static Rectangle Intersect(Rectangle a, Rectangle b)\n{\n  int x = Math.Max(a.X, b.X);\n  int num1 = Math.Min(a.X + a.Width, b.X + b.Width);\n  int y = Math.Max(a.Y, b.Y);\n  int num2 = Math.Min(a.Y + a.Height, b.Y + b.Height);\n  if (num1 &gt;= x &amp;&amp; num2 &gt;= y)\n    return new Rectangle(x, y, num1 - x, num2 - y);\n  else\n    return Rectangle.Empty;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>What's a fast way to test if 2 rectangles are intersecting?</p>\n\n<hr>\n\n<p>A search on the internet came up with this one-liner (WOOT!), but I don't understand how to write it in Javascript, it seems to be written in an ancient form of C++.</p>\n\n<pre><code>struct\n{\n    LONG    left;\n    LONG    top;\n    LONG    right;\n    LONG    bottom;\n} RECT; \n\nbool IntersectRect(const RECT * r1, const RECT * r2)\n{\n    return ! ( r2-&gt;left &gt; r1-&gt;right\n        || r2-&gt;right left\n        || r2-&gt;top &gt; r1-&gt;bottom\n        || r2-&gt;bottom top\n        );\n}\n</code></pre>\n",
            "last_activity_date": 1396898281,
            "question_id": 2752349,
            "score": 36,
            "tags": [
                "javascript",
                "c++",
                "language-agnostic",
                "graphics"
            ],
            "title": "Fast rectangle to rectangle intersection"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<ul>\n<li>They can't justify the filesize (even though it is probably less than script which doesn't utilise the abstractions provided).</li>\n<li>They don't want to rely on third party tools.</li>\n<li>Their business does not want to run any libraries (for whatever reasons).</li>\n<li>Their business does not want to run any JavaScript code not written by their employees.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>filesize - but really, beyond that, it's an absolute god-send for cross-platform javascript and browser differences. You would have to have some very good reasons not to want it in your toolkit (or be a fundamentalist developer idiot). </p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>By all means, I like jQuery, but there are some reasons not to use jQuery:</p>\n\n<ol>\n<li>Download size/bandwidth: jQuery 1.5 is now over 200K uncompressed, for some the size of the library is too much to justify the benefit.</li>\n<li>Performance: Writing native JS will always be faster than abstracting it behind a library.</li>\n<li>Added complexity: Many people will download the entire jQuery library when really they only need a few neat features from it.</li>\n<li>Application Dependencies: Introducing dependencies always has its hang ups. If there is a bug in jQuery, you can debug and edit the file, but upgrading later introduces problems. You could leave the bug, but now you are dependent on jQuery's time table for a fix, not your own.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<ul>\n<li>To actually code everything, and learn more. (Rather than using precoded stuff)</li>\n<li>jQuery has TONS of features you might just not need, why make the user download so many code if it's not going to be used?</li>\n<li>Challenge yourself? <em>Can I beat jQuery, or at least, can I survive with plain vanilla code?</em></li>\n<li>Flexibility: Altho jQuery is really flexible...you might need something it doesn't provide...</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>jQuery expresses <em>everything</em> in a DOM-centric paradigm which can be misleading and doesn't require any need to express things in an application pattern.</p>\n\n<p>Many developers wind up programming themselves into a corner with this DOM-centric pattern and eventually realize they haven't created anything extensible or reusable.</p>\n\n<p>Rebecca Murphey has a great write-up of her own switch to <a href=\"http://rmurphey.com/blog/2009/11/12/dojo-confessions-or-how-i-gave-up-my-jquery-security-blanket-and-lived-to-tell-the-tale/\">Dojo from jQuery</a> - the blog post is more about why <em>not</em> jQuery versus <em>why</em> Dojo.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>I would prefer to use jquery for dom manipulation or traversing the dom , which is really easy with jquery . Moreover, attaching an event or event delegation are so easy using jquery or other framework otherwise you have to write custom event attachment for IE or non IE browsers etc.</p>\n\n<p>But it has some performance penalty when you use $.each instead of vanilla JS for and array.push()...\nother issues like if you bind an event and remove that without unbind  it will have memory leak.... </p>\n\n<p>My conclusion is only use any framework for complex dom manipulation and rest use vanilla JS</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I'll answer about jQuery but those are the same arguments that I've heard against using YUI, Prototype, Dojo, Ext and few others. Main arguments that I've heard:</p>\n\n<ol>\n<li><p><strong>file size</strong>, which in fact is 29KB - probably smaller than the logo on an average website and can be served from Google's CDN which is likely to be already in the cache of most of your visitors. As using jQuery always means smaller file size of your own JavaScript files, it can actually mean <em>smaller</em> download, even if not already in the browser cache.</p></li>\n<li><p><strong>speed</strong> - writing pure JavaScript may be faster, but writing <em>portable</em> JavaScript seems to be impossible for most of the people. A website that is faster but doesn't work on every popular browser is useless in the real world. Besides jQuery uses some pretty heavy optimizations to actually be pretty damn fast and keeps getting even faster with every release, so it's actually not so easy to write faster code by hand for anything other than trivial examples.(*)</p></li>\n<li><p><strong>\"intellectual property\"</strong> - a company is scared using someone else's code - while in fact jQuery is open source and free software that is used everywhere from your grandma's blog to Amazon, from Twitter to Bank of America, from Google to Microsoft - if they can use it then any company can use it.</p></li>\n<li><p>I can't remember hearing any other argument being used seriously.</p></li>\n</ol>\n\n<p>(*) Here's a trivial example: getElementById('someid') vs. jQuery('#someid')</p>\n\n<p>Is using getElementById faster? Yes. And of course everyone always checks the parentNode to catch when Blackberry 4.6 returns nodes that are no longer in the document, right? jQuery does. And everyone handles the case where IE and Opera return items by name instead of ID, right? jQuery does. If you don't do it then your code is not portable and you introduce subtle bugs that can be very difficult to find. And getElementById is the most trivial example that one could possibly find - don't even get me started on events and AJAX and the DOM...</p>\n\n<h3>Update:</h3>\n\n<p>There is actually a fourth result of asking why someone doesn't want to use jQuery. I forgot to put it on this list because it is not really an answer but rather the <em>lack</em> of any answer. The <a href=\"http://stackoverflow.com/questions/5116471/prototype-plugin-for-cross-domain-request-to-other-hosts-websites/5117433#comment-5739408\">comment</a> I got yesterday reminded me about it. This is hardly a \"technical reason\" to be added to the list but may be interesting nonetheless and may actually be <em>the</em> most common reaction.</p>\n\n<p>What I personally suspect to be the <strong>main underlying reason</strong> to all of those reactions, though, is what I believe to be the biggest obstacle to progress in computer science: \"I don't want to use it because I never did, therefore it must not be that important.\"</p>\n\n<p>It was once the reaction to optimizing assemblers, compilers, structured programming, higher level languages, garbage collection, object oriented programming, closures or pretty much everything that we now take for granted \u2014 and today it's AJAX libraries. Maybe some day no one will remember that we once used to manually interact with the raw DOM API on the application level like now no one remembers that we once used to write programs using <a href=\"http://www.pbm.com/~lindahl/mel.html\">raw, unadorned, inscrutable hexadecimal numbers</a>.</p>\n",
                    "is_accepted": true,
                    "score": 70
                },
                {
                    "body": "<p>Why not use jQuery?</p>\n\n<p>I can't think of a good excuse to use vanilla JavaScript over jQuery (aside from the intimidation factor of learning something new), but some people prefer other JavaScript frameworks (like the excellent <a href=\"http://mootools.net/\" rel=\"nofollow\">MooTools</a>) due to the philosophical differences between them.</p>\n\n<p>Some people simply don't like jQuery's <a href=\"http://en.wikipedia.org/wiki/Domain-specific_language\" rel=\"nofollow\">DSL</a>-ish syntax, but they recognize the importance of using a robust JavaScript framework.</p>\n\n<p>Personally, I <em>love</em> jQuery, but I know people who use other frameworks and are no less productive.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Because quite often it's just unnecessary.\nif all I want to do is validate some input, or hilight some field then it's just as easy to write simple javascript / dom code. And jQuery doesn't really help in such simple cases, so the question should be <em>why</em> use it?</p>\n\n<p>Clearly there are many cases where it is very useful, but sometimes people seem to use it for no real reason too.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>One reason not to use a framework - and this is an extreme edge case - is when writing embeddable code for another website, such as a banner. Arbitrarily inserting some complicated library or another will be polluting the namespace and potentially breaking someone else's site. Not that I wouldn't put it past some advertisers to try anyway, the pond-sucking scum, but I digress...</p>\n\n<p>I disapprove of adding a framework when one is already present and equally capable. I see it all too often and it's my pet hate, I see it as unwarranted bloat. That is another question entirely.</p>\n\n<p>Other than that I cannot think of a justified reason not to.</p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p><strong>Context:</strong>\nI am astounded by the number of front end developers that hack at HTML, Javascript and CSS all day long and that <strong>ignore</strong> tools like jQuery ( <em>or other equivalent helper frameworks</em> ) and <strong>refuse</strong> to use them. I am not talking about JavaScript gurus, I am talking about in the trenches every day Joe production developers. I get a lot of arguments that are more like excuses or personal opinions that I don't think have any technical merit, I want to make sure I am not missing something.</p>\n\n<p><strong>Question:</strong>\nWhat are some empirical technical reasons not to use jQuery?</p>\n\n<p><em>I am not looking for religious or dogmatic arguments or subjective opinions \"like some other framework is better\", consider jQuery the straw man for all comparable frameworks in the question.</em></p>\n",
            "last_activity_date": 1363263307,
            "question_id": 5099949,
            "score": 34,
            "tags": [
                "javascript",
                "jquery",
                "frameworks"
            ],
            "title": "What are some empirical technical reasons not to use jQuery?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You use a semi-colon after a statement. This is a statement:</p>\n\n<pre><code>var foo = function() {\n  alert(\"bar\");\n};\n</code></pre>\n\n<p>because it is a variable assignment (ie creating and assigning an anonymous function to a variable).</p>\n\n<p>The two things that spring to mind that aren't statements are function declarations:</p>\n\n<pre><code>function foo() {\n  alert(\"bar\");\n}\n</code></pre>\n\n<p>and blocks:</p>\n\n<pre><code>{\n  alert(\"foo\");\n}\n</code></pre>\n\n<p><strong>Note:</strong> that same block construct without semi-colon also applies to <code>for</code>, <code>do</code> and <code>while</code> loops.</p>\n",
                    "is_accepted": true,
                    "score": 56
                },
                {
                    "body": "<p>It matters too when you intend to minify your code.</p>\n\n<p>So I personally add one after every <code>}</code> where ASI would insert one.</p>\n\n<p>I wrote a post about <a href=\"http://blog.alexanderdickson.com/javascript-semicolons\" rel=\"nofollow\">ASI in JavaScript</a>.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>You never need to; you always can (except before <code>else</code> and <code>while</code>).</p>\n\n<h2>Explanation:</h2>\n\n<p>Unfortunately, Javascript semicolons are optional.<br>\nTherefore, you never need to add a semicolon.</p>\n\n<p>It is (very) good practice to terminate every <em>statement</em> with a semicolon.<br>\nThe only statements that end with a <code>}</code> are statements ending with an object literal (e.g. JSON) or function expression.</p>\n\n<p>Therefore, best practice is to put semicolons after the following two braces (only):</p>\n\n<pre><code>var myFunc = function() { };\nvar myobject = { };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Semicolons go at the end of lines that do not end in a curly brace or to separate statements  on the same line. It does no harm to use them after a closing brace, or to wear suspenders and a belt, but it does look a little nerdy.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h2>Don't use a semicolon:</h2>\n\n<p>...if it's just your every-day function declaration:</p>\n\n<pre><code>function foo() {\n\n} // No semicolon\n</code></pre>\n\n<p><br></p>\n\n<h2>Use a semicolon:</h2>\n\n<p>...if it's an assignment:</p>\n\n<pre><code>var foo = function() {\n\n}; // Semicolon\n</code></pre>\n\n<p><br>\n...or a self invoking function:</p>\n\n<pre><code>(function () {\n\n})(); // Semicolon\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>If we have a self-invoking function, we need to put a semicolon before it, otherwise it becomes part of the previous assignment statement. Consider the following:</p>\n\n<pre><code>testClass = function(name) {\n  document.write (\"Instantiating testClass&lt;br /&gt;\");\n  this.name = name;\n}\n\ntestClass.prototype.report = function() {\n  document.write (\"I'm \" + this.name + \"&lt;br /&gt;\");\n  return 1;\n}\n\ntestClass.prototype.testMethod = function(param) {\n  document.write (\"Running testMethod with parameter value \" + param + \"&lt;br /&gt;\");\n  return 2;\n} // notice that there is no semicolon here\n\n(function() {\n  document.write (\"Running self-invoking function&lt;br /&gt;\");\n  return 3;\n}());\n\nif (typeof(testClass.prototype.testMethod) !== \"function\") {\n  document.write (\"testMethod type: \" + typeof(testClass.prototype.testMethod));\n  document.write (\", value: \" + testClass.prototype.testMethod + \"&lt;br /&gt;\");\n}\nvar testOb = new testClass(\"Bill\");\ntestOb.report();\ntestOb.testMethod(4);\n</code></pre>\n\n<p><br />\nThis will produce the following output:<br /><br /></p>\n\n<blockquote>\n  <p>\"Running self-invoking function<br /> Running testMethod with\n  parameter value 3<br /> testMethod type: number, value: 2<br />\n  Instantiating testClass<br /> I'm Bill\"<br /></p>\n</blockquote>\n\n<p>...plus a JavaScript error reported by the browser: <code>testOb.testMethod is not a function</code><br /><br />\nThis is certainly not what we intended. Why is <code>testMethod</code> running immediately, before we have even instantiated the class? And why does it no longer exist when we want to call it as a member method?</p>\n\n<p>What is happening is that <code>testMethod</code> is being assigned not our function definition, but the return value of the function definition. And the function definition itself is being run anonymously. This is how:<br /></p>\n\n<ol>\n<li>The <code>testClass</code> constructor and the member method <code>report</code> are successfully defined/assigned.</li>\n<li>Because of the lack of a semicolon after the definition for <code>testMethod</code>, the <code>()</code> surrounding the following self-invoking function becomes an invocation operator, which causes <strong>what we think is our definition of</strong> <code>testMethod</code> to become an anonymous function that is invoked immediately, and the return value of the following anonymous function becomes its parameter list. This explains the order of printed output - our self-invoking function is run first as it is evaluated as a parameter.</li>\n<li>Since our intended function definition returns 2, it is this 2 that is assigned to <code>testMethod</code>, and <strong>not</strong> the function definition. This is confirmed by our printing of the type and value of <code>testMethod</code>.</li>\n<li>Now <code>testClass</code> is successfully instantiated as <code>testOb</code> and its <code>report</code> method works as intended, proving that the class definition is otherwise intact.</li>\n<li>When we try to call <code>testMethod</code>, we are told by the interpreter that it is not a function - and rightly so, because it is a number with the value 2.<br /></li>\n</ol>\n\n<p>If we put a semicolon after the definition of <code>testMethod</code>, it will separate its assignment from the calling of the self-invoking function, and we will have the result we expected:<br /><br /></p>\n\n<blockquote>\n  <p>\"Running self-invoking function<br /> Instantiating testClass<br />\n  I'm Bill<br /> Running testMethod with parameter value 4\"</p>\n</blockquote>\n\n<p><br /><br />\nOr we could even put it directly before the anonymous function:<br /></p>\n\n<pre><code>;(function() {...\n</code></pre>\n\n<p>But I suggest that since the problem is due to the lack of a semicolon at the end of an assignment statement, we should perhaps make a habit of always putting a semicolon after defining functions in this way. i.e. all of my functions above should have a semicolon after the closing brace, because they are all assignments of anonymous functions.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I know this thread is old but couldn't resist to share this code:</p>\n\n<pre><code>// this will break code\n\na=b=c=d=e=1\na = b + c     //semicolon required here\n(d + e).toString()\n</code></pre>\n\n<p>Will return \"Property of object [object Object] is not a function\". Because it will actually be executed as:</p>\n\n<pre><code>a = b + c(d + e).toString()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Many times I've seen a semicolon used after a function declaration, or after the anonymous \"return\" function of a Module Pattern script. When is it appropriate to use a semicolon after curly braces?</p>\n",
            "last_activity_date": 1412417584,
            "question_id": 2717949,
            "score": 34,
            "tags": [
                "javascript",
                "syntax",
                "curly-braces",
                "semicolon"
            ],
            "title": "When should I use a semicolon after curly braces?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>sometimes I don't get it... but actually it doesn't work with the class-selector. If you use the id $(\"#mysvg\") or the element $(\"svg\") it does work! Strange....</p>\n\n<p>And it only works when you move the onClick script from the header to the body after the svg element! jquery can only bind the onclick when the element is declared before the binding.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This happens because SVG DOM spec differs a lot from HTML DOM. </p>\n\n<p>SVG DOM is a different dialect, and some properties have same names but mean different things. For example, to get the className of an svg element, you use:</p>\n\n<pre><code>svg.className.baseVal\n</code></pre>\n\n<p>The properites affected by this are</p>\n\n<pre><code>className is SVGAnimatedString\nheight,width, x, y, offsetWidth, offsetHeight are SVGAnimatedLength\n</code></pre>\n\n<p>These Animated properties are structs, with <code>baseVal</code> holding the same value you'd find in HTML DOM and <code>animatedVal</code> holding I am not sure what.</p>\n\n<p>SVG DOM is also missing some properties libraries depend on, such as <code>innerHTML</code>.</p>\n\n<p>This breaks jQuery in many ways, anything that depends on above properties fails.</p>\n\n<p>In general, SVG DOM and HTML DOM do not mix very well. They work together just enough to lure you in, and then things break quietly, and another angel loses its wings.</p>\n\n<p>I wrote a little jQuery extension that wraps SVG elements to make them look more like HTML DOM</p>\n\n<pre><code>function(jQuery){\n  function svgWrapper(el) {\n    this._svgEl = el;\n    this.__proto__ = el;\n    Object.defineProperty(this, \"className\", {\n      get:  function(){ return this._svgEl.className.baseVal; },\n      set: function(value){    this._svgEl.className.baseVal = value; }\n    });\n    Object.defineProperty(this, \"width\", {\n      get:  function(){ return this._svgEl.width.baseVal.value; },\n      set: function(value){    this._svgEl.width.baseVal.value = value; }\n});\n    Object.defineProperty(this, \"height\", {\n      get:  function(){ return this._svgEl.height.baseVal.value; },\n      set: function(value){    this._svgEl.height.baseVal.value = value; }\n    });\n    Object.defineProperty(this, \"x\", {\n      get:  function(){ return this._svgEl.x.baseVal.value; },\n      set: function(value){    this._svgEl.x.baseVal.value = value; }\n    });\n    Object.defineProperty(this, \"y\", {\n      get:  function(){ return this._svgEl.y.baseVal.value; },\n      set: function(value){    this._svgEl.y.baseVal.value = value; }\n    });\n    Object.defineProperty(this, \"offsetWidth\", {\n      get:  function(){ return this._svgEl.width.baseVal.value; },\n      set: function(value){    this._svgEl.width.baseVal.value = value; }\n    });\n    Object.defineProperty(this, \"offsetHeight\", {\n      get:  function(){ return this._svgEl.height.baseVal.value; },\n      set: function(value){    this._svgEl.height.baseVal.value = value; }\n    });\n  };\n\njQuery.fn.wrapSvg = function() {\n  return this.map(function(i, el) {\n   if (el.namespaceURI == \"http://www.w3.org/2000/svg\" &amp;&amp; !('_svgEl' in el)) {\n     return new svgWrapper(el);\n   else\n     return el;\n   });\n };\n})(window.jQuery);\n</code></pre>\n\n<p>It creates a wrapper around SVG objects that makes them look like HTML DOM to jQuery. I've used it with jQuery-UI to make my SVG elements droppable.</p>\n\n<p>The lack of DOM interoperability between HTML and SVG is a total disaster. All the sweet utility libraries written for HTML have to be reinvented for SVG.</p>\n",
                    "is_accepted": true,
                    "score": 52
                }
            ],
            "body": "<p>I've been working with an HTML5 document with inline SVG and javascript animation.</p>\n\n<p>I'd like to have a box pop up when the user clicks anywhere, and I'd like the box to go away when the user clicks somewhere that isn't the box. This means I can't use <code>$(window).click()</code>, which works.</p>\n\n<p>I've tried selecting the SVGs on top by giving them class names and using <code>$(\".svgclassname\").click()</code>, but this doesn't seem to work. Neither does selecting individual ones with <code>$(\"#svgname\").click()</code>.</p>\n\n<p>What is the problem?</p>\n\n<p>You can see the page using the source code as I've described it here: <a href=\"http://willshown.com/dw/index.xhtml\">index.xhtml</a></p>\n\n<p>(When I replace <code>$(\".eyesvg\")</code> with <code>$(window)</code>, a blue box appears near the cursor when the user clicks anywhere in the window.)</p>\n",
            "last_activity_date": 1418756076,
            "question_id": 3294553,
            "score": 24,
            "tags": [
                "javascript",
                "jquery",
                "xhtml",
                "jquery-selectors",
                "svg"
            ],
            "title": "jQuery Selector + SVG Incompatible?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Use the <code>hasClass</code> method:</p>\n\n<pre><code>jQueryCollection.hasClass(className);\n</code></pre>\n\n<p>or</p>\n\n<pre><code>$(selector).hasClass(className);\n</code></pre>\n\n<p>The argument is (obviously) a string representing the class you are checking, and it returns a boolean (so it doesn't support chaining like most jQuery methods).</p>\n\n<p><strong>Note:</strong> If you pass a <code>className</code> argument that contains whitespace, it will be matched literally against the collection's elements' <code>className</code> string. So if, for instance, you have an element,</p>\n\n<pre><code>&lt;span class=\"foo bar\" /&gt;\n</code></pre>\n\n<p>then this will return <code>true</code>:</p>\n\n<pre><code>$('span').hasClass('foo bar')\n</code></pre>\n\n<p>and these will return <code>false</code>:</p>\n\n<pre><code>$('span').hasClass('bar foo')\n$('span').hasClass('foo  bar')\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 220
                },
                {
                    "body": "<p>from the <a href=\"http://docs.jquery.com/Frequently%5FAsked%5FQuestions#How%5Fdo%5FI%5Ftest%5Fwhether%5Fan%5Felement%5Fhas%5Fa%5Fparticular%5Fclass.3F\">FAQ</a></p>\n\n<pre><code>elem = $(\"#elemid\");\nif (elem.is (\".class\")) {\n   // whatever\n}\n</code></pre>\n\n<p>or:</p>\n\n<pre><code>elem = $(\"#elemid\");\nif (elem.hasClass (\"class\")) {\n   // whatever\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>As for the negation, if you want to know if an element hasn't a class you can simply do as Mark said.</p>\n\n<pre><code>if (!currentPage.parent().hasClass('home')) { do what you want }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Check the official jQuery FAQ page :</p>\n\n<p><a href=\"http://learn.jquery.com/using-jquery-core/faq/how-do-i-test-whether-an-element-has-a-particular-class/\" rel=\"nofollow\">How do I test whether an element has perticular class or not</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Without jQuery:</p>\n\n<pre><code>var hasclass=!!(' '+elem.className+' ').indexOf(' check_class ')+1;\n</code></pre>\n\n<p>Or:</p>\n\n<pre><code>function hasClass(e,c){\n    return e&amp;&amp;(e instanceof HTMLElement)&amp;&amp;!!((' '+e.className+' ').indexOf(' '+c+' ')+1);\n}\n/*example of usage*/\nvar has_class_medium=hasClass(document.getElementsByTagName('input')[0],'medium');\n</code></pre>\n\n<p>This is WAY faster than jQuery!</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm working with jQuery and looking to see if there is an easy way to determine if the element has a specific CSS class associated with it.</p>\n\n<p>I have the id of the element, and the CSS class that I'm looking for.  I just need to be able to, in an if statement, do a comparison based on the existence of that class on the element.</p>\n",
            "last_activity_date": 1389355450,
            "question_id": 263232,
            "score": 153,
            "tags": [
                "javascript",
                "jquery",
                "css"
            ],
            "title": "Determine if an element has a CSS class with jQuery"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<pre class=\"lang-js prettyprint-override\"><code>function getComboA(sel) {\n    var value = sel.value;  \n}\n</code></pre>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;select id=\"comboA\" onchange=\"getComboA(this)\"&gt;\n&lt;option value=\"\"&gt;Select combo&lt;/option&gt;\n&lt;option value=\"Value1\"&gt;Text1&lt;/option&gt;\n&lt;option value=\"Value2\"&gt;Text2&lt;/option&gt;\n&lt;option value=\"Value3\"&gt;Text3&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>The above example gets you the selected value of combo box on <a href=\"https://developer.mozilla.org/en-US/docs/DOM/element.onchange\">OnChange</a> event.</p>\n",
                    "is_accepted": true,
                    "score": 133
                },
                {
                    "body": "<p>For how to do it in Jquery:</p>\n\n<pre><code>&lt;select id=\"yourid\"&gt;\n&lt;option value=\"Value 1\"&gt;Text 1&lt;/option&gt;\n&lt;option value=\"Value 2\"&gt;Text 2&lt;/option&gt;\n&lt;/select&gt;\n\n&lt;script src=\"jquery.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n$('#yourid').change(function() {\n  alert('The option with value ' + $(this).val() + ' and text ' + $(this).text() + ' was selected.');\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>You should also know that Javascript and Jquery are not identical. Jquery is valid Javascript code, but not all Javascript is Jquery. You should look up the differences and make sure you are using the appropriate one.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>I found @Piyush's answer helpful, and just to add to it, if you programatically create a select, then there is an important way to get this behavior that may not be obvious.  Let's say you have a function and you create a new select:</p>\n\n<pre><code>var changeitem = function (sel) {\n  console.log(sel.selectedIndex);\n}\nvar newSelect = document.createElement('select');\nnewSelect.id = 'newselect';\n</code></pre>\n\n<p>The normal behavior may be to say</p>\n\n<pre><code>newSelect.onchange = changeitem;\n</code></pre>\n\n<p>But this does not really allow you to specify that argument passed in, so instead you may do this:</p>\n\n<pre><code>newSelect.setAttribute('onchange', 'changeitem(this)');\n</code></pre>\n\n<p>And you are able to set the parameter.  If you do it the first way, then the argument you'll get to your <code>onchange</code> function will be browser dependent.  The second way seems to work cross-browser just fine.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>this code once i write for just explain onChange event of select you can save this code as html and see output it works.and easy to understand for you.</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Register&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n    &lt;script&gt;\n        function show(){\n            var option = document.getElementById(\"category\").value;\n            if(option == \"Student\")\n                  {\n                        document.getElementById(\"enroll1\").style.display=\"block\";\n                  }\n            if(option == \"Parents\")\n                  {\n                        document.getElementById(\"enroll1\").style.display=\"none\";\n                  }\n            if(option == \"Guardians\")\n                  {\n                        document.getElementById(\"enroll1\").style.display=\"none\";\n                  }\n        }\n    &lt;/script&gt;\n            &lt;form action=\"#\" method=\"post\"&gt;\n                &lt;table&gt;\n                    &lt;tr&gt;\n                        &lt;td&gt;&lt;label&gt;Name &lt;/label&gt;&lt;/td&gt;\n                        &lt;td&gt;&lt;input type=\"text\" id=\"name\" size=20 maxlength=20 value=\"\"&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n                    &lt;tr style=\"display:block;\" id=\"enroll1\"&gt;\n                        &lt;td&gt;&lt;label&gt;Enrollment No. &lt;/label&gt;&lt;/td&gt;\n                        &lt;td&gt;&lt;input type=\"number\" id=\"enroll\" style=\"display:block;\" size=20 maxlength=12 value=\"\"&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n                    &lt;tr&gt;\n                        &lt;td&gt;&lt;label&gt;Email &lt;/label&gt;&lt;/td&gt;\n                        &lt;td&gt;&lt;input type=\"email\" id=\"emailadd\" size=20 maxlength=25 value=\"\"&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n                    &lt;tr&gt;\n                        &lt;td&gt;&lt;label&gt;Mobile No. &lt;/label&gt;&lt;/td&gt;\n                        &lt;td&gt;&lt;input type=\"number\" id=\"mobile\" size=20 maxlength=10 value=\"\"&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n                    &lt;tr&gt;\n                        &lt;td&gt;&lt;label&gt;Address&lt;/label&gt;&lt;/td&gt;\n                        &lt;td&gt;&lt;textarea rows=\"2\" cols=\"20\"&gt;&lt;/textarea&gt;&lt;/td&gt;\n                    &lt;/tr&gt;\n                    &lt;tr &gt;\n                        &lt;td&gt;&lt;label&gt;Category&lt;/label&gt;&lt;/td&gt;\n                        &lt;td&gt;&lt;select id=\"category\" onchange=\"show()\"&gt;    &lt;!--onchange show methos is call--&gt;\n                                &lt;option value=\"Student\"&gt;Student&lt;/option&gt;\n                                &lt;option value=\"Parents\"&gt;Parents&lt;/option&gt;\n                                &lt;option value=\"Guardians\"&gt;Guardians&lt;/option&gt;\n                            &lt;/select&gt;\n                        &lt;/td&gt;\n                    &lt;/tr&gt;\n                &lt;/table&gt;&lt;br/&gt;\n            &lt;input type=\"submit\" value=\"Sign Up\"&gt;\n        &lt;/form&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Another approach wich can be handy in some situations, is passing the value of the selected OPTION directly to the function like this:</p>\n\n<pre><code>&lt;SELECT onChange=\"myFunction(this.options[this.selectedIndex].value)\"&gt;\n  &lt;OPTION value=\"1\"&gt;Text 1&lt;/OPTION&gt;\n  &lt;OPTION value=\"2\"&gt;Text 2&lt;/OPTION&gt;\n&lt;/SELECT&gt;\n</code></pre>\n\n<p>Hope it helps someone.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<h3>jQuery solution</h3>\n\n<p><a href=\"http://learn.jquery.com/using-jquery-core/faq/how-do-i-get-the-text-value-of-a-selected-option/\" rel=\"nofollow\">How do I get the text value of a selected option</a></p>\n\n<p>Select elements typically have <em>two values</em> that you want to access.<br>\nFirst there's the <em>value</em> to be sent to the server, which is easy: </p>\n\n<pre><code>$( \"#myselect\" ).val();\n// =&gt; 1\n</code></pre>\n\n<p>The second is the <em>text value</em> of the select.<br>\nFor example, using the following select box:</p>\n\n<pre><code>&lt;select id=\"myselect\"&gt;\n  &lt;option value=\"1\"&gt;Mr&lt;/option&gt;\n  &lt;option value=\"2\"&gt;Mrs&lt;/option&gt;\n  &lt;option value=\"3\"&gt;Ms&lt;/option&gt;\n  &lt;option value=\"4\"&gt;Dr&lt;/option&gt;\n  &lt;option value=\"5\"&gt;Prof&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>If you wanted to get the string \"Mr\" if the first option was selected (instead of just \"1\") you would do that in the following way:  </p>\n\n<pre><code>$( \"#myselect option:selected\" ).text();\n// =&gt; \"Mr\"  \n</code></pre>\n\n<h3>See also</h3>\n\n<ul>\n<li><a href=\"http://api.jquery.com/val/\" rel=\"nofollow\">.val() jQuery API Documentation</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can try bellow code  </p>\n\n<pre><code>&lt;select onchange=\"myfunction($(this).val())\" id=\"myId\"&gt;\n    &lt;/select&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am a novice at JavaScript and jQuery. I want to show one combobox-A, which is an HTML <code>&lt;select&gt;</code> with its selected <code>id</code> and contents at the other place on onChange(). </p>\n\n<p>How can i pass the complete combobox with its select <code>id</code> and how can I pass other parameters on fire of onChange event.</p>\n",
            "last_activity_date": 1424877682,
            "question_id": 5024056,
            "score": 61,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "combobox",
                "onchange"
            ],
            "title": "How to pass parameters on onChange of html select"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>This is indeed a restriction in the AMD format. You could use exports, and that problem goes away. I find exports to be ugly, but it is how regular CommonJS modules solve the problem:</p>\n\n<pre><code>define(\"Employee\", [\"exports\", \"Company\"], function(exports, Company) {\n    function Employee(name) {\n        this.name = name;\n        this.company = new Company.Company(name + \"'s own company\");\n    };\n    exports.Employee = Employee;\n});\ndefine(\"Company\", [\"exports\", \"Employee\"], function(exports, Employee) {\n    function Company(name) {\n        this.name = name;\n        this.employees = [];\n    };\n    Company.prototype.addEmployee = function(name) {\n        var employee = new Employee.Employee(name);\n        this.employees.push(employee);\n        employee.company = this;\n    };\n    exports.Company = Company;\n});\n</code></pre>\n\n<p>Otherwise, the require(\"Employee\") you mention in your message would work too.</p>\n\n<p>In general with modules you need to be more aware of circular dependencies, AMD or not. Even in plain JavaScript, you have to be sure to use an object like the G object in your example.</p>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>I think this is quite a drawback in larger projects where (multi-level) circular dependencies dwell undetected.\nHowever, with <a href=\"https://github.com/pahen/madge\">madge</a> you can print a list of circular dependencies to approach them.</p>\n\n<pre><code>madge --circular --format amd /path/src\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If you don't need your dependencies to be loaded at the start (e.g., when you are extending a class), then this is what you can do: (taken from <a href=\"http://requirejs.org/docs/api.html#circular\">http://requirejs.org/docs/api.html#circular</a>)</p>\n\n<p>In the file <code>a.js</code>:</p>\n\n<pre><code>    define( [ 'B' ], function( B ){\n\n        // Just an example\n        return B.extend({\n            // ...\n        })\n\n    });\n</code></pre>\n\n<p>And in the other file <code>b.js</code>:</p>\n\n<pre><code>    define( [ ], function( ){ // Note that A is not listed\n\n        var a;\n        require(['A'], function( A ){\n            a = new A();\n        });\n\n        return function(){\n            functionThatDependsOnA: function(){\n                // Note that 'a' is not used until here\n                a.doStuff();\n            }\n        };\n\n    });\n</code></pre>\n\n<p>In the OP's example, this is how it would change:</p>\n\n<pre><code>    define(\"Employee\", [], function() {\n\n        var Company;\n        require([\"Company\"], function( C ){\n            // Delayed loading\n            Company = C;\n        });\n\n        return function (name) {\n            this.name = name;\n            this.company = new Company(name + \"'s own company\");\n        };\n    });\n\n    define(\"Company\", [\"Employee\"], function(Employee) {\n        function Company(name) {\n            this.name = name;\n            this.employees = [];\n        };\n        Company.prototype.addEmployee = function(name) {\n            var employee = new Employee(name);\n            this.employees.push(employee);\n            employee.company = this;\n        };\n        return Company;\n    });\n\n    define(\"main\", [\"Employee\", \"Company\"], function (Employee, Company) {\n        var john = new Employee(\"John\");\n        var bigCorp = new Company(\"Big Corp\");\n        bigCorp.addEmployee(\"Mary\");\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I would just avoid the circular dependency. Maybe something like:</p>\n\n<pre><code>G.Company.prototype.addEmployee = function(employee) {\n    this.employees.push(employee);\n    employee.company = this;\n};\n\nvar mary = new G.Employee(\"Mary\");\nvar bigCorp = new G.Company(\"Big Corp\");\nbigCorp.addEmployee(mary);\n</code></pre>\n\n<p>I don't think it's a good idea to work around this issue and try to keep the circular dependency. Just feels like general bad practice. In this case it can work because you really require those modules for when the exported function is called. But imagine the case where modules are required and used in the actual definition functions itself. No workaround will make that work. That's probably why require.js fails fast on circular dependency detection in the dependencies of the definition function.</p>\n\n<p>If you really have to add a work around, the cleaner one IMO is to require a dependency just in time (in your exported functions in this case), then the definition functions will run fine. But even cleaner IMO is just to avoid circular dependencies altogether, which feels really easy to do in your case.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>All the posted answers (except <a href=\"http://stackoverflow.com/a/25170248/14731\">http://stackoverflow.com/a/25170248/14731</a>) are wrong. Even the official documentation (as of November 2014) is wrong.</p>\n\n<p>The only solution that worked for me is to declare a \"gatekeeper\" file, and have it define any method that depends on the circular dependencies. See <a href=\"http://stackoverflow.com/a/26809254/14731\">http://stackoverflow.com/a/26809254/14731</a> for a concrete example.</p>\n\n<hr>\n\n<p>Here is why the above solutions will not work.</p>\n\n<ol>\n<li>You cannot:</li>\n</ol>\n\n<pre><code>var a;\nrequire(['A'], function( A ){\n     a = new A();\n});\n</code></pre>\n\n<p>and then use <code>a</code> later on, because there is no guarantee that this code block will get executed before the code block that uses <code>a</code>. (This solution is misleading because it works 90% of the time)</p>\n\n<ol start=\"2\">\n<li>I see no reason to believe that <code>exports</code> is not vulnerable to the same race condition.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>In my system, I have a number of \"classes\" loaded in the browser each a separate files during development, and concatenated together for production. As they are loaded, they initialize a property on a global object, here <code>G</code>, as in this example:</p>\n\n<pre><code>var G = {};\n\nG.Employee = function(name) {\n    this.name = name;\n    this.company = new G.Company(name + \"'s own company\");\n};\n\nG.Company = function(name) {\n    this.name = name;\n    this.employees = [];\n};\nG.Company.prototype.addEmployee = function(name) {\n    var employee = new G.Employee(name);\n    this.employees.push(employee);\n    employee.company = this;\n};\n\nvar john = new G.Employee(\"John\");\nvar bigCorp = new G.Company(\"Big Corp\");\nbigCorp.addEmployee(\"Mary\");\n</code></pre>\n\n<p>Instead of using my own global object, I am considering to make each class its own <a href=\"http://wiki.commonjs.org/wiki/Modules/AsynchronousDefinition\">AMD module</a>, based on <a href=\"http://stackoverflow.com/questions/4869530/requirejs-how-to-define-modules-that-contain-a-single-class/4878241#4878241\">James Burke's suggestion</a>:</p>\n\n<pre><code>define(\"Employee\", [\"Company\"], function(Company) {\n    return function (name) {\n        this.name = name;\n        this.company = new Company(name + \"'s own company\");\n    };\n});\ndefine(\"Company\", [\"Employee\"], function(Employee) {\n    function Company(name) {\n        this.name = name;\n        this.employees = [];\n    };\n    Company.prototype.addEmployee = function(name) {\n        var employee = new Employee(name);\n        this.employees.push(employee);\n        employee.company = this;\n    };\n    return Company;\n});\ndefine(\"main\", [\"Employee\", \"Company\"], function (Employee, Company) {\n    var john = new Employee(\"John\");\n    var bigCorp = new Company(\"Big Corp\");\n    bigCorp.addEmployee(\"Mary\");\n});\n</code></pre>\n\n<p>The issue is that before, there was no declare-time dependency between Employee and Company: you could put the declaration in whatever order you wanted, but now, using RequireJS, this introduces a dependency, which is here (intentionally) circular, so the above code fails. Of course, in <code>addEmployee()</code>, adding a first line <code>var Employee = require(\"Employee\");</code> would <a href=\"http://requirejs.org/docs/api.html#circular\">make it work</a>, but I see this solution as inferior to not using RequireJS/AMD as it requires me, the developer, to be aware of this newly created circular dependency and do something about it.</p>\n\n<p>Is there a better way to solve this problem with RequireJS/AMD, or am I using RequireJS/AMD for something it was not designed for?</p>\n",
            "last_activity_date": 1422567969,
            "question_id": 4881059,
            "score": 56,
            "tags": [
                "javascript",
                "commonjs",
                "requirejs"
            ],
            "title": "How to handle circular dependencies with RequireJS/AMD?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>See an example below (this example uses the native JSON object). My changes are commented in CAPITALS:</p>\n\n<pre><code>function Foo(obj) // CONSTRUCTOR CAN BE OVERLOADED WITH AN OBJECT\n{\n    this.a = 3;\n    this.b = 2;\n    this.test = function() {return this.a*this.b;};\n\n    // IF AN OBJECT WAS PASSED THEN INITIALISE PROPERTIES FROM THAT OBJECT\n    for (var prop in obj) this[prop] = obj[prop];\n}\n\nvar fooObj = new Foo();\nalert(fooObj.test() ); //Prints 6\n\n// INITIALISE A NEW FOO AND PASS THE PARSED JSON OBJECT TO IT\nvar fooJSON = new Foo(JSON.parse('{\"a\":4,\"b\":3}'));\n\nalert(fooJSON.test() ); //Prints 12\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>A blog post that I found useful:\n<a href=\"http://javascriptweblog.wordpress.com/2010/06/07/understanding-javascript-prototypes/\">Understanding JavaScript Prototypes</a></p>\n\n<p>You can mess with the __proto__ property of the Object.</p>\n\n<pre><code>var fooJSON = jQuery.parseJSON({\"a\":4, \"b\": 3});\nfooJSON.__proto__ = Foo.prototype;\n</code></pre>\n\n<p>This allows fooJSON to inherit the Foo prototype.</p>\n\n<p>I don't think this works in IE, though... at least from what I've read.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I liked your idea, Oliver.  How about this?</p>\n\n<pre><code>function Object.cast(rawObj, constructor)\n{\n    var obj = new constructor();\n    for(var i in rawObj)\n        obj.i = rawObj.i;\n    return obj;\n}\nvar fooJSON = Object.cast(jQuery.parseJSON({\"a\":4, \"b\": 3}), Foo);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Do you want to add JSON serialization/deserialization functionality, right? Then look at this:\n<br/><br/>\nYou want to achieve this:</p>\n\n<p><img src=\"http://i.stack.imgur.com/4jUQG.png\" alt=\"UML\"></p>\n\n<p>toJson() is a normal method.<br/>\nfromJson() is a static method.</p>\n\n<p><strong>Implementation</strong>:</p>\n\n<pre><code>var Book = function (title, author, isbn, price, stock){\n    this.title = title;\n    this.author = author;\n    this.isbn = isbn;\n    this.price = price;\n    this.stock = stock;\n\n    this.toJson = function (){\n        return (\"{\" +\n            \"\\\"title\\\":\\\"\" + this.title + \"\\\",\" +\n            \"\\\"author\\\":\\\"\" + this.author + \"\\\",\" +\n            \"\\\"isbn\\\":\\\"\" + this.isbn + \"\\\",\" +\n            \"\\\"price\\\":\" + this.price + \",\" +\n            \"\\\"stock\\\":\" + this.stock +\n        \"}\");\n    };\n};\n\nBook.fromJson = function (json){\n    var obj = JSON.parse (json);\n    return new Book (obj.title, obj.author, obj.isbn, obj.price, obj.stock);\n};\n</code></pre>\n\n<p><strong>Usage</strong>:</p>\n\n<pre><code>var book = new Book (\"t\", \"a\", \"i\", 10, 10);\nvar json = book.toJson ();\nalert (json); //prints: {\"title\":\"t\",\"author\":\"a\",\"isbn\":\"i\",\"price\":10,\"stock\":10}\n\nvar book = Book.fromJson (json);\nalert (book.title); //prints: t\n</code></pre>\n\n<p>Note: If you want you can change all property definitions like <code>this.title</code>, <code>this.author</code>, etc by <code>var title</code>, <code>var author</code>, etc. and add getters to them to accomplish the UML definition.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<pre><code>Object.cast = function(rawObj, constructor)\n{\n    var obj = new constructor();\n    for (var i in rawObj) {\n        eval(\"obj.\" + i + \"=rawObj.\" + i);\n    }\n    return obj;\n};\n\nvar fooJSON = Object.cast(jQuery.parseJSON({\"a\":4, \"b\": 3}), Foo);\n</code></pre>\n\n<p>This will work.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>While, this is not technically what you want, if you know before hand the type of object you want to handle you can use the call/apply methods of the prototype of your known object.</p>\n\n<p>you can change this</p>\n\n<pre><code>alert(fooJSON.test() ); //Prints 12\n</code></pre>\n\n<p>to this</p>\n\n<pre><code>alert(Foo.prototype.test.call(fooJSON); //Prints 12\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I know how to parse a JSON String and turn it into a JavaScript Object.  You can use eval() or jQuery.parseJSON().</p>\n\n<p>That's great, but how can I take that JavaScript Object and turn it into a <em>particular</em> JavaScript Object (i.e. with a certain prototype)?</p>\n\n<p>For example, suppose you have:</p>\n\n<pre><code>function Foo()\n{\n   this.a = 3;\n   this.b = 2;\n   this.test = function() {return this.a*this.b;};\n}\nvar fooObj = new Foo();\nalert(fooObj.test() ); //Prints 6\nvar fooJSON = jQuery.parseJSON({\"a\":4, \"b\": 3});\n//Something to convert fooJSON into a Foo Object\n//....... (this is what I am missing)\nalert(fooJSON.test() ); //Prints 12\n</code></pre>\n\n<p>Again, I am not wondering how to convert a JSON string into a generic JavaScript Object.  I want to know how to convert a JSON string into a \"Foo\" Object.  That is, my Object should now have a function 'test' and properties 'a' and 'b'.</p>\n\n<p><strong>UPDATE</strong>\nAfter doing some research, I thought of this...</p>\n\n<pre><code>Object.cast = function cast(rawObj, constructor)\n{\n    var obj = new constructor();\n    for(var i in rawObj)\n        obj[i] = rawObj[i];\n    return obj;\n}\nvar fooJSON = Object.cast({\"a\":4, \"b\": 3}, Foo);\n</code></pre>\n\n<p>Will that work?</p>\n",
            "last_activity_date": 1417622268,
            "question_id": 5873624,
            "score": 31,
            "tags": [
                "javascript",
                "json",
                "parsing",
                "object",
                "prototype"
            ],
            "title": "Parse JSON String into a Particular Object Prototype in JavaScript"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>In order to unbind an event handler you need to pass the handler function into unbind(). So you already have the handler function, all you have to do is remember it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is a events element in the data of the item.  This should get your started, you can read your elements and store the handlers in an array before unbinding.  Comment if you need more help.  I got this idea from reading the $.fn.clone method so take a look at that as well.</p>\n\n<pre><code>$(document).ready(function() {\n    $('#test').click(function(e) {\n        alert('test');\n        var events = $('#test').data(\"events\");\n        $('#test').unbind('click', events.click[0]);\n    });\n});\n\n&lt;a id=\"test\"&gt;test&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>There is now a good jQuery plugin called <a href=\"http://plugins.jquery.com/project/copyEvents\" rel=\"nofollow\">copyEvents</a>, which copies events from one object to another. This could very easily be used to \"save\" events from one element and bring them back later. Just one more option :)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here is how to achieve that, provides a <code>storeEvents</code> and a <code>restoreEvents</code> methods on a selection. <code>storeEvents</code> takes a snapshot of the events on the moment it is called. <code>restoreEvents</code> restores to the last previous snapshot. Might need to twist it a little for parameterizing the unbinding while restoring, maybe you'd like to keep the bound events after the last snapshot.</p>\n\n<pre><code>(function($){\n\n    function obj_copy(obj){\n            var out = {};\n        for (i in obj) {\n            if (typeof obj[i] == 'object') {\n                out[i] = this.copy(obj[i]);\n            }\n            else\n                out[i] = obj[i];\n        }\n        return out;\n    }\n\n\n    $.fn.extend({\n\n        storeEvents:function(){\n            this.each(function(){\n                $.data(this,'storedEvents',obj_copy($(this).data('events')));\n            });\n            return this;\n        },\n\n        restoreEvents:function(){\n            this.each(function(){\n                var events = $.data(this,'storedEvents');\n                if (events){\n                    $(this).unbind();\n                    for (var type in events){\n                        for (var handler in events[type]){\n                            $.event.add(\n                                this, \n                                type, \n                                events[type][handler], \n                                events[type][handler].data);\n                        }\n                    }\n                }\n            });\n            return this;\n        }\n\n    });\n})(jQuery);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Since jQuery 1.4.2+ changes how event handlers are stored, this seems relevant:</p>\n\n<p>The best way I found was to use event namespacing:</p>\n\n<pre><code>var ary_handlers = [ fn_highlight, fn_onpress, fn_cleanup ];\nfor ( idx = 0; idx &lt; ary_handlers.length; idx++ ){\n  $('#test').bind('click.foobar',ary_handlers[idx]);\n}\n\n// and then later: \n$('#test').unbind('.foobar');  \n</code></pre>\n\n<p>In the above example, all foobar events unbound.  Notice that if you needed finer grain control, you could namespace each click handler and correlate to your array of handlers:</p>\n\n<pre><code>var ary_handlers = [ fn_highlight, fn_onpress, fn_cleanup ];\nfor ( idx = 0; idx &lt; ary_handlers.length; idx++ ){\n  $('#test').bind('click.ns_' + String(idx), ary_handlers[idx]);\n}\n\n// and then later you could pick off a specific one to unbind\n$('#test').unbind('.ns_2');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Nick Craver appears to have the <a href=\"http://stackoverflow.com/a/2519061/39396\">correct answer</a> for jQuery 1.4.2+.  He also includes a helpful <a href=\"http://jsfiddle.net/968jj/\" rel=\"nofollow\">fiddle</a>.  His solution allows you to retrieve all event handlers attached to a jQuery element and to figure out which handler they were attached to.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You could use the <strong><code>event.handler</code></strong> parameter:</p>\n\n<pre><code>$(document).ready(function() {\n    $('#test').click(function(e) {\n        e.preventDefault();\n        alert('test');\n        $('#test').unbind('click', e.handler);\n        //Do Something...\n        $('#test').click();\n    });\n});\n\n&lt;a id=\"test\"&gt;test&lt;/a&gt;\n</code></pre>\n\n<p><code>event.handler</code> returns the current handler that has received the event, So by omitting it you could keep the other handlers.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Does anybody know how to unbind set of event handlers, but memorize them in order to bind them again later? Any suggestions?</p>\n",
            "last_activity_date": 1407401529,
            "question_id": 516265,
            "score": 29,
            "tags": [
                "javascript",
                "jquery",
                "events"
            ],
            "title": "jQuery: Unbind event handlers to bind them again later"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>It seems to me that if you change the hash, you are basically changing the location of the page, and so IE (or any browser) would reload. How are you trying to do this? <code>window.location.hash = \"\";</code> ? </p>\n\n<p>Maybe Firefox is just smart enough to see what you are doing and avoid the refresh.</p>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>The problem is that \"<strong>The hash is coming from else where in the web app via a redirect.</strong>\".\nIf you use javascript to redirect the url in the client like this:</p>\n\n<pre><code>location.href = 'test1.aspx#testhash'\n</code></pre>\n\n<p>it will be ok ! </p>\n\n<p>So this is the IE bug: When a web app via a redirect, the browser may only see the prev url, so when you modify the <code>location.hash</code>, the browser sees a url change, so refreshes the page.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>If you use javascript to set the hash don't use a \"#\" </p>\n\n<pre><code>window.location.hash = '#foo'; //IE will reload the page\nwindow.location.hash = 'foo'; //IE will set the hash but will not reload the page\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p><strong>This appears to be a bug with Internet Explorer</strong> (tested with 7 and 8).</p>\n\n<p>Changing window.location.hash should not result in a reload, and it is a common JavaScript technique to use the hash for maintaining state.</p>\n\n<p>If you <strong>manually</strong> load a page and change the hash using JavaScript it will work.</p>\n\n<p>The problem is when you are <strong>redirected to the page</strong> from a different location (ie: using HTTP header \"Location\"), then modifying the hash will result in a reload.</p>\n\n<p>To get around this bug you could:</p>\n\n<p><strong>1)</strong> If you can control the redirect, you could replace the Location header with some HTML.</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;meta http-equiv=\"refresh\" content=\"0; url=__REDIRECT_LOCATION__\"&gt;\n    &lt;script&gt;window.location = \"__REDIRECT_LOCATION__\";&lt;/script&gt;\n&lt;/head&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>2)</strong> if not, you could try reloading the page when it is loaded.  To prevent a reload loop you may need to set a cookie.</p>\n\n<pre><code>window.location = window.location; // window.location.reload() didn't work.\n\nIn pseudo code: \n\n// if is Internet Explorer\n//      if ( cookie \"reloadPerformed\" is not set )\n//          set cookie \"reloadPerformed\" = \"1\"\n//          reload page\n//      else \n//          clear cookie \"reloadPerformed\"\n</code></pre>\n\n<p>The obviously drawback is that loading the page results in two page request &amp; render,  so you'll would want the reload to be one of the first things the page does when it loads.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>@Jarne Cook seems to be right - it is a bug in IE.</p>\n\n<p>You might be able to just do:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n  window.location.hash = window.location.hash;\n&lt;/script&gt;\n</code></pre>\n\n<p>at the top of your page. In normal circumstances, this should be a no-op, but if the user is using IE and has arrived via a redirect, the page will reload before they even notice it has loaded.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>The similar issue existed in my project. But we could not use methods described above, because when IE refreshed a page, preloaded data was reset.\nSo, we used the feature of the browser. When you click for 'a' tag, onClick event happened firstly and after event browser use 'href' attribute for redirecting. When IE use href with hash for redirecting, reloading do not exist. So, you can use onClick event for invoke server-side processing(__doPostBack for asp.net for example) and when the processing will be executed, browser will use 'href' attribute for redirecting. So, new page will not be reloaded.\nAlso you can use <code>window.location = yourNewLocationWithHash</code> invoking after server-side processing.\nI hope this help =)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is a cross-browser solutions. Works in IE, Chrome, Safari, and FF (tried with latest versions).</p>\n\n<pre><code>var pos = location.href.indexOf('c=');\nlocation = (pos &lt; 0 ?\n                    location + (location.href.indexOf('?') &lt; 0 ? '?' : '&amp;')\n                    : location.href.substring(0, pos))\n           + 'c=' + Math.floor(Math.random()*11) + '#' + comment_id ;\n</code></pre>\n\n<p>Basically, I leverage query (\"?\") string to trigger the page reload with hash. What the first line does is it checkes whether there is our \"golden\" query string (I use \"c\" variable which stands for \"comment\"). If there is,</p>\n\n<ol>\n<li>the new URL will have everything before that \"c=\";</li>\n<li>then adds our golden \"c=\" + a random number between 0 and 10 + \"#\" + my comment id to which the browser needs to jump when reloaded.</li>\n</ol>\n\n<p>If there is no,</p>\n\n<ol>\n<li>the new URL will have everything old URL used to have;</li>\n<li>if the old URL already contains some other query string (something after \"?\"), add a query append operator \"&amp;\";</li>\n<li>if no \"?\", then add it;</li>\n<li>then goes the above mentioned \"golden\" query.</li>\n</ol>\n\n<p>The reason I add a random number after \"?\" is that after the first reload there is something like \"?#comment-10\". In this case, the next change to the URL will not reload the page, since browser understands it as an anchor jump instruction.</p>\n\n<p>To force reload, we need to add some random thing to the query so that the new URL is different from the previous.</p>\n\n<p>This solution will work on all browsers and will make sure the reload doesn't break the existing query. The only <strong>note</strong> is to make sure your \"golden\" query variable name is unique.</p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Was facing this issue, As suggested in one of the answers, the issue was only when a 302/301 redirection. Hash change does not reload if the page was not a redirect. I was redirecting using PHP and did not want to use a cookie to stop the redirection. </p>\n\n<p>More over this issue was there in some IE9 browsers as well, tried 5 IE9 browsers, 4 reloaded the page.</p>\n\n<p>Here is a fix added this in head section :</p>\n\n<pre><code>&lt;!--[if lt IE 10]&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        if(window.location.hash.replace('#','').length &gt; 0\n            &amp;&amp; window.location.hash.search('stopredirectioninie') == -1)\n        {\n            window.location.href = window.location.href+'&amp;stopredirectioninie';\n        }\n    &lt;/script&gt;\n&lt;![endif]--&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>We had the same problem. </p>\n\n<p>In our case it consisted of a http URL which was redirected to https by Apache. Since the string after the hash sign is never passed to the server, it got lost. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to modify the hash, remove it after certain processing takes place so that if the user refreshes they do not cause the process to run again. </p>\n\n<p>This works fine in FF, but it seems that IE is reloading every time I try to change the hash. I think it is related to other things that are loading on the page, though I am not certain. I have an iframe that loads (related to the process) as well as some scripts that are still being fetched in the parent window.</p>\n\n<p>I can't seem to figure out a good way to change the hash after all the loading completes. And, at the same time am not even positive that it is related to the loading.</p>\n\n<p>Any ideas on how to solve this?</p>\n\n<p>More odd behavior:\nThe hash is coming from else where in the web app via a redirect. I have found if I simply add the hash by hand, adding #myid to the url, it does not reload. It does not matter if I enter the hash on a page that has already loaded (adding #myid to the already existing url) or by entering the complete url in a new tab.</p>\n",
            "last_activity_date": 1399465181,
            "question_id": 2602260,
            "score": 21,
            "tags": [
                "javascript",
                "hash",
                "internet-explorer",
                "location",
                "reload"
            ],
            "title": "javascript location.hash refreshing in IE"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I think that this time, you have to recalculate animated curve part by part in js and then do it by moving by little parts (= you probably could find plugin OR you'll have to do all the math by yourself)</p>\n\n<p><em>Edit 2</em>: Previously added link was moved=> <a href=\"http://foxparker.wordpress.com/2009/09/22/bezier-curves-and-arcs-in-jquery/\" rel=\"nofollow\">http://foxparker.wordpress.com/2009/09/22/bezier-curves-and-arcs-in-jquery/</a>. Thanks, Zach.</p>\n\n<p><em>Edit 1</em>: this intrigued me, so I did little google research - just as I thought: plugin ready for use here: <a href=\"http://foxparker.wordpress.com/2009/09/22/bezier-curves-and-arcs-in-jquery/\" rel=\"nofollow\">http://foxparker.wordpress.com/2009/09/22/bezier-curves-and-arcs-in-jquery/</a></p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>The <a href=\"http://github.com/weepy/jquery.path\">jQuery.path plugin</a> is what you want:</p>\n\n<p>Example: animate along an arc</p>\n\n<pre><code>var arc_params = {\n    center: [285,185],  \n    radius: 100,    \n    start: 30,\n    end: 200,\n    dir: -1\n};\n\n$(\"my_elem\").animate({path : new $.path.arc(arc_params)});\n</code></pre>\n\n<p>Example: animate along a sine wave</p>\n\n<pre><code>var SineWave = function() {\n    this.css = function(p) {\n        var s = Math.sin(p*20);\n        var x = 500 - p * 300;\n        var y = s * 50 + 150;\n        var o = ((s+2)/4+0.1);\n        return {top: y + \"px\", left: x + \"px\", opacity: o};\n    } \n};\n\n$(\"my_elem\").animate({path : new SineWave});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Are you using jQuery 1.4?</p>\n\n<pre><code>$(this).animate({\n    left: [500, 'easeInSine'],\n    top: 500\n});\n</code></pre>\n\n<p>You'll require the easing plugin for this to work: <a href=\"http://gsgd.co.uk/sandbox/jquery/easing/jquery.easing.1.3.js\">http://gsgd.co.uk/sandbox/jquery/easing/jquery.easing.1.3.js</a></p>\n\n<p>E.g. <a href=\"http://jsbin.com/ofiye3/2\">http://jsbin.com/ofiye3/2</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here's a simple little library I wrote that allows arbitrary cubic B\u00e9zier curves for an animation path, and even calculates the rotation angle for you. (The library isn't polished or documented yet, but it shows how easy it is to stand on the shoulders of SVG's DOM even when you have no SVG elements in your page.)</p>\n\n<p><a href=\"http://phrogz.net/SVG/animation_on_a_curve.html\">http://phrogz.net/SVG/animation_on_a_curve.html</a></p>\n\n<p><a href=\"http://phrogz.net/SVG/animation_on_a_curve.html\"><img src=\"http://i.stack.imgur.com/AzXUX.png\" alt=\"Screenshot of website\"></a></p>\n\n<p><em>You can either edit the code and watch the curve/animation change, or edit the curve and see the code update.</em></p>\n\n<p>In case my site is down, here's the relevant code for posterity:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function CurveAnimator(from,to,c1,c2){\n  this.path = document.createElementNS('http://www.w3.org/2000/svg','path');\n  if (!c1) c1 = from;\n  if (!c2) c2 = to;\n  this.path.setAttribute('d','M'+from.join(',')+'C'+c1.join(',')+' '+c2.join(',')+' '+to.join(','));\n  this.updatePath();\n  CurveAnimator.lastCreated = this;\n}\nCurveAnimator.prototype.animate = function(duration,callback,delay){\n  var curveAnim = this;\n  // TODO: Use requestAnimationFrame if a delay isn't passed\n  if (!delay) delay = 1/40;\n  clearInterval(curveAnim.animTimer);\n  var startTime = new Date;\n  curveAnim.animTimer = setInterval(function(){\n    var elapsed = ((new Date)-startTime)/1000;\n    var percent = elapsed/duration;\n    if (percent&gt;=1){\n      percent = 1;\n      clearInterval(curveAnim.animTimer);\n    }\n    var p1 = curveAnim.pointAt(percent-0.01),\n        p2 = curveAnim.pointAt(percent+0.01);\n    callback(curveAnim.pointAt(percent),Math.atan2(p2.y-p1.y,p2.x-p1.x)*180/Math.PI);\n  },delay*1000);\n};\nCurveAnimator.prototype.stop = function(){\n  clearInterval(this.animTimer);\n};\nCurveAnimator.prototype.pointAt = function(percent){\n  return this.path.getPointAtLength(this.len*percent);\n};\nCurveAnimator.prototype.updatePath = function(){\n  this.len = this.path.getTotalLength();\n};\nCurveAnimator.prototype.setStart = function(x,y){\n  var M = this.path.pathSegList.getItem(0);\n  M.x = x; M.y = y;\n  this.updatePath();\n  return this;\n};\nCurveAnimator.prototype.setEnd = function(x,y){\n  var C = this.path.pathSegList.getItem(1);\n  C.x = x; C.y = y;\n  this.updatePath();\n  return this;\n};\nCurveAnimator.prototype.setStartDirection = function(x,y){\n  var C = this.path.pathSegList.getItem(1);\n  C.x1 = x; C.y1 = y;\n  this.updatePath();\n  return this;\n};\nCurveAnimator.prototype.setEndDirection = function(x,y){\n  var C = this.path.pathSegList.getItem(1);\n  C.x2 = x; C.y2 = y;\n  this.updatePath();\n  return this;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>There's a tiny script, just for animation which isn't in straight lines, called <a href=\"http://dropthebit.com/demos/pathAnimator/index.html\" rel=\"nofollow\">pathAnimator</a></p>\n\n<p>It's very very small and super efficient. and you don't even need jQuery ;)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>If I have<br>\n<code>&lt;div id=\"curve\" style=\"position:relative; height:100px; width:100px; /&gt;</code></p>\n\n<p>How would I make it move on a curve? I've googled and everything but can't seem to find another example that would call two functions at once. This is the kind of code I would like, but doesn't work:</p>\n\n<pre><code>$('#curve').click(function () {\n    $(this).animate(\n        { \n            top: 400,\n            left = $(this).left() + $(this).left()*$(this).left()\n        },\n        'slow',\n        function() { $(this).animate( { left: 600 }, 'fast' ); }\n    );\n});\n</code></pre>\n\n<p>Even if that's not correct code, I believe animate only takes \"destinations\" for something to go to, so a dynamic destination wouldn't work I think. What am I looking for to make this work?</p>\n\n<p>EDIT:: I'll definitely pick up that plugin, but I'm also wonder why this bit of code doesn't work as I'd expect it to.</p>\n\n<p>Here's another attempt using a for loop and the delay method</p>\n\n<pre><code>$('#curve').click(function () {\n    for (var i=0; i&lt;400; i++ )\n    {\n        $(this).delay(1000);\n        $(this).css( { top: i, left: i*1.5 } );\n    }\n});\n</code></pre>\n\n<p>Except it just instantly goes to that position, no delay or anything. so if it was starting at [0,0], as soon as I click it it teleports to [400,600]. Why doesn't the delay work?</p>\n",
            "last_activity_date": 1366808856,
            "question_id": 2240052,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "animation"
            ],
            "title": "How would you animate something so that it follows a curve?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The basic premise for iterating over objects in JavaScript is like so</p>\n\n<pre><code>var whatever = {}; // object to iterate over\nfor ( var i in whatever )\n{\n  if ( whatever.hasOwnProperty( i ) )\n  {\n     // i is the property/key name\n     // whatever[i] is the value at that property\n  }\n}\n</code></pre>\n\n<p>Fixing up a checker wouldn't be too hard.  You'll need recursion.  I'll leave that as an exercise for you or another SOer.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>You can iterate through the parent and child object properties:</p>\n\n<pre><code>var diff = {};\nfor(var p in data){\n  if (old.hasOwnProperty(p) &amp;&amp; typeof(data[p]) == 'object'){\n    diff[p] = {};\n    for(var i in data[p]){\n      if (old[p].hasOwnProperty(i)){\n        diff[p][i] = data[p][i] - old[p][i];\n      }\n    }\n  }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>This did the trick for me when dealing with a similar problem. It gets the differences in second compared to first.</p>\n\n<pre><code>    var first  = originalObj;\n    var second = modifiedObj;\n    var diff   = {};\n\n    var differ = function(first, second, result) {\n        var i = 0;\n        for (i in first) {\n            if (typeof first[i] == \"object\" &amp;&amp; typeof second[i] == \"object\") {\n                result[i] = differ(first[i], second[i], {});\n                if (!result[i]) delete result[i];\n            } else if (first[i] != second[i]) {\n                result[i] = second[i];\n            }\n        }\n        return isEmpty(result) ? undefined : result;\n    }\n\n    differ(old_conf, new_conf, diff);\n</code></pre>\n\n<p>Code is a bit of a special case, but you get the general idea :P</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Maybe it's already answered enough, but let me add my shameless plug :)\nA JSON (actually any javascript object or array structure) diff &amp; patch library I open sourced at github:</p>\n\n<p><a href=\"https://github.com/benjamine/jsondiffpatch\" rel=\"nofollow\">https://github.com/benjamine/jsondiffpatch</a></p>\n\n<p>it generates diffs (also in JSON format, and with a small footprint), which you can use client (check the test page) &amp; server side, and if present, it uses <a href=\"http://code.google.com/p/google-diff-match-patch/\" rel=\"nofollow\">http://code.google.com/p/google-diff-match-patch/</a> for long strings automatically.</p>\n\n<p>check the <a href=\"http://benjamine.github.com/jsondiffpatch/demo/index.html\" rel=\"nofollow\">DEMO</a> page to see how it works.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have two JSON objects in Javascript, identical except for the numerical values. It looks like this:</p>\n\n<pre><code>var data = {\n  \"eth0\":{\"Tx\":\"4136675\",\"Rx\":\"13232319\"},\n  \"eth1\":{\"Tx\":\"4\",\"Rx\":\"0\"},\n  \"lo\":{\"Tx\":\"471290\",\"Rx\":\"471290\"}\n}\n\nvar old = {\n  \"eth0\":{\"Tx\":\"4136575\",\"Rx\":\"13232219\"},\n  \"eth1\":{\"Tx\":\"4\",\"Rx\":\"0\"},\n  \"lo\":{\"Tx\":\"471290\",\"Rx\":\"471290\"}\n}\n</code></pre>\n\n<p>One object called \"data\" has the current values, another object called \"old\" has the same values from 1 second ago. I'd like to output a JSON object with only the <em>change</em> in values so I can calculate data throughput on the network interfaces.</p>\n\n<pre><code>var throughput = {\n  \"eth0\":{\"Tx\":\"100\",\"Rx\":\"100\"},\n  \"eth1\":{\"Tx\":\"0\",\"Rx\":\"0\"},\n  \"lo\":{\"Tx\":\"0\",\"Rx\":\"0\"}\n}\n</code></pre>\n\n<p>I'm not sure how to go about traversing the JSON data - it could be for any number of interfaces.</p>\n\n<p>Can anyone please lend me a hand? Thanks in advance</p>\n",
            "last_activity_date": 1413653071,
            "question_id": 1200562,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "json"
            ],
            "title": "Difference in JSON objects using Javascript/JQuery"
        },
        {
            "answer_count": 16,
            "answers": [
                {
                    "body": "<p>You <strong>almost</strong> got it - you need to set the <code>scrollTop</code> on <code>body</code>, not <code>window</code>:</p>\n\n<pre><code>$(function() {\n   $('body').scrollTop(0);\n});\n</code></pre>\n\n<p>EDIT:</p>\n\n<p>Maybe you can add a blank anchor to the top of the page:</p>\n\n<pre><code>$(function() {\n   $('&lt;a name=\"top\"/&gt;').insertBefore($('body').children().eq(0));\n   window.location.hash = 'top';\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 50
                },
                {
                    "body": "<p>Cross-browser, pure JavaScript solution:</p>\n\n<pre><code>document.body.scrollTop = document.documentElement.scrollTop = 0;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 92
                },
                {
                    "body": "<p>To answer your edited-in question, you could register the <code>onscroll</code> handler like so:</p>\n\n<pre><code>document.documentElement.onscroll = document.body.onscroll = function() {\n    this.scrollTop = 0;\n    this.onscroll = null;\n}\n</code></pre>\n\n<p>This will make it so that the first attempt at scrolling (which is likely the automatic one done by the browser) will be effectively cancelled.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This works for me:</p>\n\n<pre><code>window.onload = function() {\n    // short timeout\n    setTimeout(function() {\n        $(document.body).scrollTop(0);\n    }, 15);\n};\n</code></pre>\n\n<p>Uses a short <code>setTimeout</code> inside the <code>onload</code> to give the browser a chance to do the scroll.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<blockquote>\n  <p>Is there a way to PREVENT the browser\n  scrolling to its past position, or to\n  re-scroll to the top AFTER it does its\n  thing?</p>\n</blockquote>\n\n<p>The following jquery solution works for me:</p>\n\n<pre><code>$(window).unload(function() {\n    $('body').scrollTop(0);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Seeint the hash should do the job. If you have a header, you can use </p>\n\n<pre><code>window.location.href = \"#headerid\";\n</code></pre>\n\n<p>otherwise, the # alone will work</p>\n\n<pre><code>window.location.href = \"#\";\n</code></pre>\n\n<p>And as it get written into the url, it'll stay if you refresh.</p>\n\n<p>In fact, you don't event need JavaScript for that if you want to do it on an onclick event, you should just put a link arround you element and give it # as href.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Why don't you just use some reference element at the very beginning of your html file, like </p>\n\n<pre><code>&lt;div id=\"top\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>and then, when the page loads, simply do</p>\n\n<pre><code>$(document).ready(function(){\n\n    top.location.href = '#top';\n\n});\n</code></pre>\n\n<p>If the browser scrolls <em>after</em> this function fires, you simply do</p>\n\n<pre><code>$(window).load(function(){\n\n    top.location.href = '#top';\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>$(function() {\n    // the element inside of which we want to scroll\n        var $elem = $('#content');\n\n        // show the buttons\n    $('#nav_up').fadeIn('slow');\n    $('#nav_down').fadeIn('slow');  \n\n        // whenever we scroll fade out both buttons\n    $(window).bind('scrollstart', function(){\n        $('#nav_up,#nav_down').stop().animate({'opacity':'0.2'});\n    });\n        // ... and whenever we stop scrolling fade in both buttons\n    $(window).bind('scrollstop', function(){\n        $('#nav_up,#nav_down').stop().animate({'opacity':'1'});\n    });\n\n        // clicking the \"down\" button will make the page scroll to the $elem's height\n    $('#nav_down').click(\n        function (e) {\n            $('html, body').animate({scrollTop: $elem.height()}, 800);\n        }\n    );\n        // clicking the \"up\" button will make the page scroll to the top of the page\n    $('#nav_up').click(\n        function (e) {\n            $('html, body').animate({scrollTop: '0px'}, 800);\n        }\n    );\n });\n</code></pre>\n\n<p>Use This</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The following code works in Firefox, Chrome and <a href=\"http://en.wikipedia.org/wiki/Safari_%28web_browser%29\" rel=\"nofollow\">Safari</a>, but I was unable to test this in Internet&nbsp;Explorer. Can someone test it, and then edit my answer or comment on it?</p>\n\n<pre><code>$(document).scrollTop(0);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>First add a blank anchor tag to the place where you want to go</p>\n\n<pre><code>&lt;a href=\"#topAnchor\"&gt;&lt;/a&gt; \n</code></pre>\n\n<p>Now add a function in header section</p>\n\n<pre><code> function GoToTop() {\n            var urllocation = location.href;\n            if (urllocation.indexOf(\"#topAnchor\") &gt; -1) {\n                window.location.hash = \"topAnchor\";\n            } else {\n                return false;\n            }\n        }\n</code></pre>\n\n<p>finally add an onload event to the body tag</p>\n\n<pre><code>&lt;body onload=\"GoToTop()\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In my case body didn't worked:</p>\n\n<pre><code>   $('body').scrollTop(0);\n</code></pre>\n\n<p>But HTML worked:</p>\n\n<pre><code>   $('html').scrollTop(0);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's a pure JavaScript animated scroll version for no-jQuery'ers :D</p>\n\n<pre><code>var stepTime = 20;\nvar docBody = document.body;\nvar focElem = document.documentElement;\n\nvar scrollAnimationStep = function (initPos, stepAmount) {\n    var newPos = initPos - stepAmount &gt; 0 ? initPos - stepAmount : 0;\n\n    docBody.scrollTop = focElem.scrollTop = newPos;\n\n    newPos &amp;&amp; setTimeout(function () {\n        scrollAnimationStep(newPos, stepAmount);\n    }, stepTime);\n}\n\nvar scrollTopAnimated = function (speed) {\n    var topOffset = docBody.scrollTop || focElem.scrollTop;\n    var stepAmount = topOffset;\n\n    speed &amp;&amp; (stepAmount = (topOffset * stepTime)/speed);\n\n    scrollAnimationStep(topOffset, stepAmount);\n};\n</code></pre>\n\n<p>And then:</p>\n\n<pre><code>&lt;button onclick=\"scrollTopAnimated(1000)\"&gt;Scroll Top&lt;/button&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Cross-browser scroll to top: </p>\n\n<pre><code>        if($('body').scrollTop()&gt;0){\n            $('body').scrollTop(0);         //Chrome,Safari\n        }else{\n            if($('html').scrollTop()&gt;0){    //IE, FF\n                $('html').scrollTop(0);\n            }\n        } \n</code></pre>\n\n<p>Cross-browser scroll to an element with id = div_id: </p>\n\n<pre><code>        if($('body').scrollTop()&gt;$('#div_id').offset().top){\n            $('body').scrollTop($('#div_id').offset().top);         //Chrome,Safari\n        }else{\n            if($('html').scrollTop()&gt;$('#div_id').offset().top){    //IE, FF\n                $('html').scrollTop($('#div_id').offset().top);\n            }\n        } \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>var totop = $('#totop');\ntotop.click(function(){\n $('html, body').stop(true,true).animate({scrollTop:0}, 1000);\n return false;\n});\n\n$(window).scroll(function(){\n if ($(this).scrollTop() &gt; 100){ \n  totop.fadeIn();\n }else{\n  totop.fadeOut();\n }\n});\n\n&lt;img id=\"totop\" src=\"img/arrow_up.png\" title=\"Click to go Up\" style=\"display:none;position:fixed;bottom:10px;right:10px;cursor:pointer;cursor:hand;\"/&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you're in quircks mode (thanks @Niet the Dark Absol):</p>\n\n<pre><code>document.body.scrollTop = document.documentElement.scrollTop = 0;\n</code></pre>\n\n<p>If you're in strict mode:</p>\n\n<pre><code>document.documentElement.scrollTop = 0;\n</code></pre>\n\n<p>No need for jQuery here.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is working:</p>\n\n<pre><code>jQuery(document).ready(function() {\n     jQuery(\"html\").animate({ scrollTop: 0 }, \"fast\");\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way to control browser scrolling with JavaScript/jQuery?</p>\n\n<p>When I scroll my page half way down, then trigger a reload, I want the page to go pack to the top, but instead it tries to find the last scroll position. So I did this:</p>\n\n<pre><code>$('document').ready(function() {\n   $(window).scrollTop(0);\n});\n</code></pre>\n\n<p>But no luck.</p>\n\n<p><strong>EDIT</strong>:</p>\n\n<p>So both your answers worked when I call them after the page loads-Thanks. However, if I just do a refresh on the page, looks like the browser calculates and scrolls to its old scroll position AFTER the <code>.ready</code> event (I tested the body onload() function too).</p>\n\n<p>So the follow up is, is there a way to PREVENT the browser scrolling to its past position, or to re-scroll to the top AFTER it does its thing?</p>\n",
            "last_activity_date": 1408482021,
            "question_id": 4210798,
            "score": 51,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "scroll"
            ],
            "title": "How to scroll to top of page with JavaScript/jQuery?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>JavaScript uses <a href=\"http://en.wikipedia.org/wiki/IEEE_754\">IEEE 754 standard</a> to represent numbers. From <a href=\"http://en.wikipedia.org/wiki/Negative_zero\">Wikipedia</a>:</p>\n\n<blockquote>\n  <p><strong>Signed zero</strong> is zero with an associated sign. In ordinary arithmetic, \u22120 = +0 = 0. However, in computing, some number representations allow for the existence of two zeros, often denoted by <strong>\u22120 (negative zero)</strong> and <strong>+0 (positive zero)</strong>. This occurs in some signed number representations for integers, and in most floating point number representations. The number 0 is usually encoded as +0, but can be represented by either +0 or \u22120.</p>\n  \n  <p>The IEEE 754 standard for floating point arithmetic (presently used by most computers and programming languages that support floating point numbers) requires both +0 and \u22120. The zeroes can be considered as a variant of the extended real number line such that 1/\u22120 = \u2212\u221e and 1/+0 = +\u221e, division by zero is only undefined for \u00b10/\u00b10 and \u00b1\u221e/\u00b1\u221e.</p>\n</blockquote>\n\n<p>The article contains further information about the different representations.</p>\n\n<p>So this is the reason why, technically, both zeros have to be distinguished. </p>\n\n<blockquote>\n  <p>However, <code>+0 === -0</code> evaluates to true. Why is that (...) ?</p>\n</blockquote>\n\n<p>This behaviour is explicitly defined in <a href=\"http://ecma262-5.com/ELS5_HTML.htm#Section_11.9.6\">section 11.9.6</a>, the <em>Strict Equality Comparison Algorithm</em> (emphasis partly mine):</p>\n\n<blockquote>\n  <p>The comparison <code>x === y</code>, where <code>x</code> and <code>y</code> are values, produces <strong>true</strong> or <strong>false</strong>. Such a comparison is performed as follows: </p>\n  \n  <p>(...)</p>\n  \n  <ul>\n  <li><p>If Type(x) is Number, then</p>\n  \n  <ol>\n  <li>If x is NaN, return false.</li>\n  <li>If y is NaN, return false.</li>\n  <li>If x is the same Number value as y, return true.</li>\n  <li><strong>If x is +0 and y is \u22120, return true.</strong></li>\n  <li><strong>If x is \u22120 and y is +0, return true.</strong></li>\n  <li>Return false.</li>\n  </ol></li>\n  </ul>\n  \n  <p>(...)</p>\n</blockquote>\n\n<p><em>(The same holds for <code>+0 == -0</code> btw.)</em></p>\n\n<p>It seems logically to treat <code>+0</code> and <code>-0</code> as equal. Otherwise we would have to take this into account in our code and I, personally, don't want to do that ;)</p>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>In the <a href=\"https://secure.wikimedia.org/wikipedia/en/wiki/IEEE_754#Formats\" rel=\"nofollow\">IEEE 754 standard</a> used to represent the Number type in JavaScript, the sign is represented by a bit (a 1 indicates a negative number).</p>\n\n<p>As a result, there exists both a negative and a positive value for each representable number, including <code>0</code>.</p>\n\n<p>This is why both <code>-0</code> and <code>+0</code> exist.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Wikipedia has a good article to explain this phenomenon: <a href=\"http://en.wikipedia.org/wiki/Signed_zero\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Signed_zero</a></p>\n\n<p>In brief, it both +0 and -0 are defined in the IEEE floating point specifications. Both of them are technically distinct from 0 without a sign, which is an integer, but in practice they all evaluate to zero, so the distinction can be ignored for all practical purposes.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There are two possible values (bit representations) for 0. This is not unique. Especially in floating point numbers this can occur. That is because floating point numbers are actually stored as a kind of formula. </p>\n\n<p>Integers can be stored in separate ways too. You can have a numeric value with an additional sign-bit, so in a 16 bit space, you can store a 15 bit integer value and a sign-bit. In this representation, the value 1000 (hex) and 0000 both are 0, but one of them is +0 and the other is -0. </p>\n\n<p>This could be avoided by subtracting 1 from the integer value so it ranged from -1 to -2^16, but this would be inconvenient.</p>\n\n<p>A more common approach is to store integers in 'two complements', but apparently ECMAscript has chosen not to. In this method numbers range from 0000 to 7FFF positive. Negative numbers start at FFFF (-1) to 8000.</p>\n\n<p>Of course, the same rules apply to larger integers too, but I don't want my F to wear out. ;)</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Reading through the <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-8.5\">ECMAScript 5.1 specification</a>, <code>+0</code> and <code>-0</code> are distinguished.</p>\n\n<p>Why then does <code>+0 === -0</code> evaluate to <code>true</code>?</p>\n",
            "last_activity_date": 1416337201,
            "question_id": 7223359,
            "score": 30,
            "tags": [
                "javascript"
            ],
            "title": "Are +0 and -0 the same?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You have to wait until the browser knows the duration of the video before you can seek to a particular time. So, I think you want to wait for the 'loadedmetadata' event something like this:</p>\n\n<pre><code>document.getElementById('vid1').addEventListener('loadedmetadata', function() {\n  this.currentTime = 50;\n}, false);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>You can link directly with <a href=\"http://www.w3.org/TR/media-frags/\">Media Fragments URI</a>, just change the filename to <em>file.webm#t=50</em></p>\n\n<p><a href=\"http://www.annodex.net/~silvia/itext/mediafrag.html#t=40\">Here's an example</a></p>\n\n<p>This is pretty cool, you can do all sorts of things. But I don't know the current state of browser support.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>On Safari Mac for an HLS source, I needed to use the loadeddata event instead of the metadata event.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>adjust video start and end time when using the video tag in html5;</p>\n\n<p><a href=\"http://www.yoursite.com/yourfolder/yourfile.mp4#t=5,15\">http://www.yoursite.com/yourfolder/yourfile.mp4#t=5,15</a></p>\n\n<p>where left of comma is start time in seconds, right of comma is end time in seconds. \ndrop the comma and end time to effect the start time only.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Using a <code>#t=10,20</code> fragment worked for me.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>WITHOUT USING JAVASCRIPT</p>\n\n<p>Just add <code>#t=[(start_time), (end_time)]</code> to the end of your media URL. The only setback (if you want to see it that way) is you'll need to know how long your video is to indicate the end time.\n<strong>Example:</strong> </p>\n\n<pre><code>&lt;video&gt;\n    &lt;source src=\"splash.mp4#t=10,20\" type=\"video/mp4\"&gt;\n&lt;/video&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am trying to play HTML5 video (VP8 encoded). What I want is to play it at a certain position. Let's say at time 50 seconds onward.  </p>\n\n<p>I have tried but there seem to be some problem. Can you suggest if there is something I'm doing wrong?  </p>\n\n<p>Here is the code:  </p>\n\n<pre><code>   &lt;video id=\"vid1\" width=\"640\" height=\"360\"&gt;\n       &lt;source src=\"file.webm\" type=\"video/webm\" /&gt; \n       Your browser does not support the video tag.\n   &lt;/video&gt;\n   &lt;script&gt;\n       document.getElementById('vid1').currentTime = 50;\n   &lt;/script&gt; \n</code></pre>\n\n<p>I have tried but it doesn\u2019t work. When video loads, it just starts playing from start. However if I call this during playback like after some time video is playing it works fine. Is there something I am missing?</p>\n",
            "last_activity_date": 1407728723,
            "question_id": 5981427,
            "score": 24,
            "tags": [
                "javascript",
                "html5-video"
            ],
            "title": "Start HTML5 video at a particular position when loading?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>D3 doesn't require a specific format. It all depends on your application. You can certainly convert an adjacency list to the format used in flare.json, but this again would be application-specific code. In general, you can't do that as adjacency lists as such don't have \"head\" or \"root\" elements you would need to build a tree. In addition, you would need to handle cycles, orphans etc. separately.</p>\n\n<p>Given that you're currently doing the conversion on the server side, I'd be tempted to say that \"if it ain't broken, don't fix it\" ;)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There's no prescribed format, as you can usually redefine your data through various accessor functions (such as <a href=\"https://github.com/mbostock/d3/wiki/Hierarchy-Layout#wiki-children\">hierarchy.children</a>) and <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/map\">array.map</a>. But the format you quoted is probably the most convenient representation for trees because it works with the default accessors.</p>\n\n<p>The first question is whether you intend to display a <a href=\"http://mbostock.github.com/d3/ex/force.html\">graph</a> or a <a href=\"http://mbostock.github.com/d3/ex/tree.html\">tree</a>. For graphs, the data structure is defined in terms of <a href=\"https://github.com/mbostock/d3/wiki/Force-Layout#wiki-nodes\">nodes</a> and <a href=\"https://github.com/mbostock/d3/wiki/Force-Layout#wiki-links\">links</a>. For trees, the input to the layout is the root node, which may have an array of <a href=\"https://github.com/mbostock/d3/wiki/Hierarchy-Layout#wiki-children\">child nodes</a>, and whose leaf nodes have an associated <a href=\"https://github.com/mbostock/d3/wiki/Hierarchy-Layout#wiki-value\">value</a>.</p>\n\n<p>If you want to display a <strong>graph</strong>, and all you have is a list of edges, then you'll want to iterate over the edges in order to produce an array of nodes and an array of links. Say you had a file called \"graph.csv\":</p>\n\n<pre><code>source,target\nA1,A2\nA2,A3\nA2,A4\n</code></pre>\n\n<p>You could load this file using <a href=\"https://github.com/mbostock/d3/wiki/CSV\">d3.csv</a> and then produce an array of nodes and links:</p>\n\n<pre><code>d3.csv(\"graph.csv\", function(links) {\n  var nodesByName = {};\n\n  // Create nodes for each unique source and target.\n  links.forEach(function(link) {\n    link.source = nodeByName(link.source);\n    link.target = nodeByName(link.target);\n  });\n\n  // Extract the array of nodes from the map by name.\n  var nodes = d3.values(nodeByName);\n\n  function nodeByName(name) {\n    return nodesByName[name] || (nodesByName[name] = {name: name});\n  }\n});\n</code></pre>\n\n<p>You can then pass these nodes and links to the force layout to visualize the graph:</p>\n\n<ul>\n<li><a href=\"http://bl.ocks.org/2949937\">http://bl.ocks.org/2949937</a></li>\n</ul>\n\n<p>If you want to produce a <strong>tree</strong> instead, then you'll need to do a slightly different form of data transformation to accumulate the child nodes for each parent.</p>\n\n<pre><code>d3.csv(\"graph.csv\", function(links) {\n  var nodesByName = {};\n\n  // Create nodes for each unique source and target.\n  links.forEach(function(link) {\n    var parent = link.source = nodeByName(link.source),\n        child = link.target = nodeByName(link.target);\n    if (parent.children) parent.children.push(child);\n    else parent.children = [child];\n  });\n\n  // Extract the root node.\n  var root = links[0].source;\n\n  function nodeByName(name) {\n    return nodesByName[name] || (nodesByName[name] = {name: name});\n  }\n});\n</code></pre>\n\n<p>Like so:</p>\n\n<ul>\n<li><a href=\"http://bl.ocks.org/2949981\">http://bl.ocks.org/2949981</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 32
                }
            ],
            "body": "<p>While following numerous D3 examples, data usually gets formatted in the format given in <a href=\"https://github.com/mbostock/d3/blob/master/examples/data/flare.json\">flare.json</a>:</p>\n\n<pre><code>{\n \"name\": \"flare\",\n \"children\": [\n  {\n   \"name\": \"analytics\",\n   \"children\": [\n    {\n     \"name\": \"cluster\",\n     \"children\": [\n      {\"name\": \"AgglomerativeCluster\", \"size\": 3938},\n      :\n</code></pre>\n\n<p>I have an adjacency list as follows:</p>\n\n<pre><code>A1 A2\nA2 A3\nA2 A4\n</code></pre>\n\n<p>which I want to convert to the above format. Currently, I am doing this on the server-side but is there a way to achieve this using d3's functions? I found one <a href=\"https://groups.google.com/forum/?fromgroups#!topic/d3-js/L3UeeUnNHO8\">here</a>, but the approach seems to require modification of the d3 core library which I am not in favor due to maintainability. Any suggestions?</p>\n",
            "last_activity_date": 1402909687,
            "question_id": 11088303,
            "score": 20,
            "tags": [
                "javascript",
                "json",
                "graph",
                "d3.js",
                "tree"
            ],
            "title": "How to convert to D3&#39;s JSON format?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>$(\"li:lt(5):random\").text()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Get a random number index, 1-5, and get the child of the ul with that index.  Like so:</p>\n\n<pre><code>var index = Math.floor(Math.random() * 5) + 1;  // nth-child indices start at 1\nalert($(\"ul:nth-child(\" + index + \")\").text());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Here's how to get 5 random elements from a jQuery selection, no need of plugins!</p>\n\n<pre><code>randomElements = jQuery(\"li\").get().sort(function(){ \n  return Math.round(Math.random())-0.5\n}).slice(0,5)\n</code></pre>\n\n<p>At this point you have 5 DomElements that have been selected randomly from all the LIs that jQuery returned</p>\n\n<p>You can then do whatever you like with them,<br>\ne.g change their color:</p>\n\n<pre><code>$(randomElements).css(\"color\",\"red\")\n</code></pre>\n\n<p>or display their combined text contents:</p>\n\n<pre><code>$(randomElements).text()\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>Why not just do this, it seems pretty efficient:</p>\n\n<pre><code>jQuery('li:random').slice(0, 5);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>  jQuery.jQueryRandom = 0;\n  jQuery.extend(jQuery.expr[\":\"], {\n    random: function(a, i, m, r) {\n      if (i == 0) {\n        jQuery.jQueryRandom = Math.floor(Math.random() * r.length);\n      };\n      return i == jQuery.jQueryRandom;\n    }\n  });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Using the <a href=\"http://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">Fisher-Yates shuffle</a> I have created a small script for this purpose. This is done by first creating a randomly shuffled and sliced copy of the array of jQuery elements, and then filtering out all elements that do not exist in both arrays.</p>\n\n<p>You can read about it at <a href=\"http://www.afekenholm.se/jquery-rand\">http://www.afekenholm.se/jquery-rand</a>. Here's the script:</p>\n\n<pre><code>/**\n * jQuery.rand v1.0\n * \n * Randomly filters any number of elements from a jQuery set.\n * \n * MIT License: @link http://www.afekenholm.se/license.txt\n * \n * @author: Alexander Wallin (http://www.afekenholm.se)\n * @version: 1.0\n * @url: http://www.afekenholm.se/jquery-rand\n */\n(function($){\n    $.fn.rand = function(k){\n        var b = this,\n            n = b.size(),\n            k = k ? parseInt(k) : 1;\n\n        // Special cases\n        if (k &gt; n) return b.pushStack(b);\n        else if (k == 1) return b.filter(\":eq(\" + Math.floor(Math.random()*n) + \")\");\n\n        // Create a randomized copy of the set of elements,\n        // using Fisher-Yates sorting\n        r = b.get();\n        for (var i = 0; i &lt; n - 1; i++) {\n            var swap = Math.floor(Math.random() * (n - i)) + i;\n            r[swap] = r.splice(i, 1, r[swap])[0];\n        }\n        r = r.slice(0, k);\n\n        // Finally, filter jQuery stack\n        return b.filter(function(i){\n            return $.inArray(b.get(i), r) &gt; -1;\n        });\n    };\n})(jQuery);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>How can I select the first 5 random elements</p>\n\n<pre><code>&lt;ul&gt;\n    &lt;li&gt;First&lt;/li&gt;\n    &lt;li&gt;Second&lt;/li&gt;\n    &lt;li&gt;Third&lt;/li&gt;\n     ...\n    &lt;li&gt;N&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p><a href=\"http://blog.mastykarz.nl/jquery-random-filter/\">I'm using this plugin</a>:</p>\n\n<pre><code>alert($(\"li:random\").text());\n</code></pre>\n\n<p>but it takes all random elements. I only want the first 5.</p>\n\n<p>Is there another way to do the same thing?</p>\n",
            "last_activity_date": 1349121064,
            "question_id": 1764160,
            "score": 19,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Select 5 random elements"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I just pushed 1.0.31 \u2014 it has a method: <code>less.refreshStyles()</code> which will re-compile <code>&lt;style&gt;</code> tags with <code>type=\"text/less\"</code> \u2014 try it out and let me know if it works.</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>thanks for asking this question \u2013 it helped me a lot. I\u2019m just updating the topic in order to show how I did to dynamically add a CSS file.</p>\n\n<p>I used the last version of LESS (1.3.3).</p>\n\n<pre><code>var stylesheetFile = 'file.css';\nvar link  = document.createElement('link');\nlink.rel  = \"stylesheet\";\nlink.type = \"text/less\";\nlink.href = stylesheetFile;\nless.sheets.push(link);\n\nless.refresh();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can use this lightweight (3k) library to <a href=\"http://orenyakobi.github.io/lazy/\" rel=\"nofollow\">lazy load less / css and js files</a> ( disclaimer: i am the author).</p>\n\n<p>This is as simple as:</p>\n\n<pre><code>lazy.load('/static/less/style.less');\n</code></pre>\n\n<p>It can also receive a callback, load some more assets with dependencies and takes care about cache.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm looking at using <a href=\"http://lesscss.org/\">less</a>.<a href=\"http://github.com/cloudhead/less.js\">js</a> (looks great), but our site requires that some styles be loaded dynamically after initial page load.  It seems, however, that all LESS stylesheets must be loaded prior to the less.js script load. i.e. this works</p>\n\n<pre><code>&lt;link rel=\"stylesheet/less\" href=\"/static/less/style.less\"/&gt;\n&lt;script src=\"http://lesscss.googlecode.com/files/less-1.0.30.min.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>but it fails if the lines are swapped around, neither firefox nor chrome appear to attempt loading 'style.less' unless they are ordered correctly.  The ordering requirement is noted explicitly in <a href=\"http://github.com/cloudhead/less.js\">this tutorial</a>.</p>\n\n<p>Is there any way to load less stylesheets after initial page load? </p>\n\n<p>Note that <a href=\"http://net.tutsplus.com/tutorials/html-css-techniques/quick-tip-you-need-to-check-out-less-js\">this blog</a> describes a 'watch' feature - </p>\n\n<blockquote>\n  <p>which will auto-refresh the CSS whenever you save your LESS code</p>\n</blockquote>\n\n<p>so it seems reasonable to expect that I could add some LESS rules after page load. Feels like I'm missing something.</p>\n\n<p>Cheers,</p>\n\n<p>Colin</p>\n\n<p>UPDATE: code used to test behaviour described in comments (less style sheet listed after the script) -</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /&gt;\n    &lt;title&gt;Simple&lt;/title&gt;\n\n  &lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"/static/js/less-1.0.31.min.js\"&gt;&lt;/script&gt; \n  &lt;link rel=\"stylesheet/less\" href=\"/static/less/style.less\" id=\"abc123\"/&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;div id=\"container\"&gt;\n    &lt;div&gt;Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet.&lt;/div&gt;\n  &lt;/div&gt;\n  &lt;div id=\"#abc\"&gt;Bingo&lt;/div&gt;\n&lt;/body&gt;\n\n&lt;script&gt;\nconsole.log(\"refreshing styles...\");\nless.sheets.push(document.getElementById('abc123'));\n//var lessStyle = $(\"&lt;style&gt;#abc { color: blue; }&lt;/style&gt;\").attr(\"id\", \"less:static-less-style\").attr(\"type\", 'text/less');\n//$(\"head\").append(lessStyle);\nless.refresh(true);\nconsole.log(\"refreshed...\");\n&lt;/script&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>and the less stylesheet</p>\n\n<pre><code>@primary_color: green;\n\n.rounded(@radius: 5px) {  \n  -moz-border-radius: @radius;  \n  -webkit-border-radius: @radius;  \n  border-radius: @radius;  \n}\n\n#container {\n  background: @primary_color;\n  .rounded(5px);\n\n  div {\n    color: red;\n  }\n}\n</code></pre>\n",
            "last_activity_date": 1404714188,
            "question_id": 3175013,
            "score": 17,
            "tags": [
                "javascript",
                "css",
                "less"
            ],
            "title": "Load less.js rules dynamically"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Your video is requesting w/ the JSAPI enabled, so you are very close! All you need is a valid reference to the embedded player. Inspecting your page revealed that you are using the HTML DOM element id of \"playerid\" to identify your player.</p>\n\n<p>Example:</p>\n\n<pre><code>&lt;embed id=\"playerid\" width=\"100%\" height=\"100%\" allowfullscreen=\"true\" allowscriptaccess=\"always\" quality=\"high\" bgcolor=\"#000000\" name=\"playerid\" style=\"\" src=\"http://www.youtube.com/apiplayerbeta?enablejsapi=1&amp;playerapiid=normalplayer\" type=\"application/x-shockwave-flash\"&gt;\n</code></pre>\n\n<p>To obtain a reference to the player and then stop the video use the following code:</p>\n\n<pre><code>var myPlayer = document.getElementById('playerid');\nmyPlayer.stopVideo();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>The following works well, tested on wamp server. Just replace the 11-digit ID in the following line with that of the video you want to play.</p>\n\n<pre><code>http://www.youtube.com/v/***LpbzbyGjJGE***?enablejsapi=1&amp;version=3&amp;playerapiid=ytplayer\n</code></pre>\n\n<p>Good luck.</p>\n\n<pre><code> &lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n&lt;title&gt;Untitled Document&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n&lt;a href=\"#\" onclick=\"var myPlayer = document.getElementById('playerid'); myPlayer.pauseVideo();\"&gt;Pause&lt;/a&gt;\n&lt;a href=\"#\" onclick=\"var myPlayer = document.getElementById('playerid'); myPlayer.playVideo();\"&gt;Play&lt;/a&gt;\n&lt;embed id=\"playerid\" width=\"500px\" height=\"400px\" allowfullscreen=\"true\" allowscriptaccess=\"always\" quality=\"high\" bgcolor=\"#000000\" name=\"playerid\" style=\"\" src=\"http://www.youtube.com/v/LpbzbyGjJGE?enablejsapi=1&amp;version=3&amp;playerapiid=ytplayer\" type=\"application/x-shockwave-flash\"&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p><strong>Situation:</strong>\n<a href=\"http://yvoschaap.com/videowall/?q=sunset%20beautiful\">here,</a> where I pressed some video. </p>\n\n<p><strong>Problem:</strong> I try to stop the video by Javascript in the console of Firebug:</p>\n\n<pre><code>player.stopVideo(playerid):Void   [1] [2]\n</code></pre>\n\n<p><strong>Question:</strong> Why does not the command above work?</p>\n\n<p>[1] <a href=\"http://code.google.com/apis/youtube/js_api_reference.html\">Source</a> for the part \"player.stopVideo():Void\"</p>\n\n<p>[2] I looked playerid with Firebug from the source.</p>\n",
            "last_activity_date": 1424275432,
            "question_id": 1094397,
            "score": 17,
            "tags": [
                "javascript",
                "youtube-api"
            ],
            "title": "How can I stop a video with Javascript in Youtube?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Just came across this service today <a href=\"http://www.snapabug.com/\">SnapABug</a> - haven't really had a chance to look over it but it might give you some ideas (or maybe even will be sufficient for your needs)</p>\n\n<p>Some <a href=\"http://www.barklund.org/blog/2009/10/14/how-snapabug-works/\">info</a> on how they accomplished it.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>I think using JavaScript, you won't be able to due to the security restrictions. Flash, possibly.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It's impossible in pure JavaScript, without using ActiveX.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>It is impossible using JavaScript (nor Flash). It depends on your constraints, and there are some workarounds.</p>\n\n<ol>\n<li>You can take advantage of browser extensions (such as a Firefox add-on), but I guess it does not fit your requierments.</li>\n<li>The best option I can think of is to construct the <a href=\"http://en.wikipedia.org/wiki/Document_Object_Model\" rel=\"nofollow\">DOM</a> tree on the client side, and then post it to remote server.</li>\n</ol>\n\n<p>On the server side nothing really holds you from doing generally anything. Using <a href=\"http://en.wikipedia.org/wiki/WebKit\" rel=\"nofollow\">WebKit</a> or even launching Internet&nbsp;Explorer or Firefox, you can create the snapshot server-side.\nIt's far from elegant, but possible.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Google is doing this in Google+ and a talented developer reverse engineered it and produced <a href=\"http://html2canvas.hertzen.com/\">http://html2canvas.hertzen.com/</a> .  To work in IE you'll need a canvas support library such as <a href=\"http://excanvas.sourceforge.net/\">http://excanvas.sourceforge.net/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I know the <a href=\"http://grabz.it/api/javascript\" rel=\"nofollow\">GrabzIt JavaScript API</a> can take screenshots of web pages and include them directly in the page with a single line of JavaScript code.</p>\n\n<p>Here is an example of taking a screenshot of the Google homepage (copied from their site).</p>\n\n<pre><code>&lt;script type=\"text/javascript\"\n    src=\"http://grabz.it/services/javascript.ashx?key=APPLICATION KEY\n    &amp;url=http://www.google.com\n    &amp;width=400&amp;height=400&amp;format=png&amp;delay=10000\"&gt;\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a JavaScript application that an user interacts with. I need to save the appearance of the interface at the current time, crop out the part that I need (or only shot the part that I need by specifying the div), and send it back to the server.</p>\n\n<p>Clearly any external services would not be able to do this, I need a JavaScript (or <a href=\"http://en.wikipedia.org/wiki/Adobe_Flash\" rel=\"nofollow\">Flash</a>) script that can save the screen appearance. Is this possible?</p>\n\n<p>Also, as the comment below says, I cannot use ActiveX.</p>\n",
            "last_activity_date": 1401222053,
            "question_id": 2046812,
            "score": 16,
            "tags": [
                "javascript",
                "screenshot"
            ],
            "title": "JavaScript code to take a screenshot of a website without using ActiveX"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The jQuery.fn is just an alias for jQuery.prototype. I suppose it is defined for aesthetic and less typing reasons.</p>\n\n<p>So</p>\n\n<pre><code>jQuery.fn.init.prototype = jQuery.fn;\n</code></pre>\n\n<p>is actually</p>\n\n<pre><code>jQuery.prototype.init.prototype = jQuery.prototype;\n</code></pre>\n\n<p>As why this needs to be done, this <a href=\"http://groups.google.com/group/jquery-en/browse%5Fthread/thread/2bd68d2a05b83ed3/f49de1d839d80e68?#f49de1d839d80e68\">forum post</a> is helpful:</p>\n\n<blockquote>\n  <p>It gives the init() function the same\n  prototype as the jQuery object. So\n  when you call init() as a constructor\n  in the \"return new jQuery.fn.init(\n  selector, context );\" statement, it\n  uses that prototype for the object it\n  constructs. This lets init()\n  substitute for the jQuery constructor\n  itself.</p>\n</blockquote>\n\n<p>What you achieve is that the object returned from a jQuery.fn.init constructor has access to jQuery methods.</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>The function <code>jQuery.fn.init</code> is the one that is executed when you call <code>jQuery(\".some-selector\")</code> or <code>$(\".some-selector\")</code>. You can see this in this snippet from <a href=\"http://code.jquery.com/jquery-latest.js\">jquery.js</a>:</p>\n\n<pre><code>jQuery = window.jQuery = window.$ = function( selector, context ) {\n    // The jQuery object is actually just the init constructor 'enhanced'\n    return new jQuery.fn.init( selector, context );\n}\n</code></pre>\n\n<p>So, in fact, the line you mention is critical to how jQuery allows the addition of functionality to jQuery objects, both inside jQuery itself and from plugins. This is the line:</p>\n\n<pre><code>jQuery.fn.init.prototype = jQuery.fn;\n</code></pre>\n\n<p>By assigning <code>jQuery.fn</code> as the prototype of this function (and because the first snippet uses 'new' to treat jQuery.fn.init as a constructor), this means the functionality added via <code>jQuery.fn.whatever</code> is immediately available on the objects returned by all jQuery calls.</p>\n\n<p>So for example, a simple jQuery plugin might be created and used like this:</p>\n\n<pre><code>jQuery.fn.foo = function () { alert(\"foo!\"); };\njQuery(\".some-selector\").foo();\n</code></pre>\n\n<p>When you declare 'jQuery.fn.foo' on the first line what you're actually doing is adding that function to the prototype of all jQuery objects created with the jQuery function like the one on the second line. This allows you to simple call 'foo()' on the results of the jQuery function and invoke your plugin functions.</p>\n\n<p>In short, writing jQuery plugins would be more verbose and subject to future breakage if the implementation details changed if this line didn't exist in jQuery.</p>\n",
                    "is_accepted": false,
                    "score": 37
                }
            ],
            "body": "<p>Little extended question is why jQuery do</p>\n\n<pre><code>jQuery.fn = jQuery.prototype = {\ninit: function() {...},\n    f1: function() {...},\n    ...\n};\njQuery.fn.init.prototype = jQuery.fn;\n</code></pre>\n\n<p>Why not simply add <code>f1()</code> etc into <code>init.prototype</code>? Is it only aesthetic or there are some deep ideas?</p>\n",
            "last_activity_date": 1421933118,
            "question_id": 1755080,
            "score": 15,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Why jQuery do this: jQuery.fn.init.prototype = jQuery.fn?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Here we go with a simple setup.</p>\n\n<p>Create the following folder structure in your Resources folder.</p>\n\n<p><strong>Note that the blue folders are referenced ones</strong></p>\n\n<p><img src=\"http://i.stack.imgur.com/PH1Dx.png\" alt=\"enter image description here\"></p>\n\n<p>The css is just candy :) In lib.js resides your javascript code which you'd like to use.</p>\n\n<p><strong>index.html</strong></p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"css/standard.css\"&gt;\n\n        &lt;script src=\"js/lib.js\" type=\"text/javascript\" /&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h2&gt;Local Javascript&lt;/h2&gt;\n\n        &lt;a href=\"javascript:alert('Works!')\"&gt;Test Javascript Alert&lt;/a&gt;      \n\n        &lt;br/&gt;\n        &lt;br/&gt;\n\n        &lt;a href=\"javascript:alertMeWithMyCustomFunction('I am');\"&gt;External js test&lt;/a&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>lib.js</strong></p>\n\n<pre><code>function alertMeWithMyCustomFunction(text) {\n    alert(text+' -&gt; in lib.js');\n}\n</code></pre>\n\n<p><strong>Loading of the content in the webview</strong></p>\n\n<p>Note: webView is a property, view created with instance builder</p>\n\n<pre><code>- (void)viewDidLoad\n{   \n    NSString *htmlPath = [[NSBundle mainBundle] pathForResource:@\"index\" \n                                                         ofType:@\"html\" \n                                                    inDirectory:@\"/htdocs\" ];\n\n    NSString *html = [NSString stringWithContentsOfFile:htmlPath \n                                               encoding:NSUTF8StringEncoding \n                                                  error:nil];\n\n    [webView loadHTMLString:html \n                    baseURL:[NSURL fileURLWithPath:\n                             [NSString stringWithFormat:@\"%@/htdocs/\", \n                             [[NSBundle mainBundle] bundlePath]]]];\n}\n</code></pre>\n\n<p>And this should be the results:</p>\n\n<p><img src=\"http://i.stack.imgur.com/Da13s.png\" alt=\"enter image description here\">\n<img src=\"http://i.stack.imgur.com/eA9qs.png\" alt=\"enter image description here\"></p>\n\n<p><strong>EDIT:</strong> </p>\n\n<p>snowman4415 mentioned that iOS 7 does not like self closing tags script tags, so if something is not working on iOS 7, you may need to close the tag with <code>&lt;/script&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>Here is another way to inject a local javascript file into the DOM of a web view. You load the contents of the JS file into a string and then use <code>stringByEvalutatingJavaScriptFromString</code>:</p>\n\n<pre><code>- (void)webViewDidFinishLoad:(UIWebView *)webView {\n    NSString *jsFile = @\"jquery-1.8.2.min.js\";\n    NSString *jsFilePath = [[NSBundle mainBundle] pathForResource:jsFile ofType:nil];\n    NSURL *jsURL = [NSURL fileURLWithPath:jsFilePath];\n    NSString *javascriptCode = [NSString stringWithContentsOfFile:jsURL.path encoding:NSUTF8StringEncoding error:nil];\n    [webView stringByEvaluatingJavaScriptFromString:javascriptCode];\n    // ...\n}\n</code></pre>\n\n<p>This is especially useful when you don't own the *.html/xhtml files you are displaying (i.e. ePub reader. or news aggregator). It helps so that you don't have to worry about the relative paths from your xhtml file to your js file.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I need to load javascript files from my apps resources folder. As of right now, it does read images from the resources just fine, but it's not reading javascripts for some reason. </p>\n\n<p>I have been able to render html docs that reference these javascripts if the html files themselves are written into the resources, but I would like to render html/js by setting the html of a UIWebView so it can be dynamic.</p>\n\n<p>Here is what I am doing:</p>\n\n<pre><code>NSString * html = @\"&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;MathJax&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;script type=\\\"text/x-mathjax-config\\\"&gt;MathJax.Hub.Config({tex2jax: {inlineMath: [[\\\"$\\\",\\\"$\\\"],[\\\"\\\\(\\\",\\\"\\\\)\\\"]]}});&lt;/script&gt;&lt;script type=\\\"text/javascript\\\" src=\\\"/MathJax/MathJax.js\\\"&gt;&lt;/script&gt;$$\\\\int_x^y f(x) dx$$&lt;img src=\\\"coffee.png\\\"&gt;&lt;/body&gt;&lt;/html&gt;\";\n\nNSString * path = [[NSBundle mainBundle] resourcePath]; \npath = [path stringByReplacingOccurrencesOfString:@\"/\" withString:@\"//\"];\npath = [path stringByReplacingOccurrencesOfString:@\" \" withString:@\"%20\"];\n\nNSString * resourcesPath = [[NSString alloc] initWithFormat:@\"file://%@/\", path];\n[webview loadHTMLString:html baseURL:[NSURL URLWithString:resourcesPath]];\n</code></pre>\n\n<p>Now, if I change the base url to my server which also has the required files, it does load correctly. It would be great to not require an internet connection. Any help is appreciated!!!  ;)</p>\n\n<p>I found this useful in getting images to display: <a href=\"http://stackoverflow.com/questions/1926117/iphone-dev-uiwebview-baseurl-to-resources-in-documents-folder-not-app-bundle\">iPhone Dev: UIWebView baseUrl to resources in Documents folder not App bundle</a></p>\n\n<p><strong>Edit:</strong></p>\n\n<p>Instead of doing the string replacing and URL encoding, I was able to get images to by simply calling resourceURL on the mainBundle, but still no javascript execution.</p>\n\n<pre><code>    NSString * setHtml = @\"&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;MathJax&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;script type=\\\"text/x-mathjax-config\\\"&gt;MathJax.Hub.Config({tex2jax: {inlineMath: [[\\\"$\\\",\\\"$\\\"],[\\\"\\\\(\\\",\\\"\\\\)\\\"]]}});&lt;/script&gt;&lt;script type=\\\"text/javascript\\\" src=\\\"/MathJax/MathJax.js\\\"&gt;&lt;/script&gt;$$\\\\int_x^y f(x) dx$$&lt;img src=\\\"images/test.png\\\"&gt;&lt;/body&gt;&lt;/html&gt;\";\n    [webview loadHTMLString:setHtml baseURL:[[NSBundle mainBundle] resourceURL]];\n</code></pre>\n\n<p><strong>EDIT</strong></p>\n\n<p>If you want to help give this a shot, I have made it easier for you by creating an example project!</p>\n\n<p><a href=\"https://github.com/pyramation/math-test\">https://github.com/pyramation/math-test</a></p>\n\n<pre><code>git clone git@github.com:pyramation/math-test.git\n</code></pre>\n",
            "last_activity_date": 1407405577,
            "question_id": 5733883,
            "score": 12,
            "tags": [
                "javascript",
                "xcode",
                "ios",
                "resources",
                "mathjax"
            ],
            "title": "Loading javascript into a UIWebView from resources"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Real answer: No, it's not possible.</p>\n\n<p>OK, I have just thought of a way. Overlay your page with a div that covers the whole document. Inside that, create (say) 2,000 x 2,000 <code>&lt;a&gt;</code> elements (so that the <code>:hover</code> pseudo-class will work in IE 6, see), each 1 pixel in size. Create a CSS <code>:hover</code> rule for those <code>&lt;a&gt;</code> elements that changes a property (let's say <code>font-family</code>). In your load handler, cycle through each of the 4 million <code>&lt;a&gt;</code> elements, checking <code>currentStyle</code> / <code>getComputedStyle()</code> until you find the one with the hover font. Extrapolate back from this element to get the co-ordinates within the document.</p>\n\n<p>N.B. <strong>DON'T DO THIS</strong>.</p>\n",
                    "is_accepted": false,
                    "score": 73
                },
                {
                    "body": "<p>Short Answer: No</p>\n\n<p>Long Answer: Noooooooooooooooooooooo</p>\n\n<p>Real Answer: JavaScript doesn't [yet?] have an API to let you query the state of the mouse (or keyboard). One way to accomplish this (knowing the state of the mouse - buttons up/down, cursor location, etc.) is to have variables that keep track of each state, then update those variables through event handler callbacks.</p>\n\n<p>Example:</p>\n\n<pre><code>var mouse = {x: 0, y: 0};\n\ndocument.addEventListener('mousemove', function(e){ \n    mouse.x = e.clientX || e.pageX; \n    mouse.y = e.clientY || e.pageY \n}, false);\n</code></pre>\n\n<p>That way, whenever you want to know where the mouse is, just look at the <code>mouse</code> object. Note that on the initial page load, unless the mouse has moved, this solution doesn't tell you where the mouse really is.</p>\n",
                    "is_accepted": true,
                    "score": 240
                },
                {
                    "body": "<p>What you can do is create variables for the x and y coordinates of your cursor, update them whenever the mouse moves and call a function on an interval to do what you need with the stored position.</p>\n\n<p>The downside to this of course is that at least one initial movement of the mouse is required to have it work. As long as the cursor updates its position at least once, we are able to find its position regardless of whether it moves again. </p>\n\n<pre><code>var cursorX;\nvar cursorY;\ndocument.onmousemove = function(e){\n    cursorX = e.pageX;\n    cursorY = e.pageY;\n}\nsetInterval(\"checkCursor()\", 1000);\nfunction checkCursor(){\nalert(\"Cursor at: \" + cursorX + \", \" + cursorY);\n}\n</code></pre>\n\n<p>The preceding code updates once a second with a message of where your cursor is. I hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<pre><code>var x = 0;\nvar y = 0;\n\ndocument.addEventListener('mousemove', onMouseMove, false)\n\nfunction onMouseMove(e){\n    x = e.clientX;\n    y = e.clientY;\n}\n\nfunction getMouseX() {\n    return x;\n}\n\nfunction getMouseY() {\n    return y;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I envision that maybe you have a parent page with a timer and after a certain amount of time or a task is completed, you forward the user to a new page. Now you want the cursor position, and because they are waiting, they aren't necessarily touching the mouse.  So track the mouse on the parent page using standard events and pass the last value to the new page in a get or a post variable.</p>\n\n<p>You can use JHarding's code on your parent page so that the latest position is always available in a global variable:</p>\n\n<pre><code>var cursorX;\nvar cursorY;\ndocument.onmousemove = function(e){\n    cursorX = e.pageX;\n    cursorY = e.pageY;\n}\n</code></pre>\n\n<p>This won't help users that navigate to this page by means other than your parent page.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I implemented a horizontal/vertical search, (first make a div full of vertical line links arranged horizontally, then make a div full of horizontal line links arranged vertically, and simply see which one has the hover state) like Tim Down's idea above, and it works pretty fast. Sadly, does not work on Chrome 32 on KDE.</p>\n\n<p>jsfiddle.net/5XzeE/4/</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can also hook mouseenter (this event is fired after page reload, when the mousecursor is inside the page). Extending Corrupted's code should do the trick:</p>\n\n<pre><code>var x = null;\nvar y = null;\n\ndocument.addEventListener('mousemove', onMouseUpdate, false);\ndocument.addEventListener('mouseenter', onMouseUpdate, false);\n\nfunction onMouseUpdate(e) {\n    x = e.pageX;\n    y = e.pageY;\n}\n\nfunction getMouseX() {\n    return x;\n}\n\nfunction getMouseY() {\n    return y;\n}\n</code></pre>\n\n<p>You can also set x and y to null on mouseleave-event. So you can check if the user is on your page with it's cursor.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could try something similar to what Tim Down suggested - but instead of having elements for each pixel on the screen, create just 2-4 elements (boxes), and change their location, width, height dynamically to divide the yet possible locations on screen by 2-4 recursively, thus finding the mouse real location quickly.</p>\n\n<p>For example - first elements take right and left half of screen, afterwards the upper and lower half. By now we already know in which quarter of screen the mouse is located, are able to repeat - discover which quarter of this space...</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to get the mouse position with JavaScript after page loads without any mouse movement event (without moving the mouse)?</p>\n",
            "last_activity_date": 1423722217,
            "question_id": 2601097,
            "score": 67,
            "tags": [
                "javascript",
                "javascript-events",
                "mouseevent"
            ],
            "title": "How to get the mouse position without events (without moving the mouse)?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>I'm trying to understand why you need to double check the name of the select after receiving an event to it.</p>\n\n<p>Do you by any chance have multiple  elements with the same id ?</p>\n\n<p>Did you actually mean to say \"#container select\" instead of \"#container\" ?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Idea that might help:</p>\n\n<pre><code>$(document).ready(function() {\n  $('#container select[name=\"mySelectName\"]').change(function(e) {\n    var s = $(e.target);\n    if (s.val()=='1') //hide/show something;\n  });\n});\n</code></pre>\n\n<p>If you are using AJAX, try <a href=\"http://docs.jquery.com/Events/live\" rel=\"nofollow\">live()</a> function:</p>\n\n<pre><code> $(document).ready(function() {\n       $('#container select[name=\"mySelectName\"]').live('change', function(e) {\n        var s = $(e.target);\n        if (s.val()=='1') //hide/show something;\n      });\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If I recall correctly you will need to call blur() to have jQuery invoke change() on IE machines. Try something like:</p>\n\n<pre><code>$(\"select[name=mySelectName]\").click(function() {\n    $(this).blur();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The <code>change</code> event does not bubble in IE (See <a href=\"http://msdn.microsoft.com/en-us/library/ms536912%28VS.85,loband%29.aspx\" rel=\"nofollow\">here</a> and <a href=\"http://www.quirksmode.org/dom/events/change.html#t07\" rel=\"nofollow\">here</a>). You cannot use event delegation in tandem with it.</p>\n\n<p><strike>In fact, it is because of this IE bug that jQuery <code>live</code> had to officially exclude <code>change</code> from the <a href=\"http://docs.jquery.com/Events/live#typefn\" rel=\"nofollow\">list of supported events</a> (FYI the DOM spec states <code>change</code> <a href=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-eventgroupings-htmlevents\" rel=\"nofollow\">should bubble</a>)</strike>.<sup>[<a href=\"http://msdn.microsoft.com/en-us/library/ms536912%28VS.85,loband%29.aspx\" rel=\"nofollow\">1</a>]</sup></p>\n\n<p>With respect to your question, you can bind directly to each select:</p>\n\n<pre><code>$('#container select').change(/*...*/)\n</code></pre>\n\n<p>If you really want event delegation you <em>might</em> find some success trying what <a href=\"http://stackoverflow.com/questions/1625143/does-jquery-live-work-on-safari/1625670#1625670\">this person did</a> and bind to <code>click</code> in IE only, which <em>does</em> bubble:</p>\n\n<pre><code>$('#container').bind($.browser.msie ? 'click' : 'change', function(event) {\n    /* test event.type and event.target \n     * to capture only select control changes\n     */\n})\n</code></pre>\n\n<p>But this browser detection feels really wrong. I'd really try working with the former example (binding directly to the drop downs). Unless you have hundreds of <code>&lt;select&gt;</code> boxes, event delegation wouldn't buy you much here anyway.</p>\n\n<hr>\n\n<p><sub>[<a href=\"http://msdn.microsoft.com/en-us/library/ms536912%28VS.85,loband%29.aspx\" rel=\"nofollow\">1</a>] Note: jQuery >= 1.4 now simulates a bubbling <code>change</code> event in IE via <a href=\"http://api.jquery.com/live/\" rel=\"nofollow\"><code>live()</code>/<code>on()</code></a>.</sub></p>\n",
                    "is_accepted": true,
                    "score": 66
                },
                {
                    "body": "<p>Add this lines to your page head, Sit back and relax! :)</p>\n\n<pre><code>$(document).ready(function(){$('select').bind('onChange',function(){$(this).blur()});});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>using jquery 1.4.4 (and i think 1.4.3) seems to be all good now.... the change event works consistently in my limited testing.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I'm simply building upon the example set by \"Crescent Flesh\" for a cross-platform solution that will survive even if loading this SELECT inside #container via an AJAX call.</p>\n\n<pre><code>$('#container').bind($.browser.msie ? 'click' : 'change', function(event) {\n  if ((event.type == 'click') || (event.type == 'change')) {\n    if (event.target.toString().indexOf('Select') != -1) {\n      var sWhich = $('#container SELECT').val();\n      handleSelectionChange(sWhich);\n    }\n  }\n});\n</code></pre>\n\n<p>Now you simply build the handleSelectionChange() function, renaming it whatever you want.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>:D:D Wow, I was finding solution... Why think so complicated? \nSimply: <br>\n<code>&lt;select onchange=\"doAction\"&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p><code>onchange=doAction</code> will work in IE and Firefox, but its not supported in Chrome. </p>\n\n<p>You need to use jQuery's <code>.change</code> event to handle this.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>IE requires change event to be placed inside document ready. This seems to bind the change event to the associated element. Hope it helps.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I've got a page with a variable number of <code>&lt;select&gt;</code> elements (which explains why I'm using event delegation here). When the user changes the selected option, I want to hide/show different content areas on the page. Here's the code I have:</p>\n\n<pre><code>$(document).ready(function() {\n  $('#container').change(function(e) {\n    var changed = $(e.target);\n\n    if (changed.is('select[name=\"mySelectName\"]')) {\n      // Test the selected option and hide/show different content areas.\n    }\n  });\n});\n</code></pre>\n\n<p>This works in Firefox and Safari, but in IE the change event doesn't fire. Anyone know why? Thanks!</p>\n",
            "last_activity_date": 1386277019,
            "question_id": 1637503,
            "score": 48,
            "tags": [
                "javascript",
                "jquery",
                "javascript-events",
                "internet-explorer"
            ],
            "title": "jQuery change event on &lt;select&gt; not firing in IE"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><a href=\"https://developer.mozilla.org/en/window.location\">window.location</a> is read/write on all compliant browsers.</p>\n\n<p><a href=\"https://developer.mozilla.org/en/DOM/document.location\">document.location</a> is read-only in Internet Explorer (at least), but read/write in Gecko-based browsers (Firefox, SeaMonkey).</p>\n",
                    "is_accepted": true,
                    "score": 65
                },
                {
                    "body": "<p><code>document.location</code> was originally a read-only property, although <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Gecko\" rel=\"nofollow\">Gecko browsers</a> allow you to assign to it as well. For cross-browser safety, use <code>window.location</code> instead.</p>\n\n<p><strong>Read more:</strong> </p>\n\n<p><a href=\"https://developer.mozilla.org/en/DOM/document.location\" rel=\"nofollow\"><code>document.location</code></a>  </p>\n\n<p><a href=\"https://developer.mozilla.org/en/window.location\" rel=\"nofollow\"><code>window.location</code></a></p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>As far as I know, Both are same. For cross browser safety you can use <code>window.location</code> rather than <code>document.location</code>.</p>\n\n<p>All modern browsers map <code>document.location</code> to <code>window.location</code>, but I still prefer <code>window.location</code> as that's what I've used since I wrote my first web page. it is more consistent.</p>\n\n<p>you can also see <code>document.location === window.location</code> returns <code>true</code>, which clarifies that both are same.</p>\n",
                    "is_accepted": false,
                    "score": 14
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/2430936/whats-the-difference-between-window-location-and-document-location-in-javascrip\">What&#39;s the difference between window.location and document.location in JavaScript?</a>  </p>\n</blockquote>\n\n\n\n<p>In JavaScript, both <code>window</code> and <code>document</code> have a <code>location</code> property, and by setting both to a different URL, browser loads the new URL. </p>\n\n<p>What's the difference between them? </p>\n",
            "last_activity_date": 1418807533,
            "question_id": 7857878,
            "score": 43,
            "tags": [
                "javascript",
                "dom",
                "browser",
                "window",
                "document"
            ],
            "title": "window.location vs. document.location"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Put parentheses around the anonymous functions.</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>I think the problem lies with using single line comments <code>//</code>. Single-line comments enclosed in <code>/* .. */</code> seem to work fine. Here's an equivalent example with something other than a comment.</p>\n\n<pre><code>$('element').hover(\n  -&gt; console.log(\"first\")\n  -&gt; console.log(\"second\")\n)\n</code></pre>\n\n<p>Or with comments using <code>/* .. */</code>.</p>\n\n<pre><code>$('element').hover(\n  -&gt; /* first */\n  -&gt; /* second */\n)\n</code></pre>\n\n<p>You can try these examples under the <a href=\"http://jashkenas.github.com/coffee-script/\">Try CoffeeScript</a> tab. CoffeeScript adds a return statement to return the last expression of the function. If you wanted bare-bones functions which do nothing and don't contain a <code>return</code> at the end, try:</p>\n\n<pre><code>$('element').hover(\n  () -&gt;\n  () -&gt;\n)\n// $('element').hover(function() {}, function() {});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 41
                },
                {
                    "body": "<p>Another way is to use <strong>backslash</strong> after the caller function, the comma should be indented correctly.</p>\n\n<pre><code>$('element').hover \\\n  -&gt; # do stuff on mouseover\n  ,\n  -&gt; # do stuff on mouseout\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>Without parenthesis or backslash:</p>\n\n<pre><code>f -&gt;\n  0\n, -&gt;\n  1\n</code></pre>\n\n<p>generates on 1.7.1:</p>\n\n<pre><code>f(function() {\n  return 0;\n}, function() {\n  return 1;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I want to pass two anonymous functions as arguments for jQuery's hover, like so:</p>\n\n<pre><code>$('element').hover(\n  function() {\n    // do stuff on mouseover\n  },\n  function() {\n    // do stuff on mouseout\n  }\n);\n</code></pre>\n\n<p>It's easy with just one \u2013 <code>hover -&gt;</code> \u2013 but what is the proper syntax in CoffeeScript for two? I tried <code>...hover -&gt;</code>, <code>...hover( -&gt;...</code>, etc. but nothing gets me the above structure.</p>\n",
            "last_activity_date": 1417936058,
            "question_id": 6463052,
            "score": 39,
            "tags": [
                "javascript",
                "jquery",
                "anonymous-function",
                "coffeescript"
            ],
            "title": "How to pass two anonymous functions as arguments in CoffeScript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Actually, I never had to use the constructor arguments. I just create the object and fill the members afterwards.</p>\n\n<pre><code>var img=new Image();\nimg.src=\"path/to/image.jpg\";\n</code></pre>\n\n<p>When I \"meet\" a new class in Javascript, I explore it using <code>JSON.stringify</code> and by using a piece of code like this:</p>\n\n<pre><code>var obj_to_explore=new Image();\nvar dbg=[]\nfor(var i in obj_to_explore){\n    dbg.push(i+\": \"+obj_to_explore[i]);\n}\n//alert(\"explored object: \" + dbg.join(\", \"))\nconsole.log(\"explored object: \" + dbg.join(\", \"));\n</code></pre>\n\n<p>Because it's much easier to find (on google) information on specific member names than on a feature description.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is a distinction between JavaScript\u2122 (the implementation of ECMAScript for DOM manipulation by Mozilla, aka Gecko) and the generic term \"javascript\" that is used to describe similar scripting environments in other browsers (e.g. JScript in IE).</p>\n\n<blockquote>\n  <p>Archaic documentation,\n  [...]\n  describes the existence of these constructors implicating them as\n  intrinsic JavaScript language components, which is incorrect.</p>\n</blockquote>\n\n<p>How do you come to that conclusion? JavaScript\u2122 belongs to Mozilla so they can specify that it contains whatever they want. JavaScript\u2122 has had an Image and Option constructor since the very beginning, other implementations have copied them so that every browser in existence has them. Such features existed before the creation of the W3C DOM interfaces and, where ubiquitous, are labelled \"DOM 0\", which really means were supported by Netscape Navigator and Internet Explorer at the time of DOM 1.</p>\n\n<p>DOM 0 is not officially documented anywhere. HTML5 is an attempt at writing a specification for HTML and javascript as is implemented in browsers, so it includes both the Image and Option constructors and so includes DOM 0 features, but they aren't labelled or classified as such.</p>\n\n<p>[...]</p>\n\n<blockquote>\n  <p>Yet, these constructors are clearly not intrinsic to the language\n  specification of JavaScript</p>\n</blockquote>\n\n<p>There is no published specification for JavaScript\u2122, there is only the JavaScript documentation at <a href=\"https://developer.mozilla.org/en/JavaScript\" rel=\"nofollow\">Mozilla Developer Network</a> (MDN). Also note that the documentation at MDN is a public wiki that <em>anyone</em> can create and edit, including you. :-)</p>\n\n<p>You are mistaken in believing that the documentation at Mozilla is some kind of complete specification for JavaScript\u2122\u2014it isn't. Not by a long way. It is really just documentation that has been added by interested persons, mostly by poking around the browser and seeing what it does. There is also a <a href=\"https://developer.mozilla.org/en/JavaScript/Reference\" rel=\"nofollow\">JavaScript Reference</a>, but you may also find that lacking.</p>\n\n<p>[...]</p>\n\n<blockquote>\n  <p>HTMLImageElement Mozilla documentation</p>\n</blockquote>\n\n<p>That link to the the Gecko DOM reference documents the JavaScript implementation of the W3C HTMLImageElementInterface which does not have an <em>Image</em> constructor.</p>\n\n<blockquote>\n  <p>Contemporary precedent for Image() constructor use at Mozilla</p>\n</blockquote>\n\n<p>Which indicates that it exists, but there is no convenient place to document it. It might be best documented in the <a href=\"https://developer.mozilla.org/en/JavaScript\" rel=\"nofollow\">JavaScript Reference</a>. If you wish to add it, get an MDN account (free, very easy) and add it.</p>\n\n<h3>Edit</h3>\n\n<p>There is now an <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement.Image\" rel=\"nofollow\">Image</a> article at MDN that links to relevant standards.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>FWIW Microsoft has documentation for both these constructors on MSDN:</p>\n\n<ul>\n<li><a href=\"http://msdn.microsoft.com/en-us/library/dd757809%28v=VS.85%29.aspx\" rel=\"nofollow\"><code>Image</code></a></li>\n<li><a href=\"http://msdn.microsoft.com/en-us/library/dd757810%28v=vs.85%29.aspx\" rel=\"nofollow\"><code>Option</code></a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>HTML 5</strong></p>\n\n<blockquote>\n  <p>DOM Option class</p>\n  \n  <p><a href=\"http://dev.w3.org/html5/spec-preview/the-option-element.html\" rel=\"nofollow\">http://dev.w3.org/html5/spec-preview/the-option-element.html</a></p>\n</blockquote>\n\n<p>Several constructors are provided for creating HTMLOptionElement objects (in addition to the factory methods from DOM Core such as createElement()): Option(), Option(text), Option(text, value), Option(text, value, defaultSelected), and Option(text, value, defaultSelected, selected).</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Not at Mozilla but:</p>\n\n<ul>\n<li>for <code>image</code>:<br>\nThanks to <a href=\"http://stackoverflow.com/users/600633/rickard\">Rickard</a> for identifying<br>\n<a href=\"http://www.w3.org/html/wg/drafts/html/CR/embedded-content-0.html#dom-image\" rel=\"nofollow\">http://www.w3.org/html/wg/drafts/html/CR/embedded-content-0.html#dom-image</a><br>\nthat provides the DOM interface constructor details.</li>\n<li>for <code>option</code>:<br>\n<a href=\"http://www.w3.org/html/wg/drafts/html/CR/forms.html#dom-option\" rel=\"nofollow\">http://www.w3.org/html/wg/drafts/html/CR/forms.html#dom-option</a><br>\nalso gives the DOM interface constructor details.<br>\n(Found using:<br>\n<a href=\"http://www.google.com/search?client=ubuntu&amp;channel=fs&amp;q=constructor+site%3Adev.w3.org%2Fhtml5&amp;ie=utf-8&amp;oe=utf-8\" rel=\"nofollow\">http://www.google.com/search?client=ubuntu&amp;channel=fs&amp;q=constructor+site%3Adev.w3.org%2Fhtml5&amp;ie=utf-8&amp;oe=utf-8</a>)</li>\n</ul>\n\n<p>Given these references, it is moot whether <code>mozilla.org</code>, as asked below, documents the same.</p>\n\n<hr>\n\n<p>Specifically, where at <code>mozilla.org</code> are constructors like <code>new Image()</code> and <code>new Option()</code> documented in a contemporary context?</p>\n\n<p>Archaic <a href=\"http://devedge-temp.mozilla.org/library/manuals/2000/javascript/1.3/reference/\" rel=\"nofollow\">documentation</a>,</p>\n\n<ul>\n<li><code>Image()</code> defined at <a href=\"http://devedge-temp.mozilla.org/library/manuals/2000/javascript/1.3/reference/image.html\" rel=\"nofollow\">http://devedge-temp.mozilla.org/library/manuals/2000/javascript/1.3/reference/image.html</a></li>\n<li><code>Option()</code> defined at <a href=\"http://devedge-temp.mozilla.org/library/manuals/2000/javascript/1.3/reference/option.html\" rel=\"nofollow\">http://devedge-temp.mozilla.org/library/manuals/2000/javascript/1.3/reference/option.html</a></li>\n</ul>\n\n<p>describes the existence of these constructors implicating them as intrinsic JavaScript language components, which is incorrect.</p>\n\n<pre><code>javascript: alert([new Image(), '\\n\\n', new  Option()])\n</code></pre>\n\n<p>clearly indicates their manifest existence by displaying</p>\n\n<blockquote>\n  <p>[object HTMLImageElement],</p>\n  \n  <p>,[object HTMLOptionElement]</p>\n</blockquote>\n\n<p>Rhetorically, what about:</p>\n\n<pre><code>javascript:alert([new Anchor(), new Preserve(), new Form(),,, ])\n</code></pre>\n\n<p>What other primitive elemental DOM constructors are there? Or, are there no more?</p>\n\n<p>Is it anathema to, and inconsistent with the DOM paradigm used by Mozilla, to incorporate the programming definitions of <code>new Image()</code> and <code>new Option()</code> etc., explaining their absence? Yet, these constructors are clearly not intrinsic to the language specification of JavaScript and certainly not HTML. So, where exactly is there a correct current paradigm (originating from <code>mozilla.org</code>) that describes them fully, including argument types and orders?</p>\n\n<p>references:</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en/DOM/HTMLImageElement\" rel=\"nofollow\">HTMLImageElement Mozilla documentation</a></li>\n<li><a href=\"https://developer.mozilla.org/en/Canvas_tutorial/Using_images#Creating_an_image_from_scratch\" rel=\"nofollow\">Contemporary precedent for <code>Image()</code> constructor use at Mozilla</a></li>\n<li><a href=\"http://stackoverflow.com/questions/5424571/where-is-the-documentation-for-all-of-the-javascript-html-element-constructors\">Stack Overflow related question</a></li>\n</ul>\n\n<hr>\n\n<p>An aside: (please do not be distracted by this - locating the relevant documents as  specified in the article's title is the only consideration)</p>\n\n<p>This <a href=\"http://stackoverflow.com/questions/6936071/where-are-constructors-such-as-new-image-and-new-option-documented/6936147#6936147\">answer</a> prompted the following examination. It is only an observation.</p>\n\n<pre><code>javascript:\n    alert([  Option, Image,\n               JSON, Math, Error, \n                 Array, Boolean, Date, Function,\n                   Number, Object, RegExp, String  ].join(\"\\n\\n\"));\n    alert( Image.toSource() );\n</code></pre>\n\n<p>produces in FireFox:</p>\n\n<blockquote>\n  <p>[object Option]</p>\n  \n  <p>[object Image]</p>\n  \n  <p>[object JSON]</p>\n  \n  <p>[object Math]</p>\n  \n  <p>function Error() {\n      [native code] }</p>\n  \n  <p>function Array() {\n      [native code] }</p>\n  \n  <p>function Boolean() {\n      [native code] }</p>\n  \n  <p>function Date() {\n      [native code] }</p>\n  \n  <p>function Function() {\n      [native code] }</p>\n  \n  <p>function Number() {\n      [native code] }</p>\n  \n  <p>function Object() {\n      [native code] }</p>\n  \n  <p>function RegExp() {\n      [native code] }</p>\n  \n  <p>function String() {\n      [native code] }</p>\n</blockquote>\n\n<p>and</p>\n\n<blockquote>\n  <p>({})</p>\n</blockquote>\n\n<p>but</p>\n\n<pre><code>Error: ({}) is not a constructor\nSource File: javascript:alert(new ({}));\nLine: 1\n</code></pre>\n\n<p>Is Image a constructor or not? The answer to this would (presumably) be found in the documents that answer the question asked in this posting's title. This should emphasize the inconsistencies, anomalies and irregularities of cataloging <code>Image</code> and <code>Option</code> etc. in an appropriate document.</p>\n",
            "last_activity_date": 1402492474,
            "question_id": 6936071,
            "score": 36,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "Where are constructors such as, `new Image()` and `new Option()`, documented?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>No personal experience but I did come across this link today:  <a href=\"http://www.w3avenue.com/2010/05/07/html5-unleashed-tips-tricks-and-techniques/\" rel=\"nofollow\">http://www.w3avenue.com/2010/05/07/html5-unleashed-tips-tricks-and-techniques/</a></p>\n\n<p>Which links to this:  <a href=\"http://net.tutsplus.com/tutorials/html-css-techniques/quick-tip-learning-about-html5-local-storage/\" rel=\"nofollow\">http://net.tutsplus.com/tutorials/html-css-techniques/quick-tip-learning-about-html5-local-storage/</a></p>\n\n<p>Have fun!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There is the offical documentation:</p>\n\n<p><a href=\"http://dev.w3.org/html5/webstorage/\">http://dev.w3.org/html5/webstorage/</a></p>\n\n<p>For a quick demo with code: <a href=\"http://html5demos.com/storage\">http://html5demos.com/storage</a> also more html5 demos at the root of that site.</p>\n\n<p>Note there are also things like the <a href=\"http://developer.yahoo.com/yui/storage/\">YUI 2 Storage Utility</a> which abstract the storage for you (HTML 5, Google Gears, SWF) depending on what the browser supports:</p>\n\n<blockquote>\n  <p>The Storage Utility provides a\n  mechanism for storing significant\n  amounts of textual data, client-side,\n  whether or not your browsers supports\n  the proposed HTML 5 Storage\n  specification.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I would recommend one of the other questions asked here about how to store objects in localStorage. It helped me a lot as I am implementing a code editor that can store multiple files and last state of the user. </p>\n\n<p><a href=\"http://stackoverflow.com/questions/2010892/storing-objects-in-html5-localstorage\">The stackoverflow question</a><br>\nBoth answers posted are very valuable.</p>\n\n<p>Some things to take into consideration:</p>\n\n<ul>\n<li>When do you store data, after each key pressed or after some other specific action/event?</li>\n<li>Use a temporary Javascript data structure or only interact with localStorage directly?</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This small tutorial/code-snippet helped me to get started.</p>\n\n<p><a href=\"http://hacks.mozilla.org/2009/06/localstorage/\" rel=\"nofollow\">http://hacks.mozilla.org/2009/06/localstorage/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here's a crash crash course I found very useful. It explains a bunch of HTML5 concepts, including localStorage, video tag, offline websites, forms, locations, canvas, and more.</p>\n\n<p><a href=\"http://diveintohtml5.org/storage.html\">http://diveintohtml5.org/storage.html</a></p>\n",
                    "is_accepted": false,
                    "score": 18
                }
            ],
            "body": "<p>So I'm searching for a good crash course on localstorage and interacting with it in Javascript. I want to build a to-do list webapp with some extra functionality but it would be just for 1 user. I don't want to mess with php/mysql and have the server doing anything. Links to tutorials would be best :-D</p>\n",
            "last_activity_date": 1372805575,
            "question_id": 2800238,
            "score": 25,
            "tags": [
                "javascript",
                "html5",
                "local-storage"
            ],
            "title": "Javascript + HTML5 localstorage"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I don't have time to fully debug is right now, but from a quick look on Firefox (development build) it looks like jquery is acting up:</p>\n\n<pre><code>document.documentElement.innerHTML\n// gives the document source without the &lt;script src&gt;\n\ndocument.documentElement.\n  getElementsByTagName(\"iframe\")[0].contentDocument.documentElement.innerHTML\n\n// gives: &lt;head&gt;&lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;\n</code></pre>\n\n<p>A very interesting question, thanks!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I didn't find an answer to my original question, but I did find another approach that works even better (at least for my purposes).</p>\n\n<p>This doesn't use jQuery on the parent page (which is actually a good thing, as I'd prefer not to load it there), but it does load jQuery in the &lt;iframe&gt; in an apparently completely valid and usable way. All I'm doing is writing over the &lt;iframe&gt;'s document object with a new one created from scratch. This allows me to simply include a &lt;script&gt; element in a string which I then write to the &lt;iframe&gt;'s document object.</p>\n\n<p>The code:</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/&gt;\n    &lt;title&gt;frame&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n\n    &lt;div id=\"test\"&gt;&lt;/div&gt;\n\n    &lt;script type=\"text/javascript\"&gt;\n      // create a new &lt;iframe&gt; element\n      var iframe = document.createElement('iframe');\n\n      // append the new element to the &lt;div id=\"bucket\"&gt;&lt;/div&gt;\n      var bucket = document.getElementById('test');\n      bucket.appendChild(iframe);\n\n      // create a string to use as a new document object\n      var val = '&lt;scr' + 'ipt type=\"text/javascript\" src=\"http://jqueryjs.googlecode.com/files/jquery-1.3.2.min.js\"&gt;&lt;/scr' + 'ipt&gt;';\n      val += '&lt;scr' + 'ipt type=\"text/javascript\"&gt; $(function() { $(\"body\").append(\"&lt;h1&gt;It works!&lt;/h1&gt;\"); }); &lt;/scr' + 'ipt&gt;';\n\n      // get a handle on the &lt;iframe&gt;d document (in a cross-browser way)\n      var doc = iframe.contentWindow || iframe.contentDocument;\n      if (doc.document) {\n        doc = doc.document;\n      }\n\n      // open, write content to, and close the document\n      doc.open();\n      doc.write(val);\n      doc.close();\n    &lt;/script&gt;\n\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>I hope this helps someone down the road!</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Had the same problem, took me hours to find the solution.\nYou just need to create the script's object using the <strong>iframe's document</strong>.</p>\n\n<pre><code>var myIframe = document.getElementById(\"myIframeId\");\nvar script = myIframe.contentWindow.document.createElement(\"script\");\nscript.type = \"text/javascript\";\nscript.src = src;\nmyIframe.contentWindow.document.body.appendChild(script);\n</code></pre>\n\n<p>Works like a charm!</p>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>The answer to the original question is simple - the execution of the script is done by jquery, and since jquery is loaded in the top frame, this is where the script runs too, no matter where you are appending it. A smarter implementation of jquery can no doubt be made to use the correct window object, but for now things are how they are.</p>\n\n<p>As to the workarounds, you already have two good answers (even if one is your own). What I might add is that you can use one of those workarounds to include jquery.js in the iframe, and then get that jquery object instead of the top one to insert your additional markup... but that may very well be overkill too.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm attempting to create an &lt;iframe&gt; using JavaScript, then append a &lt;script&gt; element to that &lt;iframe&gt;, which I want to run in the context of the &lt;iframe&gt;d document.</p>\n\n<p>Unfortunately, it seems I'm doing something wrong - my JavaScript appears to execute successfully, but the context of the &lt;script&gt; is the parent page, not the &lt;iframe&gt;d document. I also get a 301 Error in Firebug's \"Net\" tab when the browser requests <strong>iframe_test.js</strong>, though it then requests it again (not sure why?) successfully.</p>\n\n<p>This is the code I'm using (live demo at <a href=\"http://onespot.wsj.com/static/iframe_test.html\">http://onespot.wsj.com/static/iframe_test.html</a>):</p>\n\n<p><strong>iframe_test.html</strong></p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/&gt;\n    &lt;title&gt;&amp;lt;iframe&amp;gt; test&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"bucket\"&gt;&lt;/div&gt;\n    &lt;script type=\"text/javascript\" src=\"http://jqueryjs.googlecode.com/files/jquery-1.3.2.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n      $(document).ready(function() {\n        $('#bucket').append('&lt;iframe id=\"test\"&gt;&lt;/iframe&gt;');\n        setTimeout(function() {\n          var iframe_body = $('#test').contents().find('body');\n          iframe_body.append('&lt;scr' + 'ipt type=\"text/javascript\" src=\"http://onespot.wsj.com/static/iframe_test.js\"&gt;&lt;/scr' + 'ipt&gt;');\n        }, 100);\n      });\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>iframe_test.js</strong></p>\n\n<pre><code>$(function() {\n  var test = '&lt;p&gt;Shouldn\\'t this be inside the &amp;lt;iframe&amp;gt;?&lt;/p&gt;';\n  $('body').append(test);\n});\n</code></pre>\n\n<p>One thing that seems unusual is that the the code in <strong>iframe_test.js</strong> even works; I haven't loaded jQuery in the &lt;iframe&gt; itself, only in the parent document. That seems like a clue to me, but I can't figure out what it means.</p>\n\n<p>Any ideas, suggestions, etc. would be much appreciated!</p>\n",
            "last_activity_date": 1361804107,
            "question_id": 1591135,
            "score": 25,
            "tags": [
                "javascript",
                "jquery",
                "dynamic",
                "iframe",
                "parent"
            ],
            "title": "Why does appending a &lt;script&gt; to a dynamically created &lt;iframe&gt; seem to run the script in the parent page?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If, in JavaScript, you want to use a variable for a property name, you have to create the object first, and then assign the property using <a href=\"http://www.dev-archive.net/articles/js-dot-notation/\">square bracket notation</a>.</p>\n\n<pre><code>var foo = \"bar\";\nvar ob  = {};\nob[foo] = \"something\"; // === ob.bar = \"something\"\n</code></pre>\n\n<p>If you wanted to programatically create JSON, you would have to serialize the object to a string conforming to the JSON format. e.g. with the stringify method of <a href=\"http://www.json.org/js.html\">the JavaScript JSON library</a> on json.org    </p>\n",
                    "is_accepted": true,
                    "score": 48
                },
                {
                    "body": "<p>You can sort of do this:</p>\n\n<pre><code>  var myObject = {};\n  CreateProp(\"myProperty\",\"MyValue\");\n\n  function CreateProp(propertyName, propertyValue)\n  {\n      myObject[propertyName] = propertyValue;\n      alert(myObject[propertyName]);  // prints \"MyValue\" \n  };\n</code></pre>\n\n<p>I much perfer this syntax myself though:</p>\n\n<pre><code>function jsonObject()\n{\n};\nvar myNoteObject = new jsonObject();\n\nfunction SaveJsonObject()\n{\n    myNoteObject.Control = new jsonObject();\n    myNoteObject.Control.Field1= \"Fred\";\n    myNoteObject.Control.Field2= \"Wilma\";\n    myNoteObject.Control.Field3= \"Flintstone\";\n    myNoteObject.Control.Id= \"1234\";\n    myNoteObject.Other= new jsonObject();\n    myNoteObject.Other.One=\"myone\";\n};\n</code></pre>\n\n<p>Then you can use the following:</p>\n\n<pre><code>SaveJsonObject();\nvar myNoteJSON = JSON.stringify(myNoteObject);\n</code></pre>\n\n<p>NOTE: This makes use of the json2.js from here:<a href=\"http://www.json.org/js.html\">http://www.json.org/js.html</a> </p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>One thing that may be suitable (now that JSON functionality is common to newer browsers, and json2.js is a perfectly valid fallback), is to construct a JSON string and then parse it.</p>\n\n\n\n<pre><code>function func(prop, val) {\n    var jsonStr = '{\"'+prop+'\":'+val+'}';\n    return JSON.parse(jsonStr);\n}\n\nvar testa = func(\"init\", 1);\nconsole.log(testa.init);//1\n</code></pre>\n\n<p>Just keep in mind, JSON property names need to be enclosed in double quotes.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>ES6 introduces computed property names, which allow you to do</p>\n\n<pre><code>function CreateJSON (propertyName){\n    var myObject = { [propertyName] : \"Value\"};\n}\n</code></pre>\n\n<p>Note browser support is currently negligible.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is it at all possible to use variable names in object literal properties for object creation?</p>\n\n<p>Example</p>\n\n<pre><code>function createJSON (propertyName){\n    return { propertyName : \"Value\"};\n}\n\nvar myObject = createJSON(\"myProperty\");\n\nconsole.log(myObject.popertyName);  // prints \"value\"\nconsole.log(myObject.myProperty);  // Does not exist\n</code></pre>\n",
            "last_activity_date": 1408218459,
            "question_id": 3153969,
            "score": 21,
            "tags": [
                "javascript",
                "properties",
                "object-literal"
            ],
            "title": "create object using variables for property name"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Ideas:</p>\n\n<ul>\n<li><p>Try a <code>&lt;a href=\"data:....\" target=\"_blank\"&gt;</code> (Untested)</p></li>\n<li><p>Use <a href=\"https://github.com/dcneiner/Downloadify\">downloadify</a> instead of data URLs (would work for IE as well)</p></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Your problem essentially boils down to \"not all browsers will support this\".</p>\n\n<p>You could try a workaround and serve the unzipped files from a Flash object, but then you'd lose the JS-only purity (anyway, I'm not sure whether you currently can \"drag files into browser\" without some sort of Flash workaround - is that a HTML5 feature maybe?)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There are several solutions but they depend on HTML5 and haven't been implemented completely in some browsers yet. Examples below were tested in Chrome and Firefox (partly works).</p>\n\n<ol>\n<li><a href=\"http://www.nihilogic.dk/labs/canvas2image/\" rel=\"nofollow\">Canvas example</a> with save to file support. Just set your <code>document.location.href</code> to the data URI.</li>\n<li><a href=\"http://html5-demos.appspot.com/static/a.download.html\" rel=\"nofollow\">Anchor download example</a>. It uses <code>&lt;a href=\"your-data-uri\" download=\"filename.txt\"&gt;</code> to specify file name.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>One may also initiate data URL downloads via JavaScript. See <a href=\"http://stackoverflow.com/a/13696029/271577\">http://stackoverflow.com/a/13696029/271577</a> for such a solution (along with text link examples).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you also want to give a suggested name to the file (instead of the default 'download') you can use the following in Chrome:</p>\n\n<pre><code>function downloadURI(uri, name) {\n  var link = document.createElement(\"a\");\n  link.download = name;\n  link.href = uri;\n  link.click();\n}\n</code></pre>\n\n<p>And the following example shows it's use:</p>\n\n<pre><code>downloadURI(\"data:text/html,HelloWorld!\", \"helloWorld.txt\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Want to share my experience and help someone stuck on the downloads not working in Firefox and updated answer to 2014.\nThe below snippet will work in both firefox and chrome and it will accept a filename:</p>\n\n<pre><code>  // Construct the &lt;a&gt; element\n  var link = document.createElement(\"a\");\n  link.download = thefilename;\n  // Construct the uri\n  var uri = 'data:text/csv;charset=utf-8;base64,' + someb64data\n  link.href = uri;\n  document.body.appendChild(link);\n  link.click();\n  // Cleanup the DOM\n  document.body.removeChild(link);\n  delete link;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm playing with the idea of making a completely javascript based zip/unzip utility that anyone can access from a browser. They can just drag their zip directly into the browser and it'll let them download all the files within. They can also create new zip files by dragging individual files in.</p>\n\n<p>I know it'd be better to do it serverside, but this project is just for a bit of fun.</p>\n\n<p>Dragging files into the browser should be easy enough if I take advantage of the various methods available. (gmail style)</p>\n\n<p>Encoding/decoding should hopefully be fine. I've seen some as3 zip libraries so I'm sure I should be fine with that.</p>\n\n<p>My issue is downloading the files at the end..</p>\n\n<pre><code>window.location = 'data:jpg/image;base64,/9j/4AAQSkZJR....' \n</code></pre>\n\n<p>this works fine in firefox but not in chrome. </p>\n\n<p>I can embed the files as images just find in chrome using <code>&lt;img src=\"data:jpg/image;ba..\" /&gt;</code>, but the files wont necessarily be images. They could be any format.</p>\n\n<p>Can anyone think of another solution or some kind of work around?</p>\n",
            "last_activity_date": 1423843375,
            "question_id": 3916191,
            "score": 20,
            "tags": [
                "javascript",
                "data-url"
            ],
            "title": "Download data url file"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><a href=\"http://jsfiddle.net/3xTM2/\">Demo Here</a></p>\n\n<pre><code>var e = jQuery.Event(\"keypress\");\ne.which = 13; //choose the one you want\ne.keyCode = 13;\n$(\"#theInputToTest\").trigger(e);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>For those who want to do this in pure javascript, look at :</p>\n\n<ul>\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ie/ff975297%28v=vs.85%29.aspx\">initKeyboardEvent</a> for IE9+, Chrome and Safari</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/event.initKeyEvent\">initKeyEvent</a> for Firefox</li>\n</ul>\n\n<p>You can do something like (here for Firefox)</p>\n\n<pre><code>var ev = document.createEvent('KeyboardEvent');\n// Send key '13' (= enter)\nev.initKeyEvent(\n    'keydown', true, true, window, false, false, false, false, 13, 0);\ndocument.body.dispatchEvent(ev);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>What the best way to simulate the user pressing \"enter\"? $(element).keypress() doesn't seem to allow me to pass in the actual key that was pressed.</p>\n",
            "last_activity_date": 1379797528,
            "question_id": 3276794,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "testing",
                "mocking"
            ],
            "title": "jquery (or pure js) simulate enter key pressed for testing"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I tried it having the script in the same file of the html and it worked for me, the only change was that i added the \"alt\" attribute at the image:</p>\n\n<pre><code> &lt;html lang=\"en\"&gt;\n\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\" /&gt;\n        &lt;title&gt;&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;a href=\"#\" onclick=\"openPDF()\" &gt;\n   &lt;img alt=\"aaa\" src=\"images/button.png\"&gt;\n &lt;/a&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n&lt;script&gt;\nfunction openPDF() {\n     var ref = window.open('http://www.i-drain.net/userfiles/file/einbauanleitung_iboard.pdf', '_blank', 'location=yes');\n     ref.addEventListener('loadstart', function(event) { alert('start: ' + event.url); });\n     ref.addEventListener('loadstop', function(event) { alert('stop: ' + event.url); });\n     ref.addEventListener('loaderror', function(event) { alert('error: ' + event.message); });\n     ref.addEventListener('exit', function(event) { alert(event.type); });\n}\n\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For everybody who is stuck with this problem here is what i\u00b4ve finally found out:</p>\n\n<p><strong>HTML 5 object tag:</strong> not working</p>\n\n<p><strong>Embedded tag:</strong> not working</p>\n\n<p><strong>childBrowser Plugin:</strong>\nI think it would work, but it is designed for the 2.0.0 version. So you\u00b4ll get a lot of errors so i didn\u00b4t get it to work.</p>\n\n<p><strong>Phonegap InAppViewer:</strong>\n If you use it like that: </p>\n\n<pre><code>window.open('http://www.example.com/test.pdf', '_blank', 'location=yes')\n</code></pre>\n\n<p>it wont work. The InAppViewer can\u00b4t open PDF, it doesn\u00b4t matter if the PDF is external or local stored.</p>\n\n<p><strong>My solutions so far (not what the actual idea was):</strong></p>\n\n<p>you can call the window function with _system. like that:</p>\n\n<pre><code>window.open('http://www.example.com/test.pdf', '_system', 'location=yes')\n</code></pre>\n\n<p>this will open the PDF in the normal Browser and download it. After downloading it will ask if it should open it with a PDF viewer. But you have to go back to your app and open it again after that.</p>\n\n<p>Another possibility would be that you just download it to your sdcard with the Phonegap Filesystem API like that:</p>\n\n<pre><code>var fileTransfer = new FileTransfer();\nfileTransfer.download(\n\"http://developer.android.com/assets/images/home/ics-android.png\",\n\"file://sdcard/ics-android.png\",\nfunction(entry) {\n    alert(\"download complete: \" + entry.fullPath);\n},\nfunction(error) {\n    alert(\"download error source \" + error.source);\n    alert(\"download error target \" + error.target);\n    alert(\"upload error code\" + error.code);\n});\n</code></pre>\n\n<p>The last thing i\u00b4ve found out is, to use Google docs/drive to open it with the InAppViewer linked to google docs like that:</p>\n\n<pre><code>document.addEventListener(\"deviceready\", onDeviceReady, false);\nfunction onDeviceReady() {\n\nwindow.open('https://docs.google.com/viewer?url=http://www.example.com/test.pdf&amp;embedded=true', '_blank', 'location=yes'); \nref = window.open('index.html', '_self');\n }\n</code></pre>\n\n<p>This will open the PDF in the app viewing it on google docs. \nYou can generate your permalink here:\n<a href=\"https://docs.google.com/viewer\">https://docs.google.com/viewer</a>\nSo even if you change your pdf file, it will still work</p>\n\n<p>I hope this summary will help you save time. If there is another solution let me know</p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>Android webview does not have PDF viewer built-in. \nRedirect user to Google doc viewer example: \n<a href=\"http://docs.google.com/viewer?url=http://example.com/example.pdf\" rel=\"nofollow\">http://docs.google.com/viewer?url=http://example.com/example.pdf</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try in this way it will work.</p>\n\n<pre><code>var ref = window.open('http://docs.google.com/viewer?url=http://www.i-drain.net/userfiles/file/einbauanleitung_iboard.pdf', '_system', 'location=yes');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>function openPDF() {\n     var ref = window.open('http://docs.google.com/viewer?url=http://www.i-drain.net/userfiles/file/einbauanleitung_iboard.pdf', '_system', 'location=yes');\n     ref.addEventListener('loadstart', function(event) { alert('start: ' + event.url); });\n     ref.addEventListener('loadstop', function(event) { alert('stop: ' + event.url); });\n     ref.addEventListener('loaderror', function(event) { alert('error: ' + event.message); });\n     ref.addEventListener('exit', function(event) { alert(event.type); });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Android has no native PDf viewer capability in their browser (unlike iOS' Safari).\nAs far as I can see there are two nice options: </p>\n\n<ol>\n<li><p>Skip downloading entirely and show the pdf via the online view capabilities of Google Doc Viewer, as stated in <a href=\"http://stackoverflow.com/a/18596650\">this StackOverflow answer</a></p></li>\n<li><p>DO download the file and use the FileOpener plugin for Android Phonegap apps as explained in <a href=\"http://stackoverflow.com/a/20965308\">this StackOverflow answer</a>. This will either open the file in the installed PDF reader or present the user with a choice.</p></li>\n</ol>\n\n<p>I've written some stuff on downloading and showing a PDF on iOS and these options I showed in <a href=\"http://me.eekay.nl/index.php/2014/how-to-properly-download-and-show-a-frickin-pdf-in-cordova-cli/\">my blog post</a> for Android Phonegap developers.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I want to display an external PDF with the phonegap InAppBrowser in Android, but it isn\u00b4t working.</p>\n\n<p>This is my JS code:</p>\n\n<pre><code>&lt;script&gt;\nfunction openPDF() {\n     var ref = window.open('http://www.i-drain.net/userfiles/file/einbauanleitung_iboard.pdf', '_blank', 'location=yes');\n     ref.addEventListener('loadstart', function(event) { alert('start: ' + event.url); });\n     ref.addEventListener('loadstop', function(event) { alert('stop: ' + event.url); });\n     ref.addEventListener('loaderror', function(event) { alert('error: ' + event.message); });\n     ref.addEventListener('exit', function(event) { alert(event.type); });\n}\n\n\n&lt;/script&gt;\n</code></pre>\n\n<p>I want to open the pdf after clicking on a image so i use this html code:</p>\n\n<pre><code> &lt;a href=\"#\" onclick=\"openPDF()\" &gt;\n   &lt;img src=\"images/button.png\"&gt;\n &lt;/a&gt;\n</code></pre>\n",
            "last_activity_date": 1405454925,
            "question_id": 16795172,
            "score": 12,
            "tags": [
                "javascript",
                "html5",
                "cordova",
                "inappbrowser"
            ],
            "title": "Phonegap InAppBrowser display pdf 2.7.0"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Try this</p>\n\n<pre><code>canvas.addEventListener('click', function(event) { \n    click++; \n    if(click == 50) { \n          canvas.removeEventListener('click');\n    } \n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>If @Cybernate's solution doesn't work, try breaking the trigger off in to it's own function so you can reference it.</p>\n\n<pre><code>clickHandler = function(event){\n  if (click++ == 49)\n    canvas.removeEventListener('click',clickHandler);\n}\ncanvas.addEventListener('click',clickHandler);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You need to use named functions.</p>\n\n<p>Also, the <code>click</code> variable needs to be outside the handler to increment.</p>\n\n<pre><code>var click_count = 0;\n\nfunction myClick(event) {\n    click_count++;\n    if(click_count == 50) {\n       // to remove\n       canvas.removeEventListener('click', myClick);\n    }\n}\n\n// to add\ncanvas.addEventListener('click', myClick);\n</code></pre>\n\n<hr>\n\n<p><strong>EDIT:</strong> You could close around the <code>click_counter</code> variable like this:</p>\n\n<pre><code>var myClick = (function( click_count ) {\n    var handler = function(event) {\n        click_count++;\n        if(click_count == 50) {\n           // to remove\n           canvas.removeEventListener('click', handler);\n        }\n    };\n    return handler;\n})( 0 );\n\n// to add\ncanvas.addEventListener('click', myClick);\n</code></pre>\n\n<p>This way you can increment the counter across several elements. </p>\n\n<hr>\n\n<p>If you don't want that, and want each one to have its own counter, then do this:</p>\n\n<pre><code>var myClick = function( click_count ) {\n    var handler = function(event) {\n        click_count++;\n        if(click_count == 50) {\n           // to remove\n           canvas.removeEventListener('click', handler);\n        }\n    };\n    return handler;\n};\n\n// to add\ncanvas.addEventListener('click', myClick( 0 ));\n</code></pre>\n\n<p><strong>EDIT:</strong> <em>I had forgotten to name the handler being returned in the last two versions. Fixed.</em></p>\n",
                    "is_accepted": false,
                    "score": 48
                },
                {
                    "body": "<p>I think you may need to define the handler function ahead of time, like so:</p>\n\n<pre><code>var myHandler = function(event) {\n    click++; \n    if(click == 50) { \n        this.removeEventListener('click', myHandler);\n    } \n}\ncanvas.addEventListener('click', myHandler);\n</code></pre>\n\n<p>This will allow you to remove the handler by name from within itself.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>   canvas.addEventListener('click', function(event) {\n      click++;\n      if(click == 50) {\n          this.removeEventListener('click',arguments.callee,false);\n      }\n</code></pre>\n\n<p>Should do it. </p>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<pre><code>element.querySelector('.addDoor').onEvent('click', function (e) { });\nelement.querySelector('.addDoor').removeListeners();\n\n\nHTMLElement.prototype.onEvent = function (eventType, callBack, useCapture) {\nthis.addEventListener(eventType, callBack, useCapture);\nif (!this.myListeners) {\n    this.myListeners = [];\n};\nthis.myListeners.push({ eType: eventType, callBack: callBack });\nreturn this;\n};\n\n\nHTMLElement.prototype.removeListeners = function () {\nif (this.myListeners) {\n    for (var i = 0; i &lt; this.myListeners.length; i++) {\n        this.removeEventListener(this.myListeners[i].eType, this.myListeners[i].callBack);\n    };\n   delete this.myListeners;\n};\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Yet another way....., use this utility method (if you are doing this for many elements)<br>\nThis will unregister the function automatically after  <code>noOfTimes</code></p>\n\n<pre><code>function callNTimes(el, event, func, noOfTimes)\n{\n    var noOfCalls = 0;\n    var fun = function()\n    {\n        (noOfTimes &gt; noOfCalls++) ? func.apply(this, arguments) : el.removeEventListener(event, fun);\n    };\n    el.addEventListener(event, fun);\n}\n</code></pre>\n\n<p>You may use the above like this:  </p>\n\n<pre><code>callNTimes(canvas, 'click', function(event) {\n  //Your code goes here\n}, 50);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could use a named function expression (in this case the function is named 'a'), like so:</p>\n\n<pre><code>canvas.addEventListener('click', function a(event) {\n    click++;\n    if (click &gt;= 50) {\n        // remove event listener\n        canvas.removeEventListener('click', a);\n    }\n    // More code here ...\n}\n</code></pre>\n\n<p>Quick and dirty working example: <a href=\"http://jsfiddle.net/WqpfZ/1/\" rel=\"nofollow\">http://jsfiddle.net/WqpfZ/1/</a>.</p>\n\n<p>More information about named function expressions: <a href=\"http://kangax.github.io/nfe/\" rel=\"nofollow\">http://kangax.github.io/nfe/</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If someone uses jquery, he can do it like this :</p>\n\n<pre><code>var click_count = 0;\n$( \"canvas\" ).bind( \"click\", function( event ) {\n    //do whatever you want\n    click_count++;\n    if ( click_count == 50 ) {\n        //remove the event\n        $( this ).unbind( event );\n    }\n});\n</code></pre>\n\n<p>Hope that it can help someone.\nNote that the answer given by @user113716 work nicely :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to remove an event listener inside of a listener definition:</p>\n\n<pre><code>canvas.addEventListener('click', function(event) {\n    click++;\n    if(click == 50) {\n        // remove this event listener here!\n    }\n// More code here ...\n</code></pre>\n\n<p>How could I do that? this = event...\nThank you.</p>\n",
            "last_activity_date": 1409212112,
            "question_id": 4402287,
            "score": 42,
            "tags": [
                "javascript",
                "events",
                "event-handling",
                "listener"
            ],
            "title": "JavaScript: remove event listener"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Doesn't Closure just minimize and renames vars? jQuery already has a .min version. Minifying with closure again will probably be minimally helpful and potentially dangerous. </p>\n\n<p>Edit: I just did it.</p>\n\n<pre><code>Compilation was a success!\n\nOriginal Size:  55.91KB (19.28KB gzipped)\nCompiled Size:  54.05KB (18.28KB gzipped)\nSaved 3.34% off the original size (5.18% off the gzipped size)\n</code></pre>\n\n<p>This is on top of the already mined version. There's a demo here: <a href=\"http://closure-compiler.appspot.com/home\" rel=\"nofollow\">http://closure-compiler.appspot.com/home</a> </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I tried with jQuery jQuery 1.3.2</p>\n\n<pre><code>jQuery-1.3.2.min.js     57254 Bytes\njQuery closure compiler 49730 Bytes\n-----------------------------------\nReduced by               7524 Bytes\nSaved 13.31% off the original size\nSaved 10.87% off the gzipped size\n</code></pre>\n\n<p>Gain of ~7KB</p>\n\n<p>But it also reports 15 Warnings and I didn't test if it still works</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>With ADVANCED_OPTIMIZATIONS turned off:</p>\n\n<ul>\n<li>jquery-1.3.2.min.js: 57254 bytes</li>\n<li>jquery-1.3.2.closure.js 55346 bytes (-3.4%)</li>\n<li>jquery-1.3.2.min.js.gz: 19680 bytes</li>\n<li>jquery-1.3.2.closure.js.gz: 18666 bytes (-5.2%)</li>\n</ul>\n\n<p>With ADVANCED_OPTIMIZATIONS turned on: it doesn't work unmodified. With ADVANCED_OPTIMIZATIONS turned on and everything I can find to export exported... it still doesn't quite work, and the code is already up to 53466 bytes again (and 18785 gzipped, which is <em>more</em> than the gzipped closured code without ADVANCED_OPTIMIZATIONS) so it doesn't look like a winning proposition.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>John Resig reported a bug on recursive functions when he attempted to compile a nightly of jQuery 1.4, so there are a few kinks to be worked out. I wouldn't use a jQuery compiled with Closure Compiler without making sure it passes the jQuery testbed.</p>\n\n<p><a href=\"http://code.google.com/p/closure-compiler/issues/detail?id=1&amp;can=1#c2\" rel=\"nofollow\">http://code.google.com/p/closure-compiler/issues/detail?id=1&amp;can=1#c2</a></p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>Out of curiosity, I put together a SlickSpeed test of the latest Prototype and jQuery libs, shrunk with YUI and Closure. <a href=\"http://www.carumba.com/slickspeed/index.php\" rel=\"nofollow\">You can run the tests here</a>.</p>\n\n<p>As others have noted, compiling with ADVANCED_OPT does not work but if someone wants to do the work, I'll be happy to add the results to the SlickSpeed test.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I tried with their <a href=\"http://closure-compiler.appspot.com/home\" rel=\"nofollow\">online compiler</a>, it works well.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The closure compiler eliminates any code that you don't actually use. The typical web page will only use a small fraction of jQuery functions, so the most benefit will come from compiling your code together with the full version of jQuery.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I used Closure (with ADVANCED_OPTIMIZATIONS) to compress the javascript code for a single-page site that I host and saw a significant size savings over the YUI Compressor.  So I started looking into shrinking jQuery for that site as well, since it certainly doesn't use the entier jQuery library.</p>\n\n<p>I get warnings every time I run jQuery through the compiler, mostly pointing out portions of the code that are not used.  Even still, the compiled code doesn't work.  The primary issue I see is that things aren't being exported properly by the compiler.  I was able to easily export functions from my own code by attaching them to the window object, but I have not yet been able to do this yet with jQuery.</p>\n\n<p>The good news is that John Resig is already experimenting with Closure.  I suspect that we'll see new releases of both that are compatible in the near future.  </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As of jQuery 1.4, Google's Closure Compiler is used as the default minification technique for jQuery releases.  However, jQuery only uses the SIMPLE_OPTIMIZATIONS settings.  The jQuery team has <a href=\"http://bugs.jquery.com/ticket/7318\" rel=\"nofollow\">no plans to support ADVANCED_OPTIMIZATIONS</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>jQuery is not compatible (yet) with the Closure Compiler in advanced mode. I agree it would be a very good thing to make it compatible, because its method-chaining syntax lends very readily to prototype virtualization for much improved execution speed.</p>\n\n<p>In fact, among the popular JavaScript libraries (other than Closure Library, that is), only the Dojo Toolkit is compatible with Closure Advanced mode.</p>\n\n<p><a href=\"http://dojo-toolkit.33424.n3.nabble.com/file/n2636749/Using_the_Dojo_Toolkit_with_the_Closure_Compiler.pdf?by-user=t\" rel=\"nofollow\">http://dojo-toolkit.33424.n3.nabble.com/file/n2636749/Using_the_Dojo_Toolkit_with_the_Closure_Compiler.pdf?by-user=t</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Has anyone compiled jQuery against Google's newly-released <a href=\"http://code.google.com/closure/compiler/\">Closure</a> compiler?</p>\n\n<p>There has been reported huge savings in code size. I'm curious what the benefit is if jQuery was compiled with it.</p>\n",
            "last_activity_date": 1320429538,
            "question_id": 1691861,
            "score": 37,
            "tags": [
                "javascript",
                "jquery",
                "minify",
                "google-closure",
                "google-closure-compiler"
            ],
            "title": "jQuery compiled with Google Closure Compiler"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can for instance use mouse movement as seed for random numbers, read out time and mouse position whenever the onmousemove event happens, feed that data to a whitening function and you will have some first class random at hand. Though do make sure that user has moved the mouse sufficiently before you use the data.</p>\n\n<p>Edit: I have myself played a bit with the concept by making a password generator, I wouldn't guarantee that my whitening function is flawless, but being constantly reseeded I'm pretty sure that it's plenty for the job: <a href=\"http://ebusiness.hopto.org/generator.htm\" rel=\"nofollow\">http://ebusiness.hopto.org/generator.htm</a></p>\n\n<p>Edit2: It now sort of works with smartphones, but only by disabling touch functionality while the entropy is gathered. Android won't work properly any other way.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>You might want to try\n<a href=\"http://sourceforge.net/projects/clipperzlib/\">http://sourceforge.net/projects/clipperzlib/</a>\nIt has an implementation of <a href=\"http://en.wikipedia.org/wiki/Fortuna_%28PRNG%29\">Fortuna</a> which is a cryptographically secure random number generator. (Take a look at src/js/Clipperz/Crypto/PRNG.js). It appears to use the mouse as a source of randomness as well.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>There's been discussion at WHATWG on adding this to the window.crypto object. You can read <a href=\"http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2011-February/030241.html\" rel=\"nofollow\">the discussion</a> and check out the <a href=\"http://wiki.whatwg.org/wiki/Crypto\" rel=\"nofollow\">proposed API</a> and webkit bug (22049).</p>\n\n<p>Just tested the following code <a href=\"http://blog.chromium.org/2011/06/new-chromium-security-features-june.html\" rel=\"nofollow\">in Chrome</a> to get a random byte:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>(function(){\r\n  var buf = new Uint8Array(1);\r\n  window.crypto.getRandomValues(buf);\r\n  alert(buf[0]);\r\n})();</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>In order, I think your best bets are:</p>\n\n<ol>\n<li>window.crypto.getRandomValues or window.msCrypto.getRandomValues</li>\n<li>The sjcl library's randomWords function (<a href=\"http://crypto.stanford.edu/sjcl/\">http://crypto.stanford.edu/sjcl/</a>)</li>\n<li>The isaac library's random number generator (which is seeded by Math.random, so not really cryptographically secure) (<a href=\"https://github.com/rubycon/isaac.js\">https://github.com/rubycon/isaac.js</a>)</li>\n</ol>\n\n<p>window.crypto.getRandomValues has been implemented in Chrome for a while now, and relatively recently in Firefox as well. Unfortunately, Internet Explorer 10 and before do not implement the function. IE 11 has window.msCrypto, which accomplishes the same thing. sjcl has a great random number generator seeded from mouse movements, but there's always a chance that either the mouse won't have moved sufficiently to seed the generator, or that the user is on a mobile device where there is no mouse movement whatsoever. Thus, I recommend having a fallback case where you can still get a non-secure random number if there is no choice. Here's how I've handled this:</p>\n\n<pre><code>function GetRandomWords (wordCount) {\n    var randomWords;\n\n    // First we're going to try to use a built-in CSPRNG\n    if (window.crypto &amp;&amp; window.crypto.getRandomValues) {\n        randomWords = new Int32Array(wordCount);\n        window.crypto.getRandomValues(randomWords);\n    }\n    // Because of course IE calls it msCrypto instead of being standard\n    else if (window.msCrypto &amp;&amp; window.msCrypto.getRandomValues) {\n        randomWords = new Int32Array(wordCount);\n        window.msCrypto.getRandomValues(randomWords);\n    }\n    // So, no built-in functionality - bummer. If the user has wiggled the mouse enough,\n    // sjcl might help us out here\n    else if (sjcl.random.isReady()) {\n        randomWords = sjcl.random.randomWords(wordCount);\n    }\n    // Last resort - we'll use isaac.js to get a random number. It's seeded from Math.random(),\n    // so this isn't ideal, but it'll still greatly increase the space of guesses a hacker would\n    // have to make to crack the password.\n    else {\n        randomWords = [];\n        for (var i = 0; i &lt; wordCount; i++) {\n            randomWords.push(isaac.rand());\n        }\n    }\n\n    return randomWords;\n};\n</code></pre>\n\n<p>You'll need to include sjcl.js and isaac.js for that implementation, and be sure to start the sjcl entropy collector as soon as your page is loaded:</p>\n\n<pre><code>sjcl.random.startCollectors();\n</code></pre>\n\n<p>sjcl is dual-licensed BSD and GPL, while isaac.js is MIT, so it's perfectly safe to use either of those in any project. As mentioned in another answer, clipperz is another option, however for whatever bizarre reason, it is licensed under the AGPL. I have yet to see anyone who seems to understand what implications that has for a JavaScript library, but I'd universally avoid it.</p>\n\n<p>One way to improve the code I've posted might be to store the state of the isaac random number generator in localStorage, so it isn't reseeded every time the page is loaded. Isaac will generate a random sequence, but for cryptography purposes, the seed is all-important. Seeding with Math.random is bad, but at least a little less bad if it isn't necessarily on every page load.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>First of all, you need a source of entropy. For example, movement of the mouse, password, or any other. But all of these sources are very far from random, and guarantee you 20 bits of entropy, rarely more. The next step that you need to take is to use the mechanism like \"Password-Based KDF\" it will make computationally difficult to distinguish data from random.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How do I generate cryptographically secure random numbers in javascript?</p>\n",
            "last_activity_date": 1419958250,
            "question_id": 4083204,
            "score": 33,
            "tags": [
                "javascript",
                "cryptography"
            ],
            "title": "Secure random numbers in javascript?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You'll want something like this, taken from <a href=\"http://www.howtocreate.co.uk/tutorials/javascript/browserwindow\">http://www.howtocreate.co.uk/tutorials/javascript/browserwindow</a></p>\n\n<pre><code>function alertSize() {\n  var myWidth = 0, myHeight = 0;\n  if( typeof( window.innerWidth ) == 'number' ) {\n    //Non-IE\n    myWidth = window.innerWidth;\n    myHeight = window.innerHeight;\n  } else if( document.documentElement &amp;&amp; ( document.documentElement.clientWidth || document.documentElement.clientHeight ) ) {\n    //IE 6+ in 'standards compliant mode'\n    myWidth = document.documentElement.clientWidth;\n    myHeight = document.documentElement.clientHeight;\n  } else if( document.body &amp;&amp; ( document.body.clientWidth || document.body.clientHeight ) ) {\n    //IE 4 compatible\n    myWidth = document.body.clientWidth;\n    myHeight = document.body.clientHeight;\n  }\n  window.alert( 'Width = ' + myWidth );\n  window.alert( 'Height = ' + myHeight );\n}\n</code></pre>\n\n<p>So that's <code>innerHeight</code> for modern browsers, <code>documentElement.clientHeight</code> for IE, <code>body.clientHeight</code> for deprecated/quirks.</p>\n",
                    "is_accepted": false,
                    "score": 56
                },
                {
                    "body": "<p>You can use the <code>window.innerHeight</code></p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>This should works too. First create an absolute div element with absolute position and 100% height:</p>\n\n<pre><code>&lt;div id=\"h\" style=\"position:absolute;top:0;bottom:0;\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Then, get the window height from that element via <code>offsetHeight</code></p>\n\n<pre><code>var winHeight = document.getElementById('h').offsetHeight;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try using jquery:</p>\n\n<pre><code>window_size = $(window).height();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>The way that I like to do it is like this with a tertiary assignment.</p>\n\n<pre><code> var width = isNaN(window.innerWidth) ? window.clientWidth : window.innerWidth;\n var height = isNaN(window.innerHeight) ? window.clientHeight : window.innerHeight;\n</code></pre>\n\n<p>I might point out that, if you run this in the global context that from that point on you could use window.height and window.width.</p>\n\n<p>Works on IE and other browsers as far as I know (I have only tested it on IE11).</p>\n\n<p>Super clean and, if I am not mistaken, efficient.</p>\n\n<p>~techdude</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I prefer the way I just figured out... No JS... 100% HTML &amp; CSS:</p>\n\n<p>(Will center it perfectly in the middle, regardless of the content size.</p>\n\n<p><strong>HTML FILE</strong></p>\n\n<pre><code>&lt;html&gt;&lt;head&gt;\n&lt;link href=\"jane.css\" rel=\"stylesheet\" /&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;table id=\"container\"&gt;\n&lt;tr&gt;\n&lt;td id=\"centerpiece\"&gt;\n123\n&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n\n<p><strong>CSS FILE</strong></p>\n\n<pre><code>#container{\n    border:0;\n    width:100%;\n    height:100%;\n}\n#centerpiece{\n    vertical-align:middle;\n    text-align:center;\n}\n</code></pre>\n\n<p>for centering images / div's held within the td, you may wish to try margin:auto; and specify a div dimension instead. -Though, saying that... the 'text-align' property will align much more than just a simple text element.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>JavaScript version in case if jQuery is not an option.</p>\n\n<p>window.screen.availHeight</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var winWidth = window.screen.width;\nvar winHeight = window.screen.height;\n\ndocument.write(winWidth, winHeight);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There's a simpler way than a whole bunch of if statements. Use the or (||) operator.</p>\n\n<pre><code>function getBrowserDimensions() {\n  return {\n    width: (window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth),\n    height: (window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight)\n  };\n}\n\nvar browser_dims = getBrowserDimensions();\n\nalert(\"Width = \" + browser_dims.width + \"\\nHeight = \" + browser_dims.height);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am looking for a code snippet to get the height of the viewable area within a browser window.</p>\n\n<p>I had this code, however it is somewhat bugged as if the the body doesn't exceed the height the of the window then it comes back short.</p>\n\n<pre><code>document.body.clientHeight;\n</code></pre>\n\n<p>I have tried a couple of other things but they either return NaN or the same height as the above.</p>\n\n<p>Does anyone know how to get the real height of the browsing window?</p>\n",
            "last_activity_date": 1419295301,
            "question_id": 3333329,
            "score": 31,
            "tags": [
                "javascript",
                "window",
                "height"
            ],
            "title": "JavaScript - Get Browser Height"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>InnerText property html-encodes the content, turning <code>&lt;p&gt;</code> to <code>&amp;lt;p&amp;gt;</code> etc. If you want to insert HTML tags you need to use InnerHTML</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><em>innerHTML</em> gives you the <em>DOM(HTML Markup)</em> elements to which you can attach events and do other things as you can do with HTML tags but <em>innerText</em> gives you the content (whatever it is e.g. a tag,text etc.) as <em>plain text</em>.</p>\n\n<p>And <em>childNodes[].value</em> is actually <em>childNodes[index].nodeValue</em> which gives you the child element's value of a parent element.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Unlike innerText, though, innerHTML lets you work with HTML rich text and doesn't automatically encode and decode text. In other words, innerText retrieves and sets the content of the tag as plain text, whereas innerHTML retrieves and sets the same content but in HTML format.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>InnerText will only return the text value of the page with each element on a newline in plain text, while innerHTML will return the HTML content of everything inside the body tag, and childNodes will return a list of nodes, as the name suggests, in object form</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>var element = document.getElementById(\"main\");\n   var values = element.childNodes[1].innerText;\n   alert('the value is:' + values);</code>   </p>\n\n<p>To further refine it and retrieve the value Alec for example, use another .childNodes[1]</p>\n\n<p><code>var element = document.getElementById(\"main\");\n   var values = element.childNodes[1].childNodes[1].innerText;\n   alert('the value is:' + values);</code></p>\n\n<p>Unlike InnerText, though, InnerHtml lets you work with HTML rich text and doesn't automatically encode and decode text. In other words, InnerText retrieves and sets the content of the tag as plain text, whereas InnerHtml retrieves and sets the same content but in HTML format.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The examples below refer to the following HTML snippet: </p>\n\n<pre><code>&lt;div id=\"test\"&gt;\n   Warning: This element contains &lt;code&gt;code&lt;/code&gt; and &lt;strong&gt;strong language&lt;/strong&gt;.\n&lt;/div&gt;\n</code></pre>\n\n<p>The node will be referenced by the following JavaScript:</p>\n\n<pre><code>var x = document.getElementById('test');\n</code></pre>\n\n<p><br /> </p>\n\n<h3><code>element.innerHTML</code></h3>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/element.innerHTML\">Sets or gets the HTML syntax describing the element's descendants</a></p>\n\n<pre><code>x.innerHTML\n// =&gt; \"\n// =&gt;   Warning: This element contains &lt;code&gt;code&lt;/code&gt; and &lt;strong&gt;strong language&lt;/strong&gt;.\n// =&gt; \"\n</code></pre>\n\n<p>This is part of the W3C's <a href=\"http://www.w3.org/TR/DOM-Parsing/#widl-Element-innerHTML\">DOM Parsing and Serialization Specification</a>.</p>\n\n<p><br /> </p>\n\n<h3><code>element.innerText</code> (Not a Standard)</h3>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/library/ie/ms533899(v=vs.85).aspx\">Sets or gets the text between the start and end tags of the object</a></p>\n\n<pre><code>x.innerText\n// =&gt; \"Warning: This element contains code and strong language.\"\n</code></pre>\n\n<ul>\n<li><code>innerText</code> was introduced by Microsoft and is <em>not a W3C standard</em>; the implementation varies across browsers although most replicate IE's behavior; notably, Firefox does support <code>innerText</code> at all</li>\n<li><code>innerText</code> is style-aware and will not return the text of hidden elements</li>\n<li><code>innerText</code> will trigger a reflow</li>\n<li><code>innerText</code> implementations true to IE's will not return the content of <code>&lt;script&gt;</code> and <code>&lt;style&gt;</code> elements</li>\n<li><code>innerText</code> strips surrounding whitespace</li>\n</ul>\n\n<p><br /> </p>\n\n<h3><code>node.textContent</code></h3>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node.textContent\">Gets or sets the text content of a node and its descendants.</a></p>\n\n<pre><code>x.textContent\n// =&gt; \"\n// =&gt;   Warning: This element contains code and strong language.\n// =&gt; \"\n</code></pre>\n\n<p><em>While this is a <a href=\"http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#Node3-textContent\">W3C standard</a>, it is not supported by IE &lt; 9.</em></p>\n\n<ul>\n<li>Is not aware of styling and will therefore return content hidden by CSS</li>\n<li>Does not trigger a reflow (therefore more performant)</li>\n<li>Unlike <code>innerText</code>, <code>textContent</code> gets the content of all elements, including <code>&lt;script&gt;</code> and <code>&lt;style&gt;</code> elements</li>\n</ul>\n\n<p><br /> </p>\n\n<h3><code>node.value</code></h3>\n\n<p>This one depends on the element that you've targeted. For the above example, <code>x</code> returns an <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLDivElement\">HTMLDivElement</a> object, which does not have a <code>value</code> property defined.</p>\n\n<pre><code>x.value // =&gt; null\n</code></pre>\n\n<p>Input tags (<code>&lt;input /&gt;</code>), for example, do <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement\">define a <code>value</code> property</a>, which refers to the \"current value in the control\".</p>\n\n<pre><code>&lt;input id=\"example-input\" type=\"text\" value=\"default\" /&gt;\n&lt;script&gt;\n  document.getElementById('example-input').value //=&gt; \"default\"\n  // User changes input to \"something\"\n  document.getElementById('example-input').value //=&gt; \"something\"\n&lt;/script&gt;\n</code></pre>\n\n<p>From the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement\">docs</a>:</p>\n\n<blockquote>\n  <p>Note: for certain input types the returned value might not match the\n  value the user has entered. For example, if the user enters a\n  non-numeric value into an , the returned value\n  might be an empty string instead.</p>\n</blockquote>\n\n<p><br /> </p>\n\n<h2>Sample Script</h2>\n\n<p>Here's an example which shows the output for the HTML presented above:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var properties = ['innerHTML', 'innerText', 'textContent', 'value'];\r\n\r\n// Writes to textarea#output and console\r\nfunction log(obj) {\r\n  console.log(obj);\r\n  var currValue = document.getElementById('output').value;\r\n  document.getElementById('output').value = (currValue ? currValue + '\\n' : '') + obj; \r\n}\r\n\r\n// Logs property as [propName]value[/propertyName]\r\nfunction logProperty(obj, property) {\r\n  var value = obj[property];\r\n  log('[' + property + ']'  +  value + '[/' + property + ']');\r\n}\r\n\r\n// Main\r\nlog('=============== ' + properties.join(' ') + ' ===============');\r\nfor (var i = 0; i &lt; properties.length; i++) {\r\n  logProperty(document.getElementById('test'), properties[i]);\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div id=\"test\"&gt;\r\n  Warning: This element contains &lt;code&gt;code&lt;/code&gt; and &lt;strong&gt;strong language&lt;/strong&gt;.\r\n&lt;/div&gt;\r\n&lt;textarea id=\"output\" rows=\"12\" cols=\"80\" style=\"font-family: monospace;\"&gt;&lt;/textarea&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 33
                }
            ],
            "body": "<p>What is difference between <code>innerHTML</code>, <code>innerText</code> and <code>childNodes[].value</code> attributes in javascript?</p>\n",
            "last_activity_date": 1415909121,
            "question_id": 19030742,
            "score": 30,
            "tags": [
                "javascript"
            ],
            "title": "Difference between innerText and innerHTML in javascript"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<pre><code>function stopPropogation(e)\n{\n    e = e || window.event;\n    e.cancelBubble = true;\n    if (e.stopPropagation) e.stopPropagation();\n    if (e.preventDefault) e.preventDefault();\n}\n</code></pre>\n\n<p>This should work.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Apparently, you can set <a href=\"http://groups.google.com/group/jquery-en/browse%5Fthread/thread/d9d43f8bef89284b\" rel=\"nofollow\"><code>overflow:hidden</code> to prevent scrolling</a>. Not sure how that'd go if the doc is already scrolled. I'm also on a mouseless laptop, so no scrolly wheel testing for me tonight :-) It's probably worth a shot though.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Sorry, as far as I'm aware it is impossible to cancel any kind of scroll event.</p>\n\n<p>Both <a href=\"http://www.w3.org/TR/2009/WD-DOM-Level-3-Events-20090908/#event-type-scroll\">W3</a> and <a href=\"http://msdn.microsoft.com/en-us/library/ms536966%28VS.85%29.aspx\">MSDN</a> say:</p>\n\n<pre><code>Cancelable  No\nBubbles     No\n</code></pre>\n\n<p>I think you'll have to leave this up to browser authors to fix. Firefox (3.5 on Linux, anyway) seems to have a better behaviour for me: it only scrolls the parent if the child is already at the top/bottom end at the moment you <em>start</em> using the scrollwheel.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>you can try jscroll pane inside the iframe to replace the default scroll. </p>\n\n<p><a href=\"http://www.kelvinluck.com/assets/jquery/jScrollPane/jScrollPane.html\" rel=\"nofollow\">http://www.kelvinluck.com/assets/jquery/jScrollPane/jScrollPane.html</a></p>\n\n<p>I am not sure, but give it a try</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If we cannot prevent window scrolling, why not undo it?\nThat is, catching the scroll event and then scrolling back to a fixed position.</p>\n\n<p>The following code locks the Y-Axis as long as one hovers over <code>$(\"#popup\")</code>:</p>\n\n<pre><code>// here we store the window scroll position to lock; -1 means unlocked\nvar forceWindowScrollY = -1;\n\n$(window).scroll(function(event) {\n  if(forceWindowScrollY != -1 &amp;&amp; window.scrollY != forceWindowScrollY) {\n    $(window).scrollTop(forceWindowScrollY);    \n  }\n});\n\n$(\"#popup\").hover(function() {\n  if(forceWindowScrollY == -1) {\n    forceWindowScrollY = $(window).scrollTop();\n  }\n}, function() {\n  forceWindowScrollY = -1;\n});\n</code></pre>\n\n<p>I use this for the query suggest box on <a href=\"http://bundestube.de/\">http://bundestube.de/</a>  (enter some characters into the top search box to make the scrollable pane visible):</p>\n\n<p><img src=\"http://i.stack.imgur.com/z6Aeg.png\" alt=\"Screenshot\"></p>\n\n<p>This works flawlessly in Chrome/Safari (Webkit) and with some scrolling glitches in Firefox and Opera. For some reason, it does not work with my IE installation. I guess this has to do with jQuery's hover method, which appears to not work correctly in 100% of all cases.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I know it's quite an old question, but since this is one of top results in google... I had to somehow cancel scroll bubbling without jQuery and this code works for me:</p>\n\n<pre><code>function preventDefault(e) {\n  e = e || window.event;\n  if (e.preventDefault)\n    e.preventDefault();\n  e.returnValue = false;  \n}\n\ndocument.getElementById('a').onmousewheel = function(e) { \n  document.getElementById('a').scrollTop -= e. wheelDeltaY; \n  preventDefault(e);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>my jQuery plugin:</p>\n\n<pre><code>$('.child').dontScrollParent();\n\n$.fn.dontScrollParent = function()\n{\n    this.bind('mousewheel DOMMouseScroll',function(e)\n    {\n        var delta = e.originalEvent.wheelDelta || -e.originalEvent.detail;\n\n        if (delta &gt; 0 &amp;&amp; $(this).scrollTop() &lt;= 0)\n            return false;\n        if (delta &lt; 0 &amp;&amp; $(this).scrollTop() &gt;= this.scrollHeight - $(this).height())\n            return false;\n\n        return true;\n    });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here's what I do:</p>\n\n<pre><code>  $('.noscroll').on('DOMMouseScroll mousewheel', function(ev) {\n     var prevent = function() {\n         ev.stopPropagation();\n         ev.preventDefault();\n         ev.returnValue = false;\n         return false;\n     }\n     return prevent();\n  }); \n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/te8porgp/\" rel=\"nofollow\">demo fiddle</a></p>\n\n<p>Use CSS <code>overflow:hidden</code> to hide the scrollbar as this will do nothing if they drag it.</p>\n\n<p>Works cross-browser</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a modal box window (pop-up) that contains an iframe,<br />\n and inside that <strong>iframe</strong> there's a <strong>div</strong> that is scrollable.</p>\n\n<p>When I scroll the iframe's inner DIV, and it has reached its top or bottom limit,<br /> the window of the browser itself starts to scroll. this is an <em>unwanted behavior</em>.</p>\n\n<p>I've tried something like this, which kills the main window scroll when<br /> onMouseEnter when mouse enters pop-up box area:</p>\n\n<p>e.preventDefault() is not working as it should for some reason...</p>\n\n<pre><code>$(\"#popup\").mouseenter(function(){\n   $(window).bind(\"scroll\", function(e){\n        e.preventDefault();\n   }); \n}).mouseleave(function(){\n    $(window).unbind(\"scroll\");\n});\n</code></pre>\n\n<h2>Update</h2>\n\n<p>Seems like now in 2013 <code>e.preventDefault();</code> is enough...</p>\n",
            "last_activity_date": 1418511357,
            "question_id": 1459676,
            "score": 29,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "events",
                "scroll"
            ],
            "title": "prevent Scroll &quot;bubbling&quot; from element to window"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code> dataString = [];\n   $.ajax({\n        type: \"POST\",\n        url: \"script.php\",\n        data:{data: $(dataString).serializeArray()}, \n        cache: false,\n\n        success: function(){\n            alert(\"OK\");\n        }\n    });\n</code></pre>\n\n<p><a href=\"http://api.jquery.com/serializeArray/\">http://api.jquery.com/serializeArray/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Encode your data string into JSON.</p>\n\n<pre><code>dataString = ??? ; // array?\nvar jsonString = JSON.stringify(dataString);\n   $.ajax({\n        type: \"POST\",\n        url: \"script.php\",\n        data: {data : jsonString}, \n        cache: false,\n\n        success: function(){\n            alert(\"OK\");\n        }\n    });\n</code></pre>\n\n<p><strong>In your PHP</strong></p>\n\n<pre><code>$data = json_decode(stripslashes($_POST['data']));\n\n  // here i would like use foreach:\n\n  foreach($data as $d){\n     echo $d;\n  }\n</code></pre>\n\n<p><strong>Note</strong></p>\n\n<p>When you send data via POST, it needs to be as a keyvalue pair. </p>\n\n<p>Thus</p>\n\n<p><code>data: dataString</code></p>\n\n<p>is wrong. Instead do:</p>\n\n<p><code>data: {data:dataString}</code></p>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>Data in jQuery <code>ajax()</code> function accepts anonymous objects as its input, see <a href=\"http://api.jquery.com/jQuery.ajax/\" rel=\"nofollow\">documentation</a>. So example of what you're looking for is: </p>\n\n<pre class=\"lang-js prettyprint-override\"><code>dataString = {key: 'val', key2: 'val2'};\n$.ajax({\n        type: \"POST\",\n        url: \"script.php\",\n        data: dataString, \n        cache: false,\n\n        success: function(){\n            alert(\"OK\");\n        }\n    });\n</code></pre>\n\n<p>You may also write POST/GET query on your own, like <code>key=val&amp;key2=val2</code>, but you'd have to handle escaping yourself which is impractical.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>dataString suggests the data is formatted in a string (and maybe delimted by a character).</p>\n\n<pre><code>$data = explode(\",\", $_POST['data']);\nforeach($data as $d){\n     echo $d;\n}\n</code></pre>\n\n<p>if dataString is not a string but infact an array (what your question indicates) use JSON.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is a link that might usefull for you <a href=\"http://stackoverflow.com/questions/16041835/posting-array-to-php-using-ajax\">Posting Array to PHP using ajax</a> and agree with Vyktor\ni've tried it and works great,</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have array made by function <strong>.push</strong>. In array is very large data. How is the best way send this to PHP script?</p>\n\n<pre><code>   dataString = ??? ; // array?\n   $.ajax({\n        type: \"POST\",\n        url: \"script.php\",\n        data: dataString, \n        cache: false,\n\n        success: function(){\n            alert(\"OK\");\n        }\n    });\n</code></pre>\n\n<p>script.php:</p>\n\n<pre><code>  $data = $_POST['data'];\n\n  // here i would like use foreach:\n\n  foreach($data as $d){\n     echo $d;\n  }\n</code></pre>\n\n<p>How is the best way for this?</p>\n",
            "last_activity_date": 1388979666,
            "question_id": 9001526,
            "score": 17,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "ajax"
            ],
            "title": "Send array with Ajax to PHP script"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You have possibly tried <a href=\"http://sourceforge.net/projects/iecapt/\">IECapt</a>. I think it is the right way to go. I created a modified version of it and use a <code>timer</code> instead of <code>Thread.Sleep</code> it captures your site as expected.</p>\n\n<p><strong>------EDIT------</strong></p>\n\n<p>Here is the ugly source. Just Add a reference to <code>Microsoft HTML Object Library</code>.</p>\n\n<p>And this is the usage:</p>\n\n<pre><code>HtmlCapture capture = new HtmlCapture(@\"c:\\temp\\myimg.png\");\ncapture.HtmlImageCapture += new HtmlCapture.HtmlCaptureEvent(capture_HtmlImageCapture);\ncapture.Create(\"http://www.highcharts.com/demo/combo-dual-axes\");\n\nvoid capture_HtmlImageCapture(object sender, Uri url)\n{\n    this.Close();\n}\n</code></pre>\n\n<p>File1</p>\n\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Drawing;\nusing System.Linq;\nusing System.Text;\nusing System.Windows.Forms;\nusing System.IO;\n\n\nnamespace MyIECapt\n{\n    public class HtmlCapture\n    {\n        private WebBrowser web;\n        private Timer tready;\n        private Rectangle screen;\n        private Size? imgsize = null;\n\n        //an event that triggers when the html document is captured\n        public delegate void HtmlCaptureEvent(object sender, Uri url);\n\n        public event HtmlCaptureEvent HtmlImageCapture;\n\n        string fileName = \"\";\n\n        //class constructor\n        public HtmlCapture(string fileName)\n        {\n            this.fileName = fileName;\n\n            //initialise the webbrowser and the timer\n            web = new WebBrowser();\n            tready = new Timer();\n            tready.Interval = 2000;\n            screen = Screen.PrimaryScreen.Bounds;\n            //set the webbrowser width and hight\n            web.Width = 1024; //screen.Width;\n            web.Height = 768; // screen.Height;\n            //suppress script errors and hide scroll bars\n            web.ScriptErrorsSuppressed = true;\n            web.ScrollBarsEnabled = false;\n            //attached events\n            web.Navigating +=\n              new WebBrowserNavigatingEventHandler(web_Navigating);\n            web.DocumentCompleted += new\n              WebBrowserDocumentCompletedEventHandler(web_DocumentCompleted);\n            tready.Tick += new EventHandler(tready_Tick);\n        }\n\n\n        public void Create(string url)\n        {\n            imgsize = null;\n            web.Navigate(url);\n        }\n\n        public void Create(string url, Size imgsz)\n        {\n            this.imgsize = imgsz;\n            web.Navigate(url);\n        }\n\n\n\n        void web_DocumentCompleted(object sender,\n                 WebBrowserDocumentCompletedEventArgs e)\n        {\n            //start the timer\n            tready.Start();\n        }\n\n        void web_Navigating(object sender, WebBrowserNavigatingEventArgs e)\n        {\n            //stop the timer   \n            tready.Stop();\n        }\n\n\n\n        void tready_Tick(object sender, EventArgs e)\n        {\n            try\n            {\n                //stop the timer\n                tready.Stop();\n\n                mshtml.IHTMLDocument2 docs2 = (mshtml.IHTMLDocument2)web.Document.DomDocument;\n                mshtml.IHTMLDocument3 docs3 = (mshtml.IHTMLDocument3)web.Document.DomDocument;\n                mshtml.IHTMLElement2 body2 = (mshtml.IHTMLElement2)docs2.body;\n                mshtml.IHTMLElement2 root2 = (mshtml.IHTMLElement2)docs3.documentElement;\n\n                // Determine dimensions for the image; we could add minWidth here\n                // to ensure that we get closer to the minimal width (the width\n                // computed might be a few pixels less than what we want).\n                int width = Math.Max(body2.scrollWidth, root2.scrollWidth);\n                int height = Math.Max(root2.scrollHeight, body2.scrollHeight);\n\n                //get the size of the document's body\n                Rectangle docRectangle = new Rectangle(0, 0, width, height);\n\n                web.Width = docRectangle.Width;\n                web.Height = docRectangle.Height;\n\n                //if the imgsize is null, the size of the image will \n                //be the same as the size of webbrowser object\n                //otherwise  set the image size to imgsize\n                Rectangle imgRectangle;\n                if (imgsize == null) imgRectangle = docRectangle;\n                else imgRectangle = new Rectangle() { Location = new Point(0, 0), Size = imgsize.Value };\n\n                //create a bitmap object \n                Bitmap bitmap = new Bitmap(imgRectangle.Width, imgRectangle.Height);\n                //get the viewobject of the WebBrowser\n                IViewObject ivo = web.Document.DomDocument as IViewObject;\n\n                using (Graphics g = Graphics.FromImage(bitmap))\n                {\n                    //get the handle to the device context and draw\n                    IntPtr hdc = g.GetHdc();\n                    ivo.Draw(1, -1, IntPtr.Zero, IntPtr.Zero,\n                             IntPtr.Zero, hdc, ref imgRectangle,\n                             ref docRectangle, IntPtr.Zero, 0);\n                    g.ReleaseHdc(hdc);\n                }\n                //invoke the HtmlImageCapture event\n                bitmap.Save(fileName);\n                bitmap.Dispose();\n            }\n            catch \n            {\n                //System.Diagnostics.Process.GetCurrentProcess().Kill();\n            }\n            if(HtmlImageCapture!=null) HtmlImageCapture(this, web.Url);\n        }\n    }\n}\n</code></pre>\n\n<p>and File2</p>\n\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Drawing;\nusing System.Runtime.InteropServices;\n\nnamespace MyIECapt\n{\n    [ComVisible(true), ComImport()]\n    [GuidAttribute(\"0000010d-0000-0000-C000-000000000046\")]\n    [InterfaceTypeAttribute(ComInterfaceType.InterfaceIsIUnknown)]\n    public interface IViewObject\n    {\n        [return: MarshalAs(UnmanagedType.I4)]\n        [PreserveSig]\n        int Draw(\n            [MarshalAs(UnmanagedType.U4)] UInt32 dwDrawAspect,\n            int lindex,\n            IntPtr pvAspect,\n            [In] IntPtr ptd,\n            IntPtr hdcTargetDev,\n            IntPtr hdcDraw,\n            [MarshalAs(UnmanagedType.Struct)] ref Rectangle lprcBounds,\n            [MarshalAs(UnmanagedType.Struct)] ref Rectangle lprcWBounds,\n            IntPtr pfnContinue,\n            [MarshalAs(UnmanagedType.U4)] UInt32 dwContinue);\n        [PreserveSig]\n        int GetColorSet([In, MarshalAs(UnmanagedType.U4)] int dwDrawAspect,\n           int lindex, IntPtr pvAspect, [In] IntPtr ptd,\n            IntPtr hicTargetDev, [Out] IntPtr ppColorSet);\n        [PreserveSig]\n        int Freeze([In, MarshalAs(UnmanagedType.U4)] int dwDrawAspect,\n                        int lindex, IntPtr pvAspect, [Out] IntPtr pdwFreeze);\n        [PreserveSig]\n        int Unfreeze([In, MarshalAs(UnmanagedType.U4)] int dwFreeze);\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p><code>Thread.Sleep</code> will simply suspend the thread your web browser is running on - how do you expect it to render anything when it is suspended? :)</p>\n\n<p>Instead, you need to allow the thread to process work. You can achieve this with a combination of <code>Thread.Sleep(0)</code> and <code>Application.DoEvents()</code>, with something like the following:</p>\n\n<pre><code>DateTime finish = DateTime.Now.AddSeconds(3);\nwhile (DateTime.Now &lt; finish) {\n    Application.DoEvents();\n    Thread.Sleep(0);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>@L.B , thank you for the help!</p>\n\n<p>Just an FYI for anyone wanting to run it in a class library,\nWebBrowser needs to Single Threaded Apartment, so do something like this:</p>\n\n<pre><code>  var t = new Thread(InitAndDo); //InitAndDo would have your code creating the webbrowser object etc...\n  t.SetApartmentState(ApartmentState.STA);\n  t.Start();\n</code></pre>\n\n<p>Then the Gotcha, after the navigate call is done, add this line of code so that you get the completed navigation event:</p>\n\n<pre><code>    web.Navigate(Url);\n    Application.Run();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to capture the following page using standard c# .net code.  I've searched around for people's various methods, most of which involve instantiating a browser object and using a draw to bitmap method.  However, none of these pick up the contents of the chart on this page:</p>\n\n<p><a href=\"http://www.highcharts.com/demo/combo-dual-axes\">http://www.highcharts.com/demo/combo-dual-axes</a></p>\n\n<p>Perhaps the javascript doesn't have time to run, but adding Thread.Sleep(x) hasn't assisted.</p>\n\n<p>This <a href=\"http://www.websitesscreenshot.com/\">commercial component</a> captures it correctly, but I'd rather avoid requiring an additional dependency in my project and paying $150 when the other solutions are sooo close!.</p>\n\n<p>Anyone find their solution renders this correctly?</p>\n",
            "last_activity_date": 1416317992,
            "question_id": 7803201,
            "score": 10,
            "tags": [
                "c#",
                "javascript",
                ".net",
                "highcharts"
            ],
            "title": "Capturing webpage as image in c#, ensuring javascript rendered elements are visible"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>A <code>variable</code> can hold one of two types of values: <code>primitive values and reference values</code>.</p>\n\n<ul>\n<li><code>Primitive values</code> are data that are stored on the <strong>stack</strong>.</li>\n<li><code>Primitive value</code> is stored directly in the location that the variable accesses.</li>\n<li><code>Reference values</code> are <strong>objects</strong> that are stored in the <strong>heap</strong>.</li>\n<li><code>Reference value</code> stored in the variable location is a pointer to a location in memory where the object is stored.</li>\n<li>Primitive types inlcude <code>Undefined</code>, <code>Null</code>, <code>Boolean</code>, <code>Number</code>, or <code>String</code>.</li>\n</ul>\n\n<p><strong>The basics</strong></p>\n\n<p>Objects are aggregations of properties. A property can reference an <code>object</code> or a <code>primitive</code>. <code>Primitives are values</code>, they have no properties.</p>\n\n<p><em><strong>Updated:</em></strong></p>\n\n<p>JavaScript has 5 primitive datatypes: <strong>string,</strong> *<em>number</em>*, <strong>boolean</strong>, <strong>null</strong>, <strong>undefined</strong>. With the exception of null and undefined, all primitives values have object equivalents which wrap around the primitive values, e.g. a <strong>String</strong> object wraps around a string primitive. All primitives are immutable.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>In javascript the <code>Primitive values</code> are <strong>data</strong> that are stored on the <code>stack</code>.</p>\n\n<p><code>Primitive value</code> is stored directly in the location that the variable accesses.</p>\n\n<p>And the <code>Reference values</code> are <strong>objects</strong> that are stored in the <code>heap</code>.</p>\n\n<p>Reference value stored in the variable location is a pointer to a location in memory where the object is stored.</p>\n\n<p>JavaScript supports five primitive data types: <code>number, string, Boolean, undefined, and null</code>. </p>\n\n<p>These types are referred to as primitive types because they are the basic building blocks from which more complex types can be built. </p>\n\n<p>Of the five, only <code>number, string, and Boolean</code> are real data types in the sense of actually storing data. </p>\n\n<p><code>Undefined and null</code> are types that arise under special circumstances. The <code>primitive type</code> has a fixed size in memory. \nFor example, a number occupies eight bytes of memory, and a boolean value can be represented with only one bit.</p>\n\n<p>And the Reference types can be of any length -- they do not have a fixed size.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Okay, imagine your variable to be a piece of paper - a sticky note.</p>\n\n<p><strong>Note 1:</strong> A <em>variable</em> is a <em>sticky note</em>.</p>\n\n<p>Now, a sticky note is very small. You can only write a little bit of information on it. If you want to write more information you need more sticky notes, but that's not a problem. Imagine you have an endless supply of sticky notes.</p>\n\n<p><strong>Note 2:</strong> You have an <em>endless</em> supply of sticky notes, which store <em>small amounts</em> of information.</p>\n\n<p>Great, what can you write on your sticky note? I can write:</p>\n\n<ol>\n<li>Yes or no (a <strong>boolean</strong>).</li>\n<li>My age (a <strong>number</strong>).</li>\n<li>My name (a <strong>string</strong>).</li>\n<li>Nothing at all (<strong>undefined</strong>).</li>\n<li>A doodle or anything else which means nothing to me at all (<strong>null</strong>).</li>\n</ol>\n\n<p>So we can write simple things (let's be condescending and call them <em>primitive</em> things) on our sticky notes.</p>\n\n<p><strong>Note 3:</strong> You can write <em>primitive</em> things on your sticky notes.</p>\n\n<p>So say I write <code>30</code> on a sticky note to remind myself to buy 30 slices of cheese for the little party I'm throwing at my place tonight (I have very few friends).</p>\n\n<p>When I go to put my sticky note on the fridge I see that my wife has put another sticky note on the fridge which also says <code>30</code> (to remind me that her birthday is on the 30th of this month).</p>\n\n<p><strong>Q:</strong> Do both the sticky notes convey the same information?</p>\n\n<p><strong>A:</strong> Yes, they both say <code>30</code>. We don't know if it's 30 slices of cheese or the 30th day of the month, and frankly we don't care. For a person who didn't know any better it's all the same.</p>\n\n<pre><code>var slicesOfCheese = 30;\nvar wifesBirthdate = 30;\n\nalert(slicesOfCheese === wifesBirthdate); // true\n</code></pre>\n\n<p><strong>Note 4:</strong> Two sticky notes which have the same thing written on them convey the same information, even though they are two different sticky notes.</p>\n\n<p>I'm really excited about tonight - hanging out with old friends, having a great time. Then some of my friends call me and say that they won't be able to make it to the party.</p>\n\n<p>So I go to my fridge and erase the <code>30</code> on my sticky note (not my wife's sticky note - that would make her very angry) and make it a <code>20</code>.</p>\n\n<p><strong>Note 5:</strong> You can erase what's written on a sticky note and write something else.</p>\n\n<p><strong>Q:</strong> That's all good and fine, but what if my wife wanted to make write a list of groceries for me to pick up while I was out to get some cheese. Would she need to write a sticky note for every item?</p>\n\n<p><strong>A:</strong> No, she would take a longer list of paper and write the list of groceries on that paper. Then she would write a sticky note telling me where to find the list of groceries.</p>\n\n<p>So what's happening here?</p>\n\n<ol>\n<li>A list of groceries is obviously not <em>simple</em> (erm... <em>primitive</em>) data.</li>\n<li>My wife wrote it on a longer piece of paper.</li>\n<li>She wrote where to find it in a sticky note.</li>\n</ol>\n\n<blockquote>\n  <p>Honey, the list of groceries is under your keyboard.</p>\n</blockquote>\n\n<p>To recap:</p>\n\n<ol>\n<li>The actual object (the list of groceries) is under my keyboard.</li>\n<li>The sticky note tells me where to find it (the address of the object).</li>\n</ol>\n\n<p><strong>Note 6:</strong> Reference values are references to objects (addresses where they will be found).</p>\n\n<p><strong>Q:</strong> How do we know when two sticky notes say the same thing? Say my wife made another grocery list in case I misplaced the first, and wrote another sticky note for it. Both the lists say the same thing, but do the sticky notes say the same thing?</p>\n\n<p><strong>A:</strong> No. The first sticky note tells us where to find the first list. The second one tells us where to find the second list. It doesn't matter whether the two lists say the same thing. They are two different lists.</p>\n\n<pre><code>var groceryList1 = [\"1 dozen apples\", \"2 loaves of bread\", \"3 bottles of milk\"];\nvar groceryList2 = [\"1 dozen apples\", \"2 loaves of bread\", \"3 bottles of milk\"];\n\nalert(groceryList1 === groceryList2); // false\n</code></pre>\n\n<p><strong>Note 7:</strong> Two sticky notes convey the same information only if they refer to the same object.</p>\n\n<p>This means if my wife made two sticky notes reminding me where the grocery list is, then the two sticky notes contain the same information. So this:</p>\n\n<blockquote>\n  <p>Honey, the list of groceries is under your keyboard.</p>\n</blockquote>\n\n<p>Contains the same information as:</p>\n\n<blockquote>\n  <p>Don't forget that the list of groceries is under your keyboard.</p>\n</blockquote>\n\n<p>In programming terms:</p>\n\n<pre><code>var groceryList1 = [\"1 dozen apples\", \"2 loaves of bread\", \"3 bottles of milk\"];\nvar groceryList2 = groceryList1;\n\nalert(groceryList1 === groceryList2); // true\n</code></pre>\n\n<p>So that's all that you need to know about <em>primitives</em> and <em>references</em> in JavaScript. No need to get into things like <em>heap</em> and dynamic memory allocation. That's important if you're programming in C/C++.</p>\n\n<p><strong>Edit 1:</strong> Oh, and the important thing is that when you pass variables around you're essentially passing <em>primitive</em> values <strong>by value</strong> and <em>reference</em> values <strong>by reference</strong>.</p>\n\n<p>This is just an elaborate way of saying that you're copying everything written on one sticky note to another (it doesn't matter whether you're copying a <em>primitive</em> value or a <em>reference</em>).</p>\n\n<p>When copying references, the object being referenced doesn't move (e.g. my wife's grocery list will always stay under my keyboard, but I can take the sticky note I copied anywhere I want - the original sticky note will still be on the fridge).</p>\n\n<p><strong>Edit 2:</strong> In response to the comment posted by @LacViet:</p>\n\n<p>Well for starters we're talking about JavaScript, and JavaScript doesn't have a <em>stack</em> or a <em>heap</em>. It's a dynamic language and all the variables in JavaScript are dynamic. To explain the difference I'll compare it to C.</p>\n\n<p>Consider the following C program:</p>\n\n<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int a = 10;\n    int b = 20;\n    int c = a + b;\n    printf(\"%d\", c);\n    return 0;\n}\n</code></pre>\n\n<p>When we compile this program we get an executable file. The executable file is divided into multiple segments (or sections). These segments include the stack segment, the code segment, the data segment, the extra segment, etc.</p>\n\n<ol>\n<li>The stack segment is used to store the state of the program when a function or interrupt handler is called. For example when function <code>f</code> calls function <code>g</code> then the state of function <code>f</code> (all the values in the registers at that time) are saved in a stack. When <code>g</code> returns control to <code>f</code> then these values are restored.</li>\n<li>The code segment holds the actual code to be executed by the processor. It contains a bunch of instructions the processor must execute like <code>add eax, ebx</code> (where <code>add</code> is the opcode, and <code>eax</code> &amp; <code>ebx</code> are arguments). This instruction adds the contents of registers <code>eax</code> and <code>ebx</code> and stores the result in the register <code>eax</code>.</li>\n<li>The data segment is used to reserve space for variables. For example in the above program we need to reserve space for the integers <code>a</code>, <code>b</code> and <code>c</code>. In addition we also need to reserve space for the string constant <code>\"%d\"</code>. Variables reserved thus have a fixed address in memory (after linking and loading).</li>\n<li>In addition to all of these you're also give a little bit of extra space by the Operating System. This is called the heap. Any extra memory you need is allocated from this space. Memory allocated in this way is called dynamic memory.</li>\n</ol>\n\n<p>Let's see a program with dynamic memory:</p>\n\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;malloc.h&gt;\n\nint main() {\n    int * a = malloc(3 * sizeof(int));\n\n    a[0] = 3;\n    a[1] = 5;\n    a[2] = 7;\n\n    printf(\"a: %d\\nb: %d\\nc: %d\\n\", a[0], a[1], a[2]);\n\n    return 0;\n}\n</code></pre>\n\n<p>Because we want to allocate memory dynamically we need to use pointers. This is because we want to use the same variable to point to an arbitrary memory location (not necessarily the same memory location every time).</p>\n\n<p>So we create an <code>int</code> pointer (<code>int *</code>) called <code>a</code>. The space for <code>a</code> is allocated from the data segment (i.e. it's not dynamic). Then we call <code>malloc</code> to allocate the contiguous space for 3 integers from the heap. The memory address of the first <code>int</code> is returned and stored in the pointer <code>a</code>.</p>\n\n<p><strong>Q:</strong> What did we learn?</p>\n\n<p><strong>A:</strong> A fixed amount of space is allocated for all variables. Each variable has a fixed address. We may also allocate extra memory from the heap and store the address of this extra memory in a pointer. This is called a dynamic memory scheme.</p>\n\n<p>Conceptually this is similar to what I explained about variables being sticky notes. All variables (including pointers are sticky notes). However pointers are special because they reference a memory location (which is like referencing an object in JavaScript).</p>\n\n<p>However this is where the similarities end. Here are the differences:</p>\n\n<ol>\n<li>In C everything is <strong>passed by value</strong> (including addresses in pointers). To <strong>pass a reference</strong> you need to use indirection via pointers. JavaScript only passes primitives by value. Passing references is handled transparently by the engine and is just like passing any other variable.</li>\n<li>In C you can create a pointer to a primitive data type like <code>int</code>. In JavaScript you cannot create a reference to a primitive value like <code>number</code>. All primitives are always stored by value.</li>\n<li>In C you may perform various operations on pointers. This is called pointer arithmetic. JavaScript doesn't have pointers. It only has references. Thus you can't perform any pointer arithmetic.</li>\n</ol>\n\n<p>Besides these three the biggest difference between C and JavaScript is that all variables in JavaScript actually pointers. Because JavaScript is a dynamic language the same variable may be used to store a <code>number</code> and a <code>string</code> at different points of time.</p>\n\n<p>JavaScript is an interpreted language, and the interpreter is usually written in C++. Thus all variables in JavaScript are mapped to objects in the host language (even primitives).</p>\n\n<p>When we declare a variable in JavaScript the interpreter creates a new generic variable for it. Then when we assign it a value (be it a primitive or a reference) the interpreter simply assigns a new object to it. Internally it knows which objects are primitive and which are actually objects.</p>\n\n<p>Conceptually it's like doing something like this:</p>\n\n<pre><code>JSGenericObject ten = new JSNumber(10); // var ten = 10;\n</code></pre>\n\n<p><strong>Q:</strong> What does this mean?</p>\n\n<p><strong>A:</strong> It means that all the values (primitives and objects) in JavaScript are allocated from the heap. Even the variables themselves are allocated from the heap. It's wrong to state that primitives are allocated from the stack and only objects are allocated from the heap. This is the biggest difference between C and JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 24
                }
            ],
            "body": "<p>I read a book called \"Professional Javascript for web developer\" and it says: \"Variable is assigned by Reference value or Primitive Value. Reference values are objects stored in memory\". And then it says nothing about how Primitive value is stored. So I guess it isn't stored in memory. Based on that, when I have a script like this:</p>\n\n<pre><code>var foo = 123;\n</code></pre>\n\n<p>How does Javascript remember the <code>foo</code> variable for later use?</p>\n",
            "last_activity_date": 1355170077,
            "question_id": 13266616,
            "score": 4,
            "tags": [
                "javascript"
            ],
            "title": "Primitive value vs Reference value"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>From <a href=\"https://developer.mozilla.org/en/DOM/window.onbeforeunload\">MDN</a>:</p>\n\n<blockquote>\n  <p>Note that in Firefox 4 and later the returned string is not displayed to the user. See Bug <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=588292\">588292</a>.</p>\n</blockquote>\n\n<p>This \"Bug\" is actually a (imho questionable) feature.. so there's no way to display the message in Firefox 4. If you think it should be changed, comment on that bug so the Firefox developers will know that people actually want to be able to show a custom string.</p>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>Try implementing it with a confirm message,</p>\n\n<pre><code>window.onbeforeunload=function(){\n   return confirm(\"Are you sure??\");\n}\n</code></pre>\n\n<p>of course when the user confirms then the FF4 message is shown,\nso you maybe better display this once per site on login/visit.\nA cookie should do the trick.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>My workaround is to show alert in onbeforeunload:</p>\n\n<pre><code>window.onbeforeunload=function() {\n    if ( /Firefox[\\/\\s](\\d+)/.test(navigator.userAgent) &amp;&amp; new Number(RegExp.$1) &gt;= 4) {\n        alert(\"Blah blah. You have to confirm you are leaving this page in the next dialogue.\");\n    }\n    return \"Blah blah.\"; \n} \n</code></pre>\n\n<p>(It shows two dialogues in Firefox, one dialogue elsewhere.)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Addition to the above Answer, I have improved the workaround. </p>\n\n<p>I have used jquery here. you can use default javascript funciton as well.</p>\n\n<pre><code>$(window).bind('beforeunload', function() {\n    if(/Firefox[\\/\\s](\\d+)/.test(navigator.userAgent) &amp;&amp; new Number(RegExp.$1) &gt;= 4) {\n        if(confirm(\"Are you Sure do you want to leave?\")) {\n            history.go();\n        } else {\n            window.setTimeout(function() {\n                window.stop();\n            }, 1);\n        }\n    } else {\n        return \"Are you Sure do you want to leave?\";\n    }\n});\n</code></pre>\n\n<p><strong>Tested and working in firefox 11 as well. :)</strong></p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<pre><code>$(window).bind('beforeunload', function() {\nif(/Firefox[\\/\\s](\\d+)/.test(navigator.userAgent) &amp;&amp; new Number(RegExp.$1) &gt;= 4) {\n    if(confirm(\"Are you Sure do you want to leave?\")) {\n        history.go();\n    } else {\n        window.setTimeout(function() {\n            window.stop();\n        }, 1);\n    }\n} else {\n    return \"Are you Sure do you want to leave?\";\n}});\n</code></pre>\n\n<p>Not working when close the Firefox or firefox tab.\nChecked in FF : 24.0</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is now way for now to override the beforeunload default native message for firefox. \nI've just tested Nasif solution and it's not working.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In Firefox <strong>3</strong>, I was able to write a custom confirmation popup with:</p>\n\n<pre><code>window.onbeforeunload = function() {\n   if (someCondition) {\n      return 'Your stream will be turned off';\n   }\n}\n</code></pre>\n\n<p>Now in Firefox <strong>4</strong>, it does not show my custom message. The default message that it provides is not even accurate to what my application does.</p>\n\n<p><img src=\"http://i.stack.imgur.com/4gaoU.png\" alt=\"firefox 4 confirm\"></p>\n\n<p>Can this default message be overridden?</p>\n",
            "last_activity_date": 1402326741,
            "question_id": 5398772,
            "score": 52,
            "tags": [
                "javascript",
                "firefox",
                "firefox4"
            ],
            "title": "Firefox 4 onBeforeUnload custom message"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Reading the properties of a stylesheet in JavaScript is not something browsers generally support, so yes, your best bet would be to create a hidden element with the appropriate class (or whatever else makes the CSS selector in question apply) and then read the property from that.</p>\n\n<p>Do note that even then you are reading the sum effect of all stylesheets loaded, so if more than one CSS rule applies to your element, you might not get the expected value.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>This seems to work:</p>\n\n<pre><code>&lt;style&gt;\np {color: blue}\n&lt;/style&gt;\n\n$(document).ready(function() {\n    var $p = $(\"&lt;p&gt;&lt;/p&gt;\").hide().appendTo(\"body\");\n    alert($p.css(\"color\"));\n    $p.remove();\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 41
                },
                {
                    "body": "<p>I have written a helper function that accepts an object with the css attributes to be retrieved from the given css class and fills in the the actual css attribute values.\nExample is included.</p>\n\n<pre><code>function getStyleSheetValues(colScheme) {\n    var tags='';\n    var obj= colScheme;\n\n    // enumerate css classes from object\n    for (var prop in obj) { \n        if (obj.hasOwnProperty(prop) &amp;&amp; typeof obj[prop]==\"object\") { \n            tags+= '&lt;span class=\"'+prop+'\"&gt;&lt;/span&gt;';\n        } \n    } \n\n    // generate an object that uses the given classes\n    tags= $('&lt;div&gt;'+tags+'&lt;/div&gt;').hide().appendTo(\"body\");\n\n    // read the class properties from the generated object\n    var idx= 0;\n    for (var prop in obj) { \n        if (obj.hasOwnProperty(prop) &amp;&amp; typeof obj[prop]==\"object\") { \n            var nobj= obj[prop];\n            for (var nprop in nobj) { \n                if (nobj.hasOwnProperty(nprop) &amp;&amp; typeof(nobj[nprop])==\"string\") { \n                    nobj[nprop]= tags.find(\"span:eq(\"+idx+\")\").css(nobj[nprop]);\n                }\n            }\n            idx++;\n        } \n    } \n    tags.remove();\n}\n\n// build an object with css class names where each class name contains one \n// or more properties with an arbitrary name and the css attribute name as its value.\n// This value will be replaced by the actual css value for the respective class.\nvar colorScheme= { chart_wall: {wallColor:'background-color',wallGrid:'color'}, chart_line1: { color:'color'} };\n\n$(document).ready(function() {\n    getStyleSheetValues(colorScheme);\n\n    // debug: write the property values to the console;     \n    if (window.console) {\n        var obj= colorScheme;\n        for (var prop in obj) { \n            if (obj.hasOwnProperty(prop) &amp;&amp; typeof obj[prop]==\"object\") { \n                var nobj= obj[prop];\n                for (var nprop in nobj) { \n                    if (nobj.hasOwnProperty(nprop)) { \n                        console.log(prop+'.'+nprop +':'+ nobj[nprop]);\n                    }\n                }\n            } \n        } \n        // example of how to read an individual css attribute value\n        console.log('css value for chart_wall.wallGrid: '+colorScheme.chart_wall.wallGrid);\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In response to Karim79, I just thought I'd toss out my function version of that answer.  I've had to do it several times so this is what I wrote:</p>\n\n<pre><code>function getClassStyles(parentElem, selector, style){\n    elemstr = '&lt;div '+ selector +'&gt;&lt;/div&gt;';\n    var $elem = $(elemstr).hide().appendTo(parentElem);\n        val = $elem.css(style);\n    $elem.remove();\n    return val;\n}\nval = getClassStyles('.container:first', 'class=\"title\"', 'margin-top');\nconsole.warn(val);\n</code></pre>\n\n<p>This example assumes you have and element with class=\"container\" and you're looking for the margin-top style of the title class in that element.  Of course change up to fit your needs. </p>\n\n<p>In the stylesheet:</p>\n\n<pre><code> .container .title{ margin-top:num; }\n</code></pre>\n\n<p>Let me know what you think - Would you modify it, and if so how?  Thanks!</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Normally you should be let the browser apply all the rules and then ask the browser for the results, but for the rare case where you really need to get the value out of the style sheet you can use this:  (<a href=\"http://jsfiddle.net/OldPro/sx68T/\">JSFiddle</a>)\n</p>\n\n<pre><code>function getStyleSheetPropertyValue(selectorText, propertyName) {\n    // search backwards because the last match is more likely the right one\n    for (var s= document.styleSheets.length - 1; s &gt;= 0; s--) {\n        var cssRules = document.styleSheets[s].cssRules ||\n                document.styleSheets[s].rules || []; // IE support\n        for (var c=0; c &lt; cssRules.length; c++) {\n            if (cssRules[c].selectorText === selectorText) \n                return cssRules[c].style[propertyName];\n        }\n    }\n    return null;\n}\n\nalert(getStyleSheetPropertyValue(\"p\", \"color\");\n</code></pre>\n\n<p>Note that this is pretty fragile, as you have to supply the full selector text that matches the rule you are looking up (it is not parsed) and it does not handle duplicate entries or any kind of precedence rules.  It's hard for me to think of a case when using this would be a good idea, but here it is just as an example.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Is it possible to get a value from the external CSS of a page if the element that the style refers to has not been generated yet? (the element is to be generated dynamically).</p>\n\n<p>The jQuery method I've seen is <code>$('element').css('property');</code>, but this relies on <code>element</code> being on the page. Is there a way of finding out what the property is set to within the CSS rather than the computed style of an element?</p>\n\n<p>Will I have to do something ugly like add a hidden copy of the element to my page so that I can access its style attributes?</p>\n",
            "last_activity_date": 1381963094,
            "question_id": 2707790,
            "score": 38,
            "tags": [
                "javascript",
                "jquery",
                "css"
            ],
            "title": "Get a CSS value from external style sheet with Javascript/jQuery"
        }
    ]
}
