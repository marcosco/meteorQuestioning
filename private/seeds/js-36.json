{
    "items": [
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p><a href=\"http://ejohn.org/\" rel=\"nofollow\">John Resig</a> has a mini javascript templating engine at <a href=\"http://ejohn.org/blog/javascript-micro-templating/\" rel=\"nofollow\">http://ejohn.org/blog/javascript-micro-templating/</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Tenjin  <a href=\"http://www.kuwata-lab.com/tenjin/\" rel=\"nofollow\">http://www.kuwata-lab.com/tenjin/</a> Might be what you're looking for. Haven't used it, but looks good. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I wrote <a href=\"http://google-caja.googlecode.com/svn/changes/mikesamuel/string-interpolation-29-Jan-2008/trunk/src/js/com/google/caja/interp/index.html\" rel=\"nofollow\">http://google-caja.googlecode.com/svn/changes/mikesamuel/string-interpolation-29-Jan-2008/trunk/src/js/com/google/caja/interp/index.html</a> which describes a templating system that bolts string interpolation onto javascript in a way that prevents XSS attacks by choosing the correct escaping scheme based on the preceding context.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is Client-Side Template functionality coming to the coming ASP.NET AJAX 4.0.</p>\n\n<p><a href=\"http://encosia.com/2008/07/23/sneak-peak-aspnet-ajax-4-client-side-templating/\" rel=\"nofollow\">http://encosia.com/2008/07/23/sneak-peak-aspnet-ajax-4-client-side-templating/</a></p>\n\n<p>Also, you can use the Microsoft AJAX Library (which is the JavaScript part of ASP.NET AJAX) by itself, without using ASP.NET.</p>\n\n<p><a href=\"http://www.asp.net/ajax/downloads/\" rel=\"nofollow\">http://www.asp.net/ajax/downloads/</a></p>\n",
                    "is_accepted": true,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://extjs.com\" rel=\"nofollow\">ExtJS</a> has an exceptional templating class called Ext.XTemplate: <a href=\"http://extjs.com/deploy/dev/docs/?class=Ext.XTemplate\" rel=\"nofollow\">http://extjs.com/deploy/dev/docs/?class=Ext.XTemplate</a>   </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've enjoyed <a href=\"http://encosia.com/2008/06/26/use-jquery-and-aspnet-ajax-to-build-a-client-side-repeater/\" rel=\"nofollow\">using jTemplates</a>:  </p>\n\n<p><a href=\"http://jtemplates.tpython.com/\" rel=\"nofollow\">http://jtemplates.tpython.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I came across this today, I haven't tried it though...</p>\n\n<p><a href=\"http://beebole.com/pure/\" rel=\"nofollow\">http://beebole.com/pure/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><a href=\"http://code.google.com/p/querytemplates/\" rel=\"nofollow\">QueryTemplates</a>\nDemo: <a href=\"http://sandbox.meta20.net/querytemplates-js/demo.html\" rel=\"nofollow\">http://sandbox.meta20.net/querytemplates-js/demo.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you are using <a href=\"http://projects.nikhilk.net/ScriptSharp\" rel=\"nofollow\">Script#</a> you may want to consider <a href=\"http://xtreemgeek.net/projects/sharptemplate/\" rel=\"nofollow\">SharpTemplate</a>, a strongly typed, super efficient HTML templating engine.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You might want to check out <a href=\"http://mustache.github.com/\" rel=\"nofollow\">Mustache</a> - it's really portable and simple template language with javascript support among other languages.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p><a href=\"http://code.google.com/closure/templates/\">Closure templates</a> are a fairly robust templating system from Google, and they work for both Javascript and Java. I've had good experiences using them.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here is one implemented in jQuery for the Smarty templating language. <a href=\"http://www.balupton.com/sandbox/jquery-smarty/demo/\" rel=\"nofollow\">http://www.balupton.com/sandbox/jquery-smarty/demo/</a></p>\n\n<p>One impressive feature is the support for dynamic updates. So if you update a template variable, it will update anywhere in the template where that variable is used. Pretty nifty.</p>\n\n<p>You can also hook into variable changes using a onchange event. So that is useful for say performing effects or AJAX when say the variable \"page\" changes ;-)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I use <a href=\"http://en.wikipedia.org/wiki/Google_Closure_Tools\" rel=\"nofollow\">Google Closure</a> templates. <a href=\"http://code.google.com/closure/templates/docs/helloworld_js.html\" rel=\"nofollow\">http://code.google.com/closure/templates/docs/helloworld_js.html</a></p>\n\n<p>Simple templating, <a href=\"http://en.wikipedia.org/wiki/Bi-directional_text#Unicode_support\" rel=\"nofollow\">BiDi</a> support, auto-escaping, optimized for speed. Also, the template parsing happens as a build step, so it doesn't slow down the client. Another benefit is that you can use the same templates from Java, in case you need to generate your HTML on the server for users with JavaScript disabled.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you use <a href=\"http://www.mozilla.org/rhino/\" rel=\"nofollow\">Rhino</a> (a Java implementation of JavaScript) you can run the JavaScript template language of your choice on the server too.</p>\n\n<p>You also know for sure that the server and browser template results are identical. (If the template is implemented in 2 languages, there might be some subtle differences between the implementations.)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Distal templates <a href=\"http://code.google.com/p/distal\" rel=\"nofollow\">http://code.google.com/p/distal</a>\nis a little like your XSLT demo but simpler:</p>\n\n<pre><code>&lt;p&gt;Name: &lt;span data-qtext=\"data.name\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;p&gt;Email: &lt;span data-qtext=\"data.email\"&gt;&lt;/span&gt;&lt;/p&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Templates are a pretty healthy business in established programming languages, but are there any good ones that can be processed in JavaScript?</p>\n\n<p>By \"template\" I mean a document that accepts a data object as input, inserts the data into some kind of serialized markup language, and outputs the markup. Well-known examples are <a href=\"http://en.wikipedia.org/wiki/JavaServer_Pages\" rel=\"nofollow\">JSP</a>, the original PHP, <a href=\"http://en.wikipedia.org/wiki/XSLT\" rel=\"nofollow\">XSLT</a>.</p>\n\n<p>By \"good\" I mean that it's declarative and easy for an HTML author to write, that it's robust, and that it's supported in other languages too. Something better than the options I know about. Some examples of \"not good\":</p>\n\n<hr>\n\n<p>String math:</p>\n\n<pre><code>element.innerHTML = \"&lt;p&gt;Name: \" + data.name\n    + \"&lt;/p&gt;&lt;p&gt;Email: \" + data.email + \"&lt;/p&gt;\";\n</code></pre>\n\n<p>clearly too unwieldy, HTML structure not apparent.</p>\n\n<hr>\n\n<p>XSLT:</p>\n\n<pre><code>&lt;p&gt;&lt;xsl:text&gt;Name: &lt;/xsl:text&gt;&lt;xsl:value-of select=\"//data/name\"&gt;&lt;/p&gt;\n&lt;p&gt;&lt;xsl:text&gt;Email: &lt;/xsl:text&gt;&lt;xsl:value-of select=\"//data/email\"&gt;&lt;/p&gt;\n</code></pre>\n\n<p>// Structurally this works well, but let's face it, XSLT confuses HTML developers.</p>\n\n<hr>\n\n<p>Trimpath:</p>\n\n<pre><code>&lt;p&gt;Name: ${data.name}&lt;/p&gt;&lt;p&gt;Email: ${data.email}&lt;/p&gt;\n</code></pre>\n\n<p>// This is nice, but the processor is only supported in JavaScript, and the language is sort of primitive (http://code.google.com/p/trimpath/wiki/JavaScriptTemplateSyntax).</p>\n\n<hr>\n\n<p>I'd love to see a subset of JSP or ASP or PHP ported to the browser, but I haven't found that.</p>\n\n<p>What are people using these days in JavaScript for their templating?</p>\n\n<h2>Addendum</h2>\n\n<p>After a few months there have been plenty of workable template languages posted here, but most of them aren't usable in any other language. Most of these templates couldn't be used outside a JavaScript engine.</p>\n\n<p>The exception is Microsoft's -- you can process the same ASP either in the browser or in any other ASP engine. That has its own set of portability problems, since you're bound to Microsoft systems. I've marked that as the answer, but am still interested in more portable solutions.</p>\n\n<p>Thanks for all the input so far!</p>\n",
            "last_activity_date": 1342759337,
            "question_id": 128949,
            "score": 18,
            "tags": [
                "javascript",
                "templates"
            ],
            "title": "What good template language is supported in JavaScript?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>There is no jQuery plugin that I know of to do such a thing.</p>\n\n<p>You cannot trigger a css psuedo class such as \":hover\". You can however loop through the anchor elements and add a css class \".hover\" on touchstart and touchend events as follows:</p>\n\n<pre><code>    var pageLinks = document.getElementsByTagName('a');\nfor(var i = 0; i &lt; pageLinks.length; i++){\n    pageLinks[i].addEventListener('touchstart', function(){this.className = \"hover\";}, false);\n    pageLinks[i].addEventListener('touchend', function(){this.className = \"\";}, false);\n}\n</code></pre>\n\n<p>To add a double finger tap gesture recognizer, you can use a plugin such as:\n<a href=\"http://plugins.jquery.com/project/multiswipe\" rel=\"nofollow\">http://plugins.jquery.com/project/multiswipe</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;title&gt;iPad Experiment&lt;/title&gt;\n    &lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        $(document).ready(function() {\n            if(navigator.platform == \"iPad\") {\n                $(\"a\").each(function() { // have to use an `each` here - either a jQuery `each` or a `for(...)` loop\n                    var onClick; // this will be a function\n                    var firstClick = function() {\n                        onClick = secondClick;\n                        return false;\n                    };\n                    var secondClick = function() {\n                        onClick = firstClick;\n                        return true;\n                    };\n                    onClick = firstClick;\n                    $(this).click(function() {\n                        return onClick();\n                    });\n                });\n            }\n        });\n    &lt;/script&gt;\n    &lt;style type=\"text/css\"&gt;\n        a:hover {\n            color:white;\n            background:#FF00FF;\n        }\n    &lt;/style&gt;\n&lt;body&gt;\n    &lt;a href=\"http://google.ca\"&gt;Google&lt;/a&gt;\n    &lt;a href=\"http://stackoverflow.com\"&gt;stackoverflow.com&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>... or check out the <a href=\"http://richard.jp.leguen.ca/stack-overflow/iOS-automatic-hover-fix.html\">demo on my web site</a>. Note that it's set up to only work its magic on the iPad - detecting all versions of the iOS is another question in my books ;)</p>\n\n<p>It works on the basis of the fact that...</p>\n\n<blockquote>\n  <p>After you click a link on the iphone or ipad, it leaves a simulated mouse hover that triggers the a:hover css styling on that link. If the link has a javascript handler that keeps you on same page, the hover state will not change until you click on another link.</p>\n</blockquote>\n\n<p>Citation: <a href=\"http://stackoverflow.com/questions/3120497/safari-iphone-ipad-mouse-hover-on-new-link-after-prior-one-is-replaced-with-jav\">Safari iphone/ipad \u201cmouse hover\u201d on new link after prior one is replaced with javascript</a></p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>I've used this:</p>\n\n<pre><code>$(document).ready(function() {\n    $('.hover').bind('touchstart touchend', function(e) {\n        e.preventDefault();\n        $(this).toggleClass('hover_effect');\n    });\n});\n</code></pre>\n\n<p>Before, to allow hover on certain elements. Obviously you'll need to tweak it for your own use, but it's a nice way to allow a touch and hold hover effect.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Here's an optimized version of the jQuery code provided by Richard JP Le Guen:</p>\n\n<pre><code>$(document).ready(function() {\n\n    $('a').each(function() {\n\n        var clicked = false;\n\n        $(this).bind('click', function() {\n\n            if(!clicked) return !(clicked = true);\n        });\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is a further optimized version that also handles <em>closing</em> the :hover</p>\n\n<p>You'll have to encapsulate your site with a</p>\n\n<pre><code>&lt;div id=\"container\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>for it to work. Just putting the closing event on the body did nothing</p>\n\n<pre><code>var bodyBound = false;\nvar container;\n\nif (navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPod/i) || navigator.userAgent.match(/iPad/i))\n{\n    container = $(\"#container\");\n\n     // Provoke iOS :hover event\n    $(\"a.someLink\").on(\"mouseover\", handleHoverClick);\n}\n\nfunction handleClose(event)\n{\n    container.off(\"click\", handleClose);\n\n    bodyBound = false;\n}\n\nfunction handleHoverClick(event)\n{\n    if (!bodyBound)\n    {\n        bodyBound = true;\n\n        // Somehow, just calling this function\u2014even if empty\u2014closes the :hover\n        container.on(\"click\", handleClose);\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I created this update apon Richard JP Le Guens solution. It works GREAT, but my version fixes the issue recognized by DADU.</p>\n\n<p>Also I fixed his workaround to detect iPads. My solution detects any other touch devices too (except IE10 on MS surface, I didn't remember the MS special treatment).</p>\n\n<p>My fix is not a 100% perfect solution, but it resets the hover fix at least when hovering another link.</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;TouchDevice Experiment&lt;/title&gt;\n    &lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        $(document).ready(function() {\n            if(document.createEvent(\"TouchEvent\")) { // using document.createEvent is more reliable than navigator (Modernizr uses this practice)\n                $(\"a\").each(function() { // have to use an `each` here - either a jQuery `each` or a `for(...)` loop\n                    var onClick; // this will be a function\n                    var firstClick = function() {\n                        $(\"a\").trigger(\"JWUnhover\"); // triggering hoverfix reset if any link gets touched\n\n                        onClick = secondClick;\n                        return false;\n                    };\n                    secondClick = function() {\n                        onClick = firstClick;\n                        return true;\n                    };\n                    onClick = firstClick;\n                    $(this).click(function() {\n                        return onClick();\n                    });\n                    $(this).bind('JWUnhover', function(){ onClick = firstClick; });\n                });\n            }\n        });\n    &lt;/script&gt;\n    &lt;style type=\"text/css\"&gt;\n        a:hover {\n            color:white;\n            background:#FF00FF;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;a href=\"http://google.ca\"&gt;Google&lt;/a&gt;\n    &lt;a href=\"http://stackoverflow.com\"&gt;stackoverflow.com&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This worked for me!</p>\n\n<pre><code>// Ipad Navigation Hover Support\n    $('#header .nav li a').bind('touchstart touchend', function(e) {\n        if( $(this).attr(\"href\") != \"\" ){\n            window.location = $(this).attr(\"href\");\n        }\n\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is a more simpler way to fix the issue with iOS and hover states, using CSS. For the link you have an issue with set the <code>cursor</code> property to <code>pointer</code> and the hover state will be ignored on iOS. For all links to function as expected, see below:</p>\n\n<pre><code>a\n{cursor: pointer;}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a jQuery plugin or JavaScript script that automagically loops through each CSS hover (found in an external stylesheet) and binds it with a double touchdown event?</p>\n\n<ul>\n<li>Touchdown 1 - CSS :hover is triggered</li>\n<li>Touchdown 2 - Click (link following or form action)</li>\n</ul>\n\n<p>If there isn't something like this yet, can it be made and how (guidelines)?</p>\n\n<p>EDIT:</p>\n\n<p>To be clear, I am not in search of a double tap. Touchdown 1 is a single tab just like Touchdown 2 is. There can be as less as 0 seconds between both or as much as 3 minutes, that's the user's choice.</p>\n\n<p>No touch:</p>\n\n<ul>\n<li>:hover -> element becomes visible</li>\n<li>click -> following link or other action</li>\n</ul>\n\n<p>Touch (iOS):</p>\n\n<ul>\n<li>touchdown 1 -> element becomes visible</li>\n<li>touchdown 2 -> following link or other action</li>\n</ul>\n",
            "last_activity_date": 1413278641,
            "question_id": 5507964,
            "score": 14,
            "tags": [
                "javascript",
                "iphone",
                "css",
                "hover"
            ],
            "title": "iOS automatic hover fix?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><strong>Revised answer, 5 September 2010</strong></p>\n\n<p>To account for trailing line breaks is tricky in IE, and I haven't seen any solution that does this. It is possible, however. The following is a new version of what I previously posted here.</p>\n\n<p>Note that the textarea must have focus for this function to work properly in IE. If in doubt, call the textarea's <code>focus()</code> method first.</p>\n\n<pre><code>function getInputSelection(el) {\n    var start = 0, end = 0, normalizedValue, range,\n        textInputRange, len, endRange;\n\n    if (typeof el.selectionStart == \"number\" &amp;&amp; typeof el.selectionEnd == \"number\") {\n        start = el.selectionStart;\n        end = el.selectionEnd;\n    } else {\n        range = document.selection.createRange();\n\n        if (range &amp;&amp; range.parentElement() == el) {\n            len = el.value.length;\n            normalizedValue = el.value.replace(/\\r\\n/g, \"\\n\");\n\n            // Create a working TextRange that lives only in the input\n            textInputRange = el.createTextRange();\n            textInputRange.moveToBookmark(range.getBookmark());\n\n            // Check if the start and end of the selection are at the very end\n            // of the input, since moveStart/moveEnd doesn't return what we want\n            // in those cases\n            endRange = el.createTextRange();\n            endRange.collapse(false);\n\n            if (textInputRange.compareEndPoints(\"StartToEnd\", endRange) &gt; -1) {\n                start = end = len;\n            } else {\n                start = -textInputRange.moveStart(\"character\", -len);\n                start += normalizedValue.slice(0, start).split(\"\\n\").length - 1;\n\n                if (textInputRange.compareEndPoints(\"EndToEnd\", endRange) &gt; -1) {\n                    end = len;\n                } else {\n                    end = -textInputRange.moveEnd(\"character\", -len);\n                    end += normalizedValue.slice(0, end).split(\"\\n\").length - 1;\n                }\n            }\n        }\n    }\n\n    return {\n        start: start,\n        end: end\n    };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>I needed to do something very similar and came up with this:</p>\n\n<pre><code>function getSelection(target) {\n    var s = {start: 0, end:0};\n    if (typeof target.selectionStart == \"number\"\n        &amp;&amp; typeof target.selectionEnd == \"number\") {\n        // Firefox (and others)\n        s.start = target.selectionStart;\n        s.end = target.selectionEnd;\n    } else if (document.selection) {\n        // IE\n        var bookmark = document.selection.createRange().getBookmark();\n        var sel = target.createTextRange();\n        var bfr = sel.duplicate();\n        sel.moveToBookmark(bookmark);\n        bfr.setEndPoint(\"EndToStart\", sel);\n        s.start = bfr.text.length;\n        s.end = s.start + sel.text.length;\n    }\n    return s;\n}\n</code></pre>\n\n<p>Notes:</p>\n\n<ul>\n<li>The <code>sel</code> range must be created by\n<code>target</code> rather than using the range\nreturned by <code>document.selection</code>,\notherwise <code>bfr.setEndPoint</code> will\ncomplain about an invalid argument.\nThis \"feature\" (discovered\nin IE8) does not appear to be\ndocumented in the <a href=\"http://msdn.microsoft.com/en-us/library/ms536745.aspx\">spec</a>.</li>\n<li><code>target</code> must have input focus for this function to work.</li>\n<li>Only tested with <code>&lt;textarea&gt;</code>, might work with <code>&lt;input&gt;</code> as well.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Use the <strong><em><a href=\"http://code.google.com/p/rangy\" rel=\"nofollow\"><code>Rangy</code></a></em></strong> api and all of your problems are <strong><em>gone</em></strong> <em><strong><code>gone</code></em></strong> <em>gone</em> <sup><sub><em>gone</em></sub></sup>...</p>\n\n<h2>Using it</h2>\n\n<p><a href=\"http://code.google.com/p/rangy/wiki/DocumentationHome\" rel=\"nofollow\">Read the documentation</a>, or just use the below.<br>\n<strong>Very</strong> simple,</p>\n\n<pre><code>var selection = rangy.getSelection(),  // Whole lot of information, supports\n                                       // multi-selections too.\n    start   = selection.anchorOffset,  // Start position\n    end     = selection.focusOffset;   // End position\n</code></pre>\n\n<p>Hope this api helps you out because it is <em>really</em> helpful in handling <strong>cross-browser</strong> <code>ranges</code>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>i want to get the cursor start and end position of a selected range  in a text-field or text-area. i tried lot of functions in various forums. but when the last character of the selection is a new line character JavaScript ignore it in IE6. any one having idea ?</p>\n",
            "last_activity_date": 1361071392,
            "question_id": 3053542,
            "score": 14,
            "tags": [
                "javascript",
                "cursor",
                "position",
                "internet-explorer-6"
            ],
            "title": "How to get the start and end points of selection in text area?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If you mean you want to show the content only when it is fully loaded, you may try following two options:</p>\n\n<p>1) wrap all content inside a <code>&lt;div id=\"wrapper\" style=\"display:none;\"&gt;&lt;/div&gt;</code> tag and on load complete event show it like this:</p>\n\n<pre><code>$(function(){\n    $(\"#wrapper\").show();\n});\n</code></pre>\n\n<p>2) If this still does not solves your purpose, you can load empty page and fetch content using ajax:</p>\n\n<pre><code>$(function(){\n    $.ajax({ \n        .......//AJAX params\n        .......\n        success:function(msg){\n                    $(\"#wrapper\").html(msg);//DO NEEDFUL WITH THE RETURNED VALUE\n                });\n});\n</code></pre>\n\n<p>EDIT: Using <code>queryLoader</code> script provided by <a href=\"http://www.gayadesign.com/\">gayadesign</a> I was able to achieve some success :D</p>\n\n<p>I had to made some changes to the <code>queryLoader.js</code> file from line 127 to 151. The changed script is as follows. Try it yourself.</p>\n\n<pre><code>$(QueryLoader.loadBar).css({\n        position: \"relative\",\n        top: \"50%\",\n        font-size:40px;\n    font-weight:bold;\n    line-height:50px;\n    height:50px;\n    width:100px;\n    });\n},\n\nanimateLoader: function() {\n    var perc = (100 / QueryLoader.doneStatus) * QueryLoader.doneNow;\n    if (perc &gt; 99) {\n        $(QueryLoader.loadBar).stop().animate({\n            width: perc + \"%\"\n        }, 5000, \"linear\", function() {\n                $(this).html(\"&lt;strong&gt;100%&lt;/strong&gt;\");//MY EDIT\n                QueryLoader.doneLoad();\n            });\n    } else {\n    $(QueryLoader.loadBar).stop().animate({\n        width: perc + \"%\"\n    }, 5000, \"linear\", function() {\n            //MY EDIT\n            $(this).html(\"&lt;strong&gt;\"+Math.round(perc)+\"%&lt;/strong&gt;\");\n        });\n    }\n},\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>You can't.</p>\n\n<p>As zzzzBov said, it isn't known how much content there will be, or what size that content is.</p>\n\n<p>You could 'fake' it, with something like this (for the example I am using images):</p>\n\n<pre><code>var percentCounter = 0;\n\n$.each(arrayOfImageUrls, function(index, value) {\n    $('&lt;img&gt;&lt;/img&gt;').attr('src', value)    //load image\n        .load(function() {\n            percentCounter = (index / arrayOfImageUrls.length) * 100;    //set the percentCounter after this image has loaded\n            $('#yourProgressContainer').text(percentCounter + '%');\n        });\n});\n</code></pre>\n\n<p>As I mentioned this isn't a TRUE percentage of the sites loading, but a rough estimate of the images that have loaded, assuming each image is roughly the same size.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>See this Project. It does what you want nicely.</p>\n\n<blockquote>\n  <p><a href=\"http://www.gayadesign.com/diy/queryloader-preload-your-website-in-style/\" rel=\"nofollow\">http://www.gayadesign.com/diy/queryloader-preload-your-website-in-style/</a></p>\n</blockquote>\n\n<p>The demo is hosted here</p>\n\n<blockquote>\n  <p><a href=\"http://www.gayadesign.com/scripts/queryLoader/\" rel=\"nofollow\">http://www.gayadesign.com/scripts/queryLoader/</a></p>\n</blockquote>\n\n<p>Download it here</p>\n\n<blockquote>\n  <p><a href=\"http://www.gayadesign.com/scripts/queryLoader/queryLoader.zip\" rel=\"nofollow\">http://www.gayadesign.com/scripts/queryLoader/queryLoader.zip</a></p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I recommend this plugin. Its amazing \ndownload from <a href=\"http://demo.inwebson.com/download/jpreloader.zip\" rel=\"nofollow\">http://demo.inwebson.com/download/jpreloader.zip</a>\nsee in action here <a href=\"http://www.inwebson.com/demo/jpreloader/\" rel=\"nofollow\">http://www.inwebson.com/demo/jpreloader/</a></p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"js/jpreLoader.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;// &lt;![CDATA[\n  $(document).ready(function() {\n  $('body').jpreLoader();\n    });\n// ]]&gt;&lt;/script&gt;\n</code></pre>\n\n<p>here are the links to new version jpreloader 2.1 \n<a href=\"http://demo.inwebson.com/download/jpreloader-v2.zip\" rel=\"nofollow\">http://demo.inwebson.com/download/jpreloader-v2.zip</a> \n<a href=\"http://www.inwebson.com/demo/jpreloader-v2/\" rel=\"nofollow\">http://www.inwebson.com/demo/jpreloader-v2/</a></p>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>I did a Google search and I cannot find a way to do a loading with percentage. Anyone know how I can find an example of that? </p>\n\n<p>I need a preload for a website from 0-100 without bar, before show the content, but I cannot find any example.</p>\n",
            "last_activity_date": 1415639052,
            "question_id": 4999703,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "loading",
                "progress"
            ],
            "title": "preload with percentage - javascript/jquery"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I found this useful <a href=\"http://www.codetoad.com/javascript%5Fget%5Fselected%5Ftext.asp\" rel=\"nofollow\">example</a>.</p>\n\n<p>It seems that some browsers support window.getSelection() while others support document.getSelection(). The example handle all these cases.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>select.anchorNode.parentNode will return the parent node, in your case the <p> tag and you can then get the text of that node. </p>\n\n<pre><code>var x = window.getSelection() \nvar z = x.anchorNode.parentNode\nalert(z.innerHTML)\n</code></pre>\n\n<p>Make sure you look at window.getSelection() as well since document.getSelection is depreciated in firefox.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is actually rather hard to do because you have to consider six cases:</p>\n\n<ol>\n<li>The selection is not within a paragraph (easy);</li>\n<li>The entire selection is within one paragraph (easy);</li>\n<li>The entire selection crosses one or more sibling paragraphs (harder);</li>\n<li>The selection starts or ends in an element not within a paragraph (harder);</li>\n<li>The paragraphs spanned are at different levels eg one is within a list item while two others are siblings of the list (even harder); and</li>\n<li>Some combination of the above.</li>\n</ol>\n\n<p>So firstly you have to decide how complete you want the solution to be. I'll only cover the simplest cases of (1) and (2).</p>\n\n<pre><code>function getSelectedParagraphText() {\n  if (window.getSelection) {\n      selection = window.getSelection();\n  } else if (document.selection) {\n      selection = document.selection.createRange();\n  }\n  var parent = selection.anchorNode;\n  while (parent != null &amp;&amp; parent.localName != \"P\") {\n    parent = parent.parentNode;\n  }\n  if (parent == null) {\n    return \"\";\n  } else {\n    return parent.innerText || parent.textContent;\n  }\n}\n</code></pre>\n\n<p><strong>Note:</strong> If you're after tags too replace textContent with innerHTML.</p>\n\n<p><strong>Edit:</strong> Better version put in, including better browser compatibility.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>A new project is born from jsmatita:\n<a href=\"http://takenotes.sourceforge.net/\" rel=\"nofollow\">http://takenotes.sourceforge.net/</a>\n(it's in italian language)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>After highlighting text, I would like to obtain the paragraph in which the selected text resides.</p>\n\n<pre><code>var select = window._content.document.getSelection();\n</code></pre>\n\n<p>Any pointers please?</p>\n",
            "last_activity_date": 1408896479,
            "question_id": 845390,
            "score": 12,
            "tags": [
                "javascript",
                "window",
                "document",
                "webpage",
                "paragraph"
            ],
            "title": "javascript to get paragraph of selected text in web page"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>1) change your javascript function to use a parameter</p>\n\n<pre><code>function editRecord(clientId)\n{ ....\n</code></pre>\n\n<p>2) output the call in your editRecord button... if you want to avoid dealing with the .net generated ids, just use a simple </p>\n\n<pre><code>&lt;input type=\"button\" onclick=\"editRecord(your-rows-client-id-goes-here)\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Based off of your comments to @DaveK's response, in javascript you can set the id of a hidden field to the clientId of the selected row when the user selects it.  Then have your editRecord function use the value set on the hidden form field.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I worked it out based on JasonS response. What I did was create a hidden field in the Grid View like this:</p>\n\n<pre><code>&lt;asp:TemplateField ShowHeader=\"False\"&gt;\n    &lt;ItemTemplate&gt;\n      &lt;asp:HiddenField ID=\"hdID\" runat=\"server\" Value='&lt;%# Eval(\"JobID\") %&gt;' /&gt;\n    &lt;/ItemTemplate&gt;\n&lt;/asp:TemplateField&gt;\n&lt;asp:TemplateField Visible=\"False\"&gt;\n    &lt;ItemTemplate&gt;\n      &lt;asp:LinkButton ID=\"lnkSelect\" runat=\"server\" CommandName=\"select\" Text=\"Select\" /&gt;\n    &lt;/ItemTemplate&gt;\n&lt;/asp:TemplateField&gt;\n</code></pre>\n\n<p>Then on the OnRowDataBind have code to set the selected row</p>\n\n<pre><code>protected virtual void Grid_RowDataBound(object sender, GridViewRowEventArgs e)\n{\n    if (e.Row.RowType == DataControlRowType.DataRow)\n    {\n        // Click to highlight row\n        Control lnkSelect = e.Row.FindControl(\"lnkSelect\");\n        if (lnkSelect != null)\n        {\n            StringBuilder click = new StringBuilder();\n            click.AppendLine(m_View.Page.ClientScript.GetPostBackClientHyperlink(lnkSelect, String.Empty));\n            click.AppendLine(String.Format(\"onGridViewRowSelected('{0}')\", e.Row.RowIndex));\n            e.Row.Attributes.Add(\"onclick\", click.ToString());\n        }\n    }            \n}\n</code></pre>\n\n<p>And then in the Javascript I have code like this</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\nvar selectedRowIndex = null;\n\nfunction onGridViewRowSelected(rowIndex)\n{        \n    selectedRowIndex = rowIndex;\n}\n\nfunction editItem()\n{   \n    if (selectedRowIndex == null) return;\n\n    var gridView = document.getElementById('&lt;%= GridView1.ClientID %&gt;');                \n    var cell = gridView.rows[parseInt(selectedRowIndex)+1].cells[0];        \n    var hidID = cell.childNodes[0];        \n    window.open('JobTypeEdit.aspx?id=' + hidID.value);\n}\n\n&lt;/script&gt;\n</code></pre>\n\n<p>Works a treat :-)</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>one could avoid javascript altogether, by setting anchor tags pre-populated with the query string for each row (although this will effect your table layout, it will need only one click rather than 2 from the user) </p>\n\n<p>insert in the gridview template:</p>\n\n<pre><code>&lt;asp:HyperLink runat=\"server\" ID=\"editLink\" Target=\"_blank\"\n   NavigateURL='&lt;%# Eval(\"JobID\",\"edit.aspx?id={0}\") %&gt;'&gt; \n     Edit..\n&lt;/asp:HyperLink&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have GridView which I can select a row. I then have a button above the grid called Edit which the user can click to popup a window and edit the selected row. So the button will have Javascript code behind it along the lines of</p>\n\n<pre><code>function editRecord()\n{\n  var gridView = document.getElementById(\"&lt;%= GridView.ClientID %&gt;\");\n  var id = // somehow get the id here ???\n  window.open(\"edit.aspx?id=\" + id);\n}\n</code></pre>\n\n<p>The question is how do I retrieve the selected records ID in javascript?</p>\n",
            "last_activity_date": 1326856350,
            "question_id": 228549,
            "score": 8,
            "tags": [
                "asp.net",
                "javascript",
                "gridview"
            ],
            "title": "Get GridView selected row DataKey in Javascript"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<ol>\n<li><p>Why do you want to initialize the length? Theoretically there is no need for this. It can even result in confusing behavior, because all tests that use the <code>length</code> to find out whether an array is empty or not will report that the array is not empty.<br>\n<a href=\"http://jsperf.com/big-array-initialize/2\">Some</a> <a href=\"http://jsperf.com/best-init-array/3\">tests</a> show that setting the initial length of large arrays <em>can</em> be more efficient if the array is filled afterwards, but the performance gain (if any) seem to differ from browser to browser.</p></li>\n<li><p>jsLint does not like <code>new Array()</code> because the constructer is ambiguous.</p>\n\n<pre><code>new Array(4);\n</code></pre>\n\n<p>creates an empty array <strong>of length</strong> 4. But</p>\n\n<pre><code>new Array('4');\n</code></pre>\n\n<p>creates an array <strong>containing the value</strong> <code>'4'</code>.</p></li>\n</ol>\n\n<p>Regarding your comment: In JS you don't need to initialize the length of the array. It grows dynamically. You can just store the length in some variable, e.g.</p>\n\n<pre><code>var data = [];\nvar length = 5; // user defined length\n\nfor(var i = 0; i &lt; length; i++) {\n    data.push(createSomeObject());\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 91
                },
                {
                    "body": "<p>The reason you shouldn't use <code>new Array</code> is demonstrated by this code:</p>\n\n<pre><code>var Array = function () {};\n\nvar x = new Array(4);\n\nalert(x.length);  // undefined...\n</code></pre>\n\n<p>Some other code <em>could</em> mess with the Array variable. I know it's a bit far fetched that anyone would write such code, but still...</p>\n\n<p>Also, as Felix King said, the interface is a little inconsistent, and could lead to some very difficult-to-track-down bugs.</p>\n\n<p>If you wanted an array with length = x, filled with undefined (as <code>new Array(x)</code> would do), you could do this:</p>\n\n<pre><code>var x = 4;\nvar myArray = [];\nmyArray[x - 1] = undefined;\n\nalert(myArray.length); // 4\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>The array constructor has an <a href=\"http://bonsaiden.github.io/JavaScript-Garden/#array.constructor\" rel=\"nofollow\">ambiguous syntax</a>, and JSLint just hurts your feelings after all.</p>\n\n<p>Also, your example code is broken, the second <code>var</code> statement will raise a <code>SyntaxError</code>. You're setting the property <code>length</code> of the array <code>test</code>, so there's no need for another <code>var</code>.</p>\n\n<p>As far as your options go, <code>array.length</code> is the only \"clean\" one. Question is, why do you need to set the size in the first place? Try to refactor your code to get rid of that dependency. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This will initialize the length property to 4:</p>\n\n<pre><code>var x = [,,,,];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>As explained above, using <code>new Array(size)</code> is somewhat dangerous. Instead of using it directly, place it inside an \"array creator function\". You can easily make sure that this function is bug-free and you avoid the danger of calling <code>new Array(size)</code> directly. Also, you can give it an optional default initial value. This <code>createArray</code> function does exactly that:</p>\n\n<pre><code>function createArray(size, defaultVal) {\n    var arr = new Array(size);\n    if (arguments.length == 2) {\n        // optional default value\n        for (int i = 0; i &lt; size; ++i) {\n            arr[i] = defaultVal;\n        }\n    }\n    return arr;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>(this was probably better as a comment, but got too long)</p>\n\n<p>So, after reading this I was curious if pre-allocating was actually faster, because in theory it should be. However, this blog gave some tips advising against it <a href=\"http://www.html5rocks.com/en/tutorials/speed/v8/\" rel=\"nofollow\">http://www.html5rocks.com/en/tutorials/speed/v8/</a>.</p>\n\n<p>So still being unsure, I put it to the test. And as it turns out it seems to in fact be slower.</p>\n\n<pre><code>var time = Date.now();\nvar temp = [];\nfor(var i=0;i&lt;100000;i++){\n    temp[i]=i;\n}\nconsole.log(Date.now()-time);\n\n\nvar time = Date.now();\nvar temp2 = new Array(100000);\nfor(var i=0;i&lt;100000;i++){\n    temp2[i] = i;\n}\nconsole.log(Date.now()-time); \n</code></pre>\n\n<p>This code yields the following after a few casual runs:</p>\n\n<pre><code>$ node main.js \n9\n16\n$ node main.js \n8\n14\n$ node main.js \n7\n20\n$ node main.js \n9\n14\n$ node main.js \n9\n19\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I'm surprised there hasn't been a functional solution suggested that allows you to set the length in one line. The following is based on UnderscoreJS:</p>\n\n<pre><code>var test = _.map(_.range(4), function () { return undefined; });\nconsole.log(test.length);\n</code></pre>\n\n<p>For reasons mentioned above, I'd avoid doing this unless I wanted to initialize the array to a specific value. It's interesting to note there are other libraries that implement range including Lo-dash and Lazy, which may have different performance characteristics.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>var arr=[];\narr[5]=0;\nalert(\"length=\"+arr.length); // gives 6\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<ul>\n<li><p><code>Array(5)</code> gives you an array with length 5 but no values, hence you can't interate over it.</p></li>\n<li><p><code>Array.apply(null, Array(5)).map(function () {})</code> gives you an array with length 5 and undefined as values, now it can be iterated over.</p></li>\n<li><p><code>Array.apply(null, Array(5)).map(function (x, i) { return i; })</code> gives you an array with length 5 and values 0,1,2,3,4.</p></li>\n<li><p><code>Array(5).forEach(alert)</code> does nothing, <code>Array.apply(null, Array(5)).map(function () {}).forEach(alert)</code> gives you 5 alerts</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Never use <code>new Array(4);</code> it creates an array with 4 undefined elements! </p>\n\n<p><a href=\"http://www.w3schools.com/js/js_arrays.asp\" rel=\"nofollow\">Source</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Most of the tutorials that I've read on arrays in JavaScript (including <a href=\"http://www.w3schools.com/js/js_obj_array.asp\">w3schools</a> and <a href=\"http://www.devguru.com/technologies/ecmascript/quickref/array.html\">devguru</a>) suggest that you can initialize an array with a certain length by passing an integer to the Array constructor using the <code>var test = new Array(4);</code> syntax.</p>\n\n<p>After using this syntax liberally in my js files, I ran one of the files through <a href=\"http://www.jslint.com/\">jsLint</a>, and it freaked out:</p>\n\n<blockquote>\n  <p>Error: Problem at line 1 character 22: Expected ')' and instead saw '4'.<br>\n  var test = new Array(4);<br>\n  Problem at line 1 character 23: Expected ';' and instead saw ')'.<br>\n  var test = new Array(4);<br>\n  Problem at line 1 character 23: Expected an identifier and instead saw ')'.</p>\n</blockquote>\n\n<p>After reading through <a href=\"http://www.jslint.com/lint.html\">jsLint's explanation of its behavior</a>, it looks like jsLint doesn't really like the <code>new Array()</code> syntax, and instead prefers <code>[]</code> when declaring arrays.</p>\n\n<p>So I have a couple questions.  First, why?  Am I running any risk by using the <code>new Array()</code> syntax instead?  Are there browser incompatibilities that I should be aware of?  And second, if I switch to the square bracket syntax, is there any way to declare an array and set its length all on one line, or do I have to do something like this:</p>\n\n<pre><code>var test = [];\ntest.length = 4;\n</code></pre>\n\n<p>Thanks in advance.</p>\n",
            "last_activity_date": 1425066232,
            "question_id": 4852017,
            "score": 87,
            "tags": [
                "javascript",
                "arrays",
                "jslint"
            ],
            "title": "Proper way to initialize an array&#39;s length in javascript?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>I like John Resig's implementation of a class structure: <a href=\"http://ejohn.org/blog/simple-javascript-inheritance/\" rel=\"nofollow\">http://ejohn.org/blog/simple-javascript-inheritance/</a></p>\n\n<p>This can be simply extended to something like:</p>\n\n<pre><code>Class.extend = function(prop /*, prop, prop, prop */) {\n    for( var i=1, l=arguments.length; i&lt;l; i++ ){\n        prop = $.extend( prop, arguments[i] );\n    }\n\n    // same code\n}\n</code></pre>\n\n<p>which will allow you to pass in multiple objects of which to inherit.  You're going to lose <code>instanceOf</code> capability here, but that's a given if you want multiple inheritance.</p>\n\n<hr>\n\n<p>my rather convoluted example of the above is available at <a href=\"https://github.com/cwolves/Fetch/blob/master/support/plugins/klass/klass.js\" rel=\"nofollow\">https://github.com/cwolves/Fetch/blob/master/support/plugins/klass/klass.js</a></p>\n\n<p>Note that there is some dead code in that file, but it allows multiple inheritance if you want to take a look.</p>\n\n<hr>\n\n<p>If you want chained inheritance (NOT multiple inheritance, but for most people it's the same thing), it can be accomplished with Class like:</p>\n\n<pre><code>var newClass = Class.extend( cls1 ).extend( cls2 ).extend( cls3 )\n</code></pre>\n\n<p>which will preserve the original prototype chain, but you'll also have a lot of pointless code running.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><a href=\"http://javascriptweblog.wordpress.com/2011/05/31/a-fresh-look-at-javascript-mixins/\">Mixins</a> can be used in javascript to achieve the same goal you probably want to solve via multiple inheritance at the moment.</p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>This one uses <code>Object.create</code> to make a real prototype chain:</p>\n\n<pre><code>function makeChain(chains) {\n  var c = Object.prototype;\n\n  while(chains.length) {\n    c = Object.create(c);\n    $.extend(c, chains.pop()); // some function that does mixin\n  }\n\n  return c;\n}\n</code></pre>\n\n<p>For example:</p>\n\n<pre><code>var obj = makeChain([{a:1}, {a: 2, b: 3}, {c: 4}]);\n</code></pre>\n\n<p>will return:</p>\n\n<pre><code>a: 1\n  a: 2\n  b: 3\n    c: 4\n      &lt;Object.prototype stuff&gt;\n</code></pre>\n\n<p>so that <code>obj.a === 1</code>, <code>obj.b === 3</code>, etc.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I\u2019m in no way an expert on javascript OOP, but if I understand you correctly you want something like (pseudo-code):</p>\n\n<pre><code>Earth.shape = 'round';\nAnimal.shape = 'random';\n\nCat inherit from (Earth, Animal);\n\nCat.shape = 'random' or 'round' depending on inheritance order;\n</code></pre>\n\n<p>In that case, I\u2019d try something like:</p>\n\n<pre><code>var Earth = function(){};\nEarth.prototype.shape = 'round';\n\nvar Animal = function(){};\nAnimal.prototype.shape = 'random';\nAnimal.prototype.head = true;\n\nvar Cat = function(){};\n\nMultiInherit(Cat, Earth, Animal);\n\nconsole.log(new Cat().shape); // yields \"round\", since I reversed the inheritance order\nconsole.log(new Cat().head); // true\n\nfunction MultiInherit() {\n    var c = [].shift.call(arguments),\n        len = arguments.length\n    while(len--) {\n        $.extend(c.prototype, new arguments[len]());\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Making true multiple inheritance can be quite complicated (better off using a library)... I've written a module/script called nmix (available on npm: <a href=\"https://npmjs.org/package/nmix\" rel=\"nofollow\">https://npmjs.org/package/nmix</a>). I also have a brief explanation about it on my blog: <a href=\"http://ncombo.wordpress.com/2012/12/29/javascript-multiple-inheritance/\" rel=\"nofollow\">http://ncombo.wordpress.com/2012/12/29/javascript-multiple-inheritance/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It's possible to implement multiple inheritance in JavaScript, although very few libraries does it.</p>\n\n<p>I could point <a href=\"http://ringjs.neoname.eu\" rel=\"nofollow\">Ring.js</a>, the only example I know.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Take a look of the package <a href=\"http://ieunit.sourceforge.net/TestFramework.html\" rel=\"nofollow\">IeUnit</a>. </p>\n\n<p>The concept assimilation implemented in IeUnit seems to offers what you are looking for in a quite dynamical way.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is an example of <strong>prototype chaining using constructor functions</strong>:</p>\n\n<pre><code>function Lifeform () {             // 1st Constructor function\n    this.isLifeform = true;\n}\n\nfunction Animal () {               // 2nd Constructor function\n    this.isAnimal = true;\n}\nAnimal.prototype = new Lifeform(); // Animal is a lifeform\n\nfunction Mammal () {               // 3rd Constructor function\n    this.isMammal = true;\n}\nMammal.prototype = new Animal();   // Mammal is an animal\n\nfunction Cat (species) {           // 4th Constructor function\n    this.isCat = true;\n    this.species = species\n}\nCat.prototype = new Mammal();     // Cat is a mammal\n</code></pre>\n\n<p>This concept uses Yehuda Katz's definition of a <strong>\"class\"</strong> for JavaScript:</p>\n\n<blockquote>\n  <p>...a JavaScript \"class\" is just a Function object that serves as a constructor plus an attached prototype object. (<a href=\"http://yehudakatz.com/2011/08/12/understanding-prototypes-in-javascript/\" rel=\"nofollow\">Source: Guru Katz</a>)</p>\n</blockquote>\n\n<p>Unlike the <a href=\"http://javascript.crockford.com/prototypal.html\" rel=\"nofollow\">Object.create approach</a>, when the classes are built in this way and we want to create instances of a \"class\", we don't need to know what each \"class\" is inheriting from. We just use <code>new</code>.</p>\n\n<pre><code>// Make an instance object of the Cat \"Class\"\nvar tiger = new Cat(\"tiger\");\n\nconsole.log(tiger.isCat, tiger.isMammal, tiger.isAnimal, tiger.isLifeform);\n// Outputs: true true true true\n</code></pre>\n\n<p>The order of precendence should make sense. First it looks in the instance object, then it's prototype, then the next prototype, etc.</p>\n\n<pre><code>// Let's say we have another instance, a special alien cat\nvar alienCat = new Cat(\"alien\");\n// We can define a property for the instance object and that will take \n// precendence over the value in the Mammal class (down the chain)\nalienCat.isMammal = false;\n// OR maybe all cats are mutated to be non-mammals\nCat.prototype.isMammal = false;\nconsole.log(alienCat);\n</code></pre>\n\n<p>We can also modify the prototypes which will effect all objects built on the class.</p>\n\n<pre><code>// All cats are mutated to be non-mammals\nCat.prototype.isMammal = false;\nconsole.log(tiger, alienCat);\n</code></pre>\n\n<p>I originally wrote some of this up with <a href=\"http://stackoverflow.com/a/25189960/1766230\">this answer</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A latecomer in the scene is <a href=\"https://github.com/mercmobily/simpleDeclare\" rel=\"nofollow\">SimpleDeclare</a>. However, when dealing with multiple inheritance, you will still end up with copies of the original constructors. That's a necessity in Javascript...</p>\n\n<p>Merc.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Multiple inheritance [edit, not proper inheritance of type, but of properties; mixins] in Javascript is pretty straightforward if you use constructed prototypes rather than generic-object ones. Here are two parent classes to inherit from:</p>\n\n<pre><code>function FoodPrototype() {\n    this.eat = function () {\n        console.log(\"Eating\", this.name);\n    };\n}\nfunction Food(name) {\n    this.name = name;\n}\nFood.prototype = new FoodPrototype();\n\n\nfunction PlantPrototype() {\n    this.grow = function () {\n        console.log(\"Growing\", this.name);\n    };\n}\nfunction Plant(name) {\n    this.name = name;\n}\nPlant.prototype = new PlantPrototype();\n</code></pre>\n\n<p>Note that I have used the same \"name\" member in each case, which could be a problem if the parents did not agree about how \"name\" should be handled. But they're compatible (redundant, really) in this case.</p>\n\n<p>Now we just need a class that inherits from both. Inheritance is done by <strong>call</strong>ing the constructor function (without using the new keyword) for the prototypes and the object constructors. First, the prototype has to inherit from the parent prototypes</p>\n\n<pre><code>function FoodPlantPrototype() {\n    FoodPrototype.call(this);\n    PlantPrototype.call(this);\n    // plus a function of its own\n    this.harvest = function () {\n        console.log(\"harvest at\", this.maturity);\n    };\n}\n</code></pre>\n\n<p>And the constructor has to inherit from the parent constructors:</p>\n\n<pre><code>function FoodPlant(name, maturity) {\n    Food.call(this, name);\n    Plant.call(this, name);\n    // plus a property of its own\n    this.maturity = maturity;\n}\n\nFoodPlant.prototype = new FoodPlantPrototype();\n</code></pre>\n\n<p>Now you can grow, eat, and harvest different instances:</p>\n\n<pre><code>var fp1 = new FoodPlant('Radish', 28);\nvar fp2 = new FoodPlant('Corn', 90);\n\nfp1.grow();\nfp2.grow();\nfp1.harvest();\nfp1.eat();\nfp2.harvest();\nfp2.eat();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I've come to a point where I need to have some sort of rudimentary multiple inheritance happening in JavaScript. I'm not here to discuss whether this is a good idea or not, so please keep those comments to yourself.</p>\n\n<p>I just want to know if anyone's attempted this with any (or not) success, and how they went about it.</p>\n\n<p>To boil it down, what I really need is to be able to have an object capable of inheriting a property from more than one prototype <em>chain</em> (i.e. each prototype could have its own proper chain), but in a given order of precedence (it will search the chains in order for the first definition).</p>\n\n<p>To demonstrate how this is theoretically possible, it could be achieved by attaching the secondary chain onto the end of the primary chain, but this would affect all instances of any of those previous prototypes and that's not what I want.</p>\n\n<p>Thoughts?</p>\n\n<p><strong>Edit</strong>\nAppreciate the responses folks, but while the consensus seems to be statically copying over the properties from both trees, which would work in most cases (and will probably be what I end up doing), I was most interested in a dynamic solution that would allow the separate prototype chains to be altered, and still have those changes \"picked up\" by the instance.</p>\n",
            "last_activity_date": 1421879768,
            "question_id": 9163341,
            "score": 50,
            "tags": [
                "javascript",
                "prototype",
                "multiple-inheritance"
            ],
            "title": "Multiple inheritance/prototypes in JavaScript"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>first get the current address</p>\n\n<pre><code>var url = window.location.href\n</code></pre>\n\n<p>Then just parse that string</p>\n\n<pre><code>var arr = url.split(\"/\");\n</code></pre>\n\n<p>your url is:</p>\n\n<pre><code>var result = arr[0] + \"//\" + arr[2]\n</code></pre>\n\n<p>Hope this helps</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<pre><code>var full = location.protocol+'//'+location.hostname+(location.port ? ':'+location.port: '');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 161
                },
                {
                    "body": "<p>For some reason all the answers are all overkills. This is all it takes:</p>\n\n<pre><code>window.location.origin\n</code></pre>\n\n<p>More details can be found here: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/window.location#Properties\">https://developer.mozilla.org/en-US/docs/Web/API/window.location#Properties</a></p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Indeed, <em>window.location.origin</em> works fine in browsers following standards, but guess what. IE isn't following standards.</p>\n\n<p>So because of that, this is what worked for me in IE, FireFox and Chrome:</p>\n\n<pre><code>var full = location.protocol+'//'+location.hostname+(location.port ? ':'+location.port: '');\n</code></pre>\n\n<p>but for possible future enhancements which could cause conflicts, I specified the \"window\" reference before the \"location\" object.</p>\n\n<pre><code>var full = window.location.protocol+'//'+window.location.hostname+(window.location.port ? ':'+window.location.port: '');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var http = location.protocol;\nvar slashes = http.concat(\"//\");\nvar host = slashes.concat(window.location.hostname);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As has already been mentioned there is the as yet not fully supported <code>window.location.origin</code> but instead of either using it or creating a new variable to use, I prefer to check for it and if it isn't set to set it.</p>\n\n<p>For example;</p>\n\n<pre><code>if (!window.location.origin) {\n  window.location.origin = window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');\n}\n</code></pre>\n\n<p>I actually wrote about this a few months back <a href=\"http://tosbourn.com/2013/08/javascript/a-fix-for-window-location-origin-in-internet-explorer/\">A fix for window.location.origin</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<blockquote>\n  <p>The protocol property sets or returns the protocol of the current URL, including the colon (:).</p>\n</blockquote>\n\n<p>This means that if you want to get only the HTTP/HTTPS part you can do something like this:</p>\n\n<pre><code>var protocol = window.location.protocol.replace(/:/g,'')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>None of these answers seem to completely address the question, which calls for an arbitrary url, not specifically the current page.</p>\n\n<p>If you want to break apart any given url, you can take advantage of DOM methods:</p>\n\n<pre><code>//  create an anchor element (note: no need to append this element to the document)\nvar link = document.createElement('a');\n\n//  set href to any path\nlink.setAttribute('href', 'http://example.com:12345/blog/foo/bar?startIndex=1&amp;pageSize=10');\n\n//  get any piece of the url you're interested in\nlink.hostname;  //  'example.com'\nlink.port;      //  12345\nlink.search;    //  '?startIndex=1&amp;pageSize=10'\nlink.pathname;  //  '/blog/foo/bar'\nlink.protocol;  //  'http:'\n\n//  cleanup for garbage collection\nlink = null;\n</code></pre>\n\n<p>Chances are you'll probably want to break apart the search url params as well, since '?startIndex=1&amp;pageSize=10' isn't too useable on its own.</p>\n\n<p>Here's two functions that will take care of this:</p>\n\n<pre><code>/**\n *  Break apart any path into parts\n *  'http://example.com:12345/blog/foo/bar?startIndex=1&amp;pageSize=10' -&gt;\n *    {\n *      \"host\": \"example.com\",\n *      \"port\": \"12345\",\n *      \"search\": {\n *        \"startIndex\": \"1\",\n *        \"pageSize\": \"10\"\n *      },\n *      \"path\": \"/blog/foo/bar\",\n *      \"protocol\": \"http:\"\n *    }\n */\nfunction getPathInfo(path) {\n    //  create a link in the DOM and set its href\n    var link = document.createElement('a');\n    link.setAttribute('href', path);\n\n    //  return an easy-to-use object that breaks apart the path\n    return {\n        host:     link.hostname,  //  'example.com'\n        port:     link.port,      //  12345\n        search:   processSearchParams(link.search),  //  {startIndex: 1, pageSize: 10}\n        path:     link.pathname,  //  '/blog/foo/bar'\n        protocol: link.protocol   //  'http:'\n    }\n}\n\n/**\n *  Convert search param string into an object or array\n *  '?startIndex=1&amp;pageSize=10' -&gt; {startIndex: 1, pageSize: 10}\n */\nfunction processSearchParams(search, preserveDuplicates) {\n    //  option to preserve duplicate keys (e.g. 'sort=name&amp;sort=age')\n    preserveDuplicates = preserveDuplicates || false;  //  disabled by default\n\n    var outputNoDupes = {};\n    var outputWithDupes = [];  //  optional output array to preserve duplicate keys\n\n    //  sanity check\n    if(!search) throw new Error('processSearchParams: expecting \"search\" input parameter');\n\n    //  remove ? separator (?foo=1&amp;bar=2 -&gt; 'foo=1&amp;bar=2')\n    search = search.split('?')[1];\n\n    //  split apart keys into an array ('foo=1&amp;bar=2' -&gt; ['foo=1', 'bar=2'])\n    search = search.split('&amp;');\n\n    //  separate keys from values (['foo=1', 'bar=2'] -&gt; [{foo:1}, {bar:2}])\n    //  also construct simplified outputObj\n    outputWithDupes = search.map(function(keyval){\n        var out = {};\n        keyval = keyval.split('=');\n        out[keyval[0]] = keyval[1];\n        outputNoDupes[keyval[0]] = keyval[1]; //  might as well do the no-dupe work too while we're in the loop\n        return out;\n    });\n\n    return (preserveDuplicates) ? outputWithDupes : outputNoDupes;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I need to extract the full protocol, domain and port from a given URL. For example:</p>\n\n<pre><code>https://localhost:8181/ContactUs-1.0/contact?lang=it&amp;report_type=consumer\n&gt;&gt;&gt;\nhttps://localhost:8181\n</code></pre>\n",
            "last_activity_date": 1415316225,
            "question_id": 6941533,
            "score": 48,
            "tags": [
                "javascript",
                "url",
                "dns",
                "protocols",
                "port"
            ],
            "title": "Get protocol,domain and port from URL"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>First, the order of the loop is undefined for a <code>for...in</code> loop, so there's no guarantee the properties will be iterated in the order you want.</p>\n\n<p>Second, <code>for...in</code> iterates over all enumerable properties of an object, including those inherited from its prototype. In the case of arrays, this could affect you if your code or any library included in your page has augmented the prototype of <code>Array</code>, which can be a genuinely useful thing to do:</p>\n\n<pre><code>Array.prototype.remove = function(val) {\n    // Irrelevant implementation details\n};\n\nvar a = [\"a\", \"b\", \"c\"];\n\nfor (var i in a) {\n    console.log(i);\n}\n\n// Logs 0, 1, 2, \"remove\" (though not necessarily in that order)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 55
                },
                {
                    "body": "<p>Add <code>list.foo = bar;</code> and try to use simple <code>for</code>.\nIf you don't use some libraries(like prototypeJs) and don't add any new properties to array object - you can use simple for-statement.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you use for/in like that, <code>item</code> enumerates through string values \"0\", \"1\", ..., so not the actual objects in the list. So the the 'item' in the first snippet is more like the <code>i</code> in the second snippet,not the <code>item</code>. Furthermore string values are enumerated where you'd expect numbers. And you get in trouble when you properties to the list, like <code>array.ID = \"a123\"</code>, as they will get enumerated also. </p>\n\n<p>But with these downsides, I still think the syntax is very useful, if your team is aware of what it does. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Speed?  </p>\n\n<p><code>for(..;..;..)</code> loop proved to be 36 times faster than <code>for .. in</code> <a href=\"http://blogs.oracle.com/greimer/resource/loop-test.html\" rel=\"nofollow\">when I tested it here.</a></p>\n\n<p><a href=\"http://stackoverflow.com/questions/157260/whats-the-best-way-to-loop-through-a-set-of-elements-in-javascript/157715#157715\">Link courtesy this SO answer</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>Given a simple zero based, numerically indexed array:</p>\n\n<pre><code>var list = ['Foo', 'Bar', 'Baz'];\n</code></pre>\n\n<p>Many times, I have noticed that when someone suggests looping through variables in an array like this:</p>\n\n<pre><code>for(var item in list) { ... }\n</code></pre>\n\n<p>...there's almost certainly someone suggesting that that's bad practice and suggests an alternative approach:</p>\n\n<pre><code>var count = list.length;\n\nfor(var i = 0; i &lt; count; i++) {\n    var item = list[i];\n    ...\n}\n</code></pre>\n\n<p>What's the reasoning for not using the simpler version above and to use the second example instead?</p>\n",
            "last_activity_date": 1343436209,
            "question_id": 2265167,
            "score": 48,
            "tags": [
                "javascript",
                "arrays",
                "loops"
            ],
            "title": "Why is &#39;for(var item in list)&#39; with arrays considered bad practice in JavaScript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The semi-colon is there in case you include this script just after some 'bad' script that doesn't properly close off its last line with a semi-colon.  In this case it's possible the two scripts would be combined and result in invalid code.  For example if you are merging multiple script into a single response.</p>\n\n<p>The () at the end is executing the function.  This is creating a closure. Private variables and methods can be declared within the scope of this function that cannot be accessed from outside the script.</p>\n",
                    "is_accepted": true,
                    "score": 66
                },
                {
                    "body": "<p>This construct :</p>\n\n<pre><code>(function(){ /* something in here */ })()\n</code></pre>\n\n<p>Is used to create a new scope in Javascript.</p>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Functions_and_function_scope\">More info on function scope here.</a></p>\n\n<p>Regarding the semicolon, I never seen it before. I think it's a security for when you concatenate several scripts, since semicolons are optional in some cases at the end of the file.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/1873983/what-does-the-leading-semicolon-in-javascript-libraries-do\">What does the leading semicolon in JavaScript libraries do?</a>  </p>\n</blockquote>\n\n\n\n<p>I have noticed a lot of jQuery plugins start with </p>\n\n<pre><code>;(function(){ /* something in here */ })();\n</code></pre>\n\n<p>I just wondered what the beginning semi-colon was for, as well as the empty parentheses at the end.</p>\n",
            "last_activity_date": 1314005954,
            "question_id": 7145514,
            "score": 46,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "What&#39;s the purpose of starting semi colon at beginning of JavaScript?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I don't know of any way that you could actually find out how much memory is being used by the browser, but you might be able to use a heuristic based on the number of elements on the page.  Uinsg jQuery, you could do <code>$('*').length</code> and it will give you the count of the number of DOM elements.  Honestly, though, it's probably easier just to do some usability testing and come up with a fixed number of tabs to support.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>If you want to just see for testing there is a way in Chrome via the developer page to track memory use, but not sure how to do it in javascript directly. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>What you might want to do is have the server keep track of their bandwidth for that session (how many bytes of data have been sent to them). When they go over the limit, instead of sending data via ajax, the server should send an error code which javascript will use to tell the user they've used too much data.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You can get the document.documentElement.innerHTML and check its length. It would give you the number of bytes used by your web page.</p>\n\n<p>This may not work in all browsers. So you can enclose all your body elements in a giant div and call innerhtml on that div. Something like <code>&lt;body&gt;&lt;div id=\"giantDiv\"&gt;...&lt;/div&gt;&lt;/body&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use the <a href=\"http://blog.chromium.org/2009/11/update-for-google-chromes-developer.html\" rel=\"nofollow\">Chrome Heap Snapshot tool</a></p>\n\n<p>There's also a Firebug tool called <a href=\"http://getfirebug.com/wiki/index.php/Firebug_Memory_Profiler#Memorybug\" rel=\"nofollow\">MemoryBug</a> but seems it's not very mature yet.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can use the <a href=\"https://developer.mozilla.org/en/Navigation_timing\">Navigation Timing API</a>.</p>\n\n<blockquote>\n  <p>Navigation Timing is a JavaScript API for accurately measuring performance on the web. The API provides a simple way to get accurate and detailed timing statistics\u2014natively\u2014for page navigation and load events.</p>\n</blockquote>\n\n<p><code>window.performance.memory</code> gives access to JavaScript memory usage data.</p>\n\n<p><br />\nRecommended reading</p>\n\n<ul>\n<li><a href=\"http://www.html5rocks.com/en/tutorials/webperformance/basics/\">Measuring page load speed with Navigation Timing</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>Perfect question timing with me starting on a similar project!</p>\n\n<p>There is no accurate way of monitoring JS memory usage in-app since it would require higher level privileges. As mentioned in comments, checking the number of all elements etc. would be a waste of time since it ignores bound events etc.</p>\n\n<p>This would be an architecture issue if memory leaks manifest or unused elements persist. Making sure that closed tabs' content is deleted completely without lingering event handlers etc. would be perfect; assuming that it's done you could just simulate heavy usage in a browser and extrapolate the results from memory monitoring (type <strong>about:memory</strong> in the address bar)</p>\n\n<p>Protip: if you open the same page in IE, FF, Safari... and Chrome; and than navigate to <strong>about:memory</strong> in Chrome, it will report memory usage across <em>all</em> other browsers. Neat!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p>Is there a way to find out how much memory is being used by a web page, or by my jquery application? I'm looking for a runtime solution (not just developer tools), so that my application can determine actions based on memory usage in a user's browser.</p>\n</blockquote>\n\n<p>The simple but correct answer is <strong>no</strong>. The browser doesn't expose such data to you. And I think you should drop the idea simply because the complexity and inaccuracy of a <em>\"handmade\"</em> solution may introduce more problem than it solves.</p>\n\n<blockquote>\n  <p>Counting DOM elements or document size might be a good estimation, but it could be quite inaccurate since it wouldn't include event binding, data(), plugins, and other in-memory data structures.</p>\n</blockquote>\n\n<p>If you really want to stick with your idea you should separate fixed and dynamic content. </p>\n\n<p>Fixed content is not dependant on user actions (memory used by script files, plugins, etc.)<br>\nEverything else is considered dynamic and should be your main focus when determining your limit.</p>\n\n<p>But there is no easy way to summarize them. You could implement a <em>tracking</em> system that gathers all these information. All operations should call the appropriate tracking methods. e.g:</p>\n\n<p>Wrap or overwrite <code>jQuery.data</code> method to inform the <em>tracking</em> system about your data allocations.</p>\n\n<p>Wrap html manipulations so that adding or removing content is also tracked (<code>innerHTML.length</code> is the best estimate).</p>\n\n<p>If you keep large in-memory objects they should also be monitored.</p>\n\n<p>As for event binding you should use <em>event delegation</em> and then it could also be considered a somewhat fixed factor.</p>\n\n<p>Another aspect that makes it hard to estimate your memory requirements correctly is that different browsers may allocate memory differently (for Javascript objects and DOM elements). </p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>I would like to suggest an entirely different solution from the other answers, namely to observe the speed of your application and once it drops below defined levels either show tips to the user to close tabs, or disable new tabs from opening. A simple class which provides this kind of information is for example <a href=\"https://github.com/mrdoob/stats.js\" rel=\"nofollow\">https://github.com/mrdoob/stats.js</a> .\n Aside of that, it might not be wise for such an intensive application to keep all tabs in memory in the first place. E.g. keeping only the user state (scroll) and loading all the data each time all but the last two tabs are opening might be a safer option.</p>\n\n<p>Lastly, webkit developers have been discussing adding memory information to javascript, but they have gotten in a number of arguments about what and what should not be exposed. Either way, it's not unlikely that this kind of information will be available in a few years (although that information isn't too useful right now).</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there a way to find out how much memory is being used by a web page, or by my jquery application? </p>\n\n<p>Here's my situation:</p>\n\n<p>I'm building a data heavy webapp using a jquery frontend and a restful backend that serves data in JSON.  The page is loaded once, and then everything happens via ajax.</p>\n\n<p>The UI provides users with a way to create multiple tabs within the UI, and each tab can contain lots and lots of data. I'm considering limiting the number of tabs they can create, but was thinking it would be nice to only limit them once memory usage has gone above a certain threshold.</p>\n\n<p>Based on the answers, I'd like to make some clarfications:</p>\n\n<ul>\n<li>I'm looking for a runtime solution (not just developer tools), so that my application can determine actions based on memory usage in a user's browser. </li>\n<li>Counting DOM elements or document size might be a good estimation, but it could be quite inaccurate since it wouldn't include event binding, data(), plugins, and other in-memory data structures.</li>\n</ul>\n",
            "last_activity_date": 1361698113,
            "question_id": 2530228,
            "score": 44,
            "tags": [
                "javascript",
                "jquery",
                "memory",
                "memory-management"
            ],
            "title": "jQuery or javascript to find memory usage of page"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Automatically floating two columns next to eachother is not currently possible only with CSS/HTML. Two ways to achieve this:</p>\n\n<h3>Method 1: When there's no continous text, just lots of non-related paragraphs:</h3>\n\n<p>Float all paragraphs to the left, give them half the width of the containing element and if possible set a fixed height.</p>\n\n<pre><code>&lt;div id=\"container\"&gt;\n  &lt;p&gt;This is paragraph 1. Lorem ipsum ... &lt;/p&gt;\n  &lt;p&gt;This is paragraph 2. Lorem ipsum ... &lt;/p&gt;\n  &lt;p&gt;This is paragraph 3. Lorem ipsum ... &lt;/p&gt;\n  &lt;p&gt;This is paragraph 4. Lorem ipsum ... &lt;/p&gt;\n  &lt;p&gt;This is paragraph 5. Lorem ipsum ... &lt;/p&gt;\n  &lt;p&gt;This is paragraph 6. Lorem ipsum ... &lt;/p&gt;\n&lt;/div&gt;\n\n#container { width: 600px; }\n#container p { float: left; width: 300px; /* possibly also height: 300px; */ }\n</code></pre>\n\n<p>You can also insert clearer-divs between paragraphs to avoid having to use a fixed height. If you want <em>two</em> columns, add a clearer-div between two-and-two paragraphs. This will align the top of the two next paragraphs, making it look more tidy. Example:</p>\n\n<pre><code>&lt;div id=\"container\"&gt;\n  &lt;p&gt;This is paragraph 1. Lorem ipsum ... &lt;/p&gt;\n  &lt;p&gt;This is paragraph 2. Lorem ipsum ... &lt;/p&gt;\n  &lt;div class=\"clear\"&gt;&lt;/div&gt;\n  &lt;p&gt;This is paragraph 3. Lorem ipsum ... &lt;/p&gt;\n  &lt;p&gt;This is paragraph 4. Lorem ipsum ... &lt;/p&gt;\n  &lt;div class=\"clear\"&gt;&lt;/div&gt;\n  &lt;p&gt;This is paragraph 5. Lorem ipsum ... &lt;/p&gt;\n  &lt;p&gt;This is paragraph 6. Lorem ipsum ... &lt;/p&gt;\n&lt;/div&gt;\n\n/* in addition to the above CSS */\n.clear { clear: both; height: 0; }\n</code></pre>\n\n<h3>Method 2: When the text is continous</h3>\n\n<p>More advanced, but it can be done.</p>\n\n<pre><code>&lt;div id=\"container\"&gt;\n  &lt;div class=\"contentColumn\"&gt;\n    &lt;p&gt;This is paragraph 1. Lorem ipsum ... &lt;/p&gt;\n    &lt;p&gt;This is paragraph 2. Lorem ipsum ... &lt;/p&gt;\n    &lt;p&gt;This is paragraph 3. Lorem ipsum ... &lt;/p&gt;\n  &lt;/div&gt;\n  &lt;div class=\"contentColumn\"&gt;\n    &lt;p&gt;This is paragraph 4. Lorem ipsum ... &lt;/p&gt;\n    &lt;p&gt;This is paragraph 5. Lorem ipsum ... &lt;/p&gt;\n    &lt;p&gt;This is paragraph 6. Lorem ipsum ... &lt;/p&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n\n.contentColumn { width: 300px; float: left; }\n#container { width: 600px; }\n</code></pre>\n\n<p>When it comes to the ease of use: none of these are really easy for a non-technical client. You might attempt to explain to him/her how to do this properly, and tell him/her why. Learning very basic HTML is not a bad idea anyways, if the client is going to be updating the web pages via a WYSIWYG-editor in the future.</p>\n\n<p>Or you could try to implement some Javascript-solution that counts the total number of paragraphs, splits them in two and creates columns. This will also degrade gracefully for those who have JavaScript disabled. A third option is to have all this splitting-into-columns-action happen serverside if this is an option.</p>\n\n<h3>(Method 3: CSS3 Multi-column Layout Module)</h3>\n\n<p>You might read about the <a href=\"http://www.w3.org/TR/css3-multicol/\">CSS3 way of doing it</a>, but it's not really practical for a production website. Not yet, at least. </p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p><strong>Using jQuery</strong></p>\n\n<p>Create a second column and move over the elements you need into it.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n  $(document).ready(function() {\n    var size = $(\"#data &gt; p\").size();\n $(\".Column1 &gt; p\").each(function(index){\n  if (index &gt;= size/2){\n   $(this).appendTo(\"#Column2\");\n  }\n });\n  });\n&lt;/script&gt;\n\n&lt;div id=\"data\" class=\"Column1\" style=\"float:left;width:300px;\"&gt;\n&lt;!--   data Start --&gt;\n&lt;p&gt;This is paragraph 1. Lorem ipsum ... &lt;/p&gt;\n&lt;p&gt;This is paragraph 2. Lorem ipsum ... &lt;/p&gt;\n&lt;p&gt;This is paragraph 3. Lorem ipsum ... &lt;/p&gt;\n&lt;p&gt;This is paragraph 4. Lorem ipsum ... &lt;/p&gt;\n&lt;p&gt;This is paragraph 5. Lorem ipsum ... &lt;/p&gt;\n&lt;p&gt;This is paragraph 6. Lorem ipsum ... &lt;/p&gt;\n&lt;!--   data Emd--&gt;\n&lt;/div&gt;\n&lt;div id=\"Column2\" style=\"float:left;width:300px;\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p><em>Update:</em></p>\n\n<p><strong>Or</strong> Since the requirement now is to have them equally sized.  I would suggest using the prebuilt jQuery plugins: <a href=\"http://welcome.totheinter.net/columnizer-jquery-plugin/\">Columnizer jQuery Plugin</a></p>\n\n<p><a href=\"http://jsfiddle.net/dPUmZ/1/\">http://jsfiddle.net/dPUmZ/1/</a></p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>Use <code>CSS3</code></p>\n\n<pre class=\"lang-css prettyprint-override\"><code>.container {\n           column-count: 2;\n      -moz-column-count: 2;\n   -webkit-column-count: 2;\n\n           column-gap: 20px;\n      -moz-column-gap: 20px;\n   -webkit-column-gap: 20px;\n}\n</code></pre>\n\n<hr>\n\n<p>Browser Support</p>\n\n<ul>\n<li>Chrome 4.0+ (<em><code>-webkit-</code></em>)</li>\n<li>IE 10.0+</li>\n<li>Firefox 2.0+ (<em><code>-moz-</code></em>)</li>\n<li>Safari 3.1+ (<em><code>-webkit-</code></em>)</li>\n<li>Opera 15.0+ (<em><code>-webkit-</code></em>)</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 52
                },
                {
                    "body": "<p><strong>This solution will split into two columns and divide the content half in one line half in the other.</strong>\nThis comes in handy if you are working with data that gets loaded into the first column, and want it to flow evenly every time. :). You can play with the amount that gets put into the first col. This will work with lists as well.</p>\n\n<p>Enjoy.</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;great script for dividing things into cols&lt;/title&gt;\n\n\n\n    &lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.js\"&gt;&lt;/script&gt;\n    &lt;script&gt;\n$(document).ready(function(){\n\nvar count=$('.firstcol span').length;\nvar selectedIndex =$('.firstcol span').eq(count/2-1);\nvar selectIndexafter=selectedIndex.nextAll();\n\n\nif (count&gt;1)\n{\nselectIndexafter.appendTo('.secondcol');\n}\n\n });\n\n&lt;/script&gt;\n&lt;style&gt;\nbody{font-family:arial;}\n.firstcol{float:left;padding-left:100px;}\n.secondcol{float:left;color:blue;position:relative;top:-20;px;padding-left:100px;}\n.secondcol h3 {font-size:18px;font-weight:normal;color:grey}\nspan{}\n&lt;/style&gt;\n\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;div class=\"firstcol\"&gt;\n\n&lt;span&gt;1&lt;/span&gt;&lt;br /&gt;\n&lt;span&gt;2&lt;/span&gt;&lt;br /&gt;\n&lt;span&gt;3&lt;/span&gt;&lt;br /&gt;\n&lt;span&gt;4&lt;/span&gt;&lt;br /&gt;\n&lt;span&gt;5&lt;/span&gt;&lt;br /&gt;\n&lt;span&gt;6&lt;/span&gt;&lt;br /&gt;\n&lt;span&gt;7&lt;/span&gt;&lt;br /&gt;\n&lt;span&gt;8&lt;/span&gt;&lt;br /&gt;\n&lt;span&gt;9&lt;/span&gt;&lt;br /&gt;\n&lt;span&gt;10&lt;/span&gt;&lt;br /&gt;\n&lt;!--&lt;span&gt;11&lt;/span&gt;&lt;br /&gt;\n&lt;span&gt;12&lt;/span&gt;&lt;br /&gt;\n&lt;span&gt;13&lt;/span&gt;&lt;br /&gt;\n&lt;span&gt;14&lt;/span&gt;&lt;br /&gt;\n&lt;span&gt;15&lt;/span&gt;&lt;br /&gt;\n&lt;span&gt;16&lt;/span&gt;&lt;br /&gt;\n&lt;span&gt;17&lt;/span&gt;&lt;br /&gt;\n&lt;span&gt;18&lt;/span&gt;&lt;br /&gt;\n&lt;span&gt;19&lt;/span&gt;&lt;br /&gt;\n&lt;span&gt;20&lt;/span&gt;&lt;br /&gt;\n&lt;span&gt;21&lt;/span&gt;&lt;br /&gt;\n&lt;span&gt;22&lt;/span&gt;&lt;br /&gt;\n&lt;span&gt;23&lt;/span&gt;&lt;br /&gt;\n&lt;span&gt;24&lt;/span&gt;&lt;br /&gt;\n&lt;span&gt;25&lt;/span&gt;&lt;br /&gt;--&gt;\n&lt;/div&gt;\n\n\n&lt;div class=\"secondcol\"&gt;\n\n\n&lt;/div&gt;\n\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Not an expert here, but this is what I did and it worked</p>\n\n<pre><code>&lt;html&gt;\n&lt;style&gt;\n/*Style your div container, must specify height*/\n.content {width:1000px; height:210px; margin:20px auto; font-size:16px;}\n/*Style the p tag inside your div container with half the with of your container, and float left*/\n.content p {width:490px; margin-right:10px; float:left;}\n&lt;/style&gt;\n\n&lt;body&gt;\n&lt;!--Put your text inside a div with a class--&gt;\n&lt;div class=\"content\"&gt;\n            &lt;h1&gt;Title&lt;/h1&gt;\n            &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus gravida laoreet lectus. Pellentesque ultrices consequat placerat. Etiam luctus euismod tempus. In sed eros dignissim tortor faucibus dapibus ut non neque. Ut ante odio, luctus eu pharetra vitae, consequat sit amet nunc. Aenean dolor felis, fringilla sagittis hendrerit vel, egestas eget eros. Mauris suscipit bibendum massa, nec mattis lorem dignissim sit amet. &lt;/p&gt;\n            &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer eget dolor neque. Phasellus tellus odio, egestas ut blandit sed, egestas sit amet velit. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae;&lt;/p&gt;\n&lt;/div&gt;     \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Once the text inside the <code>&lt;p&gt;</code> tags has reached the height of the container div, the other text will flow to the right of the container.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here is an example of a simple Two-column class:</p>\n\n<pre><code>.two-col {\n       -moz-column-count: 2;\n       -moz-column-gap: 20px;\n       -webkit-column-count: 2;\n       -webkit-column-gap: 20px;\n}\n</code></pre>\n\n<p>Of which you would apply to a block of text like so:</p>\n\n<pre><code>&lt;p class=\"two-col\"&gt;Text&lt;/p&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Maybe a slightly tighter version?  My use case is outputting college majors given a json array of majors (data).</p>\n\n<pre><code>var count_data      = data.length;\n\n$.each( data, function( index ){\n    var column = ( index &lt; count_data/2 ) ? 1 : 2;\n    $(\"#column\"+column).append(this.name+'&lt;br/&gt;');\n});\n\n&lt;div id=\"majors_view\" class=\"span12 pull-left\"&gt;\n\n  &lt;div class=\"row-fluid\"&gt;\n    &lt;div class=\"span5\" id=\"column1\"&gt; &lt;/div&gt;\n    &lt;div class=\"span5 offset1\" id=\"column2\"&gt; &lt;/div&gt;\n  &lt;/div&gt;\n\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Below I have created both a static and dynamic approach at columnizing paragraphs. The code is pretty much self-documented. </p>\n\n<h1>Foreward</h1>\n\n<p>Below, you will find the following methods for creating columns:</p>\n\n<ol>\n<li>Static (2-columns)</li>\n<li>Dynamic w/ JavaScript + CSS (n-columns)</li>\n<li>Dynamic w/ JavaScript + CSS3 (n-columns)</li>\n</ol>\n\n<h1>Static (2-columns)</h1>\n\n<p>This is a simple 2 column layout. Based on <a href=\"http://stackoverflow.com/users/14753/glennular\">Glennular</a>'s <a href=\"http://stackoverflow.com/a/3039054/1762224\">1st answer</a>.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>$(document).ready(function () {\r\n    var columns = 2;\r\n    var size = $(\"#data &gt; p\").size();\r\n    var half = size / columns;\r\n    $(\".col50 &gt; p\").each(function (index) {\r\n        if (index &gt;= half) {\r\n            $(this).appendTo(\".col50:eq(1)\");\r\n        }\r\n    });\r\n});</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>.col50 {\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    width: 48.2%;\r\n    margin: 0;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;div id=\"data\" class=\"col50\"&gt;\r\n    &lt;!-- data Start --&gt;\r\n    &lt;p&gt;This is paragraph 1. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 2. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 3. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 4. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 5. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 6. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 7. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 8. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 9. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 10. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 11. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;!-- data End--&gt;\r\n&lt;/div&gt;\r\n&lt;div class=\"col50\"&gt;&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<h1>Dynamic w/ JavaScript + CSS (n-columns)</h1>\n\n<p>With this approach, I essentially detect if the block needs to be converted to columns. The format is <code>col-{n}</code>. <code>n</code> is the number of columns you want to create.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>$(document).ready(function () {\r\n    splitByColumns('col-', 4);\r\n});\r\n\r\nfunction splitByColumns(prefix, gap) {\r\n    $('[class^=\"' + prefix + '\"]').each(function(index, el) {\r\n        var me = $(this);\r\n        var count = me.attr(\"class\").split(' ').filter(function(className) {\r\n            return className.indexOf(prefix) === 0;\r\n        }).reduce(function(result, value) {\r\n            return Math.max(parseInt(value.replace(prefix, '')), result);\r\n        }, 0);\r\n        var paragraphs = me.find('p').get();\r\n        me.empty(); // We now have a copy of the children, we can clear the element.\r\n        var size = paragraphs.length;\r\n        var percent = 1 / count;\r\n        var width = (percent * 100 - (gap / count || percent)).toFixed(2) + '%';\r\n        var limit = Math.round(size / count);\r\n        var incr = 0;\r\n        var gutter = gap / 2 + 'px';\r\n        for (var col = 0; col &lt; count; col++) {\r\n            var colDiv = $('&lt;div&gt;').addClass('col').css({ width: width });\r\n            var css = {};\r\n            if (col &gt; -1 &amp;&amp; col &lt; count -1) css['margin-right'] = gutter;\r\n            if (col &gt; 0 &amp;&amp; col &lt; count)     css['margin-left'] = gutter;\r\n            colDiv.css(css);\r\n            for (var line = 0; line &lt; limit &amp;&amp; incr &lt; size; line++) {\r\n                colDiv.append(paragraphs[incr++]);\r\n            }\r\n            me.append(colDiv);\r\n        }\r\n    });\r\n}</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>.col {\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 0;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;div id=\"data\" class=\"col-6\"&gt;\r\n    &lt;!-- data Start --&gt;\r\n    &lt;p&gt;This is paragraph 1. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 2. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 3. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 4. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 5. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 6. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 7. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 8. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 9. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 10. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 11. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;!-- data End--&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<h1>Dynamic w/ JavaScript + CSS3 (n-columns)</h1>\n\n<p>This has been derived from on <a href=\"http://stackoverflow.com/users/14753/glennular\">Glennular</a>'s <a href=\"http://stackoverflow.com/a/3040876/1762224\">2nd answer</a>. It uses the <code>column-count</code> and <code>column-gap</code> CSS3 rules.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>$(document).ready(function () {\r\n    splitByColumns('col-', '4px');\r\n});\r\n\r\nfunction splitByColumns(prefix, gap) {\r\n    var vendors = [ '', '-moz', '-webkit-' ];\r\n    var getColumnCount = function(el) {\r\n        return el.attr(\"class\").split(' ').filter(function(className) {\r\n            return className.indexOf(prefix) === 0;\r\n        }).reduce(function(result, value) {\r\n            return Math.max(parseInt(value.replace(prefix, '')), result);\r\n        }, 0);\r\n    }\r\n    $('[class^=\"' + prefix + '\"]').each(function(index, el) {\r\n        var me = $(this);\r\n        var count = getColumnCount(me);\r\n        var css = {};\r\n        $.each(vendors, function(idx, vendor) {\r\n            css[vendor + 'column-count'] = count;\r\n            css[vendor + 'column-gap'] = gap;\r\n        });\r\n        me.css(css);\r\n    });\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;div id=\"data\" class=\"col-3\"&gt;\r\n    &lt;!-- data Start --&gt;\r\n    &lt;p&gt;This is paragraph 1. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 2. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 3. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 4. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 5. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 6. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 7. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 8. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 9. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 10. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;p&gt;This is paragraph 11. Lorem ipsum ...&lt;/p&gt;\r\n    &lt;!-- data End--&gt;\r\n&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have the code similar to the following:</p>\n\n<pre><code>&lt;p&gt;This is paragraph 1. Lorem ipsum ... &lt;/p&gt;\n&lt;p&gt;This is paragraph 2. Lorem ipsum ... &lt;/p&gt;\n&lt;p&gt;This is paragraph 3. Lorem ipsum ... &lt;/p&gt;\n&lt;p&gt;This is paragraph 4. Lorem ipsum ... &lt;/p&gt;\n&lt;p&gt;This is paragraph 5. Lorem ipsum ... &lt;/p&gt;\n&lt;p&gt;This is paragraph 6. Lorem ipsum ... &lt;/p&gt;\n</code></pre>\n\n<p>I'd like to, without markup if possible, cause this text to flow into two columns (1-3 on the left, 4-6 on the right). The reason for my hesitation to add a column using a <code>&lt;div&gt;</code> is that this text is entered by the client via a WYSIWYG editor, so any elements I inject are likely to be killed later or inexplicably.</p>\n",
            "last_activity_date": 1425159720,
            "question_id": 3009670,
            "score": 38,
            "tags": [
                "javascript",
                "html",
                "css",
                "css3",
                "two-columns"
            ],
            "title": "flow 2 columns of text automatically with CSS"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>^(?!filename).+\\.js</code> works for me</p>\n\n<p>tested against:</p>\n\n<ul>\n<li>test.js match</li>\n<li>blabla.js match</li>\n<li>filename.js no match</li>\n</ul>\n\n<p>A proper explanation for this regex can be found at <a href=\"http://stackoverflow.com/questions/406230/regular-expression-to-match-string-not-containing-a-word\">Regular expression to match string not containing a word?</a></p>\n\n<p>Look ahead is available since <a href=\"http://en.wikipedia.org/wiki/JavaScript#Versions\">version 1.5 of javascript</a> and is supported by all major browsers</p>\n\n<p><strong>Updated</strong> to match filename2.js and 2filename.js but not filename.js</p>\n\n<p><code>(^(?!filename\\.js$).).+\\.js</code></p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>You can do this:</p>\n\n<pre><code>^(?:(?!filename\\.js$).)*\\.js$\n</code></pre>\n\n<p>This does explicitly what the lookbehind expression is doing implicitly: check each character of the string if the lookbehind expression plus the regex after it will not match, and only then allow that character to match.</p>\n\n<pre><code>^                 # Start of string\n(?:               # Try to match the following:\n (?!              # First assert that we can't match the following:\n  filename\\.js    # filename.js \n  $               # and end-of-string\n )                # End of negative lookahead\n .                # Match any character\n)*                # Repeat as needed\n\\.js              # Match .js\n$                 # End of string\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 45
                },
                {
                    "body": "<p>Let's suppose you want to find all <code>int</code> not preceded by <code>unsigned</code>:</p>\n\n<p>With support for negative look-behind:</p>\n\n<pre><code>(?&lt;!unsigned )int\n</code></pre>\n\n<p>Without support for negative look-behind:</p>\n\n<pre><code>((?!unsigned ).{9}|^.{0-8})int\n</code></pre>\n\n<p>Basically idea is to grab n preceding characters and exclude match with negative look-ahead, but also match the cases where there's no preceeding n characters. (where n is length of look-behind).</p>\n\n<p>So the regex in question:</p>\n\n<pre><code>(?&lt;!filename)\\.js$\n</code></pre>\n\n<p>would translate to:</p>\n\n<pre><code>((?!filename).{8}|^.{0,7})\\.js$\n</code></pre>\n\n<p>You might need to play with capturing groups to find exact spot of the string that interests you or you want't to replace specific part with something else.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Here is a regex that works fine in most regex implementations:</p>\n\n<pre><code>(?&lt;!filename)\\.js$\n</code></pre>\n\n<p>This matchs .js for a string which ends with .js except for filename.js</p>\n\n<p>Javascript doesn't have regex lookbehind. Is anyone able put together an alternative regex which achieve the same result and works in javascript?</p>\n\n<p>Here are some thoughts, but needs helper functions. I was hoping to achieve it just with a regex:\n<a href=\"http://blog.stevenlevithan.com/archives/mimic-lookbehind-javascript\">http://blog.stevenlevithan.com/archives/mimic-lookbehind-javascript</a></p>\n",
            "last_activity_date": 1417355401,
            "question_id": 7376238,
            "score": 36,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "javascript regex - look behind alternative?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>That can be tricky depending on browser and version.  I would suggest using <a href=\"http://jquery.com\">jQuery</a> and the positions plugin.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I am not sure what you need it for, and such things are always relative (screen, window, document). But when I needed to figure that out, I found this site helpful:\n<a href=\"http://www.mattkruse.com/javascript/anchorposition/source.html\" rel=\"nofollow\">http://www.mattkruse.com/javascript/anchorposition/source.html</a></p>\n\n<p>And I also found that the tooltip plugin someone made for jQuery had all sorts of interesting insight to x,y positioning tricks (look at its viewport class and the underlying support jQuery provides for it).\n<a href=\"http://bassistance.de/jquery-plugins/jquery-plugin-tooltip/\" rel=\"nofollow\">http://bassistance.de/jquery-plugins/jquery-plugin-tooltip/</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You can use a library such as Prorotype or jQuery, or you can use <a href=\"http://www.quirksmode.org/js/findpos.html\">this handy function</a>:</p>\n\n<p>It retuns an array.</p>\n\n<pre><code>myPos = findPos(document.getElementById('something'))\nx = myPos[0]\ny = myPos[1]\n\n\nfunction findPos(obj) {\n\nvar curleft = curtop = 0;\nif (obj.offsetParent) {\n\tcurleft = obj.offsetLeft\n\tcurtop = obj.offsetTop\n\twhile (obj = obj.offsetParent) {\n\t\tcurleft += obj.offsetLeft\n\t\tcurtop += obj.offsetTop\n\t}\n}\nreturn [curleft,curtop];\n</code></pre>\n\n<p>}</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here's how I do it:</p>\n\n<pre><code>// Based on: http://www.quirksmode.org/js/findpos.html\nvar getCumulativeOffset = function (obj) {\n    var left, top;\n    left = top = 0;\n    if (obj.offsetParent) {\n        do {\n            left += obj.offsetLeft;\n            top  += obj.offsetTop;\n        } while (obj = obj.offsetParent);\n    }\n    return {\n        x : left,\n        y : top\n    };\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>For what it's worth, here's a recursive version:</p>\n\n<pre><code>function findPos(element) {\n  if (element) {\n    var parentPos = findPos(element.offsetParent);\n    return [\n      parentPos.X + element.offsetLeft,\n      parentPos.Y + element.offsetTop\n    ];\n  } else {\n    return [0,0];\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can add two properties to the <code>Element.prototype</code> to get top/left of any element.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>window.Object.defineProperty( Element.prototype, 'documentOffsetTop', {\n    get: function () { \n        return this.offsetTop + ( this.offsetParent ? this.offsetParent.documentOffsetTop : 0 );\n    }\n} );\n\nwindow.Object.defineProperty( Element.prototype, 'documentOffsetLeft', {\n    get: function () { \n        return this.offsetLeft + ( this.offsetParent ? this.offsetParent.documentOffsetLeft : 0 );\n    }\n} );\n</code></pre>\n\n<p>Here's a demo comparing the results to jQuery's <code>offset().top</code> and <code>.left</code>: <a href=\"http://jsfiddle.net/ThinkingStiff/3G7EZ/\" rel=\"nofollow\">http://jsfiddle.net/ThinkingStiff/3G7EZ/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I find the XY coordinates of an HTML element (DIV) from JavaScript if they were not explicitly set?</p>\n",
            "last_activity_date": 1374803546,
            "question_id": 160144,
            "score": 34,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Find X/Y of an HTML element with JavaScript"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Well, if you are working on client side JavaScript, I think you will be out of luck... browsers tend to sandbox the JavaScript environment so you don't have access to the machine in any kind of general capacity like accessing a database.</p>\n\n<p>If you are talking about an SQLite DB on the server end accessed from the client end, you could set up an AJAX solution that invokes some server side code to access it.</p>\n\n<p>If you are talking about Rhino or some other server side JavaScript, you should look into the host language's API access into SQLite (such as the JDBC for Rhino).</p>\n\n<p>Perhaps clarify your question a bit more...?</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p><a href=\"http://gears.google.com/\">Google Gears</a> has a built-in sqlite database - but you'll need to ensure that people have it installed if you plan to rely on it.</p>\n\n<p>Depending on your circumstances, you may be able to enforce installation, otherwise you should treat it as a nice-to-have, but have graceful degradation so that the site still works if it isn't installed.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>If you're running privileged scripts in Windows (either in an HTA or WSH), you can access ODBC data sources using an \"ADODB.Recordset\" ActiveXObject.</p>\n\n<p>If you're talking about client side on a web page, the above post re: Google Gears is your best bet.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you're looking to access SQLite databases on the browser (ie. client side) you'll need your browser to support it. You can do it with SpiderApe <a href=\"http://spiderape.sourceforge.net/plugins/sqlite/\">http://spiderape.sourceforge.net/plugins/sqlite/</a> which assumes that browser is Mozilla based (ie. with SQLite support). You'll still need to allow access to the underlying libraries ( <a href=\"http://www.mozilla.org/projects/security/components/signed-scripts.html\">http://www.mozilla.org/projects/security/components/signed-scripts.html</a> )</p>\n\n<p>If you're looking for serverside access from Javascript programs to SQLite databases there are several options: JSDB is one <a href=\"http://www.jsdb.org/\">http://www.jsdb.org/</a> ; JSEXT another <a href=\"http://jsext.sourceforge.net/\">http://jsext.sourceforge.net/</a> ; and jslibs another <a href=\"http://code.google.com/p/jslibs/\">http://code.google.com/p/jslibs/</a></p>\n\n<p>-- MV</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>On a Mac? Take a look at Gus Meuller's JSTalk, which leverages Scripting Bridge and Patrick Geiller's JSCocoa.</p>\n\n<p>Gus talks specifically about the Sqlite support here: <a href=\"http://gusmueller.com/blog/archives/2009/03/jstalk_extras.html\" rel=\"nofollow\">http://gusmueller.com/blog/archives/2009/03/jstalk_extras.html</a> ...works great.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can perform it with XUL API on mozilla firefox stack. This some tutorial about it:\n<a href=\"http://www.arashkarimzadeh.com/articles/10-xul/25-sqlite-api-for-xul-application-using-javascript.html\" rel=\"nofollow\">http://www.arashkarimzadeh.com/articles/10-xul/25-sqlite-api-for-xul-application-using-javascript.html</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://jaydata.org\" rel=\"nofollow\">JayData</a> also provides a toolkit to work with sqLite/webSql using JavaScript. You'll need a browser,Rhine or Nodejs to run the thing though.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There a project called <a href=\"https://github.com/kripken/sql.js\"><code>sql.js</code></a> which is a port of SQLite in JavaScript.</p>\n\n<blockquote>\n  <p>sql.js is a port of SQLite to JavaScript, by compiling the SQLite C code with Emscripten.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>The <a href=\"https://github.com/kripken/sql.js\" rel=\"nofollow\">sql.js</a> library will enable you to call SQL queries on the client side. with that libray, you can easily stream the whole data between the server and the client by calling .open(data) and .exportData(). this is very handy.</p>\n\n<p>in addition HTML5 has <a href=\"http://diveintohtml5.info/storage.html\" rel=\"nofollow\">storage capabilities</a>, but as new technology standard, you can not assume that all the clients will support that.</p>\n\n<p><a href=\"http://brian.io/lawnchair/\" rel=\"nofollow\">Lawnchair</a> is very good option if you are not stuck with SQL, as it gives an easy to use key/value approach. these two libraries make a complete solution for working with sql database on client-side.</p>\n\n<p>Another good storage library is <a href=\"http://www.jstorage.info/\" rel=\"nofollow\">jstorage</a>. it can be used to conserve the data from the \"sql.js\" on the client. It supports a large variety of browsers (including mobile browsers, and IE7 and IE7 !), and even survives browser crashes.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<h1>Panorama of javascript SQLite solutions</h1>\n\n<h2>In the browser</h2>\n\n<p>If you want to access a SQLite database from inside a web browser, you don't have many solutions.</p>\n\n<h3>sql.js</h3>\n\n<p>The SQLite C library has been <strong>ported to javascript</strong> using <a href=\"https://github.com/kripken/emscripten\" rel=\"nofollow\">emscripten</a>. The port was started under the name of <a href=\"https://github.com/kripken/sql.js\" rel=\"nofollow\"><code>sql.js</code></a> by Alon Zakai (who is also the author of emscripten). I am the current maintainer of this library.</p>\n\n<p>The API goes like:</p>\n\n<pre><code>&lt;script src='js/sql.js'&gt;&lt;/script&gt;\n&lt;script&gt;\n    //Create the database\n    var db = new SQL.Database();\n    // Run a query without reading the results\n    db.run(\"CREATE TABLE test (col1, col2);\");\n    // Insert two rows: (1,111) and (2,222)\n    db.run(\"INSERT INTO test VALUES (?,?), (?,?)\", [1,111,2,222]);\n\n    // Prepare a statement\n    var stmt = db.prepare(\"SELECT * FROM test WHERE a BETWEEN $start AND $end\");\n    stmt.getAsObject({$start:1, $end:1}); // {col1:1, col2:111}\n\n    // Bind new values\n    stmt.bind({$start:1, $end:2});\n    while(stmt.step()) { //\n        var row = stmt.getAsObject();\n        // [...] do something with the row of result\n    }\n&lt;/script&gt;\n</code></pre>\n\n<h3>Web SQL</h3>\n\n<p>The W3C had started to work on a native API for executing SQL inside the browser, called <strong>web sql</strong>. An example of use of that API:</p>\n\n<pre><code>var db = openDatabase('mydb', '1.0', 'my first database', 2 * 1024 * 1024);\ndb.transaction(function (tx) {\n  tx.executeSql('CREATE TABLE IF NOT EXISTS foo (id unique, text)');\n  tx.executeSql('INSERT INTO foo (id, text) VALUES (1, \"synergies\")');\n});\n</code></pre>\n\n<p>However, the project has been <strong>abandoned</strong>. Thus it's not widely supported. See: <a href=\"http://caniuse.com/sql-storage\" rel=\"nofollow\">http://caniuse.com/sql-storage</a></p>\n\n<h2>In node</h2>\n\n<p>If you write client-side javascript, in node, you have a little more choices. See: <a href=\"https://www.npmjs.org/search?q=sqlite\" rel=\"nofollow\">https://www.npmjs.org/search?q=sqlite</a> .</p>\n\n<h3>node-sqlite3</h3>\n\n<p>If you have a compilation toolchain, and can don't care about having to compile your application for different platforms (or target only one platform), I would advise that you use <a href=\"https://www.npmjs.org/package/sqlite3\" rel=\"nofollow\"><code>node-sqlite3</code></a>. It is fast (much faster than <code>sql.js</code>), has a complete API and a good documentation. An example of the API is as follow:</p>\n\n<pre><code>var sqlite3 = require('sqlite3').verbose();\nvar db = new sqlite3.Database(':memory:');\n\ndb.serialize(function() {\n  db.run(\"CREATE TABLE lorem (info TEXT)\");\n\n  var stmt = db.prepare(\"INSERT INTO lorem VALUES (?)\");\n  for (var i = 0; i &lt; 10; i++) {\n      stmt.run(\"Ipsum \" + i);\n  }\n  stmt.finalize();\n\n  db.each(\"SELECT rowid AS id, info FROM lorem\", function(err, row) {\n      console.log(row.id + \": \" + row.info);\n  });\n});\n\ndb.close();\n</code></pre>\n\n<h3>sql.js</h3>\n\n<p>Yes, again. <a href=\"https://github.com/lovasoa/sql.js\" rel=\"nofollow\"><code>sql.js</code></a> can be used from node.\nThis is the solution if you want a pure javascript application. However, it will be slower than the previous solution.</p>\n\n<p>Here is an example of how to use <code>sql.js</code> from node:</p>\n\n<pre><code>var fs = require('fs');\nvar SQL = require('sql.js');\nvar filebuffer = fs.readFileSync('test.sqlite');\n\ndb.run(\"INSERT INTO test VALUES (?,?,?)\", [1, 'hello', true]);  -- corrected INT to INTO\n\n\nvar data = db.export();\nvar buffer = new Buffer(data);\nfs.writeFileSync(\"filename.sqlite\", buffer);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Best recommendations for accessing and manipulation of sqlite databases from JavaScript.</p>\n",
            "last_activity_date": 1415287127,
            "question_id": 61972,
            "score": 33,
            "tags": [
                "javascript",
                "sqlite"
            ],
            "title": "JavaScript sqlite"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p><em>nevermind, didn't notice the GMT -0400, wich causes the date to be yesterday</em></p>\n\n<p>You could try to set a default \"time\" to be 12:00:00</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>It means <code>2011-09-24 00:00:00 GMT</code>, and since you're at <code>GMT -4</code>, it will be <code>20:00</code> the previous day.</p>\n\n<p>Personally, I get <code>2011-09-24 02:00:00</code>, because I'm living at <code>GMT +2</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Notice that Eastern Daylight Time is <code>-4 hours</code> and that the hours on the date you're getting back are <code>20</code>.</p>\n\n<pre><code>20h + 4h = 24h\n</code></pre>\n\n<p>which is midnight of 2011-09-24.</p>\n\n<p>You're getting the right date, you just never specified the correct time zone.</p>\n\n<p>If you need to access the date values, you can use <code>getUTCDate()</code> or <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date\">any of the other <code>getUTC*()</code> functions</a>:</p>\n\n<pre><code>var d,\n    days;\nd = new Date('2011-09-24');\ndays = ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat'];\nconsole.log(days[d.getUTCDay()]);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>I believe that it has to do with time-zone adjustment. The date you've created is in GMT and the default time is midnight, but your timezone is EDT, so it subtracts 4 hours. Try this to verify:</p>\n\n<pre><code>var doo = new Date(\"2011-09-25 EDT\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Your issue is specifically with time zone.  Note part <code>GMT-0400</code> - that is you're 4 hours behind GMT.  If you add 4 hours to the displayed date/time, you'll get exactly midnight 2011/09/24.  Use <code>toUTCString()</code> method instead to get GMT string:</p>\n\n<pre><code>var doo = new Date(\"2011-09-24\");\nconsole.log(doo.toUTCString());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you want to get hour 0 of some date in the local time zone, pass the individual date parts to the <code>Date</code> constructor.</p>\n\n<pre><code>new Date(2011,08,24); // month value is 0 based, others are 1 based.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>To normalize the date and eliminate the unwanted offset:</p>\n\n<pre><code>var doo = new Date(\"2011-09-24\");\nconsole.log(new Date(doo.getTime() + doo.getTimezoneOffset()*60000));\nSat Sep 24 2011 00:00:00 GMT-0400 (Eastern Daylight Time)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This through me for a loop, +1 on zzzBov's answer.  Here is a full conversion of a date that worked for me using the UTC methods:</p>\n\n<pre><code>//myMeeting.MeetingDate = '2015-01-30T00:00:00'\n\nvar myDate = new Date(myMeeting.MeetingDate);\n//convert to JavaScript date format\n//returns date of 'Thu Jan 29 2015 19:00:00 GMT-0500 (Eastern Standard Time)' &lt;-- One Day Off!\n\nmyDate = new Date(myDate.getUTCFullYear(), myDate.getUTCMonth(), myDate.getUTCDate());\n//returns date of 'Fri Jan 30 2015 00:00:00 GMT-0500 (Eastern Standard Time)' &lt;-- Correct Date!\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In my java-script app I have the date stored in a format like so:</p>\n\n<pre><code>2011-09-24\n</code></pre>\n\n<p>Now when I try using the above value to create a new Date object (so I can retrieve the date in a different format), the date always comes back one day off. See below:</p>\n\n<pre><code>var doo = new Date(\"2011-09-24\");\nconsole.log(doo);\nFri Sep 23 2011 20:00:00 GMT-0400 (Eastern Daylight Time)\n</code></pre>\n\n<p>Any help on this is appreciated.</p>\n\n<p>Thank you</p>\n",
            "last_activity_date": 1422293111,
            "question_id": 7556591,
            "score": 28,
            "tags": [
                "javascript",
                "date"
            ],
            "title": "Javascript date object always one day off?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<pre><code>function capitalize(s){\n    return s.toLowerCase().replace( /\\b./g, function(a){ return a.toUpperCase(); } );\n};\n\ncapitalize('this IS THE wOrst string eVeR');\n</code></pre>\n\n<p>output: \"This Is The Worst String Ever\"</p>\n\n<h2>Update:</h2>\n\n<p>It appears this solution supersedes mine: <a href=\"http://stackoverflow.com/a/7592235/104380\">http://stackoverflow.com/a/7592235/104380</a></p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p><a href=\"http://www.mediacollege.com/internet/javascript/text/case-capitalize.html\" rel=\"nofollow\">http://www.mediacollege.com/internet/javascript/text/case-capitalize.html</a> is one of many answers out there.</p>\n\n<p>Google can be all you need for such problems.</p>\n\n<p>A na\u00efve approach would be to split the string by whitespace, capitalize the first letter of each element of the resulting array and join it back together. This leaves existing capitalization alone (e.g. HTML stays HTML and doesn't become something silly like Html). If you don't want that affect, turn the entire string into lowercase before splitting it up.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Using javascript</p>\n\n<pre><code>String.prototype.capitalize = function(){\n   return this.replace( /(^|\\s)([a-z])/g , function(m,p1,p2){ return p1+p2.toUpperCase(); } );\n};\n</code></pre>\n\n<p>and example in html</p>\n\n<pre><code>&lt;form name=\"form1\" method=\"post\"&gt;\n&lt;input name=\"instring\" type=\"text\" value=\"this is the text string\" size=\"30\"&gt;\n&lt;input type=\"button\" name=\"Capitalize\" value=\"Capitalize &gt;&gt;\" onclick=\"form1.outstring.value=form1.instring.value.capitalize();\"&gt;\n&lt;input name=\"outstring\" type=\"text\" value=\"\" size=\"30\"&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>Basically, you can do <code>string.capitalize()</code> and it'll capitalize every 1st letter of each word.</p>\n\n<p>Source: <a href=\"http://www.mediacollege.com/internet/javascript/text/case-capitalize.html\" rel=\"nofollow\">http://www.mediacollege.com/internet/javascript/text/case-capitalize.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Since everyone has given you the JavaScript answer you've asked for, I'll throw in that the CSS property <code>text-transform: capitalize</code> will do exactly this.</p>\n\n<p>I realize this <em>might</em> not be what you're asking for - you haven't given us any of the context in which you're running this - but if it's just for presentation, I'd definitely go with the CSS alternative.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>John Resig (of jQuery fame ) ported a perl script, written by John Gruber, to JavaScript. This script capitalizes in a more intelligent way, it doesn't capitalize small words like 'of' and 'and' for example.  </p>\n\n<p>You can find it here: <a href=\"http://ejohn.org/blog/title-capitalization-in-javascript/\" rel=\"nofollow\">Title Capitalization in JavaScript</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The <a href=\"http://stackoverflow.com/questions/2332811/capitalize-words-in-string/2332821#2332821\">answer provided by vsync</a> works <strong>as long as you don't have accented letters</strong> in the input string.</p>\n\n<p>I don't know the reason, but apparently the <code>\\b</code> in regexp matches also accented letters (tested on IE8 and Chrome), so a string like <strong><code>\"localit\u00e0\"</code> would be wrongly capitalized converted into <code>\"Localit\u00c0\"</code></strong> (the <code>\u00e0</code> letter gets capitalized cause the regexp thinks it's a word boundary)</p>\n\n<p>A more general function that <strong>works also with accented letters</strong> is this one:</p>\n\n<pre><code>String.prototype.toCapitalize = function()\n{ \n   return this.toLowerCase().replace(/^.|\\s\\S/g, function(a) { return a.toUpperCase(); });\n}\n</code></pre>\n\n<p>You can use it like this:</p>\n\n<pre><code>alert( \"hello localit\u00e0\".toCapitalize() );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<pre><code>String.prototype.capitalize = function() {\n    return this.replace(/(?:^|\\s)\\S/g, function(a) { return a.toUpperCase(); });\n};\n</code></pre>\n\n<p><strong>Usage:</strong></p>\n\n<pre><code>'your string'.capitalize(); // -&gt; 'Your String'\n</code></pre>\n\n<hr>\n\n<ul>\n<li><p>fixes <a href=\"http://stackoverflow.com/users/260080/marco-demaio\">Marco Demaio</a>'s solution where first letter with a space preceding is not capitalized.</p>\n\n<pre><code>' javascript'.capitalize(); // -&gt; ' Javascript'\n</code></pre></li>\n<li><p>can handle national symbols and accented letters.</p>\n\n<pre><code>'\u0431\u0430\u0431\u0443\u0448\u043a\u0430 \u043a\u0443\u0440\u0438\u0442 \u0442\u0440\u0443\u0431\u043a\u0443'.capitalize();  // -&gt; '\u0411\u0430\u0431\u0443\u0448\u043a\u0430 \u041a\u0443\u0440\u0438\u0442 \u0422\u0440\u0443\u0431\u043a\u0443'\n'localit\u00e0 \u00e0tilacol'.capitalize()      // -&gt; 'Localit\u00e0 \u00c0tilacol'\n</code></pre></li>\n</ul>\n\n<p><strong>ADD-ON</strong> I find it useful</p>\n\n<pre><code>String.prototype.capitalize = function(lower) {\n    return (lower ? this.toLowerCase() : this).replace(/(?:^|\\s)\\S/g, function(a) { return a.toUpperCase(); });\n};\n'javaSCrIPT'.capitalize();      // -&gt; 'JavaSCrIPT'\n'javaSCrIPT'.capitalize(true);  // -&gt; 'Javascript'\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 68
                }
            ],
            "body": "<p>What is the best approach to capitalize words in a string?</p>\n",
            "last_activity_date": 1406248936,
            "question_id": 2332811,
            "score": 28,
            "tags": [
                "javascript"
            ],
            "title": "Capitalize words in string"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>i had a similar problem with transformation and ended up solving it with css:</p>\n\n<pre><code>transform-origin\n</code></pre>\n\n<p><a href=\"http://www.w3schools.com/cssref/css3_pr_transform-origin.asp\" rel=\"nofollow\">http://www.w3schools.com/cssref/css3_pr_transform-origin.asp</a></p>\n\n<p>have you tried it?\nmaybe it will help.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>My own \"answer\" was on this occasion was to adapt jQuery UI draggable to make a separate interaction, called \"traggable\". </p>\n\n<p><a href=\"https://github.com/paullth/JS-libs\" rel=\"nofollow\">https://github.com/paullth/JS-libs</a></p>\n\n<p><a href=\"http://jsfiddle.net/paul_herve/ws27C/4/\" rel=\"nofollow\">http://jsfiddle.net/paul_herve/ws27C/4/</a></p>\n\n<p>Would still like to hear about any alternatives...</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It's been a while since this question was asked. I have found (actually created) an answer. All it requires is setting callback handlers. No editing jquery-ui needed! </p>\n\n<p>Note: zoomScale in this example is a global variable and the transform is set using animate (aided by <a href=\"http://louisremi.github.com/jquery.transform.js/index.html\">jquery.transform.js</a>) like so:</p>\n\n<pre><code>target.animate({\n    transform: 'scale(' + zoomScale + ')'\n});\n</code></pre>\n\n<p>Take a look at this:</p>\n\n<p><strong>transform scale() fix for resizable:</strong></p>\n\n<pre><code>$(this).resizable({\n    minWidth: -(contentElem.width()) * 10,  // these need to be large and negative\n    minHeight: -(contentElem.height()) * 10, // so we can shrink our resizable while scaled\n    resize: function(event, ui) {\n\n        var changeWidth = ui.size.width - ui.originalSize.width; // find change in width\n        var newWidth = ui.originalSize.width + changeWidth / zoomScale; // adjust new width by our zoomScale\n\n        var changeHeight = ui.size.height - ui.originalSize.height; // find change in height\n        var newHeight = ui.originalSize.height + changeHeight / zoomScale; // adjust new height by our zoomScale\n\n        ui.size.width = newWidth;\n        ui.size.height = newHeight;\n\n    }\n});\n</code></pre>\n\n<p><strong>transform scale() fix for draggable:</strong></p>\n\n<pre><code>$(this).draggable({\n    handle: '.drag-handle',\n    start: function(event, ui) {\n        ui.position.left = 0;\n        ui.position.top = 0;\n    },\n    drag: function(event, ui) {\n\n        var changeLeft = ui.position.left - ui.originalPosition.left; // find change in left\n        var newLeft = ui.originalPosition.left + changeLeft / (( zoomScale)); // adjust new left by our zoomScale\n\n        var changeTop = ui.position.top - ui.originalPosition.top; // find change in top\n        var newTop = ui.originalPosition.top + changeTop / zoomScale; // adjust new top by our zoomScale\n\n        ui.position.left = newLeft;\n        ui.position.top = newTop;\n\n    }\n});\n</code></pre>\n\n<p>Let me know if you find any problems or further improvements on this. :)</p>\n\n<p>Reference: <a href=\"http://gungfoo.wordpress.com/2013/02/15/jquery-ui-resizabledraggable-with-transform-scale-set/\">jQuery-UI resizable/draggable with transform: scale() set</a></p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Here is my solution. Some of the code posted above did not work for me.</p>\n\n<p>I have a dragable image and I apply CSS transform rotate and scale onto that image. Once I scale/rotate it the position is off at drag-start. To fix it I calculate the setpoint difference from stop to start and on-drag apply a new setpoint with the difference factored in.</p>\n\n<pre><code>var $img = $(\"#my-image-id\");\n\n$img.posLeft  = 0;\n$img.posTop  = 0;\n$img.diffLeft  = 0;\n$img.diffTop  = 0;\n\n$img.draggable({\n  start: function( event, ui ) {\n    //check the difference from start to stop setpoints\n    $img.diffLeft  = $img.posLeft-ui.position.left;\n    $img.diffTop  = $img.posTop-ui.position.top;\n    //console.log('start x: '+Math.floor(ui.position.left)+' y: '+Math.floor(ui.position.top));\n    //console.log('diff x: '+Math.floor($img.posLeft-ui.position.left)+' y: '+Math.floor($img.posTop-ui.position.top));\n  },\n  drag: function( event, ui ) {\n    //fix the offset bug that is applied after CSS transform, to do that just add the value difference\n    ui.position.left = ui.position.left+$img.diffLeft;\n    ui.position.top = ui.position.top+$img.diffTop;\n    //console.log('drag x: '+ui.position.left+' y: '+ui.position.top);\n  },\n  stop: function( event, ui ) {\n    //save the last applied setpoints\n    $img.posLeft = ui.position.left;\n    $img.posTop = ui.position.top;\n    //console.log('stop x: '+Math.floor(ui.position.left)+' y: '+Math.floor(ui.position.top));\n  }\n});\n</code></pre>\n\n<p>The CSS transform-origin trick does fixes the bug for scale only. Rotation should be around center so you want to keep the default 50% 50%.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I was trying the <strong>transform scale() fix for resizable</strong> posted by gungfoo on a element displayed at 10% of its actual size and the method didin't work. The cursor still moved away from the element during resizing.</p>\n\n<p>I changed the last two lines of the resizeFix method to directly update the element's width and height and this solved my issue.</p>\n\n<pre><code>function resizeFix(event, ui) {\n\n    var changeWidth = ui.size.width - ui.originalSize.width; // find change in width\n    var newWidth = ui.originalSize.width + changeWidth / zoomScale; // adjust new width by our zoomScale\n\n    var changeHeight = ui.size.height - ui.originalSize.height; // find change in height\n    var newHeight = ui.originalSize.height + changeHeight / zoomScale; // adjust new height by our zoomScale\n\n    ui.originalElement.width(newWidth);\n    ui.originalElement.height(newHeight);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I would add this as a comment to the accepted answer from Gung Foo but I don't have the rep to comment.</p>\n\n<p>I found Gung's answered worked perfectly for me however the resizable fix only worked when dragging from the bottom-right corner.  I also have handles on the other three corners and found the element would shift so I had to add the fix from draggable to the resizable functions. </p>\n\n<p>Maybe there's a better way, or I missed something, but I found the modified resizable below worked for me from all handles:</p>\n\n<pre><code>$(this).resizable({\n    minWidth: -(contentElem.width()) * 10,  // these need to be large and negative\n    minHeight: -(contentElem.height()) * 10, // so we can shrink our resizable while scaled\n\n    // adjust the initial position to accomodate for the scale\n    start: function(event, ui){\n        ui.position.left = Math.round(ui.position.left/zoomScale);\n        ui.position.top = Math.round(ui.position.top/zoomScale);\n        ui.originalPosition.left = ui.position.left;\n        ui.originalPosition.top = ui.position.top;\n    },\n\n    resize: function(event, ui) {\n\n        var changeWidth = ui.size.width - ui.originalSize.width; // find change in width\n        var newWidth = ui.originalSize.width + changeWidth / zoomScale; // adjust new width by our zoomScale\n\n        var changeHeight = ui.size.height - ui.originalSize.height; // find change in height\n        var newHeight = ui.originalSize.height + changeHeight / zoomScale; // adjust new height by our zoomScale\n\n        ui.size.width = newWidth;\n        ui.size.height = newHeight;\n\n        // if the position is changed by a NW,NE,SW handle resize adjust for the scale\n        var changeWidth = ui.size.width - ui.originalSize.width; // find change in width\n        var newWidth = ui.originalSize.width + changeWidth / zoomScale; // adjust new width by our zoomScale\n\n        var changeHeight = ui.size.height - ui.originalSize.height; // find change in height\n        var newHeight = ui.originalSize.height + changeHeight / zoomScale; // adjust new height by our zoomScale\n\n        ui.size.width = newWidth;\n        ui.size.height = newHeight;\n\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Another approach would be to add a plugin that compensate for the transformation ( remember to add \"transform : true\" to the plugin initialization. </p>\n\n<p>The ui.draggable need to be passed via a inverse matrix of the transformation in order to position the element in the un-transformed space which the browser later transform on display.</p>\n\n<p>For \"draggable\" the following worked for me ( jqueryui  1.10 ) ( the matrix calculation I have taken from jquery.panzoom):</p>\n\n<pre><code>var Matrix = function(a, b, c, d, e, f, g, h, i) {\n    if ($.type(a) === 'array') {\n        this.elements = [\n            +a[0], +a[2], +a[4],\n            +a[1], +a[3], +a[5],\n                0,     0,     1\n        ];\n    } else {\n        this.elements = [\n            a, b, c,\n            d, e, f,\n            g || 0, h || 0, i || 1\n        ];\n    }\n};\n\nMatrix.prototype = {\n    /**\n     * Multiply a 3x3 matrix by a similar matrix or a vector\n     * @param {Matrix|Vector} matrix\n     * @return {Matrix|Vector} Returns a vector if multiplying by a vector\n     */\n    x: function(matrix) {\n        var isVector = matrix instanceof Vector;\n\n        var a = this.elements,\n            b = matrix.elements;\n\n        if (isVector &amp;&amp; b.length === 3) {\n            // b is actually a vector\n            return new Vector(\n                a[0] * b[0] + a[1] * b[1] + a[2] * b[2],\n                a[3] * b[0] + a[4] * b[1] + a[5] * b[2],\n                a[6] * b[0] + a[7] * b[1] + a[8] * b[2]\n            );\n        } else if (b.length === a.length) {\n            // b is a 3x3 matrix\n            return new Matrix(\n                a[0] * b[0] + a[1] * b[3] + a[2] * b[6],\n                a[0] * b[1] + a[1] * b[4] + a[2] * b[7],\n                a[0] * b[2] + a[1] * b[5] + a[2] * b[8],\n\n                a[3] * b[0] + a[4] * b[3] + a[5] * b[6],\n                a[3] * b[1] + a[4] * b[4] + a[5] * b[7],\n                a[3] * b[2] + a[4] * b[5] + a[5] * b[8],\n\n                a[6] * b[0] + a[7] * b[3] + a[8] * b[6],\n                a[6] * b[1] + a[7] * b[4] + a[8] * b[7],\n                a[6] * b[2] + a[7] * b[5] + a[8] * b[8]\n            );\n        }\n        return false; // fail\n    },\n    /**\n     * Generates an inverse of the current matrix\n     * @returns {Matrix}\n     */\n    inverse: function() {\n        var d = 1 / this.determinant(),\n            a = this.elements;\n        return new Matrix(\n            d * ( a[8] * a[4] - a[7] * a[5]),\n            d * (-(a[8] * a[1] - a[7] * a[2])),\n            d * ( a[5] * a[1] - a[4] * a[2]),\n\n            d * (-(a[8] * a[3] - a[6] * a[5])),\n            d * ( a[8] * a[0] - a[6] * a[2]),\n            d * (-(a[5] * a[0] - a[3] * a[2])),\n\n            d * ( a[7] * a[3] - a[6] * a[4]),\n            d * (-(a[7] * a[0] - a[6] * a[1])),\n            d * ( a[4] * a[0] - a[3] * a[1])\n        );\n    },\n    /**\n     * Calculates the determinant of the current matrix\n     * @returns {Number}\n     */\n    determinant: function() {\n        var a = this.elements;\n        return a[0] * (a[8] * a[4] - a[7] * a[5]) - a[3] * (a[8] * a[1] - a[7] * a[2]) + a[6] * (a[5] * a[1] - a[4] * a[2]);\n    }\n};\n\nvar Vector = function (x, y, z) {\n    this.elements = [ x, y, z ];\n};\n\n/**\n * Get the element at zero-indexed index i\n * @param {Number} i\n */\nVector.prototype.e = Matrix.prototype.e = function(i) {\n\n    if( this.elements[ i ] != undefined ){\n        return this.elements[ i ];    \n    }\n\n    return this.elements;\n};    \n\n$.ui.plugin.add(\"draggable\", \"transform\", {\n\n    start: function( event, ui ) {\n\n        if(!$(this).data('ui-draggable')){\n            return false;\n        }            \n\n        var inst = $(this).data(\"ui-draggable\");\n\n        inst.matrix = new Matrix(function(matrix){\n\n            var rmatrix = new RegExp(\n                    '^matrix\\\\(' +\n                    '(\\\\-?[\\\\d\\\\.e]+)' + '\\\\,?\\\\s*' +\n                    '(\\\\-?[\\\\d\\\\.e]+)' + '\\\\,?\\\\s*' +\n                    '(\\\\-?[\\\\d\\\\.e]+)' + '\\\\,?\\\\s*' +\n                    '(\\\\-?[\\\\d\\\\.e]+)' + '\\\\,?\\\\s*' +\n                    '(\\\\-?[\\\\d\\\\.e]+)' + '\\\\,?\\\\s*' +\n                    '(\\\\-?[\\\\d\\\\.e]+)' + '\\\\)$'\n            );                \n\n            var matrix = rmatrix.exec( matrix );\n            if (matrix) {\n                matrix.shift();\n            }\n            return matrix || [ 1, 0, 0, 1, 0, 0 ];\n\n        }([$(this).parents('[style*=\"transform\"]').css('transform')]));            \n    },\n    drag: function( event, ui ) {\n\n        if(!$(this).data('ui-draggable')){\n            return false;\n        }            \n\n        var inst = $(this).data(\"ui-draggable\");\n\n        var t_pos = inst.matrix.inverse().x(new Vector(ui.position.left, ui.position.top, 0));\n\n        ui.position.left = t_pos.e(0);\n        ui.position.top = t_pos.e(1);                   \n\n        if(inst.options.grid) {\n            ui.position.left = ui.position.left - ui.position.left % inst.options.grid[0];\n            ui.position.top  = ui.position.top - ui.position.top % inst.options.grid[1];                \n        }\n\n        if( inst.containment ){\n\n            if( ui.position.left &lt; inst.containment[0] ){\n                ui.position.left = inst.containment[0];\n            }\n\n            if( ui.position.left &gt; inst.containment[2] ){\n                ui.position.left = inst.containment[2];\n            }                \n\n            if( ui.position.top &lt; inst.containment[1] ){\n                ui.position.top = inst.containment[1];\n            }  \n\n            if( ui.position.top &gt; inst.containment[3] ){\n                ui.position.top = inst.containment[3];\n            }\n        }\n    },     \n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I had the same problem, and the easiest way for me was NOT to use the jquery-ui's draggable functionality since it does not support CSS3 transform properties.</p>\n\n<p>What worked for me really good was to implement an own draggable functionality: <a href=\"http://css-tricks.com/snippets/jquery/draggable-without-jquery-ui/\" rel=\"nofollow\">http://css-tricks.com/snippets/jquery/draggable-without-jquery-ui/</a></p>\n\n<p>I know it does not solve your problem 100%, since you still want to use the jquery-ui draggable functionality, but it could help others.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I found I could just wrap the scaled element with another div and set draggable on it instead.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am applying a CSS transform (and the browser specific -webkit, -o etc):</p>\n\n<p>transform: matrix(0.5 , 0 , 0, 0.5, 0 , 0);</p>\n\n<p>to a div then using jQuery's draggable() and resizable() plugins on children of said div.</p>\n\n<p>The problem I had was that when dragging or resizing the child elements, the alteration jQuery made were out of \"sync\" with the mouse by a factor equal to the scale applied.</p>\n\n<p>I found a solution on stackoverflow (though I stupidly did not bookmark it and now cant find it....) that suggested patching the plugins, and it worked wonderfully. It went along these line:</p>\n\n<pre><code>function monkeyPatch_mouseStart() {\n  // don't really need this, but in case I did, I could store it and chain\n  // var oldFn = $.ui.draggable.prototype._mouseStart ;\n  $.ui.draggable.prototype._mouseStart = function(event) {\n\n    var o = this.options;\n\n    //Create and append the visible helper\n    this.helper = this._createHelper(event);\n\n    //Cache the helper size\n    this._cacheHelperProportions();\n\n    //If ddmanager is used for droppables, set the global draggable\n    if($.ui.ddmanager)\n      $.ui.ddmanager.current = this;\n\n    /*\n     * - Position generation -\n     * This block generates everything position related - it's the core of draggables.\n     */\n\n    //Cache the margins of the original element\n    this._cacheMargins();\n\n    //Store the helper's css position\n    this.cssPosition = this.helper.css(\"position\");\n    this.scrollParent = this.helper.scrollParent();\n\n    //The element's absolute position on the page minus margins\n\n    //PATCH CODE\n    this.offset = this.positionAbs = getViewOffset(this.element[0]);\n    //END\n\n    this.offset = {\n      top: this.offset.top - this.margins.top,\n      left: this.offset.left - this.margins.left\n    };\n\n    $.extend(this.offset, {\n      click: { //Where the click happened, relative to the element\n        left: event.pageX - this.offset.left,\n        top: event.pageY - this.offset.top\n      },\n      parent: this._getParentOffset(),\n      relative: this._getRelativeOffset() //This is a relative to absolute position minus the actual position calculation - only used for relative positioned helper\n    });\n\n    //Generate the original position\n    this.originalPosition = this.position = this._generatePosition(event);\n    this.originalPageX = event.pageX;\n    this.originalPageY = event.pageY;\n\n    //Adjust the mouse offset relative to the helper if 'cursorAt' is supplied\n    if(o.cursorAt &amp;&amp; this._adjustOffsetFromHelper(o.cursorAt)){\n    }\n\n    //Set a containment if given in the options\n    if(o.containment)\n      this._setContainment();\n\n    //Trigger event + callbacks\n    if(this._trigger(\"start\", event) === false) {\n      this._clear();\n      return false;\n    }\n\n    //Recache the helper size\n    this._cacheHelperProportions();\n\n    //Prepare the droppable offsets\n    if ($.ui.ddmanager &amp;&amp; !o.dropBehaviour)\n      $.ui.ddmanager.prepareOffsets(this, event);\n\n    this.helper.addClass(\"ui-draggable-dragging\");\n    this._mouseDrag(event, true); //Execute the drag once - this causes the helper not to be visible before getting its correct position\n\n    //If the ddmanager is used for droppables, inform the manager that dragging has started (see #5003)\n    if ( $.ui.ddmanager &amp;&amp; $.ui.ddmanager.dragStart) $.ui.ddmanager.dragStart(this, event);\n\n    return true;\n  }\n }\n\nfunction getViewOffset(node) {\n  var x = 0, y = 0, win = node.ownerDocument.defaultView || window;\n  if (node) addOffset(node);\n  return { left: x, top: y };\n\n  function getStyle(node) {\n    return node.currentStyle || // IE\n           win.getComputedStyle(node, '');\n  }\n\n  function addOffset(node) {\n    var p = node.offsetParent, style, X, Y;\n    x += parseInt(node.offsetLeft, 10) || 0;\n    y += parseInt(node.offsetTop, 10) || 0;\n\n    if (p) {\n      x -= parseInt(p.scrollLeft, 10) || 0;\n      y -= parseInt(p.scrollTop, 10) || 0;\n\n      if (p.nodeType == 1) {\n        var parentStyle = getStyle(p)\n          , localName   = p.localName\n          , parent      = node.parentNode;\n        if (parentStyle.position != 'static') {\n          x += parseInt(parentStyle.borderLeftWidth, 10) || 0;\n          y += parseInt(parentStyle.borderTopWidth, 10) || 0;\n\n          if (localName == 'TABLE') {\n            x += parseInt(parentStyle.paddingLeft, 10) || 0;\n            y += parseInt(parentStyle.paddingTop, 10) || 0;\n          }\n          else if (localName == 'BODY') {\n            style = getStyle(node);\n            x += parseInt(style.marginLeft, 10) || 0;\n            y += parseInt(style.marginTop, 10) || 0;\n          }\n        }\n        else if (localName == 'BODY') {\n          x += parseInt(parentStyle.borderLeftWidth, 10) || 0;\n          y += parseInt(parentStyle.borderTopWidth, 10) || 0;\n        }\n\n        while (p != parent) {\n          x -= parseInt(parent.scrollLeft, 10) || 0;\n          y -= parseInt(parent.scrollTop, 10) || 0;\n          parent = parent.parentNode;\n        }\n        addOffset(p);\n      }\n    }\n    else {\n      if (node.localName == 'BODY') {\n        style = getStyle(node);\n        x += parseInt(style.borderLeftWidth, 10) || 0;\n        y += parseInt(style.borderTopWidth, 10) || 0;\n\n        var htmlStyle = getStyle(node.parentNode);\n        x -= parseInt(htmlStyle.paddingLeft, 10) || 0;\n        y -= parseInt(htmlStyle.paddingTop, 10) || 0;\n      }\n\n      if ((X = node.scrollLeft)) x += parseInt(X, 10) || 0;\n      if ((Y = node.scrollTop))  y += parseInt(Y, 10) || 0;\n    }\n  }\n}\nvar isNumber = function(value) {\n  return !isNaN(parseInt(value, 10));\n};\n</code></pre>\n\n<p>I have made my own changes such as (you can see on the 6-7 lines the multiplication of the movement by a \"scale factor\"):</p>\n\n<pre><code> $.ui.draggable.prototype._generatePosition = function(event) {\n    var o = this.options, scroll = this.cssPosition == 'absolute' &amp;&amp; !(this.scrollParent[0] != document &amp;&amp; $.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, scrollIsRootNode = (/(html|body)/i).test(scroll[0].tagName);\n    var pageX = event.pageX;\n    var pageY = event.pageY;\n    //PATCH CODE\n    if($(this.element[0]).hasClass('item')){\n        pageY = this.originalPageY + ((pageY - this.originalPageY)*(1/$.viewbox.foreground.scale));\n        pageX = this.originalPageX + ((pageX - this.originalPageX)*(1/$.viewbox.foreground.scale));\n    }\n    //END\n    /*\n     * - Position constraining -\n     * Constrain the position to a mix of grid, containment.\n     */\n\n    if(this.originalPosition) { //If we are not dragging yet, we won't check for options\n\n      if(this.containment) {\n        if(event.pageX - this.offset.click.left &lt; this.containment[0]) pageX = this.containment[0] + this.offset.click.left;\n        if(event.pageY - this.offset.click.top &lt; this.containment[1]) pageY = this.containment[1] + this.offset.click.top;\n        if(event.pageX - this.offset.click.left &gt; this.containment[2]) pageX = this.containment[2] + this.offset.click.left;\n        if(event.pageY - this.offset.click.top &gt; this.containment[3]) pageY = this.containment[3] + this.offset.click.top;\n      }\n\n      if(o.grid) {\n        var top = this.originalPageY + Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1];\n        pageY = this.containment ? (!(top - this.offset.click.top &lt; this.containment[1] || top - this.offset.click.top &gt; this.containment[3]) ? top : (!(top - this.offset.click.top &lt; this.containment[1]) ? top - o.grid[1] : top + o.grid[1])) : top;\n\n        var left = this.originalPageX + Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0];\n        pageX = this.containment ? (!(left - this.offset.click.left &lt; this.containment[0] || left - this.offset.click.left &gt; this.containment[2]) ? left : (!(left - this.offset.click.left &lt; this.containment[0]) ? left - o.grid[0] : left + o.grid[0])) : left;\n      }\n    }\n    return {\n      top: (\n        pageY                               // The absolute mouse position\n        - this.offset.click.top                         // Click offset (relative to the element)\n        - this.offset.relative.top                        // Only for relative positioned nodes: Relative offset from element to offset parent\n        - this.offset.parent.top                        // The offsetParent's offset without borders (offset + border)\n        + ($.browser.safari &amp;&amp; $.browser.version &lt; 526 &amp;&amp; this.cssPosition == 'fixed' ? 0 : ( this.cssPosition == 'fixed' ? -this.scrollParent.scrollTop() : ( scrollIsRootNode ? 0 : scroll.scrollTop() ) ))\n      ),\n      left: (\n        pageX                               // The absolute mouse position\n        - this.offset.click.left                        // Click offset (relative to the element)\n        - this.offset.relative.left                       // Only for relative positioned nodes: Relative offset from element to offset parent\n        - this.offset.parent.left                       // The offsetParent's offset without borders (offset + border)\n        + ($.browser.safari &amp;&amp; $.browser.version &lt; 526 &amp;&amp; this.cssPosition == 'fixed' ? 0 : ( this.cssPosition == 'fixed' ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft() ))\n      )\n    };\n\n  }\n</code></pre>\n\n<p>So big thank you to whoever suggested that.</p>\n\n<p>So, my question! Has anyone come across a nice way to have draggable/resizable events inside a scaled element that doesn't require patching jQuery? I have googled, and this was the best solution I could find. Does anyone know of alternative to jquery that perhaps works under these conditions, with CSS transforms?</p>\n\n<p>Many thanks for any responses.</p>\n",
            "last_activity_date": 1421681802,
            "question_id": 10212683,
            "score": 24,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "jquery-ui",
                "css-transforms"
            ],
            "title": "jQuery Drag/Resize with CSS Transform Scale"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>From the Android 4.2 documentation:</p>\n\n<p>Caution: If you've set your targetSdkVersion to 17 or higher, you must add the @JavascriptInterface annotation to any method that you want available your web page code (the method must also be public). If you do not provide the annotation, then the method will not accessible by your web page when running on Android 4.2 or higher.</p>\n",
                    "is_accepted": true,
                    "score": 82
                }
            ],
            "body": "<p>I have a webview with added javascript interface which works perfectly on most devices, except for those running Android 4.2.1.</p>\n\n<p>I removed most of the code, and stayed with a very basic code:</p>\n\n<pre><code>this.webView.getSettings().setJavaScriptEnabled(true);\nthis.webView.setWebChromeClient(new WebChromeClient());\nthis.webView.addJavascriptInterface(new Object() {\n    public void handshake() {\n        Log.d(\"JS\", \"handshake no params\");\n    }\n\n    public void handshake(String json) {\n        Log.d(\"JS\", \"handshake with params: \" + json);\n    }\n}, \"Android\");\n</code></pre>\n\n<p>In the javascript side of things the testing code looks like this:</p>\n\n<pre><code>Android.handshake();\n</code></pre>\n\n<p>But I get this in the logcat:</p>\n\n<blockquote>\n  <p>E/Web Console: Uncaught TypeError: Object [object Object] has no\n  method 'handshake'</p>\n</blockquote>\n\n<p>Again, this same exact thing works fine in devices who are have older android os (&lt; 4.2.1) that I have tested (the minimal version being 2.3.3).</p>\n\n<p>The strange thing is that if I start a completely new project, with nothing but a single Activity which has just a WebView, with the same code, everything works fine even for 4.2.1, but when it's part of my actual project, things break.\nThere's nothing I'm doing with the webview which is not included in this code snippets I provided.</p>\n\n<p>What is the most strange to me is that the javascript finds the Android object but it just does not have the requested method (handshake), how can that be?</p>\n\n<p>Any help will be greatly appreciated since this has been driving me crazy for the past 2 weeks or so (it's a bug I go back to all the time, then give up, etc).\nThanks.</p>\n",
            "last_activity_date": 1390823214,
            "question_id": 14031635,
            "score": 23,
            "tags": [
                "javascript",
                "android",
                "webview"
            ],
            "title": "Android 4.2.1, WebView and javascript interface breaks"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This article's a bit old, but it suggests using navigator.language:</p>\n\n<p><a href=\"http://www.techrepublic.com/article/detect-foreign-language-support-using-javascript/5069931\" rel=\"nofollow\">http://www.techrepublic.com/article/detect-foreign-language-support-using-javascript/5069931</a></p>\n\n<p>Also:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/1043339/javascript-for-detecting-browser-language-preference\">JavaScript for detecting browser language preference</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try this script to get your browser language </p>\n\n<pre><code> &lt;script type=\"text/javascript\"&gt;\n var userLang = navigator.language || navigator.userLanguage; \n alert (\"The language is: \" + userLang);\n &lt;/script&gt;\n</code></pre>\n\n<p>Cheers</p>\n",
                    "is_accepted": true,
                    "score": 48
                },
                {
                    "body": "<p>The \"JavaScript\" way:</p>\n\n<pre><code>var lang = navigator.language || navigator.userLanguage; //no ?s necessary\n</code></pre>\n\n<p>Really you should be doing language detection on the server, but if it's absolutely necessary to know/use via JavaScript, it can be gotten.</p>\n",
                    "is_accepted": false,
                    "score": 16
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/1043339/javascript-for-detecting-browser-language-preference\">JavaScript for detecting browser language preference</a>  </p>\n</blockquote>\n\n\n\n<p>i want to detect the language of the browser that is entering my site is it En or Fr\nso i can redirect to the En page or the other page</p>\n\n<p>and can i detect mobile language also ?</p>\n",
            "last_activity_date": 1387812122,
            "question_id": 8199760,
            "score": 22,
            "tags": [
                "javascript"
            ],
            "title": "how to get the browser language using javascript"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>The function that's dynamically generating the divs will have the context available to know which div to focus on, after the last <strong>div</strong> output a <strong>script</strong> with a scrollTo() to focus on the div you want.  Assign each div an ID, so you'll be able to choose it out of the set.</p>\n\n<pre><code>Response.Write \"\n&lt;script language='text/javascript'&gt;\ndocument.getElementById('div#').scrollIntoView();\n&lt;/script&gt;\n\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can't focus a div. Do you mean focus an input?</p>\n\n<p>Anyway, you can include a short script tag to focus something right in the HTML - simply put the script right after the div - or even inside the div.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Are you in control of the asp function? If yes, then that'd be the easiest place to set focus. Otherwise, you could listen to <code>DOMNodeInserted</code> event (note: browser support may vary) and set focus to <code>div</code> (or its children) based on appropriate conditions.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could use <a href=\"https://developer.mozilla.org/en/DOM/document.getElementsByClassName\" rel=\"nofollow\">getElementsByClassName</a></p>\n\n<pre><code>&lt;div tabindex=\"0\" class=\"to-focus\"&gt;TEXT&lt;/div&gt;\n&lt;script&gt; document.getElementsByClassName('to-focus')[0].focus()&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>you can make a <code>div</code> focusable if you add a <code>tabindex</code> attribute.</p>\n\n<p>see: <a href=\"http://snook.ca/archives/accessibility_and_usability/elements_focusable_with_tabindex\">http://snook.ca/archives/accessibility_and_usability/elements_focusable_with_tabindex</a> </p>\n\n<blockquote>\n  <p>The tabindex value can allow for some interesting behaviour.</p>\n  \n  <ul>\n  <li>If given a value of \"-1\", the element can't be tabbed to but focus can\n  be given to the element programmatically (using element.focus()).  </li>\n  <li>If given a value of 0, the element can be focused via the keyboard and\n  falls into the tabbing flow of the document. </li>\n  <li>Values greater than 0 create a priority level with 1 being the most important.</li>\n  </ul>\n</blockquote>\n\n<p><strong>UPDATE:</strong> added a simple demo at <a href=\"http://jsfiddle.net/roberkules/sXj9m/\">http://jsfiddle.net/roberkules/sXj9m/</a></p>\n",
                    "is_accepted": true,
                    "score": 54
                },
                {
                    "body": "<p>do you mean you want to focus the divs whenever it is generated?\ntry reasearching for these</p>\n\n<p><a href=\"http://api.jquery.com/focus/\" rel=\"nofollow\">http://api.jquery.com/focus/</a></p>\n\n<p>and</p>\n\n<p><a href=\"http://api.jquery.com/live/\" rel=\"nofollow\">http://api.jquery.com/live/</a></p>\n\n<p>and for the keypress..</p>\n\n<p><a href=\"http://api.jquery.com/keypress/\" rel=\"nofollow\">http://api.jquery.com/keypress/</a></p>\n\n<p>afaik divs and other elements can have focus of some sort like in wikis, like..</p>\n\n<p><a href=\"http://en.wikipedia.org/wiki/JavaScript#Cross-site_vulnerabilities\" rel=\"nofollow\">http://en.wikipedia.org/wiki/JavaScript#Cross-site_vulnerabilities</a></p>\n\n<p>and it'll scroll automatically there. I am just no sure how. </p>\n\n<p>as for the dynamically generated divs and tables you can use jquery's live() function</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I solve that doing the next:</p>\n\n<pre><code>&lt;div tabindex=\"0\" &gt;\n    &lt;button onclick=\"element.parentNode.focus();\"/&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have the following code snippet:</p>\n\n<pre><code>&lt;div id=\"listbox1div\" style=\"z-index:95; background:white; overflow-y:auto; overflow-x:hidden; width:240; height:314px;\"&gt;\n&lt;a id=\"focusLink2\"&gt;&lt;/a&gt;\n&lt;table id=\"ptObj_listbox1...\n</code></pre>\n\n<p>I have a page that is building <code>&lt;div&gt;</code> elements dynamically (such as above).  This <code>&lt;div&gt;</code> displays data on top of the main screen. When the page generates the divs I would like to set focus. I can not put an onLoad function on the body tag as I don't know when the divs will be generated.</p>\n\n<p>A <code>&lt;div&gt;</code> tag can not have focus set on it directly.  So I put an empty <code>&lt;a&gt;</code> tag with an id that I'm calling in the following function:</p>\n\n<pre><code>function setTableFocus(count){\n        var flinkText = 'focusLink'+count;\n       document.getElementById(flinkText).focus();\n}\n</code></pre>\n\n<p>I'm not getting any errors and I know the function is being called when the page is presented (via alerts).  However, when I using the arrow keys or enter button the entire page moves (not even the div that is presenting the data).</p>\n\n<p>When I click on to one of the table elements (using the mouse).  After that the keydown event starts working.  What I would like this to do is to present the data to the user and automatically be keyboard driven.</p>\n\n<p>Does anyone have any suggestions how I can accomplish this?</p>\n",
            "last_activity_date": 1407508119,
            "question_id": 6754275,
            "score": 20,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "setfocus"
            ],
            "title": "Set keyboard focus to a &lt;div&gt;"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Great question!</p>\n\n<p>I did some research, and it seems like you can fire a mouse event like <a href=\"http://lifescaler.com/2008/04/simulating-mouse-clicks-in-javascript/\" rel=\"nofollow\">is shown here</a>, and make it a right-click by setting the <code>button</code> or <code>which</code> property to 2 (<a href=\"http://www.quirksmode.org/js/events_properties.html#button\" rel=\"nofollow\">documented here</a>).</p>\n\n<p>Perhaps this code will work:</p>\n\n<pre><code>function rightClick(element){\n  var evt = element.ownerDocument.createEvent('MouseEvents');\n\n  var RIGHT_CLICK_BUTTON_CODE = 2; // the same for FF and IE\n\n  evt.initMouseEvent('click', true, true,\n      element.ownerDocument.defaultView, 1, 0, 0, 0, 0, false,\n      false, false, false, RIGHT_CLICK_BUTTON_CODE, null);\n\n  if (document.createEventObject){\n    // dispatch for IE\n    return element.fireEvent('onclick', evt)\n  }\n  else{\n    // dispatch for firefox + others\n    return !element.dispatchEvent(evt);\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>try this instead, reason what things didn't quite work is that the context menu is in fact bound to the oncontextmenu event.</p>\n\n<pre><code>function contextMenuClick(element){\n    var evt = element.ownerDocument.createEvent('MouseEvents');\n\n    var RIGHT_CLICK_BUTTON_CODE = 2; // the same for FF and IE\n\n    evt.initMouseEvent('contextmenu', true, true,\n         element.ownerDocument.defaultView, 1, 0, 0, 0, 0, false,\n         false, false, false, RIGHT_CLICK_BUTTON_CODE, null);\n\n    if (document.createEventObject){\n        // dispatch for IE\n       return element.fireEvent('onclick', evt)\n     }\n    else{\n       // dispatch for firefox + others\n      return !element.dispatchEvent(evt);\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Here is a more correct version if you do not care about where the context menu gets fired up</p>\n\n<pre><code>function fireContextMenu(el) {\n  var evt = el.ownerDocument.createEvent(\"HTMLEvents\")\n  evt.initEvent('contextmenu', true, true) // bubbles = true, cancelable = true\n\n  if (document.createEventObject) {\n    return el.fireEvent('oncontextmenu', evt)\n  }\n  else {\n    return !el.dispatchEvent(evt)\n  }\n}\n</code></pre>\n\n<p>If you do, we may have to use the previous one, fix up it's behaviour in IE, and populate the screenX, screenY, clientX, clientY etc appropriately</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Just for good measure, here is a bit of doco on the parameters:</p>\n\n<pre><code>var myEvt = document.createEvent('MouseEvents');\nmyEvt.initMouseEvent(\n   'click'          // event type\n   ,true           // can bubble?\n   ,true           // cancelable?\n   ,window      // the event's abstract view (should always be window)\n   ,1              // mouse click count (or event \"detail\")\n   ,100           // event's screen x coordinate\n   ,200           // event's screen y coordinate\n   ,100           // event's client x coordinate\n   ,200           // event's client y coordinate\n   ,false         // whether or not CTRL was pressed during event\n   ,false         // whether or not ALT was pressed during event\n   ,false         // whether or not SHIFT was pressed during event\n   ,false         // whether or not the meta key was pressed during event\n   ,1             // indicates which button (if any) caused the mouse event (1 = primary button)\n   ,null          // relatedTarget (only applicable for mouseover/mouseout events)\n);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I am trying this in firefox and chrome, but dispatching the contextmenu event doesn't make browser to open context menu. Event is triggered because my callback for oncontextmenu is fired, but context menu is still missing. Anybody have an idea, because I used all code samples from above?</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am writing some UI tests using Selenium and i have a JavaScript Tree control, using the Dojo toolkit. </p>\n\n<p>I have implemented a context menu for each node of the tree using the examples that Dojo provide, but I need the Selenium test to \"invoke\" the right click on the tree node, but I cannot get this to work. The tests simply do not simulate the right-click event through JavaScript, and the context menu does not show up.</p>\n\n<p>Has anyone had any experience in invoking the right click on a context menu using Dojo and Selenium? Or have any ideas as to how to do it?</p>\n\n<p>Thanks for any help that you can give.</p>\n\n<p>Mark</p>\n",
            "last_activity_date": 1410522609,
            "question_id": 433919,
            "score": 20,
            "tags": [
                "javascript",
                "selenium",
                "dojo",
                "mouseevent"
            ],
            "title": "JavaScript simulate right click through code"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Yes, read the file as a data URL and pass that data URL to the <code>src</code> of an <code>Image</code>: <a href=\"http://jsfiddle.net/pimvdb/eD2Ez/2/\">http://jsfiddle.net/pimvdb/eD2Ez/2/</a>.</p>\n\n<pre><code>var fr = new FileReader;\n\nfr.onload = function() { // file is loaded\n    var img = new Image;\n\n    img.onload = function() {\n        alert(img.width); // image is loaded; sizes are available\n    };\n\n    img.src = fr.result; // is the data URL because called with readAsDataURL\n};\n\nfr.readAsDataURL(this.files[0]); // I'm using a &lt;input type=\"file\"&gt; for demonstrating\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>Or use an object URL: <a href=\"http://jsfiddle.net/8C4UB/\" rel=\"nofollow\">http://jsfiddle.net/8C4UB/</a></p>\n\n<pre><code>var url = URL.createObjectURL(this.files[0]);\nvar img = new Image;\n\nimg.onload = function() {\n    alert(img.width);\n};\n\nimg.src = url;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have wrapped pimvdb answer in a function for general purpose in my project:</p>\n\n<pre><code>function checkImageSize(image, minW, minH, maxW, maxH, cbOK, cbKO){\n    //check whether browser fully supports all File API\n    if (window.File &amp;&amp; window.FileReader &amp;&amp; window.FileList &amp;&amp; window.Blob) {\n        var fr = new FileReader;\n        fr.onload = function() { // file is loaded\n            var img = new Image;\n            img.onload = function() { // image is loaded; sizes are available\n                if(img.width &lt; minW || img.height &lt; minH || img.width &gt; maxW || img.height &gt; maxH){  \n                    cbKO();\n                }else{\n                    cbOK();\n                }\n            };\n            img.src = fr.result; // is the data URL because called with readAsDataURL\n        };\n        fr.readAsDataURL(image.files[0]);\n    }else{\n        alert(\"Please upgrade your browser, because your current browser lacks some new features we need!\");\n    }\n}    \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I require to generate a thumbnail of an image in my Web Application. I make use of the Html 5 File API to generate the thumbnail. </p>\n\n<p>I made use of the examples from the below URL to generate the thumbnails.</p>\n\n<p><a href=\"http://www.html5rocks.com/en/tutorials/file/dndfiles/\">http://www.html5rocks.com/en/tutorials/file/dndfiles/</a></p>\n\n<p>I am successfully able to generate the thumbnails. The problem that I have is I am able to generate thumbnail only by using a static size. Is there a way to get the file dimensions from the selected file and then create the Image object?</p>\n",
            "last_activity_date": 1418667527,
            "question_id": 7460272,
            "score": 14,
            "tags": [
                "javascript",
                "thumbnails",
                "fileapi"
            ],
            "title": "Getting Image Dimensions using Javascript File API"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Defining a function with <code>whatever = function() { ... }</code> tends to create what's called a \"closure\", where the function can access local variables of the function that defines it.  When you say <code>this.fn = function() { ... }</code>, each object gets an instance of the function (and a new closure).    This is often used to create \"private\" variables in Javascript, but comes with a cost: each function (in each object) is distinct, and takes up more memory.</p>\n\n<p>When you say <code>Rectangle.prototype.fn = function() { ... }</code>, one instance of the function is shared by all <code>Rectangle</code>s.  This saves memory, and can minimize some memory leaks in browsers that handle closures badly.  If you don't need \"private\" members, or other such access to the defining function's local variables, it's usually a better idea.</p>\n",
                    "is_accepted": true,
                    "score": 23
                }
            ],
            "body": "<p>Whats the difference between defining the method \"area\" as a property of \"this\" instead of \"prototype\"?</p>\n\n<pre><code>//console.clear()\n\nfunction Rectangle(w, h) \n{\n    this.width = w;\n    this.height = h;\n    this.area = function( ) { return this.width * this.height; }\n}\n\n\nvar r = new Rectangle(2, 3);\nvar a = r.area( );\n\n//console.log(a)\n\nfunction Square(s) \n{\n    this.side= s;\n}\n\nSquare.prototype.area = function(){return this.side * this.side; }\n\nvar r = new Square(2);\nvar a = r.area( );\n\n//console.log(a)\n</code></pre>\n\n<p>In <code>JavaScript - The definitive guide</code> in the section <code>Prototypes and Inheritance</code> of <code>Chapter 9 , part 1</code>, the author says that defining the method \"area\" inside the prototype object is beneficial, but his explanation wasn't really understandable:</p>\n\n<blockquote>\n  <p>\"..the area of every single Rectangle\n  object always refers to the same\n  function (someone might change it, of\n  course, but you usually intend the\n  methods of an object to be constant).\n  It is inefficient to use regular\n  properties for methods that are\n  intended to be shared by all objects\n  of the same class (that is, all\n  objects created with the same\n  constructor).\"</p>\n</blockquote>\n\n<p>I know this question almost looks like <a href=\"http://stackoverflow.com/questions/310870/use-of-prototype-vs-this-in-javascript\">this</a> one, but it is not.</p>\n",
            "last_activity_date": 1373918201,
            "question_id": 4386708,
            "score": 14,
            "tags": [
                "javascript",
                "prototype"
            ],
            "title": "this Vs. prototype"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Ok I finally got this code working:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Demo - Covnert JSON to CSV&lt;/title&gt;\n    &lt;script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-latest.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"https://github.com/douglascrockford/JSON-js/raw/master/json2.js\"&gt;&lt;/script&gt;\n\n    &lt;script type=\"text/javascript\"&gt;\n        // JSON to CSV Converter\n        function ConvertToCSV(objArray) {\n            var array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\n            var str = '';\n\n            for (var i = 0; i &lt; array.length; i++) {\n                var line = '';\n                for (var index in array[i]) {\n                    if (line != '') line += ','\n\n                    line += array[i][index];\n                }\n\n                str += line + '\\r\\n';\n            }\n\n            return str;\n        }\n\n        // Example\n        $(document).ready(function () {\n\n            // Create Object\n            var items = [\n                  { name: \"Item 1\", color: \"Green\", size: \"X-Large\" },\n                  { name: \"Item 2\", color: \"Green\", size: \"X-Large\" },\n                  { name: \"Item 3\", color: \"Green\", size: \"X-Large\" }];\n\n            // Convert Object to JSON\n            var jsonObject = JSON.stringify(items);\n\n            // Display JSON\n            $('#json').text(jsonObject);\n\n            // Convert JSON to CSV &amp; Display CSV\n            $('#csv').text(ConvertToCSV(jsonObject));\n        });\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;\n        JSON&lt;/h1&gt;\n    &lt;pre id=\"json\"&gt;&lt;/pre&gt;\n    &lt;h1&gt;\n        CSV&lt;/h1&gt;\n    &lt;pre id=\"csv\"&gt;&lt;/pre&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Thanks alot for all the support to all the contributors.</p>\n\n<p>Praney</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Very nice solution by praneybehl, but if someone wants to save the data as a csv file and using a blob method then they can refer this.</p>\n\n<pre><code>function JSONToCSVConvertor(JSONData, ReportTitle, ShowLabel) {     \n\n//If JSONData is not an object then JSON.parse will parse the JSON string in an Object\nvar arrData = typeof JSONData != 'object' ? JSON.parse(JSONData) : JSONData;\nvar CSV = '';    \n//This condition will generate the Label/Header\nif (ShowLabel) {\n    var row = \"\";\n\n    //This loop will extract the label from 1st index of on array\n    for (var index in arrData[0]) {\n        //Now convert each value to string and comma-seprated\n        row += index + ',';\n    }\n    row = row.slice(0, -1);\n    //append Label row with line break\n    CSV += row + '\\r\\n';\n}\n\n//1st loop is to extract each row\nfor (var i = 0; i &lt; arrData.length; i++) {\n    var row = \"\";\n    //2nd loop will extract each column and convert it in string comma-seprated\n    for (var index in arrData[i]) {\n        row += '\"' + arrData[i][index] + '\",';\n    }\n    row.slice(0, row.length - 1);\n    //add a line break after each row\n    CSV += row + '\\r\\n';\n}\n\nif (CSV == '') {        \n    alert(\"Invalid data\");\n    return;\n}   \n\n//this trick will generate a temp \"a\" tag\nvar link = document.createElement(\"a\");    \nlink.id=\"lnkDwnldLnk\";\n\n//this part will append the anchor tag and remove it after automatic click\ndocument.body.appendChild(link);\n\nvar csv = CSV;  \nblob = new Blob([csv], { type: 'text/csv' }); \nvar csvUrl = window.webkitURL.createObjectURL(blob);\nvar filename = 'UserExport.csv';\n$(\"#lnkDwnldLnk\")\n.attr({\n    'download': filename,\n    'href': csvUrl\n}); \n\n$('#lnkDwnldLnk')[0].click();    \ndocument.body.removeChild(link);\n</code></pre>\n\n<p>}</p>\n\n<p><a href=\"http://www.gilgh.com/article/Create-CSV-file-using-JSON-data\" rel=\"nofollow\"> check this link for complete solution</a> </p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have a link that opens up JSON data in the broswer but unfortunately I have no clue how to read it. Is there a way to convert this data using Javascript Comma Separate (CSV) format and save it in a javascript variable. I have just started learning and have absolutely no clue about JSON, it would be great if someone could write a script for it.</p>\n\n<p>The data seems like :</p>\n\n<pre><code>{\"count\":2,\"items\":[{\"title\":\"Apple iPhone 4S Sale Cancelled in Beijing Amid Chaos (Design You Trust)\",\"description\":\"Advertise here with BSA Apple cancelled its scheduled sale of iPhone 4S in one of its stores in China\\u2019s capital Beijing on January 13. Crowds outside the store in the Sanlitun district were waiting on queues overnight. There were incidents of scuffle between shoppers and the store\\u2019s security staff when shoppers, hundreds of them, were told that the sales [...]Source : Design You TrustExplore : iPhone, iPhone 4, Phone\",\"link\":\"http:\\/\\/wik.io\\/info\\/US\\/309201303\",\"timestamp\":1326439500,\"image\":null,\"embed\":null,\"language\":null,\"user\":null,\"user_image\":null,\"user_link\":null,\"user_id\":null,\"geo\":null,\"source\":\"wikio\",\"favicon\":\"http:\\/\\/wikio.com\\/favicon.ico\",\"type\":\"blogs\",\"domain\":\"wik.io\",\"id\":\"2388575404943858468\"},{\"title\":\"Apple to halt sales of iPhone 4S in China (Fame Dubai Blog)\",\"description\":\"SHANGHAI \\u2013 Apple Inc said on Friday it will stop selling its latest iPhone in its retail stores in Beijing and Shanghai to ensure the safety of its customers and employees. Go to SourceSource : Fame Dubai BlogExplore : iPhone, iPhone 4, Phone\",\"link\":\"http:\\/\\/wik.io\\/info\\/US\\/309198933\",\"timestamp\":1326439320,\"image\":null,\"embed\":null,\"language\":null,\"user\":null,\"user_image\":null,\"user_link\":null,\"user_id\":null,\"geo\":null,\"source\":\"wikio\",\"favicon\":\"http:\\/\\/wikio.com\\/favicon.ico\",\"type\":\"blogs\",\"domain\":\"wik.io\",\"id\":\"16209851193593872066\"}]}\n</code></pre>\n\n<p>The closest I could find was : <a href=\"http://stackoverflow.com/questions/4130849/convert-json-format-to-csv-format-for-ms-excel\">Convert JSON format to CSV format (for MS Excel)</a></p>\n\n<p>But is downloads in a csv file, I store it in a variable, the whole converted data.</p>\n\n<p>Also would like to know how to change escape characters : '\\u2019' back to normal.</p>\n\n<p>Thanks in advance.</p>\n\n<hr>\n\n<p>I tried this code:</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n    &lt;title&gt;JSON to CSV&lt;/title&gt;\n    &lt;script src=\"http://code.jquery.com/jquery-1.7.1.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n\n    var json3 = {\n   \"count\": 2,\n   \"items\": [\n      {\n         \"title\": \"Apple iPhone 4S Sale Cancelled in Beijing Amid Chaos (Design You Trust)\",\n         \"description\": \"Advertise here with BSA Apple cancelled its scheduled sale of iPhone 4S in one of its stores in China\u2019s capital Beijing on January 13. Crowds outside the store in the Sanlitun district were waiting on queues overnight. There were incidents of scuffle between shoppers and the store\u2019s security staff when shoppers, hundreds of them, were told that the sales [...]Source : Design You TrustExplore : iPhone, iPhone 4, Phone\",\n         \"link\": \"http://wik.io/info/US/309201303\",\n         \"timestamp\": 1326439500,\n         \"image\": null,\n         \"embed\": null,\n         \"language\": null,\n         \"user\": null,\n         \"user_image\": null,\n         \"user_link\": null,\n         \"user_id\": null,\n         \"geo\": null,\n         \"source\": \"wikio\",\n         \"favicon\": \"http://wikio.com/favicon.ico\",\n         \"type\": \"blogs\",\n         \"domain\": \"wik.io\",\n         \"id\": \"2388575404943858468\"\n      },\n      {\n         \"title\": \"Apple to halt sales of iPhone 4S in China (Fame Dubai Blog)\",\n         \"description\": \"SHANGHAI \u2013 Apple Inc said on Friday it will stop selling its latest iPhone in its retail stores in Beijing and Shanghai to ensure the safety of its customers and employees. Go to SourceSource : Fame Dubai BlogExplore : iPhone, iPhone 4, Phone\",\n         \"link\": \"http://wik.io/info/US/309198933\",\n         \"timestamp\": 1326439320,\n         \"image\": null,\n         \"embed\": null,\n         \"language\": null,\n         \"user\": null,\n         \"user_image\": null,\n         \"user_link\": null,\n         \"user_id\": null,\n         \"geo\": null,\n         \"source\": \"wikio\",\n         \"favicon\": \"http://wikio.com/favicon.ico\",\n         \"type\": \"blogs\",\n         \"domain\": \"wik.io\",\n         \"id\": \"16209851193593872066\"\n      }\n   ]\n}\n//var objJson = JSON.parse(json3.items);\n\nDownloadJSON2CSV(json3.items);\n\n    function DownloadJSON2CSV(objArray)\n    {\n        var array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\n\n        var str = '';\n\n        for (var i = 0; i &lt; array.length; i++) {\n            var line = '';\n\n            for (var index in array[i]) {\n                line += array[i][index] + ',';\n            }\n\n            line.slice(0,line.Length-1); \n\n            str += line + '\\r\\n';\n        }\n      $('div').html(str);\n    }\n\n    &lt;/script&gt;\n\n&lt;/head&gt;\n&lt;body&gt;\n   &lt;div&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>but it doesn't seem to work.\ncan someone please help?</p>\n",
            "last_activity_date": 1406657304,
            "question_id": 8847766,
            "score": 11,
            "tags": [
                "javascript",
                "json",
                "csv"
            ],
            "title": "How to convert JSON to CSV format and store in a variable"
        },
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p>json_encode serializes some data structure in JSON format to be send across the network. Therefore all content will be of the type string. Just like when you receive some parameter from $_POST or $_GET.</p>\n\n<p>If you have to make numeric operations on the values sent, just convert them to int first (with the <a href=\"http://pt.php.net/intval\" rel=\"nofollow\">intval() function</a> in PHP or parseInt() in Javascript) and then execute the operations.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Well, PHP json_encode() returns a string.</p>\n\n<p>You can use parseFloat() or parseInt() in the js code though:</p>\n\n<pre><code>parseFloat('122.5'); // returns 122.5\nparseInt('22'); // returns 22\nparseInt('22.5'); // returns 22\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've done a very quick test :</p>\n\n<pre><code>$a = array(\n    'id' =&gt; 152,\n    'another' =&gt; 'test',\n    'ananother' =&gt; 456,\n);\n$json = json_encode($a);\necho $json;\n</code></pre>\n\n<p>This seems to be like what you describe, if I'm not mistaken ?</p>\n\n<p>And I'm getting as output :</p>\n\n<pre><code>{\"id\":152,\"another\":\"test\",\"ananother\":456}\n</code></pre>\n\n<p>So, in this case, the integers have not been converted to string.</p>\n\n<p><br>\nStill, this might be dependant of the version of PHP we are using : there have been a couple of json_encode related bugs corrected, depending on the version of PHP...</p>\n\n<p>This test has been made with PHP 5.2.6 ; I'm getting the same thing with PHP 5.2.9 and 5.3.0 ; I don't have another 5.2.x version to test with, though :-(</p>\n\n<p>Which version of PHP are you using ? Or is your test-case more complex than the example you posted ?</p>\n\n<p>Maybe one bug report on <a href=\"http://bugs.php.net/\">http://bugs.php.net/</a> could be related ? For instance, <a href=\"http://bugs.php.net/bug.php?id=40503\">Bug #40503 : json_encode integer conversion is inconsistent with PHP</a> ?</p>\n\n<p><br>\nMaybe <a href=\"http://bugs.php.net/bug.php?id=38680\">Bug #38680</a> could interest you too, btw ?</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>I'm encountering the same problem (PHP-5.2.11/Windows). I'm using this workaround</p>\n\n<pre><code>$json = preg_replace( \"/\\\"(\\d+)\\\"/\", '$1', $json );\n</code></pre>\n\n<p>which replaces all (non-negative, integer) numbers enclosed in quotes with the number itself ('\"42\"' becomes '42').</p>\n\n<p>See also <a href=\"http://www.php.net/manual/en/function.json-encode.php#86513\">this comment in PHP manual</a>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The following test confirms that changing the type to string causes json_encode() to return a numeric as a JSON string (i.e., surrounded by double quotes). Use settype(arr[\"var\"], \"integer\") or settype($arr[\"var\"], \"float\") to fix it. </p>\n\n<pre><code>&lt;?php\n\nclass testclass {\n    public $foo = 1;\n    public $bar = 2;\n    public $baz = \"Hello, world\";\n}\n\n$testarr = array( 'foo' =&gt; 1, 'bar' =&gt; 2, 'baz' =&gt; 'Hello, world');\n\n$json_obj_txt = json_encode(new testclass());\n$json_arr_txt = json_encode($testarr);\n\necho \"&lt;p&gt;Object encoding:&lt;/p&gt;&lt;pre&gt;\" . $json_obj_txt . \"&lt;/pre&gt;\";\necho \"&lt;p&gt;Array encoding:&lt;/p&gt;&lt;pre&gt;\" . $json_arr_txt . \"&lt;/pre&gt;\";\n\n// Both above return ints as ints. Type the int to a string, though, and...\nsettype($testarr[\"foo\"], \"string\");\n$json_arr_cast_txt = json_encode($testarr);\necho \"&lt;p&gt;Array encoding w/ cast:&lt;/p&gt;&lt;pre&gt;\" . $json_arr_cast_txt . \"&lt;/pre&gt;\";\n\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I also had the same problem processing data from the database. Basically the problem is that the type in the array to convert in json, is recognized by PHP as a string and not as integer.\nIn my case I made a query that returns data from a DB column counting row. The PDO driver does not recognize the column as int, but as strings. I solved by performing a cast as int in the affected column.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Note that from PHP 5.3.3 on, there's a flag for auto-converting numbers, while options parameter was added since PHP 5.3.0:</p>\n\n<pre><code>$arr = array( 'row_id' =&gt; '1', 'name' =&gt; 'George' );\necho json_encode( $arr, JSON_NUMERIC_CHECK ); // {\"row_id\":1,\"name\":\"George\"}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 122
                },
                {
                    "body": "<p>For sake of completeness (as I can't add comments yet), let me also add this detail as another answer:</p>\n\n<p>(Edit: To be read after realizing that the source data (i.e. in the OP's case, database result set) could be the problem (by returning numeric columns as strings), and json_encode() in fact was not the source of the problem)</p>\n\n<p>Manual pages of both \"<a href=\"http://us.php.net/manual/en/function.mysql-fetch-array.php\" rel=\"nofollow\">mysql_fetch_array</a>\":</p>\n\n<blockquote>\n  <p>Returns an <strong>array of strings</strong> that corresponds to the fetched row,</p>\n</blockquote>\n\n<p>... and \"<a href=\"http://us.php.net/manual/en/function.mysql-fetch-row.php\" rel=\"nofollow\">mysql_ fetch_ row</a>\":</p>\n\n<blockquote>\n  <p>Returns an numerical <strong>array of strings</strong> that corresponds to the fetched\n  row</p>\n</blockquote>\n\n<p>clearly states that; the entries in the returned array will be strings.</p>\n\n<p>(I was using the DB class in phpBB2 (yes I know, it's obsolete!), and \"sql_fetchrow()\" method of that class uses \"mysql_fetch_array()\")</p>\n\n<p>Not realizing that, I also ended up finding this question, and understanding the problem! :)</p>\n\n<p>As Pascal Martin stated above in his follow-up comments, I believe a solution that takes care of the \"incorrect type\" problem at the source (i.e. by using the \"<a href=\"http://us.php.net/manual/en/function.mysql-field-type.php\" rel=\"nofollow\">mysql_field_type()</a>\" function and doing the casting right after fetch, (or other fetch methods like \"object\"?)) would be the better in general.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>try \n<code>$arr = array('var1' =&gt; 100, 'var2' =&gt; 200);<br>\n$json = json_encode( $arr, JSON_NUMERIC_CHECK);</code></p>\n\n<p>But it just work on PHP 5.3.3. Look at this PHP json_encode change log \n<a href=\"http://php.net/manual/en/function.json-encode.php#refsect1-function.json-encode-changelog\" rel=\"nofollow\">http://php.net/manual/en/function.json-encode.php#refsect1-function.json-encode-changelog</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I, likewise was reading from a DB (PostgreSQL) and everything was a string. We loop over each row and do things with it to build up our final results array, so I used </p>\n\n<pre><code>$result_arr[] = array($db_row['name'], (int)$db_row['count']);\n</code></pre>\n\n<p>within the loop to force it to be an integer value. When I do <code>json_encode($result_arr)</code> now, it correctly formats it as a number. This allows you to control what is and is not a number coming from your database.</p>\n\n<p>EDIT:</p>\n\n<p>The <code>json_encode()</code> function also has the ability to do this on the fly using the <code>JSON_NUMERIC_CHECK</code> flag as a second argument to it. You need to be careful using it though as shown in this users example in the documentation (copied below): <a href=\"http://uk3.php.net/manual/en/function.json-encode.php#106641\">http://uk3.php.net/manual/en/function.json-encode.php#106641</a></p>\n\n<pre><code>&lt;?php\n// International phone number\njson_encode(array('phone_number' =&gt; '+33123456789'), JSON_NUMERIC_CHECK);\n?&gt;\n</code></pre>\n\n<p>And then you get this JSON:</p>\n\n<pre><code>{\"phone_number\":33123456789}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>It turns out that this is a version-specific problem. Sometimes a pull from a MySql database will maintain the correct types. In older versions, it may return everything as a string. </p>\n\n<p>I wrote about it this morning.\n<a href=\"http://shakyshane.com/blog/output-json-from-php.html\" rel=\"nofollow\">http://shakyshane.com/blog/output-json-from-php.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you are using <code>Zend_Json::encode</code> and having a similar problem, <code>Zend_Db</code> is the likely culprit. </p>\n\n<p>Have a look at this question: <a href=\"http://stackoverflow.com/questions/722573/fetching-an-integer-from-db-using-zend-framework-returns-the-value-as-a-string\">fetching an Integer from DB using Zend Framework returns the value as a string</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>$rows = array();\nwhile($r = mysql_fetch_assoc($result)) {\n    $r[\"id\"] = intval($r[\"id\"]); \n    $rows[] = $r;\n}\nprint json_encode($rows);  \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just run into the same problem and was the database returning the values as strings.</p>\n\n<p>I use this as a workaround:</p>\n\n<pre><code>$a = array(\n    'id' =&gt; $row['id'] * 1,\n    'another' =&gt; ...,\n    'ananother' =&gt; ...,\n);\n$json = json_encode($a);\n</code></pre>\n\n<p>That is multiplying the value by 1 to cast it into a number</p>\n\n<p>Hope that helps someone</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Like oli_arborum said, I think you can use a preg_replace for doing the job. Just change the command like this :\n$json = preg_replace('#:\"(\\d+)\"#', ':$1', $json);</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am having one problem with the PHP json_encode function. It encodes numbers as strings, e.g. </p>\n\n<pre><code>array('id' =&gt; 3)\n</code></pre>\n\n<p>becomes</p>\n\n<pre><code>\"{ [\"id\": \"3\", ...)\n</code></pre>\n\n<p>When js encounters these values, it interprets them as strings and numeric operations fail on them. Does anyone know some way to prevent <code>json_encode</code> from encoding numbers as strings? Thank you!</p>\n",
            "last_activity_date": 1411751976,
            "question_id": 1390983,
            "score": 56,
            "tags": [
                "php",
                "javascript",
                "json"
            ],
            "title": "PHP json_encode encoding numbers as strings"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The missing part is:</p>\n\n<pre><code>thead, tbody {\n    display: block;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/nyCKE/2/\">Demo</a></p>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<pre><code>thead {\n  position: fixed;\n  height: 10px; /* This is whatever height you want */\n}\n  tbody {\n  position: fixed;\n  margin-top: 10px; /* This has to match the height of thead */\n  height: 300px; /* This is whatever height you want */\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I saw this post about a month ago when I was having similar problems.  I needed y-axis scrolling for a table inside of a ui dialog (yes, you heard me right).  I was lucky, in that a working solution presented itself fairly quickly.  However, it wasn't long before the solution took on a life of its own, but more on that later.</p>\n\n<p>The problem with just setting the top level elements (thead, tfoot, and tbody) to display block, is that browser synchronization of the column sizes between the various components is quickly lost and everything packs to the smallest permissible size.  Setting the widths of the columns seems like the best course of action, but without setting the widths of all the internal table components to match the total of these columns, even with a fixed table layout, there is a slight divergence between the headers and body when a scroll bar is present.</p>\n\n<p>The solution for me was to set all the widths, check if a scroll bar was present, and then take the scaled widths the browser had actually decided on, and copy those to the header and footer adjusting the last column width for the size of the scroll bar.  Doing this provides some fluidity to the column widths.  If changes to the table's width occur, most major browsers will auto-scale the tbody column widths accordingly.  All that's left is to set the header and footer column widths from their respective tbody sizes.</p>\n\n<pre><code>$table.find(\"&gt; thead,&gt; tfoot\").find(\"&gt; tr:first-child\")\n    .each(function(i,e) {\n        $(e).children().each(function(i,e) {\n            if (i != column_scaled_widths.length - 1) {\n                $(e).width(column_scaled_widths[i] - ($(e).outerWidth() - $(e).width()));\n            } else {\n                $(e).width(column_scaled_widths[i] - ($(e).outerWidth() - $(e).width()) + $.position.scrollbarWidth());\n            }\n        });\n    });\n</code></pre>\n\n<p>This fiddle illustrates these notions: <a href=\"http://jsfiddle.net/borgboyone/gbkbhngq/\" rel=\"nofollow\">http://jsfiddle.net/borgboyone/gbkbhngq/</a>.</p>\n\n<p>Note that a table wrapper or additional tables are not needed for y-axis scrolling alone.  (X-axis scrolling does require a wrapping table.)  Synchronization between the column sizes for the body and header will still be lost if the minimum pack size for either the header or body columns is encountered.  A mechanism for minimum widths should be provided if resizing is an option or small table widths are expected.</p>\n\n<p>The ultimate culmination from this starting point is fully realized here: <a href=\"http://borgboyone.github.io/jquery-ui-table/\" rel=\"nofollow\">http://borgboyone.github.io/jquery-ui-table/</a></p>\n\n<p>A.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>As specified <a href=\"http://www.w3.org/TR/html401/struct/tables.html#idx-row_group\">here</a>:</p>\n\n<blockquote>\n  <p>Table rows may be grouped into a table head, table foot, and one or\n  more table body sections, using the THEAD, TFOOT and TBODY elements,\n  respectively. This division enables user agents to support scrolling\n  of table bodies independently of the table head and foot.</p>\n</blockquote>\n\n<p>I created the <a href=\"http://jsfiddle.net/nyCKE/1/\">following example</a>, but it doesn't work.</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;table&gt;\n    &lt;thead&gt;\n        &lt;tr&gt;\n            &lt;td&gt;Problem&lt;/td&gt;\n            &lt;td&gt;Solution&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n    &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>JS:</p>\n\n<pre><code>$(function() {\n    for (var i = 0; i &lt; 20; i++) {\n        var a = Math.floor(10 * Math.random());\n        var b = Math.floor(10 * Math.random());\n        var row = $(\"&lt;tr&gt;\").append($(\"&lt;td&gt;\").html(a + \" + \" + b + \" =\"))\n                           .append($(\"&lt;td&gt;\").html(a + b));\n        $(\"tbody\").append(row);\n    }\n});\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>table {\n    background-color: #aaa;\n}\ntbody {\n    background-color: #ddd;\n    height: 100px;\n    overflow: auto;\n}\ntd {\n    padding: 3px 10px;\n}\n</code></pre>\n",
            "last_activity_date": 1417047453,
            "question_id": 8321849,
            "score": 43,
            "tags": [
                "javascript",
                "html",
                "css"
            ],
            "title": "How to scroll table&#39;s &quot;tbody&quot; independent of &quot;thead&quot;?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The non-greedy regex modifiers are like their greedy counter-parts but with a <code>?</code> immediately following them:</p>\n\n<pre><code>*  - zero or more\n*? - zero or more (non-greedy)\n+  - one or more\n+? - one or more (non-greedy)\n?  - zero or one\n?? - zero or one (non-greedy)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 95
                },
                {
                    "body": "<p>I believe it would be like this</p>\n\n<pre><code>takedata.match(/(\\[.+\\])/g);\n</code></pre>\n\n<p>the <code>g</code> at the end means global, so it doesn't stop at the first match.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You are right that greediness is an issue:</p>\n\n<pre><code>--A--Z--A--Z--\n  ^^^^^^^^^^\n     A.*Z\n</code></pre>\n\n<p>If you want to match both <code>A--Z</code>, you'd have to use <code>A.*?Z</code> (the <code>?</code> makes the <code>*</code> \"reluctant\", or lazy).</p>\n\n<p>There are sometimes better ways to do this, though, e.g.</p>\n\n<pre><code>A[^Z]*+Z\n</code></pre>\n\n<p>This uses negated character class and possessive quantifier, to reduce backtracking, and is likely to be more efficient.</p>\n\n<p>In your case, the regex would be:</p>\n\n<pre><code>/(\\[[^\\]]++\\])/\n</code></pre>\n\n<p><strong>Unfortunately</strong> Javascript regex doesn't support possessive quantifier, so you'd just have to do with:</p>\n\n<pre><code>/(\\[[^\\]]+\\])/\n</code></pre>\n\n<h3>See also</h3>\n\n<ul>\n<li><a href=\"http://www.regular-expressions.info/repeat.html\">regular-expressions.info/Repetition</a>\n<ul>\n<li>See: <em>An Alternative to Laziness</em>\n<ul>\n<li><a href=\"http://www.regular-expressions.info/possessive.html\">Possessive quantifiers</a></li>\n</ul></li>\n<li><a href=\"http://www.regular-expressions.info/refflavors.html\">Flavors comparison</a></li>\n</ul></li>\n</ul>\n\n<hr>\n\n<h2>Quick summary</h2>\n\n<pre><code>*   Zero or more, greedy\n*?  Zero or more, reluctant\n*+  Zero or more, possessive\n\n+   One or more, greedy\n+?  One or more, reluctant\n++  One or more, possessive\n\n?   Zero or one, greedy\n??  Zero or one, reluctant\n?+  Zero or one, possessive\n</code></pre>\n\n<p>Note that the reluctant and possessive quantifiers are also applicable to the finite repetition <code>{n,m}</code> constructs.</p>\n\n<p>Examples in Java:</p>\n\n<pre><code>System.out.println(\"aAoZbAoZc\".replaceAll(\"A.*Z\", \"!\"));  // prints \"a!c\"\nSystem.out.println(\"aAoZbAoZc\".replaceAll(\"A.*?Z\", \"!\")); // prints \"a!b!c\"\n\nSystem.out.println(\"xxxxxx\".replaceAll(\"x{3,5}\", \"Y\"));  // prints \"Yx\"\nSystem.out.println(\"xxxxxx\".replaceAll(\"x{3,5}?\", \"Y\")); // prints \"YY\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                }
            ],
            "body": "<p>I have made a Work with JQ. My Work is a string width a special character block begin and end of string. I want take the text in that special characters, i used regular expression for find in string, but how to make JQ find multi result when have two special character or more.</p>\n\n<p>My html here;</p>\n\n<pre><code>&lt;div id=\"container\"&gt;\n    &lt;div id=\"textcontainer\"&gt;\n     Cu\u1ed9c chi\u1ebfn ph\u00e1p l\u00fd gi\u1eefa [|c\u01a1 th\u1eed|nghi\u1ec7m|] th\u1ecb tr\u01b0\u1eddng [|test2|\u0111\u00e2y l\u00e0 test l\u1ea7n 2|] ch\u1ee9ng kho\u00e1n [|M\u1ef9|day la nuoc my|] v\u00e0 ng\u00e2n h\u00e0ng \u0111\u1ea7u t\u01b0 quy\u1ec1n l\u1ef1c nh\u1ea5t Ph\u1ed1 Wall m\u1edbi ch\u1ec9 b\u1eaft \u0111\u1ea7u.\n &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>and my JQ</p>\n\n<pre><code>$(document).ready(function() {\n\n var takedata = $(\"#textcontainer\").text();\n var test = 'abcd adddb';\n var filterdata = takedata.match(/(\\[.+\\])/);\n\n alert(filterdata); \n\n//end write js \n});\n</code></pre>\n\n<p>my result is: <strong>[|c\u01a1 th\u1eed|nghi\u1ec7m|] th\u1ecb tr\u01b0\u1eddng [|test2|\u0111\u00e2y l\u00e0 test l\u1ea7n 2|] ch\u1ee9ng kho\u00e1n [|M\u1ef9|day la nuoc my|]</strong> . but this is'nt the result i want :(. How to get [text] for times 1 and [demo] for times 2 ?. pls help me !. thankyou :)</p>\n\n<hr>\n\n<p>hi everyone!\ni've just done my work after searching info on internet ^^. i make code like this:</p>\n\n<pre><code>var filterdata = takedata.match(/(\\[.*?\\])/g);\n</code></pre>\n\n<ul>\n<li>my result is : <strong>[|c\u01a1 th\u1eed|nghi\u1ec7m|],[|test2|\u0111\u00e2y l\u00e0 test l\u1ea7n 2|]</strong>\nthis is right!. but i don't realy understand this. Can you answer my why?</li>\n</ul>\n",
            "last_activity_date": 1386182305,
            "question_id": 2824302,
            "score": 41,
            "tags": [
                "javascript",
                "regex",
                "filter",
                "expression",
                "regex-greedy"
            ],
            "title": "how to make Regular expression into non-greedy?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>In Javascript you can do that by using the typeof function</p>\n\n<pre><code>function foo(bar){\n  alert(typeof(bar));\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Use <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/Special/typeof\"><code>typeof</code></a>:</p>\n\n<pre><code>&gt; typeof \"foo\"\n\"string\"\n&gt; typeof true\n\"boolean\"\n&gt; typeof 42\n\"number\"\n</code></pre>\n\n<p>So you can do:</p>\n\n<pre><code>if(typeof bar === 'number') {\n   //whatever\n}\n</code></pre>\n\n<p>Be careful though if you define these primitives with their object wrappers (which you should never do, use literals where ever possible):</p>\n\n<pre><code>&gt; typeof new Boolean(false)\n\"object\"\n&gt; typeof new String(\"foo\")\n\"object\"\n&gt; typeof new Number(42)\n\"object\"\n</code></pre>\n\n<p>The type of an array is still <code>object</code>. Here you really need the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/Special_Operators/instanceof_Operator\"><code>instanceof</code></a> operator.</p>\n\n<p><strong>Update:</strong></p>\n\n<p>Another interesting way is to examine the output of <code>Object.prototype.toString</code>:</p>\n\n<pre><code>&gt; Object.prototype.toString.call([1,2,3])\n\"[object Array]\"\n&gt; Object.prototype.toString.call(\"foo bar\")\n\"[object String]\"\n&gt; Object.prototype.toString.call(45)\n\"[object Number]\"\n&gt; Object.prototype.toString.call(false)\n\"[object Boolean]\"\n&gt; Object.prototype.toString.call(new String(\"foo bar\"))\n\"[object String]\"\n</code></pre>\n\n<p>With that you would not have to distinguish between primitive values and objects.</p>\n",
                    "is_accepted": true,
                    "score": 69
                },
                {
                    "body": "<p>typeof is only good for returning the \"primitive\" types, number, boolean, object, string. You can also use instanceof to test if an object is of a specific type.</p>\n\n<pre><code>function MyObj(prop) {\n  this.prop = prop;\n}\n\nvar obj = new MyObj(10);\n\nconsole.log(obj instanceof MyObj &amp;&amp; obj instanceof Object); // outputs true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>Using <code>type</code>:</p>\n\n<pre><code>// Numbers\ntypeof 37                === 'number';\ntypeof 3.14              === 'number';\ntypeof Math.LN2          === 'number';\ntypeof Infinity          === 'number';\ntypeof NaN               === 'number'; // Despite being \"Not-A-Number\"\ntypeof Number(1)         === 'number'; // but never use this form!\n\n// Strings\ntypeof \"\"                === 'string';\ntypeof \"bla\"             === 'string';\ntypeof (typeof 1)        === 'string'; // typeof always return a string\ntypeof String(\"abc\")     === 'string'; // but never use this form!\n\n// Booleans\ntypeof true              === 'boolean';\ntypeof false             === 'boolean';\ntypeof Boolean(true)     === 'boolean'; // but never use this form!\n\n// Undefined\ntypeof undefined         === 'undefined';\ntypeof blabla            === 'undefined'; // an undefined variable\n\n// Objects\ntypeof {a:1}             === 'object';\ntypeof [1, 2, 4]         === 'object'; // use Array.isArray or Object.prototype.toString.call to differentiate regular objects from arrays\ntypeof new Date()        === 'object';\ntypeof new Boolean(true) === 'object'; // this is confusing. Don't use!\ntypeof new Number(1)     === 'object'; // this is confusing. Don't use!\ntypeof new String(\"abc\") === 'object';  // this is confusing. Don't use!\n\n// Functions\ntypeof function(){}      === 'function';\ntypeof Math.sin          === 'function';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>To be a little more ECMAScript-5.1-precise than the other answers (some might say pedantic):</p>\n\n<p>In JavaScript, variables (and properties) don't have types: values do. Further, there are only 6 types of values: Undefined, Null, Boolean, String, Number, and Object. (Technically, there are also 7 \"specification types\", but you can't store values of those types as properties of objects or values of variables--they are only used within the spec itself, to define how the language works. The values you can explicitly manipulate are of only the 6 types I listed.)</p>\n\n<p>The spec uses the notation \"Type(x)\" when it wants to talk about \"the type of x\". This is only a notation used within the spec: it is not a feature of the language.</p>\n\n<p>As other answers make clear, in practice you may well want to know more than the type of a value--particularly when the type is Object. Regardless, and for completeness, here is a simple JavaScript implementation of Type(x) as it is used in the spec:</p>\n\n<pre><code>function Type(x) { \n    if (x === null) {\n        return 'Null';\n    }\n\n    switch (typeof x) {\n    case 'undefined': return 'Undefined';\n    case 'boolean'  : return 'Boolean';\n    case 'number'   : return 'Number';\n    case 'string'   : return 'String';\n    default         : return 'Object';\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>In Java, you can use <code>instanceOf</code> or <code>getClass()</code> on a variable to find out its type.</p>\n\n<p>How do I find out a variable's type in JavaScript which isn't strongly-typed?</p>\n\n<p>For example, how do I know if the <code>bar</code> is a <code>Boolean</code> or a <code>Number</code>, or a <code>String</code>?</p>\n\n<pre><code>function foo(bar) {\n    // what do I do here?\n}\n</code></pre>\n",
            "last_activity_date": 1395239563,
            "question_id": 4456336,
            "score": 40,
            "tags": [
                "javascript"
            ],
            "title": "Finding Variable Type in JavaScript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You're not parsing a string, you're parsing an already-parsed object :)</p>\n\n<pre><code>var obj1 = JSON.parse('{\"creditBalance\":0,...,\"starStatus\":false}');\n//                    ^                                          ^\n//                    if you want to parse, the input should be a string \n\nvar obj2 = {\"creditBalance\":0,...,\"starStatus\":false};\n// or just use it directly.\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 95
                },
                {
                    "body": "<p>If your JSON string from server is correct than, \nCheck the following three points,</p>\n\n<ol>\n<li>Check the URL of GetJSON or whatever Ajax call is right one</li>\n<li>Make sure the line, dataType : \"json\" in your ajax call</li>\n<li>Check you properly loaded the jQuery file.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can make sure that the object in question is stringified before passing it to parse function by simply using  <code>JSON.stringify()</code> .</p>\n\n<p>Updated You line below,</p>\n\n<p><code>JSON.parse</code>(<code>JSON.stringify</code>({\"balance\":0,\"count\":0,\"time\":1323973673061,\"firstname\":\"howard\",\"userId\":5383,\"localid\":1,\"freeExpiration\":0,\"status\":false}));</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I get this error:</p>\n\n<blockquote>\n  <p>JSON.parse: unexpected character</p>\n</blockquote>\n\n<p>when I run this statement in firebug:</p>\n\n<pre><code>JSON.parse({\"balance\":0,\"count\":0,\"time\":1323973673061,\"firstname\":\"howard\",\"userId\":5383,\"localid\":1,\"freeExpiration\":0,\"status\":false});\n</code></pre>\n\n<p>Why is it so? The JSON string seems correct to me and I also tested it using JSHint. The passed object in the above case is a server response with content type set to <code>application/json</code></p>\n\n<p>thanks.</p>\n",
            "last_activity_date": 1424341801,
            "question_id": 8524933,
            "score": 39,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "JSON.parse unexpected character error"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can't, Print Preview is a feature of a browser, and therefore should be protected from being called by JavaScript as it would be a security risk.</p>\n\n<p>That's why your example uses Active X, which bypasses the JavaScript security issues.</p>\n\n<p>So instead use the print stylesheet that you already should have and show it for media=screen,print instead of media=print.</p>\n\n<p>Read <a href=\"http://www.alistapart.com/articles/goingtoprint/\">Alist Apart: Going to Print</a> for a good article on the subject of print stylesheets.</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>I think the best that's possible in cross-browser JavaScript is <code>window.print()</code>, which (in Firefox 3, for me) brings up the 'print' dialog and not the print preview dialog.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>It can be done using javascript.\nSay your html/aspx code goes this way:</p>\n\n<pre><code>&lt;span&gt;Main heading&lt;/span&gt;\n&lt;asp:Label ID=\"lbl1\" runat=\"server\" Text=\"Contents\"&gt;&lt;/asp:Label&gt;\n&lt;asp:Label Text=\"Contractor Name\" ID=\"lblCont\" runat=\"server\"&gt;&lt;/asp:Label&gt;\n&lt;div id=\"forPrintPreview\"&gt;\n  &lt;asp:Label Text=\"Company Name\" runat=\"server\"&gt;&lt;/asp:Label&gt;\n  &lt;asp:GridView runat=\"server\"&gt;\n\n      //GridView Content goes here\n\n  &lt;/asp:GridView\n&lt;/div&gt;\n\n&lt;input type=\"button\" onclick=\"PrintPreview();\" value=\"Print Preview\" /&gt;\n</code></pre>\n\n<p>Here on click of \"Print Preview\" button we will open a window with data for print.\nObserve that 'forPrintPreview' is the id of a div.\nThe function for Print preview goes this way:</p>\n\n<pre><code>function PrintPreview() {\n var Contractor= $('span[id*=\"lblCont\"]').html();\n printWindow = window.open(\"\", \"\", \"location=1,status=1,scrollbars=1,width=650,height=600\");\n printWindow.document.write('&lt;html&gt;&lt;head&gt;');\n printWindow.document.write('&lt;style type=\"text/css\"&gt;@media print{.no-print, .no-print *{display: none !important;}');\n printWindow.document.write('&lt;/head&gt;&lt;body&gt;');\n printWindow.document.write('&lt;div style=\"width:100%;text-align:right\"&gt;');\n\n  //Print and cancel button\n printWindow.document.write('&lt;input type=\"button\" id=\"btnPrint\" value=\"Print\" class=\"no-print\" style=\"width:100px\" onclick=\"window.print()\" /&gt;');\n printWindow.document.write('&lt;input type=\"button\" id=\"btnCancel\" value=\"Cancel\" class=\"no-print\"  style=\"width:100px\" onclick=\"window.close()\" /&gt;');\n\n printWindow.document.write('&lt;/div&gt;');\n\n //You can include any data this way.\n printWindow.document.write('&lt;table&gt;&lt;tr&gt;&lt;td&gt;Contractor name:'+ Contractor +'&lt;/td&gt;&lt;/tr&gt;you can include any info here&lt;/table');\n\n printWindow.document.write(document.getElementById('forPrintPreview').innerHTML);\n //here 'forPrintPreview' is the id of the 'div' in current page(aspx).\n printWindow.document.write('&lt;/body&gt;&lt;/html&gt;');\n printWindow.document.close();\n printWindow.focus();\n}\n</code></pre>\n\n<p>Observe that buttons 'print' and 'cancel' has the css class 'no-print', So these buttons will not appear in the print.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a page that is supposed to launch the Print Preview page onload.</p>\n\n<p>I found this:</p>\n\n<pre><code>var OLECMDID = 7;\n/* OLECMDID values:\n* 6 - print\n* 7 - print preview\n* 1 - open window\n* 4 - Save As\n*/\nvar PROMPT = 1; // 2 DONTPROMPTUSER\nvar WebBrowser = '&lt;OBJECT ID=\"WebBrowser1\" WIDTH=0 HEIGHT=0 CLASSID=\"CLSID:8856F961-340A-11D0-A96B-00C04FD705A2\"&gt;&lt;/OBJECT&gt;';\ndocument.body.insertAdjacentHTML('beforeEnd', WebBrowser);\nWebBrowser1.ExecWB(OLECMDID, PROMPT);\nWebBrowser1.outerHTML = \"\";\n</code></pre>\n\n<p>But...</p>\n\n<ol>\n<li>it does not work in FireFox.</li>\n<li>it's kind of ugly.</li>\n</ol>\n\n<p>Is there a better way for IE or a way that works for FireFox?</p>\n",
            "last_activity_date": 1400649565,
            "question_id": 230205,
            "score": 34,
            "tags": [
                "javascript",
                "printing"
            ],
            "title": "How can Print Preview be called from Javascript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You can give the following a spin.  This also gives you the option to explicitly set an object's ID in its constructor or elsewhere.</p>\n\n<pre><code>(function() {\n    if ( typeof Object.prototype.uniqueId == \"undefined\" ) {\n        var id = 0;\n        Object.prototype.uniqueId = function() {\n            if ( typeof this.__uniqueid == \"undefined\" ) {\n                this.__uniqueid = ++id;\n            }\n            return this.__uniqueid;\n        };\n    }\n})();\n\nvar obj1 = {};\nvar obj2 = new Object();\n\nconsole.log(obj1.uniqueId());\nconsole.log(obj2.uniqueId());\nconsole.log([].uniqueId());\nconsole.log({}.uniqueId());\nconsole.log(/./.uniqueId());\nconsole.log((function() {}).uniqueId());\n</code></pre>\n\n<p>Take care to make sure that whatever member you use to internally store the unique ID doesn't collide with another automatically created member name.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>jQuery code uses it's own <code>data()</code> method as such id.</p>\n\n<pre><code>var id = $.data(object);\n</code></pre>\n\n<p>At the backstage method <code>data</code> creates a very special field in <code>object</code> called <code>\"jQuery\" + now()</code> put there next id of a stream of unique ids like</p>\n\n<pre><code>id = elem[ expando ] = ++uuid;\n</code></pre>\n\n<p>I'd suggest you use the same method as John Resig obviously knows all there is about JavaScript and his method is based on all that knowledge.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've used code like this, which will cause Objects to stringify with unique strings:</p>\n\n<pre><code>Object.prototype.__defineGetter__('__id__', function () {\n    var gid = 0;\n    return function(){\n        var id = gid++;\n        this.__proto__ = {\n             __proto__: this.__proto__,\n             get __id__(){ return id }\n        };\n        return id;\n    }\n}.call() );\n\nObject.prototype.toString = function () {\n    return '[Object ' + this.__id__ + ']';\n};\n</code></pre>\n\n<p>the <code>__proto__</code> bits are to keep the <code>__id__</code> getter from showing up in the object.  this has been only tested in firefox. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Latest browsers provide a cleaner method for extending Object.prototype. This code will make the property hidden from property enumeration (for p in o)</p>\n\n<p>For the browsers that implement defineProperty, you can implement uniqueId property like this:</p>\n\n<pre><code>(function() {\n    var id_counter = 1;\n    Object.defineProperty(Object.prototype, \"__uniqueId\", {\n        writable: true\n    });\n    Object.defineProperty(Object.prototype, \"uniqueId\", {\n        get: function() {\n            if (this.__uniqueId == undefined)\n                this.__uniqueId = id_counter++;\n            return this.__uniqueId;\n        }\n    });\n}());\n</code></pre>\n\n<p>For details, see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/defineProperty\">https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/defineProperty</a></p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>Actually, you don't need to modify the <code>object</code> prototype and add a function there. The following should work well for your purpose.</p>\n\n<pre><code>var __next_objid=1;\nfunction objectId(obj) {\n    if (obj==null) return null;\n    if (obj.__obj_id==null) obj.__obj_id=__next_objid++;\n    return obj.__obj_id;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>For browsers implementing the <code>Object.defineProperty()</code> method, the code below generates and returns a function that you can bind to any object you own.</p>\n\n<p>This approach has the advantage of not extending <code>Object.prototype</code>.</p>\n\n<p>The code works by checking if the given object has a <code>__objectID__</code> property, and by defining it as a hidden (non-enumerable) read-only property if not.</p>\n\n<p>So it is safe against any attempt to change or redefine the read-only <code>obj.__objectID__</code> property after it has been defined, and consistently throws a nice error instead of silently fail.</p>\n\n<p>Finally, in the quite extreme case where some other code would already have defined <code>__objectID__</code> on a given object, this value would simply be returned.</p>\n\n<pre><code>var getObjectID = (function () {\n\n    var id = 0;    // Private ID counter\n\n    return function (obj) {\n\n         if(obj.hasOwnProperty(\"__objectID__\")) {\n             return obj.__objectID__;\n\n         } else {\n\n             ++id;\n             Object.defineProperty(obj, \"__objectID__\", {\n\n                 /*\n                  * Explicitly sets these two attribute values to false,\n                  * although they are false by default.\n                  */\n                 \"configurable\" : false,\n                 \"enumerable\" :   false,\n\n                 /* \n                  * This closure guarantees that different objects\n                  * will not share the same id variable.\n                  */\n                 \"get\" : (function (__objectID__) {\n                     return function () { return __objectID__; };\n                  })(id),\n\n                 \"set\" : function () {\n                     throw new Error(\"Sorry, but 'obj.__objectID__' is read-only!\");\n                 }\n             });\n\n             return obj.__objectID__;\n\n         }\n    };\n\n})();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I need to do some experiment and I need to know some kind of unique identifier for objects in javascript, so I can see if they are the same. I don't want to use equality operators, I need something like the id() function in python. </p>\n\n<p>Does something like this exist ?</p>\n",
            "last_activity_date": 1404099088,
            "question_id": 1997661,
            "score": 33,
            "tags": [
                "javascript"
            ],
            "title": "unique object identifier in javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Use <a href=\"https://developer.mozilla.org/en-US/docs/DOM/window.onresize\">window.onresize</a>:</p>\n\n<pre><code>function updateWindow(){\n    x = w.innerWidth || e.clientWidth || g.clientWidth;\n    y = w.innerHeight|| e.clientHeight|| g.clientHeight;\n\n    svg.attr(\"width\", x).attr(\"height\", y);\n}\nwindow.onresize = updateWindow;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/Zb85u/1/\">http://jsfiddle.net/Zb85u/1/</a></p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>IMO it's better to use select() and on() since that way you can have multiple resize event handlers... just don't get too crazy</p>\n\n<pre><code>d3.select(window).on('resize', resize); \n\nfunction resize() {\n    // update width\n    width = parseInt(d3.select('#chart').style('width'), 10);\n    width = width - margin.left - margin.right;\n\n    // resize the chart\n    x.range([0, width]);\n    d3.select(chart.node().parentNode)\n        .style('height', (y.rangeExtent()[1] + margin.top + margin.bottom) + 'px')\n        .style('width', (width + margin.left + margin.right) + 'px');\n\n    chart.selectAll('rect.background')\n        .attr('width', width);\n\n    chart.selectAll('rect.percent')\n        .attr('width', function(d) { return x(d.percent); });\n\n    // update median ticks\n    var median = d3.median(chart.selectAll('.bar').data(), \n        function(d) { return d.percent; });\n\n    chart.selectAll('line.median')\n        .attr('x1', x(median))\n        .attr('x2', x(median));\n\n\n    // update axes\n    chart.select('.x.axis.top').call(xAxis.orient('top'));\n    chart.select('.x.axis.bottom').call(xAxis.orient('bottom'));\n\n}\n</code></pre>\n\n<p><a href=\"http://eyeseast.github.io/visible-data/2013/08/28/responsive-charts-with-d3/\">http://eyeseast.github.io/visible-data/2013/08/28/responsive-charts-with-d3/</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>It's kind of ugly if the resizing code is almost as long as the code for building the graph in first place. So instead of resizing every element of the existing chart, why not simply reloading it? Here is how it worked for me:</p>\n\n<pre><code>function data_display(data){\n   e = document.getElementById('data-div');\n   var w = e.clientWidth;\n   // remove old svg if any -- otherwise resizing adds a second one\n   d3.select('svg').remove();\n   // create canvas\n   var svg = d3.select('#data-div').append('svg')\n                                   .attr('height', 100)\n                                   .attr('width', w);\n   // now add lots of beautiful elements to your graph\n   // ...\n}\n\ndata_display(my_data); // call on page load\n\nwindow.addEventListener('resize', function(event){\n    data_display(my_data); // just call it again...\n}\n</code></pre>\n\n<p>The crucial line is <code>d3.select('svg').remove();</code>. Otherwise each resizing will add another SVG element below the previous one. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In force layouts simply setting the 'height' and 'width' attributes will not work to re-center/move the plot into the svg container. However, there's a very simple answer that works for Force Layouts found <a href=\"http://bl.ocks.org/mbostock/3355967\" rel=\"nofollow\">here</a>. In summary: </p>\n\n<p>Use same (any) eventing you like.</p>\n\n<pre><code>window.on('resize', resize);\n</code></pre>\n\n<p>Then assuming you have svg &amp; force variables: </p>\n\n<pre><code>var svg = /* D3 Code */;\nvar force = /* D3 Code */;    \n\nfunction resize(e){\n    // get width/height with container selector (body also works)\n    // or use other method of calculating desired values\n    var width = $('#myselector').width(); \n    var height = $('#myselector').height(); \n\n    // set attrs and 'resume' force \n    svg.attr('width', width);\n    svg.attr('height', height);\n    force.size([width, height]).resume();\n}\n</code></pre>\n\n<p>In this way, you don't re-render the graph entirely, we set the attributes and d3 re-calculates things as necessary. This at least works when you use a point of gravity. I'm not sure if that's a prerequisite for this solution. Can anyone confirm or deny ? </p>\n\n<p>Cheers, g</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Look for 'responsive SVG' it is pretty simple to make a SVG responsive and you don't have to worry about sizes any more. </p>\n\n<p>Here is how I did it: </p>\n\n<pre><code>d3.select(\"div#chartId\")\n   .append(\"div\")\n   .classed(\"svg-container\", true) //container class to make it responsive\n   .append(\"svg\")\n   //responsive SVG needs these 2 attributes and no width and height attr\n   .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n   .attr(\"viewBox\", \"0 0 600 400\")\n   //class to make it responsive\n   .classed(\"svg-content-responsive\", true); \n</code></pre>\n\n<p>The CSS code:</p>\n\n<pre><code>.svg-container {\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    padding-bottom: 100%; /* aspect ratio */\n    vertical-align: top;\n    overflow: hidden;\n}\n.svg-content-responsive {\n    display: inline-block;\n    position: absolute;\n    top: 10px;\n    left: 0;\n}\n</code></pre>\n\n<p>More info / tutorials: </p>\n\n<p><a href=\"http://demosthenes.info/blog/744/Make-SVG-Responsive\">http://demosthenes.info/blog/744/Make-SVG-Responsive</a></p>\n\n<p><a href=\"http://soqr.fr/testsvg/embed-svg-liquid-layout-responsive-web-design.php\">http://soqr.fr/testsvg/embed-svg-liquid-layout-responsive-web-design.php</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I'm drawing a scatterplot with d3.js. With the help of this question :<br>\n<a href=\"http://stackoverflow.com/questions/3437786/how-to-get-web-page-size-browser-window-size-screen-size-in-a-cross-browser-wa\">how to get web page size, browser window size, screen size in a cross-browser way?</a></p>\n\n<p>I'm using this answer :</p>\n\n<pre><code>var w = window,\n    d = document,\n    e = d.documentElement,\n    g = d.getElementsByTagName('body')[0],\n    x = w.innerWidth || e.clientWidth || g.clientWidth,\n    y = w.innerHeight|| e.clientHeight|| g.clientHeight;\n</code></pre>\n\n<p>So I'm able to fit my plot to the user's window like this :</p>\n\n<pre><code>var svg = d3.select(\"body\").append(\"svg\")\n        .attr(\"width\", x)\n        .attr(\"height\", y)\n        .append(\"g\");\n</code></pre>\n\n<p>Now I'd like that something takes care of resizing the plot when the user resize the window.</p>\n\n<p>PS : I'm not using jQuery in my code.</p>\n",
            "last_activity_date": 1411401351,
            "question_id": 16265123,
            "score": 29,
            "tags": [
                "javascript",
                "d3.js"
            ],
            "title": "Resize svg when window is resized in d3.js"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>The <code>location=1</code> part should enable an editable location bar.</p>\n\n<p>As a side note, you can drop the <code>language=\"javascript\"</code> attribute from your script as it is now deprecated.</p>\n\n<p><strong>update</strong>:</p>\n\n<p>Setting the <code>statusbar=1</code> to the correct parameter <code>status=1</code> works for me</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I believe currently there is no javascript way to force chrome to open as a new window in tab mode. A ticket has been submitted as in here <a href=\"http://code.google.com/p/chromium/issues/detail?id=5348\" rel=\"nofollow\">Pop-ups to show as tab by default</a>. But the user can click the chrome icon on the top left corner and select \"Show as tab\", the address bar then becomes editable.</p>\n\n<p>A similar question asked in <a href=\"http://stackoverflow.com/questions/726761/javascript-open-in-a-new-window-not-tab\">javascript open in a new window not tab</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>you have do this through a background page.</p>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>This worked for me:</p>\n\n<pre><code>newwindow = window.open(url, \"_blank\", \"resizable=yes, scrollbars=yes, titlebar=yes, width=800, height=900, top=10, left=10\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Don't put a name for target window when you use window.open(\"\",\"NAME\",....)</p>\n\n<p>If you do it you can only open it once. Use _blank, etc instead of.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>menubar must no, or 0, for Google Chrome to open in new window instead of tab.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The other answers are outdated. The behavior of Chrome for <code>window.open</code> depends on where it is called from. See also <a href=\"http://stackoverflow.com/questions/11999837/force-window-open-to-create-new-tab-in-chrome\">this topic</a>.</p>\n\n<p>When <code>window.open</code> is called from a handler that was triggered though a user action (e.g. onclick event), it will behave similar as <code>&lt;a target=\"_blank\"&gt;</code>, which by default opens in a new tab. However if <code>window.open</code> is called elsewhere, Chrome ignores other arguments and always opens a new window with a non-editable address bar.</p>\n\n<p>This looks like some kind of security measure, although the rationale behind it is not completely clear.</p>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>I have been working on a web app and for part of it I need to open a new window. I have this working on all browsers, my sticking point is with Google Chrome.</p>\n\n<p>Chrome seems to ignore the window features which is causing me issues, the thing I'm struggling with is I need the address bar to be editable within the new window. FF, IE, Safari and Opera do this fine, Chrome does not.</p>\n\n<p>My Code: </p>\n\n<pre><code>&lt;script language=\"javascript\" type=\"text/javascript\"&gt;\n&lt;!--\nfunction popitup(url) {\n newwindow=window.open(url,'name','toolbar=1,scrollbars=1,location=1,statusbar=0,menubar=1,resizable=1,width=800,height=600');\n if (window.focus) {newwindow.focus()}\n return false;\n}\n\n// --&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>Any help would be gratefully received! Thanks in advance :)</p>\n",
            "last_activity_date": 1408531904,
            "question_id": 2572333,
            "score": 29,
            "tags": [
                "javascript",
                "window",
                "google-chrome"
            ],
            "title": "Google Chrome &quot;window.open&quot; workaround?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>This protocol is new and means <strong>Distributed Data Protocol</strong></p>\n\n<p>It's implemented in the <a href=\"https://github.com/meteor/meteor/tree/master/packages/livedata\">livedata package</a>. </p>\n\n<p><a href=\"http://stackoverflow.com/questions/10102869/how-do-i-get-a-live-stream-of-deltas-from-meteor-collection-for-use-outside-of/10120571#10120571\">Here is a related question</a> answered by team leader. </p>\n\n<p>Here's <a href=\"https://github.com/meteor/meteor/blob/master/packages/livedata/DDP.md\">the DDP doc</a>.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>They just added a small <a href=\"https://github.com/meteor/meteor/tree/devel/examples/unfinished/python-ddp-client\" rel=\"nofollow\">python command-line tool</a> for talking to a Meteor DDP server. They are still working on a good spec, but the tool illustrates the key pieces of the protocol.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I know this may be a bit late, but just for the sake of completeness, there's also a DDP Client built on Node.js, authored by me:</p>\n\n<p><a href=\"https://github.com/alansikora/node-js_ddp-client\" rel=\"nofollow\">https://github.com/alansikora/node-js_ddp-client</a></p>\n\n<p>Hope that helps!</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There is a .NET C# client available <a href=\"https://github.com/sonyarouje/DDPClient.NET\" rel=\"nofollow\">here</a>. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As of only a few days ago, a draft specification was published in the <a href=\"https://github.com/meteor/meteor/blob/master/packages/livedata/DDP.md\" rel=\"nofollow\">Github repository</a>.  </p>\n\n<p>Now its time to implement a Python client . . .</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>The Meteor folks have mentioned that they use a protocol called DDP to do their data syncronization and pub/sub operations between the client and the server. Is there any documentation on DDP? Or places in the source that would explain the protocol?</p>\n",
            "last_activity_date": 1365848586,
            "question_id": 10128430,
            "score": 24,
            "tags": [
                "javascript",
                "rpc",
                "publish-subscribe",
                "meteor"
            ],
            "title": "Documentation or code details on Meteor&#39;s DDP pub/sub protocol?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This is my favourite way of decoding HTML characters. The advantage of using this code is that tags are also preserved.</p>\n\n<pre><code>function decodeHtml(html) {\n    var txt = document.createElement(\"textarea\");\n    txt.innerHTML = html;\n    return txt.value;\n}\n</code></pre>\n\n<p>Example: <a href=\"http://jsfiddle.net/k65s3/\">http://jsfiddle.net/k65s3/</a></p>\n\n<p>Input:</p>\n\n<pre><code>Entity:&amp;nbsp;Bad attempt at XSS:&lt;script&gt;alert('new\\nline?')&lt;/script&gt;&lt;br&gt;\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>Entity:\u00a0Bad attempt at XSS:&lt;script&gt;alert('new\\nline?')&lt;/script&gt;&lt;br&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>If you don't want to use html/dom, you could use regex. I haven't tested this; but something along the lines of:</p>\n\n<pre><code>function parseHtmlEnteties(str) {\n    return str.replace(/&amp;#([0-9]{1,3});/gi, function(match, numStr) {\n        var num = parseInt(numStr, 10); // read num as normal number\n        return String.fromCharCode(num);\n    });\n}\n</code></pre>\n\n<h3>[Edit]</h3>\n\n<p>Note: this would only work for numeric html-entities, and not stuff like &oring;.</p>\n\n<h3>[Edit 2]</h3>\n\n<p>Fixed the function (some typos), test here: <a href=\"http://jsfiddle.net/Be2Bd/1/\">http://jsfiddle.net/Be2Bd/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>function unescapeHTML(p_string)\n{\n    if ((typeof p_string === \"string\") &amp;&amp; (new RegExp(/&amp;amp;|&amp;lt;|&amp;gt;|&amp;quot;|&amp;#39;/).test(p_string)))\n    {\n        return p_string.replace(/&amp;amp;/g, \"&amp;\").replace(/&amp;lt;/g, \"&lt;\").replace(/&amp;gt;/g, \"&gt;\").replace(/&amp;quot;/g, \"\\\"\").replace(/&amp;#39;/g, \"'\");\n    }\n\n    return p_string;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>jQuery will encode and decode for you.  </p>\n\n<p>If you use a \"&lt;div/&gt;\" tag, it will strip out all the html.</p>\n\n<pre><code>    function htmlDecode(value) {\n        return $(\"&lt;div/&gt;\").html(value).text();\n    }\n\n    function htmlEncode(value) {\n        return $('&lt;div/&gt;').text(value).html();\n    }\n</code></pre>\n\n<p>If you use a \"&lt;textarea/&gt;\" tag, it will preserve the html tags.</p>\n\n<pre><code>    function htmlDecode(value) {\n        return $(\"&lt;textarea/&gt;\").html(value).text();\n    }\n\n    function htmlEncode(value) {\n        return $('&lt;textarea/&gt;').text(value).html();\n    }\n</code></pre>\n\n<p>For your question, you will want to use the \"&lt;textarea/&gt;\" tag.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Say I get some JSON back from a service request that looks like this:</p>\n\n<pre><code>{\n    \"message\": \"We&amp;#39;re unable to complete your request at this time.\"\n}\n</code></pre>\n\n<p>I'm not sure <em>why</em> that apostraphe is encoded like that (<code>&amp;#39;</code>); all I know is that I want to decode it.</p>\n\n<p>Here's one approach using jQuery that popped into my head:</p>\n\n<pre><code>function decodeHtml(html) {\n    return $('&lt;div&gt;').html(html).text();\n}\n</code></pre>\n\n<p>That seems (very) hacky, though. What's a better way? Is there a \"right\" way?</p>\n",
            "last_activity_date": 1424096129,
            "question_id": 7394748,
            "score": 22,
            "tags": [
                "javascript",
                "jquery",
                "html-entities"
            ],
            "title": "What&#39;s the right way to decode a string that has special HTML entities in it?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Plain JavaScript might be all you need.   </p>\n\n<pre><code>var OSName=\"Unknown OS\";\nif (navigator.appVersion.indexOf(\"Win\")!=-1) OSName=\"Windows\";\nif (navigator.appVersion.indexOf(\"Mac\")!=-1) OSName=\"MacOS\";\nif (navigator.appVersion.indexOf(\"X11\")!=-1) OSName=\"UNIX\";\nif (navigator.appVersion.indexOf(\"Linux\")!=-1) OSName=\"Linux\";\n\ndocument.write('Your OS: '+OSName);\n</code></pre>\n\n<p>As Nick suggested you could use <code>navigator.platform</code> as well.</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>Try: </p>\n\n<p><code>var os = navigator.platform;</code></p>\n\n<p>Then handle the os variable accordingly for your result.</p>\n\n<p>You can also loop through each object of the <code>navigator</code> object to help get you more familiarized with the objects:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfor(var i in navigator){\n    document.write(i+\"=\"+navigator[i]+'&lt;br&gt;');\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>For additional information, please refer to the following article on <a href=\"http://robzu.com/javascript-browser-detection/\"><code>Browser Detection</code></a> and using the <code>navigator</code> object.</p>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>Try:</p>\n\n<pre><code>alert(navigator.appVersion);\n</code></pre>\n\n<p>That should give you a string that you can parse for the OS.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>As far as I know the <code>platform</code> is the less spoofed property on the navigator Object.\nYou can use this to get booleans.</p>\n\n<pre><code>var isMac = navigator.platform.toUpperCase().indexOf('MAC')!==-1;\nvar isWindows = navigator.platform.toUpperCase().indexOf('WIN')!==-1;\nvar isLinux = navigator.platform.toUpperCase().indexOf('LINUX')!==-1;\n</code></pre>\n\n<p>If you need to differentiate Macs between the old PowerPc and new Intel.</p>\n\n<pre><code>var isMacPpc=navigator.platform===\"MacPPC\";\nvar isMacIntel=navigator.platform===\"MacIntel\";\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en/DOM/window.navigator.platform\">https://developer.mozilla.org/en/DOM/window.navigator.platform</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<pre><code>&lt;script&gt;\n\nosName = 'Unknown';\n\nfunction nav(x, y, z) {\n    z = z || y;\n    if (navigator[x] &amp;&amp; navigator[x].indexOf(y) !== -1) {\n        osName = z;\n    }\n}\n\n/*   navigator     value     download  */\nnav( \"appVersion\", \"X11\",    \"UNIX\"    );\nnav( \"appVersion\", \"Mac\",    \"MacOS\"   );\nnav( \"appVersion\", \"Linux\"             );\nnav( \"userAgent\",  \"Linux\"             );\nnav( \"platform\",   \"Linux\"             );\nnav( \"appVersion\", \"Win\",    \"Windows\" );\nnav( \"userAgent\",  \"Windows\"           );\nnav( \"platform\",   \"Win\",    \"Windows\" );\nnav( \"oscpu\",      \"Windows\"           );\n\ndocument.getElementById(\"download\"+osName).className = \"knownOS\";\n\n&lt;/script&gt;\n</code></pre>\n\n<p>Make sure the right download link is easy to find, but without hiding the other OS links. The people might still want those.</p>\n\n<pre><code>&lt;style&gt;\n\n#downloadUNIX, #downloadMacOS, #downloadLinux, #downloadWindows {\n    color:#6D94F2;\n    line-height:35px;\n    margin:24px 0 24px 0;\n    padding:10px;\n}\n.knownOS {\n    background-color:#F7ECAD !important;\n    border:2px solid #E8913A;\n    color:#133CC4 !important;\n    font-weight:bold;\n}\n\n&lt;/style&gt;\n</code></pre>\n\n<p>And some html</p>\n\n<pre><code>&lt;ul&gt;\n    &lt;li&gt;&lt;a id=\"downloadUNIX\"    href=\"unix Link Here\"   &gt;Download Napster-9000 for UNIX&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a id=\"downloadWindows\" href=\"windows Link Here\"&gt;Download Napster-9000 for Windows&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a id=\"downloadMacOS\"   href=\"mac os link here\" &gt;Download Napster-9000 for OS X&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a id=\"downloadLinux\"   href=\"linux Link Here\"  &gt;Download Napster-9000 for Linux&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>Now the user may disable or block javascripts if he wants. The links will still be there, as opposed to writing the links with Javascript, which requires javascript to work.</p>\n\n<p>Here is a fiddle</p>\n\n<p><a href=\"http://jsfiddle.net/7fmJb/\" rel=\"nofollow\">http://jsfiddle.net/7fmJb/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am looking for a way to detect the OS for a downloads page using jQuery or Javascript to recommend specific files for Mac vs Windows.  I was hoping to do it without adding another plugin to my page.</p>\n",
            "last_activity_date": 1388993858,
            "question_id": 7044944,
            "score": 22,
            "tags": [
                "javascript",
                "jquery",
                "operating-system"
            ],
            "title": "jQuery/Javascript to detect OS without a plugin?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The reason why <code>/\\b\u00e0/.test(\"\u00e0\")</code> doesn't match is because \"\u00e0\" is not a word character. The escape sequence <code>\\b</code> matches only between a boundary of word character and a non word character. <code>/\\ba/.test(\"a\")</code> matches because \"a\" is a word character. Because of that, there is a boundary between the beginning of the string (which is not a word character) and the letter \"a\" which is a word character.</p>\n\n<p>Word characters in JavaScript's regex is defined as <code>[a-zA-Z0-9_]</code>.</p>\n\n<p>To match an accented character at the start of a string, just use the <code>^</code> character at the beginning of the regex (e.g. <code>/^\u00e0/</code>). That character means the beginning of the string (unlike <code>\\b</code> which matches at any word boundary within the string). It's most basic and standard regular expression, so it's definitely not over the top.</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>Stack Overflow had also an issue with non ASCII characters in regex, you can find it <a href=\"http://stackoverflow.com/questions/1073412/javascript-validation-issue-with-international-characters\">here</a>. They are not coping with word boundaries, but maybe gives you anyway useful hints.</p>\n\n<p>There is another <a href=\"http://www.hanselman.com/blog/InternationalizedRegularExpressions.aspx\" rel=\"nofollow\">page</a>, but he wants to match strings and not words.</p>\n\n<p>I don't know, and did not find now, an anchor for your problem, but when I see what monster regexes in my first link are used, your group, that you want to avoid, is not over the top and to my opinion your solution.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This worked for me:</p>\n\n<pre><code>/^[a-z\\u00E0-\\u00FC]+$/i\n</code></pre>\n\n<p>With help from <a href=\"http://compgroups.net/comp.lang.javascript/regex-with-accents/190205\">here</a> </p>\n",
                    "is_accepted": false,
                    "score": 20
                }
            ],
            "body": "<p>Here's a fun snippet I ran into today:</p>\n\n<pre><code>/\\ba/.test(\"a\") --&gt; true\n/\\b\u00e0/.test(\"\u00e0\") --&gt; false\n</code></pre>\n\n<p>However,</p>\n\n<pre><code>/\u00e0/.test(\"\u00e0\") --&gt; true\n</code></pre>\n\n<p>Firstly, <strong>wtf?</strong></p>\n\n<p>Secondly, if I want to match an accented character at the start of a word, how can I do that? (I'd really like to avoid using over-the-top selectors like <code>/(?:^|\\s|'|\\(\\) ....</code>)</p>\n",
            "last_activity_date": 1350647259,
            "question_id": 5436824,
            "score": 20,
            "tags": [
                "javascript",
                "regex",
                "unicode",
                "internationalization"
            ],
            "title": "Matching accented characters with Javascript regexes"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Though there's probably an easier way to do this using a JS Library, here's a working solution using vanilla js.</p>\n\n<pre><code>var list = document.getElementById('mylist');\n\nvar items = list.childNodes;\nvar itemsArr = [];\nfor (var i in items) {\n    if (items[i].nodeType == 1) { // get rid of the whitespace text nodes\n        itemsArr.push(items[i]);\n    }\n}\n\nitemsArr.sort(function(a, b) {\n  return a.innerHTML == b.innerHTML\n          ? 0\n          : (a.innerHTML &gt; b.innerHTML ? 1 : -1);\n});\n\nfor (i = 0; i &lt; itemsArr.length; ++i) {\n  list.appendChild(itemsArr[i]);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>You might find that sorting the DOM nodes doesn't perform well.   A different approach would be to have in your javascript an array that represents the data that would go into the DOM nodes, sort that data, and then regenerate the div that holds the DOM nodes.</p>\n\n<p>Maybe you dont' have that many nodes to sort, so it wouldn't matter.   My experience is based on trying to sort HTML tables by manipulating the DOM, including tables with hundreds of rows and a couple dozen columns.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>If you're already using jQuery, I'd recommend tinysort : <a href=\"http://tinysort.sjeiti.com/\">http://tinysort.sjeiti.com/</a></p>\n\n<pre><code>$(\"li\").tsort({order:\"asc\"});\n$(\"li\").tsort({order:\"desc\"});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>without analyzing too much if this brings anything new to the table, i usually use this:</p>\n\n<pre><code>function forEach(ar, func){ if(ar){for(var i=ar.length; i--; ){ func(ar[i], i); }} }\nfunction removeElement(node){ return node.parentNode.removeChild(node); }\nfunction insertBefore(ref){ return function(node){ return ref.parentNode.insertBefore(node, ref); }; }\n\nfunction sort(items, greater){ \n    var marker = insertBefore(items[0])(document.createElement(\"div\")); //in case there is stuff before/after the sortees\n    forEach(items, removeElement);\n    items.sort(greater); \n    items.reverse(); //because the last will be first when reappending\n    forEach(items, insertBefore(marker));\n    removeElement(marker);\n} \n</code></pre>\n\n<p>where item is an array of children of the same parent. we remove starting with the last and append starting with the first to avoid flickering in the top part which is probably on screen. i usually get my items array like this:</p>\n\n<pre><code>forEachSnapshot(document.evaluate(..., 6, null), function(n, i){ items[i] = n; });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>See it in action: <a href=\"http://jsfiddle.net/stefek99/y7JyT/\">http://jsfiddle.net/stefek99/y7JyT/</a></p>\n\n<pre><code>    jQuery.fn.sortDomElements = (function() {\n        return function(comparator) {\n            return Array.prototype.sort.call(this, comparator).each(function(i) {\n                  this.parentNode.appendChild(this);\n            });\n        };\n    })();\n</code></pre>\n\n<p><strong>Terse</strong></p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>If I have a list like this:</p>\n\n<pre><code>&lt;ul id=\"mylist\"&gt;\n    &lt;li id=\"list-item1\"&gt;text 1&lt;/li&gt;\n    &lt;li id=\"list-item2\"&gt;text 2&lt;/li&gt;\n    &lt;li id=\"list-item3\"&gt;text 3&lt;/li&gt;\n    &lt;li id=\"list-item4\"&gt;text 4&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>What's the easiest way to re-arrange the DOM nodes to my preference? (This needs to happen automatically when the page loads, the list-order preference is gained from a cookie)</p>\n\n<p>E.g.</p>\n\n<pre><code>&lt;ul id=\"mylist\"&gt;\n    &lt;li id=\"list-item3\"&gt;text 3&lt;/li&gt;\n    &lt;li id=\"list-item4\"&gt;text 4&lt;/li&gt;\n    &lt;li id=\"list-item2\"&gt;text 2&lt;/li&gt;\n    &lt;li id=\"list-item1\"&gt;text 1&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n",
            "last_activity_date": 1339769924,
            "question_id": 282670,
            "score": 20,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "Easiest way to sort DOM nodes?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>location.search\n<a href=\"https://developer.mozilla.org/en/DOM/window.location\" rel=\"nofollow\">https://developer.mozilla.org/en/DOM/window.location</a></p>\n\n<p>although most use some kind of parsing routine to read query string parameters.</p>\n\n<p>here's one <a href=\"http://safalra.com/web-design/javascript/parsing-query-strings/\" rel=\"nofollow\">http://safalra.com/web-design/javascript/parsing-query-strings/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>function parseURLParams(url) {\n    var queryStart = url.indexOf(\"?\") + 1,\n        queryEnd   = url.indexOf(\"#\") + 1 || url.length + 1,\n        query = url.slice(queryStart, queryEnd - 1),\n        pairs = query.replace(/\\+/g, \" \").split(\"&amp;\"),\n        parms = {}, i, n, v, nv;\n\n    if (query === url || query === \"\") {\n        return;\n    }\n\n    for (i = 0; i &lt; pairs.length; i++) {\n        nv = pairs[i].split(\"=\");\n        n = decodeURIComponent(nv[0]);\n        v = decodeURIComponent(nv[1]);\n\n        if (!parms.hasOwnProperty(n)) {\n            parms[n] = [];\n        }\n\n        parms[n].push(nv.length === 2 ? v : null);\n    }\n    return parms;\n}\n</code></pre>\n\n<p>Use as follows:</p>\n\n<pre><code>var urlString = \"http://www.foo.com/bar?a=a+a&amp;b%20b=b&amp;c=1&amp;c=2&amp;d#hash\";\n    urlParams = parseURLParams(urlString);\n</code></pre>\n\n<p>which returns a an object like this: </p>\n\n<pre><code>{\n  \"a\"  : [\"a a\"],     /* param values are always returned as arrays */\n  \"b b\": [\"b\"],       /* param names can have special chars as well */\n  \"c\"  : [\"1\", \"2\"]   /* an URL param can occur multiple times!     */\n  \"d\"  : [null]       /* parameters without values are set to null  */ \n} \n</code></pre>\n\n<p>So</p>\n\n<pre><code>parseURLParams(\"www.mints.com?name=something\")\n</code></pre>\n\n<p>gives</p>\n\n<pre><code>{name: [\"something\"]}\n</code></pre>\n\n<hr>\n\n<p><strong>EDIT</strong>: The <a href=\"http://stackoverflow.com/revisions/814628/3\">original version of this answer</a> used a regex-based approach to URL-parsing. It used a shorter function, but the approach was flawed and I replaced it with a proper parser.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>Here's one solution. Of course, this function doesn't need to load into a \"window.params\" option -- that can be customized. </p>\n\n<pre><code>window.params = function(){\n    var params = {};\n    var param_array = window.location.href.split('?')[1].split('&amp;');\n    for(var i in param_array){\n        x = param_array[i].split('=');\n        params[x[0]] = x[1];\n    }\n    return params;\n}();\n</code></pre>\n\n<p>Example API call on <a href=\"http://www.mints.com/myurl.html?name=something&amp;goal=true\" rel=\"nofollow\">http://www.mints.com/myurl.html?name=something&amp;goal=true</a>:</p>\n\n<pre><code>if(window.params.name == 'something') doStuff();\nelse if( window.params.goal == 'true') shoutGOOOOOAAALLL();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think this should also work:</p>\n\n<pre><code>function $_GET(q,s) {\n    s = (s) ? s : window.location.search;\n    var re = new RegExp('&amp;amp;'+q+'=([^&amp;amp;]*)','i');\n    return (s=s.replace(/^\\?/,'&amp;amp;').match(re)) ?s=s[1] :s='';\n}\n</code></pre>\n\n<p>Just call it like this:</p>\n\n<pre><code>var value = $_GET('myvariable');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Iv'e fixed/improved Tomalak's answer with:</p>\n\n<ul>\n<li>Make an Array only if needed.</li>\n<li>If there's another equation symbol in the value it gets inside the value</li>\n<li>It now uses the <code>location.search</code> value instead of a url.</li>\n<li>Empty search string results in an empty object.</li>\n</ul>\n\n<p>Code:</p>\n\n<pre><code>function getSearchObject() {\n    if (location.search === \"\") return {};\n\n    var o = {},\n        nvPairs = location.search.substr(1).replace(/\\+/g, \" \").split(\"&amp;\");\n\n    nvPairs.forEach( function (pair) {\n        var e = pair.indexOf('=');\n        var n = decodeURIComponent(e &lt; 0 ? pair : pair.substr(0,e)),\n            v = (e &lt; 0 || e + 1 == pair.length) \n                ? null : \n                decodeURIComponent(pair.substr(e + 1,pair.length - e));\n        if (!(n in o))\n            o[n] = v;\n        else if (o[n] instanceof Array)\n            o[n].push(v);\n        else\n            o[n] = [o[n] , v];\n    });\n    return o;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to pass data from one page to another.</p>\n\n<blockquote>\n  <p>www.mints.com?name=something</p>\n</blockquote>\n\n<p>How to read <code>name</code> using JavaScript?</p>\n",
            "last_activity_date": 1389954296,
            "question_id": 814613,
            "score": 16,
            "tags": [
                "javascript",
                "parsing",
                "url"
            ],
            "title": "How to read GET data from a URL using JavaScript?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Unsafe? That depends on if you can trust the data.</p>\n\n<p>If you can trust that the string will be JSON (and won't include, for example, functions) then it is safe.</p>\n\n<p>That said - if you are using jQuery, why are you doing this manually? Use the <a href=\"http://docs.jquery.com/Ajax/jQuery.ajax#options\">dataType</a> option to specify that it is JSON and let the library take care of it for you.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Using JavaScript\u2019s <code>eval</code> is unsafe. Because JSON is just a subset of JavaScript but JavaScript\u2019s <code>eval</code> allows any valid JavaScript.</p>\n\n<p>Use a real JSON parser like the <a href=\"http://json.org/js.html\" rel=\"nofollow\">JSON parser from json.org</a> instead.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The alternative to evaluating the code is to parse it manually. It's not as hard as it sounds but it's quite a lot heavier at runtime. <a href=\"http://www.json.org/js.html\" rel=\"nofollow\">You can read about it here.</a></p>\n\n<p>The important part to note is evaluating JSON is not inherently insecure. As long as you trust the source not to balls things up. That includes making sure that things passed into the JSON encoder are properly escaped (to stop people 2 steps up the stream executing code on your users' machines).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you can't trust the source, then you're correct...eval is unsafe. It could be used to inject code into your pages.</p>\n\n<p>Check out this link for a safer alternative:</p>\n\n<p><a href=\"http://www.json.org/js.html\">JSON in Javascript</a></p>\n\n<p>The page explains why eval is unsafe and provides a link to a JSON parser at the bottom of the page.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Well, safe or not, when you are using jQuery, you're better to use the <a href=\"http://docs.jquery.com/Ajax/jQuery.getJSON\">$.getJSON()</a> method, not $.ajax():</p>\n\n<pre><code>$.getJSON(url, function(data){\n    alert(data.exampleType);\n});\n</code></pre>\n\n<p><code>eval()</code> is usually considered safe for JSON parsing when you are only communicating with your own server and especially when you use a good JSON library on server side that guarantees that generated JSON will not contain anything nasty.</p>\n\n<p>Even Douglas Crockford, the author of JSON, said that you shouldn't use <code>eval()</code> anywhere in your code, except for parsing JSON. See the corresponding section in his book <a href=\"http://books.google.com/books?id=PXa2bby0oQ0C&amp;pg=PA139&amp;lpg=PA139&amp;dq=JavaScript:%2BThe%2BGood%2BParts%2Beval&amp;source=bl&amp;ots=HHpll5r0gG&amp;sig=3OTFEqDnRBVaLXSUDK1JsCGvxIg&amp;hl=et&amp;ei=4pcmSs7FAsG%5F%5FQa%5F2P3XBw&amp;sa=X&amp;oi=book%5Fresult&amp;ct=result&amp;resnum=2\">JavaScript: The Good Parts</a></p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>You should use <a href=\"http://www.json.org/js.html\">JSON</a> and write JSON.parse. </p>\n\n<p>\"Manual\" parsing is too slow, so JSON.parse implementation from the library checks stuff and then ends up using eval, so it is <a href=\"http://yuiblog.com/blog/2007/04/10/json-and-browser-security/\">still unsafe</a>. But, if you are using a newer browser (IE8 or Firefox), the library code is not actually executed. Instead, <strong>native browser support</strong> kicks in, and then you are safe.</p>\n\n<p>Read more <a href=\"http://blog.mozilla.com/webdev/2009/02/12/native-json-in-firefox-31/\">here</a> and <a href=\"http://blogs.msdn.com/ie/archive/2008/09/10/native-json-in-ie8.aspx\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>If you are using jQuery, as of version 1.4.1 you can use jQuery.parseJSON()</p>\n\n<p>See this answer: <a href=\"http://stackoverflow.com/questions/3016236/safe-json-parsing-with-jquery/3016292#3016292\">http://stackoverflow.com/questions/3016236/safe-json-parsing-with-jquery/3016292#3016292</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>you can try it like this</p>\n\n<pre><code>var object = new Function(\"return \" + jsonString)()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Another great alternative is YUI:\n<a href=\"http://yuilibrary.com/yui/docs/json/\" rel=\"nofollow\">http://yuilibrary.com/yui/docs/json/</a></p>\n\n<p>So your code would be something like:</p>\n\n<pre><code>Y.JSON.parse('{\"id\": 15, \"name\": \"something\"}');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Quick Question. Eval in JavaScript is unsafe is it not? I have a JSON object as a string and I need to turn it into an actual object so I can obtain the data:</p>\n\n<pre><code>function PopulateSeriesFields(result) \n{\n    data = eval('(' + result + ')');\n    var myFakeExample = data.exampleType\n}\n</code></pre>\n\n<p>If it helps I am using the $.ajax method from jQuery.</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1331312700,
            "question_id": 945015,
            "score": 15,
            "tags": [
                "javascript",
                "jquery",
                "security",
                "json",
                "eval"
            ],
            "title": "Alternatives to JavaScript eval() for parsing JSON"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Personally, I use innerHTML because it's what I'm used to and for something like this, the W3C methods add a lot of clutter to the code.</p>\n\n<p>Just a possible way to cut down on the number of div's however, are there any reasons you are using spacer elements instead of just editing the margins on the content divs?</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I don't think there's much to choose between them. In the olden days (IE6, FF1.5), innerHTML was faster (<a href=\"http://ajaxian.com/archives/benchmark-dom-vs-innerhtml\" rel=\"nofollow\">benchmark</a>), but now there doesn't seem to be a noticeable difference in most cases.</p>\n\n<p>According to the <a href=\"https://developer.mozilla.org/en/DOM/element.innerHTML\" rel=\"nofollow\">mozilla dev. docs</a> there are a few situations where innerHTML behaviour varies between browsers (notably inside tables), so createElement will give you more consistency - but innerHTML is usually less to type.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As I know, the fastest way is to evade DOM editing as long as it is possible. That mean, it is better to create a big string and then put it into innerHTML. But there is a remark for this: don't make too many operation on big strings, it is faster to use array of strings and then join them all. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Neither. Use a library like jQuery, Prototype, Dojo or mooTools  because both of these methods are fraught with trouble:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/155426/why-does-ie-give-unexpected-errors-when-setting-innerhtml\">Did you know that innerHTML on tables for IE is readonly?</a></li>\n<li><a href=\"http://support.microsoft.com/kb/276228\">Did you know for the select element it's broken as well</a>?</li>\n<li><a href=\"http://webbugtrack.blogspot.com/2007/10/bug-235-createelement-is-broken-in-ie.html\">How about problems with createElement?</a></li>\n</ul>\n\n<p>The writers of the major javascript libraries have spent a lot of time and have entire bug tracking systems to make sure that when you call their DOM modifying tools they actually work. </p>\n\n<p>If you're writing a library to compete with the above tools (and good luck to you if you are), then I'd choose the method based on performance, and innerHTML has always won out in the past, and since innerHTML is a native method, it's a safe bet it will remain the fastest.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>altCognito makes a good point - using a library is the way to go. But if was doing it by hand, I would use option #2 - create elements with DOM methods. They are a bit ugly, but you can make an element factory function that hides the ugliness. Concatenating strings of HTML is ugly also, but more likely to have security problems, especially with XSS.</p>\n\n<p>I would definitely not append the new nodes individually, though. I would use a DOM DocumentFragment. Appending nodes to a documentFragment is much faster than inserting them into the live page. When you're done building your fragment it just gets inserted all at once.</p>\n\n<p><a href=\"http://ejohn.org/blog/dom-documentfragments/\">John Resig explains it much better than I could</a>, but basically you just say:</p>\n\n<pre><code>var frag = document.createDocumentFragment();\nfrag.appendChild(myFirstNewElement);\nfrag.appendChild(mySecondNewElement);\n...etc.\ndocument.getElementById('insert_here').appendChild(frag);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>For a complex problem like this, I usually use the innerHTML methods because they are a)easier to read and modify code-wise b)more convenient to use in loops. As the top post says, they unfortunately fail in IE(6,7,8) on <code>&lt;table&gt;</code>, <code>&lt;thead&gt;</code>,<code>&lt;tbody&gt;</code>,<code>&lt;tr&gt;</code>,<code>&lt;tfoot&gt;</code>, <code>&lt;select&gt;</code>, <code>&lt;pre&gt;</code> elements.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Since you mentioned template and clone, you may be interested in this question:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/676249/deep-cloning-vs-setting-of-innerhtml-whats-faster\">Deep cloning vs setting of innerHTML: what\u2019s faster?</a></li>\n</ul>\n\n<p>Another option is to use a DOM wrapper, such as <a href=\"http://code.google.com/p/dombuilder/\" rel=\"nofollow\">DOMBuilder</a>:</p>\n\n<pre><code>DOMBuilder.apply(window);\nDIV({\"class\": \"class0 class1 class3\"},\n  DIV({\"class\": \"spacer\"}),\n  DIV({id: \"content\"}, \"content\"),\n  DIV({\"class\": \"spacer\"}),\n  DIV({id: \"content2\"}, \"content2\"),\n  DIV({\"class\": \"class4\"}, \"content3\"),\n  DIV({\"class\": \"spacer\"}),\n  DIV({id: \"footer\"}, \"content3\")\n);\n</code></pre>\n\n<p>Personally, if each item is going to need the <em>exact</em> same structure created I would go with the cloning approach. If there's any logic involved in creating the structure into which the content will go, I'd rather maintain something like the above than fiddling about with strings. If that approach turned out to be too slow, I'd fall back to innerHTML.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<blockquote>\n  <p>1) Create all the elements as innerHTML with string concatenation to add the content.</p>\n  \n  <p>2) Use createElement, setAttribute and appendChild to create and add each div.</p>\n</blockquote>\n\n<p>3) compromise. Create all the elements in one go as innerHTML (which avoids a lot of childnode list manipulation slowness), then write the content that changes on each item using data/attribute access (avoiding all that nasty mucking around with having to HTML-escape content). eg. something like:</p>\n\n<pre><code>var html= (\n    '&lt;div class=\"item\"&gt;'+\n        '&lt;div class=\"title\"&gt;x&lt;/div&gt;'+\n        '&lt;div class=\"description\"&gt;x&lt;/div&gt;'+\n    '&lt;/div&gt;'\n);\nvar items= [\n    {'id': 1, 'title': 'Potato', 'description': 'A potato'},\n    {'id': 2, 'title': 'Kartoffel', 'description': 'German potato'},\n    // ... 100 other items ...\n];\n\nfunction multiplyString(s, n) {\n    return new Array(n+1).join(s);\n}\n\nvar parent= document.getElementById('itemcontainer');\nparent.innerHTML= multiplyString(html, items.length);\nfor (var i= 0; i&lt;items.length; i++) {\n    var item= items[i];\n    var node= parent.childNodes[i];\n\n    node.id= 'item'+item.id;\n    node.childNodes[0].firstChild.data= item.title;\n    node.childNodes[1].firstChild.data= item.description;\n}\n</code></pre>\n\n<p>Can also be combined with Neall's tip about DocumentFragments.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Depends on what's \"better\" for you.</p>\n\n<h1>Performance</h1>\n\n<p>From a performance point of view, createElement+appendChild wins by a LOT. Take a look at <a href=\"http://jsperf.com/innerhtml-vs-createelement-and-appendchild\" rel=\"nofollow\">this jsPerf</a> I created when I compare both and the results hit in the face.</p>\n\n<pre><code>innerHTML: ~120 ops/sec\ncreateElement+appendChild: ~145000 ops/sec\n</code></pre>\n\n<p>(on my Mac with Chrome 21)</p>\n\n<p>Also, innerHTML triggers page reflow.</p>\n\n<p>On Ubuntu with Chrome 39 <a href=\"http://jsperf.com/innerhtml-vs-createelement-with-span\" rel=\"nofollow\">tests</a> get similar results</p>\n\n<pre><code>innerHTML: 120000 ops/sec\ncreateElement: 124000 ops/sec\n</code></pre>\n\n<p>probably some optimisation take place.\nOn Ubuntu with QtWebkit based browser Arora (wkhtml also QtWebkit) results are</p>\n\n<pre><code>innerHTML: 71000 ops/sec\ncreateElement: 282000 ops/sec\n</code></pre>\n\n<p>it seems createElement faster in average</p>\n\n<h1>Mantainability</h1>\n\n<p>From a mantainability point of view, I believe string templates help you a lot. I use either <a href=\"http://handlebarsjs.com/\" rel=\"nofollow\">Handlebars</a> (which I love) or <a href=\"https://github.com/premasagar/tim\" rel=\"nofollow\">Tim</a> (for project which need smallest footprints). When you \"compile\" (prepare) your template and it's ready for appending it to the DOM, you use innerHTML to append the template string to the DOM. On trick I do to avoid reflow is createElement for a wrapper and in that wrapper element, put the template with innerHTML. I'm still looking for a good way to avoid innerHTML at all.</p>\n\n<h1>Compatibility</h1>\n\n<p>You don't have to worry here, both methods are fully supported by a broad range of browsers (unlike altCognito says). You can check compatibility charts for <a href=\"http://www.quirksmode.org/dom/w3c_core.html#creatingelements\" rel=\"nofollow\">createElement</a> and <a href=\"http://www.quirksmode.org/dom/w3c_core.html#t90\" rel=\"nofollow\">appendChild</a>.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Neither. Use cloneNode.</p>\n\n<pre><code>var div = document.createElement('div');\nvar millionDivs = [div];\nwhile (millionDivs.length &lt; 1e6) millionDivs.push(div.cloneNode())\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm looking at a problem that needs a complex block of divs to be created once for each element in a set of ~100 elements.</p>\n\n<p>Each individual element is identical except for the content, and they look (in HTML) something like this:</p>\n\n<pre><code>&lt;div class=\"class0 class1 class3\"&gt;\n&lt;div class=\"spacer\"&gt;&lt;/div&gt;\n&lt;div id=\"content\"&gt;content&lt;/div&gt;\n&lt;div class=\"spacer\"&gt;&lt;/div&gt;\n&lt;div id=\"content2\"&gt;content2&lt;/div&gt;\n&lt;div class=\"class4\"&gt;content3&lt;/div&gt;\n&lt;div class=\"spacer\"&gt;&lt;/div&gt;\n&lt;div id=\"footer\"&gt;content3&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>I could either:</p>\n\n<p>1) Create all the elements as <code>innerHTML</code> with string concatenation to add the content.</p>\n\n<p>2) Use <code>createElement</code>, <code>setAttribute</code> and <code>appendChild</code> to create and add each div.</p>\n\n<p>Option 1 gets a slightly smaller file to download, but option 2 seems to be slightly faster to render.</p>\n\n<p>Other than performance is there a good reason to go via one route or the other? Any cross-browser problems / performance gremlins I should test for?</p>\n\n<p>...or should I try the template and clone approach?</p>\n\n<p>Many thanks.</p>\n",
            "last_activity_date": 1421758186,
            "question_id": 737307,
            "score": 15,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "JavaScript: Is it better to use innerHTML or (lots of) createElement calls to add a complex div structure?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>try <code>(http|ftp|https):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-\\.,@?^=%&amp;amp;:/~\\+#]*[\\w\\-\\@?^=%&amp;amp;/~\\+#])?</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The trouble is that the \"-\" in the character class (the brackets) is being parsed as a range: [a-z] means \"any character between a and z.\"  As Vini-T suggested, you need to escape the \"-\" characters in the character classes, using a backslash.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've cleaned up your regex:</p>\n\n<pre><code>var urlexp = new RegExp('(http|ftp|https)://[a-z0-9\\-_]+(\\.[a-z0-9\\-_]+)+([a-z0-9\\-\\.,@\\?^=%&amp;;:/~\\+#]*[a-z0-9\\-@\\?^=%&amp;;/~\\+#])?', 'i');\n</code></pre>\n\n<p>Tested and works just fine ;)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Though escaping the dash characters (which can have a special meaning as character range specifiers when inside a character class) <em>should</em> work, one other method for taking away their special meaning is putting them at the beginning or the end of the class definition. </p>\n\n<p>In addition, <code>\\+</code> and <code>\\@</code> in a character class are interpreted as <code>+</code> and <code>@</code> respectively. The escapes are, however, unnecessary and may confuse someone trying to interpret the regex visually.</p>\n\n<p>I would recommend the following regex for your purposes:</p>\n\n<pre><code>(http|ftp|https)://[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&amp;amp;:/~+#-]*[\\w@?^=%&amp;amp;/~+#-])?\n</code></pre>\n\n<p>this can be specified in JavaScript either by passing it into the RegExp constructor (like you did in your example):</p>\n\n<pre><code>var urlPattern = new RegExp(\"(http|ftp|https)://[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&amp;amp;:/~+#-]*[\\w@?^=%&amp;amp;/~+#-])?\")\n</code></pre>\n\n<p>or by directly specifying a regex literal, using the <code>//</code> quoting method:</p>\n\n<pre><code>var urlPattern = /(http|ftp|https):\\/\\/[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&amp;amp;:\\/~+#-]*[\\w@?^=%&amp;amp;\\/~+#-])?/\n</code></pre>\n\n<p>The Regexp constructor is necessary if you accept a regex as a string (from user input or an AJAX call, for instance), and might be more readable (as it is in this case). I am fairly certain that the <code>//</code> quoting method is more efficient, and is at certain times more readable. Both work.</p>\n\n<p>I tested your original and this modification using Chrome both on &lt;<a href=\"http://jsfiddle.net/HPLXg/1/\" rel=\"nofollow\">JSFiddle</a>> and on &lt;<a href=\"http://regexlib.com/RETester.aspx\" rel=\"nofollow\">RegexLib.com</a>>, using the Client-Side regex engine (browser) and specifically selecting JavaScript. While the first one fails with the error you stated, my suggested modification succeeds. If I remove the <code>h</code> from the <code>http</code> in the source, it fails to match, as it should!</p>\n\n<h2>Edit</h2>\n\n<p>As noted by @noa in the comments, the expression above will not match local network (non-internet) servers or any other servers accessed with a single word (e.g. <code>http://localhost/</code>... or <code>https://sharepoint-test-server/</code>...). If matching this type of url is desired (which it may or may not be), the following might be more appropriate:</p>\n\n<pre><code>(http|ftp|https)://[\\w-]+(\\.[\\w-]*)+([\\w.,@?^=%&amp;amp;:/~+#-]*[\\w@?^=%&amp;amp;/~+#-])?\n\n#------changed----here-----------^\n</code></pre>\n\n<p>&lt;<strong>End Edit</strong>></p>\n\n<p>Finally, an excellent resource that taught me 90% of what I know about regex is <a href=\"http://www.regular-expressions.info/\" rel=\"nofollow\">Regular-Expressions.info</a> - I highly recommend it if you want to learn regex (both what it can do and what it can't)!</p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>You have to escape the backslash when you are using <code>new RegExp</code>. </p>\n\n<p>Also you can put the dash <code>-</code> at the end of character class to avoid escaping it.</p>\n\n<p><code>&amp;amp;</code> inside a character class means <code>&amp; or a or m or p or ;</code> , you just need to put <code>&amp;</code> and <code>;</code> , <code>a, m and p</code> are already match by <code>\\w</code>.</p>\n\n<p>So, your regex becomes:</p>\n\n<pre><code>var urlexp = new RegExp( '(http|ftp|https)://[\\\\w-]+(\\\\.[\\\\w-]+)+([\\\\w-.,@?^=%&amp;:/~+#-]*[\\\\w@?^=%&amp;;/~+#-])?' );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Try this general regex for many URL format</p>\n\n<pre><code>/(([A-Za-z]{3,9})://)?([-;:&amp;=\\+\\$,\\w]+@{1})?(([-A-Za-z0-9]+\\.)+[A-Za-z]{2,3})(:\\d+)?((/[-\\+~%/\\.\\w]+)?/?([&amp;?][-\\+=&amp;;%@\\.\\w]+)?(#[\\w]+)?)?/g\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I setup my regex to test to see if a URL is contained in a block of text in javascript. I cant quite figure out the pattern to use to accomplish this</p>\n\n<pre><code> var urlpattern = new RegExp( \"(http|ftp|https):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-\\.,@?^=%&amp;amp;:/~\\+#]*[\\w\\-\\@?^=%&amp;amp;/~\\+#])?\"\n\n var txtfield = $('#msg').val() /*this is a textarea*/\n\n if ( urlpattern.test(txtfield) ){\n        //do something about it\n }\n</code></pre>\n\n<p>EDIT:</p>\n\n<p>So the Pattern I have now works in regex testers for what I need it to do but chrome throws an error</p>\n\n<pre><code>  \"Invalid regular expression: /(http|ftp|https)://[w-_]+(.[w-_]+)+([w-.,@?^=%&amp;amp;:/~+#]*[w-@?^=%&amp;amp;/~+#])?/: Range out of order in character class\"\n</code></pre>\n\n<p>for the following code:</p>\n\n<pre><code>var urlexp = new RegExp( '(http|ftp|https):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-\\.,@?^=%&amp;amp;:/~\\+#]*[\\w\\-\\@?^=%&amp;amp;/~\\+#])?' );\n</code></pre>\n",
            "last_activity_date": 1413983841,
            "question_id": 8188645,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "regex"
            ],
            "title": "JavaScript Regex to match a URL in a field of text"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>vclick (virtualized click) simulates the onclick event.</p>\n\n<p><a href=\"http://api.jquerymobile.com/vclick/\" rel=\"nofollow\">http://api.jquerymobile.com/vclick/</a> </p>\n\n<p>Tap event triggers after a quick, complete touch event single target object.</p>\n\n<p><a href=\"http://api.jquerymobile.com/tap/\" rel=\"nofollow\">http://api.jquerymobile.com/tap/</a></p>\n\n<p>It depends what you are doing but unless you have a specific reason not to (e.g. supporting desktop and mobile with the same js) I would use tap.</p>\n\n<p>More information here <a href=\"https://coderwall.com/p/bdxjzg\" rel=\"nofollow\">https://coderwall.com/p/bdxjzg</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In case of jQuery Mobile Tap used to work only on mobile devices. This is not case any more.</p>\n\n<p>VClick was created to bridge a gap between click/tap incompatibility among desktop/mobile devices.</p>\n\n<p>Now days you case freely use tap but there are few problems. Tap will fail on iOS platform. Touchstart should be used instead. </p>\n\n<p>Examples:</p>\n\n<h2>VClick</h2>\n\n<p>Will work both on desktop and mobile devices.</p>\n\n<ul>\n<li>Android 4.1.1 - No delay</li>\n<li>iOS - No delay</li>\n<li>Desktop Firefox 19 &amp; Chrome 25.0.1364.152 - No delay</li>\n</ul>\n\n<p><a href=\"http://jsfiddle.net/Gajotres/PYPXu/embedded/result/\">http://jsfiddle.net/Gajotres/PYPXu/embedded/result/</a></p>\n\n<pre><code>$(document).on('pagebeforeshow', '#index', function(){       \n    $( document ).on( \"vclick\", '[data-role=\"page\"]', function() {\n        $( this ).append( \"&lt;span style='color:#00F;'&gt;vmouseup fired.&lt;/span&gt;\" );\n    });\n});\n</code></pre>\n\n<p>Tap: </p>\n\n<h2>Tap</h2>\n\n<p>It used to work only on a mobile devices, now works also on a desktop browsers, but will fail on a iOS with a jQuery Mobile version 1.1 and below.</p>\n\n<ul>\n<li>Android 4.1.1 - No delay</li>\n<li>iOS - No delay</li>\n<li>Desktop Firefox 19 &amp; Chrome 25.0.1364.152 - No delay</li>\n</ul>\n\n<p><a href=\"http://jsfiddle.net/Gajotres/k8kSA/\">http://jsfiddle.net/Gajotres/k8kSA/</a></p>\n\n<pre><code>$(document).on('pagebeforeshow', '#index', function(){       \n    $( document ).on( \"tap\", '[data-role=\"page\"]', function() {\n        $( this ).append( \"&lt;span style='color:#00F;'&gt;tap fired.&lt;/span&gt;\" );\n    });\n});\n</code></pre>\n\n<h2>Click</h2>\n\n<p>Will work on mobile devices and desktop browsers.</p>\n\n<ul>\n<li>Android 4.1.1 - Visible delay (300+ ms)</li>\n<li>iOS - No delay</li>\n<li>Desktop Firefox 19 &amp; Chrome 25.0.1364.152 - No delay</li>\n</ul>\n\n<p><a href=\"http://jsfiddle.net/Gajotres/L2FHp/\">http://jsfiddle.net/Gajotres/L2FHp/</a></p>\n\n<pre><code>$(document).on('pagebeforeshow', '#index', function(){       \n    $( document ).on( \"click\", '[data-role=\"page\"]', function() {\n        $( this ).append( \"&lt;span style='color:#00F;'&gt;click fired.&lt;/span&gt;\" );\n    });\n});\n</code></pre>\n\n<h1>Conclusion</h1>\n\n<p>If you want a backward jQM compatibility stick with <strong>VClick</strong>, in any other case use <strong>Tap</strong>.</p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>I've just noticed a major difference between 'tap' and 'vclick'.\n'vclick' fires if you tab to a button and press the enter key - 'tap' does not.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>which event should i use to listen to ?\nwhy use vclick? and I just don't know which situation to use which.</p>\n",
            "last_activity_date": 1399966786,
            "question_id": 15274809,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "html5",
                "css3",
                "jquery-mobile"
            ],
            "title": "In jQuery mobile, what&#39;s the diff between tap and vclick?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>You can create instances without the new operator (here is a great article written about this by Douglas Crockford <a href=\"http://yuiblog.com/blog/2006/11/13/javascript-we-hardly-new-ya/\" rel=\"nofollow\">http://yuiblog.com/blog/2006/11/13/javascript-we-hardly-new-ya/</a>). But it will not help you with the \"instanceof\" story.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>What's wrong with using the <code>new</code> keyword?</p>\n\n<p>At any rate, it sounds like the best thing to do is read up on Javascript inheritance:\n<a href=\"http://javascript.crockford.com/inheritance.html\">http://javascript.crockford.com/inheritance.html</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Someone posted an article by douglas crockford in this question, and it explains exactly what your asking.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/1809914/oo-javascript-constructor-pattern-neo-classical-vs-prototypal\">http://stackoverflow.com/questions/1809914/oo-javascript-constructor-pattern-neo-classical-vs-prototypal</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can't avoid <code>new</code> in the general case (without going to extremes, as per the Crockford article Zoidberg indirectly linked to) if you want inheritance and <code>instanceof</code> to work, but then (again), why would you want or need to?</p>\n\n<p>The only reason I can think of where you'd want to avoid it is if you're trying to pass a constructor function to another piece of code that doesn't know it's a constructor. In that case, just wrap it up in a factory function:</p>\n\n<pre><code>function b() {\n    // ...\n}\nfunction makeB() {\n    return new b();\n}\nvar c = makeB();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The simple answer to your specific question is: no.</p>\n\n<p>It would help you identified why you want to avoid <code>new</code>.  Perhaps the patterns alluded to by one of the other answers will help.  However none of them result in the <code>instanceof</code> returning true in your tests.</p>\n\n<p>The new operation is essentially:- </p>\n\n<pre><code>var x = (function(fn) { var r = {}; fn.call(r); return r;}(b);\n</code></pre>\n\n<p>However there is the difference that the constructing <code>fn</code> is attached to the object using some internal property (yes you can get it with <code>constructor</code> but setting it doesn't have the same effect).  The only way to get <code>instanceof</code> to work as intended is to use the <code>new</code> keyword.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>JavaScript objects can be created without using the new keyword.</p>\n\n<p>For example the following function returns an object without using new keyword</p>\n\n<pre>\n\nfunction a(){\n    var obj ={};\n    obj.name = \"hello\";\n    obj.age = 12;\n\n    return obj;\n\n}\n</pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The only way to get instanceof to work is to use the new keyword.  instanceof exploits <strong>__proto__</strong> which is established by <strong>new</strong>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use this pattern:</p>\n\n<pre><code>function SomeConstructor(){\n   if (!(this instanceof SomeConstructor)){\n        return new SomeConstructor();\n   }\n   //the constructor properties and methods here\n}\n</code></pre>\n\n<p>after which you can do:</p>\n\n<pre><code>var myObj = SomeConstructor();\n</code></pre>\n\n<p>In addition to this (rather old) answer: you can use a <a href=\"http://www.adequatelygood.com/JavaScript-Module-Pattern-In-Depth.html\" rel=\"nofollow\"><strong>module pattern</strong></a> to create an object:</p>\n\n<pre><code>function Person(name, age, male) {\n  name = name || 'unknown';\n  age = age || 0;\n  function get() {\n    return ['This person is called ', name,\n            (!male ? ', her' : ', his'),' age is ',\n            age].join('');\n  }\n  function setAge(nwage) {\n     age = nwage;\n  }\n  return Object.freeze({get: get, setAge: setAge});\n}\n// usage\nvar jane =  Person('Jane', 23)\n   ,charles = Person('Charles', 32, 1)\n   ,mary = Person('Mary', 16);\n\nconsole.log(jane.get()); //=&gt; This person is called Jane, her age is 23\nmary.setAge(17);\nconsole.log(jane.get()); //=&gt; This person is called Mary, her age is 17\n</code></pre>\n\n<p>Here's a <a href=\"http://jsfiddle.net/KooiInc/tqp24gfc/\" rel=\"nofollow\"><strong>jsFiddle</strong></a> for some <code>Date</code> functionallity I created using that pattern.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Yes you can do this.</p>\n\n<pre><code>var User = function() {\n  var privateMethod = function() {\n    alert('hello');\n  }\n\n  return {\n    sayHello : function() {\n      privateMethod();\n      this.done = true;\n    }\n  }\n}\n\nvar user1 = User();\n</code></pre>\n\n<p>Is anything wrong with this method?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In a javascript bookmarklet, you could use eval(unescape(\"...\")) to create object without \"new\" operator:</p>\n\n<pre><code>javascript:xhr=eval(unescape('new\\x20XMLHttpRequest();'));alert(xhr);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For those, who may find this via Google (like me...), I developed the original solution further for a better common usage:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>var myObject = function() {}; // hint: Chrome debugger will name the created items 'myObject'\r\n\r\nvar object = (function(myself, parent) {  \r\n     return function(myself, parent) {\r\n         if(parent){\r\n             myself.prototype = parent;\r\n         }\r\n         myObject.prototype = myself.prototype;\r\n         return new myObject();\r\n     };\r\n})(); \r\n\r\na = function(arg) {\r\n     var me = object(a);\r\n     me.param = arg;\r\n     return me;\r\n};\r\n\r\nb = function(arg) {\r\n    var parent = a(arg),\r\n        me = object(b, parent)\r\n    ;\r\n    return me;\r\n};\r\n\r\nvar instance1 = a();\r\nvar instance2 = b(\"hi there\");\r\n\r\nconsole.log(\"---------------------------\")\r\nconsole.log('instance1 instance of a: ' +  (instance1 instanceof a))\r\nconsole.log('instance2 instance of b: ' +  (instance2 instanceof b))\r\nconsole.log('instance2 instance of a: ' +  (instance2 instanceof a))\r\nconsole.log('a() instance of a: ' +  (a() instanceof a))\r\nconsole.log(instance1.param)\r\nconsole.log(instance2.param)</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Here is what I'd like to do:</p>\n\n<pre><code>function a() {\n  // ...\n}\nfunction b() {\n  //  Some magic, return a new object.\n}\nvar c = b();\n\nc instanceof b // -&gt; true\nc instanceof a // -&gt; true\nb instanceof a // -&gt; true\n</code></pre>\n\n<p>Is it possible? I can make <code>b</code> be an instance of <code>a</code> easily by hooking <code>a</code> into its prototype chain but then I have to do <code>new b()</code>, which is what I'm trying to avoid. Is what I want possible?</p>\n\n<p><strong>Update:</strong> I feel that it might be possible with judicious use of <code>b.__proto__ = a.prototype</code>. I'm going to experiment more after work.</p>\n\n<p><strong>Update 2:</strong> Below is what seems to be the closest you can get, which is good enough for me. Thanks all for the interesting answers.</p>\n\n<pre><code>function a() {\n  // ...\n}\nfunction b() {\n  if (!(this instanceof arguments.callee)) {\n    return new arguments.callee();\n  }\n}\nb.__proto__ = a.prototype\n\nvar c = b();\nc instanceof b // -&gt; true\nc instanceof a // -&gt; false\nb instanceof a // -&gt; true\n</code></pre>\n\n<p><strong>Update 3:</strong> I found exactly what I wanted in a <a href=\"http://blog.higher-order.net/2008/02/21/javascript-parasitic-inheritance-power-constructors-and-instanceof/\">blog post on 'power constructors'</a>, once I added the essential <code>b.__proto__ = a.prototype</code> line:</p>\n\n<pre><code>var object = (function() {\n     function F() {}\n     return function(o) {\n         F.prototype = o;\n         return new F();\n     };\n})();\n\nfunction a(proto) {\n  var p = object(proto || a.prototype);\n  return p;\n}\n\nfunction b(proto) {\n  var g = object(a(proto || b.prototype));\n  return g;\n}\nb.prototype = object(a.prototype);\nb.__proto__ = a.prototype;\n\nvar c = b();\nc instanceof b // -&gt; true\nc instanceof a // -&gt; true\nb instanceof a // -&gt; true\na() instanceof a // -&gt; true\n</code></pre>\n",
            "last_activity_date": 1422034703,
            "question_id": 1889014,
            "score": 11,
            "tags": [
                "javascript",
                "inheritance",
                "prototype",
                "constructor"
            ],
            "title": "Can I construct a JavaScript object without using the new keyword?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Top Google result for \"javascript this\": <a href=\"http://www.quirksmode.org/js/this.html\" rel=\"nofollow\">http://www.quirksmode.org/js/this.html</a></p>\n\n<p><b>Edit:</b> I think the key sentence is: </p>\n\n<p>\"In JavaScript \"this\" always refers to the \u201cowner\u201d of the function we're executing, or rather, to the object that the function is a method of.\"</p>\n\n<p>Quirksmode is (generally*) excellent, worth reading the whole article in detail.</p>\n\n<p>*Apparently this statement is not necessarily correct, see T.J. Crowder's comment below.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>this</code> in JavaScript is very special and powerful. It can mean just about anything. I cover some of it <a href=\"http://blog.niftysnippets.org/2008/03/mythical-methods.html\" rel=\"nofollow\">here</a> and <a href=\"http://blog.niftysnippets.org/2008/04/you-must-remember-this.html\" rel=\"nofollow\">here</a>, but it's really worth finding a good tutorial on JavaScript and spending some time with it.</p>\n\n<p>Let's look at jQuery's use of it first, then talk about it more generally in JavaScript (a bit).</p>\n\n<h2>In jQuery, specifically</h2>\n\n<p>In code written with jQuery, <code>this</code> <em>usually</em> refers to the DOM element that's the subject of the function being called (for instance, in an event callback).</p>\n\n<p>Example jQuery event callback (what <code>this</code> is is covered in <a href=\"http://api.jquery.com/bind/\" rel=\"nofollow\">the <code>.bind</code> docs</a>):</p>\n\n<pre><code>$(\"div\").click(function() {\n    // Here, `this` will be the DOM element for the div that was clicked,\n    // so you could (for instance) set its foreground color:\n    this.style.color = \"red\";\n\n    // You'll frequently see $(this) used to wrap a jQuery object around the\n    // element, because jQuery makes lots of things a lot simpler. You might\n    // hide the element, for example:\n    $(this).hide();\n});\n</code></pre>\n\n<p>Similarly, various jQuery functions that act on all of the elements matched by the current jQuery selector can optionally accept a function, and when that function gets called, <code>this</code> is again the DOM element in question&nbsp;&mdash; for instance, the <a href=\"http://api.jquery.com/html/\" rel=\"nofollow\"><code>html</code></a> function allows this:</p>\n\n<pre><code>// Find all divs inside the `foo` element, and set\n// their content to their CSS class name(s)\n// (Okay, so it's a hokey example)\n$(\"#foo div\").html(function() {\n    return this.className;\n});\n</code></pre>\n\n<p>Another place jQuery uses <code>this</code> is in the callback on <a href=\"http://api.jquery.com/jQuery.each/\" rel=\"nofollow\"><code>jQuery.each</code></a>:</p>\n\n<pre><code>var a = [\"one\", \"two\", \"three\"];\njQuery.each(a, function() {\n    alert(this);\n});\n</code></pre>\n\n<p>...which will alert \"one\", then \"two\", then \"three\". As you can see, this is a totally different usage of <code>this</code>.</p>\n\n<p>(Confusingly, jQuery has two functions called <code>each</code>, the one above which is on the jQuery/$ function itself and always called that way [<code>jQuery.each(...)</code> or <code>$.each(...)</code>], and a different one on jQuery <em>instances</em> [objects] rather than the jQuery/$ function iself. <a href=\"http://api.jquery.com/each/\" rel=\"nofollow\">Here are the docs</a> for the other one, I don't discuss the other one in this answer because it uses <code>this</code> the same way <code>html</code> and event callback do, and I wanted to show a <em>different</em> use of <code>this</code> by jQuery.)</p>\n\n<h2>Generically in JavaScript</h2>\n\n<p><s><code>this</code> refers to an object.</s> <em>Update:</em> As of ES5's strict mode, that's no longer true, <code>this</code> can have any value. The value of <code>this</code> within any given function call is determined by <em>how the function is called</em> (not where the function is defined, as in languages like C# or Java). The most common way to set up <code>this</code> when calling a function is by calling the function via a property on the object:</p>\n\n<pre><code>var obj = {};\nobj.foo = function() {\n    alert(this.firstName);\n};\nobj.firstName = \"Fred\";\nobj.foo(); // alerts \"Fred\"\n</code></pre>\n\n<p>There, because we called <code>foo</code> via a property on <code>obj</code>, <code>this</code> was set to <code>obj</code> for the duration of the call. But don't get the impression that <code>foo</code> is in any way married to <code>obj</code>, this works just fine:</p>\n\n<pre><code>var obj = {};\nobj.foo = function() {\n    alert(this.firstName);\n};\nobj.firstName = \"Fred\";\nobj.foo(); // alerts \"Fred\"\n\nvar differentObj = {};\ndifferentObj.firstName = \"Barney\";\ndifferentObj.bar = obj.foo; // Not *calling* it, just getting a reference to it\ndifferentObj.bar(); // alerts \"Barney\"\n</code></pre>\n\n<p>In fact, <code>foo</code> isn't intrinsically tied to <em>any</em> object at all:</p>\n\n<pre><code>var f = obj.foo; // Not *calling* it, just getting a reference to it\nf(); // Probably alerts \"undefined\"\n</code></pre>\n\n<p>There, since we didn't call <code>f</code> via an object property, <code>this</code> wasn't explicitly set. When <code>this</code> isn't explicitly set, it defaults to the global object (which is <code>window</code> in browsers). <code>window</code> probably doesn't have a property <code>firstName</code>, and so we got \"undefined\" in our alert.</p>\n\n<p>There are other ways to call functions and set what <code>this</code> is: By using the function's <code>.call</code> and <code>.apply</code> functions:</p>\n\n<pre><code>function foo(arg1, arg2) {\n    alert(this.firstName);\n    alert(arg1);\n    alert(arg2);\n}\n\nvar obj = {firstName: \"Wilma\"};\nfoo.call(obj, 42, 27); // alerts \"Wilma\", \"42\", and \"27\"\n</code></pre>\n\n<p><code>call</code> sets <code>this</code> to the first argument you give it, and then passes along any other arguments you give it to the function it's calling.</p>\n\n<p><code>apply</code> does exactly the same thing, but you give it the arguments for the function as an array instead of individually:</p>\n\n<pre><code>var obj = {firstName: \"Wilma\"};\nvar a   = [42, 27];\nfoo.apply(obj, a); // alerts \"Wilma\", \"42\", and \"27\"\n//             ^-- Note this is one argument, an array of arguments for `foo`\n</code></pre>\n\n<p>Again, though, there's a lot more to explore about <code>this</code> in JavaScript. The concept is powerful, a bit deceptive if you're used to how some other languages do it (and not if you're used to some others), and worth knowing.</p>\n\n<p>Here are some examples of <code>this</code> not referring to an object in ES5's strict mode:</p>\n\n<pre><code>(function() {\n    \"use strict\";   // Strict mode\n\n    test(\"direct\");\n    test.call(5, \"with 5\");\n    test.call(true, \"with true\");\n    test.call(\"hi\", \"with 'hi'\");\n\n    function test(msg) {\n        console.log(\"[Strict] \" + msg + \"; typeof this = \" + typeof this);\n    }\n})();\n</code></pre>\n\n<p>Output:</p>\n\n<pre>[Strict] direct; typeof this = undefined\n[Strict] with 5; typeof this = number\n[Strict] with true; typeof this = boolean\n[Strict] with 'hi'; typeof this = string</pre>\n\n<p>Whereas in loose mode, all of those would have said <code>typeof this = object</code>; <a href=\"http://jsbin.com/ukiMIsI/1\" rel=\"nofollow\">live copy</a>.</p>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>The keyword this acts as a placeholder, and will refer to whichever object called that method when the method is actually used in Java Script</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In jquery, what does <code>this</code> means and when it is used?</p>\n",
            "last_activity_date": 1405117829,
            "question_id": 4195970,
            "score": 9,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "What does &quot;this&quot; mean?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Clipboard functionality is a key part of <a href=\"https://chrome.google.com/webstore/detail/template/dcjnfaoifoefmnbhhlbppaebgnccfddf\">my extension</a> so I've seen all the normal problems. On my background page I expose a <code>copy</code> and a <code>paste</code> function and the page itself contains <code>&lt;textarea id=\"sandbox\"&gt;&lt;/textarea&gt;</code>;</p>\n\n<pre><code>function copy(str) {\n    var sandbox = $('#sandbox').val(str).select();\n    document.execCommand('copy');\n    sandbox.val('');\n}\n\nfunction paste() {\n    var result = '',\n        sandbox = $('#sandbox').val('').select();\n    if (document.execCommand('paste')) {\n        result = sandbox.val();\n    }\n    sandbox.val('');\n    return result;\n}\n</code></pre>\n\n<p>I'm using <a href=\"http://jquery.com/\">jQuery</a> for simplicity but you get the idea. Now any time I want to use the clipboard functionality I simply call the relevant function. Other pages in my extension can access this API via <a href=\"https://developer.chrome.com/extensions/extension#method-getBackgroundPage\">chrome.extension.getBackgroundPage()</a> but you can also use <a href=\"https://developer.chrome.com/extensions/runtime#method-getBackgroundPage\">chrome.runtime.getBackgroundPage(callback)</a> if your background page is an <a href=\"https://developer.chrome.com/extensions/event_pages\">event page</a>.</p>\n\n<p>I'm not sure if this is best practice or if such a thing even exists for this functionality yet but this definitely works for me and is very clean.</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>This is too long for a comment on Alasdair's excellent response, so I'm creating another answer. Alasdair's answer is excellent and worked great for me, but as a newcomer to Chrome extensions it still took me a while to get it working. For anyone in a similar position, here is an expansion on his answer.</p>\n\n<p>Background/event pages are able to interact with the system clipboard, provided you've requested the appropriate permissions. They are not able to interact with the DOM of pages the user has loaded. Content scripts cannot interact with the system clipboard, but they can interact with the DOM of pages the user has loaded. Take a look at the <a href=\"https://developer.chrome.com/extensions/overview#arch\" rel=\"nofollow\">explanation of the extension architecture</a> for a good overview of all this.</p>\n\n<p>This essentially means you need to do the copy/paste actions from the system clipboard in your event/background pages, which is what Alasdair has outlined above. Any pasting or copying from the DOM of the page the user is viewing has to occur in your content script. The two scripts are able to communicate pretty easily with <a href=\"https://developer.chrome.com/extensions/messaging\" rel=\"nofollow\">message passing</a>.</p>\n\n<p>I have <a href=\"https://chrome.google.com/webstore/detail/biotool/aenbjmfdhgnlpnpiiinajokpgchogmee\" rel=\"nofollow\">an extension</a> whose only purpose is to paste, and the architecture came largely from this post. If you want to see the above technique in practice, <a href=\"https://github.com/srsudar/biotool\" rel=\"nofollow\">take a look at the code</a>. In particular, <a href=\"https://github.com/srsudar/biotool/blob/2e460ce17bb96828f6912ff9eaf2fd6051ae0dc4/app/background.html\" rel=\"nofollow\">background.html</a>, <a href=\"https://github.com/srsudar/biotool/blob/2e460ce17bb96828f6912ff9eaf2fd6051ae0dc4/app/scripts/background.js\" rel=\"nofollow\">background.js</a>, and <a href=\"https://github.com/srsudar/biotool/blob/2e460ce17bb96828f6912ff9eaf2fd6051ae0dc4/app/scripts/contentscript.js\" rel=\"nofollow\">contentscript.js</a>.</p>\n\n<p>If you're in a real hurry, <a href=\"https://gist.github.com/srsudar/e9a41228f06f32f272a2\" rel=\"nofollow\">here is a gist</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I'm trying to paste clipboard data into a textarea using <code>execcommand(\"paste\")</code> with a chome extension, but i cannot seem to get it to work. \npermissions are set. \nI have tried to set <code>focus()</code> on the textarea, but <code>document.execCommand(\"paste\")</code> does nothing, and I get no error.\ncalling <code>execcommand(\"paste\")</code> from background page also does nothing.</p>\n\n<pre><code>&lt;form&gt;\n     &lt;textarea id=\"ta\"&gt;&lt;/textarea&gt;    \n&lt;/form&gt;\n&lt;script type=\"text/javascript\"&gt;\n    document.findElemetById(\"ta\").focus();\n    document.execCommand(\"paste\");\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1406484760,
            "question_id": 7144702,
            "score": 7,
            "tags": [
                "javascript",
                "google-chrome-extension"
            ],
            "title": "the proper use of execcommand(&quot;paste&quot;) in a chrome extension"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<pre><code>window.onload = function() {\n   var elmt =  document.getElementsByTagName('body');\n   if(elmt){\n      elmt[0].className = 'javascript';\n   }\n}\n</code></pre>\n\n<p>That should do it. </p>\n\n<p>EDIT: Updated to get element by tag name not ID.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I dont know about vanilla JS, but you can write:</p>\n\n<pre><code>document.getElementsByTagName('body')[0].className += ' javascript';\n</code></pre>\n\n<p>at the bottom of the page (before closing the body tag).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Simple:</p>\n\n<pre><code>window.onload = function() {\n  document.body.className = \"javascript\";\n}\n</code></pre>\n\n<p>Or in HTML:</p>\n\n<pre><code>&lt;body onload=\"document.body.className = 'javascript'\"&gt;...&lt;/body&gt;\n</code></pre>\n\n<p>Unless you want to differentiate between \"before onload\" and \"after onload\", you can do it statically:</p>\n\n<pre><code>&lt;body class=\"javascript\"&gt;...&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you want to reproduce the jQuery's <code>document.ready</code> event, you can use the <a href=\"http://msdn.microsoft.com/en-us/library/ms536957%28VS.85%29.aspx\"><code>onreadystatechange</code></a> or <a href=\"https://developer.mozilla.org/En/Gecko-Specific%5FDOM%5FEvents#DOMContentLoaded\"><code>DOMContentLoaded</code></a> events where applicable:</p>\n\n<pre><code>function domReady () {\n  document.body.className += \" javascript\";\n  // ...\n}\n\n// Mozilla, Opera, Webkit \nif ( document.addEventListener ) {\n  document.addEventListener( \"DOMContentLoaded\", function(){\n    document.removeEventListener( \"DOMContentLoaded\", arguments.callee, false);\n    domReady();\n  }, false );\n\n// If IE event model is used\n} else if ( document.attachEvent ) {\n  // ensure firing before onload\n  document.attachEvent(\"onreadystatechange\", function(){\n    if ( document.readyState === \"complete\" ) {\n      document.detachEvent( \"onreadystatechange\", arguments.callee );\n      domReady();\n    }\n  });\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Did you try to put at the very end of your body the following?</p>\n\n<pre><code>&lt;script&gt;\n    document.body.className = 'javascript';\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>just put this</p>\n\n<pre><code>&lt;script&gt;document.body.className += ' javascript';&lt;/script&gt;\n</code></pre>\n\n<p>before <code>&lt;/body&gt;</code> tag. Simple and easy (and very close) solution.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If your aim is to add the class to <code>body</code> immediately as the page is loaded, perhaps to hide no-JS-fallback elements, you could do that just immediately inside the body tag rather than waiting for any events:</p>\n\n<pre><code>&lt;body&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        document.body.className+= ' javascript';\n    &lt;/script&gt;\n</code></pre>\n\n<p>(although in general if that's the aim it's better to remove the fallback elements as you go along replacing them with scripted elements, so that if one piece of script errors out all the other components on the page don't break.)</p>\n\n<p>This is the fastest way to bind to elements: do so just immediately after creating them (inside the open tag if you only need to alter the elements; just after the close tag if you need to alter their contents). However this approach does tend to litter the page with ugly <code>&lt;script&gt;</code> blocks, which is why more people put the code all at the bottom or use an load/ready-handler.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If just dealing with modern browsers, you could place this just after the opening <code>body</code> tag.</p>\n\n<pre><code>&lt;script&gt;\n     document.body.classList.add(\"javascript\");\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to rewrite this line without using jQuery so it can be applied quicker (and before the downloading of the jQuery library). The line is...</p>\n\n<pre><code>$(document).ready(function() { $('body').addClass('javascript'); });\n</code></pre>\n\n<p>If I added it to the <code>html</code> element instead, would I be able to leave off the DOM ready part? One problem with this though is the validator doesn't like the class attribute on the <code>html</code> element, even if it is inserted with JS.</p>\n\n<p>So, how would I rewrite that without jQuery?</p>\n",
            "last_activity_date": 1363214384,
            "question_id": 1795089,
            "score": 7,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How can I detect DOM ready and add a class without jQuery?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Note that move all vars to the top is different from \"allow one var statement per function\".  The requirement to move all variables to the top is new and doesn't seem to have a switch. More at      <a href=\"http://groups.google.com/group/jsmentors/browse_thread/thread/5e90c25230f8e22/70e1a95a20fb829e\" rel=\"nofollow\">http://groups.google.com/group/jsmentors/browse_thread/thread/5e90c25230f8e22/70e1a95a20fb829e</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can download <a href=\"https://github.com/douglascrockford/JSLint/commits/master/\">legacy versions</a> anytime, or modify the <a href=\"https://github.com/douglascrockford/JSLint\">latest version</a>. It's not that hard, really (search for <code>move_var</code>). Then run jslint locally, either using node, or using a browser with a simple HTML form - you may want to copy Crockford's original.</p>\n\n<p>Note that the warning was introduced as part of a <a href=\"https://github.com/douglascrockford/JSLint/commit/5675d2c6ee988f00865b61ed96d74444dbb7fb68#diff-2\">major rewrite</a>, and only occurs after <code>for(</code>, so the message is a little misleading.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>There's no way I'm going to put <code>var i;</code> from a <code>for(var i=0; ...; i++)</code> at the top of my functions.  Especially when <a href=\"http://ecma-international.org/ecma-262/5.1/#sec-12.6.3\">The JavaScript Specification</a> has it as an acceptable syntax in the <code>for</code> section (12.6).  Also, it's the syntax <a href=\"http://en.wikipedia.org/wiki/Brendan_Eich\">Brendan Eich</a> uses in his examples.</p>\n\n<p>The idea of moving the declaration to the top is that it is supposed to more accurately reflect what happens under the hood, however, doing so will only reflect, not affect.</p>\n\n<p>For me, this is a ridiculous expectation for <code>for</code> iterations.  More so because JSLint stops processing when it detects it.</p>\n\n<p>Whether having variables declared at the top of a function is more readable is debatable.  I personally prefer iterator variables to be declared when they are used.  I don't care if the variable is already created internally, I'm initialising it here so I am safe.  </p>\n\n<p>I would argue that declaring an iterator variable where they are used ensures they are not accidentally made global (if you move the loop out into another function, the iterator variable moves with it).  This is much more maintainable than having to maintain variable declarations at the top of functions.</p>\n\n<p>For now, I'm using <a href=\"http://www.javascriptlint.com/online_lint.php\">http://www.javascriptlint.com/online_lint.php</a> because it seems to focus on the important stuff.</p>\n",
                    "is_accepted": true,
                    "score": 116
                },
                {
                    "body": "<p>I had this problem on my codebase, when we wanted to switch to the latest version of JSLINT. We had a lot of those and people were not happy about moving the declaration. We actually found the most elegant solution was to use underscore.js and instead of having the full verbose loop, to use the _.each() function, which removed the JSLint error and made our code more functional, cleaner, tighter and easier to read.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Google Closure compiler will actually fail to correctly detect the type of the loop variable of a for...in loop unless it's declared like for (var i in ...) and no annotation seems to fix this, so the declaration cannot be moved to the top.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>JSLint site updated, and I cannot check JS scripts anymore. For me, this warning is not critical, and I don't want to go through thousands of lines to fix this, I want to find more critical problems.</p>\n\n<p>Does anybody know how to turn off this error, or use legacy JSLint?</p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>Example:</p>\n\n<pre><code>function doSomethingWithNodes(nodes){\n  this.doSomething();\n\n  for (var i = 0; i &lt; nodes.length; ++i){\n    this.doSomethingElse(nodes[i]);\n  }\n\n  doSomething(); // want to find this problem\n}\n</code></pre>\n\n<p>jslint.com output:</p>\n\n<pre><code>Error:\nProblem at line 4 character 8: Move all 'var' declarations to the top of the function.\n\nfor (var i = 0; i &lt; nodes.length; ++i){\n\nProblem at line 4 character 8: Stopping, unable to continue. (44% scanned).\n</code></pre>\n\n<p>Problem:</p>\n\n<p>Having variables on top of the functions is new requirement. I cannot use JSLINT to test code, because it stops scanning script on this error.</p>\n\n<p>I have a lot of code, and do not want to threat this warning as critical error.</p>\n\n<p>UPDATE 8/22/2011: found <a href=\"http://jshint.com\">http://jshint.com</a>, it looks much better than <a href=\"http://jslint.com/\">http://jslint.com/</a></p>\n",
            "last_activity_date": 1404973264,
            "question_id": 4646455,
            "score": 62,
            "tags": [
                "javascript",
                "jslint"
            ],
            "title": "JSLint error: Move all &#39;var&#39; declarations to the top of the function"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>It must return the number of years since the year 1900.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The number you get is the number of years since 1900. Don't ask me why..</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>use <code>date.getFullYear()</code>.</p>\n\n<p>This is (as correctly pointed out elsewhere) is a Y2K thing. Netscape (written before 2000) originally returned, for example <code>98</code> from <code>getYear()</code>. Rather than return to <code>00</code>, it instead returned <code>100</code> for the year 2000. Then other browsers came along and did it differently, and everyone was unhappy as incompatibility reigned.</p>\n\n<p>Later browsers supported <code>getFullYear</code> as a standard method to return the complete year.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>it is returning 4 digit year - 1900, which may have been cool 9+ years ago, but is pretty retarded now.  Java's java.util.Date also does this.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It's dumb. It <a href=\"http://www.irt.org/articles/js199/index.htm\" rel=\"nofollow\">dates to pre-Y2K days</a>, and now just returns the number of years since 1900 for legacy reasons. Use getFullYear() to get the actual year.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As others have said, it returns the number of years since 1900.  The reason why it does <em>that</em> is that when JavaScript was invented in the mid-90s, that behaviour was both convenient and consistent with date-time APIs in other languages.  Particularly C.  And, of course, once the API was established they couldn't change it for backwards compatibility reasons.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It's a <a href=\"http://en.wikipedia.org/wiki/Y2K\">Y2K</a> thing, only the years since 1900 are counted.</p>\n\n<p>There are potential compatibility issues now that <code>getYear()</code> has been deprecated in favour of <code>getFullYear()</code> - from <a href=\"http://www.quirksmode.org/js/introdate.html\">quirksmode</a>:</p>\n\n<blockquote>\n  <p>To make the matter even more complex, date.getYear() is deprecated nowadays and you should use date.getFullYear(), which, in turn, is not supported by the older browsers. If it works, however, it should always give the full year, ie. 2000 instead of 100.</p>\n  \n  <p>Your browser gives the following years with these two methods:</p>\n</blockquote>\n\n<pre><code>* The year according to getYear(): 108\n* The year according to getFullYear(): 2008\n</code></pre>\n\n<p>There are also implementation differences between Internet Explorer and Firefox, as IE's implementation of <code>getYear()</code> was changed to behave like <code>getFullYear()</code> - from <a href=\"http://www-128.ibm.com/developerworks/web/library/wa-ie2mozgd/\">IBM</a>:</p>\n\n<blockquote>\n  <p>Per the ECMAScript specification, getYear returns the year minus 1900, originally meant to return \"98\" for 1998. getYear was deprecated in ECMAScript Version 3 and replaced with getFullYear(). </p>\n  \n  <p>Internet Explorer changed getYear() to work like getFullYear() and make it Y2k-compliant, while Mozilla kept the standard behavior.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 82
                },
                {
                    "body": "<p>BTW, different browsers might return different results, so it's better to skip this function altogether and and use getFullYear() always.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Since getFullYear doesn't work in older browsers, you can use something like this:</p>\n\n<pre><code>Date.prototype.getRealYear = function() \n{ \n    if(this.getFullYear)\n        return this.getFullYear();\n    else\n        return this.getYear() + 1900; \n};\n</code></pre>\n\n<p>Javascript prototype can be used to extend existing objects, much like C# extension methods. Now, we can just do this;</p>\n\n<pre><code>var myDate = new Date();\nmyDate.getRealYear();\n// Outputs 2008\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>This question is so old that it makes me weep with nostalgia for the dotcom days!  </p>\n\n<p>That's right, Date.getYear() returns the number of years since 1900, just like Perl's localtime().  One wonders why a language designed in the 1990s wouldn't account for the century turnover, but what can I say?  You had to be there.  It sort of made a kind of sense at the time (like pets.com did).</p>\n\n<p>Before 2000, one might have been tempted to fix this bug by appending \"19\" to the result of getYear() resulting in the <a href=\"http://www.theregister.co.uk/2000/01/04/transmeta_screws_up_on_y2k/\" rel=\"nofollow\">\"year 19100 bug\"</a>.  Others have already answered this question sufficiently (add 1900 to the result of getDate()).  </p>\n\n<p>Maybe the book you're reading about JavaScript is a little old? </p>\n\n<p>Thanks for the blast from the past!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Check the docs.  It's not a Y2K issue -- it's a lack of a Y2K issue!  This decision was made originally in C and was copied into Perl, apparently JavaScript, and probably several other languages.  That long ago it was apparently still felt desirable to use two-digit years, but remarkably whoever designed that interface had enough forethought to realize they needed to think about what would happen in the year 2000 and beyond, so instead of just providing the last two digits, they provided the number of years since 1900.  You could use the two digits, if you were in a hurry or wanted to be risky.  Or if you wanted your program to continue to work, you could add 100 to the result and use full-fledged four-digit years.</p>\n\n<p>I remember the first time I did date manipulation in Perl.  Strangely enough I <strong>read the docs</strong>.  Apparently this is not a common thing.  A year or two later I got called into the office on December 31, 1999 to fix a bug that had been discovered at the last possible minute in some contract Perl code, stuff I'd never had anything to do with.  It was this exact issue: the standard date call returned years since 1900, and the programmers treated it as a two-digit year.  (They assumed they'd get \"00\" in 2000.)  As a young inexperienced programmer, it blew my mind that we'd paid so much extra for a \"professional\" job, and those people hadn't even bothered to read the documentation.  It was the beginning of many years of disillusionment; now I'm old and cynical. :)</p>\n\n<p>In the year 2000, the annual YAPC Perl conference was referred to as \"YAPC 19100\" in honor of this oft-reported non-bug.</p>\n\n<p>Nowadays, in the Perl world at least, it makes more sense to use a standard module for date-handling, one which uses real four-digit years.  Not sure what might be available for JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You should, as pointed out, never use <code>getYear()</code>, but instead use <code>getFullYear()</code>.</p>\n\n<p>The story is however not as simple as \"IE implements <code>GetYear()</code> as <code>getFullYear()</code>.  Opera and IE these days treat <code>getYear()</code> as <code>getYear()</code> was originally specified for dates before 2000, but will treat it as <code>getFullYear()</code> for dates after 2000, while webkit and Firefox stick with the old behavior</p>\n\n<p>This outputs 99 in all browsers:</p>\n\n<pre><code>javascript:alert(new Date(917823600000).getYear());\n</code></pre>\n\n<p>This outputs 108 in FF/WebKit, and 2008 in Opera/IE:</p>\n\n<pre><code>javascript:alert(new Date().getYear());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>var date_object=new Date();\nvar year = date_object.getYear();\nif(year &lt; 2000) {\n    year = year + 1900;\n}\n//u will get the full year ....</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I am using <code>date.getUTCFullYear()</code>;\nworking without problems.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Why does this javascript return 108 instead of 2008? it gets the day and month correct but not the year?</p>\n\n<pre><code>myDate = new Date();\nyear = myDate.getYear();\n</code></pre>\n\n<p>year = 108?</p>\n",
            "last_activity_date": 1355563104,
            "question_id": 98124,
            "score": 59,
            "tags": [
                "javascript",
                "date"
            ],
            "title": "Why does Javascript getYear() return 108?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>How about <code>.delay()</code> ?</p>\n\n<p><a href=\"http://api.jquery.com/delay/\">http://api.jquery.com/delay/</a></p>\n\n<pre><code>$(\"#test\").animate({\"top\":\"-=80px\"},1500)\n          .delay(1000)\n          .animate({\"opacity\":\"0\"},500);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 95
                },
                {
                    "body": "<p>If you can't use the delay method as Robert Harvey suggested, you can use <code>setTimeout</code>.</p>\n\n<p>Eg.</p>\n\n<pre><code>setTimeout(function() {$(\"#test\").animate({\"top\":\"-=80px\"})} , 1500); // delays 1.5 sec\nsetTimeout(function() {$(\"#test\").animate({\"opacity\":\"0\"})} , 1500 + 1000); // delays 1 sec after the previous one\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 55
                }
            ],
            "body": "<p>i want move up the object, delay 1000ms , then hide it,</p>\n\n<p>i get the code:</p>\n\n<pre><code>$(\"#test\").animate({\"top\":\"-=80px\"},1500)\n      .animate({\"top\":\"-=0px\"},1000)\n      .animate({\"opacity\":\"0\"},500);\n</code></pre>\n\n<p>i use \".animate({\"top\":\"-=0px\"},1000)\" to implement delay, it's not good.</p>\n\n<p>i want:</p>\n\n<pre><code>$(\"#test\").animate({\"top\":\"-=80px\"},1500)\n      .sleep(1000)\n      .animate({\"opacity\":\"0\"},500);\n</code></pre>\n\n<p>any idea? thanks! :)</p>\n",
            "last_activity_date": 1351631668,
            "question_id": 2939980,
            "score": 58,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Jquery: how to sleep or delay?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<pre><code>$('#someelement').bind('click', function(event){\n   if(event.ctrlKey)\n      console.log('ctrl');\n   if(event.altKey)\n      console.log('alt');\n   if(event.shiftKey)\n      console.log('shift');\n\n});\n</code></pre>\n\n<p>I don't know if it's possible to check for left/right keys within a click event, but I don't think it's possible.</p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>Well you this wont work in all browsers just IE 8. Microsoft implemented the ability to determine which (right/left) key was pressed.  Here is a link <a href=\"http://msdn.microsoft.com/en-us/library/ms534630%28VS.85%29.aspx\">http://msdn.microsoft.com/en-us/library/ms534630(VS.85).aspx</a></p>\n\n<p>I also found this wonder article about keypress, keyup, keydown event in browsers.\n<a href=\"http://unixpapa.com/js/key.html\">http://unixpapa.com/js/key.html</a></p>\n\n<pre><code>$('#someelement').bind('click', function(event){ \n\n    if(event.ctrlKey) {\n      if (event.ctrlLeft) {\n        console.log('ctrl-left'); \n      }\n      else {\n        console.log('ctrl-right');\n      }\n    }\n    if(event.altKey) {\n      if (event.altLeft) {\n        console.log('alt-left'); \n      }\n      else {\n        console.log('alt-right');\n      }\n    }\n    if(event.shiftKey) {\n      if (event.shiftLeft) {\n        console.log('shift-left'); \n      }\n      else\n      {\n        console.log('shift-right');\n      }\n    }\n  }); \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>Use <a href=\"http://code.google.com/p/js-hotkeys/\" rel=\"nofollow\">js-hotkeys</a>. It is a jQuery plugin.</p>\n\n<p>This is a test to show what you are looking for. It also shows you how to capture left, right, up, down keys standard and those from numeric key pad (the one with numbers 2,4,6,8)!\n<a href=\"http://afro.systems.googlepages.com/test-static-08.html\" rel=\"nofollow\">http://afro.systems.googlepages.com/test-static-08.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Easier than anything: you use keydown event to check if it's CTRL (17) or SHIFT (16), you then use keyup event to check if it's ENTER (13) and CTRL or SHIFT hit before (on key down)\ncancel CTRL or SHIFT on any keyup but ENTER</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How could I identify <strong>which</strong> <kbd>Ctrl</kbd> / <kbd>Shift</kbd> / <kbd>Alt</kbd> keys are pressed in the following code ?</p>\n\n<pre><code>$(\"#my_id\").click(function() {\n    if (&lt;left control key is pressed&gt;) { alert(\"Left Ctrl\"); }\n    if (&lt;right shift and left alt keys are pressed&gt;) { alert(\"Right Shift + Left Alt\"); }\n});\n</code></pre>\n",
            "last_activity_date": 1410418888,
            "question_id": 2847135,
            "score": 38,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "firefox3.6"
            ],
            "title": "Check Ctrl / Shift / Alt keys on &#39;click&#39; event"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Set trigger for both the form and the inputs, but when the input events are triggered, stop the propagation to the form by calling the <a href=\"http://docs.jquery.com/Events/jQuery.Event#event.stopPropagation.28.29\" rel=\"nofollow\">stopPropagation</a> method.</p>\n\n<p>By the way, IMHO, it's not a great thing to change default behaviors to anything any average user is used to - that's what make them angry when using your system. But if you insist, then the <code>stopPropagation</code> method is the way to go.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can mimic the tab key press instead of enter on the inputs like this:</p>\n\n<pre><code>//Press Enter in INPUT moves cursor to next INPUT\n$('#form').find('.input').keypress(function(e){\n    if ( e.which == 13 ) // Enter key = keycode 13\n    {\n        $(this).next().focus();  //Use whatever selector necessary to focus the 'next' input\n        return false;\n    }\n});\n</code></pre>\n\n<p>You will obviously need to figure out what selector(s) are necessary to focus on the <em>next</em> input when Enter is pressed.</p>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<p>Here is a modified version of my function. It does the following:</p>\n\n<ol>\n<li>Prevents the enter key from working\non any element of the form other\nthan the textarea, button, submit.</li>\n<li>The enter key now acts like a tab.</li>\n<li>preventDefault(), stopPropagation() being invoked on the element is fine, but invoked on the form seems to stop the event from ever getting to the element.</li>\n</ol>\n\n<p>So my workaround is to check the element type, if the type is not a textarea (enters permitted), or button/submit (enter = click) then we just tab to the next thing.</p>\n\n<p>Invoking .next() on the element is not useful because the other elements might not be simple siblings, however since DOM pretty much garantees order when selecting so all is well.</p>\n\n<pre><code>function preventEnterSubmit(e) {\n    if (e.which == 13) {\n        var $targ = $(e.target);\n\n        if (!$targ.is(\"textarea\") &amp;&amp; !$targ.is(\":button,:submit\")) {\n            var focusNext = false;\n            $(this).find(\":input:visible:not([disabled],[readonly]), a\").each(function(){\n                if (this === e.target) {\n                    focusNext = true;\n                }\n                else if (focusNext){\n                    $(this).focus();\n                    return false;\n                }\n            });\n\n            return false;\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>From a usability point of view, changing the enter behaviour to mimic a tab is a very bad idea. Users are used to using the enter key to submit a form. That's how the internet works. You should not break this.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The post Enter Key as the Default Button describes how to set the default behaviour for enter key press. However, sometimes, you need to disable form submission on Enter Key press. If you want to prevent it completely, you need to use OnKeyPress handler on  tag of your page.</p>\n\n<pre><code>&lt;body OnKeyPress=\"return disableKeyPress(event)\"&gt;\n</code></pre>\n\n<p>The javascript code should be:</p>\n\n<pre><code>&lt;script language=\"JavaScript\"&gt;\n\nfunction disableEnterKey(e)\n{\n     var key;      \n     if(window.event)\n          key = window.event.keyCode; //IE\n     else\n          key = e.which; //firefox      \n\n     return (key != 13);\n}\n\n&lt;/script&gt;\n</code></pre>\n\n<p>If you want to disable form submission when enter key is pressed in an input field, you must use the function above on the OnKeyPress handler of the input field as follows:</p>\n\n<pre><code>&lt;input type=\"text\" name=\"txtInput\" onKeyPress=\"return disableEnterKey(event)\"&gt;\n</code></pre>\n\n<p>Source: <a href=\"http://www.bloggingdeveloper.com/post/Disable-Form-Submit-on-Enter-Key-Press.aspx\" rel=\"nofollow\">http://www.bloggingdeveloper.com/post/Disable-Form-Submit-on-Enter-Key-Press.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Note that single input forms always get submitted when the enter key is pressed. The only way to prevent this from happening is this:</p>\n\n<pre><code>&lt;form action=\"/search.php\" method=\"get\"&gt;\n&lt;input type=\"text\" name=\"keyword\" /&gt;\n&lt;input type=\"text\" style=\"display: none;\" /&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>In my case i wanted to prevent it only in a dinamically created field, and activate some other button, so it was a little bit diferent.</p>\n\n<pre><code>$(document).on( 'keypress', '.input_class', function (e) {\n    if (e.charCode==13) {\n        $(this).parent('.container').children('.button_class').trigger('click');\n        return false;\n    }\n});\n</code></pre>\n\n<p>In this case it will catch the enter key on all input's with that class, and will trigger the button next to them, and also prevent the primary form to be submited.</p>\n\n<p>Note that the input and the button have to be in the same container.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I just wrote this nifty little function which works on the form itself...</p>\n\n<pre><code>$(\"#form\").keypress(function(e){\n    if (e.which == 13) {\n       var tagName = e.target.tagName.toLowerCase(); \n       if (tagName !== \"textarea\") {\n           return false;\n       }\n   }\n}\n</code></pre>\n\n<p>In my logic I want to accept enters during input of a textarea. Also would be an added bonus to replace the enter key behavior of input fields with behavior to tab to the next input field (as if the tab key was pressed). Does anyone know of a way to use the event propagation model to correctly fire the enter key on the appropriate element, but prevent form submitting on it's press.</p>\n",
            "last_activity_date": 1387234074,
            "question_id": 1563062,
            "score": 34,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "Prevent form submission with enter key"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The <code>window</code> is the actual global object.</p>\n\n<p>The <code>screen</code> is the screen, it contains properties about the user's display.</p>\n\n<p>The <code>document</code> is where the DOM is.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p><code>Window</code> is the main JavaScript object root, also can be treated as the root of the document object model. You can access it as <code>window</code> in most of the cases (in the browser);</p>\n\n<p><code>window.screen</code> is a small information object about physical screen dimension.</p>\n\n<p><code>window.document</code> or just document is the main object of the visible document object model/DOM.</p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>the <code>window</code> contains everything, so you can call <code>window.screen</code> and <code>window.document</code> to get those elements. Check out this fiddle, pretty-printing the contents of each object: <a href=\"http://jsfiddle.net/JKirchartz/82rZu/\" rel=\"nofollow\">http://jsfiddle.net/JKirchartz/82rZu/</a></p>\n\n<p>You can also see the contents of the object in firebug/dev tools like this:</p>\n\n<pre><code>console.dir(window);\nconsole.dir(document);\nconsole.dir(screen);\n</code></pre>\n\n<p><code>window</code> is the root of everything, <code>screen</code> just has screen dimensions, and <code>document</code> is top  DOM object. so you can think of it as <code>window</code> being like a super-<code>document</code>...</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I see these terms used interchangeably as the global environment for the DOM.  What is the difference (if there is one) and when should I use each one?</p>\n",
            "last_activity_date": 1383662409,
            "question_id": 9895202,
            "score": 31,
            "tags": [
                "javascript"
            ],
            "title": "What is the difference between window, screen, and document in Javascript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<ol>\n<li><p>Same differences as they have always had.  There's no such thing as C# without automatic memory management.  Managed languages will have similar overhead as always.</p></li>\n<li><p>If it runs Javascript, you should be able to use jQuery (which is pure javascript).  You may need to call some MS functions for initialization, etc., but existing script functions ought to still run.</p></li>\n<li><p>The most reliable sources I've seen have indicated that (at least mostly) WinRT sits on top of Win32.  That \"Windows Kernel Services\" block is Win32's <code>kernel32.dll</code>.  Some upper-level Win32 stuff isn't used in Metro, but what application ever used ALL of Win32?</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Suggestion:</p>\n\n<ul>\n<li>Why don't you download the developer preview and look for yourself:</li>\n</ul>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/windows/apps/br229516\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/windows/apps/br229516</a></p>\n\n<p>Facts:</p>\n\n<ul>\n<li><p>Of course you'll still be able to use Win32 .dll's (at one level or another), just like you can with .Net.</p></li>\n<li><p>Windows 8 is officially over a year out: there's no way to say at this point what specific \"features\" and \"capabilities\" will be in the final release.</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>1) The point of allowing language choice is to let you choose a language for the intrinsic advantages of the language and not because it is the only way to access an API.  If you like dynamic languages, choose JavaScript.  If you like static typing, but don't want to deal with memory, use C#.  If you want the fastest execution (but the most ability to shoot yourself in the foot), choose C++.</p>\n\n<p>2)  That depends on what you mean by native.  If you just mean that you want them to look like Metro style apps, the best way is to use the WinJS libraries that ship with the developer preview SDK.  </p>\n\n<p>3)  WinRT gives you the ability to write and call your own C++ DLLs or C# Assemblies from your JavaScript code.  The restriction is that you have to expose the DLL as a WinRT object and you can't call any functions that are not otherwise allowed to be used in Metro style apps.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Regarding #1, the line-up would be roughly as follows:</p>\n\n<p>JavaScript - highest-level, dynamically typed, GC. You can only use HTML5/CSS for your UI, the XAML framework (<code>Windows.UI.XAML</code> namespace) is not available. Provides some standard JS APIs (specified by HTML5) in addition to the available surface of WinRT, such as local storage or IndexedDB. Being dynamically typed, heavy CPU-bound processing is likely to be slower than either .NET or C++, though the JS engine is still very fast due to being JIT-compiled and heavily optimized. You can consume C++ and .NET WinRT components, but not write your own in JS. Some aspects of language projection seem to be limited correspondingly - e.g. so far as I can see, there's no way to implement a WinRT interface in JS, for example. Existing JS libraries can usually be reused with no or minimal effort, so long as they work in IE10. </p>\n\n<p>.NET (C#/VB) - mid-level, statically typed with optional dynamic typing (<code>dynamic</code> keyword etc) and GC.  XAML UI framework is the default one for UI, but you can also use HTML by using <code>WebView</code> control. Provides full access to WinRT libraries, but also some of its own on top of that, which are sometimes more convenient to use (e.g. <code>Stream</code> vs <code>IInputStream</code>/<code>IOutputStream</code>). Also, the only one that includes special language-level support for asynchronous operations (<code>async</code> and <code>await</code> keywords), which are used heavily when using WinRT APIs due to their highly asynchronous design. Generally speaking, provides most syntactic sugar - aside from async stuff, you get LINQ to objects (which works over WinRT collections). Can write your own WinRT components, which can then be used from JS or C++/CX. Existing .NET libraries may or may not be readily reusable, depending on what classes in .NET Framework they rely on; components written for Silverlight or WP7 are most likely to be reusable with no or minimal changes, while components written for .NET 4 Full or Client Profile may require significant changes to run. </p>\n\n<p>C++/CX (Visual C++ Component Extensions) - low/mid-level, statically typed, no GC - refcounting only. Closest \"to the metal\" in that its object model is designed to map directly to WinRT with no impedance mismatch - hence refcounting - but still high-level enough to avoid boilerplate and be generally safe to use (e.g. exceptions rather than HRESULTs, strings seen as objects and not handles, <code>dynamic_cast</code> rather than <code>QueryInterface</code> etc). No additional layers, proxy objects etc between you and WinRT, all calls are direct. In most cases, fastest of all three, though the exact difference varies significantly depending on the specific task, and can be minuscule for some (e.g. event-driven app with no or little computation), and considerable for others (e.g. parsing or heavy math). UI story is same as for .NET. In addition, you get the entire C++ standard library available to you, as well as a subset of ATL. Can write your own WinRT components, which can then be used from JS or .NET. Existing C++ libraries may or may not be readily reusable, depending on which APIs they use; those that relies strictly on Standard C/C++ will usually work with no changes, while those that call Win32 APIs may pose a problem if they rely on APIs not available in Metro app container.</p>\n\n<hr>\n\n<p>Regarding #3, this video - <a href=\"http://channel9.msdn.com/Events/BUILD/BUILD2011/TOOL-789C\">http://channel9.msdn.com/Events/BUILD/BUILD2011/TOOL-789C</a> - should answer most of your questions regarding the use of Win32 (which I presume what \"low-level DLL\" means) from Metro apps. Note that while the video is about C++, this also fully applies to C#, as P/Invoke and COM Interop are still there. So if you can call it from C++, you can call it from C#.</p>\n",
                    "is_accepted": false,
                    "score": 40
                },
                {
                    "body": "<p>Other people have explain the difference between the 3 options wells, so I will not repeat it.</p>\n\n<p>However I think it comes done to:</p>\n\n<ul>\n<li>Choose what <strong>you</strong> know</li>\n<li>Choose what lets you reuse the most code</li>\n</ul>\n\n<p>So</p>\n\n<ul>\n<li>If you are a .net programmer then use C# or VB.Net</li>\n<li>If you are porting an app from the windows phone use C# or VB.NET</li>\n<li>If you have a big C++ code base, then consider using unmanaged C++ with WinRT</li>\n<li>If you have a website and wish to provide an off-line version of it, you may get good code (and skill) reuse by using JavaScript with HTML</li>\n<li>If <strong>you</strong> like JavaScript and HTML, but don\u2019t like .Net then use\u2026.</li>\n<li>Etc</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This video shows how to call your own C++ code from JScript:</p>\n\n<p><a href=\"http://channel9.msdn.com/posts/Raman-Sharma-Building-Metro-Style-Apps-with-C-and-JavaScript\" rel=\"nofollow\">http://channel9.msdn.com/posts/Raman-Sharma-Building-Metro-Style-Apps-with-C-and-JavaScript</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>From image below, Windows 8 Platform and tools. I know this mean I can use C++, C# or JavaScript for Metro style App. I also watch some build's keynote and I have couple of questions here.</p>\n\n<p><img src=\"http://www.windowsitpro.com/content/content/140554/windows8-platform-tools_2.jpg\" alt=\"Windows 8 Platform and Tools\">  </p>\n\n<ol>\n<li>Do they have any difference in C++, C# and JavaScript on WinRT, e.g. performance, feature, capability etc.</li>\n<li>How can I create <strong>native</strong> Metro App using JavaScript, do I need to use js library from MS or I can use whatever js that I familiar with, for example jQuery.</li>\n<li>In Metro style App, System Services is only WinRT, does this mean I can't use low-level dll anymore? Will this come with performance cost?</li>\n</ol>\n",
            "last_activity_date": 1316996196,
            "question_id": 7466303,
            "score": 26,
            "tags": [
                "c#",
                "javascript",
                "c++",
                "windows-8",
                "windows-runtime"
            ],
            "title": "C++, C# and JavaScript on WinRT"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can detect if the event is supported by:</p>\n\n<pre><code>if ('ontouchstart' in document.documentElement) {\n  //...\n}\n</code></pre>\n\n<p>Give a look to this article:</p>\n\n<ul>\n<li><a href=\"http://perfectionkills.com/detecting-event-support-without-browser-sniffing/\">Detecting event support without browser sniffing</a></li>\n</ul>\n\n<p>The <code>isEventSupported</code> function published there, is really good detecting a wide variety of events, and it's cross-browser.</p>\n",
                    "is_accepted": true,
                    "score": 52
                },
                {
                    "body": "<p>You could check if <code>typeof document.body.ontouchstart == \"undefined\"</code> to fall back to normal dom events</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I made a full demostration that works in every browser with the full source code of the solution of this problem: <a href=\"http://miloq.blogspot.com/2011/05/detect-touch-devices-javascript.html\" rel=\"nofollow\">Detect touch screen devices in Javascript</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use this code to detect if the device supports touch.</p>\n\n<p>Also work for windows 8 IE10 which uses 'MSPointerDown' event instead of 'touchmove'</p>\n\n<pre><code>var supportsTouch = false;\nif ('ontouchstart' in window) {\n    //iOS &amp; android\n    supportsTouch = true;\n} else if(window.navigator.msPointerEnabled) {\n    //Win8\n    supportsTouch = true;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>In an attempt to follow best practices, we're trying to use the proper JavaScript/jQuery events according to what device you are using. For example, we're building a mobile site that has an  tag that will have an onclick or touch event. In the case of an iPhone, we'd like to use the \"touchstart\" event. We'd like to test if their device supports \"touchstart\" before we bind that handler to the object. If it doesn't, then we will bind \"onclick\" instead.</p>\n\n<p>What is the best way to do this?</p>\n",
            "last_activity_date": 1358174651,
            "question_id": 2915833,
            "score": 26,
            "tags": [
                "javascript",
                "jquery",
                "iphone",
                "mobile",
                "unobtrusive-javascript"
            ],
            "title": "How to check browser for touchstart support using JS/jQuery?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Boolean primitives and boolean objects are not the same. <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Global%5FObjects/Boolean\">MDC Docs</a>:</p>\n\n<blockquote>\n  <p>Any object whose value is not\n  undefined or null, including a Boolean\n  object whose value is false, evaluates\n  to true when passed to a conditional\n  statement. </p>\n  \n  <p>This behavior does not apply to\n  Boolean primitives.</p>\n</blockquote>\n\n<p>The purpose of the boolean object is to convert non boolean objects into a boolean.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You can use the prototype to define functions that do custom operations on the Boolean, I think that would be the use of it compared to just using a primitive.</p>\n\n<p>Also I think there is an effort going on making javascript similar to other languages since javascript is often used for communication from webservices (using JSON).</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>The global function <code>Boolean()</code> can be used for type casting when called without <code>new</code>, eg</p>\n\n<pre><code>var foo = Boolean(bar); // equivalent to `var foo = !!bar`\n</code></pre>\n\n<p>When called with <code>new</code>, a wrapper object will be created additionally, which means that you can assign arbitrary properties to the object:</p>\n\n<pre><code>var foo = new Boolean(bar); // equivalent to `var foo = Object(Boolean(bar));`\nfoo.baz = 'quux';\nalert(foo.baz);\n</code></pre>\n\n<p>This is not possible with primitive values as primitives can't hold properties:</p>\n\n<pre><code>var foo = true;\nfoo.baz = 'quux';\nalert(foo.baz); // `foo.baz` is `undefined`\n</code></pre>\n\n<p>Assigning a property to a primitive doesn't produce an error because of auto-boxing, ie</p>\n\n<pre><code>foo.baz = 'quux';\n</code></pre>\n\n<p>will be interpreted as</p>\n\n<pre><code>// create and immediately discard a wrapper object:\n(new Boolean(foo)).baz = 'quux';\n</code></pre>\n\n<p>To get the primitive value back, you'll have to invoke the <code>valueOf()</code> method. This is needed if you want to actually use the wrapped value, because objects always evaluate to <code>true</code> in boolean contexts - even if the wrapped value is <code>false</code>.</p>\n\n<p>I've never come across a useful application of being able to assign properties to booleans, but boxing might be useful in cases where a reference to a primitive value is needed.</p>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<p>While others mentioned the theory, let me talk about the practical part:</p>\n\n<p>Because <code>Boolean</code> objects (as objects in general) are always truthy, it is considered bad practice to use them. In many years of JS programming, I have never used them, and I can't remember seeing <code>Boolean</code>s in other peoples' code either. Not even once.</p>\n\n<p>Using primitive values will avoid confusion and will make your code a little bit shorter.</p>\n\n<p>If you ever need a bool wrapped in an object, you might as well use an <code>Object</code> object like so:</p>\n\n<pre><code>foo = { value: false };\n</code></pre>\n\n<p>Also, calling the <code>Boolean()</code> constructor as a function (as in <code>foo = Boolean(bar)</code>) has the same effect as explicit typecasting using <code>!!</code>, and the latter is generally preferred over the former.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The Boolean class rocks. Instead of this spaghetti code:</p>\n\n<pre><code>if (foo===true) this.launch();\nelse this.dontLaunch();\n</code></pre>\n\n<p>You can do what any great programmer would do and extend the prototype!</p>\n\n<pre><code>Boolean.prototype.ifTrue=function(ifFunc,elseFunc){\n    if (this.valueOf()===true) ifFunc(); \n    else elseFunc();\n}\nvar foo=new Boolean(/*expression*/);\nfoo.ifTrue(this.launch.bind(this),this.dontLaunch.bind(this));\n</code></pre>\n\n<p>Much better now.   </p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>What is the use of:</p>\n\n<pre><code>var flag = new Boolean(false); \n</code></pre>\n\n<p>compared to:</p>\n\n<pre><code>var flag = false;\n</code></pre>\n\n<p>When would you actually use <code>new Boolean</code>? </p>\n",
            "last_activity_date": 1410360751,
            "question_id": 856324,
            "score": 26,
            "tags": [
                "javascript",
                "boolean"
            ],
            "title": "What is the purpose of new Boolean() in Javascript?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>It is theoretically possible, but there will be a lot of runtime support baggage involved (and even a full Javascript compiler or interpreter to support <code>eval</code>).</p>\n\n<p>Are you looking for an actual native code compiler, or are you looking for something that can bundle Javascript code along with a runtime into a single executable binary?</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>It's definitely doable, although the only way I know how to do it at the moment is a two step process...</p>\n\n<ol>\n<li>Compile the javascript to Java using <a href=\"https://developer.mozilla.org/en/Rhino_JavaScript_Compiler\">Mozilla Rhino JSC</a>.</li>\n<li>Compile the resulting java class file to executable using something like <a href=\"http://gcc.gnu.org/java/\">GNU's GCJ</a>.</li>\n</ol>\n\n<p>Why would you want to, though? What advantage do you expect to find?</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p><a href=\"https://wiki.mozilla.org/JavaScript:TraceMonkey\" rel=\"nofollow\">TraceMonkey</a> in FF3.5 do this to some parts of the javascript code. You may be able to get some directions from there!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As far as I know, there are no static compilers for javascript. It is certainly theoretically possible; however, a static compilation of javascript would need a very heavyweight runtime to support all of its features (such as dynamic typing and eval). As a small aside, when presented with the need to statically compile Python (another dynamic language), the <a href=\"http://codespeak.net/pypy/dist/pypy/doc/\">PyPy</a> developers ended up creating a language which was a very restricted subset of Python (called RPython), void of some of Python's more dynamic features, that was capable of being statically compiled.</p>\n\n<p>If you're asking this for the purpose of creating a standalone executable from Javascript code, I'm sure there must be wrappers which essentially would create an executable comtaining your script and an embedded Javascript VM (sadly, I don't know any offhand).</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>I'm sure microsoft has a downloadable Jscript (\"Microsoft's javascript\") compiler</p>\n\n<p>if you have windows:\nIf you write a javascript text file you can compile it by:\nopening the command prompt\nusing cd to get to the text file directory\n(if you have windows) type: C:\\WINDOWS\\Microsoft.NET\\Framework\\v2.0.50727\\jsc.exe textfile.js</p>\n\n<p>otherwise:\ndownload a jscript compiler\ntype the directory of the jscript compiler and then the name of the javascript text file</p>\n\n<p>you can add environment variables if you don't want to type out the whole directory name to the compiler.</p>\n\n<p>this guy explains it better:\n<a href=\"http://www.phpied.com/make-your-javascript-a-windows-exe/\" rel=\"nofollow\">http://www.phpied.com/make-your-javascript-a-windows-exe/</a></p>\n\n<p>I personally think this is really cool. I just wish there was more documentation for it.</p>\n\n<p>I'm pretty sure that is what you're looking for, but I'm a bit new.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Please note that all of these solutions are <code>DOM</code>less, so no libraries like <code>angular.js</code> or <code>jquery</code>, only <code>underscore.js</code>/<code>lodash</code></p>\n\n<p>Following up to <em>Falaina</em>'s answer, \n<strong>PyPy</strong> <em>does have</em> a dist for <a href=\"https://bitbucket.org/pypy/lang-js/\" rel=\"nofollow\">JavaScript</a></p>\n\n<p>Also, <a href=\"http://www.appcelerator.com/\" rel=\"nofollow\">Appcelerator Titanium</a> has a <code>js</code> > <code>JavaBit</code> > <code>android</code></p>\n\n<p>Finally, <code>node.js</code> can use <a href=\"https://github.com/crcn/nexe\" rel=\"nofollow\">nexe</a>\nExplained in this other <a href=\"http://stackoverflow.com/questions/6145561/is-there-a-way-to-compile-node-js-source-files\">answer</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Google V8 engine compiles JavaScript into native machine code. This feature is used in <a href=\"http://enclosejs.com/\" rel=\"nofollow\">EncloseJS</a> - compiler for node.js and io.js projects.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a native machine code compiler for JavaScript?\nI'm not talking about a VM.\nIf it doesn't exist can it be done?<br>\nI am wondering if it can be compiled to binary due to the dynamic nature of the language.  </p>\n",
            "last_activity_date": 1423400166,
            "question_id": 1118138,
            "score": 25,
            "tags": [
                "javascript",
                "nativecompilation"
            ],
            "title": "Is there a native machine code compiler for JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It is not possible to make a JSONP POST request.</p>\n\n<p>JSONP works by creating a <code>&lt;script&gt;</code> tag that executes Javascript from a different domain; it is not possible to send a POST request using a <code>&lt;script&gt;</code> tag.</p>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>There's a (hack) solution I've did it many times, you'll be able to Post with JsonP.\n(You'll be able to Post Form, bigger than 2000 char than you can use by GET)</p>\n\n<p><strong>Client application Javascript</strong></p>\n\n<pre><code>$.ajax({\n  type: \"POST\", // you request will be a post request\n  data: postData, // javascript object with all my params\n  url: COMAPIURL, // my backoffice comunication api url\n  dataType: \"jsonp\", // datatype can be json or jsonp\n  success: function(result){\n    console.dir(result);\n  }\n});\n</code></pre>\n\n<p><strong>JAVA:</strong></p>\n\n<pre><code>response.addHeader( \"Access-Control-Allow-Origin\", \"*\" ); // open your api to any client \nresponse.addHeader( \"Access-Control-Allow-Methods\", \"POST\" ); // a allow post\nresponse.addHeader( \"Access-Control-Max-Age\", \"1000\" ); // time from request to response before timeout\n</code></pre>\n\n<p><strong>PHP:</strong></p>\n\n<pre><code>header('Access-Control-Allow-Origin: *');\nheader('Access-Control-Allow-Methods: POST');\nheader('Access-Control-Max-Age: 1000');\n</code></pre>\n\n<p>Doing like this, you are opening your server to any post request, you should re-secure this by providing ident or something else.</p>\n\n<p>With this method, you could also change the request type from jsonp to json, both work, just set the right response content type</p>\n\n<p><strong>jsonp</strong></p>\n\n<pre><code>response.setContentType( \"text/javascript; charset=utf-8\" );\n</code></pre>\n\n<p><strong>json</strong></p>\n\n<pre><code>response.setContentType( \"application/json; charset=utf-8\" );\n</code></pre>\n\n<p>Please not that you're server will no more respect the SOP (same origin policy), but who cares ?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use <code>json</code> in <code>dataType</code> and send like this:</p>\n\n<pre><code>        $.ajax({\n            url: \"your url which return json\",\n            type: \"POST\",\n            crossDomain: true,\n            data: data,\n            dataType: \"json\",\n            success:function(result){\n                alert(JSON.stringify(result));\n            },\n            error:function(xhr,status,error){\n                alert(status);\n            }\n        });\n</code></pre>\n\n<p>and put this lines in your server side file:</p>\n\n<p>if <strong>PHP</strong>:</p>\n\n<pre><code>header('Access-Control-Allow-Origin: *');\nheader('Access-Control-Allow-Methods: POST');\nheader('Access-Control-Max-Age: 1000');\n</code></pre>\n\n<p>if <strong>java:</strong></p>\n\n<pre><code>response.addHeader( \"Access-Control-Allow-Origin\", \"*\" ); \nresponse.addHeader( \"Access-Control-Allow-Methods\", \"POST\" ); \nresponse.addHeader( \"Access-Control-Max-Age\", \"1000\" );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I need to make a jsonp POST request with the content type 'application/json'. I can get the POST request to the server like this:</p>\n\n<pre><code>      jQuery.ajax({\n        type: 'POST',\n        url: url,\n        data: data,\n        success: success,\n        error: error,\n        async: true,\n        complete: complete,\n        timeout: TIMEOUT,\n        scriptCharset: 'UTF-8',\n        dataType: 'jsonp',\n        jsonp: '_jsonp',\n      });\n</code></pre>\n\n<p>But as soon as I add the line:<code>contentType: \"application/json\"</code> it starts sending it as an OPTIONS request rather than a POST.</p>\n\n<p>How can I specify the content type and still submit the request as a POST?</p>\n",
            "last_activity_date": 1374146423,
            "question_id": 3860111,
            "score": 23,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "http",
                "jsonp"
            ],
            "title": "How to make a jsonp POST request that specifies contentType with jQuery?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can just build an array of key while walking through the object.</p>\n\n<pre><code>var keys = [];\nfor (var prop in obj) {\n    if (obj.hasOwnProperty(prop)) {\n        keys.push(prop);\n    }\n}\n</code></pre>\n\n<p>then randomly pick an element from the keys.</p>\n\n<pre><code>return keys[ keys.length * Math.random() &lt;&lt; 0 ];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p><a href=\"http://geomblog.blogspot.com/2008/01/happy-birthday-don-knuth.html\">Picking a random element from a stream</a></p>\n\n<pre><code>function pickRandomProperty(obj) {\n    var result;\n    var count = 0;\n    for (var prop in obj)\n        if (Math.random() &lt; 1/++count)\n           result = prop;\n    return result;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>The chosen answer definitely doesn't work.  But this does.</p>\n\n<pre><code>var randomProperty = function (obj) {\n    var keys = Object.keys(obj)\n    return obj[keys[ keys.length * Math.random() &lt;&lt; 0]];\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>In response to Cole Gleason's comment about the top answer skewing to the left, this happens because Math.random() is called for every element on the array. Since random() is called over and over, it becomes more likely to trigger with each iteration, so it never gets very far in the array. Saving \"Math.random()\" before starting the loop should clear it up.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you are capable of using libraries, you may find that <a href=\"http://lodash.com/\" rel=\"nofollow\">Lo-Dash</a> JS library has lots of very useful methods for such cases. In this case, go ahead and check sample().</p>\n\n<p>(Note Lo-Dash convention is naming the library object _.\nDon't forget to check installation in the same page to set it up for your project.)</p>\n\n<pre><code>_.sample([1, 2, 3, 4]);\n// \u2192 2\n</code></pre>\n\n<p>In your case, go ahead and use:</p>\n\n<pre><code>_.sample({\n    cat: 'meow',\n    dog: 'woof',\n    mouse: 'squeak'\n});\n// \u2192 \"woof\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Suppose you have a Javascript object like {'cat':'meow','dog':'woof' ...}\nIs there a more concise way to pick a random property from the object than this long winded way I came up with:</p>\n\n<pre><code>function pickRandomProperty(obj) {\n    var prop, len = 0, randomPos, pos = 0;\n    for (prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n            len += 1;\n        }\n    }\n    randomPos = Math.floor(Math.random() * len);\n    for (prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n            if (pos === randomPos) {\n                return prop;\n            }\n            pos += 1;\n        }\n    }       \n}\n</code></pre>\n",
            "last_activity_date": 1413609523,
            "question_id": 2532218,
            "score": 23,
            "tags": [
                "javascript"
            ],
            "title": "Pick random property from a Javascript object"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>externaljs.js is a static file. Of course it can't access PHP data. The only way to pass PHP data to a js file would be to physically alter the file by writing to it in your PHP script, although this is a messy solution at best.</p>\n\n<p>Edit in response to \u00d3lafur Waage's answer: I guess writing to the js file isn't the <em>only</em> way. Passing the js through the PHP interpreter never crossed my mind (for good reason).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You don't really access it you insert it into the javascript code when you serve the page.</p>\n\n<p>However if your other javascript isn't from an external source you can do something like:</p>\n\n<pre><code>&lt;?php\n    $color = \"Red\";\n?&gt;\n&lt;script type=\"text/javascript\"&gt;var color = \"&lt;?= $color ?&gt;\";&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"file.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>and then in the file.js use color like so:</p>\n\n<pre><code>alert(\"color: \" + color);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>What I've seen done is let .js files run through the php interpreter. <strong>Which I can not recommend.</strong> </p>\n\n<p>What I do recommend is fetching the values through AJAX and have the PHP file return the value to the JS file. Which is a much cleaner method.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You cant do that and dont try to as this is not a recommended approach, However you can pass php variables as a function parameters to function written in external js</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>First of all you have to understand that no program can actually have access to the other program's variable.</p>\n\n<p>When you realize that, the rest is simple.<br>\nYou can either set up a js variable in the main file and then include your external js, or make this external js dynamic, generated by PHP as well</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>What you likely want, is called Asynchronous JavaScript and XML (AJAX): <a href=\"http://www.w3schools.com/ajax/default.aspa\" rel=\"nofollow\">http://www.w3schools.com/ajax/default.aspa</a></p>\n\n<p>Basically, imagine being able to send messages from the clients JavaScript to your PHP scripts on the server. In the example you gave (externaljs.js), you would have the script ask the server what $color is, via HTTP. You can also point the script tag at a PHP script that generates the JavaScript you want. It depends on what you need to do.</p>\n\n<p>It helps to have some understanding of taint checking, data verification, and security ;)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As the others are saying, javascript doesn't have access to php variables.  However, it does have access to the DOM. So, you can use php to add attributes to some page element. And then you can access those attributes with javascript.</p>\n\n<p>e.g. <code>&lt;div id='apple' class='red'&gt;</code> is completely available to javascript</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;script type=\"text/javascript\" src=\"externaljs.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>You could change it to </p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"externaljs.php\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>And the PHP script could just write JavaScript like that :</p>\n\n<pre><code>&lt;?php\n$fruit = \"apple\";\necho 'var fruit = '.json_encode($fruit);\n...\n</code></pre>\n\n<p>Though using AJAX like said Sepehr Lajevardi would be much cleaner</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can also access data from php script in Javascript (I'll use jQuery here) like this</p>\n\n<p>Create input hidden field within you php file like this</p>\n\n<pre><code>&lt;input type=\"hidden\" id=\"myPhpValue\" value=\"&lt;?php echo $myPhpValue ?&gt;\" /&gt;\n</code></pre>\n\n<p>in your javascript file:</p>\n\n<pre><code>var myPhpValue = $(\"#myPhpValue\").val();\n//From here you can the whaterver you like with you js Value\nif(myPhpValue != ''){\n//Do something here\n}\n</code></pre>\n\n<p>This will do the job as well :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I can access a PHP var with Javascript like this:</p>\n\n<pre><code>&lt;?php\n    $fruit = \"apple\";\n    $color = \"red\";\n?&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    alert(\"fruit: \" + \"&lt;?php echo $fruit; ?&gt;\"); // or shortcut \"&lt;?= $fruit ?&gt;\"\n&lt;/script&gt;\n</code></pre>\n\n<p>But what if I want to use an external JS file:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"externaljs.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>externaljs.js:</p>\n\n<pre><code>alert(\"color: \" + \"&lt;?php echo $color; ?&gt;\");\n</code></pre>\n",
            "last_activity_date": 1403191924,
            "question_id": 2928827,
            "score": 21,
            "tags": [
                "php",
                "javascript",
                "variables",
                "external"
            ],
            "title": "Access PHP var from external javascript file"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Try looking at www.5app.co.uk. Avoids use of XHR calls altogether and works reliably on mobile when data connections comes and goes. Gateway then interfaces with your client.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I imagine that if you are creating a hybrid application you are using cordova. If that is the case you don't need CORS you just need to white list the domains you are going to access.</p>\n\n<p><a href=\"http://docs.phonegap.com/en/3.0.0/guide_appdev_whitelist_index.md.html\" rel=\"nofollow\">http://docs.phonegap.com/en/3.0.0/guide_appdev_whitelist_index.md.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use JsonP request. JsonP request enables you to do cross domain request. <a href=\"http://www.jquery4u.com/json/jsonp-examples/\" rel=\"nofollow\">Here</a> is an example.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I realize this question is old, but I figured I'd throw in on it anyhow. In the case of CORS requests, the browser preflights them. What this means is - in spite of whatever <code>$.ajax()</code> method you are using, an <code>OPTIONS</code> request is sent to the server.</p>\n\n<p>What this preflighted <code>OPTIONS</code> request is actually doing is saying: </p>\n\n<blockquote>\n  <p>\"Hey there, foreign-server-from-some-other-domain, I want to send you a not-simple request (simple req's are not preflighted). My not-simple request going to have these kinds of headers and content type and so on. Can you let me know if this is okay?\"</p>\n</blockquote>\n\n<p>Then the server will do whatever it does (probably check some configuration or database) and respond with the allowable origin(s), the allowable header(s), and/or the allowable method(s).</p>\n\n<p>Finally - if that preflight <code>OPTIONS</code> request has received response that allows the actual <code>$.ajax()</code> method to go - it goes.</p>\n\n<p>CORS is not the same as JSONP.</p>\n\n<p>All that said - while <code>withCredentials</code> preflight success requires the response to carry a <code>Access-Control-Allow-Credentials</code> header (as stated in the question), that is IN ADDITION to <code>Access-Control-Allow-Origins</code> AND <code>Access-Control-Allow-Methods</code> values, which must include the facets of the intended request.</p>\n\n<p>For example - if you are making a CORS <code>POST</code> request from origin <code>http://foo-domain.com</code> with headers <code>somevalue</code> to <code>http://bar-domain.com</code>, a preflight <code>OPTIONS</code> request would go out and in order for the actual post request to be made to <code>http://bar-domain.com</code>, the <code>OPTIONS</code> request would need to receive a response with an <code>Access-Control-Allow-Origins</code> value that included <code>http://foo-domain.com</code>. This could be the origin name itself or <code>*</code>. The response would also need to have an <code>Access-Control-Allow-Methods</code> value that included <code>POST</code>. This may also be <code>*</code>. And Finally if we want our <code>somevalue</code> header to be allowed, the response must contain a <code>Access-Control-Allow-Headers</code> value that includes our <code>somevalue</code> header key or <code>*</code>.</p>\n\n<p>To circle back - if you can't control the server, or have no way to allow the server to allow your CORS requests, you could always use JSONP or some urlEncoded datatype and/or make simple requests without custom headers. <code>GET</code>, <code>HEAD</code>, and full <code>POST</code> requests are usually simple requests.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Bear with me, this one needs a bit of explanation.</p>\n\n<p>I am helping to build a hybrid mobile web app. The main codebase is HTML5 and JavaScript, which will be wrapped in a native mobile Web View (a la Phonegap).</p>\n\n<p>Part of the functionality requires the app to post information to a web service controlled by one of our clients. There is very little scope to change this web service as it is being used by others. We send JSON using an HTTP POST and receive responses from the server. Part of this response is a JSESSIONID cookie which manages our session with the server. After the initial <code>initSession()</code> call, we need to send the JSESSIONID cookie with every (AJAX) request.</p>\n\n<p>When deployed on a mobile device, the web app is wrapped in the native Web View, which starts the web app by browsing to <code>file:///path/to/app/index.html</code>. </p>\n\n<p>The first thing we tried was asking our client to set <code>Access-Control-Allow-Origin: *</code> in their response header to allow CORS. We then tried posting to the server:</p>\n\n<pre><code>$.ajax({\n  url: 'http://thirdparty.com/ws',\n  data: data,\n  type: \"POST\",\n  dataType: \"JSON\",\n  success: successCallback,\n  error: failedCallback\n});\n</code></pre>\n\n<p>Monitoring the requests, it was apparent that the cookies were not being included. On closer inspection there is a <a href=\"https://developer.mozilla.org/en/HTTP_access_control#Requests_with_credentials\">special section in the CORS spec for dealing with user credentials</a>, which includes session cookies. So I modified the AJAX call to include this:</p>\n\n<pre><code>$.ajax({\n  url: 'http://thirdparty.com/ws',\n  data: data,\n  type: \"POST\",\n  dataType: \"JSON\",\n  success: successCallback,\n  error: failedCallback,\n  xhrFields { withCredentials: true }\n});\n</code></pre>\n\n<p>Another error, this time from the Browser. More reading yielded the following:</p>\n\n<blockquote>\n  <p>If the third party server did not respond with an <code>Access-Control-Allow-Credentials: true</code> header the response would be ignored and not made available to web content. </p>\n  \n  <p>Important note: when responding to a credentialed request, the server must specify a domain in the <code>Access-Control-Allow-Origin</code> header, and cannot use wild carding. </p>\n</blockquote>\n\n<p>So we need to change the server's headers to include <code>Access-Control-Allow-Credentials: true</code> and <code>Access-Control-Allow-Origin</code> to our Origin.</p>\n\n<p>Here we finally come to my problem: <a href=\"http://stackoverflow.com/questions/3595515/xmlhttprequest-error-origin-null-is-not-allowed-by-access-control-allow-origin\">when loading a web page using the file:// protocol</a>, the <code>Origin</code> request header sent from the Web View is set to <code>null</code>. It therefore can't be parsed by the server and so the server can't set it in <code>Access-Control-Allow-Origin</code>. But if the server can't set <code>Access-Control-Allow-Origin</code> to something other than <code>*</code> we can't send credentials, including cookies.</p>\n\n<p>So I'm stuck. What to do? <a href=\"http://stackoverflow.com/questions/5138057/cross-origin-resource-sharing-and-file\">I saw a similar question posted here</a> but I don't really understand the proposed answer. Any help would be much appreciated! </p>\n",
            "last_activity_date": 1397444869,
            "question_id": 9103876,
            "score": 18,
            "tags": [
                "javascript",
                "ajax",
                "web-services",
                "cookies",
                "cors"
            ],
            "title": "CORS cookie credentials from mobile WebView loaded locally with file://"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>To dynamically modify the CSS properties of all elements of a certain class use the <code>css</code> method <em><sup>[<a href=\"http://api.jquery.com/css\" rel=\"nofollow\">API Reference</a>]</sup></em> with the class selector <em><sup>[<a href=\"http://api.jquery.com/class-selector/\" rel=\"nofollow\">API Reference</a>]</sup></em>:</p>\n\n<pre><code>$('.myClass').css({ ...Your CSS properties here... });\n</code></pre>\n\n<p>For example, if you wanted to change the width and height of elements with a certain class, you would do this:</p>\n\n<pre><code>$('.myClass').css({ width: '200px', height: '300px' });\n</code></pre>\n\n<p><em><strong>Addendum</em></strong><br>\nAs is noted in the comments, this solution modifies the style object for each element, which is probably sufficient for your needs, but maybe not. To modify the style sheet itself on the client, check out <a href=\"http://stackoverflow.com/a/19613731/783175\">Oriol's answer</a> or <a href=\"http://stackoverflow.com/a/19613772/783175\">Jace's answer</a>. You're still not modifying the style sheet in any persistent way (i.e. on the web server), which is what I meant when I said <em>\"To my knowledge, the stylesheet file itself cannot be modified....\"</em> in the comments.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You should really rethink your approach to this issue.  Using a well crafted selector and attaching the class may be a more eloquent solution to this approach.  As far as I know you cannot modify external CSS.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Why not just use a <code>.class</code> selector to modify the properties of every object in that class?</p>\n\n<p>ie:</p>\n\n<p><code>$('.myclass').css('color: red;');</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can't modify the members of a CSS class on the fly. However, you could introduce a new <code>&lt;style&gt;</code> tag on the page with your new css class implementation, and then switch out the class. Example:</p>\n\n<pre><code>Sample.css\n\n.someClass { border: 1px solid black; font-size: 20px; }\n</code></pre>\n\n<p>You want to change that class entirely, so you create a new style element:</p>\n\n<pre><code>&lt;style&gt;\n   .someClassReplacement { border: 1px solid white; font-size: 14px; }       \n&lt;/style&gt;\n</code></pre>\n\n<p>You then do a simple replacement via jQuery:</p>\n\n<pre><code>$('.someClass').removeClass('someClass').addClass('someClassReplacement');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Contrary to some of the answers here, editing the stylesheet itself with Javascript is not only possible, but higher performance. Simply doing <code>$('.myclass').css('color: red')</code> will end up looping through every item matching the selector and individually setting the style attribute. This is really inefficient and if you have hundreds of elements, it's going to cause problems.</p>\n\n<p>Changing classes on the items is a better idea, but you still suffer from the same problem in that you're changing an attribute on N items, which could be a large number. A better solution might be to change the class on one single parent item or a small number of parents and then hit the target items using the \"Cascade\" in css. This serves in most situations, but not all.</p>\n\n<p>Sometimes you need to change the CSS of a lot of items to something dynamic, or there's no good way for you to do so by hitting a small number of parents. Changing the stylesheet itself, or adding a small new one to override the existing css is an extremely efficient way to change the display of items. You're only interacting with the DOM in one spot and the browser can handle deploying those changes really efficiently.</p>\n\n<p><a href=\"https://github.com/Box9/jss\">jss</a> is one library that helps make it easier to directly edit the stylesheet from javascript.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Use jquery to add a style override in the <code>&lt;head&gt;</code>:</p>\n\n<pre><code>$('&lt;style&gt;.someClass {color: red;} input::-webkit-outer-spin-button: {display: none;}&lt;/style&gt;')\n.appendTo('head'); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>YUI 2 and 3 has a module stylesheet that will let you do just that (edit stylesheets on the fly with javascript). <a href=\"http://yuilibrary.com/yui/docs/stylesheet/\" rel=\"nofollow\">http://yuilibrary.com/yui/docs/stylesheet/</a>. So I think it is possible. This is not the same as $(\".some\").css({...}) but really change/add/remove styles definition from stylesheet, just like the user asked.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Like @benvie said, its more efficient to change a style sheet rather than using jQuery.css (which will loop through all of the elements in the set).  It is also important not to add a new style to the head every time the function is called because it will create a memory leak and thousands of CSS rules that have to be individually applied by the browser. I would do something like this:</p>\n\n<pre><code>//Add the stylesheet once and store a cached jQuery object\nvar $style = $(\"&lt;style type='text/css'&gt;\").appendTo('head'); \n\nfunction onResize() {\n    var css = \"\\\n        .someClass {\\\n            left:   \"+leftVal+\";\\\n            width:  \"+widthVal+\";\\\n            height: \"+heightVal+\";\\\n        }\";\n\n    $style.html(css);\n}\n</code></pre>\n\n<p>This solution will change your styles by modifying the DOM only once per resize. Note that for effective js minification and compression, you probably don't want to pretty-print the css, but I did for clarity.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<h2><a href=\"http://jsfiddle.net/hdU8s/10/\"><strong>Demo</strong></a>, <a href=\"http://jsfiddle.net/hdU8s/11/\"><strong>IE demo</strong></a></h2>\n\n<p>You could use the following function:</p>\n\n<pre><code>function setStyle(cssText) {\n    var sheet = document.createElement('style');\n    sheet.type = 'text/css';\n    /* Optional */ window.customSheet = sheet;\n    (document.head || document.getElementsByTagName('head')[0]).appendChild(sheet);\n    return (setStyle = function(cssText, node) {\n        if(!node || node.parentNode !== sheet)\n            return sheet.appendChild(document.createTextNode(cssText));\n        node.nodeValue = cssText;\n        return node;\n    })(cssText);\n};\n</code></pre>\n\n<p><strong>Features</strong>:</p>\n\n<ul>\n<li>The function is written in vanilla-js, so it has better performance than jQuery alternatives</li>\n<li>One stylesheet is created after the first call to <code>setStyle</code>, so if you don't call it, it won't create any stylesheet.</li>\n<li>The same stylesheet is reused for the following calls of <code>setStyle</code></li>\n<li>The function return a reference to the node associated with the bunch of CSS that you have added. If you call the function again with that node as a second argument, it will replace the old CSS with the new one.</li>\n</ul>\n\n<p><strong>Example</strong></p>\n\n<pre><code>var myCSS = setStyle('*{ color:red; }');\nsetStyle('*{ color:blue; }', myCSS); // Replaces the previous CSS with this one\n</code></pre>\n\n<p><strong>Browser support</strong></p>\n\n<p>At least, it works on IE9, FF3, Chrome 1, Safari 4, Opera 10.5.</p>\n\n<p>There's also an <a href=\"http://jsfiddle.net/hdU8s/11/\"><strong>IE version</strong></a> which works both on modern browsers and old versions of IE!\n(Works on IE8 and IE7, but can crash IE6).</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Nice question. A lot of the answers here had a solution directly contradicting what you were asking</p>\n\n<blockquote>\"I know how to use jQuery to assign width, height, etc. to an element, but what I'm trying to do is actually change the value defined in the stylesheet so that the dynamically-created value can be assigned to multiple elements.<br>\"\n</blockquote>\n\n<p>jQuery <code>.css</code> styles elements <em>inline</em>: it doesn't change the physical CSS rule! If you want to do this, I would suggest using a vanilla JavaScript solution:</p>\n\n<pre><code>document.styleSheets[0].cssRules[0].cssText = \"\\\n     #myID {\n         myRule: myValue;\n         myOtherRule: myOtherValue;\n     }\";\n</code></pre>\n\n<p>This way, you're setting the stylesheet css rule, not appending an inline style.</p>\n\n<p>Hope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I've got a solution for changing a value in specific CSS class. But it only works if you keep your css in  tag. If you just keep a link to your css from external files ex. </p>\n\n<pre><code>&lt;style src='script.js'&gt;&lt;/style&gt;\n</code></pre>\n\n<p>this solution wont work.</p>\n\n<p>If your css looks like this for example: </p>\n\n<pre><code>&lt;style id='style'&gt;\n.foo {\nheight:50px;\n}\n&lt;/style&gt;\n</code></pre>\n\n<p>You can change a value of the tag using JS/jQuery.</p>\n\n<p>I've written a function, perhaps its not the best one but it works. You can improve it if you want.</p>\n\n<pre><code>function replaceClassProp(cl,prop,val){\n\nif(!cl || !prop || !val){console.error('Wrong function arguments');return false;}\n\n\n// Select style tag value\n\nvar tag = '#style';\n\n    var style = $(tag).text();\n    var str = style;\n\n// Find the class you want to change\n    var n = str.indexOf('.'+cl);\n    str = str.substr(n,str.length);\n    n = str.indexOf('}');\n    str = str.substr(0,n+1);\n\n    var before = str;\n\n// Find specific property\n\n    n = str.indexOf(prop);\n    str = str.substr(n,str.length);\n    n = str.indexOf(';');\n    str = str.substr(0,n+1);\n\n// Replace the property with values you selected\n\n    var after = before.replace(str,prop+':'+val+';');\n    style=style.replace(before,after);\n\n// Submit changes\n\n    $(tag).text(style);\n\n}\n</code></pre>\n\n<p>Then just change the tag variable into your style tag id and exegute:</p>\n\n<pre><code>replaceClassProp('foo','height','50px');\n</code></pre>\n\n<p>The difference between this and $('.foo').css('height','50px'); is that when you do it with css method of jQuery, all elements that have .foo class will have visible style='height:50px' in DOM. If you do it my way, elements are untouched and the only thing youll see is class='foo'</p>\n\n<p><strong>Advantages</strong></p>\n\n<ul>\n<li>Clear DOM</li>\n<li>You can modify the property you want without replacing the whole style</li>\n</ul>\n\n<p><strong>Disadvantages</strong></p>\n\n<ul>\n<li>Only internal CSS</li>\n<li>You have to find specific style tag you want to edit</li>\n</ul>\n\n<p>Hope it helps anyhow.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>all.  I've run into a unique situation that I have so far been unable to find a solution for: dynamically assigning a value to a CSS style.  I know how to use jQuery to assign width, height, etc. to an element, but what I'm trying to do is actually change the value defined in the stylesheet so that the dynamically-created value can be assigned to multiple elements.  What I'm building is a slideshow of images that occupy the full viewport, recalculating the image's width, height, and left properties on resize so that the image is always centered, favors width over height, except when the viewport is taller than it is wide (resizing does not reload the page, just fires a function to resize the image).  I have successfully been able to get it to work on one image, and now I'm trying to determine the best way to assign those property values to all images in the slideshow without having to specify those three things individually for every image.  Can the values of properties in a class be modified on the fly?  I'm sure the answer is out there, I'm probably just not using the correct terminology in my searches.  Hope I did a good job of describing the problem.  TIA.</p>\n",
            "last_activity_date": 1397770208,
            "question_id": 7125453,
            "score": 17,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "dynamic",
                "properties"
            ],
            "title": "Modifying CSS class property values on the fly with JavaScript / jQuery"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>look at <a href=\"https://developer.mozilla.org/en/Drawing_text_using_a_canvas#measureText%28%29\" rel=\"nofollow\">https://developer.mozilla.org/en/Drawing_text_using_a_canvas#measureText%28%29</a></p>\n\n<p>If you can see the selected text, and see its wider than your canvas, you can remove words, until the text is short enough. With the removed words, you can start at the second line and do the same.</p>\n\n<p>Of course, this will not be very efficient, so you can improve it by not removing one word, but multiple words if you see the text is much wider than the canvas width.</p>\n\n<p>I did not research, but maybe their are even javascript libraries that do this for you</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>context.measureText(text).width</code> is what you're looking for...  </p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Warning : i modified this function, because it was bugged.</p>\n\n<p>A possible method (not completely tested, but as for now it worked perfectly)</p>\n\n<pre><code>    /**\n     * Divide an entire phrase in an array of phrases, all with the max pixel length given.\n     * The words are initially separated by the space char.\n     * @param phrase\n     * @param length\n     * @return\n     */\nfunction getLines(ctx,phrase,maxPxLength,textStyle) {\n    var wa=phrase.split(\" \"),\n        phraseArray=[],\n        lastPhrase=wa[0],\n        l=maxPxLength,\n        measure=0;\n    ctx.font = textStyle;\n    for (var i=1;i&lt;wa.length;i++) {\n        var w=wa[i];\n        measure=ctx.measureText(lastPhrase+w).width;\n        if (measure&lt;l) {\n            lastPhrase+=(\" \"+w);\n        }else {\n            phraseArray.push(lastPhrase);\n            lastPhrase=w;\n        }\n        if (i===wa.length-1) {\n            phraseArray.push(lastPhrase);\n            break;\n        }\n    }\n    return phraseArray;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Here was my spin on it... I read @mizar's answer and made some alterations to it... and with a little assistance I Was able to get this. </p>\n\n<blockquote>\n  <p>code removed, see fiddle.</p>\n</blockquote>\n\n<p>Here is example usage. <a href=\"http://jsfiddle.net/9PvMU/1/\" rel=\"nofollow\">http://jsfiddle.net/9PvMU/1/</a> - this script can also be seen <a href=\"https://github.com/rlemon/lememe/blob/alpha3/js/app.js#L25\" rel=\"nofollow\">here</a> and ended up being what I used in the end... this function assumes <code>ctx</code> is available in the parent scope... if not you can always pass it in. </p>\n\n<hr>\n\n<h3>edit</h3>\n\n<p>the post was old and had my version of the function that I was still tinkering with. This version seems to have met my needs thus far and I hope it can help anyone else.</p>\n\n<hr>\n\n<h3>edit</h3>\n\n<p>It was brought to my attention there was a small bug in this code. It took me some time to get around to fixing it but here it is updated. I have tested it myself and it seems to work as expected now.  </p>\n\n<pre><code>function fragmentText(text, maxWidth) {\n    var words = text.split(' '),\n        lines = [],\n        line = \"\";\n    if (ctx.measureText(text).width &lt; maxWidth) {\n        return [text];\n    }\n    while (words.length &gt; 0) {\n        var split = false;\n        while (ctx.measureText(words[0]).width &gt;= maxWidth) {\n            var tmp = words[0];\n            words[0] = tmp.slice(0, -1);\n            if (!split) {\n                split = true;\n                words.splice(1, 0, tmp.slice(-1));\n            } else {\n                words[1] = tmp.slice(-1) + words[1];\n            }\n        }\n        if (ctx.measureText(line + words[0]).width &lt; maxWidth) {\n            line += words.shift() + \" \";\n        } else {\n            lines.push(line);\n            line = \"\";\n        }\n        if (words.length === 0) {\n            lines.push(line);\n        }\n    }\n    return lines;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I modified it using the code from here <a href=\"http://miteshmaheta.blogspot.sg/2012/07/html5-wrap-text-in-canvas.html\" rel=\"nofollow\">http://miteshmaheta.blogspot.sg/2012/07/html5-wrap-text-in-canvas.html</a></p>\n\n<p><a href=\"http://jsfiddle.net/wizztjh/kDy2U/41/\" rel=\"nofollow\">http://jsfiddle.net/wizztjh/kDy2U/41/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Updated version of @mizar's answer, with one severe and one minor bug fixed.</p>\n\n<pre><code>function getLines(ctx, text, maxWidth) {\n    var words = text.split(\" \");\n    var lines = [];\n    var currentLine = words[0];\n\n    for (var i = 1; i &lt; words.length; i++) {\n        var word = words[i];\n        var width = ctx.measureText(currentLine + \" \" + word).width;\n        if (width &lt; maxWidth) {\n            currentLine += \" \" + word;\n        } else {\n            lines.push(currentLine);\n            currentLine = word;\n        }\n    }\n    lines.push(currentLine);\n    return lines;\n}\n</code></pre>\n\n<p>We've been using this code for some time, but today we were trying to figure out why some text wasn't drawing, and we found a bug!</p>\n\n<p>It turns out that if you give a single word (without any spaces) to the getLines() function, it will return an empty array, rather than an array with a single line.</p>\n\n<p>While we were investigating that, we found another (much more subtle) bug, where lines can end up slightly longer than they should be, since the original code didn't account for spaces when measuring the length of a line.</p>\n\n<p>Our updated version, which works for everything we've thrown at it, is above. Let me know if you find any bugs!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>From the script here: <a href=\"http://www.html5canvastutorials.com/tutorials/html5-canvas-wrap-text-tutorial/\" rel=\"nofollow\">http://www.html5canvastutorials.com/tutorials/html5-canvas-wrap-text-tutorial/</a></p>\n\n<p>I've extended to include paragraph support.  Use \\n for new line.</p>\n\n<pre><code>function wrapText(context, text, x, y, line_width, line_height)\n{\n    var line = '';\n    var paragraphs = text.split('\\n');\n    for (var i = 0; i &lt; paragraphs.length; i++)\n    {\n        var words = paragraphs[i].split(' ');\n        for (var n = 0; n &lt; words.length; n++)\n        {\n            var testLine = line + words[n] + ' ';\n            var metrics = context.measureText(testLine);\n            var testWidth = metrics.width;\n            if (testWidth &gt; line_width &amp;&amp; n &gt; 0)\n            {\n                context.fillText(line, x, y);\n                line = words[n] + ' ';\n                y += line_height;\n            }\n            else\n            {\n                line = testLine;\n            }\n        }\n        context.fillText(line, x, y);\n        y += line_height;\n        line = '';\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>Text can be formatted like so:</p>\n\n<pre><code>var text = \n[\n    \"Paragraph 1.\",\n    \"\\n\\n\",\n    \"Paragraph 2.\"\n].join(\"\");\n</code></pre>\n\n<hr>\n\n<p>Use:</p>\n\n<pre><code>wrapText(context, text, x, y, line_width, line_height);\n</code></pre>\n\n<p>in place of</p>\n\n<pre><code>context.fillText(text, x, y);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try this script to wrap the text on a canvas.\n    \n    </p>\n\n<pre><code> &lt;script&gt;\n  function wrapText(ctx, text, x, y, maxWidth, lineHeight) {\n    var words = text.split(' ');\n    var line = '';\n\n    for(var n = 0; n &lt; words.length; n++) {\n      var testLine = line + words[n] + ' ';\n      var metrics = ctx.measureText(testLine);\n      var testWidth = metrics.width;\n      if (testWidth &gt; maxWidth &amp;&amp; n &gt; 0) {\n        ctx.fillText(line, x, y);\n        line = words[n] + ' ';\n        y += lineHeight;\n      }\n      else {\n        line = testLine;\n      }\n    }\n    ctx.fillText(line, x, y);\n  }\n\n  var canvas = document.getElementById('Canvas01');\n  var ctx = canvas.getContext('2d');\n  var maxWidth = 400;\n  var lineHeight = 24;\n  var x = (canvas.width - maxWidth) / 2;\n  var y = 70;\n  var text = 'HTML is the language for describing the structure of Web pages. HTML stands for HyperText Markup Language. Web pages consist of markup tags and plain text. HTML is written in the form of HTML elements consisting of tags enclosed in angle brackets (like &lt;html&gt;). HTML tags most commonly come in pairs like &lt;h1&gt; and &lt;/h1&gt;, although some tags represent empty elements and so are unpaired, for example &lt;img&gt;..';\n\n  ctx.font = '15pt Calibri';\n  ctx.fillStyle = '#555555';\n\n  wrapText(ctx, text, x, y, maxWidth, lineHeight);\n  &lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am trying to add text on an image using the <code>&lt;canvas&gt;</code> element. First the image is drawn and on the image the text is drawn. So far so good.</p>\n\n<p>But where I am facing a problem is that if the text is too long, it gets cut off in the start and end by the canvas. I don't plan to resize the canvas, but I was wondering how to wrap the long text into multiple lines so that all of it gets displayed. Can anyone point me at the right direction?</p>\n",
            "last_activity_date": 1426189816,
            "question_id": 2936112,
            "score": 16,
            "tags": [
                "javascript",
                "html5",
                "canvas",
                "text"
            ],
            "title": "Text wrap in a &lt;canvas&gt; element"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Here's one implementation, in Javascript: <a href=\"http://jsfiddle.net/9FqKS/\">http://jsfiddle.net/9FqKS/</a></p>\n\n<p>You start by creating a name-based map for easy lookup. There are a few different ways to do this - in this case, I use a <code>.reduce</code> method, which starts with an empty object and iterates over the <code>data</code> array, adding an entry for each node:</p>\n\n<pre><code>// create a {name: node} map\nvar dataMap = data.reduce(function(map, node) {\n    map[node.name] = node;\n    return map;\n}, {});\n</code></pre>\n\n<p>This is equivalent to:</p>\n\n<pre><code>var dataMap = {};\ndata.forEach(function(node) {\n    dataMap[node.name] = node;\n});\n</code></pre>\n\n<p>(I sometimes think the reduce is more elegant.) Then iteratively add each child to its parents, or to the root array if no parent is found:</p>\n\n<pre><code>// create the tree array\nvar tree = [];\ndata.forEach(function(node) {\n    // find parent\n    var parent = dataMap[node.parent];\n    if (parent) {\n        // create child array if it doesn't exist\n        (parent.children || (parent.children = []))\n            // add node to parent's child array\n            .push(node);\n    } else {\n        // parent is null or missing\n        tree.push(node);\n    }\n});\n</code></pre>\n\n<p>Unless your tree is enormous, I don't think this should be too expensive, so you ought to be able to do it on the client side (if you can't, you might have too much data to easily display in any case).</p>\n",
                    "is_accepted": true,
                    "score": 19
                }
            ],
            "body": "<p>I have a flat json file structure like:</p>\n\n<pre><code>[\n { \"name\" : \"ABC\", \"parent\":\"DEF\", \"relation\": \"ghi\", \"depth\": 1 },\n { \"name\" : \"DEF\", \"parent\":\"null\", \"relation\": \"null\", \"depth\": 0 },\n { \"name\" : \"new_name\", \"parent\":\"ABC\", \"relation\": \"rel\", \"depth\": 2 }\n ....\n ....\n ]\n</code></pre>\n\n<p>And what I want is a nested file structure like:</p>\n\n<pre><code>[ \n {\n   \"name\": \"DEF\",\n   \"parent\": \"null\",\n   \"relation\": \"null\",\n   \"children\": [\n                 { \"name\": \"ABC\",\n                   \"parent\": \"DEF\",\n                   \"relation\": \"ghi\",\n                   \"children\": [\n                                 \"name\": \"new_name\",\n                                 ...\n                                 \"children\": []\n                               ]\n                 }\n               ]\n  }\n ]\n</code></pre>\n\n<p>There is no limit on how many levels deep it should go. The current max I have is 30.\nThere is no limit on the number of children a node can have. Eg. The root node has all the remaining as its children.</p>\n\n<p>What I have tried till now? </p>\n\n<ul>\n<li><p>Read about d3.nest() and how it is able to nest but not perfectly. \n<a href=\"https://groups.google.com/forum/?fromgroups=#!topic/d3-js/L3UeeUnNHO8/discussion\">https://groups.google.com/forum/?fromgroups=#!topic/d3-js/L3UeeUnNHO8/discussion</a></p></li>\n<li><p>Wrote a python script for this, but it gets stuck with the null values and also since the data is not bounded (It increases everyday in double figures) so it is very very slow.</p></li>\n<li><p>I tried the force directed layout and it worked very well but I want to add another layout that makes the visualization easy. </p></li>\n<li><p>I could go with some other python scripts posted but they do not seem to carry forward any other information than \"name\" and \"children\".</p></li>\n<li><p>I read this: <a href=\"http://blog.pixelingene.com/2011/07/building-a-tree-diagram-in-d3-js/\">http://blog.pixelingene.com/2011/07/building-a-tree-diagram-in-d3-js/</a>\nbut they too have the right format data in the first place. What I intend to create is <a href=\"http://bl.ocks.org/mbostock/4339083\">http://bl.ocks.org/mbostock/4339083</a>. </p></li>\n</ul>\n\n<p>The source of the data is MS SQL Server database which I am fetching and parsing through python. Kindly help! i have been stuck at this for the past 2 weeks.</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1374780306,
            "question_id": 17847131,
            "score": 14,
            "tags": [
                "javascript",
                "json",
                "d3.js",
                "nested"
            ],
            "title": "Generate (multilevel) flare.json data format from flat json"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Depending on what you are trying to do exactly, the HTML5 local storage concept might help you.</p>\n\n<blockquote>\n  <p>So what is HTML5 Storage? Simply put, it\u2019s a way for web pages to store named key/value pairs locally, within the client web browser. Like cookies, this data persists even after you navigate away from the web site, close your browser tab, exit your browser, or what have you. Unlike cookies, this data is never transmitted to the remote web server (unless you go out of your way to send it manually). <a href=\"http://diveintohtml5.info/storage.html\" rel=\"nofollow\">http://diveintohtml5.info/storage.html</a></p>\n</blockquote>\n\n<p>There's also the Filesystem API (so far only implemented in Chrome AFAIK)\n<a href=\"http://www.html5rocks.com/en/tutorials/file/filesystem/\" rel=\"nofollow\">http://www.html5rocks.com/en/tutorials/file/filesystem/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"https://github.com/eligrey/FileSaver.js\">This</a> may help. If you want it to be reasonably cross-browser, you'll also need <a href=\"https://github.com/eligrey/Blob.js\">this</a> to implement the W3C Blob API in places it's not already implemented. Both respect namespaces, and are completely framework agnostic, so don't worry about naming issues.</p>\n\n<p>Once you've got those included, and as long as you're only saving text files (I am, thank you for your concern), you should be able to </p>\n\n<pre><code>var blob = new Blob([\"Hello, world!\"], {type: \"text/plain;charset=utf-8\"});\nsaveAs(blob, \"hello world.txt\");\n</code></pre>\n\n<p>Note that the first argument to <code>new Blob</code> has to be a list of strings, and that you're expected to specify the filename. As in, the user will see this file being downloaded locally, but won't be able to name it themselves. Hopefully they're using a browser that handles local filename collisions...</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>This is my code:</p>\n\n<pre><code>&lt;a id='tfa_src_data'&gt;Export&lt;/a&gt;\n\ndocument.getElementById('tfa_src_data').onclick = function() {                  \n                        var csv = JSON.stringify(localStorage['savedCoords']);\n                        var csvData = 'data:application/csv;charset=utf-8,' \n                                       + encodeURIComponent(csv);\n                        this.href = csvData;\n                        this.target = '_blank';\n                        this.download = 'filename.txt';\n                    };\n</code></pre>\n\n<p>You can use various data types.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have a situation where I need to give my users the option to save some data stored locally in their client memory to disk. The current workaround I have is having a handler like this</p>\n\n<pre><code>(define-handler (download-deck) ((deck :json))\n  (setf (header-out :content-type) \"application/json\"\n    (header-out :content-disposition) \"attachment\")\n  deck)\n</code></pre>\n\n<p>which does exactly what it looks like. The client sends their data up, and saves the returned file locally. </p>\n\n<p>This seems stupid.</p>\n\n<p>Please, <em>please</em> tell me there's a better, simpler, cross-browser way to let a client save some local data to their disk with a file-save dialog box. </p>\n\n<p>Every answer I read on the subject either says \"no, you can't save files with javascript\" or \"yes, there's this one semi-documented piece of the Chrome API that might let you do it in three pages\".</p>\n",
            "last_activity_date": 1408979208,
            "question_id": 18690450,
            "score": 13,
            "tags": [
                "javascript",
                "file",
                "save",
                "download"
            ],
            "title": "Saving a file with JavaScript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You want to use <a href=\"http://api.jquery.com/scrollTop/\" rel=\"nofollow\">scrollTop</a> then to compare the elements top position to the pages then.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Could you use jQuery, since it's cross-browser compatible?</p>\n\n<pre><code>function isOnScreen(element)\n{\n    var curPos = element.offset();\n    var curTop = curPos.top;\n    var screenHeight = $(window).height();\n    return (curTop &gt; screenHeight) ? false : true;\n}\n</code></pre>\n\n<p>And then call the function using something like:</p>\n\n<pre><code>if(isOnScreen($('#myDivId'))) { /* Code here... */ };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Well BenM stated, you need to detect the height of the viewport + the scroll position to match up with your top poisiton. The function your using is ok and does the job, though its abit more complex ath it needs to.</p>\n\n<p>If you dont use <code>jQuery</code> then the script would be something like this:</p>\n\n<pre><code>function posY(elm) {\n    var test = elm, top = 0;\n\n    while(!!test &amp;&amp; test.tagName.toLowerCase() !== \"body\") {\n        top += test.offsetTop;\n        test = test.offsetParent;\n    }\n\n    return top;\n}\n\nfunction viewPortHeight() {\n    var de = document.documentElement;\n\n    if(!!window.innerWidth)\n    { return window.innerHeight; }\n    else if( de &amp;&amp; !isNaN(de.clientHeight) )\n    { return de.clientHeight; }\n\n    return 0;\n}\n\nfunction scrollY() {\n    if( window.pageYOffset ) { return window.pageYOffset; }\n    return Math.max(document.documentElement.scrollTop, document.body.scrollTop);\n}\n\nfunction checkvisible( elm ) {\n    var vpH = viewPortHeight(), // Viewport Height\n        st = scrollY(), // Scroll Top\n        y = posY(elm);\n\n    return (y &gt; (vpH + st));\n}\n</code></pre>\n\n<p>Using jQuery is a lot easier:</p>\n\n<pre><code>function checkVisible( elm, evalType ) {\n    evalType = evalType || \"visible\";\n\n    var vpH = $(window).height(), // Viewport Height\n        st = $(window).scrollTop(), // Scroll Top\n        y = $(elm).offset().top,\n        elementHeight = $(elm).height();\n\n    if (evalType === \"visible\") return ((y &lt; (vpH + st)) &amp;&amp; (y &gt; (st - elementHeight)));\n    if (evalType === \"above\") return ((y &lt; (vpH + st)));\n}\n</code></pre>\n\n<p>This even offers a second parameter. With \"visible\" (or no second parameter) it strictly checks wether an element is on screen. If it is set to \"above\" it will return true when the element in question is on or above the screen.</p>\n\n<p>See in action: <a href=\"http://jsfiddle.net/RJX5N/2/\">http://jsfiddle.net/RJX5N/2/</a></p>\n\n<p>I hope this answers your question.</p>\n",
                    "is_accepted": false,
                    "score": 21
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/487073/jquery-check-if-element-is-visible-after-scroling\">jQuery - Check if element is visible after scroling</a>  </p>\n</blockquote>\n\n\n\n<p>I'm trying to determine if an element is visible on screen. In order to to this, I'm trying to find the element's vertical position using offsetTop, but the value returned is not correct. In this case, the element is not visible unless you scroll down. But despite of this, offsetTop returns a value of 618 when my screen height is 703, so according to offsetTop the element should be visible.</p>\n\n<p>The code I'm using looks like this:</p>\n\n<pre><code>function posY(obj)\n{\n  var curtop = 0;\n\n  if( obj.offsetParent )\n  {\n    while(1)\n    {\n      curtop += obj.offsetTop;\n\n      if( !obj.offsetParent )\n      {\n        break;\n      }\n\n      obj = obj.offsetParent;\n    }\n  } else if( obj.y )\n    {\n     curtop += obj.y;\n    }\n\n  return curtop;\n}\n</code></pre>\n\n<p>Thank you in advance!</p>\n",
            "last_activity_date": 1403597936,
            "question_id": 5353934,
            "score": 13,
            "tags": [
                "javascript",
                "position",
                "offset"
            ],
            "title": "Check if element is visible on screen"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><em>This is an updated log of any forward progress I am making as an 'answer', to help inform others; if I somehow solve the problem on my own, I'll just accept this.</em></p>\n\n<p><strong>Update 1</strong>: I've got the <a href=\"http://www.w3.org/TR/SVG/paths.html#InterfaceSVGPathSegArcAbs\" rel=\"nofollow\">absolute arcto</a> command working perfectly except in cases of non-uniform scale. Here were the additions:</p>\n\n<pre><code>// Extract rotation and scale from the transform\nvar rotation = Math.atan2(transform.b,transform.d)*180/Math.PI;\nvar sx = Math.sqrt(transform.a*transform.a+transform.c*transform.c);\nvar sy = Math.sqrt(transform.b*transform.b+transform.d*transform.d);\n\n//inside the processing of segments\nif (seg.angle != null){\n  seg.angle += rotation;\n  // FIXME; only works for uniform scale\n  seg.r1 *= sx;\n  seg.r2 *= sy;\n}\n</code></pre>\n\n<p>Thanks to <a href=\"http://stackoverflow.com/questions/4361242/extract-rotation-scale-values-from-2d-transformation-matrix\">this answer</a> for a simpler extraction method than I was using, and for the math for extracting non-uniform scale.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As long as you translate all coordinates to absolute coordinates, all b\u00e9ziers will work just fine; there is nothing magical about the their handles. As for the elliptical arc commands, the only general solution (handling non-uniform scaling, as you point out, which the arc command can not represent, in the general case) is to first convert them to their b\u00e9zier approximations.</p>\n\n<p><a href=\"https://github.com/johan/svg-js-utils/blob/df605f3e21cc7fcd2d604eb318fb2466fd6d63a7/paths.js#L56..L113\" rel=\"nofollow\">https://github.com/johan/svg-js-utils/blob/df605f3e21cc7fcd2d604eb318fb2466fd6d63a7/paths.js#L56..L113</a> (uses <code>absolutizePath</code> in the same file, a straight port of your <a href=\"http://stackoverflow.com/questions/9677885/convert-svg-path-to-absolute-commands\">Convert SVG Path to Absolute Commands</a> hack) does the former, but not yet the latter.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/734076/geometrical-arc-to-bezier-curve\">Geometrical Arc to Bezier Curve</a> links the math for converting arcs to b\u00e9ziers (one b\u00e9zier segment per <code>0 &lt; \u03b1 &lt;= \u03c0/2</code> arc segment); <a href=\"http://www.spaceroots.org/documents/ellipse/node22.html\" rel=\"nofollow\">this paper</a> shows the equations at the end of the page (its prettier <a href=\"http://www.spaceroots.org/documents/ellipse/elliptical-arc.pdf\" rel=\"nofollow\">pdf</a> rendition has it at the end of section 3.4.1).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If every object (circles etc) are converted first to paths, then taking transforms into account is rather easy. I made a testbed ( <a href=\"http://jsbin.com/oqojan/73\" rel=\"nofollow\">http://jsbin.com/oqojan/73</a> ) where you can test the functionality. The testbed creates random path commands and applies random transforms to paths and then flattens transforms. Of course in reality the path commands and transforms are not random, but for testing accuracy it is fine.</p>\n\n<p>There is a function flatten_transformations(), which makes the main task:</p>\n\n<pre><code>function flatten_transformations(path_elem, normalize_path, to_relative, dec) {\n\n    // Rounding coordinates to dec decimals\n    if (dec || dec === 0) {\n        if (dec &gt; 15) dec = 15;\n        else if (dec &lt; 0) dec = 0;\n    }\n    else dec = false;\n\n    function r(num) {\n        if (dec !== false) return Math.round(num * Math.pow(10, dec)) / Math.pow(10, dec);\n        else return num;\n    }\n\n    // For arc parameter rounding\n    var arc_dec = (dec !== false) ? 6 : false;\n    arc_dec = (dec &amp;&amp; dec &gt; 6) ? dec : arc_dec;\n\n    function ra(num) {\n        if (arc_dec !== false) return Math.round(num * Math.pow(10, arc_dec)) / Math.pow(10, arc_dec);\n        else return num;\n    }\n\n    var arr;\n    //var pathDOM = path_elem.node;\n    var pathDOM = path_elem;\n    var d = pathDOM.getAttribute(\"d\").trim();\n\n    // If you want to retain current path commans, set normalize_path to false\n    if (!normalize_path) { // Set to false to prevent possible re-normalization. \n        arr = Raphael.parsePathString(d); // str to array\n        arr = Raphael._pathToAbsolute(arr); // mahvstcsqz -&gt; uppercase\n    }\n    // If you want to modify path data using nonAffine methods,\n    // set normalize_path to true\n    else arr = Raphael.path2curve(d); // mahvstcsqz -&gt; MC\n    var svgDOM = pathDOM.ownerSVGElement;\n\n    // Get the relation matrix that converts path coordinates\n    // to SVGroot's coordinate space\n    var matrix = pathDOM.getTransformToElement(svgDOM);\n\n    // The following code can bake transformations\n    // both normalized and non-normalized data\n    // Coordinates have to be Absolute in the following\n    var i = 0,\n        j, m = arr.length,\n        letter = \"\",\n        x = 0,\n        y = 0,\n        point, newcoords = [],\n        pt = svgDOM.createSVGPoint(),\n        subpath_start = {};\n    subpath_start.x = \"\";\n    subpath_start.y = \"\";\n    for (; i &lt; m; i++) {\n        letter = arr[i][0].toUpperCase();\n        newcoords[i] = [];\n        newcoords[i][0] = arr[i][0];\n\n        if (letter == \"A\") {\n            x = arr[i][6];\n            y = arr[i][7];\n\n            pt.x = arr[i][6];\n            pt.y = arr[i][7];\n            newcoords[i] = arc_transform(arr[i][4], arr[i][5], arr[i][6], arr[i][4], arr[i][5], pt, matrix);\n            // rounding arc parameters\n            // x,y are rounded normally\n            // other parameters at least to 5 decimals\n            // because they affect more than x,y rounding\n            newcoords[i][7] = ra(newcoords[i][8]); //rx\n            newcoords[i][9] = ra(newcoords[i][10]); //ry\n            newcoords[i][11] = ra(newcoords[i][12]); //x-axis-rotation\n            newcoords[i][6] = r(newcoords[i][6]); //x\n            newcoords[i][7] = r(newcoords[i][7]); //y\n        }\n        else if (letter != \"Z\") {\n            // parse other segs than Z and A\n            for (j = 1; j &lt; arr[i].length; j = j + 2) {\n                if (letter == \"V\") y = arr[i][j];\n                else if (letter == \"H\") x = arr[i][j];\n                else {\n                    x = arr[i][j];\n                    y = arr[i][j + 1];\n                }\n                pt.x = x;\n                pt.y = y;\n                point = pt.matrixTransform(matrix);\n                newcoords[i][j] = r(point.x);\n                newcoords[i][j + 1] = r(point.y);\n            }\n        }\n        if ((letter != \"Z\" &amp;&amp; subpath_start.x == \"\") || letter == \"M\") {\n            subpath_start.x = x;\n            subpath_start.y = y;\n        }\n        if (letter == \"Z\") {\n            x = subpath_start.x;\n            y = subpath_start.y;\n        }\n        if (letter == \"V\" || letter == \"H\") newcoords[i][0] = \"L\";\n    }\n    if (to_relative) newcoords = Raphael.pathToRelative(newcoords);\n    newcoords = newcoords.flatten().join(\" \").replace(/\\s*([A-Z])\\s*/gi, \"$1\").replace(/\\s*([-])/gi, \"$1\");\n    return newcoords;\n} // function flatten_transformations\u200b\u200b\u200b\u200b\u200b\n\n// Helper tool to piece together Raphael's paths into strings again\nArray.prototype.flatten || (Array.prototype.flatten = function() {\n  return this.reduce(function(a, b) {\n      return a.concat('function' === typeof b.flatten ? b.flatten() : b);\n    }, []);\n});\n</code></pre>\n\n<p>The code uses Raphael.pathToRelative(), Raphael._pathToAbsolute() and Raphael.path2curve(). The Raphael.path2curve() is bugfixed version.</p>\n\n<p>If flatten_transformations() is called using argument normalize_path=true, then all commands are converted to Cubics and everything is fine. And the code can be simplified by removing <code>if (letter == \"A\") { ... }</code> and also removing handling of H, V and Z. The simplified version can be something like <a href=\"http://jsbin.com/atidoh/9\" rel=\"nofollow\">this</a>.</p>\n\n<p>But because someone may want to only bake transformations and not to make All Segs -> Cubics normalization, I added there a possibility to this. So, if you want to flatten transformations with normalize_path=false, this means that Elliptical Arc parameters have to be flattened also and it's not possible to handle them by simply applying matrix to coordinates. Two radiis (rx ry), x-axis-rotation, large-arc-flag and sweep-flag have to handle separately. So the following function can flatten transformations of Arcs. The matrix parameter is a relation matrix which comes from is used already in flatten_transformations().</p>\n\n<pre><code>// Origin: http://devmaster.net/forums/topic/4947-transforming-an-ellipse/\nfunction arc_transform(a_rh, a_rv, a_offsetrot, large_arc_flag, sweep_flag, endpoint, matrix, svgDOM) {\n    function NEARZERO(B) {\n        if (Math.abs(B) &lt; 0.0000000000000001) return true;\n        else return false;\n    }\n\n    var rh, rv, rot;\n\n    var m = []; // matrix representation of transformed ellipse\n    var s, c; // sin and cos helpers (the former offset rotation)\n    var A, B, C; // ellipse implicit equation:\n    var ac, A2, C2; // helpers for angle and halfaxis-extraction.\n    rh = a_rh;\n    rv = a_rv;\n\n    a_offsetrot = a_offsetrot * (Math.PI / 180); // deg-&gt;rad\n    rot = a_offsetrot;\n\n    s = parseFloat(Math.sin(rot));\n    c = parseFloat(Math.cos(rot));\n\n    // build ellipse representation matrix (unit circle transformation).\n    // the 2x2 matrix multiplication with the upper 2x2 of a_mat is inlined.\n    m[0] = matrix.a * +rh * c + matrix.c * rh * s;\n    m[1] = matrix.b * +rh * c + matrix.d * rh * s;\n    m[2] = matrix.a * -rv * s + matrix.c * rv * c;\n    m[3] = matrix.b * -rv * s + matrix.d * rv * c;\n\n    // to implict equation (centered)\n    A = (m[0] * m[0]) + (m[2] * m[2]);\n    C = (m[1] * m[1]) + (m[3] * m[3]);\n    B = (m[0] * m[1] + m[2] * m[3]) * 2.0;\n\n    // precalculate distance A to C\n    ac = A - C;\n\n    // convert implicit equation to angle and halfaxis:\n    if (NEARZERO(B)) {\n        a_offsetrot = 0;\n        A2 = A;\n        C2 = C;\n    } else {\n        if (NEARZERO(ac)) {\n            A2 = A + B * 0.5;\n            C2 = A - B * 0.5;\n            a_offsetrot = Math.PI / 4.0;\n        } else {\n            // Precalculate radical:\n            var K = 1 + B * B / (ac * ac);\n\n            // Clamp (precision issues might need this.. not likely, but better save than sorry)\n            if (K &lt; 0) K = 0;\n            else K = Math.sqrt(K);\n\n            A2 = 0.5 * (A + C + K * ac);\n            C2 = 0.5 * (A + C - K * ac);\n            a_offsetrot = 0.5 * Math.atan2(B, ac);\n        }\n    }\n\n    // This can get slightly below zero due to rounding issues.\n    // it's save to clamp to zero in this case (this yields a zero length halfaxis)\n    if (A2 &lt; 0) A2 = 0;\n    else A2 = Math.sqrt(A2);\n    if (C2 &lt; 0) C2 = 0;\n    else C2 = Math.sqrt(C2);\n\n    // now A2 and C2 are half-axis:\n    if (ac &lt;= 0) {\n        a_rv = A2;\n        a_rh = C2;\n    } else {\n        a_rv = C2;\n        a_rh = A2;\n    }\n\n    // If the transformation matrix contain a mirror-component \n    // winding order of the ellise needs to be changed.\n    if ((matrix.a * matrix.d) - (matrix.b * matrix.c) &lt; 0) {\n        if (!sweep_flag) sweep_flag = 1;\n        else sweep_flag = 0;\n    }\n\n    // Finally, transform arc endpoint. This takes care about the\n    // translational part which we ignored at the whole math-showdown above.\n    endpoint = endpoint.matrixTransform(matrix);\n\n    // Radians back to degrees\n    a_offsetrot = a_offsetrot * 180 / Math.PI;\n\n    var r = [\"A\", a_rh, a_rv, a_offsetrot, large_arc_flag, sweep_flag, endpoint.x, endpoint.y];\n    return r;\n}\n</code></pre>\n\n<p>OLD EXAMPLE:  </p>\n\n<p>I made <a href=\"http://jsbin.com/atidoh/9\" rel=\"nofollow\">an example</a> that has a path with segments <code>M Q A A Q M</code>, which has transformations applied. The path is inside g that also has trans applied. And to make very sure this g is inside another g which has different transformations applied. And the code can:</p>\n\n<p>A) First normalize those all path segments (thanks to Rapha\u00ebl's path2curve, to which I made <a href=\"http://stackoverflow.com/a/13079377/1691517\">a bug fix</a>, and after this fix all possible path segment combinations worked finally: <a href=\"http://jsbin.com/oqojan/42\" rel=\"nofollow\">http://jsbin.com/oqojan/42</a>. The original Rapha\u00ebl 2.1.0 has buggy behavior as you can see <a href=\"http://jsbin.com/oqojan/44\" rel=\"nofollow\">here</a>, if not click paths few times to generate new curves.)  </p>\n\n<p>B) Then flatten transformations using native functions <code>getTransformToElement()</code>, <code>createSVGPoint()</code> and <code>matrixTransform()</code>.</p>\n\n<p>The only one that lacks is the way to convert Circles, Rectangles and Polygons to path commands, but as far as I know, you have an excellent code for it.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I have made a general SVG flattener flatten.js, that supports all shapes and path commands:\n<a href=\"https://gist.github.com/timo22345/9413158\" rel=\"nofollow\">https://gist.github.com/timo22345/9413158</a></p>\n\n<p>Basic usage: <code>flatten(document.getElementById('svg'))</code>;</p>\n\n<p>What it does: Flattens elements (converts elements to paths and flattens transformations).\nIf the argument element (whose id is above 'svg') has children, or it's descendants has children,\nthese children elements are flattened also.</p>\n\n<p>What can be flattened: entire SVG document, individual shapes (path, circle, ellipse etc.) and groups. Nested groups are handled automatically.</p>\n\n<p>How about attributes? All attributes are copied. Only arguments that are not valid in path element, are dropped (eg. r, rx, ry, cx, cy), but they are not needed anymore. Also transform attribute is dropped, because transformations are flattened to path commands.</p>\n\n<p>If you want to modify path coordinates using non-affine methods (eg. perspective distort),\nyou can convert all segments to cubic curves using:\n<code>flatten(document.getElementById('svg'), true);</code></p>\n\n<p>There are also arguments 'toAbsolute' (convert coordinates to absolute) and 'dec', \nnumber of digits after decimal separator.</p>\n\n<p>Extreme path and shape tester: <a href=\"http://jsfiddle.net/xqq5w/embedded/result/\" rel=\"nofollow\">http://jsfiddle.net/xqq5w/embedded/result/</a></p>\n\n<p>Basic usage example: <a href=\"http://jsfiddle.net/Nv78L/3/embedded/result/\" rel=\"nofollow\">http://jsfiddle.net/Nv78L/3/embedded/result/</a></p>\n\n<p>CONS: text element is not working. It could be my next goal.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p><strong>tl;dr summary</strong>: Give me the resources or help fix the below code to transform path commands for SVG <code>&lt;path&gt;</code> elements by an arbitrary matrix.</p>\n\n<p><strong>details</strong>:<br>\nI'm writing a library to convert any arbitrary SVG shape into a <code>&lt;path&gt;</code> element. I have it working when there are no <code>transform=\"...\"</code> elements in the hierarchy, but now I want to bake the local transform of the object into the <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\">path data</a> commands themselves.</p>\n\n<p>This is mostly working <em>(code below)</em> when dealing with the simple moveto/lineto commands. However, I'm not sure of the appropriate way to transform the bezier handles or arcTo parameters.</p>\n\n<p>For example, I am able to convert this rounded rectangle to a <code>&lt;path&gt;</code>:</p>\n\n<pre><code>&lt;rect x=\"10\" y=\"30\" rx=\"10\" ry=\"20\" width=\"80\" height=\"70\" /&gt;\n--&gt; &lt;path d=\u200b\"M20,30 L80,30 A10,20,0,0,1,90,50 L90,80 A10,20,0,0,1,80,100\n             L20,100 A10,20,0,0,1,10,80 L10,50 A10,20,0,0,1,20,30\" /&gt;\n</code></pre>\n\n<p>And I get a valid result when transforming without any round corners:</p>\n\n<pre><code>&lt;rect x=\"10\" y=\"30\" width=\"80\" height=\"70\"\n      transform=\"translate(-200,0) scale(1.5) rotate(50)\" /&gt;\n--&gt; &lt;path d=\u200b\"M10,30 L90,30 L90,100 L10,100 L10,30\" /&gt;\n</code></pre>\n\n<p>However, transforming only the x/y coords of the <a href=\"http://www.w3.org/TR/SVG/paths.html#PathDataEllipticalArcCommands\">elliptical arc</a> commands yields amusing results:\n<img src=\"http://i.stack.imgur.com/xYzba.png\" alt=\"Rounded rectangle with green blobs oozing from the corners outside the boundary\"><br>\n<em>The dotted line is the actual transformed rect, the green fill is my path.</em></p>\n\n<p>Following is the code I have so far (slightly pared-down). I also have a <a href=\"http://phrogz.net/SVG/transform_to_path.xhtml\">test page</a> where I'm testing various shapes. Please help me determine how to properly transform the <code>elliptical arc</code> and various other bezier commands given an arbitrary transformation matrix.</p>\n\n<pre><code>function flattenToPaths(el,transform,svg){\n  if (!svg) svg=el; while(svg &amp;&amp; svg.tagName!='svg') svg=svg.parentNode;\n  var doc = el.ownerDocument;\n  var svgNS = svg.getAttribute('xmlns');\n\n  // Identity transform if nothing passed in\n  if (!transform) transform= svg.createSVGMatrix();\n\n  // Calculate local transform matrix for the object\n  var localMatrix = svg.createSVGMatrix();\n  for (var xs=el.transform.baseVal,i=xs.numberOfItems-1;i&gt;=0;--i){\n    localMatrix = xs.getItem(i).matrix.multiply(localMatrix);\n  }\n  // Transform the local transform by whatever was recursively passed in\n  transform = transform.multiply(localMatrix);\n\n  var path = doc.createElementNS(svgNS,'path');\n  switch(el.tagName){\n    case 'rect':\n      path.setAttribute('stroke',el.getAttribute('stroke'));\n      var x  = el.getAttribute('x')*1,     y  = el.getAttribute('y')*1,\n          w  = el.getAttribute('width')*1, h  = el.getAttribute('height')*1,\n          rx = el.getAttribute('rx')*1,    ry = el.getAttribute('ry')*1;\n      if (rx &amp;&amp; !el.hasAttribute('ry')) ry=rx;\n      else if (ry &amp;&amp; !el.hasAttribute('rx')) rx=ry;\n      if (rx&gt;w/2) rx=w/2;\n      if (ry&gt;h/2) ry=h/2;\n      path.setAttribute('d',\n        'M'+(x+rx)+','+y+\n        'L'+(x+w-rx)+','+y+\n        ((rx||ry) ? ('A'+rx+','+ry+',0,0,'+(rx*ry&lt;0?0:1)+','+(x+w)+','+(y+ry)) : '') +\n        'L'+(x+w)+','+(y+h-ry)+\n        ((rx||ry) ? ('A'+rx+','+ry+',0,0,'+(rx*ry&lt;0?0:1)+','+(x+w-rx)+','+(y+h)) : '')+\n        'L'+(x+rx)+','+(y+h)+\n        ((rx||ry) ? ('A'+rx+','+ry+',0,0,'+(rx*ry&lt;0?0:1)+','+x+','+(y+h-ry)) : '')+\n        'L'+x+','+(y+ry)+\n        ((rx||ry) ? ('A'+rx+','+ry+',0,0,'+(rx*ry&lt;0?0:1)+','+(x+rx)+','+y) : '')\n      );\n    break;\n\n    case 'circle':\n      var cx = el.getAttribute('cx')*1, cy = el.getAttribute('cy')*1,\n          r  = el.getAttribute('r')*1,  r0 = r/2+','+r/2;\n      path.setAttribute('d','M'+cx+','+(cy-r)+' A'+r0+',0,0,0,'+cx+','+(cy+r)+' '+r0+',0,0,0,'+cx+','+(cy-r) );\n    break;\n\n    case 'ellipse':\n      var cx = el.getAttribute('cx')*1, cy = el.getAttribute('cy')*1,\n          rx = el.getAttribute('rx')*1, ry = el.getAttribute('ry')*1;\n      path.setAttribute('d','M'+cx+','+(cy-ry)+' A'+rx+','+ry+',0,0,0,'+cx+','+(cy+ry)+' '+rx+','+ry+',0,0,0,'+cx+','+(cy-ry) );\n    break;\n\n    case 'line':\n      var x1=el.getAttribute('x1')*1, y1=el.getAttribute('y1')*1,\n          x2=el.getAttribute('x2')*1, y2=el.getAttribute('y2')*1;\n      path.setAttribute('d','M'+x1+','+y1+'L'+x2+','+y2);\n    break;\n\n    case 'polyline':\n    case 'polygon':\n      for (var i=0,l=[],pts=el.points,len=pts.numberOfItems;i&lt;len;++i){\n        var p = pts.getItem(i);\n        l[i] = p.x+','+p.y;\n      }\n      path.setAttribute('d',\"M\"+l.shift()+\"L\"+l.join(' ') + (el.tagName=='polygon') ? 'z' : '');\n    break;\n\n    case 'path':\n      path = el.cloneNode(false);\n    break;\n  }\n\n  // Convert local space by the transform matrix\n  var x,y;\n  var pt = svg.createSVGPoint();\n  var setXY = function(x,y,xN,yN){\n    pt.x = x; pt.y = y;\n    pt = pt.matrixTransform(transform);\n    if (xN) seg[xN] = pt.x;\n    if (yN) seg[yN] = pt.y;\n  };\n\n  // Extract rotation and scale from the transform\n  var rotation = Math.atan2(transform.b,transform.d)*180/Math.PI;\n  var sx = Math.sqrt(transform.a*transform.a+transform.c*transform.c);\n  var sy = Math.sqrt(transform.b*transform.b+transform.d*transform.d);\n\n  // FIXME: Must translate any Horizontal or Vertical lineto commands into absolute moveto\n  for (var segs=path.pathSegList,c=segs.numberOfItems,i=0;i&lt;c;++i){\n    var seg = segs.getItem(i);\n\n    // Odd-numbered path segments are all relative\n    // http://www.w3.org/TR/SVG/paths.html#InterfaceSVGPathSeg\n    var isRelative = (seg.pathSegType%2==1);\n    var hasX = seg.x != null;\n    var hasY = seg.y != null;\n    if (hasX) x = isRelative ? x+seg.x : seg.x;\n    if (hasY) y = isRelative ? y+seg.y : seg.y;\n    if (hasX || hasY) setXY( x, y, hasX &amp;&amp; 'x', hasY &amp;&amp; 'y' );\n\n    if (seg.x1 != null) setXY( seg.x1, seg.y1, 'x1', 'y1' );\n    if (seg.x2 != null) setXY( seg.x2, seg.y2, 'x2', 'y2' );\n    if (seg.angle != null){\n      seg.angle += rotation;\n      seg.r1 *= sx; // FIXME; only works for uniform scale\n      seg.r2 *= sy; // FIXME; only works for uniform scale\n    }\n  }\n\n  return path;\n}\n</code></pre>\n",
            "last_activity_date": 1394209314,
            "question_id": 5149301,
            "score": 12,
            "tags": [
                "javascript",
                "svg",
                "2d",
                "transform"
            ],
            "title": "Baking transforms into SVG Path Element commands"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>No they will not be interpreted.</p>\n\n<p>HTML can be loaded either by using innerHTML, or by DOM manipulation. In both cases, if the HTML contains <code>&lt;script&gt;</code> tags, they will not be interpreted.</p>\n\n<p>You can however go through the <code>&lt;script&gt;</code> tags inside the Ajaxed HTML content, and <code>eval()</code> it, if you really need to.</p>\n\n<p>If you use this type of <code>&lt;script src=\"http://site/script.js\"&gt;&lt;/script&gt;</code> script tag, however, it will be interpreted.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>When you call the <a href=\"http://api.jquery.com/jQuery.ajax/\"><code>jQuery.ajax()</code></a> method, you can specify the <code>dataType</code> property, which describes what kind of data you are expecting from the server, and how to handle it once it is received. </p>\n\n<p>By default, jQuery will try to guess the <code>dataType</code> based on the MIME type of the response. However you can explicitly specify a dataType from the following:</p>\n\n<ul>\n<li><p><strong>html</strong>: Returns HTML as plain text; included script tags are evaluated when inserted in the DOM.</p></li>\n<li><p><strong>text</strong>: A plain text string.</p></li>\n<li><p><strong>xml</strong>: Returns a XML document that can be processed via jQuery.</p></li>\n<li><p><strong>script</strong>: Evaluates the response as JavaScript and returns it as plain text. Disables caching unless option \"cache\" is used.</p></li>\n<li><p><strong>json</strong>: Evaluates the response as JSON and returns a JavaScript object. </p></li>\n<li><p><strong>jsonp</strong>: Loads in a JSON block using JSONP. Will add an extra \"?callback=?\" to the end of your URL to specify the callback.</p></li>\n</ul>\n\n<p>As an example, the following ajax call will return the data as a plain text string, without executing the scripts or manipulating the DOM:</p>\n\n<pre><code>$.ajax({\n  url: 'ajax/test.html',\n  dataType: 'text',\n  success: function(data) {\n    alert(data);\n  }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>As has been pointed out, <em>in general</em> - no, script tags will not be interpreted. </p>\n\n<p>I'm not at all sure what will happen with the other tags.</p>\n\n<p>I'm making an assumption here that you are loading an entire page in AJAX - I'm not sure why you would want to do that? Maybe you could give us a bit more information and we could make some suggestions?</p>\n\n<p>To address your question more directly - in general, any scripts required on the reloaded content should not be reloaded with the content but with the page. That way you can arrange to have a callback from your AJAX reattaches event handlers etc.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>When you say \"load\" I understand that to merely mean invoking XHR (or $.ajax or $.get etc) to pull down an XML, JSON, or text resource from a web server, store it in the browser's JS runtime memory, and get a reference to it.  For HTML resources, that act alone doesn't parse anything.</p>\n\n<p>However, if you take that HTML and inject it into the DOM (at least in Firefox 3.5), then <strong>it will be interpreted.</strong> For example, say you had the following three, very professional files.</p>\n\n<p>barf1.html:</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;script src=\"http://jqueryjs.googlecode.com/files/jquery-1.3.2.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\"&gt;\n            $(init);\n\n            function init() {\n                $.get('barf2.html', inject);\n            }\n\n            function inject(data) {\n                debugger;\n                $('body').html(data);\n                //document.write(data);\n            }\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        long live barf1!\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>barf2.html:</p>\n\n<pre><code>&lt;div&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        alert('barf2!');\n    &lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"barf3.js\"&gt;&lt;/script&gt;\n    barf2 lives here now!\n&lt;/div&gt;\n</code></pre>\n\n<p>barf3.js:</p>\n\n<pre><code>alert('barf3, sucka!');\n</code></pre>\n\n<p>When you navigate to barf1.html, the page content will change, and you will see two JavaScript alerts, indicating that both inline script blocks and external script files are interpreted.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<blockquote>\n  <p>when you load an html document using AJAX, what does it do with the nodes inside the HEAD tag: (script,link,style,meta,title)</p>\n</blockquote>\n\n<p>That depends how you do the loading. <code>ajax()</code> (as with the XMLHttpRequest on which it is based) itself just gives you a string. How are you getting that into the document?</p>\n\n<p>If you write that string to the <code>innerHTML</code> of an element, scripts inside it won't be executed. This is not standardised anywhere but all currently popular browsers behave this way.</p>\n\n<p>However, if you then insert that element into the document (whether it was already inside the document before or not), it <em>will</em> be executed in many browsers, the first time you do it. In IE, the script will be executed when you directly insert a script element into <em>any</em> element, whether in the document or not.</p>\n\n<p>This is all very inconsistent and inconvenient, which is why you should avoid AJAX-loading <code>&lt;script&gt;</code> elements in the document. There is not usually a good reason to anyway; better to keep your script code static, and use JSON (or <code>eval</code> only if absolutely necessary) to pass scripting data to them.</p>\n\n<p>jQuery's <code>load</code> function attempts to compensate for the browser differences when AJAX-loading content into the document. It fails to catch all circumstances involving <code>&lt;script&gt;</code> (there are some really strange ones). You shouldn't rely on it, in general. You can get away with taking an HTML page response but then only loading specific element(s) with no <code>&lt;script&gt;</code> in, because that only does the writing-to-innerHTML step. But again, you don't really want to be relying on this. Much better to have the server return a snippet of HTML or JSON your scripts can use directly.</p>\n\n<p>As for stylesheets and stylesheet links, inserting them into the body does generally work, though by HTML's terms it probably shouldn't. <code>meta</code> and <code>title</code> won't do anything, it's too late for them to have an effect. Just parsing them using <code>innerHTML</code> won't do anything, but still, avoid it if you can.</p>\n",
                    "is_accepted": false,
                    "score": 19
                }
            ],
            "body": "<p>When you load an html document using AJAX, what does it do with the nodes inside the HEAD tag: (script,link,style,meta,title) ignore them or load and parse them?\nAnd in the case of jquery 's ajax() function?</p>\n",
            "last_activity_date": 1374048507,
            "question_id": 2203762,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "ajax"
            ],
            "title": "When loading an html page via ajax, will script tags be loaded?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I couldn't find out how to call beans direcly with javascript, but here is a hack around calling f:ajax-declaration from javascript:</p>\n\n<p>1) Create a hidden form with fields for all the data that you want to send to the server. Include a h:commandButton as well:</p>\n\n<pre><code>&lt;h:form id=\"hiddenForm\" style=\"display: none;\"&gt;\n    &lt;h:inputHidden id=\"someData\" value=\"#{someBean.someData}\" /&gt;\n    &lt;h:commandButton id=\"invisibleClickTarget\" /&gt;\n        &lt;f:ajax execute=\"@form\" listener=\"#{someBean.myCoolActionOnServer()}\" /&gt;\n    &lt;/h:commandButton&gt;\n&lt;/h:form&gt;\n</code></pre>\n\n<p>As usual, <code>listener</code> attribute, <code>#{someBean.myCoolActionOnServer()}</code> in this case, refers to the method that you want to execute on the server.</p>\n\n<p>2) In some other button use <code>onclick</code> to call for your special javascript AND click the trigger-button via javascript:</p>\n\n<pre><code>&lt;h:commandButton value=\"Click me\" onclick=\"populateTheForm('hiddenForm'); document.getElementById('hiddenForm:invisibleClickTarget').click(); return false;\" /&gt;\n</code></pre>\n\n<p><code>populateTheForm()</code> should actually fill the data into hiddenForm's fields.</p>\n\n<p>This is a simplification of my case but should work. Still looking for more conventient approach, though.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>I did this task several times. Yo don't need multiply hidden fiels. You can use only one hidden field, convert all input values to JSON object via JSON.stringify and set into this field. On the server side - deserialize JSON object (there are many Java libs for that) to an Java class. That's all.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Some background: I am building a custom JSF component. The component is basically a text editor and it should have a \"Save\" -button for saving the content string of the editor. As I am using the <a href=\"http://codemirror.net/\">CodeMirror</a> library, I need to fetch the content (string) from the editor with javascript and send that to the server. Therefore, in this case I cannot use XML-based JS invocation such as <code>f:ajax</code>.</p>\n\n<p>The question: I was planning to send the string with <code>jsf.ajax.request</code>, but it doesn't directly support calling methods on beans. How can I invoke a method in a bean with JSF in AJAX manner?</p>\n\n<p>There at least two ways to get around this:</p>\n\n<ul>\n<li>Include a hidden form to page with hidden inputfield. Update that inputfield from javascript and then call jsf.ajax.request to post that form. Custom actions can be invoced in the property's getter or setter if needed.</li>\n<li>Do the request with raw <code>XMLHttpRequest</code> (or maybe with help from some other JS library). Create a servlet and call that.</li>\n</ul>\n\n<p>Both ways are clumsy and the latter also breaks out of JSF scope.</p>\n\n<p>Am I missing something? How do you do these?</p>\n\n<p>There is a <a href=\"http://stackoverflow.com/questions/2690461/jsf-2-0-ajax-jsf-ajax-request-to-call-method-not-only-rerender-an-area-of-page\">quite similar question</a>, but the answers given only refer to XML-based AJAX invocations. There is also <a href=\"http://stackoverflow.com/questions/3581499/invoke-backing-bean-method-from-javascript-jsf\">another similar question</a>, but that refers to XML-based AJAX calls as well.</p>\n",
            "last_activity_date": 1365630051,
            "question_id": 3710908,
            "score": 10,
            "tags": [
                "java",
                "javascript",
                "ajax",
                "jsf",
                "jsf-2"
            ],
            "title": "JSF 2.0 AJAX: Call a bean method from javascript with jsf.ajax.request (or some other way)"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Focus can be set on interactive elements only... Div only represent a logical section of the page.</p>\n\n<p>Perhaps you can set the borders around div or change it's color to simulate a focus. And yes Visiblity is not focus.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think that if you add a tabindex to your div, it will be able to get focus:</p>\n\n<pre><code>&lt;div class=\"divFirst\" tabindex=\"-1\"&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>I don't think it's valid though, tabindex can be applied only to a, area, button, input, object, select, and textarea. But give it a try.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can't focus on a div. You can only focus on an input element in that div. Also, you need to use element.focus() instead of display()</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use an anchor to \"focus\" the div. I.e:</p>\n\n<pre><code>&lt;div id=\"myDiv\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>and then use the following javascript:</p>\n\n<pre><code>// the next line is required to work around a bug in WebKit (Chrome / Safari)\nlocation.href = \"#\";\nlocation.href = \"#myDiv\";\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>var divFirst = document.getElementById(\"divFirst\");\ndivFirst.style.visibility = 'visible'; \ndivFirst.style.display = 'block';  \ndivFirst.tabIndex = \"-1\";  \ndivFirst.focus();\n</code></pre>\n\n<p>e.g @: </p>\n\n<blockquote>\n  <p><a href=\"http://jsfiddle.net/Vgrey/\" rel=\"nofollow\">http://jsfiddle.net/Vgrey/</a></p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>your question and the answers looks different. I don't know if I am mistaken, but for those who googles and reach here my answer would be the following:</p>\n\n<ol>\n<li><a href=\"http://stackoverflow.com/a/11986153/1441326\">My answer on stackoverflow</a></li>\n<li><a href=\"http://stackoverflow.com/questions/4801655/how-to-go-to-specific-to-element-on-page/11986153\">A similar question </a></li>\n</ol>\n\n<p>My Answer explained:</p>\n\n<p>here is a simple javascript for that</p>\n\n<p>call this when you need to scroll the screen to an element which has id=\"yourSpecificElementId\"</p>\n\n<pre><code>window.scroll(0,findPos(document.getElementById(\"yourSpecificElementId\")));\n</code></pre>\n\n<p>ie. for the above question, if the intention is to scroll the screen to the div with id 'divFirst' </p>\n\n<p>the code would be: <code>window.scroll(0,findPos(document.getElementById(\"divFirst\")));</code></p>\n\n<p>and you need this function for the working:</p>\n\n<pre><code>//Finds y value of given object\nfunction findPos(obj) {\n    var curtop = 0;\n    if (obj.offsetParent) {\n        do {\n            curtop += obj.offsetTop;\n        } while (obj = obj.offsetParent);\n    return [curtop];\n    }\n}\n</code></pre>\n\n<p>the screen will be scrolled to your specific element.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>To scroll to a given element, just made this javascript only solution below.</p>\n\n<p>Simple usage:</p>\n\n<pre><code>EPPZScrollTo.scrollVerticalToElementById('signup_form', 20);\n</code></pre>\n\n<p>Engine object (you can fiddle with filter, fps values):</p>\n\n<pre><code>/**\n *\n * Created by Borb\u00e1s Geri on 12/17/13\n * Copyright (c) 2013 eppz! development, LLC.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n */\n\n\nvar EPPZScrollTo =\n{\n    /**\n     * Helpers.\n     */\n    documentVerticalScrollPosition: function()\n    {\n        if (self.pageYOffset) return self.pageYOffset; // Firefox, Chrome, Opera, Safari.\n        if (document.documentElement &amp;&amp; document.documentElement.scrollTop) return document.documentElement.scrollTop; // Internet Explorer 6 (standards mode).\n        if (document.body.scrollTop) return document.body.scrollTop; // Internet Explorer 6, 7 and 8.\n        return 0; // None of the above.\n    },\n\n    viewportHeight: function()\n    { return (document.compatMode === \"CSS1Compat\") ? document.documentElement.clientHeight : document.body.clientHeight; },\n\n    documentHeight: function()\n    { return (document.height !== undefined) ? document.height : document.body.offsetHeight; },\n\n    documentMaximumScrollPosition: function()\n    { return this.documentHeight() - this.viewportHeight(); },\n\n    elementVerticalClientPositionById: function(id)\n    {\n        var element = document.getElementById(id);\n        var rectangle = element.getBoundingClientRect();\n        return rectangle.top;\n    },\n\n    /**\n     * Animation tick.\n     */\n    scrollVerticalTickToPosition: function(currentPosition, targetPosition)\n    {\n        var filter = 0.2;\n        var fps = 60;\n        var difference = parseFloat(targetPosition) - parseFloat(currentPosition);\n\n        // Snap, then stop if arrived.\n        var arrived = (Math.abs(difference) &lt;= 0.5);\n        if (arrived)\n        {\n            // Apply target.\n            scrollTo(0.0, targetPosition);\n            return;\n        }\n\n        // Filtered position.\n        currentPosition = (parseFloat(currentPosition) * (1.0 - filter)) + (parseFloat(targetPosition) * filter);\n\n        // Apply target.\n        scrollTo(0.0, Math.round(currentPosition));\n\n        // Schedule next tick.\n        setTimeout(\"EPPZScrollTo.scrollVerticalTickToPosition(\"+currentPosition+\", \"+targetPosition+\")\", (1000 / fps));\n    },\n\n    /**\n     * For public use.\n     *\n     * @param id The id of the element to scroll to.\n     * @param padding Top padding to apply above element.\n     */\n    scrollVerticalToElementById: function(id, padding)\n    {\n        var element = document.getElementById(id);\n        if (element == null)\n        {\n            console.warn('Cannot find element with id \\''+id+'\\'.');\n            return;\n        }\n\n        var targetPosition = this.documentVerticalScrollPosition() + this.elementVerticalClientPositionById(id) - padding;\n        var currentPosition = this.documentVerticalScrollPosition();\n\n        // Clamp.\n        var maximumScrollPosition = this.documentMaximumScrollPosition();\n        if (targetPosition &gt; maximumScrollPosition) targetPosition = maximumScrollPosition;\n\n        // Start animation.\n        this.scrollVerticalTickToPosition(currentPosition, targetPosition);\n    }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>scrollIntoView works well:</p>\n\n<pre><code>element = document.getElementById(\"divFirst\")\nalignWithTop = true;\nelement.scrollIntoView(alignWithTop);\n</code></pre>\n\n<p>full reference in the MDN docs:<br>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element.scrollIntoView\">https://developer.mozilla.org/en-US/docs/Web/API/Element.scrollIntoView</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>In case you want to use html, you could just use this:</p>\n\n<pre><code>a href=\"samplewebsite.com/subdivision.html#id\n</code></pre>\n\n<p>and make it an html link to the specific element id. Its basically <code>getElementById</code> html version.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>try this function </p>\n\n<pre><code>function navigate(divId) {\n$j('html, body').animate({ scrollTop: $j(\"#\"+divId).offset().top }, 1500);\n}\n</code></pre>\n\n<p>Pass the div id as parameter it will work I am using it already</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am trying to move the page to a <code>&lt;div&gt;</code> element.</p>\n\n<p>I have tried the next code to no avail:</p>\n\n<pre><code>document.getElementById(\"divFirst\").style.visibility = 'visible';\ndocument.getElementById(\"divFirst\").style.display = 'block';\n</code></pre>\n",
            "last_activity_date": 1415020738,
            "question_id": 5007530,
            "score": 9,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "How do I scroll to an element using JavaScript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I think you are looking for the <a href=\"http://api.jquery.com/load/\" rel=\"nofollow\">Jquery Load</a> function. You would just use that function with an onclick function tied to the a tag or a button if you like.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try with this one:</p>\n\n<pre><code>$(document).ready(function(){\n  $('a').click(function(e){\n     e.preventDefault();\n     $(\"#content\").load($(this).attr('href'));\n  });\n});\n</code></pre>\n\n<p>and make sure to call this library first:</p>\n\n<pre><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js\"&gt;\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I think this would do it:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    $(document).ready(function(){\n\n         $(\".divlink\").click(function(){\n         $(\"#content\").attr(\"src\" , $(this).attr(\"ref\"));\n\n});\n\n});\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;iframe id=\"content\"&gt;&lt;/iframe&gt;\n\n&lt;a href=\"#\" ref=\"page1.html\" class=\"divlink\" &gt;Page 1&lt;/a&gt;&lt;br /&gt;\n&lt;a href=\"#\" ref=\"page2.html\" class=\"divlink\" &gt;Page 2&lt;/a&gt;&lt;br /&gt;\n&lt;a href=\"#\" ref=\"page3.html\" class=\"divlink\" &gt;Page 3&lt;/a&gt;&lt;br /&gt;\n&lt;a href=\"#\" ref=\"page4.html\" class=\"divlink\" &gt;Page 4&lt;/a&gt;&lt;br /&gt;\n&lt;a href=\"#\" ref=\"page5.html\" class=\"divlink\" &gt;Page 5&lt;/a&gt;&lt;br /&gt;\n&lt;a href=\"#\" ref=\"page6.html\" class=\"divlink\" &gt;Page 6&lt;/a&gt;&lt;br /&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>By the way if you can avoid Jquery, you can just use the <code>target</code> attribute of <code>&lt;a&gt;</code> element:</p>\n\n<pre><code>&lt;html&gt;\n&lt;body&gt;\n&lt;iframe id=\"content\" name=\"content\"&gt;&lt;/iframe&gt;\n\n&lt;a href=\"page1.html\" target=\"content\" &gt;Page 1&lt;/a&gt;&lt;br /&gt;\n&lt;a href=\"page2.html\" target=\"content\" &gt;Page 2&lt;/a&gt;&lt;br /&gt;\n&lt;a href=\"page3.html\" target=\"content\" &gt;Page 3&lt;/a&gt;&lt;br /&gt;\n&lt;a href=\"page4.html\" target=\"content\" &gt;Page 4&lt;/a&gt;&lt;br /&gt;\n&lt;a href=\"page5.html\" target=\"content\" &gt;Page 5&lt;/a&gt;&lt;br /&gt;\n&lt;a href=\"page6.html\" target=\"content\" &gt;Page 6&lt;/a&gt;&lt;br /&gt;\n&lt;/body&gt;\n&lt;/html&gt; \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>JQuery load works, but it will strip out javascript and other elements from the source page.  This makes sense because you might not want to introduce bad script on your page.  I think this is a limitation and since you are doing a whole page and not just a div on the source page, you might not want to use it.  (I am not sure about css, but I think it would also get stripped)</p>\n\n<p>In this example, if you put a tag around the body of your source page, it will grab anything in between the tags and won't strip anything out.  I wrap my source page with  and .</p>\n\n<p>This solution will grab everything between the above delimiters.  I feel it is a much more robust solution than a simple load.</p>\n\n<pre><code>  var content = $('.contentDiv');\n    content.load(urlAddress, function (response, status, xhr) {\n        var fullPageTextAsString = response;\n        var pageTextBetweenDelimiters = fullPageTextAsString.substring(fullPageTextAsString.indexOf(\"&lt;jqueryloadmarkerstart /&gt;\"), fullPageTextAsString.indexOf(\"&lt;jqueryloadmarkerend /&gt;\"));\n        content.html(pageTextBetweenDelimiters);\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There's a jQuery plugin out there called <a href=\"https://github.com/defunkt/jquery-pjax\">pjax</a>. The demo is <a href=\"http://pjax.heroku.com/\">here</a> and states: \"It's ajax with real permalinks, page titles, and a working back button that fully degrades.\"</p>\n\n<p>The plugin uses HTML5 pushState and AJAX to dynamically change pages without a full load. If pushState isn't supported, PJAX performs a full page load, ensuring backwards compatibility.</p>\n\n<p>What pjax does is that it listens on specified page elements such as <code>&lt;a&gt;</code>. Then when the <code>&lt;a href=\"\"&gt;&lt;/a&gt;</code> element is invoked, the target page is fetched with either the <code>X-PJAX</code> header, or a specified fragment.</p>\n\n<p>Example:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n  $(document).pjax('a', '#pjax-container');\n&lt;/script&gt;\n</code></pre>\n\n<p>Putting this code in the page header will listen on all links in the document and set the element that you are both fetching from the new page and replacing on the current page.</p>\n\n<p>(meaning you want to replace <code>#pjax-container</code> on the current page with <code>#pjax-container</code> from the remote page)</p>\n\n<p>When <code>&lt;a&gt;</code> is invoked, it will fetch the link with the request header <code>X-PJAX</code> and will look for the contents of <code>#pjax-container</code> in the result. If the result is <code>#pjax-container</code>, the container on the current page will be replaced with the new result.</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;script type=\"text/javascript\" src=\"jquery.min.js\"&gt;&lt;/script&gt;\n  &lt;script type=\"text/javascript\" src=\"jquery.pjax.js\"&gt;&lt;/script&gt; \n  &lt;script type=\"text/javascript\"&gt;\n    $(document).pjax('a', '#pjax-container');\n  &lt;/script&gt; \n&lt;/head&gt;\n&lt;body&gt;\n  &lt;h1&gt;My Site&lt;/h1&gt;\n  &lt;div class=\"container\" id=\"pjax-container\"&gt;\n    Go to &lt;a href=\"/page2\"&gt;next page&lt;/a&gt;.\n  &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>If <code>#pjax-container</code> is not the first element found in the response, PJAX will not recognize the content and perform a full page load on the requested link. To fix this, the server backend code would need to be set to only send <code>#pjax-container</code>.</p>\n\n<p>Example server side code of <code>page2</code>:</p>\n\n<pre><code>//if header X-PJAX == true in request headers, send\n&lt;div class=\"container\" id=\"pjax-container\"&gt;\n  Go to &lt;a href=\"/page1\"&gt;next page&lt;/a&gt;.\n&lt;/div&gt;\n//else send full page\n</code></pre>\n\n<p>If you can't change server-side code, then the fragment option is an alternative.</p>\n\n<pre><code>$(document).pjax('a', '#pjax-container', { \n  fragment: '#pjax-container' \n});\n</code></pre>\n\n<p>Note that <code>fragment</code> is an older pjax option and appears to fetch the child element of requested element.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>You can use jQuery's getJSON() or Load(); with the latter, you can reference an existing html file. For more details, see <a href=\"http://www.codeproject.com/Articles/661782/Three-Ways-to-Dynamically-Load-HTML-Content-into-a\" rel=\"nofollow\">http://www.codeproject.com/Articles/661782/Three-Ways-to-Dynamically-Load-HTML-Content-into-a</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to make it so when I click on a link in a HTML page, it dynamically loads the requested page into a div with jQuery.</p>\n\n<p>How can I do that?</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\n    // what can I do for load any url clicked?\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id=\"content\"&gt;&lt;/div&gt;\n\n&lt;a href=\"page1.html\"&gt;Page 1&lt;/a&gt;&lt;br /&gt;\n&lt;a href=\"page2.html\"&gt;Page 2&lt;/a&gt;&lt;br /&gt;\n&lt;a href=\"page3.html\"&gt;Page 3&lt;/a&gt;&lt;br /&gt;\n&lt;a href=\"page4.html\"&gt;Page 4&lt;/a&gt;&lt;br /&gt;\n&lt;a href=\"page5.html\"&gt;Page 5&lt;/a&gt;&lt;br /&gt;\n&lt;a href=\"page6.html\"&gt;Page 6&lt;/a&gt;&lt;br /&gt;\n&lt;/body&gt;\n&lt;/html&gt; \n</code></pre>\n",
            "last_activity_date": 1380822879,
            "question_id": 14735762,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css"
            ],
            "title": "Load HTML page dynamically into div with jQuery"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I don't see how you could feasibly do this without explicitly-wrapped text (i.e., newlines or <code>&lt;br&gt;</code> elements).</p>\n\n<p>To the best of my knowledge, there's no way for the DOM to discover where a specific piece of text has wrapped, character-wise <em>nor</em> pixel-wise - including what I know of the <a href=\"https://developer.mozilla.org/En/DOM/Range\" rel=\"nofollow\">Range API</a> - not to mention the dynamic nature text can assume, such as with the text-zooming feature of browsers.</p>\n\n<p>But if you could somehow manage to generate/inject explicit line-endings, then I think I have a solution for you.</p>\n\n<h2>EDIT</h2>\n\n<p>Thanks to the awesome information in Pekka's answer, I've cobbled together a functional prototype, but it has a significant caveat - works with plain-text content only.  Any HTML present the body of the element will be stripped.</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://www.google.com/jsapi\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt; google.load(\"jquery\", \"1.4.1\"); &lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n\n  jQuery.fn.wrapLines = function( openTag, closeTag )\n  {\n    var dummy = this.clone().css({\n            top: -9999,\n            left: -9999,\n            position: 'absolute',\n            width: this.width()\n        }).appendTo(this.parent())\n      , text = dummy.text().match(/\\S+\\s+/g);\n\n    var words = text.length\n      , lastTopOffset = 0\n      , lines = []\n      , lineText = ''\n    ;\n\n    for ( var i = 0; i &lt; words; ++i )\n    {\n      dummy.html(\n          text.slice(0,i).join('') +\n          text[i].replace(/(\\S)/, '$1&lt;span/&gt;') +\n          text.slice(i+1).join('')\n      );\n\n      var topOffset = jQuery( 'span', dummy ).offset().top;\n\n      if ( topOffset !== lastTopOffset &amp;&amp; i != 0 )\n      {\n        lines.push( lineText );\n        lineText = text[i];\n      } else {\n        lineText += text[i];\n      }\n\n      lastTopOffset = topOffset;\n    }\n    lines.push( lineText );\n\n    this.html( openTag + lines.join( closeTag + openTag ) + closeTag );\n  };\n\n  $(function()\n  {\n    $('p').wrapLines( '&lt;span class=\"line\"&gt;', '&lt;/span&gt;' );\n  });\n\n&lt;/script&gt;\n\n&lt;style type=\"text/css\"&gt;\nspan.line:hover {\n  background-color: lightblue;\n}\n&lt;/style&gt;\n\n&lt;p style=\"width: 400px;\"&gt;\n one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen twenty twenty-one twenty-two twenty-three\n&lt;/p&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The best approach that comes to mind is splitting each line into a <code>&lt;span&gt;</code> or <code>&lt;div&gt;</code> element that has a <code>:hover</code> CSS class with the \"highlight\" setting set:</p>\n\n<pre><code>span.line:hover { background-color: lightblue; }\n</code></pre>\n\n<p>That would be the least expensive solution, as the browser is going to take care of all the highlighting itself. If you want fancy effects, you can still achieve that by adding <code>mouseover</code> and <code>mouseout</code> events to every line. </p>\n\n<p>The tough part, of course, is splitting the content into lines at the browser's line break. You need to do that dynamically so the lines actually reflect the positions at which the browser breaks the text. </p>\n\n<p>Maybe the accepted answer to this question is a step into the right direction:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/1282384/getting-a-specific-line-using-jquery\"><strong>Getting a specific line using jQuery</strong></a></p>\n\n<blockquote>\n  <p>How it works:</p>\n  \n  <p>It goes through the entire element (actually, a clone of the element) inserting a  element within each word. The span's top-offset is cached - when this offset changes we can assume we're on a new line. </p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Not sure if jQuery will help you out much here, but you could take a look at the <code>element.getClientRects</code> method, documented on <a href=\"http://msdn.microsoft.com/en-us/library/ms536435%28VS.85%29.aspx\">MSDN</a> and <a href=\"https://developer.mozilla.org/en/DOM%3aelement.getClientRects\">MDC</a>.  More specifically, <a href=\"http://samples.msdn.microsoft.com/workshop/samples/author/dhtml/refs/rectselection.htm\">this example</a> at MSDN is sort of similar to what you want to achieve, highlighting lines using a cleverly z-indexed <code>div</code> element that goes behind the text at the co-ordinates returned by <code>getClientRects()</code>.</p>\n\n<p>You should be able to achieve the same thing by looping through the TextRectangle objects returned in the document's <code>onmousemove</code> and checking to see if the y value of the mouse cursor is > the top and &lt; the bottom of each rectangle and moving the cleverly z-indexed div to the same position/height.</p>\n\n<p>All the current major browsers support <code>getClientRects()</code>.</p>\n\n<hr/>\n\n<p><a href=\"http://jsbin.com/avuku/15\">http://jsbin.com/avuku/15</a>  </p>\n\n<p><strong>UPDATED</strong> - working in Chrome, IE6/7/8, Firefox, Opera, Safari.  The initial problems I had in the other browsers were related to the <code>DIV</code> needing to be <code>display: inline</code>.<br>\n<strong>UPDATED AGAIN</strong> - I had to refer to this answer for some newer questions, so I took the time to update it to recalc the lines on window resize.  It looks like others have been playing around too, it's now on revision 15. </p>\n",
                    "is_accepted": true,
                    "score": 17
                }
            ],
            "body": "<p>I have a long text and I'd like to offer the user a reading help: The current line should be highlighted. To make it easier, I'll just use the Y coordinate of the mouse (this way, the mouse pointer isn't going to get in the way). I have a big DIV with the id <code>content</code> which fills the whole width and a small DIV with the class <code>content</code> for the text (<a href=\"http://www.pdark.de/haul/SceneFile-f446bc18-fdbc-42dd-bfde-2f501e2e7f73.html\" rel=\"nofollow\">see here for an example</a>).</p>\n\n<p>I'm using jQuery 1.4. How can I highlight the line of text that is closest to the current mouse position?</p>\n",
            "last_activity_date": 1299105059,
            "question_id": 2456442,
            "score": 4,
            "tags": [
                "javascript",
                "html",
                "text",
                "line",
                "highlight"
            ],
            "title": "How can I highlight the line of text that is closest to the mouse?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The latest dwr (<a href=\"http://directwebremoting.org/dwr/index.html\" rel=\"nofollow\">http://directwebremoting.org/dwr/index.html</a>) has ajax file uploads, complete with examples and nice stuff for users (like progress indicators and such). </p>\n\n<p>It looks pretty nifty and dwr is fairly easy to use in general so this will be pretty good as well.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I don't believe AJAX can handle file uploads but this can be achieved with libraries that leverage flash.  Another advantage of the flash implementation is the ability to do multiple files at once (like gmail).</p>\n\n<p>SWFUpload is a good start : <a href=\"http://www.swfupload.org/documentation\" rel=\"nofollow\">http://www.swfupload.org/documentation</a></p>\n\n<p>jQuery and some of the other libraries have plugins that leverage SWFUpload.  On my last project we used SWFUpload and Java without a problem.</p>\n\n<p>Also helpful and worth looking into is Apache's FileUpload : <a href=\"http://commons.apache.org/fileupload/index.html\" rel=\"nofollow\">http://commons.apache.org/fileupload/index.html</a></p>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>The two common approaches are to submit the form to an <a href=\"http://geekswithblogs.net/rashid/archive/2007/08/01/Create-An-Ajax-Style-File-Upload.aspx\" rel=\"nofollow\">invisible iframe</a>, or to use a Flash control such as <a href=\"http://developer.yahoo.com/yui/uploader/\" rel=\"nofollow\">YUI Uploader</a>. You could also use Java instead of Flash, but this has a narrower install base.</p>\n\n<p>(Shame about the layout table in the first example)</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am planning on having asynchronous file uploads. That is the file should be uploaded to a jsp or servlet and return something to the html/jsp page without reloading the original page. It should happen like an AJAX call. Is there any way to do it in AJAX or any other way to do it. </p>\n",
            "last_activity_date": 1271988654,
            "question_id": 1276916,
            "score": 3,
            "tags": [
                "javascript",
                "ajax",
                "jsp",
                "file-upload",
                "html-form"
            ],
            "title": "Asynchronous file upload (AJAX file upload) using jsp and javascript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><strong>2nd Update:</strong> In attempt to provide a comprehensive answer, I am benchmarking the three methods proposed in the various answers.</p>\n\n<pre><code>var testURL = '/Products/List?SortDirection=dsc&amp;Sort=price&amp;Page=3&amp;Page2=3';\nvar i;\n\n// Testing the substring method\ni = 0;\nconsole.time('10k substring');\nwhile (i &lt; 10000) {\n    testURL.substring(0, testURL.indexOf('?'));\n    i++;\n}\nconsole.timeEnd('10k substring');\n\n// Testing the split method\ni = 0;\nconsole.time('10k split');\nwhile (i &lt; 10000) {\n    testURL.split('?')[0]; \n    i++;\n}\nconsole.timeEnd('10k split');\n\n// Testing the RegEx method\ni = 0;\nvar re = new RegExp(\"[^?]+\");\nconsole.time('10k regex');\nwhile (i &lt; 10000) {\n    testURL.match(re)[0]; \n    i++;\n}\nconsole.timeEnd('10k regex');\n</code></pre>\n\n<p>Results in Firefox 3.5.8 on Mac OS X 10.6.2:</p>\n\n<pre><code>10k substring:  16ms\n10k split:      25ms\n10k regex:      44ms\n</code></pre>\n\n<p>Results in Chrome 5.0.307.11 on Mac OS X 10.6.2:</p>\n\n<pre><code>10k substring:  14ms\n10k split:      20ms\n10k regex:      15ms\n</code></pre>\n\n<p>Note that the substring method is inferior in functionality as it returns a blank string if the URL does not contain a querystring. The other two methods would return the full URL, as expected. However it is interesting to note that the substring method is the fastest, especially in Firefox.</p>\n\n<hr>\n\n<p><strong>1st UPDATE:</strong> Actually the split() method <a href=\"http://stackoverflow.com/questions/2540969/remove-querystring-from-url/2541083#2541083\">suggested by Robusto</a> is a better solution that the one I suggested earlier, since it will work even when there is no querystring:</p>\n\n<pre><code>var testURL = '/Products/List?SortDirection=dsc&amp;Sort=price&amp;Page=3&amp;Page2=3';\ntestURL.split('?')[0];    // Returns: \"/Products/List\"\n\nvar testURL2 = '/Products/List';\ntestURL2.split('?')[0];    // Returns: \"/Products/List\"\n</code></pre>\n\n<hr>\n\n<p><strong>Original Answer:</strong></p>\n\n<pre><code>var testURL = '/Products/List?SortDirection=dsc&amp;Sort=price&amp;Page=3&amp;Page2=3';\ntestURL.substring(0, testURL.indexOf('?'));    // Returns: \"/Products/List\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>If you need to perform complex operation on URL, you can take a look to the <a href=\"http://projects.allmarkedup.com/jquery_url_parser/\" rel=\"nofollow\">jQuery url parser plugin</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>An easy way to get this is:</p>\n\n<pre><code>function getPathFromUrl(url) {\n  return url.split(\"?\")[0];\n}\n</code></pre>\n\n<p>For those who also wish to <strong>remove the hash</strong> (not part of the original question) <strong>when no querystring exists</strong>, that requires a little bit more:</p>\n\n<pre><code>function stripQueryStringAndHashFromPath(url) {\n  return url.split(\"?\")[0].split(\"#\")[0];\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 129
                },
                {
                    "body": "<p>If you're into RegEx....</p>\n\n<pre><code>var newURL = testURL.match(new RegExp(\"[^?]+\"))\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>A simple way is you can do as follows</p>\n\n<pre><code>public static String stripQueryStringAndHashFromPath(String uri) {\n return uri.replaceAll((\"(\\\\?.*|\\\\#.*)\"), \"\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>var path = \"path/to/myfile.png?foo=bar#hash\";\n\nconsole.log(\n    path.replace(/(\\?.*)|(#.*)/g, \"\")\n);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What is an easy way to remove the querystring from a Path in Javascript?\nI have seen a plugin for Jquery that uses window.location.search. I can not do that: The URL in my case is a variable that is set from AJAX.</p>\n\n<pre><code>var testURL = '/Products/List?SortDirection=dsc&amp;Sort=price&amp;Page=3&amp;Page2=3&amp;SortOrder=dsc'\n</code></pre>\n",
            "last_activity_date": 1369582140,
            "question_id": 2540969,
            "score": 49,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Remove querystring from URL"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>For mouse events, I know that in Firefox at least the \"shiftKey\" property on the event object will tell you if the shift key is down. It's documented at MSDN but I haven't tried it in forever so I don't recall if IE does this right.</p>\n\n<p>Thus you should be able to check for \"shiftKey\" on the event object in your \"click\" handler.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>The <code>keypress</code> event isn't triggered by all browsers when you click <kbd>shift</kbd> or <kbd>ctrl</kbd>, but fortunately <a href=\"http://unixpapa.com/js/key.html\" rel=\"nofollow\">the <code>keydown</code> event is</a>.</p>\n\n<p>If you switch out the <code>keypress</code> with <code>keydown</code> you might have better luck.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>    $(document).on('keyup keydown', function(e){shifted = e.shiftKey} );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>There is a key code equivalent for each key stroke in javascript. You can used that and detect if the user have pressed Shift key or not. The list is as under ::</p>\n\n<pre><code>backspace   8\ntab     9\nenter   13\nshift   16\nctrl    17\nalt     18\npause/break     19\ncaps lock   20\nescape  27\npage up     33\npage down   34\nend     35\nhome    36\nleft arrow  37\nup arrow    38\nright arrow     39\ndown arrow  40\ninsert  45\ndelete  46\n0   48\n1   49\n2   50\n3   51\n4   52\n5   53\n6   54\n7   55\n8   56\n9   57\na   65\nb   66\nc   67\nd   68\ne   69\nf   70\ng   71\nh   72\ni   73\nj   74\nk   75\nl   76\nm   77\nn   78\no   79\np   80\nq   81\nr   82\ns   83\nt   84\nu   85\nv   86\nw   87\nx   88\ny   89\nz   90\nleft window key     91\nright window key    92\nselect key  93\nnumpad 0    96\nnumpad 1    97\nnumpad 2    98\nnumpad 3    99\nnumpad 4    100\nnumpad 5    101\nnumpad 6    102\nnumpad 7    103\nnumpad 8    104\nnumpad 9    105\nmultiply    106\nadd     107\nsubtract    109\ndecimal point   110\ndivide  111\nf1  112\nf2  113\nf3  114\nf4  115\nf5  116\nf6  117\nf7  118\nf8  119\nf9  120\nf10     121\nf11     122\nf12     123\nnum lock    144\nscroll lock     145\nsemi-colon  186\nequal sign  187\ncomma   188\ndash    189\nperiod  190\nforward slash   191\ngrave accent    192\nopen bracket    219\nback slash  220\nclose braket    221\nsingle quote    222\n</code></pre>\n\n<p>Thats true not all browser to keypress event well so used either keyup or key down\nso check it like this </p>\n\n<pre><code>$(document).keydown(function (e) {\n    if (e.keyCode == 16) {\n        alert(e.which + \" or Shift was pressed\");\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>I had a similar problem, trying to capture a 'shift+click' but since I was using a third party control with a callback rather than the standard <code>click</code> handler, I didn't have access to the event object and its associated <code>e.shiftKey</code>.</p>\n\n<p>I ended up handling the mouse down event to record the shift-ness and then using it later in my callback.</p>\n\n<pre><code>    var shiftHeld = false;\n    $('#control').on('mousedown', function (e) { shiftHeld = e.shiftKey });\n</code></pre>\n\n<p>Posted just in case someone else ends up here searching for a solution to this problem.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Querying the event for the shift key (as pointed out by @tonycoupland) is the right answer.</p>\n\n<p>However, I wanted to point you to the excellent JavaScript library <a href=\"http://robertwhurst.github.io/KeyboardJS/\" rel=\"nofollow\">KeyboardJS</a> handles all types of key presses including the SHIFT key. It even allows specifying key combinations such as first pressing CTRL+x and then a.</p>\n\n<pre><code>KeyboardJS.on('shift', function() { ...handleDown... }, function() { ...handleUp... });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var shiftDown = false;\nthis.onkeydown = function(evt){\n    var evt2 = evt || window.event;\n    var keyCode = evt2.keyCode || evt2.which;       \n    if(keyCode==16)shiftDown = true;\n}\nthis.onkeyup = function(){\n    shiftDown = false;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/2CHYQ/1/\" rel=\"nofollow\">demo</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This works great for me:</p>\n\n<pre><code>function listenForShiftKey(e){\n    var evt = e || window.event;\n    if (evt.shiftKey) {\n      shiftKeyDown = true;\n    } else {\n      shiftKeyDown = false;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have used a method to test if any specific key is pressed by storing the currently pressed key codes in an array:</p>\n\n<pre><code>var keysPressed = [],\n    shiftCode = 16;\n\n$(document).on(\"keyup keydown\", function(e) {\n    switch(e.type) {\n        case \"keydown\" :\n            keysPressed.push(e.keyCode);\n            break;\n        case \"keyup\" :\n            var idx = keysPressed.indexOf(e.keyCode);\n            if (idx &gt;= 0)\n                keysPressed.splice(idx, 1);\n            break;\n    }\n});\n\n$(\"a.shifty\").on(\"click\", function(e) {\n    e.preventDefault();\n    console.log(\"Shift Pressed: \" + (isKeyPressed(shiftCode) ? \"true\" : \"false\"));\n});\n\nfunction isKeyPressed(code) {\n    return keysPressed.indexOf(code) &gt;= 0;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/59J3C/\" rel=\"nofollow\">Here is the jsfiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an anchor tag that calls a JavaScript function.</p>\n\n<p>With or without JQuery how do I determine if the shift key is down while the link is clicked?</p>\n\n<p>The following code does NOT work because keypress is only fired if a \"real key\" (not the shift key) is pressed.  (I was hoping it would fire if just the shift key alone was pressed.)</p>\n\n<pre><code>var shifted = false;\n\n$(function() {                           \n    $(document).keypress(function(e) {\n        shifted = e.shiftKey;\n        alert('shiftkey='+e.shiftkey);\n    });\n\n    $(document).keyup(function(e) {\n        shifted = false;\n    });\n}\n\n...\n\nfunction myfunction() {\n  //shift is always false b/c keypress not fired above\n}\n</code></pre>\n",
            "last_activity_date": 1407163409,
            "question_id": 3781142,
            "score": 40,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "JQuery or JavaScript: How determine if shift key being pressed while clicking anchor tag hyperlink?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>I'm assuming that you're wanting to use the 'this' context because the same handler will be dealing with multliple posible objects.  In that case, see the excellent AddEvent script from the quirksmode recoding contest. (<a href=\"http://www.quirksmode.org/blog/archives/2005/09/addevent_recodi.html\" rel=\"nofollow\">http://www.quirksmode.org/blog/archives/2005/09/addevent_recodi.html</a>).  This code has allowed me to get the very last of my javascript out of html.  More importantly, it seems to work on all of the browsers that I've tested.  Simple and compact.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The short answer is: use jQuery.</p>\n\n<p>Although <code>event.currentTarget</code> is not accessible on IE, jQuery will normalize the event for you so your code would also work on IE (as stated <a href=\"http://brandonaaron.net/blog/2009/05/12/jquery-edge-bind-with-a-different-this\">here</a>)</p>\n\n<p>Note that using <code>event.srcElement</code>, as suggested in other answers is <strong>not</strong> equivalent, since <code>srcElement</code> corresponds to the <code>target</code>, not to <code>currentTarget</code>, as explained at the end of <a href=\"http://www.quirksmode.org/js/events_order.html\">this page</a>.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>You can do something like </p>\n\n<pre><code>target = (event.currentTarget) ? event.currentTarget : event.srcElement;\n</code></pre>\n\n<p>Although as @Marc mentioned you can use a JQuery framework that normalizes the event for you.</p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>with this function you can pass the object when adding and get it in the listener.\nthe problem about this is that you have an anonymous function as eventlistener and in actionscript you cannot remove an anonymous listener. dunno bout js.</p>\n\n<pre><code>addEvent:function(object,type,listener,param)\n    {\n    if(object.addEventListener)\n      object.addEventListener(type, function(e){ listener(object, e, param);}, false );\n    else\n    if(object.attachEvent)\n      object.attachEvent('on'+type, function(e){ e = getEvent(e); listener(object, e, param);});\n    },\n\ngetEvent:function(e)\n        {\n    if(!e) e = window.event; // || event\n    if(e.srcElement) e.target = e.srcElement;\n    return e;\n    },\n\nremoveEvent:function(object,type,listener)\n    {\n    if(object.removeEventListener)\n    object.removeEventListener(type, listener, false);\n    else\n    object.detachEvent('on'+type, listener);\n    }\n\nvar div = document.getElementById('noobsafediv');\nvar div2 = document.getElementById('noobsafediv2');\naddEvent(div,'mouseover',mouseover,['astring',111,div2]);\n\n\nfunction mouseover(object,e,param)\n {\n console.log(object,e,param);\n }\n</code></pre>\n\n<p>its my framework and i call it jNoob.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I had similar problem. I solved it using keyword <code>this</code> as stated in <a href=\"http://www.brainjar.com/dhtml/events/default3.asp\">an article on brainjar.com</a> </p>\n\n<blockquote>\n  <p>To get the equivalent of the currentTarget property in IE, use the\n  this keyword as an argument when setting the event handler in a tag.</p>\n  \n  <p>...</p>\n  \n  <p>function myHandler(event, link) {   ... }</p>\n</blockquote>\n\n<p>On the same page you can find the following table :</p>\n\n<p><img src=\"http://i.stack.imgur.com/Q5BIy.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>Additional note: Sometimes IE (like ie 7) will return undefined for event.target, so it won't even evaluate it as true or false (whether in an if or in a ternary operator). Furthermore, even if you try <code>typeof event.target == 'undefined'</code> it will still error saying \"event.target is undefined.\" Which of course is stupid because that's what you're testing. <br>\nApparently it is a problem with passing events into functions in older IE. What you do to fix it is:</p>\n\n<pre><code>event = event ? event : window.event;\nif (typeof event.target == 'undefined') {\n    var target = event.srcElement;\n    } else {\n    var target = event.target;\n    }\n</code></pre>\n\n<p>Make note that you re-write the event in standards compliant browsers and grab the global event for IE.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://msdn.microsoft.com/en-us/library/ie/ff974942%28v=vs.85%29.aspx\" rel=\"nofollow\">currentTarget property is supported from IE version 9 onwards.</a></p>\n\n<p><a href=\"http://www.w3schools.com/js/tryit.asp?filename=try_dom_event_currenttarget\" rel=\"nofollow\">Try this sample in IE9+</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This function creates <code>currentTarget</code> in case it is IE, so you no longer need to patch your code!</p>\n\n<pre><code>function eventListener(e,t,f) {\n   if(e.addEventListener)\n       e.addEventListener(t,f);\n   else\n       e.attachEvent('on' + t,\n                     function(a){\n                         a.currentTarget = e;\n                         f(a);\n                     });\n}\n</code></pre>\n\n<p>Regular JS(will not work on IE below 9):</p>\n\n<pre><code>function myfunction(e) {\n    alert(e.currentTarget.id);\n}\n\ne = document.getElementById('id');\ne.AddEventListener(e,'mouseover',myfunction);\n</code></pre>\n\n<p>With this function(will work on IE below 9):</p>\n\n<pre><code>function myfunction(e) {\n    alert(e.currentTarget.id);\n}\ne = document.getElementById('id');\neventListener(e,'mouseover',myfunction);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>With Prototype JS you can use :</p>\n\n<pre><code>var target = Event.element(event);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'd like to give a more simple answer, the meat of this is the same as the meat in anas' and user1515360's answers:</p>\n\n<pre><code>if (browserDoesNotUnderstandCurrentTarget) {\n        someElement.onclick = function (e) {\n                if (!e) { var e = window.event; }\n                e.currentTarget = someElement;\n                yourCallback(e);\n        }\n}\nelse {\n        someElement.onclick = yourCallback;\n}\n</code></pre>\n\n<p>Substitute onclick for whatever event you wish of course.</p>\n\n<p>This makes e.currentTarget available on browsers that do not support currentTarget.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>well i m not sure but this may be a solution:\nsince the child element given by srcElement is not supposed to have an event because this gonna make interference with the event on the parent element neither any other upper element before the top element where the event statement (like onmosedown=\"\") so this is the code: </p>\n\n<pre><code>if (!event) event = window.event; \nif (event.currentTarget) element = event.currentTarget; \nelse{element = event.srcElement; while(element.onmousedown==null) element = element.parentNode;}\nif(element.nodeType==3) element=element.parentNode;  // defeat Safari bug\n</code></pre>\n\n<p>this seems to work fine till now with me please correct me if u find a problem cz i need a solution for that\ni dont want to use jquery..</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Internet Explorer 6 - 8</strong> do not implement event.currentTarget.</p>\n\n<p>Quote from <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/event.currentTarget#Browser_compatibility\" rel=\"nofollow\">Mozilla Developer Network</a>:</p>\n\n<blockquote>\n  <p>On Internet Explorer 6 through 8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, there is no equivalent to event.currentTarget and this is the global object. <strong>One solution to emulate the event.currentTarget feature is to wrap your handler in a function calling the handler using Function.prototype.call with the element as a first argument. This way, this will be the expected value.</strong></p>\n</blockquote>\n\n<p>If you use <strong>jQuery</strong> anyway, then jQuery takes care of normalizing the event object and its properties (as stated numerous times in the other answers). Quote from <a href=\"https://api.jquery.com/category/events/event-object/\" rel=\"nofollow\">jQuery API docs</a>:</p>\n\n<blockquote>\n  <p>jQuery\u2019s event system normalizes the event object according to W3C standards.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there a way to take the current target of an event with IE 7 or 8?</p>\n\n<p>With other browser (firefox, opera, chrome etc.) we can use\n<code>event.currentTarget</code> or also we can use the <code>this</code> keyword to\nrefer to the object processing the event.</p>\n\n<p>But in <strong>Internet Explorer</strong> we don't have <code>currentTarget</code> property and the <code>this</code> refers to window object!</p>\n\n<p>So how can I do that?</p>\n",
            "last_activity_date": 1423661796,
            "question_id": 857439,
            "score": 35,
            "tags": [
                "javascript",
                "internet-explorer",
                "events"
            ],
            "title": "Internet Explorer and JavaScript event currentTarget"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Well, I would have said it was expensive, but then I wrote a little test @ <a href=\"http://jsperf.com/array-length-in-loop\">jsperf.com</a> and to my surprise using <code>i&lt;array.length</code> actually was faster in Chrome, and in FF(4) it didn't matter. </p>\n\n<p>My suspicion is that length is stored as an integer (Uint32). From the ECMA-specs (262 ed. 5, page 121):</p>\n\n<blockquote>\n  <p>Every Array object has a \n  length property whose value is always a nonnegative integer less than  2<sup>32</sup>. The value of the  length property is\n  numerically greater than the name of\n  every property whose name is an array\n  index; whenever a property of an Array\n  object is created or changed, other\n  properties are adjusted as necessary\n  to maintain this invariant.\n  Specifically, whenever a property is\n  added whose name is an array index,\n  the length property is  changed, if\n  necessary, to be one more than the\n  numeric value of that array index; and\n  whenever the length property is\n  changed, every property whose name is\n  an array index whose value is not\n  smaller than the new length is\n  automatically deleted. This constraint\n  applies only to own properties of an\n  Array object and is unaffected by\n  length or array index properties that\n  may be inherited from its prototypes</p>\n</blockquote>\n\n<p>Phew! I don't know if I ever get used to such language ...</p>\n\n<p>Finally, we always have our good old lagging behind browser. In IE (9, 8, 7) caching the length is really faster. One of many more reasons to not use IE, I say. </p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>Another set of performance <a href=\"http://jsperf.com/cached-array-length\">tests</a>. The loop is done over an array of million random numbers with an empty loop. </p>\n\n<p>In Chrome, the loops with cached and non-cached lengths clock pretty much the same times, so I am guessing it's a <a href=\"http://code.google.com/p/v8/\">V8</a> optimization to cache the length. </p>\n\n<p>In Safari and Firefox, the cached length was consistently about 2x faster than the non-cached version.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>TL;DR:</p>\n\n<p>From what I can gather, it <em>seems</em> like the length of the array is cached internally (at least in V8)..</p>\n\n<p>(Details? Read on :))</p>\n\n<p>So, this question has dinged around in my head a few times and I've decided to get to the root of the problem (at least, in one implementation).</p>\n\n<p>Digging around V8 source yielded the <a href=\"http://www.google.com/codesearch/p?hl=en#W9JxUuHYyMg/trunk/src/objects.h&amp;q=jsarray%20package%3ahttp://v8%5C.googlecode%5C.com&amp;l=6057\">JSArray</a> class.</p>\n\n<pre><code>// The JSArray describes JavaScript Arrays\n//  Such an array can be in one of two modes:\n//    - fast, backing storage is a FixedArray and length &lt;= elements.length();\n//       Please note: push and pop can be used to grow and shrink the array.\n//    - slow, backing storage is a HashTable with numbers as keys.\n</code></pre>\n\n<p>I'm making an assumption that the type of array elements dictates whether it's fast or slow. I got down to a bit flag being set in <code>set_has_fast_elements</code> (<code>set_bit_field2(bit_field2() | (1 &lt;&lt; kHasFastElements))</code>), which is where I figured I'd draw the digging line as I was looking in google code and don't have the source locally.</p>\n\n<p>Now, it <em>seems</em> that <strong>any</strong> time <strong>any</strong> operation is done on the array (which is a child class of <code>JSObject</code>, a call is made to <code>NormalizeElements()</code>, which executes the following:</p>\n\n<pre><code>// Compute the effective length.\n  int length = IsJSArray() ?\n      Smi::cast(JSArray::cast(this)-&gt;length())-&gt;value() :\n      array-&gt;length();\n</code></pre>\n\n<p>So, in answering your questions:</p>\n\n<ol>\n<li>There doesn't seem to be any advantage in Chrome (or other browsers that use V8) to caching the <code>length</code> property of an array (unless you're doing something odd that would force it to be <code>slow</code> (I'm not sure what those conditions are) - having said that, I'll most likely continue to cache <code>length</code> until I get a chance to go through <em>all</em> OS browser implementations ;)</li>\n<li>The <code>length</code> property seems to be altered after <em>any</em> operation on the object.</li>\n</ol>\n\n<p><strong>Edit:</strong></p>\n\n<p>On a side note, it seems that an \"empty\" array is actually allocated to have 4 elements:</p>\n\n<pre><code>// Number of element slots to pre-allocate for an empty array.\nstatic const int kPreallocatedArrayElements = 4;\n</code></pre>\n\n<p>I'm not sure how many elements the array grows by once the bounds have been exceeded - I didn't dig <em>that</em> deep :)</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Just a note:</p>\n\n<p>On some browsers (I've noticed it in Safari, IE, and Opera), you can get a speed boost by caching the length inside the for loop declaration:</p>\n\n<pre><code>var j;\nfor (var i = 0, len = arr.length; i &lt; len; i++) {\n  j = arr[i];\n}\n</code></pre>\n\n<p>I edited @KooiInc's jsperf test above to <a href=\"http://jsperf.com/array-length-in-loop/10\" rel=\"nofollow\">add this case</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This article investigates automatic caching in V8 and Chrome, by asking <a href=\"http://mrale.ph/irhydra/2/\" rel=\"nofollow\">IRHydra</a> for the generated code:</p>\n\n<blockquote>\n  <p><a href=\"http://mrale.ph/blog/2014/12/24/array-length-caching.html\" rel=\"nofollow\">How the Grinch stole array.length access</a> by Vyacheslav Egorov</p>\n</blockquote>\n\n<p>His conclusion was that both in cases where the compiler could and could not automatically cache the value of <code>length</code>, manual caching added overhead rather than improving performance!</p>\n\n<p>However, performance in other browsers may vary.  (See other answers.)</p>\n\n<p>But anyway, this kind of micro-optimization is unlikely to achieve any noticeable gain for your users.  For their benefit, and for yours, focus instead on code that is clear to read, and using good data structures and algorithms in your code!</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I always assumed caching the length of an array in JavaScript is a good idea (especially in the condition of a <code>for</code> loop) because of the expensiveness of calculating the length of an array.</p>\n\n<h3>Example</h3>\n\n<pre><code>for (var i = 0; i &lt; arr.length; i++) { }\n\n// vs\n\nfor (var i = 0, arrLength = arr.length; i &lt; arrLength; i++) { }\n</code></pre>\n\n<p>However, I thought perhaps the <code>length</code> property is only updated on creation and alteration of the array. Therefore, reading it shouldn't be too expensive an operation as opposed to reading it stored in a variable (as opposed to other methods in other languages that may need to seek in memory to find the end of something, e.g. <code>strlen()</code> in C).</p>\n\n<p>I have two questions. I am also interested in how this works, so please don't hit me with the <em>premature optimisation</em> stick.</p>\n\n<p>Assume the JavaScript engines in browsers.</p>\n\n<ol>\n<li>Is there any advantage to caching the <code>length</code> property of an array in JavaScript? Is there much more involved in reading a local variable over an object's property?</li>\n<li>Is the <code>length</code> property simply altered on creation and on <code>shift()</code> and <code>pop()</code> type methods that don't return a new array and otherwise simply stored as an integer?</li>\n</ol>\n",
            "last_activity_date": 1419868564,
            "question_id": 5752906,
            "score": 34,
            "tags": [
                "javascript",
                "arrays"
            ],
            "title": "Is reading the `length` property of an array really that expensive an operation in JavaScript?"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>You can turn off the \"Disable Script Debugging\" option inside of Internet Explorer and start debugging with Visual Studio if you happen to have that around.</p>\n\n<p>I've found that it is one of few ways to diagnose some of those IE specific issues.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Aha!</p>\n\n<p>I had an <code>OnError()</code> event in some code that was setting the image source to a default image path if it wasn't found. Of course, if the default image path wasn't found it would trigger the error handler...</p>\n\n<p>For people who have a similar problem but not the same, I guess the cause of this is most likely to be either an unterminated loop, an event handler that triggers itself or something similar that throws the JavaScript engine into a spin.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>I had this problem, and I solved it. There was an attribute in the <code>&lt;%@ Page</code> tag named <code>MaintainScrollPositionOnPostback</code> and after removing it, the error disapeared.\nI added it before to prevent scrolling after each postback.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I don't know what to tell you, but the same problem occured with jQuery table sorting and SEARCH.\nWhen there is nothing left in the table, where you are searching a string for example, you get this error too. Even in Google Analytics this error occurs often.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I ran into this problem recently and wrote up a post about the particular case in our code that was causing this problem.</p>\n\n<p><a href=\"http://cappuccino.org/discuss/2010/03/01/internet-explorer-global-variables-and-stack-overflows/\">http://cappuccino.org/discuss/2010/03/01/internet-explorer-global-variables-and-stack-overflows/</a></p>\n\n<p>The quick summary is: recursion that passes through the host global object is limited to a stack depth of 13. In other words, if the reference your function call is using (not necessarily the function itself) was defined with some form window.foo = function, then recursing through foo is limited to a depth of 13.</p>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>Also having smartNavigation=\"true\" causes this\"</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is problem with Java and Flash Player. Install the latest Java and Flash Player, and the problem will be resolved. If not, then install Mozilla Firefox, it will auto install the updates required.</p>\n",
                    "is_accepted": false,
                    "score": -16
                },
                {
                    "body": "<p><ol>\n<li>Internet Options</li>\n<li>Tools</li>\n<li>Internet options</li>\n<li>Advanced</li>\n<li>Navigation section </li>\n<li>Click > Disable script debugging</p>\n\n<blockquote>\n  <p>display a notification about every script error</li>\n  <li>sign in</li>\n  <li>You will smile !</li>\n  </ol></p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I set up a default project and found out the following:</p>\n\n<p>The problem is the <strong>combination</strong> of smartNavigation and maintainScrollPositionOnPostBack. The error only occurs when both are set to true.</p>\n\n<p>In my case, the error was produced by:</p>\n\n<pre><code>&lt;pages smartNavigation=\"true\" maintainScrollPositionOnPostBack=\"true\" /&gt;\n</code></pre>\n\n<p>Any other combination works fine.</p>\n\n<p>Can anybody confirm this?</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you came here because you had the problem inside your selenium tests:\nIE doesn't like <code>By.id(\"xyz\")</code>. Use By.name, xpath, or whatever instead.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In my case I had  two functions <code>a()</code> and <code>b()</code>. First was calling second and second was calling first one:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var i = 0;\nfunction a() { b(); }\nfunction b() {\n  i++; \n  if (i &lt; 30) {\n    a();\n  }\n}\n\na();\n</code></pre>\n\n<p>I resolved this using <code>setTimeout</code>:</p>\n\n<pre><code>var i = 0;\nfunction a() { b(); }\nfunction b() {\n  i++; \n  if (i &lt; 30) {\n    setTimeout( function() {\n      a();\n    }, 0);\n  }\n}\n\na();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>My was \"at line 1\" instead but...</p>\n\n<p>I got this problem when using jQuery's <code>.clone</code> method.  I replaced these by using making jQuery objects from the html string: <code>$($(selector).html())</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have reproduced the same error on IE8. One of the text boxes has some event handlers to replace not valid data.</p>\n\n<pre><code>$('.numbersonly').on(\"keyup input propertychange\", function () {\n    //code\n});\n</code></pre>\n\n<p>The error message was shown on entering data to this text box. We removed event \"propertychange\" from the code above and now it works correctly.</p>\n\n<p>P.S. maybe it will help somebody</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I realise this is not the ideal place to ask about this in terms of searchability, but I've got a page whose JavaScript code throws \"Stack overflow in line 0\" errors when I look at it in Internet Explorer.</p>\n\n<p>The problem is quite clearly not in line 0, but somewhere in the list of stuff that I'm writing to the document, but I cannot work out for the life of me where the problem is. Everything works fine in Firefox, so I don't have the delights of Firebug and friends to assist in troubleshooting.</p>\n\n<p>Are there any standard causes for this? I'm guessing this is probably an Internet Explorer 7 bug or something quite obscure, and my <a href=\"http://en.wiktionary.org/wiki/Google-fu\">Google-fu</a> is bringing me little joy currently. I can find lots of people who have run into this before, but I can't seem to find how they solved it.</p>\n",
            "last_activity_date": 1382695300,
            "question_id": 226102,
            "score": 33,
            "tags": [
                "javascript",
                "internet-explorer",
                "error-handling"
            ],
            "title": "&quot;Stack overflow in line 0&quot; on Internet Explorer"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p><strong>First Suggestion:</strong></p>\n\n<p>Create a Javascript Variable that will reference the button clicked. Lets call it <em>buttonIndex</em></p>\n\n<pre><code>&lt;input type=\"submit\" onclick=\"buttonIndex=0;\" name=\"save\" value=\"Save\" /&gt;\n&lt;input type=\"submit\" onclick=\"buttonIndex=1;\" name=\"saveAndAdd\" value=\"Save and add another\" /&gt;\n</code></pre>\n\n<p>Now, you can access that value. 0 means the save button was clicked, 1 means the saveAndAdd Button was clicked.</p>\n\n<p><strong>Second Suggestion</strong></p>\n\n<p>The way I would handle this is to create two JS functions that handle each of the two buttons.</p>\n\n<p>First, make sure your form has a valid ID. For this example, I'll say the ID is \"myForm\"</p>\n\n<p><strong>change</strong></p>\n\n<pre><code>&lt;input type=\"submit\" name=\"save\" value=\"Save\" /&gt;\n&lt;input type=\"submit\" name=\"saveAndAdd\" value=\"Save and add another\" /&gt;\n</code></pre>\n\n<p><strong>to</strong></p>\n\n<pre><code>&lt;input type=\"submit\" onclick=\"submitFunc();return(false);\" name=\"save\" value=\"Save\" /&gt;\n&lt;input type=\"submit\" onclick=\"submitAndAddFunc();return(false);\" name=\"saveAndAdd\" value=\"Save and add \n</code></pre>\n\n<p>the return(false) will prevent your form submission from actually processing, and call your custom functions, where you can submit the form later on.</p>\n\n<p><strong>Then your functions will work something like this...</strong></p>\n\n<pre><code>function submitFunc(){\n    // Do some asyncrhnous stuff, that will later on submit the form\n    if (okToSubmit) {\n        document.getElementById('myForm').submit();\n    }\n}\nfunction submitAndAddFunc(){\n    // Do some asyncrhnous stuff, that will later on submit the form\n    if (okToSubmit) {\n        document.getElementById('myForm').submit();\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Why not loop through the inputs and then add onclick handlers to each?</p>\n\n<p>You don't have to do this in HTML, but you can add a handler to each button like:</p>\n\n<pre><code>button.onclick = function(){ DoStuff(this.value); return false; } // return false; so that form does not submit\n</code></pre>\n\n<p>Then your function could \"do stuff\" according to whichever value you passed:</p>\n\n<pre><code>function DoStuff(val) {\n    if( val === \"Val 1\" ) {\n        // Do some stuff\n    }\n    // Do other stuff\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Not in the submit event handler itself, no.</p>\n\n<p>But what you <em>can</em> do is add click handlers to each submit which will inform the submit handler as to which was clicked.</p>\n\n<p>Here's a full example (using jQuery for brevity)</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n  &lt;title&gt;Test Page&lt;/title&gt;\n  &lt;script src=\"http://code.jquery.com/jquery-latest.js\"&gt;&lt;/script&gt;\n  &lt;script type=\"text/javascript\"&gt;\n  $(function()\n  {\n    var submitActor = null;\n    var $form = $( '#test' );\n    var $submitActors = $form.find( 'input[type=submit]' );\n\n    $form.submit( function( event )\n    {\n      if ( null === submitActor )\n      {\n        // If no actor is explicitly clicked, the browser will\n        // automatically choose the first in source-order\n        // so we do the same here\n        submitActor = $submitActors[0];\n      }\n\n      alert( submitActor.name );\n\n      return false;\n    });\n\n    $submitActors.click( function( event )\n    {\n      submitActor = this;\n    });\n\n  } );\n\n  &lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;form id=\"test\"&gt;\n\n    &lt;input type=\"text\" /&gt;\n\n    &lt;input type=\"submit\" name=\"save\" value=\"Save\" /&gt;\n    &lt;input type=\"submit\" name=\"saveAndAdd\" value=\"Save and add another\" /&gt;\n\n  &lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>I use Ext, so I ended up doing this:</p>\n\n<pre><code>var theForm = Ext.get(\"theform\");\nvar inputButtons = Ext.DomQuery.jsSelect('input[type=\"submit\"]', theForm.dom);\nvar inputButtonPressed = null;\nfor (var i = 0; i &lt; inputButtons.length; i++) {\n    Ext.fly(inputButtons[i]).on('click', function() {\n        inputButtonPressed = this;\n    }, inputButtons[i]);\n}\n</code></pre>\n\n<p>and then when it was time submit I did</p>\n\n<pre><code>if (inputButtonPressed !== null) inputButtonPressed.click();\nelse theForm.dom.submit();\n</code></pre>\n\n<p>Wait, you say. This will loop if you're not careful. So, onSubmit must sometimes return true</p>\n\n<pre><code>// Notice I'm not using Ext here, because they can't stop the submit\ntheForm.dom.onsubmit = function () {\n    if (gottaDoSomething) {\n        // Do something asynchronous, call the two lines above when done.\n        gottaDoSomething = false;\n        return false;\n    }\n    return true;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;form onsubmit=\"alert(this.submited); return false;\"&gt;\n    &lt;input onclick=\"this.form.submited=this.value;\" type=\"submit\" value=\"Yes\" /&gt;\n    &lt;input onclick=\"this.form.submited=this.value;\" type=\"submit\" value=\"No\" /&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Bare bones, but confirmed working, example:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar clicked;\nfunction mysubmit() {\n    alert(clicked);\n}\n&lt;/script&gt;\n&lt;form action=\"\" onsubmit=\"mysubmit();return false\"&gt;\n    &lt;input type=\"submit\" onclick=\"clicked='Save'\" value=\"Save\" /&gt;\n    &lt;input type=\"submit\" onclick=\"clicked='Add'\" value=\"Add\" /&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>All of the answers above are very good but I cleaned it up a little bit.</p>\n\n<p>This solution automatically puts the name of the submit button pressed into the action hidden field.  Both the javascript on the page and the server code can check the action hidden field value as needed.</p>\n\n<p>The solution uses jquery to automatically apply to all submit buttons.</p>\n\n<pre><code>&lt;input type=\"hidden\" name=\"action\" id=\"action\" /&gt;\n&lt;script language=\"javascript\" type=\"text/javascript\"&gt;\n    $(document).ready(function () {\n        //when a submit button is clicked, put its name into the action hidden field\n        $(\":submit\").click(function () { $(\"#action\").val(this.name); });\n    });\n&lt;/script&gt;\n&lt;input type=\"submit\" class=\"bttn\" value=\"&lt;&lt; Back\" name=\"back\" /&gt;\n&lt;input type=\"submit\" class=\"bttn\" value=\"Finish\" name=\"finish\" /&gt;\n&lt;input type=\"submit\" class=\"bttn\" value=\"Save\" name=\"save\" /&gt;\n&lt;input type=\"submit\" class=\"bttn\" value=\"Next &gt;&gt;\" name=\"next\" /&gt;\n&lt;input type=\"submit\" class=\"bttn\" value=\"Delete\" name=\"delete\" /&gt;\n&lt;input type=\"button\" class=\"bttn\" name=\"cancel\" value=\"Cancel\" onclick=\"window.close();\" /&gt;\n</code></pre>\n\n<p>Then write code like this into your form submit handler.</p>\n\n<pre><code> if ($(\"#action\").val() == \"delete\") {\n     return confirm(\"Are you sure you want to delete the selected item?\");\n }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>OP stated he didn't want to modify the code for the buttons. This is the least-intrusive answer I could come up with using the other answers as a guide. It doesn't require additional hidden fields, allows you to leave the button code intact (sometimes you don't have access to what generates it), and gives you the info you were looking for from anywhere in your code...which button was used to submit the form. I haven't evaluated what happens if the user uses the Enter key to submit the form, rather than clicking.</p>\n\n<pre><code>&lt;script language=\"javascript\" type=\"text/javascript\"&gt;\n\n    var initiator = '';\n    $(document).ready(function() {\n        $(\":submit\").click(function() { initiator = this.name });\n    });\n\n&lt;/script&gt;\n</code></pre>\n\n<p>Then you have access to the 'initiator' variable anywhere that might need to do the checking. Hope this helps.</p>\n\n<p>~Spanky</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a form with two submit buttons and some code:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;input type=\"submit\" name=\"save\" value=\"Save\" /&gt;\n&lt;input type=\"submit\" name=\"saveAndAdd\" value=\"Save and add another\" /&gt;\n</code></pre>\n\n<p>Javascript:</p>\n\n<pre><code>form.onSubmit = function(evnt) {\n    // Do some asyncrhnous stuff, that will later on submit the form\n    return false;\n}\n</code></pre>\n\n<p>Of course the two submit buttons accomplish different things. Is there a way to find out in <code>onSubmit</code> which button was pressed, so later I could submit by doing <code>thatButton.click()</code>?</p>\n\n<p>Ideally I would like to not modify the code for the buttons, just have a pure-javascript addon that has this behavior.</p>\n\n<p>I know that FF has <code>evnt.explicitOriginalTarget</code> but I can't find anything for other browsers.</p>\n",
            "last_activity_date": 1370914494,
            "question_id": 3577469,
            "score": 31,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Form onSubmit determine which submit button was pressed"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Here's a snippet to get you going:</p>\n\n<pre><code>theParent = document.getElementById(\"theParent\");\ntheKid = document.createElement(\"div\");\ntheKid.innerHTML = 'Are we there yet?';\n\n// append theKid to the end of theParent\ntheParent.appendChild(theKid);\n\n// prepend theKid to the beginning of theParent\ntheParent.insertBefore(theKid, theParent.firstChild);\n</code></pre>\n\n<p><code>theParent.firstChild</code> will give us a reference to the first element within <code>theParent</code> and put <code>theKid</code> before it.</p>\n",
                    "is_accepted": false,
                    "score": 57
                },
                {
                    "body": "<p>Perhaps you're asking about the <a href=\"http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-184E7107\">DOM methods</a> <code>appendChild</code> and <code>insertBefore</code>.</p>\n\n<pre><code>parentNode.insertBefore(newChild, refChild)\n</code></pre>\n\n<blockquote>\n  <p>Inserts the node <code>newChild</code> as a child of <code>parentNode</code> before the\n  existing child node <code>refChild</code>. (Returns <code>newChild</code>.)</p>\n  \n  <p>If <code>refChild</code> is null, <code>newChild</code> is added at the end of the list of\n  children. Equivalently, and more readably, use\n  <code>parentNode.appendChild(newChild)</code>.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>You didn't give us much to go on here, but I think you're just asking how to add content to the beginning or end of an element?\nIf so here's how you can do it pretty easily:</p>\n\n<pre><code>//get the target div you want to append/prepend to\nvar someDiv = document.getElementById(\"targetDiv\");\n\n//append text\nsomeDiv.innerHTML += \"Add this text to the end\";\n\n//prepend text\nsomeDiv.innerHTML = \"Add this text to the beginning\" + someDiv.innerHTML;\n</code></pre>\n\n<p>Pretty easy.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>prepend without JQuery:</p>\n\n<pre><code>parent.insertBefore(child, parent.firstChild);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>In order to simplify your life you can extend <code>HTMLElement</code>. It might not work for older browsers, but definitely makes your life easier:</p>\n\n<pre><code>HTMLElement = typeof(HTMLElement) != 'undefiend' ? HTMLElement : Element;\n\nHTMLElement.prototype.prepend = function(element) {\n    return this.insertBefore(element, this.firstChild);\n};\n</code></pre>\n\n<p>So next time you can do this:</p>\n\n<pre><code>document.getElementById('container').prepend(document.getElementById('block'));\n// or\nvar element = document.getElementById('anotherElement');\ndocument.body.prepend(div);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you want to insert a raw HTML string no matter how complex, you can use: \n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element.insertAdjacentHTML\" rel=\"nofollow\"><code>insertAdjacentHTML</code></a>, with appropriate first argument:</p>\n\n<blockquote>\n  <p><strong>'beforebegin'</strong>\n   Before the element itself.\n  <strong>'afterbegin'</strong>\n   Just inside the element, before its first child.\n   <strong>'beforeend'</strong>\n   Just inside the element, after its last child.\n   <strong>'afterend'</strong>\n   After the element itself.</p>\n</blockquote>\n\n<p>Hint: you can always call <code>Element.outerHTML</code> to get the HTML string representing the element to be inserted.</p>\n\n<p>An example of usage:</p>\n\n<pre><code>document.getElementById(\"foo\").insertAdjacentHTML(\"beforeBegin\",\n          \"&lt;div&gt;&lt;h1&gt;I&lt;/h1&gt;&lt;h2&gt;was&lt;/h2&gt;&lt;h3&gt;inserted&lt;/h3&gt;&lt;/div&gt;\");\n</code></pre>\n\n<p><a href=\"http://plnkr.co/edit/goh6YqBkl8G6B6M0H8gk?p=preview\" rel=\"nofollow\">DEMO</a></p>\n\n<p><strong>Caution:</strong> <code>insertAdjacentHTML</code> does not preserve listeners that where attached with <code>.addEventLisntener</code>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>var insertedElement = parentElement.insertBefore(newElement, referenceElement);\n</code></pre>\n\n<p>If referenceElement is null, or undefined, newElement is inserted at the end of the list of child nodes.</p>\n\n<pre><code>insertedElement The node being inserted, that is newElement\nparentElement The parent of the newly inserted node.\nnewElement The node to insert.\nreferenceElement The node before which newElement is inserted.\n</code></pre>\n\n<p>Examples can be found here: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node.insertBefore\" rel=\"nofollow\">Node.insertBefore</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I implement <a href=\"http://api.jquery.com/prepend/\">prepend</a> and <a href=\"http://api.jquery.com/append/\">append</a> with regular JavaScript without using jQuery?</p>\n",
            "last_activity_date": 1413745053,
            "question_id": 3391576,
            "score": 31,
            "tags": [
                "javascript",
                "append",
                "prepend"
            ],
            "title": "How can I implement prepend and append with regular JavaScript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>If by \"ticks\" you mean something like \"milliseconds since the epoch\", you can call \".getTime()\".</p>\n\n<pre><code>var ticks = someDate.getTime();\n</code></pre>\n\n<p>From the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date\">MDN documentation</a>, the returned value is an</p>\n\n<blockquote>\n  <p>Integer value representing the number of milliseconds since 1 January 1970 00:00:00 UTC (Unix Epoch).</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>The JavaScript <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a> type's origin is the Unix epoch: midnight on 1 January 1970.</p>\n\n<p>The .NET <a href=\"http://msdn.microsoft.com/en-us/library/03ybds8y.aspx\"><code>DateTime</code></a> type's origin is midnight on 1 January 0001.</p>\n\n<p>You can translate a JavaScript <code>Date</code> object to .NET ticks as follows:</p>\n\n<pre><code>var yourDate = new Date();  // for example\n\n// the number of .net ticks at the unix epoch\nvar epochTicks = 621355968000000000;\n\n// there are 10000 .net ticks per millisecond\nvar ticksPerMillisecond = 10000;\n\n// calculate the total number of .net ticks for your date\nvar yourTicks = epochTicks + (yourDate.getTime() * ticksPerMillisecond);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>That should be <code>date.GetTime()</code>. Be aware that C# and Javascript using different initial dates so use something like this to convert to C# DateTime.</p>\n\n<pre><code>public static DateTime GetDateTime(long jsSeconds)\n{\n    DateTime unixEpoch = new DateTime(1970, 1, 1, 0, 0, 0, 0);\n    return unixEpoch.AddSeconds(jsSeconds);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you want to convert your datetime object into universal ticks then use the following code snippet</p>\n\n<pre><code>    var ticks = ((yourDateObject.getTime() * 10000) + 621355968000000000);\n</code></pre>\n\n<blockquote>\n  <p>There are <code>621355968000000000</code> epoch ticks for javascript from Ist Jan\n  1900 to Ist Jan 1970. And here 10000 are the ticks per milliseconds.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>I take it if I want to convert from ticks to ms I need to do this: \nvar mstimespan = (tickstimespan - 621355968000000000) / TimeSpan.TicksPerMillisecond;</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How should I convert JavaScript date object to ticks? I want to use the ticks to get the exact date for my C# application after synchronization of data.</p>\n",
            "last_activity_date": 1423680935,
            "question_id": 7966559,
            "score": 27,
            "tags": [
                "c#",
                "javascript"
            ],
            "title": "How to convert JavaScript date object to ticks"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There isn't a way that I know of, however, they may be an alternative solution: </p>\n\n<p>Specify your measurements in 'pt' and 'em', which are screen relative metrics. </p>\n\n<p><strong><a href=\"http://www.w3schools.com/css/css_units.asp\" rel=\"nofollow\">http://www.w3schools.com/css/css_units.asp</a></strong></p>\n\n<blockquote>\n  <ul>\n  <li>em:<br />\n  <code>1em</code> is equal to the current font size. <code>2em</code> means 2 times the size of the current font. E.g., if an element is displayed with a font of <code>12 pt</code>, then <code>'2em'</code> is <code>24 pt</code>. The <code>'em'</code> is a very useful unit in CSS, since it can adapt automatically to the font that the reader uses</li>\n  <li>pt:<br />\n  point (<code>1 pt</code> is the same as <code>1/72 inch</code>)</li>\n  <li>pc:<br />\n  pica (<code>1 pc</code> is the same as <code>12 points</code>)</li>\n  </ul>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Firstly, to help with the possible (and very common) confusion with the term DPI (dots per inch):</p>\n\n<p>DPI isn't exactly a part of \"display settings\". It's (mis)used in two different contexts:</p>\n\n<ol>\n<li>The native pixels per inch of a display (or video). It determines how small the pixels are. You can have the same 1024x768 resolution on both a 14\" laptop screen and a 17\" LCD monitor. The former would roughly be 1280/14 = 91 DPI and the latter would roughly be 1280/17 = 75 DPI. The DPI of a screen is immutable; it can't be changed with display settings. <a href=\"http://en.wikipedia.org/wiki/Dots_per_inch#DPI_measurement_in_video_resolution\" rel=\"nofollow\">More...</a></li>\n<li>The dots per inch painted on paper during printing. This is the number of side-by-side dots a printer/photocopier/fax machine can imprint within an inch of paper. Most printers can be set to print at a lower DPI, by just printing each dot as two, four, etc. dots. <a href=\"http://en.wikipedia.org/wiki/Dots_per_inch#DPI_measurement_in_printing\" rel=\"nofollow\">More...</a></li>\n</ol>\n\n<p>When printing an image, there are many things that affect the final dimensions of the image on paper:</p>\n\n<ul>\n<li>The dimensions of the source image -- this is the amount of pixels or data there is.</li>\n<li>The DPI of the source image. This value determines how the dimensions should be interpreted when printing the image.</li>\n<li>If the source image doesn't have embedded DPI information (a JPEG can have one, a GIF never does), the program that's being used may have settings to specify a DPI. This could be an image viewer/editor or even a web browser.</li>\n<li>The zoom factor that's typically specified in a print dialog.</li>\n<li>The current DPI setting of the printer.</li>\n<li>The physical (max) DPI of the printer.</li>\n</ul>\n\n<p>The bottom line is, the image that you're printing will effectively get resampled (reduced or enlarged) to match the final DPI that's used in the print process. Any of the parties involed may be causing this (the program, the print driver, the printer).</p>\n\n<p><del>Now, coming back to your question. No, you can't determine the DPI of the screen, because it's not in software domain. It's a hardware domain term, describing how large a monitor a user could afford to buy.</del> <strong>Update:</strong> I initially wrote this answer back in 2009, with my understanding of the current technologies. As @thure pointed out, you can now (since 2012?) use the <a href=\"https://developer.mozilla.org/en-US/docs/DOM/window.matchMedia\" rel=\"nofollow\">window.matchMedia</a> function to determine the DPI of the screen.</p>\n\n<p>If you're trying to achieve precision in printing an HTML layout, as others have suggested, your CSS should use print dimensions like em, pt or pc instead of px. However, the final outcome might still depend on the browser using. If converting your HTML to PDF (or generating PDF from scratch) is an option for you, printing a PDF would give you the truest WYSIWYG both on screen and paper.</p>\n\n<ul>\n<li><a href=\"http://www.dpiphoto.eu/dpi.htm\" rel=\"nofollow\">Misunderstandings about dpi</a></li>\n<li><a href=\"http://www.unleash.com/knpepper/dpi/\" rel=\"nofollow\">DPI, PPI, Pixels - Facts and Fallacies</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Looks like you can use the 'screen' DOM object in IE, its got properties for deviceXDPI, deviceYDPI, logicalXDPI, logicalYDPI.</p>\n\n<p>hxxp://www.w3schools.com/htmldom/dom_obj_screen.asp</p>\n\n<p>Here's a solution from <a href=\"http://www.webdeveloper.com/forum/showthread.php?t=175278\">http://www.webdeveloper.com/forum/showthread.php?t=175278</a>\n(i havent tried it, seems like a total hack :)\nJust create something 1 inch wide and measure it in pixels!</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div id=\"dpi\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Style:</p>\n\n<pre><code>#dpi {\n  height: 1in;\n  left: -100%;\n  position: absolute;\n  top: -100%;\n  width: 1in;\n}\n</code></pre>\n\n<p>Javascript:</p>\n\n<pre><code>function getDPI() {\n  return document.getElementById(\"dpi\").offsetHeight;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 24
                }
            ],
            "body": "<p>Is there a way to access the screen display's DPI settings in a Javascript function?</p>\n\n<p>I am trying to position a html panel on the page and when the user's DPI is set to large (120), it throws the position off.  I need to be able to know what the DPI is so I can adjust the position accordingly.</p>\n\n<p>Thanks everyone,</p>\n\n<p>Jeff</p>\n",
            "last_activity_date": 1391024364,
            "question_id": 476815,
            "score": 27,
            "tags": [
                "javascript",
                "dpi",
                "display-dpi"
            ],
            "title": "Can you access screen display\u2019s DPI settings in a Javascript function?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can look into jquery's infinite scroll:</p>\n\n<p><a href=\"http://www.infinite-scroll.com/infinite-scroll-jquery-plugin/\" rel=\"nofollow\">http://www.infinite-scroll.com/infinite-scroll-jquery-plugin/</a></p>\n\n<p>Which sounds like it does what you're asking for, assuming you're willing to use the jquery library and not hoping for a strict pure JS method.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>window.onscroll = function(ev) {\n    if ((window.innerHeight + window.scrollY) &gt;= document.body.offsetHeight) {\n        // you're at the bottom of the page\n    }\n};\n</code></pre>\n\n<h2><a href=\"http://jsfiddle.net/8PkQN/1/\">See demo</a></h2>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>I was searching for an answer but haven't found an exact one. Here is a pure javascript solution that works with latest Firefox, IE and Chrome at the time of this answer:</p>\n\n<pre><code>// document.body.scrollTop alone should do the job but that actually works only in case of Chrome.\n// With IE and Firefox it also works sometimes (seemingly with very simple pages where you have\n// only a &lt;pre&gt; or something like that) but I don't know when. This hack seems to work always.\nvar scrollTop = (document.documentElement &amp;&amp; document.documentElement.scrollTop) || document.body.scrollTop;\n\n// &gt;= is needed because if the horizontal scrollbar is visible then window.innerHeight includes\n// it and in that case the left side of the equation is somewhat greater.\nvar scrolledToBottom = (scrollTop + window.innerHeight) &gt;= document.body.scrollHeight;\n\n// As a bonus: how to scroll to the bottom programmatically by keeping the horizontal scrollpos:\n// Since window.innerHeight includes the height of the horizontal scrollbar when it is visible\n// the correct vertical scrollTop would be\n// document.body.scrollHeight-window.innerHeight+sizeof(horizontal_scrollbar)\n// Since we don't know the visibility/size of the horizontal scrollbar\n// we scroll to document.body.scrollHeight that exceeds the value of the\n// desired scrollTop but it seems to scroll to the bottom with all browsers\n// without problems even when the horizontal scrollbar is visible.\nvar scrollLeft = (document.documentElement &amp;&amp; document.documentElement.scrollLeft) || document.body.scrollLeft;\nwindow.scrollTo(scrollLeft, document.body.scrollHeight);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I've just started looking at this and the answers here helped me, so thanks for that.\nI've expanded a little so that the code is safe all the way back to IE7:</p>\n\n<p>Hope this proves useful for someone.</p>\n\n<p><a href=\"http://jsfiddle.net/AsciiSmoke/0Lwa3gyp/\" rel=\"nofollow\">Here, have a Fiddle ;)</a></p>\n\n<pre><code>    &lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;style&gt;\n        div {\n            height: 100px;\n            border-bottom: 1px solid #ddd;\n        }\n\n        div:nth-child(even) {\n            background: #CCC\n        }\n\n        div:nth-child(odd) {\n            background: #FFF\n        }\n\n    &lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;\n&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;\n&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;\n&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;\n&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;\n&lt;/body&gt;\n\n&lt;script type=\"text/javascript\"&gt;\nconsole.log(\"Doc Height = \" + document.body.offsetHeight);\nconsole.log(\"win Height = \" + document.documentElement.clientHeight);\nwindow.onscroll = function (ev) {\n    var docHeight = document.body.offsetHeight;\n    docHeight = docHeight == undefined ? window.document.documentElement.scrollHeight : docHeight;\n\n    var winheight = window.innerHeight;\n    winheight = winheight == undefined ? document.documentElement.clientHeight : winheight;\n\n    var scrollpoint = window.scrollY;\n    scrollpoint = scrollpoint == undefined ? window.document.documentElement.scrollTop : scrollpoint;\n\n    if ((scrollpoint + winheight) &gt;= docHeight) {\n        alert(\"you're at the bottom\");\n    }\n};\n&lt;/script&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I need to detect if a user is scrolled to the bottom of a page. If they are at the bottom of the page, when I add new content to the bottom, I will automatically scroll them to the new bottom. If they are not at the bottom, they are reading previous content higher on the page, so I don't want to auto-scroll them since they want to stay where they are.</p>\n\n<p>How can I detect if a user is scrolled to the bottom of the page or if they have scrolled higher on the page?</p>\n",
            "last_activity_date": 1415379099,
            "question_id": 9439725,
            "score": 23,
            "tags": [
                "javascript"
            ],
            "title": "Javascript: How to detect if browser window is scrolled to bottom?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>No, there is not.<br>\nBesides, if you can write <code>variablesName(myFirstName)</code>, you already know the variable name (\"myFirstName\").</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Typically, you would use a hash table for a situation where you want to map a name to some value, and be able to retrieve both.</p>\n\n<pre><code>var obj = { myFirstName: 'John' };\nobj.foo = 'Another name';\nfor(key in obj)\n    alert(key + ': ' + obj[key]);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/karim79/v8FhM/1/\">Try it here.</a></p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>You can reflect on types in <a href=\"http://pietschsoft.com/post/2008/02/28/Simple-JavaScript-Object-Reflection-API-%28NET-Style%29.aspx\" rel=\"nofollow\">javascript</a> and get the name of properties and methods but what you need is sth like <em><code>Lambda Expressions Trees</code></em> in .NET, I think it couldn't be possible</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var x = 2;\nfor(o in window){ \n   if(window[o] === x){\n      alert(o);\n   }\n}\n</code></pre>\n\n<p>However, I think you should do like \"karim79\"</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>When having a function write a function that changes different global variables values it is not always myfirstname it is whatever happens to be passing through. Try this worked for me.</p>\n\n<pre><code>var jack = 'jill';\nfunction window_getVarName(what)\n{\n  for (var name in window)\n  {\n    if (window[name]==what)\n    return(name);\n  }\n  return(\"\");\n}\ndocument.write(window_getVarName(jack));\n</code></pre>\n\n<p>Will write to the window 'jack'.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way to get a variable name as a string in Javascript? (like NSStringFromSelector in Cocoa)</p>\n\n<p>I would like to do like this:</p>\n\n<pre><code>var myFirstName = 'John';\nalert(variablesName(myFirstName) + \":\" + myFirstName);\n\n--&gt; myFirstName:John\n</code></pre>\n\n<p>-- added</p>\n\n<p>I'm trying to connect a browser and another program using JavaScript. I would like to send instance names from a browser to another program for callback method.</p>\n\n<pre><code>FooClass = function(){};\nFooClass.someMethod = function(json) {\n  // Do something\n}\n\ninstanceA = new FooClass();\ninstanceB = new FooClass();\ndoSomethingInAnotherProcess(instanceB); // result will be substituted by using instanceB.someMethod();\n</code></pre>\n\n<p>....</p>\n\n<p>[From another program]</p>\n\n<pre><code>evaluateJavascriptInBrowser(\"(instanceName).someMethod(\"resultA\");\");\n</code></pre>\n\n<p>In PHP:\n<a href=\"http://stackoverflow.com/questions/255312/how-to-get-a-variable-name-as-a-string-in-php/255335#255335\">How to get a variable name as a string in PHP?</a></p>\n",
            "last_activity_date": 1408529199,
            "question_id": 4602141,
            "score": 22,
            "tags": [
                "javascript"
            ],
            "title": "Variable name as a string in Javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Most of the time, you can avoid variable length lookbehinds by using <code>\\K</code>.</p>\n\n<pre><code>s/(?&lt;=foo.*)bar/moo/s;\n</code></pre>\n\n<p>would be</p>\n\n<pre><code>s/foo.*\\Kbar/moo/s;\n</code></pre>\n\n<p>Negative lookbehinds are a little trickier.</p>\n\n<pre><code>s/(?&lt;!foo.*)bar/moo/s;\n</code></pre>\n\n<p>would be</p>\n\n<pre><code>s/^(?:(?!foo).)*\\Kbar/moo/s;\n</code></pre>\n\n<p>because <code>(?:(?!STRING).)*</code> is to <code>STRING</code> as <code>[^CHAR]*</code> is to <code>CHAR</code>.</p>\n\n<hr>\n\n<p>If you're just matching, you might not even need the <code>\\K</code>.</p>\n\n<pre><code>/foo.*bar/s\n\n/^(?:(?!foo).)*bar/s\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>The regexp you show will find any instance of <code>bar</code> which is <em>not</em> preceded by <code>foo</code>.</p>\n\n<p>A simple alternative would be to first match <code>foo</code> against the string, and find the index of the first occurrence. Then search for <code>bar</code>, and see if you can find an occurrence which comes <em>before</em> that index.</p>\n\n<p>If you want to find instances of <code>bar</code> which are not <em>directly</em> preceded by <code>foo</code>, I could also provide a regexp for that (without using lookbehind), but it will be very ugly. Basically, invert the sense of <code>/foo/</code> -- i.e. <code>/[^f]oo|[^o]o|[^o]|$/</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can reverse the string AND the pattern and use variable length lookahead</p>\n\n<p><code>(rab(?!\\w*oof)\\w*)</code></p>\n\n<p>matches in bold:</p>\n\n<blockquote>\n  <p>raboof rab7790oof <strong>raboo</strong>  <strong>rabof</strong>  <strong>rab</strong>  <strong>rabo</strong> raboooof <strong>rabo</strong></p>\n</blockquote>\n\n<p>Original solution as far as I know by:</p>\n\n<blockquote>\n  <p>Jeff 'japhy' Pinyan</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>For Python there's a regex implementation which supports variable-length lookbehinds:</p>\n\n<p><a href=\"http://pypi.python.org/pypi/regex\">http://pypi.python.org/pypi/regex</a></p>\n\n<p>It's designed to be backwards-compatible with the standard re module.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Is there any implementation of regular expressions, that supports variable-length lookbehind-assertion?</p>\n\n<pre><code>/(?&lt;!foo.*)bar/\n</code></pre>\n\n<p>How can I write a r.e. that has the same meaning but uses no lookbehind-assertion?</p>\n\n<p>Is there any chances that this type of assertion will be implemented someday?</p>\n\n<p><strong>Update #1</strong></p>\n\n<p>Things are much better that I thought. </p>\n\n<p>(1) There are regular expressions implementation that support variable-length lookbehind-assertion already.</p>\n\n<p>Python module <a href=\"http://pypi.python.org/pypi/regex\">regex</a> (not standard <code>re</code>, but additional <code>regex</code> module) supports such assertions (and has many other cool features).</p>\n\n<pre><code>&gt;&gt;&gt; import regex\n&gt;&gt;&gt; m = regex.search('(?&lt;!foo.*)bar', 'f00bar')\n&gt;&gt;&gt; print m.group()\nbar\n&gt;&gt;&gt; m = regex.search('(?&lt;!foo.*)bar', 'foobar')\n&gt;&gt;&gt; print m\nNone\n</code></pre>\n\n<p>It was a really big surprise for me that there is something in regular expressions that Perl can't do and Python can. Probably, there is \"enhanced regular expression\" implementation for Perl also?</p>\n\n<p>(Thanks and +1 to MRAB).</p>\n\n<p>(2) There is a cool feature <code>\\K</code> in modern regualar expressions.</p>\n\n<p>This symbols means that when you make a substitution (and from my point of view the most interesting usagecase of assertions is the substitution), all characters that were found before <code>\\K</code> must not be changed.</p>\n\n<pre><code>s/unchanged-part\\Kchanged-part/new-part/x\n</code></pre>\n\n<p>That is almost like a look-behind assertion, but not so flexible of course.</p>\n\n<p>More about <code>\\K</code>:</p>\n\n<ul>\n<li><a href=\"http://www.cybersprocket.com/perl-regular-expression-k-trick/\">Perl Regular Expression \\K Trick</a></li>\n<li><a href=\"http://www.phpfreaks.com/blog/pcre-regex-spotlight-k\">PCRE Regex Spotlight: \\K</a></li>\n</ul>\n\n<p>As far as I understand, you can't use \\K twice in the same regular expression.\nAnd you can't say till which point you want to \"kill\" the characters that you've found.\nThat is always till the beginning of the line.</p>\n\n<p>(Thanks and +1 to ikegami).</p>\n\n<p>My additional questions:</p>\n\n<ul>\n<li>Is it possible to say what point must be the final point of <code>\\K</code> effect?</li>\n<li>What about enhanced regular expressions implementations for Perl/Ruby/JavaScript/PHP? Something like <code>regex</code> for Python. </li>\n</ul>\n",
            "last_activity_date": 1397135161,
            "question_id": 11640447,
            "score": 21,
            "tags": [
                "php",
                "javascript",
                "python",
                "regex",
                "perl"
            ],
            "title": "regexps: variable-length lookbehind-assertion alternatives"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You probably want <a href=\"http://stackoverflow.com/a/4026828/304588\">this answer from a past SO question</a>. It builds on the Array prototype.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is no native function in JS but you can check out the two resources below for assistance.</p>\n\n<p><a href=\"http://phpjs.org/functions/array_diff:309\" rel=\"nofollow\">http://phpjs.org/functions/array_diff:309</a></p>\n\n<p><a href=\"http://stackoverflow.com/questions/2558800/doing-a-diff-on-an-associative-array-in-javascript-jquery\">Doing a &quot;Diff&quot; on an Associative Array in javascript / jQuery?</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Array operations like this is not jQuery's strongest point. You should consider a library such as Underscorejs, specifically the difference function.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>Working demo</strong> <a href=\"http://jsfiddle.net/u9xES/\" rel=\"nofollow\">http://jsfiddle.net/u9xES/</a></p>\n\n<p>Good link (Jquery Documentation): <a href=\"http://docs.jquery.com/Main_Page\" rel=\"nofollow\">http://docs.jquery.com/Main_Page</a> {you can search or read APIs here}</p>\n\n<p>Hope this will help you if you are looking to do it in JQuery.</p>\n\n<p>The alert in the end prompts the array of uncommon element Array i.e. difference between 2 array.</p>\n\n<p>Please lemme know if I missed anything, cheers!</p>\n\n<p><strong>Code</strong></p>\n\n<pre><code>var array1 = [1, 2, 3, 4, 5, 6];\nvar array2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nvar difference = [];\n\njQuery.grep(array2, function(el) {\n        if (jQuery.inArray(el, array1) == -1) difference.push(el);\n});\n\nalert(\" the difference is \" + difference);\u200b // Changed variable name \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<pre><code>var arrayDiff = function (firstArr, secondArr) {\n    var i, o = [], fLen = firstArr.length, sLen = secondArr.length, len;\n\n\n    if (fLen &gt; sLen) {\n        len = sLen;\n    } else if (fLen &lt; sLen) {\n        len = fLen;\n    } else {\n        len = sLen;\n    }\n    for (i=0; i &lt; len; i++) {\n        if (firstArr[i] !== secondArr[i]) {\n            o.push({idx: i, elem1: firstArr[i], elem2: secondArr[i]});  //idx: array index\n        }\n    }\n\n    if (fLen &gt; sLen) {  // first &gt; second\n        for (i=sLen; i&lt; fLen; i++) {\n            o.push({idx: i, 0: firstArr[i], 1: undefined});\n        }\n    } else if (fLen &lt; sLen) {\n        for (i=fLen; i&lt; sLen; i++) {\n            o.push({idx: i, 0: undefined, 1: secondArr[i]});\n        }\n    }    \n\n    return o;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I know this is an old question, but I thought I would share this little trick.</p>\n\n<pre><code>var diff = $(old_array).not(new_array).get();\n</code></pre>\n\n<p><code>diff</code> now contains what was in <code>old_array</code> that is not in <code>new_array</code></p>\n",
                    "is_accepted": false,
                    "score": 68
                },
                {
                    "body": "<p>if you also want to compare the order of the answer you can extend the answer to something like this:</p>\n\n<pre><code>Array.prototype.compareTo = function (array2){\n    var array1 = this;\n    var difference = [];\n    $.grep(array2, function(el) {\n        if ($.inArray(el, array1) == -1) difference.push(el);\n    });\n    if( difference.length === 0 ){\n        var $i = 0;\n        while($i &lt; array1.length){\n            if(array1[$i] !== array2[$i]){\n                return false;\n            }\n            $i++;\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In this way you don't need to worry about if the first array is smaller than the second one.</p>\n\n<pre><code>var arr1 = [1, 2, 3, 4, 5, 6,10],\n    arr2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nfunction array_diff(array1, array2){\n    var difference = $.grep(array1, function(el) { return $.inArray(el,array2) &lt; 0});\n    return difference.concat($.grep(array2, function(el) { return $.inArray(el,array1) &lt; 0}));;\n}\n\nconsole.log(array_diff(arr1, arr2));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>use underscore as :</p>\n\n<pre><code>_.difference(array1,array2)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>What's the fastest / best way to compare two arrays and return the difference? Much like <code>array_diff</code> in PHP. Is there an easy function or am I going to have to create one via each()? or a foreach loop?</p>\n",
            "last_activity_date": 1411984596,
            "question_id": 10927722,
            "score": 20,
            "tags": [
                "javascript",
                "jquery",
                "arrays",
                "array-difference"
            ],
            "title": "Jquery - Compare 2 arrays - return difference"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>To logout from the application which uses facebook graph API, use this JavaScript on the logout page just after the <code>&lt;form&gt;</code> tag:</p>\n\n<pre><code>window.onload=function()\n{\n    // initialize the library with your Facebook API key\n    FB.init({ apiKey: 'b65c1efa72f570xxxxxxxxxxxxxxxxx' });\n\n    //Fetch the status so that we can log out.\n    //You must have the login status before you can logout,\n    //and if you authenticated via oAuth (server side), this is necessary.\n    //If you logged in via the JavaScript SDK, you can simply call FB.logout()\n    //once the login status is fetched, call handleSessionResponse\n    FB.getLoginStatus(handleSessionResponse);\n}\n\n//handle a session response from any of the auth related calls\nfunction handleSessionResponse(response) {\n    //if we dont have a session (which means the user has been logged out, redirect the user)\n    if (!response.session) {\n        window.location = \"/mysite/Login.aspx\";\n        return;\n    }\n\n    //if we do have a non-null response.session, call FB.logout(),\n    //the JS method will log the user out of Facebook and remove any authorization cookies\n    FB.logout(handleSessionResponse);\n}\n</code></pre>\n\n<p>The code works and is live on my site.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Should be something more like this.  There was a change to the JS API where you have to use authResponse instead of just session.</p>\n\n<pre><code>//handle a session response from any of the auth related calls\nfunction handleSessionResponse(response) {\n\n    //if we dont have a session (which means the user has been logged out, redirect the user)\n    if (!response.authResponse) {\n        return;\n    }\n\n    //if we do have a non-null response.session, call FB.logout(),\n    //the JS method will log the user out of Facebook and remove any authorization cookies\n    FB.logout(response.authResponse);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I've tried something like this:</p>\n\n<pre><code>function fbLogout(){\n    if(typeof FB.logout == 'function'){\n        if (FB.getAuthResponse()) {\n         FB.logout(function(response) { window.location.href = PROJECT_PATH + '/index/logout'; }); \n         return;\n        }  \n    };\n\n    window.location.href = PROJECT_PATH + '/index/logout'; \n    return;  \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I went for the less trivial solution:</p>\n\n<pre><code>    function facebookLogout(){\n        FB.getLoginStatus(function(response) {\n            if (response.status === 'connected') {\n                FB.logout(function(response) {\n                    // this part just clears the $_SESSION var\n                    // replace with your own code\n                    $.post(\"/logout\").done(function() {\n                        $('#status').html('&lt;p&gt;Logged out.&lt;/p&gt;');\n                    });\n                });\n            }\n        });\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The error says that you don't have an access token, you have to check for one using the FB.getAccessToken() function.</p>\n\n<p>If there is no access token the function returns null. See example below:</p>\n\n<pre><code>   function facebooklogout() {\n    try {\n        if (FB.getAccessToken() != null) {\n            FB.logout(function(response) {\n                // user is now logged out from facebook do your post request or just redirect\n                window.location.replace(href);\n            });\n        } else {\n            // user is not logged in with facebook, maybe with something else\n            window.location.replace(href);\n        }\n    } catch (err) {\n        // any errors just logout\n        window.location.replace(href);\n    }\n   }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to log out of a website i've created with Facebook integrated.\nLogging in works fine, but when I want to log out Firebug consistently gives me this error:</p>\n\n<p><code>FB.logout()</code> called without an access token.</p>\n\n<p>I'm using the Facebook JavaScript SDK, and the code I've got to logout looks like this:</p>\n\n<pre><code>$(document).ready($(function () {\n    $(\"#fblogout\").click(facebooklogout);\n}));\n\nfunction facebooklogout() {\n    FB.logout(function (response) {\n    }\n)};\n</code></pre>\n\n<p>This is the logout code specified at the <a href=\"http://developers.facebook.com/docs/reference/javascript/FB.logout/\">Facebook Developers Documentation</a> just with a button being assigned the method on document.ready</p>\n\n<p>Before this code I have the <code>FB.init()</code> method, that all runs fine.</p>\n\n<p>If anyone's got a solution as to why FB.logout doesn't have an access token, it'd be appreciated.</p>\n",
            "last_activity_date": 1420015892,
            "question_id": 8430474,
            "score": 19,
            "tags": [
                "javascript",
                "facebook",
                "facebook-javascript-sdk"
            ],
            "title": "FB.logout() called without an access token"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>This should be all you need in any language:</p>\n\n<pre><code>function isEven(n) \n{\n   return isNumber(n) &amp;&amp; (n % 2 == 0);\n}\n\nfunction isOdd(n)\n{\n   return isNumber(n) &amp;&amp; (Math.abs(n) % 2 == 1);\n}\n</code></pre>\n\n<p><code>isNumber</code> could be as simple as:</p>\n\n<pre><code>function isNumber(n)\n{\n   return n == parseFloat(n);\n}\n</code></pre>\n\n<p>...or if you want to be even stricter, and not allow string representations of numbers (e.g. <code>'12'</code> should not be considered a valid input, but <code>12</code> should...):</p>\n\n<pre><code>function isNumber(n)\n{\n   return n === parseFloat(n);\n}\n</code></pre>\n\n<p><strong>EDIT:</strong> Modified to support correct isOdd behaviour for negative numbers.  Thanks Ivo.</p>\n",
                    "is_accepted": true,
                    "score": 61
                },
                {
                    "body": "<p>How about the following? I only tested this in IE, but it was quite happy to handle strings representing numbers of any length, actual numbers that were integers or floats, and both functions returned false when passed a boolean, undefined, null, an array or an object. (Up to you whether you want to ignore leading or trailing blanks when a string is passed in - I've assumed they are <em>not</em> ignored and cause both functions to return false.)</p>\n\n<pre><code>function isEven(n) {\n   return /^-?\\d*[02468]$/.test(n);\n}\n\nfunction isOdd(n) {\n   return /^-?\\d*[13579]$/.test(n);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Note: <strong>there are also negative numbers.</strong></p>\n\n<pre><code>function isOddInteger(n)\n{\n   return isInteger(n) &amp;&amp; (n % 2 !== 0) ) ;\n}\n</code></pre>\n\n<p>where</p>\n\n<pre><code>function isInteger(n)\n{\n   return n === parseInt(n);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I prefer using a bit test:</p>\n\n<pre><code>if(i &amp; 1)\n{\n    // ODD\n}\nelse\n{\n    // EVEN\n}\n</code></pre>\n\n<p>This tests whether the first bit is on which signifies an odd number.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<pre><code>var isEven = function(number) {\n    // Your code goes here!\n    if (number % 2 == 0){\n       return(true);\n    }\n    else{\n       return(false);    \n    }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This one is more simple!</p>\n\n<pre><code>  var num = 3 //instead get your value here\n        var aa = [\"Even\", \"Odd\"];\n\n        alert(aa[num % 2]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Different way:</p>\n\n<pre><code>var isEven = function(number) {\n  // Your code goes here!\n  if (((number/2) - Math.floor(number/2)) === 0) {return true;} else {return false;};\n};\n\nisEven(69)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I decided to create simple <em>isEven</em> and <em>isOdd</em> function with a very simple algorithm:</p>\n\n<pre><code>function isEven(n) {\n  n = Number(n);\n  return n === 0 || !!(n &amp;&amp; !(n%2));\n}\n\nfunction isOdd(n) {\n  return isEven(Number(n) + 1);\n}\n</code></pre>\n\n<p>That is OK if n is with certain parameters, but fails for many scenarios. So I set out to create robust functions that deliver correct results for as many scenarios as I could, so that only integers within the limits of javascript numbers are tested, everything else returns false (including + and - infinity). Note that zero is even.</p>\n\n<pre><code>// Returns true if:\n//\n//    n is an integer that is evenly divisible by 2\n//\n// Zero (+/-0) is even\n// Returns false if n is not an integer, not even or NaN\n// Guard against empty string\n\n(function (global) {\n\n  function basicTests(n) {\n\n    // Deal with empty string\n    if (n === '') \n      return false;\n\n    // Convert n to Number (may set to NaN)\n    n = Number(n);\n\n    // Deal with NaN\n    if (isNaN(n)) \n      return false;\n\n    // Deal with infinity - \n    if (n === Number.NEGATIVE_INFINITY || n === Number.POSITIVE_INFINITY)\n      return false;\n\n    // Return n as a number\n    return n;\n  }\n\n  function isEven(n) {\n\n    // Do basic tests\n    if (basicTests(n) === false)\n      return false;\n\n    // Convert to Number and proceed\n    n = Number(n);\n\n    // Return true/false\n    return n === 0 || !!(n &amp;&amp; !(n%2));\n  }\n  global.isEven = isEven;\n\n  // Returns true if n is an integer and (n+1) is even\n  // Returns false if n is not an integer or (n+1) is not even\n  // Empty string evaluates to zero so returns false (zero is even)\n  function isOdd(n) {\n\n    // Do basic tests\n    if (basicTests(n) === false)\n      return false;\n\n    // Return true/false\n    return n === 0 || !!(n &amp;&amp; (n%2));\n  }\n  global.isOdd = isOdd;\n\n}(this));\n</code></pre>\n\n<p>Can anyone see any issues with the above? Is there a better (i.e. more accurate, faster or more concise without being obfuscated) version?</p>\n\n<p>There are various posts relating to other languages, but I can't seem to find a definitive version for ECMAScript.</p>\n\n<h3>Edit</h3>\n\n<p>A code review tag was added, but I'm not after a code review. I posted the code simply so others could see where I was up to, not as something to review. Answers posted so far seem to get that.</p>\n\n<h3>Edit 2</h3>\n\n<p>A final function, based on Steve's answer:</p>\n\n<pre><code>// Use abstract equality == for \"is number\" test\nfunction isEven(n) {\n  return n == parseFloat(n)? !(n%2) : void 0;\n}\n\n// Use strict equality === for \"is number\" test\nfunction isEvenStrict(n) {\n  return n === parseFloat(n)? !(n%2) : void 0;\n}\n</code></pre>\n\n<p>Anything that is not a number returns <em>undefined</em>, numbers return either <em>true</em> or <em>false</em>. It could be one function with a strict flag, but I think the strict comparison is not really required.</p>\n",
            "last_activity_date": 1421507820,
            "question_id": 6211613,
            "score": 19,
            "tags": [
                "javascript",
                "numbers"
            ],
            "title": "Testing whether a value is odd or even"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The preceding <code>!</code> takes the un-parseable statement, and allows it to to be parsed by the JS engine, which in turn returns true.</p>\n\n<pre><code>function(){}();\nSyntaxError: Unexpected token (\n\n!function(){}();\n&gt;&gt;true\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>It simply makes the JavaScript parser parse it as an expression, which is necessary to execute it.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I've tried it, it returned true.\nThe function returns <code>undefined</code>, and <code>!undefined</code> is true.</p>\n\n<pre><code>!function(){}();\n^          ^ ^\nC          A  B\n</code></pre>\n\n<ul>\n<li>A. <code>function(){}</code> is an empty anonymous function</li>\n<li>B. <code>()</code> executes the function (A), returning <code>undefined</code></li>\n<li>C. <code>!</code> negates <code>undefined</code>, which becomes <code>true</code></li>\n</ul>\n\n<p>I think they used that trick for a code golf or an obfuscated code. It is a bad practice to practially use that</p>\n\n<p>Try <code>javascript:alert(!function(){}())</code> in your browser address bar</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>It's type-casting the return value of your function as a Boolean and essentially negating that value.</p>\n\n<p>Example</p>\n\n<pre><code>var isTrue = !(function() { return false; })(); // returns !false (so...true)\n</code></pre>\n\n<p>Example from similar question: <a href=\"http://stackoverflow.com/questions/784929/what-is-the-operator-in-javascript\">What is the !! operator in JavaScript?</a></p>\n\n<pre><code>Boolean(5) === !!5; // faster way of typecasting Boolean();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/3755606/what-does-the-exclamation-mark-do-before-the-function\">What does the exclamation mark do before the function?</a>  </p>\n</blockquote>\n\n\n\n<p>I saw a function formatted like this today for the first time:</p>\n\n<pre><code>!function(){}();\n</code></pre>\n\n<p>What is the preceding exclamation mark for? I assume it functions the same as:</p>\n\n<pre><code>(function(){})();\n</code></pre>\n\n<p>But... what's going on here?</p>\n",
            "last_activity_date": 1300985934,
            "question_id": 5422585,
            "score": 19,
            "tags": [
                "javascript"
            ],
            "title": "! preceding function in javascript?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Creates a local <code>undefined</code> in case someone redefines <code>undefined</code> somewhere in the scope chain. </p>\n\n<p>Also provides a faster lookup since <code>undefined</code> is a global property, so the scope chain traversal is reduced.</p>\n",
                    "is_accepted": true,
                    "score": 22
                }
            ],
            "body": "<p>Going around Modernizr source code I have found strange thing:</p>\n\n<pre><code>window.Modernizr = (function(window,document,undefined) {\n</code></pre>\n\n<p>After that this function will be called with two arguments (<code>this, this.document</code>).</p>\n\n<p>Why <code>undefined</code> is used here? Is it meaningful or it's just strange code-style?</p>\n",
            "last_activity_date": 1294686385,
            "question_id": 4650442,
            "score": 19,
            "tags": [
                "javascript",
                "modernizr"
            ],
            "title": "JavaScript function with &#39;undefined&#39; parameter"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Unfortunately, you can't hide <code>option</code> elements in all browsers.</p>\n\n<p>In the past when I have needed to do this, I have set their <code>disabled</code> attribute, like so...</p>\n\n<pre><code>$('option').prop('disabled', true);\n</code></pre>\n\n<p>I've then used the hiding where it is supported in browsers using this piece of CSS...</p>\n\n<pre><code>select option[disabled] {\n    display: none;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>Hiding an <code>&lt;option&gt;</code> element is not in the spec. But you can <code>disable</code> them, which should work cross-browser.</p>\n\n<pre><code>$('option.hide').prop('disabled', true);\n</code></pre>\n\n<p><a href=\"http://www.w3.org/TR/html401/interact/forms.html#h-17.6\" rel=\"nofollow\">http://www.w3.org/TR/html401/interact/forms.html#h-17.6</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>$(\".hide\").css(\"display\",\"none\");\n</code></pre>\n\n<p>But I think it doesn't make sense to hide it. if you wanna remove it, just:</p>\n\n<pre><code>$(\".hide\").remove();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Since you mentioned that you want to re-add the options later, I would suggest that you load an array or object with the contents of the select box on page load - that way you always have a \"master list\" of the original select if you need to restore it.</p>\n\n<p>I made a simple example that removes the first element in the select and then a restore button puts the select box back to it's original state:</p>\n\n<p><a href=\"http://jsfiddle.net/CZcvM/\" rel=\"nofollow\">http://jsfiddle.net/CZcvM/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Had a crack at it myself and this is what I came up with:</p>\n\n<pre><code>(function($){\n\n    $.fn.extend({detachOptions: function(o) {\n        var s = this;\n        return s.each(function(){\n            var d = s.data('selectOptions') || [];\n            s.find(o).each(function() {\n                d.push($(this).detach());\n            });\n            s.data('selectOptions', d);\n        });\n    }, attachOptions: function(o) {\n        var s = this;\n        return s.each(function(){\n            var d = s.data('selectOptions') || [];\n            for (var i in d) {\n                if (d[i].is(o)) {\n                    s.append(d[i]);\n                    console.log(d[i]);\n                    // TODO: remove option from data array\n                }\n            }\n        });\n    }});   \n\n})(jQuery);\n\n// example\n$('select').detachOptions('.removeme');\n$('.b').attachOptions('[value=1]');');\n</code></pre>\n\n<p>You can see the example at <a href=\"http://www.jsfiddle.net/g5YKh/\">http://www.jsfiddle.net/g5YKh/</a></p>\n\n<p>The <code>option</code> elements are fully removed from the <code>select</code>s and can be re-added again by jQuery selector. </p>\n\n<p>Probably needs a bit of work and testing before it works well enough for all cases, but it's good enough for what I need.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>I know this is a little late but better late than never! Here's a really simple way to achieve this. Simply have a show and hide function. The hide function will just append every option element to a predetermined (hidden) span tag (which should work for all browsers) and then the show function will just move that option element back into your select tag. ;)</p>\n\n<pre><code>function showOption(value){\n    $('#optionHolder option[value=\"'+value+'\"]').appendTo('#selectID');             \n}\n\nfunction hideOption(value){\n    $('select option[value=\"'+value+'\"]').appendTo('#optionHolder');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Three years late, but my Googling brought me here so hopefully my answer will be useful for someone else.</p>\n\n<p>I just created a second  option (which I hid with CSS) and used Javascript to move the s backwards and forwards between them.</p>\n\n<pre><code>&lt;select multiple id=\"sel1\"&gt;\n  &lt;option class=\"set1\"&gt;Blah&lt;/option&gt;\n&lt;/select&gt;\n&lt;select multiple id=\"sel2\" style=\"display:none\"&gt;\n  &lt;option class=\"set2\"&gt;Bleh&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>Something like that, and then something like this will move an item onto the list (i.e., make it visible). Obviously adapt the code as needed for your purpose.</p>\n\n<pre><code>$('#sel2 .set2').appendTo($('#sel1'))\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As has been said, you can't <code>display:none</code> individual <code>&lt;option&gt;</code>s, because they're not the right kind of DOM elements. </p>\n\n<p>You can set <code>.prop('disabled', true)</code>, but this only grays out the elements and makes them unselectable -- they still take up space.</p>\n\n<p>One solution I use is to <code>.detach()</code> the <code>&lt;select&gt;</code> into a global variable on page load, then add back only the <code>&lt;option&gt;</code>s you want on demand. Something like this (<a href=\"http://jsfiddle.net/mblase75/Afe2E/\" rel=\"nofollow\">http://jsfiddle.net/mblase75/Afe2E/</a>):</p>\n\n<pre><code>var $sel = $('#sel option').detach(); // global variable\n\n$('a').on('click', function (e) {\n    e.preventDefault();\n    var c = 'name-of-class-to-show';\n    $('#sel').empty().append( $sel.filter('.'+c) );\n});\n</code></pre>\n\n<p>At first I thought you'd have to <code>.clone()</code> the <code>&lt;option&gt;</code>s before appending them, but apparently not. The original global <code>$sel</code> is unaltered after the <code>click</code> code is run.</p>\n\n<hr>\n\n<p>If you have an aversion to global variables, you could store the jQuery object containing the options as a <code>.data()</code> variable on the <code>&lt;select&gt;</code> element itself (<a href=\"http://jsfiddle.net/mblase75/nh5eW/\" rel=\"nofollow\">http://jsfiddle.net/mblase75/nh5eW/</a>):</p>\n\n<pre><code>$('#sel').data('options', $('#sel option').detach()); // data variable\n\n$('a').on('click', function (e) {\n    e.preventDefault();\n    var $sel = $('#sel').data('options'), // jQuery object\n        c = 'name-of-class-to-show';\n    $('#sel').empty().append( $sel.filter('.'+c) );\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>just modify dave1010's code for my need</p>\n\n<pre><code> (function($){\n    $.fn.extend({hideOptions: function() {\n        var s = this;\n        return s.each(function(i,e) {\n            var d = $.data(e, 'disabledOptions') || [];\n            $(e).find(\"option[disabled=\\\"disabled\\\"]\").each(function() {\n                d.push($(this).detach());\n            });\n            $.data(e, 'disabledOptions', d);\n        });\n    }, showOptions: function() {\n        var s = this;\n        return s.each(function(i,e) {       \n            var d = $.data(e, 'disabledOptions') || [];\n            for (var i in d) {\n                $(e).append(d[i]);\n            }\n        });\n    }});    \n})(jQuery);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/AbzL3/1/\" rel=\"nofollow\">http://jsfiddle.net/AbzL3/1/</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>This should work:</p>\n\n<pre><code>$('option').hide(); // hide options\n</code></pre>\n\n<p>It works in Firefox, but not Chrome (and probably not in IE, not tested).</p>\n\n<p>A more interesting example:</p>\n\n<pre><code>&lt;select&gt;\n    &lt;option class=\"hide\"&gt;Hide me&lt;/option&gt;\n    &lt;option&gt;visible option&lt;/option&gt;\n&lt;/select&gt;\n&lt;script type=\"text/javascript\"&gt;\n// try to hide the first option\n$('option.hide').hide();\n\n// to select the first visible option\n$('option:visible').first().attr('selected', 'selected');\n&lt;/script&gt;\n</code></pre>\n\n<p>Or see the example at <a href=\"http://jsfiddle.net/TGxUf/\">http://jsfiddle.net/TGxUf/</a></p>\n\n<p>Is the only option to detach the option elements from the DOM? I need to show them again later, so this would not be very effective.</p>\n",
            "last_activity_date": 1392812440,
            "question_id": 4398966,
            "score": 19,
            "tags": [
                "javascript",
                "jquery",
                "cross-browser"
            ],
            "title": "How can I hide select options with JavaScript? (Cross browser)"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>If owner names differ, sort by them. Otherwise, use publication name for tiebreaker.</p>\n\n<pre><code>function mysortfunction(a, b) {\n\n  var o1 = a[3].toLowerCase();\n  var o2 = b[3].toLowerCase();\n\n  var p1 = a[1].toLowerCase();\n  var p2 = b[1].toLowerCase();\n\n  if (o1 &lt; o2) return -1;\n  if (o1 &gt; o2) return 1;\n  if (p1 &lt; p2) return -1;\n  if (p1 &gt; p2) return 1;\n  return 0;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>This is handy for alpha sorts of all sizes.\nPass it the indexes you want to sort by, in order, as arguments.</p>\n\n<pre><code>Array.prototype.deepSortAlpha= function(){\n    var itm, L=arguments.length, order=arguments;\n\n    var alphaSort= function(a, b){\n        a= a.toLowerCase();\n        b= b.toLowerCase();\n        if(a== b) return 0;\n        return a&gt; b? 1:-1;\n    }\n    if(!L) return this.sort(alphaSort);\n\n    this.sort(function(a, b){\n        var tem= 0,  indx=0;\n        while(tem==0 &amp;&amp; indx&lt;L){\n            itm=order[indx];\n            tem= alphaSort(a[itm], b[itm]); \n            indx+=1;        \n        }\n        return tem;\n    });\n    return this;\n}\n\nvar arr= [[ \"Nilesh\",\"Karmshil\"], [\"Pranjal\",\"Deka\"], [\"Susants\",\"Ghosh\"],\n[\"Shiv\",\"Shankar\"], [\"Javid\",\"Ghosh\"], [\"Shaher\",\"Banu\"], [\"Javid\",\"Rashid\"]];\n\narr.deepSortAlpha(1,0);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Came across a need to do SQL-style mixed asc and desc object array sorts by keys.</p>\n\n<p>kennebec's solution above helped me get to this:</p>\n\n<pre><code>Array.prototype.keySort = function(keys) {\n\nkeys = keys || {};\n\n// via\n// http://stackoverflow.com/questions/5223/length-of-javascript-object-ie-associative-array\nvar obLen = function(obj) {\n    var size = 0, key;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key))\n            size++;\n    }\n    return size;\n};\n\n// avoiding using Object.keys because I guess did it have IE8 issues?\n// else var obIx = function(obj, ix){ return Object.keys(obj)[ix]; } or\n// whatever\nvar obIx = function(obj, ix) {\n    var size = 0, key;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            if (size == ix)\n                return key;\n            size++;\n        }\n    }\n    return false;\n};\n\nvar keySort = function(a, b, d) {\n    d = d !== null ? d : 1;\n    // a = a.toLowerCase(); // this breaks numbers\n    // b = b.toLowerCase();\n    if (a == b)\n        return 0;\n    return a &gt; b ? 1 * d : -1 * d;\n};\n\nvar KL = obLen(keys);\n\nif (!KL)\n    return this.sort(keySort);\n\nfor ( var k in keys) {\n    // asc unless desc or skip\n    keys[k] = \n            keys[k] == 'desc' || keys[k] == -1  ? -1 \n          : (keys[k] == 'skip' || keys[k] === 0 ? 0 \n          : 1);\n}\n\nthis.sort(function(a, b) {\n    var sorted = 0, ix = 0;\n\n    while (sorted === 0 &amp;&amp; ix &lt; KL) {\n        var k = obIx(keys, ix);\n        if (k) {\n            var dir = keys[k];\n            sorted = keySort(a[k], b[k], dir);\n            ix++;\n        }\n    }\n    return sorted;\n});\nreturn this;\n};\n</code></pre>\n\n<p>sample usage:</p>\n\n<pre><code>var obja = [\n  {USER:\"bob\",  SCORE:2000, TIME:32,    AGE:16, COUNTRY:\"US\"},\n  {USER:\"jane\", SCORE:4000, TIME:35,    AGE:16, COUNTRY:\"DE\"},\n  {USER:\"tim\",  SCORE:1000, TIME:30,    AGE:17, COUNTRY:\"UK\"},\n  {USER:\"mary\", SCORE:1500, TIME:31,    AGE:19, COUNTRY:\"PL\"},\n  {USER:\"joe\",  SCORE:2500, TIME:33,    AGE:18, COUNTRY:\"US\"},\n  {USER:\"sally\",    SCORE:2000, TIME:30,    AGE:16, COUNTRY:\"CA\"},\n  {USER:\"yuri\", SCORE:3000, TIME:34,    AGE:19, COUNTRY:\"RU\"},\n  {USER:\"anita\",    SCORE:2500, TIME:32,    AGE:17, COUNTRY:\"LV\"},\n  {USER:\"mark\", SCORE:2000, TIME:30,    AGE:18, COUNTRY:\"DE\"},\n  {USER:\"amy\",  SCORE:1500, TIME:29,    AGE:19, COUNTRY:\"UK\"}\n];\n\nvar sorto = {\n  SCORE:\"desc\",TIME:\"asc\", AGE:\"asc\"\n};\n\nobja.keySort(sorto);\n</code></pre>\n\n<p>yields the following:</p>\n\n<pre><code> 0: {     USER: jane;     SCORE: 4000;    TIME: 35;       AGE: 16;    COUNTRY: DE;   }\n 1: {     USER: yuri;     SCORE: 3000;    TIME: 34;       AGE: 19;    COUNTRY: RU;   }\n 2: {     USER: anita;    SCORE: 2500;    TIME: 32;       AGE: 17;    COUNTRY: LV;   }\n 3: {     USER: joe;      SCORE: 2500;    TIME: 33;       AGE: 18;    COUNTRY: US;   }\n 4: {     USER: sally;    SCORE: 2000;    TIME: 30;       AGE: 16;    COUNTRY: CA;   }\n 5: {     USER: mark;     SCORE: 2000;    TIME: 30;       AGE: 18;    COUNTRY: DE;   }\n 6: {     USER: bob;      SCORE: 2000;    TIME: 32;       AGE: 16;    COUNTRY: US;   }\n 7: {     USER: amy;      SCORE: 1500;    TIME: 29;       AGE: 19;    COUNTRY: UK;   }\n 8: {     USER: mary;     SCORE: 1500;    TIME: 31;       AGE: 19;    COUNTRY: PL;   }\n 9: {     USER: tim;      SCORE: 1000;    TIME: 30;       AGE: 17;    COUNTRY: UK;   }\n keySort: {  }\n</code></pre>\n\n<p>(using a print function from <a href=\"http://stackoverflow.com/questions/957537/how-can-i-print-a-javascript-object\">here</a>)</p>\n\n<p><a href=\"http://jsbin.com/uxibic/1/edit\">here is a jsbin example</a>.</p>\n\n<p>edit: <a href=\"https://github.com/bitless/mksort.js\">cleaned up and posted as mksort.js on github</a>.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I think what you're looking for is thenBy.js: <a href=\"https://github.com/Teun/thenBy.js\" rel=\"nofollow\">https://github.com/Teun/thenBy.js</a></p>\n\n<p>It allows you to use the standard Array.sort, but with <code>firstBy().thenBy().thenBy()</code> style.</p>\n\n<p><a href=\"http://jsfiddle.net/n4ncq2nc/1/\" rel=\"nofollow\">An example can be seen here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>You could concat the 2 variables together into a sortkey and use that for your comparison.</p>\n\n<pre><code>list.sort(function(a,b){\n   var aCat = a.var1 + a.var2;\n   var bCat = b.var1 + b.var2;\n   return (aCat &gt; bCat ? 1 : aCat &lt; bCat ? -1 : 0);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<pre><code>function multiSort() {\n\n    var args =$.makeArray( arguments ),\n        sortOrder=1, prop='', aa='',  b='';\n\n    return function (a, b) {\n\n       for (var i=0; i&lt;args.length; i++){\n\n         if(args[i][0]==='-'){\n            prop=args[i].substr(1)\n            sortOrder=-1\n         }\n         else{sortOrder=1; prop=args[i]}\n\n         aa = a[prop].toLowerCase()\n         bb = b[prop].toLowerCase()\n\n         if (aa &lt; bb) return -1 * sortOrder;\n         if (aa &gt; bb) return 1 * sortOrder;\n\n       }\n\n       return 0\n    }\n\n}\nempArray.sort(multiSort( 'lastname','firstname')) Reverse with '-lastname'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a multidimensional array. The primary array is an array of </p>\n\n<pre><code>[publicationID][publication_name][ownderID][owner_name] \n</code></pre>\n\n<p>What I am trying to do is sort the array by <code>owner_name</code> and then by <code>publication_name</code>.  I know in JavaScript you have <code>Array.sort()</code>, into which you can put a custom function, in my case i have:</p>\n\n<pre><code>function mysortfunction(a, b) {\n    var x = a[3].toLowerCase();\n    var y = b[3].toLowerCase();\n\n    return ((x &lt; y) ? -1 : ((x &gt; y) ? 1 : 0));\n}\n</code></pre>\n\n<p>This is fine for just sorting on the one column, namely owner_name, but how do I modify it to sort on <code>owner_name</code>, then <code>publication_name</code>?</p>\n",
            "last_activity_date": 1422016336,
            "question_id": 2784230,
            "score": 19,
            "tags": [
                "javascript",
                "algorithm",
                "sorting"
            ],
            "title": "Javascript, how do you sort an array on multiple columns?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><code>String</code> values are not implementation dependent, according the <a href=\"http://bclary.com/2004/11/07/#a-4.3.16\">ECMA-262 3rd Edition Specification</a>, each character represents a <em>single 16-bit unit of UTF-16 text</em>:</p>\n\n<blockquote>\n  <p>4.3.16 String Value</p>\n  \n  <p>A string value is a member of the type String and is a\n  finite ordered sequence of zero or\n  more 16-bit unsigned integer values.</p>\n  \n  <p>NOTE Although each value usually\n  represents a single 16-bit unit of\n  UTF-16 text, the language does not\n  place any restrictions or requirements\n  on the values except that they be\n  16-bit unsigned integers.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Try this combination with using <strong><em>unescape</em></strong> js function:  </p>\n\n<pre><code>var byteAmount = unescape(encodeURIComponent(yourString)).length</code></pre>\n\n<p>Full encode proccess example:</p>\n\n<pre><code>\n    var s  = \"1 a \u0444 \u2116 @ \u00ae\"; //length is 11\n    var s2 = encodeURIComponent(s); //length is 41\n    var s3 = unescape(s2); //length is 15 [1-1,a-1,\u0444-2,\u2116-3,@-1,\u00ae-2]\n    var s4 = escape(s3); //length is 39\n    var s5 = decodeURIComponent(s4); //length is 11\n</code></pre>\n\n<p>See aditional screen\n<a href=\"http://dl.dropbox.com/u/2086213/%3Dcoding%3D/js_utf_byte_length.png\" rel=\"nofollow\">http://dl.dropbox.com/u/2086213/%3Dcoding%3D/js_utf_byte_length.png</a>\n(I am a new user, so I can't use the img tag)</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>This function will return the byte size of any UTF-8 string you pass to it.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function byteCount(s) {\n    return encodeURI(s).split(/%..|./).length - 1;\n}\n</code></pre>\n\n<p><a href=\"https://gist.github.com/1010324\">Source</a></p>\n\n<p>JavaScript engines are free to use UCS-2 or UTF-16 internally. Most engines that I know of use UTF-16, but whatever choice they made, it\u2019s just an implementation detail that won\u2019t affect the language\u2019s characteristics.</p>\n\n<p>The ECMAScript/JavaScript language itself, however, exposes characters according to UCS-2, not UTF-16.</p>\n\n<p><a href=\"http://mathiasbynens.be/notes/javascript-encoding\">Source</a></p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>You can try this:</p>\n\n<pre><code>  var b = str.match(/[^\\x00-\\xff]/g);\n  return (str.length + (!b ? 0: b.length)); \n</code></pre>\n\n<p>It worked for me.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you're using node.js, there is a simpler solution using <a href=\"http://nodejs.org/api/buffer.html\" rel=\"nofollow\">buffers</a> :</p>\n\n<p><code>\nfunction getBinarySize(string) {\n  return Buffer.byteLength(string, 'utf8');\n}\n</code></p>\n\n<p>There is a npm lib for that : <a href=\"https://www.npmjs.org/package/utf8-binary-cutter\" rel=\"nofollow\">https://www.npmjs.org/package/utf8-binary-cutter</a> (from yours faithfully)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a javascript string which is about 500K when being sent from the server in UTF-8. How can I tell its size in JavaScript?</p>\n\n<p>I know that JavaScript uses UCS-2, so does that mean 2 bytes per character. However, does it depend on the JavaScript implementation? Or on the page encoding or maybe content-type?</p>\n",
            "last_activity_date": 1418122228,
            "question_id": 2219526,
            "score": 19,
            "tags": [
                "javascript",
                "string",
                "size",
                "byte"
            ],
            "title": "How many bytes in a JavaScript string?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The error is because it is returning JSON not JSONP.</p>\n\n<p>JSONP is supposed to look like</p>\n\n<pre><code>someCallBackString({ The Object });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>JSONP is not JSON. A JSONP response would consist of a JavaScript script containing only a function call (to a pre-defined function) with one argument (which is a JavaScript object literal conforming to JSON syntax).</p>\n\n<p>The response you are getting is JSON, not JSONP so your efforts to handle it as JSONP fail.</p>\n\n<p>Change <code>dataType: 'jsonp'</code> to <code>dataType: 'json'</code> (or remove the line entirely, the server issues the correct content-type so you don't need to override it).</p>\n\n<p>Since your script is running on a different origin to the JSON then you will also need to <a href=\"http://stackoverflow.com/questions/3076414/ways-to-circumvent-the-same-origin-policy\">take steps</a> (most, but not all, of which require that you control the host serving the JSON) to work around the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Same_origin_policy_for_JavaScript\">same origin policy</a>.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>As epascarello <a href=\"http://stackoverflow.com/a/19456225/386579\">pointed out</a>, the JSONP response must be sent like:</p>\n\n<pre><code>callBackFunction({ JSON Object })\n</code></pre>\n\n<p>And the caller function can then be setup like:</p>\n\n<pre><code>var url =  \"http://someremoteurl.com/json\";\n    $.getJSON(url + \"?callback=?\", null, function(data) {\n    callBackFunction(data);\n});\n</code></pre>\n\n<p>Then you can loop over the response data as:</p>\n\n<pre><code>function callBackFunction(data)\n{\n   console.log(data);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In your controller make sure that you render the format correctly. example:</p>\n\n<pre><code>def view_product\n   data = Product.find params[:id]\n   render :json =&gt;  data, :callback =&gt; params[:callback]\nend\n</code></pre>\n\n<p>In your render method, you should have the <strong>:callback</strong> parameter otherwise it will render in json instead of jsonp.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am making a cross domain JSONP call using this code:</p>\n\n<pre><code>jQuery.ajax({\n        async: true,\n        url: 'http://mnews.hostoi.com/test.json',\n        dataType: 'jsonp',\n        method: \"GET\",\n        error: function (jqXHR, textStatus, errorThrown) {\n            console.log(textStatus + ': ' + errorThrown);\n        },\n        success: function (data, textStatus, jqXHR) {\n            if (data.Error || data.Response) {\n                exists = 0;\n            }\n        }\n    });\n</code></pre>\n\n<p>When debugging in Firebug, I get the following error:</p>\n\n<p><img src=\"http://i.stack.imgur.com/gyKvx.png\" alt=\"enter image description here\"></p>\n\n<pre><code>SyntaxError: missing ; before statement\n</code></pre>\n\n<p>However, when I pass my json object (available through the link in the JQ code) through a tool like jsonlint.com, it says it is valid JSON. And I don't find any anomalies either. How could it be returning a syntax error? Is it some JSONP detail I am not getting or what?</p>\n\n<h2>JSON Sample</h2>\n\n<pre><code>{\"news\":[ {\n  \"sentences\": [\n    \"Neuroscientists have discovered abnormal neural activity...\", \n    \"The researchers found that these mice showed many symptoms...\", \n    \"\\\"Therefore,\\\" the study authors say, \\\"our findings provide a novel..\"\n  ], \n  \"summaryId\": \"ZJEmY5\", \n  \"title\": \"Abnormal neural activity linked to schizophrenia\"\n}]}\n</code></pre>\n\n<p>Thanks in advance.</p>\n",
            "last_activity_date": 1407649844,
            "question_id": 19456146,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "json",
                "jsonp"
            ],
            "title": "AJAX call and clean JSON but Syntax Error: missing ; before statement"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There are many reasons, but some that come to mind are to aid in parsing/debugging code that uses object literals (which can sometimes look like a block), and to simplify the garbage collection of local variables.</p>\n\n<p>I hope that the promised support (discussed here, for example, <a href=\"http://esdiscuss.org/notes/2012-07-25\" rel=\"nofollow\">http://esdiscuss.org/notes/2012-07-25</a>) turns out to be real because it would be very convenient to use variables like <code>i</code> that were local to only a single loop.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><sup>Converting my comment to answer</sup></p>\n\n<p>Choice of the creator: I tweeted Brendan and got the <a href=\"https://twitter.com/brendaneich/status/349768501583548416\">following answer</a>: </p>\n\n<blockquote>\n  <p>@mplungjan 10 days did not leave time for block scope. Also many \"scripting languages\" of that mid-90s era had few scopes &amp; grew more later.</p>\n</blockquote>\n\n<hr>\n\n<p>That said, here are some relevant points:</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Statements?redirectlocale=en-US&amp;redirectslug=JavaScript%2FGuide%2FStatements#Block_Statement\">Block statement</a> </li>\n</ul>\n\n<blockquote>\n  <p>Important: JavaScript does not have block scope. Variables introduced within a block are scoped to the containing function or script, and the effects of setting them persist beyond the block itself. In other words, block statements do not introduce a scope. Although \"standalone\" blocks are valid syntax, you do not want to use standalone blocks in JavaScript, because they don't do what you think they do, if you think they do anything like such blocks in C or Java. </p>\n</blockquote>\n\n<ul>\n<li><a href=\"http://zef.me/2843/javascript-the-scope-pitfall\">a workaround</a> </li>\n</ul>\n\n<blockquote>\n  <p>we can artificially introduce scopes by creating new functions and immediately invoking them</p>\n</blockquote>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let#Block_scoping\">The future</a> </li>\n</ul>\n\n<blockquote>\n  <p><code>let</code> declared variables are hoisted to the beginning of the enclosing block.<br>\n  Redeclaration of the same variable in the same block scope raises a TypeError.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>Block scope was not implemented for the following reasons:</p>\n\n<ol>\n<li>It's makes the language easier to implement. JavaScript was initially designed as a language for writing interactive web applications. Hence it needed to be small and easy to implement.</li>\n<li>Block scopes introduce a performance hit to dynamic languages like JavaScript. This is because when you try to access some variable which is not in the current scope JavaScript first checks the current scope, then the parent scope and so on until it either finds the variable or reaches the end. Hence the introduction of block scopes would make variable access in loops and nested loops very slow.</li>\n<li>The lack of block scopes makes it easier to write programs. For example say you want to create a variable only if a certain condition is true. All you need to do in JavaScript is declare and define the variable within an <code>if</code> statement. In languages like C you would have to declare the variable outside the <code>if</code> statement and define it within the <code>if</code> statement.</li>\n<li>The lack of block scopes allow declarations to be hoisted. This is especially useful in the case of function declarations. For example see this fiddle: <a href=\"http://jsfiddle.net/L6SgM/\">http://jsfiddle.net/L6SgM/</a> (note however that this example doesn't work in Firefox).</li>\n<li>Since JavaScript supports first-class function expressions we don't need block scopes. They can be simulated using <a href=\"http://benalman.com/news/2010/11/immediately-invoked-function-expression/\">immediately invoked function expressions</a>.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have read, and discovered through my own experience, that JavaScript doesn't have block scope. Assuming that the language was designed this way for a reason, what is that reason? </p>\n\n<p>I've looked around on Google and on here, but the posts I have found just reiterate that JS has function scope and not block scope, without explaining why. I'm curious to know why this is actually the case.</p>\n",
            "last_activity_date": 1372342911,
            "question_id": 17311693,
            "score": 18,
            "tags": [
                "javascript",
                "scope"
            ],
            "title": "Why does JavaScript not have block scope?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>The general idea:</p>\n\n<ol>\n<li><p>Upon the first click, dont call the associated function (say single_click_function()). Rather, set a timer for a certain period of time(say x). If we do not get another click during that time span, go for the single_click_function(). If we do get one, call double_click_function()</p></li>\n<li><p>Timer will be cleared once the second click is received. It will also be cleared once x milliseconds are lapsed.</p></li>\n</ol>\n\n<p>BTW, check Paolo's reply out: <a href=\"http://stackoverflow.com/questions/1067464/need-to-cancel-click-mouseup-events-when-double-click-event-detected/1067484#1067484\">Need to cancel click/mouseup events when double-click event detected</a>\nand of course the entire thread! :-)</p>\n\n<blockquote>\n  <p>Better answer: <a href=\"http://stackoverflow.com/a/7845282/260610\">http://stackoverflow.com/a/7845282/260610</a></p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>The issue only occurs when the editable field is clicked, so attach a regular <code>click</code> handler to that element which will cancel propagation of the event (<a href=\"https://developer.mozilla.org/en/DOM/event.stopPropagation\" rel=\"nofollow\">see <code>stopPropagation</code></a>) and will set a timeout (<code>setTimeout(...)</code>) for, say, 600ms (<em>default time between two clicks to be deemed a dbl-click is 500ms <a href=\"https://secure.wikimedia.org/wikipedia/en/wiki/Double-click#Speed_and_timing\" rel=\"nofollow\">[src]</a></em>). If, by that time the <code>dblclick</code> has not occurred (you can have a var accessible in both event handlers that acts as a flag to detect this) then you can assume the user wants to expand the row instead and continue with that action...</p>\n\n<p>IMO, you should re-think this. Alas, a single click handler cannot know if the user is about to double-click.</p>\n\n<p><strong>I suggest making both actions single click, and simply don't propagate up from the editable field when it is clicked.</strong></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://jsfiddle.net/V8twU/44/\" rel=\"nofollow\">Working demo</a></p>\n\n<pre><code>$('#alreadyclicked').val('no click');\n$('td.dblclickable').on('click',function(){\n    var $button=$(this);\n    if ($button.data('alreadyclicked')){\n        $button.data('alreadyclicked', false); // reset\n        $('#alreadyclicked').val('no click');\n\n        if ($button.data('alreadyclickedTimeout')){\n            clearTimeout($button.data('alreadyclickedTimeout')); // prevent this from happening\n        }\n        // do what needs to happen on double click. \n        $('#action').val('Was double clicked');\n    }else{\n        $button.data('alreadyclicked', true);\n        $('#alreadyclicked').val('clicked');\n        var alreadyclickedTimeout=setTimeout(function(){\n            $button.data('alreadyclicked', false); // reset when it happens\n            $('#alreadyclicked').val('no click');\n            $('#action').val('Was single clicked');\n            // do what needs to happen on single click. \n            // use $button instead of $(this) because $(this) is \n            // no longer the element\n        },300); // &lt;-- dblclick tolerance here\n        $button.data('alreadyclickedTimeout', alreadyclickedTimeout); // store this id to clear if necessary\n    }\n    return false;\n});\n</code></pre>\n\n<p>obviously use  <code>&lt;td class=\"dblclickable\"&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Rewrite user822711's answer for reuse:</p>\n\n<pre><code>  $.singleDoubleClick = function(singleClk, doubleClk) {\n    return (function() {\n      var alreadyclicked = false;\n      var alreadyclickedTimeout;\n\n      return function(e) {\n        if (alreadyclicked) {\n          // double\n          alreadyclicked = false;\n          alreadyclickedTimeout &amp;&amp; clearTimeout(alreadyclickedTimeout);\n          doubleClk &amp;&amp; doubleClk(e);\n        } else {\n          // single\n          alreadyclicked = true;\n          alreadyclickedTimeout = setTimeout(function() {\n            alreadyclicked = false;\n            singleClk &amp;&amp; singleClk(e);\n          }, 300);\n        }\n      }\n    })();\n  }\n</code></pre>\n\n<p>Call the function.</p>\n\n<pre><code>$('td.dblclickable').bind('click', $.singleDoubleClick(function(e){\n  //click.\n}, function(e){\n  //double click.\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>window.UI = {\n  MIN_LAPS_FOR_DBL_CLICK: 200, // msecs\n\n  evt_down:null,\n  timer_down:null,\n  mousedown:function(evt){\n    if( this.evt_down &amp;&amp; evt.timeStamp &lt; this.evt_down.timeStamp + this.MIN_LAPS_FOR_DBL_CLICK ){\n      clearTimeout(this.timer_down);\n      this.double_click(evt); // =&gt; double click\n    } else {\n      this.evt_down   = evt;\n      this.timer_down = setTimeout(\"UI.do_on_mousedown()\", this.MIN_LAPS_FOR_DBL_CLICK);\n    }\n  },\n  evt_up:null,\n  timer_up:null,\n  mouseup:function(evt){\n    if( this.evt_up &amp;&amp; evt.timeStamp &lt; this.evt_up.timeStamp + this.MIN_LAPS_FOR_DBL_CLICK ){\n      clearTimeout(this.timer_up);\n    } else {\n      this.evt_up   = evt;\n      this.timer_up = setTimeout(\"UI.do_on_mouseup()\", this.MIN_LAPS_FOR_DBL_CLICK);\n    }\n  },\n  do_on_mousedown:function(){\n    var evt = this.evt_down;\n    // Treatment MOUSE-DOWN here\n  },\n  do_on_mouseup:function(){\n    var evt = this.evt_up;\n    // Treatment MOUSE-UP here\n  },\n  double_click:function(evt){\n    // Treatment DBL-CLICK here\n  }\n\n}\n\n// Then the observers\n\n$('div#myfoo').bind('mousedown',  $.proxy(UI.mousedown, UI));\n$('div#myfoo').bind('mouseup',    $.proxy(UI.mouseup, UI));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is a more elegant way handling this issue if you're using backbonejs:</p>\n\n<pre>\n\n    initialize: function(){\n        this.addListener_openWidget();\n    }\n\n    addListener_openWidget: function(){\n        this.listenToOnce( this, 'openWidgetView', function(e){this.openWidget(e)} );\n    },\n\n    events: {\n        'click #openWidgetLink' : function(e){this.trigger('openWidgetView',e)},\n        'click #closeWidgetLink' : 'closeWidget'\n    },\n\n    openWidget: function( e ){\n       //Do your stuff\n    },\n\n    closeWidget: function(){\n       this.addListener_openWidget();\n    }\n\n</pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an interesting situation - I have a table row which, currently, shows it's hidden counterpart when I click the \"Expand\" button. The original (unhidden) row which contains the expand button also has some content in a certain cell which, when clicked, becomes editable. I would like to be rid of the expand button, and enable expanding of the row via doubleclick anywhere in the row itself, including the field that turns editable when you click it. You can smell the trouble here already.</p>\n\n<p>When I double click a row, two click events are fired first, before the dblclick occurs. This means if I double click the field, it will turn into an editable one, and the row will expand. I would like to prevent this. I want the doubleclick to prevent the firing of the single click, and the single click to perform as usual.</p>\n\n<p>Using event.stopPropagation() clearly won't work since they're two different events.</p>\n\n<p>Any ideas?</p>\n\n<p>Edit (some semi-pseudo code):</p>\n\n<p>Original version:</p>\n\n<pre><code>&lt;table&gt;\n    &lt;tbody&gt;\n        &lt;tr&gt;\n            &lt;td&gt;&lt;a href=\"javascript:$('#row_to_expand').toggle();\" title=\"Expand the hidden row\"&gt;Expand Row&lt;/a&gt;&lt;/td&gt;\n            &lt;td&gt;Some kind of random data&lt;/td&gt;\n            &lt;td&gt;&lt;?= $editable_cell_which_turns_into_an_input_field_on_single_click[0]-&gt;value(\"First editable value\") ?&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;?= $editable_cell_which_turns_into_an_input_field_on_single_click[1]-&gt;value(\"Second editable value\") ?&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;?= $editable_cell_which_turns_into_an_input_field_on_single_click[2]-&gt;value(\"Third editable value\") ?&gt;&lt;/td&gt;\n            &lt;!-- ... --&gt;\n            &lt;td&gt;&lt;?= $editable_cell_which_turns_into_an_input_field_on_single_click[n]-&gt;value(\"Nth editable value\") ?&gt;&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr style=\"display: none\" id=\"row_to_expand\"&gt;\n            &lt;td colspan=\"n\"&gt;Some hidden data&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>Desired version:</p>\n\n<pre><code>&lt;table&gt;\n    &lt;tbody&gt;\n        &lt;tr ondblclick=\"$('#row_to_expand').toggle()\"&gt;\n            &lt;td&gt;Some kind of random data&lt;/td&gt;\n            &lt;td&gt;&lt;?= $editable_cell_which_turns_into_an_input_field_on_single_click[0]-&gt;value(\"First editable value\") ?&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;?= $editable_cell_which_turns_into_an_input_field_on_single_click[1]-&gt;value(\"Second editable value\") ?&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;?= $editable_cell_which_turns_into_an_input_field_on_single_click[2]-&gt;value(\"Third editable value\") ?&gt;&lt;/td&gt;\n            &lt;!-- ... --&gt;\n            &lt;td&gt;&lt;?= $editable_cell_which_turns_into_an_input_field_on_single_click[n]-&gt;value(\"Nth editable value\") ?&gt;&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr style=\"display: none\" id=\"row_to_expand\"&gt;\n            &lt;td colspan=\"n\"&gt;Some hidden data&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>Cheers</p>\n",
            "last_activity_date": 1422437505,
            "question_id": 5471291,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "events",
                "event-bubbling",
                "propagation"
            ],
            "title": "Javascript with jQuery: Click and double click on same element, different effect, one disables the other"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You need to add a CDATA tag inside of the script tag, unless you want to manually go through and escape all XHTML characters (e.g. <code>&amp;</code> would need to become <code>&amp;amp;</code>).  For example:</p>\n\n<pre><code>&lt;script&gt;\n//&lt;![CDATA[\nvar el = document.getElementById(\"pacman\");\n\nif (Modernizr.canvas &amp;&amp; Modernizr.localstorage &amp;&amp; \n    Modernizr.audio &amp;&amp; (Modernizr.audio.ogg || Modernizr.audio.mp3)) {\n  window.setTimeout(function () { PACMAN.init(el, \"./\"); }, 0);\n} else { \n  el.innerHTML = \"Sorry, needs a decent browser&lt;br /&gt;&lt;small&gt;\" + \n    \"(firefox 3.6+, Chrome 4+, Opera 10+ and Safari 4+)&lt;/small&gt;\";\n}\n//]]&gt;\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The parser is expecting some HTML content, so it sees <code>&amp;</code> as the beginning of an entity, like <code>&amp;egrave;</code>.</p>\n\n<p>Use this workaround:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n// &lt;![CDATA[\nJavascript code here\n// ]]&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>so you specify that the code is not HTML text but just data to be used as is.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Do</p>\n\n<pre><code>&lt;script&gt;//&lt;![CDATA[\n    /* script */\n//]]&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you use XHTML, for some reason, note that <a href=\"http://www.w3.org/TR/xhtml1/#C_4\" rel=\"nofollow\">XHTML 1.0 C 4</a> says: \u201cUse external scripts if your script uses &lt; or &amp; or ]]> or --.\u201d That is, don\u2019t embed script code inside a <code>script</code> element but put it into a separate JavaScript file and refer to it with <code>&lt;script src=\"foo.js\"&gt;&lt;/script&gt;</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>All answers posted so far are giving the right solutions, however no one answer was able to properly explain the underlying cause of the concrete problem.</p>\n\n<p>Facelets is a XML based view technology which uses XHTML+XML to generate HTML output. XML has five special characters which has special treatment by the XML parser: </p>\n\n<ul>\n<li><code>&lt;</code> the start of a tag.</li>\n<li><code>&gt;</code> the end of a tag.</li>\n<li><code>\"</code> the start and end of an attribute value.</li>\n<li><code>'</code> the alternative start and end of an attribute value.</li>\n<li><code>&amp;</code> the start of an entity (which ends with <code>;</code>).</li>\n</ul>\n\n<p>In case of <code>&amp;</code> which is not followed by <code>#</code> (e.g. <code>&amp;#160;</code> or <code>&amp;#xA0;</code>), the XML parser is implicitly looking for one of the <a href=\"http://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML\">predefined entity names</a> such as <code>lt</code>, <code>gt</code>, <code>amp</code>, etc. However, in your particular case, you was using <code>&amp;</code> as a JavaScript operator, not as an XML entity. This totally explains the XML parsing error you got:</p>\n\n<blockquote>\n  <p>The entity name must immediately follow the '&amp;' in the entity reference</p>\n</blockquote>\n\n<p>In essence, you're writing JavaScript code in the wrong place, a XML document instead of a JS file, so you should be escaping all XML special characters accordingly. The <code>&amp;</code> must be escaped as <code>&amp;amp;</code>.</p>\n\n<p>So, in your particular case, the</p>\n\n<pre><code>if (Modernizr.canvas &amp;&amp; Modernizr.localstorage &amp;&amp; \n</code></pre>\n\n<p>must become</p>\n\n<pre><code>if (Modernizr.canvas &amp;amp;&amp;amp; Modernizr.localstorage &amp;amp;&amp;amp;\n</code></pre>\n\n<p>to make it XML-valid.</p>\n\n<p>However, this makes the JavaScript code harder to read and maintain. As stated in Mozilla Developer Network's excellent document <a href=\"https://developer.mozilla.org/en/docs/Writing_JavaScript_for_XHTML\">Writing JavaScript for XHTML</a>, you should be placing the JavaScript code in a character data (CDATA) block. Thus, in JSF terms, that would be:</p>\n\n<pre><code>&lt;h:outputScript&gt;\n    &lt;![CDATA[\n        // ...\n    ]]&gt;\n&lt;/h:outputScript&gt;\n</code></pre>\n\n<p>The XML parser will interpret the block's contents as \"plain vanilla\" character data and not as XML and hence interpret the XML special characters \"as-is\".</p>\n\n<p>But, much better is to just put the JS code in its own JS file which you include by <code>&lt;script src&gt;</code>, or in JSF terms, the <code>&lt;h:outputScript&gt;</code>. </p>\n\n<pre><code>&lt;h:outputScript name=\"onload.js\" target=\"body\" /&gt;\n</code></pre>\n\n<p><em>(note the <code>target=\"body\"</code>; this way JSF will automatically render the <code>&lt;script&gt;</code> at the very end of <code>&lt;body&gt;</code>, regardless of where <code>&lt;h:outputScript&gt;</code> itself is located, hereby achieving the same effect as with <code>window.onload</code> and <code>$(document).ready()</code>; so you don't need to use those anymore in that script)</em></p>\n\n<p>This way you don't need to worry about XML-special characters in your JS code. As an additional bonus, this gives you the opportunity to let the browser cache the JS file so that total response size is smaller.</p>\n\n<h3>See also:</h3>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/13012327/the-entity-nbsp-was-referenced-but-not-declared/\">the entity nbsp was referenced but not declared</a></li>\n<li><a href=\"http://stackoverflow.com/questions/2935759/is-it-possible-to-use-jsffacelets-with-html-4-5\">Is it possible to use JSF+Facelets with HTML 4/5?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/8367421/how-to-reference-resource-in-facelets-template\">How to reference resource in Facelets template?</a></li>\n<li><a href=\"https://developer.mozilla.org/en/docs/Writing_JavaScript_for_XHTML\">Writing JavaScript for XHTML</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 53
                }
            ],
            "body": "<p>I want to put a packman game on my *.xhtml page.(I am using jsf 2 and primefaces 3.5)</p>\n\n<p>However,</p>\n\n<p>when I \"translated\" the html page in xhtml I get an error at this script:</p>\n\n<pre><code>    &lt;script&gt;\n\n    var el = document.getElementById(\"pacman\");\n\n    if (Modernizr.canvas &amp;&amp; Modernizr.localstorage &amp;&amp; \n        Modernizr.audio &amp;&amp; (Modernizr.audio.ogg || Modernizr.audio.mp3)) {\n      window.setTimeout(function () { PACMAN.init(el, \"./\"); }, 0);\n    } else { \n      el.innerHTML = \"Sorry, needs a decent browser&lt;br /&gt;&lt;small&gt;\" + \n        \"(firefox 3.6+, Chrome 4+, Opera 10+ and Safari 4+)&lt;/small&gt;\";\n    }\n  &lt;/script&gt;\n</code></pre>\n\n<p>At line:</p>\n\n<pre><code>if (Modernizr.canvas &amp;&amp; Modernizr.localstorage &amp;&amp; \n</code></pre>\n\n<p>i get:</p>\n\n<blockquote>\n  <p>The entity name must immediately follow the '&amp;' in the entity\n  reference.</p>\n</blockquote>\n\n<p>Any idea how to fix that?</p>\n",
            "last_activity_date": 1376678318,
            "question_id": 16303779,
            "score": 17,
            "tags": [
                "javascript",
                "xml",
                "jsf",
                "xhtml",
                "facelets"
            ],
            "title": "The entity name must immediately follow the &#39;&amp;&#39; in the entity reference"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>If you peruse the <a href=\"https://github.com/mbostock/d3/releases\">release notes</a>, you\u2019ll see a full explanation of everything that\u2019s changed between the final release of 2.x (2.10.3) and the most recent release, 3.2.7. In particular, from release 3.2.2:</p>\n\n<blockquote>\n  <p>Better handling of drag gestures in d3.behavior.drag, d3.behavior.zoom and d3.svg.brush by not preventing default behaviors or stopping propagation. For example, mousedown now changes focus, mouseup outside an iframe works correctly, and touchstart does not stutter.</p>\n</blockquote>\n\n<p>So, in V2, the drag behavior could take priority over the zoom behavior by stopping propagation on zoom events. In V3, this no longer happens automatically, giving you the choice of which behavior takes priority, and when. </p>\n\n<p>If you want to give the drag behavior priority when dragging nodes, then <strong>you need to <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation\">stopPropagation</a> on input events while dragging</strong> so that these events are not simultaneously interpreted as panning by the zoom behavior. Stopping propagation on dragstart is sufficient:</p>\n\n<pre><code>var drag = d3.behavior.drag()\n    .on(\"dragstart\", function() { d3.event.sourceEvent.stopPropagation(); })\n    .on(\"drag\", function() { /* handle drag event here */ });\n</code></pre>\n\n<p>Working example:</p>\n\n<p><a href=\"http://bl.ocks.org/mbostock/6123708\"><img src=\"http://i.stack.imgur.com/CqIza.png\" alt=\"drag and zoom\"></a></p>\n\n<p>Note: combining these two behaviors means that gesture interpretation is ambiguous and highly sensitive to position. A click on a circle is interpreted as dragging that circle, whereas a click one pixel away could be interpreted as panning the background. A more robust method of combining these behaviors is to employ modality. For example, if the user holds down the SPACE key, clicking and dragging is interpreted as panning, rather than dragging, regardless of the click location. This approach is commonly employed in commercial software such as Adobe Photoshop.</p>\n",
                    "is_accepted": true,
                    "score": 41
                }
            ],
            "body": "<p>I have a force layout that I have created using d3.js</p>\n\n<p>I would like to have both the normal functionality of a draggable force layout as well as the ability to zoom.</p>\n\n<p>I have basically copy/pasted the zooming code from this (<a href=\"http://jsfiddle.net/nrabinowitz/QMKm3/\">http://jsfiddle.net/nrabinowitz/QMKm3/</a>) code. This is the same way of zooming that Mike Bostock uses in this (<a href=\"http://bl.ocks.org/mbostock/3680957\">http://bl.ocks.org/mbostock/3680957</a>) example.</p>\n\n<p>Here is my code: <a href=\"http://jsfiddle.net/kM4Hs/6/\">http://jsfiddle.net/kM4Hs/6/</a></p>\n\n<p>As can be clearly seen in mine, the zooming works fine, but I am unable to select single nodes in the force layout and drag them around.</p>\n\n<p>I have found the culpret to be the fact that both the other authors use d3.v2.js rather than the newer d3.v3.js which I am using. When I change my import to v2 it works perfectly. However, in the interest of progress and just general good codeness, I would like to use v3 if possible.</p>\n\n<pre><code>&lt;script type='text/javascript' src='http://d3js.org/d3.v3.min.js'&gt;&lt;/script&gt;\n\n                    versus\n\n&lt;script type='text/javascript' src='http://d3js.org/d3.v2.min.js'&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Two questions: why does v3 break the force layout when v2 doesn't, and, more importantly, what can I do, if anything, to fix it?</p>\n\n<p>Thanks in advance!</p>\n",
            "last_activity_date": 1401793748,
            "question_id": 17953106,
            "score": 16,
            "tags": [
                "javascript",
                "svg",
                "d3.js",
                "force-layout"
            ],
            "title": "Why does d3.js v3 break my force graph when implementing zooming when v2 doesn&#39;t?"
        }
    ]
}
