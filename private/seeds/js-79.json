{
    "items": [
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You need a <code>/g</code> on there, like this:</p>\n\n<pre><code>var textTitle = \"this is a test\";\nvar result = textTitle.replace(/ /g, '%20');\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/m8UuD/\">You can play with it here</a>, the default <code>.replace()</code> behavior is to replace only the first match, <a href=\"http://www.w3schools.com/jsref/jsref_regexp_g.asp\">the <code>/g</code> modifier</a> (global) tells it to replace all occurrences.</p>\n",
                    "is_accepted": true,
                    "score": 58
                },
                {
                    "body": "<p>Try using <code>replaceWith()</code> or <code>replaceAll()</code></p>\n\n<p><a href=\"http://api.jquery.com/replaceAll/\" rel=\"nofollow\">http://api.jquery.com/replaceAll/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>textTitle.replace(/ /g, '%20');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://www.w3schools.com/jsref/jsref_replace.asp\" rel=\"nofollow\">From w3schools</a></p>\n\n<p>The replace() method searches for <em>a match</em> between a substring (or regular expression) and a string, and replaces the matched substring with a new substring</p>\n\n<p>Would be better to use a regex here then:</p>\n\n<pre><code>textTitle.replace(/ /g, '%20');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try using a regex instead of a string for the first argument.</p>\n\n<p><code>\"this is a test\".replace(/ /g,'%20')</code> // #=> \"this%20is%20a%20test\"</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<pre><code>var textTitle = \"this is a test\"\nvar result = textTitle.replace(' ', '%20');\n</code></pre>\n\n<p>But the replace functions stops at the first instance of the \" \" and I get the </p>\n\n<p>Result : <code>\"this%20is a test\"</code></p>\n\n<p>Any ideas on where Im going wrong im sure its a simple fix.</p>\n",
            "last_activity_date": 1278695251,
            "question_id": 3214886,
            "score": 31,
            "tags": [
                "javascript",
                "regex",
                "replace"
            ],
            "title": "JavaScript .replace only replaces first Match"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>It doesn't seem so. Some Googling finds several posts by others, and responses from JSLint people along the lines of \"Fix your code instead of labeling it intentionally defective.\" Doesn't seem entirely friendly. Of course, maybe in this case you should just fix the code, but I leave that for you to answer.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Yes. From the documentation at <a href=\"http://www.jslint.com/lint.html#options\">http://www.jslint.com/lint.html#options</a>:</p>\n\n<blockquote>\n  <p>The implementation of JSLint accepts an option  object that allows you to determine the subset of JavaScript that is acceptable to you. It is also possible to set those options within the source of a script.</p>\n  \n  <p>An option specification can look like this:</p>\n</blockquote>\n\n<pre><code>/*jslint nomen: true, debug: true,\n  evil: false, vars: true */\n</code></pre>\n\n<blockquote>\n  <p>An option specification starts with /*jslint. Notice that there is no space before the j. The specification contains a sequence of name value pairs, where the names are JSLint options, and the values are true or false. An option specification takes precedence over the option object.</p>\n</blockquote>\n\n<p>The documentation doesn't specifically mention it, but you can enable and disable different checks throughout the code with multiple jslint comments (thanks Dominic Mitchell).</p>\n\n<p>There is a <a href=\"http://www.jslint.com/lint.html#options\">complete list of options in the documentation</a>.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Put <code>/*jsl:ignore*/</code>  and  <code>/*jsl:end*/</code>  around the code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is a code example to supplement Matthew Crumley's excellent answer:</p>\n\n<pre><code>(function ($) {\n  $.isValidEmail = function(email){\n    /*jslint maxlen: 1000*/\n    var EMAIL_REGEXP = /^((([a-z]|\\d|[!#\\$%&amp;'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&amp;'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n    /*jslint maxlen: 200*/\n    return EMAIL_REGEXP.test(email);\n  };\n}(jQuery));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Put</p>\n\n<pre><code>/*ignore jslint start*/\n</code></pre>\n\n<p>before and</p>\n\n<pre><code>/*ignore jslint end*/ \n</code></pre>\n\n<p>after the code to be ignored. Ex:</p>\n\n<pre><code>function ignore(){\n    /*ignore jslint start*/\n    var x; var y;\n    /*ignore jslint end*/\n}\n</code></pre>\n\n<p>Or export JsLint settings, define your IgnoreErrorStart/ IgnoreErrorEnd symbols and import.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Nothing here has answered this question as far as I am able to tell. The following code still gives me validation errors and I can't get JSLint to accept that I don't have time to correct a working regular expression right now given ACTUAL PRIORITIES.</p>\n\n<p>The error I'm receiving regards an unescaped '{' and may result in my new, professional team rejecting JSLint as a feasible tool. There appears to be no way to shut it up regarding our efforts to develop more efficiently, which seems problematic.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>/*jslint browser: true, devel: true, todo: true, regexp: true */\n/*global $ */\n/*\n    Abstract:\n        + This module constitutes a layer of abstraction surrounding our bootstrap dependencies.\n        + This module also contains some utility functions (so find a better place for them already!).\n    Validation:\n        + This module has been validated using JSLint (www.jslint.com).\n*/\nvar shoelaceModule = (function () {\n    'use strict';\n    return {\n        showModal: function ($target) {\n            $target.modal('show');\n        },\n\n        hideModal: function ($target) {\n            $target.modal('hide');\n        },\n\n        /*jsl:ignore */\n        /*ignore jslint start */\n        stringFormat: function (format) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            return format.replace(/{([^{}]*)}/g, function (match, number) {\n                return args[number] !== 'undefined' ? args[number] : match;\n            });\n        },\n        /*ignore jslint end */\n        /*jsl:end */\n\n        init: function () {\n            return this;\n        }\n    };\n}());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Does <a href=\"http://www.jslint.com\">JSLint</a> have anything like JavaScript Lint's <a href=\"http://www.javascriptlint.com/docs/index.htm\">control comments</a> (e.g. <code>/*jsl:fallthru*/</code>) to make it ignore certain passages?</p>\n",
            "last_activity_date": 1416860707,
            "question_id": 599859,
            "score": 31,
            "tags": [
                "javascript",
                "jslint",
                "lint"
            ],
            "title": "JSLint: control comments (selective ignore)"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>I don't believe Eclipse has a JavaScript debugger - those breakpoints are for Java code (I'm guessing you are editing a JSP file?)</p>\n\n<p>Use <a href=\"http://getfirebug.com/\">Firebug</a> to debug Javascript code, it's an excellent add-on that all web developers should have in their toolbox.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>JavaScript is executed in the browser, which is pretty far removed from Eclipse.  Eclipse would have to somehow hook into the browser's JavaScript engine to debug it.  Therefore there's no built-in debugging of JavaScript via Eclipse, since JS isn't really its main focus anyways.</p>\n\n<p>However, there are plug-ins which you can install to do JavaScript debugging.  I believe the main one is the <a href=\"http://www.eclipse.org/atf/\" rel=\"nofollow\">AJAX Toolkit Framework (ATF)</a>.  It embeds a Mozilla browser in Eclipse in order to do its debugging, so it won't be able to handle cross-browser complications that typically arise when writing JavaScript, but it will certainly help.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I'm not a 100% sure but I think <a href=\"http://www.aptana.com\">Aptana</a> let's you do that.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I tried to get aptana running on my ubuntu 10.4. Unfortunately I didn't succeed. Chrome on the other hand, has an eclipse plugin that lets you debug javascript that's running in a chrome instance. Works very well. \nYOu'll have to install the eclipse plugin you'll find here:</p>\n\n<p><a href=\"http://code.google.com/p/chromedevtools/\">http://code.google.com/p/chromedevtools/</a></p>\n\n<p>Set Breakpoints in the javascript sources you edit in eclipse and browser your page in chrome. As soon as a javascript breakpoint is hit, the eclipse debugger halts and lets you step into, step over, browse the variables etc. Very nice!</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Use the debugging tools supported by the browser.  As mentioned above\nFirebug for Firefox\nChrome Developer Tools from Chrome\nIE Developer for IE.</p>\n\n<p>That way you can detect cross-browser issues.  To help reduce the cross-browser issues, use a javascript framework ie jQuery, YUI, moo tools, etc.</p>\n\n<p>Below is a screenshot (javascript-debug.png) of what it looks lime in Firebug.\n<br>1) hit 'F12'\n<br>2) click the 'Script' tab and 'enable it' (if you are already on your page - hit 'F5' to re-load)\n<br>3) next to the 'All' drop down, there will be another dropdown to the right.  Select your javascript file from that dropdown.\n<br> In the screenshot, I've set a break-point at line 42 by 'left-mouse-click'.  This will enable you to break, inspect, watch, etc.</p>\n\n<p><img src=\"http://i.stack.imgur.com/9rt8Y.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It's possible to debug JavaScript by setting breakpoints in Eclipse using the <a href=\"http://wiki.eclipse.org/ATF\" rel=\"nofollow\">AJAX Tools Framework</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In 2012, there are at least five choices for JavaScript debugging in Eclipse:</p>\n\n<ul>\n<li>New since Eclipse 3.7: <a href=\"http://www.eclipse.org/webtools/jsdt/debug/\">JavaScript Development Tools debugging support</a>. The incubation part lists <a href=\"https://github.com/mrennie/crossfire/wiki\">CrossFire</a> support. That means, one can use Firefox + Firebug as page viewer without any Java code changes.</li>\n<li>New since October 2012: <a href=\"http://eclipse.org/vjet/\">VJET JavaScript IDE</a></li>\n<li><a href=\"http://wiki.eclipse.org/ATF\">Ajax Tools Framework</a></li>\n<li><a href=\"http://www.aptana.com/products/studio3/\">Aptana</a> provides JavaScript debugging capabilities.</li>\n<li>The commercial <a href=\"http://www.myeclipseide.com/\">myeclipseide</a> also has <a href=\"http://www.myeclipseide.com/htmlpages-func-display-pid-62.html\">JavaScript debugging support</a></li>\n<li>The <a href=\"http://code.google.com/p/chromedevtools/\">Google Chrome Developer Tools for Java</a> allow debugging using Chrome.</li>\n</ul>\n\n<p>Adding to the above, here are a couple of videos which focus on \"debugging JavaScript using eclipse\"</p>\n\n<ul>\n<li><a href=\"http://www.youtube.com/watch?v=_uzSw_fb7NQ\">Debugging JavaScript using Eclipse and Chrome Tools</a> </li>\n<li><a href=\"http://www.youtube.com/watch?v=uvzqMmMDzUE\">Debugging JavaScript using Eclipse and CrossFire (with FB)</a> </li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>For Node.js there is <a href=\"http://github.com/nodeclipse/\" rel=\"nofollow\">Nodeclipse 0.2</a> with some bug fixes for <a href=\"http://code.google.com/p/chromedevtools/\" rel=\"nofollow\">chromedevtools</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can I debug  javascript in eclipse. I am using eclipse 3.2.1. Everytime I click on the side it gives  option for adding bookmark but no break point. Could anyone assist me on this?</p>\n",
            "last_activity_date": 1420749478,
            "question_id": 609316,
            "score": 30,
            "tags": [
                "javascript",
                "eclipse",
                "debugging",
                "remote-debugging"
            ],
            "title": "Debug javascript in Eclipse"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>This is the way to dynamically set the value</p>\n\n<pre><code>var jsonVariable = {};\nfor (var i = 1; i &lt; 3; i++) {\n    var jsonKey = i + 'name';\n    jsonVariable[jsonKey] = 'name' + i;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<pre><code>var jsonVariable = {};\nfor(var i=1; i &lt; 3; i++) {\n  jsonVariable[i + 'name'] = 'name' + i;        \n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 44
                },
                {
                    "body": "<p>You'll have to use <code>[]</code> notation to set keys dynamically.</p>\n\n<pre><code>var jsonVariable = {};\nfor(i=1; i&lt;3; i++) {        \n var jsonKey  = i+'name';\n jsonVariable[jsonKey] = 'name1';\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>check this out</p>\n\n<pre><code>jsonVariable = {};\nfor(i=1; i&lt;=3; i++) {        \n jsonVariable[i]=i+'name';\n}\ndocument.writeln(jsonVariable[1]);\ndocument.writeln(jsonVariable[2]);\ndocument.writeln(jsonVariable[3]);\n\n\u200b\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>jsonVariable = {}\nfor(i=1; i&lt;3; i++) {        \n   var jsonKey  = i+'name';\n   jsonVariable[jsonKey] = 'name1'\n}\n</code></pre>\n\n<p>this will be similar to </p>\n\n<pre><code>    jsonVariable = {\n    1name : 'name1'\n    2name : 'name1'\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am in need to set a JSON Key dynamically. So i need to set the key of json from another variable as follows,</p>\n\n<pre><code>for(i=1; i&lt;3; i++) {        \n var jsonKey  = i+'name';\n jsonVariable = {\n     jsonKey : 'name1',\n }\n}\n</code></pre>\n\n<p>so json output should be,</p>\n\n<pre><code>jsonVariable = {\n    1name : 'name1'\n    2name : 'name1'\n}\n</code></pre>\n",
            "last_activity_date": 1355289977,
            "question_id": 13833204,
            "score": 29,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "How To Set A JSON Key From A Variable"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>$.get() is just a shortcut for an $.ajax() call of type \"GET\".</p>\n\n<p>To Elaborate <code>$.get()</code> just calls <code>$.ajax()</code> in the background. Its a shortcut kind of like what <code>$(function(){})</code> is to <code>$(document).ready(function(){})</code>. Common use cases for <code>$.get</code> is for a quick and simple get, <code>$.ajax</code> should be used if you need to do something a bit more complex or if you need the extra flexibility.</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>In this case, I'd say <code>$.get</code>, as it's immediately clear what the type of request is. At any rate, it's just shorthand for the larger and more option-ified ajax call, and converting between the two is trivial in the worst case.</p>\n\n<p>If you think that you'll need fancy <code>$.ajax</code> options, use <code>$.ajax</code>. If you don't use the convenience methods jQuery provides, such as <code>.load</code>, <code>$.get</code>, etc.</p>\n",
                    "is_accepted": true,
                    "score": 26
                }
            ],
            "body": "<p>Let's say I want to execute a PHP script. Which way is better?</p>\n\n<p>This:</p>\n\n<pre><code>$.ajax({\n    type: \"GET\",\n    url: \"php-script.php\",\n    dataType: \"script\"\n});\n</code></pre>\n\n<p>Or this:</p>\n\n<pre><code>$.get(\"php-script.php\", function(data) { });\n</code></pre>\n",
            "last_activity_date": 1425468395,
            "question_id": 1344303,
            "score": 29,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery ajax() vs get()/post()"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>OK, never mind :)\nThe right answer is:</p>\n\n<p>change</p>\n\n<pre><code>document.getElementById('personlist').getElementsByTagName('option')[11].selected = 'selected'\n</code></pre>\n\n<p>to</p>\n\n<pre><code>document.getElementById('personlist').value=Person_ID;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<p>Array Index will start from 0...if you want value=11 (Person1) ..you will get with postion getElementsByTagName('option')[10].selected </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I Believe that the following link might help you.</p>\n\n<p><a href=\"http://www.imranulhoque.com/javascript/javascript-beginners-select-a-dropdown-option-by-value/\">http://www.imranulhoque.com/javascript/javascript-beginners-select-a-dropdown-option-by-value/</a></p>\n\n<pre><code>&lt;a href=\"javascript:void(0);\" onclick=\"selectItemByValue(document.getElementById('personlist'),11)\"&gt;change&lt;/a&gt;\n\nfunction selectItemByValue(elmnt, value){\n\n  for(var i=0; i &lt; elmnt.options.length; i++)\n  {\n    if(elmnt.options[i].value === value) {\n      elmnt.selectedIndex = i;\n      break;\n    }\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Here is all tools as Pure Java-Script code to handling Selectbox:</p>\n\n<p><strong><a href=\"http://jsfiddle.net/neerajkumarsingh/EpMcd/\" rel=\"nofollow\">Fiddler DEMO</a></strong></p>\n\n<p><strong>Java-Script Code:</strong></p>\n\n<pre><code>/**\n * Empty Select Box\n * @param eid Element ID\n * @param value text\n * @param text text\n * @author Neeraj.Singh\n */\n\nfunction emptySelectBoxById(eid, value, text) {\n    document.getElementById(eid).innerHTML = \"&lt;option value='\" + value + \"'&gt;\" + text + \"&lt;/option&gt;\";\n}\n/**\n * Reset Select Box\n * @param eid Element ID\n */\n\nfunction resetSelectBoxById(eid) {\n    document.getElementById(eid).options[0].selected = 'selected';\n}\n/**\n * Set Select Box Selection By Index\n * @param eid Element ID\n * @param eindx Element Index\n */\n\nfunction setSelectBoxByIndex(eid, eindx) {\n    document.getElementById(eid).getElementsByTagName('option')[eindx].selected = 'selected';\n    //or\n    document.getElementById(eid).options[eindx].selected = 'selected';\n}\n/**\n * Set Select Box Selection By Value\n * @param eid Element ID\n * @param eval Element Index\n */\n\nfunction setSelectBoxByValue(eid, eval) {\n    document.getElementById(eid).value = eval;\n}\n/**\n * Set Select Box Selection By Text\n * @param eid Element ID\n * @param eval Element Index\n */\n\nfunction setSelectBoxByText(eid, etxt) {\n    var eid = document.getElementById(eid);\n    for (var i = 0; i &lt; eid.options.length; ++i) {\n        if (eid.options[i].text === etxt)\n            eid.options[i].selected = true;\n    }\n}\n/**\n * Get Select Box Text By ID\n * @param eid Element ID\n * @return string\n */\n\nfunction getSelectBoxText(eid) {\n    return document.getElementById(eid).options[document.getElementById(eid).selectedIndex].text;\n}\n/**\n * Get Select Box Value By ID\n * @param eid Element ID\n * @return string\n */\n\nfunction getSelectBoxValue(id) {\n    return document.getElementById(id).options[document.getElementById(id).selectedIndex].value;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I have option menu like this:</p>\n\n<pre><code>&lt;form name=\"AddAndEdit\"&gt;\n&lt;select name=\"list\" id=\"personlist\"&gt;\n&lt;option value=\"11\"&gt;Person1&lt;/option&gt;\n&lt;option value=\"27\"&gt;Person2&lt;/option&gt;\n&lt;option value=\"17\"&gt;Person3&lt;/option&gt;\n&lt;option value=\"10\"&gt;Person4&lt;/option&gt;\n&lt;option value=\"7\"&gt;Person5&lt;/option&gt;\n&lt;option value=\"32\"&gt;Person6&lt;/option&gt;\n&lt;option value=\"18\"&gt;Person7&lt;/option&gt;\n&lt;option value=\"29\"&gt;Person8&lt;/option&gt;\n&lt;option value=\"28\"&gt;Person9&lt;/option&gt;\n&lt;option value=\"34\"&gt;Person10&lt;/option&gt;\n&lt;option value=\"12\"&gt;Person11&lt;/option&gt;\n&lt;option value=\"19\"&gt;Person12&lt;/option&gt;\n&lt;/select&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>And now I want to change selected option by using a href. For example:</p>\n\n<pre><code>&lt;a href=\"javascript:void(0);\" \n  onclick=\"document.getElementById('personlist').getElementsByTagName('option')[11].selected = 'selected';\"&gt;change&lt;/a&gt;\n</code></pre>\n\n<p>ButI want to select option with <code>value=11 (Person1)</code> not <code>Person12</code>.</p>\n\n<p>How to change this code?</p>\n",
            "last_activity_date": 1396348398,
            "question_id": 10911526,
            "score": 27,
            "tags": [
                "javascript",
                "html-select"
            ],
            "title": "How to change html selected option using JavaScript?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Sorry to say, but the answer is no if emptying location.hash doesn't accomplish the task !-)</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Since you are controlling the action on the hash value, why not just use a token that means \"nothing\", like \"#_\" or \"#default\".</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<pre><code>$(document).ready(function() {\n        $(\".lnk\").click(function(e) {\n            e.preventDefault();\n            $(this).attr(\"href\", \"stripped_url_via_desired_regex\");\n        });\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>So use </p>\n\n<p><code>parent.location.hash = ''</code> first</p>\n\n<p>then do</p>\n\n<pre><code>window.location.href=window.location.href.slice(0, -1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There is also another option instead of using hash, \nyou could use <code>javascript: void(0);</code>\nExample: <code>&lt;a href=\"javascript:void(0);\" class=\"open_div\"&gt;Open Div&lt;/a&gt;</code></p>\n\n<p>I guess it also depends on when you need that kind of link, so you better check the following links:</p>\n\n<p>How to use it: <a href=\"http://www.brightcherry.co.uk/scribbles/2010/04/25/javascript-how-to-remove-the-trailing-hash-in-a-url/\" rel=\"nofollow\">http://www.brightcherry.co.uk/scribbles/2010/04/25/javascript-how-to-remove-the-trailing-hash-in-a-url/</a>\nor check debate on what is better here: <a href=\"http://stackoverflow.com/questions/134845/href-for-javascript-links-or-javascriptvoid0\">Href for Javascript links: \"#\" or \"javascript:void(0)\"?</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As others have said, you can't do it. Plus... seriously, as the <a href=\"http://balupton.com/sandbox/jquery-ajaxy/demo/\" rel=\"nofollow\">jQuery Ajaxy</a> author - I've deployed complete ajax websites for years now - and I can guarantee no end user has ever complained or perhaps ever even noticed that there is this hash thing going on, user's don't care as long as it works and their getting what they came for.</p>\n\n<p>A proper solution though is HTML5 PushState/ReplaceState/PopState ;-) Which doesn't need the fragement-identifier anymore:\n<a href=\"https://developer.mozilla.org/en/DOM/Manipulating_the_browser_history\" rel=\"nofollow\">https://developer.mozilla.org/en/DOM/Manipulating_the_browser_history</a>\nFor a HTML5 and HTML4 compatible project that supports this HTML5 State Functionality check out <a href=\"https://github.com/browserstate/History.js\" rel=\"nofollow\">https://github.com/browserstate/History.js</a> :-)</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>You could use the shiny new HTML5 <code>window.history.pushState</code> and <code>replaceState</code> methods, as described in <a href=\"http://asciicasts.com/episodes/246-ajax-history-state\" rel=\"nofollow\">ASCIIcasts 246: AJAX History State</a> and <a href=\"https://github.com/blog/760-the-tree-slider\" rel=\"nofollow\">on the GitHub blog</a>. This lets you change the entire path (within the same origin host) not just the fragment. To try out this feature, <a href=\"https://github.com/chrisboyle/sgtpuzzles\" rel=\"nofollow\">browse around a GitHub repository</a> with a recent browser.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As others have mentioned, <a href=\"https://developer.mozilla.org/en-US/docs/DOM/Manipulating_the_browser_history#The_replaceState%28%29.C2.A0method\">replaceState</a> in HTML5 can be used to remove the URL fragment.</p>\n\n<p>Here is an example:</p>\n\n<pre><code>// remove fragment as much as it can go without adding an entry in browser history:\nwindow.location.replace(\"#\");\n\n// slice off the remaining '#' in HTML5:    \nif (typeof window.history.replaceState == 'function') {\n  history.replaceState({}, '', window.location.href.slice(0, -1));\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                }
            ],
            "body": "<p><strong>Background:</strong> I have an HTML page which lets you expand certain content. As only small portions of the page need to be loaded for such an expansion, it's done via JavaScript, and not by directing to a new URL/ HTML page. However, as a bonus the user is able to permalink to such expanded sections, i.e. send someone else a URL like</p>\n\n<p><em><a href=\"http://example.com/#foobar\">http://example.com/#foobar</a></em></p>\n\n<p>and have the \"foobar\" category be opened immediately for that other user. This works using parent.location.hash = 'foobar', so that part is fine.</p>\n\n<p><strong>Now the question:</strong> When the user closes such a category on the page, I want to empty the URL fragment again, i.e. turn <a href=\"http://example.com/#foobar\">http://example.com/#foobar</a> into <a href=\"http://example.com/\">http://example.com/</a> to update the permalink display. However, doing so using <code>parent.location.hash = ''</code> causes a reload of the whole page (in Firefox 3, for instance), which I'd like to avoid. Using <code>window.location.href = '/#'</code> won't trigger a page reload, but leaves the somewhat unpretty-looking \"#\" sign in the URL. So is there a way in popular browsers to JavaScript-remove a URL anchor including the \"#\" sign without triggering a page refresh?</p>\n",
            "last_activity_date": 1376390748,
            "question_id": 269044,
            "score": 27,
            "tags": [
                "javascript",
                "html",
                "url",
                "fragment-identifier"
            ],
            "title": "Remove fragment in URL with JavaScript w/out causing page reload"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>An additional callback function after your first callback function should fire when there is an error. Taken from the <a href=\"http://docs.angularjs.org/api/ngResource.%24resource\">docs</a> and group <a href=\"https://groups.google.com/d/msg/angular/tBVHfGCMeEs/tkbKQfMzDWcJ\">post</a>:</p>\n\n<pre><code>$scope.word = Word.get({ id : $routeParams.id }, function() {\n    //good code\n}, function(response) {\n    //404 or bad\n    if(response.status === 404) {\n    }\n});\n</code></pre>\n\n<blockquote>\n  <ul>\n  <li>HTTP GET \"class\" actions: Resource.action([parameters], [success], [error])</li>\n  <li>non-GET \"class\" actions: Resource.action([parameters], postData, [success], [error])</li>\n  <li>non-GET instance actions: instance.$action([parameters], [success], [error])</li>\n  </ul>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>Just to answer @Adio 's question too.</p>\n\n<p>The second callback will be called when any http response code is considered to be an error by AngularJS (only response codes in [200, 300] are considered success codes). So you can have a general error handling function and don't care about the specific error.\nThe if statement there can be used to do different actions depending on the error code, but it's not mandatory.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Does anyone know how you can check to see that a resource failed to be fetched in AngularJS?</p>\n\n<p>For example:</p>\n\n<pre><code>//this is valid syntax\n$scope.word = Word.get({ id : $routeParams.id },function() {\n    //this is valid, but won't be fired if the HTTP response is 404 or any other http-error code\n});\n\n//this is something along the lines of what I want to have \n//(NOTE THAT THIS IS INVALID AND DOESN'T EXIST)\n$scope.word = Word.get({ id : $routeParams.id },{\n    success : function() {\n      //good\n    },\n    failure : function() {\n      //404 or bad\n    }\n});\n</code></pre>\n\n<p>Any ideas?</p>\n",
            "last_activity_date": 1362898882,
            "question_id": 11598097,
            "score": 25,
            "tags": [
                "javascript",
                "json",
                "angularjs"
            ],
            "title": "AngularJS Failed Resource GET"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><a href=\"https://developer.mozilla.org/En/Window.location\">https://developer.mozilla.org/En/Window.location</a></p>\n\n<p><code>host....</code>: the host name and port number. <em>[www.google.com]:80</em><br>\n<code>hostname</code>: the host name (without the port number or square brackets). <em>www.google.com</em></p>\n",
                    "is_accepted": true,
                    "score": 38
                }
            ],
            "body": "<p>They both seem to give me the same thing (the domain name currently executing the script).</p>\n\n<p>So what's the difference (if any) and where should each be used?</p>\n",
            "last_activity_date": 1309529697,
            "question_id": 6549117,
            "score": 25,
            "tags": [
                "javascript"
            ],
            "title": "Whats the difference between window.location.host and window.location.hostname"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>For empty string, they are different.</p>\n\n<p><code>+\"\"</code> and <code>Number(\"\")</code> returns 0, while <code>parseFloat(\"\")</code> returns NaN.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As far as I know, and this is only overheard from colleagues so might be entirely ill informed, that parseFloat is marginally faster.</p>\n\n<p>Though on further researching, it would seem that this performance difference is browser dependant.</p>\n\n<p><a href=\"http://jsperf.com/parseint-vs-parsefloat/6\" rel=\"nofollow\">http://jsperf.com/parseint-vs-parsefloat/6</a></p>\n\n<p>Have a look at these jsPerf results, and make you're call. (it includes +x tests as well)</p>\n\n<p>As noted in @xdazz 's answer, <code>+\"\"</code> and <code>Number(\"\")</code> return <code>0</code> while <code>parseFloat(\"\")</code> returns <code>NaN</code> so Again I would go with parseFloat, because an empty string does NOT mean the number 0, only a string with the character <code>\"0\"</code> in it means 0;</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The difference is what happens when the input is not a \"proper number\". <code>Number</code> returns <code>NaN</code> while <code>parseFloat</code> parses \"as much as it can\". If called on the empty string <code>Number</code> returns <code>0</code> while parseFloat returns <code>NaN</code>.</p>\n\n<p>For example:</p>\n\n<pre><code>Number(\"\") === 0         // also holds for false\nparseFloat(\"\") === NaN   // and null\n\nNumber(\"32f\") === NaN\nparseFloat(\"32f\") === 32\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In these examples you can see the difference:</p>\n\n<pre><code>Number('') = 0;\nNumber(false) = 0;\nNumber('1a') = NaN;\n\nparseFloat('') = NaN;\nparseFloat(false) = NaN;\nparseFloat('1a') = 1;\n</code></pre>\n\n<p>parseFloat is a bit slower because it searches for first appearance of a number in a string, while the Number constuctor creates a new number instance from strings that contains numeric values with whitespace or that contains false values.</p>\n\n<p>P.S. If you are interested in some universal type conversion solutions you can read the post about type conversion in my blog: <a href=\"http://justsimplejs.blogspot.com/2012/08/data-type-conversion.html\" rel=\"nofollow\">http://justsimplejs.blogspot.com/2012/08/data-type-conversion.html</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<h2>The difference between parseFloat and Number</h2>\n\n<p><code>parseFloat</code>/<code>parseInt</code> is for parsing a string, while <code>Number</code>/<code>+</code> is for coercing a value to a number. They behave differently. But first let's look at where they behave the same:</p>\n\n<pre><code>parseFloat('3'); // =&gt; 3\nNumber('3'); // =&gt; 3\nparseFloat('1.501'); // =&gt; 1.501\nNumber('1.501'); // =&gt; 1.501\nparseFloat('1e10'); // =&gt; 10000000000\nNumber('1e10'); // =&gt; 10000000000\n</code></pre>\n\n<p>So as long as you have standard numeric input, there's no difference. However, if your input starts with a number and then contains other characters, <code>parseFloat</code> truncates the number out of the string, while <code>Number</code> gives <code>NaN</code> (not a number):</p>\n\n<pre><code>parseFloat('1x'); // =&gt; 1\nNumber('1x'); // =&gt; NaN\n</code></pre>\n\n<p>In addition, <code>Number</code> understands hexadecimal input while <code>parseFloat</code> does not:</p>\n\n<pre><code>parseFloat('0x10'); // =&gt; 0\nNumber('0x10'); // =&gt; 16\n</code></pre>\n\n<p>But <code>Number</code> acts weird with empty strings or strings containing only white space:</p>\n\n<pre><code>parseFloat(''); // =&gt; NaN\nNumber(''); // =&gt; 0\nparseFloat(' \\r\\n\\t'); // =&gt; NaN\nNumber(' \\r\\n\\t'); // =&gt; 0\n</code></pre>\n\n<p>On the whole, I find <code>Number</code> to be more reasonable, so I almost always use <code>Number</code> personally (and you'll find that a lot of the internal JavaScript functions use <code>Number</code> as well). If someone types <code>'1x'</code> I prefer to show an error rather than treat it as if they had typed <code>'1'</code>. The only time I really make an exception is when I am converting a style to a number, in which case <code>parseFloat</code> is helpful because styles come in a form like <code>'3px'</code>, in which case I want to drop the <code>'px'</code> part and just get the <code>3</code>, so I find <code>parseFloat</code> helpful here. But really which one you choose is up to you and which forms of input you want to accept.</p>\n\n<p>Note that using the unary <code>+</code> operator is exactly the same as using <code>Number</code> as a function:</p>\n\n<pre><code>Number('0x10'); // =&gt; 16\n+'0x10'; // =&gt; 16\nNumber('10x'); // =&gt; NaN\n+'10x'; // =&gt; NaN\nNumber('40'); // =&gt; 40\n+'40'; // =&gt; 40\n</code></pre>\n\n<p>So I usually just use <code>+</code> for short. As long as you know what it does, I find it easy to read.</p>\n",
                    "is_accepted": true,
                    "score": 66
                }
            ],
            "body": "<p>Which is better? </p>\n\n<p>I'm asking this just for the sake of shaving a few bytes, as I can use +x instead of number(x). Does parsefloat do something better?</p>\n\n<p>EDIT:</p>\n\n<p>Verdict - parseFloat. Even if using <code>+(x)</code> would save a few bytes, parseFloat salvages as much as possible from a string/number combo.</p>\n",
            "last_activity_date": 1386166281,
            "question_id": 12227594,
            "score": 24,
            "tags": [
                "javascript",
                "optimization"
            ],
            "title": "Which is better, number(x) or parseFloat(x)?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Found a solution.</p>\n\n<p>Appending <code>.forceY([0,100])</code> to the instantiation of the chart forces the axis to take on the range specified in the array.</p>\n\n<p>From the example here <a href=\"http://nvd3.org/livecode/#codemirrorNav\">http://nvd3.org/livecode/#codemirrorNav</a></p>\n\n<p>Appending <code>.forceY([0,100])</code> to the chart variable works.</p>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>As the name should suggest, this adds the values in the array to your y domain, it does not set the y domain to [0,100].  So if you set this to [0,100] and your data's domain is -10 to 110, the domain will be [-10,110].  Now if you wanted the domain to be [0,100] even if your data is larger you can use chart.yDomain([0,100]) ... BUT usually you want your domain to include or your data, so I highly recommend using chart.forceY instead of chart.yDomain.  As you'll see, one of the most common uses for forceY is forceY([0]) to make 0 always in the domain.</p>\n\n<p>Hope that helps you understand what the function is actually doing, and arboc7, this should explain why it does nt work in making the range smaller than the data set's.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>For stacked area charts, .forceY([0,100]) does not work. \nUse instead .yDomain([0,100])</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If you mean setting the y-domain (the range of numbers that should be displayed), for stacked area chart</p>\n\n<p><code>nv.models.stackedAreaChart().x(function(d) {...}).y(function(d) {...}).yDomain([0, maxY]).width().</code> etc.</p>\n\n<p>worked for me.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to set the y-axis range of the chart from 1-100.</p>\n\n<p>Consulted the API documentation and found a possible solution with axis.tickValues as seen here\n<a href=\"https://github.com/mbostock/d3/wiki/SVG-Axes#wiki-tickValues\">https://github.com/mbostock/d3/wiki/SVG-Axes#wiki-tickValues</a></p>\n\n<p>However, using the option does not work. Reading further down on the documentation page linked above under axis.tickSize, the following line was spotted</p>\n\n<blockquote>\n  <p>The end ticks are determined by the associated scale's domain extent,\n  and are part of the generated path domain rather than a tick line</p>\n</blockquote>\n\n<p>So I take it setting the min and max of the range can't be done through the Axis option.</p>\n\n<p>Any ideas on where I can specify the range?</p>\n",
            "last_activity_date": 1386877285,
            "question_id": 11766879,
            "score": 24,
            "tags": [
                "javascript",
                "d3.js",
                "nvd3.js"
            ],
            "title": "d3.js &amp; nvd3.js -- How to set y-axis range"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>If you were using text-based sizes (em, ex) it'd be a lot easier.  You can then deal in letters rather than pixels.</p>\n\n<p>Example:  The whole thing is 30 capital letter Ms wide. You can then use the width of each nav element (based on its textual content) and do your math statically from there.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>AFAIK there is no way to achieve this just with CSS.\nAnybody correct me if this is wrong, pls.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you use the Yahoo! User Interface Library (YUI) <a href=\"http://developer.yahoo.com/yui/grids/\" rel=\"nofollow\">grids.css</a>, it might work. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is what display:table-cell is supposed to achieve - however, the IE's just don't do it, and FF&lt;3 has problems with it too, I believe.</p>\n\n<p>These styles work in FF3, Chrome, Safari, and (I think) Opera 9:</p>\n\n<pre><code>#menu ul {display:table;padding:0;}\n#menu li {display:table-cell;text-align:center;}\n</code></pre>\n\n<p>But you'll need a fair few hacks to get them working in the usual, commercial set of browsers.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Yes, you can do it, as long as the widths of the elements to be distributed are known in advance. But it's a bit messy.</p>\n\n<p>The trick is, you want a spacing between each element of \u2018(Wp-sum(Wc))/(Nc-1)\u2019, that is width of the parent element minus the total width of all the child elements, divided equally between the number of gaps between the elements.</p>\n\n<p>Because CSS doesn't have the ability to do expressions, we have to hack it a bit. First we add a margin to the parent element of the size \u2018sum(Wc)\u2019, the total width of all child elements. So now the parent has width \u2018(Wp-sum(Wc))\u2019, and we can use a padding value in % relative to that width.</p>\n\n<p>So for example, for four images of sizes 10px, 20px, 40px and 80px respectively, our \u2018sum(Wc)\u2019 is 150px. Set that as the parent margin, then the children can have one-third of that width as padding between them.</p>\n\n<pre><code>&lt;style type=\"text/css\"&gt;\n    #nava { width: 10px; height: 20px;}\n    #navb { width: 20px; height: 20px;}\n    #navc { width: 40px; height: 20px;}\n    #navd { width: 80px; height: 20px;}\n\n    #nav { margin-right: 150px; white-space: nowrap; }\n    #nava, #navb, #navc { padding-right: 33.3%; }\n&lt;/style&gt;\n\n&lt;div id=\"nav\"\n    &gt;&lt;img id=\"nava\" src=\"nava.png\" alt=\"a\"\n    &gt;&lt;img id=\"navb\" src=\"navb.png\" alt=\"b\"\n    &gt;&lt;img id=\"navc\" src=\"navc.png\" alt=\"c\"\n    &gt;&lt;img id=\"navd\" src=\"navd.png\" alt=\"d\"\n&gt;&lt;/div&gt;\n</code></pre>\n\n<p>The funny tag indentation is to avoid there being any whitespace between images. \u2018nowrap\u2019 is necessary because with the parent width set narrower than the page width, it wouldn't otherwise be possible to fit all the elements on the row. Finally, in IE you may need to add a wrapper div around the lot with \u2018width: 100%; overflow: hidden\u2019 to prevent unwanted scrollbars if you're spanning the whole page. And certainly you'll want to be in Standards Mode.</p>\n\n<p>This can work with textual elements too, if you make them inline blocks so you can add padding, and you size them explicitly in ems. It won't work if the sizes of the child elements are not known in advance (eg. they contain dynamic content), as you won't know the \u2018sum(Wc)\u2019 value to use.</p>\n\n<p>To be honest I would probably just use a table. The table layout algorithm copes very smoothly with calculating how to distribute spare table width. (Use \u2018table-layout: fixed\u2019 for best results with known-width cells, or \u2018auto\u2019 to respond to dynamic contents.) This way you also don't have to worry about pixel rounding errors.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Of course this is exactly what the <em>table</em> element is for. It's sad and hilarious at the same time to see people twist themselves into a gordian knot with CSS, most of them not even knowing <em>why</em> they're avoiding tables.</p>\n\n<p>Whatever reason you might have dreamed up to reject tables, it can't possibly be worse than depending on Javascript to layout your page.</p>\n\n<p>Yes, I know this is not the answer you were looking for, but golly, it's so <em>obvious</em>.</p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>Here is the code in jQuery format for anyone who finds it useful</p>\n\n<pre><code>function justifyClients() {\n                        var menuItems  = $(\"#clients-wrapper ul li\").get();                         \n                        var menuWidth  = $(\"#clients-wrapper ul\").width();                          \n                        var totalWidth = 0;\n\n                        $(\"#clients-wrapper ul li\").each(function(i,e)\n                                        {\n                                            totalWidth += $(e).width();\n                                        });\n\n                        var margin = (menuWidth - 4 - totalWidth) / ($(\"#clients-wrapper ul li\").length - 1);\n                        margin = parseInt(margin);\n\n                        $(\"#clients-wrapper ul li\").each(function(i,e) {\n\n                            if(i &lt; $(\"#clients-wrapper ul li\").length - 1)\n                            {\n                                alert(i + \" \" + $(\"#clients-wrapper ul li\").length);\n                                $(e).css('margin-right',  margin);\n                            }\n                        });\n                    }\n\n                    $(document).ready(function() {\n                      justifyClients();\n                    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There have been casual claims that tables are the obvious solution, however, there hasn't been any real discussion of how to implement it. I'll show you that displaying divs as a table is the right way to do this, but it is not as easy as centering all of the cells and setting an automatic width. The problem with this is that you have no control of the outer margins of the further-most left and right cell-contents. They both are inset from its containing box an arbitrary amount you cannot control. Here's a work around:</p>\n\n<p>First, a slight modification of Guder's html:</p>\n\n<pre><code>&lt;div id=\"menu\"&gt;\n    &lt;ul&gt;\n        &lt;li class=\"left\"&gt;&lt;a href=\"/\"&gt;Home&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"/news\"&gt;News&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"/theme\"&gt;Theme&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"/activities\"&gt;Activities&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"/contact\"&gt;Contact&lt;/a&gt;&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Now the css:</p>\n\n<pre><code>#menu {display:table; width:// some width in px //}\n#menu ul {display:table-row; width: 100%}\n#menu li.left {display: table-cell; text-align: left; width: 20px; white-space:nowrap;}\n#menu li {display: table-cell; text-align: right; width: auto;}\n</code></pre>\n\n<p>Now, we have full control of the outer-most sides of the menu, which align with the far-left and far-right sides of the containing box, and the distance between each element is consistent. You'll notice that I used a trick to get the furthest left cell to be the exact-width of it's content. I set the width property to a small size obviously below what its contents would normally be. I then set the white-space to no-wrap, which stretches the cell the least amount to fit the text of the cell. You can see here an image which shows the effect of this (using different html elements):</p>\n\n<p><img src=\"http://i.stack.imgur.com/6A2bP.png\" alt=\"riffing on cats\"></p>\n\n<p>The beauty of this code is that it can accept however many cells and text-widths, without any knowledge of their actual widths, and distribute them evenly across the page. All the while, left and right elements reaching their perimeters, and ofcourse we have all our html in divs, no browser or internet geek is mislead to believe we're presenting tabular data. No known compromises here!</p>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>Even though Colin Brogan's answer provides solid foundation to approach a \"almost there\" resolution to the problem, it still depends on text length. If text is too long, the \"cell\" will be wider and thus have more space on the left. I tried to address the problem based on the code presented in his answer, but I concluded that the problem has not a real possible solution with tables or fake-tables (display:table-cell).</p>\n\n<p>So we'll have to wait for CSS3 flexible box model to be more widely supported (you can check updated support <a href=\"http://caniuse.com/#feat=flexbox\" rel=\"nofollow\">here</a>). In the meantime, you can use the <a href=\"https://github.com/doctyper/flexie\" rel=\"nofollow\">Flexie</a> polyfill to patch browsers that don't support it.\nIf you want to check how it'll look like on WebKit now (without needing polyfill), you can try the following CSS:</p>\n\n<pre><code>#menu ul {\n  display: -webkit-box;\n  -webkit-box-orient: horizontal;\n  -webkit-box-pack: justify;\n  width: 940px;\n  list-style: none;\n  padding: 0;\n  border: 1px solid gray;\n}\n#menu li {\n  border: 1px solid silver;\n}\n</code></pre>\n\n<p>Notice it only uses WebKit prefixes. You should add prefixes for the other browsers aswell if you decide to take it to production website.</p>\n\n<p><strong>This approach does accept an unknown amount of items and text-widths, without any knowledge of their actual widths</strong>, and distribute them evenly across their container (in this case, <code>#menu ul</code>).</p>\n\n<p>If you decide to be conservative, the approach suggested by Colin Brogan is the most acceptable given that you keep your texts on the same approximately length. If not, wider spaces will start to show.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The top answer didn't work for me, and GarciaWebDev's answer won't do it for me yet because I need to support a few other browsers, including IE8.</p>\n\n<p><a href=\"http://dr2ab.wordpress.com/2011/03/24/even-horizontal-spacing-of-menu-items-with-css/\" rel=\"nofollow\">This method</a> worked for me. The idea is to make a containing element text-align: justify and to make the elements to distribute display: inline-block.</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div id=\"menu\"&gt;\n    &lt;ul&gt;\n        &lt;li&gt;&lt;a href=\"/\"&gt;Home&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"/news\"&gt;News&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"/theme\"&gt;Theme&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"/activities\"&gt;Activities&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"/contact\"&gt;Contact&lt;/a&gt;&lt;/li&gt;\n        &lt;li class=\"filler\"&gt;&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>#menu {\n    text-align: justify;\n}\n\nul {\n    margin: 0;\n    padding: 0;\n}\n\n#menu li {\n    display: inline-block;\n}\n\n.filler {\n    width: 100%;\n    height: 0;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Demo - <a href=\"http://codepen.io/vsync/pen/tFwxu\" rel=\"nofollow\">http://codepen.io/vsync/pen/tFwxu</a></p>\n\n<p>all you need if to make the list itself <code>text-align:justify</code> and then add some pseudo item top the end of it and make it fill all the width, to trick the list into justifying all it's items across it's total width.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Trevor Dixon's improved variant (without extra <code>&lt;li&gt;</code>)</p>\n\n<p>HTML   </p>\n\n<pre><code>&lt;ul&gt;\n    &lt;li&gt;&lt;a href=\"/\"&gt;Home&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"/news\"&gt;News&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"/theme\"&gt;Theme&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"/activities\"&gt;Activities&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"/contact\"&gt;Contact&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>CSS</p>\n\n<pre><code>ul {\n    margin: 0;\n    padding: 0;\n}\nul li {\n    display: inline-block;\n    text-align: justify;\n}\nul:after{\n    display: inline-block;\n    content: '';\n    width: 100%;\n    height: 0;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>A method to distribute elements evenly in a container using CSS <a href=\"http://www.smashingmagazine.com/2009/03/23/ask-sm-equal-spacing-css-image-replacement-max-side-on-images/\">appeared on Smashing Magazine</a> today.</p>\n\n<p>I recently had to use Javascript to achieve the same effect for elements of variable width, but the method presented on SM made me wonder if it was possible to do this without Javascript.</p>\n\n<p>There's <a href=\"http://stackoverflow.com/questions/601096/distributing-inline-elements-using-css\">this question</a>, where <a href=\"http://stackoverflow.com/users/64586/gargantaun\">gargantaun</a> says:</p>\n\n<blockquote>\n  <p>IMHO, and you probably don't want to hear this, but the design is probably flawed. It's common knowledge that distributing items evenly across a layout with CSS is a pain, so designers should avoid it.</p>\n</blockquote>\n\n<p>But I can't tell the designer to change his design, and I don't agree that the shortcomings of CSS should limit designers.</p>\n\n<p>Anyway, here's what I have in HTML (translated and simplified):</p>\n\n<pre><code>&lt;div id=\"menu\"&gt;\n    &lt;ul&gt;\n        &lt;li&gt;&lt;a href=\"/\"&gt;Home&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"/news\"&gt;News&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"/theme\"&gt;Theme&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"/activities\"&gt;Activities&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"/contact\"&gt;Contact&lt;/a&gt;&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>in CSS (irrelevant properties removed and simplified):</p>\n\n<pre><code>#menu li { float: left; margin-right: 20px; }\n#menu a  { display: block; padding: 0 1em; }\n</code></pre>\n\n<p>and in Javascript:</p>\n\n<pre><code>function justifyMenu() {\n    var menuItems  = $$(\"#menu li\");\n    var menuWidth  = $(\"menu\").getWidth();\n    var totalWidth = 0;\n\n    menuItems.each(function(e) {\n        totalWidth += e.getWidth();\n    });\n\n    var margin = (menuWidth - 4 - totalWidth) / (menuItems.length - 1);\n    margin = parseInt(margin);\n\n    menuItems.each(function(e) {\n        e.setStyle({ marginRight: margin + 'px' });\n    });\n\n    menuItems[menuItems.length - 1].setStyle({ marginRight: '0' });\n}\n</code></pre>\n\n<p>And here's a scaled-down screenshot (see how the menu aligns with the header image):</p>\n\n<p><img src=\"http://i41.tinypic.com/2ntguf8.png\" alt=\"screenshot\" /></p>\n\n<p>Any idea how I can achieve this without Javascript?</p>\n",
            "last_activity_date": 1407488171,
            "question_id": 674045,
            "score": 24,
            "tags": [
                "javascript",
                "css"
            ],
            "title": "Distribute elements evenly using CSS"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>Uncaught TypeError: undefined is not a function example_app.js:7</p>\n</blockquote>\n\n<p>This error message tells the whole story.  On this line, you are trying to execute a function.  However, whatever is being executed is not a function! Instead, it's <code>undefined</code>.</p>\n\n<p>So what's on <code>example_app.js</code> line 7? Looks like this:</p>\n\n<pre><code>var tasks = new ExampleApp.Collections.Tasks(data.tasks);\n</code></pre>\n\n<p>There is only one function being run on that line. We found the problem! <code>ExampleApp.Collections.Tasks</code> is <code>undefined</code>.</p>\n\n<p>So lets look at where that is declared:</p>\n\n<pre><code>var Tasks = Backbone.Collection.extend({\n    model: Task,\n    url: '/tasks'\n});\n</code></pre>\n\n<p>If that's all the code for this collection, then the root cause is right here. You assign the constructor to global variable, called <code>Tasks</code>. But you never add it to the <code>ExampleApp.Collections</code> object, a place you later expect it to be.</p>\n\n<p>Change that to this, and I bet you'd be good.</p>\n\n<pre><code>ExampleApp.Collections.Tasks = Backbone.Collection.extend({\n    model: Task,\n    url: '/tasks'\n});\n</code></pre>\n\n<p>See how important the proper names and line numbers are in figuring this out? Never ever regard errors as binary (it works or it doesn't). Instead read the error, in most cases the error message itself gives you the critical clues you need to trace through to find the real issue.</p>\n\n<hr>\n\n<p>In Javascript, when you execute a function, it's evaluated like:</p>\n\n<pre><code>expression.that('returns').aFunctionObject(); // js\nexecute -&gt; expression.that('returns').aFunctionObject // what the JS engine does\n</code></pre>\n\n<p>That expression can be complex.  So when you see <code>undefined is not a function</code> it means that expression did not return a function object.  So you have to figure out why what you are trying to execute isn't a function.</p>\n\n<p>And in this case, it was because you didn't put something where you thought you did.</p>\n",
                    "is_accepted": true,
                    "score": 54
                }
            ],
            "body": "<p>I'm setting up a pretty simple app with backbone, and I'm getting an error.</p>\n\n<pre><code>Uncaught TypeError: undefined is not a function example_app.js:7\nExampleApp.initialize example_app.js:7\n(anonymous function)\n</code></pre>\n\n<p>This is where the error is showing up in Chrome Inspector (init file - example_app.js):</p>\n\n<pre><code>var ExampleApp = {\n  Models: {},\n  Collections: {},\n  Views: {},\n  Routers: {},\n  initialize: function() {\n    var tasks = new ExampleApp.Collections.Tasks(data.tasks);\n    new ExampleApp.Routers.Tasks({ tasks: tasks });\n    Backbone.history.start();\n  }\n};\n</code></pre>\n\n<p>Here's my tasks index.haml file</p>\n\n<pre><code>- content_for :javascript do\n  - javascript_tag do\n    ExampleApp.initialize({ tasks: #{raw @tasks.to_json} });\n\n= yield :javascript\n</code></pre>\n\n<p>models / task.js</p>\n\n<pre><code>var Task = Backbone.Model.extend({});\n</code></pre>\n\n<p>collections / tasks.js</p>\n\n<pre><code>var Tasks = Backbone.Collection.extend({\n    model: Task,\n    url: '/tasks'\n});\n</code></pre>\n\n<p>routers / tasks.js</p>\n\n<pre><code>ExampleApp.Routers.Tasks = Backbone.Router.extend({\n    routes: {\n        \"\": \"index\"\n    },\n\n    index: function() {\n        alert('test');\n        // var view = new ExampleApp.Views.TaskIndex({ collection: ExampleApp.tasks });\n        // $('body').html(view.render().$el);\n    }\n});\n</code></pre>\n\n<p>And here's proof that I'm calling all of the files (I think):</p>\n\n<pre><code>&lt;script src=\"/assets/jquery.js?body=1\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"/assets/jquery_ujs.js?body=1\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"/assets/jquery-ui.js?body=1\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"/assets/underscore.js?body=1\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"/assets/backbone.js?body=1\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"/assets/backbone-support/support.js?body=1\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"/assets/backbone-support/composite_view.js?body=1\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"/assets/backbone-support/swapping_router.js?body=1\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"/assets/backbone-support.js?body=1\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"/assets/example_app.js?body=1\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"/assets/easing.js?body=1\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"/assets/modernizr.js?body=1\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"/assets/models/task.js?body=1\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"/assets/collections/tasks.js?body=1\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"/assets/views/task_view.js?body=1\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"/assets/views/tasks.js?body=1\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"/assets/views/tasks_index.js?body=1\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"/assets/routers/tasks.js?body=1\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"/assets/tasks/index.js?body=1\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"/assets/tasks/task.js?body=1\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"/assets/application.js?body=1\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Any ideas would be great.  Thanks!</p>\n",
            "last_activity_date": 1401525014,
            "question_id": 13502733,
            "score": 23,
            "tags": [
                "javascript",
                "ruby-on-rails",
                "ruby-on-rails-3",
                "backbone.js"
            ],
            "title": "&quot;Uncaught TypeError: undefined is not a function&quot; - Beginner Backbone.js Application"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>[<strong>Oct 2014]</strong> I've updated modernizrs example to match their <a href=\"https://github.com/Modernizr/Modernizr/blob/master/feature-detects/webgl/extensions.js\" rel=\"nofollow\">current implementation</a>, which is a cleaned up version from <a href=\"http://get.webgl.org/\" rel=\"nofollow\">http://get.webgl.org/</a> further below.</p>\n\n<p><a href=\"http://modernizr.com/\" rel=\"nofollow\">Modernizr</a> does,</p>\n\n<pre><code>var canvas;\nvar ctx;\nvar exts;\n\ntry {\n  canvas = createElement('canvas');\n  ctx = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n  exts = ctx.getSupportedExtensions();\n}\ncatch (e) {\n  return;\n}\n\nif (ctx !== undefined) {\n  Modernizr.webglextensions = new Boolean(true);\n}\n\nfor (var i = -1, len = exts.length; ++i &lt; len; ){\n  Modernizr.webglextensions[exts[i]] = true;\n}\n\ncanvas = undefined;\n</code></pre>\n\n<p><a href=\"https://bugs.webkit.org/show_bug.cgi?id=70117\" rel=\"nofollow\">Chromium</a> points to <a href=\"http://get.webgl.org/\" rel=\"nofollow\">http://get.webgl.org/</a> for the canonical support implementation, </p>\n\n<pre><code>try { gl = canvas.getContext(\"webgl\"); }\ncatch (x) { gl = null; }\n\nif (gl == null) {\n    try { gl = canvas.getContext(\"experimental-webgl\"); experimental = true; }\n    catch (x) { gl = null; }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>In addition to @Andrew answer, there is also experimental mode which can be supported. I have written following snippet of code:</p>\n\n<pre><code>var canvasID = 'webgl',\n    canvas = document.getElementById(canvasID),\n    gl,\n    glExperimental = false;\n\nfunction hasWebGL() {\n\n    try { gl = canvas.getContext(\"webgl\"); }\n    catch (x) { gl = null; }\n\n    if (gl === null) {\n        try { gl = canvas.getContext(\"experimental-webgl\"); glExperimental = true; }\n        catch (x) { gl = null; }\n    }\n\n    if(gl) { return true; }\n    else if (\"WebGLRenderingContext\" in window) { return true; } // not a best way, as you're not 100% sure, so you can change it to false\n    else { return false; }\n}\n</code></pre>\n\n<p>Change <code>canvasID</code> variable according to your ID.</p>\n\n<p>Tested on Chrome, Safari, Firefox, Opera and IEs (8 to 10). In case of Safari remember that it's available, but you need to enable WebGL explicitly (enable the developer menu and enable Web GL option after).</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>The excellent Three library has, in fact, a mechanism for detecting the following: </p>\n\n<ol>\n<li>WebGL support</li>\n<li>File API support</li>\n<li>Workers support</li>\n</ol>\n\n<p>For WebGL, particularly, here is the code that is used:</p>\n\n<pre><code>function webgl_support() { \n   try{\n    var canvas = document.createElement( 'canvas' ); \n    return !! window.WebGLRenderingContext &amp;&amp; ( \n         canvas.getContext( 'webgl' ) || canvas.getContext( 'experimental-webgl' ) );\n   }catch( e ) { return false; } \n };\n</code></pre>\n\n<p>That code snippet is part of a detector class which may also display the corresponding error messages to the user. Take a look at: <a href=\"https://github.com/mrdoob/three.js/blob/master/examples/js/Detector.js\" rel=\"nofollow\">https://github.com/mrdoob/three.js/blob/master/examples/js/Detector.js</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>As seen in <a href=\"http://www.browserleaks.com/webgl#howto-detect-webgl\">http://www.browserleaks.com/webgl#howto-detect-webgl</a></p>\n\n<blockquote>\n  <p>This is a proper javascript function to detect WebGL support, with all kind of experimental WebGL context names and with checking of special cases, such as blocking WebGL functions by NoScript or TorBrowser.</p>\n  \n  <p>It will report one of the three WebGL capability states:</p>\n  \n  <ul>\n  <li>WebGL is enabled \u2014 return TRUE, or return </li>\n  <li>WebGL object, if the first argument was passed</li>\n  <li>WebGL is disabled \u2014 return FALSE, you can change it if you need></li>\n  <li>WebGL is not implimented \u2014 return FALSE</li>\n  </ul>\n</blockquote>\n\n<pre><code>function webgl_detect(return_context)\n{\n    if (!!window.WebGLRenderingContext) {\n        var canvas = document.createElement(\"canvas\"),\n             names = [\"webgl\", \"experimental-webgl\", \"moz-webgl\", \"webkit-3d\"],\n           context = false;\n\n        for(var i=0;i&lt;4;i++) {\n            try {\n                context = canvas.getContext(names[i]);\n                if (context &amp;&amp; typeof context.getParameter == \"function\") {\n                    // WebGL is enabled\n                    if (return_context) {\n                        // return WebGL object if the function's argument is present\n                        return {name:names[i], gl:context};\n                    }\n                    // else, return just true\n                    return true;\n                }\n            } catch(e) {}\n        }\n\n        // WebGL is supported, but disabled\n        return false;\n    }\n\n    // WebGL not supported\n    return false;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I am attempting to detect WebGL support across multiple browsers and I've encountered the following scenario. The current version of Firefox appears to report positive support using the following check, even when the visitor's video card is black-listed and/or WebGL is disabled:</p>\n\n<pre><code>if (window.WebGLRenderingContext) {\n    // This is true in Firefox under certain circumstances,\n    // even when WebGL is disabled...\n}\n</code></pre>\n\n<p>I've tried instructing my users to enable WebGL using the following steps. This has worked in some cases, but not always. Obviously, this is not something I can request of the general public:</p>\n\n<ol>\n<li>Type <strong>about:config</strong> in Firefox\u2019s address bar</li>\n<li>To enable WebGL, set <strong>webgl.force-enabled</strong> to true</li>\n</ol>\n\n<p>This has led me to create my own method for detecting support, which uses jQuery to inject a canvas element to detect support. This pulls on a number of techniques I found in various WebGL libraries and plugins. The trouble is, it is extremely difficult to test (any comments on whether the link below works for you are much appreciated!). To make this an objective question, <strong>I would like to know if there's a universally accepted way to detect WebGL support across all browsers</strong>.</p>\n\n<p>TEST URL:</p>\n\n<p><a href=\"http://jsfiddle.net/Jn49q/5/\">http://jsfiddle.net/Jn49q/5/</a></p>\n",
            "last_activity_date": 1412615489,
            "question_id": 11871077,
            "score": 23,
            "tags": [
                "javascript",
                "jquery",
                "firefox",
                "cross-browser",
                "webgl"
            ],
            "title": "Proper way to detect WebGL support?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>Half of jQuery Serialize is <a href=\"http://api.jquery.com/jQuery.param/\">param()</a>, so half of something that deserializes a query string is going to be a deparam. Unfortunately I haven't been able to find a good standalone deparam. For now I recommend getting the <a href=\"https://github.com/cowboy/jquery-bbq\">jQuery BBQ library</a> and using that. If you don't need the other stuff you can remove them. I read somewhere that Ben Alman (cowboy) planned to extract deparam into its own module.</p>\n\n<p>For the rest of deserializing, you'll just need to loop through the object that deparam returns and for each key and value pair in the object, select the form element based on the key, and set the form elements value to the value.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>Im not now answering your answer but my guess is that you want to serialize it and send back to server and then use the serialized data which is why you have to deserialize it?</p>\n\n<p>If thats the case you should consider using .serializeArray(). You can send it as POST data in ajax, and then access later aswell because you will have object. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>May be a bit late, but perhaps you are looking for something like <a href=\"http://plugins.jquery.com/project/deserialize\" rel=\"nofollow\">JQuery.deserialize</a>. Problems: no support for checkboxes or radio buttons.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I wrote a version of <a href=\"https://github.com/kflorence/jquery-deserialize\">jQuery.deserialize</a> that supports serialized data generated from the serialize, serializeArray and serializeObject functions. It also supports all form element types, including checkboxes and radio buttons.</p>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>function deparam(query) {\n    var pairs, i, keyValuePair, key, value, map = {};\n    // remove leading question mark if its there\n    if (query.slice(0, 1) === '?') {\n        query = query.slice(1);\n    }\n    if (query !== '') {\n        pairs = query.split('&amp;');\n        for (i = 0; i &lt; pairs.length; i += 1) {\n            keyValuePair = pairs[i].split('=');\n            key = decodeURIComponent(keyValuePair[0]);\n            value = (keyValuePair.length &gt; 1) ? decodeURIComponent(keyValuePair[1]) : undefined;\n            map[key] = value;\n        }\n    }\n    return map;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Using Jack Allan's <em>deparam</em> function with jQuery, you can change this line:</p>\n\n<pre><code>map[key] = value;\n</code></pre>\n\n<p>to</p>\n\n<pre><code>$('input[name=' + key + ']').val(value);\n</code></pre>\n\n<p>Which will load the data back into your form fields.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>this code returns an array when same key is spotted multiple times in the serialized string</p>\n\n<pre><code>\n    chaine=\"single=Single1&multiple=Multiple&multiple=Multiple1&multiple=Multiple2&multiple=Multiple3&check=check2&radio=radio1\"\n    function deserialize(txt){\n    myjson={}\n    tabparams=chaine.split('&')\n    var i=-1;\n    while (tabparams[++i]){\n    tabitems=tabparams[i].split('=')\n    if( myjson[decodeURIComponent(tabitems[0])] !== undefined ){\n        if( myjson[decodeURIComponent(tabitems[0])] instanceof Array ){\n            myjson[decodeURIComponent(tabitems[0])].push(decodeURIComponent(tabitems[1]))\n        }\n    else{\n       myjson[decodeURIComponent(tabitems[0])]= [myjson[decodeURIComponent(tabitems[0])],decodeURIComponent(tabitems[1])]\n            }\n        }\n    else{\n         myjson[decodeURIComponent(tabitems[0])]=decodeURIComponent(tabitems[1]);\n        }\n    }\n    return myjson;\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I was very interested in trying JQuery.deserialize, but it didn't seem to handle checkboxes at all, so it didn't serve my purposes.  So I wrote my own.  It turned out to be easier than I thought, because the jQuery val() function does most of the work:</p>\n\n<pre><code>(function (jQuery) {\n    jQuery.fn.deserialize = function (data) {\n        var f = jQuery(this), map = {};\n        //Get map of values\n        jQuery.each(data.split(\"&amp;\"), function () {\n            var nv = this.split(\"=\"),\n                n = decodeURIComponent(nv[0]),\n                v = nv.length &gt; 1 ? decodeURIComponent(nv[1]) : null;\n            if (!(n in map)) {\n                map[n] = [];\n            }\n            map[n].push(v);\n        })\n        //Set values for all form elements in the data\n        jQuery.each(map, function (n, v) {\n            f.find(\"[name='\" + n + \"']\").val(v);\n        })\n        //Uncheck checkboxes and radio buttons not in the form data\n        jQuery(\"input:checkbox:checked,input:radio:checked\").each(function () {\n            if (!($(this).attr(\"name\") in map)) {\n                this.checked = false;\n            }\n        })\n\n        return this;\n    };\n})(jQuery);\n</code></pre>\n\n<p>You should be able to use this like this:</p>\n\n<pre><code>$(\"#myform\").deserialize(data);\n</code></pre>\n\n<p>Where data is a parameter list such as what $(\"#myform\").serialize() would produce.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><i>Needed all in a single string, which can be stored in maybe COOKIE, and later read and fill the same form with input values.</i></p>\n\n<p>Input elements seperator: <b>~</b> <i>(use any seperator)</i></p>\n\n<p>Input attributes seperator: <b>|</b> <i>(use any seperator)</i></p>\n\n<p>input type <b>|</b> input name <b>|</b> input value <b>~</b> input2 type <b>|</b> input2 name <b>|</b> input2 value</p>\n\n<pre><code>var formData = '';\n$('#form_id').find('input, textarea, select').each(function(i, field) {\n    formData += field.type+'|'+field.name+'|'+field.value+'~';\n});\n</code></pre>\n\n<p>Example:</p>\n\n<pre><code>hidden|vote_id|10~radio|option_id|~radio|option_id|427~radio|option_id|428~\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If what you want is to remove the standard URL-encoded notation, you can use JavaScript's <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent\" rel=\"nofollow\">decodeURIComponent()</a>, which will give you a regular string, just like this:</p>\n\n<pre><code>var decodedString = decodeURIComponent(\"Http%3A%2F%2FHello%3AWorld\");\nalert(decodedString);\n</code></pre>\n\n<p>In this case, decodedString will look like <code>Http://Hello:World</code>, here's a <a href=\"http://jsfiddle.net/23Hcj/\" rel=\"nofollow\">working fiddle</a>.</p>\n\n<p>Got all of this searching for this same issue, and found the answer here: <a href=\"http://stackoverflow.com/questions/3803716/how-can-i-decode-a-url-with-jquery\">How can I decode a URL with jQuery?</a></p>\n\n<p>I know this is an old question, but doing some searches for jQuery deserialize got me here, so I might as well try to give a different approach on the issue for people with the same problem.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Bit late on this one, but somebody might find this useful.</p>\n\n<pre><code>function fetchInput(identifier) {\n    var form_data = identifier.serialize().split('&amp;');\n    var input     = {};\n\n    $.each(form_data, function(key, value) {\n        var data = value.split('=');\n        input[data[0]] = decodeURIComponent(data[1]);\n    });\n\n    return input;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am using <a href=\"http://api.jquery.com/serialize/\">jQuery Serialize</a> to serialize my form elements and would like to deserialize them back. Unfortunately can't find any working jQuery deserializer, any suggestions? </p>\n",
            "last_activity_date": 1420302258,
            "question_id": 6992585,
            "score": 23,
            "tags": [
                "javascript",
                "jquery",
                "deserialization"
            ],
            "title": "jQuery deserialize form"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The API has the solution for you, you'll just need to add optionsCaption to your select.</p>\n\n<pre><code>&lt;select id=\"SourceMaterialTypeId\"\n    name=\"SourceMaterialTypeId\"\n    data-bind=\"options: sourceMaterialTypes,\n               optionsText: 'Name',\n               optionsValue : 'Id',\n               value: selectedSourceMaterialType,\n               optionsCaption: 'Please select...'\"&gt;&lt;/select&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I guess you need to pass the Id only and not the whole object in the <code>selectedSourceMaterialType</code> observable function -></p>\n\n<pre><code>selectedSourceMaterialType: ko.observable(@Model.SourceMaterialType.Id)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>As @nEEBz suggested, <code>selectedSourceMaterialType</code> is initialized improperly.  In the <a href=\"http://learn.knockoutjs.com/#/?tutorial=collections\" rel=\"nofollow\">learn.knockoutjs.com \"Lists and Collections\" tutorial</a>, they initialize their viewmodel's selected-item property by passing the value of a specific index of the observable array.  For example, do this:</p>\n\n<pre><code>selectedSourceMaterialType: ko.observable(sourceMaterialTypes[2])\n</code></pre>\n\n<p>...instead of this:</p>\n\n<pre><code>selectedSourceMaterialType: ko.observable({\"Id\":1,\"Name\":\"Coffee Bean\" /* ... */});\n</code></pre>\n\n<p>That way, the value of the selected item is a reference to the item in the same observable array that the dropdownlist items come from.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm having a small issue with setting the initial value of a dropdown. The code below is the view model definition and the initialization in <code>$(document).ready</code>. I have an array called <code>sourceMaterialTypes</code> and a <code>selectedSourceMaterialType</code> representing the selected value of that array. I am initializing the view model with values from the (ASP.Net MVC) Model and ViewBag.</p>\n\n<pre><code>var viewModel = {\n    sourceMaterialTypes : \n        ko.observableArray(@Html.Raw(Json.Encode(ViewBag.SourceMaterialTypes))),\n    selectedSourceMaterialType :\n        ko.observable(@Html.Raw(Json.Encode(Model.SourceMaterialType))),\n    ingredientTypes :\n        ko.observableArray(@Html.Raw(Json.Encode(ViewBag.IngredientTypes))),\n    selectedIngredientType : ko.observable()\n};\n\n$(document).ready(function () {\n\n    ko.applyBindings(viewModel);\n\n    viewModel.selectedSourceMaterialType.subscribe(function(newSourceMaterialType) {\n        $.getJSON(\"/IngredientType/FindByMaterialType\",\n                  { \"id\": newSourceMaterialType })\n            .success(function (data) {\n                viewModel.ingredientTypes($.parseJSON(data));\n            })\n            .error(function () { alert(\"error\"); });\n    });\n});\n</code></pre>\n\n<p>The following is the definition of my dropdown (select) list with the Knockout binding definition.</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;select id=\"SourceMaterialTypeId\"\n        name=\"SourceMaterialTypeId\"\n        data-bind=\"options: sourceMaterialTypes,\n                   optionsText: 'Name',\n                   optionsValue : 'Id',\n                   value: selectedSourceMaterialType\"&gt;&lt;/select&gt;\n</code></pre>\n\n<p>This all works fine except for the initially selected value in the source materials dropdown (<code>selectedSourceMaterialType</code> is bound correctly so when the dropdown selection changes its value is correctly updated, it is only the initial selection I am having a problem with), which is always the first item in the <code>sourceMaterialTypes</code> array on my view model.</p>\n\n<p>I would like the initially selected value to be that which is initialized from the (server-side) model as the value of <code>selectedSourceMaterialType</code> view model property.</p>\n",
            "last_activity_date": 1393152591,
            "question_id": 6648991,
            "score": 23,
            "tags": [
                "javascript",
                "asp.net-mvc",
                "knockout.js"
            ],
            "title": "Binding initial/default value of dropdown (select) list"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>This one is pretty good for jquery.</p>\n\n<p><a href=\"https://github.com/jeresig/jquery.hotkeys\" rel=\"nofollow\">https://github.com/jeresig/jquery.hotkeys</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Lots of JavaScript libraries come replete with ways of capturing key input and using it to your advantage.  It's a good bet that you will be able to find a library to do just that, and nothing else.  I don't have a lot of experience there, however.</p>\n\n<p>I've been using <a href=\"http://www.extjs.com\" rel=\"nofollow\">Ext</a> for a while now, and their <a href=\"http://www.extjs.com/deploy/dev/docs/?class=Ext.KeyMap\" rel=\"nofollow\">KeyMap</a> class is really easy to work with.  Here is a simple example using it.</p>\n\n<pre><code>new Ext.KeyMap(Ext.getDoc(), {\n        key: 'abc',\n        alt: true,\n        handler: function(k, e) {\n            var t = Ext.getCmp('tabpanel');\n            switch(k) {\n                case 65:\n                    t.setActiveTab(0);\n                    break;\n                case 66:\n                    t.setActiveTab(1);\n                    break;\n                case 67:\n                    t.setActiveTab(2);\n                    break;\n            }\n        },\n        stopEvent: true\n    });\n</code></pre>\n\n<p>This takes class, <a href=\"http://www.extjs.com/deploy/dev/docs/?class=Ext.TabPanel\" rel=\"nofollow\">Ext.TabPanel</a>, and allows the user to push a keyboard key to change tabs, rather than clicking the tabs themselves.</p>\n\n<p>It can, of course, do much more than this.  This is a simple example of how it works though.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can try this one...</p>\n\n<p><a href=\"http://unixpapa.com/js/key.html\" rel=\"nofollow\">http://unixpapa.com/js/key.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>LivePipe created one with no library dependencies whatsoever. It's pretty nice: <a href=\"http://livepipe.net/extra/hotkey\" rel=\"nofollow\">http://livepipe.net/extra/hotkey</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Try <a href=\"http://robertwhurst.github.com/KeyboardJS/\" rel=\"nofollow\">KeyboardJS</a></p>\n\n<p>its as simple as</p>\n\n<pre><code>KeyboardJS.on('a', function(){ alert('hello!'); });\n</code></pre>\n\n<p>yet as flexible as</p>\n\n<pre><code>var bindInstance = KeyboardJS.bind.key('ctrl + a, ctrl + b, c', function(event, keysPressedArray, keyComboString){\n\n    //you get the event object\n    console.log('event object', event);\n\n    //you get the keys pressed array\n    console.log('keys pressed', keysPressedArray);\n\n    //you get the key combo string\n    console.log('combo pressed', keyComboString);\n\n    console.log('I will fire when \\'ctrl + a\\' or \\'ctrl +b\\' or \\'c\\' is pressed down');\n\n    //block event bubble\n    return false;\n\n}, function(event, keysPressedArray, keyComboString) {\n\n    console.log('I will fire on key up');\n\n    //block event bubble\n    return false;\n\n});\n</code></pre>\n\n<p>you can clear a binding by calling</p>\n\n<pre><code>bindInstance.clear();\n</code></pre>\n\n<p>you can clear all binds with specific keys with</p>\n\n<pre><code>KeyboardJS.clear('a, b');\n</code></pre>\n\n<p>Its open source and available on <a href=\"http://github.com/RobertWHurst/KeyboardJS/\" rel=\"nofollow\">Github</a>. Its comes in ether a global library or an AMD module for RequireJS.</p>\n\n<p>Here's an <a href=\"http://www.youtube.com/watch?v=mOtUXRrB350\" rel=\"nofollow\">introduction video</a>.</p>\n\n<p>There, now stop worrying about the keyboard and code your app. ;)</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Just another to throw in the mix.  I recently released one called Mousetrap.  You can check out examples at <a href=\"http://craig.is/killing/mice\">http://craig.is/killing/mice</a></p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>From what I have seen Mousetrap is the only library that let's you specify key <em>sequences</em> rather than combinations. This came in very handy for my application.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This one is better if you are starting and if you want to understand how hot-keys work.</p>\n\n<p><a href=\"https://github.com/UthaiahBollera/HotkeysInJavascriptLibrary\" rel=\"nofollow\">https://github.com/UthaiahBollera/HotkeysInJavascriptLibrary</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://dmauro.github.io/Keypress/\" rel=\"nofollow\">KEYPRESS</a> is focused on game input and supports any key as a modifier, among other features. It's also <a href=\"https://atmospherejs.com/keypress/keypress\" rel=\"nofollow\">pre-packaged for Meteor</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>i want to make a bbs forum that using much Keyboard event ,</p>\n\n<p>so  which is the best Keyboard event library,</p>\n\n<p>thanks</p>\n",
            "last_activity_date": 1417163102,
            "question_id": 2353417,
            "score": 23,
            "tags": [
                "javascript",
                "javascript-events"
            ],
            "title": "which is the best Javascript Keyboard event library.(Hotkeys,Shortcuts )"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If it would be possible at all, it would be very dependent on the javascript engine. The more modern javascript engine compile their code using a just in time compiler and messing with their internal variables would be either bad for performance, or bad for stability.</p>\n\n<p>If the engine allows it, why not make a function call interface to some native code to exchange the variable's values?</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Very good question with no good answer so far... I'm disappointed.</p>\n\n<p>Address of a variable can be treated as its unique identifier. Being able to see such an address would help with debugging identity problems. It's when you have two or more variables and you expect they all point to the same object but comparing any two of them with <code>===</code> operator returns false. If it were possible to obtain an address of a variable you could track when and where it was created and find out what's going on.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>It's more or less impossible - Javascript's evaluation strategy is to always use call by value, but in the case of Objects (including arrays) the value passed is a reference to the Object, which is not copied or cloned. If you reassign the Object itself in the function, the original won't be changed, but if you reassign one of the Object's properties, that will affect the original Object.</p>\n\n<p>That said, what are you trying to accomplish? If it's just passing complex data between C++ and Javascript, you could use a JSON library to communicate. Send a JSON object to C++ for processing, and get a JSON object to replace the old one.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is it possible to find the memory address of a JavaScript variable?  The JavaScript code is part of (embedded into) a normal application where JavaScript is used as a front end to C++ and does not run on the browser. The JavaScript implementation used is SpiderMonkey.</p>\n",
            "last_activity_date": 1366731277,
            "question_id": 639514,
            "score": 23,
            "tags": [
                "javascript",
                "spidermonkey",
                "memory-address"
            ],
            "title": "How can I get the memory address of a JavaScript variable?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<h2>Most of the time it does not matter.</h2>\n\n<p>Unless you're creating an application where <code>.bind</code> is the bottleneck I wouldn't bother. Readability is much more important than sheer performance in most cases. I think that using native <code>.bind</code> usually provides for more readable and maintainable code - which is a big plus.</p>\n\n<h2>However yes, when it matters -  <code>.bind</code> is slower</h2>\n\n<p>Yes, <code>.bind</code> is considerably slower than a closure - at least in Chrome, at least in the current way it's implemented in <code>v8</code>. I've personally had to switch in Node.JS for performance issues some times (more generally, closures are kind of slow in performance intensive situations).</p>\n\n<p>Why? Because the <code>.bind</code> algorithm is a lot more complicated than wrapping a function with another function and using <code>.call</code> or <code>.apply</code>. (Fun fact, it also returns a function with toString set to [native function]).</p>\n\n<p>There are two ways to look at this, from the specification point of view, and from the implementation point of view. Let's observe both.</p>\n\n<h3>First, let's <a href=\"http://es5.github.io/#x15.3.4.5\">look at the bind algorithm defined in the specification</a>:</h3>\n\n<blockquote>\n  <ol>\n  <li>Let Target be the this value.</li>\n  <li>If IsCallable(Target) is false, throw a TypeError exception.</li>\n  <li>Let A be a new (possibly empty) internal list of all of the argument values provided after thisArg (arg1, arg2 etc), in order.</li>\n  </ol>\n  \n  <p>...</p>\n  \n  <p>(21. Call the [[DefineOwnProperty]] internal method of F with arguments \"arguments\", PropertyDescriptor {[[Get]]: thrower, [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false}, and false.</p>\n  \n  <p>(22. Return F.</p>\n</blockquote>\n\n<p>Seems pretty complicated, a lot more than just a wrap. </p>\n\n<h3>Second , let's see <a href=\"https://code.google.com/p/v8/source/browse/trunk/src/v8natives.js#1727\">how it's implemented in Chrome</a>.</h3>\n\n<p>Let's check <a href=\"https://code.google.com/p/v8/source/browse/trunk/src/v8natives.js#1727\"><code>FunctionBind</code></a> in the v8 (chrome JavaScript engine) source code:</p>\n\n<pre><code>function FunctionBind(this_arg) { // Length is 1.\n  if (!IS_SPEC_FUNCTION(this)) {\n    throw new $TypeError('Bind must be called on a function');\n  }\n  var boundFunction = function () {\n    // Poison .arguments and .caller, but is otherwise not detectable.\n    \"use strict\";\n    // This function must not use any object literals (Object, Array, RegExp),\n    // since the literals-array is being used to store the bound data.\n    if (%_IsConstructCall()) {\n      return %NewObjectFromBound(boundFunction);\n    }\n    var bindings = %BoundFunctionGetBindings(boundFunction);\n\n    var argc = %_ArgumentsLength();\n    if (argc == 0) {\n      return %Apply(bindings[0], bindings[1], bindings, 2, bindings.length - 2);\n    }\n    if (bindings.length === 2) {\n      return %Apply(bindings[0], bindings[1], arguments, 0, argc);\n    }\n    var bound_argc = bindings.length - 2;\n    var argv = new InternalArray(bound_argc + argc);\n    for (var i = 0; i &lt; bound_argc; i++) {\n      argv[i] = bindings[i + 2];\n    }\n    for (var j = 0; j &lt; argc; j++) {\n      argv[i++] = %_Arguments(j);\n    }\n    return %Apply(bindings[0], bindings[1], argv, 0, bound_argc + argc);\n  };\n\n  %FunctionRemovePrototype(boundFunction);\n  var new_length = 0;\n  if (%_ClassOf(this) == \"Function\") {\n    // Function or FunctionProxy.\n    var old_length = this.length;\n    // FunctionProxies might provide a non-UInt32 value. If so, ignore it.\n    if ((typeof old_length === \"number\") &amp;&amp;\n        ((old_length &gt;&gt;&gt; 0) === old_length)) {\n      var argc = %_ArgumentsLength();\n      if (argc &gt; 0) argc--;  // Don't count the thisArg as parameter.\n      new_length = old_length - argc;\n      if (new_length &lt; 0) new_length = 0;\n    }\n  }\n  // This runtime function finds any remaining arguments on the stack,\n  // so we don't pass the arguments object.\n  var result = %FunctionBindArguments(boundFunction, this,\n                                      this_arg, new_length);\n\n  // We already have caller and arguments properties on functions,\n  // which are non-configurable. It therefore makes no sence to\n  // try to redefine these as defined by the spec. The spec says\n  // that bind should make these throw a TypeError if get or set\n  // is called and make them non-enumerable and non-configurable.\n  // To be consistent with our normal functions we leave this as it is.\n  // TODO(lrn): Do set these to be thrower.\n  return result;\n</code></pre>\n\n<p>We can see a bunch of expensive things here in the implementation. Namely <code>%_IsConstructCall()</code>. This is of course needed to abide to the specification - but it also makes it slower than a simple wrap in many cases. </p>\n\n<hr>\n\n<p>On another note, calling <code>.bind</code> is also slightly different, the spec notes \"Function objects created using Function.prototype.bind do not have a prototype property or the [[Code]], [[FormalParameters]], and [[Scope]] internal properties\"</p>\n",
                    "is_accepted": true,
                    "score": 42
                }
            ],
            "body": "<p>A previous poster asked <a href=\"http://stackoverflow.com/questions/6397096/function-bind-vs-closure-in-javascript-how-to-choose\">Function.bind vs Closure in Javascript : how to choose?</a></p>\n\n<p>and received this answer in part, which seems to indicate bind should be faster than a closure:</p>\n\n<blockquote>\n  <p>Scope traversal means, when you are reaching to grab a value\n  (variable,object) that exists in a different scope, therefore\n  additional overhead is added (code becomes slower to execute).</p>\n  \n  <p>Using bind, you 're calling a function with an existing scope, so that\n  scope traversal does not take place.</p>\n</blockquote>\n\n<p>Two jsperfs suggest that bind is actually much, much slower than a <a href=\"http://jsperf.com/bind-vs-closure-performace\">closure</a>.</p>\n\n<p>This was posted as a comment to the above</p>\n\n<p>And, I decided to write <a href=\"http://jsperf.com/simple-null-bind-vs-closure\">my own jsperf</a></p>\n\n<p>So why is bind so much slower (70+% on chromium)?</p>\n\n<p>Since it is not faster and closures can serve the same purpose, should bind be avoided?</p>\n",
            "last_activity_date": 1422199281,
            "question_id": 17638305,
            "score": 22,
            "tags": [
                "javascript",
                "node.js",
                "performance",
                "v8"
            ],
            "title": "Why is bind slower than a closure?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Don't know the reasoning behind jQuery's interval time, as 13ms translates to 80fps which is very fast. The \"standard\" fps that's used in movies and such is 25fps and is fast enough that human eye won't notice any jittering. 25fps translates to 40ms, so to answer your question: anything below 40ms is enough for an animation.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>When doing loops for animations, it's best that you find a balance between the speed of the loop, and how much work needs to be done. </p>\n\n<p>For example, if you want to slide a div across the page within a second so it is a nice effect and timely. You would skip coordinates and have a reasonably fast loop time so the effect is noticeable, but not jumpy.</p>\n\n<p>So it's a trial and error thing (by having to put work, time, and browser capability into account). So it doesn't only look nice on one browser.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The number told by fbogner have been tested.\nThe browsers throttle the js-activity to a certain degree to be usable every time.</p>\n\n<p>If your javascript would be possible to run every 5msec the browser runtime would have much less cpu time to refresh the rendering or react on user input (clicks) because javascript-execution blocks the browser.</p>\n\n<p>I think the chrome-devs allow you to run your javascript at much shorter intervals than the other browsers because their V8-Javascript-Engine compiles the JavaScript and therefore it runs faster and the browser will noch be blocked as long as with interpreted js-code.</p>\n\n<p>But the engine is not only so much faster to allow shorter intervals the devs have certainly tested which is the best possible shortest interval to allow short intervals and don't blocking the browser for to long</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The pseudo-code for this is this one:</p>\n\n<pre><code>FPS_WANTED = 25 \n(just a number, it can be changed while executing, or it can be constant)\n\nTIME_OF_DRAWING = 1000/FPS_WANTED \n(this is in milliseconds, I believe it is accurate enough) \n( should be updated when FPS_WANTED changes)\n\nUntilTheUserLeavesTheDrawingApplication()\n{\n\n  time1 = getTime();\n  doAnimation();\n  time2 = getTime();\n  animationTime = time2-time1;\n\n  if (animationTime &gt; TIME_OF_DRAWING)\n  {\n     [the FPS_WANTED cannot be reached]\n     You can:\n     1. Decrease the number of FPS to see if a lower framerate can be achieved\n     2. Do nothing because you want to get all you can from the CPU\n  }\n  else\n  {\n     [the FPS can be reached - you can decide to]\n     1. wait(TIME_OF_DRAWING-animationTime) - to keep a constant framerate of FPS_WANTED\n     2. increase framerate if you want\n     3. Do nothing because you want to get all you can from the CPU\n  }\n\n}\n</code></pre>\n\n<p>Of course there can be variations of this but this is the basic algorithm that is valid in any case of animation.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I would venture to say that a substantial fraction of web users are using monitors that refresh at 60Hz, which translates to one frame every 16.66ms. So to make the monitor the bottleneck, you need to produce frames faster than 16.66ms.</p>\n\n<p>There are two reasons you would pick a value like 13ms. First, the browser needs a little bit of time to repaint the screen (in my experience, never less than 1ms). Which puts you at, say, updating every 15ms, which happens to be a very interesting number - the standard timer resolution on Windows is 15ms (see <a href=\"http://ejohn.org/blog/accuracy-of-javascript-time/\">John Resig's blog post</a>). I suspect that an well-written 15ms animation looks very close to the same on a wide variety of browsers/operating systems.</p>\n\n<p>FWIW, fbogner is <b>plain wrong</b> about non-Chrome browsers firing setInterval every 20-30ms. I wrote a <a href=\"http://gist.github.com/444107\">test</a> to measure the speed of setInterval firing, and got these numbers:</p>\n\n<ul>\n<li>Chrome - 4ms</li>\n<li>Firefox 3.5 - 15ms</li>\n<li>IE6 - 15ms</li>\n<li>IE8 - 15ms</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>When writing a JavaScript animation, you of course make a loop using setInterval (or repeated setTimeout). But what is the best delay to use in the setInterval/setTimeout call(s)?</p>\n\n<p>In the <a href=\"http://api.jquery.com/animate/\">jQuery API page for the .animate() function</a>, the user \"fbogner\" says:</p>\n\n<blockquote>\n  <p>Just if anyone is interested: Animations are \"rendered\" using a setInterval with a time out of 13ms. This is quite fast! Chrome's fastest possible interval is about 10ms. All other browsers \"sample\" at about 20-30ms.</p>\n</blockquote>\n\n<p>Any idea how jQuery determined to use this specific number?</p>\n\n<hr>\n\n<p>Started bounty. I'm hoping someone with knowledge of the source code behind Chromium or Firefox can provide some hard facts that might back up the decision of a specific framerate. Or perhaps a list of animations (or frameworks) and their delays. I believe this makes for an interesting opportunity to do a bit of research.</p>\n\n<hr>\n\n<p>Interesting - I just took the time to look at Google's <a href=\"http://www.google.com/pacman\">Pac-Man</a> source to see what they did. They set up an array of possible FPSes (90, 45, 30), start at the first one, and then each frame they check the \"slowness\" of the frame (amount the frame exceeded its allotted time). If the slowness exceeds 50ms 20 times, the framerate is notched down to the next in the list (90 -> 45, 45 -> 30). It appears that the framerate is never raised back up, presumably because the game is so short-lived that it wouldn't be worth the trouble to code that.</p>\n\n<p>Oh, and the setInterval delay is of course set to 1000 / framerate. They do, in fact, use setInterval and not repeated setTimeouts.</p>\n\n<p>I think this dynamic framerate feature is pretty neat!</p>\n",
            "last_activity_date": 1324300114,
            "question_id": 2940054,
            "score": 22,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to determine the best &quot;framerate&quot; (setInterval delay) to use in a JavaScript animation loop?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Clicking on the line number in the left hand margin should create a break point for you (a red circle should appear).</p>\n\n<p>All loaded scripts should be available from the firebug menu - click where it says the name of the current file should show a drop down with all files listed.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Place <code>debugger;</code> in your external script file on the line you want to break on.</p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>After you place a break point in them, you can also call them by name in the firebug console, and see the output of (or step through) any intermediate functions.  This can help when the main entry point calls many other helper functions, and you are really just concerned with how these helpers are working.</p>\n\n<p>That being said, I don't knwo anything about ASP.Net validators, so its possible this doesn't apply.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Putting the \"debugger;\" line also does the trick for the Chrome debugger.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>To view and access external JavaScript files (*.js) from within Firebug:</p>\n\n<ol>\n<li>Click on the 'Script' tab.</li>\n<li>Click on the 'all' drop down in the\nupper left hand corner above the\nscript code content window.</li>\n<li>Select 'Show Static Scripts'.</li>\n<li>Click on the dropdown button just to\nthe right of what now says 'static'\n(By default, it should show the name\nof your current web page). You\nshould now see a list of files\nassociated with the current web page\nincluding any external JS files.</li>\n<li>Select the JavaScript file you are\ninterested in and it's code will\ndisplay in the content window. From\nthere, you should be able to set\nbreakpoints as normal.</li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 18
                }
            ],
            "body": "<p>I can easily set breakpoints in embedded JS functions, but I don't see any way of accessing external JS scripts via Firebug unless I happen to enter them during a debug session. Is there a way to do this without having to 'explore' my way into the script?</p>\n\n<p>@Jason: This is a good point, but in my case I do not have easy access to the script. I am specifically talking about the client scripts which are invoked by the ASP.Net Validators that I would like to debug. I can access them during a debug session through entering the function calls, but I could not find a way to access them directly.</p>\n",
            "last_activity_date": 1407487860,
            "question_id": 32633,
            "score": 22,
            "tags": [
                "javascript",
                "debugging",
                "firebug"
            ],
            "title": "How can I set breakpoints in an external JS script in Firebug"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Transcluding isn't necessary because <code>items</code> contains what we need to render the template.  Put another way, there isn't anything inside the element -- i.e.,  <code>&lt;mylist&gt;nothing new here we need to transclude&lt;/mylist&gt;</code>.  It seems Angular will do the $watching for us too.</p>\n\n<pre><code>.directive('mylist', function () {\n  return {\n    restrict:'E',\n    replace: true,\n    scope: true,\n    template: [\n      '&lt;ul&gt;',\n      '&lt;li ng-repeat=\"myItem in items\"&gt;{{myItem}}&lt;/li&gt;',\n      '&lt;/ul&gt;'\n    ].join('')\n  }\n});\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;mylist&gt;&lt;/mylist&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/mrajcok/SZATE/\" rel=\"nofollow\">Fiddle</a>.</p>\n\n<p>Note that creating a new scope is optional, so you could comment out this line:</p>\n\n<pre><code>//scope: true,\n</code></pre>\n\n<p><strong>Update</strong>:  You could optionally create an isolate scope:</p>\n\n<pre><code>scope: { items: '='},\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;mylist items=items&gt;&lt;/mylist&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/mrajcok/SZATE/3/\" rel=\"nofollow\">Fiddle</a>.</p>\n\n<p><strong>Update2</strong>: based on additional info provided by Jan:</p>\n\n<blockquote>\n  <p>The template of the item must be defined in the view... I would like to reuse the logic in the ng-repeat directive </p>\n</blockquote>\n\n<p>Okay, so lets put it all in the view, and use ng-repeat:</p>\n\n<pre><code>&lt;ul mylist&gt;\n  &lt;li ng-repeat=\"myItem in items\"&gt;\n    &lt;span class=\"etc\"&gt;{{myItem}}&lt;/span&gt;\n   &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<blockquote>\n  <p>it [the directive] must have access to an item property in a child scope... The directive must have access to the list so I can set proper watches and change things</p>\n</blockquote>\n\n<p>Following your original fiddle, we'll use a normal child scope (i.e., the child scope will prototypically inherit from the parent scope): <code>scope: true,</code>.  This will ensure the directive has access to the properties defined on the controller's scope, e.g., <code>items</code>.</p>\n\n<blockquote>\n  <p>access to the generated DOM items</p>\n</blockquote>\n\n<p>The directive's link function has an <code>element</code> argument.  So in the HTML above, element will be set to the <code>&lt;ul&gt;</code> element.  So we have access to all the DOM elements.  E.g., <code>element.find('li')</code> or <code>element.children()</code>.  In the fiddle referenced below, I have it $watch the <code>items</code> array.  The $watch callback has access to <code>element</code>, so you have access to the generated DOM items.  The callback logs <code>element.children()</code> to the console.</p>\n\n<p><a href=\"http://jsfiddle.net/mrajcok/SZATE/4/\" rel=\"nofollow\">Fiddle</a>.</p>\n\n<p>In summary, to add custom behavior to a list, just plop a directive onto a ul or ol and away you go.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Solved the problem myself:</p>\n\n<p>I am able to do it in the compile step (<a href=\"http://jsfiddle.net/BaQkw/2/\">jsfiddle</a>) by adding the ng-repeat attribute when the template is compiled and feeding it the content of my attribute.</p>\n\n<h3>Html:</h3>\n\n<pre><code>&lt;div ng-app=\"myApp\"&gt;\n  &lt;div ng-controller=\"ctrl\"&gt;\n    &lt;mylist element=\"myItem in items\"&gt;{{myItem}}&lt;/mylist&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<h3>Javascipt:</h3>\n\n<pre><code>var myApp = angular.module('myApp', [])\n\n.controller('ctrl', function ($scope) {\n  $scope.items = ['one', 'two', 'three'];\n})\n\n.directive('mylist', function ($parse) {\n  return {\n    restrict:'E',\n    transclude: 'element',\n    replace: true,\n    scope: true,\n    template: [\n      '&lt;ul&gt;',\n      '&lt;li ng-transclude&gt;&lt;/li&gt;',\n      '&lt;/ul&gt;'\n    ].join(''),\n    compile: function (tElement, tAttrs, transclude) {\n      var rpt = document.createAttribute('ng-repeat');\n      rpt.nodeValue = tAttrs.element;\n      tElement[0].children[0].attributes.setNamedItem(rpt);\n      return function (scope, element, attr) {\n        var rhs = attr.element.split(' in ')[1];\n        scope.items = $parse(rhs)(scope);\n        console.log(scope.items);\n      }        \n    }\n  }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>An alternative way to achieve this as follows.</p>\n\n<p>Index.html:</p>\n\n<pre><code>&lt;html ng-app='myApp'&gt;\n\n&lt;head&gt;\n    &lt;title&gt;AngularJS Transclude within Repeat Within Directive&lt;/title&gt;\n    &lt;script src=\"//ajax.googleapis.com/ajax/libs/angularjs/1.2.18/angular.min.js\"&gt;&lt;/script&gt;\n    &lt;script src='index.js'&gt;&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body ng-controller='myController'&gt;\n    &lt;people&gt;Hello {{person.name}}&lt;/people&gt;\n    &lt;button name=\"button\" ng-click=\"changeRob()\"&gt;Change Rob&lt;/button&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>index.js:</p>\n\n<pre><code>var myApp = angular.module( 'myApp', [] );\n\nmyApp.controller( 'myController', function( $scope ) {\n    $scope.people = [\n        { name: 'Rob'  },\n        { name: 'Alex' },\n        { name: 'John' }\n    ];\n\n    $scope.changeRob = function() {\n        $scope.people[0].name = 'Lowe';\n    }\n});\n\nmyApp.directive( 'people', function() {\n    return {\n        restrict: 'E',\n\n        transclude: true,\n        template: '&lt;div ng-repeat=\"person in people\" transcope&gt;&lt;/div&gt;',\n    }\n});\n\nmyApp.directive( 'transcope', function() {\n    return {\n        link: function( $scope, $element, $attrs, controller, $transclude ) {\n            if ( !$transclude ) {\n                throw minErr( 'ngTransclude' )( 'orphan',\n                    'Illegal use of ngTransclude directive in the template! ' +\n                    'No parent directive that requires a transclusion found. ' +\n                    'Element: {0}',\n                    startingTag( $element ));\n            }\n            var innerScope = $scope.$new();\n\n            $transclude( innerScope, function( clone ) {\n                $element.empty();\n                $element.append( clone );\n                $element.on( '$destroy', function() {\n                    innerScope.$destroy();\n                });\n            });\n        }\n    };\n}); \n</code></pre>\n\n<p>See it in action in this <a href=\"http://plnkr.co/edit/IbNqR0854V8yXnajKSFB?p=preview\" rel=\"nofollow\">similar plunker</a>. Based on this <a href=\"https://github.com/angular/angular.js/issues/7874\" rel=\"nofollow\">long Github issue discussion</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I want to create a list with custom behavior when it's content changes. I try to create a directive for this but I get a bit lost with how to combine the ng-transclude with the ng-repeat directive. Can somebody put me on track?</p>\n\n<p>Html:</p>\n\n<pre><code>&lt;div ng-app=\"myApp\"&gt;\n  &lt;div ng-controller=\"ctrl\"&gt;\n    &lt;mylist items=\"myItem in items\"&gt;\n       &lt;span class=\"etc\"&gt;{{myItem}}&lt;/span&gt;\n    &lt;/mylist&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Javascript:</p>\n\n<pre><code>angular.module('myApp', [])    \n\n.controller('ctrl', function ($scope) {\n  $scope.items = ['one', 'two', 'three'];\n})    \n\n.directive('mylist', function () {\n  return {\n    restrict:'E',\n    transclude: 'element',\n    replace: true,\n    scope: true,\n    template: [\n      '&lt;ul&gt;',\n        '&lt;li ng-repeat=\"WhatGoesHere in items\" ng-transclude&gt;&lt;/li&gt;',\n      '&lt;/ul&gt;'\n    ].join(''),\n    link: function (scope, element, attr) {\n      var parts = attr.items.split(' in ');\n      var itemPart = parts[0];\n      var itemsPart = parts[1];\n      scope.$watch(itemsPart, function (value) {\n        scope.items = value; \n      });      \n    }\n  }\n});\n</code></pre>\n\n<p>I've got part of this somewhat working <a href=\"http://jsfiddle.net/BaQkw/\">here</a></p>\n\n<h3>EDIT:</h3>\n\n<p>Criteria:</p>\n\n<ul>\n<li>The template of the item must be defined in the view, not in the directive and it must have access to an item property in a child scope. Ideally I want to define this like it is done in the ng-repeat directive</li>\n<li>The directive must have access to the list so I can set proper watches and change things. If possible I would like to have easy access to the generated DOM items (I can also do it with <code>element[0].querySelectorAll('ul&gt;li')</code> or something, It only has to work on Chrome).</li>\n<li>If possible I would like to reuse the logic in the ng-repeat directive because it does already do a lot of what I want. Preferably I don't want to copy the code. I just want to augment its behavior, not change it</li>\n</ul>\n",
            "last_activity_date": 1404223921,
            "question_id": 14388247,
            "score": 21,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "ng-repeat with ng-transclude inside a directive"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Yes, you just forgot the quotes ...</p>\n\n<pre><code>$('&lt;form/&gt;').attr('action','form2.html').submit();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There were two things wrong with your code. The first one is that you included the <code>$(document).ready();</code> but didn't wrap the jQuery object that's creating the element with it.</p>\n\n<p>The second was the method you were using. jQuery will create any element when the selector (or where you would usually put the selector) is replaced with the element you wish to create. Then you just append it to the body and submit it.</p>\n\n<pre><code>$(document).ready(function(){\n    $('&lt;form action=\"form2.html\"&gt;&lt;/form&gt;').appendTo('body').submit();\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/purmou/A9qXe/1/\">Here's</a> the code in action. In this example, it doesn't auto submit, just to prove that it would add the form element.</p>\n\n<p><a href=\"http://jsfiddle.net/purmou/A9qXe/\">Here's</a> the code with auto submit. It works out fine. Jsfiddle takes you to a 404 page because \"form2.html\" doesn't exist on its server, obviously.</p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>Yes, it is possible. One of the solutions is below (<a href=\"http://jsfiddle.net/YqGLH/2/\">jsfiddle as a proof</a>).</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;a id=\"fire\" href=\"#\" title=\"submit form\"&gt;Submit form&lt;/a&gt;\n</code></pre>\n\n<p>(see, above there is no form)</p>\n\n<p>JavaScript:</p>\n\n<pre><code>jQuery('#fire').click(function(event){\n    event.preventDefault();\n    var newForm = jQuery('&lt;form&gt;', {\n        'action': 'http://www.google.com/search',\n        'target': '_top'\n    }).append(jQuery('&lt;input&gt;', {\n        'name': 'q',\n        'value': 'stack overflow',\n        'type': 'hidden'\n    }));\n    newForm.submit();\n});\n</code></pre>\n\n<p>The above example shows you how to create form, how to add inputs and how to submit. Sometimes display of the result is forbidden by <code>X-Frame-Options</code>, so I have set <code>target</code> to <code>_top</code>, which replaces the main window's content. Alternatively if you set <code>_blank</code>, it can show within new window / tab.</p>\n",
                    "is_accepted": false,
                    "score": 44
                },
                {
                    "body": "<p>Like Purmou, but removing the form when submit will done.</p>\n\n<pre><code>$(function() {\n   $('&lt;form action=\"form2.html\"&gt;&lt;/form&gt;').appendTo('body').submit().remove();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Try with this code\nIt is totaly dinamic solution</p>\n\n<pre><code>    var form = $(document.createElement('form'));\n    $(form).attr(\"action\", \"reserves.php\");\n    $(form).attr(\"method\", \"POST\");\n\n    var input = $(\"&lt;input&gt;\").attr(\"type\", \"hidden\").attr(\"name\", \"mydata\").val(\"bla\");\n    $(form).append($(input));\n    $(form).submit();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way in Jquery to create and submit the form on the fly.</p>\n\n<p>Somthing like below.</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt; Title Text Goes Here &lt;/title&gt;\n&lt;script src=\"http://code.jquery.com/jquery-1.7.js\"&gt;\n&lt;/script&gt;\n&lt;script&gt;\n$(document).ready(function(){alert('hi')});\n$('&lt;form/&gt;').attr('action','form2.html').submit();\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\nContent Area\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Is this supposed to work or there is a different way to do this?</p>\n",
            "last_activity_date": 1418149527,
            "question_id": 8003089,
            "score": 21,
            "tags": [
                "javascript",
                "jquery",
                "forms",
                "submit"
            ],
            "title": "Dynamically create and submit form"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I don't see why you would need to use the form tag here.  The only reason to use a form tag (other than to get your markup to validate) is if you are going to have the user \"submit\" the data using a sumbit input or button tag.  If you don't need to do that, then there is no need for the form.   However, not sure if it will be considered \"valid\" markup.  If you do use it you can just do <code>&lt;form action=\"\"&gt;</code> as action is the only required attribute of the form tag.  However, you do bring up a good point, the future of web applications probably will no longer need the form and traditional submit methodology.  Very interesting, and makes me happy.  hehe :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Not that I can see. I'm currently building a web application that uses <code>&lt;form&gt;</code>s, but I'm using them so I have a fallback method if the user has JavaScript disabled (an <code>e.preventDefault</code> stops the form posting normally). For your situation, where you're saying the user MUST have JavaScript, a <code>&lt;form&gt;</code> tag isn't necessary, but it might be an idea to keep it anyway in case browser need to do anything with it, or to access it as a sort of class.</p>\n\n<p>In short, no, you don't need to use <code>&lt;form&gt;</code> if you're doing pure AJAX, although leaving it in might an idea if you suddenly decide to create fallback code in the future.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In my opinion: If you use it for semantic reasons, then use it as intended. The action attribute is required (also can be left empty) to be well-formed, also you can separate your URI-s from your js logic, by setting the action attribute, and reading it before the ajax call.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>AJAX is great but as JamWaffles (+1 to him) said, using <code>form</code> tags provides a fallback method.</p>\n\n<p>Personally I use form tags, even for things I submit with AJAX because it is syntactically clear and makes it easy to grab all inputs within a specific form.  Yes you could do this with a <code>div</code> or whatever too but as I said, using a form is syntactically nice.</p>\n\n<p>Incidentally, screen readers treat the content inside a <code>form</code> differently so there are accessibility issues to be considered whichever way you choose to go.  Note that anecdotal evidence suggests that Google considers accessibility in its rankings so if SEO is a concern for you, use a form and do it right.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If you do not need progressive enhancement, you theoretically don't need them.</p>\n\n<p>On the other hand, <code>form</code>s have some cool <strong>grouping and semantic</strong> effects. Using them, you can <strong>group your form elements logically</strong>, and make it easier for your scripts to gather the values of certain elements.</p>\n\n<p>For example if you want to ajax-submit some user input, it is always easier to say: \"let's take all elements in this form and submit them\" than saying \"let's take this input, these two selects and these three textareas and submit them\". In my experience, it actually helps the developer if <code>form</code> tags are present.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>There is at least one important user-experience feature provided specifically by wrapping inputs inside a form tag:</p>\n\n<p><strong>The enter key will submit the form.</strong>  In fact, in Mobile Safari, this is how you get the <strong>\"Go\"</strong> button <a href=\"http://stackoverflow.com/questions/2990619/mobile-safari-input-field-submit-button/2990714#2990714\">to appear on the keyboard</a>.</p>\n\n<p>Without a form wrapping the inputs, there is nothing to submit.</p>\n\n<p>You can of course provide enter-key behavior through a keypress event, but I don't know about if this works for mobile devices.  I don't know about you, but I'd rather work with the semantics provided by the browser than have to imitate them with events.</p>\n\n<p>In your case, you would simply provide an <code>onsubmit</code> event handler for the form, which would do your AJAX submit, then <code>return false</code>, canceling the actual submit.</p>\n\n<p>You can simply provide <code>action=\"\"</code> (which means \"self\"), and <code>method</code> is not required &mdash; it defaults to <code>GET</code>.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>Summary:\n  forms OK for MVC, simple web apps, bad for component oriented, rich web apps.</p>\n\n<p>Reason:\n  forms cannot nest other forms: big limitation for a component-oriented architecture.</p>\n\n<p>Details:\n  For typical MVC applications, forms are great. In rich, complex web applications using a lot of javascript and AJAX and with a lot of components here and there, I don't like forms. Reason: forms cannot nest another forms. Then if each component renders a form, components cannot nest each other. Too bad. By changing all forms to divs, I can nest them, and whenever I want to grab all parameters in order to pass them to ajax, I just do (with jQuery):</p>\n\n<p>$(\"#id_of_my_div\").find(\"[name]\").serialize();</p>\n\n<p>(or some other filtering)</p>\n\n<p>instead of:</p>\n\n<p>$(\"#id_of_my_form\").serialize();</p>\n\n<p>Though, for sentimental and semantic reasons, I keep naming my divs something_form when they are acting as forms.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Philosophical question: </p>\n\n<p>Say I've got a web app that <em>requires</em> javascript and a modern browser, so progressive enhancement is not an issue. If my form is being built via javascript, and my data updates are all being done via ajax POSTs &amp; PUTs, is there really any reason to wrap my controls in a form tag? If I'm still going to use the tag, say for semantic or structural reasons, is there any reason to have action and method params that I'm going to ignore? It kind of feels like a hold-over from an earlier era to me.</p>\n",
            "last_activity_date": 1387386385,
            "question_id": 6309214,
            "score": 21,
            "tags": [
                "javascript",
                "html",
                "ajax",
                "forms"
            ],
            "title": "Why use a form tag when you&#39;re submitting via ajax?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You should try <a href=\"http://code.google.com/p/rangy/\" rel=\"nofollow\">rangy</a> - A cross-browser JavaScript range and selection library.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>When the WebView goes into \"Selection Mode\", the WebView is not actually being used for selection...  It is being pushed under a \"WebTextView\" (private class in Android's arsenal) which mimics the text position, yet allows images to show through, and allows you to \"select\" the text which appears in the actual HTML.\nThe problem comes when you try to interact with the WebView after \"selecting\" the text.\nThe highlight and cursor handles are in the right position, but they are actually in the special WebTextView I mentioned, therefore you do not actually have a selection to get via JavaScript's getSelection, or any other means in JavaScript.\nI am working on making the ACTION_DOWN (of the LongPress) which triggers selection and the drag and ACTION_UP of the release from drag work for me via JavaScript, but it is very hairy, and not at all user friendly at this point... </p>\n\n<p><a href=\"http://www.java2s.com/Open-Source/Android/android-core/platform-frameworks-base/android/webkit/WebTextView.java.htm\">http://www.java2s.com/Open-Source/Android/android-core/platform-frameworks-base/android/webkit/WebTextView.java.htm</a></p>\n\n<p>check the source(that's a lot of work to mimic text selection instead of provide it) \nIt is sad, and currently very painful for a project our team has undertaken -- especially after doing the same app for iPad...</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Finally, in Android 4.4 KitKat, the WebView is now based on Chromium.</p>\n\n<p>Therefore we have access to <code>window.getSelection()</code>!!</p>\n\n<pre><code>wv.evaluateJavascript(\"console.log(window.getSelection().baseNode.nodeValue);\", null);\n</code></pre>\n\n<p>Tested on Nexus 5 &amp; Nexus 7.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am having some trouble getting the selection from a WebView in Android.</p>\n\n<p>I can get the WebView to go into selection mode. I can even get it to copy the text to the ClipBoard. But what I really want to do is highlight the selection permanently. </p>\n\n<p>So the idea is put the WebView in select mode. Let the user select the text, and then fire something to highlight that text. I can get it to work by getting the selected text from the clipboard, and then search for it in Javascript and highlight it. The problem occurs when the user selects a real common word. I have to either highlight them all or somehow figure out where the selection is to get the right one. </p>\n\n<p>I have tried this JavaScript which works on the iPhone. Bu getSelection() does not seem to work on the Android. </p>\n\n<pre><code>function highlight(colour) {\n    var range, sel;\n    if (window.getSelection) {\n            // Non-IE case\n        sel = window.getSelection();\n        if (sel.getRangeAt) {\n            range = sel.getRangeAt(0);\n        }\n        document.designMode = \"on\";\n        if (range) {\n            sel.removeAllRanges();\n            sel.addRange(range);\n        }\n            // Use HiliteColor since some browsers apply BackColor to the whole block\n        if ( !document.execCommand(\"HiliteColor\", false, colour) ) {\n            document.execCommand(\"BackColor\", false, colour);\n        }\n        document.designMode = \"off\";\n    } else if (document.selection &amp;&amp; document.selection.createRange) {\n            // IE case\n        range = document.selection.createRange();\n        range.execCommand(\"BackColor\", false, colour);\n    }\n}\n</code></pre>\n\n<p>Any suggestions?</p>\n",
            "last_activity_date": 1383654675,
            "question_id": 4892111,
            "score": 21,
            "tags": [
                "javascript",
                "android",
                "webview"
            ],
            "title": "Android WebView Javascript getSelection"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>As far as I can tell, it simply lets the browser begin rendering sooner.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>It has a couple of advantages:</p>\n\n<ul>\n<li><p><strong>Rendering begins sooner.</strong> The browser cannot layout elements it hasn't received yet. This avoids the \"blank white screen\" problem.</p></li>\n<li><p><strong>Defers connection limits.</strong> Usually your browser won't try to make more than a couple of connections to the same server at a time. If you have a whole queue of scripts waiting to be downloaded from a slow server, it can really wreck the user experience as your page appears to grind to a halt.</p></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>One side effect would be that some scripts doesn't work at all if you put them at the end of the page. If there is a script running while the page is rendered (quite commmon for ad scripts for example) that relies on a function in another script, that script has to be loaded first.</p>\n\n<p>Also, saying that the page loads faster is not the exact truth. What it really does is loading the visual elements of the page earlier so that it seems like your page is loading faster. The total time to load all components of the page is still the same.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you get a copy of Microsoft's <a href=\"http://www.microsoft.com/Downloads/details.aspx?FamilyID=119f3477-dced-41e3-a0e7-d8b5cae893a3&amp;displaylang=en\" rel=\"nofollow\">Visual Round Trip Analyzer</a>, you can profile exactly what is happening.</p>\n\n<p>What I have seen more often that not is that most browsers <strong>STOP PIPELINING</strong> requests when they encounter a JavaScript file, and dedicate their entire connection to downloading the single file, rather than downloading in parallel.</p>\n\n<p>The reason the pipelining is stopped, is to allow immediate inclusion of the script into the page.  Historically, a lot of sites used to use document.write to add content, and downloading the script immediately allowed for a slightly more seamless experience.</p>\n\n<p>This is most certainly the behavior that Yahoo is optimizing against.  (I have seen the very same recommendation in MSDN magazine with the above explanation.)</p>\n\n<p>It is important to note that IE 7+ and FF 3+ are less likely to exhibit the bad behavior.  (Mostly since using document.write has fallen out of practice, and there are now better methods to pre-render content.)</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Your page should actually load faster. Browsers will open more than one connection to download three images in parallel, for example. On the other hand, the <code>&lt;script&gt;</code> tags in most browsers cause the browser to block on that script executing.  If its a <code>&lt;script&gt;</code> tag with a src attribute, the browser will block to both download and execute. If you put your <code>&lt;script&gt;</code> tags at the end, you avoid this problem.</p>\n\n<p>At the same time, this means that those pages don't have any JS functionality until they're done loading. A good exercise in accessibility is to ensure your site runs well enough to be usable until the JS loads. This ensures that the page will (a) work well for people with slow connections (b) work well for people who are impaired or use text-only browsers.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Putting them at the bottom is a close equivalent to using the <a href=\"http://www.w3.org/TR/REC-html40/interact/scripts.html#adef-defer\" rel=\"nofollow\">\"defer\"</a> attribute (even more info <a href=\"http://www.websiteoptimization.com/speed/tweak/defer/\" rel=\"nofollow\">here</a>). This is similar to how a browser cannot continue with page layout unless IMG tags have width and height information -- if the included javascript generates content, then the browser can't continue with layout until it knows what is there, and how big everything is.</p>\n\n<p>So long as your javascript doesn't need to run before the onload event happens, you should be able to either place the script tags at the end, or use the defer attribute.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>if you are developing for firefox/safari, you can always check with firebug/developer console as they show the loading sequence of files</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There are some points.</p>\n\n<ol>\n<li><p>It loads page fast since the JavaScript internal or external is on bottom.</p></li>\n<li><p>If you have not used a <strong>onLoad</strong>  method of window in JavaScript it will start execution as soon as it rendered. The Script at bottom ensures that your script will execute after page load.</p></li>\n<li><p>If script is as a file means external then will render after the HTML image and other visual object that forms the page view.</p></li>\n</ol>\n\n<p>If you are using fireFox then there is a plug in to check the performance. \nPlease do hit the firefox site for this plugin. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Yahoo best practices states that <a href=\"http://developer.yahoo.com/performance/rules.html#js_bottom\">putting JavaScript files on bottom</a> might make your pages load faster. What is the experience with this? What are the side effects, if any? </p>\n",
            "last_activity_date": 1293811403,
            "question_id": 855077,
            "score": 21,
            "tags": [
                "javascript"
            ],
            "title": "Does putting scripts on the bottom of a web page speed up page load?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<pre><code>var x = \"1.txt\";\nalert (x.substring(x.indexOf(\".\")+1));\n</code></pre>\n\n<p>note 1: this will not work if the filename is of the form <strong>file.example.txt</strong><br />\nnote 2: this will fail if the filename is of the form <strong>file</strong></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use the <code>lastIndexOf</code> method to find the last period in the string, and get the part of the string after that:</p>\n\n<pre><code>var ext = fileName.substr(fileName.lastIndexOf('.') + 1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 51
                },
                {
                    "body": "<p>I use code below:</p>\n\n<pre><code>var fileSplit = filename.split('.');\nvar fileExt = '';\nif (fileSplit.length &gt; 1) {\nfileExt = fileSplit[fileSplit.length - 1];\n} \nreturn fileExt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is the solution if your file has more . (dots) in the name.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;var x = \"file1.asdf.txt\";\nvar y = x.split(\".\");\nalert(y[(y.length)-1]);&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would recommend using <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf\" rel=\"nofollow\">lastIndexOf()</a> as opposed to <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf\" rel=\"nofollow\">indexOf()</a></p>\n\n<pre><code>var myString = \"this.is.my.file.txt\"\nalert(myString.substring(myString.lastIndexOf(\".\")+1))\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>A variant that works with all of the following inputs:</p>\n\n<ul>\n<li><code>\"file.name.with.dots.txt\"</code></li>\n<li><code>\"file.txt\"</code></li>\n<li><code>\"file\"</code></li>\n<li><code>\"\"</code></li>\n<li><code>null</code></li>\n</ul>\n\n<p>would be:</p>\n\n<pre><code>var re = /(?:\\.([^.]+))?$/;\n\nvar ext = re.exec(\"file.name.with.dots.txt\")[1];   // \"txt\"\nvar ext = re.exec(\"file.txt\")[1];                  // \"txt\"\nvar ext = re.exec(\"file\")[1];                      // undefined\nvar ext = re.exec(\"\")[1];                          // undefined\nvar ext = re.exec(null)[1];                        // undefined\n</code></pre>\n\n<p>Explanation</p>\n\n<pre>\n(?:         # begin non-capturing group\n  \\.        #   a dot\n  (         #   begin capturing group (captures the actual extension)\n    [^.]+   #     anything except a dot, multiple times\n  )         #   end capturing group\n)?          # end non-capturing group, make it optional\n$           # anchor to the end of the string\n</pre>\n",
                    "is_accepted": false,
                    "score": 109
                },
                {
                    "body": "<p>I personally prefer to split the string by '.' and just return the last array element :)</p>\n\n<p><code>var fileExt = filename.split('.').pop();</code></p>\n\n<p>If there is no '.' in <em>filename</em> you get the entire string back.</p>\n\n<p><strong>Examples:</strong></p>\n\n<p>'some_value' = 'some_value'</p>\n\n<p>'.htaccess' = 'htaccess'</p>\n\n<p>'../images/something.cool.jpg' = 'jpg'</p>\n\n<p>'http://www.w3schools.com/jsref/jsref_pop.asp' = 'asp'</p>\n\n<p>'http://stackoverflow.com/questions/680929' = 'com/questions/680929'</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>get the value in the variable &amp; then separate its extension just like this.</p>\n\n<pre><code>var find_file_ext=document.getElementById('filename').value;\nvar file_ext=/[^.]+$/.exec(find_file_ext); \n</code></pre>\n\n<p>This will help you.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Better to use the following; Works always!</p>\n\n<pre><code>var ext =  fileName.split('.').pop();\n</code></pre>\n\n<p>This will return the extension without a dot prefix. You can add \".\" + ext to check against the extensions you wish to support!</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Try this. May solve your problem.</p>\n\n<pre><code>var file_name_string = \"file.name.string.png\"\n\nvar file_name_array = file_name_string.split(\".\");\nvar file_extension = file_name_array[file_name_array.length - 1];\n</code></pre>\n\n<p>Regards</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use My extensions to String Object : </p>\n\n<p><strong>strRight ,strLeft and strCenter</strong> functions: </p>\n\n<h1>DEMO :<a href=\"http://jsfiddle.net/abdennour/wzmS6/1/\" rel=\"nofollow\"> http://jsfiddle.net/abdennour/wzmS6/1/</a></h1>\n\n<p><strong>Example :</strong> \n var mypath='/documents/imageup1.txt';</p>\n\n<pre><code>alert('/documents/imageup1.txt'.strRight('imageup'))\n</code></pre>\n\n<p>=> RESULT : <code>1.txt</code></p>\n\n<pre><code>alert('/documents/imageup1.txt'.strLeft('.txt'))\n</code></pre>\n\n<p>==> RESULT : <code>/documents/imageup1</code></p>\n\n<pre><code>alert('/documents/imageup1.txt'.strCenter('/imageup','.txt'))\n</code></pre>\n\n<p>==> RESULT: <code>1</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>how would i get the File extension of the file in a variable?\nlike if I have a file as 1.txt I need the txt part of it.</p>\n",
            "last_activity_date": 1416135455,
            "question_id": 680929,
            "score": 21,
            "tags": [
                "javascript"
            ],
            "title": "How to extract extension from filename string in Javascript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>contentEditable works under Firefox 3.\nI don't know of any problems with contentEditable.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>How about using some open-source solution that works in all major browsers?</p>\n\n<p><a href=\"http://tinymce.moxiecode.com/\">TinyMCE</a></p>\n\n<p>There are other projects as well, but that's what I'd use.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I would just be sure to check what content you get back as inserting XSS attacks are quite easy in IE if there is no validation of the HTML content added.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://www.w3.org/TR/html5/editing.html\">HTML 5</a> include the contenteditable attribute, so it looks like it will be in IE for a long time to come.</p>\n\n<p>Just got a email from someone on the IE team</p>\n\n<blockquote>\n  <p>While it's basically impossible to\n  comment on the future with a high\n  degree of confidence, it's fair to say\n  that I'm not aware of any plans to\n  remove contentEditable, and if it were\n  removed, it would break a LOT of\n  sites.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>A quick google search produced a <a href=\"http://annevankesteren.nl/2005/07/more-contenteditable\" rel=\"nofollow\">blog post</a> on some (albeit minor) issues of contentEditable.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The contentEditable property works in Safari, Firefox 3, and Opera 9. </p>\n\n<p>Since manipulation will undoubtably be through selections, your biggest problem will be getting the selection/ranges working across browsers (<a href=\"http://stackoverflow.com/questions/361130/get-selected-text-and-selected-nodes-on-a-page/364476#364476\">see here)</a>. </p>\n\n<p>There are also numerous <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=454191\">little bugs</a> across browsers which may or may not bite you. These include incompatible case-sensitivity, incompatible methods of turning it off again (removeAttribute vs. setting to false).</p>\n\n<p>Despite these flaws, I find it works rather well.</p>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>We have to add a basic HTML editor to our product.  As we only support IE at present (most customers are still on IE 6), I have been told to use the Internet Explorer built-in XHTML editing capabilities \u2013 e.g. <code>&lt;div contentEditable=\"true\"&gt;</code> as explained at \"<a href=\"http://www.maconstateit.net/tutorials/JSDHTML/JSDHTML12/jsdhtml12-02.htm\">Editing a Web Page</a>\" .</p>\n\n<p><strong>Apart</strong> from not working in other browsers. (The management does not consider it being a problem.  Our customers will put up with our software only working with IE.  We have never lost any money by our software only working in IE; most customers will only let their staff use IE6 at present anyway)</p>\n\n<p>What <strong>other</strong> problem are we likely to get with contentEditable?</p>\n\n<p><hr /></p>\n\n<p><strong>Update</strong></p>\n\n<p>The HTML editor I wrote with \u201ccontentEditable\u201d proved to very hard to get reliable,  with many <a href=\"http://stackoverflow.com/questions/527866/why-is-contenteditable-removing-id-from-div\">problems</a>.  If I had to do this again, I would push <strong>very hard</strong> to one of the many open source solutions (e.g. TinyMCE) or buy in a supported HTML editor. </p>\n\n<p>No doubt that a very skilled jscript programmer can get \u201ccontentEditable\u201d to work well given enough time.  It just that all the examples on the web looks so simple, until you test common operations like doing a cut/paste from word and trying to edit the resulting HTML.  (just the sort of things a customer will do)</p>\n\n<p>(Just search for \u201ccontentEditable\u201d on stackoverflow to get some ideal of the problems other people have had)</p>\n",
            "last_activity_date": 1351246661,
            "question_id": 491790,
            "score": 21,
            "tags": [
                "javascript",
                "html",
                "internet-explorer",
                "contenteditable"
            ],
            "title": "Risk of using contentEditable in IE"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>Degrade gracefully - make sure the site works without JavaScript, then add bells and whistles for those with JavaScript enabled.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>It depends on how much time you have to develop and maintain both solutions, and how much the non-javascript users are worth to you.</p>\n\n<p>My e-commerce site relies heavily on javascript, and in over a year and a half, I've not received a single complaint.\nIn fact, I don't think I've seen a single visitor with javascript disabled in any of logs since I started.\nThat doesn't mean they're not out there. It just means that either (a) they're a tiny percentage, (b) they're not interested in what I'm selling, or (c) both of the above.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>It is essential to at least test your website is <em>functional</em> when JavaScript is turned off.</p>\n\n<p>As orip says, degrading gracefully is very important. It should be <strong>vital</strong> that your page both looks nice and functions when JavaScript is disabled.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<h2>Consider your audience</h2>\n\n<p>\"Degrade gracefully\" is generally the best answer. But lots of sites now depend on JS - especially AJAX.</p>\n\n<p>Consider your audience. If your site is aimed at extremely tech-savvy people, the chances of them not having javascript are small, and you can notify them to turn it on if necessary.</p>\n\n<p>If your audience may access your site with mobile devices, don't assume they have JavaScript, and don't even assume they support CSS properly. Aim to degrade gracefully all the way down to bare HTML.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>As other have said, it should \"degrade gracefully\".</p>\n\n<p>In other works, it must work without Javascript (period).  It doesn't have to work well.  The folks who've disabled Javascript know the limitations that causes and have accepted them.  But if you are trying to sell them something, it's important that they can still buy it.</p>\n\n<p>On the site I'm designing, there's a javascript-based fly-out menu.  With Javascript off, all the flyouts are always open.  It doesn't look as cool as it would with JS, but it can still be used to navigate the site.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As said before, it depends on your target audience.</p>\n\n<p>If I'm part of it, you want to make sure that your site works (if not ideally) on my phone, and that it gives me reason to turn Javascript on when I surf there with it off.  Nobody expects full functionality with Javascript disabled, and anybody who uses their phone to access websites expects some issues, but you need to at least provide teasers.  For a web store, make sure customers can see at least some merchandise anyway, even if they can't buy without Javascript.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I am one of those that uses 'No-Script.' And I can tell you that sites that use javascript and don't work without it enabled is extremely annoying, stackOverflow... No we don't expect it to be very fancy, if I upvote load a new page that says \"Thank you.\"</p>\n\n<p>We expect to be able to use the site with reasonable limitations, don't ever display a page that says JS must be enabled, though, even if the site is crap without it. And yes if your site convinces us to stay we will enable. A function that isn't in common use on the site can also require javascript.</p>\n\n<p>Please note that your site should also look good with no JS or CSS, if nothing else it is good for Bots.</p>\n\n<p>As others have pointed out some phones don't have JS, this is changing but another good reason to have reasonable non-JS. I suggest code with non-JS and add JS after the former works, there are good ways where JS can work with the non-JS layout.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Everyone else has committed good comments, but there are a few other considerations to make. </p>\n\n<h3>Sometimes the javascript will be hosted on a different domain, and be prone to timeout.</h3>\n\n<p>Sometimes that domain may become inacessible, while your site remains accessible. Its not good to have your site completely stack itself in this scenario. </p>\n\n<p>For this reason, \"blocking\" scripts ( ie: document write inline ) like that present in google's tracker, should be avoided, or at very least, should go as late in the page as possible so the page renders whether or not the domain is timing out requests or not.</p>\n\n<p>If you happen to be serving JS from a broken/malicious server, by intent or by accident, one can halt page rendering simply by having a script that serves that javascript which just calls \"sleep(forever)\" once its sent all the headers. </p>\n\n<h3>Some People Use NoScript</h3> \n\n<p>Like the above problem, sometimes the clients environment may block certain script sources, be it the users choosing, or other reasons ( ie: browser security satisfactions, odd antivirus/anti-malware apps ). The most popular and controllable instance of this is NoScript, and I myself paranoidly block some of the popular tracking/advertising services with it ( some proxy servers will do this too ). </p>\n\n<p>However, if a site is not well designed, the failing of one script to load still executes code that was dependant on that script being present, which yeilds errors and stops everything working. </p>\n\n<p>My recommendation is :</p>\n\n<ol>\n<li>Use Firebug </li>\n<li>Use NoScript and block out everything --> See Site still works </li>\n<li>Enable core site scripts that you cant' do without for anything --> See site still works and firebug doesn't whine. </li>\n<li>Enable 3rd party stuff --> See site still works and firebug doesn't whine. </li>\n</ol>\n\n<p>There are a lot of other complications that can crop up, but satisfying the above 2 should solve most of them. Just assume that, for whatever reason, one or more resources that comprise a page are viable to spontaneously disappear ( they do, all the time ), and you want the page to \"survive\" this problem as amicably as possible. For the problems that may persist for &lt; 10 seconds, its not so bad, refresh the page and its fixed, but if its a problem that can occur, and severley hamper usability for an hour or more at a time. </p>\n\n<p>In essence, instead of thinking \"oh, theres the edge case users that don't have javascript\", try thinking more a long the lines of \"its really easy to have something go wrong, and have <em>ALL</em> of our users with broken javascript. Ouch! Lets try make it so we dont' really hose ourself when that does happen\" </p>\n\n<p>( I've seen IE updates get rolled out and hose javascript for that entire browser until the people whom wrote the scripts find a workaround. Losing all your IE customers is not a good thing )</p>\n\n<p><code>:set sarcasm</code></p>\n\n<p><code>:set ignoreSpelling</code></p>\n\n<p><code>:set iq=76</code></p>\n\n<h3>Don't worry, its only a 5% Nich\u00e9 Market</h3>\n\n<p>Nobody cares about targeting Nich\u00e9 markets right? All those funny propeller heads running lynx in their geeky stupid linoox cpus, spending all their time on the intarwebs surfing because they have nothing better  to do with their life or money? the crazy security paranoid nerds disabling javascript left and right because they don't like it? </p>\n\n<p>Nobody wants them as your primary customer now do they? \nNich\u00e9 markets. Pfft. Who cares!</p>\n\n<p><code>:set nosarcasm</code></p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>For a standard web site that is primarily intended for conveying information, degrade gracefully always.</p>\n\n<p>For web applications:</p>\n\n<p>When building a web application for a standard internet audience, I would keep the three following facts in mind:</p>\n\n<ol>\n<li>95%-97% of potential users will have JavaScript enabled.</li>\n<li>At times established users will need to access functionality when JavaScript is not available.</li>\n<li>3%-5% of potential users will have JavaScript intentionally disabled.</li>\n</ol>\n\n<p>Given fact one, if you believe that building <b>a JavaScript reliant web application will deliver a superior user experience</b>, then by all means do it.  Doing so may help you accumulate users.</p>\n\n<p>However, given fact two, you should <b>always provide a means by which your users can access core functionality without JavaScript</b>.  Do you need to offer every single feature?  Probably not.  But a user should be able to get his or her work done.  This will keep your users happy when they find themselves temporarily without JavaScript.</p>\n\n<p>Given fact three, I would also provide an in depth tour as an attempt to <b>entice these users to enable JavaScript</b>.</p>\n\n<p>As an aside, one of my most favorite web applications, <a href=\"http://www.rememberthemilk.com\" rel=\"nofollow\">Remember The Milk</a> follows this approach.  Also, <a href=\"http://www.google.com/calendar\" rel=\"nofollow\">Google's Calendar application</a> is unusable without JavaScript.  So JavaScript reliant web apps are on the rise and that trend is probably unstoppable.  In my opinion this is a good thing.</p>\n\n<p>(Do keep in mind that JavaScript make Accessbility a bigger problem than it is already.  Please do make an effort to make your apps usable by those with disabilities.)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Code your web site with support for the bare minimum kind of browser.  Then more people can use your site without frustration even if they don't have all the bells and whistles--like Flash, Javascript, and Java--enabled.  It may not be practical to continue support for ancient browsers, say Netscape Navigator 4, because a user can be reasonably expected to keep their computer up-to-date.  However, features like Javascript, Flash, and Java can be security holes in old or modern browsers, as well as being an annoyance.</p>\n\n<p>Neither of my parents keep Javascript or Flash enabled because they've had too many experiences with them slowing down their already slow connection, crashing their browsers, or being more of an annoyance on sites that use it stupidly (which is a lot of them...) than a useful feature.  It's just bad design if, for example, your form <em>requires</em> an AJAX call be made and you can't actually hit a submit button to send the form when Javascript is disabled.</p>\n\n<p>My mother was recently quite frustrated to discover that she is now unable to click through eBay results pages because each one requires Javascript.  The only way she can see the next page of results is to turn on Javascript or to show more results per page.  Now what reason would there be for page links to require Javascript while the 'results per page' links are just plain links?  They should <em>all</em> be plain old HTML links.  Maybe Javascript could be used to add some whiz-bang to the navigation, but a user should not be punished with a bad interface for having Javascript disabled.  It's stupid on eBay's part, and it causes undue hassle for their users.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I've learned a lot from my question: <a href=\"http://stackoverflow.com/questions/373818/whats-with-those-do-not-use-javascript-people\">What's With Those Do-Not-Use Javascript People</a></p>\n\n<p>Go with Ajax and Web 2.0. It's the way the web is going and it's wonderful. Isn't Stackoverflow great to be on? It's not quite as nice with your Javascript turned off.</p>\n\n<p>Once you have your site ready, but before you let it go live, test it with Javascript off, and just add whatever you feel you need to make your site appear and function to them. You only need to add what you feel is essential.</p>\n\n<p>Remember, except for visually impared people using screen readers, the others have chosen to turn javascript off. They can also choose to trust your site and turn javascript on for your site if they want to use all the functionality you have. It really is their choice.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>It helps me in my implementations to think about it as \"progressive enhancement\" rather than graceful degradation. Degradation often leads you to figure out how to make it work w/o js after it is implemented, instead of making a baseline and enhancing with js.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm currently building a project and I would like to make use of some simple javascript - I know some people have it disabled to prevent XSS and other things. Should I...</p>\n\n<p>a) Use the simple javascript, those users with it disabled are missing out</p>\n\n<p>b) Don't use the simple javascript, users with it enabled have to click a little more</p>\n\n<p>c) Code both javascript-enabled and javascript-disabled functionality</p>\n\n<p>I'm not really sure as the web is always changing, what do you recommend?</p>\n",
            "last_activity_date": 1282326388,
            "question_id": 337570,
            "score": 21,
            "tags": [
                "javascript"
            ],
            "title": "Is it worth it to code different functionality for users with javascript disabled?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Direct Javascript calls between frames and/or windows are only allowed if they conform to the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Same_origin_policy_for_JavaScript#Changing_origin\">same-origin policy</a>.  If your window and iframe share a common parent domain you can set <code>document.domain</code> to \"<a href=\"http://blogs.msdn.com/b/dthorpe/archive/2007/09/27/cross-domain-communication-using-domain-lowering.aspx\">domain lower</a>\") one or both such that they can communicate.  Otherwise you'll need to look into something like the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window.postMessage\">postMessage() API</a>.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>This is a security update. If an attacker can modify some file in the web server (the JS one, for example), he can make every loaded pages to download another script (for example to keylog your password or steal your SessionID and send it to his own server).</p>\n\n<p>To avoid it, the browser check the <a href=\"http://en.wikipedia.org/wiki/Same-origin_policy\">Same-origin policy</a></p>\n\n<p>Your problem is that the browser is trying to load something with your script (with an Ajax request) that is on another domain (or subdomain).\nTo avoid it (if it is on your own website) you can:</p>\n\n<ul>\n<li>Copy the element on your own server (but it will be static).</li>\n<li>You can change your HTTP header to accept Cross-Origin content. See the <a href=\"http://www.w3.org/TR/2008/WD-access-control-20080912/\">Access-Control-Allow-Origin documentation</a> for more information.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>When script tries to access a frame from a different origin Chrome blocks it and throws exception as </p>\n\n<blockquote>\n  <p>\"Uncaught SecurityError: Blocked a frame with origin 'provider domain' from accessing a frame with origin 'mydomain'. Protocols, domains, and ports must match\". </p>\n</blockquote>\n\n<p>I got this error after some update in google chrome. Any suggestions?</p>\n",
            "last_activity_date": 1383836848,
            "question_id": 19837354,
            "score": 20,
            "tags": [
                "javascript",
                "google-chrome"
            ],
            "title": "Chrome blocks different origin requests"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can use the popular library <a href=\"http://masonry.desandro.com/\">Masonry</a>.</p>\n\n<blockquote>\n  <p>A dynamic layout plugin for jQuery The flip-side of CSS floats</p>\n</blockquote>\n\n<p>Here is a code <a href=\"http://masonry.desandro.com/demos/basic-single-column.html\">example</a>...</p>\n\n<pre><code>$('#container').masonry({\n  itemSelector: '.box'\n});\n</code></pre>\n\n<p>Here is the source on <a href=\"https://github.com/desandro/masonry\">Github</a> and an interview with <a href=\"http://shoptalkshow.com/episodes/024-with-david-desandro/\">David Desandro</a> on the Shoptalk podcast.</p>\n\n<p>For folks that aren't using jQuery, note that there's also <a href=\"http://vanilla-masonry.desandro.com/\">Vanilla Masonry</a> which is the framework-free version.</p>\n\n<p><strong>Tip:</strong> Make sure the parent container has position:relative so all the content is bound to your container.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p><em>Note: Promoted comment to answer</em></p>\n\n<p>Since you are already using jquery, jquery masonry might interest you: <a href=\"http://masonry.desandro.com\" rel=\"nofollow\">http://masonry.desandro.com</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Well, if you only aim to support the most modern browser, the <a href=\"https://developer.mozilla.org/en/CSS3_Columns\" rel=\"nofollow\">CSS3 multi-column layout</a> could help. One problem with this approach is that it will not keep the same order, but you can play with the order in the HTML (or Javascript).</p>\n\n<p>I added a container around your spans called <code>#container</code>.</p>\n\n<pre><code>#container { \n    -webkit-column-width: 100px; \n    -moz-column-width: 100px; \n    column-width: 100px; \n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/bazmegakapa/Ft9d2/\" rel=\"nofollow\">jsFiddle Demo</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm wondering how I can accomplish the effect in figure 1.</p>\n\n<p><img src=\"http://i.stack.imgur.com/LTJy6.png\" alt=\"Float left up\"></p>\n\n<p>What I have got so far is </p>\n\n<p><code>\n.box { display: inline-block; vertical-align: top; width: 100px;}\n</code></p>\n\n<p>This gives me the result illustrated in figure 2.\n(Notice: I'm aware I can accomplish the same with float: left)</p>\n\n<p>My HTML code looks something like this:</p>\n\n<pre><code>&lt;span class=\"box\"&gt;A&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/span&gt;\n&lt;span class=\"box\"&gt;B&lt;br&gt;&lt;/span&gt;\n&lt;span class=\"box\"&gt;C&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/span&gt;\n&lt;span class=\"box\"&gt;D&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/span&gt;\n&lt;span class=\"box\"&gt;E&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/span&gt;\n&lt;span class=\"box\"&gt;F&lt;/span&gt;\n&lt;span class=\"box\"&gt;G&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/span&gt;\n&lt;span class=\"box\"&gt;H&lt;br&gt;&lt;/span&gt;\n&lt;span class=\"box\"&gt;I&lt;br&gt;&lt;br&gt;&lt;/span&gt;\n</code></pre>\n\n<p>I want every element to be floated to the left as far as possible, but meanwhile floating upwards.</p>\n\n<p>Is it possible to do this with pure css, or will i need some javascript?</p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>It is important for me that the entire grid is positioned to the center of the page. That's why I use display:inline-block. The grid should also not be fixed to the page because I want it to reflow when I resize my window.</p>\n",
            "last_activity_date": 1366983118,
            "question_id": 11434756,
            "score": 20,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "layout"
            ],
            "title": "css float elements with unequal heights left and up in grid"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Note: <a href=\"http://msdn.microsoft.com/en-us/library/gg622929%28v=VS.85%29.aspx?ppud=4\">here</a> there is some documentation from IE9 that may help to understand. Thanks to @Ben Amada for sharing it.</p>\n\n<hr>\n\n<p>After almost a week of going crazy day after day I found it out.</p>\n\n<p>The problem with IE9 is no specifically with the javascript code in the iframes. Not even with the javascript in iframes added by javascript or any library (I have lots of js libraries and plugins that could be screwing IE9).</p>\n\n<p>The problem is when you move the iframe or one ancestor through the DOM. IE9 will excecute the code in the page loaded in the iframe as many times as moves you make. Each time (but the last one) will have Object, String, Array and others undefined (and other bugs too).</p>\n\n<p>Example:</p>\n\n<pre><code>var iframe = $(\"&lt;iframe&gt;\").attr(\"src\", \"www.example.com\").attr(\"id\", \"myIframe\");\niframe.appendTo(\"body\");\n$(\"#myIframe\").appendTo(\"form:eq(0)\");\n</code></pre>\n\n<p>The javascript code in \"www.example.com\" will be executed once with the error described above and then once with no errors.</p>\n\n<p>With the following code the code will be excecuted just once and correctly:</p>\n\n<pre><code>var iframe = $(\"&lt;iframe&gt;\").attr(\"src\", \"www.example.com\").attr(\"id\", \"myIframe\");\niframe.appendTo(\"form:eq(0)\");\n</code></pre>\n\n<p>I hope this helps someone to avoid this pain in the ass,</p>\n\n<p>Diego</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>There is a similar way of achieving this using an existing iframe if you aren't creating a new element.</p>\n\n<pre><code>$(function () {\n    var iframeSrc = $(\"#iframeid\").attr(\"src\"); // capture target URI\n    $(\"#iframeid\").attr(\"src\", \"about:blank\"); // delay loading until we reposition in the DOM\n    $(\"#iframeid\").appendTo(\"#newparent\").attr(\"src\", iframeSrc); // reposition, load iframe by setting src\n});\n</code></pre>\n\n<p>IE9 or jquery framework needs to fix this issue.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I'm having a similar issue, however the iframe is added to the page rather than removed from it. It still appears to have the same problems.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've a very complete site in ASP.NET wich uses iframes. I'm working to change an old control we'd been using to show dialogs to use jQuery UI dialogs. I'm also making sure everything works well in IE9.</p>\n\n<p>The fact is: the script I've in the pages shown in iframes is not working in IE9. Why? Because Object, Array and String are undefined. There may be some others issues, I've seen only this ones.</p>\n\n<p>There is no chance (because a lot of reasons) to stop using iframes on some dialogs. And I'd rather not to use the meta tag to force IE8 Compability. Does anyone know any way to fix this uggly bug in IE9?</p>\n\n<p>Thanks, Diego</p>\n\n<p><strong>Edit</strong></p>\n\n<p>Here there's some info that may be helfull:</p>\n\n<p>jQuery code for the iframe in a plugin I've made to config jQuery UI dialog:</p>\n\n<pre><code>options.content = $(\"&lt;iframe&gt;\")\n    .attr(\"src\", options.intSrcIframe)\n    .attr(\"frameborder\", 0)\n    .attr(\"scrolling\", options.intIframeScrolling)\n    .css(\"background-color\", options.intBgColorIframe)\n    .attr(\"height\", \"100%\")\n    .attr(\"width\", \"100%\");\n\n_this.html(options.content);\n</code></pre>\n",
            "last_activity_date": 1350051184,
            "question_id": 5514973,
            "score": 20,
            "tags": [
                "javascript",
                "asp.net",
                "internet-explorer",
                "iframe",
                "internet-explorer-9"
            ],
            "title": "Javascript code in iframes in IE9 not working"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>for(var i = 0; i &lt; restaurants.length; i++)\n{\n  if(restaurants[i].restaurant.food == 'chicken')\n  {\n    return restaurants[i].restaurant.name;\n  }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>Must be too late now, but the right version would be: </p>\n\n<pre><code>for(var i = 0; i &lt; restaurants.restaurant.length; i++)\n{\n  if(restaurants.restaurant[i].food == 'chicken')\n  {\n    return restaurants.restaurant[i].name;\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>for(x in restaurants) {\n  if(restaurants[x].restaurant.food=='chicken') {\n    return restaurants[x].restaurant.name;\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In this case i would use the ECMAscript 5 Array.filter. The following solution requires array.filter() that doesn't exist in all versions of IE. </p>\n\n<p>Shims can be found here: <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/filter\">MDN Array.filter</a> or <a href=\"https://github.com/kriskowal/es5-shim\">ES5-shim</a></p>\n\n<pre><code>var result = restaurants.filter(function (chain) {\n    return chain.restaurant.food === \"chicken\";\n})[0].restaurant.name;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>you can use ES5 some. Its pretty first by using callback</p>\n\n<pre><code>function findRestaurent(foodType) {\n    var restaurant;\n    restaurants.some(function (r) {\n        if (r.food === id) {\n            restaurant = r;\n            return true;\n        }\n   });\n  return restaurant;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>@Chap - you can use this javascript lib, DefiantJS (<a href=\"http://defiantjs.com\" rel=\"nofollow\">http://defiantjs.com</a>), with which you can filter matches using XPath on JSON structures. To put it in JS code:</p>\n\n<pre><code>var data = [\n   { \"restaurant\": { \"name\": \"McDonald's\", \"food\": \"burger\" } },\n   { \"restaurant\": { \"name\": \"KFC\",        \"food\": \"chicken\" } },\n   { \"restaurant\": { \"name\": \"Pizza Hut\",  \"food\": \"pizza\" } }\n].\nres = JSON.search( data, '//*[food=\"pizza\"]' );\n\nconsole.log( res[0].name );\n// Pizza Hut\n</code></pre>\n\n<p>DefiantJS extends the global object with the method \"search\" and returns an array with matches (empty array if no matches were found). You can try out the lib and XPath queries using the XPath Evaluator here:</p>\n\n<p><a href=\"http://www.defiantjs.com/#xpath_evaluator\" rel=\"nofollow\">http://www.defiantjs.com/#xpath_evaluator</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a JSON array, I need to return a restaurant's name, but I only know the value of its \"food\" attribute (not it's index number).</p>\n\n<p>For example, how could I return \"KFC\" if I only knew \"chicken\"?</p>\n\n<pre><code>restaurants = \n  [\n    {\"restaurant\" : { \"name\" : \"McDonald's\", \"food\" : \"burger\" }},\n    {\"restaurant\" : { \"name\" : \"KFC\",        \"food\" : \"chicken\" }},\n    {\"restaurant\" : { \"name\" : \"Pizza Hut\",  \"food\" : \"pizza\" }}\n  ];\n</code></pre>\n",
            "last_activity_date": 1415374571,
            "question_id": 2166765,
            "score": 20,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "Search JSON array for matching attribute"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You cat try this, may be it helps:<br/></p>\n\n<pre><code>var buttonsOpts = {}\nbuttonsOpts[translations[\"ok\"]] = function ....\nbuttonsOpts[translations[\"cancel\"]] = function ....\njQuery('#bar').dialog({\n   buttons : buttonsOpts\n});\n</code></pre>\n\n<p>Hope it helps! Sorry i can`t test it now.</p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<pre><code>jQuery('#bar').dialog({\n   buttons : [\n       {\n        text: translations.ok,\n        click: function(){}\n       },\n       {\n        text: translations.cancel,\n        click: function(){}\n       },\n   ]\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I know this is 4 years old, but it is the top result for an issue I have been having. Here was the results of my labor.</p>\n\n<p>Simply call the function in a mouse or keyboard event, reference a function (without parentheses), define the buttons or set blank, set a title, and set the text to be displayed.</p>\n\n<pre><code>function confirmDialogue(fn, value, ok, cancel, title, text){\n    if (typeof ok == \"undefined\" || ok == \"\"){ok = \"Ok\";}\n    if (typeof cancel == \"undefined\" || cancel == \"\"){cancel = \"Cancel\";}\n    var buttonsOpts = {};\n    buttonsOpts[ok] = function() {fn(value);$( this ).dialog( \"destroy\" );}\n    buttonsOpts[cancel] = function() {$( this ).dialog( \"destroy\" );}\n\n    var NewDialog = $('&lt;div id=\"dialogConfirm\"&gt;&lt;p&gt;' + text + '&lt;/p&gt;&lt;/div&gt;');\n    NewDialog.dialog({\n        title: title,\n        dialogClass: \"dialogue\",\n        modal: true,\n        height: \"auto\",\n        width: \"auto\",\n        show: true,\n        hide: true,\n        close: function(){$(this).dialog('destroy');},\n        buttons: buttonsOpts\n    });\n    return false;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have variables holding the translated labels for buttons inside a jquery ui dialog.</p>\n\n<p>I cannot fill the button array key with the variable itself, and can't find any way to let it treat my variable just as string.</p>\n\n<pre><code>translations['ok'] = 'ok';\ntranslatinos['cancel'] = 'cancel';\n\n// not working\njQuery('#foo').dialog({\n    buttons:\n    {\n        translations['ok']: function() { alert('foo-ok'); },\n        translations['cancel']: function() { alert('foo-cancel'); }\n    }\n});\n\n// working\njQuery('#bar').dialog({\n    buttons:\n    {\n        \"Ok\": function() { alert('bar-ok'); },\n        \"Cancel\": function() { alert('bar-cancel'); }\n    }\n});\n</code></pre>\n\n<p>Is there any way to get this to work with variable array keys?</p>\n",
            "last_activity_date": 1408736800,
            "question_id": 1357281,
            "score": 20,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui",
                "localization",
                "jquery-ui-dialog"
            ],
            "title": "jQuery UI Dialog Buttons from variables"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<pre><code>^[ _]*[A-Z0-9][A-Z0-9 _]*$\n</code></pre>\n\n<p>You can optionally have some spaces or underscores up front, then you need one letter or number, and then an arbitrary number of numbers, letters, spaces or underscores after that.</p>\n\n<p>Something that contains only spaces and underscores will fail the <code>[A-Z0-9]</code> portion.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You simply need to specify your current RE, followed by a letter/number followed by your current RE again:</p>\n\n<pre><code>^[A-Z0-9 _]*[A-Z0-9][A-Z0-9 _]*$\n</code></pre>\n\n<p>Since you've now stated they're Javascript REs, there's a useful site <a href=\"http://www.regular-expressions.info/javascriptexample.html\">here</a> where you can test the RE against input data.</p>\n\n<p>If you want lowercase letters as well:</p>\n\n<pre><code>^[A-Za-z0-9 _]*[A-Za-z0-9][A-Za-z0-9 _]*$\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>You can use a <a href=\"http://www.regular-expressions.info/lookaround.html\" rel=\"nofollow\">lookaround</a>:  </p>\n\n<pre><code>^(?=.*[A-Za-z0-9])[A-Za-z0-9 _]*$\n</code></pre>\n\n<p>It will check ahead that the string has a letter or number, if it does it will check that the rest of the chars meet your requirements.  This can probably be improved upon, but it seems to work with my tests.  </p>\n\n<p>UPDATE:  </p>\n\n<p>Adding <a href=\"http://stackoverflow.com/questions/576196/regular-expression-allow-letters-numbers-and-spaces-with-at-least-one-letter/576290#576290\">modifications</a> suggested by <a href=\"http://stackoverflow.com/users/60777/chris-lutz\">Chris Lutz</a>:  </p>\n\n<pre><code>^(?=.*[^\\W_])[\\w ]*$/\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>To go ahead and get a point out there, instead of repeatedly using these:</p>\n\n<pre><code>[A-Za-z0-9 _]\n[A-Za-z0-9]\n</code></pre>\n\n<p>I have two (hopefully better) replacements for those two:</p>\n\n<pre><code>[\\w ]\n[^\\W_]\n</code></pre>\n\n<p>The first one matches any word character (alphanumeric and <code>_</code>, as well as Unicode) and the space. The second matches anything that <em>isn't</em> a non-word character or an underscore (alphanumeric only, as well as Unicode).</p>\n\n<p>If you don't want Unicode matching, then stick with the other answers. But these just look easier on the eyes (in my opinion). Taking the \"preferred\" answer as of this writing and using the shorter regexes gives us:</p>\n\n<pre><code>^[\\w ]*[^\\W_][\\w ]*$\n</code></pre>\n\n<p>Perhaps more readable, perhaps less. Certainly shorter. Your choice.</p>\n\n<p>EDIT:</p>\n\n<p>Just as a note, I am assuming Perl-style regexes here. Your regex engine may or may not support things like \\w and \\W.</p>\n\n<p>EDIT 2:</p>\n\n<p>Tested mine with the JS regex tester that someone linked to and some basic examples worked fine. Didn't do anything extensive, just wanted to make sure that \\w and \\W worked fine in JS.</p>\n\n<p>EDIT 3:</p>\n\n<p>Having tried to test some Unicode with the JS regex tester site, I've discovered the problem: that page uses ISO instead of Unicode. No wonder my Japanese input didn't match. Oh well, that shouldn't be difficult to fix:</p>\n\n<pre><code>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;\n</code></pre>\n\n<p>Or so. I don't know what should be done as far as JavaScript, but I'm sure it's not hard.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>for me @\"^[\\w ]+$\"  is working, allow number, alphabet and space, but need to type at least one letter or number.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This will validate against special characters and leading and trailing spaces:</p>\n\n<pre><code>var strString = \"Your String\";\n\nstrString.match(/^[A-Za-z0-9][A-Za-z0-9 ]\\*[A-Za-z0-9]\\*$/)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>$(\"#ValuationName\").bind(\"keypress\", function (event) {\n    if (event.charCode!=0) {\n        var regex = new RegExp(\"^[a-zA-Z ]+$\");\n        var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);\n        if (!regex.test(key)) {\n            event.preventDefault();\n            return false;\n        }\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm currently using this regex <code>^[A-Z0-9 _]*$</code> to accept letters, numbers, spaces and underscores. I need to modify it to require at least one number or letter somewhere in the string. Any help would be appreciated!</p>\n\n<p>This would be for validating usernames for my website. I'd actually like to support as many characters as I can, but just want to ensure that I prevent code injection and that characters will display fine for all users. So I'm definately open to regex validation suggestions that would support a wider set of characters.</p>\n",
            "last_activity_date": 1367827306,
            "question_id": 576196,
            "score": 20,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "Regular Expression: Allow letters, numbers, and spaces (with at least one letter or number)"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Okay here's what I did to resolve my issue.</p>\n\n<ol>\n<li><p>Since my app files are in a file share the Anonymous user account couldn't access them. This is because by default IUSR account is used for Anoymous user.  In IIS->Site->Authentication set Anonymous Authentication to Application Pool Identity if you have created a custom app pool OR you can specify an account.</p></li>\n<li><p>C:\\WINDOWS\\Microsoft.NET\\Framework\\v2.0.50727\\caspol.exe -m -ag 1 -url \"file:////\\computername\\sharename*\" FullTrust -exclusive on</p></li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>For future solution-searchers having the same or similar problem...\nI had the same (or similar) problem with my little asp web app. But used this solution, which worked instantly:</p>\n\n<blockquote>\n  <p>The solution for me was to install the \u201cStatic Content\u201d support for IIS.</p>\n  \n  <ol>\n  <li>Go to  \u201cTurn Windows features on or off\u201d  </li>\n  <li>Select Internet Information Services  </li>\n  <li>Select World Wide Web Services  </li>\n  <li>And check Static Content</li>\n  </ol>\n</blockquote>\n\n<p>Source: <a href=\"http://www.dailycomputersolutions.com/blog/index.php/2010/04/23/iis-not-showing-images-and-css/\">http://www.dailycomputersolutions.com/blog/index.php/2010/04/23/iis-not-showing-images-and-css/</a></p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>In addition to Authentication and all the other issues mentioned above, check your web application's Handler Mappings in IIS. The culprit could be a catch-all * handler hijacking your .css and .js requests. </p>\n\n<p>In my case I recently installed ColdFusion on one of our servers and that added managed handlers to IIS making all the requests to asset files to throw a 500 Internal Server Error. I disabled that handler and everything went back to normal.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For me, the issue was with this part of my web.config:</p>\n\n<pre><code>  &lt;authentication mode=\"Forms\"&gt;\n      &lt;forms timeout=\"2880\" loginUrl=\"/Home?expired=true\" \n           requireSSL=\"false\" protection=\"All\" cookieless=\"UseCookies\" /&gt;\n  &lt;/authentication&gt;\n</code></pre>\n\n<p>I had to change requireSSL from true to false when running under local host without https. Boom, CSS and images showed up.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In my case, I had the <code>&lt;staticContent&gt;</code> tag in the <code>web.config</code> file. I had to comment it, run the project (then all css, js, images loaded), uncomment it and run the project again, somehow it worked...</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have 2 Windows 2008 R2 x64 servers NLB, ARR with shared configuration.  I have the application files in a network share. ASP.net pages (.aspx) come up fine but no css,images,js work. I also have a .htm file shows css and images just fine.</p>\n\n<p>In the iis log I do see a 401.3 message.  So it seems to be permissions but not sure what else to configure permissions wise.  </p>\n\n<p>I read similiar issues at:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/353726/mvc-iis7-css-issue#354938\">http://stackoverflow.com/questions/353726/mvc-iis7-css-issue#354938</a></p>\n\n<p><a href=\"http://serverfault.com/questions/70050/adding-a-virtual-directory-iis-7-5-windows-7-ultimate-x64/130322#130322\">http://serverfault.com/questions/70050/adding-a-virtual-directory-iis-7-5-windows-7-ultimate-x64/130322#130322</a></p>\n\n<p><a href=\"http://serverfault.com/questions/126978/iis-7-5-401-3-access-denied\">http://serverfault.com/questions/126978/iis-7-5-401-3-access-denied</a></p>\n\n<p>I tried the suggested solutions - none seems to work (unless I missed something).  Any advice is greatly appreciated!</p>\n",
            "last_activity_date": 1424161623,
            "question_id": 3771831,
            "score": 19,
            "tags": [
                "javascript",
                "css",
                "image",
                "iis-7.5"
            ],
            "title": "IIS 7.5 no images css js showing"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>By parsing it.  <code>referrer.split( '/' );</code> will get you close.  Or take a look at this</p>\n\n<p><a href=\"http://blog.stevenlevithan.com/archives/parseuri\">http://blog.stevenlevithan.com/archives/parseuri</a></p>\n\n<p>If referrer is coming from a browser, it will be sane -- but just in case you want more robust parsing.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>This would do:</p>\n\n<pre><code>document.referrer.split('/')[2];\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/V746B/\">Example.</a></p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<pre><code>function parseURL(url) {\n    var a=document.createElement('a');\n    a.href=url;\n    return a.hostname;\n}\n</code></pre>\n\n<p>This is a relatively old question, nevertheless this may help any followers.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You can use regexp to extract this data.</p>\n\n<p>string.match(/^http([s]?)://([a-zA-Z0-9-_\\.]+)(:[0-9]+)?/);</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use <code>var referrer = new URL(document.referrer).hostname</code>.</p>\n\n<p>See <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/URL.URL\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/URL.URL</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I know I can get the host name of the current page, by simply doing:</p>\n\n<pre><code>var myhostname = location.hostname;\n</code></pre>\n\n<p>But how do I get the host name of the referrer? I can get the referrer by</p>\n\n<pre><code>var referrer = document.referrer;\n</code></pre>\n\n<p>but unfortunately there's no <code>document.referrer.hostname</code> available in JavaScript. How can I get this value?</p>\n\n<p>An example of where this is useful is if somebody clicks a link on google.com. I want to be able to retrieve google.com from the referrer (not the page and the query string).</p>\n",
            "last_activity_date": 1421191156,
            "question_id": 3420031,
            "score": 19,
            "tags": [
                "javascript"
            ],
            "title": "How do I get the referrer&#39;s domain/host name using JavaScript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I see at least one (or two) flaws:</p>\n\n<pre><code>snd = new Audio(url);\n</code></pre>\n\n<p>has no <code>var</code> in front of it, so <code>snd</code> is assigned to the global scope. That's usually not what you want: it clutters the global name space and if another script (e.g., an extension) incidentally uses <code>snd</code>, things will be a mess.</p>\n\n<p>And that's also why</p>\n\n<pre><code>delete snd;\n</code></pre>\n\n<p>doesn't work: you can't <a href=\"http://perfectionkills.com/understanding-delete/#property_attributes\">delete global variables</a>:</p>\n\n<blockquote>\n  <p>When declared variables and functions\n  become properties of a Variable object\n  \u2014 either Activation object (for\n  Function code), or Global object (for\n  Global code), these properties are\n  <strong>created with DontDelete attribute</strong>.</p>\n</blockquote>\n\n<p>So, use</p>\n\n<pre><code>var snd = new Audio(url);\n</code></pre>\n\n<p>instead. BTW, you can't force the JavaScript engine to do garbage collection.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>This is not an exhaustive answer, but to the question \"Is there any way to force the chrome js engine to do garbage collection?\", <a href=\"https://groups.google.com/group/chromium-extensions/browse_thread/thread/5dc4be46e434116a?pli=1\">a chromium.org guy replied</a>:</p>\n\n<blockquote>\n  <p><strong>In general, no, by design.</strong> For testing purposes there is a flag you can pass \n  on the command line to enable a javascript command \"window.gc()\" to force \n  garbage collection. </p>\n  \n  <p><code>--js-flags '--expose_gc'</code></p>\n</blockquote>\n\n<hr>\n\n<p><strong>UPDATE:</strong> However, as @<a href=\"http://stackoverflow.com/users/305517/plash\">plash</a> noted in a comment below, this flag will only work in debug builds.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Just deleting and setting it to null didn't work for me either, so I made a workaround.</p>\n\n<p><strong>I got it working for more than one sound at the same time</strong>. To release the instances, every sound needs to be an Object Tag. Dynamically, append every Object Tag (sound) to a Div. To release the instance, dynamically remove the Object Tag (sound) from the Div.</p>\n\n<p>I <em>guess</em> this works because a browser typically implements each tag as some kind of object. So, when I delete a tag, the internal object gets deleted and releases any resources associated with it.</p>\n\n<pre><code>&lt;!--HTML: This will contains object sounds--&gt;\n&lt;Div id=\"sounds\"&gt;&lt;/Div&gt;\n\n//Javacript, using jQuery\n//Create and play an MP3\nvar id_event = 1234; //Keep and incrementing a counter might do, I use an Event Id from my app.\nvar objSound = \"&lt;object width='1' height='1' id='AUDIOIE\" + id_event \n        + \" type='application/x-oleobject'  AND_MORE_PARAMS_TO_PLAY_A_MP3\"\n        + \"/&gt;\";\n$(objSound).appendTo('#sounds');\n</code></pre>\n\n<p>For complete object params go <a href=\"http://www.w3schools.com/media/media_playerref.asp\" rel=\"nofollow\">here</a>.</p>\n\n<pre><code>//To Stop an MP3 and release it instance.\n$('#AUDIOIE' + id_event).empty().remove();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've found the <a href=\"http://www.schillmania.com/projects/soundmanager2\" rel=\"nofollow\">SoundManager2 project</a> and used it instead of the Audio interface. I'll mark this as the answer because it is the only way I've found that solves all of my issues.</p>\n",
                    "is_accepted": true,
                    "score": -5
                }
            ],
            "body": "<p>I have a js function for playing any given sound using the Audio interface (creating a new instance for every call).</p>\n\n<p>This works quite well, until about the 32nd call (sometimes less). This issue is directly related to the release of the Audio instance. I know this because I've allowed time for the GC in Chromium to run and it will allow me to play another 32 or so sounds again.</p>\n\n<p>Here's an example of what I'm doing:</p>\n\n<pre><code>&lt;html&gt;&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction playSound(url) {\n    var snd = new Audio(url);\n    snd.play();\n    snd = null;\n}\n&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;a href=\"#\" onclick=\"playSound('blah.mp3');\"&gt;Play sound&lt;/a&gt;\n&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n\n<p>I also have this, which works well for pages that have less than 32 playSound calls:</p>\n\n<pre><code>var AudioPlayer = {\n    cache: {},\n    play: function(url) {\n        if (!AudioPlayer.cache[url])\n            AudioPlayer.cache[url] = new Audio(url);\n        AudioPlayer.cache[url].play();\n    }\n};\n</code></pre>\n\n<p>But this will not work for what I want to do (dynamically replace a div with other content (from separate files), which have even more sounds on them - 1. memory usage would easily skyrocket, 2. many sounds will never play).</p>\n\n<p>I need a way to release the sound immediately. Is it possible to do this? I have found no free/close/unload method for the Audio interface.</p>\n\n<p>The pages will be viewed locally, so the constant loading of sounds is not a big factor at all (and most sounds are rather short).</p>\n",
            "last_activity_date": 1279299316,
            "question_id": 3034179,
            "score": 19,
            "tags": [
                "javascript"
            ],
            "title": "Javascript force GC collection? / Forcefully free object?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>There is a <a href=\"http://www.quirksmode.org/js/keys.html\" rel=\"nofollow\">good article on quirksmode.org</a> answering exactly that question. You might also want to look at <a href=\"http://unixpapa.com/js/key.html\" rel=\"nofollow\">Unixpapa's results</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The events are for completely different purposes. Use <code>keyup</code> and <code>keydown</code> for identifying physical keys and <code>keypress</code> for identifying typed characters. The two are fundamentally different tasks with different events; don't try to mix the two. In particular, <code>keyCode</code> on <code>keypress</code> events is usually redundant and shouldn't be used (except in older IE, but see the linked document below for more on that); for printable keypresses it's usually the same as <code>which</code> and <code>charCode</code>, although there is some variation between browsers.</p>\n\n<p><a href=\"http://unixpapa.com/js/key.html\">Jan Wolter's article on key events</a>, already linked to in another answer, is the definitive word on this subject for me and has tables describing what each of the different properties returns for each type of key event and each browser.</p>\n",
                    "is_accepted": true,
                    "score": 18
                }
            ],
            "body": "<p>Related: <a href=\"http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\">Javascript KeyCode vs CharCode = Utter Confusion</a></p>\n\n<p>Here is some code you can try at home or in a <a href=\"http://jsfiddle.net/Ralt/7zSUw/4/\">jsfiddle</a>:</p>\n\n<pre><code>el.addEventListener( 'keyup', function( e ) { \n    console.log( 'Keyup event' );\n    console.log( e.keyCode );\n} ); \nel.addEventListener( 'keypress', function( e ) { \n    console.log( 'Keypress event' );\n    console.log( e.keyCode );\n} );\n</code></pre>\n\n<p>Why is the keyCode different?</p>\n\n<p>I can understand why one should use keypress only, but what I don't understand is how two key events, given the same hit key on the keyboard, give different keyCodes.</p>\n\n<p>PS: I'm not worrying about legacy browsers support, I tried this in Chrome and was surprised, and couldn't find an explanation.</p>\n",
            "last_activity_date": 1339668865,
            "question_id": 11030532,
            "score": 18,
            "tags": [
                "javascript",
                "keyboard"
            ],
            "title": "keypress and keyup - why is the keyCode different?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I'm pretty sure this isn't a type problem, it's because IE didn't have the <code>Array.map()</code> function until IE 9.  See <a href=\"http://msdn.microsoft.com/en-us/library/k4h76zbx(v=VS.85).aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/k4h76zbx(v=VS.85).aspx</a> for a list of supported functions.  See <a href=\"http://msdn.microsoft.com/en-us/library/ff679976(v=VS.94).aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/ff679976(v=VS.94).aspx</a> for a description of the <code>Array.map()</code> function in IE 9.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>Use a <code>for</code> loop for max browser compatibility.</p>\n\n<p>In Javascript all arrays are objects, but not all object are arrays. Take a look at <strong><a href=\"http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/\">this Perfection Kills page</a></strong> which describes how to check that something is an Array.</p>\n\n<p>To check for an array, you can use <code>Object.prototype.toString.call(theObject)</code>. This will return <code>[object Array]</code> for an object that is an Array and <code>[object Object]</code> for an object that's not an Array (see example below):</p>\n\n<pre><code>            function myLittleTest() \n            {\n                var obj, arr, armap, i;    \n\n                  // arr is an object and an array\n                arr = [1, 2, 3, 5, 7, 11]; \n\n                obj = {}; // obj is only an object... not an array\n\n                alert (Object.prototype.toString.call(obj));\n                  // ^ Output: [object Object]\n\n                obj = arr; // obj is now an array and an object\n\n                alert (Object.prototype.toString.call(arr));\n                alert (Object.prototype.toString.call(obj));\n                  // ^ Output for both: [object Array]\n\n                // works in IE\n                armap = [];\n                for(i = 0; i &lt; obj.length; ++i)\n                {\n                    armap.push(obj[i] * obj[i]);\n                }\n\n                alert (armap.join(\", \")); \n\n            }\n            // Changed from prueba();\n            myLittleTest();\n</code></pre>\n\n<h2><strong><a href=\"http://jsfiddle.net/Jn5z6/\">jsFiddle example</a></strong></h2>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If you have an array-like object, (like <code>arguments</code>, for example,) you can get a real array made from it by calling <code>Array.prototype.slice.call(o)</code>.</p>\n\n<pre><code>var o = {0:\"a\", 1:'b', length:2};\nvar a = Array.prototype.slice.call(o);\n</code></pre>\n\n<p><code>a</code> will be <code>[\"a\", \"b\"]</code>. This will only work right if you have a correctly set <code>length</code> property.</p>\n",
                    "is_accepted": false,
                    "score": 52
                },
                {
                    "body": "<p>A year ago now, but I may as well  mention jQuery's makeArray function <a href=\"http://api.jquery.com/jQuery.makeArray/\">http://api.jquery.com/jQuery.makeArray/</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I think you are trying too hard...</p>\n\n<p>It's easiest with jQuery (or similar library)</p>\n\n<p>For this object:</p>\n\n<pre><code>var obj = {a: 1, b: 2, c: 3};\n</code></pre>\n\n<p>Arrays have a fixed key system so for the object above, you've got to throw away either the keys (a, b, c) or the values (1, 2, 3)</p>\n\n<p>So either this:</p>\n\n<pre><code>var arr = $.map(obj, function (value, key) { return value; });\n</code></pre>\n\n<p>or this:</p>\n\n<pre><code>var arr = $.map(obj, function (value, key) { return key; });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>Among many other small utilities for manipulating objects and arrays, Underscore.js offers a <code>toArray(obj)</code> helper method. Documentation here: <a href=\"http://underscorejs.org/#toArray\" rel=\"nofollow\">http://underscorejs.org/#toArray</a></p>\n\n<p>It's not totally obvious from the way the documentation is written, but it works like a charm on arbitrary objects. When given an object, it iterates over the values and returns a list that contains just those values.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have made this sandbox test:</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;whatever&lt;/title&gt;\n        &lt;script type=\"text/javascript\"&gt;\n            function myLittleTest() {\n                var obj, arr, armap;\n\n                arr = [1, 2, 3, 5, 7, 11];\n\n                obj = {};\n                obj = arr;\n                alert (typeof arr);\n                alert (typeof obj);\n\n                // doesn't work in IE\n                armap = obj.map(function (x) { return x * x; });\n                alert (typeof armap);\n\n            }\n            myLittleTest();\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>I realize I can use jQuery's function $.map for making that line of code work, but, what am I missing on javascript datatypes?</p>\n",
            "last_activity_date": 1361949695,
            "question_id": 3865139,
            "score": 18,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Cast javascript object to array. How to?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I assume you mean a custom cell editor.\nHere's a sample select-based boolean cell editor from slick.editors.js.  You could easily modify it to work with an arbitrary set of possible values.</p>\n\n<pre><code>function YesNoSelectCellEditor($container, columnDef, value, dataContext) {\n    var $select;\n    var defaultValue = value;\n    var scope = this;\n\n    this.init = function() {\n        $select = $(\"&lt;SELECT tabIndex='0' class='editor-yesno'&gt;&lt;OPTION value='yes'&gt;Yes&lt;/OPTION&gt;&lt;OPTION value='no'&gt;No&lt;/OPTION&gt;&lt;/SELECT&gt;\");\n\n        if (defaultValue)\n            $select.val('yes');\n        else\n            $select.val('no');\n\n        $select.appendTo($container);\n\n        $select.focus();\n    };\n\n\n    this.destroy = function() {\n        $select.remove();\n    };\n\n\n    this.focus = function() {\n        $select.focus();\n    };\n\n    this.setValue = function(value) {\n        $select.val(value);\n        defaultValue = value;\n    };\n\n    this.getValue = function() {\n        return ($select.val() == 'yes');\n    };\n\n    this.isValueChanged = function() {\n        return ($select.val() != defaultValue);\n    };\n\n    this.validate = function() {\n        return {\n            valid: true,\n            msg: null\n        };\n    };\n\n    this.init();\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>You probably dont want to make a new select editor for each range of options. Also you may not know that range of all option value beforehand. </p>\n\n<p>In that case you want a flexible range of options in a select type editor. In order to do this you can add an extra option to your column definitions (e.g. called options) like this:</p>\n\n<pre><code> var columns = [\n  {id:\"color\", name:\"Color\", field:\"color\",  options: \"Red,Green,Blue,Black,White\", editor: SelectCellEditor}\n  {id:\"lock\", name:\"Lock\", field:\"lock\",  options: \"Locked,Unlocked\", editor: SelectCellEditor},\n</code></pre>\n\n<p>]</p>\n\n<p>and access that using args.column.options in the init method of your own SelectEditor object like this:</p>\n\n<pre><code> SelectCellEditor : function(args) {\n        var $select;\n        var defaultValue;\n        var scope = this;\n\n        this.init = function() {\n\n            if(args.column.options){\n              opt_values = args.column.options.split(',');\n            }else{\n              opt_values =\"yes,no\".split(',');\n            }\n            option_str = \"\"\n            for( i in opt_values ){\n              v = opt_values[i];\n              option_str += \"&lt;OPTION value='\"+v+\"'&gt;\"+v+\"&lt;/OPTION&gt;\";\n            }\n            $select = $(\"&lt;SELECT tabIndex='0' class='editor-select'&gt;\"+ option_str +\"&lt;/SELECT&gt;\");\n            $select.appendTo(args.container);\n            $select.focus();\n        };\n\n        this.destroy = function() {\n            $select.remove();\n        };\n\n        this.focus = function() {\n            $select.focus();\n        };\n\n        this.loadValue = function(item) {\n            defaultValue = item[args.column.field];\n            $select.val(defaultValue);\n        };\n\n        this.serializeValue = function() {\n            if(args.column.options){\n              return $select.val();\n            }else{\n              return ($select.val() == \"yes\");\n            }\n        };\n\n        this.applyValue = function(item,state) {\n            item[args.column.field] = state;\n        };\n\n        this.isValueChanged = function() {\n            return ($select.val() != defaultValue);\n        };\n\n        this.validate = function() {\n            return {\n                valid: true,\n                msg: null\n            };\n        };\n\n        this.init();\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 33
                }
            ],
            "body": "<p>Hi I was wondering if anyone knows if it's possible to define a column in slickgrid as being a drop down select list. If not does anyone with some experience with slickgrid know how I should go about adding this option?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1390433870,
            "question_id": 2623161,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "slickgrid",
                "tablecolumn"
            ],
            "title": "Slickgrid, column with a drop down select list?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>Don't be afraid of Javascript, it's a <a href=\"http://rads.stackoverflow.com/amzn/click/0596517742\">beautiful</a> and <a href=\"http://javascript.crockford.com/\">powerful</a> language. And with frameworks like <a href=\"http://jquery.com/\">jQuery</a>, <a href=\"http://www.prototypejs.org/\">Prototype</a> and <a href=\"http://www.dojotoolkit.org/\">Dojo</a>, DOM manipulation and AJAX are greatly simplified and cross-browser issues are mostly history.</p>\n\n<p><strike>About Script#, I agree with <a href=\"http://stackoverflow.com/questions/788933/what-advantages-can-scriptsharp-bring-to-my-tool-kit/789243#789243\">this answer by mcintyre321</a>. Last release over a year ago + closed source = no go for me.</strike></p>\n\n<p>UPDATE Jan/2010: there have been new Script# releases since the original writing of this answer. It's still closed-source but the author mentions open sourcing it after 1.0</p>\n\n<p>UPDATE May 2011: <a href=\"https://github.com/nikhilk/scriptsharp\">Script# is now open source</a>.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>I am using jQuery. It is really good. But I beleive that It is more confortable to me to work with C#. Even if it is a subset.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Like the others have I would recommend some JavaScript (namely jQuery). Should you wish to continue with Script#, Nikhil Kothari's blog may be a good resource for you. <a href=\"http://www.nikhilk.net/ScriptSharpIntro.aspx\" rel=\"nofollow\">http://www.nikhilk.net/ScriptSharpIntro.aspx</a> -- That being said, I think you'll find that you are more productive with jQuery. There is a large database of community written plugins so you wouldn't necessarily have to reinvent the wheel on everything you want to do. <a href=\"http://frickinsweet.com/ryanlanciaux.com/post/Are-you-a-Control-Freak.aspx\" rel=\"nofollow\">jQuery plugins instead of ASP.NET Controls</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I use Script#, I think it is great.  You can use it with any framework, jQuery, dojo whatever, you would however have to wrap the framework, this could be a big job...</p>\n\n<p>It's only benefit as I see it is that it allows you to develop javascript in a strongly typed environment.  I think this is a HUGE benefit.  I refuse to develop in weakly typed languages as maintenance is a nightmare.</p>\n\n<p>If however you like to work in a weakly typed language then you wont need Script#.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>IMHO Script# fits well for large projects only, with really \"rich\" web client. Participating in such kind of project, I could only say that Script# helped us much. josephhemingway's remark about strongly typed is 100% true for such case. Also it allowed us to introduce new .NET developers without any JS background quickly. Assuming Nikhil Kothari's plans to open-source it in the summer 2008, we even decompiled (don't tell anybody! it's illegal) it and introduced generics, operators overloads, various bug fixes, etc.</p>\n\n<p>BUT. Then Script# support faded away. Project on CodePlex with discussions and issue tracking was closed (interesting that parts of framework were published there shortly before). No updates, no future plans, no explanations. After such thing I'd consider Script# only after it goes open source to give the community ability to support it. E.g. on CodePlex.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>A release went out today, so it is good to see that it is still active.</p>\n\n<p>Regardless of the previous lack of updates and that it not been open sourced I would still use it over plain js.  You can stop using Script# at any time and more forward with the 'compiled' js if you don't like it.</p>\n\n<p>I agree with you Val though that it really only fits large js based projects.  I don't think you would get much benefit out of using it to perform basic page functionality like validate form input etc.  It probably wouldn't be worth setting it up.  </p>\n\n<p>If however you are heavily using javascript and need to replicate OOP then I think it is a must.  Things like refactoring becomes so easy, with plain js I would never refactor because it was just too hard to implement, over time my code became a mess.</p>\n\n<p>Wow Val you got generics to work in it, I'm impressed, was it hard?  Generics support would be great, so would method and operator overloading.  Are you sure that it is illegal to decompile it, I will have to have a look to see if it is the terms of use.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p>Wow Val you got generics to work in\n  it, I'm impressed, was it hard?\n  Generics support would be great, so\n  would method and operator overloading.\n  josephhemingway</p>\n</blockquote>\n\n<p>The whole point is that ScriptSharp's parser supports full C# 2.0 syntax. The only thing needed is to generate the proper JS. Not much work, considering JS dynamic nature. Generics would act as Java-style ones, i.e. no generation for each closed type argument set, just one class.</p>\n\n<blockquote>\n  <p>Are you sure that it is illegal to\n  decompile it, I will have to have a\n  look to see if it is the terms of use.\n  josephhemingway</p>\n</blockquote>\n\n<p>Yep, it's illegal. EULA showed in setup clearly mentions that.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In short, my answer is: if you like powerful IDEs that run on Windows, OOD and C#, use ScriptSharp. It is more maintainable and structured, and demonstrably stable enough to use on serious projects. It can also be easily extended, as illustrated below and by other projects.</p>\n\n<p>Since this is yet another Google indexed thread where people refer to Script# and jQuery as mutually exclusive I just wanted to point out some people are merging these two worlds, and in my case unleashing a lot of power by doing so. I'm offering a completely free and reusable library to access jQuery 1.4 from Script# projects, and full source code for the solution that generates it (almost exclusively from jQuery's own API documentation file):</p>\n\n<p><a href=\"http://www.christophercrooker.com/visual-studio-2010-rc-custom-tool-for-code-generation-and-jquery14-with-intellisense-for-scriptsharp\" rel=\"nofollow\">http://www.christophercrooker.com/visual-studio-2010-rc-custom-tool-for-code-generation-and-jquery14-with-intellisense-for-scriptsharp</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Short answer NO. Wait for TypeScript.</p>\n\n<p>Script# is really cool, but MS decided not to support it at all. The reason for that turns out to be that they were working on a better version of that - TypeScript (http://www.typescriptlang.org/)\nIt adds support for everything you need in a static language (intellisense, type checking, interfaces, classes etc.), but still looks very much like JS, and more importantly - confirms to the upcoming ECMA Script 6 standard. (unlike Script# or google's Dart)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Also I would like to add that you certainly should use ScripSharp when you are planning to develop multiplatform projects. For example, at present time I write my image processing library code for .NET, JavaScript (ScriptSharp), Android (Mono) platforms on C#. Also I am planning to port my code on iOS (Mono) and Windows Phone in the future. And I think it's great code reusing and developer time minimization!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The other advantage of using ScriptSharp that no one has mentioned is that if you need to interact with C# (using AJAX/REST/SOAP) you can use the same class definitions in both places and be sure that you have the interface defined properly, because it's the same source file!  I have tried to use logic in shared source files with minimal success due to the way ScriptSharp's corelib is not 100% compatible with the C# corelib.  But it works great for data file definitions.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am developing my first ASP.NET MVC application and I beleive that Script# can help me a lot. But it cannot find the resource necessary to support my development.</p>\n\n<p>I could not find The codeplex site;\nThere is only one manual, which is very good, but it is not enough;\nI could find very few tutorials;\nI know that Script# was used to develop ASP.NET MVC scripts and that the source of MVC distributes the library. </p>\n\n<p>But it seems that it is used only internally in Microsoft.</p>\n\n<p>Where can I find other resources???</p>\n\n<p>Do you really think that Script# will be continued and new versions will be deployed and it should be used by third-party projetcs ???</p>\n\n<p>Thanks in advance</p>\n",
            "last_activity_date": 1412222176,
            "question_id": 1579192,
            "score": 18,
            "tags": [
                "javascript",
                "asp.net-mvc",
                "script#"
            ],
            "title": "Should I use ScriptSharp"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Well, here is a not very real-world applicable example, but I think you'll get the idea.  If allows you to do a number of different operations on an object, and provides convenience.</p>\n\n<pre><code>var truck = function() {\n\n    this.turnLeft = function {\n\n       // turn left\n       return this;\n\n    }\n\n    this.turnRight = function {\n\n       // turn right\n       return this;\n\n    }\n\n    this.goReallyFast = function {\n\n       // go fast!\n       return this;\n\n    }\n\n};\n\n// My get-away plan\nvar myTruck = new truck();\nmyTruck.turnLeft().turnRight().goReallyFast();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>Fluent interface - <a href=\"http://en.wikipedia.org/wiki/Fluent_interface\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Fluent_interface</a></p>\n\n<p>Yea I think it could be very useful but like any design pattern should only be used when needed</p>\n\n<p>Edit:  here is twitter client api in c# using a fluent interface - <a href=\"http://code.google.com/p/tweetsharp/\" rel=\"nofollow\">http://code.google.com/p/tweetsharp/</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>For a very different (non-OO) example, chaining is somewhat analogous to <a href=\"http://en.wikipedia.org/wiki/Pipeline%5F%28Unix%29\">Unix pipelines</a>. Each step of a Unix pipe returns the full (modified) content, suitable for sending on to the next step:</p>\n\n<pre><code>cat file1 file2 | sort -n | awk '{print $2}' | sed 's/@/ at /g'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>One example where it's useful is with a slight variation on your problem &mdash; instead of returning the same object, you design the object to be <em>immutable</em>.  Then your functions will all return a <em>new instance</em> of the same type, but with the properties already set appropriately.</p>\n\n<p>This has many practical applications, especially in the realm of functional programming.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>In JavaScript this comes up all the time when navigating the DOM. In particular when trying to wade your way through a bunch of elements that don't have ids.</p>\n\n<p>For example there was a question on SO regarding <a href=\"http://stackoverflow.com/questions/563201/read-a-specific-table-column-with-prototype\">finding the first element of a table</a>. It can involve a lot of loops or chained commands. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>While it doesn't work in the same way as your example (TBH I've never seen it done that way before), <a href=\"http://ejohn.org/blog/ultra-chaining-with-jquery/\" rel=\"nofollow\">jquery considers \"chaining\" to be very useful</a>, and jquery is pretty much the yardstick these days when it comes to JS web frameworks... so yeah :-)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>All the kids love chaining. However, in my experience it should be used with care since it can decrease the readability of the code. In other words, do what makes sense to you and can be easily understood by other programmers who have a basic familiarity with the concept..</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>JavaScript chaining can be very useful if you want to preform a series of actions on a single object. I agree with Michael Luton below, chaining should be handled with care. If you add one or two chained methods onto an object that is still readable. If you start adding four, five, or even nine, then your code becomes harder not only to read but to maintain.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I found this question while searching for a general solution to making methods chainable, after they are defined. Here's what I came up with. I am a JavaScript neophyte; buyer beware.</p>\n\n<pre><code>makeChainable = function() {\n    var receiver = arguments[0]\n    for (var i = 1; i &lt; arguments.length; i++) {\n        functionName = arguments[i];\n        (function() {\n            wrapped = receiver[functionName];\n            receiver[functionName] = function() {\n                wrapped.apply(receiver, arguments);\n                return receiver;\n            }\n        })();\n    }\n}\n\ndaisy = {\n    name: 'Daisy',\n    moo:  function() { console.log(this.name + \" moos!\") }\n}\n\nmakeChainable(daisy, 'moo');\ndaisy.moo().moo().moo();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>So... messing around in JavaScript with an idea that's new to me, having methods of an Object return the Object of which they are methods; this then leads to chainability. My question, then: how can this be useful? I threw this together to test the fundamental workings:</p>\n\n<pre><code>&lt;script&gt;\nMathChain = function()\n {\n    this.pass = function()\n     {\n    \tthis.multiply = eval(arguments.join('*'));\n    \tthis.add = eval(arguments.join('+'));\n    \treturn this;\n     }\n }\n\nm = new MathChain().pass(5, 10, 20).multiply; // 1000\na = new MathChain().pass(5, 10, 20).add;      // 35\n&lt;/script&gt;\n</code></pre>\n\n<p>That's obviously not a viciously efficient instance in which one would use this concept, so could you point me to something that does do so properly (aside from jQuery, please)?</p>\n",
            "last_activity_date": 1365021592,
            "question_id": 603499,
            "score": 18,
            "tags": [
                "javascript",
                "object",
                "method-chaining"
            ],
            "title": "JavaScript Object Method Chaining: useful?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Just add localhost as your canvas url or mobile site url, this will allow you to have both localhost and herokuapp.com in your App Domain setting. Then once your app is in production, just remove it.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Try using the url with port, e.g. </p>\n\n<pre><code>    http://localhost:8000/\n</code></pre>\n\n<p>I was having the same issue and found this solution right now.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The protocol seems to keep changing, and the accepted answer didn't work for me today.  In case it helps other searchers, this is what did work for me:</p>\n\n<ul>\n<li>All changes were made on the Settings page under the Basic tab</li>\n</ul>\n\n<p>1.)  In the center under the first box of options, click \"+ Add Platform\" and choose \"Website\" (or whatever is appropriate for your app.)</p>\n\n<p>2.)  In the box that comes up for the website you just added:  <strong>Site URL:</strong> <code>http://localhost:3000/</code></p>\n\n<p>3.)  In the box above that (Settings => Basic):  <strong>App Domain:</strong>  <code>localhost</code></p>\n\n<p>4.)  At the bottom right - click \"Save Changes\"</p>\n\n<p>5.)  Make sure you have the app ID copied and pasted correctly into your code.  (The ID is in the first box on that page if you need it again.)</p>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>This works for me in heroku, the localhost thing didn't work (for me). I hope it helps</p>\n\n<p>1.) In the center under the first box of options, click \"+ Add Platform\" and choose \"Website\" (or whatever is appropriate for your app.)</p>\n\n<p>2.) In the box that comes up for the website you just added: Site URL: <a href=\"http://MYAPP.herokuapp.com/\" rel=\"nofollow\">http://MYAPP.herokuapp.com/</a>   (replace MYAPP with the name of your app)</p>\n\n<p>3.) In the box above that (Settings => Basic): App Domain:  MYAPP.herokuapp.com (replace MYAPP with the name of your app)</p>\n\n<p>4.) At the bottom right - click \"Save Changes\"</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just a note for some others who may be struggling with this as I was. I have not been able to get this to work with \"test\" apps. Using my actual app settings (and simply adding </p>\n\n<pre><code>\"http://localhost:3000/\"\n</code></pre>\n\n<p>to my canvas URL) worked as everyone else suggested. It seems test apps aren't equal to actual apps. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For me it worked like this: </p>\n\n<p>Configuring the facebook app dashboard:</p>\n\n<p>*On the ' basic ' tab:</p>\n\n<p>1) Leaving app domain empty.</p>\n\n<p>2) Erasing any platform. Meaning: no website no canvas platform. (so no site-URL field to fill)</p>\n\n<p>*On the 'advanced' tab:</p>\n\n<p>3) I entered into the Valid OAuth redirect URIs:</p>\n\n<pre><code>http://localhost/myappfolder/redirect.php\n</code></pre>\n\n<p>4) regarding my code,\ninsdie my c:/xampp/htdocs/localhost/myappfolder/index.php (this file makes the loginURL):</p>\n\n<pre><code>$helper = new FacebookRedirectLoginHelper('http://localhost/myappfolder/redirect.php');  \n</code></pre>\n\n<p>inside the redirect.php file:</p>\n\n<pre><code>$helper = new FacebookRedirectLoginHelper('http://localhost/myappfolder/redirect.php');  \n</code></pre>\n\n<p>and I got a session! finally! no need to hang myself in the end :P</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is wrong way. You must create a test application using Test tab in app settings. And then you can enter your development stage url (for example localhost) to your application.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can still test your app without deploying it on a remote sever like heroku.\nThe trick is to update the <code>etc/hosts</code> file this way:</p>\n\n<pre><code>127.0.0.1 mydomain.com\n</code></pre>\n\n<p>Then on the Facebook App's settings, type [<a href=\"http://]\" rel=\"nofollow\">http://]</a> mydomain.com, without the \"[\" and \"]\"</p>\n\n<p>It worked for me this way</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I've been writing a game for Facebook using Rails and jQuery.  Since I started using the Facebook Javascript SDK, using localhost as an app domain seemed to work just fine.  I was able to test my game both locally and on Heroku.</p>\n\n<p>In the past day, it seems that Facebook has made a big update to their developer UI.  Now if I add localhost as an app domain, it gives me the following error:</p>\n\n<blockquote>\n  <p>This must be derived from Canvas URL, Secure Canvas URL, Site URL, Mobile Site URL, Page Tab URL or Secure Page Tab URL. Check and correct the following domains: localhost</p>\n</blockquote>\n\n<p>My game also now doesn't work locally and I get an error when the Javascript SDK logs in the user:</p>\n\n<blockquote>\n  <p>API Error Code: 191 API Error Description: The specified URL is not\n  owned by the application Error Message: Invalid redirect_uri: Given\n  URL is not allowed by the Application configuration.</p>\n</blockquote>\n\n<p>This doesn't happen when I deploy my game, since herokuapp.com is considered a valid app domain.</p>\n\n<p>How am I supposed to develop and test my game if I can no longer use localhost or 127.0.0.1?</p>\n",
            "last_activity_date": 1421831854,
            "question_id": 21295872,
            "score": 17,
            "tags": [
                "javascript",
                "ruby-on-rails",
                "facebook",
                "heroku"
            ],
            "title": "Facebook App: localhost no longer works as app domain"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Try to use toString on the method.</p>\n\n<p>Update:</p>\n\n<p>Iterate over the methods in obj and store them as string, and then instantiate them with new Function.</p>\n\n<pre><code>storedFunc = Obj.prototype.setLabel.toString();\nObj2.prototype['setLabel'] = new Function(\"return (\" + storedFunc + \")\")();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>So far as I know, this means moving away from JSON;  you're now customizing it, and so  you take on all of the potential headaches that entails.  The idea of JSON is to include data only, not code, to avoid all of the security problems that you get when you allow code to be included.  Allowing code means that you have to use eval to run that code and eval is evil.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can indeed create an empty instance and then merge the instance with the data. I recommend using a library function for ease of use (like <code>jQuery.extend</code>).</p>\n\n<p>You had some errors though (<code>function ... = function(...)</code>, and JSON requires keys to be surrounded by <code>\"</code>).</p>\n\n<p><a href=\"http://jsfiddle.net/sc8NU/1/\" rel=\"nofollow\">http://jsfiddle.net/sc8NU/1/</a></p>\n\n<pre><code>var data = '{\"label\": \"new object\"}';  // JSON\nvar inst = new Obj;                    // empty instance\njQuery.extend(inst, JSON.parse(data)); // merge\n</code></pre>\n\n<p>Note that merging like this sets properties directly, so if <code>setLabel</code> is doing some checking stuff, this won't be done this way.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You would have to write your own stringify method that stores functions as properties by converting them to strings using the toString method.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To do this, you'll want to use a \"reviver\" function when parsing the JSON string (and a \"replacer\" function or a <code>toJSON</code> function on your constructor's prototype when creating it). See <a href=\"http://es5.github.com/#x15.12.2\">Section 15.12.2</a> and <a href=\"http://es5.github.com/#x15.12.3\">15.12.3</a> of the specification. If your environment doesn't yet support native JSON parsing, you can use <a href=\"https://github.com/douglascrockford/JSON-js/\">one of Crockford's parsers</a> (Crockford being the inventor of JSON), which also support \"reviver\" functions.</p>\n\n<p>Here's a simple bespoke example that works with ES5-compliant browsers (or libraries that emulate ES5 behavior) (<a href=\"http://jsbin.com/enutow\">live copy</a>, run in Chrome or Firefox or similar), but look after the example for a more generalized solution.</p>\n\n<pre><code>// Our constructor function\nfunction Foo(val) {\n  this.value = val;\n}\nFoo.prototype.nifty = \"I'm the nifty inherited property.\";\nFoo.prototype.toJSON = function() {\n  return \"/Foo(\" + this.value + \")/\";\n};\n\n// An object with a property, `foo`, referencing an instance\n// created by that constructor function, and another `bar`\n// which is just a string\nvar obj = {\n  foo: new Foo(42),\n  bar: \"I'm bar\"\n};\n\n// Use it\ndisplay(\"obj.foo.value = \" + obj.foo.value);\ndisplay(\"obj.foo.nifty = \" + obj.foo.nifty);\ndisplay(\"obj.bar = \" + obj.bar);\n\n// Stringify it with a replacer:\nvar str = JSON.stringify(obj);\n\n// Show that\ndisplay(\"The string: \" + str);\n\n// Re-create it with use of a \"reviver\" function\nvar obj2 = JSON.parse(str, function(key, value) {\n  if (typeof value === \"string\" &amp;&amp;\n      value.substring(0, 5) === \"/Foo(\" &amp;&amp;\n      value.substr(-2) == \")/\"\n     ) {\n    return new Foo(value.substring(5, value.length - 2));\n  }\n  return value;\n});\n\n// Use the result\ndisplay(\"obj2.foo.value = \" + obj2.foo.value);\ndisplay(\"obj2.foo.nifty = \" + obj2.foo.nifty);\ndisplay(\"obj2.bar = \" + obj2.bar);\n</code></pre>\n\n<p>Note the <code>toJSON</code> on <code>Foo.prototype</code>, and the function we pass into <code>JSON.parse</code>.</p>\n\n<p>The problem there, though, is that the reviver is tightly coupled to the <code>Foo</code> constructor. Instead, you can adopt a generic framework in your code, where any constructor function can support a <code>fromJSON</code> (or similar) function, and you can use just one generalized reviver.</p>\n\n<p>Here's an example of a generalized reviver that looks for a <code>ctor</code> property and a <code>data</code> property, and calls <code>ctor.fromJSON</code> if found, passing in the full value it received (<a href=\"http://jsbin.com/anugeg\">live example</a>):</p>\n\n<pre><code>// A generic \"smart reviver\" function.\n// Looks for object values with a `ctor` property and\n// a `data` property. If it finds them, and finds a matching\n// constructor that has a `fromJSON` property on it, it hands\n// off to that `fromJSON` fuunction, passing in the value.\nfunction Reviver(key, value) {\n  var ctor;\n\n  if (typeof value === \"object\" &amp;&amp;\n      typeof value.ctor === \"string\" &amp;&amp;\n      typeof value.data !== \"undefined\") {\n    ctor = Reviver.constructors[value.ctor] || window[value.ctor];\n    if (typeof ctor === \"function\" &amp;&amp;\n        typeof ctor.fromJSON === \"function\") {\n      return ctor.fromJSON(value);\n    }\n  }\n  return value;\n}\nReviver.constructors = {}; // A list of constructors the smart reviver should know about  \n</code></pre>\n\n<p>To avoid having to repeat common logic in <code>toJSON</code> and <code>fromJSON</code> functions, you could have generic versions:</p>\n\n<pre><code>// A generic \"toJSON\" function that creates the data expected\n// by Reviver.\n// `ctorName`  The name of the constructor to use to revive it\n// `obj`       The object being serialized\n// `keys`      (Optional) Array of the properties to serialize,\n//             if not given then all of the objects \"own\" properties\n//             that don't have function values will be serialized.\n//             (Note: If you list a property in `keys`, it will be serialized\n//             regardless of whether it's an \"own\" property.)\n// Returns:    The structure (which will then be turned into a string\n//             as part of the JSON.stringify algorithm)\nfunction Generic_toJSON(ctorName, obj, keys) {\n  var data, index, key;\n\n  if (!keys) {\n    keys = Object.keys(obj); // Only \"own\" properties are included\n  }\n\n  data = {};\n  for (index = 0; index &lt; keys.length; ++index) {\n    key = keys[index];\n    data[key] = obj[key];\n  }\n  return {ctor: ctorName, data: data};\n}\n\n// A generic \"fromJSON\" function for use with Reviver: Just calls the\n// constructor function with no arguments, then applies all of the\n// key/value pairs from the raw data to the instance. Only useful for\n// constructors that can be reasonably called without arguments!\n// `ctor`      The constructor to call\n// `data`      The data to apply\n// Returns:    The object\nfunction Generic_fromJSON(ctor, data) {\n  var obj, name;\n\n  obj = new ctor();\n  for (name in data) {\n    obj[name] = data[name];\n  }\n  return obj;\n}\n</code></pre>\n\n<p>The advantage here being that you defer to the implementation of a specific \"type\" (for lack of a better term) for how it serializes and deserializes. So you might have a \"type\" that just uses the generics:</p>\n\n<pre><code>// `Foo` is a constructor function that integrates with Reviver\n// but doesn't need anything but the generic handling.\nfunction Foo() {\n}\nFoo.prototype.nifty = \"I'm the nifty inherited property.\";\nFoo.prototype.spiffy = \"I'm the spiffy inherited property.\";\nFoo.prototype.toJSON = function() {\n  return Generic_toJSON(\"Foo\", this);\n};\nFoo.fromJSON = function(value) {\n  return Generic_fromJSON(Foo, value.data);\n};\nReviver.constructors.Foo = Foo;\n</code></pre>\n\n<p>...or one that, for whatever reason, has to do something more custom:</p>\n\n<pre><code>// `Bar` is a constructor function that integrates with Reviver\n// but has its own custom JSON handling for whatever reason.\nfunction Bar(value, count) {\n  this.value = value;\n  this.count = count;\n}\nBar.prototype.nifty = \"I'm the nifty inherited property.\";\nBar.prototype.spiffy = \"I'm the spiffy inherited property.\";\nBar.prototype.toJSON = function() {\n  // Bar's custom handling *only* serializes the `value` property\n  // and the `spiffy` or `nifty` props if necessary.\n  var rv = {\n    ctor: \"Bar\",\n    data: {\n      value: this.value,\n      count: this.count\n    }\n  };\n  if (this.hasOwnProperty(\"nifty\")) {\n    rv.data.nifty = this.nifty;\n  }\n  if (this.hasOwnProperty(\"spiffy\")) {\n    rv.data.spiffy = this.spiffy;\n  }\n  return rv;\n};\nBar.fromJSON = function(value) {\n  // Again custom handling, for whatever reason Bar doesn't\n  // want to serialize/deserialize properties it doesn't know\n  // about.\n  var d = value.data;\n      b = new Bar(d.value, d.count);\n  if (d.spiffy) {\n    b.spiffy = d.spiffy;\n  }\n  if (d.nifty) {\n    b.nifty = d.nifty;\n  }\n  return b;\n};\nReviver.constructors.Bar = Bar;\n</code></pre>\n\n<p>And here's how we might test that <code>Foo</code> and <code>Bar</code> work as expected (<a href=\"http://jsbin.com/anugeg\">live copy</a>):</p>\n\n<pre><code>// An object with `foo` and `bar` properties:\nvar before = {\n  foo: new Foo(),\n  bar: new Bar(\"testing\", 42)\n};\nbefore.foo.custom = \"I'm a custom property\";\nbefore.foo.nifty = \"Updated nifty\";\nbefore.bar.custom = \"I'm a custom property\"; // Won't get serialized!\nbefore.bar.spiffy = \"Updated spiffy\";\n\n// Use it\ndisplay(\"before.foo.nifty = \" + before.foo.nifty);\ndisplay(\"before.foo.spiffy = \" + before.foo.spiffy);\ndisplay(\"before.foo.custom = \" + before.foo.custom + \" (\" + typeof before.foo.custom + \")\");\ndisplay(\"before.bar.value = \" + before.bar.value + \" (\" + typeof before.bar.value + \")\");\ndisplay(\"before.bar.count = \" + before.bar.count + \" (\" + typeof before.bar.count + \")\");\ndisplay(\"before.bar.nifty = \" + before.bar.nifty);\ndisplay(\"before.bar.spiffy = \" + before.bar.spiffy);\ndisplay(\"before.bar.custom = \" + before.bar.custom + \" (\" + typeof before.bar.custom + \")\");\n\n// Stringify it with a replacer:\nvar str = JSON.stringify(before);\n\n// Show that\ndisplay(\"The string: \" + str);\n\n// Re-create it with use of a \"reviver\" function\nvar after = JSON.parse(str, Reviver);\n\n// Use the result\ndisplay(\"after.foo.nifty = \" + after.foo.nifty);\ndisplay(\"after.foo.spiffy = \" + after.foo.spiffy);\ndisplay(\"after.foo.custom = \" + after.foo.custom + \" (\" + typeof after.foo.custom + \")\");\ndisplay(\"after.bar.value = \" + after.bar.value + \" (\" + typeof after.bar.value + \")\");\ndisplay(\"after.bar.count = \" + after.bar.count + \" (\" + typeof after.bar.count + \")\");\ndisplay(\"after.bar.nifty = \" + after.bar.nifty);\ndisplay(\"after.bar.spiffy = \" + after.bar.spiffy);\ndisplay(\"after.bar.custom = \" + after.bar.custom + \" (\" + typeof after.bar.custom + \")\");\n\ndisplay(\"(Note that after.bar.custom is undefined because &lt;code&gt;Bar&lt;/code&gt; specifically leaves it out.)\");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>If you want to use the setters of Obj : </p>\n\n<pre><code>Obj.createFromJSON = function(json){\n   if(typeof json === \"string\") // if json is a string\n      json = JSON.parse(json); // we convert it to an object\n   var obj = new Obj(), setter; // we declare the object we will return\n   for(var key in json){ // for all properties\n      setter = \"set\"+key[0].toUpperCase()+key.substr(1); // we get the name of the setter for that property (e.g. : key=property =&gt; setter=setProperty\n      // following the OP's comment, we check if the setter exists :\n      if(setter in obj){\n         obj[setter](json[key]); // we call the setter\n      }\n      else{ // if not, we set it directly\n         obj[key] = json[key];\n      }\n   }\n   return obj; // we finally return the instance\n};\n</code></pre>\n\n<p>This requires your class to have setters for all its properties. \nThis method is static, so you can use like this : </p>\n\n<pre><code>var instance = Obj.createFromJSON({\"label\":\"MyLabel\"});\nvar instance2 = Obj.createFromJSON('{\"label\":\"MyLabel\"}');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>JavaScript is <a href=\"http://en.wikipedia.org/wiki/Prototype-based_programming\" rel=\"nofollow\">prototype based programming language</a> which is classless language where object orientation achieved by process of cloning existing objects that serve as prototypes.</p>\n\n<p>Serializing JSON would be considering any methods, for instance if you have an object</p>\n\n<pre><code>var x = {\n    a: 4\n    getText: function() {\n       return x.a;\n    }\n};\n</code></pre>\n\n<p>You will get just <code>{ a:4 }</code> where <code>getText</code> method is skipped by the serializer.</p>\n\n<p>I ran into this same trouble a year back and I had to maintain a separate helper class for each of my domain object and used <a href=\"http://api.jquery.com/jQuery.extend/\" rel=\"nofollow\"><code>$.extend()</code></a> it to my <strong>deserialized</strong> object when need, just more like having <strong>methods to a base class for the domain objects</strong>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an app that allows users to generate objects, and store them (in a MySQL table, as strings) for later use. The object could be :</p>\n\n<pre><code>function Obj() {\n    this.label = \"new object\";\n}\n\nObj.prototype.setLabel = function(newLabel) {\n    this.label = newLabel;\n}\n</code></pre>\n\n<p>If I use JSON.stringify on this object, I will only get the information on <code>Obj.label</code> (the stringified object would be a string like <code>{label: \"new object\"}</code>. If I store this string, and want to allow my user to retrieve the object later, the <code>setLabel</code> method will be lost.</p>\n\n<p>So my question is: how can I re-instantiate the object, so that it keeps the properties stored thanks to JSON.stringify, but also gets back the different methods that should belong to its prototype. How would you do that ? I was thinking of something along \"create a blank object\" and \"merge it with the stored one's properties\", but I can't get it to work.</p>\n",
            "last_activity_date": 1321197009,
            "question_id": 8111446,
            "score": 17,
            "tags": [
                "javascript",
                "oop"
            ],
            "title": "Turning JSON strings into objects with methods"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Unless something has changed in recent iOS versions, the scroll down trick is the only one that reliably works, I've had no issues with <a href=\"http://remysharp.com/2010/08/05/doing-it-right-skipping-the-iphone-url-bar/\">this version</a>:</p>\n\n<pre><code>/mobile/i.test(navigator.userAgent) &amp;&amp; !location.hash &amp;&amp; setTimeout(function() {\n  window.scrollTo(0, 1);\n}, 1000);\u200b\n</code></pre>\n\n<p>I didn't care about any other mobile platform for this particular page though, it was redirecting based on agent...you may want to change the regex to check for iPhone specifically, e.g. replace <code>/mobile/</code> with <code>/iPhone/</code>.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I know this thread is starting to age, but if you came here looking for answers, try:</p>\n\n<pre><code>setTimeout(function () {\n  window.scrollTo(0, 1);\n}, 1000);\n</code></pre>\n\n<p>if using jQuery, put at the end of <code>$(document).ready();</code>\nThe time out allows for the browser to determine the height of the page...</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think this version is actually better.  It tests to see if the user has already begun scrolling, which is an issue I noticed in my mobile project.</p>\n\n<pre><code>/Mobile/.test(navigator.userAgent) &amp;&amp; !location.hash &amp;&amp; setTimeout(function () {\n    if (!pageYOffset) window.scrollTo(0, 1);\n}, 1000);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Just hit this myself, if the address bar is not hiding, the reason may simply be the page is not long enough to scroll.</p>\n\n<p>When the </p>\n\n<pre><code>window.scrollTo(0,1) \n</code></pre>\n\n<p>is called the page <em>MUST</em> be longer than the window so a scrolling event can occur.\nOnly when the scrolling even occurs will mobile safari hide the address bar.</p>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>You can run the function when the site content is ready instead of using timeout</p>\n\n<pre><code>addEventListener(\"load\", function() {\n    window.scrollTo(1, 0);\n}, false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I know this is an old post, but to answer the question, I think it will never be solved unless the content is > than the brower window.</p>\n\n<p>Here is some code that will hide the URL on load, on orientation change, and on a touchstart (the touchstart should only be used if you have a persistent hidden url, which is a whole other can of worms - if you don't, remove that part of the script).</p>\n\n<pre><code>if( !window.location.hash &amp;&amp; window.addEventListener ){\n    window.addEventListener( \"load\",function() {\n        setTimeout(function(){\n            window.scrollTo(0, 0);\n        }, 0);\n    });\n    window.addEventListener( \"orientationchange\",function() {\n        setTimeout(function(){\n            window.scrollTo(0, 0);\n        }, 0);\n    });\n    window.addEventListener( \"touchstart\",function() {\n         setTimeout(function(){\n             window.scrollTo(0, 0);\n         }, 0);\n     });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>&lt;meta name=\"apple-mobile-web-app-capable\" content=\"yes\" /&gt;\n</code></pre>\n\n<p><a href=\"http://developer.apple.com/library/safari/#documentation/appleapplications/reference/safariwebcontent/ConfiguringWebApplications/ConfiguringWebApplications.html\" rel=\"nofollow\">iPhone Configuring Web Applications</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>For new googlers looking into this: As of <strong>iOS 7.1</strong> there's a new <code>minimal-ui</code> mode that works on mobile Safari:</p>\n\n<p><img src=\"http://i.stack.imgur.com/nWIId.png\" alt=\"minimal-ui\"></p>\n\n<p>It's enabled by setting the <code>minimal-ui</code> property on the viewport:</p>\n\n<pre><code>&lt;meta name=\"viewport\" content=\"minimal-ui\"&gt;\n</code></pre>\n\n<p>You can also use it in conjunction with other properties like so:</p>\n\n<pre><code>&lt;meta name=\"viewport\" content=\"width=device-width, minimal-ui\"&gt;\n</code></pre>\n\n<p>Of note, there's no minimum content length requirement as there is with the <code>scrollTo</code> hack. There's a great overview of this new mode <a href=\"http://www.mobilexweb.com/blog/ios-7-1-safari-minimal-ui-bugs\" rel=\"nofollow\">here</a>. (That's where the above image comes from.) He also lists some shortcomings.</p>\n\n<p>The only official documentation I could find on this is a note in <a href=\"https://developer.apple.com/library/prerelease/ios/releasenotes/General/RN-iOSSDK-7.1/index.html\" rel=\"nofollow\">Apple's iOS 7.1 release notes</a>:</p>\n\n<blockquote>\n  <p>A property, minimal-ui, has been added for the viewport meta tag key that allows minimizing the top and bottom bars on the iPhone as the page loads. While on a page using minimal-ui, tapping the top bar brings the bars back. Tapping back in the content dismisses them again.</p>\n  \n  <p>For example, use <code>&lt;meta name=\"viewport\" content=\"width=1024, minimal-ui\u201d&gt;</code>.</p>\n</blockquote>\n\n<p>Of course, since <strong>this only works in iOS 7.1 and above</strong>, it's usefulness may be limited.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a kind of easy question: how to hide the address bar on iPhone?</p>\n\n<p>I tried two different methods so far:</p>\n\n<ul>\n<li><p>The scroll down one pixel trick with Javascript on page load</p></li>\n<li><p>And the following meta tags:</p>\n\n<pre><code>&lt;meta name=\"viewport\" content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;\" /&gt;&lt;meta name=\"apple-mobile-web-app-capable\" content=\"yes\" /&gt;\n</code></pre></li>\n</ul>\n\n<p>also this:</p>\n\n<pre><code>&lt;meta names=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\" /&gt;\n</code></pre>\n\n<p>I am completly confused. Any advice would be highly appreciated!</p>\n\n<p>PS: Oh, I forgot a really important thing: the web page itself does not overflow the browser window, probably the reason why the 1 pixel scrolldown trick does not work.</p>\n\n<p>Can't make it bigger, since the hit thing about the design, that everyone can scroll, but this page folds... :)</p>\n",
            "last_activity_date": 1405715469,
            "question_id": 4117377,
            "score": 17,
            "tags": [
                "javascript",
                "iphone",
                "html",
                "css",
                "safari"
            ],
            "title": "How to hide the address bar on iPhone?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>var rand = Math.floor(Math.random()*10);\n\n$('.class').eq(rand).click();\n</code></pre>\n\n<p><code>Math.random()</code> gets you a pseudo-random number between 0 and 1, so multiplying it by 10 and rounding it down gets you 0 to 9. <code>.eq()</code> is 0 indexed, so this will get you a random jQuery element out of the 10 you have. </p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<pre><code>var random = Math.floor(Math.random()*10);\n$(\".someClass\").eq(random).click();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>You can write a custom filter (<a href=\"http://www.pinceladasdaweb.com.br/blog/2008/12/18/jquery-random-filter/\">taken from here</a>):</p>\n\n<pre><code>jQuery.jQueryRandom = 0;\njQuery.extend(jQuery.expr[\":\"], {\n    random: function(a, i, m, r) {\n        if (i == 0) {\n            jQuery.jQueryRandom = Math.floor(Math.random() * r.length);\n        };\n        return i == jQuery.jQueryRandom;\n    }\n});\n</code></pre>\n\n<p>Example usage:</p>\n\n<pre><code>$('.class:random').click()\n</code></pre>\n\n<p>The same thing but as a plugin instead:</p>\n\n<pre><code>\u200bjQuery.fn.random = function() {\n    var randomIndex = Math.floor(Math.random() * this.length);  \n    return jQuery(this[randomIndex]);\n};\n</code></pre>\n\n<p>Example usage:</p>\n\n<pre><code>$('.class').random().click()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 36
                },
                {
                    "body": "<p>If you don't want to hard code the number of elements to choose from, this works:</p>\n\n<pre><code>things = $('.class');\n$(things[Math.floor(Math.random()*things.length)]).click()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>I'd suggest doing it the jQuery way using <code>.eq()</code> and <code>.trigger()</code>.</p>\n\n<pre><code>$elements.eq(Math.floor(Math.random() * $elements.length)).trigger('click');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can I return a random element in jQuery by doing something like <code>$(.class).random.click()</code>?</p>\n\n<p>So, if <code>.class</code> had 10 links, it would randomly click one of them.</p>\n\n<p>Here is what I did:</p>\n\n<pre><code>var rand_num = Math.floor(Math.random()*$('.member_name_and_thumb_list a').size());\n$(\".member_name_and_thumb_list a\").eq(rand_num).click();\n</code></pre>\n",
            "last_activity_date": 1407712513,
            "question_id": 3614944,
            "score": 17,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to get random element in jquery?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<pre><code>num % 1 === 0\n</code></pre>\n\n<p>This will convert <code>num</code> to type <code>Number</code> first, so any value which can be converted to an integer will pass the test (e.g. <code>'42'</code>, <code>true</code>).</p>\n\n<p>If you want to exclude these, additionally check for</p>\n\n<pre><code>typeof num === 'number'\n</code></pre>\n\n<p>You could also use <code>parseInt()</code> to do this, ie</p>\n\n<pre><code>parseInt(num) == num\n</code></pre>\n\n<p>for an untyped check and</p>\n\n<pre><code>parseInt(num) === num\n</code></pre>\n\n<p>for a typed check.</p>\n\n<p>Note that the tests are not equivalent: Checking via <code>parseInt()</code> will first convert to <code>String</code>, so eg <code>true</code> won't pass the check.</p>\n\n<p>Also note that the untyped check via <code>parseInt()</code> will handle hexadecimal strings correctly, but will fail for octals (ie numeric strings with leading zero) as these are recognized by <code>parseInt()</code> but not by <code>Number()</code>. If you need to handle decimal strings with leading zeros, you'll have to specify the radix argument.</p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>There is a javascript function called isNaN(val) which returns true if val is not a number.</p>\n\n<p>If you want to use val as a number, you need to cast using parseInt() or parseFloat()</p>\n\n<p>EDIT:\noops. Corrected the error as mentioned in the comment</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>How about this:  </p>\n\n<pre><code>if((typeof(no)=='number') &amp;&amp; (no.toString().indexOf('.')==-1))\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>you could either make use of javas parsing capabilities or as well try out the modulo operator %...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Would this not work:</p>\n\n<pre><code>if (parseInt(number, 10) == number)\n{\n  alert(number + \" is an integer.\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Someone has already <a href=\"http://www.peterbe.com/plog/isint-function\" rel=\"nofollow\">done it for you</a>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>This works:</p>\n\n<pre><code>if (Math.floor(x) == x)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You could use the formal definition of integer:</p>\n\n<pre><code>Math.floor(x) === x\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This should do it:</p>\n\n<pre><code>n === n | 0\n</code></pre>\n\n<p>For a given number value <code>n</code>, the above expression returns <code>true</code> only if the number is an integer.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I test a variable to ascertain if it contains a number, and it is an integer?</p>\n\n<p><strong>e.g.</strong></p>\n\n<pre><code>if (1.589 == integer) // false\nif (2 == integer) // true\n</code></pre>\n\n<p>Any clues? </p>\n",
            "last_activity_date": 1381236045,
            "question_id": 1323314,
            "score": 17,
            "tags": [
                "javascript",
                "numbers"
            ],
            "title": "How to detect if a given number is an integer?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>No, you can't, not without the original variable.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can override setInterval:</p>\n\n<pre><code>window.oldSetInterval = window.setInterval;\nwindow.setInterval = function(func, interval) {\n    var interval = oldSetInterval(func, interval);\n    // store it in a array for stopping? stop it now? the power is yours.\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>This can be one of logic to clear all interval...</p>\n\n<pre><code>for (var i = 1; i &lt; 99999; i++)\n        window.clearInterval(i);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>The way I have achieved this is by having an application level array (e.g., Application.setIntervalIds = []) to which I push the setInterval ids to whenever one is created.  Then I can simply call window.clearInterval(id) on each id in the array when I need to.</p>\n\n<p>As an example, when I create a new setInterval I write something like (coffeescript):</p>\n\n<pre><code>id = setInterval (() -&gt; function2call()), timeout\nApplication.setIntervalIds.push id\n</code></pre>\n\n<p>And then I have a clearAllSetIntervals function I can call when needed:</p>\n\n<pre><code>Application.clearAllSetIntervals = () -&gt;\n    $.each Application.setIntervalIds, (index, id) -&gt;\n         window.clearInterval id\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>for (var i = 1; i &lt; 99999; i++)\n window.clearInterval(i);\n\nwas the answer I was looking for.  With a little improvement of this very simple logic             I was able to do something like this.\n\nvar i = 0;\nvar rotatorId;\nvar rotator;\n\nrotator =  setInterval(function() {myfunction(), 3000});\nrotatorId[i] = rotator;\ni++;\n\nif (rotator &gt; 1) {\n   for(i = 1; i &lt; rotatorId.length; i++){\n  clearInterval(rotatorId[i]);                      \n    }                       \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've got a setInterval() called in a jQuery plugin, but I want to clear it from my main page, where I don't have access to the variable that the setInterval was stored in.</p>\n\n<p>Is there a way to clear all timers present on a page?</p>\n",
            "last_activity_date": 1384001578,
            "question_id": 958433,
            "score": 17,
            "tags": [
                "javascript",
                "setinterval"
            ],
            "title": "How can I clearInterval() for all setInterval()?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>All standard ASP.NET postbacks work by calling a __doPostBack javascript method on the page. That function submits the form (ASP.NET only really likes one form per page) which includes some hidden input field in which all the viewstate and other goodness lives.</p>\n\n<p>On the face of it I can't see anything in SimpalModal that would screw up your page's form or any of the standard hidden inputs, unless the contents of that modal happened to come from a HTTP GET to an ASP.NET page. That would result in two ASP.NET forms being rendered into one DOM and would would almost certainly screw up the __doPostBack function.</p>\n\n<p>Have you considered using the <a href=\"http://www.asp.net/AJAX/AjaxControlToolkit/Samples/ModalPopup/ModalPopup.aspx\" rel=\"nofollow\">ASP.NET AJAX ModalPopup control</a>? </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Web browsers will not POST any disabled or hidden form elements.</p>\n\n<p>So what's happening is:</p>\n\n<ol>\n<li>The user clicks on a button in your dialog.</li>\n<li>The button calls SimpleModal's close() method, hiding the dialog and the button</li>\n<li>The client POSTs the form (without the button's ID)</li>\n<li>The ASP.NET framework can't figure out which button was clicked</li>\n<li>Your server-side code doesn't get executed.</li>\n</ol>\n\n<p>The solution is to do whatever you need to do on the client (closing the dialog in this case) and then call __doPostback() yourself.</p>\n\n<p>For example (where \"dlg\" is the client-side SimpleModal dialog reference):</p>\n\n<pre><code>btn.OnClientClick = string.Format(\"{0}; dlg.close();\",\n                        ClientScript.GetPostBackEventReference(btn, null));\n</code></pre>\n\n<p>That should hide the dialog, submit the form, and call whatever server-side event you have for that button.</p>\n\n<p>@<a href=\"#30623\" rel=\"nofollow\">Dan</a></p>\n\n<blockquote>\n  <blockquote>\n    <p>All standard ASP.NET postbacks work by calling a __doPostBack javascript method on the page.</p>\n  </blockquote>\n</blockquote>\n\n<p>asp:Buttons do not call __doPostback() because HTML input controls already submit the form.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Both of you were on the right track.  What I realized is that SimpleModal appends the dialog to the body, which is outside ASP.Net's <code>&lt;form&gt;</code>, which breaks the functionality, since it can't find the elements.</p>\n\n<p>To fix it, I just modified the SimpleModal source to append eveything to <code>'form'</code> instead of <code>'body'</code>.  When I create the dialog, I also use the <code>persist: true</code> option, to make sure the buttons stay through opening and closing.</p>\n\n<p>Thanks everyone for the suggestions!</p>\n\n<p><em>UPDATE:</em> Version 1.3 adds an <code>appendTo</code> option in the configuration for specifying which element the modal dialog should be appended to. <a href=\"http://www.ericmmartin.com/projects/simplemodal/#options\">Here are the docs</a>.</p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>I have found the following works without modifying simplemodal.js:</p>\n\n<pre><code>function modalShow(dialog) {\n\n    // if the user clicks \"Save\" in dialog\n    dialog.data.find('#ButtonSave').click(function(ev) {\n        ev.preventDefault();\n\n        //Perfom validation                \n\n        // close the dialog\n        $.modal.close();\n\n        //Fire the click event of the hidden button to cause a postback\n        dialog.data.find('#ButtonSaveTask').click();\n    });\n\n    dialog.data.find(\"#ButtonCancel\").click(function(ev) {\n        ev.preventDefault();\n        $.modal.close();\n    });\n}\n</code></pre>\n\n<p>So instead of using the buttons in the dialog to cause the postback you prevent their submit and then find a hidden button in the form and call its click event.        </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>FWIW, I've updated the <a href=\"http://blog.hurlman.com/post/jQuery2c-simpleModal2c-and-ASPNet-postbacks-do-not-play-well-together.aspx\" rel=\"nofollow\" title=\"blog.hurlman.com\">blog post you pointed to</a> with come clarification, reposted here - the reasoning &amp; other details are in the blog post:</p>\n\n<p><strong>The solution (as of my last checkin before lunch):</strong> </p>\n\n<ol>\n  <li>Override the dialog's onClose event, and do the following: \n    <ol>\n      <li>Call the dialog's default Close function </li>\n\n      <li>Set the dialog div's innerHTML to a single &amp;nbsp; </li>\n\n      <li>Hijack __doPostBack, pointing it to a new function, newDoPostBack </li>\n    </ol>\n  </li>\n</ol>\n\n<p>From some comments I\u2019ve seen on the web, point 1 needs some clarification.&#160; Unfortunately, I\u2019m no longer with the same employer, and don\u2019t have access to the code I used, but I\u2019ll do what I can.&#160; First off, you need to override the dialog\u2019s onClose function by defining a new function, and pointing your dialog to it, like this:</p>\n\n<blockquote>\n  <pre><code>$('#myJQselector').modal({onClose: mynewClose});</code></pre>\n</blockquote>\n\n<ul>\n  <li>Call the dialog's default Close function.&#160; In the function you define, you should first call the default functionality (a best practice for just about anything you override usually):</li>\n\n  <li>Set the dialog div's innerHTML to a single &amp;nbsp; \u2013 This is not a required step, so skip it if you don\u2019t understand this. </li>\n\n  <li>Hijack __doPostBack, pointing it to a new function, newDoPostBack </li>\n</ul>\n\n<blockquote>\n  <pre><code>function myNewClose (dialog)</code></pre>\n  <pre><code>{</code></pre>\n  <pre><code>    dialog.close();</code></pre>\n  <pre><code> </code><code>   __doPostBack = newDoPostBack;</code></pre>\n  <pre><code></code><code>}</code></pre>\n</blockquote>\n\n<ol>\n  <li>Write the newDoPostBack function: </li>\n</ol>\n\n<blockquote>\n  <pre>function newDoPostBack(eventTarget, eventArgument)\n{</pre>\n  <pre>    var theForm = document.forms[0];</pre>\n  <pre>    if (!theForm)</pre>\n  <pre>    {</pre>\n  <pre>        theForm = document.aspnetForm;</pre>\n  <pre>    }</pre>\n  <pre>&#160;</pre>\n  <pre>    if (!theForm.onsubmit || (theForm.onsubmit() != false))</pre>\n  <pre>    {</pre>\n  <pre>        document.getElementById(&quot;__EVENTTARGET&quot;).value = eventTarget;</pre>\n  <pre>        document.getElementById(&quot;__EVENTARGUMENT&quot;).value = eventArgument;</pre>\n  <pre>        theForm.submit();</pre>\n  <pre>    }\n}\n    </pre>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The new Jquery.simplemodal-1.3.js has an option called appendTo. So add an option called appendTo:'form' because the default is appendTo:'body' which doesn't work in asp.net. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Had the same problem, but <code>{appendTo:'form'}</code> caused the modal popup to be rendered completely wrong (as though I had a CSS issue). </p>\n\n<p>Turns out the template I'm building on top of has includes that put other forms on the page. Once I set <code>{appendTo:'#aspnetForm'}</code> (the default Asp.net form ID), everything worked great (including the postback).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>got caught out by this one - many thanks to tghw and all the other contributors on the appendto form instead of body fix. (resolved by attributes on the 1.3 version)</p>\n\n<p>btw: If anyone needs to close the dialog programmatically from .net - you can use this type of syntax</p>\n\n<pre><code>private void CloseDialog()\n{\n    string script = string.Format(@\"closeDialog()\");\n    ScriptManager.RegisterClientScriptBlock(this, typeof(Page), UniqueID, script, true);\n}\n</code></pre>\n\n<p>where the javascript of closedialog is like this....</p>\n\n<pre><code>    function closeDialog() {\n        $.modal.close();\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In addition to tghw's answer, this excellent blog post helped me: <a href=\"http://blog.amtopm.be/2009/03/18/jquery-modal-forms-break-aspnet-postback-functionality/\" rel=\"nofollow\">jQuery: Fix your postbacks in Modal forms</a> -- specifically BtnMike's comment: \"You also must not have CssClass=\u201dsimplemodal-close\u201d set on your asp:button.\"  Taking that off the class was the not-obvious-to-me solution.</p>\n\n<p>-John</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>if you don want modify the SimpleModal source.\ntry this..</p>\n\n<p>After you call the modal() method add this:</p>\n\n<pre><code>$(\"#simplemodal-overlay\").appendTo('form');\n$(\"#simplemodal-container\").appendTo('form');\n</code></pre>\n\n<p>the SimpleModal plugin add two this to your markup. </p>\n\n<ol>\n<li>'simplemodal-overlay' for the background</li>\n<li>'simplemodal-container' containig the div that you whant as pop up modal.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I'm using <a href=\"http://jquery.com/\">jQuery</a> and <a href=\"http://www.ericmmartin.com/projects/simplemodal/\">SimpleModal</a> in an ASP.Net project to make some nice dialogs for a web app.  Unfortunately, any buttons in a modal dialog can no longer execute their postbacks, which is not really acceptable.</p>\n\n<p>There is one source I've found with a <a href=\"http://blog.hurlman.com/post/jQuery2c-simpleModal2c-and-ASPNet-postbacks-do-not-play-well-together.aspx\">workaround</a>, but for the life of me I can't get it to work, mostly because I am not fully understanding all of the necessary steps.</p>\n\n<p>I also have a workaround, which is to replace the postbacks, but it's ugly and probably not the most reliable.  I would really like to make the postbacks work again.  Any ideas?</p>\n\n<p>UPDATE: I should clarify, the postbacks are not working because the Javascript used to execute the post backs has broken in some way, so nothing happens at all when the button is clicked.</p>\n",
            "last_activity_date": 1396359792,
            "question_id": 29174,
            "score": 17,
            "tags": [
                "asp.net",
                "javascript",
                "jquery",
                "postback",
                "simplemodal"
            ],
            "title": "SimpleModal breaks ASP.Net Postbacks"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>In Ruby you can use <code>page.execute_script</code> to evaluate a JavaScript variable (if it is accessable from the scope of the web browser). It looks like there is a similar method in Java <a href=\"http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/JavascriptExecutor.html\">here</a>.</p>\n\n<p>Edit: This might be a use case that is more suited to a JavaScript unit testing framework such as <a href=\"http://en.wikipedia.org/wiki/Jasmine_%28JavaScript_framework%29\">Jasmine</a>.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>page.evaluate_script(\"script code\")\npage.execute_script(\"script code\")\npage.find(\"#id\").click\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>All you have to do is:</p>\n\n<pre><code>Object val = js.executeScript(\"return returnFoo();\");\n</code></pre>\n\n<p>That will give you what you are looking for.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p><strong>No JavaScript functions need be defined.</strong> Nor is <code>alert()</code> needed.</p>\n\n<pre><code>Object result = js.executeScript(\"return globalVar\");\n</code></pre>\n\n<p>For Python:</p>\n\n<pre><code>result = driver.execute_script(\"return globalVar\")\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I'm using Selenium WebDriver (Java) and TestNG to do some testing on a website I created. In this website, I also have JavaScript and in some of the functions, it returns values and also outputs values to the browser console through <code>console.log()</code>.</p>\n\n<p><strong>I was wondering if there is an easy way for Selenium WebDriver to access some of this JavaScript information so I can perform assertions using TestNG.</strong></p>\n\n<p>I'm quite new to Selenium but I understand that you can do something like:</p>\n\n<pre><code>WebDriver driver = new ChromeDriver();\ndriver.findElement(By.id(\"btn\")).click();\n</code></pre>\n\n<p>So is there anything similar I can do using <code>WebDriver</code> to read the JavaScript on the site?</p>\n\n<hr>\n\n<h2>Clarification</h2>\n\n<p>It looks like people are making the assumption that I'm trying to \"execute\" JavaScript code through Selenium.</p>\n\n<p>Thats not the case. Instead, I'm trying to store already-defined JavaScript variable using Selenium.</p>\n\n<p>Basically, I want Selenium to be able to grab the JavaScript variable's value, store it locally, and then do an assertion test on it.</p>\n\n<hr>\n\n<h2>Attempt 1</h2>\n\n<p>Say I have the following JS code for my website:</p>\n\n<pre><code>$(document).ready(function() {\n    var foo = $(#\"input-field-val\").val();\n\n    function returnFoo() {\n        return foo;\n    }\n});\n</code></pre>\n\n<p>From what I've reading and understanding, in my seperate Selenium test file (Selenium.java), I should be able to do something like this?:</p>\n\n<pre><code>public class Selenium {\n    WebDriver driver = new FirefoxDriver();\n    JavascriptExecutor js = (JavascriptExecutor) driver;\n\n    @Test\n    public void testSample() {\n        driver.get(\"www.mywebsite.com\");\n        js.executeScript(\"alert(returnFoo());\");\n    }\n}\n</code></pre>\n\n<p>I do something similar to what's above but no alert box pops up. Instead, I get an error message:</p>\n\n<pre><code>Exception in thread \"main\" org.openqa.selenium.WebDriverException: ReferenceError: returnFoo is not defined\n</code></pre>\n\n<p>I'm pretty sure I'm not understanding what it means when its said that the JS variable </p>\n\n<blockquote>\n  <p>should not be part of a closure or local variable</p>\n</blockquote>\n\n<p>I have also tried defining a global variable above the <code>$(document).ready(function()...</code> and setting is within <code>function returnFoo()</code> but still doesn't work.</p>\n\n<hr>\n\n<h2>Attempt 2</h2>\n\n<p>I've moved both <code>foo</code> and <code>returnFoo()</code> outside of the <code>$(document).ready(function()...</code>. That has fixed <code>ReferenceError</code> message that I was getting in <em>Attempt 1</em> above.</p>\n\n<p>I hav also given <code>foo</code> a value so my JS code looks something like this:</p>\n\n<pre><code>var foo = \"Selenium test run\";\n\n$(document).ready(function() {\n...\n});\n\nfunction returnFoo() {\n    return foo;\n}\n</code></pre>\n\n<p>Now, I'm having a tough time assigning the return of <code>returnFoo()</code> to a local variable within my Selenium test. Here's what I've attempted:</p>\n\n<pre><code>public static void main(String[] args) {\n        WebDriver driver = new FirefoxDriver();\n        JavascriptExecutor js = (JavascriptExecutor) driver;\n\n        driver.get(\"http://localhost:8080/HTML5TestApp/prod.html\");\n        Object val = js.executeScript(\"window.returnFoo();\");\n        System.out.println(val);\n    } \n</code></pre>\n\n<p>But the console display <code>null</code> instead of the actual value of <strong>\"Selenium test run\"</strong>.</p>\n\n<h2>Attempt 2 - SOLUTION</h2>\n\n<p>It looks like if I do <code>Object val = js.executeScript(\"alert(returnFoo());\");</code> I get the value of <code>foo</code>.</p>\n\n<hr>\n\n<h2>SOLUTION</h2>\n\n<p>So here's the solution I've come up w/ to my problem thanks to the solution by Martin Foot below.</p>\n\n<p>In my JavaScript file, I created a <code>var</code> and a setter/getter function like so:</p>\n\n<p><strong>index.js</strong></p>\n\n<pre><code>var seleniumGlobal;\n\n$(document).ready(function() {\n...\n)};\n\nfunction setSG(toSet) {\n    seleniumGlobal = toSet;\n}\n\nfunction getSG() {\n    return seleniumGlobal;\n}\n</code></pre>\n\n<p><strong>SampleTest.java</strong></p>\n\n<pre><code>// Do all the necessary imports\n\npublic class SampleTest {\n    WebDriver driver = new FirefoxDriver();\n    JavascriptExecutor js = (JavascriptExecutor) driver;\n\n    @Test\n    public void testPrintVal() {\n        String sgVal = (String) js.executeScript(\"alert(getSG());\");\n        Assert.assertEquals(\"new value for seleniumGlobal\", sgVal);\n    }\n}\n</code></pre>\n\n<p>So whenever some code in my JavaScript sets my <code>seleniumGlobal</code> variable through the setter method, I can call it through my Selenium test and do assertions on it.</p>\n\n<p>This is probably not the most efficient way to do but if someone else has a better solution, please let me know.</p>\n",
            "last_activity_date": 1401473682,
            "question_id": 13994393,
            "score": 16,
            "tags": [
                "javascript",
                "selenium",
                "testng",
                "selenium-webdriver"
            ],
            "title": "Reading JavaScript variables using Selenium WebDriver"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Returning <code>false</code> from the function will stop the event continuing. I.e. it will stop the form submitting.</p>\n\n<p>i.e.</p>\n\n<pre><code>function someFunction()\n{\n    if (allow) // For example, checking that a field isn't empty\n    {\n       return true; // Allow the form to submit\n    }\n    else\n    {\n       return false; // Stop the form submitting\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You need the return so the true/false gets passed up to the form's submit event (which looks for this and prevents submission if it gets a false).</p>\n\n<p>Lets look at some standard JS:</p>\n\n<pre><code>function testReturn() { return false; }\n</code></pre>\n\n<p>If you just call that within any other code (be it an onclick handler or in JS elsewhere) it will get back false, but you need to do something with that value.</p>\n\n<pre><code>...\ntestReturn()\n...\n</code></pre>\n\n<p>In that example the return value is coming back, but nothing is happening with it. You're basically saying execute this function, and I don't care what it returns. In contrast if you do this:</p>\n\n<pre><code>...\nvar wasSuccessful = testReturn();\n...\n</code></pre>\n\n<p>then you've done something with the return value.</p>\n\n<p>The same applies to onclick handlers. If you just call the function without the return in the onsubmit, then you're saying \"execute this, but don't prevent the event if it return false.\" It's a way of saying execute this code when the form is submitted, but don't let it stop the event.</p>\n\n<p>Once you add the return, you're saying that what you're calling should determine if the event (submit) should continue.</p>\n\n<p>This logic applies to many of the onXXXX events in HTML (onclick, onsubmit, onfocus, etc).</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>An extension to what GenericTypeTea says</p>\n\n<p>Here is a concrete example</p>\n\n<pre><code>&lt;form onSubmit=\"return false\"&gt;\n</code></pre>\n\n<p>Above will not submit</p>\n\n<pre><code>&lt;form onSubmit=\"false\"&gt;\n</code></pre>\n\n<p>Will do nothing.</p>\n\n<p>Without the return, onSubmit doesn't get the value to stop.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>&lt;script&gt;\nfunction check(){\n    return false;\n}\n &lt;/script&gt;\n\n&lt;form name=\"form1\" method=\"post\" onsubmit=\"return check();\" action=\"target\"&gt;\n&lt;input type=\"text\" /&gt;\n&lt;input type=\"submit\" value=\"enviar\" /&gt;\n\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>HTML event handler code behaves like the body of a JavaScript function.  Many languages such as C or Perl implicitly return the value of the last expression evaluated in the function body.  JavaScript doesn't, it discards it and returns undefined unless you write an explicit <code>return</code><em>EXPR</em>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>The question is pretty self-explanatory. I don't understand what the return is doing in the following code:</p>\n\n<pre><code>&lt;form onSubmit=\"return somefunction()\"&gt;\n</code></pre>\n",
            "last_activity_date": 1382529304,
            "question_id": 5195933,
            "score": 16,
            "tags": [
                "javascript",
                "javascript-events"
            ],
            "title": "With form validation: why onSubmit=&quot;return functionname()&quot; instead of onSubmit=&quot;functionname()&quot;?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You might want to look at one of the many available jquery file uploader plugins rather than doing it yourself.</p>\n\n<ul>\n<li><a href=\"http://valums.com/ajax-upload/\" rel=\"nofollow\">Ajax Upload</a></li>\n<li><a href=\"http://www.uploadify.com/\" rel=\"nofollow\">Uploadify</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": -15
                },
                {
                    "body": "<p>I have the suspicion that due to security reasons you wont be able to do this. I seem to remember a while back trying to set the value attribute of a file upload element which you can't do as you could pull specific files from a users computer without their consent. I'd imagine that this would extend to programmatically changing a text box to a file upload element as you could set the value of the text field to the file you wanted to add then change it's type to a upload element and submit the form.</p>\n\n<p>It should be a simple enough thing to try although I'd think you're working within the limitations of Javascript and therefore if you can't do it in native JS you'd be unlikely to be able to use JQuery.</p>\n\n<p>Hope this makes sense,</p>\n\n<p>JLove</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You mean something like this?</p>\n\n<p><a href=\"http://jsfiddle.net/CSvjw/\">http://jsfiddle.net/CSvjw/</a></p>\n\n<pre><code>$('input[type=text]').click(function() {\n    $('input[type=file]').trigger('click');\n});\n\n$('input[type=file]').change(function() {\n    $('input[type=text]').val($(this).val());\n});\n</code></pre>\n\n<p>Note, though, that the value given by the file input is fake for security reasons. If you want to just have the file name show up, you can cut out the slashes.</p>\n\n<p>Here's an example of how to do it using a string split and an array pop:</p>\n\n<p><a href=\"http://jsfiddle.net/CSvjw/1/\">http://jsfiddle.net/CSvjw/1/</a></p>\n\n<pre><code>$('input[type=text]').click(function() {\n    $('input[type=file]').trigger('click');\n});\n\n$('input[type=file]').change(function() {\n    var vals = $(this).val(),\n        val = vals.length ? vals.split('\\\\').pop() : '';\n\n    $('input[type=text]').val(val);\n});\n</code></pre>\n\n<p>You can adjust this further to account for systems that use a forward slash as the directory separator. It's also important to note that if you do this, you'll lose the functionality of many modern browsers where users can drag files from their computer directly onto a file input. If I were you, I'd embrace that paradigm by styling the file input rather than trying to turn a text input into something that it is not.</p>\n",
                    "is_accepted": false,
                    "score": 49
                },
                {
                    "body": "<p>Dont use <code>display:none</code> or <code>visibility:hidden</code> initially in the css</p>\n\n<p>In <strong>Jquery</strong>:</p>\n\n<pre><code>$(document).ready(function() {\n $('#file').hide(); \n $(\"#elementToBeClicked\").click(function(){\n   $('#file').click();\n });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>And if the HTML code has identical multiple inputs like this one below:-</p>\n\n<pre><code>&lt;div class=\"item\"&gt;\n&lt;input type=\"text\" /&gt;\n&lt;input type=\"file\" /&gt;\n&lt;/div&gt;\n&lt;div class=\"item\"&gt;\n&lt;input type=\"text\" /&gt;\n&lt;input type=\"file\" /&gt;\n&lt;/div&gt;\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\n</code></pre>\n\n<p>Expanding on @treeface's answer, the Jquery code (current version 1.8.0) would be:</p>\n\n<pre><code>$('input[type=text]').click(function() {\n    $(this).parent(\".item\")\n        .find('input[type=file]')\n        .trigger('click');\n});\n\n$('input[type=file]').change(function() {\n    $(this).parent(\".item\")\n        .find('input[type=text]')\n        .val($(this).val());\n});\u200b\n</code></pre>\n\n<p>Do take note between $parents() and $parent() in jQuery. Try it out @ <a href=\"http://jsfiddle.net/afxDC/\">http://jsfiddle.net/afxDC/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>i think you can bind the input text to a jquery/javascript function that will create an file input with code and the the user can now upload a file\nie <code>html\n    &lt;input type=\"text\" onclick=\"upload\"/&gt;\n     jquery\n     function upload(){\n       $('[input type='text']').append('&lt;input type=\"file\"/&gt;')</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>instead of using <code>&lt;input type=\"file\"&gt;</code>, is it possible to use <code>&lt;input type=\"text\"&gt;</code> and then script it using javascript or jquery such that when the text box is clicked, the file upload dialogue shows up.....(and have it actually uploaded when it's submitted into a form)</p>\n",
            "last_activity_date": 1390055250,
            "question_id": 4502612,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "file-upload",
                "textbox"
            ],
            "title": "trigger file upload dialog using javascript/jquery"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>if you are using jQuery Ajax :\n $.ajax() </p>\n\n<p>you can set the attribute of asynch to false ,\nand then you will have a synch ajax request to the server. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>We are using GWT RPC which also has an async API. The solution that we are currently using to make several async calls in serial is call chaining:</p>\n\n<pre><code>callA(function(resultA) {\n    callB(resultA, function(resultB) {\n        callC(); //etc.\n    });\n});\n</code></pre>\n\n<p>This nested approach achieves what you want but it is verbose and hard to read for newcomers. One of the approaches that we have investigated is adding the calls that we need to make to a stack and executing them in order:</p>\n\n<pre><code>callStack = [\n    callA(),\n    callB(),\n    callC()\n];\n\ncallStack.execute();\n</code></pre>\n\n<p>Then the callstack would manage:</p>\n\n<ol>\n<li>Invoking the calls in serial (i.e. the wiring in the first example)</li>\n<li>Passing the result from one call forward to the next.</li>\n</ol>\n\n<p>However, because Java doesn't have function references, each call on the call stack would require an anonymous class so we stopped short of such a solution. However, you may have more success in javascript.</p>\n\n<p>Good luck!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Sorry, JavaScript does not provide the language primitives (eg. threads or coroutines) to make asynchronous things act synchronously or vice-versa.</p>\n\n<p>You generally* get one thread of execution only, so you can't get a callback from a timer or XMLHttpRequest readystatechange until the stack of calls leading to the creation of the request has completely unravelled.</p>\n\n<p>So in short, you can't really do it; the approach with nested closures on the WebKit page you linked is the only way I know of to make the code readable in this situation.</p>\n\n<p>*: except in some obscure situations which wouldn't help you and are generally considered bugs</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>You can try something like:</p>\n\n<pre><code>function synch()\n{\n    var done = false;\n    var returnVal = undefined;\n\n    // asynch takes a callback method\n    // that is called when done\n    asynch(function(data) {\n        returnVal = data;\n        done = true;\n    });\n\n    while (done == false) {};\n    return returnVal;\n}\n</code></pre>\n\n<p>But that may freeze your browser for the duration of the asynch method...</p>\n\n<p>Or take a look at Narrative JavaScript: <em>Narrative JavaScript is a small extension to the JavaScript language that enables blocking capabilities for asynchronous event callbacks. This makes asynchronous code refreshingly readable and comprehensible.</em> </p>\n\n<p><a href=\"http://neilmix.com/narrativejs/doc/index.html\" rel=\"nofollow\">http://neilmix.com/narrativejs/doc/index.html</a></p>\n\n<p>Mike</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This doesn't actually implement synchronous operation of the db query, but this was my solution for easy management. Basically use the calling function as the callback function, and test for the results argument. If the function receives results, it parses them, if not, it sends itself as a callback to the query method.</p>\n\n<pre><code> render: function(queryResults){\n  if (typeof queryResults != 'undefined'){\n   console.log('Query completed!');\n   //do what you will with the results (check for query errors here)\n\n  } else {\n   console.log('Beginning query...');\n   this.db.read(this.render); //db.read is my wrapper method for the sql db, and I'm sending this render method as the callback.\n  }\n }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>StratifiedJS allows you to do exactly that.</p>\n\n<p>There's even an article on how to apply it on browser storage:\n<a href=\"http://onilabs.com/blog/stratifying-asynchronous-storage\">http://onilabs.com/blog/stratifying-asynchronous-storage</a></p>\n\n<p>And this is the Stratified JavaScript library it uses <a href=\"https://gist.github.com/613526\">https://gist.github.com/613526</a></p>\n\n<p>The example goes like:</p>\n\n<pre><code>var db = require(\"webdatabase\").openDatabase(\"CandyDB\", ...);\ntry {\n  var kids = db.executeSql(\"SELECT * FROM kids\").rows;\n  db.executeSql(\"INSERT INTO kids (name) VALUES (:name);\", [kids[0]]);\n  alert(\"done\");\n} catch(e) {\n  alert(\"something went wrong\");\n}\n</code></pre>\n\n<p>maybe a bit late, but the tech didn't exist back then ;)</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I am not sure if this is the right place but I cam here searching for answers to making an synchronous calls in Firefox. the solution would be to remove onreadystatechange callback and do a direct call.\nThis is what I had found and my solution \n<a href=\"http://www.skill-guru.com/blog/2011/01/26/synchronous-calls-with-rest-service/\" rel=\"nofollow\">synchronous call back with rest service</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm working with a JavaScript API where most of the functions are asynchronous.  The API is the <a href=\"http://webkit.org/blog/126/webkit-does-html5-client-side-database-storage/\">WebKit JavaScript Database API</a> which is a binding to a subset of functionality to manipulate SQLite3 databases.  I understand the design decision to make things async as to not block and provide a responsive user interface.  In my situation I know that my usage of the async API calls will execute fast.  Since this is the case I'd like to provide my developers a cleaner and easier to use wrapper API that forces synchronous calls.</p>\n\n<p>Here's the async call</p>\n\n<pre><code>db.executeSql(sqlStatement, function(result) {\n  // do something with result\n});\n</code></pre>\n\n<p>And here's what I'd like to be able to do</p>\n\n<pre><code>var result = dbWrapper.executeSql(sqlStatement);\n// do something with result\n</code></pre>\n\n<p>Is there a design pattern/way to do this?  A written or linked to code example is preferred.  The target platform/broswer is Mobile Safari on the iPhone.</p>\n\n<p>Thank you</p>\n",
            "last_activity_date": 1327403156,
            "question_id": 214491,
            "score": 16,
            "tags": [
                "javascript",
                "iphone",
                "design-patterns",
                "safari",
                "mobile-safari"
            ],
            "title": "Pattern for wrapping an Asynchronous JavaScript function to make it synchronous"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>This makes an indirect call.</p>\n\n<p>This ensures the context, in the called function, is the global one. This might be useful in an internal scope.</p>\n\n<p>Example :</p>\n\n<pre><code>var a = {\n  b:function(){\n     console.log(this);    \n  },\n  c1:function(){\n     this.b(); \n  },\n  c2:function(){\n     (0,this.b)(); \n  }\n}\na.c1(); // log a\na.c2(); // logs window\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 23
                }
            ],
            "body": "<p>Sometimes I stared at js provided with google.com main page and found that they tended to use <code>(0, obj.func)(args)</code> syntax. Here are excerpts from the script:</p>\n\n<pre><code> var _ = _ || {};\n (function (_) {\n     var window = this;\n     try {\n         _.mb = function (a) {\n             return (0, window.decodeURIComponent)(a.replace(/\\+/g, \" \"))\n         };\n         _.zg = function (a, b) {\n             for (var c = a.length ? a.split(\"&amp;\") : [], d = 0; d &lt; c.length; d++) {\n                 var e = c[d];\n                 if ((0, _.Ag)(e) == b) return (c = /=(.*)$/.exec(e)) ? (0, _.mb)(c[1]) : null\n             }\n             return null\n         };\n         _.Ag = function (a) {\n             return (a = /^(.+?)(?:=|$)/.exec(a)) ? (0, _.mb)(a[1]) : null\n         };\n         var Cg = function (a, b) {\n                 var c = a.indexOf(\"?\");\n                 return 0 &gt; c ? null : (0, _.zg)(a.substring(c + 1), b)\n             };\n         // Note var Cg called with no 0\n         var oca = function (a) {\n                 this.A = Cg(a, \"mods\");\n                 this.B = Cg(a, \"ver\")\n             };\n     } catch (e) {}\n })(_);  \n</code></pre>\n\n<p>Why prepending 0?</p>\n",
            "last_activity_date": 1382588062,
            "question_id": 19535601,
            "score": 15,
            "tags": [
                "javascript"
            ],
            "title": "Why does google main page use (0, obj.func)(args) syntax?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>try to send content type header from server use this just before echoing </p>\n\n<pre><code>header('Content-Type: application/json');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Make it <code>dataType</code> instead of <code>datatype</code>. </p>\n\n<p>And add below code in php as your ajax request is expecting json and will not accept anything, but json.</p>\n\n<pre><code>header('Content-Type: application/json');\n</code></pre>\n\n<p><a href=\"http://stackoverflow.com/questions/477816/what-is-the-correct-json-content-type\">Correct Content type for JSON and JSONP</a></p>\n\n<p>The response visible in firebug is text data. Check <code>Content-Type</code> of the response header to verify, if the response is json. It should be <code>application/json</code> for <code>dataType:'json'</code> and <code>text/html</code> for <code>dataType:'html'</code>.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>I recommend you use:</p>\n\n<pre><code>var returnedData = JSON.parse(data);\n</code></pre>\n\n<p>to convert the JSON string (if it is just text) to a JavaScript object.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use parseJSON jquery method to covert string into object</p>\n\n<pre><code>var objData = jQuery.parseJSON(data);\n</code></pre>\n\n<p>Now you can write code</p>\n\n<pre><code>$('#result').html(objData .status +':' + objData .message);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Your datatype is wrong, change datatype for dataType.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've been smashing my head against a brick wall with this one, i've tried loads of the solutions on stackoverflow but can't find one that works! </p>\n\n<p>Basically when I POST my AJAX the PHP returns JSON but the AJAX shows Undefined instead of the value: </p>\n\n<p><strong>JS</strong>:</p>\n\n<pre><code>  /* attach a submit handler to the form */\n  $(\"#group\").submit(function(event) {\n\n  /* stop form from submitting normally */\n  event.preventDefault();\n\n  /*clear result div*/\n  $(\"#result\").html('');\n\n  /* get some values from elements on the page: */\n  var val = $(this).serialize();\n\n  /* Send the data using post and put the results in a div */\n  $.ajax({\n      url: \"inc/group.ajax.php\",\n      type: \"post\",\n      data: val,\n  datatype: 'json',\n      success: function(data){\n            $('#result').html(data.status +':' + data.message);   \n            $(\"#result\").addClass('msg_notice');\n            $(\"#result\").fadeIn(1500);           \n      },\n      error:function(){\n          $(\"#result\").html('There was an error updating the settings');\n          $(\"#result\").addClass('msg_error');\n          $(\"#result\").fadeIn(1500);\n      }   \n    }); \n});\n</code></pre>\n\n<p><strong>PHP</strong>:</p>\n\n<pre><code>  $db = new DbConnector();\n  $db-&gt;connect();\n  $sql='SELECT grp.group_id, group_name, group_enabled, COUNT('.USER_TBL.'.id) AS users, grp.created, grp.updated '\n        .'FROM '.GROUP_TBL.' grp '\n        .'LEFT JOIN members USING(group_id) '\n        .'WHERE grp.group_id ='.$group_id.' GROUP BY grp.group_id';\n\n    $result = $db-&gt;query($sql);     \n    $row = mysql_fetch_array($result);\n    $users = $row['users'];\n    if(!$users == '0'){\n        $return[\"json\"] = json_encode($return);\n        echo json_encode(array('status' =&gt; 'error','message'=&gt; 'There are users in this group'));\n    }else{\n\n        $sql2= 'DELETE FROM '.GROUP_TBL.' WHERE group_id='.$group_id.'';\n        $result = $db-&gt;query($sql2);\n\n        if(!$result){\n            echo json_encode(array('status' =&gt; 'error','message'=&gt; 'The group has not been removed'));\n        }else{\n            echo json_encode(array('status' =&gt; 'success','message'=&gt; 'The group has been removed'));\n        }\n    }\n</code></pre>\n\n<p><strong>JSON Result from firebug</strong>:</p>\n\n<pre><code>{\"status\":\"success\",\"message\":\"success message\"}\n</code></pre>\n\n<p>AJAX Displays the JSON result as Undefined and I dont have a clue why. I have tried displaying adding <code>dataType='json'</code> and <code>datatype='json'</code>. I have also tried changing it to <code>data.status</code> and <code>data['status']</code>: still no joy though. </p>\n\n<p>Any help would be really appreciated. This is killing me </p>\n",
            "last_activity_date": 1401624593,
            "question_id": 19155192,
            "score": 15,
            "tags": [
                "javascript",
                "php",
                "jquery",
                "ajax",
                "json"
            ],
            "title": "jQuery AJAX Call to PHP Script with JSON Return"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The <code>apply</code> function changes the value of <code>this</code> in the callee as well as letting you pass an array for the arguments.</p>\n\n<p>For example, if you want to pass an array as arguments to a function:</p>\n\n<pre><code>function foo(value1, value2, value3) {\n    alert(\"Value 1 is \"+value1+\".\");\n    alert(\"Value 2 is \"+value2+\".\");\n    alert(\"Value 3 is \"+value3+\".\");\n}\nvar anArray=[1, 2, 3];\nfoo(anArray); // This will not work. value1 will be anArray, and value 2 and 3 will be undefined.\nfoo.apply(this, anArray); // This works, as anArray will be the arguments to foo.\n</code></pre>\n\n<p>Or, another use: changing <code>this</code>:</p>\n\n<pre><code>function Foo() {\n    this.name=\"world\";\n    this.sayHello=function() {\n        alert(\"Hello, \"+this.name);\n    };\n}\nvar foo=new Foo();\nfoo.sayHello(); // This works, as this will be foo in foo's sayHello.\nvar sayHello=foo.sayHello;\nsayHello(); // This does not work, as this will not be foo.\nsayHello.apply(foo, []); // This will work, as this will be foo.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>In this case, the log function may accept any number of arguments. </p>\n\n<p>Using <code>.apply()</code>, it doesn't matter how many arguments are passed. You can give the set to <code>console.log()</code>, and they will arrive as individual arguments.</p>\n\n<p>So if you do:</p>\n\n<pre><code>console.log(arguments)\n</code></pre>\n\n<p>...you're actually giving <code>console.log</code> a single <code>Arguments</code> object.</p>\n\n<p>But when you do:</p>\n\n<pre><code>console.log.apply( console, arguments );\n</code></pre>\n\n<p>...it's as though you passed them separately.</p>\n\n<p>Other useful examples of using <code>.apply()</code> like this can be demonstrated in other methods that can accept a variable number of arguments. One such example is <code>Math.max()</code>.</p>\n\n<p>A typical call goes like this:</p>\n\n<pre><code>var max = Math.max( 12,45,78 );  // returns 78\n</code></pre>\n\n<p>...where it returns the largest number.</p>\n\n<p>What if you actually have an Array of values from which you need the largest? You can use <code>.apply()</code> to pass the collection. <code>Math.max</code> will think they were sent as separate arguments instead of an Array.</p>\n\n<pre><code>var max = Math.max.apply( null, [12,45,92,78,4] );  // returns 92\n</code></pre>\n\n<p>As you can see, we don't need to know in advance how many arguments will be passed. The Array could have 5 or 50 items. It'll work either way.</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p><code>console.log(arguments)</code> would send a single argument to <code>console.log</code>, the array of arguments passed to your log method. <code>console.log.apply(console, arguments)</code> sends the possibly multiple arguments as multiple arguments instead of a single array.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you have </p>\n\n<pre><code>function log() {\n    console.log.apply(console, arguments);\n}\n</code></pre>\n\n<p>and call it like <code>log('foo');</code> then that translates to <code>console.log.apply(console, ['foo']);</code> which is equivalent to <code>console.log('foo');</code> which is what you want.</p>\n\n<p>If you defined it like</p>\n\n<pre><code>function log() {\n    console.log(arguments);\n}\n</code></pre>\n\n<p>instead then <code>log('foo');</code> would be equivalent to <code>log(['foo']);</code> which is not what you want.</p>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>This snippet is cut from Secrets of the JavaScript Ninja.</p>\n\n<pre><code>function log() {\n    try {\n        console.log.apply( console, arguments );\n    } catch(e) {\n        try {\n            opera.postError.apply( opera, arguments );\n        } catch(e){\n            alert( Array.prototype.join.call( arguments, \" \" ) );\n        }\n    }\n}\n</code></pre>\n\n<p>Why should I use apply and what's the difference between <code>console.log.apply(console, arguments)</code> and <code>console.log(arguments)</code>?</p>\n",
            "last_activity_date": 1297655445,
            "question_id": 4988645,
            "score": 15,
            "tags": [
                "javascript"
            ],
            "title": "Why should use &quot;apply&quot;?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Checkout Dean Edwards' <a href=\"http://dean.edwards.name/weblog/2007/12/base2-intro/\" rel=\"nofollow\">base2</a>. It contains a minimal amount of code necessary to patch up browser differences and provide nice consistent interface as per the standards. The gzipped version is only 6k.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It seems that the safest bet is indeed to use a javascript framework.  I was able to find some small DOMready libraries - but nothing written recently or claiming to be confirmed working with the most current browser releases.</p>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>David Mark's \"My Library\" has a \"DOM ready\" functionality: </p>\n\n<p><a href=\"http://www.cinsoft.net/mylib.html\">http://www.cinsoft.net/mylib.html</a></p>\n\n<p>David is avid anti-framework, anti-bad-javascript-practice so it should be good quality code.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Here is a small cross-browser <a href=\"http://www.freelancephp.net/en/domready-javascript-object-cross-browser/\" rel=\"nofollow\">DOMReady object</a> (~1kb) based on existing solutions from Diego Perini and Dion Almaer.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Use ded's <a href=\"https://github.com/ded/domready\" rel=\"nofollow\">domready</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just do this right before the closing body tag:</p>\n\n<pre><code>&lt;html&gt;\n&lt;script&gt;\nfunction runAfterLoad() {\n}\n... lots of stuff\n&lt;/script&gt;\n&lt;body&gt;\n\n... lots of stuff\n\n&lt;script&gt;runAfterLoad();&lt;/script&gt;&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>please check out this simple function <a href=\"https://gist.github.com/yehiaa/c859dceb135d61d9583a\" rel=\"nofollow\">dom ready function </a></p>\n\n<p>it has been tested in ie 8 , firefox, chrome and safari .</p>\n\n<p>and check this answer <a href=\"http://stackoverflow.com/questions/1206937/javascript-domready/18193502#18193502\">javascript domready?</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Does anyone know of a good javascript DOM ready library that I can use without loading an entire framework?  I found one on <a href=\"http://code.google.com/p/domready/\">google code</a> that seems to work, but the library was posted in 2008 and I can't find any confirmation on up-to-date cross browser support.</p>\n",
            "last_activity_date": 1417472465,
            "question_id": 2732171,
            "score": 15,
            "tags": [
                "javascript",
                "domready"
            ],
            "title": "Javascript DOM ready without an entire framework"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.w3schools.com/jsref/jsref_encodeURIComponent.asp\"><code>encodeURIComponent</code></a> will do what you are looking for. </p>\n\n<pre><code>var X = encodeURIComponent($('#div1').val());\nvar Y = encodeURIComponent($('#div2').val());\n</code></pre>\n\n<p>This will encode all potentially insecure characters.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>The best would be using an object for the data. </p>\n\n<pre><code>jQuery.post(\"yourScript.php\", {\n   varx: X,\n   vary: Y\n});\n</code></pre>\n\n<p>or</p>\n\n<pre><code>jQuery.ajax({\n      url: \"yourScript.php\",         \n      type: \"POST\",\n      data: ({varx: X, vary: Y}),\n      dataType: \"text\",\n      success: function(msg){\n         alert(msg);\n      }\n   }\n);\n</code></pre>\n\n<p>You can also use jQuery's serialize() to get your form data as a serialized querystring: </p>\n\n<pre><code>var data = jQuery(formSelector).serialize();\n</code></pre>\n\n<blockquote>\n  <p>The .serialize() method creates a text\n  string in standard URL-encoded\n  notation. It operates on a jQuery\n  object representing a set of form\n  elements. The form elements can be of\n  several types.</p>\n</blockquote>\n\n<p>Way prettier in my opinion :-)</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>You can use escape function of JavaScript</p>\n\n<pre><code>var data='varx='+escape(X)+'&amp;vary='+escape(Y);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm using jQuery.ajax to extract form data from a page, and send it to my database (via another PHP page).</p>\n\n<p>The form information is collected by:</p>\n\n<pre><code>var X=$('#div1').val();\nvar Y=$('#div2').val();\n</code></pre>\n\n<p>This is used to build the POST string, i.e.</p>\n\n<pre><code>var data='varx='+X+'&amp;vary='+Y;\n</code></pre>\n\n<p>Obviously this is problematic if an ampersand character is used. What is the best method to escape the variables, particularly so that the user can safely use an ampersand (&amp;) ?</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1265745698,
            "question_id": 2231810,
            "score": 15,
            "tags": [
                "javascript",
                "jquery",
                "escaping"
            ],
            "title": "Escaping jQuery data being sent via POST"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can use nsITraceableChannel to intercept the response.</p>\n\n<p>You should modify the data which is available to what you need and pass it to the innerListener's OnDataAvailable</p>\n\n<p>Below links would help you understand this better.</p>\n\n<p><a href=\"http://www.softwareishard.com/blog/firebug/nsitraceablechannel-intercept-http-traffic/\">http://www.softwareishard.com/blog/firebug/nsitraceablechannel-intercept-http-traffic/</a></p>\n\n<p><a href=\"http://www.ashita.org/howto-xhr-listening-by-a-firefox-addon/\">http://www.ashita.org/howto-xhr-listening-by-a-firefox-addon/</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>The observer service just call your listeners. Firefox will receive the requests,call your listeners, and send responses. see Mozilla docs <a href=\"https://developer.mozilla.org/en/Creating_Sandboxed_HTTP_Connections#Creating_HTTP_POSTs\" rel=\"nofollow\">Creating HTTP POSTs</a>. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I alter the HTTP response body in a Firefox extension? I have setup an http-on-examine-response observer and an nsIStreamListener object with the code below. After I get the data, parse it, and alter it, how do I push the altered response back to the firefox browser? For example, let's say I go to Google.com with my extension enabled, the extension should intercept the response and change every occurence of \"google\" to \"goggle\". So when the page is loaded, the user will see \"goggle\" everywhere.</p>\n\n<pre><code>function TmSteroidsObserver()\n{\n  this.register();\n}\n\n\nTmSteroidsObserver.prototype = {\n  observe: function(subject, topic, data) {\n\n    if (topic == \"http-on-examine-response\") {\n\n    }\n    else if (topic == \"http-on-modify-request\") {\n       var channel = subject.QueryInterface(Components.interfaces.nsIChannel);\n       var listener = new StreamListener(channel);\n    }\n\n  },\n\n  register: function() {\n    var observerService = Components.classes[\"@mozilla.org/observer-service;1\"]\n                                .getService(Components.interfaces.nsIObserverService);\n    observerService.addObserver(listener, \"http-on-modify-request\", false);\n    observerService.addObserver(listener, \"http-on-examine-response\", false);\n  },\n\n  unregister: function() {\n    var observerService = Components.classes[\"@mozilla.org/observer-service;1\"]\n                            .getService(Components.interfaces.nsIObserverService);\n    observerService.removeObserver(this, \"http-on-modify-request\");\n    observerService.removeObserver(this, \"http-on-examine-response\");\n  },\n\n  QueryInterface : function(aIID) {\n    if (aIID.equals(Components.interfaces.nsISupports) ||\n        aIID.equals(Components.interfaces.nsIObserver))\n      return this;\n    throw Components.results.NS_NOINTERFACE;\n  }\n\n}\n\nfunction StreamListener(channel) {\n\n    channel.notificationCallbacks = listener;\n    channel.asyncOpen(listener, null);\n\n}\n\nStreamListener.prototype = {\n  mData: \"\",\n  mChannel: null,\n\n  // nsIStreamListener\n  onStartRequest: function (aRequest, aContext) {\n    this.mData = \"\";\n  },\n\n  onDataAvailable: function (aRequest, aContext, aStream, aSourceOffset, aLength) {\n    var scriptableInputStream = \n      Components.classes[\"@mozilla.org/scriptableinputstream;1\"]\n        .createInstance(Components.interfaces.nsIScriptableInputStream);\n    scriptableInputStream.init(aStream);\n\n    this.mData += scriptableInputStream.read(aLength);\n  },\n\n  onStopRequest: function (aRequest, aContext, aStatus) {\n    if (Components.isSuccessCode(aStatus)) {\n      // request was successfull\n      this.mCallbackFunc(this.mData);\n    } else {\n      // request failed\n      this.mCallbackFunc(null);\n    }\n\n    this.mChannel = null;\n  },\n\n  // nsIChannelEventSink\n  onChannelRedirect: function (aOldChannel, aNewChannel, aFlags) {\n    // if redirecting, store the new channel\n    this.mChannel = aNewChannel;\n  },\n\n  // nsIInterfaceRequestor\n  getInterface: function (aIID) {\n    try {\n      return this.QueryInterface(aIID);\n    } catch (e) {\n      throw Components.results.NS_NOINTERFACE;\n    }\n  },\n\n  // nsIProgressEventSink (not implementing will cause annoying exceptions)\n  onProgress : function (aRequest, aContext, aProgress, aProgressMax) { },\n  onStatus : function (aRequest, aContext, aStatus, aStatusArg) { },\n\n  // nsIHttpEventSink (not implementing will cause annoying exceptions)\n  onRedirect : function (aOldChannel, aNewChannel) { },\n\n  // we are faking an XPCOM interface, so we need to implement QI\n  QueryInterface : function(aIID) {\n    if (aIID.equals(Components.interfaces.nsISupports) ||\n        aIID.equals(Components.interfaces.nsIInterfaceRequestor) ||\n        aIID.equals(Components.interfaces.nsIChannelEventSink) || \n        aIID.equals(Components.interfaces.nsIProgressEventSink) ||\n        aIID.equals(Components.interfaces.nsIHttpEventSink) ||\n        aIID.equals(Components.interfaces.nsIStreamListener))\n      return this;\n\n    throw Components.results.NS_NOINTERFACE;\n  }\n};\n</code></pre>\n",
            "last_activity_date": 1382458535,
            "question_id": 1695440,
            "score": 15,
            "tags": [
                "javascript",
                "firefox-addon"
            ],
            "title": "Altering HTTP Responses in Firefox Extension"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Yes, you most definitely <em>can</em> use directional lights to cast shadows. You need to make sure you are not using <code>MeshBasicMaterial</code> as they don't support shadows. Use <code>MeshLambertMaterial</code> or <code>MeshPhongMaterial</code> instead.</p>\n\n<p>You need to enable shadows for the renderer with something along these lines:</p>\n\n<pre><code>renderer.shadowMapEnabled = true;\nrenderer.shadowMapSoft = true;\n\nrenderer.shadowCameraNear = 3;\nrenderer.shadowCameraFar = camera.far;\nrenderer.shadowCameraFov = 50;\n\nrenderer.shadowMapBias = 0.0039;\nrenderer.shadowMapDarkness = 0.5;\nrenderer.shadowMapWidth = 1024;\nrenderer.shadowMapHeight = 1024;\n</code></pre>\n\n<p>And then you must enable shadow casting and shadow receiving per object and per light so you would have</p>\n\n<pre><code>dirLight.castShadow = true;\nobject.castShadow = true;\notherObject.receiveShadow = true;\n</code></pre>\n\n<p>Then, <em>if</em> the light and objects are placed at appropriate positions. <code>dirLight</code> will cause the shadow of <code>object</code> to be cast against <code>otherObject</code>.</p>\n\n<p><strong>[EDIT]:</strong> Here is a <strong><a href=\"http://jsfiddle.net/Q4uqE/5\">working demo</a></strong> for anyone looking to do something similar.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>Be aware that shadow maps are scale dependent. I'm working on a scene where the unit distance represents one metre, and my objects are around 0.4 metres large. This is quite small by Three.js standards. If you have this situation too, then you can take a few important steps:</p>\n\n<ul>\n<li>Ensure the shadow camera's near/far planes are reasonable given your scene's dimensions.</li>\n<li>Ensure the shadow camera top/left/bottom/right values are not too large, otherwise each shadow 'pixel' may be so large that you don't even notice the shadow in your scene.</li>\n</ul>\n\n<p>Let's look at how to do this.</p>\n\n<h3>Debugging</h3>\n\n<p>Be sure to turn on the debug rendering per light:</p>\n\n<pre><code>light.shadowCameraVisible = true;\n</code></pre>\n\n<p>This will show you the volume over which the shadow is being calculated. Here is an example of what that might look like:</p>\n\n<p><img src=\"http://i.imgur.com/N0SZvRy.png\"></p>\n\n<p>Notice the near and far planes (with black crosses), and the top/left/bottom/right of the shadow camera (outer walls of the yellow box.) You want this box to be tight around whatever objects you are going to have in shadow &mdash; possibly even tighter than I'm showing here.</p>\n\n<h3>Code</h3>\n\n<p>Here are some snippets of code that might be useful.</p>\n\n<pre><code>var light = new THREE.DirectionalLight(0xffffff);\nlight.position.set(0, 2, 2);\nlight.target.position.set(0, 0, 0);\nlight.castShadow = true;\nlight.shadowDarkness = 0.5;\nlight.shadowCameraVisible = true; // only for debugging\n// these six values define the boundaries of the yellow box seen above\nlight.shadowCameraNear = 2;\nlight.shadowCameraFar = 5;\nlight.shadowCameraLeft = -0.5;\nlight.shadowCameraRight = 0.5;\nlight.shadowCameraTop = 0.5;\nlight.shadowCameraBottom = -0.5;\nscene.add(light);\n</code></pre>\n\n<p>Make sure some object(s) cast shadows:</p>\n\n<pre><code>object.castShadow = true;\n</code></pre>\n\n<p>Make sure some object(s) receive shadows:</p>\n\n<pre><code>object.receiveShadow = true;\n</code></pre>\n\n<p>Finally, configure some values on the <code>WebGLRenderer</code>:</p>\n\n<pre><code>renderer = new THREE.WebGLRenderer({ antialias: true });\nrenderer.setSize(canvasWidth, canvasHeight);\nrenderer.shadowMapEnabled = true;\nrenderer.shadowMapSoft = true;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 28
                }
            ],
            "body": "<p>Is it possible to create shadows from a <code>DirectionalLight</code>?</p>\n\n<p>If I use <code>SpotLight</code> then I see a shadow, but if I use <code>DirectionalLight</code> it doesn't work.</p>\n",
            "last_activity_date": 1391649304,
            "question_id": 10742149,
            "score": 14,
            "tags": [
                "javascript",
                "three.js"
            ],
            "title": "How to create directional light shadow in Three.JS?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p><code>foo</code> and <code>foo2_obj</code> They are the same. In both cases you have a function that creates a new object, references a variable in closure scope and returns that object.</p>\n\n<p>You have 4 things</p>\n\n<ul>\n<li>anonymous function that is a factory for \"foos\"</li>\n<li>object foo created from anonymous factory</li>\n<li>foo2 which is a name factory for \"foo2_objs\"</li>\n<li>object foo2_obj created from foo2 factory</li>\n</ul>\n\n<p>The exact difference between using <code>new</code> and returning function literals from a function is neglible if you don't touch <code>&lt;Function&gt;.prototype</code></p>\n\n<p>You probably want to compare</p>\n\n<pre><code>var foo2 = function(){\n    var bar = 0;\n    this.getBar = function(){\n           return bar;\n       };\n    this.addOne = function(){\n           bar++;\n       };\n    this.addRandom = function(rand){\n           bar += rand;\n       };\n};\n</code></pre>\n\n<p>To</p>\n\n<pre><code>var Foo = {\n  addOne: function () { this.bar++; },\n  addRandom: function (x) { this.bar+=x; }\n};\n\nvar foo3 = function () {\n  return Object.create(Foo, { bar: { value: 0 } });\n}\n</code></pre>\n\n<p>foo3 uses prototypical OO. this means you don't have to recreate those functions all the time.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The only difference is that <code>foo</code> will be a generic <code>Object</code>, whereas <code>foo2_obj</code> will identify as a <code>foo2</code> when checking its type (i.e. <code>foo2_obj.constructor == foo2</code> will be <code>true</code>, while the equivalent on <code>foo</code> is <code>foo.constructor == Object</code>).</p>\n\n<p>Of course, there's an important distinction between <code>foo</code> and <code>foo2</code> - <code>foo</code> is an object, while <code>foo2</code> is a function (intended for use as a constructor).  Thus, it is trivial to make as many instances of <code>foo2</code> (of which <code>foo2_obj</code> is one), while the idea of creating \"instances\" of <code>foo</code> doesn't really make sense - the best you could do are copies (which is more difficult than calling a constructor).</p>\n\n<p>Due to the copying/creating instances distinction, the second approach allows for real OO programming with prototype chains, while the first makes such things <em>much</em> more difficult (and ill-advised).</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>In the first one you can only create the object once, while with the second one you can create as many objects as you like. I.E. the first one is effectively a singleton.</p>\n\n<p>Note that closures are not ok for the second one. Every time you instantiate it you are creating the functions all over again and waste a ton of memory. The prototype object is intended to counter this, where you can create the functions once outside a function scope and no accidental closures are created.</p>\n\n<pre><code>function foo2(){\n    this._bar = 0;\n}\n\nfoo2.prototype = {\n\n    constructor: foo2,\n\n    getBar: function(){\n        return this._bar;\n    },\n\n    addOne: function(){\n        this._bar++;\n    },\n\n    addRandom:function(rand){\n        this._bar += rand;\n    }\n\n};\n</code></pre>\n\n<p>Then:</p>\n\n<pre><code>var a = new foo2, b = new foo2, c = new foo2;\n</code></pre>\n\n<p>Creates three instances which have their own <code>_bar</code> but share the same functionality.</p>\n\n<p><a href=\"http://jsperf.com/object-literal-vs-new-operate/4\" rel=\"nofollow\">jsperf</a></p>\n\n<p>You can \"compare\" all of this to PHP, some of the code won't even run but it's \"equivalent\" in principle:</p>\n\n<hr>\n\n<pre><code>var foo = (function(){\n    var bar = 0;\n    return {\n       getBar: function(){\n           return bar;\n       },\n       addOne: function(){\n           bar++;\n       },\n       addRandom: function(rand){\n           bar += rand;\n       }\n    }\n})();\n</code></pre>\n\n<p>is roughly \"equivalent\" to this in PHP:</p>\n\n<pre><code>$foo = new stdClass;\n\n$foo-&gt;bar = 0;\n\n$foo-&gt;getBar = function(){\n    return $this-&gt;bar;\n};\n\n$foo-&gt;addOne = function(){\n    $this-&gt;bar++;\n}\n\n$foo-&gt;addRandom = function($rand){\n    $this-&gt;bar += $rand;\n}\n</code></pre>\n\n<hr>\n\n<pre><code>var foo2 = function(){\n    var bar = 0;\n    this.getBar = function(){\n        return bar;\n    };\n    this.addOne = function(){\n        bar++;\n    };\n    this.addRandom = function(rand){\n        bar += rand;\n    }\n};\n</code></pre>\n\n<p>Is roughly \"equivalent\" to this in PHP:</p>\n\n<pre><code>Class foo2 {\n\n\n    public function __construct(){\n    $bar = 0;\n\n        $this-&gt;getBar = function(){\n            return $bar;\n        };\n        $this-&gt;addOne = function(){\n            $bar++;\n        };\n        $this-&gt;addRandom = function($rand){\n            $bar += rand;\n        };\n\n\n    }\n\n}\n</code></pre>\n\n<hr>\n\n<pre><code>function foo2(){\n    this._bar = 0;\n}\n\nfoo2.prototype = {\n\n    constructor: foo2,\n\n    getBar: function(){\n        return this._bar;\n    },\n\n    addOne: function(){\n        this._bar++;\n    },\n\n    addRandom:function(rand){\n        this._bar += rand;\n    }\n\n};\n</code></pre>\n\n<p>Is roughly \"equivalent\" to this in PHP:</p>\n\n<pre><code>Class foo2 {\n\n    public $_bar;\n\n    public function __construct(){\n        $this-&gt;_bar = 0;    \n    }\n\n    public function getBar(){\n        return $this-&gt;_bar;    \n    }\n\n    public function addOne(){\n        $this-&gt;_bar++\n    }\n\n    public function addRandom($rand){\n        $this-&gt;_bar += $rand;\n    }\n\n}\n</code></pre>\n\n<p>...and is the only one that is close to OOP in the three above examples</p>\n\n<hr>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>[1]first,but not important:efficiency</p>\n\n<pre><code>function Foo1() {\n    var bar = 0;\n    return {\n        getBar: function () {\n            return bar;\n        }\n    }\n}\nvar o = Foo1();\no.getBar();\n\n\nfunction Foo2() {\n    var bar = 0;\n    this.getBar = function () {\n        return bar;\n    }\n}\nvar o = new Foo2();\no.getBar();\n</code></pre>\n\n<p>which is the faster?,look <a href=\"http://jsperf.com/object-literal-vs-new-operate\" rel=\"nofollow\">object-literal-vs-new-operate</a></p>\n\n<p>[2]program pattern:the former has no program pattern,but the latter will benefit form <a href=\"http://javascript.crockford.com/prototypal.html\" rel=\"nofollow\">prototypal inheritance</a>.if now we want to add a method named \"logBar\",</p>\n\n<p>former:</p>\n\n<p>1:extend <strong>every</strong> Foo1 instance:</p>\n\n<pre><code>o.logBar = function () {\n    console.log(this.getBar());\n}\no.logBar();\n</code></pre>\n\n<p><strong>bad way!</strong></p>\n\n<p>2:find where Foo1 defined and add:</p>\n\n<pre><code>function Foo1() {\n    var bar = 0;\n    return {\n        getBar: function () {\n            return bar;\n        },\n        logBar:function () {\n            console.log(this.getBar());\n        }\n    }\n}\nvar o = Foo1();\no.logBar = o.logBar();\n</code></pre>\n\n<p>would you want to go back to do this when you want to add more method ervey time?</p>\n\n<p>latter:</p>\n\n<pre><code>Foo2.prototype.logBar = function () {\n    console.log(this.getBar());\n}\n\nvar o = Foo2();\no.logBar = o.logBar();\n</code></pre>\n\n<p>this would be work fine.</p>\n\n<p>[3] back to efficiency:\nin Foo1's way,it product <code>logBar</code> function instance ervey time when a Foo1 instance created.<a href=\"http://jsperf.com/object-literal-vs-new-operate\" rel=\"nofollow\">object-literal-vs-new-operate</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think in my personal view of this two types<br>\n1- Singleton<br>\n2- Object </p>\n\n<p>Let's we say we have one page having their javascript using Object (Second), and\nhaving many utils using singletons (First), and works fine.</p>\n\n<p>But one day we need a new page that call the first page via AJAX, this new page have their javascript using Object (Second) and have the same utils using singleton, but we add some new functions in the utils singletons.</p>\n\n<p>Turns out, the utils singletons in the new page are overriden for the loaded utils singletons in the first page, So when the new page execute some of those new function doesn't exist, generating errors ...</p>\n\n<p>I think this is my point, the singletons are overriden when you have this scenario, and find erros in cases like this are hard.. hard..., diferent from a object that have unique instances</p>\n\n<p>Cheers.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In simple terms if you are creating 10 instances of <code>foo</code> and <code>foo2</code>, the <code>getBar</code> function  of <code>foo</code> will exists 10 times in memory and that of <code>foo2</code> will be only once.</p>\n\n<p>Also, modern browsers like chrome with V8 compiler, it compiles the js to machine code... in that case <code>foo2</code> will get translated to a native class object and its like a 20 times faster (when you create say 1000 instances in a loop)</p>\n\n<hr>\n\n<p>I normally uses the simple object method when there is only once instance of that class/module is needed. The structure that I follow is,</p>\n\n<pre><code>var myInstance = function(){\n   var self = {};\n   self.bar = null;\n   self.gerBar = function(){\n      return self.bar\n   }\n   return self;\n}();\n</code></pre>\n\n<p>this is quite similar to the <code>foo</code> approach, but I find this structure more handy.</p>\n\n<hr>\n\n<p>One other difference (in practical use) that i normally encounter is when I have <code>callback</code> functions or <code>timeouts</code> inside the class,</p>\n\n<pre><code>var foo2 = function(){\n    this.doSomething = function(){\n        var temp = this;\n        $.someAsyncCall(function(){\n           // 'this' in current scope is the inline function itself, not the class instance\n           // so have to store the instance ref in a local var in outer scope and then use that to get the class instance\n           temp.callAfterAsyncCall();\n        });\n    };\n    this.callAfterAsyncCall = function(){\n    };\n};\n</code></pre>\n\n<p>as you can see the local temp variable is not pretty when you have a lot these cases.</p>\n\n<p>where in the other approach, you always the the <code>self</code> reference everywhere inside the module scope,</p>\n\n<pre><code>var myInstance = function(){\n   var self = {};\n   self.doSomething = function(){\n      $.someAsyncCall(function(){\n          self.callAfterAsyncCall();\n      });\n   }\n   self.callAfterAsyncCall = function(){\n   };\n   return self;\n}();\n</code></pre>\n\n<p>I not sure if its important for you, but just thought worth mentioning.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The main difference is actually that <code>foo</code> <strong>is an object</strong>, whereas <code>foo2</code> is a function.</p>\n\n<p>That means that <strong>you'll not be able</strong> to create another object like <code>foo</code> that is not actually <code>foo</code> itself, except if you copy/paste its code.</p>\n\n<p>On the other hand, you can create another <code>foo2</code> object and manipulate it while using <code>foo2_obj</code> for another purpose.</p>\n\n<p>To make short, <code>foo</code> is an <strong>instance</strong> while <code>foo2</code> <strong>can bee seen as a class</strong> (even if it's just a function constructing an object).</p>\n\n<p>It depends on what you want to do in your program, but I'd surely recommend to use the 2nd form which is allowing to reuse your code by creating other instances.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Let us say I have the following:</p>\n\n<pre><code>var foo = (function(){\n    var bar = 0;\n    return {\n       getBar: function(){\n           return bar;\n       },\n       addOne: function(){\n           bar++;\n       },\n       addRandom: function(rand){\n           bar += rand;\n       }\n    }\n})();\n</code></pre>\n\n<p>And I have the following:</p>\n\n<pre><code>var foo2 = function(){\n    var bar = 0;\n    this.getBar = function(){\n           return bar;\n       };\n    this.addOne = function(){\n           bar++;\n       };\n    this.addRandom = function(rand){\n           bar += rand;\n       }\n};\n</code></pre>\n\n<p>Is the only difference in executing the functions a <code>new</code>?</p>\n\n<pre><code>alert(foo.getBar()); //0\nfoo.addOne();\nfoo.addRandom(32);\nalert(foo.getBar()); //33\n\nvar foo2_obj = new foo2;\nalert(foo2_obj.getBar());//0\nfoo2_obj.addOne();\nfoo2_obj.addRandom(32);\nalert(foo2_obj.getBar());//33\n</code></pre>\n\n<p>They both out put the exact same thing.</p>\n\n<p>So what is the difference in the long run?</p>\n\n<p>What can one do that the other cannot?</p>\n\n<p>Fiddle Demo of the above: <a href=\"http://jsfiddle.net/maniator/YtBpe/\">http://jsfiddle.net/maniator/YtBpe/</a></p>\n",
            "last_activity_date": 1387190222,
            "question_id": 8231730,
            "score": 14,
            "tags": [
                "javascript",
                "object",
                "closures"
            ],
            "title": "Closures in auto executing functions vs objects"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Here is the correct solution\n<a href=\"http://jsfiddle.net/samccone/kqRne/\" rel=\"nofollow\">http://jsfiddle.net/samccone/kqRne/</a><br>\nbrief look at the code:</p>\n\n<pre><code>    $(document).ready(function(){\n\n    $('div').bind('scroll',chk_scroll);\n});\n\n\nfunction chk_scroll(e)\n{\n    var elem = $(e.currentTarget);\n    if (elem[0].scrollHeight - elem.scrollTop() == elem.outerHeight()) \n    {\n        console.log(\"bottom\");\n    }\n\n}\n</code></pre>\n\n<p>see this for more info\n<a href=\"http://www.yelotofu.com/2008/10/jquery-how-to-tell-if-youre-scroll-to-bottom/\" rel=\"nofollow\">http://www.yelotofu.com/2008/10/jquery-how-to-tell-if-youre-scroll-to-bottom/</a></p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>You can do that by</p>\n\n<pre><code>(scrollHeight - scrollTop()) == outerHeight()\n</code></pre>\n\n<p>Apply required jQuery syntax, of course...</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here is the code:</p>\n\n<pre><code>$(\"#div_Id\").scroll(function (e) {\n        e.preventDefault();\n        var elem = $(this);            \n       if (elem.scrollTop() &gt; 0 &amp;&amp; \n            (elem[0].scrollHeight - elem.scrollTop() == elem.outerHeight()))     \n        {alert(\"At the bottom\");}\n</code></pre>\n\n<p>});</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=766937\" rel=\"nofollow\">Since 2012</a> Firefox contains the <code>scrollTopMax</code> property. If scrollTop === scrollTopMax you're at the bottom of the element.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a div with overflow:scroll.</p>\n\n<p>I want to know if it's currently scrolled all the way down. How, using JQuery?</p>\n\n<p>This one doesn't work: <a href=\"http://stackoverflow.com/questions/876115/how-can-i-determine-if-a-div-is-scrolled-to-the-bottom\">How can I determine if a div is scrolled to the bottom?</a></p>\n",
            "last_activity_date": 1422012484,
            "question_id": 5828275,
            "score": 14,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How can I use JQuery to check if a div is scrolled all the way to the bottom?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>This is what Firebug's <code>isArray</code> method does: (from the <a href=\"http://fbug.googlecode.com/svn/lite/branches/firebug1.4/build/firebug-lite-debug.js\">Firebug source</a>)</p>\n\n<pre><code>if (!obj)\n    return false;\nelse if (isIE &amp;&amp; !isFunction(obj) &amp;&amp; typeof obj == \"object\" &amp;&amp; isFinite(obj.length) &amp;&amp; obj.nodeType != 8)\n    return true;\nelse if (isFinite(obj.length) &amp;&amp; isFunction(obj.splice))\n    return true;\nelse if (isFinite(obj.length) &amp;&amp; isFunction(obj.callee)) // arguments\n    return true;\nelse if (instanceOf(obj, \"HTMLCollection\"))\n    return true;\nelse if (instanceOf(obj, \"NodeList\"))\n    return true;\nelse\n    return false;\n</code></pre>\n\n<p>Of course, none of these checks ensures that the object is a true JavaScript array, but they do a reasonable job of guessing whether an object is a pseudo-array, which in turn gives you a convenient array-like representation for debugging.</p>\n\n<p>Chrome may or may not use these same checks, and the new Web Console in Firefox 4 doesn't recognize anything other than true arrays as arrays.</p>\n",
                    "is_accepted": true,
                    "score": 18
                }
            ],
            "body": "<p>When I am developing in jQuery, I frequently find myself typing selectors into the Chrome/Firebug console and seeing what they give me.  They are always nicely formatted as if they were arrays:</p>\n\n<p><img src=\"http://i.stack.imgur.com/uUbg0.png\" alt=\"Chrome's console shows a jQuery selection as an array\"></p>\n\n<p>I am trying to work out what it is that makes the console treat an object as an array.  For instance, the following custom object is not treated as an array:</p>\n\n<pre><code>function ElementWrapper(id) {\n    this[0] = document.getElementById(id);\n}\n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/2BuuO.png\" alt=\"Chrome's console shows the object as a normal object\"></p>\n\n<p>If I then add a <code>length</code> property and a <code>splice</code> method, it magically works as an array, with any properties with integer keys treated as members of the arrays:</p>\n\n<pre><code>function ElementWrapper(id) {\n    this[0] = document.getElementById(id);\n    this.length = 1;\n    this.splice = Array.prototype.splice;\n}\n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/9Cj1m.png\" alt=\"Chrome's console shows the object as if it was an array\"></p>\n\n<p>So essentially my question is: <strong>what determines whether the console displays an object as an array</strong>?  Is there any rationale to it, or is it a completely arbitrary \"if an object has these properties, it must be an array?\" If so, what are the decisive properties?</p>\n",
            "last_activity_date": 1297290120,
            "question_id": 4951054,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "google-chrome",
                "console",
                "firebug"
            ],
            "title": "What makes Firebug/Chrome console treat a custom object as an array?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>I do not think there is a clean HTML + CSS way to do this. Javascript is an alternative, for example the <a href=\"http://p.sohei.org/stuff/jquery/tablehover/demo/demo.html\" rel=\"nofollow\">jQuery tableHover plugin</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Only works for cells or rows, sorry. \ne.g.</p>\n\n<pre><code>td {\n  background-color: blue;\n}\n\ntd:hover {\n  background-color: red;\n}\n</code></pre>\n\n<p>There are JavaScript solutions available but nothing in CSS right now will do what you want because of the limitations of selectors.</p>\n\n<pre><code>td  /* all cells */\n{ \n  background-color: blue;\n}\n\ntr /* all rows */\n{\n  background-color: pink;\n}\n\n/* nothing for all columns */\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>You can try experimenting with <code>&lt;col&gt;</code> tag and <code>col:hover { background: red; }</code> style, but I doubt that it will work. Anyway, this definitely won't work in older versions of MSIE, so you will need javascript in order to do this.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I had a similar problem where I had too many columns to display on screen.  VIA PHP, I turned each row into a 1 x column table.  So, n rows = n tables.  I then nested each table within a master table.  Doing so allowed me to call td:hover from my stylesheet.  Since each td held a table, it has the same effect of highlighting the a column when I mouse over it. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can highlight the whole row with pure CSS using:</p>\n\n<pre><code>tr td {background-color: red;}\ntr:hover td {background-color: blue;}\n</code></pre>\n\n<p>Achieving this effect for a column is impossible with this approach, as cell (td) is a child of a row (tr), not a column.</p>\n\n<p>To make it work in IE7+, make sure to add doctype declaration (what you should always do anyway:)).</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>This can be done using CSS with no Javascript.</p>\n\n<p>I used the <code>::after</code> pseudo-element to do the highlighting. <code>z-index</code> keeps the highlighting below the <code>&lt;tds&gt;</code> in case you need to handle click events. Using a massive height allows it to cover the whole column. <code>overflow: hidden</code> on the <code>&lt;table&gt;</code> hides the highlight overflow.</p>\n\n<p>Demo: <a href=\"http://jsfiddle.net/ThinkingStiff/2XeYe/\" rel=\"nofollow\">http://jsfiddle.net/ThinkingStiff/2XeYe/</a></p>\n\n<p>Output:</p>\n\n<p><img src=\"http://i.stack.imgur.com/wJnWV.png\" alt=\"enter image description here\"></p>\n\n<p>CSS:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>table {\n    border-spacing: 0;\n    border-collapse: collapse;\n    overflow: hidden;\n    z-index: 1;\n}\n\ntd, th {\n    cursor: pointer;\n    padding: 10px;\n    position: relative;\n}\n\ntd:hover::after { \n    background-color: #ffa;\n    content: '\\00a0';  \n    height: 10000px;    \n    left: 0;\n    position: absolute;  \n    top: -5000px;\n    width: 100%;\n    z-index: -1;        \n}\n</code></pre>\n\n<p>HTML:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;table&gt;\n    &lt;tr&gt;\n        &lt;th&gt;&lt;/th&gt;&lt;th&gt;50kg&lt;/th&gt;&lt;th&gt;55kg&lt;/th&gt;&lt;th&gt;60kg&lt;/th&gt;&lt;th&gt;65kg&lt;/th&gt;&lt;th&gt;70kg&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;th&gt;160cm&lt;/th&gt;&lt;td&gt;20&lt;/td&gt;&lt;td&gt;21&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;td&gt;25&lt;/td&gt;&lt;td&gt;27&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;th&gt;165cm&lt;/th&gt;&lt;td&gt;18&lt;/td&gt;&lt;td&gt;20&lt;/td&gt;&lt;td&gt;22&lt;/td&gt;&lt;td&gt;24&lt;/td&gt;&lt;td&gt;26&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;th&gt;170cm&lt;/th&gt;&lt;td&gt;17&lt;/td&gt;&lt;td&gt;19&lt;/td&gt;&lt;td&gt;21&lt;/td&gt;&lt;td&gt;23&lt;/td&gt;&lt;td&gt;25&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;th&gt;175cm&lt;/th&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;18&lt;/td&gt;&lt;td&gt;20&lt;/td&gt;&lt;td&gt;22&lt;/td&gt;&lt;td&gt;24&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>I have a more simple solution (Live example: <a href=\"http://jsfiddle.net/q3HHt/1/\">http://jsfiddle.net/q3HHt/1/</a>)</p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;table&gt;\n    &lt;tr&gt;\n        &lt;td&gt;&amp;nbsp;&lt;/td&gt;\n        &lt;td&gt;&amp;nbsp;&lt;/td&gt;\n        &lt;td&gt;&amp;nbsp;&lt;/td&gt;\n        &lt;td&gt;&amp;nbsp;&lt;/td&gt;\n        &lt;td&gt;&amp;nbsp;&lt;/td&gt;\n        &lt;td&gt;&amp;nbsp;&lt;/td&gt;\n        &lt;td&gt;&amp;nbsp;&lt;/td&gt;\n  &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;&amp;nbsp;&lt;/td&gt;\n        &lt;td&gt;&amp;nbsp;&lt;/td&gt;\n        &lt;td&gt;&amp;nbsp;&lt;/td&gt;\n        &lt;td&gt;&amp;nbsp;&lt;/td&gt;\n        &lt;td&gt;&amp;nbsp;&lt;/td&gt;\n        &lt;td&gt;&amp;nbsp;&lt;/td&gt;\n        &lt;td&gt;&amp;nbsp;&lt;/td&gt;\n  &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p><strong>CSS:</strong></p>\n\n<pre><code>table, td {\n    border: 1px solid black;\n}\n\ntd {\n    width: 40px;  \n    height: 40px;\n}\n\n.highlighted {\n    background-color: #348A75;\n}\n</code></pre>\n\n<p><strong>jQuery:</strong></p>\n\n<pre><code>$('td').hover(function() {\n    var t = parseInt($(this).index()) + 1;\n    $('td:nth-child(' + t + ')').addClass('highlighted');\n},\nfunction() {\n    var t = parseInt($(this).index()) + 1;\n    $('td:nth-child(' + t + ')').removeClass('highlighted');\n});\n</code></pre>\n\n<p>Live example: <a href=\"http://jsfiddle.net/q3HHt/1/\">http://jsfiddle.net/q3HHt/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Just to extends Muhammads answer (<a href=\"http://stackoverflow.com/a/11828637/1316280\">http://stackoverflow.com/a/11828637/1316280</a>), if you want to highlight the cols only in the actual table, change the jquery-code-part to:\n this jsfiddle is specific for only the actual table</p>\n\n<p><strong>jQuery</strong></p>\n\n<pre><code>$('td').hover(function() {\n    var t = parseInt($(this).index()) + 1;\n    $(this).parents('table').find('td:nth-child(' + t + ')').addClass('highlighted');\n},\nfunction() {\n    var t = parseInt($(this).index()) + 1;\n    $(this).parents('table').find('td:nth-child(' + t + ')').removeClass('highlighted');\n});\n</code></pre>\n\n<p>jsFiddle: <a href=\"http://jsfiddle.net/q3HHt/123/\" rel=\"nofollow\">http://jsfiddle.net/q3HHt/123/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How can I change the background column of an html table <strong>column</strong> when the mouse is over it?</p>\n\n<p>Preferably with css only.</p>\n",
            "last_activity_date": 1424303569,
            "question_id": 1553571,
            "score": 14,
            "tags": [
                "javascript",
                "html",
                "css",
                "table"
            ],
            "title": "html: hover table column"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I believe what you mean is selecting text (e.g. dragging the mouse across to highlight). If so, this will cancel the selection action in IE and Mozilla:</p>\n\n<pre><code>window.onload = function() {\n  if(document.all) {\n      document.onselectstart = handleSelectAttempt;\n  }\n  document.onmousedown = handleSelectAttempt;\n}\n\nfunction handleSelectAttempt(e) {\n    var sender = e &amp;&amp; e.target || window.event.srcElement;\n    if(isInForm(sender)) {\n        if (window.event) {\n            event.returnValue = false;\n        }\n        return false;\n    }\n    if (window.event) {\n        event.returnValue = true;\n    }\n    return true;\n}\n\nfunction isInForm = function(element) {\n    while (element.parentNode) {\n        if (element.nodeName.ToUpperCase() == 'INPUT'\n            || element.nodeName.ToUpperCase() == 'TEXTAREA') {\n            return true;\n        }\n        if (!searchFor.parentNode) {\n            return false;\n        }\n        searchFor = searchFor.parentNode;\n    }\n    return false;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I think you're looking for the :focus pseudo class. Try this:</p>\n\n<pre><code>input:focus {\n  background-color: #f0f;\n}\n</code></pre>\n\n<p>It will give your input a pretty purple/pink color when selected.</p>\n\n<p>I'm not sure which properties you have to (un)set, but I think you can find out yourself using trial and error.</p>\n\n<p>Also note that the highlighting or absence thereof is browser specific!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Do you mean highlighting of text when you drag your mouse over it?</p>\n\n<p>Best way to do this would be using a CSS3 property called ::selection, however being CSS3 it isn't well-supported yet. Go ahead and look that up, otherwise maybe there's a way to do it with Javascript.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If your ultimate goal is to make copy and paste of text more difficult, Javascript and CSS are not the right technology because you cannot disable the browser's view-source function.</p>\n\n<p>Some other ideas (none of them ideal):</p>\n\n<ul>\n<li>a java applet (you control both display and retrieval of text)</li>\n<li>same in a different browser plugin (flash, silverlight, etc.)</li>\n<li>server-side created images (poor performance)</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>U can use the css pseudo class selector (::selection and ::-moz-selection for firefox).\nExample</p>\n\n<pre><code>    ::-moz-selection{\n    background-color:Transparent;\n    color:#000;\n    }\n\n    ::selection {\n    background-color:Transparent;\n    color:#000;\n    }\n.myclass::-moz-selection,\n.myclass::selection { ... }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>The CSS3 solution:</p>\n\n<pre><code>user-select: none;\n-moz-user-select: none;\n</code></pre>\n\n<p>There is also a webkit prefix for the user-select, but it makes some form fields impossible to focus (could be a temporary bug), so you could go with the following pseudo-class for webkit instead:</p>\n\n<pre><code>element::selection\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I need to disable highlighting on my web app. I have a good reason for doing this and know that this is generally a bad idea. But I need to do it anyway. It doesn't matter if I need to use CSS or JS to do it. What I'm mainly going for is the removal of the blue color given to highlighted elements.</p>\n",
            "last_activity_date": 1333547606,
            "question_id": 1224433,
            "score": 14,
            "tags": [
                "javascript",
                "html",
                "css",
                "highlight"
            ],
            "title": "How can I disable highlighting in html or JS?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>the thing seems to be that the tgas will be deleted right after the box is closed. Therefore the click event cannot be fired.</p>\n\n<p>I've changed a few things + the event that will be listened on. It's now a mousedown...</p>\n\n<p>See here.\n<a href=\"http://goo.gl/IAw8B\" rel=\"nofollow\">http://goo.gl/IAw8B</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just add open listener and set up another 'mouseup' listener for your i tag:</p>\n\n<pre><code>$(\"#select\").on('open', function() { \n    $('.select2-results i').on('mouseup', function() { \n       alert('aaa');\n    }); \n});\n</code></pre>\n\n<p>Here is the link for my version: <a href=\"http://jsfiddle.net/EW8t7/\" rel=\"nofollow\">http://jsfiddle.net/EW8t7/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Because Select2 lib prevent any click events on popover list you can't bind events to <code>.info</code> directly. But you can redefine <code>onSelect</code> method and place there any code you want.</p>\n\n<p>See example: <a href=\"http://jsfiddle.net/f8q2by55/\" rel=\"nofollow\">http://jsfiddle.net/f8q2by55/</a></p>\n\n<p>Update for multiple selects: <a href=\"http://jsfiddle.net/6jaodjzq/\" rel=\"nofollow\">http://jsfiddle.net/6jaodjzq/</a></p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>This is similar in concept to netme's but the select2 event is wrong(maybe version difference), and you need to use stopPropagation to prevent item from being selected:</p>\n\n<p><a href=\"http://jsfiddle.net/ZhfMg/\">http://jsfiddle.net/ZhfMg/</a>   </p>\n\n<pre><code>$('#mySelect2').on('select2-open', function() { \n    $('.select2-results .info').on('mouseup', function(e) { \n        e.stopPropagation();\n        console.log('clicked');\n    }); \n});\n</code></pre>\n\n<p>If used with x-editable.  What this does is when the x-editable goes into edit mode(shown event), that's when a select2 exists and you can wire to it's open function.</p>\n\n<pre><code>$('#myXEditable').on('shown', function () {\n    $(this).data('editable').input.$input.on('select2-open', function() { \n        $('.select2-results .info').on('mouseup', function(e) { \n            e.stopPropagation();\n            console.log('clicked');\n        }); \n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I think Select2's handling of the mouseup event prevents the <code>.info</code> element from getting a click event. Having the <code>.info</code> element capture the mouseup event and prevent it from propagating seems to fix that.</p>\n\n<pre><code>function format(state, container) {\n    if (!state.id) return state.text; // optgroup\n    container.append(state.text);\n    $('&lt;i class=\"info\"&gt;link&lt;/i&gt;')\n        .appendTo(container)\n        .mouseup(function(e) {\n            e.stopPropagation();            \n        })\n        .click(function(e) {\n            e.preventDefault();\n            alert('CLICK');\n        });\n}\n</code></pre>\n\n<p>This can also be done to support a link in the selected item, but there it is the mousedown event that needs to be captured.</p>\n\n<p><a href=\"http://jsfiddle.net/sc147a1L/4/\" rel=\"nofollow\">jsfiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm looking for a way to attach a click-event to a select2-result-item.\nI've gone ahead and formatted both result and selection via</p>\n\n<pre><code>function format(state) {\n    if (!state.id) return state.text; // optgroup\n    return state.text + \" &lt;i class='info'&gt;link&lt;/i&gt;\";\n}\n</code></pre>\n\n<p>to add an \"info\"-icon\nI'm now trying to attach a simple click-event to the .info-element but can't get this to work:</p>\n\n<pre><code>$('.info').on('click', function(event){\n    event.preventDefault();\n    alert(\"CLICK\");\n    $('#log').text( \"clicked\" );\n});\n</code></pre>\n\n<p>Any help?\nAnyone with a similar problem?\nIs this possible at all?</p>\n\n<p>I prepared a jsFiddle at: <a href=\"http://jsfiddle.net/s2dqh/3/\">http://jsfiddle.net/s2dqh/3/</a></p>\n",
            "last_activity_date": 1425049201,
            "question_id": 15636302,
            "score": 13,
            "tags": [
                "javascript",
                "jquery-select2"
            ],
            "title": "Attach click-event to element in .select2-result"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><strong>UPDATE</strong></p>\n\n<p>I also tried this, but to no avail:</p>\n\n<pre><code>$(document).ready(function() {\n$('body :not(.wr-dropdown)').bind(\"click\", function(e) {\n    $('.test').focus();\n})\n$('.wr-dropdown').on('change', function(e) {\n    if ($(\".wr-dropdow option[value='/search']\")) {\n        setTimeout(function(e) {\n            $('body :not(.wr-dropdown)').trigger(\"click\");\n        },3000)         \n    } \n}); \n</code></pre>\n\n<p>});</p>\n\n<p>I am confused as to why you say this isn't working because your JSFiddle is working just fine, but here is my suggestion anyway...</p>\n\n<p>Try this line of code in your SetTimeOut function on your click event:</p>\n\n<pre><code>document.myInput.focus();\n</code></pre>\n\n<p>myInput correlates to the name attribute of the input tag. </p>\n\n<pre><code>&lt;input name=\"myInput\"&gt;\n</code></pre>\n\n<p>And use this code to blur the field:</p>\n\n<pre><code>document.activeElement.blur();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Actually, guys, there is a way. I struggled mightily to figure this out for <a href=\"http://forstartersapp.com\">http://forstartersapp.com</a> (try it on an iPhone or iPad).</p>\n\n<p>Basically, Safari on touchscreen devices is stingy when it comes to <code>focus()</code>ing textboxes. Even some desktop browsers do better if you do <code>click().focus()</code>. But the designers of Safari on touchscreen devices realized it's annoying to users when the keyboard keeps coming up, so they made the focus appear only on the following conditions:</p>\n\n<p>1) The user clicked somewhere and <code>focus()</code> was called while executing the click event. If you are doing an AJAX call, then you <em>must</em> do it synchronously, such as with the deprecated (but still available) <code>$.ajax({async:false})</code> option in jQuery.</p>\n\n<p>2) Furthermore -- and this one kept me busy for a while -- <code>focus()</code> still doesn't seem to work if some other textbox is focused at the time. I had a \"Go\" button which did the AJAX, so I tried blurring the textbox on the <code>touchstart</code> event of the Go button, but that just made the keyboard disappear and moved the viewport before I had a chance to complete the click on the Go button. Finally I tried blurring the textbox on the <code>touchend</code> event of the Go button, and this worked like a charm!</p>\n\n<p>When you put #1 and #2 together, you get a magical result that will set your login forms apart from all the crappy web login forms, by placing the focus in your password fields, and make them feel more native. Enjoy! :)</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>I managed to make it work with the following code:</p>\n\n<pre><code>event.preventDefault();\ntimeout(function () {\n    $inputToFocus.focus();\n}, 500);\n</code></pre>\n\n<p>I'm using AngularJS so I have created a directive which solved my problem:</p>\n\n<p><strong>Directive:</strong></p>\n\n<pre><code>angular.module('directivesModule').directive('focusOnClear', [\n    '$timeout',\n    function (timeout) {\n        return {\n            restrict: 'A',\n            link: function (scope, element, attrs) {\n                var id = attrs.focusOnClear;\n                var $inputSearchElement = $(element).parent().find('#' + id);\n                element.on('click', function (event) {\n                    event.preventDefault();\n                    timeout(function () {\n                        $inputSearchElement.focus();\n                    }, 500);\n                });\n            }\n        };\n    }\n]);\n</code></pre>\n\n<p><strong>How to use the directive:</strong></p>\n\n<pre><code>&lt;div&gt;\n    &lt;input type=\"search\" id=\"search\"&gt;\n    &lt;i class=\"icon-clear\" ng-click=\"clearSearchTerm()\" focus-on-clear=\"search\"&gt;&lt;/i&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>It looks like you are using jQuery, so I don't know if the directive is any help.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I can't seem to find a solution for this problem.</p>\n\n<p>I have a simple input field like this.</p>\n\n<pre><code>&lt;div class=\"search\"&gt;\n   &lt;input type=\"text\" value=\"y u no work\"/&gt;\n&lt;/div&gt;\u200b\n</code></pre>\n\n<p>And I'm trying to <code>focus()</code> it inside a function.\nSo inside of a random function (doesn't matter what function it is) I have this line \u2026</p>\n\n<pre><code>$('.search').find('input').focus();\n</code></pre>\n\n<p>This works just fine on every Desktop whatsoever.</p>\n\n<p>However it doesn't work on my iPhone. The field is not getting focused and the the Keyboard is not shown on my iPhone.</p>\n\n<p>For testing purposes and to show you guys the problem I did a quick sample:</p>\n\n<pre><code>$('#some-test-element').click(function() {\n  $('.search').find('input').focus(); // works well on my iPhone - Keyboard slides in\n});\n\nsetTimeout(function() {\n  //alert('test'); //works\n  $('.search').find('input').focus(); // doesn't work on my Iphone - works on Desktop\n}, 5000);\u200b\n</code></pre>\n\n<p>Any idea why the <code>focus()</code> wouldn't work with the timeout function on my iPhone.</p>\n\n<p>To see the live example test this fiddle on your iPhone. <a href=\"http://jsfiddle.net/Hc4sT/\">http://jsfiddle.net/Hc4sT/</a></p>\n\n<p><strong>Update:</strong></p>\n\n<p>I created the exact same case as I'm currently facing in my current project.</p>\n\n<p>I have a select-box that should \u2014 when \"changed\" \u2014 set the focus to the input field and slide-in the kexboard on the iphone or other mobile devices. I found out that the focus() is set correctly but the keyboard doesn't show up. I need the keyboard to show up.</p>\n\n<p>I uploaded the testfiles right here <a href=\"http://cl.ly/1d210x1W3Y3W\">http://cl.ly/1d210x1W3Y3W</a> \u2026 If you test this on the iphone you can see that the keyboard doesn't slide-in.</p>\n",
            "last_activity_date": 1416514670,
            "question_id": 12204571,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "iphone",
                "input",
                "focus"
            ],
            "title": "Mobile Safari: Javascript focus() method on inputfield only works with click?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><em>change</em> event is fired once the user blurs from input not on every single character inputed.</p>\n\n<p>If you need it to be called every time something is changed (even if focus is still in that input field) you would have to rely on combination of <em>keyup</em> and bunch of events to keep track of pasting/cuting using mouse only.</p>\n\n<p>P.S.\nI hope you're aware that your approach to detecting changes isn't the best one? If user input some text, leaves the field and then reverts the changes the script would still alert him about modified text.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>you should register events for not only inputs but also textareas, if you mean textarea with text box. You can use keyup for isChange, so that you don't wait for user to blur from this area.</p>\n\n<pre><code>$(\"input[type='text'], textarea\").keyup(function () {\n    isChange = true;\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>This is what i am using, Put all this code in a seperate js file and load it in your header file so you will not need to copy this again and again:</strong></p>\n\n<pre><code>var unsaved = false;\n\n$(\":input\").change(function(){ //trigers change in all input fields including text type\n    unsaved = true;\n});\n\nfunction unloadPage(){ \n    if(unsaved){\n        return \"You have unsaved changes on this page. Do you want to leave this page and discard your changes or stay on this page?\";\n    }\n}\n\nwindow.onbeforeunload = unloadPage;\n</code></pre>\n\n<p><strong>EDIT for $ not found:</strong></p>\n\n<p>This error can only be caused by one of three things:</p>\n\n<blockquote>\n  <ol>\n  <li>Your JavaScript file is not being properly loaded into your page</li>\n  <li>You have a botched version of jQuery. This could happen because someone edited the core file, or a plugin may have overwritten the $\n  variable.</li>\n  <li>You have JavaScript running before the page is fully loaded, and as such, before jQuery is fully loaded.</li>\n  </ol>\n</blockquote>\n\n<p>Make sure all js code is being placed in this:</p>\n\n<pre><code>$(document).ready(function () {\n  //place above code here\n});\n</code></pre>\n\n<p><strong>Edit for a Save/Send/Submit Button Exception</strong></p>\n\n<pre><code>$('#save').click(function() {\n    unsaved = false;\n});\n</code></pre>\n\n<p><strong>Edit to work with dynamic inputs</strong></p>\n\n<pre><code>// Another way to bind the event\n$(window).bind('beforeunload', function() {\n    if(unsaved){\n        return \"You have unsaved changes on this page. Do you want to leave this page and discard your changes or stay on this page?\";\n    }\n});\n\n// Monitor dynamic inputs\n$(document).on('change', ':input', function(){ //triggers change in all input fields including text type\n    unsaved = true;\n});\n</code></pre>\n\n<p>Add the above code in your alert_unsaved_changes.js file.</p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Why not simply bind the event to the <code>change</code> callback?</p>\n\n<pre><code>$(\":input\").change(function()\n{\n    $(window).unbind('unload').bind('unload',function()\n    {\n        alert('unsaved changes on the page');\n    });\n});\n</code></pre>\n\n<p>As an added bonus, you can use <code>confirm</code> and select the last element that triggered the change event:</p>\n\n<pre><code>$(\":input\").change(function()\n{\n    $(window).unbind('unload').bind('unload',(function(elem)\n    {//elem holds reference to changed element\n        return function(e)\n        {//get the event object:\n            e = e || window.event;\n            if (confirm('unsaved changes on the page\\nDo you wish to save them first?'))\n            {\n                elem.focus();//select element\n                return false;//in jQuery this stops the event from completeing\n            }\n        }\n    }($(this)));//passed elem here, I passed it as a jQ object, so elem.focus() works\n    //pass it as &lt;this&gt;, then you'll have to do $(elem).focus(); or write pure JS\n});\n</code></pre>\n\n<p>If you have some save button, make sure that that unbinds the unload event, though:</p>\n\n<pre><code>$('#save').click(function()\n{\n    $(window).unbind('unload');\n    //rest of your code here\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I want to write Jquery code in master file, so that if there if user changes page and there is any unsaved changes user should get alert. \nI got one answer from this: <a href=\"http://stackoverflow.com/questions/155739/detecting-unsaved-changes-using-javascript\">link</a></p>\n\n<p>However in most solution I will have to write code on all pages. I want it to write only at one place so that everybody dont have to worry to write it in their modules. My code is like:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var isChange;\n    $(document).ready(function () {\n        $(\"input[type='text']\").change(function () {\n            isChange = true;\n        })\n    });\n    $(window).unload(function () {\n        if (isChange) {\n            alert('Handler for .unload() called.');\n        }\n    });\n\n&lt;/script&gt;\n</code></pre>\n\n<p>But everytime i make changes in text boxes .change() event is not firing.</p>\n\n<p>What can be wrong in the code?</p>\n\n<p>EDIT:\nI changed .change() to .click and it is fired. i am using jquery 1.4.1..is it because of jquery version that change() is not working?</p>\n",
            "last_activity_date": 1407858525,
            "question_id": 11844256,
            "score": 13,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Alert for unsaved changes in form"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>it does not look like a scope issue. getDirections is in the same scope. </p>\n\n<p>this is an egg vs chicken case. ultimately - your string of html is not in the DOM so you cannot add events to it just yet or reference elements from it. the info window is slightly asynchronous so you need to make sure the content div is attached. Or, you need to use Event delegation.</p>\n\n<p>the event pattern google provides comes in handy to attach the submit handler on the div's <code>domready</code> like so:</p>\n\n<pre><code>var infoWindowContent = [\n    \"&lt;b&gt;Get Directions From...&lt;/b&gt;&lt;br /&gt;\",\n    \"&lt;form id='map-form'&gt;\",\n    \"Address/Postcode: &lt;input id='map-from-address' type='text' /&gt;\",\n    \"&lt;input type='submit' id='map-go' value='Go' /&gt;\",\n    \"&lt;/form&gt;\"\n].join(\"\");\n\n\nvar info = new google.maps.InfoWindow({\n    content: infoWindowContent\n});\n\ngoogle.maps.event.addListener(info, 'domready', function() {\n    document.id(\"map-form\").addEvent(\"submit\", function(e) {\n        e.stop();\n        console.log(\"hi!\");\n    });\n});\n\ninfo.open(map, marker);\n</code></pre>\n\n<p>tested and working. alternatively, you can attach the content sting into the dom as child of some hidden div, add the event and then pass on the div as the content as it supports being pointed to a node. <a href=\"http://code.google.com/intl/sv-SE/apis/maps/documentation/javascript/reference.html#InfoWindow\" rel=\"nofollow\">http://code.google.com/intl/sv-SE/apis/maps/documentation/javascript/reference.html#InfoWindow</a></p>\n\n<p>alternatively, you can use event delegation</p>\n\n<p>eg.</p>\n\n<p><code>topnode.addEvent('submit:relay(#map-form)', function(e){ });</code> - or the equivalent jQuery, for instance <code>$(document).on('submit', '#map-form', fn)</code></p>\n",
                    "is_accepted": true,
                    "score": 29
                }
            ],
            "body": "<p>I want to put a form with input field and submit button inside a Google Maps API (v3) InfoWindow.</p>\n\n<p>When submitted I would like to call a function that initiates the directions service using the address entered into the input field.</p>\n\n<p>Here's my code (I'm currently only testing whether the directions event is being fired. I've written the full <code>getDirections()</code> event and can confirm it works and returns directions when fired properly):</p>\n\n<p>I tried adding an event listener using MooTools, like this:</p>\n\n<pre><code>var infoWindowContent   = \"&lt;b&gt;Get Directions From...&lt;/b&gt;&lt;br /&gt;\"\n                        + \"&lt;form id='map-form'&gt;\"\n                        + \"Address/Postcode: &lt;input id='map-from-address' type='text' /&gt;\"\n                        + \"&lt;input type='submit' id='map-go' value='Go' /&gt;\"\n                        + \"&lt;/form&gt;\";\n\nvar infoWindow = new google.maps.InfoWindow({\n    content: infoWindowContent\n});\n\ngoogle.maps.event.addListener(marker, 'click', function() {\n    infoWindow.open(map, marker);\n    dbug.log($(\"map-form\"));\n    $(\"map-form\").addEvent(\"submit\", getDirections);\n});\n\nfunction getDirections(event)\n{\n    dbug.log(\"getDirections\");\n    event.stop();\n}\n</code></pre>\n\n<p>As I'm using MooTools elsewhere in my site, I put all the code in <code>window.addEvent('load', function(){...});</code></p>\n\n<p>Note the console trace <code>dbug.log($(\"map-form\"));</code> which is correctly outputting the form element, but the event isn't firing. </p>\n\n<p>I've added the same event to another form (with different ID) in the DOM and it works fine.</p>\n\n<p>So, if MooTools can find the element and supposedly add the event listener, what's preventing the event from firing? Is this a scope issue?</p>\n",
            "last_activity_date": 1415201605,
            "question_id": 6378007,
            "score": 13,
            "tags": [
                "javascript",
                "google-maps-api-3",
                "mootools",
                "infowindow",
                "mootools-events"
            ],
            "title": "Adding event to element inside Google Maps API InfoWindow"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><code>&amp;nbsp;</code> is a HTML entity. When doing <code>.text()</code>, all HTML entities are decoded to their character values.</p>\n\n<p>Instead of comparing using the entity, compare using the actual raw character:</p>\n\n<pre><code>var x = td.text();\nif (x == String.fromCharCode(160)) { // Non-breakable space is char 160\n  x = '';\n}\n</code></pre>\n\n<p>Or you can also specify it in its Javascript escaped form:</p>\n\n<pre><code>var x = td.text();\nif (x == '\\xA0') { // Non-breakable space is char 0xa0 (160 dec)\n  x = '';\n}\n</code></pre>\n\n<p>More information about <code>String.fromCharCode</code> is available here:</p>\n\n<blockquote>\n  <p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/fromCharCode\">fromCharCode - MDC Doc Center</a></p>\n</blockquote>\n\n<p>More information about character codes for different charsets are available here:</p>\n\n<blockquote>\n  <p><a href=\"http://en.wikipedia.org/wiki/Windows-1252\">Windows-1252 Charset</a><br>\n  <a href=\"http://en.wikipedia.org/wiki/UTF-8\">UTF-8 Charset</a></p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 43
                },
                {
                    "body": "<p>That entity is converted to the char it represents when the browser renders the page. JS (jQuery) reads the rendered page, thus it will not encounter such a text sequence. The only way it could encounter such a thing is if you're double encoding entities.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Remember that <code>.text()</code> strips out markup, thus I don't believe you're going to find <code>&amp;nbsp;</code> in a non-markup result. </p>\n\n<p><em>Made in to an answer....</em></p>\n\n<pre><code>var p = $('&lt;p&gt;').html('&amp;nbsp;');\nif (p.text() == String.fromCharCode(160) &amp;&amp; p.text() == '\\xA0')\n    alert('Character 160');\n</code></pre>\n\n<p>Shows an alert, as the ASCII equivalent of the markup is returned instead.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The jQuery docs for <code>text()</code> says</p>\n\n<blockquote>\n  <p>Due to variations in the HTML parsers\n  in different browsers, the text\n  returned may vary in newlines and\n  other white space.</p>\n</blockquote>\n\n<p>I'd use <code>$td.html()</code> instead.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>This apparently is not working:</p>\n\n<pre><code>X = $td.text();\nif (X == '&amp;nbsp;') {\nX = '';\n}\n</code></pre>\n\n<p>Is there something about a non-breaking space or the ampersand that JavaScript doesn't like?</p>\n",
            "last_activity_date": 1299616921,
            "question_id": 5237989,
            "score": 13,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "nonbreaking space"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The following link provides some good articles on this topic:</p>\n\n<p><a href=\"http://code.google.com/p/doctype-mirror/wiki/ArticleXSSInAttributes\" rel=\"nofollow\">http://code.google.com/p/doctype-mirror/wiki/ArticleXSSInAttributes</a></p>\n\n<p>Hope it helps.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>There is an open foundation out there called <a href=\"http://www.owasp.org/\" rel=\"nofollow\">OWASP</a> that helps you with this.</p>\n\n<p>To answer your question <code>Are there any attacks....</code>; Yes!</p>\n\n<p>There are tons of documentation there, and there are libraries you can use to correctly escape all XSS code.</p>\n\n<p>Read the <a href=\"http://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet\" rel=\"nofollow\">XSS prevention sheet</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Security rule #1: If you are the least in doubt, presume there is a hole.</p>\n\n<p>What are you trying to achieve? What functionality would cause CSS from an untrusted source?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This does not work due to <strong>click-jacking</strong> vulnerability.</p>\n\n<p>Example:</p>\n\n<pre><code>&lt;a href=\"http://example.com/attack.html\" style=\"display: block; z-index: 100000; opacity: 0.5; position: fixed; top: 0px; left: 0; width: 1000000px; height: 100000px; background-color: red;\"&gt; &lt;/a&gt; \n</code></pre>\n\n<p>Found at: <a href=\"http://www.bioinformatics.org/phplabware/forum/viewtopic.php?id=164\">http://www.bioinformatics.org/phplabware/forum/viewtopic.php?id=164</a></p>\n\n<p>The code would be perfectly validated but it may cause serious damage.</p>\n\n<p>So - rule of thumb use very strict white list or do not allow style attributes.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Yes, you can use XSS attacks with Style attributes .</p>\n\n<p>These styles were injected as we didn't have them declared in our tags in a particular jsp page but got through when audited by our security group:</p>\n\n<pre><code>&lt;img src=\"&lt;path here&gt;\" style=x:ex/**/pression\n(alert(54163)) \".gif\"\n</code></pre>\n\n<p>I'm thinking of using an HTTP filter to stop it here, but I'm still looking into it.</p>\n\n<p>We also didn't have our hidden input fields proteccted either and this got through as well:</p>\n\n<pre><code>&lt;input type=\"hidden\" name=\"&lt;variable name here&gt;\" value=\"&lt;value here&gt;\"  style=x:ex/**/pression(alert\n(54163)) \"\"&gt;\n</code></pre>\n\n<p>With a tool like Burpsuite, you can modify requests on the fly to inject XSS into tags like this. However, with the ESAPI API's from OWASP, you can add protection.  We weren't using JSTL tags as it was old legacy code,  so that was the best short term solution.</p>\n\n<p>For the hidden input I used;</p>\n\n<pre><code>&lt;input type=\"hidden\" name=\"id\" value=\"&lt;%=ESAPI.encoder().encodeForHTMLAttribute(id)%&gt;\"\n</code></pre>\n\n<p>You can also use <a href=\"https://blog.skullsecurity.org/2010/exotic-xss-the-html-image-tag\" rel=\"nofollow\">XSS with the js onload event in an img tag</a>:</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>There are known Style Attribute XSS attacks like:</p>\n\n<pre><code>&lt;DIV STYLE=\"width: expression(alert('XSS'));\"&gt;\n</code></pre>\n\n<p>Or</p>\n\n<pre><code>&lt;DIV STYLE=\"background-image: url(javascript:alert('XSS'))\"&gt;\n</code></pre>\n\n<p>All the examples <a href=\"http://ha.ckers.org/xss.html\">I've seen</a> use either expression or url functionality - basically something function like that require \"(\" and \")\".</p>\n\n<p>I'm thinking of following method of filtering style tags, I would check them using following (approximately) grammar:</p>\n\n<pre><code>identifier: [a-zA-Z_][a-zA-Z0-9\\-]*\nnumber: [0-9]+\nstring: '[a-zA-Z_0-9 ]*'\nvalue : identifier | number | string | number + \"(em|px)\" | number +\"%\"\nentry: identifier \":\" value (\\s value )*\nstyle: (entry ;)*\n</code></pre>\n\n<p>So basically I allow ASCII properties with numeric values or very limited string values (basically for font names) not allowing using anything that looks like call.</p>\n\n<p>The question is this good enough? Are there any attacks that may do something like that:</p>\n\n<pre><code>&lt;DIV STYLE=\"this-is-js-property: alert 'XSS';\"&gt;\n</code></pre>\n\n<p>And succeed?</p>\n\n<p>Can anybody think of XSS vulnerability of such test?</p>\n\n<p><strong>To Make it clear</strong></p>\n\n<p>I need style attributes as many tools like TinyMCE use them and filtering harmless\nstyle attributes off would significantly hurt the functionality.</p>\n\n<p>So I prefer pass common cases removing all things that may use @import, url, expression etc. And also make sure that basic css syntax is ok.</p>\n\n<p><strong>Answer</strong></p>\n\n<p>No it is not safe due to click-jacking vulnerability.</p>\n",
            "last_activity_date": 1417707140,
            "question_id": 4546591,
            "score": 13,
            "tags": [
                "javascript",
                "html",
                "coding-style",
                "xss"
            ],
            "title": "XSS attacks and style attributes"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Did u mean horizontal scrolling??</p>\n\n<p>If you want to achieve horizontal scrolling then you can use 3 containers.</p>\n\n<ol>\n<li>For the first column ( Name )</li>\n<li>For the columns that you want to scroll. Set the overflow-x style of this container to auto</li>\n<li>For the last column ( Total )</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I assume you want to scroll it horizontally only. Otherwise it could be confusing with static columns.</p>\n\n<p>You could put the overflow: auto onto a containing element of the inner table cells only... I'm not sure how browsers would handle this, but you may be able to put the elements you want fixed inside thead and tfoot elements, and put the scrolling portion inside a tbody element, and set it's overflow to auto.</p>\n\n<p>Failing that, you may need to drop semantics and code the left column and right column outside the table.</p>\n\n<p>Personally, I'd try code it as semantic as possible, and then use JavaScript to position the left and right columns. Without JavaScript, you should make it fail gracefully to just a wide table (not sure how difficult this would be, as you say you have a fixed width)</p>\n\n<p>You could try this (rough) jQuery example to put the first column's values outside.</p>\n\n<pre><code>var nameTable = '&lt;table id=\"outside-name-col\"&gt;\n                  &lt;thead&gt;\n                   &lt;tr&gt;\n                    &lt;th&gt;Name&lt;/th&gt;\n                   &lt;/tr&gt;\n                  &lt;/thead&gt;\n                 &lt;tbody&gt;'; // start making a table for name column only\n\n$('#scoreTable tbody tr').each(function() { // iterate through existing table\n\n   var nameCol = $(this).find(':first'); // get column of index 0, i.e. first\n\n   var cellHeight = nameCol.height(); // get the height of this cell\n\n   $(this).find('td').height(cellHeight); // equalise the height across the row so removing this element will not collapse the height if it is taller than the scores and total       \n\n   nameTable += '&lt;tr&gt;&lt;td style=\"height: ' + cellHeight + 'px\"&gt;' + nameCol.html() + '&lt;/td&gt;&lt;/tr&gt;'; // append the next row with new height and data\n\n   nameCol.remove(); // remove this cell from the table now it's been placed outside\n\n});\n\nnameTable += '&lt;/tbody&gt;&lt;/table&gt;'; // finish table string\n\n\n$('#scoreTable').before(nameTable); // insert just before the score table\n</code></pre>\n\n<p>Use CSS to position them to align correctly. This is untested, but it should give you some idea.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Can I propose a somewhat unorthodox solution?</p>\n\n<p>What would you think about placing the 'total' column after the 'name' column, rather than at the very end? Wouldn't this avoid the requirement for only a portion of the table to scroll?</p>\n\n<p>It's not exactly what you're asking for, but perhaps it is a sufficient solution, given that the alternative would be pretty messy. (Placing the 'total' and 'name' columns outside of the table, for instance, would create alignment problems when not all rows are of equal height. You could correct this with javascript but then you'd be entering a whole new world of pain).</p>\n\n<p>Also from a UI perspective, it may be that 'name' and 'total' are the most important data, in which case it would make sense to put them together, followed by a sort of 'breakdown' of the total. Of course, we seem to have an intuition that a 'total' should come after its constituent parts, but I don't think it would cause too much confusion to the user if the order were reversed like this (though this is a question for you, based on your product and your users).</p>\n\n<p>Anyway, something to consider.</p>\n\n<p>EDIT:</p>\n\n<p>Here are some more unorthodox solutions, now that I think I understand your intentions a bit better:</p>\n\n<ol>\n<li>Paginate the scores. Give the most recent ten, say, and the total, and\na link to older scores, which are provided 10 at a time </li>\n<li>Only give    names, totals, and some other    meaningful measures\nsuch as mean and    sd, then provide\na link for each name    that shows\nall results corresponding    to that\nname. You could then also    provide\na link showing all results    for a\ngiven score set, so that comparisons between different users \ncan be made. The point is that you'd\nonly have to give 1 dimension of\ndata    for each view, rather than\nhaving an    unwieldy 2D data set</li>\n<li>Make the rows sortable (easy with jQuery UI) so that if I want to\ncompare Mary to Jane, I can drag and\nplace one after the other, so I wont\nneed to keep scrolling left and\nright to see which scores correspond\nto which names</li>\n<li>Highlight a row when it is clicked, by changing the background\ncolor or similar, again so I don't need to keep scrolling left and right.</li>\n</ol>\n\n<p>Anyway you get the idea. Perhaps it is better to look for a UI solution than a contorted markup solution. Ultimately I would be questioning how important it is to present so much data to the user at once, that a portion of it needs to scroll in a particular fashion for the data to be readable. Perhaps you're building a spreadsheet app, and you really do need to display a 100x100 matrix in a single view. If not, you could surely come up with more creative ways than I have to split up the results. </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Scrolling the content of tables is an problematic issue, since there is no simple and browser-safe solution to achieve that.</p>\n\n<p>The best and most secure way to do it requires JavaScript. You would achieve even horizontal Scrolling easily (it's included for free) with this technique I used. You can transform that to your problem easily:</p>\n\n<p>1) I made 3 Tables</p>\n\n<p>2) Placed the middle Table that holds the Data inside a DIV container</p>\n\n<p>3) set the DIV style to overflow:auto</p>\n\n<p>4) gave the header and footer table and the div each a width of 100%</p>\n\n<p>5) surrounded everything by another div to control the overall table width</p>\n\n<p>6) made very sure that the quantity of columns match in all three tables, and that all three have the same styles regarding paddings, margins and borders</p>\n\n<p>now the interesting part:</p>\n\n<p>6) below the last element of that table construction, write a javascript block (or include it from a file)</p>\n\n<p>7) write a function that successively looks at each column (use a for loop), starting with the first one. At every iteration of that loop, check the td cell with of the first two tables in the current column. Check which with is the bigger one and assign that to the smaller td cell's style. You may want to apply that value to the footer table, too.</p>\n\n<p>8) call that function. You may want to do that in an interval or when special events occur, such as new data in the cells (if using ajax for example).</p>\n\n<p>Note: If you do scroll horizontally, your columns sizes are synchronized. But you will have to synchronize the scrolling position of your header and footer table with the content table. Alternatively you just let the overall div scroll the whole thing horizontally, but not vertically. That would be the job of the DIV that contains the data table.</p>\n\n<p>This technique worked very well in all major browsers in an very coplex gantt diagram project.</p>\n\n<p>Note: You can think of that concept easily in a 90 degrees rotated way, so that you fix the first and last header column when scrolling.</p>\n\n<p>Edit: Here is another example from my code base that might help you to get the solution:</p>\n\n<pre><code>var left_td = document.getElementById(\"left_td\");\nvar right_td = document.getElementById(\"right_td\");\nvar contentDiv = document.getElementById(\"contentDiv\");\nwindow.setInterval(function(){\n    var left_td_width = Math.round((parseInt(contentDIV.offsetWidth) - 120) / 2);\n    var right_td_width = (parseInt(contentDIV.offsetWidth) - left_td_width - 120;\n\n    left_td.style.width = left_td_width + \"px\";\n    right_td.style.width = right_td_width + \"px\";\n}, 25);\n</code></pre>\n\n<p>This code does the following: It makes sure, that an Table with 3 columns always looks like that: The first and last column have the same size, and the center column has a width of 120 pixels.\nSure that does not apply directly to your special problem, but It might give you a starting point in dynamic table manipulation through JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It's not complete right now (I just mocked it up really quick), but here's a way of doing it using straight HTML. You want three tables ... two outside the &lt;div> and one inside the &lt;div>. All three are floated to the left, so that they're all on the same line.</p>\n\n<p><a href=\"http://52colony.rh.rit.edu/websites/tableTest.htm\" rel=\"nofollow\">Table Test</a></p>\n\n<p>and the code itself:</p>\n\n<pre><code>  &lt;table style=\"float: left;\"&gt;\n     &lt;tr&gt;\n        &lt;td&gt;Name&lt;/td&gt;\n     &lt;/tr&gt;\n     &lt;tr&gt;\n        &lt;td&gt;John&lt;/td&gt;\n     &lt;/tr&gt;\n     &lt;tr&gt;\n        &lt;td&gt;Will&lt;/td&gt;\n     &lt;/tr&gt;\n  &lt;/table&gt;\n  &lt;div id=\"tableWrapper\" style=\"overflow-x: auto; width: 500px;float:left;padding-bottom: 10px;\"&gt;\n      &lt;table&gt;\n        &lt;tr&gt;\n           &lt;td&gt;Score1&lt;/td&gt;\n           &lt;td&gt;Score2&lt;/td&gt;\n           ...\n        &lt;/tr&gt;\n        &lt;tr&gt;\n           &lt;td&gt;5&lt;/td&gt;\n           &lt;td&gt;6&lt;/td&gt;\n           ...\n        &lt;/tr&gt;\n        &lt;tr&gt;\n           &lt;td&gt;3&lt;/td&gt;\n           &lt;td&gt;7&lt;/td&gt;\n           ...\n        &lt;/tr&gt;\n        &lt;tr&gt;\n           &lt;td&gt;7&lt;/td&gt;\n           &lt;td&gt;1&lt;/td&gt;\n           ...\n        &lt;/tr&gt;\n      &lt;/table&gt;\n  &lt;/div&gt;\n  &lt;table style=\"float: left;\"&gt;\n     &lt;tr&gt;\n        &lt;td&gt;Total&lt;/td&gt;\n     &lt;/tr&gt;\n     &lt;tr&gt;\n        &lt;td&gt;86&lt;/td&gt;\n     &lt;/tr&gt;\n     &lt;tr&gt;\n        &lt;td&gt;82&lt;/td&gt;\n     &lt;/tr&gt;\n  &lt;/table&gt;\n</code></pre>\n\n<p>Note: The padding-bottom on the div is so that the scrollbar does not cover up the table in IE. Also, the bug I have to work out is how to specify the width of the header elements inside the middle table. For some reason, specifying the width=\"\" attribute does not work. Thus, if the text of the header element is too wide (and breaks onto another line), then the layout is broken (off by one row)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've experimented with a few methods (thanks to everyone who helped) and here's what I've come up with using jQuery.  It seems to work well in all browsers I tested.  Feel free to take it and use it however you wish.  Next step for me will be turning it into a reusable jQuery plugin.</p>\n\n<h2>Summary:</h2>\n\n<p>I started with a normal table with everything in it (<em>Id=\"ladderTable\"</em>), and I wrote <strong>Three methods</strong> - one to strip the first column, one to strip the last column, and one to fix the row heights.</p>\n\n<p>The <em>stripFirstColumn</em> method creates a new table (<em>Id=\"nameTable\"</em>), traverses the original table and takes out the first column, and adds those cells to the nameTable.</p>\n\n<p>The <em>stripLastColumn</em> method does basically the same thing, except it takes out the last column and adds the cells to a new table called <em>totalTable</em>.</p>\n\n<p>The <em>fixHeights</em> method looks at each row in each table, calculates the maximum height, and applies it to the related tables.</p>\n\n<p>In the document ready event, I called all three methods in order.  Note that all three tables float left so they'll just stack horizontally.</p>\n\n<h2>The HTML Structure:</h2>\n\n<pre><code>&lt;h1&gt;Current Ladder&lt;/h1&gt; \n&lt;div id=\"nameTableSpan\" style=\"float:left;width:100px;border-right:2px solid gray;\"&gt;&lt;/div&gt; \n&lt;div id=\"ladderDiv\" style=\"float:left;width:423px;overflow:auto;border:1px solid gray;margin-top:-1px;\"&gt; \n    &lt;table id=\"ladderTable\" class=\"ladderTable\"&gt;\n    \t&lt;thead&gt; \n            &lt;tr&gt;&lt;td&gt;Name&lt;/td&gt;&lt;td&gt;Round 1&lt;/td&gt; ... &lt;td&gt;Round 50&lt;/td&gt;&lt;td class=\"scoreTotal\"&gt;Total&lt;/td&gt;&lt;/tr&gt;\n    \t&lt;/thead&gt;\n\t\t&lt;tr&gt;&lt;td&gt;Bob&lt;/td&gt;&lt;td&gt;11&lt;/td&gt; ... &lt;td&gt;75&lt;/td&gt;&lt;td&gt;421&lt;/td&gt;&lt;/tr&gt;\n\t\t   ... (more scores)\n\t&lt;/table&gt;\n&lt;/div&gt;\n&lt;div id=\"totalTableSpan\" style=\"float:left;width:70px;border-left:2px solid gray;\"&gt;&lt;/div&gt;\n</code></pre>\n\n<h2>The jQuery:</h2>\n\n<pre><code>function stripFirstColumn() {                \n    // pull out first column:\n    var nt = $('&lt;table id=\"nameTable\" cellpadding=\"3\" cellspacing=\"0\" style=\"width:100px;\"&gt;&lt;/table&gt;');\n    $('#ladderTable tr').each(function(i)\n    {\n        nt.append('&lt;tr&gt;&lt;td style=\"color:'+$(this).children('td:first').css('color')+'\"&gt;'+$(this).children('td:first').html()+'&lt;/td&gt;&lt;/tr&gt;');\n    });\n    nt.appendTo('#nameTableSpan');\n    // remove original first column\n    $('#ladderTable tr').each(function(i)\n    {\n        $(this).children('td:first').remove();\n    });\n    $('#nameTable td:first').css('background-color','#8DB4B7');\n}\n\nfunction stripLastColumn() {                \n    // pull out last column:\n    var nt = $('&lt;table id=\"totalTable\" cellpadding=\"3\" cellspacing=\"0\" style=\"width:70px;\"&gt;&lt;/table&gt;');\n    $('#ladderTable tr').each(function(i)\n    {\n        nt.append('&lt;tr&gt;&lt;td style=\"color:'+$(this).children('td:last').css('color')+'\"&gt;'+$(this).children('td:last').html()+'&lt;/td&gt;&lt;/tr&gt;');\n    });\n    nt.appendTo('#totalTableSpan');\n    // remove original last column\n    $('#ladderTable tr').each(function(i)\n    {\n        $(this).children('td:last').remove();\n    });\n    $('#totalTable td:first').css('background-color','#8DB4B7');\n}\n\nfunction fixHeights() {\n    // change heights:\n    var curRow = 1;\n    $('#ladderTable tr').each(function(i){\n        // get heights\n        var c1 = $('#nameTable tr:nth-child('+curRow+')').height();    // column 1\n        var c2 = $(this).height();    // column 2\n        var c3 = $('#totalTable tr:nth-child('+curRow+')').height();    // column 3\n        var maxHeight = Math.max(c1, Math.max(c2, c3));\n\n        //$('#log').append('Row '+curRow+' c1=' + c1 +' c2=' + c2 +' c3=' + c3 +'  max height = '+maxHeight+'&lt;br/&gt;');\n\n        // set heights\n        //$('#nameTable tr:nth-child('+curRow+')').height(maxHeight);\n        $('#nameTable tr:nth-child('+curRow+') td:first').height(maxHeight);\n        //$('#log').append('NameTable: '+$('#nameTable tr:nth-child('+curRow+')').height()+'&lt;br/&gt;');\n        //$(this).height(maxHeight);\n        $(this).children('td:first').height(maxHeight);\n        //$('#log').append('MainTable: '+$(this).height()+'&lt;br/&gt;');\n        //$('#totalTable tr:nth-child('+curRow+')').height(maxHeight);\n        $('#totalTable tr:nth-child('+curRow+') td:first').height(maxHeight);\n        //$('#log').append('TotalTable: '+$('#totalTable tr:nth-child('+curRow+')').height()+'&lt;br/&gt;');\n\n        curRow++;\n    });\n\n    if ($.browser.msie)\n        $('#ladderDiv').height($('#ladderDiv').height()+18);\n}\n\n$(document).ready(function() {\n    stripFirstColumn();\n    stripLastColumn();\n    fixHeights();\n    $(\"#ladderDiv\").attr('scrollLeft', $(\"#ladderDiv\").attr('scrollWidth'));    // scroll to the last round\n});\n</code></pre>\n\n<p>If you have any questions or if there's anything that wasn't clear, I'm more than happy to help.</p>\n\n<p>It took me quite a while to work out that there was nothing that I could really reuse and it took a bit longer to write this.  I'd hate for someone to go to the same trouble.</p>\n",
                    "is_accepted": true,
                    "score": 1
                },
                {
                    "body": "<p>Take a look at this jQuery plugin:</p>\n\n<p><a href=\"http://fixedheadertable.com/\" rel=\"nofollow\">http://fixedheadertable.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have a table which has a header row, but also a header column and a total column with several columns in between.</p>\n\n<p>Something like this:</p>\n\n<pre><code>Name    Score 1    Score 2  ...  Total\n--------------------------------------\nJohn       5          6            86\nWill       3          7            82\nNick       7          1            74\n</code></pre>\n\n<p>The entire table is defined inside a fixed-width scrollable div because there are likely to be a large number of \"Score\" rows and I have a fixed-width page layout.</p>\n\n<pre><code>&lt;div id=\"tableWrapper\" style=\"overflow-x: auto; width: 500px;\"&gt;\n    &lt;table id=\"scoreTable\"&gt;\n        ...\n    &lt;/table&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>What I would like is for the first (<code>Name</code>) and last (<code>Total</code>) columns to remain visible while the inner columns scroll.</p>\n\n<p>Can anyone help me with this?</p>\n\n<p><strong>Edit:</strong> I mean horizontal scrolling only - changed to specify that.</p>\n\n<p><hr /></p>\n\n<p><strong>Update:</strong> I've solved this problem for myself and have posted the answer below.  Let me know if you need any more information - this was a bit of a pain to do and I'd hate for someone else to have to rewrite everything.</p>\n",
            "last_activity_date": 1386703829,
            "question_id": 743663,
            "score": 13,
            "tags": [
                "javascript",
                "html",
                "layout",
                "html-table"
            ],
            "title": "How do I freeze the first and last columns of an html table in a scrollable div?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>There is no reason for <code>$(document).ready()</code> not to be called.\nBe sure your page contains an include to <code>jquery.js</code>. Try to do a simple test with an empty HTML page and just an alert to see if there is another problem.</p>\n\n<p>If you are trying to use this inside the HTML page that contains the frame's definition, keep in mind that there is no document there, you will have to use the </p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Have you tried to put the jQuery code inside the Info.aspx page?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I don't know if it is the best solution, but when I remove <code>$(document).ready()</code> and keep its body, everything works perfectly.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Not sure what you're trying to do, but I have an even older classic asp app that operates out of frames, and I just recently added jQuery functionality and it is working great. The $(document).ready() works fine within a frame, but if you wish to reference the DOM in another frame, you'll have to use the Frame's onload event to let you know when the frame's DOM is loaded. Admittedly, I used iFrames, but the concept should be the same.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you want to fire the <code>onload</code> event for your frames, then follow these steps:</p>\n\n<ol>\n<li><p>Assign an <code>id</code> and <code>name</code> to each <code>&lt;frame&gt;</code> tag. Make sure both <code>id</code> and <code>name</code> attributes value is same.</p></li>\n<li><p>Use the following code to fire the <code>onload</code> event of the frame:</p>\n\n<pre><code>$(\"frameName\").ready(function() { \n  // Write your frame onload code here\n}\n</code></pre></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I assume this is a similar problem I was having with DOMContentLoaded in an iframe.</p>\n\n<p>I wrote <a href=\"http://www.zachleat.com/web/2008/12/04/domcontentloaded-inconsistencies/\" rel=\"nofollow\">a blog post about it</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have tried the method mentioned in another comment:</p>\n\n<pre><code>$(\"#frameName\").ready(function() {\n    // Write you frame on load javascript code here\n} );\n</code></pre>\n\n<p>and it did not work for me.  </p>\n\n<p>this did:</p>\n\n<pre><code>$(\"#frameName\").load( function() {\n     //code goes here\n} );\n</code></pre>\n\n<p>Even though the event does not fire as quickly - it waits until images and css have loaded also.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The following also worked for me:</p>\n\n<pre><code>&lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n$(window.parent.frames[0].document).ready(function() {\n    // Do stuff\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>The [0] indicates that it is the first frame in the document, [1] would be the second frame, and so on. This is particularly nice if you do not have control over the mark-up, and it is still utilizing document ready.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have worked a long time with this post... here is my solution.</p>\n\n<p>test.html</p>\n\n<pre><code>&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;script src=\"http://code.jquery.com/jquery-latest.js\"&gt;&lt;/script&gt;\n\n    &lt;script&gt;        \n      document.write('&lt;frameset&gt;&lt;frame name=\"frame_content\" id=\"frame_content\"&gt;&lt;/frame&gt;&lt;/frameset&gt;');\n\n      $('#frame_content').attr('src', 'test2.html');\n      $('#frame_content').load(function()\n      {\n        if('${\"#header\"}' != '') {\n          $(\"#header\", frame_content.document).remove();\n        }\n      });\n      if($('#frame_content').complete) $('#frame_content').trigger(\"load\");\n    &lt;/script&gt;\n\n&lt;/head&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>test2.html</p>\n\n<pre><code>&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n\n  &lt;head&gt;\n  &lt;/head&gt;\n\n  &lt;body&gt;\n    &lt;div id=\"header\"&gt;You will never see me, cause I have been removed!&lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I know this is an old topic. But to help some of you who reach this page, here is my solution:</p>\n\n<pre><code>$($(\"#frameName\")[0].contentWindow.document).ready(function() {\n    // Write you frame onready code here\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>No need to modify the markup. Just fix the selector. It should be: </p>\n\n<pre><code>$(\"frame[name='main']\").ready(function(){..}); \n</code></pre>\n\n<p>not </p>\n\n<pre><code>$(\"#frameName\").ready(function(){..}); \n</code></pre>\n\n<p>Note: it seems the jQuery ready event fires multiple times. Make sure that is OK with your logic.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a page, with some code in js and jQuery and it works very well. But unfortunately, all my site is very very old, and uses frames. So when I loaded my page inside a frame, <code>$(document).ready()</code> doesn't fire up.</p>\n\n<p>My frameset looks like:</p>\n\n<pre><code>&lt;frameset rows=\"79,*\" frameBorder=\"1\" frameSpacing=\"1\" bordercolor=\"#5996BF\" noresize&gt; \n    &lt;frame name=\"header\" src=\"Operations.aspx?main='Info.aspx'\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" noresize frameborder=\"0\"&gt;\n    &lt;frame name=\"main\" src=\"Info.aspx\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"auto\" noresize frameborder=\"0\"&gt;      \n&lt;/frameset&gt;\n</code></pre>\n\n<p>My page is loaded into the <code>main</code> frame. What should I do?</p>\n",
            "last_activity_date": 1416972062,
            "question_id": 221192,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "frames"
            ],
            "title": "JQuery and frames - $(document).ready doesn&#39;t work"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Totally feel your pain on this. The docs for PhoneGap Build need a lot of work.\nI've been fighting with this the last couple of days myself. After much trial and error, this is what has worked for me.</p>\n\n<p><strong>Within config.xml:</strong></p>\n\n<pre><code>&lt;!-- Do not auto hide splash on iOS --&gt;\n&lt;preference name=\"AutoHideSplashScreen\" value=\"false\" /&gt;\n&lt;!-- Do not auto hide splash on Android --&gt;\n&lt;preference name=\"SplashScreenDelay\" value=\"10000\"/&gt;\n\n&lt;gap:plugin name=\"org.apache.cordova.splashscreen\" /&gt;\n</code></pre>\n\n<p>Android does not seem to have an AutoHide param, so we just give it a long delay. We will hide it manually with JS before this 10 seconds is reached.</p>\n\n<p>Adding the plugin reference in the config.xml is needed for the javascript code <code>navigator.splashscreen.hide();</code> to work.</p>\n\n<p>Also, I found for my project (using Kendo UI Mobile) that no setTimeout delay was needed within <code>onDeviceReady</code>. I am guessing, that once you get the correct params within your config.xml, you will see the same in your app.</p>\n\n<p>My <code>onDeviceReady</code> looks like this:</p>\n\n<pre><code>document.addEventListener('deviceready', function() {\n  navigator.splashscreen.hide();\n});\n</code></pre>\n\n<p>Tested on iOS 6, and Android 4.1 using PhoneGap Build 3.1.</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>I want to add that I had a similar issue and in my case it was not the splash screen.</p>\n\n<p>In my case using PhoneGap build and Git, I added a javascript file to my app but failed to include and push the new file to my git repository.  This caused my the app to work locally but when the build server pulled the latest code, it showed the white screen on the PhoneGap build.</p>\n\n<p>PhoneGap initialized, but Kendo UI did not like the missing referenced js class and failed.  It was a PhoneGap noob mistake but i want to share just incase it helps someone who has a similar issue and the splash screen fix does not work.  <strong>It could be a javascript error occurring before your mobile ui framework loads.</strong></p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I'm using PhoneGap Build 3.0, attempting to get rid of the blank white screen that appears after the splash screen.</p>\n\n<p>I've done research and all I can find is references to PhoneGap and Cordova, not PhoneGap Build. None of the things I've tried have worked--mainly, disabling the auto splash screen hide, and hiding it automatically with JavaScript:</p>\n\n<p>In the config.xml:</p>\n\n<pre><code>&lt;feature name=\"SplashScreen\"&gt;\n    &lt;param name=\"ios-package\" value=\"CDVSplashScreen\" /&gt;\n    &lt;param name=\"onload\" value=\"true\" /&gt;\n&lt;/feature&gt;\n</code></pre>\n\n<p>In index.html:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" charset=\"utf-8\" src=\"cordova.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" charset=\"utf-8\"&gt;\n        window.location.href = mysite.com\n\n        document.AddEventListener(\"deviceready\", OnDeviceReady, false);\n\n        function OnDeviceReady() {\n            setTimeout(function() { \n                navigator.splashscreen.hide();\n            }, 6000);\n        };\n    &lt;/script&gt;\n</code></pre>\n\n<p>But this appears to ignore me and auto-hide the screen regardless. I assume this is because this solution is not for PhoneGap Build, but I'm not sure how else to go about fixing this.</p>\n",
            "last_activity_date": 1396728627,
            "question_id": 20339647,
            "score": 12,
            "tags": [
                "javascript",
                "ios",
                "phonegap-build"
            ],
            "title": "PhoneGap Build iOS app has blank white screen after splash screen"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Write a function generator that accepts a property name:</p>\n\n<pre><code>function propComparator(prop) {\n    return function(a, b) {\n        return a[prop] - b[prop];\n    }\n}\n\narr.sort(propComparator('name'));\n</code></pre>\n\n<p>You can also save the sorters for later use, directly, or as parameters:</p>\n\n<pre><code>var compareNames = propComparator('name');\nvar compareFoos = propComparator('foo');\n...\narr.sort(compareNames);\ntakesComparator(compareFoos);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>Is this what you're looking for?</p>\n\n<pre><code>function sortByProperty(array, propertyName) {\n    return array.sort(function (a, b) {\n        return a[propertyName] - b[propertyName];\n    });\n}\n\nvar sortedByName = sortByProperty(myArray, \"name\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Use prototypes to compare strings and numbers correctly</p>\n\n<pre><code>String.prototype.compare = function(x) {\n  if(!x.charCodeAt) return -1;\n  var result = this.charCodeAt(0)-x.charCodeAt(0);\n  if(!result) return this.substr(1).compare(x.substr(1));\n  return result;\n}\n\nArray.prototype.sortAttr = function(attr,reverse) {\n  var sorter = function(a,b) {\n    var aa = a[attr];\n    var bb = b[attr];\n    if(aa+0==aa &amp;&amp; bb+0==bb) return aa-bb;\n    else if(aa.compare) return aa.compare(bb); // aa-bb does not work\n    return 0;\n  }\n  this.sort(function(a,b) {\n    var result = sorter(a,b);\n    if(reverse) result*= -1;\n    return result;\n  });\n};\n</code></pre>\n\n<p>Example</p>\n\n<pre><code>var data = [\n  {name: \"Josh\", age: 18},\n  {name: \"John\", age: 17},\n  {name: \"Bob\", age: 20},\n  {name: 0, age: \"error\"}\n];\n\ndata.sortAttr(\"name\");\n// data is now sorted by name\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Is there anyway I could extend the built-in array.sort() method to accept an extra parameter</strong></p>\n\n<p>all above answers are good . but i thought of adding some info about partial functions</p>\n\n<p>for more info see bind in MDN and <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Partial_Functions\" rel=\"nofollow\">partial Function</a> or John Resig - <a href=\"http://ejohn.org/blog/partial-functions-in-javascript/\" rel=\"nofollow\">partial function</a></p>\n\n<p>Example from MDN :</p>\n\n<pre><code>function list() {\n  return Array.prototype.slice.call(arguments);\n}\n\nvar list1 = list(1, 2, 3); // [1, 2, 3]\n\n//  Create a function with a preset leading argument\nvar leadingThirtysevenList = list.bind(undefined, 37);\n\nvar list2 = leadingThirtysevenList(); // [37]\nvar list3 = leadingThirtysevenList(1, 2, 3); // [37, 1, 2, 3]\n</code></pre>\n\n<p>here is an example from <a href=\"http://docs.closure-library.googlecode.com/git/closure_goog_base.js.source.html#line1119\" rel=\"nofollow\">Google Closure</a></p>\n\n<pre><code>goog.partial = function(fn, var_args) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  return function() {\n    // Prepend the bound arguments to the current arguments.\n    var newArgs = Array.prototype.slice.call(arguments);\n    newArgs.unshift.apply(newArgs, args);\n    return fn.apply(this, newArgs);\n  };\n};\n</code></pre>\n\n<p>to Use this function</p>\n\n<pre><code>    var fn=goog.partial(numberCompare,sortField,sortDirection);\n    myarray.sort (fn);\n\n\n    var numberCompare = function (sortField,sortDirection,value1,value2){\n      // sort code goes here\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to sort an array of objects. I'd prefer not to write a custom sort method for each attribute.</p>\n\n<p>Is there anyway I could extend the built-in <code>array.sort()</code> method to accept an extra parameter, describing the attribute to sort on? E.g.,</p>\n\n<pre><code>array.sort(function(a, b, attr) { return a.attr - b.attr; }, 'name');\n</code></pre>\n",
            "last_activity_date": 1389888576,
            "question_id": 8537602,
            "score": 12,
            "tags": [
                "javascript"
            ],
            "title": "Any way to extend javascript&#39;s array.sort() method to accept another parameter?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Some function names are simply reserved or already used. Another would be \"evaluate\".</p>\n\n<p>I recommend prepending something to all of your function and variable names to avoid this kinds of situations. Example: \"sto_download\"</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>&lt;a&gt;</code> elements have a <code>download</code> attribute in HTML5 as explained <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/links.html#attr-hyperlink-download\">here</a>, with a default value of <code>\"\"</code> (an empty string).</p>\n\n<p>This means that <code>download === this.download</code> in the <code>onclick</code> handler (<code>this</code> is the element in <code>onevent</code> attributes), and therefore the <code>download</code> attribute of the element is superior to the <code>download</code> property of <code>window</code>.</p>\n\n<p><a href=\"http://jsfiddle.net/pimvdb/2ecpn/\">This fiddle</a> lists all string attributes that are present by default. You can see <code>download</code> is an attribute just like <code>innerHTML</code>, which <a href=\"http://jsfiddle.net/pimvdb/2ecpn/1/\">also fails</a> with the exact same reason when used as a function (i.e. trying to refer to <code>window.innerHTML</code>, but instead executing <code>elem.innerHTML()</code>).</p>\n\n<p>As said in the comments, using <code>window</code> makes for no confusion as to what property/attribute variables will evaluate to.</p>\n\n<hr>\n\n<p>This scope behaviour does actually not seem to due to the <code>this</code> value but rather a specific \"scope chain\" that is being constructed.</p>\n\n<p>As per <a href=\"http://www.w3.org/TR/html5/webappapis.html#event-handler-attributes\">the HTML5 specification</a>:</p>\n\n<blockquote>\n  <p>Lexical Environment Scope</p>\n  \n  <p>Let <code>Scope</code> be the result of <code>NewObjectEnvironment(the element's Document, the global environment)</code>.</p>\n  \n  <p>If the element has a form owner, let <code>Scope</code> be the result of <code>NewObjectEnvironment(the element's form owner, Scope)</code>.</p>\n  \n  <p>Let <code>Scope</code> be the result of <code>NewObjectEnvironment(the element's object, Scope)</code>.</p>\n</blockquote>\n\n<p>I.e. what is happening is the scope chain is <code>window</code> -> <code>document</code> -> <code>element</code> (increasing superiority). This means that <code>download</code> evaluates to <code>element.download</code> and not <code>window.download</code>. What also can be concluded from this is that <code>getElementById</code> will bubble up to <code>document.getElementById</code> (given <code>elem.getElementById</code> does not exist).</p>\n\n<p>I set up <a href=\"http://jsfiddle.net/pimvdb/X5syU/3/\">a systematic example</a> so that you can see how variables bubble up the scope chain:</p>\n\n<pre><code>window.a   = 1;\ndocument.a = 2;\nelem.a     = 3;\n\nwindow.b   = 4;\ndocument.b = 5;\n\nwindow.c   = 6;\n</code></pre>\n\n<p>Then, <code>&lt;a ... onclick=\"console.log(a, b, c)\"&gt;</code> logs <code>3</code>, <code>5</code>, <code>6</code> when clicked.</p>\n",
                    "is_accepted": true,
                    "score": 14
                }
            ],
            "body": "<p>I've had a problem with this little snippet:</p>\n\n<pre><code>&lt;script&gt;\nfunction download() {\n    alert('Hi');\n}\n&lt;/script&gt;\n&lt;a href=\"#\" onClick=\"javascript:download();\"&gt;Test&lt;/a&gt;\n</code></pre>\n\n<p>Once I click on the link in Chrome 14.0, I get a </p>\n\n<pre><code>Uncaught TypeError: string is not a function\n</code></pre>\n\n<p>in Firefox and IE it works just fine. I solved the problem by renaming the function but I'm still curious what's with the \"download\" thing in Chrome. It's not a reserved keyword as far as I know so what might it be?</p>\n",
            "last_activity_date": 1319218305,
            "question_id": 7852237,
            "score": 12,
            "tags": [
                "javascript",
                "google-chrome"
            ],
            "title": "Can&#39;t use &quot;download&quot; as a function name in javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The answer - if it's ok to call it that lies in the activate function that I mention above. I tried to override that and removed the call to moveLayerToTop, and it works like a charm. </p>\n\n<p><strong>EDIT</strong>:\nI ended up adding this code to a js file outside the OL code library, overriding the handlers activate function. This is because I would otherwise lose the change on an update of the OpenLayers code base.</p>\n\n<pre><code>OpenLayers.Handler.Feature.prototype.activate = function() {\n    var activated = false;\n    if (OpenLayers.Handler.prototype.activate.apply(this, arguments)) {\n        //this.moveLayerToTop();\n        this.map.events.on({\n            \"removelayer\": this.handleMapEvents,\n            \"changelayer\": this.handleMapEvents,\n            scope: this\n        });\n        activated = true;\n    }\n    return activated;\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>I found this when I had the same issue, trying to get multiple layers to react to mouse events.</p>\n\n<p>The solution, just in case anyone else finds this thread is much simpler.</p>\n\n<p>The SelectFeature control takes an array of Vector layers and if all the laters you need to react to mouse events (hover and click) are in that array, they ALL work, not just the one that was moved to the top.</p>\n\n<p>The documentation suggests against using markers layers at all. While my solution revolves around PostGIS geometry fields and lends itself to rendering POINT data in a vector layer, anything that uses Markers can be done this way, and according to OpenLayers, should.</p>\n\n<p>So, the approved solution to this thread can be much simplified using Vector Layers for the markers and doing something like this:</p>\n\n<pre><code>this.carSelect = new OpenLayers.Control.SelectFeature(\n    [vectorsLayer, markersLayer],\n    {\n        'hover':true,\n        'callbacks': {\n            blah blah blah\n    }\n});\n</code></pre>\n\n<p>This will register the appropriate events on both layers and make them both live.</p>\n\n<p>I hope this helps anyone else stumbling on this issue.</p>\n\n<p>As said elsewhere, using OpenLayers is not hard, finding the correct way to do things with it is.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have an OpenLayers map with a raster base layer, a vector layer and a markers layer in that order. They display fine, in the correct order with the markers on top of the vectors, great.</p>\n\n<p>But when I add a SelectFeature Control and point it to the vector layer, it is suddenly drawn above the markers layer, despite all efforts to raise the marker layer or setting the Z index. It seems that the SelectFeature control overrides all drawing order settings. Is this by design, or can I overcome this somehow?</p>\n\n<p>The layer definitions:</p>\n\n<pre><code>var baselayer = new OpenLayers.Layer.WMS('Norden', \n'http://{myarcgisserver}/ArcGIS/services/mylayer/MapServer/WMSServer', {\n    layers :'1,2',\n    transparent :false,\n    width :'auto',\n    height :'auto',\n    filter :null\n}, {\n    isBaseLayer: true,\n    singleTile :true,\n    ratio :1,\n    alpha :false,\n    transitionEffect :'resize'\n});\n\nvar vectorLayer = new OpenLayers.Layer.Vector(\"Work orders\", {\n    projection: new OpenLayers.Projection(\"EPSG:2400\"),\n    strategies: [new OpenLayers.Strategy.Fixed(), refresh],\n    protocol: new OpenLayers.Protocol.HTTP({\n        url: \"/WorkOrder/WorkOrders.ashx?output=geojson\",\n        format: new OpenLayers.Format.GeoJSON()\n    })\n});\n\nvar markerlayer = new OpenLayers.Layer.Markers(\"Markers\", {\n    projection: new OpenLayers.Projection(\"EPSG:2400\"),\n    displayInLayerSwitcher: false\n}\n);\n</code></pre>\n\n<p>The control definition:</p>\n\n<pre><code>var selectctrl = new OpenLayers.Control.SelectFeature(\n    vectorLayer,\n    {\n        clickout: true,\n        toggle: false,\n        multiple: false,\n        hover: false,\n        toggleKey: \"ctrlKey\", // ctrl key removes from selection\n        multipleKey: \"shiftKey\", // shift key adds to selection\n        box: false\n    }\n);\n</code></pre>\n\n<p>Activation: (Without this, the layers draw in correct order)</p>\n\n<pre><code>map.addControl(selectctrl);\n\nselectctrl.activate();\n</code></pre>\n\n<p>Edit:\nFound this in OpenLayers.Handler.Feature, where the \"moveLayerToTop\" feels like the culprit... Will try to overcome it, but if someone knows it to be impossible, please let me know! </p>\n\n<pre><code>/**\n * Method: activate \n * Turn on the handler.  Returns false if the handler was already active.\n *\n * Returns:\n * {Boolean}\n */\nactivate: function() {\n    var activated = false;\n    if(OpenLayers.Handler.prototype.activate.apply(this, arguments)) {\n        this.moveLayerToTop();\n        this.map.events.on({\n            \"removelayer\": this.handleMapEvents,\n            \"changelayer\": this.handleMapEvents,\n            scope: this\n        });\n        activated = true;\n    }\n    return activated;\n},\n</code></pre>\n",
            "last_activity_date": 1347983143,
            "question_id": 4728852,
            "score": 12,
            "tags": [
                "javascript",
                "openlayers"
            ],
            "title": "Forcing an OpenLayers Markers layer to draw on top, and having selectable layers beneath"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>In FireFox and Internet Explorer you can listen for the after print event.</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/window.onafterprint\">https://developer.mozilla.org/en-US/docs/Web/API/window.onafterprint</a></p>\n\n<pre><code>window.onafterprint = function(){\n   console.log(\"Printing completed...\");\n}\n</code></pre>\n\n<p>It may be possible to use window.matchMedia to get this functiionality in other browsers.</p>\n\n<pre><code>(function() {\n\n    var beforePrint = function() {\n        console.log('Functionality to run before printing.');\n    };\n\n    var afterPrint = function() {\n        console.log('Functionality to run after printing');\n    };\n\n    if (window.matchMedia) {\n        var mediaQueryList = window.matchMedia('print');\n        mediaQueryList.addListener(function(mql) {\n            if (mql.matches) {\n                beforePrint();\n            } else {\n                afterPrint();\n            }\n        });\n    }\n\n    window.onbeforeprint = beforePrint;\n    window.onafterprint = afterPrint;\n\n}());\n</code></pre>\n\n<p>Source: <a href=\"http://tjvantoll.com/2012/06/15/detecting-print-requests-with-javascript/\">http://tjvantoll.com/2012/06/15/detecting-print-requests-with-javascript/</a></p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>See <a href=\"http://stackoverflow.com/a/15662720/687315\">http://stackoverflow.com/a/15662720/687315</a>. As a workaround, you can listen for the <code>afterPrint</code> event on the window (Firefox and IE) and listen for mouse movement on the document (indicating that the user has closed the print dialog and returned to the page) after the <code>window.mediaMatch</code> API indicates that the media no longer matches \"print\" (Firefox and Chrome).</p>\n\n<p>Keep in mind that the user may or may not have actually printed the document. Also, if you call <code>window.print()</code> too often in Chrome, the user may not have even been prompted to print.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can detect when window.print() is finished simply by putting it in another function</p>\n\n<pre><code>//function to call if you want to print\nvar onPrintFinished=function(printed){console.log(\"do something...\");}\n\n//print command\nonPrintFinished(window.print());\n</code></pre>\n\n<p>tested in Firefox,Google chrome,IE</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>On chrome (V.35.0.1916.153 m) Try this:</p>\n\n<pre><code>function loadPrint() {\n    window.print();\n    setTimeout(function () { window.close(); }, 100);\n}\n</code></pre>\n\n<p>Works great for me. It will close window after user finished working on printing dialog. </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Print in new window with w = window.open(url, '_blank') and try w.focus();w.close(); and detect when page is closed. Works in all browsers.</p>\n\n<pre><code>w = window.open(url, '_blank');\nw.onunload = function(){\n console.log('closed!');\n}\nw.focus();\nw.print();\nw.close();\n</code></pre>\n\n<p>Window close after finish print.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In my application, I tried to print out a voucher page for user, I used:</p>\n\n<pre><code>  var htm =\"&lt;div&gt;Voucher Details&lt;/div&gt;\";\n  $('#divprint').html(htm);\n  window.setTimeout('window.print()',2000);\n</code></pre>\n\n<p>'<code>divprint</code>' is a <code>div</code> in my page which store information about the voucher.</p>\n\n<p>It works, and the print page pops up. But I want to further proceed the application once user\nclick '<code>print</code>' or '<code>close</code>' the pop up window.</p>\n\n<p>for example, I'd like to redirect user to another page after pop up window is closed:</p>\n\n<pre><code>window.application.directtoantherpage();//a function which direct user to other page\n</code></pre>\n\n<p>How to determine the pop up print window is closed or print is finished?</p>\n",
            "last_activity_date": 1403550409,
            "question_id": 18325025,
            "score": 11,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "how to detect window.print() finish"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You can create your own input type=\"path\" by creating an input directive with custom logic if the type attribute is set to \"path\".</p>\n\n<p>I've created a simple example that simply replaces <code>\\</code> with <code>/</code>. The directive looks like this:</p>\n\n<pre><code>module.directive('input', function() {\n    return {\n        restrict: 'E',\n        require: 'ngModel',\n        link: function (scope, element, attr, ngModel) {\n          if (attr.type !== 'path') return;\n\n          // Override the input event and add custom 'path' logic\n          element.unbind('input');\n          element.bind('input', function () {\n            var path = this.value.replace(/\\\\/g, '/');\n\n            scope.$apply(function () {\n              ngModel.$setViewValue(path);\n            });\n          });\n        }\n    };\n});\n</code></pre>\n\n<p><kbd><a href=\"http://plnkr.co/edit/Zgi8Zw8oaQiSO6CvJMGY?p=preview\">Example</a></kbd></p>\n\n<p><strong>Update</strong>: Changed <code>on</code>, <code>off</code> to <code>bind</code>, <code>unbind</code> to remove jQuery dependency. Example updated.</p>\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>I'm new to AngularJS and would like to create a custom input type similar to the way AngularJS implements \"email\", for example.</p>\n\n<pre><code>&lt;input type=\"email\" ng-model=\"user.email\" /&gt;\n</code></pre>\n\n<p>What I would like to create is an input type like this:</p>\n\n<pre><code>&lt;input type=\"path\" ng-model=\"page.path\" /&gt;\n</code></pre>\n\n<p>Any ideas on how this can be accomplished? So far, I've only been able to figure out how to implement custom directives where 'path' is the name of the tag, attribute or class.  </p>\n\n<p>For example, I can get this to work but it is <strong>inconsistent</strong> with the other form fields and I'd really like them to look the same.</p>\n\n<pre><code>&lt;input type=\"text\" ng-model=\"page.path\" path /&gt;\n</code></pre>\n\n\n\n<pre><code>app.directive('path', function() {\n  return {\n    require: 'ngModel',\n    link: function(scope, elm, attrs, ctrl) { ... }\n  };\n});\n</code></pre>\n",
            "last_activity_date": 1410037446,
            "question_id": 14736469,
            "score": 11,
            "tags": [
                "javascript",
                "angularjs",
                "angularjs-directive"
            ],
            "title": "How to create a custom input type?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I'm sorry to say this is not possible in iOS. According to <a href=\"http://developer.apple.com/library/safari/#documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/AudioandVideoTagBasics/AudioandVideoTagBasics.html\">Apple's documentation</a>, </p>\n\n<blockquote>\n  <p>\"...embedded media cannot be played automatically in Safari on iOS - the\n  user always initiates playback.\"</p>\n</blockquote>\n\n<p>The restriction carries over to WIFI connectivity, which may change in the future as it shouldn't be subject to this rule, though I bet for consistency on the device, behavior will remain as is.</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>You can use the <a href=\"http://code.google.com/apis/youtube/iframe_api_reference.html\" rel=\"nofollow\">YouTube iFrame API</a> on iOS.</p>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>Beginning in iOS 4, <code>UIWebView</code> has the <code>mediaPlaybackRequiresUserAction</code> property. I can\u2019t tell if you\u2019re implementing this on the Web or in a native app, but setting that to <code>NO</code> in a native app should allow auto play to work.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>This piece of code works great in DESKTOP browsers (code courtesy of @Rob-W), click the thumbnail and the adjacent video will start playing, using YouTube's API.</p>\n\n<p>HTML\n</p>\n\n<pre><code>&lt;div id=\"tabs2\"&gt;\n    &lt;div&gt;\n    &lt;img class='thumb' src='http://i2.cdnds.net/11/34/odd_alan_partridge_bio_cover.jpg'&gt;\n    &lt;iframe id=\"frame1\" width=\"640\" height=\"390\" frameborder=\"0\" title=\"YouTube video player\"type=\"text/html\"src=\"http://www.youtube.com/embed/u1zgFlCw8Aw?enablejsapi=1\"&gt;&lt;/iframe&gt;\n    &lt;/div&gt;\n\n    &lt;div&gt;\n        &lt;img class='thumb' src='http://i2.cdnds.net/11/34/odd_alan_partridge_bio_cover.jpg'&gt;\n   &lt;iframe id=\"frame2\" width=\"640\" height=\"390\" frameborder=\"0\" title=\"YouTube video player\"type=\"text/html\"src=\"http://www.youtube.com/embed/u1zgFlCw8Aw?enablejsapi=1\"&gt;&lt;/iframe&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS\n</p>\n\n<pre><code>#tabs2 div {\n    position: relative;\n}\n/* For security reasons, an element cannor be placed over a frame */\n/*.thumb {\n    position: absolute;\n}*/    \n.play {\n    border: 3px solid red;\n}\n</code></pre>\n\n<p>JS\n</p>\n\n<pre><code>function getFrameID(id) {\n    var elem = document.getElementById(id);\n    if (elem) {\n        if (/^iframe$/i.test(elem.tagName)) return id; //Frame, OK\n        // else: Look for frame\n        var elems = elem.getElementsByTagName(\"iframe\");\n        if (!elems.length) return null; //No iframe found, FAILURE\n        for (var i = 0; i &lt; elems.length; i++) {\n            if (/^https?:\\/\\/(?:www\\.)?youtube(?:-nocookie)?\\.com(\\/|$)/i.test(elems[i].src)) break;\n        }\n        elem = elems[i]; //The only, or the best iFrame\n        if (elem.id) return elem.id; //Existing ID, return it\n        // else: Create a new ID\n        do { //Keep postfixing `-frame` until the ID is unique\n            id += \"-frame\";\n        } while (document.getElementById(id));\n        elem.id = id;\n        return id;\n    }\n    // If no element, return null.\n    return null;\n}\n\n// Define YT_ready function.\nvar YT_ready = (function() {\n    var onReady_funcs = [],\n        api_isReady = false;\n/* @param func function     Function to execute on ready\n         * @param func Boolean      If true, all qeued functions are executed\n         * @param b_before Boolean  If true, the func will added to the first\n                                     position in the queue*/\n    return function(func, b_before) {\n        if (func === true) {\n            api_isReady = true;\n            for (var i = 0; i &lt; onReady_funcs.length; i++) {\n                // Removes the first func from the array, and execute func\n                onReady_funcs.shift()();\n            }\n        }\n        else if (typeof func == \"function\") {\n            if (api_isReady) func();\n            else onReady_funcs[b_before ? \"unshift\" : \"push\"](func);\n        }\n    }\n})();\n// This function will be called when the API is fully loaded\n\nfunction onYouTubePlayerAPIReady() {\n    YT_ready(true)\n}\n\nvar players = {};\n//Define a player storage object, to enable later function calls,\n//  without having to create a new class instance again.\nYT_ready(function() {\n    $(\".thumb + iframe[id]\").each(function() {\n        var identifier = this.id;\n        var frameID = getFrameID(identifier);\n        if (frameID) { //If the frame exists\n            players[frameID] = new YT.Player(frameID, {\n                events: {\n                    \"onReady\": createYTEvent(frameID, identifier)\n                }\n            });\n        }\n    });\n});\n\n// Returns a function to enable multiple events\nfunction createYTEvent(frameID, identifier) {\n    return function (event) {\n        var player = players[frameID]; // player object\n        var the_div = $('#'+identifier).parent();\n        the_div.children('.thumb').click(function() {\n            var $this = $(this);\n            $this.fadeOut().next().addClass('play');\n            if ($this.next().hasClass('play')) {\n                player.playVideo();\n            }\n        });\n    }\n}\n// Load YouTube Frame API\n(function(){ //Closure, to not leak to the scope\n  var s = document.createElement(\"script\");\n  s.src = \"http://www.youtube.com/player_api\"; /* Load Player API*/\n  var before = document.getElementsByTagName(\"script\")[0];\n  before.parentNode.insertBefore(s, before);\n})();\n</code></pre>\n\n<p><kbd><a href=\"http://jsfiddle.net/KtbYR/5/\" rel=\"nofollow\">JSFiddle</a></kbd></p>\n\n<p>The problem is that it fails to play on iOS devices (because of the lack of Flash player, I think, it just hangs).</p>\n\n<p>I can force it to play by tapping the video once more, which prompts it to play using QuickTime.</p>\n\n<p>But how do I get it to play with QuickTime automatically?</p>\n",
            "last_activity_date": 1383150912,
            "question_id": 8972726,
            "score": 11,
            "tags": [
                "javascript",
                "ios",
                "youtube-api"
            ],
            "title": "YouTube API not working with iPad / iPhone / non-Flash device"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>with a bit of googleing, you will see that<code>setInterval</code> and <code>settimeout</code> both will not execute the code at the exact specified time you tell it. with <code>setInterval(f,1000);</code> it will wait AT LEAST 1000MS before it executes, it will NOT wait exactly 1000MS. Other processes are also waiting for their turn to use the CPU, which causes delays. If you need an accurate timer that times at 1 second. I would use a shorter interval, like 50MS and compare it to the start time. I wouldnt go under 50MS though because browsers have a minimum interval</p>\n\n<p>here are a few references:</p>\n\n<p>\"In order to understand how the timers work internally there's one important concept that needs to be explored: timer delay is not guaranteed. Since all JavaScript in a browser executes on a single thread asynchronous events (such as mouse clicks and timers) are only run when there's been an opening in the execution. This is best demonstrated with a diagram, like in the following:\" taken from: <a href=\"http://css.dzone.com/news/how-javascript-timers-work\" rel=\"nofollow\">http://css.dzone.com/news/how-javascript-timers-work</a></p>\n\n<p>\"Chrome and Chromium provide an interval that averages just over 41 milliseconds, enough of a difference for the second clock to be visibly slower in well under a minute. Safari comes in at just under 41ms, performing better than Chrome, but still not great. I took these readings under Windows XP, but Chrome actually performed worse under Windows 7 where the interval averaged around 46ms.\" taken from:\n<a href=\"http://www.goat1000.com/2011/03/23/how-accurate-is-window.setinterval.html\" rel=\"nofollow\">http://www.goat1000.com/2011/03/23/how-accurate-is-window.setinterval.html</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I don't see a drift nearly as large as your script is reporting:<br>\n<a href=\"http://jsfiddle.net/hqmLg/1/\" rel=\"nofollow\">http://jsfiddle.net/hqmLg/1/</a></p>\n\n<p>I'm leaving that script running. Right now (Chrome, Win 7) I see:</p>\n\n<blockquote>\n  <p>240 calls in 240.005s is 0.99979 calls/second</p>\n</blockquote>\n\n<p>Indeed, I've seen the drift go up to .007s and then down to .003s. I think your measurement technique is flawed.</p>\n\n<p>In Firefox I see it drift even more strongly (+/- 8ms either direction) and then compensate in the next run. Most of the time I'm seeing \"1.000000 calls/second\" in Firefox.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think I may have figured out a solution.  I figured, if you can measure it you can compensate for it, right?</p>\n\n<p><a href=\"http://jsfiddle.net/zryNf/9/\">http://jsfiddle.net/zryNf/9/</a></p>\n\n<pre><code>var start;\nvar nextAt;\n\nvar f = function() {\n    if (!start) {\n        start = new Date().getTime();\n        nextAt = start;\n    }\n    nextAt += 1000;\n\n    var drift = (new Date().getTime() - start) % 1000;    \n    $('&lt;li&gt;').text(drift + \"ms\").appendTo('#results');\n\n    setTimeout(f, nextAt - new Date().getTime());\n};\n\nf();\n</code></pre>\n\n<p>result varies a bit but here's a recent run:</p>\n\n<pre><code>0ms\n7ms\n2ms\n1ms\n1ms\n1ms\n2ms\n1ms\n1ms\n1ms\n</code></pre>\n\n<p>So if it gets called 1ms, 2ms or even 10ms later than it should the next call is scheduled to compensate for that.  As long as inaccuracy is only per call, but the clock should never lose time, then this should work well.</p>\n\n<hr>\n\n<p>And now I wrapped this up a global <code>accurateInterval</code> function which is a near drop in replacement for <code>setInterval</code>.  <a href=\"https://gist.github.com/1d99b3cd81d610ac7351\">https://gist.github.com/1d99b3cd81d610ac7351</a></p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>Here's another autocorrecting interval.  The interval is set to a shorter time period and then it waits until it's at least a second later to fire.  It won't always fire exactly 1000ms later (seems to range from 0-6ms delay), but it autocorrects and won't drift.</p>\n\n<p><strong>EDIT:</strong>\nUpdated to use recalling <code>setTimeout</code> instead of <code>setInterval</code> otherwise it may do something odd after 1000 or so iterations.</p>\n\n<pre><code>var start, tick = 0;\nvar f = function() {\n    if (!start) start = new Date().getTime();\n    var now = new Date().getTime();\n    if (now &lt; start + tick*1000) {\n        setTimeout(f, 0);\n    } else {\n        tick++;\n        var diff = now - start;\n        var drift = diff % 1000;\n        $('&lt;li&gt;').text(drift + \"ms\").appendTo('#results');\n        setTimeout(f, 990);\n    }\n};\n\nsetTimeout(f, 990);\n</code></pre>\n\n<h2><a href=\"http://jsfiddle.net/mVChr/EEnLY/2/\" rel=\"nofollow\">Run demo</a></h2>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>It seems that when I <code>setInterval</code> for 1000ms, it actually fires the function every 1001ms or so.  This results in a slow temporal drift the longer its running.</p>\n\n<pre><code>var start;\nvar f = function() {\n    if (!start) start = new Date().getTime();\n    var diff = new Date().getTime() - start;\n    var drift = diff % 1000;\n    $('&lt;li&gt;').text(drift + \"ms\").appendTo('#results');\n};\n\nsetInterval(f, 1000);\n</code></pre>\n\n<p>When run this shows the inaccuracy immediately.</p>\n\n<ul>\n<li>0ms</li>\n<li>1ms</li>\n<li>2ms</li>\n<li>3ms</li>\n<li>4ms</li>\n<li>5ms</li>\n<li>5ms</li>\n<li>7ms</li>\n<li>8ms</li>\n<li>9ms</li>\n<li>9ms</li>\n<li>10ms</li>\n</ul>\n\n<p>See it for yourself: <a href=\"http://jsfiddle.net/zryNf/\">http://jsfiddle.net/zryNf/</a></p>\n\n<p>So is there a more accurate way to keep time? or a way to make <code>setInterval</code> behave with more accuracy?</p>\n",
            "last_activity_date": 1321567185,
            "question_id": 8173580,
            "score": 11,
            "tags": [
                "javascript"
            ],
            "title": "setInterval timing slowly drifts away from staying accurate"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>why can't u do this?</p>\n\n<pre><code>&lt;div id=\"x\"&gt;\n   &lt;div id=\"button1\" onclick=\"clickHandler1()\"&gt;This turns green&lt;/div&gt;\n   &lt;div id=\"button2\" onclick=\"clickHandler2()\"&gt;This turns blue&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -7
                },
                {
                    "body": "<p><code>event</code> is an Event object which is created automatically when an event is fired. Note that you don't have to call it <code>event</code> (I tend to call it simply <code>e</code>). That Event object has a number of properties which describe the event it represents. In this case, the one you're interested in would be <code>target</code>, which shows the element that was the source of the event:</p>\n\n<pre><code>function clickHandler(e) {\n    var target = e.target;\n}\n</code></pre>\n\n<p>Here's a <a href=\"http://jsfiddle.net/LGmEp/6/\">working example</a>.</p>\n\n<p>Unfortunately, it's never quite that simple. While the specification says it should be <code>event.target</code>, Internet Explorer likes to be different, and chooses to use <code>event.srcElement</code>, so you probably want to put in a check to make sure <code>event.target</code> exists! For example:</p>\n\n<pre><code>function clickHandler(e) {\n    var target = (e.target) ? e.target : e.srcElement;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>I usually just name the clicked element in the argument list of the call to the click handler, something like (untested) this:</p>\n\n<pre><code>&lt;div id=\"x\"&gt;\n   &lt;div id=\"button1\" onclick=\"handle_click_event( this, 'green' )\"&gt;This turns green&lt;/div&gt;\n   &lt;div id=\"button2\" onclick=\"handle_click_event( this, 'blue' )\"&gt;This turns blue&lt;/div&gt;\n&lt;/div&gt;\n\nfunction handle_click_event ( obj, new_color ) {\n  obj.style.backgroundColor = new_color;\n}\n</code></pre>\n\n<p>Could that approach work for you?</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>My HTML:</p>\n\n<pre><code>&lt;div id=\"x\" onclick=\"clickHandler(event)\"&gt;\n   &lt;div id=\"button1\"&gt;This turns green&lt;/div&gt;\n   &lt;div id=\"button2\"&gt;This turns blue&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>So first of all, why am I supposed to be passing \"event\" into the click handler and is event some kind of system keyword? \nAlso, since the click handler is identified on the container div, how do I know which button has been clicked?</p>\n",
            "last_activity_date": 1319206677,
            "question_id": 7846268,
            "score": 11,
            "tags": [
                "javascript",
                "html",
                "event-handling",
                "onclick"
            ],
            "title": "Javascript onclick event handler - how do I get the reference to the clicked item?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The V8 sort is not stable, unfortunately.  I'll see if I can dig up the Chromium bug about this.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>The ECMAScript standard <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/sort#Description\"><em>does not</em> guarantee <code>Array.sort</code> is a stable sort</a>.  Chrome (the V8 engine) uses <a href=\"http://v8.googlecode.com/svn/trunk/src/array.js\">in-place QuickSort internally</a> (for arrays of size \u2265 22, else insertion sort) which is fast but <a href=\"http://en.wikipedia.org/wiki/Quicksort\">not stable</a>.</p>\n\n<p>To fix it, make <code>customSort</code> compare with <code>.b</code> as well, eliminating the need of stability of the sorting algorithm.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>May be you know it already but you can use an array to sort on multiple columns and avoid this bug:</p>\n\n<pre><code>var customSort = function(a,b) {\n    return [a.a, a.b] &gt; [b.a, b.b] ? 1:-1;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I just got a report that some code I wrote is breaking on Chrome. I've tracked it down to a custom method I'm using to sort an array of objects. I am really tempted to call this a bug, but I'm not sure it is.</p>\n\n<p>In all other browsers when you sort an array of objects, if two objects resolve to the same value their order in the updated array is left unchanged. In Chrome, their order is seemingly randomized. Run the code below in Chrome and any other browser you want. You should see what I mean.</p>\n\n<p>I have two questions: </p>\n\n<p>First, was I right in assuming that when your custom sorter returns <code>0</code> that the two compared items <em>should</em> remain in their original order (I have a feeling I was wrong). </p>\n\n<p>Second, is there any good way of fixing this? The only thing I can think of is adding an auto-incrementing number as an attribute to each member of the array before sorting, and then using that value when two items <code>sort</code> is comparing resolve to the same value. In other words, never return 0.</p>\n\n<p>Here's the sample code:</p>\n\n<pre><code>var x = [\n{'a':2,'b':1},\n{'a':1,'b':2},\n{'a':1,'b':3},\n{'a':1,'b':4},\n{'a':1,'b':5},\n{'a':1,'b':6},\n{'a':0,'b':7},\n]\n\nvar customSort = function(a,b) {\n    if (a.a === b.a) return 0;\n    if (a.a &gt; b.a) return 1;\n    return -1;\n};\n\nconsole.log(\"before sorting\");\nfor (var i = 0; i &lt; x.length; i++) {\n    console.log(x[i].b);\n}\nx.sort(customSort);\n\nconsole.log(\"after sorting\");\nfor (var i = 0; i &lt; x.length; i++) {\n    console.log(x[i].b);\n}\n</code></pre>\n\n<p>In all other browsers, what I see is that only the first member and the last member of the array get moved (I see <code>7,2,3,4,5,6,1</code>) but in Chrome the inner numbers are seemingly randomized.</p>\n\n<p>[EDIT] Thank you very much to everyone who answered. I guess that 'inconsistent' doesn't necessary mean it's a bug. Also, I just wanted to point out that my <code>b</code> property was just an example. In fact, I'm sorting some relatively wide objects on any one of about 20 keys according to user input. Even keeping track of what the user last sorted by still won't solve the problem of the randomness I'm seeing. My work-around will probably be a close variation of this (new code is highlighted):</p>\n\n<pre><code>var x = [\n{'a':2,'b':1},\n{'a':1,'b':2},\n{'a':1,'b':3},\n{'a':1,'b':4},\n{'a':1,'b':5},\n{'a':1,'b':6},\n{'a':0,'b':7},\n];\nvar i;\n\nvar customSort = function(a,b) {\n    if (a.a === b.a) return a.customSortKey &gt; b.customSortKey ? 1 : -1; /*NEW CODE*/\n    if (a.a &gt; b.a) return 1;\n    return -1;\n};\n\nconsole.log(\"before sorting\");\nfor (i = 0; i &lt; x.length; i++) {console.log(x[i].b);}\n\nfor (i = 0; i &lt; x.length; i++) {                      /*NEW CODE*/\n    x[i].customSortKey = i;                           /*NEW CODE*/\n}                                                     /*NEW CODE*/\nx.sort(customSort);\n\nconsole.log(\"after sorting\");\nfor (i = 0; i &lt; x.length; i++) {console.log(x[i].b);}\n</code></pre>\n\n<p>EDIT: According to the <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\">ECMA spec</a>, when two objects are determined to be equal in a custom sort, JavaScript is <strong>not</strong> required to leave those two objects in the same order. Both Chrome and Opera are the only two major browsers to choose to have non-stable sorts, but others include Netscape 8&amp;9, Kazehakaze, IceApe and a few others. The Chromium team has marked this bug as \"Working as intended\" so it will not be \"fixed\". If you need your arrays to stay in their original order when values are equal, you will need to employ some additional mechanism (such as the one above). Returning <code>0</code> when sorting objects is effectively meaningless, so don't bother.</p>\n",
            "last_activity_date": 1361529707,
            "question_id": 3195941,
            "score": 11,
            "tags": [
                "javascript",
                "sorting",
                "google-chrome"
            ],
            "title": "Sorting an array of objects in Chrome"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You're on the right track, I think.</p>\n\n<p>It looks like you need to get from Script::Compile to Compiler::Compile, which will lead you to the code generators (codegen*.cc and .h).</p>\n\n<p>All of this to say that, looking at codegen-ia32.cc, if you define ENABLE_DISASSEMBLER\nwhen you build, your disassembly should get printed, I think.</p>\n\n<p>Of course, all of this is just from a quick browse of an old copy of the source I have here, so YMMV, but I think this should work.</p>\n\n<p>(Looking at your post again, I see you're looking for the machine language, not the assembler -- I'm not sure, but you might have to modify the logic if you want the assembled code output rather than its disassembly)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I don't know how to invoke the disassembler from C++ code, but there is a quick-and-dirty way to get a disassembly from the shell.</p>\n\n<p>First, compile v8 with disassembler support:</p>\n\n<pre><code>scons [your v8 build options here] disassembler=on sample=shell\n</code></pre>\n\n<p>Now you can invoke the shell with the \"--print_code\" option:</p>\n\n<pre><code>./shell --print_code hello.js\n</code></pre>\n\n<p>Which should give you something like this:</p>\n\n<pre><code>--- Raw source ---\nprint(\"hello world\");\n\n--- Code ---\nkind = FUNCTION\nInstructions (size = 134)\n0x2ad0a77ceea0     0  55             push rbp\n0x2ad0a77ceea1     1  488bec         REX.W movq rbp,rsp\n0x2ad0a77ceea4     4  56             push rsi\n0x2ad0a77ceea5     5  57             push rdi\n0x2ad0a77ceea6     6  49ba59c13da9d02a0000 REX.W movq r10,0x2ad0a93dc159    ;; object: 0xa93dc159 &lt;undefined&gt;\n0x2ad0a77ceeb0    16  4952           REX.W push r10\n0x2ad0a77ceeb2    18  49ba688b700000000000 REX.W movq r10,0x708b68\n0x2ad0a77ceebc    28  493b22         REX.W cmpq rsp,[r10]\n0x2ad0a77ceebf    31  0f824e000000   jc 115  (0x2ad0a77cef13)\n0x2ad0a77ceec5    37  488b462f       REX.W movq rax,[rsi+0x2f]\n0x2ad0a77ceec9    41  4883ec18       REX.W subq rsp,0xlx\n0x2ad0a77ceecd    45  49ba094b3ea9d02a0000 REX.W movq r10,0x2ad0a93e4b09    ;; object: 0xa93e4b09 &lt;String[5]: print&gt;\n0x2ad0a77ceed7    55  4c8955e0       REX.W movq [rbp-0x20],r10\n0x2ad0a77ceedb    59  488945d8       REX.W movq [rbp-0x28],rax\n0x2ad0a77ceedf    63  49ba014d3ea9d02a0000 REX.W movq r10,0x2ad0a93e4d01    ;; object: 0xa93e4d01 &lt;String[11]: hello world&gt;\n0x2ad0a77ceee9    73  4c8955d0       REX.W movq [rbp-0x30],r10\n0x2ad0a77ceeed    77  49baa06c7ba7d02a0000 REX.W movq r10,0x2ad0a77b6ca0    ;; debug: statement 0\n\t\t                         ;; code: contextual, CALL_IC, UNINITIALIZED, argc = 1\n0x2ad0a77ceef7    87  49ffd2         REX.W call r10\n0x2ad0a77ceefa    90  488b75f8       REX.W movq rsi,[rbp-0x8]\n0x2ad0a77ceefe    94  4883c408       REX.W addq rsp,0xlx\n0x2ad0a77cef02    98  488945e8       REX.W movq [rbp-0x18],rax\n0x2ad0a77cef06   102  488be5         REX.W movq rsp,rbp      ;; js return\n0x2ad0a77cef09   105  5d             pop rbp\n0x2ad0a77cef0a   106  c20800         ret 0x8\n0x2ad0a77cef0d   109  cc             int3\n0x2ad0a77cef0e   110  cc             int3\n0x2ad0a77cef0f   111  cc             int3\n0x2ad0a77cef10   112  cc             int3\n0x2ad0a77cef11   113  cc             int3\n0x2ad0a77cef12   114  cc             int3\n0x2ad0a77cef13   115  49ba60657ba7d02a0000 REX.W movq r10,0x2ad0a77b6560    ;; code: STUB, StackCheck, minor: 0\n0x2ad0a77cef1d   125  49ffd2         REX.W call r10\n0x2ad0a77cef20   128  488b7df0       REX.W movq rdi,[rbp-0x10]\n0x2ad0a77cef24   132  eb9f           jmp 37  (0x2ad0a77ceec5)\n\nRelocInfo (size = 10)\n0x2ad0a77ceea8  embedded object  (0xa93dc159 &lt;undefined&gt;)\n0x2ad0a77ceecf  embedded object  (0xa93e4b09 &lt;String[5]: print&gt;)\n0x2ad0a77ceee1  embedded object  (0xa93e4d01 &lt;String[11]: hello world&gt;)\n0x2ad0a77ceeed  statement position  (0)\n0x2ad0a77ceeef  code target (context) (CALL_IC)  (0x2ad0a77b6ca0)\n0x2ad0a77cef06  js return\n0x2ad0a77cef15  code target (STUB)  (0x2ad0a77b6560)\n\nhello world\n</code></pre>\n\n<p>Your output will vary, of course. The above is from the v8 trunk compiled for Linux x64.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You need to build v8 with disassembler support.</p>\n\n<p>Download v8 source code.</p>\n\n<pre><code>git clone https://chromium.googlesource.com/v8/v8.git\n</code></pre>\n\n<p>Build with disassembler support.</p>\n\n<pre><code>make dependencies\nmake ia32.release objectprint=on disassembler=on\n</code></pre>\n\n<p>Call d8 (v8 shell) using certain flags, depending on what you want.</p>\n\n<pre><code>out/ia32.release/d8 --code-comments --print-code &lt;app.js&gt;\n</code></pre>\n\n<p>For reference:</p>\n\n<ul>\n<li><em>--code-comments</em>: includes code comments.</li>\n<li><em>--print-code</em>: prints out code to <em>stdout</em>.</li>\n<li><em>--print-code-stubs</em>: prints code stubs.</li>\n<li><em>--print-opt-code</em>: prints optimized code.</li>\n<li><em>--trace-hydrogen</em>: prints IR (intermediate representation) code to hydrogen.cfg. This file can be opened with <a href=\"https://java.net/projects/c1visualizer/downloads\" rel=\"nofollow\">Java's C1Visualizer</a>.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Does anybody know how I can see the actual machine code that <a href=\"http://code.google.com/p/v8/\">v8</a> generates from Javascript? I've gotten as far as <code>Script::Compile()</code> in <code>src/api.cc</code> but I can't figure out where to go from there.</p>\n",
            "last_activity_date": 1418751998,
            "question_id": 277423,
            "score": 11,
            "tags": [
                "javascript",
                "code-generation",
                "v8"
            ],
            "title": "How can I see the machine code generated by v8?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I have 30 in one form one controller no problem. use the same concept if you need it on ng-repeat.</p>\n\n<pre><code> &lt;label&gt;First Date&lt;/label&gt;  \n    &lt;div class=\"input-group\"&gt;\n     &lt;input type=\"text\" class=\"form-control\" datepicker-popup=\"{{format}}\" \n            name=\"dt\" ng-model=\"formData.dt\" is-open=\"datepickers.dt\" \n            datepicker-options=\"dateOptions\" ng-required=\"true\" \n            close-text=\"Close\" /&gt;\n      &lt;span class=\"input-group-btn\"&gt;\n        &lt;button class=\"btn btn-default\" ng-click=\"open($event,'dt')\"&gt;\n            &lt;i class=\"glyphicon glyphicon-calendar\"&gt;&lt;/i&gt;&lt;/button&gt;\n      &lt;/span&gt;\n    &lt;/div&gt;      \n\n &lt;label&gt;Second Date&lt;/label&gt;  \n    &lt;div class=\"input-group\"&gt;\n     &lt;input type=\"text\" class=\"form-control\" datepicker-popup=\"{{format}}\" \n            name=\"dtSecond\" ng-model=\"formData.dtSecond\" \n            is-open=\"datepickers.dtSecond\" datepicker-options=\"dateOptions\" \n            ng-required=\"true\" close-text=\"Close\" /&gt;\n      &lt;span class=\"input-group-btn\"&gt;\n        &lt;button class=\"btn btn-default\" ng-click=\"open($event,'dtSecond')\"&gt;\n            &lt;i class=\"glyphicon glyphicon-calendar\"&gt;&lt;/i&gt;&lt;/button&gt;\n      &lt;/span&gt;\n    &lt;/div&gt;     \n\nmyApp.controller('DatePickrCntrl', function ($scope) {\n      $scope.datepickers = {\n        dt: false,\n        dtSecond: false\n      }\n      $scope.today = function() {\n        $scope.formData.dt = new Date();\n\n        // ***** Q1  *****\n        $scope.formData.dtSecond = new Date();\n      };\n      $scope.today();\n\n      $scope.showWeeks = true;\n      $scope.toggleWeeks = function () {\n        $scope.showWeeks = ! $scope.showWeeks;\n      };\n\n      $scope.clear = function () {\n        $scope.dt = null;\n      };\n\n      // Disable weekend selection\n      $scope.disabled = function(date, mode) {\n        return ( mode === 'day' &amp;&amp; ( date.getDay() === 0 || date.getDay() === 6 ) );\n      };\n\n      $scope.toggleMin = function() {\n        $scope.minDate = ( $scope.minDate ) ? null : new Date();\n      };\n      $scope.toggleMin();\n\n      $scope.open = function($event, which) {\n        $event.preventDefault();\n        $event.stopPropagation();\n\n        $scope.datepickers[which]= true;\n      };\n\n      $scope.dateOptions = {\n        'year-format': \"'yy'\",\n        'starting-day': 1\n      };\n\n      $scope.formats = ['dd-MMMM-yyyy', 'yyyy/MM/dd', 'shortDate'];\n      $scope.format = $scope.formats[0];\n\n});\n\n\n // ***** Q2 ***** somemodel can be just an array [1,2,3,4,5]\n &lt;div ng-repeat=\"o in somemodel\"&gt;\n &lt;label&gt;Date Label&lt;/label&gt;  \n    &lt;div class=\"input-group\"&gt;\n     &lt;input type=\"text\" class=\"form-control\" datepicker-popup=\"{{format}}\"\n            name=\"dt{{o}}\" ng-model=\"datepickers.data[o]\" \n            is-open=\"datepickers.isopen[o]\" datepicker-options=\"datepickers.option\" \n            ng-required=\"true\" close-text=\"Close\" /&gt;\n      &lt;span class=\"input-group-btn\"&gt;\n        &lt;button class=\"btn btn-default\" ng-click=\"open($event,o)\"&gt;\n            &lt;i class=\"glyphicon glyphicon-calendar\"&gt;&lt;/i&gt;&lt;/button&gt;\n      &lt;/span&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n\n\nmyApp.controller('DatePickrCntrl', function ($scope) {\n\n      $scope.datepickers = {\n        data: {},\n        options: {\n            'year-format': \"'yy'\",\n            'starting-day': 1\n        },\n        isopen: {}\n      }\n      $http.get(\"get/data/for/some/model\", function(result) {\n         $scope.somemodel = result;\n         for (var i = 0; i &lt; result.length; i++) {\n           $scope.datepickers.isopen[result] = false;\n           $scope.datepickers.data[result] = new Date(); //set default date.\n         }\n      });\n\n  // fill in rest of the function\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p><a href=\"http://stackoverflow.com/users/1655012/wayne\">wayne</a>'s answer is great. I would only add, that you can make the function 'open()' better:</p>\n\n<pre><code>$scope.open = function ($event, datePicker) {\n    $event.preventDefault();\n    $event.stopPropagation();\n\n    $scope.closeAll();\n    datePicker.opened = true;\n};\n</code></pre>\n\n<p>And then you have to use it like that:</p>\n\n<pre><code>ng-click=\"open($event, dateFrom)\"\n</code></pre>\n\n<p>Where <i>dateFrom</i> is your ng-model (i.e. you use <i>$scope.dateFrom</i>).</p>\n\n<p>EDIT: <code>$scope.closeAll();</code> is a function that closes all the datePickers. It can be written like that:</p>\n\n<pre><code>$scope.closeAll = function() {\n    $scope.dateFrom.opened = false;\n    $scope.dateTo.opened = false;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I'd prefer not to mix ng-model with UI info, for this is necessary to define an array to store if the datePicker is opened or not. </p>\n\n<p>Moreover I change the 'open' behaviour for a 'toggle', to allow close the datePicker with the button. </p>\n\n<p>Here is controller function:</p>\n\n<pre><code>$scope.toggleOpenDatePicker = function($event,datePicker) {\n   $event.preventDefault();\n   $event.stopPropagation();\n   $scope[datePicker] = !$scope[datePicker];\n};\n</code></pre>\n\n<p>Then It can be used as:</p>\n\n<pre><code>&lt;input type=\"text\" class=\"form-control\" ng-model=\"model.date1\" is-open=\"date1\" /&gt;\n   &lt;span class=\"input-group-btn\"&gt;\n      &lt;button type=\"button\" class=\"btn btn-default\" ng-click=\"toggleOpenDatePicker($event,'date1')\"&gt;&lt;i class=\"glyphicon glyphicon-calendar\"&gt;&lt;/i&gt;      \n      &lt;/button&gt;\n   &lt;/span&gt;\n</code></pre>\n\n<p>the $scope idea is borrow from here:</p>\n\n<p><a href=\"http://stackoverflow.com/a/21865712/2411379\">http://stackoverflow.com/a/21865712/2411379</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Simpler Solution. Requires only modding the HTML and can be used in a ng-repeat if you like. Just be creative with what you name the opened</p>\n\n<p>Stick this in your Controller:</p>\n\n<pre><code>$scope.calendar = {\n    opened: {},\n    dateFormat: 'MM/dd/yyyy',\n    dateOptions: {},\n    open: function($event, which) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        $scope.calendar.opened[which] = true;\n    } \n};\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div class=\"form-group row\"&gt;\n    &lt;div class=\"col-lg-6\"&gt;\n        &lt;label for=\"formDOB\"&gt;Date of Birth&lt;/label&gt;\n        &lt;p class=\"input-group\"&gt;\n          &lt;input type=\"text\" class=\"form-control\" datepicker-popup=\"{{calendar.dateFormat}}\" ng-model=\"record.birthDate\" is-open=\"calendar.opened.dob\" datepicker-options=\"calendar.dateOptions\" close-text=\"Close\" placeholder=\"Date of Birth\" /&gt;\n          &lt;span class=\"input-group-btn\"&gt;\n            &lt;button type=\"button\" class=\"btn btn-default\" ng-click=\"calendar.open($event, 'dob')\"&gt;&lt;i class=\"glyphicon glyphicon-calendar\"&gt;&lt;/i&gt;&lt;/button&gt;\n          &lt;/span&gt;\n        &lt;/p&gt;\n    &lt;/div&gt;\n    &lt;div class=\"col-lg-6\"&gt;\n        &lt;label for=\"formWinDate\"&gt;Win Date&lt;/label&gt;\n        &lt;p class=\"input-group\"&gt;\n          &lt;input type=\"text\" class=\"form-control\" datepicker-popup=\"{{calendar.dateFormat}}\" ng-model=\"record.winDate\" is-open=\"calendar.opened.win\" datepicker-options=\"calendar.dateOptions\" close-text=\"Close\" placeholder=\"Win DAte\" /&gt;\n          &lt;span class=\"input-group-btn\"&gt;\n            &lt;button type=\"button\" class=\"btn btn-default\" ng-click=\"calendar.open($event, 'win')\"&gt;&lt;i class=\"glyphicon glyphicon-calendar\"&gt;&lt;/i&gt;&lt;/button&gt;\n          &lt;/span&gt;\n        &lt;/p&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have a form where there is a need for me to have 2 or more date fields for different things. I tried the Angular UI Bootstrap which works fine when I have only 1 date field in the form. But it stops working if I have multiple date fields and I dont know the easier method to get this to work. </p>\n\n<p>This is my HTML sample:</p>\n\n<pre><code> &lt;label&gt;First Date&lt;/label&gt;  \n    &lt;div class=\"input-group\"&gt;\n     &lt;input type=\"text\" class=\"form-control\" datepicker-popup=\"{{format}}\" name=\"dt\" ng-model=\"formData.dt\" is-open=\"opened\" datepicker-options=\"dateOptions\" ng-required=\"true\" close-text=\"Close\" /&gt;\n      &lt;span class=\"input-group-btn\"&gt;\n        &lt;button class=\"btn btn-default\" ng-click=\"open($event)\"&gt;&lt;i class=\"glyphicon glyphicon-calendar\"&gt;&lt;/i&gt;&lt;/button&gt;\n      &lt;/span&gt;\n    &lt;/div&gt;      \n\n &lt;label&gt;Second Date&lt;/label&gt;  \n    &lt;div class=\"input-group\"&gt;\n     &lt;input type=\"text\" class=\"form-control\" datepicker-popup=\"{{format}}\" name=\"dtSecond\" ng-model=\"formData.dtSecond\" is-open=\"opened\" datepicker-options=\"dateOptions\" ng-required=\"true\" close-text=\"Close\" /&gt;\n      &lt;span class=\"input-group-btn\"&gt;\n        &lt;button class=\"btn btn-default\" ng-click=\"open($event)\"&gt;&lt;i class=\"glyphicon glyphicon-calendar\"&gt;&lt;/i&gt;&lt;/button&gt;\n      &lt;/span&gt;\n    &lt;/div&gt;     \n</code></pre>\n\n<p>My JS is: </p>\n\n<pre><code>myApp.controller('DatePickrCntrl', function ($scope) {\n\n      $scope.today = function() {\n        $scope.formData.dt = new Date();\n      };\n      $scope.today();\n\n      $scope.showWeeks = true;\n      $scope.toggleWeeks = function () {\n        $scope.showWeeks = ! $scope.showWeeks;\n      };\n\n      $scope.clear = function () {\n        $scope.dt = null;\n      };\n\n      // Disable weekend selection\n      $scope.disabled = function(date, mode) {\n        return ( mode === 'day' &amp;&amp; ( date.getDay() === 0 || date.getDay() === 6 ) );\n      };\n\n      $scope.toggleMin = function() {\n        $scope.minDate = ( $scope.minDate ) ? null : new Date();\n      };\n      $scope.toggleMin();\n\n      $scope.open = function($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n\n        $scope.opened = true;\n      };\n\n      $scope.dateOptions = {\n        'year-format': \"'yy'\",\n        'starting-day': 1\n      };\n\n      $scope.formats = ['dd-MMMM-yyyy', 'yyyy/MM/dd', 'shortDate'];\n      $scope.format = $scope.formats[0];\n\n});\n</code></pre>\n\n<p>I implemented based on the sample <a href=\"http://angular-ui.github.io/bootstrap/\">here</a>. The problem I have here is: </p>\n\n<p>1) When one of the date field is clicked, the pop-up datepicker is messed up and seems to show 2 datepicker in 1. </p>\n\n<p>2) When I remove <code>is-open=\"opened\"</code> attribute, the pop-up window seems to work fine. But without <code>is-open=\"opened\"</code>, the <code>ng-click=\"open($event)</code> for the button doesnt work.</p>\n\n<p>3) Since each of the date fields have different ng-models, I am unable to set default dates for any date fields except for the first one with <code>ng-model=\"formData.dt\"</code></p>\n\n<p><strong>The only long way to resolve this that I can think of is to separate the controller for each date field.</strong> </p>\n\n<p>I would like to know how others implement multiple date fields in 1 form itself when using Angular UI Bootstrap.</p>\n",
            "last_activity_date": 1406620188,
            "question_id": 22269964,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "angularjs",
                "twitter-bootstrap",
                "datepicker"
            ],
            "title": "How to use 2 or more Angular UI Bootstrap Datepicker in 1 Form?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You have to create an in memory canvas and then draw on this canvas the image :</p>\n\n<pre><code>var canvas = document.createElement('canvas');\nvar context = canvas.getContext('2d');\nvar img = document.getElementById('myimg');\ncontext.drawImage(img, 0, 0 );\nvar myData = context.getImageData(0, 0, img.width, img.height);\n</code></pre>\n\n<p>But this won't work if the image comes from another domain. This is a security restriction you can't get around if you have no control of the server (be careful that if you open your html file with file:// you'll have a lot of additional restrictions, use http://)</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>As already implied, canvas offers the only solution for creating ImageData objects.</p>\n\n<p>If you are really set against using the canvas element to load image data (perhaps we are talking lte IE8), you could always consider parsing the base64 image data using the src location of an image object</p>\n\n<p><a href=\"http://blog.calyptus.eu/seb/2009/05/png-parser-in-javascript/\">http://blog.calyptus.eu/seb/2009/05/png-parser-in-javascript/</a></p>\n\n<p>It's difficult, but if you must, could potentially parse images to an array this way.</p>\n\n<p><a href=\"https://github.com/devongovett/png.js/blob/master/png.js\">https://github.com/devongovett/png.js/blob/master/png.js</a> </p>\n\n<p>This shows you how to load the data with an xhr request and parse the png data. Internally it uses the canvas for some other things but the subset you are interested in is canvas free. You would need to follow a similar implementation for each image format you are interested in.</p>\n\n<p>I should mention that the image pixel reading limitations are identical in terms of security. You will never be able to read pixels that have come from a third party, with or without canvas. The XMLHTTPRequest is going to be bound to the governance of cross-domain policies. This prevents scripts from stealing third party content, which includes images that may contain sensitive user information.</p>\n\n<p>If you need to read images on a third party domain (that don't require authentication to view), you should run an image proxy server on your domain which allows you to request images on the same domain. If you need to go to the trouble of that, it might be easier to simply provide the image data as a json array in the first place.</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>Is it possible to get an ImageData Object from an image which is not on the canvas but somewhere else in the DOM tree as a normal <code>&lt;img&gt;</code> ?</p>\n\n<p>If yes, how?</p>\n",
            "last_activity_date": 1337992283,
            "question_id": 10754661,
            "score": 10,
            "tags": [
                "javascript",
                "html5",
                "canvas"
            ],
            "title": "JavaScript: getting ImageData without canvas"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You shouldn't make anything synchronous (not even AJAX) calls but instead simply put your code in the appropriate callback:</p>\n\n<pre><code>function loadSprite(src, callback) {\n    var sprite = new Image();\n    sprite.onload = callback;\n    sprite.src = src;\n}\n</code></pre>\n\n<p>Then use it like this:</p>\n\n<pre><code>loadSprite('sprites/sheet1.png', function() {\n    // code to be executed later\n});\n</code></pre>\n\n<p>If you want to pass additional arguments, you can do it like this:</p>\n\n<pre><code>sprite.onload = function() {\n    callback(whatever, args, you, have);\n};\n</code></pre>\n\n<hr>\n\n<p>If you want to load multiple elements and need to wait for all of them to finish, consider using the jQuery <a href=\"http://api.jquery.com/category/deferred-object/\">deferred</a> object:</p>\n\n<pre><code>function loadSprite(src) {\n    var deferred = $.Deferred();\n    var sprite = new Image();\n    sprite.onload = function() {\n        deferred.resolve();\n    };\n    sprite.src = src;\n    return deferred.promise();\n}\n</code></pre>\n\n<p>In the function loading the sprites, you do something like this:</p>\n\n<pre><code>var loaders = [];\nloaders.push(loadSprite('1.png'));\nloaders.push(loadSprite('2.png'));\nloaders.push(loadSprite('3.png'));\n$.when.apply(null, loaders).done(function() {\n    // callback when everything was loaded\n});\n</code></pre>\n\n<p><a href=\"http://api.jquery.com/jQuery.when/\">http://api.jquery.com/jQuery.when/</a></p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>This question is old, but there is a way to do this without requiring jquery, OR freezing the browser.</p>\n\n<p>In image1.onLoad, make it load image2. <br />\nIn image2.onLoad, make it load image3. <br />\nIn image3.onLoad, make it load image4. <br />\n.... <br />\nIn image<sub>n</sub>.onLoad make it load your main function.</p>\n\n<p>I'm not sure if this is the entirely BEST way to do it, but it's better than freezing the browser, at least. <br />\nYou are able to also load all of your audio files or whatever other resources you need, or any other javascript you need to run.</p>\n\n<p>Freezing the browser is not required</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've this problem with canvas\ni tried your solution but a best and simple way that works is:</p>\n\n<pre><code>function COLPOinitCanvas(imagesfile) {\n    COLPOcanvas = document.getElementById(\"COLPOcanvas\");\n    COLPOctx = COLPOcanvas.getContext(\"2d\");\n    var imageObj = new Image();\n    imageObj.src = imagesfile;\n    imageObj.onload = function () {\n        COLPOctx.drawImage(imageObj, 0, 0, COLPOcanvas.width, COLPOcanvas.height);\n    };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm developing a game using javascript + canvas. As the game loads, all images that will be used are being cached.</p>\n\n<p>Observing the resource timeline, I see that the following code triggers an asynchronous request:</p>\n\n<pre><code>var sprite = new Image();\nsprite.src = \"sprites/sheet1.png\";\n</code></pre>\n\n<p>The engine will keep executing, eventually beginning to draw and play the level. Images that are loaded after the first frame is painted might never appear due to clipping (i.e. not getting \"dirty\").</p>\n\n<p>So I tested the following:</p>\n\n<pre><code>console.log(\"begin\");\nvar sprite = new Image();\nsprite.onload = function() { console.log('loaded!'); };\nsprite.src = \"sprites/sheet1.png\";\nconsole.log(\"end\");\n</code></pre>\n\n<p>The resulting console outputs are\nbegin\nend\nloaded!</p>\n\n<p>I'm looking for a similar way to $.ajax with async: false to perform the loading. Can't figure out how... thanks in advance for you help!\nJ.</p>\n",
            "last_activity_date": 1416118127,
            "question_id": 8645143,
            "score": 10,
            "tags": [
                "javascript",
                "image",
                "asynchronous",
                "canvas",
                "load"
            ],
            "title": "Wait for image to be loaded before going on"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Create an event using the <a href=\"https://developer.mozilla.org/en/docs/Web/API/CustomEvent\" rel=\"nofollow\"><code>CustomEvent</code></a> constructor, or (when it is not supported), create an event using <code>document.createEvent</code> with as argument the string \"HTMLEvents\" (because you're going to create a <code>click</code> event). Then, use the <code>initEvent</code> method to create a <code>click</code> event.</p>\n\n<p>Finally, use the <code>dispatchEvent</code> method to fire the event. If you're using IE, the <code>fireEvent</code> method has to be used instead.</p>\n\n<p>If you want to trigger the rightclick event, <code>contextmenu</code>, use the code below:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var element = document.getElementById('yourElement');\nif (window.CustomEvent) {\n    element.dispatchEvent(new CustomEvent('contextmenu'));\n} else if (document.createEvent) {\n    var ev = document.createEvent('HTMLEvents');\n    ev.initEvent('contextmenu', true, false);\n    element.dispatchEvent(ev);\n} else { // Internet Explorer\n    element.fireEvent('oncontextmenu');\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Taking Rob W example, I haven't tried it but, You need to make the event object and pass it along when firing the event. for the right click pass event.button = 2;</p>\n\n<pre><code>var element = document.getElementById(\"yourElement\"),\n  ev;\nif(document.createEvent ) {\n    ev = document.createEvent(\"MouseEvents\");\n    ev.initMouseEvent(\"click\", true, false, window,0,0,0,0,0,false,false,false,false,2,null);\n    element.dispatchEvent(ev);\n} else {\n    ev = document.createEventObject();\n    ev.button = 2;\n    element.fireEvent('onclick', ev);\n}\n</code></pre>\n\n<p>Updated according to mdn initMouseEvent.\nGood luck :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I manually <strong>trigger</strong> a <strong>right</strong> click using Javascript?</p>\n\n<p>I can do this with jQuery but I can only use pure Javascript in this case.</p>\n",
            "last_activity_date": 1426196018,
            "question_id": 7914684,
            "score": 10,
            "tags": [
                "javascript"
            ],
            "title": "Trigger right click using pure Javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I found a working solution:</p>\n\n<p>Enable:</p>\n\n<pre><code>LoadModule proxy_module modules/mod_proxy.so\nLoadModule proxy_http_module modules/mod_proxy_http.so\n</code></pre>\n\n<p>Put this in the main section of your configuration (or desired virtual host, if using Apache virtual hosts):</p>\n\n<pre><code>ProxyRequests Off\nProxyPreserveHost On\n\n&lt;Proxy *&gt;\n    Order deny,allow\n    Allow from all\n&lt;/Proxy&gt;\n\nProxyPass /EMBackend http://localhost:8080/backend/mvc\nProxyPassReverse /EMBackend http://localhost:8080/backend/mvc\n&lt;Location /EMBackend&gt;\n    Order allow,deny\n    Allow from all\n&lt;/Location&gt;\n</code></pre>\n\n<p>So I guess I can't put it in <code>.htaccess</code> or I had to set <code>ProxyPreserveHost On</code>.  I put <code>Include conf/extra/</code> in the <code>httpd.conf</code> file and created the <code>httpd-proxy.conf</code> file and put the script above in it. Restarted apache and it's working!</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>You could simply add the given lines in the <strong>httpd.conf</strong> after enabling the proxy modules.</p>\n\n<pre><code>ProxyPreserveHost On\nProxyPass /EMBackend http://localhost:8080/backend/mvc\nProxyPassReverse /EMBackend http://localhost:8080/backend/mvc\n</code></pre>\n\n<p>Just restart the server and you are done.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In very modern apache, turn on proxy by:</p>\n\n<pre><code>a2enmod proxy;\na2enmod proxy_http\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm creating an html5 - JavaScript app (for mobile devices, using PhoneGap). I have to interact with a REST service.</p>\n\n<p>The service is now running on <code>\"http://localhost:8080/backend/mvc/\"</code></p>\n\n<p>I'm developing my app on an wamp server (apache2) (<code>http://localhost/stage/</code>)\nI'm using Chrome for browser.</p>\n\n<p>when preforming an ajax call the browser responds: <code>XMLHttpRequest cannot load http://localhost:8080/backend/mvc/event. Origin http://localhost is not allowed by Access-Control-Allow-Origin.</code></p>\n\n<p>So I find several ways to circumvent this cross-domain ajax call problem:</p>\n\n<p>1) starting chrome <code>chrome.exe --disable-web-security</code>\n => no difference</p>\n\n<p>2) configuring apache using mod_proxy to redirect the traffic.</p>\n\n<p>I enabled in the httpd.conf: </p>\n\n<pre><code>proxy_module\nproxy_connect_module\nproxy_http_module\n</code></pre>\n\n<p>I put a <code>.htaccess</code> file in the www root with the following content:</p>\n\n<pre><code># start mod_rewrite\nRewriteEngine On\n\nProxyRequests off\n&lt;Proxy&gt;\n    Order deny,allow\n    Allow from all\n&lt;/Proxy&gt;\n\nProxyPass /EMBackend/ http://localhost:8080/backend/mvc/\nProxyPassReverse /EMBackend/ http://localhost:8080/backend/mvc/\nRewriteRule ^/EMBackend/(.*)$ /backend/mvc/$1 [R]\n</code></pre>\n\n<p>I restarted all services (apache,php,..)</p>\n\n<p>resulting in error 500</p>\n\n<p>apache error log: <code>[Tue Oct 18 14:30:11 2011] [alert] [client 127.0.0.1] C:/wamp/www/.htaccess: ProxyRequests not allowed here</code></p>\n\n<p>Any clues on how to resolve this?</p>\n",
            "last_activity_date": 1421669809,
            "question_id": 7807600,
            "score": 10,
            "tags": [
                "javascript",
                "ajax",
                "apache",
                "cross-domain"
            ],
            "title": "apache mod_proxy, configuring ProxyPass &amp; ProxyPassReverse for cross-domain ajax calls"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You're just using the wrong code. To specify the URL, you use url, not data-url. This works:</p>\n\n<pre><code>var twitter = document.createElement('a');\ntwitter.setAttribute('href', 'http://twitter.com/share');\ntwitter.setAttribute('class', 'twitter-share-button twitter-tweet');\ntwitter.setAttribute('url','http://mindcloud.co.uk/idea/?idea=' + this.id);\ntwitter.setAttribute('data-count', 'horizontal');\ntwitter.setAttribute('data-via', 'jtbrowncouk');\ntwitter.style.top = '20px';\ntwitter.style.left = '300px';\ntwitter.innerHTML = \"Tweet\";\n</code></pre>\n\n<p>For more details, check out Twitter's documentation at <a href=\"https://dev.twitter.com/docs/tweet-button#properties\" rel=\"nofollow\">https://dev.twitter.com/docs/tweet-button#properties</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've now managed to solve the problem. The problem i'd imagine is that the twitter script is running on load, and not being re-run upon creating the element.</p>\n\n<p>using the following jQuery works correctly!</p>\n\n<pre><code>$.getScript(\"http://platform.twitter.com/widgets.js\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>It's worth noting that as of recently you can use the following twitter widget function:</p>\n\n<pre><code>twttr.widgets.load();\n</code></pre>\n\n<p>Assuming you've loaded the widgets.js file:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://platform.twitter.com/widgets.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>This will dynamically re-create the tweet button for you.</p>\n",
                    "is_accepted": true,
                    "score": 22
                }
            ],
            "body": "<p>I'm currently trying to create a tweet button with the horizontal count feature dynamically:</p>\n\n<p><strong>JavaScript</strong></p>\n\n<pre><code>var twitter = document.createElement('a');\ntwitter.setAttribute('href', 'http://twitter.com/share');\ntwitter.setAttribute('class', 'twitter-share-button twitter-tweet');\ntwitter.setAttribute('data-url','http://mindcloud.co.uk/idea/?idea=' + this.id);\ntwitter.setAttribute('data-count', 'horizontal');\ntwitter.setAttribute('data-via', 'jtbrowncouk');\ntwitter.style.top = '20px';\ntwitter.style.left = '300px';\ntwitter.innerHTML = \"Tweet\";\n</code></pre>\n\n<p>The problem i'm having is that the button is being displayed as a text link, not as a button with the horizontal count box.</p>\n\n<p>I've created a facebook button in the same way, which works correctly, however to make it work I use the following:</p>\n\n<p><strong>JavaScript</strong></p>\n\n<pre><code>var facebook = document.createElement('fb:like');\nfacebook.setAttribute('id', 'like'+this.id);\nfacebook.setAttribute('href', 'http://mindcloud.co.uk/idea/?idea=' + this.id);    \nfacebook.setAttribute('layout', 'button_count');\nfacebook.setAttribute('send', 'false');        \nfacebook.setAttribute('width' , '300');\nfacebook.setAttribute('font', '');\nfacebook.setAttribute('show_faces', 'true');\nfacebook.style.top = '0px';\nfacebook.style.left = '300px';\n</code></pre>\n\n<p>using the following:</p>\n\n<pre><code>FB.XFBML.parse();\n</code></pre>\n\n<p>to parse and draw the button. <code>FB.XFBML.parse()</code> comes from \n<a href=\"http://connect.facebook.net/en_US/all.js\">http://connect.facebook.net/en_US/all.js</a></p>\n\n<p>When I create the Tweet button statically inside a .html file it works correctly. I'm including the following script within my index page where the tweet button should be created dynamically:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://platform.twitter.com/widgets.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>If you can see what i'm doing incorrectly please inform me!</p>\n\n<p>The following screenshot gives a visual explanation to what is going wrong with the tweet button!\n<img src=\"http://i.stack.imgur.com/oje0E.png\" alt=\"Tweet button not displaying correctly.\"></p>\n\n<p><strong>Solution:</strong></p>\n\n<p>I've now managed to solve the problem. The problem i'd imagine is that the twitter script is running on load, and not being re-run upon creating the element.</p>\n\n<p>using the following jQuery works correctly!</p>\n\n<p>$.getScript(\"http://platform.twitter.com/widgets.js\");</p>\n",
            "last_activity_date": 1333401387,
            "question_id": 6981905,
            "score": 10,
            "tags": [
                "javascript",
                "twitter",
                "dhtml"
            ],
            "title": "How can I dynamically create a tweet button?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Try (untested):</p>\n\n<pre><code>$.getJSON(\"data.php\", function(data){\n    $.each(data.justIn, function() {\n        $.each(this, function(k, v) {\n            alert(k + ' ' + v);\n        });\n    });\n    $.each(data.recent, function() {\n        $.each(this, function(k, v) {\n            alert(k + ' ' + v);\n        });\n    });\n    $.each(data.old, function() {\n        $.each(this, function(k, v) {\n            alert(k + ' ' + v);\n        });\n    });    \n});\n</code></pre>\n\n<p>I figured, three separate loops since you'll probably want to treat each dataset differently (justIn, recent, old). If not, you can do:</p>\n\n<pre><code>$.getJSON(\"data.php\", function(data){\n    $.each(data, function(k, v) {\n        alert(k + ' ' + v);\n        $.each(v, function(k1, v1) {\n            alert(k1 + ' ' + v1);\n        });\n    });\n}); \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>This works for me:</p>\n\n<pre><code>$.get(\"data.php\", function(data){\n    var expected = ['justIn', 'recent', 'old'];\n    var outString = '';\n    $.each(expected, function(i, val){\n        var contentArray = data[val];\n        outString += '&lt;ul&gt;&lt;li&gt;&lt;b&gt;' + val + '&lt;/b&gt;: ';\n        $.each(contentArray, function(i1, val2){\n            var textID = val2.textId;\n            var text = val2.text;\n            var textType = val2.textType;\n            outString += '&lt;br /&gt;('+textID+') '+'&lt;i&gt;'+text+'&lt;/i&gt; '+textType;\n        });\n        outString += '&lt;/li&gt;&lt;/ul&gt;';\n    });\n    $('#contentHere').append(outString);\n}, 'json');\n</code></pre>\n\n<p>This produces this output:</p>\n\n<pre><code>&lt;div id=\"contentHere\"&gt;&lt;ul&gt;\n&lt;li&gt;&lt;b&gt;justIn&lt;/b&gt;:\n&lt;br /&gt;\n(123) &lt;i&gt;Hello&lt;/i&gt; Greeting&lt;br&gt;\n(514) &lt;i&gt;What's up?&lt;/i&gt; Question&lt;br&gt;\n(122) &lt;i&gt;Come over here&lt;/i&gt; Order&lt;/li&gt;\n&lt;/ul&gt;&lt;ul&gt;\n&lt;li&gt;&lt;b&gt;recent&lt;/b&gt;:\n&lt;br /&gt;\n(1255) &lt;i&gt;Hello&lt;/i&gt; Greeting&lt;br&gt;\n(6564) &lt;i&gt;What's up?&lt;/i&gt; Question&lt;br&gt;\n(0192) &lt;i&gt;Come over here&lt;/i&gt; Order&lt;/li&gt;\n&lt;/ul&gt;&lt;ul&gt;\n&lt;li&gt;&lt;b&gt;old&lt;/b&gt;:\n&lt;br /&gt;\n(5213) &lt;i&gt;Hello&lt;/i&gt; Greeting&lt;br&gt;\n(9758) &lt;i&gt;What's up?&lt;/i&gt; Question&lt;br&gt;\n(7655) &lt;i&gt;Come over here&lt;/i&gt; Order&lt;/li&gt;\n&lt;/ul&gt;&lt;/div&gt;\n</code></pre>\n\n<p>And looks like this:</p>\n\n<ul><li><b>justIn</b>:<br />(123) <i>Hello</i> Greeting<br>(514) <i>What's up?</i> Question<br>(122) <i>Come over here</i> Order</li></ul>\n\n<ul><li><b>recent</b>:<br />(1255) <i>Hello</i> Greeting<br>(6564) <i>What's up?</i> Question<br>(0192) <i>Come over here</i> Order</li></ul>\n\n<ul><li><b>old</b>:<br />(5213) <i>Hello</i> Greeting<br>(9758) <i>What's up?</i> Question<br>(7655) <i>Come over here</i> Order</li></ul>\n\n<p>Also, remember to set the <code>contentType</code> as <code>'json'</code></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<h2>Brief code but full-featured</h2>\n\n<p>The following is a hybrid jQuery solution that formats each data \"record\" into an HTML element and uses the data's properties as HTML attribute values. </p>\n\n<p>The jquery <code>each</code> runs the inner loop; I needed the regular JavaScript <code>for</code> on the outer loop to be able to grab the property name (instead of value) for display as the heading. According to taste it can be modified for slightly different behaviour.</p>\n\n<p>This is <strong>only 5 main lines of code</strong> but wrapped onto multiple lines for display:</p>\n\n<pre><code>$.get(\"data.php\", function(data){\n\n    for (var propTitle in data) {\n\n        $('&lt;div&gt;&lt;/div&gt;') \n            .addClass('heading')\n            .insertBefore('#contentHere')\n            .text(propTitle);\n\n            $(data[propTitle]).each(function(iRec, oRec) {\n\n                $('&lt;div&gt;&lt;/div&gt;')\n                    .addClass(oRec.textType)\n                    .attr('id', 'T'+oRec.textId)\n                    .insertBefore('#contentHere')\n                    .text(oRec.text);\n            });\n    }\n\n});\n</code></pre>\n\n<p>Produces the output  </p>\n\n<p><em>(Note: I modified the JSON data text values by prepending a number to ensure I was displaying the proper records in the proper sequence - while \"debugging\")</em></p>\n\n<pre><code>&lt;div class=\"heading\"&gt;\n    justIn\n&lt;/div&gt;\n&lt;div id=\"T123\" class=\"Greeting\"&gt;\n    1Hello\n&lt;/div&gt;\n&lt;div id=\"T514\" class=\"Question\"&gt;\n    1What's up?\n&lt;/div&gt;\n&lt;div id=\"T122\" class=\"Order\"&gt;\n    1Come over here\n&lt;/div&gt;\n&lt;div class=\"heading\"&gt;\n    recent\n&lt;/div&gt;\n&lt;div id=\"T1255\" class=\"Greeting\"&gt;\n    2Hello\n&lt;/div&gt;\n&lt;div id=\"T6564\" class=\"Question\"&gt;\n    2What's up?\n&lt;/div&gt;\n&lt;div id=\"T0192\" class=\"Order\"&gt;\n    2Come over here\n&lt;/div&gt;\n&lt;div class=\"heading\"&gt;\n    old\n&lt;/div&gt;\n&lt;div id=\"T5213\" class=\"Greeting\"&gt;\n    3Hello\n&lt;/div&gt;\n&lt;div id=\"T9758\" class=\"Question\"&gt;\n    3What's up?\n&lt;/div&gt;\n&lt;div id=\"T7655\" class=\"Order\"&gt;\n    3Come over here\n&lt;/div&gt;\n&lt;div id=\"contentHere\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Apply a style sheet</p>\n\n<pre><code>&lt;style&gt;\n.heading { font-size: 24px; text-decoration:underline }\n.Greeting { color: green; }\n.Question { color: blue; }\n.Order { color: red; }\n&lt;/style&gt;\n</code></pre>\n\n<p>to get a \"beautiful\" looking set of data</p>\n\n<p><img src=\"http://img14.imageshack.us/img14/1148/62593416.png\" alt=\"alt text\"></p>\n\n<p><strong>More Info</strong><br>\nThe JSON data was used in the following way:</p>\n\n<p>for each category (key name the array is held under):</p>\n\n<ul>\n<li>the key name is used as the section heading (e.g. <strong>justIn</strong>)</li>\n</ul>\n\n<p>for each object held inside an array:</p>\n\n<ul>\n<li>'text' becomes the content of a div</li>\n<li>'textType' becomes the class of the div (hooked into a style sheet)</li>\n<li>'textId' becomes the id of the div</li>\n<li>e.g. <strong>&lt;div id=\"T122\" class=\"Order\"&gt;Come over here&lt;/div&gt;</strong></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>My solutions in one of my own sites, with a table:</p>\n\n<pre><code>$.getJSON(\"sections/view_numbers_update.php\", function(data) {\n $.each(data, function(index, objNumber) {\n  $('#tr_' + objNumber.intID).find(\"td\").eq(3).html(objNumber.datLastCalled);\n  $('#tr_' + objNumber.intID).find(\"td\").eq(4).html(objNumber.strStatus);\n  $('#tr_' + objNumber.intID).find(\"td\").eq(5).html(objNumber.intDuration);\n  $('#tr_' + objNumber.intID).find(\"td\").eq(6).html(objNumber.blnWasHuman);\n });\n});\n</code></pre>\n\n<p>sections/view_numbers_update.php Returns something like:</p>\n\n<pre><code>[{\"intID\":\"19\",\"datLastCalled\":\"Thu, 10 Jan 13 08:52:20 +0000\",\"strStatus\":\"Completed\",\"intDuration\":\"0:04 secs\",\"blnWasHuman\":\"Yes\",\"datModified\":1357807940},\n{\"intID\":\"22\",\"datLastCalled\":\"Thu, 10 Jan 13 08:54:43 +0000\",\"strStatus\":\"Completed\",\"intDuration\":\"0:00 secs\",\"blnWasHuman\":\"Yes\",\"datModified\":1357808079}]\n</code></pre>\n\n<p>HTML table:</p>\n\n<pre><code>&lt;table id=\"table_numbers\"&gt;\n &lt;tr&gt;\n  &lt;th&gt;[...]&lt;/th&gt;\n  &lt;th&gt;[...]&lt;/th&gt;\n  &lt;th&gt;[...]&lt;/th&gt;\n  &lt;th&gt;Last Call&lt;/th&gt;\n  &lt;th&gt;Status&lt;/th&gt;\n  &lt;th&gt;Duration&lt;/th&gt;\n  &lt;th&gt;Human?&lt;/th&gt;\n  &lt;th&gt;[...]&lt;/th&gt;\n &lt;/tr&gt;\n &lt;tr id=\"tr_123456\"&gt;\n  [...]\n &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>This essentially gives every row a unique id preceding with 'tr_' to allow for other numbered element ids, at server script time. The jQuery script then just gets this TR_[id] element, and fills the correct indexed cell with the json return.</p>\n\n<p>The advantage is you could get the complete array from the DB, and either foreach($array as $record) to create the table html, OR (if there is an update request) you can die(json_encode($array)) before displaying the table, all in the same page, but same display code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to use Jquery's each loop to go through this JSON and add it to a <code>div</code> named <code>#contentHere</code>. The Json is as follows:</p>\n\n<pre><code>{ \"justIn\": [\n  { \"textId\": \"123\", \"text\": \"Hello\", \"textType\": \"Greeting\" },\n  { \"textId\": \"514\", \"text\":\"What's up?\", \"textType\": \"Question\" },\n  { \"textId\": \"122\", \"text\":\"Come over here\", \"textType\": \"Order\" }\n  ],\n \"recent\": [\n  { \"textId\": \"1255\", \"text\": \"Hello\", \"textType\": \"Greeting\" },\n  { \"textId\": \"6564\", \"text\":\"What's up?\", \"textType\": \"Question\" },\n  { \"textId\": \"0192\", \"text\":\"Come over here\", \"textType\": \"Order\" }\n  ],\n \"old\": [\n  { \"textId\": \"5213\", \"text\": \"Hello\", \"textType\": \"Greeting\" },\n  { \"textId\": \"9758\", \"text\":\"What's up?\", \"textType\": \"Question\" },\n  { \"textId\": \"7655\", \"text\":\"Come over here\", \"textType\": \"Order\" }\n ]\n}\n</code></pre>\n\n<p>I'm getting this Json through use of this code:</p>\n\n<pre><code>$.get(\"data.php\", function(data){\n\n}) \n</code></pre>\n\n<p>Any solutions?</p>\n",
            "last_activity_date": 1357824214,
            "question_id": 3030321,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "json",
                "each"
            ],
            "title": "Jquery each loop with json array"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><code>$( \"#sortable\" ).sortable('toArray');</code></p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>UPDATED 2012</p>\n\n<p><a href=\"http://so.devilmaycode.it/jquery-ui-sortable-determining-in-what-order-the-items-are/\" rel=\"nofollow\"><strong>FULL WORKING DEMO &amp; SOURCE</strong></a></p>\n\n<hr>\n\n<p>get the index position of the elements try to read this:</p>\n\n<blockquote>\n  <ul>\n  <li><a href=\"http://stackoverflow.com/questions/2442232/getting-the-position-of-the-element-in-a-list-when-its-drag-dropped-ui-sortable/2443081#2443081\">Getting the position of the element in a list when it&#39;s drag/dropped (ui.sortable)</a></li>\n  </ul>\n</blockquote>\n\n<p>COOKIE plugin for jquery:</p>\n\n<blockquote>\n  <ul>\n  <li><a href=\"http://plugins.jquery.com/project/cookie\" rel=\"nofollow\">http://plugins.jquery.com/project/cookie</a></li>\n  </ul>\n</blockquote>\n\n<p><strong>JQUERY:</strong></p>\n\n<pre><code> $(function() {\n    //coockie name\n     var LI_POSITION = 'li_position';\n       $('ul#sortable').sortable({\n         //observe the update event...\n            update: function(event, ui) {\n              //create the array that hold the positions...\n              var order = []; \n                //loop trought each li...\n               $('#sortable li').each( function(e) {\n\n               //add each li position to the array...     \n               // the +1 is for make it start from 1 instead of 0\n              order.push( $(this).attr('id')  + '=' + ( $(this).index() + 1 ) );\n              });\n              // join the array as single variable...\n              var positions = order.join(';')\n               //use the variable as you need!\n              alert( positions );\n             // $.cookie( LI_POSITION , positions , { expires: 10 });\n            }\n        });\n     });\u200b\n</code></pre>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;ul id=\"sortable\"&gt; \n  &lt;li id=\"id_1\"&gt; Item 1 &lt;/li&gt; \n  &lt;li id=\"id_2\"&gt; Item 2 &lt;/li&gt; \n  &lt;li id=\"id_3\"&gt; Item 3 &lt;/li&gt; \n  &lt;li id=\"id_4\"&gt; Item 4 &lt;/li&gt; \n  &lt;li id=\"id_5\"&gt; Item 5 &lt;/li&gt; \n&lt;/ul&gt;\n</code></pre>\n\n<p><strong>PHP:</strong></p>\n\n<p>this is just an example but you got the idea: you may want use a database instead and use AJAX for get back the lis:</p>\n\n<pre><code>&lt;?php  \n//check if cookie is set..\nif ( isset( $_COOKIE['li_position'] ) ) {\n//explode the cockie by \";\"...\n$lis = explode( ';' , $_COOKIE['li_position'] );\n// loop for each \"id_#=#\" ...\nforeach ( $lis as $key =&gt; $val ) {\n//explode each value found by \"=\"...\n$pos = explode( '=' , $val );\n//format the result into li...\n$li .= '&lt;li id=\"'.$pos[0].'\" &gt;'.$pos[1].'&lt;/li&gt;';\n}\n//display it\necho $li;\n// use this for delete the cookie!\n// setcookie( 'li_position' , null );\n} else {\n// no cookie available display default set of lis\n echo '\n  &lt;li id=\"id_1\"&gt; Fuji &lt;/li&gt; \n  &lt;li id=\"id_2\"&gt; Golden &lt;/li&gt; \n  &lt;li id=\"id_3\"&gt; Gala &lt;/li&gt; \n  &lt;li id=\"id_4\"&gt; William &lt;/li&gt; \n  &lt;li id=\"id_5\"&gt; Jordan &lt;/li&gt; \n';\n}\n?&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p><strong>HTML</strong></p>\n\n<pre><code>&lt;ul id=\"sortable\"&gt; \n  &lt;li id=\"id1\"&gt; Item 1 &lt;/li&gt; \n  &lt;li id=\"id2\"&gt; Item 2 &lt;/li&gt; \n  &lt;li id=\"id3\"&gt; Item 3 &lt;/li&gt; \n  &lt;li id=\"id4\"&gt; Item 4 &lt;/li&gt; \n  &lt;li id=\"id5\"&gt; Item 5 &lt;/li&gt; \n&lt;/ul&gt;\n</code></pre>\n\n<p><strong>JQUERY</strong></p>\n\n<pre><code> $(\"#sortable\").sortable(\n            {\n                update: function () {\n                var strItems = \"\";\n\n                $(\"#sortable\").children().each(function (i) {\n                    var li = $(this);\n                    strItems += li.attr(\"id\") + ':' + i + ',';\n                });\n\n                updateSortOrderJS(strItems); &lt;--- do something with this data\n\n                }\n            });\n</code></pre>\n\n<p>strItems will look like (new-item-order:item-id)</p>\n\n<blockquote>\n  <p>0,49:1,365:2,50:3,364:4,366:5,39:6</p>\n</blockquote>\n\n<p>then you can parse it into an update functions something like</p>\n\n<blockquote>\n  <p>List eachTask = new List(itemsList.Trim().Split(new\n  char[] { ',' }));</p>\n</blockquote>\n\n<p>then</p>\n\n<blockquote>\n  <p>String[] item = i.Split(new Char[] { ':' });</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is what I use currently:</p>\n\n<pre><code>&lt;div id=\"sortable\"&gt;\n    &lt;div id=\"2000\"&gt;&lt;/div&gt;\n    &lt;div id=\"1000\"&gt;&lt;/div&gt;\n    &lt;div id=\"3000\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n\n$('#sortable').sortable({\n    update: function () { save_new_order() }\n});\n\nfunction save_new_order() {\n    var a = [];\n    $('#sortable').children().each(function (i) {\n        a.push($(this).attr('id') + ':' + i);\n    });\n    var s = a.join(',');\n    alert(s);\n}\n</code></pre>\n\n<p><strong>Alerted value:</strong></p>\n\n<pre><code>2000:0,1000:1,3000:2\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p><a href=\"http://jqueryui.com/demos/sortable/\">Here</a> is an interesting use of JavaScript: reordering items with drag and drop. The implementation itself in my page works fine, but is there a way to determine in which order the user put the items?</p>\n\n<p>I'm asking because I want to load and save the item order in a cookie.</p>\n",
            "last_activity_date": 1408381553,
            "question_id": 2669130,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "jquery-ui",
                "jquery-sortable"
            ],
            "title": "jQuery UI sortable: determining in what order the items are"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>you can load script dynamically by adding <code>&lt;script src=\"...\"&gt;</code> tag to DOM tree.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>function loadJSInclude(scriptPath, callback)\n{\n    var scriptNode = document.createElement('SCRIPT');\n    scriptNode.type = 'text/javascript';\n    scriptNode.src = scriptPath;\n\n    var headNode = document.getElementsByTagName('HEAD');\n    if (headNode[0] != null)\n        headNode[0].appendChild(scriptNode);\n\n    if (callback != null)    \n    {\n        scriptNode.onreadystagechange = callback;            \n        scriptNode.onload = callback;\n    }\n}\n</code></pre>\n\n<p>And to use (I used swfObject as an example):</p>\n\n<pre><code>var callbackMethod = function ()\n{\n    // Code to do after loading swfObject\n}\n\n// Include SWFObject if its needed\nif (typeof(SWFObject) == 'undefined')    \n    loadJSInclude('/js/swfObject.js', callbackMethod);\nelse\n    callbackMethod();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>You might want to take a look at jsloader: <a href=\"http://www.jsloader.com/\" rel=\"nofollow\">http://www.jsloader.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Gaia Ajax does this (I know since I implemented it - I'm the original founder) and they're GPL. So unless you're afraid they'll sue you (they're FUDding me with lawsuits now) you might want to check out how they do it. Basic technology is to inject a script tag using DOM when script is needed. Though you must take care NOT to reference stuff in this file before it is finished loading (which happens asynchronously)</p>\n\n<p>The solution to that problem (one solution) is to add up a variable at the bottom of the file and use recursive setTimeout calls to check if the variable is defined and defer execution of the code depending on the file being finished loading until that \"bottom of JS file\" variable is defined...</p>\n\n<p>We actually also tracked which files where included by appending the hashed value of the filenames into a hidden field on the page. This means we never ended up including the same file more then once...</p>\n\n<p>Pretty nifty in fact...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The Google AJAX APIs provide dynamic loading for Google's JavaScript APIs.  There is an example of <a href=\"http://code.google.com/apis/ajax/documentation/#Dynamic\" rel=\"nofollow\">loading the Maps JS on-demand</a> in the documentation:</p>\n\n<pre><code>function mapsLoaded() {\n  var map = new google.maps.Map2(document.getElementById(\"map\"));\n  map.setCenter(new google.maps.LatLng(37.4419, -122.1419), 13);\n}\n\nfunction loadMaps() {\n  google.load(\"maps\", \"2\", {\"callback\" : mapsLoaded});\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You might want to take a look at a real <a href=\"http://bachhoa24.com/ban-nha-di-an-bd-dt11x20m-gia-1-ty-200-cl-1002687.html#show_map\" rel=\"nofollow\">DEMO</a> on real estate site.</p>\n\n<p>On the demo page, just click on the link [Xem b\u1ea3n \u0111\u1ed3] to see the map loaded on demand.\nThe map loaded only when the link be clicked not at the time of page load, so it can reduce page download time.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm sure there are different approaches to this problem, and I can think of some. But I'd like to hear other people's opinion on this. To be more specific I've built a widget that allows users to choose their location from a google maps map. This widget is displayed on demand and will probably be used every 1 out of 10 uses of the page where it's placed. The simplest way to load the dependency for this widget (google maps js api) is to place a script tag in the page. But this would make the browser request that script on every page load. I'm looking for a way to make the browser request that script only when the user requires for the widget to be displayed.</p>\n",
            "last_activity_date": 1300558600,
            "question_id": 310583,
            "score": 10,
            "tags": [
                "javascript",
                "google-maps"
            ],
            "title": "loading javascript dependencies on demand"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Instead of writing the code from the scratch you can use jquery plug in. Such plug in can provide many configuration option as well.</p>\n\n<p>Here is the one I most liked.</p>\n\n<p><a href=\"http://www.zurb.com/playground/orbit-jquery-image-slider\" rel=\"nofollow\">http://www.zurb.com/playground/orbit-jquery-image-slider</a>  </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<ol>\n<li>Set var step=1 as global variable by putting it above the function call</li>\n<li>put semicolons</li>\n</ol>\n\n<p>It  will look like this</p>\n\n<pre><code>&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\nvar image1 = new Image()\nimage1.src = \"images/pentagg.jpg\"\nvar image2 = new Image()\nimage2.src = \"images/promo.jpg\"\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;p&gt;&lt;img src=\"images/pentagg.jpg\" width=\"500\" height=\"300\" name=\"slide\" /&gt;&lt;/p&gt;\n&lt;script type=\"text/javascript\"&gt;\n        var step=1;\n        function slideit()\n        {\n            document.images.slide.src = eval(\"image\"+step+\".src\");\n            if(step&lt;2)\n                step++;\n            else\n                step=1;\n            setTimeout(\"slideit()\",2500);\n        }\n        slideit();\n&lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I wanna make image slideshow on my web, here's my code</p>\n\n<pre><code>&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\n    var image1 = new Image()\n    image1.src = \"images/pentagg.jpg\"\n    var image2 = new Image()\n    image2.src = \"images/promo.jpg\"\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;p&gt;&lt;img src=\"images/pentagg.jpg\" width=\"500\" height=\"300\" name=\"slide\" /&gt;&lt;/p&gt;\n    &lt;script type=\"text/javascript\"&gt;\n            function slideit()\n            {\n                var step=1;\n                document.images.slide.src = eval(\"image\"+step+\".src\")\n                if(step&lt;2)\n                    step++\n                else\n                    step=1\n                setTimeout(\"slideit()\",2500)\n            }\n            slideit()\n    &lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>Why it's not working? I've put image I want in images folder</p>\n",
            "last_activity_date": 1408488123,
            "question_id": 13860671,
            "score": 9,
            "tags": [
                "javascript",
                "slideshow"
            ],
            "title": "How to create image slideshow in html?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>if you start dialog with $('#dialog_id') then before you open your dialog change his html</p>\n\n<pre><code>$('#dialog_id').html('Delete selected row:' + $selectedRow.columnValue?);\n$('#dialog_id').dialog();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use <a href=\"http://www.trirand.com/jqgridwiki/doku.php?id=wiki%3aform_editing#events2\">beforeShowForm</a> or <a href=\"http://www.trirand.com/jqgridwiki/doku.php?id=wiki%3aform_editing#events2\">afterShowForm</a> of the <a href=\"http://www.trirand.com/jqgridwiki/doku.php?id=wiki%3aform_editing#delgridrow\">delGridRow</a> to overwrite the text of the conformation dialog.</p>\n\n<p>For example</p>\n\n<pre><code>beforeShowForm: function ($form) {\n    $(\"td.delmsg\", $form[0]).html(\"Do you really want delete the row with &lt;b&gt;id=\" +\n         $(\"#list\").jqGrid('getGridParam','selrow') + \"&lt;/b&gt;?\");\n}\n</code></pre>\n\n<p>(see <a href=\"http://www.ok-soft-gmbh.com/jqGrid/CustomDelMsg.htm\">the old demo</a>) will display the confirmation dialog like the following:</p>\n\n<p><img src=\"http://i.stack.imgur.com/I5BND.png\" alt=\"enter image description here\"></p>\n\n<p>You can easy modify the example to display any other information about the deleting row. You can use <a href=\"http://www.trirand.com/jqgridwiki/doku.php?id=wiki%3amethods\">getRowData</a> or <a href=\"http://www.trirand.com/jqgridwiki/doku.php?id=wiki%3amethods\">getCell</a> to get some information from the deleting row.</p>\n\n<p><strong>UPDATED</strong>: See <a href=\"http://stackoverflow.com/a/10050428/315935\">the answer</a> for additional information.</p>\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>I want to customize the delete  dialog message. Based on a selected row?\nI want to display a message something like \"Delete selected row: $selectedRow.columnValue? \"\nHow can i do that?</p>\n",
            "last_activity_date": 1363888350,
            "question_id": 6913618,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "jqgrid"
            ],
            "title": "jqgrid custom delete dialog message"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The non-standard property <code>__proto__</code> lets you set the prototype of an <em>existing</em> object.</p>\n\n<p>In your example, both version will achieve the same effect, but there is a difference:</p>\n\n<p><code>child1</code>'s prototype is the same as <code>parent</code>'s prototype, whereas <code>child2</code>'s prototype is an empty object and this empty object's prototype is the same as <code>parent</code>'s prototype.</p>\n\n<p>Of course as <code>child2</code> and its prototype don't have a method <code>test</code>, this method will be looked up further up in the prototype chain.</p>\n\n<p>Also consider this:</p>\n\n<p>You want to create only one object that should inherit from another object. Now, you could write a constructor function, but JavaScript has object literal notation to create objects directly and you want to use it.</p>\n\n<p>If you have a constructor function, letting the new objects inherit from another object is as easy a setting the <code>prototype</code> of the constructor function to that object.</p>\n\n<p>Obviously this does not work for object literals. But in Firefox you can use <code>__proto__</code> to set it:</p>\n\n<pre><code>var server = {\n    __proto__: connect.HTTPServer.prototype,\n    other: properties\n};\n</code></pre>\n\n<hr>\n\n<p>As this property is not standard, you should avoid using it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Have a look at the diagram on <a href=\"http://mckoss.com/jscript/object.htm\">this page</a> (mckoss.com) that shows the <code>prototype</code>, <code>constructor</code>, <code>__proto__</code> relations for a small hierarchy. Also the code below the diagram describes the relation quite well.</p>\n\n<p>When you have a function <code>Base</code>, and set the prototype of the function object defined, the statement <code>Derived.prototype = new Base;</code> sets the <code>__proto__</code> (actually the internal <code>[[prototype]]</code>) of <code>Derived.prototype</code> to <code>Base.prototype</code> automatically, making Derived itself a class that you can instantiate objects from. This seems the be a more standards compliant way of defining a derived class.</p>\n\n<p>From what I read, <code>__proto__</code> is a non-standard way of accessing the internal <code>[[prototype]]</code> of an object. It seems to be well supported, but I am not sure if it should be trusted.</p>\n\n<p>In any case, your example <code>Server.prototype.__proto__ = connect.HTTPServer.prototype;</code> seems to do the derivation the other way around: first define an object, <code>Server</code> by defining the constructor and the proto, and then hook up the internal <code>[[prototype]]</code> manually to morph it into a class derived from <code>HTTPServer</code>.</p>\n\n<p>As for your suggested alternative, <code>Server.prototype = connect.HTTPServer.prototype;</code>: that is a bad idea. Here, you are setting the prototype of <code>Server</code> to be the same object as the prototype of <code>HTTPServer</code>. So any changes you make to <code>Server</code> class will be directly reflected in <code>HTTPServer</code>, and will be accessible from other derived classes of <code>HTTPServer</code>. You can imageine the chaos if two classes derived from <code>HTTPServer</code> try to define the same member.</p>\n",
                    "is_accepted": true,
                    "score": 10
                }
            ],
            "body": "<p>In the code for the Express module for Node.js I came across this line, setting inheritance for the server:</p>\n\n<pre><code>Server.prototype.__proto__ = connect.HTTPServer.prototype;\n</code></pre>\n\n<p>I'm not sure what this does - the MDC docs (https://developer.mozilla.org/en/JavaScript/Guide/Inheritance_Revisited#prototype_and_<strong>proto</strong>) seem to say that I could just do:</p>\n\n<pre><code>Server.prototype = connect.HTTPServer.prototype;\n</code></pre>\n\n<p>Indeed, I did this test:</p>\n\n<pre><code>var parent = function(){}\nparent.prototype = {\n    test: function(){console.log('test')};\n}\n\nvar child1 = function(){};\nchild1.prototype = parent.prototype;\nvar instance1 = new child1();\ninstance1.test();     // 'test'\n\nvar child2 = function(){};\nchild2.prototype.__proto__ = parent.prototype;\nvar instance2 = new child2();\ninstance2.test();     // 'test'\n</code></pre>\n\n<p>Looks to be the same? So yah, I'm wondering what setting object.prototype.__proto is for. Thanks!</p>\n",
            "last_activity_date": 1300834425,
            "question_id": 5398487,
            "score": 9,
            "tags": [
                "javascript",
                "node.js"
            ],
            "title": "Confusion about setting something.prototype.__proto__"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This seems to be first implemented here: <a href=\"http://www.thomasfrank.se/sessionvars.html\" rel=\"nofollow\">http://www.thomasfrank.se/sessionvars.html</a>.</p>\n\n<p>However, if this technique takes off, I would bet money that the browsers would eventually crack down on it due to its inherit vulnerability to XSS.</p>\n\n<p>A more long term solution is likely to be: <a href=\"http://en.wikipedia.org/wiki/DOM_storage\" rel=\"nofollow\">http://en.wikipedia.org/wiki/DOM_storage</a> which grew out of the HTML 5 specification (the biggest drawback being the lack of backwards compatibility for browsers before IE 8).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There are many ways to store local data, Flash LSO, HTML 5 Local Storage, cookies. Google gears.\nHave a look at <a href=\"http://pablotron.org/?cid=1557\" rel=\"nofollow\">PersistJS</a>, a js client library that will just do it.</p>\n\n<p>This post in <a href=\"http://ajaxian.com/archives/persistjs-cross-browser-client-side-persistent-storage\" rel=\"nofollow\">Ajaxian</a> elaborates a little more about it.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>I have implemented as the core feature in my web application <a href=\"http://lewt.it\" rel=\"nofollow\">http://lewt.it</a>. It works great, and you can store up to 2 Mb in the window name space (!).</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I was reading about cookies and other related client-side storage options, and read about using window.name as a data cache of sorts:</p>\n\n<p><a href=\"http://en.wikipedia.org/wiki/HTTP_cookie#window.name\">http://en.wikipedia.org/wiki/HTTP_cookie#window.name</a></p>\n\n<p>While it certainly has things that make it less desirable - and I won't sugar coat it, it is definitely a hack in the most true sense of that word - it looks promising. I have a need to store about 10K of JSON as a client cache, right now I am sending it down with the page and when I read about this it seems like it might actually fit my needs and reduce traffic.</p>\n\n<p>I am curious to see if anyone has implemented this, and what advice you could possibly give. Pitfalls? Recommendations? Differences between browsers? Some sort of usage case that would be really bad?</p>\n\n<p><strong>Pros</strong></p>\n\n<ul>\n<li>Local storage</li>\n<li>Available in basically every browser that supports javascript</li>\n</ul>\n\n<p><strong>Cons</strong></p>\n\n<ul>\n<li>Only supports strings</li>\n<li>XSS Issues</li>\n<li>window.name poisoning</li>\n<li>Information leaking to other sites</li>\n</ul>\n\n<p><strong>Alternatives</strong></p>\n\n<ul>\n<li>PersistJS - <a href=\"http://pablotron.org/?cid=1557\">http://pablotron.org/?cid=1557</a></li>\n<li>dojox.storage - <a href=\"http://docs.dojocampus.org/dojox/storage\">http://docs.dojocampus.org/dojox/storage</a></li>\n</ul>\n",
            "last_activity_date": 1377552847,
            "question_id": 2035075,
            "score": 9,
            "tags": [
                "jquery",
                "json",
                "browser",
                "javascript"
            ],
            "title": "Using window.name as a local data cache in web browsers"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Hey you could try this, problem is it searches the entire body so even attributes and such get changed.</p>\n\n<pre><code>javascript:document.body.innerHTML=document.body.innerHTML.replace( /old/g, \"new\" );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>A function that is clobber-proof. That mean's this won't touch any tags or attributes, only text.</p>\n\n<pre><code>function htmlreplace(a, b, element) {    \n    if (!element) element = document.body;    \n    var nodes = element.childNodes;\n    for (var n=0; n&lt;nodes.length; n++) {\n        if (nodes[n].nodeType == Node.TEXT_NODE) {\n            var r = new RegExp(a, 'gi');\n            nodes[n].textContent = nodes[n].textContent.replace(r, b);\n        } else {\n            htmlreplace(a, b, nodes[n]);\n        }\n    }\n}\n\nhtmlreplace('a', 'r');\n</code></pre>\n\n<p>Bookmarklet version:</p>\n\n<pre><code>javascript:function htmlreplace(a,b,element){if(!element)element=document.body;var nodes=element.childNodes;for(var n=0;n&lt;nodes.length;n++){if(nodes[n].nodeType==Node.TEXT_NODE){nodes[n].textContent=nodes[n].textContent.replace(new RegExp(a,'gi'),b);}else{htmlreplace(a,b,nodes[n]);}}}htmlreplace('old','new');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>A simple line that works along jQuery:</p>\n\n<pre><code>`javascript:var a = function(){$(\"body\").html($(\"body\").html().replace(/old/g,'new'));return;}; a();`\n</code></pre>\n\n<p>Without jQuery:</p>\n\n<pre><code>`javascript:function a (){document.body.innerHTML=document.body.innerHTML.replace(/old/g, \"new\" );return;}; a();`\n</code></pre>\n\n<p>The function returning nothing is very important, so the browser is not redirected anywhere after executing the bookmarklet.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you replace the innerHtml then you will destroy any dom events you have on the page.  Try traversing the document to replace text:</p>\n\n<pre><code>function newTheOlds(node) {\n    node = node || document.body;\n    if(node.nodeType == 3) {\n        // Text node\n        node.nodeValue = node.nodeValue.split('old').join('new');\n    } else {\n        var nodes = node.childNodes;\n        if(nodes) {\n            var i = nodes.length;\n            while(i--) newTheOlds(nodes[i]);\n        }\n    }\n}\n\nnewTheOlds();\n</code></pre>\n\n<p>The split/join is faster than doing \"replace\" if you do not need pattern matching.  If you need pattern matching then use \"replace\" and a regex:</p>\n\n<pre><code>node.nodeValue = node.nodeValue.replace(/(?:dog|cat)(s?)/, 'buffalo$1');\n</code></pre>\n\n<p>As a bookmarklet:</p>\n\n<pre><code>javascript:function newTheOlds(node){node=node||document.body;if(node.nodeType==3){node.nodeValue=node.nodeValue.split('old').join('new');}else{var nodes=node.childNodes;if(nodes){var i=nodes.length;while(i--)newTheOlds(nodes[i]);}}}newTheOlds();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Yet another recursive approach:</p>\n\n<pre><code>function replaceText(oldText, newText, node){ \n  node = node || document.body; \n\n  var childs = node.childNodes, i = 0;\n\n  while(node = childs[i]){ \n    if (node.nodeType == Node.TEXT_NODE){ \n      node.textContent = node.textContent.replace(oldText, newText); \n    } else { \n      replaceText(oldText, newText, node); \n    } \n    i++; \n  } \n}\n</code></pre>\n\n<p>Minified bookmarklet:</p>\n\n<pre><code>javascript:function replaceText(ot,nt,n){n=n||document.body;var cs=n.childNodes,i=0;while(n=cs[i]){if(n.nodeType==Node.TEXT_NODE){n.textContent=n.textContent.replace(ot,nt);}else{replaceText(ot,nt,n);};i++;}};replaceText('old','new');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Okay, I'm just consolidating some of the great stuff that people are putting up in one answer.</p>\n\n<p>Here is sixthgear's jQuery code, but made portable (I source jQuery from the big G) and minified into a bookmarklet:</p>\n\n<pre><code>javascript:var scrEl=document.createElement('script');scrEl.setAttribute('language','javascript');scrEl.setAttribute('type','text/javascript');scrEl.setAttribute('src','http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js');function htmlreplace(a,b,element){if(!element)element=document.body;var nodes=$(element).contents().each(function(){if(this.nodeType==Node.TEXT_NODE){var r=new RegExp(a,'gi');this.textContent=this.textContent.replace(r,b);}else{htmlreplace(a,b,this);}});}htmlreplace('old','new');\n</code></pre>\n\n<p>NOTE that 'old' can be either a 'string literal', or a 'reg[Ee]x'.</p>\n\n<p>Actually, now that I think about it, sixthgear's is the best answer, especially with my enhancements.  I can't find anything that the other answers add over it, using jQuery achieves incredible X-browser compatibility.  Plus, I'm just too damn lazy.  community wiki, Enjoy!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm trying to slightly modify this so that it prompts for the text to search for, followed by the text to replace with, and when all done processing, show a dialog box letting me know it's done.</p>\n\n<p>I plan to use it on a phpmyadmin database edit page that'll have any number of textboxes filled with text (<em>which is what I need it to search and replace in</em>). Also, the text to search for and replace may or may not be multi-line, so I've added the 'm' param in the regex, and also, since I'll be doing searches/replaces that may contain html, they'll often have quotes/double quotes in them. ex:</p>\n\n<p>Search for:</p>\n\n<pre><code>&lt;img height=\"76\" width=\"92\" src=\"http://www.gifs.net/Animation11/Hobbies_and_Entertainment/Games_and_Gambling/Slot_machine.gif\" /&gt;&lt;/div&gt;\n&lt;div class=\"rtecenter\"&gt; &lt;strong&gt;&lt;em&gt;&lt;font color=\"#ff0000\"&gt;Vegas Baby!&lt;br /&gt;\n&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/div&gt;\n</code></pre>\n\n<p>and maybe replace with nothing (<em>just to erase all that code</em>), or some other html. So far this is the bookmarklet I've come up with, (<em>javascript, and especially bookmarklets aren't something I mess with often</em>) however, it does nothing as far as finding/replacing, although it does do the prompting correctly.</p>\n\n<pre><code>javascript:var%20scrEl=document.createElement('script');scrEl.setAttribute('language','javascript');scrEl.setAttribute('type','text/javascript');scrEl.setAttribute('src','http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js');function%20htmlreplace(a,b,element){if(!element)element=document.body;var%20nodes=$(element).contents().each(function(){if(this.nodeType==Node.TEXT_NODE){var%20r=new%20RegExp(a,'gim');this.textContent=this.textContent.replace(r,b);}else{htmlreplace(a,b,this);alert('Done%20processing.');}});}htmlreplace(prompt('Text%20to%20find:',''),prompt('Replace%20with:',''));\n</code></pre>\n\n<p>Anyone have any ideas?</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>For older browsers will need to change Node.TEXT_NODE to 3 and the node.textContent to node.nodeValue; so final function should read:</p>\n\n<pre><code>function htmlreplace(a, b, element) {    \n    if (!element) element = document.body;    \n    var nodes = element.childNodes;\n    for (var n=0; n&lt;nodes.length; n++) {\n        if (nodes[n].nodeType == 3) { //Node.TEXT_NODE == 3\n            var r = new RegExp(a, 'gi');\n            nodes[n].nodeValue = nodes[n].nodeValue.replace(r, b);\n        } else {\n            htmlreplace(a, b, nodes[n]);\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>What I want to do is replace all instances of 'old' in a webpage with 'new' in a JS bookmarklet or a greasemonkey script. How can I do this? I suppose jQuery or other frameworks are okay, as there're hacks to include them in both bookmarklets as well as greasemonkey scripts.</p>\n",
            "last_activity_date": 1406308705,
            "question_id": 1175775,
            "score": 9,
            "tags": [
                "javascript",
                "scripting",
                "greasemonkey",
                "bookmarklet",
                "replace"
            ],
            "title": "Find all instances of &#39;old&#39; in a webpage and replace each with &#39;new&#39;, using a javascript bookmarklet"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Presumably you are doing this inside an onclick handler so you have access to the element that was clicked.  What I would do is do a prevAll to see if it is at the same level.  If not, then I would do a parent().prevAll() to get the previous siblings of the parent element, then iterate through those backwards, checking their contents for the desired element.  Continue going up the DOM tree until you find what you want or hit the root of the DOM.  This a general algorithm.</p>\n\n<p>If you know that it is inside a table, then you can simply get the row containing the element clicked and iterate backwards through the rows of the table from that row until you find one that contains the element desired.</p>\n\n<p>I don't think there is a way to do it in one (chained) statement.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>edit</strong>: this solution works for both your original problem, the problem you mention in your first comment, and the problem you detail in the comment after that.</p>\n\n<pre><code>$('.myLinks').click(function() {\n    var findMe = '';\n\n    $(this).parents().each(function() {\n        var a = $(this).find('.findme').is('.findme');\n        var b = $(this).find('.myLinks').is('.myLinks');\n        if (a &amp;&amp; b) {                             // look for first parent that\n                                                  // contains .findme and .myLinks\n            $(this).find('*').each(function() {\n                var name = $(this).attr('class');\n                if ( name == 'findme') {\n                    findMe = $(this);             // set element to last matching\n                                                  // .findme\n                }\n                if ( name == 'myLinks')    {\n                    return false;                 // exit from the mess once we find\n                                                  // .myLinks\n                }\n            });\n            return false;\n        }   \n    });\n    alert(findMe.text() );               // alerts \"find this one\"\n});\n</code></pre>\n\n<p>this works for your example in the OP as well as a modified example as explained in the comments:</p>\n\n<pre><code>&lt;table&gt;\n  &lt;tr&gt;\n    &lt;td class=\"findme\"&gt;don't find this one&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\"findme\"&gt;find this one&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td&gt;&lt;a href=\"#\" class=\"myLinks\"&gt;find the previous .findme&lt;/a&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\"findme\"&gt;don't find this one&lt;/td&gt;\n  &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>as well as this test case which you added:</p>\n\n<pre><code>&lt;table&gt;\n  &lt;tr&gt;\n    &lt;td class=\"findme\"&gt;don't find this one&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\"findme\"&gt;don't find this one&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td class=\"findme\"&gt;find this one&lt;/td&gt;\n  &lt;/tr&gt;\n&lt;/table&gt;\n\n&lt;a href=\"#\" class=\"myLinks\"&gt;find the previous .findme&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Ok, here's what I've come up with - hopefully it'll be useful in many different situations. It's 2 extensions to jQuery that I call <code>prevALL</code> and <code>nextALL</code>. While the standard <code>prevAll()</code> matches previous siblings, <code>prevALL()</code> matches ALL previous elements all the way up the DOM tree, similarly for <code>nextAll()</code> and <code>nextALL()</code>.</p>\n\n<p>I'll try to explain it in the comments below:</p>\n\n<pre><code>// this is a small helper extension i stole from\n// http://www.texotela.co.uk/code/jquery/reverse/\n// it merely reverses the order of a jQuery set.\n$.fn.reverse = function() {\n    return this.pushStack(this.get().reverse(), arguments);\n};\n\n// create two new functions: prevALL and nextALL. they're very similar, hence this style.\n$.each( ['prev', 'next'], function(unusedIndex, name) {\n    $.fn[ name + 'ALL' ] = function(matchExpr) {\n        // get all the elements in the body, including the body.\n        var $all = $('body').find('*').andSelf();\n\n        // slice the $all object according to which way we're looking\n        $all = (name == 'prev')\n             ? $all.slice(0, $all.index(this)).reverse()\n             : $all.slice($all.index(this) + 1)\n        ;\n        // filter the matches if specified\n        if (matchExpr) $all = $all.filter(matchExpr);\n        return $all;\n    };\n});\n</code></pre>\n\n<p>usage:</p>\n\n<pre><code>$('.myLinks').click(function() {\n    $(this)\n        .prevALL('.findme:first')\n        .html(\"You found me!\")\n    ;\n\n    // set previous nodes to blue\n    $(this).prevALL().css('backgroundColor', 'blue');\n\n    // set following nodes to red\n    $(this).nextALL().css('backgroundColor', 'red');\n});\n</code></pre>\n\n<p><hr /></p>\n\n<p><em>edit</em> - function rewritten from scratch. I just thought of a much quicker and simpler way to do it. Take a look at the edit history to see my first iteration.</p>\n\n<p><em>edit again</em> - found an easier way to do it!</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>I usually number elements (1,2,3..) (rel=\"number\"), so then i use this code to give class to all previous elements:</p>\n\n<pre><code>var num = $(this).attr(\"rel\");\n\nfor (var i = 1; i&lt;=num; i++)\n{\n    $('.class[rel=\"'+i+'\"]').addClass(\"newclass\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>had the same problem, heres what i came up with. my function uses <a href=\"http://www.w3schools.com/jsref/met_node_comparedocumentposition.asp\" rel=\"nofollow\">compareDocumentPosition</a>. dont know how it compares to the other solutions in terms of performance though.</p>\n\n<pre><code>$.fn.findNext = function ( selector ) {\n  var found, self = this.get(0);\n  $( selector )\n    .each( function () {\n      if ( self.compareDocumentPosition( this ) === 4 ){ \n        found = this; \n        return false;\n      }    \n    })\n  return $(found);\n}\n</code></pre>\n\n<p>of course one could change this quite easily to fetch ALL elements following the calling element.</p>\n\n<pre><code>$.fn.nextALL= function ( selector ) {\n  var found = [], self = this.get(0);\n  $( selector )\n    .each( function () {\n      if ( self.compareDocumentPosition( this ) === 4 )\n        found.push(this);          \n    })\n  return $(found);\n}\n</code></pre>\n\n<h3>EDIT: streamlined version</h3>\n\n<pre><code>$.fn.findNext = function( s ){\n    var m = this[0], f=function(n){return m.compareDocumentPosition(n)===4;};\n    return this.pushStack( $(s).get().filter(f) );\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Using jQuery, <strong>how do you match elements that are prior to the current element in the DOM tree?</strong> Using <code>prevAll()</code> only matches previous siblings.</p>\n\n<p>eg:</p>\n\n<pre><code>&lt;table&gt;\n    &lt;tr&gt;\n        &lt;td class=\"findme\"&gt;find this one&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;&lt;a href=\"#\" class=\"myLinks\"&gt;find the previous .findme&lt;/a&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td class=\"findme\"&gt;don't find this one&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>In my specific case, I'll be searching for the <em>first</em> <code>.findme</code> element prior to the link clicked.</p>\n",
            "last_activity_date": 1383577504,
            "question_id": 322912,
            "score": 9,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery to find all previous elements that match an expression"
        }
    ]
}
