{
    "items": [
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>If you put Javascript <em>statements</em> (rather than function definitions) inside a <code>&lt;script&gt;</code> tag, they will be executed during page loading - before the onLoad event is fired.</p>\n\n<pre><code> &lt;html&gt;\n &lt;body&gt;\n   &lt;h2&gt;First header&lt;/h2&gt;\n   &lt;script type=\"text/javascript\"&gt;\n     alert(\"Hi, I am here\"); \n     document.write(\"&lt;h3&gt;This is Javascript generated&lt;/h3&gt;\");\n   &lt;/script&gt;\n   &lt;h2&gt;Second header&lt;/h2&gt;\n &lt;/body&gt;\n &lt;/html&gt;\n</code></pre>\n\n<p>The caveat is that you cannot search for elements by ID because these element might not have been rendered yet, so your ability to change the page that way is limited. </p>\n\n<p><em>Bottom line</em>: possible, not recommended.</p>\n\n<p>What I usually do in such situations is as follows:</p>\n\n<ul>\n<li>Make the parts of the page that may change invisible (via <code>style=\"visibility:hidden;\"</code>); </li>\n<li>Make onLoad run a Javascript code that changes the page and then sets the visibility of the said parts to <code>visibility:visible</code>.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>Is there any event handler before onLoad/onPageShow? The trouble with onLoad is if there is any change in display, the page will show up without change until it is fully loaded, then the script will run. What is the best way to make sure it will run as soon as possible?</p>\n",
            "last_activity_date": 1313911745,
            "question_id": 7136705,
            "score": 9,
            "tags": [
                "javascript",
                "onload"
            ],
            "title": "Javascript before onload?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I don't know for sure but here are my best suggestions.</p>\n\n<p>You're using jQuery. So instead of setting the  event you should really be using $(function() {... }); to do your initialization. The reason to use this is that it ensures that all the scripts on the page have loaded and you're not limited to just one init function like you are with the onload body tag. </p>\n\n<p>Also, be sure your Javascript code is after the Google include. Otherwise your code might execute before the Google objects are created.</p>\n\n<p>I would also suggest taking a look at this page about event order.</p>\n\n<p><a href=\"http://dean.edwards.name/weblog/2005/09/busted/\" rel=\"nofollow\">http://dean.edwards.name/weblog/2005/09/busted/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I faced 'google is not defined' several time.\nProbably Google Script has some problem not to be loaded well with FF-addon\nBTW.\nFF has restart option ( like window reboot )\nHelp > restart with Add-ons Disabled</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>Try using this:</p>\n\n<pre><code>&lt;script src=\"http://maps.googleapis.com/maps/api/js?sensor=false\"&gt;&lt;/script&gt; \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had the same error \"google is not defined\" while using Gmap3. The problem was that I was including 'gmap3' before including 'google', so I reversed the order:</p>\n\n<pre><code>&lt;script src=\"https://maps.googleapis.com/maps/api/js?sensor=false\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"/assets/gmap3.js?body=1\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>From Firefox 23, there is <strong>Mixed Content Blocking Enabled</strong> set by default (locally disabled). It blocks some APIs from Google also if you use secure connection and some unsecure APIs.</p>\n\n<p>To disable it you'll have to click shield which appears in location bar when there are some unsecure contents, set 'Disable protection' and then you'll have to look at yellow exclamation  mark in location bar :(</p>\n\n<p><a href=\"https://blog.mozilla.org/tanvi/2013/04/10/mixed-content-blocking-enabled-in-firefox-23/\" rel=\"nofollow\">https://blog.mozilla.org/.../mixed-content-blocking-enabled-in-firefox-23/</a></p>\n\n<p>You can always try also replace http protocol with https in the API url. If API is provided also in secure connection - you will not see any warnings.</p>\n\n<p>It works for me.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Here's my conundrum:\nI have a page that uses Google Maps V3 and jQuery. It all worked well locally in FF5, Chrome and Safari. </p>\n\n<p>Once I uploaded to a web site, I get a \"google is not defined\" error on the first line that I try to use a google object</p>\n\n<pre><code>var defaultLocation = new google.maps.LatLng(lat, lng);\n</code></pre>\n\n<p>It <strong>only occurs in FF</strong> and <strong>only occurs remotely</strong> (i.e., if I load the file into FF locally, it works well). Chrome and Safari seem to be working great regardless, as is my Android and iPod browsers.</p>\n\n<p>Here's what I tried so far:</p>\n\n<ol>\n<li>Moved <code>&lt;script type=\"text/javascript\" src=\"http://maps.google.com/maps/api/js?sensor=false\"&gt;&lt;/script&gt;</code> to top of the <code>&lt;head&gt;</code> section.</li>\n<li>Moved all content of <code>$(function() {...});</code> to a function called <code>initialize()</code> and added <code>&lt;body onload=\"initialize()\"&gt;</code></li>\n<li>Played with scripts and css files order</li>\n<li>Pasted the URL <a href=\"http://maps.google.com/maps/api/js?sensor=false\">http://maps.google.com/maps/api/js?sensor=false</a> into FF address box and verified I'm getting the legit script</li>\n</ol>\n\n<p>But since this is only happening in FF on a remote machine and works well otherwise, I don't think it has anything to do with my code. Maybe the load order in FF5 is screwed. Maybe it prioritizes network resources differently than other browsers. I really do not know what to make of it at this point.</p>\n\n<p>Any help is appreciated.<br>\nGuy</p>\n\n<p><strong>Update:</strong><br>\nJust wanted to add the following fact: After trying the previous on a Mac, I tried FF5 in Windows, and have replicated the exact same behavior.<br>\nFor good measure, I tried Pale Moon as well - same results. Chrome 14, Opera 11.50 and even frickin' IE9 (which wasn't included in the test plan) work. It just FF5, now on both Mac and Windows 7, that fails on that page.  </p>\n",
            "last_activity_date": 1380273301,
            "question_id": 6660955,
            "score": 9,
            "tags": [
                "javascript",
                "firefox",
                "google-maps",
                "cross-browser"
            ],
            "title": "&quot;google is not defined&quot; when using Google Maps V3 in Firefox remotely"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Just google for \"ajax post javascript\" and you'll find lots of information: </p>\n\n<p><a href=\"http://www.javascriptkit.com/dhtmltutors/ajaxgetpost.shtml\">Performing GET and POST requests using Ajax</a></p>\n\n<p><a href=\"http://www.openjs.com/articles/ajax_xmlhttp_using_post.php\">Using POST method in XMLHTTPRequest(Ajax)</a></p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>You can use the <code>XMLHttpRequest</code> object as follows:</p>\n\n<pre><code>xhr.open(\"POST\", url, true);\nxhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\nxhr.send(someStuff);\n</code></pre>\n\n<p>That code would post <code>someStuff</code> to <code>url</code>. Just make sure that when you create your <code>XMLHttpRequest</code> object, it will be cross-browser compatible. There are endless examples out there of how to do that.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>Is there a way to send data using post method without a form and without refreshing page using only pure Javascript (not jQuery <code>$.post()</code> )? Maybe httprequest or something else, just can't find it now.</p>\n",
            "last_activity_date": 1308401677,
            "question_id": 6396101,
            "score": 9,
            "tags": [
                "javascript",
                "post",
                "httpwebrequest",
                "xmlhttprequest",
                "http-post"
            ],
            "title": "Pure Javascript send post data without a form"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>If you're willing to use <a href=\"http://jquery.com\" rel=\"nofollow\">JQuery</a>, then:</p>\n\n<pre><code>var myElement = $('div[tokenid=\"14\"]').get();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can accomplish this with JQuery:</p>\n\n<pre><code>$('[tokenid=14]')\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/Lar9y/\" rel=\"nofollow\">Here</a>'s a fiddle for an example.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you're using jQuery, you can use some of their selector magic to do something like this:</p>\n\n<pre><code>    $('div[tokenid=14]')\n</code></pre>\n\n<p>as your selector.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It is not good to use custom attributes in the HTML. If any, you should use <a href=\"http://ejohn.org/blog/html-5-data-attributes/\">HTML5's <code>data</code> attributes</a>.</p>\n\n<p>Nevertheless you can write your own function that traverses the tree, but that will be <strong>quite slow</strong> compared to <code>getElementById</code> because you cannot make use of any index:</p>\n\n<pre><code>function getElementByAttribute(attr, value, root) {\n    root = root || document.body;\n    if(root.hasAttribute(attr) &amp;&amp; root.getAttribute(attr) == value) {\n        return root;\n    }\n    var children = root.children, \n        element;\n    for(var i = children.length; i--; ) {\n        element = getElementByAttribute(attr, value, children[i]);\n        if(element) {\n            return element;\n        }\n    }\n    return null;\n}\n</code></pre>\n\n<p>In the worst case, this will traverse the whole tree. Think about how to change your concept so that you can make use browser functions as much as possible.</p>\n\n<p>In newer browsers you use of the <a href=\"https://developer.mozilla.org/En/DOM/Document.querySelector\"><code>querySelector</code></a> method, where it would just be:</p>\n\n<pre><code>var element = document.querySelector('[tokenid=\"14\"]');\n</code></pre>\n\n<p>This will be much faster too.</p>\n\n<hr>\n\n<p><strong>Update:</strong> Please note @Andy E's comment below. It might be that you run into problems with IE (as always ;)). If you do a lot of element retrieval of this kind, you really should consider using a JavaScript library such as jQuery, as the others mentioned. It hides all these browser differences.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<pre><code>&lt;div data-automation=\"something\"&gt;\n&lt;/div&gt;\n\ndocument.querySelector(\"div[data-automation]\")\n</code></pre>\n\n<p>=> finds the div</p>\n\n<pre><code>document.querySelector(\"div[data-automation='something']\")\n</code></pre>\n\n<p>=> finds the div with a value</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an xHTML page where each HTML element has a unique custom attribute like follows:</p>\n\n<pre><code>&lt;div class=\"logo\" tokenid=\"14\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>I need a way to make the similar as does document.getElementById while getting the element by ID but get that element with the \"tokenid\". Something like the following:</p>\n\n<pre><code>document.getElementByTokenId('14'); \n</code></pre>\n\n<p>Is that possible? If yes - any hint would be greatly appreciated.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1421391732,
            "question_id": 6267816,
            "score": 9,
            "tags": [
                "javascript",
                "getelementbyid"
            ],
            "title": "Getting element by a custom attribute using JavaScript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The problem is that prototype can be modified in several places. For example one library will add map method to Array's prototype and your own code will add the same but with another purpose. So one implementation will be broken.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>As bjornd pointed out, <a href=\"http://en.wikipedia.org/wiki/Monkey_patch\">monkey-patching</a> is a problem only when there are multiple libraries involved. Therefore its not a good practice to do it if you are writing reusable libraries. However, it still remains the best technique out there to iron out cross-browser compatibility issues when using host objects in javascript. </p>\n\n<p>See <a href=\"http://assanka.net/content/tech/2009/09/02/json2-js-vs-prototype/\">this link</a> for a real accident when prototype.js and json2.js are used together. </p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Mostly because of namespace collisions. I know the Prototype framework has had many problems with keeping their names different from the ones included natively.</p>\n\n<p>There are two major methods of providing utilities to people..</p>\n\n<h1>Prototyping</h1>\n\n<p>Adding a function to an Object's prototype. MooTools and Prototype do this.</p>\n\n<p>Advantages:</p>\n\n<ol>\n<li>Super easy access.</li>\n</ol>\n\n<p>Disadvantages:</p>\n\n<ol>\n<li>Can use a lot of system memory. While modern browsers just fetch an instance of the property from the constructor, some older browsers store a separate instance of each property for each instance of the constructor.</li>\n<li>Not necessarily always available.</li>\n</ol>\n\n<p>What I mean by \"not available\" is this:</p>\n\n<p>Imagine you have a NodeList from <code>document.getElementsByTagName</code> and you want to iterate through them. You can't do..</p>\n\n<pre><code>document.getElementsByTagName('p').map(function () { ... });\n</code></pre>\n\n<p>..because it's a NodeList, not an Array. The above will give you an error something like: <code>Uncaught TypeError: [object NodeList] doesn't have method 'map'</code>.</p>\n\n<p>I should note that there are very simple ways to convert NodeList's and other Array-like \nObjects into real arrays.</p>\n\n<h1>Collecting</h1>\n\n<p>Creating a brand new global variable and stock piling utilities on it. jQuery and Dojo do this.</p>\n\n<p>Advantages:</p>\n\n<ol>\n<li>Always there.</li>\n<li>Low memory usage.</li>\n</ol>\n\n<p>Disadvantages:</p>\n\n<ol>\n<li>Not placed quite as nicely.</li>\n<li>Can feel awkward to use at times.</li>\n</ol>\n\n<p>With this method you still couldn't do..</p>\n\n<pre><code>document.getElementsByTagName('p').map(function () { ... });\n</code></pre>\n\n<p>..but you could do..</p>\n\n<pre><code>jQuery.map(document.getElementsByTagName('p'), function () { ... });\n</code></pre>\n\n<p>..but as pointed out by Matt, in usual use, you would do the above with..</p>\n\n<pre><code>jQuery('p').map(function () { ... });\n</code></pre>\n\n<h1>Which is better?</h1>\n\n<p>Ultimately, it's up to you. If you're OK with the risk of being overwritten/overwriting, then I would highly recommend prototyping. It's the style I prefer and I feel that the risks are worth the results. If you're not as sure about it as me, then collecting is a fine style too. They both have advantages and disadvantages but all and all, they usually produce the same end result.</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I've come across a few comments here and there about how it's frowned upon to modify a javascript object's prototype? I personally don't see how it could be a problem. For instance extending the Array object to have map and include methods or to create more robust Date methods?</p>\n\n<p>Thank you in advance...</p>\n",
            "last_activity_date": 1309343965,
            "question_id": 6223449,
            "score": 9,
            "tags": [
                "javascript",
                "monkeypatching"
            ],
            "title": "Why is it frowned upon to modify javascript object&#39;s prototypes?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>No. Not sure why you would want to either.</p>\n\n<p>As you mentioned, the only way would be to add it on to the page's hash, ex.</p>\n\n<pre><code>http://www.website.com/blog/#entry-name\n</code></pre>\n\n<p>Then to scroll to that part of the page, something like:</p>\n\n<pre><code>if (window.location.indexOf(\"#\") &gt; 0) {\n    var entry_id = window.location.substring(window.location.indexOf(\"#\"));\n    $('html, body').animate({\n        scrollTop: $(entry_id).offset().top\n    }, 2000);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>No, for security reasons you are not allowed to change the URL using javascript</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Yes, you can, but it's a little tricky.</p>\n\n<p>If you have this on your <code>index.html</code> page:</p>\n\n<pre><code>  &lt;a id=\"link-to-later\" href=\"#later\"&gt;Go to later&lt;/a&gt;\n  &lt;p&gt;lorem ipsum&lt;/p&gt;&lt;p&gt;lorem ipsum&lt;/p&gt;&lt;p&gt;lorem ipsum&lt;/p&gt;&lt;p&gt;lorem ipsum&lt;/p&gt;&lt;p&gt;lorem ipsum&lt;/p&gt;&lt;p&gt;lorem ipsum&lt;/p&gt;&lt;p&gt;lorem ipsum&lt;/p&gt;&lt;p&gt;lorem ipsum&lt;/p&gt;&lt;p&gt;lorem ipsum&lt;/p&gt;&lt;p&gt;lorem ipsum&lt;/p&gt;&lt;p&gt;lorem ipsum&lt;/p&gt;&lt;p&gt;lorem ipsum&lt;/p&gt;&lt;p&gt;lorem ipsum&lt;/p&gt;&lt;p&gt;lorem ipsum&lt;/p&gt;&lt;p&gt;lorem ipsum&lt;/p&gt;&lt;p&gt;lorem ipsum&lt;/p&gt;&lt;p&gt;lorem ipsum&lt;/p&gt;&lt;p&gt;lorem ipsum&lt;/p&gt;&lt;p&gt;lorem ipsum&lt;/p&gt;&lt;p&gt;lorem ipsum&lt;/p&gt;&lt;p&gt;lorem ipsum&lt;/p&gt;&lt;p&gt;lorem ipsum&lt;/p&gt;&lt;p&gt;lorem ipsum&lt;/p&gt;&lt;p&gt;lorem ipsum&lt;/p&gt;&lt;p&gt;lorem ipsum&lt;/p&gt; \n  &lt;a id=\"later\" name=\"later\"&gt;Some later anchor&lt;/a&gt;\n</code></pre>\n\n<p>Then clicking the top link will take you to the anchor below without reloading the page and the url will be <code>index.html#later</code>.  </p>\n\n<p>By using the <code>window.onscroll</code> event you can hook an event to the user scrolling down the page.  The event handler could include something like <code>$('#link-to-later').click()</code>, which would send the user's browser to point on the page with the <code>later</code> anchor.  </p>\n\n<p>You will need to do some work to keep this from being too choppy, but it is doable.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use pushState() to modify the URL displayed in the browser URL bar without reloading or using the hash. As long as your browser supports HTML5 that is.</p>\n\n<p><a href=\"https://developer.mozilla.org/en/DOM/Manipulating_the_browser_history\">https://developer.mozilla.org/en/DOM/Manipulating_the_browser_history</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I know this is a bit of an older question, but browsers changed, and right now, it is possible to do what the poster requested. This means that most of the other answers are no longer valid. I'm posting a way to accomplish this so that it might help people using Google to find the correct answer. </p>\n\n<p>In short, on modern browsers (browsers with HTML 5 support) you can. Please have a look at <a href=\"http://spoiledmilk.com/blog/html5-changing-the-browser-url-without-refreshing-page/\">this</a> article.</p>\n\n<p>It basically boils down to the following line of code:</p>\n\n<pre><code>window.history.pushState(\"object or string\", \"Title\", \"/new-url\");\n</code></pre>\n\n<p>Executing the above code will change the URL to example.com/new-url, and will help you accomplish what you wanted. </p>\n\n<p>For a demo, you can take a look at the <a href=\"http://winners.webbyawards.com/2013/online-film-video/general-film-categories/drama\">Webby Awards</a>, where this method is used. Just scroll up or down and look at the address bare. The effect is pretty impressive.</p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>Is it possible to have the url change while you scroll down a single page with ajax? I have a website all on one page and want to have this effect.</p>\n\n<p>example:</p>\n\n<pre><code>www.blablabla.com/blog\n</code></pre>\n\n<p>user scroll down...</p>\n\n<pre><code>www.blablabla.com/blog/entry-name\n</code></pre>\n\n<p>I know about hashing... can I mask the URL?</p>\n",
            "last_activity_date": 1374503193,
            "question_id": 6146560,
            "score": 9,
            "tags": [
                "javascript",
                "ajax",
                "url",
                "url-rewriting"
            ],
            "title": "Is it possible to have the url change while you scroll down a single page"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You need to use the $in operator ></p>\n\n<p><a href=\"http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24in\">http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24in</a></p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>Here is a mongoosey way to use the $in operator.</p>\n\n<pre><code>User.find()\n  .where('fb.id')\n  .in([3225, 623423, 6645345])\n  .exec(function (err, records) {\n    //make magic happen\n  });\n</code></pre>\n\n<p>I find the dot notation quite handy for querying into sub documents.</p>\n\n<p><a href=\"http://mongoosejs.com/docs/queries.html\">http://mongoosejs.com/docs/queries.html</a></p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<pre><code>User.where({ records: { $in: [3225, 623423, 6645345] } }, function ...\n</code></pre>\n\n<p>more info here: <a href=\"http://docs.mongodb.org/manual/reference/operator/query/\" rel=\"nofollow\">http://docs.mongodb.org/manual/reference/operator/query/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Let's say I have a model called <code>User</code>.\nI have an array with object Ids.</p>\n\n<p>I want to get all User records that \"intersect\" with the array of Ids that I have.</p>\n\n<pre><code>User.find({ records with IDS IN [3225, 623423, 6645345] }, function....\n</code></pre>\n",
            "last_activity_date": 1406128129,
            "question_id": 5818303,
            "score": 9,
            "tags": [
                "javascript",
                "database",
                "node.js",
                "mongodb"
            ],
            "title": "How do I perform this query in Mongoose? (MongoDB for Node.js)"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I don't know about pure CSS solution, but you can use javascript to to dynamically count and adjust correct width of left margin (while making the right margin a bit thinner - by size of scrollbar).  </p>\n\n<p>Btw: IMO: The correct way of dealing with this is: <strong><em>Leave it as it is.</em></strong> Because it is a default behavior and I don't think that users are worried about this as much as you are. This is my oppinion and someone might have different one, but <strong>adding scrollbar to everypage (to solve this) is epic fail</strong>. :)</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>You could also, with php, add a left-padding value when you're on the long page, but the scrollbar will be different widths in different browsers/platforms, so javascript would be the only pixel-perfect solution.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>People with large monitors will never see a scrollbar on any page. </p>\n\n<p>People with small monitors will always see scrollbars on all pages. </p>\n\n<p>Despite monitor size, people are free to make any browser window any size and cause scrollbars. </p>\n\n<p>Oh and let's not forget about people that like to add a dozen browser toolbar addons making the browser window's content area half as high as it could be.  </p>\n\n<p>That's just how it is and no static solution is going to get around that.  Changing the margin on one page is not a solution for reasons listed above.  </p>\n\n<p>If you insist on fixing something people have learned to live with, it's going to have to be a \"dynamic\" JavaScript solution where you calculate your left margin and add the width of the scrollbar.  For different browsers, bars are different widths so you will have to calculate this too. </p>\n\n<p><strong>Edit:</strong>  Like someone said in another answer, this is default browser behavior and should be left alone.</p>\n\n<p><strong>Edit2:</strong>  As user dampe said in comments, you'll also have to trigger the JavaScript after each time the window is resized by the user.</p>\n\n<p>This is going to be an epic waste of your time.  Typically, default behavior of the browser is left to the browser.  Way too many variables to account for and you're bound to miss something if you don't have every scenario, skin, OS, browser version, browser brand, toolbar add-on, monitor type, size, etc. to be testing with.  Once you start getting this working, you'll find you need to make exceptions and corrections for Explorer.  Before you know it, you end up with a massive piece of bloat... and for what?  What's the value of this?</p>\n\n<p><strong>Starting point:</strong>  100% guaranteed expected behavior in all browsers &amp; situations.</p>\n\n<p><strong>Ending point:</strong>  guaranteed looking great in your monitor/system only... you take a risk that it will look like junk on a system/scenario you haven't even thought about. </p>\n\n<p>Search for a pre-made JavaScript solution or a  jQuery plugin first... if you can't find one, ask yourself why?</p>\n\n<ul>\n<li>not practical</li>\n<li>not possible</li>\n<li>not worth the trouble (low demand)</li>\n</ul>\n\n<p><strong>Edit3:</strong>  I did some searching to satisfy my curiosity.  I found a thread with a jQuery solution as well as links to methods for calculating the scrollbar width.</p>\n\n<p>IMHO, this is a waste of time and resources but here's the link for anyone interested...</p>\n\n<p><a href=\"http://haslayout.net/css-tuts/Fixing-Page-Shift-Problem\">http://expressionengine.com/archived_forums/viewthread/158703/</a></p>\n\n<p><strong>Edit4:</strong>  Here's a CSS solution that I found.  I have not tested this but if it works it would be sweet.</p>\n\n<pre><code>html {\n    overflow-y: scroll;\n}\n</code></pre>\n\n<p><a href=\"http://haslayout.net/css-tuts/Fixing-Page-Shift-Problem\">http://haslayout.net/css-tuts/Fixing-Page-Shift-Problem</a></p>\n\n<p><strong>Edit5:</strong>  CSS solution works but not to my liking.  It creates scrollbars for every page yet when not needed they are grayed out or empty... not elegant.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>If you want a pure css option, i believe an absolute positioned div inside the body with width and height of 100%, overflow auto and right padding larger than the width of a scroll bar, will replace the normal scrollbar without shifting the content to the left on long pages.</p>\n\n<p>I know i used this technique a long time ago, but i cant remember the exact css quirks i had to use.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p><strong>I have:</strong> I have several web pages both with this outline:</p>\n\n<pre><code>&lt;body&gt;\n&lt;div id=\"container\"&gt;\nCONTENT\n&lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>with the CSS:</p>\n\n<pre><code>body{\ncolor:#000000;\nbackground-color:#FFFFFF;\nbackground-image: url(background.jpg);\nbackground-repeat: repeat-x;\nfont-family: verdana;\nletter-spacing: 1px;\n}\n#container{\nmargin-left:auto;\nmargin-right:auto;\nmargin-top:5px;\nwidth: 700px;\n}\n</code></pre>\n\n<p><strong>Problem:</strong> All pages are short so that no scroll bar shows up, but one page is longer so a vertical scroll bar on the right shows up. This second page causes the container to be shifted (to the left) just a bit.</p>\n\n<p>From what I understand a common solution is to make the scrollbar show up on all pages, but I really want to avoid that since it is just one page out of many.</p>\n\n<p><strong>Question:</strong> Is there a way to avoid shifting the container while still having it centered <em>without making the scrollbar show up on all pages</em>?</p>\n",
            "last_activity_date": 1302368536,
            "question_id": 5605667,
            "score": 9,
            "tags": [
                "javascript",
                "html",
                "css",
                "scrollbar",
                "centering"
            ],
            "title": "Scrollbar shifts content"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>A partial hacky solution is to have a var with the current time set on the server, and set a var with the current client time at the top of the page. If they differ by more than a certain threshold (1 minute?) then you could assume it's a cached page load.</p>\n\n<p>Example JS (using ASP.Net syntax for the server side):</p>\n\n<pre><code>var serverTime = new Date('&lt;%= DateTime.Now.ToUniversalTime().ToString() %&gt;');\nvar pageStartTime = Date.UTC(new Date());\nvar isCached = serverTime &lt; pageStartTime &amp;&amp;\n               pageStartTime.getTime() - serverTime.getTime() &gt; 60000;\n</code></pre>\n\n<p>Alternatively, using cookies on the client side (assuming cookies are enabled), you can check for a cookie with a unique key for the current version of the page. If none exists, you write a cookie for it, and on any other page access, the existence of the cookie shows you that it's being loaded from the cache.</p>\n\n<p>E.g. (assumes some cookie helper functions are available)</p>\n\n<pre><code>var uniqueKey = '&lt;%= SomeUniqueValueGenerator() %&gt;';\nvar currentCookie = getCookie(uniqueKey);\nvar isCached = currentCookie !== null;\nsetCookie(uniqueKey); //cookies should be set to expire \n                      //in some reasonable timeframe\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>Personally, I would set data attribute containing the item id for each element.</p>\n\n<p>I.e.</p>\n\n<pre><code>&lt;ul&gt;\n  &lt;li data-item-id=\"123\"&gt;Some item.&lt;/li&gt;\n  &lt;li data-item-id=\"122\"&gt;Some other item.&lt;/li&gt;\n  &lt;li data-item-id=\"121\"&gt;Another one..&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>Your <code>App.pollForNewItems</code> function would grab the <code>data-item-id</code> attribute of the first element (if newest are first) and send it to the server with your original request.</p>\n\n<p>The server would then only return the items <code>WHERE id &gt; ...</code> which you can then prepend them to the list.</p>\n\n<p>I'm still confused as to why you want to know if the browser has a cached version of the page.</p>\n\n<p>Also, is there a reason for binding to <code>load</code> instead of <code>ready</code>?</p>\n\n<ul>\n<li>Christian</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can ask the web browser to not cache the page.  Try these HTTP headers:</p>\n\n<pre><code>Cache-control: no-cache\nCache-control: no-store\nPragma: no-cache\nExpires: 0\n</code></pre>\n\n<p>Particularly, <code>Cache-control: no-store</code> is interesting because it tells the browser to not store the page in memory at all which prevents a stale page being loaded when you hit the back/forward button.</p>\n\n<p>If you do this instead, you don't have to poll for data on page load.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Navigation Timing is in most browsers now(ie9+)\n<a href=\"http://www.w3.org/TR/navigation-timing/#sec-navigation-info-interface\" rel=\"nofollow\">http://www.w3.org/TR/navigation-timing/#sec-navigation-info-interface</a></p>\n\n<pre><code> if (!!window.performance &amp;&amp; window.performance.navigation.type === 2) {\n   // page has been hit using back or forward buttons\n } else {\n   // regular page hit\n }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a \"new items\" badge on a page that I want to update immediately the page is loaded from the cache (i.e. when hitting \"Back\" or \"Forward\" to return to this page). What is the best way to accomplish this?</p>\n\n<p>The setup is pretty simple. The layout for the app looks for new items every 8 seconds, and updates the badge + list of items accordingly.</p>\n\n<pre><code>$(function() {\n    setInterval( App.pollForNewItems, 8000 );\n});\n</code></pre>\n\n<p>When someone navigates away from this page to look at the details of an item, a lot can happen. Things are \"new\" until <em>any</em> user has viewed them, and the app will likely have several user using it simultaneously (the kind of workflow used for a call center or support tickets).</p>\n\n<p>To make sure that the badges are always up to date, I have:</p>\n\n<pre><code>$(window).bind('focus load', function ( event ) {\n    App.pollForNewItems();\n});\n</code></pre>\n\n<p>..And though this works, polling for new items on 'load' is only useful when the page is loaded from the cache. Is there a reliable cross-browser way to tell if a page is being loaded from the cache?</p>\n",
            "last_activity_date": 1420659408,
            "question_id": 4433769,
            "score": 9,
            "tags": [
                "javascript",
                "javascript-events",
                "jquery",
                "browser-history",
                "browser-cache"
            ],
            "title": "Is My Page Being Loaded from the Browser Cache?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Try taking animation out from queue.</p>\n\n<pre><code>$('...').fadeIn(200).dequeue().fadeOut(0);\n</code></pre>\n\n<p><a href=\"http://api.jquery.com/queue/\" rel=\"nofollow\">http://api.jquery.com/queue/</a></p>\n\n<p><a href=\"http://api.jquery.com/dequeue/\" rel=\"nofollow\">http://api.jquery.com/dequeue/</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p><strike>AFAIK <code>fadeIn</code> and <code>fadeOut</code> run synchronously, so no, I do not think you can interrupt them while they are running. You would have to wait until it is done executing.</strike></p>\n\n<p>If you call the <a href=\"http://api.jquery.com/stop/\" rel=\"nofollow\">stop</a> method on the element it will stop all animations. The reason the <code>fadeOut</code> call in your example isn't called until after <code>fadeIn</code> is because animations are executed in a queue-like fashion.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use the stop() function to interrupt any animation that takes place during that particular moment. Let me know if this works.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Its always a good practice to keep functions that deal with an animation etc inside the function's callback. You can tell if the fadeIn() has finished by doing your function from within its callback, like:</p>\n\n<pre><code>$element.fadeIn(200, function(){\n   //do callback\n});\n</code></pre>\n\n<p>If that is not possible then you can declare a variable outside the function. Say, var elmFadeInRunning = false. Change it to true right before you call fadeIn and change it back to false in the callback of the fadeIn. That way you can know if its still running if elmFadeInRunning == true.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>stop()</code> will only remove animations that are not executed yet.</p>\n\n<p>use <code>stop(true, true)</code> to interrupt and remove the current animation too!</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>You will get smooth fadeIn/Out effect by clearing queue but not jumping to the end, using .stop(true,false), but please notice that as FadeIn can be interrupted this way, FadeOut can not. I reported it as a bug like years ago, but noone cared. FadeIn only works if the object is hidden. But there is workaround... use FadeTo instead - it works on hidden as well as partially faded objects:</p>\n\n<pre><code>    $('.a').hover(function(){\n    $('.b').stop(true,false).fadeTo(3000,1); // &lt;- fadeTo(), not FadeIn() (!!!)\n},function(){\n    $('.b').stop(true,false).fadeOut(3000);\n});\n</code></pre>\n\n<p>Here's how it works: <a href=\"http://jsfiddle.net/dJEmB/\" rel=\"nofollow\">http://jsfiddle.net/dJEmB/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Another working example</p>\n\n<pre><code>&lt;div id=\"fadediv\"&gt;Yay, I like to fade&lt;/div&gt;\n&lt;button id=\"stopdatfade\" &gt;Stop that fade!&lt;/button&gt;\n&lt;script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.8.1/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n(function($){ \n\n    currentfade = $(\"#fadediv\").fadeOut(5000).fadeIn(5000).fadeOut(5000).fadeIn(5000); \n    $('#stopdatfade').on('click', function () { \n        if (typeof currentfade !== 'undefined') { \n\n            currentfade.stop(true, true);\n\n        } \n\n    }); \n})(jQuery);\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Let's say I've called $element.fadeIn(200). 100 ms later, something happens on that page and I want to interrupt that fade and immediately fadeOut(). How can I do this?</p>\n\n<p>If you call calling $element.fadeIn(200).fadeOut(0), the fadeOut() only happens after the fadeIn() has finished.</p>\n\n<p>Also, is there a way I can examine $element to determine if a fadeIn() or fadeOut() is running? Does $element have any .data() member that changes?</p>\n",
            "last_activity_date": 1393601824,
            "question_id": 3620811,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "fade"
            ],
            "title": "jQuery: interrupting fadeIn()/fadeOut()"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can set the <a href=\"https://developer.mozilla.org/en/window.location\"><code>location.hash</code></a> property, like this:</p>\n\n<pre><code>window.location.hash = \"jump_to_this_location\";\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/nick_craver/ntr5b/\">You can give it a try here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>You don't need JS for that.</p>\n\n<p>Accessing <code>yourpage.html#jump_to_this_location</code> will do. This can be done through a link (<code>&lt;a href=\"#jump_to_this_location\"&gt;jump&lt;/a&gt;</code>)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This can be accomplished by first creating an anchor for the page landing spot using HTML.</p>\n\n<pre><code>&lt;a name=\"jumpHere\"&gt;somewhere&lt;/a&gt;\n</code></pre>\n\n<p>Once you have the landing site, simply use the JavaScript:</p>\n\n<pre><code>window.location = 'yoursite.html#jumpHere';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I there a way in javascript to make the page jump to a specific location on the page, such as </p>\n\n<pre><code>&lt;span id='jump_to_this_location'&gt;&lt;/span&gt;\n</code></pre>\n\n<p>I do not want to re=load page, </p>\n",
            "last_activity_date": 1282764308,
            "question_id": 3569329,
            "score": 9,
            "tags": [
                "javascript"
            ],
            "title": "Javascript to make the page jump to a specific location"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Why not just use:</p>\n\n<pre><code>    $('video#test-vid').bind(\"progress\",function(e){\n        console.log(e.total + ' ' + e.loaded + ' ' + e.lengthComputable );\n    });\n</code></pre>\n\n<p>This should work, jQuery should bind the events</p>\n\n<p>Take a look here</p>\n\n<p><a href=\"http://stackoverflow.com/questions/2954595/html5-video-callbacks/2954618#2954618\">http://stackoverflow.com/questions/2954595/html5-video-callbacks/2954618#2954618</a></p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>A few wild guesses...</p>\n\n<p>You have:</p>\n\n<pre><code>var vid = $('#test-vid');\n$(vid).bind(...\n</code></pre>\n\n<p>On that second line, vid is already a jQuery object. Have you tried simply using <code>vid.bind()</code>?</p>\n\n<p>Alternatively, if you know <code>addEventListener</code> works, why not use it? Maybe you'll have luck if, after selecting with jQuery, you emit the undecorated DOM object:</p>\n\n<pre><code>var vid = $('#test-vid');\nvid.get().addEventListener(...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>you get an undefined because jQuery uses a whitelist of event-properties, to normalize events, neither loaded nor total is in this list.</p>\n\n<p>If you want to get the information, you have to use: e.originalEvent.lengthComputable etc..</p>\n\n<p>But honestly you shouldn't do this. This event properties are firefox only and aren't part of the html5 spec anymore. You have to use the buffered object in other browsers. The progress-thing is really problematic in html5 mediaelements. safari on iPad works different from safari on mac and so on.</p>\n\n<p>a cross-browser implementation of a progress-event can be found in the jMediaelement-libary:\n<a href=\"http://github.com/aFarkas/jMediaelement/blob/1.1.3/src/mm.base-api.js#L312\" rel=\"nofollow\">http://github.com/aFarkas/jMediaelement/blob/1.1.3/src/mm.base-api.js#L312</a></p>\n\n<p>regards\nalex</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use the originalEvent:</p>\n\n<pre><code>if(e.originalEvent.lengthComputable &amp;&amp; e.originalEvent.total){\n     var loaded = e.originalEvent.loaded / e.originalEvent.total * 100;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>The below is for an HTML5 video player event.</p>\n\n<p>My partner and I have been stumped for a very large portion of the day on this issue and hope someone can lend some insight on the issue.  We have been able to access the progress event with plain js as seen below but when trying to access this with jQuery we get undefined in console.  Any help/ recommendations are greatly appreciated.</p>\n\n<pre><code>    //JS - Works like a charm\ndocument.addEventListener(\"DOMContentLoaded\", init, false);\nfunction init() {\n    var v = document.getElementById('test-vid');\n    console.log(v)\n    v.addEventListener('progress', progress, false);\n}\nfunction progress(e) {\n    console.log(e.lengthComputable + ' ' + e.total + ' ' + e.loaded);\n}\n\n\n    //  jQuery - NO BUENO - Undefined rendered in console\n    var vid = $('#test-vid');\n    $(vid).bind(\"progress\", function(e){\n            console.log(e.total + ' ' + e.loaded + ' ' + e.lengthComputable );\n\n            });\n</code></pre>\n\n<p>Thanks in advance,</p>\n\n<p>JN</p>\n",
            "last_activity_date": 1284947857,
            "question_id": 2994680,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "html5",
                "html5-video"
            ],
            "title": "Accessing HTML 5 Video Progress Event with jQuery"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><code>Math.max</code> can be used as a higher-order function. The problem is <code>.reduce</code> will call the function with 4 arguments:</p>\n\n<pre><code>Math.max(accumulator, value, index, the_array)\n</code></pre>\n\n<p>here is <code>the_array</code> is an array, so <code>Math.max</code> returns NaN. I don't think there's simpler way to discard the last 2 arguments.</p>\n",
                    "is_accepted": true,
                    "score": 13
                }
            ],
            "body": "<p>In short, this works:</p>\n\n<pre><code>[1, 2, 3].reduce(function (a, b) { return Math.max(a, b); });\n=&gt; 3\n</code></pre>\n\n<p>But this doesn't:</p>\n\n<pre><code>[1, 2, 3].reduce(Math.max);\n=&gt; NaN\n</code></pre>\n\n<p>Pure puzzlement.</p>\n\n<p>This is in Firefox 3.5.9, which I presume is using the <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/reduce\">mozilla standard implementation of reduce</a>, FWIW.</p>\n",
            "last_activity_date": 1274182190,
            "question_id": 2856696,
            "score": 9,
            "tags": [
                "javascript",
                "functional-programming"
            ],
            "title": "How to use Math.max, etc. as higher-order functions"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Short answer: Because people thought that user agent detection (instead of <a href=\"http://www.quirksmode.org/js/support.html\">feature (AKA object) detection</a>) was a good idea, so browser vendors started lying in order to compensate.</p>\n\n<p>Long answer: <a href=\"http://webaim.org/blog/user-agent-string-history/\">History of the browser user-agent string</a> </p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>That navigator.appCodeName based on useragent string and In IE's useragent string, there is Mozilla 4.0 or something, so thats why its display <code>Mozilla</code> for both.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Many years ago, developers used browser detection to reject other browsers, usually favouring Netscape Navigator (precursor to Mozilla and Firefox, also codenamed Mozilla). They tested for the string <code>'Mozilla'</code> in the user agent. Internet Explorer got angsty and decided to imitate Netscape so they could join in on the fun.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am using the browser Firefox and IE. I have run the java script program. In that I was found both the browser code name is showed as: Mozilla. Why?\nThe code is</p>\n\n<pre><code> &lt;script type=\"text/javascript\"&gt;\n document.write(\"Browser CodeName: \" + navigator.appCodeName);\n &lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1339662490,
            "question_id": 2780652,
            "score": 9,
            "tags": [
                "javascript",
                "mozilla",
                "browser"
            ],
            "title": "Why navigator.appCodeName returning Mozilla?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>As far as I remember the specification you must call context.save() before drawing, then draw something, and then call context.restore() to return to the previous state.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can't remove a path/shape from the canvas. You can draw something else over it or clear the canvas.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You might try using SVG instead of canvas.  There's a fantastic library called <a href=\"http://raphaeljs.com/\" rel=\"nofollow\">Rapha\u00ebl</a> that makes working with SVG a breeze.  It works in all browsers too, including IE6.</p>\n\n<p>With SVG each shape is its own element that can be moved, transformed, or removed.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Thanks for the great input to all of you - it helped me find the solution:</p>\n\n<pre><code>context.clearRect(x,y,w,h);\n</code></pre>\n\n<p>(<a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-clearrect\" rel=\"nofollow\">link</a>)</p>\n\n<p>This will clear anything within that rectangle.</p>\n\n<p>I found the method on the page I found while digging for ILog's answer to save/restore the context, and it's all on there. Thanks again.</p>\n",
                    "is_accepted": true,
                    "score": 1
                },
                {
                    "body": "<p>If you're using JQuery:</p>\n\n<pre><code>var elem = $(\"selector\");\nvar canvas = elem.get(0);\nvar context = canvas.getContext(\"2d\");\n\ncontext.clearRect(0, 0, canvas.width, canvas.height);\ncontext.beginPath();\n</code></pre>\n\n<p>Replace \"selector\" with your actual JQuery selector.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To clear your canvas, use the following code</p>\n\n<pre><code>    canvas_context.clearRect(0,0,canvas_1.width,canvas_1.height);\n</code></pre>\n\n<p>Always use <strong>beginPath</strong> method when you are starting to draw a new path and <strong>closePath</strong> method after you finished drawing your path.</p>\n\n<blockquote>\n  <p><strong>NOTE:</strong> <em>Paths that are not closed cannot be cleared.</em></p>\n</blockquote>\n\n<p>If your paths are not getting cleared, it must be because of the above reason.</p>\n\n<p><strike>All path MUST begin with <strong>beginPath()</strong> and end with <strong>closePath()</strong></strike></p>\n\n<p>Example:</p>\n\n<pre><code>     canvas_context.beginPath();\n     canvas_context.moveTo(x1,y1);\n     canvas_context.lineTo(x2,y2);\n     canvas_context.stroke();\n     canvas_context.closePath();\n</code></pre>\n\n<p>The following code also clears your canvas</p>\n\n<pre><code>    canvas_1.width = canvas_1.width;\n</code></pre>\n\n<blockquote>\n  <p><strong>NOTE:</strong> <em>The above statement reinitializes a canvas hence it clears a canvas. Any statement that reinitializes a canvas will clear a canvas.</em></p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is an important thing to realise about <code>&lt;canvas&gt;</code>. It's a flattened image made up of pixels. Once something's drawn to it, it's merged into the pixel grid and cannot be differentiated from the other pixels.</p>\n\n<p>If you need to be able to separate image elements you could:</p>\n\n<ol>\n<li>Overlay <code>&lt;canvas&gt;</code> elements into a stack of layers</li>\n<li>Use <code>&lt;svg&gt;</code> in which each visual element is distinct from the other elements and may be manipulated independently</li>\n</ol>\n\n<p>You can think of <code>&lt;canvas&gt;</code> as being a single layer in PhotoShop/Gimp/Fireworks, or an MSPaint document.</p>\n\n<p>You can think of <code>&lt;svg&gt;</code> as a document in Illustrator/InkScape.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>ctx.save();\nctx.globalCompositeOperation = \"destination-out\";\n// drawing here you path second time\nctx.restore();\n</code></pre>\n\n<blockquote>\n  <p>\"The globalCompositeOperation attribute sets how shapes and images are drawn onto the scratch bitmap\" <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing\">specs</a></p>\n</blockquote>\n\n<p>How it works you can see <a href=\"https://developer.mozilla.org/samples/canvas-tutorial/6_1_canvas_composite.html\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>I can't seem to find the function to remove a shape or path from the canvas after it has been created.</p>\n\n<p>So I'm creating a bezier curve between 2 points with</p>\n\n<pre><code>beginPath();\nbezierCurveTo();\nstroke();\nclosePath();\n</code></pre>\n\n<p>. How can I remove this from the canvas once it's been created? I need to be able to call the remove function via toggle() and blur(). I'm sure something exists for this...</p>\n\n<p>Thanks in advance for any help!</p>\n",
            "last_activity_date": 1375259495,
            "question_id": 2571899,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "canvas"
            ],
            "title": "Javascript/jQuery: remove shape/path from canvas"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If you mean you want to include the tags H1 and P (i.e., the valid markup), don't worry. You get that for free. If you mean you want to it to include all the content within the (partial) selection, you need to access the Selection object. Read about it on <a href=\"http://www.quirksmode.org/dom/range_intro.html\" rel=\"nofollow\">Quirksmode's introduction to Range</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Looking at the MDC documentation, I manage do something like this:</p>\n\n<pre><code>Selection.prototype.coverAll = function() {\n    var ranges = [];\n    for(var i=0; i&lt;this.rangeCount; i++) {\n        var range = this.getRangeAt(i);\n        while(range.startContainer.nodeType == 3\n              || range.startContainer.childNodes.length == 1)\n            range.setStartBefore(range.startContainer);\n        while(range.endContainer.nodeType == 3\n              || range.endContainer.childNodes.length == 1)\n            range.setEndAfter(range.endContainer);\n        ranges.push(range);\n    }\n    this.removeAllRanges();\n    for(var i=0; i&lt;ranges.length; i++) {\n        this.addRange(ranges[i]);\n    }\n    return;\n};\n</code></pre>\n\n<p>You can try it here : <a href=\"http://jsfiddle.net/GFuX6/9/\">http://jsfiddle.net/GFuX6/9/</a></p>\n\n<p>edit: \nUpdated to have the browser display correctly the augmented selection. It does what you asked for, even if the selection contains several ranges (with Ctrl).</p>\n\n<p>To make several partial nodes Bold, here is a solution: </p>\n\n<pre><code>Selection.prototype.boldinize = function() {\n    this.coverAll();\n    for(var i=0; i&lt;this.rangeCount; i++) {\n        var range = this.getRangeAt(i);\n        var parent = range.commonAncestorContainer;\n        var b = document.createElement('b');\n        if(parent.nodeType == 3) {\n            range.surroundContents(b);\n        } else {\n            var content = range.extractContents();\n            b.appendChild(content);\n            range.insertNode(b);\n        }\n    }\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>Thanks to Alsciende I finally came up with the code at <a href=\"http://jsfiddle.net/wesUV/21/\" rel=\"nofollow\">http://jsfiddle.net/wesUV/21/</a>.\nThis method isn't as greedy as the other one. After coverAll(), surroundContents() should always work.</p>\n\n<pre><code>Selection.prototype.coverAll = function() {\n  var ranges = [];   \n  for(var i=0; i&lt;this.rangeCount; i++) {\n    var range = this.getRangeAt(i);\n    var ancestor = range.commonAncestorContainer;\n    if (ancestor.nodeType == 1) {            \n        if (range.startContainer.parentNode != ancestor &amp;&amp; this.containsNode(range.startContainer.parentNode, true)) {\n            range.setStartBefore(range.startContainer.parentNode);\n        }\n        if (range.endContainer.parentNode != ancestor &amp;&amp; this.containsNode(range.endContainer.parentNode, true)) {\n                range.setEndAfter(range.endContainer.parentNode);\n        }\n    }\n    ranges.push(range);\n  }\n  this.removeAllRanges();\n  for(var i=0; i&lt;ranges.length; i++) {\n    this.addRange(ranges[i]);\n  }\n  return;\n};\n</code></pre>\n\n<p>And the boldinize function:</p>\n\n<pre><code>Selection.prototype.boldinize = function() {\n  for(var i=0; i&lt;this.rangeCount; i++) {        \n    var range = this.getRangeAt(i);\n    var b = document.createElement('b');\n    try {\n        range.surroundContents(b);\n    } catch (e) {\n        alert(e);\n    }\n  }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm working on a rich text editor like web application, basically a XML editor written in javascript.</p>\n\n<p>My javascript code needs to wrap a selection of nodes from the contentEditable div container.\nI'm using the methods described at <a href=\"https://developer.mozilla.org/en/DOM/selection\" rel=\"nofollow\">MDC</a>. But since I need to synchronize the div containers content to my XML DOM I would like to avoid partial selections as described in <a href=\"http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html\" rel=\"nofollow\">w3c ranges</a>:</p>\n\n<p><code>&lt;BODY&gt;&lt;H1&gt;Title&lt;/H1&gt;&lt;P&gt;Blah xyz.&lt;/P&gt;&lt;/BODY</code></p>\n\n<p><code>............^----------------^............</code></p>\n\n<p>This selection starts inside H1 and ends inside P, I'd like it to include H1,P completely.</p>\n\n<p>Is there an easy way to extend the selection to cover partially selected children completely?\nBasically I want to use range.surroundContents() without running into an exception.</p>\n\n<p>(The code doesn't need to work with opera/IE)</p>\n",
            "last_activity_date": 1269047108,
            "question_id": 2477192,
            "score": 9,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "Use javascript to extend a DOM Range to cover partially selected nodes"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>If you will be doing graphics on the HTML 5 canvas element, you may want to check the <a href=\"http://processingjs.org/\" rel=\"nofollow\">Processing.js</a> library. There is a <a href=\"http://quasipartikel.at/tween/\" rel=\"nofollow\">tweening library</a>, but you will probably find it helpful <a href=\"http://processingjs.org/exhibition\" rel=\"nofollow\">for many other things</a>. </p>\n\n<blockquote>\n  <p>Processing.js uses JavaScript to draw\n  shapes and manipulate images on the\n  HTML 5 Canvas element. The code is\n  light-weight, simple to learn and\n  makes an ideal tool for visualizing\n  data, creating user-interfaces and\n  developing web-based games.</p>\n</blockquote>\n\n<p>For tweening, you may want to have a look at the following:</p>\n\n<ul>\n<li><a href=\"http://quasipartikel.at/tween/\" rel=\"nofollow\">Tween.lib - Motion Tweening for Processing.js</a></li>\n<li><a href=\"http://quasipartikel.at/2009/11/30/motion-tweening-for-processingjs/\" rel=\"nofollow\">Motion Tweening for Processing.js</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>For tweens in Javascript use <a href=\"http://coderepos.org/share/wiki/JSTweener\" rel=\"nofollow\">http://coderepos.org/share/wiki/JSTweener</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Shape tween as in Flash is harder to find than motion tween and simple attributes interpolation (like in JSTweener, Tween.lib, JQuery's animate(), d3's transition(), RaphaelJS's animate(), etc.). Those libraries, some cited in the other answers, don't do shape tweening.</p>\n\n<p>You first need to know if you want to draw with SVG or with canvas and what library you will be using. Then, you need an interpolator, a function that will compute the transition between two given shapes, that can write a proper path in SVG or canvas. I wrote an implementation for SVG in D3.js to do some animated transitions between a lot of different shapes (using Gielis's <a href=\"http://en.wikipedia.org/wiki/Superformula\" rel=\"nofollow\">superformula</a>), if someone still need one. You can find an example <a href=\"http://bl.ocks.org/1020902\" rel=\"nofollow\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Some animated examples here combine motion|shape tweening using RaphaelJS.  Check out the ones on the bottom:\n<a href=\"http://raphaeljs.com/animation.html\" rel=\"nofollow\">http://raphaeljs.com/animation.html</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I use tween.js (http://learningthreejs.com/) a great library that will tween anything.  If you already use jQuery I would also recommend looking into it's animate function.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there a way to do a shape tween in javascript? \nUsing canvas maybe... </p>\n",
            "last_activity_date": 1408559162,
            "question_id": 2186441,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "animation",
                "jquery-animate"
            ],
            "title": "Shape tween in javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Try this out:</p>\n\n<pre><code>function are_cookies_enabled()\n{\n    var cookieEnabled = (navigator.cookieEnabled) ? true : false;\n\n    if (typeof navigator.cookieEnabled == \"undefined\" &amp;&amp; !cookieEnabled)\n    { \n        document.cookie=\"testcookie\";\n        cookieEnabled = (document.cookie.indexOf(\"testcookie\") != -1) ? true : false;\n    }\n    return (cookieEnabled);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>stackoverflow.com uses <code>&lt;noscript&gt;</code> tags to show a special page if JavaScript is disabled.  There's nothing equivalent for cookies that's built into the language.  Your best bet is probably to take a look at <a href=\"http://stackoverflow.com/questions/531393/how-to-detect-if-cookies-are-disabled-is-it-possible\">this thread</a> on how to detect whether cookies are disabled.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>First you test to see if cookies are enabled. If they are, you output a message. You can hide the message using CSS and then unhide after the test, but then the user will see it if they don't use CSS. You could have the element but with nothing inside, so that it won't display and then user innerHTML to enter the message after the test.</p>\n\n<p>Assuming cookies have already been set (or attempted to be) use:</p>\n\n<pre><code>    var cookieMessage = \"You don't have cookies turned on!\";\n    var cookieHTML = document.getElementById(\"cookiesOff\");\n    function cookieMessage() {\n    if(document.cookie.length == 0) {\n          cookieHTML.innerHTML(cookieMessage);\n          }\n     }\n</code></pre>\n\n<p>And then have an HTML element like an <code>h3</code> or <code>p</code> with an id of <code>cookiesOff</code>.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>There used to be a JavaScript <code>navigator.cookieEnabled</code> interface, but today browsers have a <em>much</em> wider range of cookie controls than just \u2018enabled\u2019/\u2018disabled\u2019, including session/persistent options, first-party/third-party, site-specific settings and P3P. So sniffing this property is of little use now.</p>\n\n<p>No, the only reliable way to find out whether you can set a cookie is to try to set it, and see if it's still there. Another wrinkle is that whilst many browsers will downgrade a persistent cookie to a session cookie when the user's privacy controls don't allow them, IE will not.</p>\n\n<p>If you try to set a persistent cookie in IE when they are disabled, the cookie will simply be thrown on the floor. This can catch you out if you use a simple session-cookie checker, find cookies are enabled, and then try to set a persistent cookie. And you can't get away with trying to set as a session cookie <em>and</em> a persistent cookie, because when you set a persistent cookie in IE with persistent cookies disabled, it will even <em>delete</em> the existing session cookie of the same name. Oh IE!</p>\n\n<p>So if you need to set a persistent cookie but make do with session where persistent isn't available, you'd have to use this first to find out what you're allowed to do:</p>\n\n<pre><code>// Find out what cookies are supported. Returns:\n// null - no cookies\n// false - only session cookies are allowed\n// true - session cookies and persistent cookies are allowed\n// (though the persistent cookies might not actually be persistent, if the user has set\n// them to expire on browser exit)\n//\nfunction getCookieSupport() {\n    var persist= true;\n    do {\n        var c= 'gCStest='+Math.floor(Math.random()*100000000);\n        document.cookie= persist? c+';expires=Tue, 01-Jan-2030 00:00:00 GMT' : c;\n        if (document.cookie.indexOf(c)!==-1) {\n            document.cookie= c+';expires=Sat, 01-Jan-2000 00:00:00 GMT';\n            return persist;\n        }\n    } while (!(persist= !persist));\n    return null;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>How to show a message only if cookies are disabled in browser? like <a href=\"http://stackoverflow.com\">http://stackoverflow.com</a> show if JavaScript is disabled.</p>\n",
            "last_activity_date": 1269475307,
            "question_id": 2167310,
            "score": 9,
            "tags": [
                "javascript",
                "html",
                "xhtml",
                "cookies"
            ],
            "title": "How to show a message only if cookies are disabled in browser?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><strong>Please look at @metavida answer for a better answer than this</strong></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    CKEDITOR.replace( 'editor1',{\n\n          uiColor : '#9AB8F3',\n          stylesSet.add('default', [\n               { name: 'My Custom Block', element: 'h3', styles: { color: 'Blue'} },\n               { name: 'My Custom inline style', element: 'q'}\n          ]);    \n    });\n\n&lt;/script&gt;\n</code></pre>\n\n<p>Though if you're using this in more than one place it'd be best to look at putting this into the stylescombo\\styles\\default.js  file and updating your config.js file accordingly as per api.</p>\n",
                    "is_accepted": true,
                    "score": -7
                },
                {
                    "body": "<p>Little late to the party here, but the default styles are in <code>_source/plugins/styles/styles/default.js</code>. You could use that as your style config and add styles and it would effectively be appending.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>&lt;script type=\"text/javascript\"&gt;\n  // This code could (may be should) go in your config.js file\n  CKEDITOR.stylesSet.add('my_custom_style', [\n    { name: 'My Custom Block', element: 'h3', styles: { color: 'blue'} },\n    { name: 'My Custom Inline', element: 'span', attributes: {'class': 'mine'} }\n  ]);\n  // This code is for when you start up a CKEditor instance\n  CKEDITOR.replace( 'editor1',{\n    uiColor: '#9AB8F3',\n    stylesSet: 'my_custom_style'\n  });\n&lt;/script&gt;\n</code></pre>\n\n<p>You can also read the full documentation of the <code>stylesSet.add</code> syntax:</p>\n\n<ul>\n<li><a href=\"http://docs.ckeditor.com/#!/api/CKEDITOR.stylesSet\" rel=\"nofollow\">CKEditor 4 documentation</a></li>\n<li><a href=\"http://docs.cksource.com/CKEditor_3.x/Developers_Guide/Styles\" rel=\"nofollow\">CKEditor 3 documentation</a>, as Vincent mentioned.</li>\n<li><a href=\"http://docs.ckeditor.com/#!/guide/dev_howtos_styles\" rel=\"nofollow\">CKEditor 4 How Do I Customize the Styles Drop-Down List?</a></li>\n<li><a href=\"http://docs.cksource.com/CKEditor_3.x/Howto/Styles_List_Customization\" rel=\"nofollow\">CKEditor 3 How Do I Customize the Styles Drop-Down List?</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>As has already been mentioned, there is a page explaining how to set up a set of <a href=\"http://docs.cksource.com/CKEditor_3.x/Developers_Guide/Styles\">custom styles</a>. What the little gem hidden on that page (and not really clear) is that rather than creating a named set of styles, you can define the styles inline in your configuration, like this:</p>\n\n<pre><code>    stylesSet : [\n    {\n        name : 'Green Title',\n        element : 'h3',\n        styles :\n        {\n            'color' : 'Green'\n        }\n    } ],\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This works for me</p>\n\n<pre><code>CKEDITOR.addCss('body{background:blue;}');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The best way is to use this plugin: <a href=\"http://ckeditor.com/addon/stylesheetparser\" rel=\"nofollow\">http://ckeditor.com/addon/stylesheetparser</a></p>\n\n<p>Paste it inside the 'ckeditor/plugins' directory, then include something like this in your 'ckeditor/config.js':</p>\n\n<pre><code>config.extraPlugins = 'stylesheetparser';\nconfig.contentsCss = '/css/inline-text-styles.css';\nconfig.stylesSet = [];\n</code></pre>\n\n<p>Where '/css/inline-text-styles.css' is a path to your own css folder in your webroot, outside of ckeditor. That saves you having to mix css with javascript.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I recently added CKEditor to my app and I would like to include my own CSS stylesheets within the editor so that I can select them within the editor.</p>\n\n<p>How do I accomplish this? My code so far looks like this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    CKEDITOR.replace( 'editor1',{\n        uiColor : '#9AB8F3',\n    });\n\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1407236460,
            "question_id": 2102797,
            "score": 9,
            "tags": [
                "javascript",
                "css",
                "ckeditor"
            ],
            "title": "Adding custom styles to CKEditor"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Try setting the autocomplete off on your check box, though this is not standard for all browser but it works on the common browsers.</p>\n\n<pre><code>&lt;input type=\"text\" autocomplete=\"off\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I'm not sure if you are trapping key presses on the window, or on specific DOM elements. You should do the latter (e.g. on the <code>form</code> element), then in your event handler, look into the event object to determine which DOM element was the origin of the event. If this was a text field with autocomplete, then <code>return false;</code>.</p>\n\n<p>Take a look at jQuery's <a href=\"http://docs.jquery.com/Events/keypress#fn\" rel=\"nofollow\"><code>.keypress()</code></a> event handler, and the <a href=\"http://docs.jquery.com/Events/jQuery.Event#event.target\" rel=\"nofollow\"><code>event.target</code></a> property of the event object.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>User always have to press the down key if they choose to select one of the auto complete text right, why not set a variable to something when they press the down key, and then if they do the enter press afterwards you check the variable. You should not do the link click function if the variable is set, otherwise do it as normal.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>Using tuanvt's idea in the accepted answer, I wrote a jQuery plugin that does the job.</p>\n\n<p>I track when the user presses the up, down, page-up and page-down keys to tell when they're in the autocomplete box. All other keys imply they've left it.</p>\n\n<p>I ensure that we only apply these rules to textboxes: all other input elements behave normally.</p>\n\n<p>Opera already does a pretty good job of what I was trying to achieve, so I don't enforce my rules in that browser - otherwise the user would have to press enter twice.</p>\n\n<p>Tested in IE6, IE7, IE8, Firefox 3.5.5, Google Chrome 3.0, Safari 4.0.4, Opera 10.00.</p>\n\n<p>It's available on jquery.com as the <a href=\"http://plugins.jquery.com/project/SafeEnter\">SafeEnter plugin</a>. For your convenience, the code for release 1.0 is as follows:</p>\n\n<pre><code>// jQuery plugin: SafeEnter 1.0\n// http://plugins.jquery.com/project/SafeEnter\n// by teedyay\n//\n// Fires an event when the user presses Enter, but not whilst they're in the browser's autocomplete suggestions\n\n//codesnippet:2e23681e-c3a9-46ce-be93-48cc3aba2c73\n(function($)\n{\n    $.fn.listenForEnter = function()\n    {\n        return this.each(function()\n        {\n            $(this).focus(function()\n            {\n                $(this).data('safeEnter_InAutocomplete', false);\n            });\n            $(this).keypress(function(e)\n            {\n                var key = (e.keyCode ? e.keyCode : e.which);\n                switch (key)\n                {\n                    case 13:\n                        // Fire the event if:\n                        //   - we're not currently in the browser's Autocomplete, or\n                        //   - this isn't a textbox, or\n                        //   - this is Opera (which provides its own protection)\n                        if (!$(this).data('safeEnter_InAutocomplete') || !$(this).is('input[type=text]') || $.browser.opera)\n                        {\n                            $(this).trigger('pressedEnter', e);\n                        }\n                        $(this).data('safeEnter_InAutocomplete', false);\n                        break;\n\n                    case 40:\n                    case 38:\n                    case 34:\n                    case 33:\n                        // down=40,up=38,pgdn=34,pgup=33\n                        $(this).data('safeEnter_InAutocomplete', true);\n                        break;\n\n                    default:\n                        $(this).data('safeEnter_InAutocomplete', false);\n                        break;\n                }\n            });\n        });\n    };\n\n    $.fn.clickOnEnter = function(target)\n    {\n        return this.each(function()\n        {\n            $(this)\n                .listenForEnter()\n                .bind('pressedEnter', function()\n                {\n                    $(target).click();\n                });\n        });\n    };\n})(jQuery);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>track down enter key on keyup event,  selection is completed by the time you detect enter key on keyup event.</p>\n\n<p>detecting enter key on keydown and do operation interfere with autocomplete functionality.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you're using the new html5 form field types, you may wish to alter teedyay's code as follows:</p>\n\n<pre><code>case 13:\n                    // Fire the event if:\n                    //   - we're not currently in the browser's Autocomplete, or\n                    //   - this isn't a textbox, or\n                    //   - this is Opera (which provides its own protection)\n                    if (!$(this).data('safeEnter_InAutocomplete') || !$(this).is('input([type=text],[type=email],[type=number],[type=search],[type=tel],[type=url])') || $.browser.opera)\n                    {\n                        ...\n</code></pre>\n\n<p>Note the new input types.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>JQuery is nice and all but why not use simple JavaScript?</p>\n\n<pre><code>function submit_on_enter(e) {\n    var keycode;\n    if (window.event) keycode = window.event.keyCode;\n    else if (e) keycode = (e.keyCode ? e.keyCode : e.which);\n    else return true;\n\n    if (keycode == 13) {\n        if (window.previousKeyCode) {\n            // down=40,up=38,pgdn=34,pgup=33\n            if (window.previousKeyCode == 33 || window.previousKeyCode == 34 ||\n                window.previousKeyCode == 39 || window.previousKeyCode == 40) {\n                    window.previousKeyCode = keycode;\n                    return true;\n            }\n        }\n        submit_form();\n        return false;\n    } else {\n        window.previousKeyCode = keycode;\n        return true;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This works for me:</p>\n\n<pre><code>$('input').keypress(function(e) {\n    if(e.which == 13) {\n        if(this.value)\n        {\n            $(\"#submitbutton\").click();\n        }\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I faced the same issue and while not perfect I used another approach which I consider simpler. When creating the autocomplete I set the current time for the select event and then compare it before taking any actions:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>$('#completer').autocomplete({\r\n  source: ['First', 'Last'], delay: 0, minLength: 0,\r\n  select: function(ev, ui) {\r\n    $(ev.target).data('lastAutocompleteSelectTimestamp', new Date().getTime())\r\n  }\r\n})\r\n\r\n$(document).on('keydown', '#completer', function(ev){\r\n  if (ev.which != 13) return\r\n  var lastAutocompletionTime = $(ev.currentTarget).data('lastAutocompleteSelectTimestamp')\r\n  if (!lastAutocompletionTime || (new Date().getTime() - lastAutocompletionTime) &gt; 100)\r\n    alert('Enter pressed outside autocomplete context')\r\n})</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;html&gt;\r\n&lt;head&gt;\r\n  &lt;link href=\"https://code.jquery.com/ui/1.11.0/themes/smoothness/jquery-ui.css\" rel=\"stylesheet\"/&gt;\r\n  &lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n  &lt;script src=\"https://code.jquery.com/ui/1.11.0/jquery-ui.min.js\"&gt;&lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n  &lt;input id=completer type=text /&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have some textboxes on a page and I want to click a link when the user presses enter in any of them.</p>\n\n<p>I can easily trap the enter button using javascript (by looking for 13 in <code>event.keyCode</code> and <code>event.which</code>), but I hit an issue when the browser's autocomplete feature kicks in and suggests what the user might want to type. We're finding the users often press enter to accept the browser's suggestion, rather than tab. This confuses the users as the link is clicked immediately, whereas they still intended to enter text into some of the other fields.</p>\n\n<p>I know it would be better to use a form and a submit button here, but for various reasons that's not practical.</p>\n\n<p>I'm using jQuery, so feel free to offer jQuery solutions.</p>\n",
            "last_activity_date": 1412888944,
            "question_id": 1648993,
            "score": 9,
            "tags": [
                "javascript",
                "autocomplete",
                "enter"
            ],
            "title": "Trap the enter key, but not when choosing the browser&#39;s autocomplete suggestion"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<pre><code>if (history.length) {\n    //There is history to go back to\n    history.go(-1);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>If the history has a length greater than 0, then it contains at least one history point.</p>\n\n<pre><code>if (history.length)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Actually, <code>history.length</code> is always one or more, since the current page counts. Also, if you have a forward history (i.e. you used the back button), those pages also count. So you need a more complicated check:</p>\n\n<pre><code>if( (1 &lt; history.length) &amp;&amp; document.referrer ) {\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code> function test() {\n        document.URL = document.referrer;            \n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible check if there is a value for history.go(-1)? I know you can't access history.previous directly.</p>\n\n<p>I am trying to stay away from document.referrer because I know it can be blocked in some instances.</p>\n\n<p>Here is what I am trying to do. I have an error page, on this page I would like to either have a BACK button (if it's not the only item in history) or a close button (if it is).</p>\n",
            "last_activity_date": 1373282750,
            "question_id": 982254,
            "score": 9,
            "tags": [
                "javascript"
            ],
            "title": "Page history - back button exists?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Maybe using lowercase on the tag name?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Perhaps it's something strange IE6 does to URL in the <code>href</code> attribute? Try something like:</p>\n\n<pre><code>$(\"LINK[href*='style.css']\").remove();\n</code></pre>\n\n<p>(i.e. check whether the <code>href</code> value <em>contains</em> \"style.css\")</p>\n\n<p>It's just a guess, however. If that doesn't work, I recommend checking the JQuery documentation closely on the subject of attribute selectors and the <code>remove</code> method.</p>\n\n<p>Also keep in mind that it's also not impossible that it's in fact a bug. (IE6 in general causes lots of issues involving JavaScript and DOM manipulation, among other things.)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><strong>This is not a bug in jQuery, it is a bug (or possibly, a feature) of the IE rendering engine.</strong></p>\n\n<p>It seems this problem is being caused by the fact that Internet Explorer does not correctly re-render the page after removing the LINK element from the DOM.</p>\n\n<p>In this particular case, the LINK tag is no longer present at the DOM, but IE still displays the CSS that has been loaded into memory. </p>\n\n<p><strong>A workaround / solution for this is to disable the stylesheet using the <code>.disabled</code> property like this:</strong></p>\n\n<pre><code>// following code will disable the first stylesheet\n// the actual DOM-reference to the element will not be removed; \n// this is particularly useful since this allows you to enable it\n// again at a later stage if you'd want to.\ndocument.styleSheets[0].disabled = true;\n</code></pre>\n\n<p><strong>EDIT in reply to your comment:</strong></p>\n\n<p>Or, if you want to remove it by the href use the following code:</p>\n\n<pre><code>var styleSheets = document.styleSheets;\nvar href = 'http://yoursite.com/foo/bar/baz.css';\nfor (var i = 0; i &lt; styleSheets.length; i++) {\n    if (styleSheets[i].href == href) {\n        styleSheets[i].disabled = true;\n        break;\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>Topic's quite old, but You can only add ID to your link element, and delete it by element:</p>\n\n<pre><code>$(\"#id\").remove();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I don't want to use styles from style.css, so I decided to remove style.css from DOM. This work just fine in Firefox and IE8, but not in IE6:</p>\n\n<pre><code>$(\"LINK[href='http://www.example.com/style.css']\").remove();\n</code></pre>\n\n<p>Any other solution, with jQuery?</p>\n\n<p><hr /></p>\n\n<p>Here is example:<br />\nHTML:</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n&lt;title&gt;Testing&lt;/title&gt;\n&lt;script type=\"text/javascript\" src=\"path/to/jquery.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n$(document).ready(function() {\n    $(\"link[href*='style.css']\").remove();\t\t   \n});\n&lt;/script&gt;\n&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" /&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id=\"content\"&gt;...&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>And here is CSS (style.css):</p>\n\n<pre><code>#content {\n    background-color:#333;\n}\n</code></pre>\n\n<p>Only in IE #content is still dark. :(<br />\nMaybe is jQuery bug?</p>\n",
            "last_activity_date": 1372411672,
            "question_id": 964631,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "dom"
            ],
            "title": "Removing &lt;link&gt; element with jQuery?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>There is a technique to disable the frame busting code, <a href=\"http://stackoverflow.com/questions/958997/frame-buster-buster-buster-code-needed\">as discussed in a newer SO question</a>:</p>\n\n<blockquote>\n  <p>As it turns out, <strong>your frame-busting code can be busted</strong>, <a href=\"http://coderrr.wordpress.com/2009/02/13/preventing-frame-busting-and-click-jacking-ui-redressing/\" rel=\"nofollow\">as shown here</a>:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var prevent_bust = 0  \n    window.onbeforeunload = function() { prevent_bust++ }  \n    setInterval(function() {  \n      if (prevent_bust &gt; 0) {  \n        prevent_bust -= 2  \n        window.top.location = 'http://server-which-responds-with-204.com'  \n      }  \n    }, 1)  \n&lt;/script&gt;\n</code></pre>\n  \n  <p>This code does the following:</p>\n  \n  <ul>\n  <li>increments a counter every time the browser attempts to navigate away from the current page, via the <code>window.onbeforeonload</code> event handler</li>\n  <li>sets up a timer that fires every millisecond via <code>setInterval()</code>, and if it sees the counter incremented, changes the current location to a server of the attacker's control</li>\n  <li>that server serves up a page with HTTP status code <strong>204</strong>, which does not cause the browser to navigate anywhere</li>\n  </ul>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>A valid question, and one I wish more people would take seriously, rather than just responding with lame comments about \"respecting\" the wishes of those whose material gets linked, sometimes unintentionally.</p>\n\n<p>What about respecting the traffic, that frame busting javascript steals?</p>\n\n<p>In netiquette terms framebusting scripts are actually a big no-no, for that very reason.</p>\n\n<p>There are many genuine, and innocent reasons for using frames, or iframes, and it's not only very easy, but incredibly common, for code, especially url's, to be inserted either legitimately, or illegitimately, into a page within that frameset, that leads traffic intentionally or otherwise, to another page that rather rudely then breaks the frameset, and steal the traffic.</p>\n\n<p>The correct netiquette approach for a webmaster to use, who doesn't wish for his material to be displayed in a frameset, whether it was done intentionally, or unintentionally, is to make a redirect script to a top page, that displays a message informing the surfer that the page requested was not intended to be viewed in frames, and should they wish to view that page then they can view it at an url, that is then linked, to open in a new tab, or browser page, which doesn't break the frameset, and steal the original sites traffic, thus allowing the surfer to make the choice themselves as to where they actually wish to surf.</p>\n\n<p>I wish more webmasters would respect such netiquette.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>After much searching I developed a simple trick. I created a dummy page in my own site which the i frame called for. I then had an i frame in the dummy page which called for the site breaking out of the frames. It broke out of the first frame, but since the dummy page was on my site it stayed neatly in the frame of the top page. violla</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This is my first post so don't trash me if it doesn't work, but this fix seems to work for me in IE.\nAdd security=\"restricted\" to your frame.</p>\n\n<p>example:</p>\n\n<pre><code>&lt;iframe id=\"frame_id\" name=\"frame_name\" security=\"restricted\" src=\"page.html\"&gt;  \n&lt;/iframe&gt;\n</code></pre>\n\n<p>Edit:  I found a better solution. That doesn't block scripts and doesn't require javascript.  Try using sandbox=\"...\"</p>\n\n<ul>\n<li>allow-forms allows form submission</li>\n<li>allow-popups allows popups</li>\n<li>allow-pointer-lock allows pointer lock</li>\n<li>allow-same-origin allows the document to maintain its origin</li>\n<li>allow-scripts allows JavaScript execution, and also allows features to trigger automatically</li>\n<li>allow-top-navigation allows the document to break out of the frame by navigating the top-level window</li>\n</ul>\n\n<p><strong>Top navigation is what you want to prevent, so leave that out and it will not be allowed.  Anything left out will be blocked</strong></p>\n\n<p>ex. </p>\n\n<pre><code>        &lt;iframe sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms\" src=\"http://www.example.com\"&lt;/iframe&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I'm doing some simple web integration work which I'm accomplishing through use of an iframe.  My main window has some javascript which interacts with my server to redirect the iframe to the required URL.  One of the target pages sadly has the following piece of code inside:</p>\n\n<pre><code>if (top.location != location) {\n    top.location.href = document.location.href ;\n}\n</code></pre>\n\n<p>The script dies because of cross-site-cripting restrictions and prevents that page from rendering properly.  I can't modify the source of that page (3rd party I'm integrating with).  </p>\n\n<p>How could I work around this?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1392653686,
            "question_id": 752465,
            "score": 9,
            "tags": [
                "javascript",
                "iframe"
            ],
            "title": "Preventing child iframe from &quot;breaking out of frame&quot;"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This event handler works in all the major browsers.</p>\n\n<pre><code>function onkeyup(e) {\n    var code;\n    if (!e) var e = window.event; // some browsers don't pass e, so get it from the window\n    if (e.keyCode) code = e.keyCode; // some browsers use e.keyCode\n    else if (e.which) code = e.which;  // others use e.which\n\n    if (code == 8 || code == 46)\n        return false;\n}\n</code></pre>\n\n<p>You can attach the event to this function like:</p>\n\n<pre><code>&lt;input onkeyup=\"return onkeyup()\" /&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p><strong>update</strong> based on <a href=\"http://stackoverflow.com/users/187523/joecoder\">@JoeCoder</a>s comment and the 'outdatedness' of my answer, I revised it.</p>\n\n<pre><code>document.querySelector([text input element]).onkeydown = checkKey;\nfunction checkKey(e) {\n    e = e || event;\n    return !([8, 46].indexOf(e.which || e.keyCode || e.charCode) &gt; -1);\n}\n</code></pre>\n\n<p>See also <a href=\"http://jsfiddle.net/KooiInc/9r6bvaLd/\" rel=\"nofollow\"><strong>this jsFiddle</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>$(document).keydown(function(e) {\n    if (e.keyCode === 8) {\n        var element = e.target.nodeName.toLowerCase();\n        if ((element != 'input' &amp;&amp; element != 'textarea') || $(e.target).attr(\"readonly\")) {\n            return false;\n        }\n    }\n}); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This code cancels backspace action.</p>\n\n<pre><code>window.onkeydown = function (event) {\n\n    if (event.which == 8) { \n\n         event.preventDefault();   // turn off browser transition to the previous page \n\n                 // put here code you need \n\n        }; \n\n};      \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Anyone know how can I disable backspace and delete key with Javascript in IE? This is my code below, but seems it's not work for IE but fine for Mozilla.</p>\n\n<pre><code>onkeydown=\"return isNumberKey(event,this)\"\n\nfunction isNumberKey(evt, obj)\n{\n\n    var charCode = (evt.which) ? evt.which : evt.keyCode\n    if (charCode == 8 || charCode == 46) return false;\n\n    return true;\n}\n</code></pre>\n",
            "last_activity_date": 1423307935,
            "question_id": 664631,
            "score": 9,
            "tags": [
                "javascript"
            ],
            "title": "Disable backspace and delete key with javascript in IE"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><strong>Edit:</strong> Here is some code which should do what you're after. Here <code>select_1</code>, <code>select_2</code>, etc should be the IDs of the dropdowns. <code>getDropdown()</code> should be a function that returns the selected value of the given dropdown ID using your choice of method (<code>document.getElementById().options.selectedIndex,</code>, jquery, etc)</p>\n\n<pre><code>&lt;div id=\"parent\"&gt;\n    &lt;div id=\"child1\"&gt;\n    \t..content\n    \t&lt;select id=\"select_1\"&gt;...content&lt;/select&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"child2\"&gt;\n    \t..content\n    \t&lt;select id=\"select_2\"&gt;...content&lt;/select&gt;\n    &lt;/div&gt;\n\n    &lt;div id=\"child3\"&gt;\n    \t..content\n    \t&lt;select id=\"select_3\"&gt;...content&lt;/select&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><hr /></p>\n\n<pre><code> function sortValues()\n    {\n        /*Save the contents of each div in an array \n          so they can be looped through and \n          re inserted later*/\n        var content=[$(\"#child1\").html(),$(\"#child2\").html,$(\"#child3\").html()];\n\n        //Get the value of all dropdowns and sort them\n        var sortedArray=[getDropdown(\"select_3\"),getDropdown(\"select_2\"),getDropdown(\"select_3\")];\n        var sortedContent=new Array();\n        sortedArray.sort();\n\n        /*Loop through all the sorted values, \n         compare the value of each dropdown\n         against the sorted value and use that \n         to determine the new arrangement of the divs\n         */\n        for (x=0; x&lt; sortedArray.length; x++)\n        {\n        \tfor (y=0; y&lt;=content.length; y++)\n        \t{\n        \t\tif (getDropdown(\"dropdown_\" + (y+1))==sortedArray[x])\n        \t\t{\n        \t\t\tsortedContent[x]=content[x];\n                               //This will prevent the same div from being assigned again:\n        \t\t\t$(\"#select_\" + (y+1)).remove(); \n        \t\t\tbreak;\n        \t\t}\n\n        \t}\n\n        }\n        /* Empty the parent div so new divs can be inserted.\n           You can also do a fadeout/fadeIn of the div here\n         */\n\n\n        $(\"#parent\").empty();     \t\n\n        for (x=0; x&lt; sortedContent.length; x++)\n        {\n        \t$(\"#parent\").append(sortedContent[x]);\n        }\n    }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                }
            ],
            "body": "<p>I have HTML like the following on my website:</p>\n\n<pre><code>&lt;div class=\"groups\"&gt;\n  &lt;div class=\"group\"&gt;\n    Group 1 priority:\n    &lt;select&gt;\n      &lt;option value=\"1.0\"&gt;1&lt;/option&gt;\n      &lt;option value=\"2.0\" selected=\"selected\"&gt;2&lt;/option&gt;\n      &lt;option value=\"3.0\"&gt;3&lt;/option&gt;\n    &lt;/select&gt;\n  &lt;/div&gt;\n  &lt;div class=\"group\"&gt;\n    Group 2 priority:\n    &lt;select&gt;\n      &lt;option value=\"1.0\"&gt;1&lt;/option&gt;\n      &lt;option value=\"2.0\"&gt;2&lt;/option&gt;\n      &lt;option value=\"3.0\" selected=\"selected\"&gt;3&lt;/option&gt;\n    &lt;/select&gt;\n  &lt;/div&gt;\n  &lt;div class=\"group\"&gt;\n    Group 3 priority:\n    &lt;select&gt;\n      &lt;option value=\"1.0\" selected=\"selected\"&gt;1&lt;/option&gt;\n      &lt;option value=\"2.0\"&gt;2&lt;/option&gt;\n      &lt;option value=\"3.0\"&gt;3&lt;/option&gt;\n    &lt;/select&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>I am looking for a way to sort the order these groups appear in the browser using jQuery, based on the what is selected in the dropdown. It should resort when the user selects a new value in any of the dropdowns, or on page load.</p>\n\n<p>What would be the easiest approach to this problem?</p>\n\n<p>I have jQuery UI available, if the sortable thing can be used in any way. I couldn't not find a way to use that.</p>\n\n<p><strong>Update</strong>: There is other data in the &lt;div class=\"group\"&gt; that should follow the dropdowns wherever they are moved. The number of groups varies from 0 to 20.</p>\n",
            "last_activity_date": 1234789651,
            "question_id": 552888,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "sorting"
            ],
            "title": "Sort &lt;div&gt; elements using jQuery"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<pre><code>&lt;div class=\"thing\" id=\"myapp-thing-5\"/&gt;\n\n// Get thing on the page for a particular ID\nvar myThing = select(\"#myapp-thing-5\");\n\n// Get ID for the first thing on the page\nvar thing_id = /myapp-thing-(\\d+)/.exec ($('.thing')[0].id)[1];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Considering the fact that you can have multiple classes per element, couldn't you create a unique identifier as an additional class per element? That way, there could be more than one element with the same \"id\" without HTML ID attribute collisions.</p>\n\n<pre><code>&lt;div class=\"thing myapp-thing-5\" /&gt;\n&lt;div class=\"thing myapp-thing-668\" /&gt;\n&lt;div class=\"thing myapp-thing-5\" /&gt;\n</code></pre>\n\n<p>It would be easy to then find these nodes, and find their corresponding DB record with a little string manipulation.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><strong>You'll be giving up some control of the DOM</strong></p>\n\n<p>True, nothing will explode, but it's bad practice. If you put duplicate ids on the page you'll basically loose the ability to <strong>be sure about what you're getting</strong> when you try to access an element by its id.</p>\n\n<pre><code>var whoKnows = document.getElementById('duplicateId');\n</code></pre>\n\n<p>The behavior is actually different, depending on the browser.  In any case, you can use classNames for duplicate values, and you'll be <strong>avoiding the problem altogether</strong>.</p>\n\n<p>The browser will try to overlook faults in your markup, but things become <strong>messy and more difficult</strong>.  The best thing to do is keep your markup valid.  You can describe both the type of the element and its unique database id in a className.  You could even use <strong>multiple classNames</strong> to differentiate between them.  There are a <strong>lot of valid possibilities</strong>:</p>\n\n<pre><code>&lt;div class=\"friend04\"/&gt;\n&lt;div class=\"featuredFriend04\" /&gt;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>&lt;div class=\"friend friend04\" /&gt;\n&lt;div class=\"featuredFriend friend04\" /&gt;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>&lt;div class=\"friend objectId04\" /&gt;\n&lt;div class=\"groupMember objectId04\" /&gt;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>&lt;div class=\"friend objectId04\" /&gt;\n&lt;div class=\"friend objectId04\" id=\"featured\" /&gt;\n</code></pre>\n\n<p>These are all completely legitimate &amp; valid snippets of XHTML.  Notice how, in the last snippet, that I've still got an id working for me, which is nice.  Accessing elements by their id is very quick and easy, so you definitely want to be able to leverage it when you can.</p>\n\n<p>You'll already spend enough of your time in javascript <strong>making sure that you've got the right values and types</strong>.  Putting duplicate ids on the page will just make things harder for you.  If you can find ways to write standards-compliant markup, it has many <strong>practical benefits</strong>.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Non-standard attributes are fine, if you're using XHTML and take the time to extend the DTD you're using to cover the new attributes. Personally, I'd just use a more unique id, like some of the other people have suggested.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Note that an ID cannot start with a digit, so:</p>\n\n<pre><code>&lt;div class=\"thing\" id=\"5\"&gt;\n</code></pre>\n\n<p>is invalid HTML. See <a href=\"http://stackoverflow.com/questions/70579/what-is-a-valid-value-for-id-attributes-in-html#70586\">http://stackoverflow.com/questions/70579/what-is-a-valid-value-for-id-attributes-in-html#70586</a></p>\n\n<p>In your case, I would use ID's like <code>thing5</code> or <code>thing.5</code>.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>In HTML5, you could do it like this:</p>\n\n<pre><code>\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;title&gt;&lt;/title&gt;\n        &lt;script&gt;\n            window.addEventListener(\"DOMContentLoaded\", function() {\n                var thing5 = document.evaluate('//*[@data-thing=\"5\"]', \n                document, null, XPathResult.FIRST_ORDERED_NODE_TYPE ,null);\n                alert(thing5.singleNodeValue.textContent);\n            }, false);\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div data-thing=\"5\"&gt;test&lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>IDs should be unique according to the standards and whilst most browsers don't barf when handed duplicate IDs it would not be a good idea to rely on that always being the case.</p>\n\n<p>Making the ID unique by adding a type name to the ID would work but you need to ask why you need it.  Giving an element an id is very useful when the element needs to be found, getElementById is very fast.  The reason its fast it that most browsers will build an index of IDs as its loads the DOM.  However if you have zillions of IDs that you never actually need to use in something like getElementById then you've incurred a cost that is never paid back.</p>\n\n<p>I think you may find most of the time you want the object ID in an event fired by the element or one of its children.  In which case I would use an additional attribute on the element and not the ID attribute.</p>\n\n<p>I would leave class attribute to do what its meant to do and not overload it with identification duties.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I don't like <a href=\"http://stackoverflow.com/users/3560/john-millikin\">John Millikin's</a> solution. It's gonna be performance-intensive on large datasets.</p>\n\n<p>An optimization on his code could be replacing the regular expression with a call to <code>substring()</code> since the first few characters of the id-property are constant.</p>\n\n<p>I'd go with matching <code>class</code> and then a specific <code>id</code> though.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you set non-standard properties, be sure to either set them programmatically (as everything will be legal that way) or go through the trouble of revising the dtd !-)</p>\n\n<p>But I would use an ID with a meaningful word prepending the DB-id and then use .getElementById, as every necessary informtion is at hand ...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Keeping track of your data via the DOM seems shaky to me; remember, those IDs are global variables, so if there's any chance somebody else's script can find its way onto your page, it's vulnerable.  For best results, load your data into an object within an anonymous function and write the table (or the big nested list of DIVs) afterwards.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>It seems pretty common to want to let your javascript know a particular dom node corresponds to a record in the database.  So, how do you do it?</p>\n\n<p>One way I've seen that's pretty common is to use a class for the type and an id for the id:</p>\n\n<pre><code>&lt;div class=\"thing\" id=\"5\"&gt;\n&lt;script&gt; myThing = select(\".thing#5\") &lt;/script&gt;\n</code></pre>\n\n<p>There's a slight html standards issue with this though -- if you have more than one type of record on the page, you may end up duplicating IDs.  But that doesn't do anything bad, does it?</p>\n\n<p>An alternative is to use data attributes:</p>\n\n<pre><code>&lt;div data-thing-id=\"5\"&gt;\n&lt;script&gt; myThing = select(\"[data-thing-id=5]\") &lt;/script&gt;\n</code></pre>\n\n<p>This gets around the duplicate IDs problem, but it does mean you have to deal with attributes instead of IDs, which is sometimes more difficult.  What do you guys think?</p>\n",
            "last_activity_date": 1257480569,
            "question_id": 165783,
            "score": 9,
            "tags": [
                "javascript",
                "html",
                "database"
            ],
            "title": "Opinion: in HTML, Possible Duplicate IDs or Non-Standard Attributes?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Those notices are printed when <code>phantom.exit</code> is called. They don't cause any trouble, but are not nice when you need a clean PhantomJS output. In your case you can suppress the notices by \"asynchronizing\" <code>phantom.exit</code> like this:</p>\n\n<pre><code>setTimeout(function(){\n    phantom.exit();\n}, 0);\n</code></pre>\n\n<p>I think the reason this is happening is because a large string is passed from the page context when phantom tries to exit.</p>\n\n<p>I created a <a href=\"https://github.com/ariya/phantomjs/issues/12697\">github issue</a> for this.</p>\n",
                    "is_accepted": true,
                    "score": 17
                }
            ],
            "body": "<p>I'm trying to convert a webpage into a single file by embedding all the images (and other external resources once I passed this point). Here's how I run PhantomJs:</p>\n\n<pre><code>./phantomjs --web-security=false ./embed_images.js http://localhost/index.html &gt; output.txt\n</code></pre>\n\n<p>And here's the <code>embed_images.js</code>:</p>\n\n<pre><code>var page = require('webpage').create(),\n    system = require('system'),\n    address;\n\nif (system.args.length === 1) {\n    console.log('Usage: embed_images.js &lt;some URL&gt;');\n    phantom.exit(1);\n}\nelse {\n    page.onConsoleMessage = function(msg) {\n        console.log(msg);\n    };\n    address = system.args[1];\n    page.open(address, function(status) {\n        page.evaluate(function() {\n            function embedImg(org) {\n                var img = new Image();\n                img.src = org.src;\n                img.onload = function() {\n                    var canvas = document.createElement(\"canvas\");\n                    canvas.width = this.width;\n                    canvas.height = this.height;\n\n                    var ctx = canvas.getContext(\"2d\");\n                    ctx.drawImage(this, 0, 0);\n\n                    var dataURL = canvas.toDataURL(\"image/png\");\n\n                    org.src = dataURL;\n                    console.log(dataURL);\n                }\n            }\n            var imgs = document.getElementsByTagName(\"img\");\n            for (var index=0; index &lt; imgs.length; index++) {\n                embedImg(imgs[index]);\n            }\n        });\n        phantom.exit()\n    });\n}\n</code></pre>\n\n<p>When I run the mentioned command, it results in a file like this:</p>\n\n<pre><code>Unsafe JavaScript attempt to access frame with URL  from frame with URL file://./embed_images.js. Domains, protocols and ports must match.\nUnsafe JavaScript attempt to access frame with URL about:blank from frame with URL file://./embed_images.js. Domains, protocols and ports must match.\n</code></pre>\n\n<p>There's multiple instances of the above error message. To test what's wrong, I ran the below code in my Chromium's console:</p>\n\n<pre><code>function embedImg(org) {\n    var img = new Image();\n    img.src = org.src;\n    img.onload = function() {\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = this.width;\n        canvas.height = this.height;\n\n        var ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(this, 0, 0);\n\n        var dataURL = canvas.toDataURL(\"image/png\");\n\n        org.src = dataURL;\n        console.log(dataURL);\n    }\n}\nvar imgs = document.getElementsByTagName(\"img\");\nfor (var index=0; index &lt; imgs.length; index++) {\n    embedImg(imgs[index]);\n}\n</code></pre>\n\n<p>And it works just fine (my webpage doesn't reference any cross-domain images)! It will embed all the images into the HTML page. Does anyone know what might the problem be?</p>\n\n<p>Here's my <code>index.html</code> file's content:</p>\n\n<pre><code>&lt;!DOCTYPE html &gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta charset=\"utf-8\" /&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;img src=\"1.png\" &gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>And actual output (<code>output.txt</code>):</p>\n\n<pre><code>Unsafe JavaScript attempt to access frame with URL  from frame with URL file://./embed_images.js. Domains, protocols and ports must match.\n\nUnsafe JavaScript attempt to access frame with URL  from frame with URL file://./embed_images.js. Domains, protocols and ports must match.\n\nUnsafe JavaScript attempt to access frame with URL about:blank from frame with URL file://./embed_images.js. Domains, protocols and ports must match.\n\nUnsafe JavaScript attempt to access frame with URL about:blank from frame with URL file://./embed_images.js. Domains, protocols and ports must match.\n\nUnsafe JavaScript attempt to access frame with URL about:blank from frame with URL file://./embed_images.js. Domains, protocols and ports must match.\n\nUnsafe JavaScript attempt to access frame with URL about:blank from frame with URL file://./embed_images.js. Domains, protocols and ports must match.\n\nUnsafe JavaScript attempt to access frame with URL about:blank from frame with URL file://./embed_images.js. Domains, protocols and ports must match.\n\nUnsafe JavaScript attempt to access frame with URL about:blank from frame with URL file://./embed_images.js. Domains, protocols and ports must match.\n\nUnsafe JavaScript attempt to access frame with URL about:blank from frame with URL file://./embed_images.js. Domains, protocols and ports must match.\n\nUnsafe JavaScript attempt to access frame with URL about:blank from frame with URL file://./embed_images.js. Domains, protocols and ports must match.\n\nUnsafe JavaScript attempt to access frame with URL about:blank from frame with URL file://./embed_images.js. Domains, protocols and ports must match.\n</code></pre>\n\n<p>The strange thing is that while I've got just one image on my page, there are numerous error messages!</p>\n\n<p>I'm using <strong>phantomjs-1.9.8-linux-x86_64</strong>.</p>\n",
            "last_activity_date": 1414835898,
            "question_id": 26608391,
            "score": 8,
            "tags": [
                "javascript",
                "embed",
                "phantomjs"
            ],
            "title": "Using PhantomJS to embed all images of a webpage produces warnings but works"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The only idea that comes to mind is (blech) to use a global, and then to manually trigger an Angular update, e.g.:</p>\n\n<pre><code>var callback$scope;\nfunction QuakeCtrl($scope, $http) {\n\n    $scope.get_quakes = function() {\n        var url = 'http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_day.geojsonp';\n        callback$scope = $scope;\n        $http.jsonp(url)\n    }\n\n}\n\nfunction eqfeed_callback(data) {\n    if (callback$scope) {\n        // 1. Use callback$scope here\n        // 2. Set callback$scope to undefined or null\n        // 3. Trigger an Angular update (since it won't be automatic)\n    }\n}\n</code></pre>\n\n<p>Not pretty, but...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Another option would be defining the eqfeed_callback within the scope like this:</p>\n\n<pre><code>function QuakeCtrl($scope, $http) {\n    $scope.data = null;\n    $scope.get_quakes = function() {\n      var url = 'http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_day.geojsonp';\n      $http.jsonp(url)\n    }\n\n    window.eqfeed_callback = function(data) {\n      $scope.data = data\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>I'm attempting to use Angularjs to gather data from the USGS Earthquake feed. Typically you would need to tack ?callback=JSON_CALLBACK on to the end of the URL for Angular to use it, however the USGS feed does not recognize this option. </p>\n\n<p>The URL I'm using is <a href=\"http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_day.geojsonp\">http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_day.geojsonp</a> and adding ?callback=JSON_CALLBACK (eg. <a href=\"http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_day.geojsonp?callback=JSON_CALLBACK\">http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_day.geojsonp?callback=JSON_CALLBACK</a>) returns a dataset wrapped in a function called eqfeed_callback. </p>\n\n<p>Is there any way to use this data? I've got an eqfeed_callback function but it's not in scope which makes using Angular pointless. </p>\n\n<p>Here's the code that I've got as it stands: </p>\n\n<pre><code>function QuakeCtrl($scope, $http) {\n\n    $scope.get_quakes = function() {\n        var url = 'http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_day.geojsonp';\n        $http.jsonp(url)\n    }\n\n}\n\nfunction eqfeed_callback(data) {\n    return data;\n}\n</code></pre>\n\n<p>Is there any way to either get the data back into the scope, or get angular to use the eqfeed_callback function internally?</p>\n",
            "last_activity_date": 1381821134,
            "question_id": 19375033,
            "score": 8,
            "tags": [
                "javascript",
                "angularjs",
                "jsonp"
            ],
            "title": "Using angularjs JSONP when callback cant be defined"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The object in the console initially is shown as <code>Object</code> and expanded when you click on the arrow.</p>\n\n<p>There is an i-icon when you expand the Object, when you hover it you'll see the answer:</p>\n\n<p><em>object state below is captured upon first expansion</em></p>\n\n<p>What you see after the expansion is the state of the object at the time of the expansion, not the state at the moment when you call <code>log()</code></p>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>I've been testing some JavaScript using the <code>Google Chrome version 28.0.1500.95 m</code> console and am looking for a bit more understanding of how it works:  Have a look at the code below:</p>\n\n<pre><code>var obj = {\n    a: 99,\n    f: function() { }\n}\n\nconsole.log(obj.a)\nconsole.log(obj.z)    \nconsole.log(obj)\n\no.z = 100;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/NE5gG/\">Demo</a></p>\n\n<p>This outputs the following results:</p>\n\n<pre><code>99 \nundefined \nObject {a: 99, f: function}\na: 99\nf: function () { }\nz: 100\n__proto__: Object\n</code></pre>\n\n<p>My question is, why is <code>z</code> visible in the results when it wasn't declared until after the log?</p>\n\n<p>I'm assuming this is something with how the console works and not some weird scoping rule in JavaScript, that I'm unaware of?</p>\n\n<p>Can anyone tell me what's happening here please?</p>\n",
            "last_activity_date": 1375865346,
            "question_id": 18098482,
            "score": 8,
            "tags": [
                "javascript",
                "google-chrome"
            ],
            "title": "Javascript Object Property logged in Google Chrome Console before Declaration"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Your initial fix (declaring static middleware handlers for specific prefixes) should work just fine, but you need to make sure they are declared <em>before</em> any other routes (and <code>app.router</code>, although you don't need to explicitly use it):</p>\n\n<pre><code>// these need to go first:\napp.use(\"/js\", express.static(__dirname + \"/../app/js\"));\napp.use(\"/img\", express.static(__dirname + \"/../app/img\"));\napp.use(\"/css\", express.static(__dirname + \"/../app/css\"));\napp.use(\"/partials\", express.static(__dirname + \"/../app/partials\"));\n\n// any other routes:\napp.all(\"/*\", ...);\n</code></pre>\n\n<p>Also, you need to make sure that the prefixed static handlers are actually declared okay (correct path), otherwise they won't be able to find any requested files and the requests will pass down the middleware chain and ultimately be handled by the catch-all handler (should be easy enough to test by commenting out the catch-all handler and see if any JS/CSS/... requests work okay).</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>I like @robertklep's answer because his reasoning is solid, but I disagree with the unix style redirect <code>*</code></p>\n\n<p>I also disagree with hashbangs and can't understand why you want to use a hashbang. I think we stopped trying to develop links with those a while back. Read this article on why <a href=\"http://www.tbray.org/ongoing/When/201x/2011/02/09/Hash-Blecch\" rel=\"nofollow\">http://www.tbray.org/ongoing/When/201x/2011/02/09/Hash-Blecch</a></p>\n\n<p>Express is great for SPAs and you can enable intelligent routing by an anonymous function that inserts a hash in the URL at the end of the middleware. You can modify it to suit your needs, but I usually throw it after the routing middleware and any calls to the static method. I go like this in my express apps:</p>\n\n<pre><code>app.use(express.bodyParser())\napp.use(app.router)\napp.use(require('stylus').middleware({src: __dirname + '/public',   compress: true}))\napp.use(express.static(path.join(__dirname, '/public')))\napp.use(function(req, res) {\n  return res.redirect(req.protocol + '://' + req.get('Host') + '/#' + req.url)\n})\n</code></pre>\n\n<p>For me this is a best practice in writing SPAs. I use the same function with Backbone/Express, especially when I upgrade the Backbone router to remove the ugly hash following the HTML5 location API. Check out <a href=\"https://github.com/reqshark/angular-express-seed/blob/master/app.js#L29-L33\" rel=\"nofollow\">my fork of the express angular seed</a> and stop with that overbearing style redirect in our server logic. Just <a href=\"https://github.com/btford/angular-express-seed/pull/12\" rel=\"nofollow\">let the client application decide</a> where to redirect people. It's important to let the client decide this because it preserves application state later when their initial request URL differs from the first client index we configured. Why not let people bookmark URLs across your app and arrive there in one request? You may see a brief initial load but immediately thereafter, our clientside JavaScript executes the needful as we slip that hash in before their req.params and BOOM! Now they can't land on anything but a single index and any meaningful parameters available to the clientside router logic. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm working on a web application using Angularjs and Requirejs on the client, with Nodejs on the server.</p>\n\n<p>Here is some sample code to show you how I set it up.</p>\n\n<blockquote>\n  <p>Note this example is showing a hash url but you can easily change that by modifying the middleware function and angular configuration</p>\n</blockquote>\n\n<h3>Middleware function</h3>\n\n<pre><code>isXHR: function (req, res, next) {\n    if (req.xhr || req.get(\"angular-request\") === \"ajaxRequest\") {\n        next();\n    } else {\n        var url = req.url;\n        var urls = url.split(\"/\");\n        var last = _.last(urls);\n        urls = _.without(urls, last);\n        url = urls.join(\"/\") + \"#/\" + last //remove the hash if you want to make it html5mode;\n\n        res.redirect(url);\n    }\n}\n</code></pre>\n\n<h3>Server route configuration</h3>\n\n<pre><code>//I'm using express-namespace to group my routes\napp.namespace(\"/requirements\", function(){\n   //Shared local variable used across the application\n   var info = {\n        app: {\n            title: \"Requirements\",\n            module: \"app/requirements\" // where the angular application stored\n        }\n    }\n    //this is the main url that will user request\n    Route.get(\"/\", function (req, res) {\n        res.cookie(\"profileRegisterationSteps\", 0);\n        res.render(\"app/requirements/index\", info);\n    });\n   //this is the url angular js will request\n    Route.get(\"type\", filters.isXHR, function (req, res) {\n        res.render(\"app/requirements/profile/type\", info);\n    });\n })\n</code></pre>\n\n<h3>Client route configuration</h3>\n\n<pre><code>require(['App', 'underscore', 'ngAmd'/*angular amd*/, 'autoload'/*No Sense*/, 'appLoader' /*i used to load my scripts file for the route user requested (not all scripts files only who requested) before template laoded*/, 'appRoute'/*this is a list of routes*/], function (app, _, amd, autoload, loader, routes) {\n\napp.config(function ($routeProvider, $locationProvider, $httpProvider) {\n    //remove a clearn URL\n    $locationProvider.html5Mode(false);\n\n    //ku dar header kan si uu server ka u ogaado Request in yahay Ajax\n    $httpProvider.defaults.headers.common['angular-request'] = \"ajaxRequest\";\n\n    //Route Config\n    var Route = $routeProvider;\n    //get all routes objects that defined in routes module\n    _.each(routes, function (route) {\n        // extend the routes module objects and use its properties\n        Route.when(route.url, _.extend(route, {\n            //call returning function in loader module and write the promise\n            resolve: _.extend(loader(route))\n        }));\n    });\n    Route.otherwise({\n        redirectTo: \"/\"\n    });\n\n});\n\n  //start the application\n  amd.bootstrap(app);\n });\n</code></pre>\n\n<h3>Apploader file</h3>\n\n<pre><code>require.config({\n    paths: {\n        //pages\n       type: \"Apps/requirements/pages/type\"\n   }\n});\n define(['App'], function(app) {\n    return function (options) {\n      return {\n        loader: function ($q, $rootScope) {\n            var defer = $q.defer();\n            var module = options.name// the name of the route (this name corresponds to the requirejs module name above;\n\n            if (!!(module)) {\n                if (require.defined(module)) {\n                    defer.resolve();\n                } else {\n                    require([module], function () {\n                        $rootScope.safeApply(function () {\n                            defer.resolve();\n                        })\n                    });\n                }\n            } else {\n                defer.resolve();\n            }\n\n            return defer.promise;\n        }\n      }\n    }\n });\n</code></pre>\n\n<h3>Routes file</h3>\n\n<pre><code>define(function(){\n  return {\n     {\n        name        : \"type\",\n        url         : \"/\",\n        templateUrl : \"/requirements/type\",\n        view        : 'services'\n    }\n\n }\n\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm using a nodeJS server with Express to serve my AngularJS application. This all works fine when I'm using angularJS default routes (hashbangs), but now I'm trying to activate html5 mode.</p>\n\n<p>I'm activating html5mode like this:</p>\n\n<pre><code>$locationProvider.html5Mode(true).hashPrefix('!');\n</code></pre>\n\n<p>And this is what my nodeJS <code>app.js</code> file looks like:</p>\n\n<pre><code>var path     = require('path'),\n    express  = require('express'),\n    app      = express(),\n    routes   = require(path.join(__dirname, 'routes'));\n\napp.configure(function() {\n    app.use(express.logger('dev'));\n    app.use(express.compress());\n    app.use(express.methodOverride());\n    app.use(express.bodyParser());\n    app.use(app.router);\n    app.all(\"/*\", function(req, res, next) {\n        res.sendfile(\"index.html\", { root: __dirname + \"/../app\" });\n    });\n    app.use(express.errorHandler({\n        dumpExceptions: true, \n        showStack: true\n    }));\n});\n</code></pre>\n\n<p>However, this now serves all requests as my <code>index.html</code> file, and so I get the following error from requireJS:</p>\n\n<pre><code>Uncaught SyntaxError: Unexpected token &lt; \n</code></pre>\n\n<p>I tried adding the following to my nodeJS <code>app.js</code> so it would serve my resources correctly:</p>\n\n<pre><code>app.use(\"/js\", express.static(__dirname + \"/../app/js\"));\napp.use(\"/img\", express.static(__dirname + \"/../app/img\"));\napp.use(\"/css\", express.static(__dirname + \"/../app/css\"));\napp.use(\"/partials\", express.static(__dirname + \"/../app/partials\"));\n</code></pre>\n\n<p>but still no luck. </p>\n\n<p>I also tried replacing the <code>app.all</code> statement with:</p>\n\n<pre><code>app.use(function(req, res) {\n  // Use res.sendfile, as it streams instead of reading the file into memory.\n  res.sendfile(__dirname + '/../app/index.html');\n});\n</code></pre>\n\n<p>but that didn't work either. What can I do to get angularJS html5mode working with nodeJS and Express? Thanks.</p>\n",
            "last_activity_date": 1409234999,
            "question_id": 17777967,
            "score": 8,
            "tags": [
                "javascript",
                "node.js",
                "angularjs",
                "express"
            ],
            "title": "using AngularJS html5mode with nodeJS and Express"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>Well, this is really not very complicated. I have strong suspicion you didn't even try. What you do is that you pick the first value, save it in the variable, and then, within a <code>for</code> loop, compare all subsequent values with the first one.<br>\n<strong>I intentionally didn't share any code.</strong> Find how <code>for</code> is used and how variables are compared.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>This works. You create a method on Array by using prototype.</p>\n\n<pre><code>Array.prototype.allValuesSame = function() {\n\n    for(var i = 1; i &lt; this.length; i++)\n    {\n        if(this[i] !== this[0])\n            return false;\n    }\n\n    return true;\n}\n</code></pre>\n\n<p>Call this in this way:</p>\n\n<pre><code>var a = ['a', 'a', 'a'];\nvar b = a.allValuesSame(); //true\na = ['a', 'b', 'a'];\nb = a.allValuesSame(); //false\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>You can use this:</p>\n\n<pre><code>function same(a) {\n    if (!a.length) return true;\n    return !a.filter(function (e) {\n        return e !== a[0];\n    }).length;\n}\n</code></pre>\n\n<p>The function first checks whether the array is empty. If it is it's values are equals..\nOtherwise it filter the array and takes all elements which are different from the first one. If there are no such values => the array contains only equal elements otherwise it doesn't.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In JavaScript 1.6, you can use <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/every\"><code>Array.every</code></a>:</p>\n\n<pre><code>function AllTheSame(array) {\n    var first = array[0];\n    return array.every(function(element) {\n        return element === first;\n    });\n}\n</code></pre>\n\n<p>You probably need some sanity checks, e.g. when the array has no elements. (Also, this won't work when all elements are <code>NaN</code> since <code>NaN !== NaN</code>, but that shouldn't be an issue... right?)</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Something around this approach should work.</p>\n\n<pre><code>a.join(',').split(a[0]).length === a.length + 1\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use <code>Array.every</code> if supported:</p>\n\n<pre><code>var equals = array.some(function(value, index, array){\n    return value === array[0];\n});\n</code></pre>\n\n<p>Alternatives approach of a loop could be something like <code>sort</code></p>\n\n<pre><code>var temp = array.slice(0).sort();\nvar equals = temp[0] === temp[temp.length - 1];\n</code></pre>\n\n<p>Or, if the items are like the question, something dirty like:</p>\n\n<pre><code>var equals = array.join('').split(array[0]).join('').length === 0;\n</code></pre>\n\n<p>Also works.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Underscore's <code>_.isEqual(object, other)</code> function seems to work well for arrays.  The order of items in the array matter when it checks for equality.  See <a href=\"http://underscorejs.org/#isEqual\" rel=\"nofollow\">http://underscorejs.org/#isEqual</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Be a ninja: </p>\n\n<pre><code>array.reduce(function(a, b){return (a === b)?a:false;});\n</code></pre>\n\n<p>Results: \nvar array = [\"a\", \"a\", \"a\"] => result: \"a\"\nvar array = [\"a\", \"b\", \"a\"] => result: false</p>\n\n<pre><code>function allAreEqual(array){\n    if(!array.length) return true;\n    // I also made sure it works with [false, false] array\n    return array.reduce(function(a, b){return (a === b)?a:(\"false\"+b);}) === array[0];\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>And for performance comparison I also did a benchmark: </p>\n\n<pre><code>function allAreEqual(array){\n    if(!array.length) return true;\n    // I also made sure it works with [false, false] array\n    return array.reduce(function(a, b){return (a === b)?a:(!b);}) === array[0];\n}\nfunction same(a) {\n    if (!a.length) return true;\n    return !a.filter(function (e) {\n        return e !== a[0];\n    }).length;\n}\n\nfunction allTheSame(array) {\n    var first = array[0];\n    return array.every(function(element) {\n        return element === first;\n    });\n}\n\nfunction useSome(array){\n    return !array.some(function(value, index, array){\n        return value !== array[0];\n    });\n}\n</code></pre>\n\n<p>Results: </p>\n\n<pre><code>allAreEqual x 47,565 ops/sec \u00b10.16% (100 runs sampled)\nsame x 42,529 ops/sec \u00b11.74% (92 runs sampled)\nallTheSame x 66,437 ops/sec \u00b10.45% (102 runs sampled)\nuseSome x 70,102 ops/sec \u00b10.27% (100 runs sampled)\n</code></pre>\n\n<p>So apparently using builtin array.some() is the fastest method of the ones sampled. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I think the simplest way to do this is to create a loop to compare the each value to the next.  As long as there is a break in the \"chain\" then it would return false.  If the first is equal to the second, the second equal to the third and so on, then we can conclude that all elements of the array are equal to each other.</p>\n\n<p>given an array data[], then you can use:</p>\n\n<pre><code>for(x=0;x&lt;data.length - 1;x++){\n    if (data[x] != data[x+1]){\n        isEqual = false;            \n    }\n}\nalert(\"All elements are equal is \" + isEqual);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>My extremely simple way : </p>\n\n<pre><code>      var listTrue = ['a', 'a', 'a', 'a'];\n      var listFalse = ['a', 'a', 'a', 'ab'];\n\n      function areWeTheSame(list) { \n         var sample = list[0];\n         return !(list.some(function(item) {\n             return !(item == sample);\n         }));\n      }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>arr.length &amp;&amp; arr.reduce(function(a, b){return (a === b)?a:false;}) === arr[0];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to find arrays where all values are equal. What's the fastest way to do this? Should I loop through it and just compare values?</p>\n\n<pre><code>['a', 'a', 'a', 'a'] // true\n['a', 'a', 'b', 'a'] // false\n</code></pre>\n",
            "last_activity_date": 1423526301,
            "question_id": 14832603,
            "score": 8,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Check if all values of array are equal"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can catch a <code>[Ctrl]+[C]</code> keypress:</p>\n\n<pre><code>addEventListener(\"keydown\", function(e){\n    evt = (e) ? e : window.event; // Some cross-browser compatibility.\n    if(evt.ctrlKey &amp;&amp; evt.which == 67){ // [x] == 88; [c] == 67; [v] == 86;\n        console.log(\"Ctrl+C pressed!\");\n        evt.preventDefault(); // Cancel the copy-ing function for the client.\n        // Manual Copy / Paste / Cut code here.\n    }\n});\u200b\n</code></pre>\n\n<p><strong><a href=\"http://jsfiddle.net/6drrX/\" rel=\"nofollow\">Working snippet</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Edit: adding this to a body tag seems to work on all of my test browsers including the Opera, Chrome, Seamonkey (so I assume Firefox) and IE9</p>\n\n<p><code>&lt;body oncopy='return false' oncut='return false' onpaste='return false'&gt;</code></p>\n\n<p>you can put them in other tags if you want to allow some functions in some places and not in others</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>of course it is not appropriate to do stuff like this, but that was not @Zubairs question, so i think voting down is not correct here, as he made his point clear.</p>\n\n<p>now to the question: if jQuery can do it, native javascript can do it of course too.</p>\n\n<p>you must prevent the cut, copy and paste events:</p>\n\n<pre><code>document.body.oncopy = function() { return false; }\ndocument.body.oncut = function() { return false; }\ndocument.body.onpaste = function() { return false; }\n</code></pre>\n\n<p>this prevents the right-click-context-menu, this is not needed if you use the 3 other event-handlers but just to let you know ;-)</p>\n\n<pre><code>document.body.oncontextmenu = function() { return false; }\n</code></pre>\n\n<p>IMPORTANT: the body must be loaded (of course), document.body because IE needs it (document.oncopy will only work in chrome/firefox/safari)</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>a good way</p>\n\n<pre><code>var D=document.getElementById('b4');\n\nif(D.addEventListener){\nD.addEventListener('paste',function(e){false;e.preventDefault();},false);}\nelse{\nD.attachEvent('onpaste',function(){return false;});}\n</code></pre>\n\n<p><strong>warning</strong> : code must be under html target/s , \njust before the close body tag for example</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I found an answer, but it was for JQuery. Here is the link:</p>\n\n<p><a href=\"http://jquerybyexample.blogspot.com/2010/12/disable-cut-copy-and-paste-function-for.html\">http://jquerybyexample.blogspot.com/2010/12/disable-cut-copy-and-paste-function-for.html</a></p>\n\n<p>: I want something in plain Javascript which work on chrome, latest firefox, safari, and IE 8 and 9.</p>\n\n<h2>Update</h2>\n\n<p>Due to all the negative comments saying that this is a bad idea for an internet site I can only say \"I agree\". Please note that this is for an \"intranet\" application where cut, copy, and paste need to be overidden as the default browser behaviour for cut copy and paste needs to be customized to handle embedded tags in a rich text area</p>\n",
            "last_activity_date": 1392885511,
            "question_id": 13647000,
            "score": 8,
            "tags": [
                "javascript"
            ],
            "title": "Is there a cross browser way to prevent cut, copy and paste on a website in plain Javascript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Try to use this - <a href=\"https://github.com/interstateone/polygons\" rel=\"nofollow\">https://github.com/interstateone/polygons</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There's a plugin for raphael.js providing this functionality \u2013 <a href=\"https://github.com/poilu/raphael-boolean\" rel=\"nofollow\">https://github.com/poilu/raphael-boolean</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you convert path to polygons (eg. using pathelement.getPointAtLength()), then you can use Javascript Clipper, which is a javascript port of popular Angus Johnson's Clipper Library.</p>\n\n<p>This is an example of Difference, but also <a href=\"https://sourceforge.net/p/jsclipper/wiki/Main_Demo-Clipping_and_Offsetting_Text/#union\" rel=\"nofollow\">Union, Intersect and Xor</a> are possible:\n<img src=\"http://i.stack.imgur.com/MsAL8.png\" alt=\"Difference of polygons\"></p>\n\n<p>The page of Javascript Clipper is <a href=\"https://sourceforge.net/projects/jsclipper/\" rel=\"nofollow\">here</a>.</p>\n\n<p>If getPointAtLength() gives too much points, Javascript Clipper has a function ClipperLib.Lighten(), which can reduce point count significantly.</p>\n\n<p>The library supports also polygon offsetting. See the <a href=\"http://jsclipper.sourceforge.net/5.0.2.1/main_demo.html\" rel=\"nofollow\">live demo</a>.</p>\n\n<hr>\n\n<p>EDIT: after testing I can confirm that pathelement.getPointAtLength() is best suitable for eg. hit testing, but not so good for polygonizing in this case, because it produces too few or too much points and doesn't take into account the curvature. It's the fact that tight curves need more points and loose curves fewer. Better is to convert all path segments to Cubic curves and use some adaptive algorithm for polygonizing curves. I have made some tests and may be soon can introduce a better way for polygonizing.</p>\n\n<p>EDIT: I have managed to implement SVG path polygonizing function, which handles all kind of paths and also flattens transformations. After testing thousands randomly generated paths and transformations it seems to be reliable. Also all possible degenerate cases (where curves are collinear or some of the points are the same) are handled without issues. Although it is already many times faster and more precise than native getPointAtLength() while producing significantly fewer points, the process has room for speed improvements using eg. taxicab angles instead of atan2() and making the code fully Web Workers compatible by removing all DOM methods. I want to make it 100% bugfree before publishing it. It's ideal use case is eg. possibility to make boolean operations with generated polygons.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Paper.js now has boolean operations in its core:</p>\n\n<p><a href=\"https://github.com/paperjs/paper.js/blob/master/src/path/PathItem.Boolean.js\" rel=\"nofollow\">https://github.com/paperjs/paper.js/blob/master/src/path/PathItem.Boolean.js</a></p>\n\n<p>And here you can see the operations in action:</p>\n\n<p><a href=\"http://assets.paperjs.org/boolean/\" rel=\"nofollow\">http://assets.paperjs.org/boolean/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Does a Javascript library exist which can perform boolean operations on paths (Beziercurves)? I know about paper.js and raphael.js, but both cannot perform these actions.</p>\n\n<p>greetings philipp</p>\n",
            "last_activity_date": 1381410359,
            "question_id": 11880739,
            "score": 8,
            "tags": [
                "javascript",
                "javascript-library",
                "bezier-curve"
            ],
            "title": "Javascript Curve Library with boolean operations"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>trim</code> is on the <code>String</code> prototype, meaning that it expects the <code>this</code> context to be that of a string where as the <code>map</code> method on <code>Array</code> provides the current array item as the first argument and the <code>this</code> context being the global object.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>That's because <code>trim</code> is not being called with the proper <code>this</code> context. Remember that <code>this</code> is dynamically bound in JS. You will have to create a wrapper to pass to <code>trim</code> to properly bind <code>this</code>:</p>\n\n<pre><code>[' a', ' b   ', 'c'].map(function (str) {\n  return str.trim();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>What @Slace says is the right explanation. <strike>@ThomasEding's answer also works but has one terrible inefficieny that it <em>may</em> create functions within a loop, which is <a href=\"http://stackoverflow.com/questions/3927054/jslint-error-dont-make-functions-within-a-loop-leads-to-question-about-javas\">not a good thing to do</a>.</strike></p>\n\n<p>Another way of doing would be <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/map\">(reference here)</a>:</p>\n\n\n\n<pre><code>[' a', ' b   ', 'c'].map(Function.prototype.call, String.prototype.trim);  \n// gives [\"a\", \"b\", \"c\"]\n</code></pre>\n\n<p><strong>Standard browser disclaimer</strong>: This will work wherever <code>Function.prototype.call</code> and <code>String.prototype.trim</code> will work and for older browsers, you can easily substitute <code>trim</code> with a <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/Trim\">polyfill</a> like this:</p>\n\n\n\n<pre><code>if(!String.prototype.trim) {  \n  String.prototype.trim = function () {  \n    return this.replace(/^\\s+|\\s+$/g,'');  \n  };  \n}\n</code></pre>\n\n<p>Update: Interstingly, while this works fastest in Chrome, @ThomasEding's method runs slightly faster in IE10 and FF20 - <a href=\"http://jsperf.com/native-trim-vs-regex-trim-vs-mixed\">http://jsperf.com/native-trim-vs-regex-trim-vs-mixed</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>I have an array of strings. I want to trim each string in the array. </p>\n\n<p>I thought using <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/map\"><code>[].map()</code></a> with <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/Trim\"><code>''.trim()</code></a> would work...</p>\n\n<pre><code>[' a', ' b   ', 'c'].map(String.prototype.trim);\n</code></pre>\n\n<p>...but my console said...</p>\n\n<blockquote>\n  <p>TypeError: String.prototype.trim called on null or undefined</p>\n</blockquote>\n\n<p><a href=\"http://jsfiddle.net/Ne29s/\">jsFiddle</a>.</p>\n\n<p>I can't see any <code>null</code> or <code>undefined</code> values in my array.</p>\n\n<p><code>String.prototype.trim()</code> and <code>Array.prototype.map()</code> are defined in Chrome 17, which I'm using to test.</p>\n\n<p>Why doesn't this work? I get the feeling I have overlooked something obvious.</p>\n\n<p>I realise I could loop or drop a function in there. That's not the point of this question, however.</p>\n",
            "last_activity_date": 1378091917,
            "question_id": 9304007,
            "score": 8,
            "tags": [
                "javascript"
            ],
            "title": "Why won&#39;t passing `&#39;&#39;.trim()` straight to `[].map()`&#39;s callback work?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You would want to use <code>selectionStart</code> to do this.</p>\n\n<pre><code>&lt;textarea onkeyup=\"getLineNumber(this, document.getElementById('lineNo'));\" onmouseup=\"this.onkeyup();\"&gt;&lt;/textarea&gt;\n&lt;div id=\"lineNo\"&gt;&lt;/div&gt;\n\n&lt;script&gt;\n\n    function getLineNumber(textarea, indicator) {\n\n        indicator.innerHTML = textarea.value.substr(0, textarea.selectionStart).split(\"\\n\").length;\n    }\n\n&lt;/script&gt;\n</code></pre>\n\n<p>This works when you change the cursor position using the mouse as well.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>This is tough because of word wrap. It's a very easy thing to count the number of line breaks present, but what happens when the new row is because of word wrap? To solve this problem, it's useful to create a mirror (credit: github.com/jevin). Here's the idea:</p>\n\n<ol>\n<li>Create a mirror of the textarea</li>\n<li>Send the content from the beginning of the textarea to the cursor to the mirror</li>\n<li>Use the height of the mirror to extract the current row</li>\n</ol>\n\n<p><a href=\"http://jsfiddle.net/9QzQy/\" rel=\"nofollow\">On JSFiddle</a></p>\n\n<pre><code>jQuery.fn.trackRows = function() {\nreturn this.each(function() {\n\nvar ininitalHeight, currentRow, firstIteration = true;\n\nvar createMirror = function(textarea) {\njQuery(textarea).after('&lt;div class=\"autogrow-textarea-mirror\"&gt;&lt;/div&gt;');\nreturn jQuery(textarea).next('.autogrow-textarea-mirror')[0];\n}\n\nvar sendContentToMirror = function (textarea) {\nmirror.innerHTML = String(textarea.value.substring(0,textarea.selectionStart-1)).replace(/&amp;/g, '&amp;amp;').replace(/\"/g, '&amp;quot;').replace(/'/g, '&amp;#39;').replace(/&lt;/g, '&amp;lt;').replace(/&gt;/g, '&amp;gt;').replace(/\\n/g, '&lt;br /&gt;') + '.&lt;br/&gt;.';\n\ncalculateRowNumber();\n}\n\nvar growTextarea = function () {\nsendContentToMirror(this);\n}\n\nvar calculateRowNumber = function () {\nif(firstIteration){\nininitalHeight = $(mirror).height();\ncurrentHeight = ininitalHeight;\nfirstIteration = false;\n}\nelse{\ncurrentHeight = $(mirror).height();\n}\n// Assume that textarea.rows = 2 initially\ncurrentRow = currentHeight/(ininitalHeight/2) - 1;\n//remove tracker in production\n$('.tracker').html('Current row: ' + currentRow);\n}\n\n// Create a mirror\nvar mirror = createMirror(this);\n\n// Style the mirror\nmirror.style.display = 'none';\nmirror.style.wordWrap = 'break-word';\nmirror.style.whiteSpace = 'normal';\nmirror.style.padding = jQuery(this).css('padding');\nmirror.style.width = jQuery(this).css('width');\nmirror.style.fontFamily = jQuery(this).css('font-family');\nmirror.style.fontSize = jQuery(this).css('font-size');\nmirror.style.lineHeight = jQuery(this).css('line-height');\n\n// Style the textarea\nthis.style.overflow = \"hidden\";\nthis.style.minHeight = this.rows+\"em\";\n\nvar ininitalHeight = $(mirror).height();\n\n// Bind the textarea's event\nthis.onkeyup = growTextarea;\n\n// Fire the event for text already present\n// sendContentToMirror(this);\n\n});\n};\n\n$(function(){\n$('textarea').trackRows();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I would like to find out and keep track of the 'line number' (rows) of the cursor in a textarea. (The 'bigger picture' is to parse the text on the line every time a new line is created/modified/selected, if of course the text was not pasted in. This saves parsing the whole text un-necessarily at set intervals.)</p>\n\n<p>There are a couple of posts on StackOverflow however none of them specifically answer my question, most questions are for cursor position in pixels or displaying lines numbers besides the textarea.</p>\n\n<p>My attempt is below, it works fine when starting at line 1 and not leaving the textarea. It fails when clicking out of the textarea and back onto it on a different line. It also fails when pasting text into it because the starting line is not 1. </p>\n\n<p>My JavaScript knowledge is pretty limited.</p>\n\n<pre><code>&lt;html&gt;\n\n&lt;head&gt;\n&lt;title&gt;DEVBug&lt;/title&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n\n    var total_lines = 1; // total lines\n    var current_line = 1; // current line\n    var old_line_count;\n\n    // main editor function\n    function code(e) {\n\n        // declare some needed vars\n        var keypress_code = e.keyCode; // key press\n        var editor = document.getElementById('editor'); // the editor textarea\n        var source_code = editor.value; // contents of the editor\n\n        // work out how many lines we have used in total    \n            var lines = source_code.split(\"\\n\");\n            var total_lines = lines.length;\n\n    // do stuff on key presses\n    if (keypress_code == '13') { // Enter\n        current_line += 1;\n    } else if (keypress_code == '8') { // Backspace\n        if (old_line_count &gt; total_lines) { current_line -= 1; }\n    } else if (keypress_code == '38') { // Up\n        if (total_lines &gt; 1 &amp;&amp; current_line &gt; 1) { current_line -= 1; }\n    } else if (keypress_code == '40') { // Down\n        if (total_lines &gt; 1 &amp;&amp; current_line &lt; total_lines) { current_line += 1; }\n    } else {\n        //document.getElementById('keycodes').innerHTML += keypress_code;\n    }\n\n    // for some reason chrome doesn't enter a newline char on enter\n    // you have to press enter and then an additional key for \\n to appear\n    // making the total_lines counter lag.\n    if (total_lines &lt; current_line) { total_lines += 1 };\n\n    // putput the data\n    document.getElementById('total_lines').innerHTML = \"Total lines: \" + total_lines;\n    document.getElementById('current_line').innerHTML = \"Current line: \" + current_line;\n\n    // save the old line count for comparison on next run\n    old_line_count = total_lines;\n\n}\n\n&lt;/script&gt;\n\n&lt;/head&gt;\n\n&lt;body&gt;\n\n&lt;textarea id=\"editor\" rows=\"30\" cols=\"100\" value=\"\" onkeydown=\"code(event)\"&gt;&lt;/textarea&gt;\n&lt;div id=\"total_lines\"&gt;&lt;/div&gt;\n&lt;div id=\"current_line\"&gt;&lt;/div&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1389902096,
            "question_id": 9185630,
            "score": 8,
            "tags": [
                "javascript",
                "textarea"
            ],
            "title": "Find out the &#39;line&#39; (row) number of the cursor in a textarea"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You could use <a href=\"http://msdn.microsoft.com/en-us/library/bb343533.aspx\" rel=\"nofollow\">ScriptManager</a>. I'd think <a href=\"http://msdn.microsoft.com/en-us/library/system.web.ui.scriptmanager.registerclientscriptblock.aspx\" rel=\"nofollow\">ScriptManager.RegisterClientScriptBlock</a> should be useful. You can then execute JS after the page load. Other options include <a href=\"http://api.jquery.com/live/\" rel=\"nofollow\">JQuery.live</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>ScriptManager.RegisterClientScriptBlock(upPanel, upPanel.GetType(), \"alert('hello world')\", true);\n</code></pre>\n\n<p>You must call this on partial postback.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Embed these lines on your javascript tag</p>\n\n<pre><code>function foo()\n{\n    Sys.WebForms.PageRequestManager.getInstance().add_endRequest(endRequestHandler);\n}\nfunction endRequestHandler(sender, args)\n{\n    // Do your stuff\n    alert('Update Panel routine is now complete');\n}\n</code></pre>\n\n<p>Then, put this on you body tag</p>\n\n<pre><code>&lt;body onload=\"foo()\"&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>How do I load a javascript command (like an onload or onclick or something) after the update panel was just refreshed.</p>\n",
            "last_activity_date": 1353402083,
            "question_id": 7844061,
            "score": 8,
            "tags": [
                "c#",
                "javascript",
                "asp.net"
            ],
            "title": "Running Javascript after update panel refresh"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Unobstrusive validation looks for this attribute <code>data-val=\"true\"</code></p>\n\n<p>I guess, that if you do a <code>$('#mycheckbox').data('val','false')</code>, the validation will skip a item with that id.</p>\n\n<p>Probably there is a more appropriate way to do it, but if not, take this.</p>\n\n<p>cheers.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The default <code>DataAnnotationsModelValidatorProvider</code> adds a Required attribute to all value types.  You can change this behavior by adding the code in <a href=\"http://stackoverflow.com/questions/7320821/asp-net-mvc-3-validation-for-id-field-with-ef-code-first/7322464#7322464\">this answer</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've handled cases like this with a custom Validation Attribute. Instead of using the Required attribute for properties you could make a RequiredIf attribute and make some of your properties required only if another property is a certain value.</p>\n\n<p>Here is a post about creating an attribute like this (the example in the middle of the page under the 'A more complex custom validator' section): <a href=\"http://www.devtrends.co.uk/blog/the-complete-guide-to-validation-in-asp.net-mvc-3-part-2\">http://www.devtrends.co.uk/blog/the-complete-guide-to-validation-in-asp.net-mvc-3-part-2</a></p>\n\n<p>If your checkbox represents a property in your model this should work fine.</p>\n\n<p>If you don't want to handle this with a new validation attribute you will have to do a few more things than just change the data-val attribute to false. When jQuery validate first parses your form it stores values in the form's data. So simply changing data-val isn't enough. You will additionally have to remove the stored validation data and reparse the form. Here's an example:</p>\n\n<pre><code>// Do this after you've removed/modified the data-val attribute\n$('selector for your form').removeData('unobtrusiveValidation');\n$('selector for your form').removeData('validator');\n$.validator.unobtrusive.parse('selector for your form');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>The unobtrusive javascript plugin provided by MVC doesn't process the data properties on the fly.  Instead, it  parses the results on document ready and caches them.</p>\n\n<p>Try calling <code>$.validate.unobtrusive.parse()</code> on your form after modifying the property in question to see if it gives you expected results.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could implement a custom validator like \"RequiredIf\".</p>\n\n<p>That will keep your model design quite obvious (unlike client-side-only solutions proposed). This allows you to keep the validation logic separate from display logic (that's what MVC is all about).</p>\n\n<p>See this answer : <a href=\"http://stackoverflow.com/questions/7390902/requiredif-conditional-validation-attribute\">RequiredIf Conditional Validation Attribute</a> </p>\n\n<p>and ultimately that blog post : <a href=\"http://blogs.msdn.com/b/simonince/archive/2011/02/04/conditional-validation-in-asp-net-mvc-3.aspx\" rel=\"nofollow\">Conditional Validation in ASP.NET MVC 3</a></p>\n\n<p>cheers!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There are many ways to disable unobtrusive validation in Javascript but most of them seems a bit hackish...</p>\n\n<ol>\n<li>Recently found that you can do it with submit button. Check this link for info</li>\n</ol>\n\n<p><a href=\"http://www.nitrix-reloaded.com/2013/09/16/disable-client-side-validation-on-a-button-click-asp-net-mvc/\" rel=\"nofollow\">http://www.nitrix-reloaded.com/2013/09/16/disable-client-side-validation-on-a-button-click-asp-net-mvc/</a></p>\n\n<pre><code>//this\n&lt;script type=\"text/javascript\"&gt;\n  document.getElementById(\"backButton\").disableValidation = true;\n&lt;/script&gt;\n//or this\n&lt;input type=\"submit\" name=\"backButton\" value=\"Back\" \n title=\"Go back to Prev Step\" disableValidation=\"true\" /&gt;\n//or this\n&lt;input type=\"submit\" name=\"backButton\" value=\"Back\"\n title=\"Go back to Prev Step\" class=\"mybtn-style cancel\" /&gt;\n</code></pre>\n\n<ol start=\"2\">\n<li>Another way that is more flexible but more complicated : you can disable unobtrusive validation by setting the <code>data-val</code> attribute to <code>false</code>. But there is a trick...</li>\n</ol>\n\n<p>Unobtrusive validation data is cached when the document is ready. This means that if you have <code>data-val='true'</code> at the beginning and that you change it later on, it will still be <code>true</code>.</p>\n\n<p>So, if you want to change it after the document is ready, you also need to reset the validator which will erase the cached data. Here is how to do it :</p>\n\n<pre><code>disableValidation: function () {\n    //Set the attribute to false\n    $(\"[data-val='true']\").attr('data-val', 'false');\n\n    //Reset validation message\n    $('.field-validation-error')\n    .removeClass('field-validation-error')\n    .addClass('field-validation-valid');\n\n    //Reset input, select and textarea style\n    $('.input-validation-error')\n    .removeClass('input-validation-error')\n    .addClass('valid');\n\n    //Reset validation summary\n    $(\".validation-summary-errors\")\n    .removeClass(\"validation-summary-errors\")\n    .addClass(\"validation-summary-valid\");\n\n    //To reenable lazy validation (no validation until you submit the form)\n    $('form').removeData('unobtrusiveValidation');\n    $('form').removeData('validator');\n    $.validator.unobtrusive.parse($('form'));\n},\n</code></pre>\n\n<p>You don't need to reset all the messages, input styles and validation summary to be able to submit the form but it's useful if you want to change the validation after the page is loaded. Otherwise, even if you change the validation, the previous error messages will still be visible...</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a create form to create an object.\nThe create model has some properties that are only visible (.hide, .show()) if a checkbox is checked and that are marked required (by Attribute in Model).</p>\n\n<p>Unfortunatly when the checkbox is not checked, the required validation is performed on the properties hidden.</p>\n\n<p>How can I disable the required validation for this properties?</p>\n\n<p>I tried setting the data-val property of the input element to false but this does not work.</p>\n\n<p>Some an idea?</p>\n\n<p>Thanks in advance\nTobias</p>\n\n<p>UPDATE:</p>\n\n<p>Here is the java script code. The data-val property is set correctly to false. it seems that validation does not care of this property. there is also the data-val-required attribute but there is a text i could not backup.</p>\n\n<pre><code>$(function () {\n                $(\"#MyCheckbox\")\n                    .change(function () {\n                        if (this.checked) {\n                            $(\"#divWithChildProperties [data-val]\").attr(\"data-val\", true);\n                            $(\"#divWithChildProperties \").show();\n                        }\n                        else {\n                            $(\"#divWithChildProperties [data-val]\").attr(\"data-val\", false);\n                            $(\"#divWithChildProperties \").hide();\n                        }\n                    })\n            });\n</code></pre>\n",
            "last_activity_date": 1415717115,
            "question_id": 7389652,
            "score": 8,
            "tags": [
                "javascript",
                "asp.net-mvc-3",
                "validation",
                "unobtrusive-javascript"
            ],
            "title": "Disable required validation by JavaScript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I've seen this before you need to resize the map:</p>\n\n<pre><code>google.maps.event.trigger(map, 'resize');\nmap.setZoom( map.getZoom() );\n</code></pre>\n\n<p>This is for V3:</p>\n\n<p><a href=\"http://code.google.com/p/gmaps-api-issues/issues/detail?id=1448\">http://code.google.com/p/gmaps-api-issues/issues/detail?id=1448</a></p>\n\n<p>A little more info:</p>\n\n<p><a href=\"https://groups.google.com/group/google-maps-js-api-v3/browse_thread/thread/251f20b769d116ea/ba3ca54f5e1352a2?pli=1\">https://groups.google.com/group/google-maps-js-api-v3/browse_thread/thread/251f20b769d116ea/ba3ca54f5e1352a2?pli=1</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>By following the link provided from Pete, I was able to resolve that.</p>\n\n<p>You probably have a function called calcRoute(). You might need to trigger this function twice.\nAt first, when it's triggered it loads fine, but you might need to trigger that function again as well when you change the tab. \nThat should work!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This works for me:</p>\n\n<pre><code>google.maps.event.trigger(map, 'resize');\n</code></pre>\n\n<p>but, after the tab is shown...</p>\n\n<pre><code>$('a[href=\"#mytab\"]').on('shown', function (e){\n       google.maps.event.trigger(map, 'resize'); moveTo(); \n     });  // realocate the map\n</code></pre>\n\n<p>I am using bootstrap, find the similar function in jquery UI.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I worked this out by binding the map resizing to the controller which unhides a section container. The important part here as it relates to needing to click twice to resize the map lies in the setTimeout bit. That will provide just enough of a delay to allow the width to be calculated on wrapper around the map.</p>\n\n<pre><code>/**\n * This example will work with foundation 4 sections. However, the idea is the same for any collapsed map. \n * Load a map object\n * Find it's parent (which is hidden)\n * Bind a click event to the element which 'unhides' your container\n * */\n(function($) {\n  Drupal.behaviors.foundationCollapseHack =  {\n      attach: function(context, settings) {\n          // check whether we have a map\n          if(typeof settings.vrListingMap != 'undefined') {\n              // on page load\n              $(window).load(function() {\n                // grab a map object\n                var map = Drupal.behaviors.vrwebListingMaps.map;\n                // if we have a section container\n                if($(map.b).parents('.section-container').length &gt; 0) {\n                    // find any maps in these tabs and bind a click to it\n                    $(map.b).parents('section').find('p.title').children('a').click(function() {\n                      // B.c of timing - it's important to wrap the resize stuff in a timeOut.\n                      // This assures that getComputedStyle is not null when resize fires\n                      setTimeout(function() {\n                          var coord = map.getCenter();\n                          google.maps.event.trigger(map, \"resize\");\n                          map.setCenter(new google.maps.LatLng(coord.lat(), coord.lng()), settings.vrListingMap.options.default_zoom);    \n                        }, 0 );\n                    });\n                  }\n               });\n           }\n        }\n    }\n\n})(jQuery);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>After a day struggling with this, I followed the asker's link to his problem. </p>\n\n<p>I saw  this snippet some many times</p>\n\n<pre><code>google.maps.event.trigger(map, 'resize');\n</code></pre>\n\n<p>and I just couldn't find the right place to insert this piece of code. As a newbie in programming, I tried all places, which includes after the init, after calling the map, everywhere. Nothing worked. </p>\n\n<p>Then I decided to follow a real situation, the person who actually asked this question. \nThis is what he did, worked for him or her and it also worked for me. I did a minor change because it's always like that. His/her link is one of the comments. </p>\n\n<p>My adobe DW doesn't give this option onclick, but... it works. You should try directly on the  tag anchor where the div is hidden. It may be the proper place. \nCall the init and recenter at the body tag (or anchor tag). Once you click on the map, it will recenter the map. </p>\n\n<pre><code>&lt;body  onclick=\"initialize(); center_map();\"&gt;\n</code></pre>\n\n<p>After the </p>\n\n<pre><code>function initialize {\n....\n\n}\n</code></pre>\n\n<p>Have this one</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction center_map() {\nvar center = map.getCenter();\n    document.getElementById(\"your_div_name\").style.width = 'auto';\n    document.getElementById(\"your_div_name\").style.height = '250px';\n    google.maps.event.trigger(map, 'resize');\n    map.setCenter(center);\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>Attention newbies from all over the world: change the name of div above. Put your real sizes. Some people say you need real numbers in the size. But any time you click any part of body, it runs the function. Try to be more specific on you onclick function. \nHope this helps someones. </p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have a page with two tabs. The first tab has photos and the second a google map. The problem is that the google map is not completely drawing because it is in a hidden div. So I moved the initialize() function to the href of the map tab using onclick(). This works the first time you click on it but when you return to the photos tab and then go back to the map tab the map only partially draws. If you click the map tab a second time it works perfectly. Any ideas?</p>\n\n<p>tabs javascript:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n$(function () {\n    var tabContainers = $('div.tabs &gt; div');\n\n    $('div.tabs ul.tabNavigation a').click(function () {\n        tabContainers.hide().filter(this.hash).show();\n\n        $('div.tabs ul.tabNavigation a').removeClass('selected');\n        $(this).addClass('selected');\n\n        return false;\n    }).filter(':first').click();\n});\n\n&lt;/script&gt;\n</code></pre>\n\n<p>google maps javascript:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n  function initialize() {\n    var latlng = new google.maps.LatLng(&lt;?=$lat ?&gt;, &lt;?=$lng ?&gt;);\n    var myOptions = {\n      zoom: 15,\n      center: latlng,\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n    };\n    var map = new google.maps.Map(document.getElementById(\"map_canvas\"),\n        myOptions);\n\n   var marker = new google.maps.Marker({\n      position: latlng, \n      map: map, \n      title:\"&lt;?=$fulladdress ?&gt;\"\n  });   \n}\n&lt;/script&gt;\n</code></pre>\n\n<p>html:</p>\n\n<pre><code>&lt;div class=\"tabs\"&gt;\n        &lt;ul class=\"tabNavigation\"&gt;\n            &lt;li&gt;&lt;a href=\"#first\"&gt;Photos&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#map_canvas\" onclick=\"initialize(); return false;\"&gt;Map&lt;/a&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n\n\n        &lt;div id=\"first\"&gt; &lt;/div&gt;\n      &lt;div id=\"map_canvas\" &gt;&lt;/div&gt;\n</code></pre>\n",
            "last_activity_date": 1382029583,
            "question_id": 7084363,
            "score": 8,
            "tags": [
                "javascript",
                "html",
                "maps",
                "hidden"
            ],
            "title": "Google maps in hidden div"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I don't believe this is possible presently. </p>\n\n<p>It's a hard problem because canvas provides so much low-level control to the user. If canvas starts doing intelligent things like this, it may break some other functionality the user was expecting.</p>\n\n<p>Consider the subpixel rendering for other graphical elements - depending on the application, the programmer may not want that, and you certainly wouldn't want subpixel rendering turned on arbitrarily for the whole element as an all-or-nothing proposition. Imagine getting the color of a specific pixel - what's the right answer here? Should canvas lie and return the expected color, or return the actual color (so we have to answer questions all day here on SO about \"why is this pixel I made black being measured as dark red?\").</p>\n\n<p>There are some who would argue that Firefox is doing the wrong thing here.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Short answer: <strong>No. Not possible</strong></p>\n\n<p>This is one of two topics that frustrates a lot of Canvas users.</p>\n\n<p>Subpixel rendering/anti-aliasing of any kind is up to the browser. This means that different browsers are prone to render things in different ways.</p>\n\n<p>A lot of people have asked for anti-aliasing to be an option that can be turned on or off for a specific context. No luck of anything like that yet.</p>\n\n<p>Chrome in particular you'll need to keep an eye on, because the way they have handled sub-pixel rendering has changed drastically over the past 4 months. If you start using the <a href=\"http://www.chromium.org/getting-involved/dev-channel\">Chrome developer channel</a> you'll get a preview of the things they keep trying out. They've been doing quite a bit of testing in this area, and have even pushed some drastic regressive changes that I've <a href=\"http://code.google.com/p/chromium/issues/detail?id=84718&amp;can=4&amp;colspec=ID%20Stars%20Pri%20Area%20Feature%20Type%20Status%20Summary%20Modified%20Owner%20Mstone%20OS\">complained about.</a></p>\n\n<p>The takeaway here is that:</p>\n\n<ol>\n<li>Chrome is most definitely \"not done yet\" with regards to subpixel rendering. It sucks to say, but your best option for now is to wait a while.</li>\n<li>The spec needs to be a lot more specific in this area so there is some consistency across browsers, because any subpixel rendering/anti-aliasing at all right now is very browser-dependent. There was unresolved discussion of it back in <a href=\"http://www.mail-archive.com/whatwg@lists.whatwg.org/msg10074.html\">2008.</a> I'm not away of any progress since.</li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>Here's a way of doing sub-pixel rendering for <em>any</em> canvas content (text, images, vectors, etc). <a href=\"http://johnvalentine.co.uk/subpixel-html5-canvas.htm\" rel=\"nofollow\">http://johnvalentine.co.uk/subpixel-html5-canvas.htm</a>.</p>\n\n<blockquote>\n  <h2>Outline of the method</h2>\n  \n  <p>It draws onto a canvas, which is then drawn to the screen to take advantage of RGB-striped subpixels. It works with alpha channels too. Note that this might not work if you are using a portrait display, non-striped pixels, or if your browser displays canvases at a lower resolution than your display.</p>\n</blockquote>\n\n<p>There's scope for fine-tuning, but it's a big gain for a simple method. It works on all browsers I've tested, but only where canvas-to-screen pixel ratio is 1:1 (but I believe solutions have been offered for that).</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm wondering if anyone knows if it's possible to enable sub-pixel rendering in an HTML5 canvas in Chrome (and/or Safari).</p>\n\n<p>Chrome does sub-pixel rendering in HTML, and FF does it for both HTML &amp; Canvas rendering.  Specific issue pictured below:</p>\n\n<p><img src=\"http://i.stack.imgur.com/05wbH.png\" alt=\"Screenshot\"></p>\n",
            "last_activity_date": 1374104840,
            "question_id": 6720977,
            "score": 8,
            "tags": [
                "javascript",
                "google-chrome",
                "canvas"
            ],
            "title": "Sub-pixel rendering in Chrome Canvas"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can detect if a browser supports the attribute:</p>\n\n<p><a href=\"http://diveintohtml5.info/detect.html#input-placeholder\" rel=\"nofollow\">http://diveintohtml5.info/detect.html#input-placeholder</a></p>\n\n<pre><code>function supports_input_placeholder() {\n    var i = document.createElement('input');\n    return 'placeholder' in i;\n}\n</code></pre>\n\n<p>If it does, do nothing. If it doesn't, you can use JS to grab the placeholder value and then insert it into the field as you see fit (perhaps as default value) and then add the appropriate interactions to simulate the HTML5 placeholder behaviors. </p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>@marcgg wrote a great JQuery placeholder plugin that basically replicates the placeholder functionality for those browsers that don't support it. </p>\n\n<p><a href=\"https://github.com/marcgg/Simple-Placeholder\" rel=\"nofollow\">https://github.com/marcgg/Simple-Placeholder</a></p>\n\n<p>I searched through a lot of placeholder plugins before settling on this one and it works great so far. Originally found it in response to this similar question:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/5120257/what-is-the-best-html5-placeholder-like-jquery-plugin-out-there\">What is the best HTML5 placeholder -like jQuery plugin out there?</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I recommend using <a href=\"http://modernizr.com/\" rel=\"nofollow\">Modernizr</a> to detect this feature.</p>\n\n<pre><code>if (Modernizr.input.placeholder) {\n  // your placeholder text should already be visible!\n} else {\n  // no placeholder support :(\n  // fall back to a scripted solution\n}\n</code></pre>\n\n<p>If you're not interested in using this library you could use the following the code.</p>\n\n<pre><code>function supports_input_placeholder() {\n    var i = document.createElement('input');\n    return 'placeholder' in i;\n}\n</code></pre>\n\n<p>Regarding to fallback support, if you're using jQuery you could use <a href=\"https://github.com/marcgg/Simple-Placeholder\" rel=\"nofollow\">Simple Placeholder</a>, which had its origin here at <a href=\"http://stackoverflow.com/questions/5120257/what-is-the-best-html5-placeholder-like-jquery-plugin-out-there\">StackOverflow</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'd like to use HTML5's placeholder attribute (You can see it in cation in the newsletter at <a href=\"http://www.thoughtresults.com/navigation-timing\">Thought Results</a>). But when I use older browsers, of course, they don't render anything. I can use JavaScript to imitate it, but then, I shouldn't use it and it's done the old way. How can I have both HTML5 placeholder attribute, and at the same time simulate it for older browsers?</p>\n",
            "last_activity_date": 1346434809,
            "question_id": 6561235,
            "score": 8,
            "tags": [
                "javascript",
                "html5",
                "browser",
                "backwards-compatibility"
            ],
            "title": "how to use HTML5 placeholder attribute with backward-compatibility in mind?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<pre><code>grouperArray.sort(function (a, b) {\n    var aSize = a.gsize;\n    var bSize = b.gsize;\n    var aLow = a.glow;\n    var bLow = b.glow;\n    console.log(aLow + \" | \" + bLow);\n\n    if(aSize == bSize)\n    {\n        return (aLow &lt; bLow) ? -1 : (aLow &gt; bLow) ? 1 : 0;\n    }\n    else\n    {\n        return (aSize &lt; bSize) ? -1 : 1;\n    }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<pre><code>grouperArray.sort(function (a, b) {\n  var aSize = a.gsize;\n  var bSize = b.gsize;\n  var aLow = a.glow;\n  var bLow = b.glow;\n  console.log(aLow + \" | \" + bLow);      \n  return (aSize &lt; bSize) ? -1 : (aSize &gt; bSize) ? 1 : ( (aLow &lt; bLow ) ? -1 : (aLow &gt; bLow ) ? 1 : 0 );\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>grouperArray.sort(function (a, b) {\n     var aSize = a.gsize;     \n     var bSize = b.gsize;     \n     var aLow = a.glow;\n     var bLow = b.glow;\n     console.log(aLow + \" | \" + bLow);\n     return (aSize &lt; bSize) ? -1 : (aSize &gt; bSize) ? 1 : (aLow &lt; bLow) ? -1 : (aLow &gt; bLow) ? 1 : 0); }); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>grouperArray.sort(function (a, b) {\n    var aSize = a.gsize;\n    var bSize = b.gsize;\n    if (aSize !== aSize)\n        return aSize - bSize;\n    return a.glow - b.glow;\n});\n</code></pre>\n\n<p>not tested, but I think that should work.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I expect the <a href=\"http://en.wikipedia.org/wiki/Ternary_operation\" rel=\"nofollow\">ternary</a> operator <code>((aSize &lt; bSize) ? -1 : (aSize &gt; bSize) ? 1 : 0;)</code> has you confused.  You should check out the link to understand it better.</p>\n\n<p>Until then, here's your code blown out into full if/else.</p>\n\n<pre><code>grouperArray.sort(function (a, b) {\n    if (a.gsize &lt; b.gsize)\n    {\n        return -1;\n    }\n    else if (a.gsize &gt; b.gsize)\n    {\n        return 1;\n    }\n    else\n    {\n        if (a.glow &lt; b.glow)\n        {\n            return -1;\n        }\n        else if (a.glow &gt; b.glow)\n        {\n            return 1;\n        }\n        return 0;\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>grouperArray.sort(\n  function(a,b){return a.gsize == b.gsize ? a.glow - b.glow : a.gsize - b.gsize}\n);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is what I use</p>\n\n<pre><code>function sort(a, b) {\n    var _a = \"\".concat(a.size, a.glow);\n    var _b = \"\".concat(b.size, b.glow);\n    return _a &lt; _b;\n}\n</code></pre>\n\n<p>concat the two items as a string and they will be sorted by a string value. If you want you could wrap _a and _b with parseInt to compare them as numbers if you know they will be numerical.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I realize this was asked some time ago, but I thought I would add my solution.</p>\n\n<p>This function generates sort methods dynamically. simply supply each sortable child property name, prepended with +/- to indicate ascending or descending order.  Super re-usable, and it doesn't need to know anything about the data structure you've put together.  Could be made idiot proof - but doesn't seem necessary.</p>\n\n<pre><code>function getSortMethod(){\n    var _args = Array.prototype.slice.call(arguments);\n    return function(a, b){\n        for(var x in _args){\n            var ax = a[_args[x].substring(1)];\n            var bx = b[_args[x].substring(1)];\n            var cx;\n\n            ax = typeof ax == \"string\" ? ax.toLowerCase() : ax / 1;\n            bx = typeof bx == \"string\" ? bx.toLowerCase() : bx / 1;\n\n            if(_args[x].substring(0,1) == \"-\"){cx = ax; ax = bx; bx = cx;}\n            if(ax != bx){return ax &lt; bx ? -1 : 1;}\n        }\n    }\n}\n</code></pre>\n\n<p>example usage:  </p>\n\n<p>items.sort(getSortMethod('-price', '+priority', '+name'));</p>\n\n<p>this would sort <code>items</code> with lowest <code>price</code> first, with ties going to the item with the highest <code>priority</code>.  further ties are broken by the item <code>name</code></p>\n\n<p>where items is an array like: </p>\n\n<pre><code>var items = [\n    { name: \"z - test item\", price: \"99.99\", priority: 0, reviews: 309, rating: 2 },\n    { name: \"z - test item\", price: \"1.99\", priority: 0, reviews: 11, rating: 0.5 },\n    { name: \"y - test item\", price: \"99.99\", priority: 1, reviews: 99, rating: 1 },\n    { name: \"y - test item\", price: \"0\", priority: 1, reviews: 394, rating: 3.5 },\n    { name: \"x - test item\", price: \"0\", priority: 2, reviews: 249, rating: 0.5 } ...\n];\n</code></pre>\n\n<p>live demo:  <a href=\"http://gregtaff.com/misc/multi_field_sort/\" rel=\"nofollow\">http://gregtaff.com/misc/multi_field_sort/</a></p>\n\n<p>EDIT:  Fixed issue with Chrome.  </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>grouperArray.sort(function (a, b) {   \n    return a.gsize - b.gsize || a.glow - b.glow;\n});\n</code></pre>\n\n<p>shorter version</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<pre><code>grouperArray.sort(function (a, b) {\n    var aSize = a.gsize;\n    var bSize = b.gsize;\n    var aLow = a.glow;\n    var bLow = b.glow;\n    console.log(aLow + \" | \" + bLow);      \n    return (aSize &lt; bSize) ? -1 : (aSize &gt; bSize) ? 1 : 0;\n});\n</code></pre>\n\n<p>So the above code sorts the array by gsize - smallest to largest. It works good.\nBut if the gsize is the same I would like it to then sort by glow.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1403113848,
            "question_id": 6129952,
            "score": 8,
            "tags": [
                "javascript",
                "arrays"
            ],
            "title": "Javascript sort array by two fields"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Well in your second project, you might not have included the jQuery files at the the top.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>No difference, you just need to have the jQuery library installed and referenced in your project.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>document.getElementById</code> returns a DOM object. This is the browser's native way of thinking about an element in the page.  It has various methods and properties.  These can be a little clunky to use.</p>\n\n<p>The jQuery object (created by the <code>$</code> method) is a wrapper around a DOM element or a set of DOM elements.  The normal properties and methods are not available; you get a selection of different methods that make the process of DOM manipulation more intuitive.</p>\n\n<p>The difference is more clear to see with multiple elements in the selection (as you would get with a class selector <code>$('.someClass')</code> for instance, but the methods on a jQuery selection are different to the ones on a native DOM element.  They point to the same thing, but they are different ways of thinking about it and dealing with it.</p>\n\n<hr>\n\n<p>As a final note, you can convert a jQuery selection into its native DOM element(s) with the <a href=\"http://api.jquery.com/get\"><code>get</code></a> method (edit: or the alternative array-like syntax).  So</p>\n\n<pre><code>document.getElementById('theID')\n</code></pre>\n\n<p>is exactly the same as</p>\n\n<pre><code>$('#theID').get(0) // or $('#theId')[0]\n</code></pre>\n\n<p>Note, however, that you should use the first, as it has much better performance.  Only use jQuery if you need the extra functionality it provides.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>Make sure to include</p>\n\n<p><code>&lt;script src=\"//ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js\"&gt;&lt;/script&gt;</code></p>\n\n<p>In your <code>&lt;head&gt;</code></p>\n\n<p>If you don't load <code>jQuery</code> then you cannot use <code>$</code> as jQuery is an external library and not part of JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What's the difference between classic Javascript code:</p>\n\n<pre><code>document.getElementById('theID')\n</code></pre>\n\n<p>and the jQuery version:</p>\n\n<pre><code>$('#theID')\n</code></pre>\n\n<p>because I used the second in a project and I got error instead of the first that works perfectly.</p>\n",
            "last_activity_date": 1361905016,
            "question_id": 6103766,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "getelementbyid"
            ],
            "title": "Diference between getElementById and jquery $(&#39;#smth&#39;)"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Personally I'd avoid using either. I'd have <code>onclick='return false;'</code> instead, and just set <code>href='#'</code>.</p>\n\n<p>Why? Because if you put Javascript code in the href, then it appears in the browser's status bar when you hover over the link, just like any other URL. It just looks messy.</p>\n\n<p>In fact, since it's going to be ignored anyway, you could put any URL you fancy into the <code>href</code>, not just a hash. The hash is safest, just in case your user has Javascript disabled, but aside from that point, it could be anything.</p>\n\n<p>But I have to point out: having an <code>&lt;a&gt;</code> tag with the href going to a void Javascript code seems to rather defeat the point of having an <code>&lt;a&gt;</code> tag in the first place. I can see how you'd want to enable and disable a link at runtime, but simply setting the href to void does seem somewhat pointless. If it isn't going to be a real link, why not just have a <code>&lt;span&gt;</code> or some other tag. If you must make it look like a link, it's trivial to do that in CSS.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>The ideal situation is to not put any code on the element itself, but rather use javascript in either a script tag, or in an external file and bind the event handler there.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It's better not to use either. The <code>href</code> attribute indicates a url. It's better to use event handlers to get the desired behaviour, which is probably the <code>onclick</code> event.</p>\n\n<p>In this case the desired behaviour apparently is to do nothing. Firstly, why use an anchor tag at all when it doesn't link anywhere? Secondly, this can be handles by preventing event bubbling, by letting the <code>onclick</code> event handler return <code>false</code>. Then the <code>href</code> can either point to <code>#</code>, or better even to have it point to a url that more or less has the same effect as the event handler, so it will degrade gracefully when javascript is turned off.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Doesn't answer you question but may shed a bit more light on it, some early versions of browsers like netscape had problems when a script was used within the <code>href</code>.</p>\n\n<p>The <code>void</code> operator was pretty much to only way force the click to do nothing.</p>\n\n<p>Now, with browsers properly implementing \"pseudo URLs\", you can safely just use <code>javascript:;</code>.</p>\n",
                    "is_accepted": true,
                    "score": 3
                }
            ],
            "body": "<p>I have seen <code>href=\"javascript:void(0)\"</code> and I have seen <code>href=\"javascript:;\"</code>  Is there any reason I would not just use <code>href=\"javascript:\"</code> instead?</p>\n\n<p><strong>Edit:</strong> Let me make it clear: I am combining this with an <code>onclick</code> and have no objection to using <code>return false</code> if it becomes necessary to use the alternative. Of course this is only if the alternative makes better sense over <code>javascript:</code>.</p>\n\n<p><strike>Also, <strong>I have yet to see a answer to my question shown (clearly I think) in the first paragraph.</strong></strike> Thanks, david. :)</p>\n\n<blockquote>\n  <p>I have seen <code>href=\"javascript:void(0)\"</code> and I have seen <code>href=\"javascript:;\"</code>  Is there any reason I would not just use <code>href=\"javascript:\"</code> instead?</p>\n</blockquote>\n",
            "last_activity_date": 1348086924,
            "question_id": 5237105,
            "score": 8,
            "tags": [
                "javascript",
                "html",
                "href",
                "placeholder"
            ],
            "title": "Why use `javascript:void(0)` instead of `javascript:` as an href do nothing placeholder?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I think your answer is here:</p>\n\n<p><a href=\"http://code.google.com/p/flot/issues/detail?id=218\" rel=\"nofollow\">http://code.google.com/p/flot/issues/detail?id=218</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I needed the same thing, so I quickly hacked together a <a href=\"https://github.com/joetsoi/flot-barnumbers\">plugin</a> for it and a quick <a href=\"http://joetsoi.github.com/flot-barnumbers/\">example</a> of it in action.</p>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>I would like to show the value within the bar on the <a href=\"http://code.google.com/p/flot/\">flot</a> bar chart, something like this:</p>\n\n<pre><code>|\n|               +----+\n|               |    |\n|               |    |\n|               |    |\n|   +----+      | 20 |\n|   |    |      |    |\n|   | 10 |      |    |\n|   |    |      |    |\n|---+----+------+----+------\n</code></pre>\n\n<p>data = [[1, 10], [2, 20]]</p>\n\n<p>Is there a way to do this?</p>\n",
            "last_activity_date": 1327097049,
            "question_id": 4892160,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "graph",
                "flot"
            ],
            "title": "Show value within bar on flot bar chart"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>wrong url in <code>&lt;script&gt;</code> for jQuery ?</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Is the jquery javascript file loaded before you call anything with it -> using the selector $?\nPlease check with Chrome or Firefox+firebug if the jquery library is loaded correctly. Maybe the path could be not correct</p>\n\n<p>After that, try to place your code into:</p>\n\n<pre><code>$(document).ready(function() {\n  // put all your jQuery goodness in here.\n});\n</code></pre>\n\n<p>This will make sure that '// put all your jQuery goodness in here.' will be executed after jQuery has been loaded.</p>\n",
                    "is_accepted": true,
                    "score": 10
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/9626455/referenceerror-cant-find-variable\">ReferenceError: Can\u2019t find variable: $</a>  </p>\n</blockquote>\n\n\n\n<p>I get this error:</p>\n\n<blockquote>\n  <p>ReferenceError: Can't find variable: <code>$</code></p>\n</blockquote>\n\n<p>Any ideas? </p>\n",
            "last_activity_date": 1351908676,
            "question_id": 4888725,
            "score": 8,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "ReferenceError can&#39;t find variable: $"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Check out live http headers, you'll see when you press the back button, no request is made.  Which is done on purpose, so you don't loose what you may have typed into forms. </p>\n\n<p><B>Edit</b></p>\n\n<p>Some post on experts exchange said this worked, but its from 2006.</p>\n\n<pre><code>&lt;META HTTP-EQUIV=\"Expires\" CONTENT=\"0\"&gt;\n&lt;META HTTP-EQUIV=\"Pragma\" CONTENT=\"no-cache\"&gt;\n&lt;META HTTP-EQUIV=\"Cache-Control\" CONTENT=\"no-cache\"&gt;\n&lt;META HTTP-EQUIV=\"Cache-Control\" CONTENT=\"no-store\"&gt;\n</code></pre>\n\n<p>Then a javascript refresh</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This works for me</p>\n\n<p>make a new php file. I can use the back and forward buttons and the number on the page always updates</p>\n\n<pre><code>&lt;?php\nheader(\"Cache-Control: no-store, no-cache, must-revalidate, max-age=0\");\nheader(\"Expires: Sat, 26 Jul 1997 05:00:00 GMT\");\necho time();\n?&gt;&lt;a href=\"http://google.com\"&gt;aaaaaaaaaaaaa&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<pre><code>&lt;meta http-equiv=\"Cache-Control\" content=\"no-cache\" /&gt;\n</code></pre>\n\n<p>I think the correct value is \"no-cache\"</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>session_cache_limiter('nocache');\n</code></pre>\n\n<p>That should automatically generate all the required headers. Note that some browsers, such as Opera, still ignore these when using the back button.</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>The relevant headers are as follows, in case you want to generate them some other way:</p>\n\n<pre><code>Expires: Thu, 19 Nov 1981 08:52:00 GMT\nCache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0\nPragma: no-cache\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Why? \nI mean, why do you want to do this? \nWhen I press the back button, I want the standard function that the browser provides - to go back to the previous page. I don't want a suprise. </p>\n\n<p>If it is to stop an accidental resubmission of a POST, that can be accomplished easily by ending the POST handling with a redirect to display the desired reply using a GET. A later back into this page, will redisplay the redirected GET (or reload it from the cache which must have the same result). This is what the user expects and is harmless. </p>\n\n<p>This has the added advantage that if your save has failed when updating the database, the display will display what is on the database, not what has been left in the variables. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You posted a comment:</p>\n\n<blockquote>\n  <p>It is because once the form has been\n  submitted, IF the user presses the\n  back button, the information they are\n  viewing will be inaccurate.</p>\n</blockquote>\n\n<p>If you want to prevent this you're doing it wrong! :)</p>\n\n<p>What you need to do is a redirect when the form has been submitted.</p>\n\n<pre><code>&lt;?php\n    // code that handles the form submit\n    header(\"Location: http://www.example.com/form-success.html\"); // needs the absolute url (You can use $_SERVER['HTTP_HOST'], $_SERVER['PHP_SELF'] and dirname() for this)\n    exit; // prevents further execution of the php code when while doing to redirect\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You may add the following PHP Code in your PHP Page.</p>\n\n<pre><code>CodeIgniter Framework version:\n$this-&gt;output-&gt;set_header('Last-Modified:'.gmdate('D, d M Y H:i:s').'GMT');\n$this-&gt;output-&gt;set_header('Cache-Control: no-store, no-cache, must-revalidate');\n$this-&gt;output-&gt;set_header('Cache-Control: post-check=0, pre-check=0',false);\n$this-&gt;output-&gt;set_header('Pragma: no-cache');\n</code></pre>\n\n<p>PHP version:</p>\n\n<pre><code>header('Last-Modified:'.gmdate('D, d M Y H:i:s').'GMT');\nheader('Cache-Control: no-store, no-cache, must-revalidate');\nheader('Cache-Control: post-check=0, pre-check=0',false);\nheader('Pragma: no-cache');\n</code></pre>\n\n<p>And also you may add following Java Script Code in Login/Master Page at <code>&lt;head&gt;</code> Section:</p>\n\n<pre><code>&lt;script language=\"javascript\" type=\"text/javascript\"&gt;\n    window.history.forward();\n&lt;/script&gt;\n</code></pre>\n\n<p>Compatibility verified in</p>\n\n<ul>\n<li>Internet Explorer </li>\n<li>Google Chrome  </li>\n<li>Mozilla Firefox  </li>\n<li>Opera </li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have tried every combination and permutation of meta tags that are supposed to stop a page from being cached, but Firefox STILL caches the page!  <strong>I just need the URL to reload when a user presses the back button.</strong>  Works fine in IE8.</p>\n\n<p>I have tried all of these...</p>\n\n<pre><code>&lt;meta http-equiv=\"Cache-Control\" content=\"no-store\" /&gt;\n&lt;meta http-equiv=\"Pragma\" content=\"no-cache\"/&gt;\n&lt;meta http-equiv=\"Expires\" content=\"-1\"/&gt;\n&lt;meta http-equiv=\"Expires\" content=\"Sat, 1 Jan 2000 00:00:00 GMT\" /&gt; \n</code></pre>\n\n<p>...and I have also tried the following JavaScript...</p>\n\n<pre><code>&lt;input type=\"hidden\" id=\"refreshed\" value=\"no\"/&gt;\n&lt;script type=\"text/javascript\"&gt;\n\n    onload=function(){\n        var e=document.getElementById(\"refreshed\");\n        if(e.value==\"no\"){\n            e.value=\"yes\";\n        }\n\n        else{\n            e.value=\"no\";\n            location.reload();\n        }\n\n    }\n\n&lt;/script&gt; \n</code></pre>\n\n<p>... all to no avail.  What am I missing here?  Pages are generated with PHP if that matters.</p>\n\n<p><strong>UPDATE 1:</strong></p>\n\n<p>I have tried every suggestion thus far but I still cannot get this to work.  When I use Chris's PHP code I use it like this...</p>\n\n<pre><code>&lt;?php\nheader(\"Cache-Control: no-store, no-cache, must-revalidate, max-age=0\");\nheader(\"Expires: Sat, 26 Jul 1997 05:00:00 GMT\");\n?&gt;\n&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html dir=\"ltr\" xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;!--the rest of my page--&gt;\n</code></pre>\n\n<p>.. and as you can see it is at the EXTREME top of my webpage, before the <code>DOCTYPE</code> header.</p>\n\n<p>I have also experimented with <code>session_start()</code> but even after reading the manual I am not sure I am using it right.  I was putting it right at the very top of my page as well.</p>\n\n<p><strong>I am open to ANY SUGGESTIONS that make this work without breaking other page functionality.  I know I have seen pages that reload EVERY TIME the back button is used, HOW ARE THEY DOING IT?!</strong></p>\n\n<p><strong>SOLVED!</strong></p>\n\n<p>Turns out I had multiple issues working against me, but through due diligence I was able to eliminate those issues and emerge victorious.</p>\n\n<p>After Chris updated his code to...</p>\n\n<pre><code>&lt;?php\nheader(\"Cache-Control: no-store, no-cache, must-revalidate, max-age=0\");\nheader(\"Expires: Sat, 26 Jul 1997 05:00:00 GMT\");\necho time();\n?&gt;&lt;a href=\"http://google.com\"&gt;aaaaaaaaaaaaa&lt;/a&gt;\n</code></pre>\n\n<p>I found that his code did indeed work when I used it EXACTLY how he had it with NOTHING else, but when I put it into my pages it didn't work.  All of my pages are either <code>.php</code> or <code>.html</code> and all are attached to a DWT (Dynamic Web Template), so I was updating all of them at once with Chris's code.  What I didn't realize was that the DWT starts RIGHT AFTER the <code>DOCTYPE</code> header, so the code was never inserted into my pages.  I could find no way to make the DWT include the <code>DOCTYPE</code> header so I went into all my pages and manually inserted the code above the <code>DOCTYPE</code> header.</p>\n\n<p>Next I found that even though my server is set to parse <code>.htm</code> and <code>.html</code> as <code>.php</code> the <code>.html</code> pages were generating an error at the very where I had inserted Chris's code saying something to the effect of \"cannot modify headers, headers have already been sent\".  I didn't really care what my extensions were so I just changed all my <code>.html</code> extensions to <code>.php</code> extensions.</p>\n\n<p>A final minor annoyance was that even though the page was now not being cached (just like I wanted) Firefox was placing the user at their last location on the previous page when they used the back button (i.e. if a user was at the bottom of page a when they navigated to page b, then the user used the back button on page b they would be returned to the bottom of page a, not the top of page a as desired).  Trimming down my original JavaScript fixed this...</p>\n\n<pre><code>    &lt;script type=\"text/javascript\"&gt;\n\n        onload=function(){\n            document.getElementById('content').scrollTop=0;\n        }\n\n    &lt;/script&gt;\n</code></pre>\n\n<p>Even though this seems very involved for such a simple problem I am glad it is fixed.  Thanks for your help  everyone (especially Chris).</p>\n",
            "last_activity_date": 1411396402,
            "question_id": 4630484,
            "score": 8,
            "tags": [
                "php",
                "javascript",
                "html",
                "firefox",
                "back-button"
            ],
            "title": "How do I make Firefox reload page when back button is pressed?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Try adding <code>file://</code> to the URL.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This is because of security reasons. You need a webserver to do that, else you can access any file on a system which would be a big security hole.  </p>\n\n<p>In developement mode, you can set e.g on chrome:  </p>\n\n<pre><code>chrome.exe --allow-file-access-from-files  \n</code></pre>\n\n<p>And you will be able to run your code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://mtaulty.com/CommunityServer/blogs/mike_taultys_blog/archive/2011/06/22/silverlight-html-and-the-webbrowser-control-for-offline-apps.aspx\" rel=\"nofollow\">There is a long story</a> about workarounds of that \"security fix\" from MS. New behavior was implemented starting from IE7. Take a look into \"base\" tag and <a href=\"http://msdn.microsoft.com/en-us/library/ms537184%28v=vs.85%29.aspx\" rel=\"nofollow\">IE Feature controls</a>.</p>\n\n<p>I did the following:</p>\n\n<pre><code>                    //TODO: if not mono\n                var executableFilename = Path.GetFileName(System.Reflection.Assembly.GetEntryAssembly().Location);\n                var keys = new[] { executableFilename, [vsname]+\".vshost.exe\" }; //check!\n\n                Action&lt;string, object, string&gt; SetRegistryKeyOrFail =\n                    (key, val, regStr) =&gt;\n                        {\n                            var reg =\n                                Registry.CurrentUser.CreateSubKey(regStr);\n                            if (reg == null) throw new Exception(\"Failed registry: \" + regStr);\n                            reg.SetValue(key, val);\n                        };\n\n                foreach (var key in keys)\n                {\n                    SetRegistryKeyOrFail(key, 1, @\"SOFTWARE\\Microsoft\\Internet Explorer\\MAIN\\FeatureControl\\FEATURE_BLOCK_LMZ_IMG\");\n                    SetRegistryKeyOrFail(key, 0, @\"SOFTWARE\\Microsoft\\Internet Explorer\\MAIN\\FeatureControl\\FEATURE_BLOCK_LMZ_SCRIPT\");\n                }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>i came up on your post, while playing around with things following worked for me:</p>\n\n<pre><code>HtmlElementCollection head = webBrowser1.Document.GetElementsByTagName(\"head\");\nif (head != null)\n{\n    HtmlElement elm = webBrowser1.Document.CreateElement(\"script\");\n    elm.SetAttribute(\"type\", \"text/javascript\");\n    elm.InnerText = System.IO.File.ReadAllText(Environment.CurrentDirectory + @\"\\helperscripts.js\");\n    ((HtmlElement)head[0]).AppendChild(elm);\n}\n</code></pre>\n\n<p>, so all methods of helperscript.js can be invoked using</p>\n\n<pre><code>webBrowser1.Document.InvokeScript(\"methodname\");\n</code></pre>\n\n<p>, here as a reference for the script invoke: <a href=\"http://stackoverflow.com/questions/153748/how-to-inject-javascript-in-webbrowser-control\">How to inject Javascript in WebBrowser control?</a></p>\n\n<p>greetings</p>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>This seems really dumb. I've tried a bunch of different ways and it's just not working. I have a WinForms app with a WebBrowser control. If I try with a raw html file on my desktop using the same src string, the src I put together works fine. But plugging the same stuff into the WebBrowser control won't work.</p>\n\n<p>Here's my code:</p>\n\n<pre><code>HtmlElementCollection head = this.wbPreview.Document.GetElementsByTagName( \"head\" );\nif (head != null)\n{\n    HtmlElement elm = this.webBrowserControl.Document.CreateElement(\"script\");\n    string mySource = Environment.CurrentDirectory + @\"\\MyScriptFile.js\";\n    elm.SetAttribute(\"src\", mySource);\n    elm.SetAttribute(\"type\", \"text/javascript\");\n    ((HtmlElement)head[0]).AppendChild(elm);\n}\n</code></pre>\n\n<p>The WebBrowser doesn't get the script. However, if I change \"mySource\" to an external resource (via http://), it works fine!</p>\n\n<p>Help!</p>\n",
            "last_activity_date": 1397500616,
            "question_id": 4029602,
            "score": 8,
            "tags": [
                "c#",
                "javascript",
                "html",
                "webbrowser-control"
            ],
            "title": "How do I add a local script file to the HTML of a WebBrowser control?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Use jQuery's <a href=\"http://api.jquery.com/attr/\"><code>attr</code></a> function</p>\n\n<pre><code>$(\"#previous\").attr(\"control\", \"-6\");\n</code></pre>\n\n<p>An example</p>\n\n<pre><code>// Try to retrieve the control attribute\n// returns undefined because the attribute doesn't exists\n$(\"#previous\").attr(\"control\");\n\n// Set the control attribute\n$(\"#previous\").attr(\"control\", \"-6\");\n\n// Retrieve the control attribute (-6)\n$(\"#previous\").attr(\"control\");\n</code></pre>\n\n<p>See this <a href=\"http://jsfiddle.net/BRTJc/\">example on jsFiddle</a></p>\n\n<hr>\n\n<p>You can alternatively use <a href=\"http://api.jquery.com/jQuery.data/\"><code>data</code></a> function to store values on elements. Works the same way, for example:</p>\n\n<pre><code>$(\"#previous\").data(\"control\"); // undefined\n$(\"#previous\").data(\"control\", \"-6\"); // set the element data\n$(\"#previous\").data(\"control\"); // retrieve -6\n</code></pre>\n\n<p>Using <code>data</code> you can store more complex values like objects</p>\n\n<pre><code>$(\"#previos\").data(\"control\", { value: -6 });\n($(\"#previos\").data(\"control\")).value; // -6\n</code></pre>\n\n<p>See a <a href=\"http://jsfiddle.net/ZGf7Z/\">data example on jsFiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>$('#previous').attr('control', '-6');\n</code></pre>\n\n<p>Why? the <a href=\"http://api.jquery.com/attr/\" rel=\"nofollow\">$.attr();</a> function of jQuery allows you to add, get or update attributes (class, id, href, link, src, control and everything else!).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>$(\"#previous\").attr(\"control\", \"-6\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>HTML:</p>\n\n<pre><code>&lt;a id=\"previous\" href=\"#\"&gt;...&lt;/a&gt; \n</code></pre>\n\n<p>jQuery:</p>\n\n<pre><code>$('#previous').attr('control', '-6');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Since the jQuery version has been <em>well</em> covered here, I thought I'd offer <em>something different</em>, so here a native DOM API alternative:</p>\n\n<pre><code>document.getElementById('previous').setAttribute('control','-6');\n</code></pre>\n\n<p>Yes, I know you asked for jQuery. Never hurts to know the native way too. :o)</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>Let me see if I understood you.\nYou have, for example, the code:</p>\n\n<pre><code>&lt;a id=\"previous\" href=\"#\"&gt;&lt;/a&gt;\n</code></pre>\n\n<p>And by jQuery you want it to be:</p>\n\n<pre><code>&lt;a id=\"previous\" control=\"-6\" href=\"#\"&gt;&lt;/a&gt;\n</code></pre>\n\n<p>Is it right?\nIf it is. You just have to do:</p>\n\n<pre><code>$('#previous').attr('control', -6);\n</code></pre>\n\n<p>If an attribute doesn't exists it's created by jQuery.\nSo, to remove it you can do:</p>\n\n<pre><code>$('#previous').removeAttr('control');\n</code></pre>\n\n<p>What you're doing doesn't respect the html rules and everything else, but it works fine, a lot of plugins do the same. ;D</p>\n\n<p>I hope this could be helpful!</p>\n\n<p>See you!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>jQuery's attr (http://api.jquery.com/attr/) will do that.  Example:</p>\n\n<pre><code>$(\"#previous\").attr(\"control\", \"-6\");\n</code></pre>\n\n<p>Also check out this example at <a href=\"http://jsfiddle.net/grfSN/\" rel=\"nofollow\">http://jsfiddle.net/grfSN/</a>.  </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Well, I have this jQuery image slideshow that uses the attribute \"control\" inside an &lt;a&gt;. Seeing how it didn't validate I searched for a way to add this attribute inside my HMTL via jQuery but I didn't really find anything relevant. Now I don't really care about how valid my page is, but I'm really curious in how to add an HTML attribute inside an HTML tag.</p>\n\n<p>In case I wasn't clear enough with my explanation, I have this code:</p>\n\n<pre><code>&lt;a id=\"previous\" control=\"-6\" href=\"#\"&gt;&lt;/a&gt;\n</code></pre>\n\n<p>And I want to add <strong>control=\"-6\"</strong> with jQuery.</p>\n",
            "last_activity_date": 1422808155,
            "question_id": 3866063,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "How to add an HTML attribute with jQuery"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Try the <a href=\"http://api.jquery.com/removeAttr/\"><code>.removeAttr()</code></a> function:</p>\n\n<pre><code>$(function() {\n    $('a').removeAttr('onclick');\n});\n</code></pre>\n\n<p>\u200b\n<a href=\"http://jsfiddle.net/qu5zZ/4/\">jsfiddle demo</a>.</p>\n\n<p>Once you've got rid of the <code>onclick</code> attribute you could attach your own click handler.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<pre><code>$(\"#theElement\")[0].onclick = function() {\n  whatever();\n};\n// -- or --\n$(\"#theElement\")[0].onclick = null;\n</code></pre>\n\n<p>It's not that jQuery would make the standard DOM functions and properties go away. ;-)</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>There is a plugin for it, but you should only do this when you really need to. The plugin gives you the option to call the old function or to ignore it entirely.</p>\n\n<p><a href=\"https://jqueryoverride.codeplex.com/\" rel=\"nofollow\" title=\"jQuery Override Plugin\">jQuery Override Plugin</a></p>\n\n<pre><code>$(divElementObj).override('onclick', 'click', function(...));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Tried given options but worked partially as they removed one but not all. </p>\n\n<p>Instead I tried following chaining as workaround. I am using ver 1.4.2.</p>\n\n<pre><code>jQuery(\u201cselector\u201d)\n    .removeAttr(\"onclick\").removeAttr(\"onmouseout\").removeAttr(\"onmouseover\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have some HTML with an <code>onclick</code> attribute. I want to override that attribute using jQuery. Is there any way to remove the click handler using jQuery? Using <a href=\"http://jsfiddle.net/qu5zZ/1/\">unbind doesn't work</a>.</p>\n",
            "last_activity_date": 1387886674,
            "question_id": 3846263,
            "score": 8,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Can I remove inline event handlers using jQuery?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Maybe you can see if this thing does what you want: <a href=\"http://jsfromhell.com/classes/binary-parser\" rel=\"nofollow\">http://jsfromhell.com/classes/binary-parser</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><s>This is the best way to do it: <a href=\"http://github.com/pgriess/node-jspack\" rel=\"nofollow\">http://github.com/pgriess/node-jspack</a></s> (perhaps if you need to do things on node &lt; 0.6.)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Note that as of node 0.6 this functionality is included in the core library, so that is the new best way to do it.</p>\n\n<p>See <a href=\"http://nodejs.org/docs/latest/api/buffer.html\" rel=\"nofollow\">http://nodejs.org/docs/latest/api/buffer.html</a> for details.</p>\n\n<p>If you are reading/writing binary data structures you might consider using a friendly wrapper around this functionality to make things easier to read and maintain.  Plug follows: <a href=\"https://github.com/dobesv/node-binstruct\" rel=\"nofollow\">https://github.com/dobesv/node-binstruct</a></p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>I ported a C++ (made with GNU GMP) converter with float128 support to Emscripten so that it would run in the browser: <a href=\"https://github.com/ysangkok/ieee-754\" rel=\"nofollow\">https://github.com/ysangkok/ieee-754</a></p>\n\n<p>Emscripten produces JavaScript that will run on Node.js too. You will get the float representation as a string of bits, though, I don't know if that's what you want.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to encode and decode IEEE 754 floats and doubles from binary in node.js to parse a network protocol.</p>\n\n<p>Are there any existing libraries that do this, or do I have to read the spec and implement it myself? Or should I write a C module to do it?</p>\n",
            "last_activity_date": 1355150479,
            "question_id": 3740853,
            "score": 8,
            "tags": [
                "javascript",
                "floating-point",
                "node.js",
                "ieee-754"
            ],
            "title": "Encoding and decoding IEEE 754 floats in JavaScript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The difference between the two methods does not seem to be clearly documented. However, note the following:</p>\n\n<ul>\n<li><p>When you use <code>setMap(null)</code>, your marker will lose the reference to the <code>Map</code>. If you do not keep a reference to the <code>Map</code> object, you wouldn't be able to reshow the marker.</p></li>\n<li><p>In addition, the <code>setMap()</code> method will not trigger the <code>visible_changed</code> event, while the <code>setVisible()</code> method does (if the visibility is actually toggled).</p></li>\n</ul>\n\n<p>Example:</p>\n\n<pre><code>var map = new google.maps.Map(document.getElementById('map'), {\n  zoom: 4,\n  center: new google.maps.LatLng(-25.363, 131.044),\n  mapTypeId: google.maps.MapTypeId.ROADMAP\n});\n\nvar marker = new google.maps.Marker({\n  position: new google.maps.LatLng(-25.363, 131.044), \n  map: map\n}); \n\ngoogle.maps.event.addListener(marker, 'visible_changed', function() {\n  console.log('visible_changed triggered');\n});\n\nmarker.setVisible(false); // visible_changed triggered\nmarker.setVisible(true);  // visible_changed triggered\nmarker.setMap(null);      // visible_changed not triggered\nmarker.setMap(map);       // visible_changed not triggered\n</code></pre>\n\n<p>I guess we should be using the <code>setVisible(false)</code> method when we intend to reshow the marker again on the map, and the <code>setMap(null)</code> when we will not be showing it again.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Another key distinction is that <code>setMap(NULL)</code> releases the resources associated with the marker whereas <code>setVisible(false)</code> just makes the marker invisible, but the resources associated with the marker are still allocated.</p>\n\n<p>If you're dealing with 100s or 1000s of markers, this can become a significant performance and memory issue.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I want to clear a marker on Google Maps.</p>\n\n<p>What is the difference between <code>marker.setVisible(false)</code> and <code>marker.setMap(null)</code>?</p>\n\n<p>But I don't know, which is right?</p>\n",
            "last_activity_date": 1392906665,
            "question_id": 3647711,
            "score": 8,
            "tags": [
                "javascript",
                "google-maps",
                "google-maps-api-3",
                "google-maps-markers",
                "clear"
            ],
            "title": "What is the difference between &quot;marker.setVisible(false)&quot; and &quot;marker.setMap(null)&quot; in Google Maps v3?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There are <a href=\"http://www.google.de/#hl=de&amp;source=hp&amp;q=javascript+domready&amp;aq=f&amp;aqi=g1&amp;aql=&amp;oq=&amp;gs_rfai=&amp;fp=a28cf0c7724fa775\" rel=\"nofollow\">several implementations for \"DOMReady\"</a> functions but most that I can find seem a bit dated, so I don't know how they will behave with IE8 and such.</p>\n\n<p>I would recommend using jQuery's ready() as I think it promises the most cross-browser compatibility. I'm not an expert in jQuery's source code, but <a href=\"http://dev.jquery.com/browser/trunk/jquery/src/event.js\" rel=\"nofollow\">this</a> seems to be the right spot (lines 812-845 or search for <code>function bindReady</code>).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can start with script: <a href=\"http://snipplr.com/view/6029/domreadyjs/\" rel=\"nofollow\">http://snipplr.com/view/6029/domreadyjs/</a>, not optimized (but work) for latest Safari though (e.g. use timer instead of supported DOMContentLoaded).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>One option would be to just get the <code>core.js</code> jQuery file from github.</p>\n\n<p>You could probably slim it down quite a bit for code you don't need. Then run it through YUI compressor, and it should be pretty small.</p>\n\n<ul>\n<li><a href=\"http://github.com/jquery/jquery/blob/1.4.2/src/core.js\" rel=\"nofollow\">http://github.com/jquery/jquery/blob/1.4.2/src/core.js</a> <em>(jQuery core)</em></li>\n<li><a href=\"http://yui.2clics.net/\" rel=\"nofollow\">http://yui.2clics.net/</a> <em>(YUI compressor online)</em></li>\n</ul>\n\n<p>I tried it, and this code worked properly:</p>\n\n<pre><code>$(function() {\n    var newDiv = document.createElement('div');\n    document.getElementsByTagName('body')[0].appendChild(newDiv);\n});\n</code></pre>\n\n<hr>\n\n<p><strong>Update:</strong> This was as small as I got it. It is entirely from <code>jQuery</code> and is around 1,278 bytes (compressed). Should get smaller when you gzip.</p>\n\n<p>Only difference is that you need to call it like:</p>\n\n<pre><code>$.fn.ready(function() {\n    // your code\n});\n</code></pre>\n\n<p>YUI Compressed:</p>\n\n<pre><code>(function(){var e=function(i,j){},c=window.jQuery,h=window.$,d,g=false,f=[],b;e.fn={ready:function(i){e.bindReady();if(e.isReady){i.call(document,e)}else{if(f){f.push(i)}}return this}};e.isReady=false;e.ready=function(){if(!e.isReady){if(!document.body){return setTimeout(e.ready,13)}e.isReady=true;if(f){var k,j=0;while((k=f[j++])){k.call(document,e)}f=null}if(e.fn.triggerHandler){e(document).triggerHandler(\"ready\")}}};e.bindReady=function(){if(g){return}g=true;if(document.readyState===\"complete\"){return e.ready()}if(document.addEventListener){document.addEventListener(\"DOMContentLoaded\",b,false);window.addEventListener(\"load\",e.ready,false)}else{if(document.attachEvent){document.attachEvent(\"onreadystatechange\",b);window.attachEvent(\"onload\",e.ready);var i=false;try{i=window.frameElement==null}catch(j){}if(document.documentElement.doScroll&amp;&amp;i){a()}}}};d=e(document);if(document.addEventListener){b=function(){document.removeEventListener(\"DOMContentLoaded\",b,false);e.ready()}}else{if(document.attachEvent){b=function(){if(document.readyState===\"complete\"){document.detachEvent(\"onreadystatechange\",b);e.ready()}}}}function a(){if(e.isReady){return}try{document.documentElement.doScroll(\"left\")}catch(i){setTimeout(a,1);return}e.ready()}window.jQuery=window.$=e})();\n</code></pre>\n\n<hr>\n\n<p>Full source (again, this is <code>jQuery</code> code):</p>\n\n<pre><code>(function() {\nvar jQuery = function( selector, context ) {\n    },\n    _jQuery = window.jQuery,\n    _$ = window.$,\n\n    rootjQuery,\n    readyBound = false,\n    readyList = [],\n    DOMContentLoaded;\n\njQuery.fn = {\n    ready: function( fn ) {\n        jQuery.bindReady();\n        if ( jQuery.isReady ) {\n            fn.call( document, jQuery );\n        } else if ( readyList ) {\n            readyList.push( fn );\n        }\n        return this;\n    }\n};\njQuery.isReady = false;\njQuery.ready = function() {\n        if ( !jQuery.isReady ) {\n            if ( !document.body ) {\n                return setTimeout( jQuery.ready, 13 );\n            }\n            jQuery.isReady = true;\n            if ( readyList ) {\n                var fn, i = 0;\n                while ( (fn = readyList[ i++ ]) ) {\n                    fn.call( document, jQuery );\n                }\n                readyList = null;\n            }\n            if ( jQuery.fn.triggerHandler ) {\n                jQuery( document ).triggerHandler( \"ready\" );\n            }\n        }\n    };\njQuery.bindReady = function() {\n        if ( readyBound ) {\n            return;\n        }\n        readyBound = true;\n\n        if ( document.readyState === \"complete\" ) {\n            return jQuery.ready();\n        }\n        if ( document.addEventListener ) {\n            document.addEventListener( \"DOMContentLoaded\", DOMContentLoaded, false );\n            window.addEventListener( \"load\", jQuery.ready, false );\n        } else if ( document.attachEvent ) {\n\n            document.attachEvent(\"onreadystatechange\", DOMContentLoaded);\n            window.attachEvent( \"onload\", jQuery.ready );\n\n            var toplevel = false;\n            try {\n                toplevel = window.frameElement == null;\n            } catch(e) {}\n            if ( document.documentElement.doScroll &amp;&amp; toplevel ) {\n                doScrollCheck();\n            }\n        }\n    };\nrootjQuery = jQuery(document);\nif ( document.addEventListener ) {\n    DOMContentLoaded = function() {\n        document.removeEventListener( \"DOMContentLoaded\", DOMContentLoaded, false );\n        jQuery.ready();\n    };\n} else if ( document.attachEvent ) {\n    DOMContentLoaded = function() {\n        if ( document.readyState === \"complete\" ) {\n            document.detachEvent( \"onreadystatechange\", DOMContentLoaded );\n            jQuery.ready();\n        }\n    };\n}\nfunction doScrollCheck() {\n    if ( jQuery.isReady ) {\n        return;\n    }\n    try {\n\n        document.documentElement.doScroll(\"left\");\n    } catch(e) {\n        setTimeout( doScrollCheck, 1 );\n        return;\n    }\n    jQuery.ready();\n}\nwindow.jQuery = window.$ = jQuery;\n})();\n</code></pre>\n\n<p>I'm sure there are more bytes that could be removed.</p>\n\n<p>Don't forget:</p>\n\n<pre><code>/*!\n * jQuery JavaScript Library v1.4.2\n * http://jquery.com/\n *\n * Copyright 2010, John Resig\n * Dual licensed under the MIT or GPL Version 2 licenses.\n * http://jquery.org/license\n*/\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>I need to wait for document readyness in my JavaScript, to insert a div at the bottom of the body.</p>\n\n<p>I want to:</p>\n\n<ul>\n<li>make this JavaScript file as small as possible (compile it down to &lt; 1kb if possible)</li>\n<li>inline the code that provides the document readyness in a closure (without exporting it)</li>\n</ul>\n\n<p>Inlining the whole jQuery source in my file would be too big, so I'm looking for other methods. <code>window.onload</code> would work, but I specifically want document readyness, and not wait for the <code>window.onload</code> event.</p>\n\n<p>Does anyone know a JS snippet that can do this? Or should I just copy part of jQuery's source?</p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>I managed to crawl the jQuery source and put together with the following snippet:</p>\n\n<pre><code>var ready = (function () {\n    var ready_event_fired = false;\n    var ready_event_listener = function (fn) {\n\n        // Create an idempotent version of the 'fn' function\n        var idempotent_fn = function () {\n            if (ready_event_fired) {\n                return;\n            }\n            ready_event_fired = true;\n            return fn();\n        }\n\n        // The DOM ready check for Internet Explorer\n        var do_scroll_check = function () {\n            if (ready_event_fired) {\n                return;\n            }\n\n            // If IE is used, use the trick by Diego Perini\n            // http://javascript.nwbox.com/IEContentLoaded/\n            try {\n                document.documentElement.doScroll('left');\n            } catch(e) {\n                setTimeout(do_scroll_check, 1);\n                return;\n            }\n\n            // Execute any waiting functions\n            return idempotent_fn();\n        }\n\n        // If the browser ready event has already occured\n        if (document.readyState === \"complete\") {\n            return idempotent_fn()\n        }\n\n        // Mozilla, Opera and webkit nightlies currently support this event\n        if (document.addEventListener) {\n\n            // Use the handy event callback\n            document.addEventListener(\"DOMContentLoaded\", idempotent_fn, false);\n\n            // A fallback to window.onload, that will always work\n            window.addEventListener(\"load\", idempotent_fn, false);\n\n        // If IE event model is used\n        } else if (document.attachEvent) {\n\n            // ensure firing before onload; maybe late but safe also for iframes\n            document.attachEvent(\"onreadystatechange\", idempotent_fn);\n\n            // A fallback to window.onload, that will always work\n            window.attachEvent(\"onload\", idempotent_fn);\n\n            // If IE and not a frame: continually check to see if the document is ready\n            var toplevel = false;\n\n            try {\n                toplevel = window.frameElement == null;\n            } catch (e) {}\n\n            if (document.documentElement.doScroll &amp;&amp; toplevel) {\n                return do_scroll_check();\n            }\n        }\n    };\n    return ready_event_listener;\n})();\n\n// TEST\nvar ready_1 = function () {\n    alert(\"ready 1\");\n};\nvar ready_2 = function () {\n    alert(\"ready 2\");\n};\nready(function () {\n    ready_1();\n    ready_2();\n});\n</code></pre>\n\n<p>Thank you very much for helping me find this in the jQuery source. I can now put all this in a closure and do my work without exporting any functions and polluting the global scope.</p>\n",
            "last_activity_date": 1281191300,
            "question_id": 3430455,
            "score": 8,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "$(document).ready() source"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Is this being accessed from a <code>WebView</code> or from the Android Browser app? If from a <code>WebView</code>, you may need to enable geolocation via a Java call. See the <a href=\"http://developer.android.com/reference/android/webkit/WebView.html\">WebView reference</a> for that.</p>\n\n<p>Otherwise, I'm not sure precisely what's wrong with your JS, but here's HTML+JS that I know works with the Android browser:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt; \n&lt;html&gt; \n&lt;head&gt; \n  &lt;script type=\"text/javascript\"&gt; \nfunction watchLocation(successCallback, errorCallback) {\n  successCallback = successCallback || function(){};\n  errorCallback = errorCallback || function(){};\n\n  // Try HTML5-spec geolocation.\n  var geolocation = navigator.geolocation;\n\n  if (geolocation) {\n    // We have a real geolocation service.\n    try {\n      function handleSuccess(position) {\n        successCallback(position.coords);\n      }\n\n      geolocation.watchPosition(handleSuccess, errorCallback, {\n        enableHighAccuracy: true,\n        maximumAge: 5000 // 5 sec.\n      });\n    } catch (err) {\n      errorCallback();\n    }\n  } else {\n    errorCallback();\n  }\n}\n\nfunction init() {\n  watchLocation(function(coords) {\n    document.getElementById('test').innerHTML = 'coords: ' + coords.latitude + ',' + coords.longitude;\n  }, function() {\n    document.getElementById('test').innerHTML = 'error';\n  });\n}\n  &lt;/script&gt; \n&lt;/head&gt; \n\n&lt;body onload=\"init()\"&gt; \n  &lt;div id=\"test\"&gt;Loading...&lt;/div&gt; \n&lt;/body&gt; \n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>I have tested html5 geolocation functionality with the following two phones:</p>\n\n<ul>\n<li>HTC Wildfire</li>\n<li>HTC Galaxy</li>\n</ul>\n\n<p>Both were running the Android 2.1 update1 OS and both failed to do geolocation using the built in Google browser and demo sites like:</p>\n\n<ul>\n<li><a href=\"http://maxheapsize.com/static/html5geolocationdemo.html\" rel=\"nofollow\">http://maxheapsize.com/static/html5geolocationdemo.html</a></li>\n<li><a href=\"http://html5demos.com/geo\" rel=\"nofollow\">http://html5demos.com/geo</a></li>\n</ul>\n\n<p>However, I have developed my own app (using a combination of the code already presented above) that successfully runs on:</p>\n\n<ul>\n<li>HTC Wildfire</li>\n<li>Android 2.1 update1 emulator</li>\n<li>have not had HTC Galaxy yet to test</li>\n</ul>\n\n<p>and the code I am using is:</p>\n\n<ol>\n<li><p>Javascript lib:\n<code><pre>\nfunction is_browser_gps_capable() {\n    var _locator_object;\n    try {\n        _locator_object = navigator.geolocation;\n    } catch (e) { return false; }\n    if (_locator_object)\n        return true;\n    else\n        return false;\n}</p>\n\n<p>function watchLocation(successCallback, errorCallback) {\n   successCallback = successCallback || function(){};\n   errorCallback = errorCallback || function(){};        </p>\n\n<pre><code>// Try HTML5-spec geolocation.\nvar geolocation = navigator.geolocation;\n\nif (geolocation) {\n    // We have a real geolocation service.\n    try {\n      function handleSuccess(position) {\n        successCallback(position.coords);\n      }\n\n      geolocation.watchPosition(handleSuccess, errorCallback, {\n        enableHighAccuracy: true,\n        maximumAge: 5000 // 5 sec.\n      });\n    } catch (err) {\n      errorCallback();\n    }\n  } else {\n    errorCallback();\n  }\n</code></pre>\n\n<p>}</pre></code></p></li>\n<li><p>actual code in my html file:\n<code><pre>\nif (is_browser_gps_capable()) {\n    $('geo_location').innerHTML = 'Locating device...';\n    watchLocation(function(coords) {\n          var latlng = new google.maps.LatLng(coords.latitude, coords.longitude);\n          var myOptions = {\n            zoom: 16,\n            center: latlng,\n            mapTypeId: google.maps.MapTypeId.ROADMAP\n          };\n          var map = new google.maps.Map(document.getElementById(\"map_canvas\"), myOptions);\n          var marker = new google.maps.Marker({\n              position: latlng, \n              map: map,\n          });<br>\n       $('geo_location').innerHTML = coords.latitude + ',' + coords.longitude;\n     }, function() {\n       $('geo_location').innerHTML = 'Not supported';\n    });\n} else {\n    $('geo_location').innerHTML = 'Not supported';\n}\n</pre></code></p></li>\n</ol>\n\n<p>Sorry this source code just does not want to format properly, message me and i'll send you the code directly if you wish so.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This wasn't working on my Android 2.4, the problem was solved by enabling Wireless Networks Location besides GPS (wasn't working with just GPS) </p>\n\n<p>Settings -> Location &amp; Privacy -> Enable Wireless Networks. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I was having this problem and I think it was because the power on the device was low. Charged it up and the problem went away.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am developing a website that relies on pulling the geolocation data of a mobile user. I am doing it the typical way via:</p>\n\n<pre><code>function initialize() {\n   if(window.google &amp;&amp; google.gears) {\n        var geo = google.gears.factory.create('beta.geolocation');\n        geo.getCurrentPosition(useLocation, errorOnLocate);\n   }\n   else if(navigator.geolocation) {\n       navigator.geolocation.getCurrentPosition(useLocation, errorOnLocate);\n   }\n   else {\n       alert(\"no geo found\");\n   }\n}\n\nfunction errorOnLocate(message)\n{\n    alert(message);\n    zoomTo(-34.397, 150.644);\n}\n</code></pre>\n\n<p>This always fails with [object PositionError] in to the errorOnLocate function, even if I switch the geolocation method order. </p>\n\n<p>This is on an HTC Hero with android 2.1 using whatever browser is built in. My gps is on and I have instructed the browser to allow websites to view my location. The \"location\" feature on the google map native application that comes on the phone picks up my location just fine</p>\n\n<p>Further more if I visit my site using FireFox 3.5 on my personal computer it will find my location correctly.(I believe it uses a combination of ip and ap data points). Either way, it uses the same javascript.</p>\n\n<p>EDIT: This is html/js in a browser, not a native app. Also the exact error message is 'The last location provider was disabled'</p>\n",
            "last_activity_date": 1413544763,
            "question_id": 3367994,
            "score": 8,
            "tags": [
                "javascript",
                "android",
                "geolocation",
                "htc-hero"
            ],
            "title": "javascript geolocation on android doesn&#39;t work"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Considering a function as a variable may be useful if you would like a function to be a property of an Object. (See: <a href=\"http://www.permadi.com/tutorial/jsFunc/index.html\" rel=\"nofollow\">http://www.permadi.com/tutorial/jsFunc/index.html</a>)</p>\n\n<p>I believe gol is a JavaScript object described in name/value pairs -- much like the JSON format. (See: <a href=\"http://www.hunlock.com/blogs/Mastering_JSON_(_JavaScript_Object_Notation_\" rel=\"nofollow\">http://www.hunlock.com/blogs/Mastering_JSON_(_JavaScript_Object_Notation_</a>))</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<ol>\n<li><p>In JavaScript, functions are <a href=\"http://en.wikipedia.org/wiki/First-class_object\" rel=\"nofollow\">first class objects</a>. You could store them in objects (variables) and pass them as arguments to functions. Every function is actually a <code>Function</code> object.</p></li>\n<li><p><code>gol</code> is an object, which is being initialized using the <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Core_Language_Features#Object_Literals\" rel=\"nofollow\">object literal</a> notation.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>sure: to explain the syntax:</p>\n\n<p>functions are first class objects in javascript, so you can put a function into a variable. thus the main part of this code is in fact a function definition stored in var gameOfLife, which could later be used by calling:</p>\n\n<pre><code>gameOfLife()\n</code></pre>\n\n<p>gol is an object (hash), and \"init\" is another example of the above syntax, except put directly into the \"init\" key in the \"gol\" hash. so <em>that</em> function in turn could be called by:</p>\n\n<pre><code>gol[\"init\"](w,h)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>According to <a href=\"http://www.permadi.com/tutorial/jsFunc/index.html\" rel=\"nofollow\">this page</a>, declaring <code>gameOfLife</code> in their way is no different from declaring it your way. The way they define <code>gol</code> makes it an object (or you can think of it as an associative array). A similar shortcut for arrays is to use square brackets instead of curly braces.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Putting a function in a variable allows you to come along later and replace it with another function, replacing the function transparently to the rest of your code.  This is the same thing you're doing when you specify \"onClick=\" on a form widget.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<hr>\n\n<blockquote>\n  <p>1) In the following code, what is the reasoning behind making gameOfLive a variable and not just a \"function gameOfLife()\"?</p>\n</blockquote>\n\n<hr>\n\n<p>Variables defined at the global level are members of the window object.  So by making it a variable, you make it possible to use the syntax <code>window.gameOfLife()</code>.  That's also why they can use the <code>if (!window.gameOfLife)</code> check at the beginning of your snippet.</p>\n\n<p>But that doesn't really explain why they chose to do it this way, and a function declaration would do the same thing.  <a href=\"http://stackoverflow.com/questions/3208236/what-is-this-javascript-technique-called-so-i-can-research-it/3208994#3208994\">Marcel Korpel's answer</a> better explains the \"why\" of the two options.</p>\n\n<hr>\n\n<blockquote>\n  <p>2) what is gol? It seems like an array, but I am unfamiliar with the syntax or what its called.</p>\n</blockquote>\n\n<hr>\n\n<p>The syntax is called compact object notation. What makes it interesting here is that the \"compact\" object is declared inside a function.  Declaring an object inside a function like this is useful because you can use it to build javascript objects with (effectively) private members.  </p>\n\n<p>The key is to remember that functions and objects in javascript <em>are the same thing</em>.  Thus, the full <code>gameOfLife()</code> function is really an object definition.  Furthermore, the <code>gol</code> object declared as a member of <code>gameOfLife</code> is most likely part of a common technique for defining private members.  The <code>gameOfLife()</code> function/object will return this <code>gol</code> object. All other items declared inside the <code>gameOfLife()</code> function/object effectively become private members of the returned <code>gol</code> instance, while everything declared inside of the <code>gol</code> object itself is public.  What they really want to do is eventually write code like this:</p>\n\n<pre><code>var game = new gameOfLife();\n</code></pre>\n\n<p>Now, when they do that, the game variable will hold a <code>gol</code> object. The methods in this object still have access to items declared in the full <code>gameOfLife()</code> function, but other code does not (at least, not as easily).  Thus, those items are effectively private.  Items in the <code>gol</code> object itself are still public.  Thus you have an object with both private and public members for proper encapsulation/information hiding, just like you'd build with other object-oriented languages.</p>\n\n<hr>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>var gameOfLife = function() { }\n</code></pre>\n\n<p>is a <em>function expression</em>, whereas</p>\n\n<pre><code>function gameOfLife() { }\n</code></pre>\n\n<p>is a <em>function declaration</em>.</p>\n\n<p>To quote Juriy \u2018kangax\u2019 Zaytsev about <a href=\"http://kangax.github.com/nfe/#expr-vs-decl\" rel=\"nofollow\">Function expressions vs. Function declarations</a>:</p>\n\n<blockquote>\n  <p>There\u2019s a subtle difference in\n  behavior of declarations and\n  expressions.</p>\n  \n  <p>First of all, function declarations\n  are parsed and evaluated before any\n  other expressions are. Even if\n  declaration is positioned last in a\n  source, it will be evaluated\n  <strong>foremost any other expressions</strong> contained in a scope.\n  [\u2026]</p>\n  \n  <p>Another\n  important trait of function\n  declarations is that declaring them\n  conditionally is non-standardized and\n  varies across different environments.\n  You should never rely on functions\n  being declared conditionally and use\n  function expressions instead.</p>\n</blockquote>\n\n<p>In this case, as Joel Coehoorn mentions in a comment, <code>gameOfLife</code> is defined conditionally, so it's needed to use a function expression.</p>\n\n<p>A general use case for these conditionally defined functions is to enhance JavaScript functionality in browsers that don't have native support for newer functions (not available in previous ECMAScript/JavaScript versions). You don't want to do this using function declarations, as those will overwrite the native functionality anyway, which is most likely not what you want (considering speed, etc.). A short <a href=\"http://code.google.com/p/oz-js/source/browse/trunk/oz.js#234\" rel=\"nofollow\">example</a> of this:</p>\n\n<pre><code>if (!Array.prototype.indexOf) { \n    Array.prototype.indexOf = function(item, from) {\n        /* implement Array.indexOf functionality,\n           but only if there's no native support */\n    }\n}\n</code></pre>\n\n<p>One major drawback of function expressions is that you in fact assign an anonymous function to a variable. This can make <a href=\"http://kangax.github.com/nfe/#names-in-debuggers\" rel=\"nofollow\">debugging harder</a>, as the function name is usually not known when script execution halts (e.g., on a breakpoint you set). Some JavaScript debuggers, like Firebug, try to give the name of the variable the function was assigned to, but as the debugger has to guess this by parsing the script contents on-the-fly, this can be too difficult (which results in a <code>(?)()</code> being shown, instead of a function name) or even be wrong.</p>\n\n<p>(for examples, read on on the page, though its contents are not entirely suitable for beginners)</p>\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>1) In the following code, what is the reasoning behind making <code>gameOfLive</code> a variable and not just <code>function gameOfLife()</code>?</p>\n\n<p>2) What is <code>gol</code>? It seems like an array, but I am unfamiliar with the syntax or what its called.</p>\n\n<p>I am studying <a href=\"http://sixfoottallrabbit.co.uk/gameoflife/\" rel=\"nofollow\">http://sixfoottallrabbit.co.uk/gameoflife/</a></p>\n\n<pre><code>if (!window.gameOfLife) var gameOfLife = function() {\n\n    var gol = {\n        body: null,\n        canvas: null,\n        context: null,\n        grids: [],\n        mouseDown: false,\n        interval: null,\n        control: null,\n        moving: -1,\n        clickToGive: -1,\n        table: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(''),\n        tableBack: null,\n\n        init: function(width, height) {\n            gol.body = document.getElementsByTagName('body')[0];\n            gol.canvas = document.createElement('canvas');\n            if (gol.canvas.getContext) {\n                gol.context = gol.canvas.getContext('2d');\n                document.getElementById('content').appendChild(gol.canvas);\n                gol.canvas.width = width;\n                gol.canvas.height = height;\n                gol.canvas.style.marginLeft = \"8px\";\n\n                gol.control = document.getElementById('gridcontrol');\n\n                gol.canvas.onmousedown = gol.onMouseDown;\n                gol.canvas.onmousemove = gol.onMouseMove;\n                gol.canvas.onmouseup = gol.onMouseUp;\n\n                gol.addGrid(48,32,100,44,8);\n\n                gol.refreshAll();\n                gol.refreshGridSelect(-1);\n                gol.getOptions(-1);\n\n                gol.genTableBack();\n            } else {\n                alert(\"Canvas not supported by your browser. Why don't you try Firefox or Chrome? For now, you can have a hug. *hug*\");\n            }\n        },\n    }\n}\n</code></pre>\n",
            "last_activity_date": 1306688426,
            "question_id": 3208236,
            "score": 8,
            "tags": [
                "javascript",
                "conways-game-of-life"
            ],
            "title": "What do you call this JavaScript syntax, so I can research it?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The event handler is considered a new execution context - the time limit is reset.</p>\n\n<p>If you need to do even more computation, take a look at WebWorkers.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The following article by <a href=\"http://www.nczonline.net/about/\">Nicholas C. Zakas</a> discusses how and when different browsers interrupt long running JavaScript code:</p>\n\n<ul>\n<li><a href=\"http://www.nczonline.net/blog/2009/01/05/what-determines-that-a-script-is-long-running/\">What determines that a script is long-running?</a></li>\n</ul>\n\n<p>Breaking long processing code into small chunks and launching them with timers is in fact one way to get around this problem. The following Stack Overflow post suggests a method to tackle this:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/2995805/show-javascript-execution-progress/2995896#2995896\">Show javascript execution progress</a></li>\n</ul>\n\n<p>On the other hand, <a href=\"http://www.whatwg.org/specs/web-workers/current-work/\">web workers</a> would be more suited for long running processing, since their execution happens in a separate process, and therefore does not block the UI thread:</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/En/Using_web_workers\">Mozilla Dev Center: Using web workers</a></li>\n<li><a href=\"http://ejohn.org/blog/web-workers/\">John Resig: Computing with JavaScript Web Workers</a></li>\n<li><a href=\"http://www.nczonline.net/blog/2009/08/18/experimenting-with-web-workers/\">Nicholas C. Zakas: Experimenting with web workers</a></li>\n</ul>\n\n<p>However web workers are not supported in Internet Explorer yet, and they would not have access to the DOM.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I too stuck in this kind of JS error.  I also get the solution, unfortunately only for IE, which tells to edit the registry (regedit command) and update the number of JS commands to allow.  Read more here <a href=\"http://support.microsoft.com/?kbid=175500\" rel=\"nofollow\">http://support.microsoft.com/?kbid=175500</a>.  </p>\n\n<p>But this doesn't seems to be a good solution to me bcoz if you are developing a web application you can not ask every user to use only IE and update his system registry.  </p>\n\n<p>As a workaround: If your data to process at client end is really large then you can put some manual delays between fix set of events processing.  For ex. If there are 100 events of any task you want to process then you can break them in to 10 sets of 100 and process each of them in say 100ms.  To know how to do that follow below link:</p>\n\n<p><a href=\"http://www.nczonline.net/blog/2009/01/13/speed-up-your-javascript-part-1/\" rel=\"nofollow\">http://www.nczonline.net/blog/2009/01/13/speed-up-your-javascript-part-1/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I know both ie and firefox have limits for javascript execution (<a href=\"http://support.microsoft.com/?kbid=175500\">Source 1</a>, <a href=\"http://webcache.googleusercontent.com/search?q=cache%3a_iKHhdfpN-MJ%3akb.mozillazine.org/Dom.max_script_run_time+dom.max_script_run_time&amp;hl=en&amp;gl=ca&amp;strip=\">Source 2</a>). Based on number of statements executed, I heard it was 5 million somewhere in IE and based on number of seconds in firefox: it's 10 seconds by default for my version.</p>\n\n<p>The thing I don't get is what cases will go over these limits:</p>\n\n<ol>\n<li><p>I'm sure a giant loop will go over the limit for execution time</p></li>\n<li><p>But will an event hander go over the limit, if itself it's execution time is under the limit but if it occurs multiple times?</p></li>\n</ol>\n\n<p>Example:</p>\n\n<p>Lets say I have a timer on my page, that executes some javascript every 20 seconds. The execution time for the timer handler is 1 second. Does firefox and ie treat each call of the timer function seperatly, so it never goes over the limit, or is it that firefox/ie adds up the time of each call so after the handler finishes, so after 200 seconds on my site (with the timer called 10 times) an error occurs even though the timer handler itself is only 1 second long?</p>\n",
            "last_activity_date": 1312288003,
            "question_id": 3030024,
            "score": 8,
            "tags": [
                "javascript",
                "timeout"
            ],
            "title": "Maximum execution time for JavaScript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You could try using <a href=\"https://developer.mozilla.org/en/DOM/window.postMessage\" rel=\"nofollow\">postMessage</a> for communication between frames.<br>\nThis will require the remote site to include some specific JavaScript to post a message to the parent document when it has finished loading.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Nicholas Zakas has an article about detecting if an iframe loaded: <a href=\"http://www.nczonline.net/blog/2009/09/15/iframes-onload-and-documentdomain/\" rel=\"nofollow\">http://www.nczonline.net/blog/2009/09/15/iframes-onload-and-documentdomain/</a>. Basically you have this code snippet:</p>\n\n<pre><code>var iframe = document.createElement(\"iframe\");\niframe.src = \"simpleinner.htm\";\n\nif (iframe.attachEvent){\n    iframe.attachEvent(\"onload\", function(){\n        alert(\"Local iframe is now loaded.\");\n    });\n} else {\n    iframe.onload = function(){\n        alert(\"Local iframe is now loaded.\");\n    };\n}\n\ndocument.body.appendChild(iframe);\n</code></pre>\n\n<p>I haven't tested it, but I'm pretty sure jQuery should be able to handle it by doing something like <code>$(\"#iframe\").load(function () { alert(\"Local iframe is now loaded.\"); });</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In any case you will need some sort of cooperation from the other domain's server, as you are trying to abuse the <a href=\"https://developer.mozilla.org/En/Same_origin_policy_for_JavaScript\" rel=\"nofollow\">Same Origin Policy (SOP)</a></p>\n\n<p>The first solution <code>document.domain=...</code> won't work if domains are different. It works only for subdomains and ports, as described in the link above.</p>\n\n<p>The only option that allows cross domain communication without polling is <a href=\"http://bob.pythonmac.org/archives/2005/12/05/remote-json-jsonp/\" rel=\"nofollow\">JSONP</a> or script injection with a JS function callback. This method is available in all Google APIs and works well.</p>\n\n<p>We've explained on <a href=\"http://beebole.com/en/blog/general/sandbox-your-cross-domain-jsonp-to-improve-mashup-security/\" rel=\"nofollow\">our blog</a> a way to sandbox those calls in an iframe to secure them. While <code>postMessage</code> is better now, the <a href=\"http://www.sitepen.com/blog/2008/07/22/windowname-transport/\" rel=\"nofollow\">window.name hack</a> has the advantage of working on old browsers.</p>\n\n<p>Ironically, SOP does not prevent you to POST anything to another domain. But you won't be able to read the response.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The easiest way (if you can get code added to the external sites) is to have them add an invisible iframe pointing to a special html file on your domain. This could then use <code>parent.parent.foo()</code> to notify the original window about the load event.</p>\n\n<p>Listening for the \"load\" event will only tell you if the window loaded, not what was loaded or if the document is ready for interaction.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>It's possible to do this with an onload handler on the iframe itself.  Unfortunately (surprise!) IE makes it difficult.  The only way I could get this to work was to compose HTML for the iframe, then append it to the document with <code>innerHTML</code>.  Then I have to poll to see when the iframe appears in the DOM, which varies depending on if the page is loading.  Here's a link to the source: <a href=\"http://svn.openlaszlo.org/openlaszlo/trunk/lps/includes/source/iframemanager.js\" rel=\"nofollow\">http://svn.openlaszlo.org/openlaszlo/trunk/lps/includes/source/iframemanager.js</a></p>\n\n<p>See <code>create()</code>, <code>__finishCreate()</code> and <code>gotload()</code>.  Feel free to take a copy of this and use it yourself!</p>\n\n<p>Regards,\nMax Carlson\nOpenLaszlo.org</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a rather interesting problem. I have a parent page that will create a modal jquery dialog with an iframe contained within the dialog. The iframe will be populated with content from a 3rd party domain. My issue is that I need to create some dialog level javascript that can detect if the content of the iframe loaded successfully and if it hasn't within a 5 second time frame, then to close the dialog and return the user to the parent page.</p>\n\n<p>I have researched numerous solutions and only two are of any true value.</p>\n\n<ol>\n<li>Get the remote site to include a javascript line of document.domain = 'our-domain.com'.</li>\n<li>Use a URL Fragment hack, but again I would need the request that the remote site\nable to modify the URL by appending '#some_value' to the end of the URL and my dialog window would have to poll the URL until it either sees it or times out.</li>\n</ol>\n\n<p>Are these honestly the only options I have to work with? Is there not a simpler way to just detect this?</p>\n\n<p>I have been researching if there's a way to poll for http response errors, but this still remains confined to the same restrictions.</p>\n\n<p>Any help would be immensely appreciated.</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1344793222,
            "question_id": 2754282,
            "score": 8,
            "tags": [
                "javascript",
                "iframe",
                "cross-domain"
            ],
            "title": "Cross domain iframe content load detection"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If the question is, \"should a script tag be allowed to remove itself?\" I would think so.  After all, a script tag can cause the browser to navigate to another page, in which case the entire page (including such script tag) is removed from memory.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The script is removing the DIV from the document DOM tree, and just so happens to remove the script declaration itself (after it has been loaded).  So I think it should be allowable as a feature.</p>\n\n<p>Also, the script tag will exist until it is loaded and the Javascript is interpreted and executed.  At execution, the DIV (and SCRIPT) tag will be removed from the DOM tree and exist only as objects that will be garbage collected.</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>I think the major point here is that a <code>SCRIPT</code> tag only <em>creates</em> the Javascript objects and places them in memory in the Javascript runtime engine (which is completely different  from the DOM).  Once the interpreter has finished reading the <code>SCRIPT</code> tag, it's no longer needed and can be discarded (removed from the DOM).  </p>\n\n<p>If the interpreter was instructed (by the JS code) to create references to <em>OTHER</em> objects in the DOM (e.g. as the handler for a button click), then the Javascript function will still be accessible.   Any functions called from that event handler will ALSO be accessible.  In this way, you can \"walk\" the call stack from the button->handler->other functions/variables.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>An example where self removal can be handy is, for example, some <a href=\"http://en.wikipedia.org/wiki/Comet_%28programming%29#Script_tag_long_polling\">long polling techniques</a> that would certainly make the DOM large after a few minutes.</p>\n\n<p>JavaScript frameworks add and remove script elements as part of their daily routine.</p>\n\n<p>E.g. <a href=\"http://api.jquery.com/jQuery.getScript/\"><code>getScript()</code></a> in <em>jQuery</em> places a script tag in the document head and removes it right after evaluation.</p>\n\n<p>They do this to keep the DOM clean - else the tags would just build up unnecessarily.\nThey are no longer needed after evaluation.</p>\n\n<p>The only drawback I see with this is debugging - for example, Firefox with Firebug seems to be lost as to the whereabouts of such scripts and cannot find the source lines.\n(As of this writing.)</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Actually you can do this:</p>\n\n<pre><code>var currentScript;\ncurrentScript = document.currentScript || document.scripts[document.scripts.length - 1];\ncurrentScript.parentNode.removeChild(currentScript);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>We've been having a discussion at our workplace on this with some for and some against the behavior. Wanted to hear views from you guys : </p>\n\n<pre><code>&lt;html&gt;\n&lt;body&gt;\n&lt;div&gt;\nTest!\n&lt;script&gt; document.body.removeChild(document.getElementsByTagName('div')[0]); &lt;/script&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Should the above script work and do what it's supposed to do? First, let's see what's happening here : </p>\n\n<p>I have a javascript that's inside the <code>&lt;div&gt;</code> element. This javascript will delete the child node within body which happens to hold the div inside which the script itself exists.</p>\n\n<p>Now, the above script works fine in Firefox, Opera and IE8. But IE6 and IE7 give an alert saying they cannot open the page.</p>\n\n<p>Let's not debate on how IE should have handled this (they've accepted it as a bug and hence fixed it in IE8). The point here is since the <strong>'SCRIPT'</strong> tag itself is a part of DOM, should it be allowed to do something like this? Should it even exist after such an operation?</p>\n\n<p><em><strong>Edit</em></strong>: </p>\n\n<p>Firefox, Opera, IE9 etc. do not remove the 'script' tag if I run the above code. But, document.getElementsByTagName('script').length returns 0! </p>\n\n<p>To understand what I mean, add <code>alert(document.getElementsByTagName('script').length);</code> before and after <code>document.body.removeChild(document.getElementsByTagName('div')[0]);</code> in the code above.</p>\n",
            "last_activity_date": 1351787650,
            "question_id": 2486144,
            "score": 8,
            "tags": [
                "javascript",
                "internet-explorer",
                "dom"
            ],
            "title": "Should a &quot;script&quot; tag be allowed to remove itself?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><a href=\"http://jonathanboutelle.com/2006/01/16/how-to-debug-javascript-in-internet-explorer/\" rel=\"nofollow\">Jonathan Boutelle has a good cheat sheet</a> on getting the Microsoft Script Editor to work for debugging JScript, so if you have Office installed, you might try that.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm looking for a tool that will enable me to debug JavaScript <strong>within</strong> IE6. What I mean is that I would like the debugger to run within the browser, <em>a l\u00e0</em> Firebug. </p>\n\n<p>So far I've tried:</p>\n\n<ul>\n<li><a href=\"http://www.debugbar.com/\" rel=\"nofollow\">DebugBar</a>;</li>\n<li><a href=\"http://www.my-debugbar.com/wiki/CompanionJS/HomePage\" rel=\"nofollow\">Companion JS</a>;</li>\n<li><a href=\"https://getfirebug.com/firebuglite\" rel=\"nofollow\">Firebug Lite.</a></li>\n</ul>\n\n<p>However, I can't figure out how to set breakpoints, step through the code, add watches, etc. using any of them. I've also tried using the MS Visual Web Debugger 2008 Express Edition, but it doesn't run within the browser and lacks features.</p>\n\n<p>If any of the tools above do provide the JS debugging features I'm seeking, any tips on how to use them effectively would be welcome. Alternatively, feel free to recommend other tools.</p>\n\n<p><strong>Update:</strong> In addition to suggesting alternative tools, if someone could confirm that none of the tools above do support setting breakpoints and stepping through JS code in IE6, that would be very helpful.</p>\n",
            "last_activity_date": 1365780617,
            "question_id": 782689,
            "score": 8,
            "tags": [
                "javascript",
                "debugging",
                "internet-explorer-6"
            ],
            "title": "Debug JavaScript within IE6"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>obj.scrollTop = obj.scrollHeight;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>x = 0;  //horizontal coord\ny = document.height; //vertical coord\nwindow.scroll(x,y);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<pre><code>for (i = 0; i &lt; 100; i++) {\n    document.write(\"\" + i + \"&lt;br /&gt;\");\n    window.scroll(0,document.body.offsetHeight);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Nice jQuery function gets this done</p>\n\n<pre><code>$('html,body').animate({ scrollTop: element.offset().top }, 'slow');\n</code></pre>\n\n<p>This worked for me, used it to AutoScroll to a dropdown menu to bring it into focus</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This Explains What set time interval is - <a href=\"http://www.w3schools.com/jsref/met_win_setinterval.asp\" rel=\"nofollow\">http://www.w3schools.com/jsref/met_win_setinterval.asp</a></p>\n\n<p>This Explains What set time out is - <a href=\"http://www.w3schools.com/jsref/met_win_settimeout.asp\" rel=\"nofollow\">http://www.w3schools.com/jsref/met_win_settimeout.asp</a></p>\n\n<p>This will scroll the page with javascript and will stop after 6 seconds</p>\n\n<pre><code>    &lt;script type = \"text/javascript\" &gt;\n\n    var x;\n    function autoscroll(){\n    self.scrollBy(0,x)\n    }\n\n    function playautoscroll(){\n    x = 1;\n    setInterval('autoscroll()',0.01);\n    stop();}\n\n    function onetozero(){\n    x=0;\n    }\n\n    function stop(){\n    setTimeout (\"onetozero()\",6000);\n    }\n    window.onload=playautoscroll\n\n    &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>To scroll the whole document use this:</p>\n\n<pre><code>window.scrollTo(0, document.body.scrollHeight);\n</code></pre>\n\n<p>if you have just a single scrollable div or something then the process is different:</p>\n\n<pre><code>var obj = $('id');\nobj.scrollTop = obj.scrollHeight;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Hopefully, this will be an easy answer for someone with Javascript time behind them...</p>\n\n<p>I have a log file that is being watched by a script that feeds new lines in the log out to any connected browsers.  A couple people have commented that what they want to see is more of a 'tail -f' behavior - the latest lines will always be at the bottom of the browser page until the viewer scrolls back up to see something.  Scrolling back to the bottom should return you to the auto-scrolling behavior.</p>\n\n<p>My google strikeout on this one is - hopefully - just a matter of not knowing anything at all about javascript and therefore, not knowing what keywords to search for.  I don't need a complete solution - just a 'close enough' that lets me jump in and get my hands dirty.</p>\n\n<p>EDIT:</p>\n\n<p>I've been attempting the scrollTop/scrollHeight idea, but am clearly missing something.  I've done next to nothing with Javascript, so again I'm probably asking very low-level questions:</p>\n\n<pre><code>&lt;html&gt;&lt;body&gt;\n&lt;script type=\"text/javascript\"&gt;\nfor (i=0; i&lt;100; i++)\n{\n    document.write(\"\" + i + \"&lt;br /&gt;\");\n    document.scrollTop = document.scrollHeight;\n}\n&lt;/script&gt;\n&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n\n<p>This was one of many permutations.  Obviously, I can't output the log line-by-line in javascript, but I'm just trying to see the correct behavior.  What's the missing link I need here?</p>\n\n<p>EDIT AGAIN:\nThis has turned into a far more interesting problem that I first expected.  The code suggestion using window.scroll does do the trick.  I started playing with restricting the scroll to only take place when the browser was at the bottom of the document body.  This is easy enough to do in theory, but in practice it hits a snag:</p>\n\n<p>Every time you get new text from the server, the size of the body increases and your current scroll position is no longer at the bottom of the document.  You can no longer tell the difference (using scrollHeight, clientHeight and scrollTop) whether the user has scrolled up or if the text has just shot beyond their view.</p>\n\n<p>I think that if this is going to work, I'm going to have to commit myself to having a JS event that fires when the user scrolls and turns off scrolling if they are above the bottom of the window, but turns it back on if they have scrolled down to the point where they are effectively at the bottom of the view.  I'm looking at the onScroll event and, given that the math on the variables I mentioned works out pretty well, I think I am on the right path here.  Thanks for your input, everyone!</p>\n",
            "last_activity_date": 1345813823,
            "question_id": 387592,
            "score": 8,
            "tags": [
                "javascript",
                "browser",
                "scroll"
            ],
            "title": "Javascript mechanism to autoscroll to the bottom of a growing page?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>In Internet&nbsp;Explorer, select <em>View</em> -> <em>Script Debugger</em> -> <em>Open</em>. That should do it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>TechRepublic has a good walk through - see <em><a href=\"http://blogs.techrepublic.com.com/programming-and-development/?p=672\" rel=\"nofollow\">Visual Studio 2008 simplifies JavaScript debugging</a></em>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Visual Studio 2008 ASP.NET projects has debugging enabled by default. You can set breakpoints within your .js file while the website/web app project is run in the ASP.NET debug server.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I prefer using <a href=\"http://en.wikipedia.org/wiki/Firebug_%28software%29\" rel=\"nofollow\">Firebug</a> for projects I can't use <a href=\"http://en.wikipedia.org/wiki/Microsoft_Visual_Studio#Visual_Studio_2008\" rel=\"nofollow\">Visual&nbsp;Studio&nbsp;2008</a> on.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>To debug in Visual&nbsp;Studio&nbsp;2005, make sure that \"disable script debugging\" is unchecked. Then load your webpage in Internet&nbsp;Explorer. From the debug menu inside of Visual&nbsp;Studio&nbsp;2005, select \"Attach to process\" and pick the instance of Internet&nbsp;Explorer that has your web page loaded.</p>\n\n<p>Alternatively, the <a href=\"http://en.wikipedia.org/wiki/Firebug_%28software%29\" rel=\"nofollow\">Firebug</a> team has been working on a \"lite\" version that you can include either as a script in your page or by launching it via a bookmarklet from your browser. It doesn't provide the full debugger that Firebug does, but it gives you a console and a command line from which you can inspect variables and log things to the console.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Usually you know where you are having problems, so you can set a breakpoint in your JavaScript code by placing the keyword \"debugger;\" on a line in your JavaScript code (obviously without the quotes) to set a breakpoint. </p>\n\n<p>When you get to it in Internet&nbsp;Explorer, it will ask you if you want to debug and prompt you to choose a debugger from a list, hopefully you will see Visual Studio in that list (both a new instance as well as your currently-running instance) - if you are using <a href=\"http://en.wikipedia.org/wiki/Mozilla_Firefox\" rel=\"nofollow\">Firefox</a> with <a href=\"http://en.wikipedia.org/wiki/Firebug_%28software%29\" rel=\"nofollow\">Firebug</a>, it will automatically stop execution on that line and you will be within the Firebug debugger, not Visual Studio.</p>\n\n<p>You will want to do the following to setup Internet&nbsp;Explorer for doing this - from within Internet&nbsp;Explorer, follow this menu path: <em>Tools</em> > <em>Internet Options</em> > <em>Advanced Tab</em> > <em>Uncheck</em> the \"Disable Script Debugging\" options.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Yeah using <strong>Microsoft Script Editor</strong> is a an option if you have Office XP or Office 2003 installed. In IE uncheck Disable Script debugging (Internet Explorer) and Disable Script debugging (Other).</p>\n\n<p>Restart IE. In View menu you will have a new item, \"script debugging\", choose open. You will be given a choice of VS2005 or New instance of Microsoft Script Editor, choose that and give it a go.</p>\n\n<p>Edit: try <a href=\"http://jonathanboutelle.com/2006/01/16/how-to-debug-javascript-in-internet-explorer/\" rel=\"nofollow\">this</a> link for a tutorial</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can set a breakpoint within JavaScript in Visual&nbsp;Studio&nbsp;2005, but in addition to debugging needing to be enabled in Internet&nbsp;Explorer, you can only set the breakpoint in a .js file. You cannot debug any inline JavaScript code. </p>\n\n<p>I also sometimes have problems when trying to debug my JavaScript code when using the attach process method to go into debugging. I will normally use the \"Start debugging\" green arrow. You will know that your code will stop at the breakpoint in your .js file if the breakpoint icon (Burgandy Circle by default) is filled in. If it's not filled in, you will never stop there.</p>\n\n<p>Finally, make sure you have debugging enabled in your <a href=\"http://en.wikipedia.org/wiki/ASP.NET\" rel=\"nofollow\">ASP.NET</a> configuration settings.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just make sure you have 'Disable Script Debugging' unchecked, and just hit F5 to start debugging in VS2005 or 2008.</p>\n\n<p>I would also note that if you have  your JavaScript inside the .aspx page you will have to find it via the script explore.  However if you have it in a separate .js file you can just put a break point on it like you would any .cs file.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<blockquote>\n  <p>I usually use Firebug to deal with debugging JS.</p>\n</blockquote>\n\n<p>Unless you need to debug in IE, there's no need to stop using Firebug.  It works with JavaScript in ASP.NET pages just as well as it does with any other type of page.</p>\n\n<p>Visual Studio's JavaScript debugging is alright, but really cannot compete with the full range of client-side information that Firebug aggregates.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Debugging client JavaScript code in Visual Studio 2005:</p>\n\n<p>Add the following code to the start of the JavaScript code:</p>\n\n<pre><code>debugger\n</code></pre>\n\n<p>See <em><a href=\"http://cubemsoft.blogspot.com/\" rel=\"nofollow\">Debugging client JavaScript in Visual Studio 2005</a></em>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I just saw this mentioned in Stack&nbsp;Overflow question <em><a href=\"http://stackoverflow.com/questions/7975/best-css-editor\">Best WYSIWYG CSS editor</a></em> and didn't know it could be done. I'm a Visual Studio newbie, so how do you do it?</p>\n\n<p>Is there a separate debugger for JavaScript? I know how to work the one for code-behind pages...  I usually use Firebug to deal with debugging JavaScript code.</p>\n\n<p>I'm using <a href=\"http://en.wikipedia.org/wiki/Microsoft_Visual_Studio#Visual_Studio_2005\" rel=\"nofollow\">Visual&nbsp;Studio&nbsp;2005</a>.</p>\n",
            "last_activity_date": 1354772455,
            "question_id": 8398,
            "score": 8,
            "tags": [
                "javascript",
                "visual-studio",
                "visual-studio-2005",
                "debugging"
            ],
            "title": "How do I debug JavaScript in Visual Studio 2005?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>As noted in the <a href=\"http://stackoverflow.com/a/17798579/1387428\">answer</a> in your linked post, Angular does not currently have built-in support for Websockets. So, you would need to directly use the Websockets API, or use an additional library like Socket.io. </p>\n\n<p>However, to answer your question of if you should use both a REST api and Websockets in a single Angular application, there is no reason you can't have both standard XmlHttpRequest requests for interacting with a REST api, using $http or another data layer library such as BreezeJS, for certain functionality included in various parts of the application and also use Wesockets for another part (e.g. real time chat). </p>\n\n<p>Angular is designed to assist with handling this type of scenario. A typical solution to would be to create one or more controllers to handle the application functionality and update your page and then creating separate Services or Factories that encapsulate the data management of each of your data end points (i.e. the REST api and the realtime chat server), which are then injected into the Controllers.</p>\n\n<p>There is a great deal of information available on using angular services/factories for managing data connections. If you're looking for a resource to help guide you on how to build an Angular application and where data services would fit in, I would recommend checking out John Papa's <a href=\"https://github.com/johnpapa/angularjs-styleguide\" rel=\"nofollow\">AngularJS Styleguide</a>, which includes a section on <a href=\"https://github.com/johnpapa/angularjs-styleguide#data-services\" rel=\"nofollow\">Data Services</a>.</p>\n\n<p>For more information about factories and services, you can check out <a href=\"http://stackoverflow.com/q/18939709/1387428\">When to use service instead of factory</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Javascript supports WebSocket, so you don't need an additional client side framework to use it. Please take a look at this <a href=\"https://github.com/vtortola/WebSocketListener/blob/master/samples/TerminalServer/TerminalServer.Web/content/scripts/app.js\" rel=\"nofollow\">$connection service</a> declared in this <a href=\"https://github.com/vtortola/WebSocketListener/wiki/WebSocketListener-Terminal-Server\" rel=\"nofollow\">WebSocket based AngularJS application</a>.</p>\n\n<p>Basically you can listen for messages:</p>\n\n<pre><code>   $connection.listen(function (msg) { return msg.type == \"CreatedTerminalEvent\"; }, \n        function (msg) {\n            addTerminal(msg);\n            $scope.$$phase || $scope.$apply();\n   });\n</code></pre>\n\n<p>Listen once (great for request/response):</p>\n\n<pre><code>    $connection.listenOnce(function (data) {\n        return data.correlationId &amp;&amp; data.correlationId == crrId;\n    }).then(function (data) {\n        $rootScope.addAlert({ msg: \"Console \" + data.terminalType + \" created\", type: \"success\" });\n    });\n</code></pre>\n\n<p>And send messages:</p>\n\n<pre><code>    $connection.send({\n        type: \"TerminalInputRequest\",\n        input: cmd,\n        terminalId: $scope.terminalId,\n        correlationId: $connection.nextCorrelationId()\n    });\n</code></pre>\n\n<p>Usually, since a WebSocket connection is bidirectional and <a href=\"http://caniuse.com/#feat=websockets\" rel=\"nofollow\">has a good support</a>, you can also use it for getting data from the server in request/response model. You can have the two models:</p>\n\n<ul>\n<li><p><strong>Publisher/Subscriber</strong>: Where the client declares its interest in some topics and set handlers for messages with that topic, and then the server publish (or push) messages whenever it sees fit.</p></li>\n<li><p><strong>Request/response</strong>: Where the client sends a message with a requestID (or correlationId), and listen for a single response for that requestId.</p></li>\n</ul>\n\n<p>Still, you can have both if you want, and use REST for getting data, and WebSocket for getting updates.</p>\n\n<p>In server side, you may need to use Socket.io or whatever server side framework in order to have a backend with WebSocket support.</p>\n",
                    "is_accepted": true,
                    "score": 4
                }
            ],
            "body": "<p>I just read this <a href=\"http://stackoverflow.com/questions/17798367/angularjs-and-websockets\">post</a>, and I do understand what the difference is. But still in my head I have the question. Can/Should I use it in the same App/Website? Say I want the AngularJs to fetch content and update my page, connecting to a REST api and all of that top stuff. But on top of that I also want a realtime chat, or to trigger events on other clients when there is an update or a message received. </p>\n\n<p>Does Angular support that? Or I need to use something like Socket.io to trigger those events? Does it make sense to use both? \nIf someone could help me or point me to some good reading about that if there is a purpose for using both of them together. </p>\n\n<p>Hope I'm clear enough. thank you for any help.  </p>\n",
            "last_activity_date": 1412974238,
            "question_id": 26299403,
            "score": 7,
            "tags": [
                "javascript",
                "angularjs",
                "websocket",
                "socket.io"
            ],
            "title": "AngularJS and WebSockets beyond"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Very odd. Able to recreate on Chrome 31.0.1650.57 on OSX Mavericks as well. Tested w/ ikea link, noticed Chrome reported <strong>16028.7\u2009days</strong>, 41ms latency for resource <code>/us/en/iows/tealium</code>.</p>\n\n<p>Charles proxy shows these headers:</p>\n\n<pre><code>HTTP/1.1 304 Not Modified\nContent-Type: application/json\nLast-Modified: Mon, 18 Nov 2013 18:34:51 GMT\nCache-Control: public, max-age=7200\nDate: Sat, 23 Nov 2013 00:32:26 GMT\nConnection: keep-alive\nVary: Accept-Encoding\n</code></pre>\n\n<p>The proxy app (Charles) reports no such odd time - it shows 40ms.</p>\n\n<p>The lavieenrose.com link caused Chrome to report time of <strong>16028.7\u2009days</strong> as well... that seems to be in common.\nCharles shows:</p>\n\n<pre><code>HTTP/1.1 200 OK\nDate: Sat, 23 Nov 2013 00:46:37 GMT\nServer: IBM_HTTP_Server\nLast-Modified: Tue, 19 Jun 2012 13:05:34 GMT\nETag: \"5c487f-1a15-4c2d2f01a0380\"\nAccept-Ranges: bytes\nVary: Accept-Encoding\nContent-Encoding: gzip\nContent-Length: 1738\nContent-Type: application/x-javascript\n</code></pre>\n\n<p>My conclusion is this isn't a server response or headers issue. I think this is a Chromium or  WebKit dev tools issue.</p>\n\n<p>Here's HEAD of the dev tools JS object that represents the http request which rendered by the Network tab:</p>\n\n<p><a href=\"https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/devtools/front_end/NetworkRequest.js\" rel=\"nofollow\">https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/devtools/front_end/NetworkRequest.js</a></p>\n\n<p>I'm wondering about the math in <code>set endTime()</code>:</p>\n\n<pre><code>set endTime(x)\n{\n    if (this.timing &amp;&amp; this.timing.requestTime) {\n        // Check against accurate responseReceivedTime.\n        this._endTime = Math.max(x, this.responseReceivedTime);\n    } else {\n        // Prefer endTime since it might be from the network stack.\n        this._endTime = x;\n        if (this._responseReceivedTime &gt; x)\n            this._responseReceivedTime = x;\n    }\n},\n</code></pre>\n\n<p>No answers just yet, but perhaps someone with more insight into what WebKit/Chromium DevTools may see this...</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This issue is not related to web framework or server. Issue affects Chrome browser version 31.0.1650.57.</p>\n\n<p>Now issue is fixed and will be delivered with next stable channel update. <a href=\"http://src.chromium.org/viewvc/blink/trunk/Source/core/fetch/ResourceLoader.cpp?r1=160817&amp;r2=160816&amp;pathrev=160817\">Fix diff</a> </p>\n\n<p>If you need fix urgently, you can update to dev channel version. <a href=\"http://www.chromium.org/getting-involved/dev-channel\">Instructions</a></p>\n\n<p>See <a href=\"https://code.google.com/p/chromium/issues/detail?id=309570\">this issue</a> for more details.</p>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p><img src=\"http://i.stack.imgur.com/C5pxi.png\" alt=\"16027.8\"></p>\n\n<p>The Chrome Network Tab in the Web Developer Tools shows that a bunch of my AJAX requests are taking 16027.8 days to complete. This is... not how long they are taking.</p>\n\n<p>I can replicate this on multiple machines, and in both development and production environments. This happens for all Dojo AJAX requests that are happening <code>onload</code>. It doesn't happen for other webapp or 3rd party requests (like signin AJAX or facebook).</p>\n\n<p><strong>What is going on?</strong> Is our server somehow screwing this up? Is it a bug in chrome dev tools (it almost certainly is, right?), and if so, is there anything that can be done about it? It makes the visual waterfall pretty useless, as you can imagine.</p>\n\n<p>Edit: Upon new information, this seems to be a common problem with IBM Websphere Commerce sites. What about the server or code could be causing this? Look here for examples: </p>\n\n<p><a href=\"http://www.ikea.com/us/en/catalog/categories/departments/kitchen/#\" rel=\"nofollow\">http://www.ikea.com/us/en/catalog/categories/departments/kitchen/#</a>\n<a href=\"http://www.lavieenrose.com/webapp/wcs/stores/servlet/LVER_10052_10001_-1\" rel=\"nofollow\">http://www.lavieenrose.com/webapp/wcs/stores/servlet/LVER_10052_10001_-1</a>\n<a href=\"http://www.ferragamo.com/shop/en/usa\" rel=\"nofollow\">http://www.ferragamo.com/shop/en/usa</a></p>\n\n<p>Edit 2: This issue is fixed in the newest version of Chrome.</p>\n",
            "last_activity_date": 1387303011,
            "question_id": 20104908,
            "score": 7,
            "tags": [
                "javascript",
                "ajax",
                "google-chrome",
                "websphere",
                "google-chrome-devtools"
            ],
            "title": "Chrome Network Web Developer Tool tab says Dojo AJAX requests are taking around 44 years to complete"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>So I think I figured this out: my original markup relied solely on the data-target element, but that is apparently not enough.  Safari (on iPhone) seems to also need the href attribute (which really should be there on an <code>&lt;a&gt;</code> anyway. So this works:</p>\n\n<pre><code>&lt;a data-toggle=\"collapse\" data-target=\"#collapse1\" href=\"#collapse1\"&gt;\n    &lt;i class=\"pull-right icon-chevron-right mobile-nav-icon\"&gt;&lt;/i&gt;\n&lt;/a&gt;\n</code></pre>\n\n<p>But this does not:</p>\n\n<pre><code>&lt;a data-toggle=\"collapse\" data-target=\"#collapse1\"&gt;\n    &lt;i class=\"pull-right icon-chevron-right mobile-nav-icon\"&gt;&lt;/i&gt;\n&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>looking at this, I had the same problem, however, when you add a href=\"#collapse1\", it jumps you to the top of the page. I fixed this by wrapping the element in a button and removed the css for buttons. So, your code would be:</p>\n\n<pre><code>&lt;button data-toggle=\"collapse\" data-target=\"#collapse1\"&gt;\n&lt;i class=\"pull-right icon-chevron-right mobile-nav-icon\"&gt;&lt;/i&gt;\n&lt;/button&gt;\n</code></pre>\n\n<p>Hope this helps. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>To make this work for any element type, such as a <code>div</code>, you can use the following jQuery method (tested ios 8):</p>\n\n<pre><code>&lt;div class=\"collapse-header\" data-target=\"#collapse_0\"&gt;\n    Click this element...\n&lt;/div&gt;\n&lt;div id=\"collapse_0\"&gt;\n    ...to collapse this element.\n&lt;/div&gt;\n\n&lt;script&gt;\n    $('.collapse-header').on('click', function () {\n        $($(this).data('target')).collapse('toggle');\n    });\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>These \"accordion submenus\" work in chrome and firefox, but not on an iphone.</p>\n\n<p>I have built a site which includes an \"offcanvas\" navigation menu on smaller screens.  The user clicks \"the hot dog button\", and the navigation menu slides onto the screen from the left... that works great so far.</p>\n\n<p>Some of the navigation elements contain submenus. For those, I used bootstrap's accordion markup.  The user clicks an arrow, and the \"submenu\" expands.</p>\n\n<p><img src=\"http://i.stack.imgur.com/FWitY.png\" alt=\"enter image description here\"></p>\n\n<p><strong>The Problem</strong></p>\n\n<p>I develop using chrome on linux.  This mechanism works <em>perfectly</em> in chrome, firefox, and every browser I can get my hands on, as well as on my personal android phone.  It also works on <a href=\"http://www.responsinator.com/\">responsinator.com</a>.  However, since I don't have Safari, nor an iPhone, I have not been able to test this functionality directly on an iphone.  I am working on getting an iPhone emulator...</p>\n\n<p>Until then, some other people have looked at this on an iPhone, and I am told the \"submenus\" do not work at all.  When the user clicks the arrow, nothing happens...</p>\n\n<p>Here is an excerpt of a \"menu item\" containing a \"sub-menu\": please note I am using the 'data-toggle' and 'data-target' attributes:</p>\n\n<pre><code>&lt;div class=\"panel panel-default\"&gt;\n    &lt;!-- The \"Trigger\" --&gt;\n    &lt;div class=\"panel-heading\"&gt;\n        &lt;h4 class=\"panel-title\"&gt;\n            &lt;a href=\"view.php?cms_nav_id=1\" name=\"about\"&gt;\n                About&lt;/a&gt;\n            &lt;a data-toggle=\"collapse\" data-target=\"#collapse1\"&gt;\n                &lt;i class=\"pull-right icon-chevron-right mobile-nav-icon\"&gt;&lt;/i&gt;\n            &lt;/a&gt;\n        &lt;/h4&gt;\n    &lt;/div&gt;\n\n    &lt;!-- Populated submenus: --&gt;\n    &lt;div id=\"collapse1\" class=\"panel-collapse collapse\"&gt;\n        &lt;div class=\"panel-body\"&gt;\n            &lt;a href=\"view.php?cms_nav_id=7\" name=\"ohioimprovementprocess\"&gt;Ohio Improvement Process&lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=\"panel-body\"&gt;\n            &lt;a href=\"view.php?cms_nav_id=8\" name=\"org/orgbeliefs\"&gt;Organization Beliefs&lt;/a&gt;  \n        &lt;/div&gt;\n    &lt;/div&gt;\n\n&lt;/div&gt;&lt;!-- /.panel --&gt;\n</code></pre>\n\n<p>I really don't know what to try next: Similar questions have ended with \"a css conflict\" or iphone problems regarding <code>.click()</code>, but I am not using that: I am using <code>data-toggle/data-target</code>.  I am considering abandoning the 'data-target' markup in favor of manually invoking an <code>on('click', ... )</code> event, but I would rather not...</p>\n\n<p>By the way, I call this at the bottom of my page if that's relevant:</p>\n\n<pre><code>&lt;script src=\"/assets/dist/js/bootstrap.min.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Which is 'bootstrap.js v3.0.0' .</p>\n\n<p>Does anyone have any other clues? Any recent direct experience with an issue like this?</p>\n\n<p>Thanks in advance for your help.</p>\n",
            "last_activity_date": 1424089377,
            "question_id": 19866172,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "ios",
                "css",
                "twitter-bootstrap"
            ],
            "title": "bootstrap 3 accordion collapse does not work on iphone"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>First up: that IE option will not work on Android as PhoneGap uses Webkit (think: Safari and/or Chrome).</p>\n\n<p>Anyway...</p>\n\n<p>That file you're looking for (in the <em>\"/res/xml/\"</em> subdirectory of your project's directory) is called</p>\n\n<pre><code>config.xml\n</code></pre>\n\n<p>In there, you have to tell phonegap to load the plugin at compile time like this...</p>\n\n<pre><code>&lt;gap:plugin name=\"whatever\" value=\"com.example.whatever\" /&gt;\n</code></pre>\n\n<p>If you don't do that, phonegap will simply not include the plugin at compile time, resulting in the fact that your plugin won't work (since it doesn't exist in the compiled <em>apk</em>).</p>\n\n<p>I haven't used the ClipboardManagerPlugin yet, but according to the docs it should go somewhat like this:</p>\n\n<pre><code>&lt;gap:plugin name=\"clipboardmanager\" value=\"com.saatcioglu.phonegap.clipboardmanager.ClipboardManagerPlugin.ClipboardManagerPlugin\" /&gt;\n</code></pre>\n\n<p>Please note that you should check the PhoneGap version you're using and if the plugin is compatible with it. Just in case you're not aware of it: not all plugins have been updated to work with PhoneGap 3.x yet. To quote the readme <a href=\"https://build.phonegap.com/docs/plugins-using\">at Github (https://build.phonegap.com/docs/plugins-using)</a>: <em>\"Unless <strong>explicitly</strong> stated, most of these plugins will <strong>not</strong> work with Cordova/PhoneGap 3.x.x out of the box. They will need updating before they can be used via the <code>plugin add</code> interface.\"</em></p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p><a href=\"http://stackoverflow.com/a/18392213/2432317\">e-sushi's instructions</a> didn\u2019t quite work for me. </p>\n\n<p>To get the plugin running I used the following command: </p>\n\n<pre><code>phonegap local plugin add https://github.com/VersoSolutions/CordovaClipboard\n</code></pre>\n\n<p>and then adding the following command in JS: </p>\n\n<pre><code>cordova.plugins.clipboard.copy(text);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>i am developing an app using javascript/mobile-jquery interface for the phonegap platform.  Now I have seen so many examples on the web trying to copy to clipboard and unfortunatelly none of them worked for me.  I am not interested in this being function-able in the browser, as long as it works once it is converted by phone gap I am happy.</p>\n\n<p>I have tried using zeroclipboard, it did not workout, I have tried using clipboard manager could not get it to work.  I have tried many other examples that I found here on stackoverflow including google search and they still did not work, here is an example of things i've tried:</p>\n\n<pre><code>window.plugins.clipboardManager.copy(\n                \"the text to copy\",\n                function(r){alert(\"copy is successful\")},\n                function(e){alert(e)}\n            );\n</code></pre>\n\n<p>I have included the js file:</p>\n\n<pre><code>    &lt;script src=\"src/clipboardmanager.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>and I also have the java file in the folder structure as this: <code>src\\com\\saatcioglu\\phonegap\\clipboardmanager\\ClipboardManagerPlugin.java</code></p>\n\n<p>From what I've read I need to include an xml file for this to work, but for the life of me I could not find that XML file anywhere.</p>\n\n<p>Any help is most appreciated. </p>\n\n<p>Note: My app will require no permissions such as camera, gps, etc...</p>\n\n<p>EDIT:</p>\n\n<p>Another example I tried was: </p>\n\n<pre><code>function select_all(obj) {\n    var text_val=eval(obj);\n    text_val.focus();\n    text_val.select();\n    if (!document.all) return; // IE only\n    r = text_val.createTextRange();\n    r.execCommand('copy');\n}\n</code></pre>\n\n<p>This worked in IE but not in Phonegap.</p>\n\n<p>EDIT:</p>\n\n<p>Here is the html/javascript I'm using:</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Test&lt;/title&gt;\n            &lt;link rel=\"stylesheet\" href=\"jquery/jquery.mobile-1.3.1.min.css\" /&gt;\n        &lt;script src=\"jquery/jquery-1.9.1.min.js\"&gt;&lt;/script&gt;\n        &lt;script src=\"jquery/jquery.mobile-1.3.1.min.js\"&gt;&lt;/script&gt;\n            &lt;script src=\"clipboardmanager.js\"&gt;&lt;/script&gt;\n        &lt;script&gt;\n                var cbm = new window.plugins.clipboardManager;\n                function main(textMessage)\n                {\n            //Some Code before this (calculations)\n                    cbm.copy(\n                        \"Success!!!\",\n                        function(r){alert(\"copy is successful\")},\n                        function(e){alert(e)}\n                    );\n                }\n            &lt;/script&gt;\n        &lt;/head&gt;\n        &lt;body&gt;\n        &lt;div data-role=\"page\" id=\"main\" name=\"main\"&gt;\n            &lt;div data-role=\"header\"&gt;\n                &lt;h1&gt;Test&lt;/h1&gt;\n                &lt;/div&gt;&lt;!-- /header --&gt;\n\n            &lt;div data-role=\"content\"&gt;\n                &lt;form action=\"javascript:main(encryptedMessage.value);\"&gt;\n                    Message to be Copied:\n                    &lt;textarea id=\"encryptedMessage\" name=\"encryptedName\" rows=\"6\" style=\"width:99%;\"&gt;&lt;/textarea&gt;\n                    &lt;input type=\"submit\" value=\"Encrypt\" /&gt;\n                &lt;/form&gt;\n                &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>In my root folder I have:</p>\n\n<ol>\n<li>a folder called jquery which has jquery scripts in there.</li>\n<li>a folder called res which has a folder called xml which has a file\ncalled plugin.xml</li>\n<li>a folder called src which has a folder called com, which has a\nfolder called saatcioglu, which has a folder called phonegap, which\nhas a folder called clipboardmanager, which has a file called\nClipboardManagerPlugin.java.</li>\n<li>test.html</li>\n<li>clipboardmanager.js</li>\n</ol>\n\n<p>Contents of plugin.xml</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;plugins&gt;\n    &lt;gap:plugin name=\"clipboardmanager\" value=\"com.saatcioglu.phonegap.clipboardmanager.ClipboardManagerPlugin.ClipboardManagerPlugin\" /&gt;\n&lt;/plugins&gt;\n</code></pre>\n\n<p>What have I done wrong?</p>\n",
            "last_activity_date": 1393013734,
            "question_id": 18361345,
            "score": 7,
            "tags": [
                "javascript",
                "cordova"
            ],
            "title": "Copy to Clipboard with javascript for phonegap"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Inject a module into both that shares these properties.</p>\n\n<p>Use the provider class to overwrite properties or instantiate them from any scope:</p>\n\n<pre><code>angular.module(\"stuff.things\", []).provider(\"$things\", function(){\n    var globalOptions = {};\n    this.options = function(value){\n        globalOptions = value;\n    };\n    this.$get = [, function () {\n        function Things(opts) { \n            var self = this, options = this.options = angular.extend({}, globalOptions, opts);\n        }\n        Things.prototype.returnOptions = function(){\n            return this.options;\n        };\n        return {\n            things: function(opts){\n                return new Things(opts);\n            }\n        };\n    }];\n});\n</code></pre>\n\n<p>The secret sauce: <code>$things.things().returnOptions()</code></p>\n\n<pre><code>angular.module('stuff.thing1', ['stuff.things']).provider(\"$thing1\", function(){\n    var globalOptions = {};\n    this.options = function(value){\n        globalOptions = value;\n    };\n\n    this.$get = ['$things', function ($things) {\n        function Thing1(opts) {\n            var self = this, options = this.options = angular.extend({}, $things.things().returnOptions(), globalOptions, opts);\n        ...\n        }\n        return {\n            thing1: function(opts){\n                return new Thing1(opts);\n            }\n        };\n    }];\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 3
                }
            ],
            "body": "<p>Let's say I have a <code>stuff</code> module that I want to inject into <code>myApp</code> config:</p>\n\n<pre><code>angular.module('myApp', ['stuff']).\n  config([function() {\n\n  }]);\n</code></pre>\n\n<p>There are two submodules:</p>\n\n<pre><code>angular.module(\"stuff\", [\"stuff.thing1\",\"stuff.thing2\"]);\n</code></pre>\n\n<p>Here's the first:</p>\n\n<pre><code>angular.module('stuff.thing1', []).provider(\"$thing1\", function(){\n    var globalOptions = {};\n    this.options = function(value){\n        globalOptions = value;\n    };\n    this.$get = ['$http',function ($http) {\n        function Thing1(opts) { \n            var self = this, options = this.options = angular.extend({}, globalOptions, opts);  \n        }\n        Thing1.prototype.getOptions = function(){\n            console.log(this.options.apiKey);\n        };\n        return {\n            thing1: function(opts){\n                return new Thing1(opts);\n            }\n        };\n    }];\n});\n</code></pre>\n\n<p>And the second is identical for ease of example:</p>\n\n<pre><code>angular.module('stuff.thing2', []).provider(\"$thing2\", function(){\n    var globalOptions = {};\n    this.options = function(value){\n        globalOptions = value;\n    };\n    this.$get = ['$http',function ($http) {\n        function Thing2(opts) { \n            var self = this, options = this.options = angular.extend({}, globalOptions, opts);  \n        }\n        Thing2.prototype.getOptions = function(){\n            console.log(this.options.apiKey);\n        };\n        return {\n            thing2: function(opts){\n                return new Thing2(opts);\n            }\n        };\n    }];\n});\n</code></pre>\n\n<p>What you will notice is that you can access both of them as providers to configure options:</p>\n\n<pre><code>angular.module('myApp', ['stuff']).\n  config(['$thing1Provider', '$thing2Provider', function($thing1Provider, $thing2Provider) {\n    $thing1Provider.options({apiKey:'01234569abcdef'});\n    $thing2Provider.options({apiKey:'01234569abcdef'});\n  }]);\n</code></pre>\n\n<p>If we were in a controller, you could overwrite per scope like:</p>\n\n<pre><code>controller('AppController', ['$scope','$thing1', function($scope, $thing1) {    \n  var thing1 = $thing1.thing1({apiKey:'3kcd894g6nslx83n11246'});  \n}]).\n</code></pre>\n\n<p>But what if they are always sharing the same property? How do I share something between providers?</p>\n\n<pre><code>angular.module('myApp', ['stuff']).config(['$stuff' function($stuff) {\n  //No idea what I'm doing here, just trying to paint a picture.\n  $stuff.options({apiKey:'01234569abcdef'});\n}]);\n</code></pre>\n\n<p>Can I inject <code>$stuff</code> and config a shared property for both <code>$thing1</code> and <code>$thing2</code>?</p>\n\n<p>How do I access both <code>$thing1</code> and <code>$thing2</code> as an extension of a single module?</p>\n\n<pre><code>controller('AppController', ['$scope','$stuff', function($scope, $stuff) {\n  //Again - no idea what I'm doing here, just trying to paint a picture.\n\n  //$thing1 would now be overwrite $stuff.options config above.\n  var thing1 = $stuff.$thing1.thing1({apiKey:'lkjn1324123l4kjn1dddd'});\n\n  //No need to overwrite $stuff.options, will use whatever was configured above.\n  var thing2 = $stuff.$thing2.thing2();  \n\n  //Could I even change the default again for both if I wanted too?\n  $stuff.options({apiKey:'uih2iu582b3idt31d2'});\n}]).\n</code></pre>\n",
            "last_activity_date": 1371829409,
            "question_id": 17203789,
            "score": 7,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "sharing between modules with AngularJS?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><code>disabled</code> elements will not allow the user to interact with them.</p>\n\n<p>So: no, you can't put an <code>onclick</code> on a <code>disabled</code> button and expect it to fire.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can't without a workaround, see: <a href=\"http://stackoverflow.com/questions/7833854/jquery-detect-click-on-disabled-submit-button\">jQuery detect click on disabled submit button</a></p>\n\n<p>The browsers disable events on disabled elements.</p>\n\n<p>Edited to add context from link:</p>\n\n<p>The asker found this thread with an explanation of why the events aren't registering: <a href=\"http://www.webdeveloper.com/forum/showthread.php?t=186057\" rel=\"nofollow\">http://www.webdeveloper.com/forum/showthread.php?t=186057</a></p>\n\n<blockquote>\n  <p>Firefox, and perhaps other browsers, disable DOM events on form fields\n  that are disabled. Any event that starts at the disabled form field is\n  completely canceled and does not propagate up the DOM tree. Correct me\n  if I'm wrong, but if you click on the disabled button, the source of\n  the event is the disabled button and the click event is completely\n  wiped out. The browser literally doesn't know the button got clicked,\n  nor does it pass the click event on. It's as if you are clicking on a\n  black hole on the web page.</p>\n</blockquote>\n\n<p>The workaround would be style the button to \"look\" disabled, while not actually being so.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You should used disabled=\"disabled\" and not just disabled.</p>\n\n<pre><code>$('input:disabled').val('disabled');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>There is no way to capture a click on disabled elements. Your best bet is to react to a specific <code>class</code> on the element.</p>\n\n<p>HTML Markup:</p>\n\n<pre><code>&lt;input type=\"button\" class=\"disabled\" value=\"click\" /&gt;\n</code></pre>\n\n<p>JavaScript code:</p>\n\n<pre><code>$('input').click(function (event) {\n    if ($(this).hasClass('disabled')) {\n        alert('CLICKED, BUT DISABLED!!');\n    } else {\n        alert('Not disabled. =)');\n    }\n});\n</code></pre>\n\n<p>You could then use CSS styling to simulate a disabled look:</p>\n\n<pre><code>.disabled\n{\n    background-color: #DDD;\n    color: #999;\n}\n</code></pre>\n\n<p>Here's a <a href=\"http://jsfiddle.net/puYxX/1/\">jsFiddle</a> demonstrating its use.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Making the field <code>readonly</code> can help, because the click event will be fired. Though be aware of the <a href=\"http://stackoverflow.com/questions/7730695/whats-the-difference-between-disabled-disabled-and-readonly-readonly-for-te\">differences in behaviour</a>.</p>\n\n<pre><code>&lt;input type=\"button\" value=\"click\" readonly=\"readonly\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Is it possible to click on a disabled button and provide some feedback to the user?</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;input type=\"button\" value=\"click\" disabled&gt;\n</code></pre>\n\n<p>and JavaScript:</p>\n\n<pre><code>$('input').mousedown(function(event) {\n    alert('CLICLED');\n});\n</code></pre>\n\n<p>The above code is not working for me; neither is this:</p>\n\n<pre><code>$('input').live('click', function () {\n    alert('CLICLED');\n});\n</code></pre>\n",
            "last_activity_date": 1384250096,
            "question_id": 16109228,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "disabled-control"
            ],
            "title": "Clicking a disabled input or button"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You should check sipml5, <a href=\"http://code.google.com/p/sipml5/\" rel=\"nofollow\">http://code.google.com/p/sipml5/</a>\nget the code and look into the folder:\nsipml5/src/tinySIP/src/transports</p>\n",
                    "is_accepted": true,
                    "score": 1
                },
                {
                    "body": "<p>You can't send a UDP packet directly with WebRTC.  That would violate the basic security constraints required by the browser.</p>\n\n<p>You can send <a href=\"http://en.wikipedia.org/wiki/Secure_Real-time_Transport_Protocol\">SRTP</a> to an <a href=\"http://en.wikipedia.org/wiki/Interactive_Connectivity_Establishment\">ICE-enabled</a> host.  That is probably not what you are looking for.</p>\n\n<p>If a browser permitted sending arbitrary UDP packets, then malicious applications could send packets to any host.</p>\n\n<p>This might not sound so bad, after all, hosts on the Internet need to be able to deal with that right?  The problem is that some browsers are in protected environments where access to the network is restricted.  Within those networks, some hosts are far less protected than a host on the public Internet might be.  This would be OK, since access to the network is controlled.  </p>\n\n<p>If it were possible for a browser to send arbitrary packets, a user on a browser in that environment could be convinced to send specifically crafted packets to one of these poorly protected hosts.  Likely, that would result in the network operator banning the browser, which is something browser-makers want very much to avoid.</p>\n\n<p>WebRTC only sends certain types of UDP packet under specific conditions.  If the host that you are interested in talking to understands <a href=\"http://en.wikipedia.org/wiki/Interactive_Connectivity_Establishment\">ICE</a> and is able to consume <a href=\"http://en.wikipedia.org/wiki/Real-time_Transport_Protocol\">RTP</a> with <a href=\"http://en.wikipedia.org/wiki/Secure_Real-time_Transport_Protocol\">SRTP</a> or <a href=\"http://tools.ietf.org/html/draft-tuexen-tsvwg-sctp-dtls-encaps\">SCTP over DTLS</a> (unlikely methinks).  Then perhaps you could force the browser to send something.</p>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>How do you send a UDP Packet using Web RTC?</p>\n",
            "last_activity_date": 1353431765,
            "question_id": 13216785,
            "score": 7,
            "tags": [
                "javascript",
                "udp",
                "webrtc"
            ],
            "title": "How to send a UDP Packet with Web RTC - Javascript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>In modern browsers, you can use <a href=\"https://developer.mozilla.org/en-US/docs/DOM/window.postMessage\" rel=\"nofollow\"><code>window.postMessage()</code></a> to communicate between cooperating frames on different domains.  You can't call a function directly, but you can pass data or messages between the two.  See the <a href=\"https://developer.mozilla.org/en-US/docs/DOM/window.postMessage\" rel=\"nofollow\">description on MDN</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can communicate between frames via the <a href=\"https://developer.mozilla.org/en-US/docs/DOM/window.postMessage\">message posting API</a>.</p>\n\n<p>For example, in your child frame you might call:</p>\n\n<pre><code>parent.postMessage(\"child frame\", \"*\");\n</code></pre>\n\n<p>And in the parent frame, register a message handler:</p>\n\n<pre><code>window.addEventListener(\"message\", function(event) {\n    console.log(\"Hello from \" + event.data);\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>There are a number of options here: <a href=\"http://softwareas.com/cross-domain-communication-with-iframes\" rel=\"nofollow\">http://softwareas.com/cross-domain-communication-with-iframes</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This problem can be easily solved by using an <strong>.htaccess</strong> rewrite. </p>\n\n<p>Demo:</p>\n\n<p>A. Create a directory named \"iframeContent/\" on SERVER 1.</p>\n\n<p>B. Place in that directory a file named index.php containing:</p>\n\n<blockquote>\n<pre><code>&lt;html&gt; \n&lt;head&gt;&lt;/head&gt; \n&lt;body&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n\n    parent.check();\n\n&lt;/script&gt;\n\n&lt;/body&gt; \n&lt;/html&gt;\n</code></pre>\n</blockquote>\n\n<p>This is the content of the iFrame. It will call a function in a parent.</p>\n\n<p>C. Create a directory named \"iframeTesting_without-htaccess/\" on SERVER 2.</p>\n\n<p>D. Place in that directory a file named index.php containing: </p>\n\n<blockquote>\n<pre><code>&lt;html&gt; \n&lt;head&gt;&lt;/head&gt; \n&lt;body&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n\n    function check() { \n\n       alert(\"hello\");\n\n    }\n\n&lt;/script&gt;\n\n&lt;iframe id=\"sidebnrId\" name=\"sidebnr\"\nsrc=\"PATH-ON-SERVER-1/iframeContent/\" frameborder=\"0\"\nheight=\"500px\" width=\"600px\" scrolling=\"no\"&gt;&lt;/iframe&gt;\n\n&lt;/script&gt;\n\n&lt;/body&gt; \n&lt;/html&gt;\n</code></pre>\n</blockquote>\n\n<p>This is simply the content of the parent windows. Just note that the iFrame content is located on another server (because on SERVER 1).</p>\n\n<p>E. Access \"PATH-ON-SERVER-2/iframeTesting_without-htaccess/\" with a web-browser -> nothing happens: the iframe does not have access to the function of its parent.</p>\n\n<p><strong>HERE IS HOW YOU CAN SOLVE THE PROBLEM</strong></p>\n\n<p>F. Create another directory named \"iframeTesting_with-htaccess/\" on SERVER 2.</p>\n\n<p>G. Place in that directory a file named index.php containing: </p>\n\n<blockquote>\n<pre><code>&lt;html&gt; \n&lt;head&gt;&lt;/head&gt; \n&lt;body&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n\n    function check() { \n\n       alert(\"hello\");\n\n    }\n\n&lt;/script&gt;\n\n&lt;iframe id=\"sidebnrId\" name=\"sidebnr\"\nsrc=\"content-iframe/\" frameborder=\"0\"\nheight=\"500px\" width=\"600px\" scrolling=\"no\"&gt;&lt;/iframe&gt;\n\n&lt;/script&gt;\n\n&lt;/body&gt; \n&lt;/html&gt;\n</code></pre>\n</blockquote>\n\n<p>This time the iFrame does not point anymore directly to the content on SERVER 1 but to an intermediate fictive directory \"content-iframe/\" located on the same server (SERVER 2).</p>\n\n<p>H. Place in that directory a .htaccess file containing: </p>\n\n<blockquote>\n<pre><code>Options +FollowSymLinks\nRewriteEngine On\n\nRewriteBase /\n\nRewriteRule ^content-iframe/$ PATH-ON-SERVER-1/iframeContent/ [R,NC,P]\n</code></pre>\n</blockquote>\n\n<p>The role of that file is to redirect any access to the fictive directory to the content on the SERVER 1.</p>\n\n<p>I. Try again, access \"PATH-ON-SERVER-2/iframeTesting_with-htaccess/\" with a web-browser. This time it will work. I hope it helped :-)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have made a page which gets loaded in an IFrame and it needs to call a function on the parent page after it finishes loading.</p>\n\n<p>It works locally in development (on the same domain) but in the Real World it is hosted on a completely different domain, so obviously I am running into Cross domain problems, ie:</p>\n\n<p>Unsafe JavaScript attempt to access frame with URL http://[...]site1.com from frame with URL http://[...]site2.com/iframe. Domains, protocols and ports must match.</p>\n\n<p>I control both the servers, so is it possible for me to put something on one or both of the servers that says they're allowed to talk to each other? </p>\n\n<p>I have looked at setting \"document.domain\" in both the Iframe page and the parent page.</p>\n\n<p>I have experimented with setting the Access Control Header:</p>\n\n<p>header('Access-Control-Allow-Origin: *');</p>\n\n<p>But neither of those work.</p>\n\n<p>Is there any way of allowing an Iframe calling a function in the Parent window on a completely different domain when I control both servers?</p>\n",
            "last_activity_date": 1381572758,
            "question_id": 13042615,
            "score": 7,
            "tags": [
                "javascript",
                "iframe",
                "cross-domain"
            ],
            "title": "Allowing a child Iframe to call a function on its parent window from a different domain"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Your problem is with this line of code:</p>\n\n<pre><code>$('#bank').replace('&lt;div id=\"fancy\"&gt;&lt;/div&gt;').fadeIn('slow');\n</code></pre>\n\n<p>There is no .replace() function in jQuery.  Remove that and it works:</p>\n\n<pre><code>$('#bank').fadeIn('slow');\n</code></pre>\n\n<p>See it here:  <a href=\"http://jsfiddle.net/3XwZv/57/\">http://jsfiddle.net/3XwZv/57/</a></p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>Use the following jQuery code:</p>\n\n<pre><code>$('#btn').click(function(e){    \n    $('#fancy').fadeOut('slow', function(){\n        $('#bank').fadeIn('slow');\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You should use html () instead of replace(). Also, assuming you want to replace your bank div with the following html:</p>\n\n<pre><code>&lt;div id=\"fancy\"&gt;&lt;/div&gt; \n</code></pre>\n\n<p>Try this</p>\n\n<pre><code>$('#btn').click(function(e){    \n    $('#fancy').fadeOut('slow', function(){\n        $('#bank').html('&lt;div id=\"fancy\"&gt;&lt;/div&gt;').fadeIn('slow');\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>THIS CODE UNDER HERE WORKS, you can read the answers under here - i edit this for future reference.</p>\n\n<p><strong>HTML</strong>:</p>\n\n<pre><code>&lt;div&gt;&lt;a href=\"#\" id=\"btn\"&gt;Show bank div and hide fancy div&lt;/a&gt;&lt;/div&gt;\n&lt;div id=\"btn-bk\"&gt;&lt;a href=\"#\"&gt;back&lt;/a&gt;&lt;/div&gt;\n&lt;div id=\"bank\"&gt;Bank Div&lt;/div&gt;\n&lt;div id=\"fancy\"&gt;Fancy Div&lt;/div&gt;\n</code></pre>\n\n<p><strong>CSS</strong>:</p>\n\n<pre><code>#bank {display:none;}\n#btn-bk {display:none;}\n</code></pre>\n\n<p><strong>Javascript</strong>:</p>\n\n<pre><code>    $('#btn').click(function(e){    \n    $('#fancy, #btn').fadeOut('slow', function(){\n        $('#bank, #btn-bk').fadeIn('slow');\n    });\n});\n\n    $('#btn-bk').click(function(e){    \n        $('#bank, #btn-bk').fadeOut('slow', function(){\n            $('#fancy, #btn').fadeIn('slow');\n        });\n    });\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/3XwZv/71/\">Live DEMO that works</a></p>\n",
            "last_activity_date": 1398168953,
            "question_id": 12584481,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "hide",
                "fade"
            ],
            "title": "Simple fade in fade out div with jquery on click"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I don't have an iPad so couldn't test a solution, but I did come across a similar question, which was resolved. I don't know if it will be of any help to you, but here is the link: <a href=\"http://stackoverflow.com/questions/10714868/how-to-disable-the-default-behavior-of-an-anchor-in-jquery-mobile-ios\">How to disable the default behavior of an Anchor in jQuery Mobile (iOS)</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Thanks to JDandChips for <a href=\"http://stackoverflow.com/a/12424987/880619\">pointing</a> me to the solution. It works perfectly in combination with the longclick plugin. For documentation sake I'll post my own answer to show what I did.</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"\n        src=\"https://raw.github.com/pisi/Longclick/master/jquery.longclick-min.js\"&gt;&lt;/script&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.google.com/\"&gt;Longclick me!&lt;/a&gt;&lt;/p&gt;\n</code></pre>\n\n<p>The Javascript already was OK:</p>\n\n<pre><code>function longClickHandler(e){\n  e.preventDefault();\n  $(\"body\").append(\"&lt;p&gt;You longclicked. Nice!&lt;/p&gt;\");\n}\n\n$(\"p a\").longclick(250, longClickHandler);\n</code></pre>\n\n<p>The fix was to add these rules to the style sheet:</p>\n\n<pre><code>body { -webkit-touch-callout: none !important; }\na { -webkit-user-select: none !important; }\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/z9ZNU/53/\">Disabled context menu <strong>example</strong></a>.</p>\n\n<hr>\n\n<p><strong>Update</strong>: the <a href=\"https://github.com/pisi/Longclick\">jQuery Longclick</a> plugin seems to work only in Safari on the iPad, not in Google Chrome! I'm looking into that at the moment.</p>\n\n<hr>\n\n<p><strong>Update 2</strong>: I've embedded the Longclick Javascript in the source of the Fiddle because I was getting the following error in Chrome (due to <code>https</code>):</p>\n\n<blockquote>\n  <p>Refused to execute script from '<a href=\"https://raw.github.com/pisi/Longclick/master/jquery.longclick-min.js\">https://raw.github.com/pisi/Longclick/master/jquery.longclick-min.js</a>' because its MIME type ('text/plain') is not executable, and strict MIME type checking is enabled.</p>\n</blockquote>\n\n<p>See the updated version: <a href=\"http://jsfiddle.net/z9ZNU/53/\">http://jsfiddle.net/z9ZNU/53/</a></p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>A quick css solution:</p>\n\n<pre><code>html {\n    -webkit-user-select: none;\n    -webkit-touch-callout: none;\n}\n</code></pre>\n\n<p>user-select disables highlighting text/areas.<br>\ntouch-callout disables context menu popup.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>&lt;style type=\"text/css\"&gt;\n*:not(input):not(textarea) {\n  -webkit-user-select: none; /* disable selection/Copy of UIWebView */\n  -webkit-touch-callout: none; /* disable the IOS popup when long-press on a link */\n}       \n&lt;/style&gt;\n</code></pre>\n\n<p>If you want disable only anchor button tag use this:</p>\n\n<pre><code>a {\n  -webkit-user-select: none; /* disable selection/Copy of UIWebView */\n  -webkit-touch-callout: none; /* disable the IOS popup when long-press on a link */\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>For a website I want to show a custom context menu when a user \"longpresses\" the screen. I've create a <a href=\"https://github.com/pisi/Longclick\" rel=\"nofollow\">jQuery Longclick</a> listener in my code to show a custom context menu. The context menu is displayed, but the <a href=\"http://www.ipad4videoconverter.com/images/resource/save-images-on-ipad-safari.jpg\" rel=\"nofollow\">iPad's default context menu</a> is also displayed! I tried to prevent this by adding a <a href=\"http://api.jquery.com/event.preventDefault/\" rel=\"nofollow\"><code>preventDefault()</code></a> to the event in my listener, but this does not work:</p>\n\n<pre><code>function showContextMenu(e){\n  e.preventDefault();\n  // code to show custom context menu\n}\n\n$(\"#myId\").click(500, showContextMenu);\n</code></pre>\n\n<p><strong>Questions</strong></p>\n\n<ol>\n<li>Can you prevent the iPad's default context menu to show?</li>\n<li>Can it by done using the jQuery Longclick plugin?</li>\n</ol>\n\n<hr>\n\n<p>The Longclick plugin has some specific handling for the iPad (assuming by this snippet of <a href=\"https://github.com/pisi/Longclick/blob/master/jquery.longclick.js\" rel=\"nofollow\">it's source code</a>):</p>\n\n<pre><code>if (!(/iphone|ipad|ipod/i).test(navigator.userAgent)){\n  $(this)\n  .bind(_mousedown_, schedule)\n  .bind([_mousemove_, _mouseup_, _mouseout_, _contextmenu_].join(' '), annul)\n  .bind(_click_, click)\n}\n</code></pre>\n\n<p>So I assume this answers my second question (assuming the plugin used the correct event).</p>\n",
            "last_activity_date": 1414508286,
            "question_id": 12304012,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "iphone",
                "ipad",
                "mobile-safari"
            ],
            "title": "Preventing default context menu on longpress / longclick in mobile Safari (iPad / iPhone)"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can create custom JsonConverter like this:</p>\n\n<pre><code>public class EscapeQuoteConverter : JsonConverter \n{\n    public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) \n    {\n        writer.WriteValue(value.ToString().Replace(\"'\", \"\\\\'\"));\n    }\n\n    public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) \n    {\n        var value = JToken.Load(reader).Value&lt;string&gt;();\n        return value.Replace(\"\\\\'\", \"'\");\n    }\n\n    public override bool CanConvert(Type objectType) \n    {\n        return objectType == typeof(string);\n    }\n}\n</code></pre>\n\n<p>To use this only for Name property specify it by attribute:</p>\n\n<pre><code>public class Person \n{\n    [JsonConverter(typeof(EscapeQuoteConverter))]\n    public string Name { get; set; } \n}\n</code></pre>\n\n<p>To apply Converter to all strings use:</p>\n\n<pre><code>JsonConvert.SerializeObject(person, Formatting.Indented, new EscapeQuoteConverter());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Though there are some cases wherein you might want to drop some JSON into your page as a JavaScript string, or an HTML attribute value, most often what you'd do is simply include it directly into JavaScript source, because JSON is valid JavaScript syntax after all.</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>Use <a href=\"http://msdn.microsoft.com/en-us/library/73z22y6h%28v=vs.100%29.aspx\" rel=\"nofollow\">System.Web.HttpUtility.HtmlEncode</a></p>\n\n<pre><code>HttpUtility.HtmlEncode(JsonConvert.SerializeObject(myObject))\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<pre><code>JsonSerializerSettings settings = = new JsonSerializerSettings\n{\n    StringEscapeHandling =  StringEscapeHandling.EscapeHtml\n};\n\nJsonConvert.SerializeObject(obj, settings);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am using JSON.Net as my serializer for a large MVC 3 web application in c# and the razor view engine. For the initial page load in one view, there is a large amount of JSON dumped inside a script tag using @Html.Raw(JsonConvert.SerializeObject(myObject)).</p>\n\n<p>The problem is that some values of some objects contain apostrophes (think names like O'Brien), which JSON.Net is not escaping or encoding in any way.</p>\n\n<p>It's not an option to pre-encode the values stored in the database because that vastly complicates various other processes.</p>\n\n<p>Is there a way to force JSON.Net to HTML encode the values of the objects that it serializes, the same way that the built-in JavaScriptSerializer does when you call JavaScriptSerializer.Serialize(myObject)?  Or, is there a way to deal with this in the view?</p>\n",
            "last_activity_date": 1420803669,
            "question_id": 12042302,
            "score": 7,
            "tags": [
                "c#",
                "javascript",
                "json",
                "asp.net-mvc-3",
                "json.net"
            ],
            "title": "Serializing strings containing apostrophes with JSON.Net"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Just an idea, but maybe worth considering: You could try using <code>requestAnimationFrame</code> as described in <a href=\"http://www.html5rocks.com/en/tutorials/speed/animations/\" rel=\"nofollow\">this article</a> (or in a similar way). That might smooth out the update/\"lag\" issues.</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>I didn't get this to work with either the scroll event or with requestAnimationFrame. What I ended up doing is attaching to the mousewheel event, which fires before scrolling and rendering has happend. If the scroll event is going downward, I can apply the appropriate class in time for rendering.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am building a little web based application using an HTML table. One unusual property of this table is that it has fixed top row and left column (similar to excel). I accomplished this using a little jQuery and CSS.</p>\n\n<p>The problem is, the jQuery event that triggers my code is the $(window).scroll event, and evidently most browsers (Chrome and IE) redraw the page before the code that is called by this event is finished running. As a result, the left column and top row take a split second to \"catch up\" to the rest of the table.</p>\n\n<p>I've provided a <a href=\"http://jsfiddle.net/aHKU5/55/\" rel=\"nofollow\">stripped down jsFiddle example</a> in order to show you my problem. <strong>Note:</strong> The lag isn't very noticeable when the table is so small and (relatively speaking) empty of content. Nevertheless, it is there (assuming you aren't using firefox). Is there any way to get rid of this lag?</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1405121699,
            "question_id": 11346327,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "html-table"
            ],
            "title": "Force javascript to run *before* browser redraw (jsFiddle example)"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Then the history API is exactly what you are looking for. If you wish to support legacy browsers as well, then look for a library that falls back on manipulating the URL's hash tag if the browser doesn't provide the history API.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've used the following JavaScript library with great success: </p>\n\n<p><a href=\"https://github.com/balupton/jquery-history\" rel=\"nofollow\">https://github.com/balupton/jquery-history</a></p>\n\n<p>It supports the HTML5 history API as well as a fallback method (using #) for older browsers.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>If you are looking for Hash modification, your solution works ok. However, if you want to change the query, you can use the pushState, as you said. Here it is an example that might help you to implement it properly. I tested and it worked fine:</p>\n\n<pre><code>if (history.pushState) {\n    var newurl = window.location.protocol + \"//\" + window.location.host + window.location.pathname + '?myNewUrlQuery=1';\n    window.history.pushState({path:newurl},'',newurl);\n}\n</code></pre>\n\n<p>It does not reload the page, but it only allows you to change the URL query. You would not be able to change the protocol or the host values. And of course that it requires modern browsers that can process HTML5 History API.</p>\n\n<p>For more information:</p>\n\n<p><a href=\"http://diveintohtml5.info/history.html\">http://diveintohtml5.info/history.html</a></p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Manipulating_the_browser_history\">https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Manipulating_the_browser_history</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I am creating a photo gallery, and would like to be able to change the query string and title when the photos are browsed.</p>\n\n<p>The behavior I am looking for is often seen with some implementations of continuous/infinite page, where while you scroll down the query string keeps incrementing the page number (http://x.com?page=4) etc.. This should be simple in theory, but I would like something that is safe across major browsers.</p>\n\n<p>I found <a href=\"http://stackoverflow.com/questions/824349/modify-the-url-without-reloading-the-page\">this great post</a>, and was trying to follow the example with <code>window.history.pushstate</code>, but that doesn't seem to be working for me. And I'm not sure if it is ideal because I don't really care about modifying the browser history.</p>\n\n<p>I just want to be able to offer the ability to bookmark the currently viewed photo, without reloading the page every time the photo is changed.</p>\n\n<p>Here is an example of infinite page that modifies query string: <a href=\"http://tumbledry.org/\">http://tumbledry.org/</a></p>\n\n<p><strong>UPDATE</strong> found this method:</p>\n\n<pre><code>window.location.href = window.location.href + '#abc';\n</code></pre>\n\n<p>it appears to work for me, but i am on a new chrome.. it would probably cause some issues with older browsers? </p>\n",
            "last_activity_date": 1381341905,
            "question_id": 10970078,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "query-string",
                "dhtml"
            ],
            "title": "Modifying a query string without reloading the page"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If you needed a recursive self-invoking function then it may make sense:</p>\n\n<pre><code>(function loop(i) {\n    console.log(i);\n    i++;\n    if(i &lt; 10) {\n        loop(i);\n    }\n})(0);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>I use this pattern for polling data from servers periodically. This makes the code less clutter (especially <code>setTimeout</code> line).</p>\n\n<pre><code>(function poll() {\n  $.get(\"/somedata\", function (data) {\n    // Processing data...\n    setTimeout(poll, 1000);\n  });\n}());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It would be useful for recursion, but you should avoid named function expressions for the time being. They are not supported correctly in Internet Explorer until version 9.</p>\n\n<p>See: <a href=\"http://javascript.info/tutorial/functions-declarations-and-expressions\" rel=\"nofollow\">http://javascript.info/tutorial/functions-declarations-and-expressions</a></p>\n\n<blockquote>\n  <p>\"IE&lt;9 doesn\u2019t support NFE\"</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Naming self-invoked functions can increase readability. For example in the case that you are creating several closures via self-invoked functions, by providing names it increases code readability at no harm (other than losing old-IE support, as noted.) In essence, you are creating named code blocks, which can be a nice way to break up a large function.    </p>\n\n<p>e.g.,</p>\n\n<pre><code>function bigFunction() {\n   (function doTheFirstThing() {\n      //code here.\n   })();\n   (function doTheSecondThing() {\n     //code here.\n   })(); \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there ever a reason to use a <em>named</em> self invoking function?</p>\n\n<p>For example:</p>\n\n<pre><code>(function foo() \n{\n     alert('Hello World! Named Self Invoking Function Here');\n})();\n</code></pre>\n\n<p>As far as my learning has taken me, this acts the same as an anonymous self invoking function, with no extra advantages (you can't call it again following the invokation), and no extra disadvantages as it does not \"pollute\" the global scope (I think).</p>\n\n<p>Are there any times when it would make sense to name a self invoking function like the above?</p>\n",
            "last_activity_date": 1390265488,
            "question_id": 10947248,
            "score": 7,
            "tags": [
                "javascript",
                "self-invoking-function"
            ],
            "title": "Named Self Invoking Function"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>It's ugly, but it works: <a href=\"http://jsfiddle.net/MzseV/7/\" rel=\"nofollow\">http://jsfiddle.net/MzseV/7/</a></p>\n\n<p>It basically works by iterating the module's <code>_invokeQueue</code> member and applying functions within using the providers used for registering services, controllers and directives (NOTE: these need to be captured before bootstrapping AFAIK). This will probably also re-register anything you've previously registered so you might want some heuristic to only pick the ones you want, although I'm not sure if there's any damage in re-registring.</p>\n\n<p>Again, it's fairly hideous and hacky so I'd only use as a last resort.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/15250644/angularjs-loading-a-controller-dynamically\">Here's</a> the question I asked and later answered about this.</p>\n\n<p>EDIT: just noticed how old this question is, hope it still helps someone.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Hello everyone I've been trying to do this with no luck for a few days.</p>\n\n<p>is there anyway to load asynchronously some js scripts(which contain angular modules) and inject them to the running app after it has been initialized.</p>\n\n<p>Basically I have a container DOM element that will be populated with some HTML requested from the server, based on this HTML code I will decide which js files (modules) will be required, then load them asynchronously inject the modules to the angular app and  compile the content with the new injected modules.</p>\n\n<p>I tried but every time I do the bootstrap method injecting the module the Main Controller fires up and erases all my scope state. :(</p>\n\n<p>Any help around here?</p>\n",
            "last_activity_date": 1377110954,
            "question_id": 10924503,
            "score": 7,
            "tags": [
                "javascript",
                "html",
                "angularjs"
            ],
            "title": "angularjs inject module after app initialization"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.perlunity.de/javascript/scripts/javascript_0314_main.shtml\">There you go:</a> </p>\n\n<p>Use: </p>\n\n<pre><code>document.body.style.zoom=1.0;this.blur();\n</code></pre>\n\n<p>1.0 means 100%</p>\n\n<p>150% would be 1.5\n1000% would be 10.0</p>\n\n<p>this.blur() means that the curser, maybe you selected an input field, looses focus of every select item. </p>\n\n<p>or: </p>\n\n<p>You can use the css3 element <a href=\"http://www.css3.com/css-zoom/\">zoom</a> (<a href=\"http://stackoverflow.com/questions/1647237/can-i-zoom-into-a-web-page-like-ie-or-firefox-do-using-programming\">Source</a>)</p>\n\n<p><a href=\"http://www.mozilla.org/projects/security/components/signed-scripts.html\">Firefox does not allow</a> zooming with the browser because you can't access the user properties via javascript or sth.</p>\n\n<p>So you can just use some CSS styles which allow to zoom (CSS3: zoom, as mentioned above) or to increase the text size! Which you could do with including a different CSS file for example. But here you have the \"jumpy\" problem, because the styled css elements (floated etc.) have to \"interact\" different in fact of their attributes. </p>\n\n<p>The zoom I posted above works well in Chrome and IE8+ (FF not supported as mentioned)</p>\n\n<p>--\nAdditional information:</p>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/library/ms531189.aspx\">Here</a> is an example on how to zoom exactly with the zoom option.\nExample application can be found <a href=\"http://samples.msdn.microsoft.com/workshop/samples/author/dhtml/refs/zoom.htm\">here</a></p>\n\n<p>The zoom option normally handles the zoom as your browser does!</p>\n\n<p>But this is still all stuff, which is not supported by Firefox, or maybe Safari &amp; Opera? In chrome and IE it works!</p>\n\n<p>Another solution would be: Place your main sizes in \"em\", and then work around by setting sizes like 100%, 110% (all over the css). So you could have differen CSS files, and \"just\" need to replace the % attributes! </p>\n\n<p>Yet I don't think there might be other solutions! :( </p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I did this with jquery, works with Firefox, Safari, Chrome and IE9+:</p>\n\n<pre><code>window.onload = function() {\nvar currFFZoom = 1;\nvar currIEZoom = 100;\n\n$('#In').on('click',function(){\n    if (navigator.userAgent.indexOf('Firefox') != -1 &amp;&amp; parseFloat(navigator.userAgent.substring(navigator.userAgent.indexOf('Firefox') + 8)) &gt;= 3.6){//Firefox\n        var step = 0.02;\n        currFFZoom += step; \n        $('body').css('MozTransform','scale(' + currFFZoom + ')');\n    } else {\n        var step = 2;\n        currIEZoom += step;\n        $('body').css('zoom', ' ' + currIEZoom + '%');\n    }\n});\n\n$('#Out').on('click',function(){\n    if (navigator.userAgent.indexOf('Firefox') != -1 &amp;&amp; parseFloat(navigator.userAgent.substring(navigator.userAgent.indexOf('Firefox') + 8)) &gt;= 3.6){//Firefox\n        var step = 0.02;\n        currFFZoom -= step;                 \n        $('body').css('MozTransform','scale(' + currFFZoom + ')');\n\n    } else {\n        var step = 2;\n        currIEZoom -= step;\n        $('body').css('zoom', ' ' + currIEZoom + '%');\n    }\n});};\n\n\n&lt;input type=\"button\" id=\"Out\" alt=\"Zoom Out\"/&gt;\n&lt;input type=\"button\" id=\"In\" alt=\"Zoom In\"/&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How is it possible to zoom out an entire document with JavaScript ?</p>\n\n<p>My goal is to imitate the built-in browser zoom and zoom the entire document to 90%.</p>\n\n<p>I have tried using</p>\n\n<pre><code>document.body.zoom\n</code></pre>\n\n<p>This works only with <code>explorer</code> and the page gets messy (a lot of elements are moving around).</p>\n\n<p>Is there a way to do this?</p>\n",
            "last_activity_date": 1363656243,
            "question_id": 10464038,
            "score": 7,
            "tags": [
                "javascript",
                "zoom"
            ],
            "title": "imitate browser zoom with JavaScript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You should write this inside window.onload like</p>\n\n<pre><code>window.onload = function(){\n   var link = \"http://www.quirksmode.org/iframetest2.html\"\nvar iframe = document.createElement('iframe');\niframe.frameBorder=0;\niframe.width=\"300px\";\niframe.height=\"250px\";\niframe.id=\"randomid\";\niframe.setAttribute(\"src\", link);\ndocument.getElementById(\"ad54\").appendChild(iframe);\n\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>I want to load/append the iframe into a div with regular javascript. I can do this with JQuery without a problem, but I dont want to include the js file. I keep getting the error 'document.getElementById(\"ad54\")' (or whatever id I assign the div). I have the following code:</p>\n\n<pre><code>var link = \"http://www.google.com\"\nvar iframe = document.createElement('iframe');\niframe.frameBorder=0;\niframe.width=\"300px\";\niframe.height=\"250px\";\niframe.id=\"randomid\";\niframe.setAttribute(\"src\", link);\ndocument.getElementById(\"ad54\").appendChild(iframe);\n\n&lt;div id=\"ad54\"&gt;&lt;/div&gt;\n</code></pre>\n",
            "last_activity_date": 1401459758,
            "question_id": 10302109,
            "score": 7,
            "tags": [
                "javascript",
                "html",
                "iframe"
            ],
            "title": "Create iframe with javascript appending to a div"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Try just:</p>\n\n<pre><code>rake assets:precompile\n</code></pre>\n\n<p>I've had similar issues and that has worked.\nYou can also delete the contents of the <code>/public/assets</code> directory and try running it again.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Actually two things needed to do:</p>\n\n<pre><code>config.assets.precompile += %w( *.js *.css )\n</code></pre>\n\n<p>as described <a href=\"http://stackoverflow.com/questions/6415449/rails-3-1-asset-pipeline-missing-files-from-public-assets-why-isnt-this-the\">here</a>, and</p>\n\n<pre><code>config.serve_static_assets = true\n</code></pre>\n\n<p>for local production testing when using </p>\n\n<pre><code>rail s\n</code></pre>\n\n<p>of course using</p>\n\n<pre><code>rake assets:precompile\n</code></pre>\n\n<p>however in my case - without config.assets.precompile this would have no effect since the manifest didn't contain any reference to my javascript file.</p>\n\n<p>HTH.</p>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>the <a href=\"http://guides.rubyonrails.org/asset_pipeline.html#highlighter_293656\">Rails Guides</a> says:</p>\n\n<blockquote>\n  <p>If there are missing precompiled files in production you will get an\n  Sprockets::Helpers::RailsHelper::AssetPaths::AssetNotPrecompiledError\n  exception indicating the name of the missing file(s).</p>\n</blockquote>\n\n<p>I do execute:</p>\n\n<pre><code>bundle exec rake assets:precompile\n</code></pre>\n\n<p>however I don't get any error, and my javascript file is missing in the <em>manifest.yml</em>. Also it's not appearing in <em>public/assets</em>, so the problem is only on production.</p>\n\n<p>I have in the <em>application.js</em></p>\n\n<pre><code>//= require formalize/jquery-formalize\n</code></pre>\n\n<p>What am I missing? </p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1334875642,
            "question_id": 10218740,
            "score": 7,
            "tags": [
                "javascript",
                "ruby-on-rails",
                "file",
                "assets",
                "pipeline"
            ],
            "title": "Rails javascript asset missing after precompile"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>By triggering a small recentering of the map after drawing all the polygons this is added to the same internal google maps event queue as can be seen in this example: <a href=\"http://jsfiddle.net/rmXXF/40/\">http://jsfiddle.net/rmXXF/40/</a></p>\n\n<pre><code>google.maps.event.addListener(map, 'idle', function() {\n document.getElementById('status').innerHTML = 'DONE';\n});\n</code></pre>\n\n<p>and</p>\n\n<pre><code>my_map.setCenter(new google.maps.LatLng(my_map.getCenter().lat(), my_map.getCenter().lng() + .000000001));\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>You should use an overlay and listen to the drawing manager's 'rectanglecomplete' event. I can code up an example after lunch.</p>\n\n<p>David is right. I misread the documentation. Apologize. He should get the bounty.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>It seems that drawing of polygons is asynchronous in <a href=\"http://developers.google.com/maps/documentation/javascript/reference\" rel=\"nofollow\">google maps api v3</a>. Try to click the \"Load\" button in this example:</p>\n\n<p><a href=\"http://jsfiddle.net/rmXXF/\" rel=\"nofollow\">http://jsfiddle.net/rmXXF/</a></p>\n\n<p>the text \"DONE\" is written much sooner than the grid is drawn! It seems that drawing of rectangle grid is asynchronous. <strong>I want the text DONE displayed AFTER the grid is drawn!</strong> Is there some event handler for this?</p>\n\n<p>The important part of code is in function <code>action()</code>:</p>\n\n<pre><code>polygons = draw_all_squares(map); // draw grid here\ndocument.getElementById('status').innerHTML = 'DONE'; // displayed 2 seconds\n                                                      // before the grid! \n</code></pre>\n\n<p>Note that map 'idle' event doesn't work for this, because the map is not moving/zooming. You can try here: \n<a href=\"http://jsfiddle.net/92Hxj/\" rel=\"nofollow\">http://jsfiddle.net/92Hxj/</a></p>\n\n<p>Maybe it has something to do not with google maps but with browser rendering? In any case, some event handler for this should be present.</p>\n",
            "last_activity_date": 1333371256,
            "question_id": 9850444,
            "score": 7,
            "tags": [
                "javascript",
                "google-maps",
                "dom",
                "google-maps-api-3",
                "rendering"
            ],
            "title": "Handle when drawing of polygons is complete in google maps api v3"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Just pass <code>null</code> as parameter value.</p>\n\n<p>Added: you also can skip all consequent optional parameters after the last that you want to pass real value (in this case you may skip <code>opt_timeoutInterval</code> parameter at all)</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>What do you mean by skip? You can pass in null, and you can completely leave off the trailing parameters (<code>opt_timeoutInterval</code> in this case), but you need to make sure your Cache-Control parameter becomes the fifth.</p>\n\n<blockquote>\n  <p>goog.net.XhrIo.send(url, null, null, null, {'Cache-Control': 'no-cache'});</p>\n</blockquote>\n\n<p>If you did not need the Cache-Control:</p>\n\n<blockquote>\n  <p>goog.net.XhrIo.send(url);</p>\n</blockquote>\n\n<p>Other API take parameters as a hash to make optional parameters easier (and many parameters named hence self-documenting), but where positional parameters are expected, you have to go with that.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Solution:</p>\n\n<pre><code>goog.net.XhrIo.send(url, undefined, undefined, undefined, {'Cache-Control': 'no-cache'})\n</code></pre>\n\n<p>You should use <code>undefined</code> instead of optional parameter you want to skip, because this 100% simulates the default value for optional parameters is JavaScript. </p>\n\n<p>Small example:</p>\n\n<pre><code>myfunc(param);\n\n//is equivalent to\n\nmyfunc(param, undefined, undefined, undefined);\n</code></pre>\n\n<p><strong>Strong recommendation</strong>: use JSON if you have a lot of parameters, and you can have optional parameters in the middle of the parameters list. Look how this is done in <a href=\"http://api.jquery.com/jQuery.ajax/\">jQuery</a>.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<h1>Short answer</h1>\n\n<p>The safest bet is <code>undefined</code>, and should work almost ubiquitously.  Ultimately, though, you cannot trick the function being called into thinking you truly omitted a parameter.</p>\n\n<p>If you find yourself leaning towards using <code>null</code> just because it's shorter, consider declaring a variable named <code>_</code> as a nice shorthand for <code>undefined</code>:</p>\n\n\n\n<pre class=\"lang-js prettyprint-override\"><code>(function() { // First line of every script file\n    \"use strict\";\n    var _ = undefined; // For shorthand\n    // ...\n    aFunction(a, _, c);\n    // ...\n})(); // Last line of every script\n</code></pre>\n\n<h1>Details</h1>\n\n<p>First, know that:</p>\n\n<ul>\n<li><code>typeof undefined</code> evaluates to <code>\"undefined\"</code></li>\n<li><code>typeof null</code> evaluates to <code>\"object\"</code></li>\n</ul>\n\n<p>So suppose a function takes an argument that it expects to be of type <code>\"number\"</code>.  If you provide <code>null</code> as a value, you're giving it an <code>\"object\"</code>.  The semantics are off.<sup>1</sup></p>\n\n<p>As developers continue to write increasingly robust javascript code, there's an increasing chance that the functions you call explicitly check a parameter's value for <code>undefined</code> as opposed to the classic <code>if (aParam) {...}</code>.  You'll be on shaky ground if you continue to use <code>null</code> interchangeably with <code>undefined</code> just because they both happen to coerce to <code>false</code>.</p>\n\n<p>Be aware, though, that it is in fact possible for a function to tell if a parameter was actually omitted (versus being set to <code>undefined</code>):</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>f(undefined); // Second param omitted\nfunction f(a, b) {\n    // Both a and b will evaluate to undefined when used in an expression\n    console.log(a); // undefined\n    console.log(b); // undefined\n    // But...\n    console.log(\"0\" in arguments); // true\n    console.log(\"1\" in arguments); // false\n}\n</code></pre>\n\n<hr>\n\n<p><strong>Footnotes</strong></p>\n\n<ol>\n<li>While <code>undefined</code> also isn't of type <code>\"number\"</code>, it's whole job is to be a type that isn't really a type.  That's why it's the value assumed by uninitialized variables, and the default return value for functions.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Could you please point me to the nice way of skipping optional parameters in JavaScript.</p>\n\n<p>For example, I want to throw away all <code>opt_</code> parameters here:</p>\n\n<pre><code>goog.net.XhrIo.send(url, opt_callback, opt_method, opt_content, {'Cache-Control': 'no-cache'}, opt_timeoutInterval)\n</code></pre>\n",
            "last_activity_date": 1343930161,
            "question_id": 8356227,
            "score": 7,
            "tags": [
                "javascript",
                "function-parameter"
            ],
            "title": "Skipping optional function parameters in JavaScript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The problem:\nThe function you've passed to setInterval maintains a reference to <code>x</code>... so, as <code>x</code> changes in your loop it changes in the function. Additionally, <code>for .. in</code> is used to enumerate object properties.</p>\n\n<p>What's more, I suspect you really want <a href=\"https://developer.mozilla.org/en/DOM/window.setTimeout\" rel=\"nofollow\"><code>setTimeout()</code></a> rather than <a href=\"https://developer.mozilla.org/en/DOM/window.setInterval\" rel=\"nofollow\"><code>setInterval()</code></a>. </p>\n\n<blockquote>\n  <p>var timeoutID = window.setTimeout(func, delay, [param1, param2, ...]);</p>\n</blockquote>\n\n<p>You can pass parameters to your timeout function like so:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var list = [1,2,3,4];\r\n\r\nfor (var x = 0, ln = list.length; x &lt; ln; x++) {\r\n  setTimeout(function(y) {\r\n    list[y] += 10;\r\n    console.log(y + \"=&gt;\" + list[y] + \"\\n\");\r\n  }, 5000, x); // we're passing x\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;!-- results pane console output; see http://meta.stackexchange.com/a/242491 --&gt;\r\n&lt;script src=\"http://gh-canon.github.io/stack-snippet-console/console.min.js\"&gt;&lt;/script&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>Luckily, numerics get passed by value rather than reference.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>Here is the working code:</p>\n\n<pre><code>var list = [1, 2, 3, 4, 5];\n\nfor (var i = 0, len = list.length; i &lt; len; i += 1) {\n    (function(i) {\n        setInterval(function() {\n            list[i] += 10;\n            console.log(i + \"=&gt;\" + list[i] + \"\\n\");\n        }, 5000)\n    })(i);\n}\n</code></pre>\n\n<p>Here the index <code>i</code> is stored in an anonymous function, so that it is not overwritten by consecutive loops. <code>setInterval</code> function in your code keeps the reference only to the last value of <code>i</code>.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>You don't have to use a for cycle with the <code>setInterval</code> statement. Try this:</p>\n\n<pre><code>var list = Array(...);\nvar x = 0;\n\nsetInterval(function() {\n\n    if (x &lt; list.length;) {\n        list[x] += 10;\n        console.log(x+\"=&gt;\"+list[x]);\n    }\n\n    else return;\n\n    x++;\n}, 5000);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you have JSON array and jQuery included, you can use:</p>\n\n<pre><code>$.each(jsonArray, function(i, obj) {\n    setInterval( function() {\n        console.log(i+' '+obj);\n    }, 10);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I'm trying to run multiple timers given a variable list of items. The code looks something like this:</p>\n\n<pre><code>var list = Array(...);\n\nfor(var x in list){\n    setInterval(function(){\n        list[x] += 10;\n        console.log(x + \"=&gt;\" + list[x] + \"\\n\");\n    }, 5 * 1000);\n}\n</code></pre>\n\n<p>The problem with the above code is that the only value being updated is the item at the end of the list, multiplied by the number of items in the list. </p>\n\n<p>Can anyone offer a solution and some explanation so I know why it's behaving this way?</p>\n",
            "last_activity_date": 1423680966,
            "question_id": 7749090,
            "score": 7,
            "tags": [
                "javascript",
                "for-loop",
                "closures",
                "setinterval"
            ],
            "title": "How to use setInterval function within for loop"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I just use <code>JSON.stringify</code> when i need it. Don't know if it will do it for you, but it is easy and effective for debugging purposes.</p>\n\n<p>This is no good for objects with function references in it tho, so if you need that i would consider using either a deep copy of the object (you can use jQuery's excellent <code>extend</code> method) or roll you own logging function that will loop recursively over the object and print it out.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>You could use a dedicated logging library such as my own <a href=\"http://log4javascript.org/\" rel=\"nofollow\">log4javascript</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>If you execute this code:</p>\n\n<pre><code>var foo = {bar: 'baz'};\nwindow.console.log(foo);\nfoo.bar = 'bla';\n</code></pre>\n\n<p>The console shows this after expanding the object:</p>\n\n<p><img src=\"http://i.stack.imgur.com/3XbkM.png\" alt=\"\"></p>\n\n<p>(when logging objects and arrays, it's not the run-time value that's recorded)</p>\n\n<p>This bug was documented over a year ago:</p>\n\n<p><a href=\"http://code.google.com/p/chromium/issues/detail?id=50316\">http://code.google.com/p/chromium/issues/detail?id=50316</a></p>\n\n<p>Is there a workaround for logging objects in Chrome?</p>\n",
            "last_activity_date": 1316767727,
            "question_id": 7521916,
            "score": 7,
            "tags": [
                "javascript",
                "debugging",
                "google-chrome",
                "console",
                "google-chrome-devtools"
            ],
            "title": "Workaround for logging objects to console in Chrome"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Generally, the way to do this is using the <a href=\"http://struts.apache.org/2.2.3/docs/json-plugin.html\" rel=\"nofollow\">Struts2 JSON plugin</a> which ships with recent versions of Struts2.  To interact with jQuery in your JSP you'll want to use s:url to create a URL for your JSON action and then you can invoke it using jQuery's <a href=\"http://api.jquery.com/jQuery.getJSON/\" rel=\"nofollow\">.getJSON()</a> or .load().  </p>\n\n<p>However, if your dropdown choices really aren't that complicated, don't over-architect. It can be easier to render them all using s:iterator on the initial page load and use <a href=\"http://api.jquery.com/change/\" rel=\"nofollow\">.change()</a> on your dropdown boxes to either move the data between select components, or augment the name attribute on one of the select boxes for the form submit.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>&lt;select id=\"stateSelect\"  name=\"selectedState\" onchange=\"loadCities(this.value)\"&gt;\n&lt;s:iterator value=\"#session['myModel'].states\" status=\"itr\"&gt;\n     &lt;option value=\"&lt;s:property value=\"code\"/&gt;\"&gt;\n      &lt;s:property value=\"label\"/&gt;\n&lt;/option&gt;\n&lt;/s:iterator&gt;\n&lt;/select&gt;\n\n&lt;select id=\"citySelect\"  name=\"selectedCity\" &gt;\n&lt;/select&gt;\n</code></pre>\n\n<p><strong>JQuery</strong></p>\n\n<pre><code>function loadCities(value){\n\n        $(\"#citySelect\").get(0).options.length = 0;\n        $(\"#citySelect\").get(0).options[0] = new Option(\"Loading cities\", \"-1\"); \n\n        $.ajax({\n            type: \"POST\",\n            url: \"MyStrutsActionToGetCities\",\n            data: \"{stateID:\" + value+ \"}\",\n            contentType: \"application/json; charset=utf-8\",\n            dataType: \"json\",\n            success: function(msg) {\n                $(\"#citySelect\").get(0).options.length = 0;\n                $(\"#citySelect\").get(0).options[0] = new Option(\"Select city\", \"-1\"); \n\n                $.each(msg.d, function(index, item) {\n                    $(\"#citySelect\").get(0).options[$(\"#citySelect\").get(0).options.length] = new Option(item.Display, item.Value);\n                });\n            },\n            error: function() {\n                $(\"#citySelect\").get(0).options.length = 0;\n                alert(\"Failed to load cities\");\n            }\n        });\n}\n</code></pre>\n\n<p>Taken from <a href=\"http://www.joe-stevens.com/2010/02/23/populate-a-select-dropdown-list-using-jquery-and-ajax/\" rel=\"nofollow\">this tutorial</a></p>\n\n<p><strong>Update</strong>:This example is used to load city list based on the state selected. You can do similar thing to load state list on country selection. Also <a href=\"http://struts.apache.org/2.0.14/docs/ajax.html\" rel=\"nofollow\">here is a link</a> describing ajax request/response for struts without using any plugin</p>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p>I am working on a struts2 project where I have 3 html select controls each one being dependent on the previous selection. Say the first select is for country, second for state, third for city. The list of options in the state select would be filtered to only display the states in that country and so on. Due to some other limitations I am using the basic html select control instead of struts2's. Here is a sample of how I am currently populating the select:</p>\n\n<pre><code>&lt;select id=\"stateSelect\"  name=\"selectedState\"&gt;\n&lt;s:iterator value=\"#session['myModel'].states\" status=\"itr\"&gt;\n     &lt;option value=\"&lt;s:property value=\"code\"/&gt;\"&gt;\n      &lt;s:property value=\"label\"/&gt;\n&lt;/option&gt;\n&lt;/s:iterator&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>I think that what I need to do is onchange event do an ajax call to retrieve the list of \"states\" based on the selected \"country\". The questions are:<br>\n1. how can I do this ajax call using jquery?<br>\n2. what do I need to pass as the url for the ajax call? just the action name?<br>\n3. how can I parse the results back? From java code I can return a list of \"State\" objects that have \"code\" and \"label\" and other properties. How can I parse this list in javascript and generate the proper options for the select tag?</p>\n",
            "last_activity_date": 1312980724,
            "question_id": 7005056,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "select",
                "struts2"
            ],
            "title": "struts2: update second select based on first select value using javascript and jquery"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Works for me when I set the 1st parameter of open() to <code>'about:blank'</code></p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>You need to specify the url in the first parameter, like \"about:blank\":</p>\n\n<pre><code>window.open('about:blank', \"window\", 'resizable=1,scrollbars=0,width=800,height=600');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have some JavaScript that is being used to open a new window and display a PDF file. This is working fine apart from the title of the new window being open. I am using the window.open function and I have set the title of the page using the document.write function (see code below). The code works fine for FF and IE but for some reason Google Chrome just displays 'Untitled - Google Chrome'</p>\n\n<pre><code>&lt;body&gt;\n    &lt;a href=\"javascript:openNewWindow();\"&gt;Click Here&lt;/a&gt;\n\n    &lt;script type=\"text/javascript\"&gt;\n        function openNewWindow()\n        {\n            var pdfWindow = window.open('', \"window\",\n                'resizable=1,scrollbars=0,width=800,height=600');\n\n            pdfWindow.document.write('&lt;html&gt;&lt;head&gt;&lt;title&gt;Window Title&lt;/title&gt;&lt;/head&gt;');\n\n            pdfWindow.document\n                    .write('&lt;body&gt;&lt;iframe src=\"\" id=\"ifrm\" name=\"ifrm\" width=\"100%\" height=\"100%\"&gt;&lt;/iframe&gt;');\n\n            pdfWindow.document.write('&lt;/body&gt;&lt;/html&gt;');\n\n            pdfWindow.document.close();\n        }\n    &lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>Note: I have also tried adding - pdfWindow.document.title=\"Title\"; - to the JavaScript, with no luck.</p>\n\n<p>Is there anything specific that is required for Chrome or am I just missing something??</p>\n",
            "last_activity_date": 1336601175,
            "question_id": 4994063,
            "score": 7,
            "tags": [
                "javascript",
                "google-chrome"
            ],
            "title": "Setting the page title of Chrome window.open"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can tell by what the preceding token is is in the stream. Go through each token that your lexer emits and ask whether it can reasonably be followed by a division sign or a regexp; you'll find that the two resulting sets of tokens are disjoint. For example, <code>(</code>, <code>[</code>, <code>{</code>, <code>;</code>, and all of the binary operators can only be followed by a regexp. Likewise, <code>)</code>, <code>]</code>, <code>}</code>, identifiers, and string/number literals can only be followed by a division sign.</p>\n\n<p>See Section 7 of the <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf\">ECMAScript spec</a> for more details.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>you have to check the context when encounter the slash. if the slash is after a expression, then it must be division, or it is a regexp start.</p>\n\n<p>in order to recognize the context, maybe you have to make a syntax parser.</p>\n\n<p>for example</p>\n\n<pre><code>function f() {}\n/1/g\n//this case ,the slash is after a function definition, so it's a refexp start\n\n\nvar a = {}\n/1/g;\n//this case, the slash is after an object expression\uff0cso it's a division\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm writing a simple javascript tokenizer which detects basic types: Word, Number, String, RegExp, Operator, Comment and Newline. Everything is going fine but I can't understand how to detect if the current character is RegExp delimiter or division operator. I'm not using regular expressions because they are too slow. Does anybody know the mechanism of detecting it? Thanks.</p>\n",
            "last_activity_date": 1391852321,
            "question_id": 4726295,
            "score": 7,
            "tags": [
                "javascript",
                "regex",
                "token",
                "tokenize"
            ],
            "title": "Division/RegExp conflict while tokenizing Javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It's because the <a href=\"http://cdn.jquerytools.org/\" rel=\"nofollow\">domain</a> is expired.</p>\n\n<p>As <a href=\"http://stackoverflow.com/users/492364/thejh\">thejh</a> pointed out in the comments, here's a copy of the file: <a href=\"http://pastebin.com/2xgfSm7z\" rel=\"nofollow\">jquery.tools.min.js</a> </p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>For those who don't see it yet, this is what it looks like:\n<img src=\"http://i.stack.imgur.com/2lZxZ.jpg\" alt=\"alt text\"></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><a href=\"http://flowplayer.org/tools/download/index.html\" rel=\"nofollow\">Download the lib</a> and include it from your server</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Why is the link <a href=\"http://cdn.jquerytools.org/1.2.5/all/jquery.tools.min.js\" rel=\"nofollow\">http://cdn.jquerytools.org/1.2.5/all/jquery.tools.min.js</a> pointing to an ad?</p>\n",
            "last_activity_date": 1311195456,
            "question_id": 4471568,
            "score": 7,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Why is jQuery tools CDN link pointing to an ad?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can not.</p>\n\n<p>For security reasons the browser only grants access to data stored with localStorage within the same domain. This is due to the fact, that on some systems different subdomains belong to different people / websites.</p>\n\n<p>See for example:\n<a href=\"http://msdn.microsoft.com/en-us/library/cc197062(VS.85).aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/cc197062(VS.85).aspx</a></p>\n\n<blockquote>\n  <p>Each domain and subdomain has its own\n  separate local storage area. Domains\n  can access the storage areas of\n  subdomains, and subdomains can access\n  the storage areas of parent domains.\n  For example,\n  localStorage['example.com'] is\n  accessible to example.com and any of\n  its subdomains. The subdomain\n  localStorage['www.example.com'] is\n  accessible to example.com, but not to\n  other subdomains, such as\n  mail.example.com.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>...Why not use <a href=\"http://wiki.greasespot.net/GM_setValue\" rel=\"nofollow\">GM_setValue</a> and <a href=\"http://wiki.greasespot.net/GM_getValue\" rel=\"nofollow\">GM_getValue</a>?</p>\n\n<p><strong>EDIT:</strong> I did a little digging. Look what I found!</p>\n\n<p><a href=\"http://www.opera.com/docs/userjs/specs/#scriptstorage\" rel=\"nofollow\">http://www.opera.com/docs/userjs/specs/#scriptstorage</a></p>\n\n<p>It claims to work the same as localStorage, but it's scoped per-script, rather than per-website. Should work perfect for your use case.</p>\n",
                    "is_accepted": true,
                    "score": 3
                }
            ],
            "body": "<h2>EDIT:</h2>\n\n<p>For the sake of simplicity:</p>\n\n<p>I've got a simple UserJS script (FF/Chrome: Greasemonkey, Opera: built-in) that fixes some issues on website I'm using quite often. The problem is that I need to store some data between different requests. My first attempt was <code>LocalStorage</code> but it fail when it came to work with subdomains: <code>www.domain.com</code> and <code>subdomain.domain.com</code> (unfortunately root-domain is subdomain in fact - stupid <code>www</code>) . I need to be able to access some data source that would be available everywhere.</p>\n\n<p>Now I'm stuck - any ideas?</p>\n",
            "last_activity_date": 1285862338,
            "question_id": 3414809,
            "score": 7,
            "tags": [
                "javascript",
                "data",
                "subdomain",
                "local-storage"
            ],
            "title": "Access root domain&#39;s localStorage from subdomain"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>chrome:// won't work because the page you are inserting into isn't allowed to access files outside of it's domain (including chrome URIs). This is true even you are the one inserting the link, because the link is still executed in the context of the target page. Instead you have two options:</p>\n\n<p>You can define a resource protocol alias in your manifest and then use a resource URI to access the CSS. For example, the following chrome.manifest will allow you to insert the css as <code>resource://myextresource/myfile.css</code>:<br>\n<code>content   myext   content/</code><br>\n<code>resource  myextresource   content/css/</code><br>\nSee <a href=\"https://developer.mozilla.org/en/chrome_registration\">MDN Chrome registration</a> for more info. Also see <a href=\"http://stackoverflow.com/questions/2731736/how-can-a-firefox-extension-inject-a-local-css-file-into-a-webpage\">How can a Firefox extension inject a local css file into a webpage?</a> for a similar question.</p>\n\n<p>Or, you can add the CSS as a USER_SHEET using the following. This will make your CSS available across all pages, so be sure you use very unique selectors. One caveat with this approach is that the page CSS has precedence over user sheets. You can use !important to override that, but the page CSS can still trump you if it uses !important as well.</p>\n\n<pre><code>var sss = Components.classes[\"@mozilla.org/content/style-sheet-service;1\"]\n    .getService(Components.interfaces.nsIStyleSheetService);\nvar ios = Components.classes[\"@mozilla.org/network/io-service;1\"]\n    .getService(Components.interfaces.nsIIOService);\nvar uri = ios.newURI(url, null, null);\nsss.loadAndRegisterSheet(uri, sss.USER_SHEET);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                }
            ],
            "body": "<p>I'm building a Firefox extension that adds HTML elements to certain pages of a website.  I want to have it insert a custom CSS file to style those elements.  It works if I insert  tags with the CSS right on the page, but that's a less than ideal solution.  </p>\n\n<p>Is there anyway to get it to load and parse a CSS file, as if I used the  tag in the header, or am I stuck inlining it somehow?</p>\n",
            "last_activity_date": 1314319060,
            "question_id": 2685243,
            "score": 7,
            "tags": [
                "javascript",
                "css",
                "firefox-addon"
            ],
            "title": "Inserting CSS with a Firefox Extension"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>There is a way to define a generic handler for calls on non-existant methods, but it is non-standard. Checkout the <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Object/NoSuchMethod\"><strong>noSuchMethod</strong></a> for Firefox. Will let you route calls to undefined methods dynamically. Seems like v8 is also <a href=\"http://dailyjs.com/2010/03/12/nosuchmethod/\">getting support</a> for it.</p>\n\n<p>To use it, define this method on any object:</p>\n\n<pre><code>var a = {};\n\na.__noSuchMethod__ = function(name, args) {\n    console.log(\"method %s does not exist\", name);\n};\n\na.doSomething(); // logs \"method doSomething does not exist\"\n</code></pre>\n\n<p>However, if you want a cross-browser method, then simple try-catch blocks if the way to go:</p>\n\n<pre><code>try {\n    a.doSomething();\n}\ncatch(e) {\n    // do something\n}\n</code></pre>\n\n<p>If you don't want to write try-catch throughout the code, then you could add a wrapper to the main object through which all function calls are routed.</p>\n\n<pre><code>function main() {\n    this.call = function(name, args) {\n        if(this[name] &amp;&amp; typeof this[name] == 'function') {\n            this[name].call(args);\n        }\n        else {\n            // handle non-existant method\n        }\n    },\n    this.a = function() {\n        alert(\"a\");\n    }\n}\n\nvar object = new main();\nobject.call('a') // alerts \"a\"\nobject.call('garbage') // goes into error-handling code\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>You can also check if the method exists.</p>\n\n<pre><code>if(a['your_method_that_doesnt_exist']===undefined){\n//method doesn't exist\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It seems that you know your way around JS.\nUnfortunately, I don't know of such feature in the language, and am pretty sure that it does not exist. Your best option, in my opinion is either using a uniform interface and extend it, or extend the prototypes from which your objects inherit (then you can use instanceof before going forward with the method call) or use the somewhat cumbersome '&amp;&amp;' operator in order to avoid the access of nonexistent properties/methods:</p>\n\n<pre><code>obj.methodName &amp;&amp; obj.methodName(art1,arg2,...);\n</code></pre>\n\n<p>You can also extend the Object prototype with Anurag's suggestion ('call').</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Well, it seems that with harmony (ES 6), there will be a way, and its quite more complicated if you compare it to the way other <a href=\"http://rosettacode.org/wiki/Respond_to_an_unknown_method_call#PHP\" rel=\"nofollow\">programing languages</a> do it, basically, it involves using the Proxy built in object, to create a wrapper on the object, and modify the way default behavior its implemented on it:</p>\n\n<pre><code>obj  = new Proxy({}, \n        { get : function(target, prop) \n            { \n                if(target[prop] === undefined) \n                    return function()  {\n                        console.log('an otherwise undefined function!!');\n                    };\n                else \n                    return target[prop];\n            }\n        });\nobj.f()        ///'an otherwise undefined function!!'\nobj.l = function() {console.log(45);};\nobj.l();       ///45\n</code></pre>\n\n<p>Proxy will forward all not handled by handlers behavior into the normal object, so it will be like if it wheren\u00b4t there, and from proxy you can modify the target. There are also more handlers, even some to modify the prototype getting, and setters for any property access yes!.</p>\n\n<p>Has you would imagine, this isn\u00b4t supported in all browsers right now, but, in firefox you can play with proxy interface quite easy, just go ahead into the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\" rel=\"nofollow\">MDN docs</a></p>\n\n<p>It would make me more happy if the managed to add some sintactic sugar on this, but, anyway, its nice to have this kind of power in an already powerfull languaje. Have a nice day! :)</p>\n\n<p>PD: I didnt copy rosettacode js entry, I updated it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>For instance this code:</p>\n\n<pre><code>function stuff() {\n  this.onlyMethod = function () {\n    return something;\n  }\n}\n\n// some error is thrown\nstuff().nonExistant();\n</code></pre>\n\n<p>Is there a way to do something like PHP's <code>__call</code> as a fallback from inside the object?</p>\n\n<pre><code>function stuff() {\n  this.onlyMethod = function () {\n    return something;\n  }\n  // \"catcher\" function\n  this.__call__ = function (name, params) {\n    alert(name + \" can't be called.\");\n  }\n}\n\n// would then raise the alert \"nonExistant can't be called\".\nstuff().nonExistant();\n</code></pre>\n\n<p><strong>Maybe I'll explain a bit more what I'm doing.</strong></p>\n\n<p>The object contains another object, which has methods that should be accessible directly through this object. But those methods are different for each object, so I can't just route them, i need to be able to call them dynamically.</p>\n\n<p>I know I could just make the object inside it a property of the main object <code>stuff.obj.existant()</code>, but I'm just wondering if I could avoid it, since the main object is sort of a wrapper that just adds some functionality temporarily (and makes it easier to access the object at the same time).</p>\n",
            "last_activity_date": 1424680590,
            "question_id": 2666602,
            "score": 7,
            "tags": [
                "javascript"
            ],
            "title": "Is there a way to catch an attempt to access a non existant property or method?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You'll need to set the min date dynamically on the change event of the start date. </p>\n\n<p>Something like:</p>\n\n<pre><code>$(\"#startDate\").change(function() {\n    test = $(this).datepicker('getDate');\n    testm = new Date(test.getTime());\n    testm.setDate(testm.getDate() + 1);\n\n    $(\"#endDate\").datepicker(\"option\", \"minDate\", testm);\n});\n</code></pre>\n\n<p><strong>Answer to the edit:</strong></p>\n\n<p>You cannot do the following:</p>\n\n<pre><code>var test;\n$(\"#myinput\").datepicker({\n    onSelect: function() { test = $(this).datepicker(\"getdate\"); }\n});\n$(\"#myotherinput\").datepicker({\n    minDate: test\n});\n</code></pre>\n\n<p>Test is uninitialized at the time that minDate is being set on <code>myotherinput</code>. The process of setting the minDate doubtless requires DOM manipulation which datepicker manages on initialization or when \"option\" is called. Simply changing the variable that was used for initialization does not effect the already initialized datepicker.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>Are you talking setting a max selection date?</p>\n\n<pre><code>StartDate = new Date(\"March 20, 2010\");\nEndDate = new Date(\"March 21, 2010\");\n\n$(\"#datepicker\").datepicker({ minDate: StartDate, maxDate: EndDate, defaultDate: StartDate  });\n</code></pre>\n\n<p>Note the maxDate? That won't let you select any days past it ...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The API <a href=\"http://docs.jquery.com/UI/Datepicker#option-minDate\" rel=\"nofollow\">documentation</a> for the date picker does seem to say it should take a Date object, but I've had this exact problem in the past and this is how I solved it.</p>\n\n<p>Pass <code>minDate</code> an <em>offset</em>, instead of a date. You'll need a function to take your start date, add one to it and then get the offset from today. So you could have a function like:</p>\n\n<pre><code>function offsetFromToday( someDate ) {\n  // clear time offset because we only want to take date into account\n  someDate.setHours( 0 );\n  someDate.setMinutes( 0 );\n\n  // The number of milliseconds in one day\n  var ONE_DAY = 1000 * 60 * 60 * 24;\n\n  // Convert both dates to milliseconds\n  someDate = someDate.getTime();\n  var today = new Date().getTime();\n\n  // Calculate the difference in milliseconds\n  var difference = Math.abs( someDate - today );\n\n  // Convert back to days and return\n  return Math.floor( (difference / ONE_DAY) + 1 );\n}\n</code></pre>\n\n<p>So you just need to get your start date a day ahead: <code>StartDate.setDate( StartDate.getDate() + 1 )</code> or similar, and then pass it to this function to get an offset, then give <em>that</em> to <code>minDate</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm usung the jQuery datepicker. In my \"EndDate\" textbox I'd like to use the date selected from the the \"StartDate\" textbox + 1. How do I do this?</p>\n\n<p>I tried this but didn't work. In my start date code I had...</p>\n\n<pre><code>            test = $(this).datepicker('getDate');\n            testm = new Date(test.getTime());\n            testm.setDate(testm.getDate() + 1);\n</code></pre>\n\n<p>Then in my end date code I had...</p>\n\n<pre><code>minDate: testm,\n</code></pre>\n\n<p>but the end date still made all the days for the month available.</p>\n\n<hr>\n\n<p><strong>Edit.</strong> I'm curious as to why this doesn't work. In my start date datepicker I have this..</p>\n\n<pre><code>onSelect: function (dateText, inst) {\n    test = dateText\n}\n</code></pre>\n\n<p>Why can't I come down into my end date datepicker and say, <code>minDate: test</code>?</p>\n\n<hr>\n\n<p><strong>Edit.</strong> Still not working</p>\n\n<pre><code>    $(\".dateStartDatePickerBox\").datepicker({\n        minDate:'-0d',\n        onSelect: function(dateText, inst)\n        {\n            test = $(this).datepicker('getDate');\n            testm = new Date(test.getTime());\n            testm.setDate(testm.getDate() + 1);\n\n            $(\"#dateEndDatePickerBox\").datepicker(\"option\", \"minDate\", testm);\n        }\n    });\n\n    $(\".dateEndDatePickerBox\").datepicker({\n        onSelect: function()\n        {\n\n        }\n    });\n</code></pre>\n",
            "last_activity_date": 1366858356,
            "question_id": 2484631,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "datepicker"
            ],
            "title": "jQuery datepicker minDate variable"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><em>Enter</em> for submit is only triggered if <code>&lt;input type=\"submit&gt;</code> exists on the form. You can add a hidden one for this purpose, but keep in mind that it will submit the form and bypass the <code>onclick</code> event you're looking to capture. You'll need to patch into the <code>onsubmit</code> action of the form to run your function.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>As Diodeus mentioned, you need an <code>&lt;input type=\"submit\"&gt;</code> tag in your form if you want to use the <em>ENTER</em> key to submit the form.</p>\n\n<p>The reason that your <code>reset_pager</code> function is not firing on the <code>onsubmit</code> event is because the <code>onsubmit</code> event is never fired. Though it's somewhat counter-intuitive, using the <code>submit()</code> method on a form (as you're doing in your <code>reset_and_subm</code> function) will not cause the <code>onsubmit</code> event to fire.</p>\n\n<p>You have a couple options:</p>\n\n<ol>\n<li><p>You can add an <code>&lt;input type=\"submit\"&gt;</code> to your form and put all your logic in an <code>onsubmit</code> callback function.</p></li>\n<li><p>Watch all <code>keypress</code> events on the form. If the <em>ENTER</em> key is pressed or the button is clicked, then call a function that does all the stuff you want to happen before submitting the form and then call <code>submit()</code> on the form.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have a form, very basic, and when I hit enter key nothing happens in firefox, but in google chrome it submits. Haven't tried other browsers yet...</p>\n\n<p>Nothing happens at all when hitting enter in firefox.</p>\n\n<p>When clicking the submit button it works fine in both browsers.</p>\n\n<p>The form is inside a DIV, and the form has javascript too, here is the form simplified:</p>\n\n<pre><code>&lt;form id=\"nav_form_main\" name=\"nav_form_main\" action=\"bincgi/sql_query.php\" target=\"iframe001\" method=\"get\" onSubmit=\"reset_pager();\"&gt;\n\n&lt;input type=\"button\" name=\"nav_submit\" id=\"nav_submit\" value=\"Search\" onClick=\"reset_and_subm();\" style=\"width: 58px; font-size: 13px;\"&gt;\n\n//some other elements...\n\n&lt;/form&gt;\n</code></pre>\n\n<p>and here is the js:</p>\n\n<pre><code>function reset_pager(){\n    byId(\"p\").value = 0;\n}\nfunction reset_and_subm(){\n    byId(\"p\").value = 0;\n    document.forms[\"nav_form_main\"].submit();   \n}\n</code></pre>\n\n<p>The reset_pager function is not called at all... which is strange because it is an \"onsubmit\" function. So it is like the form isn't submitted at all.\nHowever, the results in the targeted iframe appear fine, without any problem.</p>\n\n<p>Any ideas?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1354771313,
            "question_id": 2364141,
            "score": 7,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "&#39;Enter key&#39; wont submit form in Firefox, but will in Chrome, why?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Since JavaScript is generally downloaded to the client browser, brevity is actually quite a valuable attribute. The more bytes you have to download, the slower it gets. So yes, there is a reason apart from aesthetics, if not a massive one.</p>\n\n<p>Similarly, you'll see people preferring shorter variable names to longer.</p>\n\n<p>Personally, I don't bother minimising whitespace, as there are minimisers that can do this sort of thing for you (for example in <a href=\"http://developer.yahoo.com/yui/\">YUI</a>), and lack of indentation and spacing leads to less maintainable code.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I believe that what he is going for is declaring all variables as abosultely the first statement in a function (You'll notice that JSLint complains about this if you use it and don't declare them on the first line). This is because of JavaScript's scope declaration limitations (or quirks).  Crockford emphasizes this as good practice for maintainable JavaScript code.  The second example declares them at the top, but not in  the first execution statement.  Personally, I see no reason as why to prefer the first over the second, but following the first does enforce that all variables are declared before doing anything else in the function. </p>\n\n<p>David is right that the larger the script the more time it will take to down load, but in this case the difference between the two is minimal and  can be handled by using YUI compress etc. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It's a personal programming style choice.</p>\n\n<p>On the one hand there is <em>readability</em>, wherein placing each variable declaration on a separate line makes it more obvious what's going on.</p>\n\n<p>On the other hand, there is <em>brevity</em>, wherein you're eliminating transmitting a few extra bytes over the network. It's generally not enough to worry about, unless you're dealing with slow networks or limited memory on the client browser side.</p>\n\n<p><em>Brevity</em> is also known as <em>laziness</em> on the part of the programmer, which is one reason that many purists avoid it.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>No difference in semantics and no measurable difference in performance. Write whichever is clearest.</p>\n\n<p>For simple examples like:</p>\n\n<pre><code>var first= 'foo', second= 'bar', third= 'bof';\n</code></pre>\n\n<p>the concise single-statement construct is probably a win for readability. On the other hand you can take this much too far and start writing half your program inside a single var statement. Here's a random example plucked from the jQuery source:</p>\n\n<pre><code>var name = match[1],\n    result = Expr.attrHandle[ name ] ?\n        Expr.attrHandle[ name ]( elem ) :\n        elem[ name ] != null ?\n            elem[ name ] :\n            elem.getAttribute( name ),\n    value = result + \"\",\n    type = match[2],\n    check = match[4];\n</code></pre>\n\n<p>I find this (by no means the worst example) a bit distasteful. Longer examples can get quite hard to read upwards (wait, I was in a var statement?) and you can end up counting the brackets to try to work out what's a multi-line expression and what's just an extended <code>var</code> block.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Aside of aesthetics, and download footprint, another reason could be that the <code>var</code> statement is subject to <em>hoisting</em>. This means that regardless of where a variable is placed within a function, it is moved to the top of the scope in which it is defined.</p>\n\n<p>E.g:</p>\n\n<pre><code>var outside_scope = \"outside scope\";\nfunction f1() {\n    alert(outside_scope) ;\n    var outside_scope = \"inside scope\";\n}\nf1();\n</code></pre>\n\n<p>Gets interpreted into:</p>\n\n<pre><code>var outside_scope = \"outside scope\";\nfunction f1() {\n    var outside_scope; // is undefined\n    alert(outside_scope) ;\n    outside_scope = \"inside scope\";\n}\nf1();\n</code></pre>\n\n<p>Because of that, and the function-scope only that JavaScript has, is why Crockford recommends to declare all the variables at the <a href=\"http://www.jslint.com/lint.html#var\">top of the function</a> in a single <code>var</code> statement, to resemble what will really happen when the code is actually executed.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>It all comes down to personal taste or a set of style-guides, your development team follows. If you are serving JavaScript yourself, you usually compress or minify your script(s) into one long string in one single file. So the whole <em>you-are-saving-bytes-and-your-scripts-download-faster argument</em> is, well, not an argument :)</p>\n\n<p>I usually declare my variables like this: (a style you didn't mention)</p>\n\n<pre><code>var something,\n    somethingElse,\n    evenMoreSomething,\n    andAnotherThing;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A statement like \"var\" is not minified/compressed.<br />Every time you place a var, instead of a comma you lose 4 chars, if I count right.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Reading Crockfords <a href=\"http://javascript.crockford.com/style1.html\">The Elements of JavaScript Style</a> I notice he prefers defining variables like this:</p>\n\n<pre><code>var first='foo', second='bar', third='...';\n</code></pre>\n\n<p>What, if any benefit does that method provide over this:</p>\n\n<pre><code>var first='foo';\nvar second='bar';\nvar third='...';\n</code></pre>\n\n<p>Obviously the latter requires more typing but aside from aesthetics I'm wondering if there is a performance benefit gained by defining with the former style.</p>\n",
            "last_activity_date": 1358821948,
            "question_id": 2059022,
            "score": 7,
            "tags": [
                "javascript"
            ],
            "title": "Is there a benefit to defining variables together with a comma vs separately in JavaScript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>for ( var i = 0, l = arr.length; i &lt; l; ++i ) {\n    literal[arr[i]] = \"something\";\n}\n</code></pre>\n\n<p>I also took the liberty of optimising your loop :)</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Use this in your loop:</p>\n\n<pre><code>literal[arr[i]] = \"\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Is it possible to creat an object literal on the fly? \nLike this: </p>\n\n<pre><code>var arr = [ 'one', 'two', 'three' ]; \n\nvar literal = {}; \n\nfor(var i=0;i&lt;arr.length;i++)\n{\n   // some literal push method here! \n\n  /*  literal = {\n        one : \"\", \n        two : \"\",\n        three : \"\"\n    }  */ \n}\n</code></pre>\n\n<p>Thus I want the result to be like this: </p>\n\n<pre><code> literal = {\n        one : \"\", \n        two : \"\",\n        three : \"\"\n    } \n</code></pre>\n",
            "last_activity_date": 1262601656,
            "question_id": 1998735,
            "score": 7,
            "tags": [
                "javascript",
                "object-literal"
            ],
            "title": "Dynamic object literal in javascript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Please see <a href=\"http://www.asp.net/AJAX/Documentation/Live/Tutorials/ConsumingWebServicesWithAJAXTutorial.aspx\">Calling Web Services from Client Script in ASP.NET AJAX</a>:</p>\n\n<blockquote>\n  <p>This topic explains how to use to call\n  a Web service from ECMAScript\n  (JavaScript). To enable your\n  application to call ASP.NET AJAX Web\n  services by using client script, the\n  server asynchronous communication\n  layer automatically generates\n  JavaScript proxy classes. A proxy\n  class is generated for each Web\n  service for which an\n  <code>&lt;asp:ServiceReference&gt;</code> element is\n  included under the\n  <code>&lt;asp:ScriptManager&gt;</code> control in the\n  page.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>See <a href=\"http://encosia.com/2008/03/27/using-jquery-to-consume-aspnet-json-web-services/\" rel=\"nofollow\">Using jQuery to Consume ASP.NET JSON Web Services</a> by Dave Ward.</p>\n\n<pre><code>$(document).ready(function() {\n  $.ajax({\n    type: \"POST\",\n    url: \"RSSReader.asmx/GetRSSReader\",\n    data: \"{}\",\n    contentType: \"application/json; charset=utf-8\",\n    dataType: \"json\",\n    success: function(msg) {\n      // Hide the fake progress indicator graphic.\n      $('#RSSContent').removeClass('loading');\n\n      // Insert the returned HTML into the &lt;div&gt;.\n      $('#RSSContent').html(msg.d);\n    }\n  });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there any way to call web services from javascript? I know you can add in a script manager to pull in the web services but I can't figure out how to access the functions from javascript once I've done that.</p>\n\n<p>Thanks,<br/>\nMatt</p>\n",
            "last_activity_date": 1261545741,
            "question_id": 1949688,
            "score": 7,
            "tags": [
                "asp.net",
                "javascript",
                "web-services",
                "scriptmanager"
            ],
            "title": "How can I call web service methods from javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You're missing a function.  The .click function needs a function as a parameter so you need to do this:</p>\n\n<pre><code>.click(\n    function(indGroup,indValue)\n    {\n    \treturn function()\n    \t{\n    \t\tjQuery(\".IndicatorImage\").removeClass(\"active\");\n    \t\t_this.Indicator.TrueImage = DisplayGlobals.Indicators[indGroup][indValue];\n    \t\t_this.Indicator.FalseImage = DisplayGlobals.IndicatorsSpecial[\"BlankSmall\"];\n    \t\tjQuery(this).addClass(\"active\"); \n    \t}\n    }(i,j);\n);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Solution by <strong>Greg</strong> is still valid, but you can do it without creating additional closure now, by utilizing <code>eventData</code> parameter of jQuery <a href=\"http://api.jquery.com/click/\">click</a> method (or <a href=\"http://api.jquery.com/bind/\">bind</a> or any other event-binding method, for that matter).</p>\n\n<pre><code>.click({indGroup: i, indValue : j}, function(event) {\n    alert(event.data.indGroup);\n    alert(event.data.indValue);\n    ...\n});\n</code></pre>\n\n<p>Looks much simpler and probably more efficient (one less closure per iteration).</p>\n\n<p>Documentation for <a href=\"http://api.jquery.com/bind/\">bind</a> method has description and some examples on event data.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p><strong>Nikita</strong>'s answer works fine as long as you are using jQuery 1.4.3 and later.  For versions previous to this (back to 1.0) you will have to use <strong><a href=\"http://api.jquery.com/bind/\">bind</a></strong> as follows:</p>\n\n<pre><code>.bind('click', {indGroup: i, indValue : j}, function(event) {\n    alert(event.data.indGroup);\n    alert(event.data.indValue);\n    ...\n});\n</code></pre>\n\n<p>Hope this helps anyone else still using 1.4.2 (like me)</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I have a question similar to the one here: <a href=\"http://stackoverflow.com/questions/341723/event-handlers-inside-a-javascript-loop-need-a-closure#341759\">http://stackoverflow.com/questions/341723/event-handlers-inside-a-javascript-loop-need-a-closure#341759</a> but I'm using jQuery and the solution given seems to fire the event when it's bound rather than on click.</p>\n\n<p>Here's my code:</p>\n\n<pre><code>for(var i in DisplayGlobals.Indicators)\n{\n    var div = d.createElement(\"div\");\n    div.style.width = \"100%\";\n    td.appendChild(div);\n\n    for(var j = 0;j&lt;3;j++)\n    {\n        var test = j;\n        if(DisplayGlobals.Indicators[i][j].length &gt; 0)\n        {   \n             var img = d.createElement(\"img\");\n             jQuery(img).attr({\n                     src : DisplayGlobals.Indicators[i][j],\n                     alt : i,\n                     className: \"IndicatorImage\"\n              }).click(\n                     function(indGroup,indValue){ \n                         jQuery(\".IndicatorImage\").removeClass(\"active\");\n                         _this.Indicator.TrueImage = DisplayGlobals.Indicators[indGroup][indValue];\n                         _this.Indicator.FalseImage = DisplayGlobals.IndicatorsSpecial[\"BlankSmall\"];\n                         jQuery(this).addClass(\"active\"); \n                     }(i,j)\n               );\n               div.appendChild(img);   \n          }\n     }\n}\n</code></pre>\n\n<p>I've tried a couple of different ways without success...</p>\n\n<p>The original problem was that _this.Indicator.TrueImage was always the last value because I was using the loop counters rather than parameters to choose the right image.</p>\n",
            "last_activity_date": 1323972207,
            "question_id": 359467,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "loops",
                "closures"
            ],
            "title": "jQuery Closures, Loops and Events"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I may be wrong but it sounds like you are creating closures around the response object. Each response object will be different which results in an increased memory footprint.</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>The biggest thing you can watch out for is events, and how you assign them.</p>\n\n<p>For instance, take this scenario (since you haven't provided one):</p>\n\n<pre><code>&lt;div id=\"ajaxResponseTarget\"&gt;\n    ...\n&lt;/div&gt;\n&lt;script type=\"text/javascript\"&gt;\n    $(someButton).observe('click', function() {\n        new Ajax.Updater($('ajaxResponseTarget'), someUrl, {\n            onSuccess: function() {\n                $$('#ajaxResponseTarget .someButtonClass').invoke('observe', 'click', function() {\n                    ...\n                });\n            }\n        });\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>This will create a memory leak, because when <code>#ajaxResponseTarget</code> is updated (internally, Prototype will use <code>innerHTML</code>) elements with <code>click</code> events will be removed from the document without their events being removed. The second time you click <code>someButton</code>, you will then have twice as many event handlers, and garbage collection can't remove the first set.</p>\n\n<p>A way to avoid this is to use event delegation:</p>\n\n<pre><code>&lt;div id=\"ajaxResponseTarget\"&gt;\n    ...\n&lt;/div&gt;\n&lt;script type=\"text/javascript\"&gt;\n    $('ajaxResponseTarget').observe('click', function(e) {\n        if(e.element().match('.someButtonClass')) {\n            ...\n        }\n    });\n    $(someButton).observe('click', function() {\n        new Ajax.Updater($('ajaxResponseTarget'), someUrl);\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>Because of the way DOM events work, the \"click\" on <code>.someButtonClass</code> will fire also on <code>#ajaxResponseTarget</code>, and Prototype makes it dead simple to determine what element was the target of the event. No events are assigned to elements <em>within</em> <code>#ajaxResponseTarget</code>, so there is no way for replacing its contents to orphan events from targets within.</p>\n",
                    "is_accepted": true,
                    "score": 9
                }
            ],
            "body": "<p>I am working on a web application that is designed to display a bunch of data that is updated periodically with AJAX.   The general usage scenario would be that a user would leave it open all day and take a glance at it now and then.</p>\n\n<p>I am encountering a problem where the browsers memory footprint is growing slowly over time.   This is happening in both Firefox and IE 7 (Although not in Chrome). After a few hours, it can cause IE7 to have a footprint of ~200MB and FF3 to have a footprint of ~400MB.</p>\n\n<p>After a lot of testing, I have found that the memory leak only occurs if the AJAX calls are being responded to.  If the server doesn't respond to anything, I can leave the page open for hours and the footprint won't grow.</p>\n\n<p>I am using prototype for my AJAX calls.  So, I'm guessing there is an issue with the onSuccess callback creating these memory leaks.  </p>\n\n<p>Does anyone have any tips on preventing memory leaks with prototype / AJAX?    Or any methods on how to troubleshoot this problem?</p>\n\n<p>EDIT: found out the issue lies in a js graphing library I am using.   Can be seen <a href=\"http://code.google.com/p/flotr/issues/detail?id=5\">here</a>. </p>\n",
            "last_activity_date": 1226253643,
            "question_id": 276087,
            "score": 7,
            "tags": [
                "javascript",
                "ajax",
                "browser",
                "memory-leaks"
            ],
            "title": "Preventing AJAX memory leaks"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>This works as expected for me:</p>\n\n<pre><code>alert(\"&amp;aelig;&amp;oslash;&amp;aring;\");\n</code></pre>\n\n<p>... creates an alert containing the string \"&amp;aelig;&amp;oslash;&amp;aring;\" whereas</p>\n\n<pre><code>alert(\"\u00e6\u00f8\u00e5\");\n</code></pre>\n\n<p>... creates an alert with the non-ascii characters.</p>\n\n<p>Javascript is pretty utf-8 clean and doesn't tend to put obstacles in your way.</p>\n\n<p>Maybe you're putting this on a web server that serves it as ISO-8859-1? If you use Apache, in your Apache config file (or in .httaccess, if you can override), you should have a line</p>\n\n<pre><code>AddCharset utf-8 .js\n</code></pre>\n\n<p>(Note: edited to escape the ampersands... otherwise it didn't make sense.)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I get \"&amp;aelig;&amp;oslash;&amp;aring;\" for the first one and some junk characters for the next. Could it be that the javascript is not mangling (or <a href=\"http://en.wikipedia.org/wiki/Mojibake\" rel=\"nofollow\">mojibake</a>) your letters but the alert dialog uses the system default font, and the font is incapable of displaying the letters?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just specifying UTF-8 in the header is not enough. I'd bet you haven't saved your file as UTF-8. Any reasonably advanced text editor will have this option. Try that and I'm sure it'll work!</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>You can also use <code>String.fromCharCode()</code> to output a character from a numeric entity.</p>\n\n<p>e.g. <code>String.fromCharCode( 8226 )</code> will create a bullet character.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you ever can't set the response encoding, you can use <code>\\u</code> escape sequence in the JavaScript string literal to display these characters.</p>\n\n<pre><code>alert(\"\\u00e6\\u00f8\\u00e5\")\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I use the code like this with Thai language.  It's fine.</p>\n\n<p><code>$message</code> is my PHP variable.</p>\n\n<pre><code>echo(\"&lt;html&gt;&lt;head&gt;&lt;meta charset='utf-8'&gt;&lt;/head&gt;&lt;body&gt;&lt;script type='text/javascript'&gt;alert('\" . $message . \"');&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;\");\n</code></pre>\n\n<p>Hope this can help.  Thank you.</p>\n\n<p>(I cannot post image of what I did as the system said \"I don't have enough reputation\", so I leave the image, here. <a href=\"http://goo.gl/9P3DtI\" rel=\"nofollow\">http://goo.gl/9P3DtI</a> Sorry for inconvenience.)</p>\n\n<p>Sorry for my weak English.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am working on a web application, where I transfer data from the server to the browser in XML.</p>\n\n<p>Since I'm danish, I quickly run into problems with the characters <code>\u00e6\u00f8\u00e5</code>.</p>\n\n<p>I know that in html, I use the <code>\"&amp;amp;aelig;&amp;amp;oslash;&amp;amp;aring;\"</code> for <code>\u00e6\u00f8\u00e5</code>.</p>\n\n<p>however, as soon as the chars pass through JavaScript, I get black boxes with <code>\"?\"</code> in them when using <code>\u00e6\u00f8\u00e5</code>, and <code>\"&amp;aelig;&amp;oslash;&amp;aring;\"</code> is printed as is.</p>\n\n<p>I've made sure to set it to utf-8, but that isn't helping much.</p>\n\n<p>Ideally, I want it to work with any special characters (naturally).</p>\n\n<p>The example that isn't working is included below:</p>\n\n<pre><code>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n    &lt;title&gt;Untitled Document&lt;/title&gt;\n        &lt;script type=\"text/javascript\" charset=\"utf-8\"&gt;\n            alert(\"&amp;aelig;&amp;oslash;&amp;aring;\");\n            alert(\"\u00e6\u00f8\u00e5\");\n\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>What am I doing wrong?</p>\n\n<hr>\n\n<p>Ok, thanks to Grapefrukts answer, I got it working.</p>\n\n<p>I actually needed it for data coming from an MySQL server. Since the saving of the files in UTF-8 encoding only solves the problem for static content, I figure I'd include the solution for strings from a MySQL server, pulled out using PHP:</p>\n\n<p><code>utf8_encode($MyStringHere)</code></p>\n",
            "last_activity_date": 1418652130,
            "question_id": 60825,
            "score": 7,
            "tags": [
                "javascript",
                "unicode",
                "internationalization",
                "character-encoding"
            ],
            "title": "international characters in Javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>If you're going one step at a time, and going up is excluded, it seems to me that all you need to keep track of are the last two movements (except when determining the first step). Then the algorithm could follow a set of rules, choosing the next tile randomly from the available options.</p>\n\n<p>For example:</p>\n\n<pre><code>If the last two movements were West then South,\n  East would not be available.\n\nIf the last two movements were East then East,\n  Southeast would not be available.\n\nAnd so on.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's how I would approach this problem.</p>\n\n<p>1) Precisely define your rules for what constitutes a valid path. i.e. a function mapping the matrix to a boolean. From your question I'm not clear what a valid path is, and I'm not clear you are yet, either. </p>\n\n<p>2) Repeatedly generate a random arrangement of tiles until the arrangement produced meets the rules for a valid path. On current processors this will work quickly for 6x6 but will take longer on larger squares e.g. 100x100.</p>\n\n<p>An algorithmic solution may be possible, saving processing time, but this is the quick win in terms of development time and code simplicity. Also has the advantage of giving you a <em>uniform distribution</em> i.e. each path is just as likely to be produced as any other path.</p>\n\n<p>Example ruleset might be:</p>\n\n<p>A path is valid if <em>and only if</em> the matrix satisfies all these criteria:</p>\n\n<p>1) Every tile in the matrix (except for two end tiles) must be neighbors with exactly two tiles out of the four possible directions N,S,E,W</p>\n\n<p>2) Two tiles in the matrix (end tiles) must be neighbors with exactly one tile out of the four possible directions N,S,E,W</p>\n\n<p>3) One end tile must be on the top row, and the other on the bottom row</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would generate a maze using a method that gives a maze where from every point you can get to every other. Recursive backtracer is good enough for this and easy to implement.</p>\n\n<p>After you generate a maze on the matrix you have to find a way from the starting point to the end point (It can be every point. You just have to keep in mind that every second one can be a wall). You can find many different algorithms in the link in the bottom of the post. With maze generated using recursive backtracer you are guaranteed to have connected rows/columns as you want (like I said, every point is connected to every other), but not every position can be a path (due to need of putting walls)</p>\n\n<p>Your found path from begin to end meets your requirments so you only have to delete everything that does not belong to the path.</p>\n\n<p>If you create your own stack you can easly handle matrices of size ~2Kx2K. Maybe bigger.</p>\n\n<p>For further reading on everything related with mazes I recommend this site\n<a href=\"http://www.astrolog.org/labyrnth/algrithm.htm\" rel=\"nofollow\">http://www.astrolog.org/labyrnth/algrithm.htm</a></p>\n\n<p>You can make some changes to the maze generator so it is possible to have start/end on any possible tile not just every second one. The easiest solution for this I can think of would be just generating maze with an offset of 1 for 50% of cases.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>here <a href=\"http://jsfiddle.net/gr4s39hb/10/\" rel=\"nofollow\">jsfiddle</a></p>\n\n<p>make any size row and column</p>\n\n<pre><code>function yolYap(satir,sutun=0){ //My Create Path Function\nif(ilk){ //\u0130lk se\u00e7im: First selection\n    ilk=false;\n    sutun = Math.floor((Math.random()*6)+1);\n    matrix[satir][sutun].data('p', true);\n    matrix[satir][sutun].addClass(\"red\");\n    yolYap(satir,sutun);\n}else{\n    var xy=[];\n    var solust=satir&gt;1&amp;&amp;sutun&gt;1?!matrix[satir-1][sutun-1].data(\"p\"):true\n    var sol=sutun&gt;1?!matrix[satir][sutun-1].data(\"p\"):false\n    if(sol &amp;&amp; solust)//{\n        xy.push([satir,sutun-1]);//alert(\"&lt;-\");}\n\n    var sagust=satir&gt;1&amp;&amp;sutun&lt;matrix[1].length-1?!matrix[satir-1][sutun+1].data(\"p\"):true; \n    var sag=sutun&lt;matrix[1].length-1?!matrix[satir][sutun+1].data(\"p\"):false;\n    if(sag &amp;&amp; sagust)//{\n        xy.push([satir,sutun+1]);//alert(\"-&gt;\");}\n    //satir&gt;-1?alert(\"b\u00fcy\u00fck\"):alert(\"k\u00fc\u00e7\u00fck\");\n\n    xy.push([satir+1,sutun]);\n    var sec = Math.floor((Math.random()*102)+1)%xy.length;\n    matrix[xy[sec][0]][xy[sec][1]].data(\"p\", true);\n    matrix[xy[sec][0]][xy[sec][1]].addClass(\"red\");\n    //alert(xy.join(\" - \"));\n    if(xy[sec][0]&lt;matrix.length-1)\n        yolYap(xy[sec][0],xy[sec][1]);\n    else\n        alert(\"Finish\");\n}\n</code></pre>\n\n<p>}</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>One thing i'd like to point out is that you should change the range of the array to start at zero, or fix the range of number generated. Currently, it is producing a range with invalid indices. Since your question wasn't focused on that, i left it as it. </p>\n\n<p>This produces a winding path that can go down and back up until it either runs out of valid moves or reaches the bottom of the screen. Here is a JFIDDLE for it <a href=\"http://jsfiddle.net/j6gkzbr5/1/\" rel=\"nofollow\">http://jsfiddle.net/j6gkzbr5/1/</a></p>\n\n<pre><code>var colorEn = [\"RoyalBlue\", \"LawnGreen\", \"red\", \"orange\", \"yellow\", \"black\", \"white\", \"MediumOrchid\"];\nvar $color = \"null\";\nvar matrix = [];\nvar list = []\n\n$(document).ready(function () {\n\n    createMyGrid();\n    createPath();\n\n});\n\nfunction createPath() {\n    var row = 1;\n    var randomColumn = Math.floor(Math.random() * (matrix[1].length - 0) + 0);\n\n    matrix[1][randomColumn].data('partOfPath', true);\n    matrix[1][randomColumn].addClass(\"red\");\n\n   //Main loop, runs until we reach the final row.\n    do {\n        CreateNewFrontier(row, randomColumn);\n        //list now contains a list of all legal moves to make\n\n        var randomNumber = Math.floor((Math.random() * (list.length)));\n        //Select one at random\n\n        row = list[randomNumber][0];\n        randomColumn = list[randomNumber][1];\n\n        //And mark it\n        MarkPath(row, randomColumn);\n    } while (row &lt; 6)//This should be matrix.length - 1\n}\n\n//This function clears out the previous list of valid moves and generates a new one.\n\nfunction CreateNewFrontier(row, column) {\n    list = [];\n\n    //Check if each cardinal direction falls within the bounds of the matrix.\n    //If it does pass that node to the addtofrontier function for further consideration.\n\n    //if (row - 1 &gt;= 1) AddToFrontier(row - 1, column);\n    //Commented out, as we are no longer considering paths that lead up.\n    if (column + 1 &lt; matrix[row].length) AddToFrontier(row, column + 1);\n    if (row + 1 &lt; matrix.length) AddToFrontier(row + 1, column);\n    if (column - 1 &gt;= 1) AddToFrontier(row, column - 1);\n}\n\n//This function checks to make sure nodes to be added to the frontier don't violate any restrictions\n//Mainly, per the question description, no node can touch more than 2 nodes on any cardinal direction\n\nfunction AddToFrontier(row, column) {\n    //First we make sure this node is not already on the path. No backtracking, as it would violate the condition that there be only one continuous path.\n\n    if (matrix[row][column].data('partOfPath') != true) {\n\n        //Now we need to make sure that this node currently only has 1 neighbor at the most that\n       //is already on a path, otherwise we will violate the single path condition.\n       //So count up all marked neighbors...\n        var markedNeighbors = 0;\n        if (row - 1 &gt;= 1 &amp;&amp; !IsNotMarked(row - 1, column)) {\n            markedNeighbors++;\n        }\n        if (column + 1 &lt; matrix[row].length &amp;&amp; !IsNotMarked(row, column + 1)) {\n            markedNeighbors++;\n        }\n        if (row + 1 &lt; matrix.length &amp;&amp; !IsNotMarked(row + 1, column)) {\n            markedNeighbors++;\n        }\n        if (column - 1 &gt;= 1 &amp;&amp; !IsNotMarked(row, column - 1)) {\n            markedNeighbors++;\n        }\n\n        //...and if there is only 1, we add the node to the list of possible moves.\n        if (markedNeighbors &lt; 2) {\n            var index = list.length;\n            list[index] = [];\n            list[index][0] = row;\n            list[index][1] = column;\n        }\n    }\n}\n\n//Helper function to mark a node as visited.\nfunction MarkPath(row, column) {\n    matrix[row][column].data('partOfPath', true);\n    matrix[row][column].addClass(\"red\");\n}\n\n//Helper function to check if a path is marked. \n//It looks a little odd because i'm not that familiar with JS and wasn't sure how an uninitialized     //variable would return, so i decided to return the opposite.\n\nfunction IsNotMarked(row, column) {\n    if (row &lt; 1 || row &gt;= matrix.length) return true;\n    if (column &lt; 1 || column &gt;= matrix[row].length) return true;\n    return matrix[row][column].data('partOfPath') != true;\n}\n\nfunction createMyGrid() {\n    //create 6x6 matrix\n    for (var i = 1; i &lt;= 6; i++) {\n        matrix[i] = [];\n        for (var j = 1; j &lt;= 6; j++) {\n            var colorIndex = Math.floor(Math.random() * (colorEn.length - 0) + 0);\n            var $span = $('&lt;span /&gt;').attr('class', 'colorSquare').html(\"[\" + i + \"][\" + j + \"]\");\n            $(\"#grid\").append($span);\n            matrix[i][j] = $span;\n        }\n    }\n}\n\nfunction log(word) {\n    console.log(word);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p>I would like to generate a random path from the top to bottom of a matrix. </p>\n\n<p><a href=\"http://jsfiddle.net/gr4s39hb/2/\" rel=\"nofollow\">FIDDLE</a></p>\n\n<p>Requirements:</p>\n\n<ul>\n<li>The path can wind around, but it must connect from row 1 to the last row.</li>\n<li>Eventually, I'd like the colors to be random for each path piece, but for now it can be uniform (I've tested below with just red)</li>\n<li>Paths connecting from top to bottom are randomly generated </li>\n<li>The path pieces obviously must connect, and shouldn't fork (aka, give player 2 options to choose to go, shown here)</li>\n<li>The path can only go from top to bottom (cannot move back up), but it can wind left and right</li>\n</ul>\n\n<p><img src=\"http://i.stack.imgur.com/1E7Qk.png\" alt=\"enter image description here\"></p>\n\n<p>What I've considered:</p>\n\n<ul>\n<li>I can't simply check if the above row's column is part of the path, because then it will continuously generate path pieces when it finds the first true value.</li>\n<li>I'm not interested in generating paths manually, as that would require a new matrix specifying 1's and 0's where I want the path to go. And then for each \"random\" path option, I would have to build a new matrix. More importantly, manually generating path in matrices would make scaling the matrix size far more tedious... For example If I changed my 6x6 matrix to a 100x100. </li>\n</ul>\n\n<p>So yeah, the easy way would be to just make this and iterate through it:</p>\n\n<pre><code>        var matrixPaths = [\n            [0,1,0,0,0,0],\n            [0,1,1,1,0,0],\n            [0,0,0,1,0,0],\n            [0,0,0,1,1,1],\n            [0,0,0,0,0,1],\n            [0,0,0,0,0,1]\n        ];\n</code></pre>\n\n<p>On the left, empty grid, on the right, what it should generate</p>\n\n<p><img src=\"http://i.stack.imgur.com/Xupzh.png\" alt=\"enter image description here\"></p>\n\n<p>My thought was to first create the grid and add the spans in each matrix entry:</p>\n\n<pre><code>        function createMyGrid() {\n            //create 6x6 matrix\n            for(var i=1; i&lt;=6; i++) {\n                matrix[i] = [];\n                for(var j=1; j&lt;=6; j++) {\n                    var colorIndex = Math.floor(Math.random() * (color.length - 0) + 0);\n                    var $span = $('&lt;span /&gt;').attr('class', 'colorSquare').html(\"[\" + i + \"][\" + j + \"]\");\n                    $(\"#grid\").append($span);\n                    matrix[i][j] = $span;\n                }\n            }\n        }\n</code></pre>\n\n<p>Then, generate the first path piece at random in row 1. Then for each subsequent row, check for a path piece above it to connect... then from that piece, start generated the next set:</p>\n\n<pre><code>        function createPath() {\n            var randomColumn = Math.floor(Math.random() * (matrix[1].length - 0) + 0);\n            matrix[1][randomColumn].data('partOfPath', true);\n            matrix[1][randomColumn].addClass(\"red\");\n            for (var row = 2; row &lt;= 6; row++) {\n                for (var col = 1; col &lt;= 6; col++) {\n                    if (matrix[row-1][col].data('partOfPath')) { //if block above is partOfPath... add a set of items of random # of columns across\n                        addRowPath(row, col);\n                    }\n                }           \n            }\n        }\n\n        function addRowPath (row, pathCol) { //need to start offset from that row/col position, \n            var randRowPathLength = Math.floor(Math.random() * (matrix[row].length - 0) + 0);\n                for (var col = pathCol; col &lt;= randRowPathLength; col++) {          \n                    matrix[row][col].addClass(\"red\");   \n                }\n        }\n</code></pre>\n\n<p>So far it's adding the initial step, then the row below, but then stopping. </p>\n\n<p><img src=\"http://i.stack.imgur.com/03NMS.png\" alt=\"enter image description here\"></p>\n",
            "last_activity_date": 1415569522,
            "question_id": 26819566,
            "score": 6,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "algorithm",
                "random"
            ],
            "title": "Random path generation algorithm"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Just an update for posterity's sake: I ended up ditching <code>grunt-browserify</code> and just using <code>browserify-shim</code> with <code>browserify</code> from the command-line. It works instantly with no issues at all.</p>\n\n<p>I've come to the belief that the combination of the three libs (<code>browserify</code>, <code>grunt-browserify</code>, and <code>browserify-shim</code>) are all simply being updated and changed too rapidly to be able to rely upon them working together as they're updated. Ditching the <code>grunt</code> component makes the remaining two much easier to manage.</p>\n\n<p>The creator of browserify-shim <a href=\"https://github.com/thlorenz/browserify-shim/issues/40#issuecomment-40290585\">seems to agree</a>:</p>\n\n<blockquote>\n  <p>...in my experience whenever people wrap browserify and browserify-shim (both of which are perfectly configurable in package.json) inside a task runner, they are making their life a bit harder.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I struggled with this set up too, but I managed to get it working by completely removing the shim settings from my <code>Gruntfile.js</code> and letting <code>browserify</code> handle them in <code>package.json</code>. Here I'm using the shim with <code>jquery</code>, you can also see the versions I have running below:</p>\n\n<pre><code>// portion of package.json\n\n\"browser\": {\n    \"jquery\": \"./js/lib/jquery-1.11.0.min.js\"\n},\n\"browserify-shim\": {\n    \"jquery\": \"$\"\n},\n\"browserify\": {\n    \"transform\": [\n        \"browserify-shim\"\n    ]\n},\n\"devDependencies\": {\n    \"grunt\": \"~0.4.1\",\n    \"grunt-cli\": \"~0.1.10\",\n    \"browserify\": \"~3.44.2\",\n    \"browserify-shim\": \"~3.4.1\",\n    \"grunt-browserify\": \"~2.0.8\"\n}\n</code></pre>\n\n<p>The relevant part of my <code>Gruntfile.js</code> now looks like this:</p>\n\n<pre><code>// portion of Gruntfile.js\n\nbrowserify: {\n    bundleOptions: {\n        debug: true\n    },\n    src: 'js/src/main.js',\n    dest: 'js/output.js'\n},\n</code></pre>\n\n<p><code>grunt:browserify</code> now works as expected, by calling <code>browserify</code> but allowing it to handle <code>browserify-shim</code> by itself.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>In version 2.0.2 of <code>grunt-browserify</code>, <code>browserify-shim</code> was removed from the module itself and converted to be used as a <code>transform</code>, rather than a straightforward <code>option</code> on a <code>grunt-browserify</code> task.</p>\n\n<p>The <strong>old</strong> version of using the shim with <code>grunt-browserify</code> would look as such:</p>\n\n<pre><code>'libs-dev': {\n    src: [path.join('&lt;%= config.dirs.browserLibs %&gt;', 'angular', 'angular.js')],\n    dest: path.join('&lt;%= config.dirs.dest.dev %&gt;', 'js', 'libs.js'),\n    options: {\n        shim: {\n            angular: {\n                path: path.join('&lt;%= config.dirs.browserLibs %&gt;', 'angular', 'angular.js'),\n                exports: 'angular'\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>This worked great, and generated a wrapper around the <code>libs.js</code> module as such:</p>\n\n<pre><code>require=(function(e,t,n){function i(n,s){if(!t[n]){if(!e[n]){var o=typeof require==\"function\"&amp;&amp;require;if(!s&amp;&amp;o)return o(n,!0);if(r)return r(n,!0);throw new Error(\"Cannot find module '\"+n+\"'\")}var u=t[n]={exports:{}};e[n][0].call(u.exports,function(t){var r=e[n][1][t];return i(r?r:t)},u,u.exports)}return t[n].exports}var r=typeof require==\"function\"&amp;&amp;require;for(var s=0;s&lt;n.length;s++)i(n[s]);return i})({\"angular\":[function(require,module,exports){\n    module.exports=require('i10PRm');\n},{}],\"i10PRm\":[function(require,module,exports){\n    (function(global){(function browserifyShim(module, exports, define, browserify_shim__define__module__export__) {\n        browserify_shim__define__module__export__(typeof angular != \"undefined\" ? angular : window.angular);\n    }).call(global, undefined, undefined, undefined, function defineExport(ex) { module.exports = ex; });\n})(window)\n},{}]},{},[\"i10PRm\"]);\n</code></pre>\n\n<p>However, based on the (incredibly sparse and frustrating) documentation, the <strong>new</strong> version of the shim within <code>grunt-browserify</code> is used as a <code>transform</code>, as such:</p>\n\n<pre><code>'libs-dev': {\n    src: [path.join('&lt;%= config.dirs.browserLibs %&gt;', 'angular', 'angular.js')],\n    dest: path.join('&lt;%= config.dirs.dest.dev %&gt;', 'js', 'libs.js'),\n    options: {\n        transform: ['browserify-shim']\n    }\n}\n</code></pre>\n\n<p>and, since <code>browserify-shim</code>'s configuration is now entirely based on <code>package.json</code> configuration, my <code>package.json</code> looks as such:</p>\n\n<pre><code>\"browser\": {\n    \"angular\": \"./bower_components/angular/angular.js\"\n},\n\"browserify-shim\": {\n    \"angular\": \"angular\"\n}\n</code></pre>\n\n<p>However, this generates a wrapper that looks like:</p>\n\n<pre><code>(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&amp;&amp;require;if(!u&amp;&amp;a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&amp;&amp;require;for(var o=0;o&lt;r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n    (function (global){\n        __browserify_shim_require__=require;(function browserifyShim(module, exports, require, define, browserify_shim__define__module__export__) {\n            browserify_shim__define__module__export__(typeof angular != \"undefined\" ? angular : window.angular);\n    }).call(global, undefined, undefined, undefined, undefined, function defineExport(ex) { module.exports = ex; });\n}).call(this,typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}]},{},[1]);\n</code></pre>\n\n<p>As you can see, something's missing from this new wrapper; there doesn't seem to be an equivalent to the <code>i10PRm</code> export value assigned in the old wrapper. Presumably, this means I'm using exports incorrectly somehow, though I'm following the <code>browserify-shim</code> docs and it all seems fairly straightforward.</p>\n\n<p>Would love any assistance or clarity regarding the newest versions of <code>grunt-browserify</code> (<code>&gt;= 2.0.2</code>) and <code>browserify-shim</code> and how to use them together correctly.</p>\n",
            "last_activity_date": 1398253565,
            "question_id": 23019194,
            "score": 6,
            "tags": [
                "javascript",
                "node.js",
                "gruntjs",
                "commonjs",
                "browserify"
            ],
            "title": "Difficulty getting browserify-shim working with grunt-browserify (&gt; 2.0.2) as transform"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Because you could easily override that by defining your object with a key called <code>keys</code> holding a value or a function.</p>\n\n<pre><code>var myObj = { val1:\"hi\", keys:function(){ return true; } };\n</code></pre>\n\n<p>What would you expect to be returned by <code>myObj.keys()</code>?</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I would assume they did this because it's not always clear what are keys and what are not:</p>\n\n<p>for instance:</p>\n\n<pre><code>var cls = function() {\n    this.IAMAKEY = undefined;\n    this.someMethod = function() {};\n};\n\nObject.keys(new cls()); // ['IAMAKEY', 'someMethod']\n</code></pre>\n\n<p>Incidentally, adding Object.protype.keys, returns the keys method :)</p>\n\n<p>but if you must:</p>\n\n<pre><code>Object.defineProperty(Object.prototype, 'keys', {\n    writable: false,\n    configurable:   false,\n    value:          function() {\n        return Object.keys(this);\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm wondering why the spec has defined <code>Object.keys</code> instead of <code>Object.prototype.keys</code>? it would surely be much better if the API was consistent, and I would like to understand why that is not the case.</p>\n\n<p>Other methods are on <code>Object.prototype</code>, so why is this not the case?</p>\n",
            "last_activity_date": 1384297456,
            "question_id": 19941499,
            "score": 6,
            "tags": [
                "javascript",
                "prototype"
            ],
            "title": "Why is Object.keys not Object.prototype.keys?"
        }
    ]
}
