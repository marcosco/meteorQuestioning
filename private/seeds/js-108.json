{
    "items": [
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Using <code>querySelectorAll</code> as suggested by @JanDvorak (and his answer should be accepted for thinking of that), you can write your own expression, making <code>.is(':invalid')</code> valid ?</p>\n\n<pre><code>jQuery.extend(jQuery.expr[':'], {\n    invalid : function(elem, index, match){\n        var invalids = document.querySelectorAll(':invalid'),\n            result = false,\n            len = invalids.length;\n\n        if (len) {\n            for (var i=0; i&lt;len; i++) {\n                if (elem === invalids[i]) {\n                    result = true;\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n});\n</code></pre>\n\n<p>now you can do :</p>\n\n<pre><code>if( $(e.target).is(':invalid') ){ ... }\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/qAmKa/2/\"><strong>FIDDLE</strong></a></p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p><code>:invalid</code> is, indeed, not a valid jQuery selector (pseudoclass).</p>\n\n<p>According to <a href=\"https://developer.mozilla.org/en-US/docs/CSS/%3ainvalid\">the link you posted</a>, however, it is a valid CSS selector (not supported in IE&lt;10).</p>\n\n<p><a href=\"http://jsfiddle.net/qAmKa/\">A fiddle by Adeneo</a> shows that, as suspected, while it doesn't work in jQuery, it can be used via the native <code>querySelector</code>/<code>querySelectorAll</code> methods. So, while this doesn't work:</p>\n\n<pre><code>if($(e.target).is(\":invalid\"))  //SyntaxError\n</code></pre>\n\n<p>This does (except in IE&lt;10):</p>\n\n<pre><code>if(~[].indexOf.call(document.querySelectorAll(\":invalid\"),e.target))\n</code></pre>\n\n<p>This should work as well (in the future or after the neccessary shimming; see <a href=\"http://caniuse.com/#feat=matchesselector\">caniuse</a>):</p>\n\n<pre><code>if(e.target.matches(\":invalid\"))\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I get the following console message:</p>\n\n<pre><code>[16:04:01.292] Error: Syntax error, unrecognized expression: unsupported pseudo: invalid @ http://localhost:8080/assets/js/jquery-1.9.1.min.js:4\n</code></pre>\n\n<p>When I try something like:</p>\n\n<p><code>if( $(e.target).is(':invalid') ){ ... }</code></p>\n\n<p>How do I fix this?</p>\n\n<p>Here's an example: <a href=\"http://jsfiddle.net/L4g99/\" rel=\"nofollow\">http://jsfiddle.net/L4g99/</a> - try changing the jQuery version (stops working after 1.9)</p>\n",
            "last_activity_date": 1365138793,
            "question_id": 15820780,
            "score": 5,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "jquery-selectors"
            ],
            "title": "jQuery support &quot;:invalid&quot; selector"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You can't use the nest operator here because nesting produces a fixed hierarchy: the number of levels in the output hierarchy is the same as the number of key functions you specify.</p>\n\n<p>That said, you can write your own function which produces a tree. Assuming that the root node is the first node in the input array, you can create a map from id to node, and then construct the tree lazily.</p>\n\n<pre><code>function tree(nodes) {\n  var nodeById = {};\n\n  // Index the nodes by id, in case they come out of order.\n  nodes.forEach(function(d) {\n    nodeById[d.id] = d;\n  });\n\n  // Lazily compute children.\n  nodes.forEach(function(d) {\n    if (\"manager\" in d) {\n      var manager = nodeById[d.manager];\n      if (manager.children) manager.children.push(d);\n      else manager.children = [d];\n    }\n  });\n\n  return nodes[0];\n}\n</code></pre>\n\n<p>If you know that the nodes are listed in order such that managers appear before their reports, you can simplify the code to iterate only once.</p>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>I'm sure there's a really simple elegant way to do this but I can't quite figure it out.  I have some input data that looks like this:</p>\n\n<pre><code>[\n{id: 1, name: \"Peter\"},\n{id: 2, name: \"Paul\", manager: 1},\n{id: 3, name: \"Mary\", manager: 1},\n{id: 4, name: \"John\", manager: 2},\n{id: 5, name: \"Jane\", manager: 2}\n]\n</code></pre>\n\n<p>If possible, I would like to use the d3.js nest operator to get a structure to use in the hierarchy layout. Like this:</p>\n\n<pre><code>[ \n   {name: \"Peter\", children: [\n          {name:\"Paul\", children: [\n              {name:\"John\"},\n              {name:\"Jane\"}\n          ]},\n          {name:\"Mary\"}\n      ]\n   }\n]\n</code></pre>\n",
            "last_activity_date": 1347455103,
            "question_id": 11934862,
            "score": 5,
            "tags": [
                "javascript",
                "json",
                "nested",
                "operators",
                "d3.js"
            ],
            "title": "D3: use nest function to turn flat data with parent key into a hierarchy"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I think the clean references process is a tricky part of <code>Backbone</code>.</p>\n\n<p>When you remove a <code>Model</code> from a <code>Collection</code> the Collection takes care to <code>unbind</code> any event on the Model that the Collection its self is binding. <a href=\"https://github.com/documentcloud/backbone/blob/master/backbone.js#L839-844\" rel=\"nofollow\">Check this private Collection method</a>.</p>\n\n<p>Maybe you can use such a same technique in your Aggregator:</p>\n\n<pre><code>// ... Aggregator code\nthe_model.on( \"remove\", this.unlinkModel, this );\n// ... more Aggregator code\n\nunlinkModel: function( model ){\n  model.off( null, null, this );\n}\n</code></pre>\n\n<p>This is in the case the direction of the binding is <em>Aggregator -> Model</em>. If the direction is the opposite I don't think you have to make any cleaning after Model removed.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I see that even when the binding event direction is this way <em>Object1 -> listening -> Object2</em> it has to be removed in order to <em>Object1</em> lost any alive reference.</p>\n\n<p>And seeing that listening to the Model <code>remove</code> event is not a solution due it is not called in a <code>Collection.reset()</code> call then we have two solutions:</p>\n\n<h3>1. Overwrite normal Collection cleanUp</h3>\n\n<p>As <a href=\"http://stackoverflow.com/questions/7874339/backbone-js-does-calling-collection-reset-removes-the-models-as-well\">@dira sais here</a> you can overwrite <code>Collection._removeReference</code> to make a more proper cleaning of the method.</p>\n\n<p>I don't like this solutions for two reasons:</p>\n\n<ul>\n<li>I don't like to overwrite a method that has to call <code>super</code> after it.</li>\n<li>I don't like to overwrite private methods</li>\n</ul>\n\n<h3>2. Over-wrapping your <code>Collection.reset()</code> calls</h3>\n\n<p>Wich is the opposite: instead of adding <em>deeper functionality</em>, add <em>upper functionality</em>.</p>\n\n<p>Then instead of calling <code>Collection.reset()</code> directly you can call an implementation that <em>cleanUp</em> the models before been silently removed:</p>\n\n<pre><code>cleanUp: function( data ){\n  this.each( function( model ) { model.unlink(); } );\n  this.reset( data );\n} \n</code></pre>\n\n<p>A sorter version of your code can looks like this:</p>\n\n<pre><code>AppEvents = {};\n_.extend(AppEvents, Backbone.Events)\n\nvar User = Backbone.Model.extend({\n  initialize: function(){\n    AppEvents.on('my_event', this.listen, this);\n  },\n\n  listen: function(){\n    console.log(\"%s still listening...\", this.get('name'));\n  },\n\n  unlink: function(){\n   AppEvents.off( null, null, this );\n  }\n});\n\nvar Users = Backbone.Collection.extend({\n  model: User,\n\n  cleanUp: function( data ){\n    this.each( function( model ) { model.unlink(); } );\n    this.reset( data );\n  }\n});\n\n\n// testing\nvar users = new Users([{name: 'John'}]);\nconsole.log('users.size: ', users.size()); // 1\nAppEvents.trigger('my_event');             // John still listening...\n\nusers.cleanUp();\nconsole.log('users.size: ', users.size()); // 0\nAppEvents.trigger('my_event');             // (nothing)\n</code></pre>\n\n<p>Check <a href=\"http://jsfiddle.net/fguillen/3j7yS/\">the jsFiddle</a>.</p>\n\n<h1>Update: Verification that the Model is removed after remove the binding-event link</h1>\n\n<p>First thing we verify that Object1 listening to an event in Object2 creates a link in the direction <em>Obect2 -> Object1</em>:</p>\n\n<p><img src=\"http://i.stack.imgur.com/8Irvu.png\" alt=\"Our object is retained\"></p>\n\n<p>In the above image we see as the Model (@314019) is not only retained by the <code>users</code> collection but also for the <code>AppEvents</code> object which is observing. Looks like the <em>event linking</em> for a programmer perspective is <em>Object that listen -> to -> Object that is listened</em> but in fact is completely the opposite: <em>Object that is listened -> to -> Object that is listening</em>.</p>\n\n<p>Now if we use the <code>Collection.reset()</code> to empty the Collection we see as the <code>users</code> link has been removed but the <code>AppEvents</code> link remains:</p>\n\n<p><img src=\"http://i.stack.imgur.com/FPA7i.png\" alt=\"Our object is retained 2\"></p>\n\n<p>The <code>users</code> link has disappear and also the link <code>OurModel.collection</code> what I think is part of the <code>Collection._removeReference()</code> job.</p>\n\n<p>When we use our <code>Collection.cleanUp()</code> method the object disappear from the memory, I can't make the <code>Chrome.profile</code> tool to explicitly telling me <em>the object @314019 has been removed</em> but I can see that <strong>it is not anymore among the memory objects</strong>.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Instead of wrapping <code>Collection</code>'s <code>reset</code> with <code>cleanUp</code> as fguillen suggested, I prefer extending <code>Collection</code> and overriding <code>reset</code> directly. The reason is that\n<code>cleanUp</code> takes effect only in client's code, but not in library(i.e. <em>Backbone</em>)'s.\nFor example, <code>Collection.fetch</code> may internally call <code>Collection.reset</code>. Unless modifying the <em>Backbone's</em> source code, we cannot unbind models from events(as in <code>cleanUp</code>) after calling <code>Collection.fetch</code>.</p>\n\n<p>Basically, my suggested snippet is as follows:</p>\n\n<pre><code>var MyCollection = Backbone.Collection.extend({\n        reset: function(models, options) {\n            this.each(function(model) {\n                model.unlink(); // same as fguillen's code\n            });\n            Backbone.Collection.prototype.reset.apply(this, arguments);\n        }\n    });\n</code></pre>\n\n<p>Later, we can create new collections based on <code>MyCollection</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>in backbone we have an app that uses an event Aggregator, located on the <code>window.App.Events</code>\nnow, in many views, we bind to that aggregator, and i manually wrote a destroy function on a view, which handles unbinding from that event aggregator and then removing the view. (instead of directly removing the view).</p>\n\n<p>now, there were certain models where we needed this functionality as well, but i can't figure out how to tackle it.</p>\n\n<p>certain models need to bind to certain events, but maybe i'm mistaken but if we delete a model from a collection it stays in memory due to these bindings to the event aggregator which are still in place. </p>\n\n<p>there isn't really a remove function on a model, like a view has.\nso how would i tacke this?</p>\n\n<p><strong>EDIT</strong>\non request, some code example.</p>\n\n<pre><code>App = {\n    Events: _.extend({}, Backbone.Events)\n};\n\nvar User = Backbone.Model.extend({\n\n    initialize: function(){\n        _.bindAll(this, 'hide');\n        App.Events.bind('burglar-enters-the-building', this.hide);\n    },\n\n    hide: function(burglarName){\n        this.set({'isHidden': true});\n        console.warn(\"%s is hiding... because %s entered the house\", this.get('name'), burglarName);\n    }\n\n});\n\nvar Users = Backbone.Collection.extend({\n\n    model: User\n\n});\n\nvar House = Backbone.Model.extend({\n\n    initialize: function(){\n        this.set({'inhabitants': new Users()});\n    },\n\n    evacuate: function(){\n        this.get('inhabitants').reset();\n    }\n\n});\n\n\n\n$(function(){\n\n    var myHouse = new House({});\n\n    myHouse.get('inhabitants').reset([{id: 1, name: 'John'}, {id: 1, name: 'Jane'}]);\n\n    console.log('currently living in the house: ', myHouse.get('inhabitants').toJSON());\n\n    App.Events.trigger('burglar-enters-the-building', 'burglar1');\n\n    myHouse.evacuate();\n\n    console.log('currently living in the house: ', myHouse.get('inhabitants').toJSON());\n\n    App.Events.trigger('burglar-enters-the-building', 'burglar2');\n\n});\u200b\n</code></pre>\n\n<p>view this code in action on jsFiddle (output in the console): <a href=\"http://jsfiddle.net/saelfaer/szvFY/1/\">http://jsfiddle.net/saelfaer/szvFY/1/</a></p>\n\n<p>as you can see, i don't bind to the events on the model, but to an event aggregator.\nunbinding events from the model itself, is not necessary because if it's removed nobody will ever trigger an event on it again. but the eventAggregator is always in place, for the ease of passing events through the entire app.</p>\n\n<p>the code example shows, that even when they are removed from the collection, they don't live in the house anymore, but still execute the hide command when a burglar enters the house.</p>\n",
            "last_activity_date": 1347013267,
            "question_id": 10429648,
            "score": 5,
            "tags": [
                "javascript",
                "events",
                "event-handling",
                "backbone.js"
            ],
            "title": "Backbone.js: how to unbind from events, on model remove"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Since you didn't really explain what you're having trouble with, I just created a general solution. Hopefully this helps: <a href=\"http://jsfiddle.net/Vtn5Y/\">http://jsfiddle.net/Vtn5Y/</a></p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>This may depend on the browser.\nIt seems to work only if the radio inputs are next to each other (label is also ok).</p>\n\n<pre><code>&lt;input type=\"radio\" ... /&gt; \n&lt;input type=\"radio\" ... /&gt;\n&lt;input type=\"radio\" ... /&gt;\n</code></pre>\n\n<p>But this will break radio navigation in Firefox and probably other browsers:</p>\n\n<pre><code>&lt;div&gt;&lt;input type=\"radio\" ... /&gt; ... &lt;/div&gt;\n&lt;div&gt;&lt;input type=\"radio\" ... /&gt; ... &lt;/div&gt;\n</code></pre>\n\n<p>This is annoying as soon as you want to make something a bit more complex than a simple list (categories...).</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I can't seem to find an answer to how to accomplish this, yet it's a feature I've seen several times. Essentially I'm echoing out a list and I would like to create the ability to highlight and select these items using arrow keys/enter. Can someone help give me an idea as to how I can accomplish this? I know how to use keycodes (of course), just not how to turn that into functioning code for selecting items on a list...</p>\n\n<p>I was thinking maybe I'd have to have some sort of hidden radio button to mark it as selected or not... but even then I don't know how I would jump from one radio button to the other up and down the list. So if anyone could give me a hand with this I'd really appreciate it. Thank you.</p>\n",
            "last_activity_date": 1389628528,
            "question_id": 8902787,
            "score": 5,
            "tags": [
                "javascript",
                "jquery",
                "navigation",
                "arrow-keys"
            ],
            "title": "Navigate through list using arrow keys? (JavaScript/JQ)"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Here is a <a href=\"http://jsfiddle.net/kjy112/ZLuTg/\">JSFiddle Demo</a> that shows you how to set a google map marker by Lat Lng and also when click would give you an information window (bubble):</p>\n\n<p>Here is our basic HTML with 3 hyperlinks when clicked adds a marker onto the map:</p>\n\n<pre><code>&lt;div id=\"map_canvas\"&gt;&lt;/div&gt;\n\n&lt;a href='javascript:addMarker(\"usa\")'&gt;Click to Add U.S.A&lt;/a&gt;&lt;br/&gt;\n&lt;a href='javascript:addMarker(\"brasil\")'&gt;Click to Add Brasil&lt;/a&gt;&lt;br/&gt;\n&lt;a href='javascript:addMarker(\"argentina\")'&gt;Click to Add Argentina&lt;/a&gt;&lt;br/&gt;\n</code></pre>\n\n<p>First we set 2 global variables. one for map and another an array to hold our markers:</p>\n\n<pre><code>var map;\nvar markers = [];\n</code></pre>\n\n<p>This is our initialize to create a google map:</p>\n\n<pre><code>function initialize() {\n    var latlng = new google.maps.LatLng(40.77627, -73.910965);\n    var myOptions = {\n        zoom: 1,\n        center: latlng,\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n    }\n    map = new google.maps.Map(document.getElementById(\"map_canvas\"), myOptions);\n}\n</code></pre>\n\n<p>We then create 3 lat lng locations where we would like to place our markers: </p>\n\n<pre><code>var usa = new google.maps.LatLng(37.09024, -95.712891);\nvar brasil = new google.maps.LatLng(-14.235004, -51.92528);\nvar argentina = new google.maps.LatLng(-38.416097, -63.616672);\n</code></pre>\n\n<p>Here we create a function to add our markers based on whatever is passed onto it.  myloc will be either usa, brasil or argentina and we then create the marker based on the passed param.  With in the addMarker function we check and make sure we don't create duplicate marker on the map by calling the for loop and if we the passed param has already been created then we return out of the function and do nothing, else we create the marker and push it onto the global markers array.  After the marker is created we then attach an info window with it's associated marker by doing <code>markers[markers.length-1]['infowin']</code> markers.length-1 is just basically getting the newly pushed marker on the array.  Within the info window we set the content using html.  This is basically the information you put into the bubble or info window (it can be weather information which you can populate using a weather API and etc).  After info window is attached we then attach an onclick event listener using the Google Map API's addListener and when the marker is clicked we want to open the info window that is associated with it by calling <code>this['infowin'].open(map, this)</code> where the map is our global map and this is the marker we are currently associating the onclick event with.</p>\n\n<pre><code>function addMarker(myloc) {\n    var current;\n    if (myloc == 'usa') current = usa;\n    else if (myloc == 'brasil') current = brasil;\n    else if (myloc == 'argentina') current = argentina;\n    for (var i = 0; i &lt; markers.length; i++)\n    if (current.lat() === markers[i].position.lat() &amp;&amp; current.lng() === markers[i].position.lng()) return;\n\n    markers.push(new google.maps.Marker({\n        map: map,\n        position: current,\n        title: myloc\n    }));\n\n    markers[markers.length - 1]['infowin'] = new google.maps.InfoWindow({\n        content: '&lt;div&gt;This is a marker in ' + myloc + '&lt;/div&gt;'\n    });\n\n    google.maps.event.addListener(markers[markers.length - 1], 'click', function() {\n        this['infowin'].open(map, this);\n    });\n}\n</code></pre>\n\n<p>When all is done we basically attach <code>window.onload</code> event and call the initialize function:</p>\n\n<pre><code>window.onload = initialize;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                }
            ],
            "body": "<p>The following sample code provided by google maps api</p>\n\n<pre><code>          var geocoder;\n          var map;\n          function initialize() {\n            geocoder = new google.maps.Geocoder();\n            var latlng = new google.maps.LatLng(40.77627, -73.910965);\n            var myOptions = {\n              zoom: 8,\n              center: latlng,\n              mapTypeId: google.maps.MapTypeId.ROADMAP\n            }\n            map = new google.maps.Map(document.getElementById(\"map_canvas\"), myOptions);\n          }\n</code></pre>\n\n<p>the following only shows google map of the location without a marker. \nI was wondering how I can place a marker by giving latitude/longitude parameters?\nAnd how is it possible to store my own information pulled from a database on that marker?</p>\n\n<p>Thanks in advance! any help is appreciated.</p>\n",
            "last_activity_date": 1410320980,
            "question_id": 5319488,
            "score": 5,
            "tags": [
                "javascript",
                "html",
                "google-maps"
            ],
            "title": "How to set google map marker by latitude and longitude and provide infomation bubble"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Douglas Crockford has good articles on both <a href=\"http://javascript.crockford.com/inheritance.html\" rel=\"nofollow\">classical</a> and <a href=\"http://javascript.crockford.com/prototypal.html\" rel=\"nofollow\">prototypal</a> inheritance in Javascript, which should make good starting points.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I'd suggest the following pattern which makes use of a <a href=\"https://bitbucket.org/cggaertner/js-hacks/src/master/clone.js\" rel=\"nofollow\"><code>clone</code> function</a> to inherit from the protoypes and not instances:</p>\n\n<pre><code>function Shape(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\nShape.prototype.draw = function() {\n    throw new Error('Arbitrary shapes cannot be drawn');\n};\n\nfunction Square(x,y,side) {\n    Shape.call(this, x, y); // call super constructor\n    this.side = side;\n}\n\n// inherit from `Shape.prototype` and *not* an actual instance:\nSquare.prototype = clone(Shape.prototype);\n\n// override `draw()` method\nSquare.prototype.draw = function() {\n    gotoXY(this.x,this.y); lineTo(this.x+this.side, this.y); // ...\n};\n</code></pre>\n\n<p>It's important that methods reside in the prototype (which is as it should be anyway for performance reasons) so you can call the methods of a super class via</p>\n\n<pre><code>SuperClass.prototype.aMethod.call(this, arg1, arg2);\n</code></pre>\n\n<p>With some <a href=\"https://bitbucket.org/cggaertner/js-hacks/src/master/class5.js\" rel=\"nofollow\">syntactic sugar</a>, you can make JS look like a classical class-based language:</p>\n\n<pre><code>var Shape = Class.extend({\n    constructor : function(x, y) {\n        this.x = x;\n        this.y = y;\n    },\n    draw : function() {\n        throw new Error('Arbitrary shapes cannot be drawn');\n    }\n});\n\nvar Square = Shape.extend({\n    constructor : function(x, y, side) {\n        Shape.call(this, x, y);\n        this.side = side\n    },\n    draw : function() {\n        gotoXY(this.x,this.y); lineTo(this.x+this.side, this.y); // ...\n    }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>Also Crockford-inspired, but I had good experiences with what he calls \"functional inheritance\" using \"constructor functions\". YMMV.</p>\n\n<p><strong>UPDATE</strong>: Sorry, I forgot: you still need to augment Object with a <code>superior</code> method to get nice access to a super method. Not a good fit for you, probably.</p>\n\n<pre><code>var makeShape = function (x, y) {\n    that = {};\n    that.x = x;\n    that.y = y;\n    that.draw = function() {\n        throw new Error(\"Arbitrary shapes cannot be drawn\");\n    }\n    return that;\n};\n\nvar makeSquare = function (x, y, side) {\n    that = makeShape(x, y);\n    that.side = side;\n    that.draw = function() {\n        gotoXY(that.x,that.y); lineTo(that.x+that.side, that.y); ...\n    }\n    return that;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>OK, the trick with reproducing a class/instance-style system in JavaScript is that you can only use prototype inheritance on the instances. So you need to be able to make a \u2018non-instance\u2019 instance that is only used for inheritance, and have an initialiser method separate from the constructor function itself.</p>\n\n<p>This is the minimal system I use (before adding frills), passing a special one-off value into the constructor to have it construct an object without initialising it:</p>\n\n<pre><code>Function.prototype.subclass= function() {\n    var c= new Function(\n        'if (!(this instanceof arguments.callee)) throw(\\'Constructor called without \"new\"\\'); '+\n        'if (arguments[0]!==Function.prototype.subclass._FLAG &amp;&amp; this._init) this._init.apply(this, arguments); '\n    );\n    if (this!==Object)\n        c.prototype= new this(Function.prototype.subclass._FLAG);\n    return c;\n};\nFunction.prototype.subclass._FLAG= {};\n</code></pre>\n\n<p>The use of <code>new Function()</code> is a way to avoid forming an unnecessary closure over subclass(). You can replace it with a prettier <code>function() {...}</code> expression if you prefer.</p>\n\n<p>Usage is comparatively clean, and generally like Python-style objects only with slightly clumsier syntax:</p>\n\n<pre><code>var Shape= Object.subclass();\nShape.prototype._init= function(x, y) {\n    this.x= x;\n    this.y= y;\n};\nShape.prototype.draw= function() {\n    throw new Error(\"Arbitrary shapes cannot be drawn\");\n};\n\nvar Square= Shape.subclass();\nSquare.prototype._init= function(x, y, side) {\n    Shape.prototype._init.call(this, x, y);\n    this.side= side;\n};\nSquare.prototype.draw= function() {\n    gotoXY(this.x, this.y);\n    lineTo(this.x+this.side, this.y); // ...\n};\n</code></pre>\n\n<p>Monkey-patching a builtin (Function) is a bit questionable, but makes it pleasant to read, and no-one's likely to want to <code>for...in</code> over a Function.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use functional pattern proposed by Crockford in his book \"JavaScript the good parts\". Idea is use closore to make private fields, and use previleged function to access to these fields. Here is one of solutions which meet your 6 requirements: </p>\n\n<pre><code>    var people = function (info) {\n    var that = {};\n    // private\n    var name = info.name;\n    var age = info.age;\n    // getter and setter\n    that.getName = function () {\n        return name;\n    };\n    that.setName = function (aName) {\n        name = aName;\n    };\n    that.getAge = function () {\n        return age;\n    };\n    that.setAge = function (anAge) {\n        age = anAge;\n    };\n    return that;\n};\n\nvar student = function (info) {\n    // super\n    var that = people(info);\n    // private\n    var major = info.major;\n    that.getMajor = function () {\n        return major;\n    };\n    that.setMajor = function (aMajor) {\n        major = aMajor;\n    };\n    return that;\n};\n\nvar itStudent = function (info) {\n    // super\n    var that = student(info);\n    var language = info.language;\n    that.getLanguage = function () {\n        return language;\n    };\n    that.setLanguage = function (aLanguage) {\n        language = aLanguage;\n    };\n    return that;\n};\n\nvar p = person({name : \"Alex\", age : 24});\nconsole.debug(p.age); // undefined\nconsole.debug(p.getAge()); // 24\n\nvar s = student({name : \"Alex\", age : 24, major : \"IT\"});\nconsole.debug(s.getName()); // Alex\nconsole.debug(s.getMajor()); // IT\n\nvar i = itStudent({name : \"Alex\", age : 24, major : \"IT\", language : \"js\"});\nconsole.debug(i.language); // Undefined\nconsole.debug(i.getName()); // Alex\nconsole.debug(i.getMajor()); // IT\nconsole.debug(i.getLanguage()); // js\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm rewriting a JavaScript project, and I want to be able to use object oriented methodologies to organize the mess that the current code is. The main concern is that this JavaScript is supposed to run as a widget inside 3rd party websites and I can't have it conflicting with other JavaScript libraries that other websites may use.</p>\n\n<p>So I'm looking for a way to write \"class-like\" inheritance in JavaScript that has the following requirements:</p>\n\n<ol>\n<li>No external libraries or things that would conflict with an external library (that precludes copy&amp;paste from an external library).</li>\n<li>Minimalistic - I don't want the support code to be larger then a few lines of code and I don't want the developers to need a lot of boiler-plate every time they define a new class or methods.</li>\n<li>Should allow for dynamically extending parent objects so that child objects see the changes (prototype).</li>\n<li>Should allow for constructor chaining.</li>\n<li>Should allow for <code>super</code> type calls.</li>\n<li>Should still feel JavaScript-ish.</li>\n</ol>\n\n<p>Initially I tried to work with simple prototype chaining:</p>\n\n<pre><code>function Shape(x,y) {\n  this.x = x;\n  this.y = y;\n\n  this.draw = function() {\n    throw new Error(\"Arbitrary shapes cannot be drawn\");\n  }\n}\n\nfunction Square(x,y,side) {\n  this.x = x;\n  this.y = y;\n  this.side = side;\n\n  this.draw = function() {\n    gotoXY(this.x,this.y); lineTo(this.x+this.side, this.y); ...\n  }\n}\nSquare.prototype = new Shape();\n</code></pre>\n\n<p>And that solves requirements 1, 2 and 6 but id does not allow super calls (new functions override parent functions), constructor chaining and dynamically extending a parent does not provide the new methods to a child class.</p>\n\n<p>Any suggestions will be welcome.</p>\n",
            "last_activity_date": 1412790016,
            "question_id": 1404559,
            "score": 5,
            "tags": [
                "javascript",
                "inheritance",
                "oop"
            ],
            "title": "What will be a good minimalistic Javascript inheritance method?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.jensign.com/opensslkey/index.html\">http://www.jensign.com/opensslkey/index.html</a></p>\n\n<p>with source at <a href=\"http://www.jensign.com/opensslkey/opensslkey.cs\">http://www.jensign.com/opensslkey/opensslkey.cs</a></p>\n\n<p>edit: excerpted relevant code:</p>\n\n<p>first, extract the text between the ---- BEGIN ---- and ---- END ---- sections, and base64-decode it into a byte array (see link above for details), then pass it to:</p>\n\n<pre><code>//------- Parses binary ans.1 RSA private key; returns RSACryptoServiceProvider  ---\npublic static RSACryptoServiceProvider DecodeRSAPrivateKey(byte[] privkey)\n{\n\tbyte[] MODULUS, E, D, P, Q, DP, DQ, IQ ;\n\n// ---------  Set up stream to decode the asn.1 encoded RSA private key  ------\n\tMemoryStream  mem = new MemoryStream(privkey) ;\n\tBinaryReader binr = new BinaryReader(mem) ;    //wrap Memory Stream with BinaryReader for easy reading\n\tbyte bt = 0;\n\tushort twobytes = 0;\n\tint elems = 0;\n\ttry {\n\t\ttwobytes = binr.ReadUInt16();\n\t\tif (twobytes == 0x8130)\t//data read as little endian order (actual data order for Sequence is 30 81)\n\t\t\tbinr.ReadByte();\t//advance 1 byte\n\t\telse if (twobytes == 0x8230)\n\t\t\tbinr.ReadInt16();\t//advance 2 bytes\n\t\telse\n\t\t\treturn null;\n\n\t\ttwobytes = binr.ReadUInt16();\n\t\tif (twobytes != 0x0102)\t//version number\n\t\t\treturn null;\n\t\tbt = binr.ReadByte();\n\t\tif (bt !=0x00)\n\t\t\treturn null;\n\n\n//------  all private key components are Integer sequences ----\n\t\telems = GetIntegerSize(binr);\n\t\tMODULUS = binr.ReadBytes(elems);\n\n\t\telems = GetIntegerSize(binr);\n\t\tE = binr.ReadBytes(elems) ;\n\n\t\telems = GetIntegerSize(binr);\n\t\tD = binr.ReadBytes(elems) ;\n\n\t\telems = GetIntegerSize(binr);\n\t\tP = binr.ReadBytes(elems) ;\n\n\t\telems = GetIntegerSize(binr);\n\t\tQ = binr.ReadBytes(elems) ;\n\n\t\telems = GetIntegerSize(binr);\n\t\tDP = binr.ReadBytes(elems) ;\n\n\t\telems = GetIntegerSize(binr);\n\t\tDQ = binr.ReadBytes(elems) ;\n\n\t\telems = GetIntegerSize(binr);\n\t\tIQ = binr.ReadBytes(elems) ;\n\n\t\tConsole.WriteLine(\"showing components ..\");\n\t\tif (verbose) {\n\t\t\tshowBytes(\"\\nModulus\", MODULUS) ;\n\t\t\tshowBytes(\"\\nExponent\", E);\n\t\t\tshowBytes(\"\\nD\", D);\n\t\t\tshowBytes(\"\\nP\", P);\n\t\t\tshowBytes(\"\\nQ\", Q);\n\t\t\tshowBytes(\"\\nDP\", DP);\n\t\t\tshowBytes(\"\\nDQ\", DQ);\n\t\t\tshowBytes(\"\\nIQ\", IQ);\n\t\t}\n\n// ------- create RSACryptoServiceProvider instance and initialize with public key -----\n\t\tRSACryptoServiceProvider RSA = new RSACryptoServiceProvider();\n\t\tRSAParameters RSAparams = new RSAParameters();\n\t\tRSAparams.Modulus =MODULUS;\n\t\tRSAparams.Exponent = E;\n\t\tRSAparams.D = D;\n\t\tRSAparams.P = P;\n\t\tRSAparams.Q = Q;\n\t\tRSAparams.DP = DP;\n\t\tRSAparams.DQ = DQ;\n\t\tRSAparams.InverseQ = IQ;\n\t\tRSA.ImportParameters(RSAparams);\n\t\treturn RSA;\n\t}\n\tcatch (Exception) {\n\t\treturn null;\n\t}\n\tfinally {\n\t\tbinr.Close();\n\t}\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>I know this is a similar question to <a href=\"http://stackoverflow.com/questions/243646/how-to-read-a-pem-rsa-private-key-from-net\">this one</a> but before I head down the Bouncey Castle route, does anyone know if its possible to load an RSA KeyPair from a .pem file, e.g.:</p>\n\n<pre><code> -----BEGIN RSA PRIVATE KEY-----\n MIIBOgIBAAJBALKzy66nRuof8Fg0ItatyHS9RiDIKH0m5lorKzKn4y5wR6BXpVUv\n ZwnevrAJWBd6EPr/lcV3hjObxD6+q9vmN8ECAwEAAQJAGNcxWwfZrbXe3QPyS9FA\n aindU7U/G5aKssIJcTMxO0UYpGU+WArJbboKeEIE7bpNfhDOKTL7ZL6kWBR1Svlh\n WQIhAOhtx+xXuSrIot59tmXZaypBDjA4n+Xare0ObFLQxWuvAiEAxNMwm6w33bVr\n FHS9slkOh59Le2mgs0uNT6perHaRP48CIGMyRzrlDY/m5SvTtz6slgIIlceawxNU\n Sxp7J1wI4djdAiA6+BchHNjkCP2a9Fr9OydaRMSFpiDqduFQk/enbiKYSwIhANO3\n SQ51oLFtWN9gX3tfKTXflyO6BV8rgPo980d9CEsb\n -----END RSA PRIVATE KEY-----\n</code></pre>\n\n<p>directly with the .NET 3.5 crypto library without having to go to a 3rd party or roll my own?</p>\n",
            "last_activity_date": 1350764939,
            "question_id": 1162504,
            "score": 5,
            "tags": [
                "c#",
                "javascript",
                ".net-3.5",
                "rsacryptoserviceprovider"
            ],
            "title": "Decrypting with private key from .pem file in c# with .NET crypto library"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Use <code>window.location.pathname</code> to get the path of your application. It will look something like this on iPhone:</p>\n\n<blockquote>\n  <p>/var/mobile/Applications/{GUID}/{appname}.app/www/index.html</p>\n</blockquote>\n\n<p>And this on Android:</p>\n\n<blockquote>\n  <p>/android_asset/www/index.html</p>\n</blockquote>\n\n<p>Strip off the <code>/index.html</code>, prepend <code>file://</code>, and append your relative path <code>Sounds/sound.mps</code>.</p>\n\n<p>Here's something to get you started:</p>\n\n<p>Demo: <a href=\"http://jsfiddle.net/ThinkingStiff/chNVY/\" rel=\"nofollow\">http://jsfiddle.net/ThinkingStiff/chNVY/</a></p>\n\n<p>Code:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function getPhoneGapPath() {\n\n    var path = window.location.pathname;\n    path = path.substr( 0, path.length - 10 );\n    return 'file://' + path;\n\n};\n\nvar resource = getPhoneGapPath() + 'Sounds/sound.mps';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Heres a modified version of getPhoneGapPath that works for me on both iOS and Android. It is also not restricted to only working on files that have a filename that is 10 characters long :)</p>\n\n<pre><code>getPhoneGapPath: function () {\n    'use strict';\n    var path = window.location.pathname;\n    var phoneGapPath = path.substring(0, path.lastIndexOf('/') + 1);\n    return phoneGapPath;\n}\n\nvar resource = getPhoneGapPath() + 'audio/audio.mp3';\n</code></pre>\n\n<p>getPhoneGapPath() will return:</p>\n\n<p><strong>iOS:</strong> /var/mobile/Applications/{GUID}/{appName}/www/</p>\n\n<p><strong>Android:</strong> /android_asset/www/</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>As of Cordova 3.3+, the 2 other answers aren't correct. It should work even if you just pass it a file name.</p>\n\n<p>But, <strong>it will only work in iOS if the file extension is <code>.wav</code></strong>.</p>\n\n<p>This will work:</p>\n\n<pre><code>var media = new Media('recording.wav', ...);\n</code></pre>\n\n<p>This won't:</p>\n\n<pre><code>var media = new Media('recording.mp3', ...);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>Better try this to take into account any HTML5 History API code that might add in history entries with directories (\"/\"):</p>\n\n<pre><code>function get_phonegap_path () {\n var path = window.location.pathname\n return path.slice(0, path.indexOf(\"/www/\") + 5)\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The <a href=\"http://stackoverflow.com/questions/11175489/ios-phonegap-media-object-how-do-i-access-a-resource-in-the-www-folder/24761627#24761627\">best answer</a> is outdated. You are now able to play <code>wav</code>, <code>mp3</code>, and <code>caf</code> formats on iOS using this \"relative path\" method:</p>\n\n<pre><code>var media = new Media('beep.wav', ...);\n</code></pre>\n\n<p>Note that the above code requires the sound file to be in the root of your <code>www/</code> directory -- in this example at <code>www/beep.wav</code>. If you want to put them in a subdiretory like <code>www/sounds/</code>, you'll need to specify it using a path relative to your <code>www/</code> directory. For example, this also works now:</p>\n\n<pre><code>var media = new Media('sounds/beep.wav', ...);\n</code></pre>\n\n<p>for the sound file at <code>www/sounds/beep.wav</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm developing an application with phonegap, and I have a sound file I want to play that's in a path like so www/Sounds/sound.mp3, and I'm trying to access this file using the Media object of Phonegap in order to play it.</p>\n\n<p>I cannot figure out the path to access this sound file within a javascript file that uses the Media object? I've tried paths like, file:///www/Sounds/sound.mp3, relative paths, etc and I cannot access it. I keep getting the following error in xcode 4</p>\n\n<pre><code>Will attempt to use file resource 'file:///www/Sounds/sound.mp3'\nUnknown resource 'file:///www/Sounds/sound.mp3'\n</code></pre>\n\n<p>What path do I need to use to access the file? Or do I need to copy the sound file out of my www directory and into my Resources folder and access it there?</p>\n\n<p>My WWW folder is referenced, not sure if that makes a difference.</p>\n",
            "last_activity_date": 1423446470,
            "question_id": 11175489,
            "score": 4,
            "tags": [
                "javascript",
                "ios",
                "xcode",
                "cordova"
            ],
            "title": "iOS Phonegap Media Object - How do I access a resource in the WWW folder?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I believe what you want to do is call the getProgress function again when it completes.</p>\n\n<p>You would do this by adding the 'complete' param to the ajax call</p>\n\n<pre><code>$.ajax({\n  //this is where your stuff already is\n  ,complete: getProgress()\n\n  //we add a timeout so it doesn't run everytime it completes, only when we want to update the progress bar.\n  ,timeout: 10000 //this is 10 seconds\n});\n</code></pre>\n\n<p>This is a method commonly referred to as 'polling'.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Instead of <code>setTimeout(GetProgress(), 3000)</code>, you would want:</p>\n\n<pre><code>function StartLoop(){\n    for (var i = 0; i &lt; 100; i++) {\n        setTimeout(GetProgress(), 3000*i);\n    }\n}\n</code></pre>\n\n<p>Otherwise, all 100 will fire off after 3 seconds.  Instead, you want 0, 3000, 6000, 9000, etc., i.e. <code>3000*i</code>;</p>\n\n<p><strong>Better</strong>, you could use <code>setInterval</code> and <code>clearInterval</code>:</p>\n\n<pre><code>var myInterval = setInterval(GetProgress(), 3000);\n</code></pre>\n\n<p>and in the callback, do:</p>\n\n<pre><code>$.ajax({\n    url: \"query.aspx/GetProgress\",\n    success: function (msg) {\n        var data = $.parseJSON(msg.d);\n        $(\"#pbrQuery\").progressbar(\"value\", data.value);\n\n        if (data.value == 100) {\n            isDone = true;\n            clearInterval(myInterval);\n        }          \n    }\n});\n</code></pre>\n\n<p><code>clearInterval</code> will stop it from calling <code>GetProgress()</code> again.  Using the <code>setInterval</code> method means you don't have to know how many poll loops you need up front.  It will simply continue until you are done.</p>\n\n<p><strong>Or better yet</strong>, you can call <code>GetProgress()</code> from the ajax callback, with the advantage that it will only poll again once you have a response from your query:</p>\n\n<pre><code>function GetProgress() {\n    $.ajax({\n        url: \"query.aspx/GetProgress\",\n        success: function (msg) {\n            var data = $.parseJSON(msg.d);\n            $(\"#pbrQuery\").progressbar(\"value\", data.value);\n\n            if (data.value == 100) {\n                isDone = true;\n            } else {\n                setTimeout(GetProgress(), 2000);\n            }\n        }\n    });\n}\n</code></pre>\n\n<p>Then just call <code>GetProgress()</code> once to initiate the loop.</p>\n",
                    "is_accepted": true,
                    "score": 14
                }
            ],
            "body": "<p>I've got a jQueryUI progressbar that should show the percentage of a query done.  Oracle has a nice system table that lets you see operations that will take more than 10 seconds.  I'm trying to make staggered $.ajax calls to this query in order to refresh the progress bar.</p>\n\n<p>Problem is, I can either get the loops to make rapid-fire requests without any wait time, or just delay the entire JavaScript from executing.</p>\n\n<p>I start the first request by clicking my \"Execute\" button in a jQueryUI dialog.</p>\n\n<pre><code>$(\"#dlgQuery\").dialog({\n    buttons: {\n        Execute: function () {\n            $(this).dialog(\"close\");\n            StartLoop();\n        }\n    }\n});\n</code></pre>\n\n<p>I'm trying to build either the <code>StartLoop()</code> function or make a recursive <code>GetProgress()</code> function.  Ideally, I will have a public variable <code>var isDone = false</code> to act as my indicator for when to terminate the loop or stop recursively calling the function.</p>\n\n<p>For simplicity I have just made a static loop that executes 100 times:</p>\n\n<pre><code>function StartLoop(){\n    for (var i = 0; i &lt; 100; i++) {\n        GetProgress();\n    }\n}\n</code></pre>\n\n<p>And here's my sample ajax request:</p>\n\n<pre><code>function GetProgress() {\n    $.ajax({\n        url: \"query.aspx/GetProgress\",\n        success: function (msg) {\n            var data = $.parseJSON(msg.d);\n            $(\"#pbrQuery\").progressbar(\"value\", data.value);\n            //recursive?\n            //GetProgress();\n\n            //if (data.value == 100) isDone = true;                \n        }\n    });\n}\n</code></pre>\n\n<p>So what I've found is, so far:</p>\n\n<p><code>setTimeout(GetProgress(), 3000)</code> in <code>StartLoop()</code> freezes Javascript, and the dialog does not close (I assume, because it will wait until the query is done).</p>\n\n<p><a href=\"http://www.sean.co.uk/a/webdesign/javascriptdelay.shtm\" rel=\"nofollow\">This</a> one, <code>pausecomp(3000)</code> does much the same thing.</p>\n\n<p>If I call either of these in the \"success\" function of my AJAX request, it gets ignored (probably because it's starting another call asynchronously).</p>\n\n<p>I'm kinda stuck here, any help would be appreciated, thanks.</p>\n",
            "last_activity_date": 1385507908,
            "question_id": 9540957,
            "score": 4,
            "tags": [
                "javascript",
                "jquery-ui",
                "jquery"
            ],
            "title": "jQuery AJAX loop to refresh jQueryUI ProgressBar"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You intuition is correct, the JavaScript that runs from a content script as part of a Chrome Extension is run in a sandbox that does not have access to the JavaScript that is executed in the containing page.</p>\n\n<p>Per the <a href=\"http://code.google.com/chrome/extensions/content_scripts.html\" rel=\"nofollow\">Chrome doc on Content Scripts</a>:</p>\n\n<pre><code>However, content scripts have some limitations. They cannot:\n*  Use chrome.* APIs (except for parts of chrome.extension)\n*  Use variables or functions defined by their extension's pages\n*  Use variables or functions defined by web pages or by other content scripts\n</code></pre>\n\n<p>First off, I would recommend that you consider different shortcut keys. Overriding the functionality of existing shortcut keys for your own extension could provide a jarring user experience for someone that is expecting the Facebook short cut key.  Imagine if an extension overrode the ctrl-c and ctrl-p shortcuts that are a part of the desktop OS for copy and paste - I think you would have some upset users that would probably remove the thing that changed the behavior they learned prior.</p>\n\n<p>However, if you are insistent, then here is a workaround to loading JavaScript that will execute in the context of the containing page:</p>\n\n<p><strong>Edit:</strong> Updated per comment to reference JS file in plugin instead of one hosted on the web</p>\n\n<p>First, you will need to create a JavaScript file in your chrome plugin: <code>override-fb-hotkeys.js</code>.</p>\n\n<p><strike>First, you will need to host a JavaScript file somewhere on the web that contains the script that you want to execute in the page, lets say you host it at: <code>http://mysite.com/override-fb-hotkeys.js</code>.</strike></p>\n\n<p>Then, from your content script, you can insert a script tag into the DOM that references your JavaScript file, something like this:</p>\n\n<pre><code>    var script = document.createElement('script');\n    script.setAttribute(\"type\", \"text/javascript\");\n    script.setAttribute(\"async\", true);\n    script.setAttribute(\"src\", chrome.extension.getURL(\"override-fb-hotkeys.js\")); //Assuming your host supports both http and https\n    var head = document.head || document.getElementsByTagName( \"head\" )[0] || document.documentElement;\n    head.insertBefore(script, head.firstChild)\n</code></pre>\n\n<p>The JavaScript will then be fetched and executed in the context of the containing page, not the sandboxed code from the Chrome plugin.</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>Chrome's Content scripts are executed in a Sandboxed environment<sup> <a href=\"http://code.google.com/chrome/extensions/content_scripts.html#execution-environment\" rel=\"nofollow\">[source]</a></sup>. There is no direct way to communicate with the global (<code>window</code>) object.</p>\n\n<p>Another common pitfall is that the developer forgets how/when the script is injected.</p>\n\n<ul>\n<li>By default, the script is injected at a point called \"<em>document_idle</em>\". At this point, the document is not busy (<code>DOMContentLoaded</code> has fired, <code>window.onload</code> may or may have not fired).</li>\n<li>As a result, the functions in the script may be overwritten immediately after declaration.</li>\n</ul>\n\n<p>To inject a small script, I recommend to add the code directly to the Content Script:</p>\n\n<pre><code>var actualCode = '/* Code here (see below for inspiration) */';\n\nvar script = document.createElement('script');\nscript.appendChild(document.createTextNode(actualCode));\n(document.head || document.documentElement).appendChild(script);\nscript.parentNode.removeChild(script);\n</code></pre>\n\n<p>If you want to make sure that the method is not going to be overwritten, you can use <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/defineProperty\" rel=\"nofollow\"><code>Object.defineProperty</code></a>, to define an immutable property:</p>\n\n<pre><code>Object.defineProperty(document.documentElement, 'onkeydown', {\n    value: function() {},\n    writable: false,     /* Cannot be overwritten, default false */\n    configurable: false, /* Cannot be deleted, or modified */\n    enumerable: true     /* Does not really matter. If true, it's visible in\n                             a for-loop. If false, it's not*/\n});\n</code></pre>\n\n<p>The previously mentioned method is supported in Firefox 4+ and at least Chrome 5+. If you want to also support Firefox 2+ and Chrome 1+, you can play with the <code>__defineSetter__</code>, to prevent <code>onkeydown</code> from being defined:</p>\n\n<pre><code>document.documentElement.__defineSetter__('onkeydown', function(){});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This is how you can do it using jQuery</p>\n\n<p>Remove all shortcuts for any webpage:</p>\n\n<pre><code>$('[accessKey]').attr('accessKey','')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have created a Chrome extension that uses the hotkeys [Alt]+[0...9] only to discover facebook uses the same hotkeys. Is there any way possible my extension could disable facebook's hotkeys so that mine fire alone? I'm fairly certain I have identified the code facebook uses to implement their [Alt]+[0...9] hotkeys:</p>\n\n<pre><code>document.documentElement.onkeydown=function(a){a=a||window.event;var b=a.target||a.srcElement;var c=a.keyCode==13&amp;&amp;!a.altKey&amp;&amp;!a.ctrlKey&amp;&amp;!a.metaKey&amp;&amp;!a.shiftKey&amp;&amp;CSS.hasClass...\n</code></pre>\n\n<p>This is in a script called from the head of the root document. I have tried the following to disable them:</p>\n\n<pre><code>//contents script:\n$().ready( function() {\n  document.documentElement.onkeydown = '';\n});\n</code></pre>\n\n<p>and even</p>\n\n<pre><code>$().ready( function() {\n  document.documentElement.onkeydown = function(e){};\n});\n</code></pre>\n\n<p>I am guessing further that the reason neither of these attempts work is because although Chrome extension content scripts share a DOM with any webpage on which they run, perhaps they do not share coding environments? Any insight would be appreciated!</p>\n",
            "last_activity_date": 1371409499,
            "question_id": 8982312,
            "score": 4,
            "tags": [
                "javascript",
                "events",
                "google-chrome-extension",
                "hotkeys",
                "onkeydown"
            ],
            "title": "How to disable facebook hotkeys with Chrome extension?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Here is a solution:</p>\n\n<pre><code>var mainMenu = $(\"#test ul.mainMenu\");\nvar i, j, k, navItem, navItemLevel1, navItemLevel2;\n\nfor(var i = 0; i &lt; menu.length; i++){\n    var navItem = menu[i];\n    var new_li = $('&lt;li class=\"main\"&gt;&lt;a href=\"' + navItem.url + '\"&gt;' + navItem.title +' &lt;/a&gt;&lt;/li&gt;');\n    mainMenu.append(new_li);\n\n        for(var j = 0; j &lt; menu[i].menu.length; j++){\n            var new_li_ul = $('ul.submenuLevel1', new_li);\n            if(new_li_ul.length &lt;= 0){\n                new_li_ul  = $('&lt;ul class=\"submenuLevel1\"&gt;&lt;/ul&gt;');\n                new_li.append(new_li_ul);\n            } \n            var navItemLevel1 = navItem.menu[j];\n            var new_li_li = $('&lt;li class=\"level1\"&gt;&lt;a href=\"' + navItemLevel1.url + '\"&gt;' + navItemLevel1.title +' &lt;/a&gt;&lt;/li&gt;');\n            new_li_ul.append(new_li_li);\n\n                for(var k = 0; k &lt; menu[i].menu[j].menu.length; k++){\n                    var new_li_ul_ul = $('ul.submenuLevel2', new_li_li);\n                    if(new_li_ul_ul.length &lt;= 0){\n                        new_li_ul_ul = $('&lt;ul class=\"submenuLevel2\"&gt;&lt;/ul&gt;');\n                        new_li_li.append(new_li_ul_ul);\n                    } \n                    var navItemLevel2 = navItemLevel1.menu[k];\n                    new_li_ul_ul.append('&lt;li class=\"level2\"&gt;&lt;a href=\"' + navItemLevel2.url + '\"&gt;' + navItemLevel2.title +' &lt;/a&gt;&lt;/li&gt;');\n                }\n        }\n};\n</code></pre>\n\n<p>Here is a fiddle: <a href=\"http://jsfiddle.net/maniator/6JnuG/3/\" rel=\"nofollow\">http://jsfiddle.net/maniator/6JnuG/3/</a></p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>Most of what you make is dynamic so start with something like this</p>\n\n<pre><code>&lt;div id=\"test\"&gt;\n    &lt;ul class=\"mainMenu\"&gt;\n    &lt;/ul&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Then in your code use the things you just made and add to them.  Something like this:</p>\n\n<pre><code>for(var i = 0; i &lt; menu.length; i++){\n    var navItem = menu[i];\n    subMenuL1 = mainMenu.append('&lt;li class=\"main\"&gt;&lt;a href=\"' + navItem.url + '\"&gt;' + navItem.title +' &lt;/a&gt;&lt;/li&gt;');\n\n        for(var j = 0; j &lt; menu[i].menu.length; j++){\n            var navItemLevel1 = navItem.menu[j];\n            subMenuL2 = subMenuL1.append('&lt;li class=\"level1\"&gt;&lt;a href=\"' + navItemLevel1.url + '\"&gt;' + navItemLevel1.title +' &lt;/a&gt;&lt;/li&gt;');\n\n                for(var k = 0; k &lt; menu[i].menu[j].menu.length; k++){\n                    var navItemLevel2 = navItemLevel1.menu[k];\n                    subMenuL2.append('&lt;li class=\"level2\"&gt;&lt;a href=\"' + navItemLevel2.url + '\"&gt;' + navItemLevel2.title +' &lt;/a&gt;&lt;/li&gt;');\n                }\n        }\n};\n</code></pre>\n\n<p>Note: I did not test at all... just looked at the example code and made a few changes to get you in the right direction.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here's a nicer solution:</p>\n\n<pre><code>var Menu = function(data) {\n    this.data = data; \n};\n\nMenu.prototype.render = function(root) {\n    var ul = $(\"&lt;ul&gt;&lt;/ul&gt;\");\n    var li = $(\"&lt;li&gt;&lt;/li&gt;\");\n    li.append($(\"&lt;a&gt;&lt;/a&gt;\", {\n        href: this.data.url,\n        text: this.data.title\n    })).appendTo(ul);\n    ul.appendTo(root);\n    if (this.data.menu) {\n        Menu.renderMenus(this.data.menu, $(\"&lt;li&gt;&lt;/li&gt;\").appendTo(ul));\n    }\n};\n\nMenu.renderMenus = function(menus, root) {\n    $.each(menus, function(key, val) {\n        var m = new Menu(val);\n        m.render(root);\n    });\n}\n\nMenu.renderMenus(menu, $(\"#container\"));\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/Raynos/juane/13/\">Live example</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can use a recursive function for appending submenus.</p>\n\n<p>This is a simple solution for three sublevels or more</p>\n\n<pre><code>function appendMeu(parent, menu, level) {\n    for(var i = 0;i &lt; menu.length; i ++) {\n        var submenu = parent.append('&lt;li&gt;' + menu[i].title + '&lt;/li&gt;')\n            .find(\"li:last\");\n\n        if(menu[i].menu != undefined &amp;&amp; menu[i].menu.length &gt; 0) {\n            submenu = submenu.append('&lt;ul class=\"submenuLevel' + (level + 1) + '\"&gt;&lt;/ul&gt;').find(\"ul\");\n            appendMeu(submenu, menu[i].menu, level + 1);\n        }\n    }\n}\n\n$(function() {\n    appendMeu($(\".mainMenu\"), menu, 0);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's how to do this with the <a href=\"http://api.jquery.com/tmpl\" rel=\"nofollow\">jQuery template plugin </a> I mentioned </p>\n\n<p>This would be in your script tag:</p>\n\n<pre><code>$(function () {\n    $('#t_menu').tmpl(menu).appendTo('#test');\n});\n</code></pre>\n\n<p>And this in your html :</p>\n\n<pre><code>&lt;div id=\"test\"&gt;  &lt;/div&gt; \n\n&lt;script id=\"t_menu\" type=\"text/html\"&gt;\n   &lt;ul class=\"mainMenu\"&gt;\n   {{each menu}} \n        &lt;li class=\"main\"&gt;\n            &lt;a href=\"${url}\"&gt;${title}&lt;/a&gt;            \n            &lt;ul class=\"submenuLevel1\"&gt;\n            {{each menu}}\n                &lt;li class=\"level1\"&gt;                    \n                    &lt;a href=\"${url}\"&gt;${title}&lt;/a&gt;            \n                    &lt;ul class=\"submenuLevel2\"&gt;\n                    {{each menu}}\n                        &lt;li class=\"level2\"&gt;\n                            &lt;a href=\"${url}\"&gt;${title}&lt;/a&gt;\n                        &lt;/li&gt;\n                    {{/each}}\n                    &lt;/ul&gt;                \n                &lt;/li&gt;\n            {{/each}}\n            &lt;/ul&gt;        \n        &lt;/li&gt;    \n    {{/each}}\n    &lt;/ul&gt;\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to create a nested UL from JSON. I am able to loop through and grab the data from the object, but I am having trouble building the nested UL. I figure the '.append' method is placed in the wrong spot. The resulting LIs are all grouped together. How do I create a loop (or another way is fine too) that will build the UL with the submenu LIs properly nested?  I've tried using other similar posts to solve my issue, but I can't seem to make it make sense with my data and code. A little braindead from this - I've tried a few methods to create this dynamic list and so far none has been successful. Any help would be appreciated :)</p>\n\n<p>My JSON data is nested 3 levels deep. I need to create a menu with submenus from it....</p>\n\n<p>The data:       </p>\n\n<pre><code>var menu = \n[\n    {\n        title: \"Best Known For\",\n        menuCaption: \"Best Known For Caption\",\n        url: \"/best-known-for\",\n        menu: [\n                {\n                    title: \"Acting\",\n                    menuCaption: \"Acting\",\n                    url: \"\",\n                    menu: [\n                            {\n                                title: \"Stage\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Screen\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Acting Three\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Acting Four\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Acting Five\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Acting Six\",\n                                url: \"/\"\n                            }       \n                    ]\n                },\n                {\n                    title: \"Singing\",\n                    menuCaption: \"Singing\",\n                    url: \"\",\n                    menu: [\n                            {\n                                title: \"Jazz\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Pop\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Rock\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Latin\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Singing Five\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Singing Six\",\n                                url: \"/\"\n                            }       \n                    ]\n                },\n                {\n                    title: \"Directing\",\n                    menuCaption: \"Directing\",\n                    url: \"\",\n                    menu: [\n                            {\n                                title: \"Television\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Stage\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Screen\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Award Winners\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Directing Five\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Directing Six\",\n                                url: \"/\"\n                            }       \n                    ]\n                },\n                {\n                    title: \"Politics\",\n                    menuCaption: \"Politics\",\n                    url: \"\",\n                    menu: [\n                            {\n                                title: \"Presidents\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Senators\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"House Of Representatives\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Governors\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Mayors\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Other Notables in Government\",\n                                url: \"/\"\n                            }       \n                    ]\n                }\n        ]\n    },{\n        title: \"Life Events\",\n        menuCaption: \"Choose a life Event\",\n        url: \"/life-events\",\n        menu: [\n                {\n                    title: \"Arrested\",\n                    menuCaption: \"Arrested\",\n                    url: \"\",\n                    menu: [\n                            {\n                                title: \"Drug Possession\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Prostitution\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Tax Evasion\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Murder\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Rape\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Grand Theft\",\n                                url: \"/\"\n                            }       \n                    ]\n                },\n                {\n                    title: \"Awards\",\n                    menuCaption: \"Awards\",\n                    url: \"\",\n                    menu: [\n                            {\n                                title: \"Academy Award\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Tony\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"People's Choice\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Emmy\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Sag Award\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Lifetime Achievement\",\n                                url: \"/\"\n                            }       \n                    ]\n                },\n                {\n                    title: \"Charity Work\",\n                    menuCaption: \"Charity Work\",\n                    url: \"\",\n                    menu: [\n                            {\n                                title: \"HIV/Aids\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Cerebral Palsy\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Spinal Cord Injury\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Breast Cancer\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Homelessness\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Orphans\",\n                                url: \"/\"\n                            }       \n                    ]\n                },\n                {\n                    title: \"Crime Victim\",\n                    menuCaption: \"Crime Victim\",\n                    url: \"\",\n                    menu: [\n                            {\n                                title: \"Rape\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Murder\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Home Invasion\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Assault\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Identity Fraud\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Some Other Crime\",\n                                url: \"/\"\n                            }       \n                    ]\n                },\n                {\n                    title: \"Death\",\n                    menuCaption: \"Death\",\n                    url: \"\",\n                    menu: [\n                            {\n                                title: \"Suicide\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Homocide\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Cancer\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Accident\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Heart Attack\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Stroke\",\n                                url: \"/\"\n                            }       \n                    ]\n                },\n                {\n                    title: \"Disappeared\",\n                    menuCaption: \"Disappeared\",\n                    url: \"\",\n                    menu: [\n                            {\n                                title: \"Disappeared One\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Disappeared Two\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Disappeared Three\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Disappeared Four\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Disappeared Five\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Disappeared Six\",\n                                url: \"/\"\n                            }       \n                    ]\n                },\n                {\n                    title: \"Discovery\",\n                    menuCaption: \"Discovery\",\n                    url: \"\",\n                    menu: [\n                            {\n                                title: \"New Land\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"New Medicine\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"New Species\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"New Planet\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"New Star\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"New Something Else\",\n                                url: \"/\"\n                            }       \n                    ]\n                },\n                {\n                    title: \"Divorced\",\n                    menuCaption: \"Divorced\",\n                    url: \"\",\n                    menu: [\n                            {\n                                title: \"Divorced One\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Divorced Two\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Divorced Three\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Divorced Four\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Divorced Five\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Divorced Six\",\n                                url: \"/\"\n                            }       \n                    ]\n                },\n                {\n                    title: \"Fame\",\n                    menuCaption: \"Fame\",\n                    url: \"\",\n                    menu: [\n                            {\n                                title: \"Singing\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Dancing\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Acting\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Politics\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Activist\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Infamous\",\n                                url: \"/\"\n                            }       \n                    ]\n                },\n                {\n                    title: \"Heroic Act\",\n                    menuCaption: \"Heroic Act\",\n                    url: \"\",\n                    menu: [\n                            {\n                                title: \"Heroic Act One\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Heroic Act Two\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Heroic Act Three\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Heroic Act Four\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Heroic Act Five\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Heroic Act Six\",\n                                url: \"/\"\n                            }       \n                    ]\n                },\n                {\n                    title: \"Illness\",\n                    menuCaption: \"Illness\",\n                    url: \"\",\n                    menu: [\n                            {\n                                title: \"Cancer\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"HIV/Aids\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Schizophrenia\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"OCD\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Anorexia/Bulimia\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Multiple Sclerosis\",\n                                url: \"/\"\n                            }       \n                    ]\n                },\n                {\n                    title: \"Incarcerated\",\n                    menuCaption: \"Incarcerated\",\n                    url: \"\",\n                    menu: [\n                            {\n                                title: \"Incarcerated One\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Incarcerated Two\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Incarcerated Three\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Incarcerated Four\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Incarcerated Five\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Incarcerated Six\",\n                                url: \"/\"\n                            }       \n                    ]\n                },\n                {\n                    title: \"Killed\",\n                    menuCaption: \"Killed\",\n                    url: \"\",\n                    menu: [\n                            {\n                                title: \"Shot\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Stabbed\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Beaten\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Suicide\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Strangled\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Accident\",\n                                url: \"/\"\n                            }       \n                    ]\n                },\n                {\n                    title: \"Kidnapped\",\n                    menuCaption: \"Kidnapped\",\n                    url: \"\",\n                    menu: [\n                            {\n                                title: \"Kidnapped One\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Kidnapped Two\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Kidnapped Three\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Kidnapped Four\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Kidnapped Five\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Kidnapped Six\",\n                                url: \"/\"\n                            }       \n                    ]\n                },\n                {\n                    title: \"Military Service\",\n                    menuCaption: \"Military Service\",\n                    url: \"\",\n                    menu: [\n                            {\n                                title: \"Army\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Navy\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Air Force\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Marines\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"National Guard\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Coast Guard\",\n                                url: \"/\"\n                            }       \n                    ]\n                },\n                {\n                    title: \"Parenthood\",\n                    menuCaption: \"Parenthood\",\n                    url: \"\",\n                    menu: [\n                            {\n                                title: \"Adoption\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Surrogacy\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Multiples/Twins\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Mothers\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Fathers\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Odd Baby Names\",\n                                url: \"/\"\n                            }       \n                    ]\n                },\n                {\n                    title: \"Product Launch\",\n                    menuCaption: \"Product Launch\",\n                    url: \"\",\n                    menu: [\n                            {\n                                title: \"Fashion\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Food\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Technology\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Automotive\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Architecture\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Product Launch Six\",\n                                url: \"/\"\n                            }       \n                    ]\n                },\n                {\n                    title: \"Scandal\",\n                    menuCaption: \"Scandal\",\n                    url: \"\",\n                    menu: [\n                            {\n                                title: \"Sex Tape\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Domestic Violence\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Fraud\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Drug Abuse\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Adultery\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Arrested\",\n                                url: \"/\"\n                            }       \n                    ]\n                },\n                {\n                    title: \"Wealth\",\n                    menuCaption: \"Wealth\",\n                    url: \"\",\n                    menu: [\n                            {\n                                title: \"Top 10 List\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Richest Women\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Richest Men\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Billionaires\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Self Made\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Lottery Winners\",\n                                url: \"/\"\n                            }       \n                    ]\n                },\n                {\n                    title: \"World Record\",\n                    menuCaption: \"World Record\",\n                    url: \"\",\n                    menu: [\n                            {\n                                title: \"Tallest\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Shortest\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Oldest\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"Fastest\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"World Record Five\",\n                                url: \"/\"\n                            },       \n                            {\n                                title: \"World Record Six\",\n                                url: \"/\"\n                            }       \n                    ]\n                }\n        ]\n    },\n\n\n\n\n    {\n        title: \"Date\",\n        menuCaption: \"Date\",\n        url: \"/date\",\n        menu: []\n    },\n\n\n\n    {\n        title: \"Industry\",\n        menuCaption: \"Industry\",\n        url: \"/industry\",\n        menu: []\n    },\n\n\n\n    {\n        title: \"Nationality\",\n        menuCaption: \"Nationality\",\n        url: \"/nationality\",\n        menu: []\n    }\n\n\n\n\n];\n</code></pre>\n\n<p>I build the loop to access all of the nested menu data:</p>\n\n<pre><code>var mainMenu = $(\"#test ul.mainMenu\");\nvar subMenuL1 = $(\"#test ul.mainMenu ul.submenuLevel1\");\nvar subMenuL2 = $(\"#test ul.mainMenu ul.submenuLevel1 ul.submenuLevel2\");\nvar i, j, k, navItem, navItemLevel1, navItemLevel2;\n\n\n\nfor(var i = 0; i &lt; menu.length; i++){\n    var navItem = menu[i];\n    mainMenu.append('&lt;li class=\"main\"&gt;&lt;a href=\"' + navItem.url + '\"&gt;' + navItem.title +' &lt;/a&gt;&lt;/li&gt;');\n\n        for(var j = 0; j &lt; menu[i].menu.length; j++){\n            var navItemLevel1 = navItem.menu[j];\n            subMenuL1.append('&lt;li class=\"level1\"&gt;&lt;a href=\"' + navItemLevel1.url + '\"&gt;' + navItemLevel1.title +' &lt;/a&gt;&lt;/li&gt;');\n\n                for(var k = 0; k &lt; menu[i].menu[j].menu.length; k++){\n                    var navItemLevel2 = navItemLevel1.menu[k];\n                    subMenuL2.append('&lt;li class=\"level2\"&gt;&lt;a href=\"' + navItemLevel2.url + '\"&gt;' + navItemLevel2.title +' &lt;/a&gt;&lt;/li&gt;');\n                }\n        }\n};\n</code></pre>\n\n<p>The HTML container:</p>\n\n<pre><code>&lt;div id=\"test\"&gt;\n    &lt;ul class=\"mainMenu\"&gt;\n        &lt;li&gt;\n            &lt;ul class=\"submenuLevel1\"&gt;\n                &lt;li&gt;\n                    &lt;ul class=\"submenuLevel2\"&gt;\n                        &lt;li&gt;&lt;/li&gt;\n                    &lt;/ul&gt;\n                &lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/div&gt;\n</code></pre>\n",
            "last_activity_date": 1305657372,
            "question_id": 6034960,
            "score": 4,
            "tags": [
                "javascript",
                "jquery",
                "json",
                "nested",
                "html-lists"
            ],
            "title": "Create nested UL lists from data object"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>It's not a best way, because very often JS aren't supported by mobile browsers.  </p>\n\n<p>You can use this function:</p>\n\n<pre><code>function its_mobile_browser($user_agent = '')\n{\n    if (empty($user_agent))\n    {\n        $user_agent = $_SERVER['HTTP_USER_AGENT'];\n        if (empty($user_agent)) return false;\n    }\n\n    if (stripos($user_agent, 'Explorer')!==false ||\n        stripos($user_agent, 'Windows')!==false ||\n        stripos($user_agent, 'Win NT')!==false ||\n        stripos($user_agent, 'FireFox')!==false ||\n        stripos($user_agent, 'linux')!==false ||\n        stripos($user_agent, 'unix')!==false ||\n        stripos($user_agent, 'Macintosh')!==false\n    )\n    {\n        if (!(stripos($user_agent, 'Opera Mini')!==false\n              || stripos($user_agent, 'WAP')!==false\n              || stripos($user_agent, 'Mobile')!==false\n              || stripos($user_agent, 'Symbian')!==false\n              || stripos($user_agent, 'NetFront')!==false\n              || stripos($user_agent, ' PPC')!==false\n              || stripos($user_agent, 'iPhone')!==false\n              || stripos($user_agent, 'Android')!==false\n              || stripos($user_agent, 'Nokia')!==false\n              || stripos($user_agent, 'Samsung')!==false\n              || stripos($user_agent, 'SonyEricsson')!==false\n              || stripos($user_agent, 'LG')!==false\n              || stripos($user_agent, 'Obigo')!==false\n              || stripos($user_agent, 'SEC-SGHX')!==false\n              || stripos($user_agent, 'Fly')!==false\n              || stripos($user_agent, 'MOT-')!==false\n              || stripos($user_agent, 'Motorola')!==false\n        )\n        ) return false;\n    }\n\n    return true;\n}\n</code></pre>\n\n<p>Or something better, lol :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can add a query string parameter to your website address such as <code>?fullsite=true</code> and include the following in your if condition ></p>\n\n<pre><code>var fullsite = getQueryString()[\"fullsite\"];\nif (fullsite != \"true\" &amp;&amp; (screen.height &lt;= xyz || screen.width &lt;= abc)) //now redirect\n</code></pre>\n\n<p>You'll need the following function access query string. I took it from here > <a href=\"http://stackoverflow.com/questions/647259/javascript-query-string\">JavaScript query string</a></p>\n\n<pre><code>function getQueryString() {\n  var result = {}, queryString = location.search.substring(1),\n      re = /([^&amp;=]+)=([^&amp;]*)/g, m;\n\n  while (m = re.exec(queryString)) {\n    result[decodeURIComponent(m[1])] = decodeURIComponent(m[2]);\n  }\n\n  return result;\n}\n</code></pre>\n\n<p>And in the link you can have ></p>\n\n<p><code>&lt;a href=\"mysite.com?fullsite=true\"&gt; Show me Full Site &lt;/a&gt;</code></p>\n\n<p>===========</p>\n\n<p>Saying that please take a look at CSS Media Queries. It may require changing a bit of your design architecture but it's pretty useful.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use PHP to detect mobile users through <code>$_SERVER['HTTP_USER_AGENT']</code>.\nJavaScript detection may not be reliable, because many mobile browsers do not support JS.\nA \"View Full Site\" will set a cookie to reject mobile site, which is detectable.\nUse cookies to keep track of your user's preferences.</p>\n\n<p>In skeleton</p>\n\n<pre><code>&lt;?php\n\nif (isset($_COOKIE['nomobile'])) {\n  $style = \"normal\";\n} else {\n\nif (preg_match('/iPhone|(...etc...)/', $_SERVER['HTTP_USER_AGENT'])) {\n   $style = \"mobile\";\n} else {\n   $style = \"normal\";\n}\n\n}\n</code></pre>\n\n<p>For the \"View Full Site\" page:</p>\n\n<pre><code>&lt;a href=\"fullsite.php\"&gt;Full Site&lt;/a&gt;\n</code></pre>\n\n<p><code>fullsite.php</code></p>\n\n<pre><code>&lt;?php\n   setcookie('nomobile', 'true');\n   header('Location: index.php');\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Server-side detection is definitely the way to do this, as you have no guarantee of JS being available or even turned on. A great PHP script for mobile detection is found here <a href=\"http://detectmobilebrowsers.mobi/\" rel=\"nofollow\">http://detectmobilebrowsers.mobi/</a> and it gets a lot of use around the web.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>First, go to the following URL and download the mobile_detect.php file:</p>\n\n<p><a href=\"http://code.google.com/p/php-mobile-detect/\" rel=\"nofollow\">http://code.google.com/p/php-mobile-detect/</a></p>\n\n<p>Next, follow the instructions on the page, and upload the mobile_detect.php to your root directory,\nInsert the following code on your index or home page:</p>\n\n<pre><code>    &lt;?php\n    @include(\"Mobile_Detect.php\");\n    $detect = new Mobile_Detect();\n    if ($detect-&gt;isMobile() &amp;&amp; isset($_COOKIE['mobile']))\n    {\n    $detect = \"false\";\n    }\n    elseif ($detect-&gt;isMobile())\n    {\n    header(\"Location:http://www.yourmobiledirectory.com\");\n    }\n    ?&gt;\n</code></pre>\n\n<p>You will notice that the above code is checking for a cookie called \"mobile\", this cookie is set when the mobile device is redirected to the mobile page.  To set the cookie insert the following code on your mobile landing page:</p>\n\n<pre><code>    &lt;?php\n    setcookie(\"mobile\",\"m\", time()+3600, \"/\");\n    ?&gt;\n</code></pre>\n\n<p>View the full article at:  <a href=\"http://www.squidoo.com/php-mobile-redirect\" rel=\"nofollow\">http://www.squidoo.com/php-mobile-redirect</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>So I'm working on the mobile version of a site I'm doing, and \nso far, I'm pulling the mobile sites content from its main counterpart, the main site.</p>\n\n<p>As I study some mobile sites out there, I notice a lot of em have a \"view full site\" link.</p>\n\n<p>Now I plan on redirecting the mobile visitors via .js in the header tag on main site via a check for screen width etc...(not sure if its the best way but so far the easiest on my brain))(but suggestions also welcome)\nbut something like this</p>\n\n<pre><code>if (screen.width&lt;=XyZ||screen.height&lt;=XyZ) //example iphone size lets say 320x480\nwindow.location.replace(\"mobile site link here.\")\n</code></pre>\n\n<p>Again I dont know if this is the best way but, on dummy tests, it works on iPhone, some friends Droids, and one Blackberry. But it works.</p>\n\n<p>Anyways, so my question is, if i do this check on every page...how can I possible have a \"view full site\" option?</p>\n",
            "last_activity_date": 1333138189,
            "question_id": 5844966,
            "score": 4,
            "tags": [
                "php",
                "javascript",
                "mobile"
            ],
            "title": "&quot;VIEW FULL SITE&quot; mobile site option"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Don't create closures in loops. <a href=\"https://developer.mozilla.org/en/JavaScript/Guide/Closures#Creating_closures_in_loops%3a_A_common_mistake\" rel=\"nofollow\">That just won't work</a>. This might be a solution for the problem:</p>\n\n<pre><code>  function callback() {\n    return function(results, status) {\n      if (status == google.maps.GeocoderStatus.OK) {\n        addMarker(map, item, results[0].geometry.location);\n      } else {\n        console.log(\"Geocode failed \" + status);\n      }\n    };\n  }\n\n  for (var item in list) {\n    var geocoder = new google.maps.Geocoder();\n    var geoOptions = {\n      address: item.location,\n      bounds: bounds,\n      region: \"NO\"\n    };\n    geocoder.geocode(geoOptions, callback());\n  }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>I'm completely puzzled here. I have a list of objects each containing a location. I look up this location using the google.maps.geocoder and afterwards I put a marker for that location on a map.</p>\n\n<p>But for some reason only one marker appears. I guess this has to do with the closures problem I've seen in other threads around here but I just can't seem to apply the solution to what I have.</p>\n\n<p>My code is as follows:</p>\n\n<pre><code>var map = new google.maps.Map(document.getElementById(\"map_canvas\"), myOptions);\n  map.fitBounds(bounds);\n\n  for (var item in list) {\n    var geocoder = new google.maps.Geocoder();\n    var geoOptions = {\n      address: item.location,\n      bounds: bounds,\n      region: \"NO\"\n    };\n    geocoder.geocode(geoOptions, function(results, status) {\n      if (status == google.maps.GeocoderStatus.OK) {\n        addMarker(map, item, results[0].geometry.location);\n      } else {\n        console.log(\"Geocode failed \" + status);\n      }\n    });\n  }\n\nfunction addMarker(map, item, location) {\n  var marker = new google.maps.Marker({ map : map, position : location});\n  marker.setTitle(item.title);\n  var infowindow = new google.maps.InfoWindow( {\n    content : item.body,\n    size : new google.maps.Size(100, 300)\n  });\n  (function(map, marker) {\n    new google.maps.event.addListener(marker, \"click\", function() {\n      infowindow.open(map, marker);\n    });\n    })(map, marker);\n  }\n</code></pre>\n\n<p>Any help is appreciated.</p>\n\n<p><strong>Update:</strong> To avoid closures in loops as suggested in first answer, I have changed the code to this:</p>\n\n<pre><code>//This is the entry\nfunction codeLocations(list, map) {\n  for (var i = 0; i &lt; list.length; i++) {\n    console.log(\"Looping \" + list[i].location);\n    var geocoder = new google.maps.Geocoder();\n    var geoOptions = {\n      address: list[i].location,\n      bounds: getBounds(),\n      region: \"NO\"\n    };\n    geocoder.geocode(geoOptions, createGeocodeCallback(list[i], map));\n  }\n}\n\nfunction createGeocodeCallback(item, map) {\n  console.log(\"Generating geocode callback for \" + item.location);\n  return function(results, status) {\n    if (status == google.maps.GeocoderStatus.OK) {\n      console.log(\"Geocoding \" + item.location + \" OK\");\n      addMarker(map, item, results[0].geometry.location);\n    } else {\n      console.log(\"Geocode failed \" + status);\n    }\n  }\n}\n\nfunction addMarker(map, item, location) {\n  console.log(\"Setting marker for \" + item.location + \" (location: \" + location + \")\");\n  var marker = new google.maps.Marker({ map : map, position : location});\n  marker.setTitle(item.title);\n  var infowindow = new google.maps.InfoWindow( {\n    content : item.body,\n    size : new google.maps.Size(100, 300)\n  });\n  new google.maps.event.addListener(marker, \"click\", function() {\n    infowindow.open(map, marker);\n  });\n}\n</code></pre>\n\n<p>According to the log statements, I now have the correct objects at the correct places, meaning the item and location objects are different for every time the marker is set, but I still only get one marker on my map. How can this be?</p>\n",
            "last_activity_date": 1340054566,
            "question_id": 4112893,
            "score": 4,
            "tags": [
                "javascript",
                "google-maps",
                "google-maps-markers"
            ],
            "title": "Google Maps geocoding and markers in loop"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><a href=\"http://code.stanziq.com/strophe/\">strophe.js</a> is a powerful and widely used XMPP library for JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>As Joschi pointed out strophe is a very good javascript library. But you need a <a href=\"http://metajack.im/2008/09/08/which-bosh-server-do-you-need/\">BOSH manager</a> to connect from javascript to XMPP. You could use a standalone manager like for example punjab.</p>\n\n<p>If you can not run a BOSH manager then you could also connect to XMPP via flash without BOSH.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>I recommend using strophe.js. For communicating directly with a different server and bypassing the same origin policy of javascript you could use strophe with flxhr plugin, which is a neat flash based workaround. So no connection manager setup (webserver proxy to  punjab and so on) is required on your server.</p>\n\n<p>I also recommend the book \"Professional XMPP Programming with JavaScript and jQuery\". It comes with a whole lot of sample <a href=\"http://www.wrox.com/WileyCDA/WroxTitle/productCd-0470540710,descCd-DOWNLOAD.html\">javascript/html applications code</a>. </p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>So facebook is opening its chat servers to us... great. I am new to XMPP, so what would be the best JS library to connect to their servers? </p>\n\n<p>I googled for a tutorial article, but found nothing. Can someone direct me to one?</p>\n",
            "last_activity_date": 1288862458,
            "question_id": 3598900,
            "score": 4,
            "tags": [
                "javascript",
                "facebook",
                "chat",
                "xmpp"
            ],
            "title": "XMPP library for facebook chat"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You could still use <code>$.debounce</code> like so:</p>\n\n<pre><code>// create new scope\n(function() {\n     // create debounced function\n     var dprocess = $.debounce(process, 5000);\n\n     // bind event handler\n     $('#myButton').click(function() {\n         // do a date calculation\n         // show user changes to screen\n         // call the function\n         dprocess();\n     });\n}());\n</code></pre>\n\n<p>Alternative without <code>$.debounce</code> (you can always debounce your code this way, without jQuery):</p>\n\n<pre><code>// create new scope\n(function() {\n     var timer;\n\n     // bind event handler\n     $('#myButton').click(function() {\n         if(timer) {\n             clearTimeout(timer);\n         }\n         // do a date calculation\n         // show user changes to screen\n         // call the function\n         timer = setTimeout(process, 5000);\n     });\n}());\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Why not just use <code>setTimeOut(function() { process(); }, 5000);</code></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<pre><code> var timer;\n $('#myButton').click(function() {\n     //Called every time #myButton is clicked         \n     if(timer) clearTimeout(timer);\n     timer = setTimeout(process, 5000);\n });\n\nfunction process(){\n  //Called 5000ms after #myButton was last clicked \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Debounce using native/vanilla JS and jquery/underscore.js.</p>\n\n<h2><a href=\"http://jsfiddle.net/nzC8P/1/\" rel=\"nofollow\">Example</a></h2>\n\n<p><strong>JS</strong></p>\n\n<pre><code>//Native/Vanilla JS\ndocument.getElementById('dvClickMe').onclick = debounce(function(){\n    alert('clicked - native debounce'); \n}, 250);\n\n\nfunction debounce(fun, mil){\n    var timer; \n    return function(){\n        clearTimeout(timer); \n        timer = setTimeout(function(){\n            fun(); \n        }, mil); \n    };\n}\n\n//jQuery/Underscore.js\n$('#dvClickMe2').click(_.debounce(function(){\n    alert('clicked - framework debounce'); \n}, 250)); \n</code></pre>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;div id='dvClickMe'&gt;Click me fast! Native&lt;/div&gt;\n&lt;div id='dvClickMe2'&gt;Click me fast! jQuery + Underscore&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I want to add a debounce (throttle) to a button, but i want to perform some actions each time user clicks button, but only after 5 second after user hits button, then perform SQL update.  Usually the throttle seems to be applied directly to the listener.  Here I want some actions performed each time the button is clicked, and then an update after a reasonable waiting period.</p>\n\n<p>I am not sure how to use the function in this case...</p>\n\n<p>reference: <a href=\"http://code.google.com/p/jquery-debounce/\" rel=\"nofollow\">http://code.google.com/p/jquery-debounce/</a></p>\n\n<pre><code>$('#myButton').click(function() {\n    // do a date calculation\n    // show user changes to screen\n    // wait until user has has stopped clicking the \n             // button for 5 seconds, then update file with \"process\" function.\n\n});\n\nfunction process(){\n    // update database table\n}\n</code></pre>\n\n<h2>debounce  syntax</h2>\n\n<pre><code>$('input').bind('keyup blur', $.debounce(process, 5000));\n</code></pre>\n",
            "last_activity_date": 1370518811,
            "question_id": 8055923,
            "score": 3,
            "tags": [
                "javascript",
                "jquery",
                "throttle"
            ],
            "title": "javascript/jquery - add debounce (throttle) to a button"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The usual solution is to have a \"AJAX proxy\" - a simple server-side script running on your domain, that fetches the data from the other domain and returns it unchanged.</p>\n\n<p>The simplist is to give the script the URL you need the data from:</p>\n\n<p><code>http://example.com/proxy.php?url=http%3A%2F%2Fexample.org%2Fajax%3Fid%3D123</code> gets the data from <code>http://example.org/ajax?id=123</code></p>\n\n<p>This can however be misused if you let any URL be fetched like that, so you should have your script, check that it actually only gets data from a specific URL.</p>\n\n<p>In order to avoid having to parse the URL to check this, you could write a proxy specificly for your app, that only accesses the specific resource you need:</p>\n\n<p><code>http://example.com/proxy.php?id=123</code> to access <code>http://example.org/ajax?id=123</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you have a JSON-P solution in place, you can just pass the XML to the JSON-P callback as a string.  You can then do <a href=\"http://stackoverflow.com/questions/649614/xml-parsing-in-javascript\">XML parsing in Javascript</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can totally do this, just have your domain B return something like</p>\n\n<pre><code>func(\"&lt;myxml&gt;&lt;/myxml&gt;\");\n</code></pre>\n\n<p>or</p>\n\n<pre><code>var someVar = \"&lt;myxml&gt;&lt;/myxml&gt;\";\n</code></pre>\n\n<p>The name <strong>JSONP</strong> doesn't really have anything to do with JSON specifically since its concept is all about executing JavaScript that has your data embedded in the code.</p>\n\n<p>Once your domain B returns exactly one of those 2 forms above, domain A can simply use it either by doing:</p>\n\n<pre><code>&lt;script&gt;\nfunction func(xmlString) {\n    alert(xmlString); // you can parse the xmlString with \n                      // jQuery or something else\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>or if you use the second example:</p>\n\n<pre><code>&lt;script&gt;\nalert(someVar);\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>The whole idea with JSONP is that the response must be <em>executable as script</em>. So sure, you can pass XML data back, as long as it's valid Javascript - for example, the server could wrap its response in a string:</p>\n\n<pre><code>myCallback('&lt;xml&gt;&lt;stuff/&gt;&lt;/xml&gt;')\n</code></pre>\n\n<p>and you'd have to parse it with jQuery:</p>\n\n<pre><code>success: function(data) { \n    var xml = $(data); // now do stuff \n}\n</code></pre>\n\n<p>This assumes that you control the other server and/or someone who does is interested in formatting their data that way. Otherwise, you're out of luck, and need a proxy of some sort - you might be able to <a href=\"http://james.padolsey.com/javascript/cross-domain-requests-with-jquery/\" rel=\"nofollow\">do this with YQL</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>in my JS project I need to load data from cross-domain. (JavaScript sits on domain A, the data comes from domain B)</p>\n\n<p>I have a solution that uses <a href=\"http://en.wikipedia.org/wiki/JSONP\" rel=\"nofollow\">JSONP</a> but I really need to load an XML instead (ordinary XML music playlist). The main goal is to be able to load and parse the XML data without the need to modify them first to some other format (like JSONP).</p>\n\n<p><strong>Is it completely impossible? Or are there any workarounds or hacks?</strong></p>\n\n<p>I am targeting mainly the latest browsers mainly on iOS.</p>\n\n<p>Thanks!</p>\n\n<p>PS: Could <a href=\"http://easyxdm.net/\" rel=\"nofollow\">easyXDM</a> be of any help? Or it's not relevant to XMLs?</p>\n\n<p><em>UPDATE: unfortunately I can not use proxy, I am really asking about a direct solution.</em> </p>\n",
            "last_activity_date": 1317765393,
            "question_id": 5578890,
            "score": 3,
            "tags": [
                "javascript",
                "xml",
                "json",
                "cross-domain",
                "jsonp"
            ],
            "title": "JavaScript, JSONP and reading XML from cross-domain"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Here is a start:</p>\n\n<pre><code>$(document).ready(\n  function(){\n\n    var count=0;\n    $('div.facet ul li').each(\n      function(){\n        if(++count == 7){\n          $(this).parent().append('&lt;li&gt;&lt;a href=\"\"&gt;Click here for more...&lt;/a&gt;&lt;/li&gt;');\n        }\n        else if(count &gt; 7){\n          $(this).css('display','none');\n        }\n      }\n    );\n\n  }\n);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You're looking for the <a href=\"http://api.jquery.com/gt-selector/\"><code>:gt</code></a> selector:</p>\n\n<pre><code>$('.facet').each(function() {\n    var ul = $('ul', this);\n    if(ul.children('li').size() &lt;= 7) return;\n\n    var hiddenElements = ul.children('li:gt(4)', this).hide();\n\n    var showCaption = '...' + hiddenElements.size() + ' More Choices';\n    ul.append(\n        $('&lt;li class=\"toggler\"&gt;' + showCaption + '&lt;/li&gt;')\n            .toggle(\n                function() { \n                    hiddenElements.show();\n                    $(this).text('...Fewer Choices');\n                }, \n                function() { \n                    hiddenElements.hide();\n                    $(this).text(showCaption);\n                }\n            )\n    );\n});\n</code></pre>\n\n<h1><a href=\"http://jsbin.com/ekolo/edit\"><strong>DEMO</strong></a></h1>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>my two cents</p>\n\n<pre><code>$('.facet li').each(function(x) {\n    var warn = ''\n    if($('.facet li').length &gt; 7){\n        if (x &gt;= 5){\n            $(this).hide(); \n        }\n        warn = '.. Fewer Choices';\n    }else{\n        $(this).show(); \n        warn = 'test to append if less than 7 than seven';\n    }\n    if ($('#warn').length == 0){\n                    $('.facet ul').append('&lt;li id=\"warn\"&gt;&lt;/li&gt;');\n    }\n    $('#warn').text(warn);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>In implementing faceted search, if the number of options is 7 or less, I will show them all. If the number of options exceed 7, I will show the first 5 only and insert a link that will toggle the display of these options.</p>\n\n<p>My question in this case is, how to run through the list of matching elements, in this case <code>li</code>'s that fall within <code>.facet ul</code>, and perform this function. Secondly, I need to <code>.appendTo()</code> an <code>li</code> at the end of <code>.facet ul</code> that displays text based on whether or not I am showing all or some.</p>\n\n<p>If showing all, I want the text to read \"... Fewer Choices\". If I am showing few I would like the text to read \"... <em>n</em> More Choices\".</p>\n\n<p>A push in the right direction for each of these functions, or a complete explanation is much appreciated.</p>\n\n<p>Code below for reference.</p>\n\n<pre><code>    &lt;div class=\"facet\"&gt;\n  &lt;h4&gt;Brands&lt;/h4&gt;\n  &lt;ul&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;Really long brand name facet to show what happens with multi-line facets &lt;em&gt;(63)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;Joe Rocket &lt;em&gt;(57)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;Icon &lt;em&gt;(42)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;Fieldsheer &lt;em&gt;(37)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;Tour Master &lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;AGV Sport&lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;Alpinestars&lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;Cortech&lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;Element&lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;Fieldsheer&lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;Firstgear&lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;FMF Apparel&lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;Icon&lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;Joe Rocket&lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;O'Neal Racing&lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;Power Trip&lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;REV'IT!&lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;River Road&lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;Rockstar&lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;Scorpion&lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;Shift Racing&lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;Speed and Strength&lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;Spidi&lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;Teknic&lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;Tour Master&lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;Troy Lee Designs&lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;Vega&lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;Yoshimura&lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n   &lt;li&gt;&lt;a class=\"all\" href=\"#\"&gt;Z1R&lt;em&gt;(21)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;\n  &lt;/ul&gt;\n &lt;/div&gt;\n</code></pre>\n\n<p>The 'all' class is irrelevant here and serves another purpose. Feel free to disregard it.</p>\n",
            "last_activity_date": 1268162698,
            "question_id": 2411588,
            "score": 3,
            "tags": [
                "javascript",
                "jquery",
                "jquery-selectors"
            ],
            "title": "jQuery toggle show/hide elements after certain number of matching elements"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>That would be a major security breach. You will never be able to do that.</p>\n\n<p>You can, however, close child windows the parent has opened. Say you opened a popup with a parent window, that same parent window can have a button to close the child. Never the browser.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think part of the issue here is that you are unclear about your goal in the question.\nFrom your comment on Frankie's answer, it seems that you don't really need to close the window at all, you simply need to secure the content that was available in the window.</p>\n\n<p>Here is what I recommend:</p>\n\n<ol>\n<li>Kill the logged-in-session based on a (server-side) timeout.  When the timeout is up, a reload of the page should only redirect to the login page.</li>\n<li>On the client side, periodically check for timeout conditions and redirect to a login page, or some other doesn't-need-to-be-secured page.</li>\n</ol>\n\n<p>Frankly, it's usually better to keep a user on your site until the moment that -they- want to close the tab or otherwise browse away anyway.  Just redirect them to a landing page that doesn't need to be secure instead of trying to force closing of the tab.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have done some research and found out that it is not possible to close window/tab in Firefox if that window/tab isn't open through javascript or if the tab has history pages > 1 (i.e. Back button clickable because you browse through webpages).</p>\n\n<p>Way to do in Firefox : Delete the history first. Then you can close window without confirmation box. I haven't tried this solution. I happen to read through multiple reliable pages that describe how to do this.</p>\n\n<p><strong>Solution for Internet Explorer 6, 7, 8.</strong></p>\n\n<p>With a little help from browser detect function : <a href=\"http://www.quirksmode.org/js/detect.html\">http://www.quirksmode.org/js/detect.html</a> , here is how to close window without comfirmation box for multiple IE versions.</p>\n\n<pre><code>if ((userBrowser.browser == \"Explorer\" &amp;&amp; (userBrowser.version == \"8\" || userBrowser.version == \"7\"))) {\n        window.open('', '_self', '');\n        window.close();\n    } else if ((userBrowser.browser == \"Explorer\" &amp;&amp; userBrowser.version == \"6\")) {\n        window.opener = null;\n        window.close();\n    } else {\n        window.opener = '';\n        window.close(); // attempt to close window first, show user warning message if fails\n        alert(\"To avoid data corruption/loss. Please close this window immedietly.\");\n    }\n</code></pre>\n\n<p>I know that some of you might think that using browser detect isn't a good idea. Also, many believe that forcing users to close window is a bad thing. I agree to those idea. But, I just need it because of software requirement we are told to do.</p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>Suppose I want to have a link or a button that when user click it, the browser will close without any confirmation dialog box.</p>\n\n<p>It will need to work on Internet Explorer 6, 7, 8 and Firefox.</p>\n",
            "last_activity_date": 1314947331,
            "question_id": 1629801,
            "score": 3,
            "tags": [
                "javascript",
                "firefox",
                "internet-explorer-6",
                "internet-explorer-8",
                "internet-explorer-7"
            ],
            "title": "Javascript to close IE6, IE7, IE8 and Firefox without confirmation box?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Assuming you have no more than 32 bits, you can use JavaScript's built-in <code>parseInt()</code> function to convert your string of 1s and 0s into an integer, and then test the flags using the <code>&amp;</code> (and) operator:</p>\n\n<pre><code>var flags = parseInt(\"10001010100011110000\", 2); // base 2\n\nif ( flags &amp; 0x1 )\n{\n   // do something\n}\n\n...\n</code></pre>\n\n<h3>See also: <a href=\"http://stackoverflow.com/questions/127027/how-to-check-my-byte-flag\">How to check my byte flag?</a></h3>\n\n<p>(question is on the use in C, but applies to the same operators in JS as well)</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Bitwise operators will certainly be faster but only linearly and not by much. You'll probably save a few milliseconds (unless you're processing HUGE amounts of data in Javascript, which is most likely a bad idea anyway).</p>\n\n<p>You should think about profiling other code in your loop to see what's slowing it down the most. What other algorithms, data structures and allocations do you have in there that could use refactoring?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Single ampersand (&amp;, as opposed to &amp;&amp;) does bit-wise comparison. But first you need to convert your strings to numbers using parseInt().</p>\n\n<pre><code>var map = parseInt(\"10010\", 2); // the 2 tells it to treat the string as binary\n\nvar maskForOperation1 = parseInt(\"10000\", 2);\nvar maskForOperation2 = parseInt(\"01000\", 2);\n// ...\n\nif (map &amp; maskForOperation1) { Operation1(); }\nif (map &amp; maskForOperation2) { Operation2(); }\n// ...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Be extremely wary. Javascript does not have integers -- numbers are stored as 64 bit floating-point. You should get accurate conversion out to 52 bits. If you get more flags than that, bad things will happen as your \"number\" gets rounded to the nearest representable floating-point number. (ouch!)</p>\n\n<p>Also, bitwise manipulation will not help performance, because the floating point number will be converted to an integer, tested, and then converted back.</p>\n\n<p>If you have several places that you want to check the flags, I'd set the flags on an object, preferably with names, like so:</p>\n\n<pre><code>var flags = {};\nflags.use_apples = map.charAt(4);\nflags.use_bananas = map.charAt(10);\n</code></pre>\n\n<p>etc...</p>\n\n<p>Then you can test those flags inside your loop:</p>\n\n<pre><code>if(flags.use_apples) {\n    do_apple_thing();\n}\n</code></pre>\n\n<p>An object slot test will be faster than a bitwise check, since Javascript is not optimized for bitwise operators. However, if your loop is slow, I fear that decoding these flags is probably not the source of the slowness.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am currently storing data inside an XML doc as binary, 20 digits long, each representing a boolean value. </p>\n\n<pre><code>&lt;matrix&gt; \n\n    &lt;resource type=\"single\"&gt; \n    \t&lt;map&gt;10001010100011110000&lt;/map&gt; \n    \t&lt;name&gt;Resource Title&lt;/name&gt; \n    \t&lt;url&gt;http://www.yoursite.com&lt;/url&gt; \n    &lt;/resource&gt;\n\n&lt;/matrix&gt;\n</code></pre>\n\n<p>I am parsing this with jQuery and am currently using a <strong>for</strong> loop and <strong>charAt()</strong> to determine whether to do stuff if the value is == \"1\".</p>\n\n<blockquote>\n  <p>for (var i = 0; i &lt; _mapLength; i++) {</p>\n  \n  <blockquote>\n    <p>if (map.charAt(i) == \"1\") {\n      \t//perform something here\n      }</p>\n    \n    <p>}</p>\n  </blockquote>\n</blockquote>\n\n<p>This takes place a few times as part of a HUGE loop that has run sort of slow.  Someone told me that I should use bitwise operators to process this and it would run faster.</p>\n\n<h2>My question is either:</h2>\n\n<p><strong>Can someone offer me an example of how I could do this?</strong>  I've tried to read tutorials online and they seem to be flying right over my head.  (FYI: I am planning on creating a Ruby script that will convert my binary 0 &amp; 1's into bits in my XML.)</p>\n\n<p><strong>Or does anyone know of a good, simple</strong> (maybe even dumbed down version) <strong>tutorial or something that could help me grasp these bitwise operator concepts?</strong></p>\n",
            "last_activity_date": 1361310487,
            "question_id": 1003879,
            "score": 3,
            "tags": [
                "javascript",
                "jquery",
                "binary",
                "compare",
                "bit-manipulation"
            ],
            "title": "Understanding bitwise operations in javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You could use a simple <em>meta refresh</em>:</p>\n\n<pre><code>&lt;meta http-equiv=\"refresh\" content=\"180;url=http://example.com/logout\" /&gt;\n</code></pre>\n\n<p>Or you implement a timeout with PHP:</p>\n\n<pre><code>session_start();\nif (isset($_SESSION['LAST_REQUEST_TIME'])) {\n    if (time() - $_SESSION['LAST_REQUEST_TIME'] &gt; 180) {\n        // session timed out, last request is longer than 3 minutes ago\n        $_SESSION = array();\n        session_destroy();\n    }\n}\n$_SESSION['LAST_REQUEST_TIME'] = time();\n</code></pre>\n\n<p>Then you don\u2019t need to check every 3 minutes if the session is still valid.</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<h2>New and improved solution</h2>\n\n<p>As mr kennedy pointed out my original solution (below) doesn't work. so here is a way to do it.</p>\n\n<p>In the user database keep a last-activity timestamp that updates every time a user loads a page.</p>\n\n<p>Then in a checkaccess.php</p>\n\n<pre><code>if ( time-last_access &gt; max_inactivity_time ) {\n     return array('access' =&gt; '0');\n}\nelse {\n     return array('access' =&gt; '0');\n}\n</code></pre>\n\n<p>Call checkaccess.php in the javascript timer(below) and logout accordingly</p>\n\n<p>This also allows for a \"currently logged in users\" function</p>\n\n<p>thanks mr kennedy</p>\n\n<p><hr /></p>\n\n<h2>Original, non-working solution</h2>\n\n<p>Create a php page that returns 1 or 0 based on the validity of the current users session</p>\n\n<p>Then in your pages that you want to timeout add this to the head (you need jquery)</p>\n\n<pre><code>setInterval(function(){\n   var url = UrL_OF_SESSION_CHECKING_PAGE;\n      $.getJSON( url,\n         function( data ) {\n            if (data.access=='0') {\n               window.location = LOGIN_PAGE;\n            }\n         }\n      );\n}, 180000);\n</code></pre>\n\n<p>Every 180 seconds (3 minutes) it requests the php page and gets the validity of the session. If its invalid it redirects to a login page</p>\n\n<p>If the user has multiple pages open the pages will timeout and redirect at different times because their timers are different.</p>\n\n<p>Here's a good page on javscript timers\n<a href=\"http://ejohn.org/blog/how-javascript-timers-work/\" rel=\"nofollow\">http://ejohn.org/blog/how-javascript-timers-work/</a></p>\n\n<p>Simple session checking page</p>\n\n<pre><code>session_start();\ndie(\n    json_encode(\n        isset( $_SESSION['VARIABLE'] ) ? array( 'access' =&gt; '1') : array( 'access' =&gt; '0' )\n    )\n);\n</code></pre>\n\n<p>change VARIABLE to one of your session variables</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you want this to happen before the page is even refreshed, you'll want periodic ajax calls. You can use <a href=\"http://www.ajtrichards.co.uk/heartbeat/\" rel=\"nofollow\">jQuery Heartbeat</a> to make calls every 3 minutes, and use one of the PHP methods already provided by other users to check the session</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to have a timer going to run every 3 minutes on the page (javascript), to detect if a php session ($_SESSION) has timed out... and if so, redirect them automatically.</p>\n\n<p>A good example would be, a user logs in and runs up stairs, and never comes back down... I want the javascript to log them out with a simple redirect... </p>\n\n<p>Is this possible?  and how would I do such a thing?  I am using PHP and javascript.</p>\n\n<p><strong>Edit:\nWhat Rob said below is exactly what I am looking for... and I safely \\'quote \\'...</strong></p>\n\n<p><em>I suspect what Mike is asking for is that when the session times out, the browser should be told to navigate away from the current page. Some banks do this after a period of inactivity, for example. \u2013 Rob Kennedy 5 hours ago</em></p>\n",
            "last_activity_date": 1245196047,
            "question_id": 1003001,
            "score": 3,
            "tags": [
                "php",
                "javascript",
                "session"
            ],
            "title": "Automatically re-direct a user when session Times out or goes idle"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>That doesn't look like the correct way to use the <em>Audio</em> constructor for <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement\"><em>HTMLAudioElement</em></a> / <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a>.</p>\n\n<p>Slight adjustment</p>\n\n<pre><code>var snd = new Audio(\"data:audio/wav;base64,\" + base64string);\nsnd.play();\n</code></pre>\n\n<p>If it works in console but not in script, it may be getting garbage collected, in which case scope it so it will stay</p>\n\n<pre><code>var Sound = (function () {\n    var df = document.createDocumentFragment();\n    return function Sound(src) {\n        var snd = new Audio(src);\n        df.appendChild(snd); // keep in fragment until finished playing\n        snd.addEventListener('ended', function () {df.removeChild(snd);});\n        snd.play();\n        return snd;\n    }\n}());\n// then do it\nvar snd = Sound(\"data:audio/wav;base64,\" + base64string);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 10
                }
            ],
            "body": "<p>Am able to play sound with javascript through the following,</p>\n\n<pre><code>    var snd = new Audio('sound.wav');\n    snd.play();\n</code></pre>\n\n<p>This plays the required sound but sometimes it loads slowly or might not even load at all\nso i encoded the sound in base 64 and tried to play it this way.</p>\n\n<pre><code>      var splash = {\nprefix: \"data:audio/wav;base64,\",\nsound: [ \"*base64 string here*\" ] };\n\n    var snd = new Audio(splash); \n    snd.play();\n</code></pre>\n\n<p>but the sound does not play, is there a way around it ?</p>\n",
            "last_activity_date": 1374327907,
            "question_id": 17762763,
            "score": 2,
            "tags": [
                "javascript",
                "html5",
                "base64"
            ],
            "title": "play .wav sound file encoded in base64 with javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I believe this will help you solve your problem. I came across the following library today on an unrelated Google expedition: <a href=\"https://github.com/scottjehl/eCSSential\" rel=\"nofollow\">eCSSential</a>. It looks to be the ticket. You can use the library to detect screen sizes, and load the appropriate CSS files, taking into consideration the current viewport, and the screen size for the current device. Pretty nifty.</p>\n\n<p>Combined with the previous part of my answer, I believe you will have a pretty good way of dealing with your problem.</p>\n\n<hr>\n\n<p>The below is just an example of the screen sizes you can query for, but you get the idea. The background can be styled for each scenario.</p>\n\n<pre><code>/* Smartphones (portrait and landscape) ----------- */\n@media only screen \nand (min-device-width : 320px) \nand (max-device-width : 480px) {\n    /* Styles */\n}\n\n/* Smartphones (landscape) ----------- */\n@media only screen \nand (min-width : 321px) {\n    /* Styles */\n}\n\n/* Smartphones (portrait) ----------- */\n@media only screen \nand (max-width : 320px) {\n    /* Styles */\n}\n\n/* iPads (portrait and landscape) ----------- */\n@media only screen \nand (min-device-width : 768px) \nand (max-device-width : 1024px) {\n    /* Styles */\n}\n\n/* iPads (landscape) ----------- */\n@media only screen \nand (min-device-width : 768px) \nand (max-device-width : 1024px) \nand (orientation : landscape) {\n    /* Styles */\n}\n\n/* iPads (portrait) ----------- */\n@media only screen \nand (min-device-width : 768px) \nand (max-device-width : 1024px) \nand (orientation : portrait) {\n    /* Styles */\n}\n\n/* Desktops and laptops ----------- */\n@media only screen \nand (min-width : 1224px) {\n    /* Styles */\n}\n\n/* Large screens ----------- */\n@media only screen \nand (min-width : 1824px) {\n    /* Styles */\n}\n\n/* iPhone 4 ----------- */\n@media\nonly screen and (-webkit-min-device-pixel-ratio : 1.5),\nonly screen and (min-device-pixel-ratio : 1.5) {\n    /* Styles */\n}\n</code></pre>\n\n<p>background can be styled differently for any resolution, for instance:</p>\n\n<pre><code>@media only screen \nand (min-device-width : [width]) \nand (max-device-width : [width]) {\n\n    body {\n        background-image: url('../img/image.png');\n        -webkit-background-size: cover;\n           -moz-background-size: cover;\n             -o-background-size: cover;\n                background-size: cover;\n                // or you could just center the image if it's bigger than the current viewport\n                // background-position: center center;\n    }\n}\n</code></pre>\n\n<p>Credit: Most of this from <a href=\"http://css-tricks.com/\" rel=\"nofollow\">CSS Tricks</a></p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>You can invest in a little jquery to change your backgrounds based on the screen size. Here is an example of what you can do:</p>\n\n<pre><code>if ( $(window).width() &lt; 1000 ) {\n    $('body').css('background','url(\"yourimage\")';\n} else {\n    $('body').css('background','url(\"yourimage\")';\n}\n</code></pre>\n\n<p>Would you mind telling us what you've tried if you have a moment?</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>A few methods are discussed in <a href=\"http://css-tricks.com/perfect-full-page-background-image/\" rel=\"nofollow\">this article</a>. The last method may be exactly what you are looking for. It includes a JavaScript function for checking window size and setting the background.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You could use the CSS3 Full Page Background Image explained over here on <a href=\"http://css-tricks.com/perfect-full-page-background-image/\" rel=\"nofollow\">CSS-Tricks</a>, and then go with a jQuery Fallback if necessary.  There's a good article for the jQuery method over on <a href=\"http://www.gayadesign.com/diy/jquery-plugin-fullscreen-background/\" rel=\"nofollow\">Gaya Design Blog</a></p>\n\n<p>CSS:</p>\n\n<pre><code>html { \n    background: url(images/bg.jpg) no-repeat center center fixed; \n    -webkit-background-size: cover;\n    -moz-background-size: cover;\n    -o-background-size: cover;\n    background-size: cover;\n}\n</code></pre>\n\n<p>using the <code>@media</code> query method specified by @apttap along with this CSS snippet you could use multiple background images per device pixel ratio.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I would like to have a responsive image arrangement for backgrounds on a site.  </p>\n\n<p>For example, based on different screen resolutions, I would like for different background images to load.  Further it would be useful if I could define different behaviors; for example, a higher resolution desktop would have a larger stretched background image, while a netbook might have a smaller version of that shrunk to fit, or while a 3GS iPhone would have a small tiled image.</p>\n\n<p>How would you implement such a scenario?</p>\n",
            "last_activity_date": 1350970203,
            "question_id": 13018000,
            "score": 1,
            "tags": [
                "javascript",
                "css",
                "html5",
                "twitter-bootstrap"
            ],
            "title": "Responsive backgrounds with Twitter Bootstrap?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>For toggling kml layer you can try this function:</p>\n\n<pre><code>/** Toggles layer\n* @param {google.maps.KmlLayer} layer\n* @param {google.maps.Map} map\n**/ \nfunction toggleLayer( layer, map ){\n     layer.setMap( layer.getMap() ? null : map );\n}\n</code></pre>\n\n<p>Store your layers in array for farther actions (e.g. toggling).</p>\n\n<p>Then you can toggle layer by it's index on that array:</p>\n\n<pre><code>toggleLayer( layersArray[index], map );\n</code></pre>\n\n<p>Or to apply toggling to all layers:</p>\n\n<pre><code>for( var index = 0; index &lt; layersArray.length; ++index){\n    toggleLayer( layersArray[index], map );\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Sorry my article didn't work for you, it is a little dated.  My new solution for KML toggling can be gleaned from the source code here: <a href=\"http://efwjames.com/tcrd/\" rel=\"nofollow\">http://efwjames.com/tcrd/</a></p>\n\n<p>Here is a full example of a typical Gmaps toggle assuming you are using kml files. </p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n\n &lt;script type=\"text/javascript\" src=\"http://maps.googleapis.com/maps/api/js?sensor=false\"&gt;&lt;/script&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n\nvar map;\n\n// lets define some vars to make things easier later\nvar kml = {\n    a: {\n        name: \"MPLS/STPL\",\n        url: \"https://maps.google.com/maps/ms?authuser=0&amp;vps=5&amp;ie=UTF8&amp;msa=0&amp;output=kml&amp;msid=212971981154994583939.0004b06640255267e038c\"\n    },\n    b: {\n        name: \"Bicycling Tour Routes\",\n        url: \"https://maps.google.com/maps/ms?authuser=0&amp;vps=4&amp;ie=UTF8&amp;msa=0&amp;output=kml&amp;msid=212971981154994583939.0004902a1824bbc8c0fe9\"\n    }\n// keep adding more if ye like \n};\n\n// initialize our goo\nfunction initializeMap() {\n    var options = {\n        center: new google.maps.LatLng(44.9812, -93.2687),\n        zoom: 13,\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n    }\n    map = new google.maps.Map(document.getElementById(\"map_canvas\"), options);\n\n    createTogglers();\n};\n\ngoogle.maps.event.addDomListener(window, 'load', initializeMap);\n\n// the important function... kml[id].xxxxx refers back to the top \nfunction toggleKML(checked, id) {\n\n    if (checked) {\n\n        var layer = new google.maps.KmlLayer(kml[id].url, {\n            preserveViewport: true,\n            suppressInfoWindows: true \n        });\n        // store kml as obj\n        kml[id].obj = layer;\n        kml[id].obj.setMap(map);\n    }\n    else {\n        kml[id].obj.setMap(null);\n        delete kml[id].obj;\n    }\n\n};\n\n// create the controls dynamically because it's easier, really\nfunction createTogglers() {\n\n    var html = \"&lt;form&gt;&lt;ul&gt;\";\n    for (var prop in kml) {\n        html += \"&lt;li id=\\\"selector-\" + prop + \"\\\"&gt;&lt;input type='checkbox' id='\" + prop + \"'\" +\n        \" onclick='highlight(this,\\\"selector-\" + prop + \"\\\"); toggleKML(this.checked, this.id)' \\/&gt;\" +\n        kml[prop].name + \"&lt;\\/li&gt;\";\n    }\n    html += \"&lt;li class='control'&gt;&lt;a href='#' onclick='removeAll();return false;'&gt;\" +\n    \"Remove all layers&lt;\\/a&gt;&lt;\\/li&gt;\" + \n    \"&lt;\\/ul&gt;&lt;\\/form&gt;\";\n\n    document.getElementById(\"toggle_box\").innerHTML = html;\n};\n\n// easy way to remove all objects\nfunction removeAll() {\n    for (var prop in kml) {\n        if (kml[prop].obj) {\n            kml[prop].obj.setMap(null);\n            delete kml[prop].obj;\n        }\n\n    }\n};\n\n\n// Append Class on Select\nfunction highlight(box, listitem) {\n    var selected = 'selected';\n    var normal = 'normal';\n    document.getElementById(listitem).className = (box.checked ? selected: normal);\n};\n\nfunction startup() { \n// for example, this toggles kml b on load and updates the menu selector\nvar checkit = document.getElementById('b');\ncheckit.checked = true;\ntoggleKML(checkit, 'b');\nhighlight(checkit, 'selector1');\n }\n\n&lt;/script&gt;\n\n&lt;style type=\"text/css\"&gt;\n.selected { font-weight: bold; }\n&lt;/style&gt;\n\n&lt;/head&gt;\n&lt;body onload=\"startup()\"&gt;\n&lt;div id=\"map_canvas\" style=\"width: 100%; height: 600px;\"&gt;&lt;/div&gt;\n&lt;div id=\"toggle_box\" style=\"position: absolute; top: 100px; right: 20px; padding: 10px; background: #fff; z-index: 5; \"&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>This is pure js so of course using jQuery you can do things a little easier. Hope this helps!</p>\n",
                    "is_accepted": true,
                    "score": 4
                }
            ],
            "body": "<p>Is there a simple way to set up checkboxes to toggle (on/off) KML layers for Google Maps v3? I've come across <a href=\"http://abaskgeospatial.com/?p=135\" rel=\"nofollow\">these</a> <a href=\"http://efwjames.com/2011/08/google-maps-toggle-mashup/\" rel=\"nofollow\">articles</a>, but none of them have worked for me.</p>\n",
            "last_activity_date": 1364415222,
            "question_id": 9855067,
            "score": 1,
            "tags": [
                "javascript",
                "google-maps-api-3",
                "kml"
            ],
            "title": "Toggle KML Layers in Google Maps v3"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You would only be able to do this if the PHP interpreter is configured to run on *.js files, which by default it won't be. Quite honestly, I wouldn't recommend this behavior.</p>\n\n<p>What I'd do instead is something like this (This method can be used for CSS files, too.):</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"js.php\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p><strong>js.php</strong></p>\n\n<pre><code>&lt;?php\n//GZIP the file and set the JavaScript header\nob_start(\"ob_gzhandler\");\nheader(\"Content-type: text/javascript\");\n\n//Set a JavaScript variable based on PHP work\necho 'var logged_in_user = \"'.$_SESSION['username'].'\";';\n\n//Require an external script\nrequire_once($_SERVER['DOCUMENT_ROOT'].\"/path/to/jquery.js\");\n?&gt;\n\n//More Javascript functions and code here\n$(document).ready(function() {\n  $('#mydiv').tipsy();\n});\n\n&lt;?php\n//Flush the output buffer\nob_end_flush();\n?&gt;\n</code></pre>\n\n<p>I personally do this for many reason.</p>\n\n<ol>\n<li>I have many jQuery files I want to include, but I don't want my browser doing 5+ HTTP requests. Including them all in one file means less HTTP requests.  </li>\n<li>GZIP! I'm significantly reducing the size of the file be transferred and that speeds things up for the visitor.</li>\n<li><p>It's a central location to add, remove, or modify my JavaScript for the whole site. I can even use <code>$_GET</code> checks to make certain scripts conditional based on how I wrote the <code>&lt;script&gt;</code> tag.</p>\n\n<p>For example, <code>&lt;script type=\"text/javascript\" src=\"js.php?var=1\"&gt;&lt;/script&gt;</code>. I can then check <code>$_GET['var']</code> within the js.php file.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>I think is not possible to enter a php in the js file, but: \ntry to create an element div for example or an input ...</p>\n\n<p>and then use this functions to get the value of the div tag.</p>\n\n<pre><code>    function AddHiddenValue(oForm) {\n       var strValue = document.getElementById(\"city\").value;\n       alert(\"value: \" + strValue);\n       var oHidden = document.createElement(\"input\");\n       oHidden.name = \"printthisinput\";\n       oHidden.value = strValue;\n       oForm.appendChild(oHidden);\n    }\n</code></pre>\n\n<p>It come from another object form (select .. )</p>\n\n<pre><code>document.getElementById(\"city\").value;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You regularly don't use PHP within your JavaScript files. Javascript is a client-side language which is interpreterred in your web browser. PHP is run on the web server.</p>\n\n<p>However, if you need to pass data from your PHP-code to your javascript document, you can do something like:</p>\n\n<pre><code>$js = \"&lt;script&gt; myObject = \" . json_encode($your_data) . \" &lt;/script&gt;\";\nprint $js;\n</code></pre>\n\n<p>If you do this in your <code>&lt;head&gt;</code>-part of your HTML-document, you will have access to <code>myObject</code> in other JS files you load after that.</p>\n\n<p><code>$your_data</code> can be an array or any kind of object, string or integer. Look for <a href=\"http://php.net/manual/en/book.json.php\" rel=\"nofollow\">PHP JSON</a> around the interwebs.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>Ok guys here is the answer</strong></p>\n\n<p>The Q: I want to input a value for a variable into a .js file, php tags are not permitted and the js would throw an error.</p>\n\n<p>The A: write a </p>\n\n<p><code>&lt;script&gt; &lt;? var value_pass = echo \"hello\"; ?&gt;  &lt;/script&gt;</code> before the said .js file</p>\n\n<p>In the said .js file \nvar value=value_pass;</p>\n\n<p>So there is no need to have any of the ob_end_flush.</p>\n\n<p>If this is not viable please let me know.</p>\n\n<p>Thanks\nJean</p>\n",
                    "is_accepted": true,
                    "score": 0
                }
            ],
            "body": "<p>How do I enter a <code>&lt;? echo \"hello\"; ?&gt;</code> in a .js file.\nThis is a jquery app, therefore the js file.</p>\n\n<p>Thanks\nJean</p>\n",
            "last_activity_date": 1296163500,
            "question_id": 4821711,
            "score": 1,
            "tags": [
                "php",
                "javascript"
            ],
            "title": "php tags in .js file"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Close and re-open the tab. That should do the trick.</p>\n",
                    "is_accepted": true,
                    "score": 182
                },
                {
                    "body": "<p>I can see that this only for actually turning the dialogs back on.  But if you are a web dev and you would like to see a way to possibly have some form of notification when these are off...in the case that you are using native alerts/confirms for validation or whatever.  Check this solution to detect and notify the user <a href=\"http://stackoverflow.com/a/23697435/1248536\">http://stackoverflow.com/a/23697435/1248536</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I accidently checked the \"disable alerts from this site\" box in Chrome, and now I cannot get any window.alert to work on my localhost.</p>\n\n<p>I have tried resetting the settings in advanced but no luck.</p>\n",
            "last_activity_date": 1400255168,
            "question_id": 19640361,
            "score": 86,
            "tags": [
                "javascript",
                "google-chrome"
            ],
            "title": "Re-enabling window.alert in Chrome"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Check the <code>substring</code> <a href=\"http://www.w3schools.com/jsref/jsref_substring.asp\"><strong>syntax</strong></a>:</p>\n\n<blockquote>\n  <p><strong>substring(from, to)</strong></p>\n  \n  <p><strong>from</strong>      Required. The index where to\n  start the extraction. First character\n  is at index 0 </p>\n  \n  <p><strong>to</strong>    Optional. The index\n  <strong>where to stop the extraction</strong>. If\n  omitted, it extracts the rest of the\n  string</p>\n</blockquote>\n\n<p>I'll grant you it's a bit odd. Didn't know that myself.</p>\n\n<p>What you want to do is</p>\n\n<pre><code>alert('helloworld'.substring(5, 7));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<pre><code>alert('helloworld'.substring(5, 2));\n</code></pre>\n\n<p>The code above is wrong because the first value is the start point to the end point.E.g move from char 5 which is <code>o</code> and go to char 2 which is the <code>l</code> so will get <code>llo</code> So you have told it to go backwards.</p>\n\n<p>What yuou want is </p>\n\n<pre><code>alert('helloworld'.substring(5, 7));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You're confusing <a href=\"https://developer.mozilla.org/En/Core_JavaScript_1.5_Reference/Objects/String/Substring\"><code>substring()</code></a> and <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/String/substr\"><code>substr()</code></a>: <code>substring()</code> expects two indices and not offset and length. In your case, the indices are 5 and 2, ie characters 2..4 will be returned as the higher index is excluded.</p>\n",
                    "is_accepted": true,
                    "score": 71
                },
                {
                    "body": "<p>See syntax below:</p>\n\n<pre><code>str.substring(indexA, [indexB])\n</code></pre>\n\n<p>If <code>indexA &gt; indexB</code>, the <code>substring()</code> function acts as if arguments were reversed.</p>\n\n<p>Consider documentation here:\n<a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/substring\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/substring</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You have three options in Javascript:</p>\n\n<pre><code>//slice\n//syntax: string.slice(start [, stop])\n\"Good news, everyone!\".slice(5,9); // extracts 'news'\n\n//substring \n//syntax: string.substring(start [, stop])\n\"Good news, everyone!\".substring(5,9); // extracts 'news'\n\n//substr\n//syntax: string.substr(start [, length])\n\"Good news, everyone!\".substr(5,4); // extracts 'news'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 25
                }
            ],
            "body": "<p>the most darndest thing! the following code prints out 'llo' instead of the expected 'wo'. i get such surprising results for a few other numbers. what am i missing here?</p>\n\n<pre><code>alert('helloworld'.substring(5, 2));\n</code></pre>\n",
            "last_activity_date": 1365669304,
            "question_id": 1989009,
            "score": 43,
            "tags": [
                "javascript",
                "string",
                "substring"
            ],
            "title": "javascript substring"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>This is a common warning thrown by social plugins. Twitter and Facebook plugins usually throw this warning too. You can safely ignore it.</p>\n",
                    "is_accepted": true,
                    "score": 30
                }
            ],
            "body": "<p>I am trying to add a Google Plus button to my site, and keep getting JavaScript safety warnings, despite the fact that I am using Google's recommended code, on Chrome.</p>\n\n<p>I have reproduced the errors with code copied straight from Google Webmaster's <a href=\"http://www.google.com/webmasters/+1/button/\">recommended code</a>, with no other additions:</p>\n\n<pre><code>&lt;html itemscope itemtype=\"http://schema.org/\"&gt;\n&lt;head&gt;\n&lt;meta itemprop=\"name\" content=\"Title\"&gt;\n&lt;meta itemprop=\"description\" content=\"Description\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;g:plusone annotation=\"inline\"&gt;&lt;/g:plusone&gt;\n&lt;script type=\"text/javascript\"&gt;\n  (function() {\n    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;\n    po.src = 'https://apis.google.com/js/plusone.js';\n    var s = document.getElementsByTagName('script')\\[0\\]; s.parentNode.insertBefore(po, s);\n  })();\n&lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>Load this in Chrome (15 on Mac), and the developer console warns:</p>\n\n<pre><code>Unsafe JavaScript attempt to access frame with URL http://mydomain.com/ \nfrom frame with URL https://plusone.google.com/_/+1/fastbutton?url=http%3A%2F%2Fmydomain.com%2F&amp;size=standard&amp;count=true&amp;annotation=inline&amp;hl=en-US&amp;jsh=m%3B%2F_%2Fapps-static%2F_%2Fjs%2Fwidget%2F__features__%2Frt%3Dj%2Fver%3Dt6mt7PFQYRQ.en_GB.%2Fsv%3D1%2Fam%3D!agWx4Vf_ACSIFA91ZQ%2Fd%3D1%2F#id=I1_1323174311773&amp;parent=http%3A%2F%2Fmydomain.com&amp;rpctoken=352111652&amp;_methods=onPlusOne%2C_ready%2C_close%2C_open%2C_resizeMe. \nDomains, protocols and ports must match.\n</code></pre>\n\n<p>Is the Google Webmaster recommended code simply unsafe? Or have I done something wrong?</p>\n",
            "last_activity_date": 1323187225,
            "question_id": 8399915,
            "score": 42,
            "tags": [
                "javascript",
                "google-chrome",
                "google-plus",
                "google-plus-one"
            ],
            "title": "Google Plus button code warns: &quot;Unsafe JavaScript attempt to access frame&quot; in Chrome"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<pre><code>e.preventDefault();\n</code></pre>\n\n<p>from <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault\">https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault</a></p>\n\n<blockquote>\n  <p>Cancels the event if it is cancelable,\n  without stopping further propagation\n  of the event.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 73
                },
                {
                    "body": "<p>You want <code>e.preventDefault()</code> to prevent the default functionality from occurring.</p>\n\n<p>Or have <code>return false</code> from your method.</p>\n\n<p><code>preventDefault</code> prevents the default functionality and <code>stopPropagation</code> prevents the event from bubbling up to container elements.</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<pre><code>$('.update-cart').click(function(e) {\n    updateCartWidget();\n    e.stopPropagation();\n    e.preventDefault();\n});\n\n$('.update-cart').click(function() {\n    updateCartWidget();\n    return false;\n});\n</code></pre>\n\n<p>The following methods achieve the exact same thing.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>You can use <code>e.preventDefault();</code> instead of <code>e.stopPropagation();</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a link on a webpage.  When a user clicks it, a widget on the page should update.  However, I am doing something, because the default functionality (navigating to a different page) occurs before the event fires.  </p>\n\n<p>This is what the link looks like:</p>\n\n<pre><code>  &lt;a href=\"store/cart/\" class=\"update-cart\"&gt;Update Cart&lt;/a&gt;\n</code></pre>\n\n<p>This is what the jQuery looks like:</p>\n\n<pre><code>   $('.update-cart').click(function(e) { \n         e.stopPropagation(); \n         updateCartWidget(); \n      });\n</code></pre>\n\n<p>What is the problem?</p>\n",
            "last_activity_date": 1406135689,
            "question_id": 5632031,
            "score": 38,
            "tags": [
                "javascript",
                "jquery",
                "events",
                "javascript-events",
                "click"
            ],
            "title": "How to stop default link click behavior with jQuery"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>ng-click holds an angular expression.  Angular expressions are evaluated in the context of an Angular <a href=\"http://docs.angularjs.org/guide/scope\">scope</a>, which is bound to the element having the ng-click attribute or an ancestor of that element.</p>\n\n<p>The Angular expression language doesn't include flow control statements and can't declare variables or define functions.  These limitations mean templates can only access variables and run made available by a controller or directive.</p>\n",
                    "is_accepted": true,
                    "score": 50
                },
                {
                    "body": "<p>Angular doesn't change the meaning of the <code>onclick</code> attribute, it adds the parallel <code>ng-click</code> attribute to take an <a href=\"https://docs.angularjs.org/guide/expression\">Angular expression</a>. <code>onclick</code> takes plain old JavaScript code even when you're using Angular. </p>\n\n<p>Practically speaking, suppose what you're doing in a click handler is changing some variables in an Angular scope, or calling a function in an Angular scope that changes some variables.\nTo do that from JavaScript code (like what you would put in <code>onclick</code>) requires a bunch of steps</p>\n\n<ul>\n<li>get a reference to the scope</li>\n<li>assign the variable or call the function</li>\n<li>call <code>scope.$apply</code> so that anything watching for updates to the variables that changed get notified</li>\n</ul>\n\n<p>This looks like:</p>\n\n<pre><code>&lt;a onclick=\"var $scope = angular.element(event.target).scope(); $scope.yourVar = 42; $scope.$apply()\"&gt;Go&lt;/a&gt;\n</code></pre>\n\n<p>and with <code>ng-click</code> and an Angular expression for the assignment, almost all of that is implicit:</p>\n\n<pre><code>&lt;a ng-click=\"yourVar = 42\"&gt;Go&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 26
                }
            ],
            "body": "<p>Angular apps use the <code>ng-click()</code> attribute rather than the the <code>onclick</code> event.</p>\n\n<p>Why is this?</p>\n",
            "last_activity_date": 1410403281,
            "question_id": 11902379,
            "score": 36,
            "tags": [
                "javascript",
                "angularjs",
                "web-applications"
            ],
            "title": "Why do we need ng-click?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You could extend the Array prototype with a custom method:</p>\n\n<pre><code>// check if an element exists in array using a comparer function\n// comparer : function(currentElement)\nArray.prototype.inArray = function(comparer) { \n    for(var i=0; i &lt; this.length; i++) { \n        if(comparer(this[i])) return true; \n    }\n    return false; \n}; \n\n// adds an element to the array if it does not already exist using a comparer \n// function\nArray.prototype.pushIfNotExist = function(element, comparer) { \n    if (!this.inArray(comparer)) {\n        this.push(element);\n    }\n}; \n\nvar array = [{ name: \"tom\", text: \"tasty\" }];\nvar element = { name: \"tom\", text: \"tasty\" };\narray.pushIfNotExist(element, function(e) { \n    return e.name === element.name &amp;&amp; e.text === element.text; \n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>Use a dictionary (hash/tree) instead of an array.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://api.jquery.com/jQuery.unique/\">http://api.jquery.com/jQuery.unique/</a></p>\n\n<pre><code>var cleanArray = $.unique(clutteredArray);\n</code></pre>\n\n<p>you might be interested in makeArray too</p>\n\n<p>The previous example is best in saying that check if it exists before pushing.\nI see in hindsight it also states you can declare it as part of the prototype (I guess that's aka Class Extension), so no big enhancement below.</p>\n\n<p>Except I'm not sure if indexOf is a faster route then inArray? probably.</p>\n\n<pre><code>Array.prototype.pushUnique = function (item){\n    if(this.indexOf(item) == -1) {\n    //if(jQuery.inArray(item, this) == -1) {\n        this.push(item);\n        return true;\n    }\n    return false;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>You can use jQuery grep and push if no results: <a href=\"http://api.jquery.com/jQuery.grep/\" rel=\"nofollow\">http://api.jquery.com/jQuery.grep/</a></p>\n\n<p>It's basically the same solution as in the \"extending the prototype\" solution, but without extending (or polluting) the prototype.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use a js library like <a href=\"http://underscorejs.org/\" rel=\"nofollow\">underscore.js</a> for these reasons exactly. Use: union: Computes the union of the passed-in arrays: the list of unique items, in order, that are present in one or more of the arrays.</p>\n\n<pre><code>_.union([1, 2, 3], [101, 2, 1, 10], [2, 1]);\n=&gt; [1, 2, 3, 101, 10]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>How can i push up into an array if neither values exist? Here is my json array/object:</p>\n\n<pre><code>[\n    { name: \"tom\", text: \"tasty\" },\n    { name: \"tom\", text: \"tasty\" },\n    { name: \"tom\", text: \"tasty\" },\n    { name: \"tom\", text: \"tasty\" },\n    { name: \"tom\", text: \"tasty\" }\n]\n</code></pre>\n\n<p>If i tried to push again into the array with either <code>name: \"tom\"</code> or <code>text: \"tasty\"</code> i dont want anything to happen... but if neither of those are there then i want it to <code>.push()</code></p>\n\n<p>How can i do this?</p>\n",
            "last_activity_date": 1408222375,
            "question_id": 1988349,
            "score": 34,
            "tags": [
                "javascript",
                "arrays",
                "json",
                "push",
                "not-exists"
            ],
            "title": "Array .push() if does not exist?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>If you are using v3 try google.maps.event.trigger(map, \"resize\");</p>\n\n<p>Also take a look at <a href=\"http://stackoverflow.com/questions/1746608/google-maps-not-rendering-completely-on-page\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 43
                },
                {
                    "body": "<p>This bug can occur if you are resizing the map's <code>DIV</code>. After resizing, try to call <code>gmap.checkResize()</code> function. </p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>Hi if you are using toggle in a div with a map container you call resizeMap in the function </p>\n\n<pre><code>associated with the trigger:\n        $(\".trigger\").click(function(){\n        $(\".panel\").toggle(\"fast\");\n        $(this).toggleClass(\"active\");\n         resizeMap();\n        return false;\n</code></pre>\n\n<p>then resizeMap(); like this</p>\n\n<pre><code>function resizeMap()\n{\ngoogle.maps.event.trigger(map,'resize');\nmap.setZoom( map.getZoom() );\n}\n</code></pre>\n\n<p>don't forget to set map variable as global ;)\ncheers</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I found a simple solution for the partially loaded google map. Usually it is caused by the onLoad() being called at times when the rest of the page (including your map element) is not completely loaded. This causes partial map load. A simple way around this issue is to change your onLoad body tag action as follows:</p>\n\n<pre><code>old: onload=\"initialize()\"\n\n\nnew: onLoad=\"setTimeout('initialize()', 2000);\"\n</code></pre>\n\n<p>this waits 2 sec. before the Google JavaScript accesses the correct size attributes. Also make sure to clear your browser cache before trying it, sometimes it gets stuck there :)\nHope this helps :)</p>\n\n<p>BTW, this is my top Javascipt part in case you wandering ( exactly as described in Google Documentation but because I am calling the Latitude and Longitude from PHP variables, hence the PHP snippets :)</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://maps.googleapis.com/maps/api/js?sensor=false\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\"&gt;\n      function initialize() {\n        var myOptions = {\n          center: new google.maps.LatLng(&lt;?php echo $my_latitude; ?&gt; , &lt;?php echo $my_longitude; ?&gt;),\n          zoom: 14,\n          mapTypeId: google.maps.MapTypeId.ROADMAP\n        };\n        var map = new google.maps.Map(document.getElementById(\"map_canvas\"),\n            myOptions);\n\n             var point = new google.maps.LatLng(&lt;?php echo $my_latitude; ?&gt; , &lt;?php echo $my_longitude; ?&gt;);\n      var marker = new google.maps.Marker({\n        position:point,\n        map:map })      \n     } &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>try to find css stype for img tag </p>\n\n<pre><code>&lt;code&gt;max-width: 100%;&lt;/code&gt;\n</code></pre>\n\n<p>and replace it to:</p>\n\n<pre><code>&lt;code&gt;max-width: none;&lt;/code&gt;\n</code></pre>\n\n<p>Should works.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I just wanna add to this discussion that I had this problem with grey stripes aswell, and this wasen't the same issue that I needed to use the gmap.Resize Function but that it was in my css. In my css I had </p>\n\n<pre><code>img { \nmax-width:50% \n}\n</code></pre>\n\n<p>so when I set this in my css file</p>\n\n<pre><code>#map-canvas { \nmax-width:none;\n}\n</code></pre>\n\n<p>The problem disappered! I looked all over google but couldn't find this answer.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Sometimes google map comes partially with other area getting grayed out. There is one catch, if we start Firebug, images do come in that gray area. Dont know why this is happening.\nAnybody ever experienced this and found solution, Please share.</p>\n",
            "last_activity_date": 1406918232,
            "question_id": 3838580,
            "score": 33,
            "tags": [
                "javascript",
                "google-maps",
                "google-maps-api-2"
            ],
            "title": "Google map comes partially, grey area comes instead of images from google server"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Dev Channel version of Chrome supports debugging of workers by injecting fake workers implementation that simulates workers using an iframe within worker's client page. You will need to navigate to Scripts pane and tick Debug checkbox on Workers sidebar on the right, then reload the page. The worker script will then appear in the list of page scripts. This simulation has certain limitations, though -- since worker script will run in the client page thread, any long-running operations in worker will freeze the browser UI.</p>\n",
                    "is_accepted": false,
                    "score": 44
                },
                {
                    "body": "<p>As a fast solution on the missing console.log, you can just use <code>throw JSON.stringify({data:data})</code></p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Here are a <a href=\"http://jyro.blogspot.com/2011/08/how-to-debug-webworker-threads.html\" rel=\"nofollow\">couple of tips</a> on WebWorker debugging.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>in the chrome debugger, in the script tab, scroll to the worker panel, and select pause on start.. it will allow you to debug a worker, and insert break points.. but you do all that in a different window</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Beside JSON.stringify(), there's also <code>port.postMessage( (new Object({o: object})) )</code>. Maybe using it in tandem with <code>JSON.stringify</code> will be more helpful.</p>\n\n<p>Hope this was helpful!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use\n    <code>self.console.log('your debugging message')</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As in Chrome v35</p>\n\n<ul>\n<li>Load your page and open Chrome Developer Tools.<br/><br/></li>\n<li>Navigate to <em>Sources</em> tab.<br/><br/></li>\n<li><p>Check <em>Pause of Start</em> check-box, as shown below:<br/><br/><img src=\"http://imgur.com/FWaAJS9.jpg\" alt=\"Debugging workers in Chrome Dev Tools\"></p></li>\n<li><p>Reload the page, the debugger will pause in the web worker, though in a new window!</p></li>\n</ul>\n\n<p>Edit: in newer versions of Chrome (I'm using v39), the workers are under a \"Threads\" tab instead of having their own \"Workers\" tab (The Threads tab will become visible if there are any running workers).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The WebWorker can be debug just like a normal webpage. Chrome provides debugging dev-tools for WebWorkers at <strong>chrome://inspect/#workers</strong>.  </p>\n\n<p>Locate the desired running webworker and click \"inspect\". A separate dev-tool window will open dedicated to that webworker. The official [instructions][2] is worth checking.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The accepted answer is not really a solution for everyone.</p>\n\n<p>In that case you can use <code>console.log</code> or <code>console.debug</code> or <code>console.error</code> in Web Workers in Firefox. See <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=620935\" rel=\"nofollow\">Bug #620935</a> and <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1058644\" rel=\"nofollow\">Bug #1058644</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have been working with web workers in HTML 5 and am looking for ways to debug them. Ideally something like the firebug or chrome debuggers.  Does anyone have any good solution to this. with no access to the console or DOM its kind of hard to debug iffy code</p>\n",
            "last_activity_date": 1420635889,
            "question_id": 2323778,
            "score": 33,
            "tags": [
                "javascript",
                "html5",
                "google-chrome",
                "firebug"
            ],
            "title": "How to debug web workers"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The best way to do this (that I've seen) is </p>\n\n<pre><code>var str = new Array(len + 1).join( character );\n</code></pre>\n\n<p>That creates an array with the given length, and then joins it with the given string to repeat.  The <code>.join()</code> function honors the array length regardless of whether the elements have values assigned, and undefined values are rendered as empty strings.</p>\n\n<p>You have to add 1 to the desired length because the separator string goes <em>between</em> the array elements.</p>\n",
                    "is_accepted": true,
                    "score": 66
                },
                {
                    "body": "<p>I would create a constant string and then call substring on it.</p>\n\n<p>Something like </p>\n\n<pre><code>var hashStore = '########################################';\n\nvar Fiveup = hashStore.substring(0,5);\n\nvar Tenup = hashStore.substring(0,10);\n</code></pre>\n\n<p>A bit faster too.</p>\n\n<p><a href=\"http://jsperf.com/const-vs-join\" rel=\"nofollow\">http://jsperf.com/const-vs-join</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Unfortunately although the Array.join approach mentioned here is terse, it is about 10X slower than a string-concatenation-based implementation. It performs especially badly on large strings. See below for full performance details.</p>\n\n<p>On Firefox, Chrome, Node.js MacOS, Node.js Ubuntu, and Safari, the fastest implementation I tested was:</p>\n\n<pre><code>function repeatChar(count, ch) {\n    if (count == 0) {\n        return \"\";\n    }\n    var count2 = count / 2;\n    var result = ch;\n\n    // double the input until it is long enough.\n    while (result.length &lt;= count2) {\n        result += result;\n    }\n    // use substring to hit the precise length target without\n    // using extra memory\n    return result + result.substring(0, count - result.length);\n};\n</code></pre>\n\n<p>This is verbose, so if you want a terse implementation you could go with the naive approach; it still performs betweeb 2X to 10X better than the Array.join approach, and is also faster than the doubling implementation for small inputs. Code:</p>\n\n<pre><code>// naive approach: simply add the letters one by one\nfunction repeatChar(count, ch) {\n    var txt = \"\";\n    for (var i = 0; i &lt; count; i++) {\n        txt += ch;\n    }\n    return txt;\n}\n</code></pre>\n\n<p>Further information:</p>\n\n<ul>\n<li><a href=\"http://www.zerotrickpony.com/buildstring\">Run speed test in your own browser</a></li>\n<li><a href=\"http://www.zerotrickpony.com/buildstring/buildstring_speed.js\">Full source code of speed test</a></li>\n<li><a href=\"http://www.zerotrickpony.com/buildstring/results.txt\">Speed test results</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>So, my question has been asked by someone else in it's Java form here: <a href=\"http://stackoverflow.com/questions/1802915/java-create-a-new-string-instance-with-specified-length-and-filled-with-specif\">Java - Create a new String instance with specified length and filled with specific character. Best solution?</a></p>\n\n<p>. . . but I'm looking for its JavaScript equivalent.</p>\n\n<p>Basically, I'm wanting to dynamically fill text fields with \"#\" characters, based on the \"maxlength\" attribute of each field.  So, if an input has has <code>maxlength=\"3\"</code>, then the field would be filled with \"###\".</p>\n\n<p>Ideally there would be something like the Java <code>StringUtils.repeat(\"#\", 10);</code>, but, so far, the best option that I can think of is to loop through and append the \"#\" characters, one at a time, until the max length is reached.  I can't shake the feeling that there is a more efficient way to do it than that.</p>\n\n<p>Any ideas?</p>\n\n<p>FYI - I can't simply set a default value in the input, because the \"#\" characters need to clear on focus, and, if the user didn't enter a value, will need to be \"refilled\" on blur. It's the \"refill\" step that I'm concerned with</p>\n",
            "last_activity_date": 1390786413,
            "question_id": 14343844,
            "score": 31,
            "tags": [
                "javascript",
                "html",
                "string"
            ],
            "title": "Create a string of variable length, filled with a repeated character"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can use <code>visibility</code> or <code>display</code> but you have to apply changes to the <code>div.style</code> object and not the <code>div</code> object itself.</p>\n\n<pre><code>var div = document.getElementById('div_id');\n\n// hide\ndiv.style.visibility = 'hidden';\n// OR\ndiv.style.display = 'none';\n\n// show\ndiv.style.visibility = 'visible';\n// OR\ndiv.style.display = 'block';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>if [DIV] is an element then   </p>\n\n<pre><code>[DIV].style.visibility='visible'\n</code></pre>\n\n<p>OR</p>\n\n<pre><code>[DIV].style.visibility='hidden' \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>Let's assume you do not use a library such as jQuery.</p>\n\n<p>If you do not already have a reference to the DOM element, get one using <code>var elem = document.getElementById('id');</code></p>\n\n<p>Then you can set any CSS property of that element. To show/hide, you can use two properties: <code>display</code> and <code>visibility</code>:</p>\n\n<pre><code>elem.style.display = 'none'; // hide\nelem.style.display = 'block'; // show - use this for block elements (div, p)\nelem.style.display = 'inline'; // show - use this for inline elements (span, a)\n</code></pre>\n\n<p>or</p>\n\n<pre><code>elem.style.visibility = 'hidden'; // hide, but let the element keep its size\nelem.style.visibility = 'visible';\n</code></pre>\n\n<hr>\n\n<p>If you are using jQuery, you can do it even easier as long as you want to set the <code>display</code> property:</p>\n\n<pre><code>$(elem).hide();\n$(elem).show();\n</code></pre>\n\n<p>It will automatically use the appropriate <code>display</code> value; you do not have to care about the element type (inline or block). Additionally, <code>elem</code> can not only be a DOM element but also a selector such as <code>#id</code> or <code>.class</code> or anything else that is valid CSS3 (and more!).</p>\n",
                    "is_accepted": false,
                    "score": 37
                }
            ],
            "body": "<p>Can you do something like</p>\n\n<pre><code>function showDiv()\n{\n    [DIV].visible = true;\n    //or something\n}\n</code></pre>\n\n<p>Sorry if this is kind of broad.</p>\n",
            "last_activity_date": 1390637225,
            "question_id": 9456289,
            "score": 31,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "How to make a DIV visible and invisible with JavaScript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>requirejs' noext plugin: <a href=\"https://github.com/millermedeiros/requirejs-plugins\">https://github.com/millermedeiros/requirejs-plugins</a></p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>If you don't feel like adding a dependency on noext, you can also just append a dummy query string to the path to prevent the .js extension from being appended, as in:</p>\n\n<pre><code>require.config({\n    paths: {\n        'signalr-hubs': '/signalr/hubs?noext'\n    }\n});\n</code></pre>\n\n<p>This is what the noext plugin does.</p>\n",
                    "is_accepted": false,
                    "score": 66
                },
                {
                    "body": "<p>I am using requirejs server side with node.js. The noext plugin does not work for me. I suspect this is because it tries to add ?noext to a url and we have filenames instead of urls serverside.</p>\n\n<p>I need to name my files .njs or .model to separate them from static .js files. Hopefully the author will update requirejs to not force automatic .js file extension conventions on the users.</p>\n\n<p>Meanwhile here is a quick patch to disable this behavior.</p>\n\n<p>To apply this patch (against version 2.1.15 of node_modules/requirejs/bin/r.js) :</p>\n\n<ol>\n<li>Save in a file called disableAutoExt.diff or whatever and open a terminal</li>\n<li>cd path/to/node_modules/</li>\n<li>patch -p1 &lt; path/to/disableAutoExt.diff</li>\n<li>add disableAutoExt: true, to your requirejs.config: requirejs.config({disableAutoExt: true,});</li>\n</ol>\n\n<p>Now we can do require([\"test/index.njs\", ...] ... and get back to work.</p>\n\n<p>Save this patch in disableAutoExt.diff :</p>\n\n<pre><code>--- mod/node_modules/requirejs/bin/r.js 2014-09-07 20:54:07.000000000 -0400\n+++ node_modules/requirejs/bin/r.js 2014-12-11 09:33:21.000000000 -0500\n@@ -1884,6 +1884,10 @@\n         //Delegates to req.load. Broken out as a separate function to\n         //allow overriding in the optimizer.\n         load: function (id, url) {\n+            if (config.disableAutoExt &amp;&amp; url.match(/\\..*\\.js$/)) {\n+                url = url.replace(/\\.js$/, '');\n+            }\n+\n             req.load(context, id, url);\n         },\n</code></pre>\n\n<p>The patch simply adds the following around line 1887 to node_modules/requirejs/bin/r.js:</p>\n\n<pre><code>if (config.disableAutoExt &amp;&amp; url.match(/\\..*\\.js$/)) {\n    url = url.replace(/\\.js$/, '');\n}\n</code></pre>\n\n<p>UPDATE: Improved patch by moving url change deeper in the code so it no longer causes a hang after calling undef on a module. Needed undef because:</p>\n\n<p>To disable caching of modules when developing with node.js add this to your main app file:</p>\n\n<pre><code>requirejs.onResourceLoad = function(context, map)\n{\n    requirejs.undef(map.name);\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using requireJS to load scripts. It has <a href=\"http://requirejs.org/docs/api.html#config\">this detail in the docs</a>:</p>\n\n<blockquote>\n  <p>The path that is used for a module name should not include the .js\n  extension, since the path mapping could be for a directory.</p>\n</blockquote>\n\n<p>In my app, I map all of my script files in a config path, because they're dynamically generated at runtime (my scripts start life as things like <code>order.js</code> but become things like <code>order.min.b25a571965d02d9c54871b7636ca1c5e.js</code> (this is a hash of the file contents, for cachebusting purposes). </p>\n\n<p>In some cases, require will add a second .js extension to the end of these paths. Although I generate the dynamic paths on the server side and then populate the config path, I have to then write some extra javascript code to remove the <code>.js</code> extension from the problematic files.</p>\n\n<p>Reading the requireJS docs, I really don't understand why you'd ever want the path mapping to be used for a directory. Does this mean it's possible to somehow load an entire directory's worth of files in one call? I don't get it.</p>\n\n<p>Does anybody know if it's possible to just force require to stop adding .js to file paths so I don't have to hack around it?</p>\n\n<p>thanks.</p>\n\n<p>UPDATE: added some code samples as requested.</p>\n\n<p>This is inside my HTML file (it's a Scala project so we can't write these variables directly into a <code>.js</code> file):</p>\n\n<pre><code>foo.js.modules = {\n    order               : '@Static(\"javascripts/order.min.js\")',\n    reqwest             : 'http://5.foo.appspot.com/js/libs/reqwest',\n    bean                : 'http://4.foo.appspot.com/js/libs/bean.min',\n    detect              : 'order!http://4.foo.appspot.com/js/detect/detect.js',\n    images              : 'order!http://4.foo.appspot.com/js/detect/images.js',\n    basicTemplate       : '@Static(\"javascripts/libs/basicTemplate.min.js\")',\n    trailExpander       : '@Static(\"javascripts/libs/trailExpander.min.js\")',\n    fetchDiscussion     : '@Static(\"javascripts/libs/fetchDiscussion.min.js\")'\n    mostPopular         : '@Static(\"javascripts/libs/mostPopular.min.js\")'\n};\n</code></pre>\n\n<p>Then inside my <code>main.js</code>:</p>\n\n<pre><code>requirejs.config({\n    paths: foo.js.modules\n});\n\nrequire([foo.js.modules.detect, foo.js.modules.images, \"bean\"], \n    function(detect, images, bean) {\n        // do stuff\n});\n</code></pre>\n\n<p>In the example above, I have to use the string \"bean\" (which refers to the require path) rather than my direct object (like the others use <code>foo.js.modules.bar</code>) otherwise I get the extra <code>.js</code> appended.</p>\n\n<p>Hope this makes sense.</p>\n",
            "last_activity_date": 1418310232,
            "question_id": 10585099,
            "score": 29,
            "tags": [
                "javascript",
                "requirejs"
            ],
            "title": "Is it possible to stop requireJS from adding the .js file extension automatically?"
        },
        {
            "answer_count": 17,
            "answers": [
                {
                    "body": "<p>Try to load your scripts in Head section.\nMoreover, it will be better if you define your scripts under some call like: <code>document.ready</code>, if you defined these scripts in body section</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try Asynchronous Loading: <a href=\"http://developers.facebook.com/docs/reference/javascript/fb.init/\" rel=\"nofollow\">http://developers.facebook.com/docs/reference/javascript/fb.init/</a></p>\n\n<pre><code>&lt;div id=\"fb-root\"&gt;&lt;/div&gt;\n&lt;script&gt;\n  window.fbAsyncInit = function() {\n    FB.init({\n      appId  : 'YOUR APP ID',\n      status : true, // check login status\n      cookie : true, // enable cookies to allow the server to access the session\n      xfbml  : true  // parse XFBML\n    });\n  };\n\n  (function() {\n    var e = document.createElement('script');\n    e.src = document.location.protocol + '//connect.facebook.net/en_US/all.js';\n    e.async = true;\n    document.getElementById('fb-root').appendChild(e);\n  }());\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I saw a case where Chrome had installed WidgetBlock which was blocking the Facebook script. The result was exactly this error message. Make sure you disable any extensions that may interfere.</p>\n",
                    "is_accepted": true,
                    "score": 43
                },
                {
                    "body": "<p>I encountered this problem too and what solved it has nothing to do with Facebook but the prior script I included that was in bad form</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"js/my_script.js\" /&gt;\n</code></pre>\n\n<p>I changed it to</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"js/my_script.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>And it works...</p>\n\n<p>Weew... hopefully my experience can help others stuck in this that has done almost about everything but still can't get it to work... </p>\n\n<p>Oh Boy... ^^</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>AdBlock blocks the facebook JS api scripts because it's related to facebook connect which is often annoying. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Have you set the appId property to your current application ID?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had the same problem and the only solution I found was putting everything that used the FB statement inside the init script, I also used async loading, so the callback function is after everything that needs FB. I have a common page dinamycally loaded with php so many parts need different facebook functions controlled by php if statements which is making everything a bit messy, but is working!. if I try taking any FB declaration out of the loading script, then firefox shows the \"FB is not defined\" message.\nHope it helps in anything.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had the same problem. The solutions was to use core.js instead of debug.core.js</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you're using JQuery, try putting FB withing Jquery call</p>\n\n<p>e.g.</p>\n\n<pre><code>$(document).ready(function(){\n    FB.Event.subscribe('auth.login', function(){\n        alert('logged in!');\n    });\n});\n</code></pre>\n\n<p>that worked for me</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Not sure if you're still having this problem, but I just had the same problem, turned out I had an extension running that was blocking Facebook from all websites that is not Facebook. Disabled it, worked!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>So the issue is actually that you are not waiting for the init to complete. This will cause random results. Here is what I use.</p>\n\n<pre><code>window.fbAsyncInit = function () {\n    FB.init({ appId: 'your-app-id', cookie: true, xfbml: true, oauth: true });\n\n    // *** here is my code ***\n    if (typeof facebookInit == 'function') {\n        facebookInit();\n    }\n};\n\n(function(d){\n    var js, id = 'facebook-jssdk'; if (d.getElementById(id)) {return;}\n    js = d.createElement('script'); js.id = id; js.async = true;\n    js.src = \"//connect.facebook.net/en_US/all.js\";\n    d.getElementsByTagName('head')[0].appendChild(js);\n}(document));\n</code></pre>\n\n<p></p>\n\n<p>This will ensure that once everything is loaded, the function facebookInit is available and executed. That way you don't have to duplicate the init code every time you want to use it.</p>\n\n<pre><code>function facebookInit() {\n   // do what you would like here\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>I had a very messy cody that loaded facebook's javascript via AJAX and i had to make sure that the js file has been completely loaded before calling FB.init\nthis seem to work for me</p>\n\n<pre><code>    $jQuery.load( document.location.protocol + '//connect.facebook.net/en_US/all.js',\n      function (obj) {\n        FB.init({\n           appId  : 'YOUR APP ID',\n           status : true, // check login status\n           cookie : true, // enable cookies to allow the server to access the session\n           xfbml  : true  // parse XFBML\n        });\n        //ANy other FB.related javascript here\n      });\n</code></pre>\n\n<p>This code uses jquery to load the javascript and do the function callback onLoad of the javascript. it's a lot less messier than having creating an onLoad eventlistener for the  block which in the end didn't work very well on IE6, 7 and 8</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Facebook prefers that you load their SDK asynchronously so that it doesn't block any other scripts that you need for your page but due to the <code>iframe</code> there's a chance that the console tries to call a method on the FB object before the FB object is completely created even though FB is only called in the <code>fbAsyncInit</code> function.<br>\nTry loading the javascript synchronously and you shouldn't get the error anymore. To do this you can copy and paste the code that Facebook provides and place it in an external <code>.js</code> file and then include that <code>.js</code> file in a <code>&lt;script&gt;</code> tag in the <code>&lt;head&gt;</code> of your page. If you must load their SDK asynchronously then check for FB to be created first before calling the <code>init</code> function. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This error will also appear if you omit the semicolon after the fbAsyncInit definition.</p>\n\n<pre><code>window.fbAsyncInit = function() {\n    FB.init({\n        appId: 'YOUR APP ID',\n        status: true,\n        cookie: true,\n        xfbml: true\n    });\n    //do stuff\n}; //&lt;-- semicolon required!\n</code></pre>\n\n<p>Without the semicolon, the situation is the same as in this shorter example:</p>\n\n<pre><code>var x = function () {\n    console.log('This is never called. Or is it?');\n}\n\n('bar');\n</code></pre>\n\n<p>The function gets called, because without the semicolon the ('bar') part is seen as a call to the function just defined.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Use a setTimeout, because sometimes the FB.init takes some time to get declared</p>\n\n<pre><code>function testAPI() {\n     console.log('Welcome!  Fetching your information.... ');\n     FB.api('/me', function(response) {\n         console.log('Good to see you, ' + response.name + '.');\n     });\n}\nfunction login() {\n    FB.login(function(response) {\n        if (response.authResponse) {\n            testAPI();\n        } else {\n            // cancelled\n        }\n    });\n}\nsetTimeout(function() {\n    login();\n},2000);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>To test Mattys suggestions about FB not finishing, I put an alert in the script.  This cause a delay that I could control.  Sure enough... it was a timing issue.</p>\n\n<pre><code>    $(\"document\").ready(function () {\n        // Wait...\n        alert('Click ok to init');\n        try {\n            FB.init({\n                appId: '###', // App ID\n                status: true, // check login status\n                cookie: true, // enable cookies to allow the server to access the session\n                xfbml: true  // parse XFBML\n            });\n        }\n        catch (err) {\n            txt = \"There was an error on this page.\\n\\n\";\n            txt += \"Error description: \" + err.message + \"\\n\\n\";\n            txt += \"Click OK to continue.\\n\\n\";\n            alert(txt);\n        }\n        FB.Event.subscribe('auth.statusChange', OnLogin);\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had the same problem and I've found the cause.</p>\n\n<p>I have avast! antivirus installed in my computer, and it asked me to install the update for chrome plugin. The new <code>avast! plugin for chrome</code> has the functionality to block ads and tracking, and, by default, it blocks the facebook access. I have solved my problem simply allowing facebook in the avast! chrome plugin for the website I needed.</p>\n\n<p>Since this question is very old, I think that some people might have the same cause as me, the new avast! chrome plugin.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>The following code, copied from the Facebook documentation <a href=\"http://developers.facebook.com/docs/reference/javascript/\">here</a>, is not working for me in Chrome.</p>\n\n<pre><code>&lt;div id=\"fb-root\"&gt;&lt;/div&gt;\n&lt;script src=\"http://connect.facebook.net/en_US/all.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  FB.init({\n  appId  : 'YOUR APP ID',\n  status : true, // check login status\n  cookie : true, // enable cookies to allow the server to access the session\n  xfbml  : true  // parse XFBML\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>In the Javascript console I get:</p>\n\n<pre><code>Uncaught ReferenceError: FB is not defined\n</code></pre>\n\n<p>I'm not having any problems with the SDK in Firefox or Safari, just Chrome.</p>\n",
            "last_activity_date": 1418915937,
            "question_id": 4556941,
            "score": 29,
            "tags": [
                "javascript",
                "google-chrome",
                "facebook",
                "facebook-javascript-sdk"
            ],
            "title": "Facebook Javascript SDK Problem: &quot;FB is not defined&quot;"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>No. But you should really use <code>console.log()</code> instead of <code>alert()</code> for debugging.</p>\n\n<p>In Chrome it even has the advantage of being able to print out entire objects (not just <code>toString()</code>).</p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>If you wish dialog box to be re-activated for the page you set as prevent dialog box to show.</p>\n\n<p>Chrome: select settings, a google page for chrome will open with all your settings for chrome.</p>\n\n<p>At the very bottom, go to advance settings and at the bottom of the advance settings you may click on Resset Browser Settings... this will make dialog box appear as they should.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Close the tab of the page you disabled alerts. Re-open the page in a new tab. The setting only lasts for the session, so alerts will be re-enabled once the new session begins in the new tab.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>Navigate to \"Settings\" from chrome menu then from Settings -> Content settings -> pop-ups ->\nAllow all sites.... -> Done</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>2 more solutions I had luck with when neither tab close + reopening the page in another tab nor closing all tabs in Chrome (and the browser) then restarting it didn't work:</p>\n\n<p>1) I fixed it on my machine by closing the tab, force-closing Chrome, &amp; restarting the browser without restoring tabs (Note: on a computer running CentOS Linux).</p>\n\n<p>2) My boss (also on CentOS) had the same issue (alerts are a big part of my company's Javascript debugging process for numerous reasons e.g. legacy), but my 1st method didn't work for him. However, I managed to fix it for him with the following process:</p>\n\n<ul>\n<li><p>a) Make an empty text file called FixChrome.sh, and paste in the following bash script:</p>\n\n<pre><code>#! /bin/bash\ncd ~/.config/google-chrome/Default     //adjust for your Chrome install location\nrm Preferences\nrm 'Current Session'\nrm 'Current Tabs'\nrm 'Last Session'\nrm 'Last Tabs'\n</code></pre></li>\n<li><p>b) close Chrome, then open Terminal and run the script (bash FixChrome.sh).</p></li>\n</ul>\n\n<p>It worked for him. Downside is that you lose all tabs from your current &amp; previous session, but it's worth it if this matters to you.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I sometimes find that I need to re-enable alerting for debugging. Of course I can close the tab and reload it but Is there a better way? </p>\n",
            "last_activity_date": 1420327379,
            "question_id": 11261519,
            "score": 28,
            "tags": [
                "javascript",
                "google-chrome",
                "alert",
                "alertdialog"
            ],
            "title": "chrome undo the action of &quot;prevent this page from creating additional dialogs&quot;"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>From the <a href=\"http://api.jquery.com/width/\">documentation of <code>width()</code></a>:</p>\n\n<blockquote>\n  <p>This method is also able to find the width of the window and document.</p>\n\n<pre><code>$(window).width();   // returns width of browser viewport\n$(document).width(); // returns width of HTML document\n</code></pre>\n</blockquote>\n\n<p><a href=\"http://jsfiddle.net/Xme7y/1/\">Simple jsFiddle Demo</a></p>\n\n<p>In the demo, I have set <code>html { width: 1000px; }</code>, which is bigger than the viewport.</p>\n\n<p>The width of the body of your HTML page is a third value. <code>$('body').width()</code> can also differ from the other two (try <code>body { margin: 100px; }</code> for example).</p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>Yes - width of window is width of browser window, and width of document is width of webpage.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You are correct.  the <code>window</code> is the viewable area of the browser.  The <code>document</code> is the actually body of the page.  So your <code>document</code> could extend far beyond the <code>window</code></p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p><code>$(window).width();</code>   returns the width of browser viewport </p>\n\n<p><code>$(document).width();</code> returns  width of HTML document</p>\n\n<p><code>$(document).width()</code> is a bit unreliable, resulting in a lower value for a full-screened browser . $(window).width() is safer. </p>\n\n<p><code>$(window).width()</code> gets the entire width of the window, including things like the scroll bar .</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<blockquote>\n  <p>Well, the <code>window</code> is the first thing that gets loaded into the browser.\n  This <code>window</code> object has the majority of the properties like <code>length</code>,\n  <code>innerWidth</code>, <code>innerHeight</code>, <code>name</code>, if it has been closed, its parents, and\n  more.</p>\n  \n  <p>What about the document object then?</p>\n  \n  <p>The <code>document</code> object is your html document that will be loaded into the\n  browser. The <code>document</code> actually gets loaded inside the <code>window</code> object\n  and has properties available to it like title, URL, cookie, etc. What\n  does this really mean? That means if you want to access a property for\n  the <code>window</code> it is <code>window.property</code>, if it is <code>document</code> it is\n  <code>window.document.property</code> which is also available in short as\n  <code>document.property</code>.</p>\n</blockquote>\n\n<p>So in conclusion the document could be smaller than the window.</p>\n\n<p>FROM: <a href=\"http://eligeske.com/jquery/what-is-the-difference-between-document-and-window-objects-2/\" rel=\"nofollow\">http://eligeske.com/jquery/what-is-the-difference-between-document-and-window-objects-2/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Another important difference.</p>\n\n<p><code>$(window).width();</code> is available before the document loads / is ready</p>\n\n<p><code>$(document).width();</code> is only available after the document had loaded</p>\n\n<p>So for the second, you need</p>\n\n<pre><code>$(document).ready(function() {\n   var w = $(document).width();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>What is the major difference between <code>$(window).width()</code> vs <code>$(document).width()</code> in jQuery?\nWhether window denotes the browser and document represents the body of html page? Am I correct ? </p>\n",
            "last_activity_date": 1395141049,
            "question_id": 9431050,
            "score": 28,
            "tags": [
                "javascript",
                "jquery",
                "jquery-selectors",
                "dimensions"
            ],
            "title": "Difference between $(window).width() vs $(document).width()"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>There are two parts to your question.</p>\n\n<p><strong>1) How to focus an input on page load?</strong></p>\n\n<p>You can just add the <code>autofocus</code> attribute to the input.  </p>\n\n<pre><code>&lt;input id=\"myinputbox\" type=\"text\" autofocus&gt;\n</code></pre>\n\n<p>However, this might not be supported in all browsers, so we can use javascript.</p>\n\n<pre><code>window.onload = function() {\n  var input = document.getElementById(\"myinputbox\").focus();\n}\n</code></pre>\n\n<p><strong>2) How to place cursor at the end of the input text?</strong></p>\n\n<p>Here's a non-jQuery solution with some borrowed code from <a href=\"http://stackoverflow.com/a/1675345/5651\">another SO answer</a>.   </p>\n\n<pre><code>function placeCursorAtEnd() {\n  if (this.setSelectionRange) {\n    // Double the length because Opera is inconsistent about \n    // whether a carriage return is one character or two.\n    var len = this.value.length * 2;\n    this.setSelectionRange(len, len);\n  } else {\n    // This might work for browsers without setSelectionRange support.\n    this.value = this.value;\n  }\n\n  if (this.nodeName === \"TEXTAREA\") {\n    // This will scroll a textarea to the bottom if needed\n    this.scrollTop = 999999;\n  }\n};\n\nwindow.onload = function() {\n  var input = document.getElementById(\"myinputbox\");\n\n  if (obj.addEventListener) {\n    obj.addEventListener(\"focus\", placeCursorAtEnd, false);\n  } else if (obj.attachEvent) {\n    obj.attachEvent('onfocus', placeCursorAtEnd);\n  }\n\n  input.focus();\n}\n</code></pre>\n\n<p>Here's an example of how I would accomplish this with jQuery.</p>\n\n<pre><code>&lt;input type=\"text\" autofocus&gt;\n\n&lt;script&gt;\n$(function() {\n  $(\"[autofocus]\").on(\"focus\", function() {\n    if (this.setSelectionRange) {\n      var len = this.value.length * 2;\n      this.setSelectionRange(len, len);\n    } else {\n      this.value = this.value;\n    }\n    this.scrollTop = 999999;\n  }).focus();\n});\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 56
                },
                {
                    "body": "<p>Code snippets:</p>\n\n<pre>\n<code>\nfunction focusOnMyInputBox(){\n    document.getElementById(\"myinputbox\").focus();\n}\n\n&lt;body onLoad=\"focusOnMyInputBox()\")&gt;\n\n\n&lt;input type=\"text\"  size=\"25\" id=\"myinputbox\" class=\"input-text\" name=\"input2\" onfocus=\"this.value = this.value;\" value = \"initial text\" /&gt;\n</code>\n</pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>A portable way of doing this is using a custom function (to handle browser differences) like <a href=\"http://stackoverflow.com/questions/511088/use-javascript-to-place-cursor-at-end-of-text-in-text-input-element/1675345#1675345\">this one</a>.</p>\n\n<p>Then setup a handler for the <code>onload</code> at the end of your <code>&lt;body&gt;</code> tag, as jessegavin wrote:</p>\n\n<pre><code>window.onload = function() {\n  document.getElementById(\"myinputbox\").focus();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just a heads up - you can now do this with HTML5 without JavaScript for browsers that support it:</p>\n\n<pre><code>&lt;input type=\"text\" autofocus&gt;\n</code></pre>\n\n<p>You probably want to start with this and build onto it with JavaScript to provide a fallback for older browsers.</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p><code>$(document).ready(function{\n$('#id').focus();\n})</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is what works fine for me:</p>\n\n<pre><code>&lt;form name=\"f\" action=\"/search\"&gt;\n    &lt;input name=\"q\" onfocus=\"fff=1\" /&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>fff will be a global variable which name is absolutely irrelevant and which aim will be to stop the generic onload event to force focus in that input.</p>\n\n<pre><code>&lt;body onload=\"if(!this.fff)document.f.q.focus();\"&gt;\n    &lt;!-- ... the rest of the page ... --&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>From: <a href=\"http://webreflection.blogspot.com.br/2009/06/inputfocus-something-really-annoying.html\" rel=\"nofollow\">http://webreflection.blogspot.com.br/2009/06/inputfocus-something-really-annoying.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you can't add to the BODY tag for some reason, you can add this AFTER the Form:</p>\n\n<pre><code>&lt;SCRIPT type=\"text/javascript\"&gt;\n    document.yourFormName.yourFieldName.focus();\n&lt;/SCRIPT&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can the cursor be focus on a specific input box on page load?</p>\n\n<p>Is it posible to retain initial text value as well and place cursor at end of input?</p>\n\n<pre><code>&lt;input type=\"text\"  size=\"25\" id=\"myinputbox\" class=\"input-text\" name=\"input2\" value = \"initial text\" /&gt;\n</code></pre>\n",
            "last_activity_date": 1414018126,
            "question_id": 4331022,
            "score": 28,
            "tags": [
                "javascript",
                "html",
                "dom",
                "xhtml",
                "javascript-events"
            ],
            "title": "Focus Input Box On Load"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Not regex, but useful to know plain old techniques like this.</p>\n\n<pre><code>var origString = \"thisString\";\nvar newString = origString.charAt(0).toUpperCase() + origString.substring(1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>You can split it up like this:</p>\n\n<pre><code>var splitName = originalName.replace(/([A-Z])/g, ' $1').split(' ');\n</code></pre>\n\n<p>Now if it started with an upper-case letter you'll get an empty first element of the result, so you'd want to check for that.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>\"thisStringIsGood\"\n    // insert a space before all caps\n    .replace(/([A-Z])/g, ' $1')\n    // uppercase the first character\n    .replace(/^./, function(str){ return str.toUpperCase(); })\n</code></pre>\n\n<p>displays </p>\n\n<pre><code>This String Is Good\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 68
                },
                {
                    "body": "<pre><code>function spacecamel(s){\n    return s.replace(/([a-z])([A-Z])/g, '$1 $2');\n}\n</code></pre>\n\n<p>spacecamel('somethingLikeThis')</p>\n\n<p>// returned value: something Like This</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This can be concisely done with regex lookahead (<a href=\"http://jsfiddle.net/7rpLz/\">live demo</a>):</p>\n\n<pre><code>function splitCamelCaseToString(s) {\n    return s.split(/(?=[A-Z])/).join(' ');\n}\n</code></pre>\n\n<p>(I thought that the <code>g</code> (global) flag was necessary, but oddly enough, it isn't in this particular case.)</p>\n\n<p>Using lookahead with <code>split</code> ensures that the matched capital letter is not consumed and avoids dealing with a leading space if UpperCamelCase is something you need to deal with. To capitalize the first letter of each, you can use:</p>\n\n<pre><code>function splitCamelCaseToString(s) {\n    return s.split(/(?=[A-Z])/).map(function(p) {\n        return p.charAt(0).toUpperCase() + p.slice(1);\n    }).join(' ');\n}\n</code></pre>\n\n<p>The <code>map</code> array method is an ES5 feature, but you can still use it in older browsers with <a href=\"http://jsfiddle.net/7rpLz/\">some code from MDC</a>. Alternatively, you can iterate over the array elements using a <code>for</code> loop.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I had an idle interest in this, particularly in handling sequences of capitals, such as in xmlHTTPRequest. The listed functions would produce \"Xml H T T P Request\" or \"Xml HTTPRequest\", mine produces \"Xml HTTP Request\".</p>\n\n<pre><code>function unCamelCase (str){\n    return str\n        // insert a space between lower &amp; upper\n        .replace(/([a-z])([A-Z])/g, '$1 $2')\n        // space before last upper in a sequence followed by lower\n        .replace(/\\b([A-Z]+)([A-Z])([a-z])/, '$1 $2$3')\n        // uppercase the first character\n        .replace(/^./, function(str){ return str.toUpperCase(); })\n}\n</code></pre>\n\n<p>There's also a String.prototype version <a href=\"https://gist.github.com/1005915\">in a gist</a>.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>A solution that handles numbers as well:</p>\n\n<pre><code>function capSplit(str){\n   return str.replace\n      ( /(^[a-z]+)|[0-9]+|[A-Z][a-z]+|[A-Z]+(?=[A-Z][a-z]|[0-9])/g\n      , function(match, first){\n          if (first) match = match[0].toUpperCase() + match.substr(1);\n          return match + ' ';\n          }\n       )\n   }\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/xh3HT/\" rel=\"nofollow\">Tested here [JSFiddle, no library.</a> Not tried IE]; should be pretty stable.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you don't care about older browsers (or don't mind using a fallback <strong>reduce</strong> function for them), this can split even strings like 'xmlHTTPRequest' (but certainly the likes of 'XMLHTTPRequest' cannot).</p>\n\n<pre><code>function splitCamelCase(str) {\n        return str.split(/(?=[A-Z])/)\n                  .reduce(function(p, c, i) {\n                    if (c.length === 1) {\n                        if (i === 0) {\n                            p.push(c);\n                        } else {\n                            var last = p.pop(), ending = last.slice(-1);\n                            if (ending === ending.toLowerCase()) {\n                                p.push(last);\n                                p.push(c);\n                            } else {\n                                p.push(last + c);\n                            }\n                        }\n                    } else {\n                        p.push(c.charAt(0).toUpperCase() + c.slice(1));\n                    }\n                    return p;\n                  }, [])\n                  .join(' ');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think this should be able to handle consecutive uppercase characters as well as simple camelCase.</p>\n\n<p>For example: someVariable => someVariable, but ABCCode != A B C Code. </p>\n\n<p>The below regex works on your example but also the common example of representing abbreviations in camcelCase.</p>\n\n<pre><code>\"somethingLikeThis\"\n    .replace(/([a-z])([A-Z])/g, '$1 $2')\n    .replace(/([A-Z])([a-z])/g, ' $1$2')\n    .replace(/\\ +/g, ' ') =&gt; \"something Like This\"\n\n\"someVariableWithABCCode\"\n    .replace(/([a-z])([A-Z])/g, '$1 $2')\n    .replace(/([A-Z])([a-z])/g, ' $1$2')\n    .replace(/\\ +/g, ' ') =&gt; \"some Variable With ABC Code\"\n</code></pre>\n\n<p>You could also adjust as above to capitalize the first character.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've been trying to get a JavaScript regex command to turn something like <code>thisString</code> into <code>This String</code> but the closest I've gotten is replacing a letter, resulting in something like <code>Thi String</code> or <code>This tring</code>. Any ideas?</p>\n\n<p>To clarify I can handle the simplicity of capitalizing a letter, I'm just not as strong with RegEx, and splitting <code>somethingLikeThis</code> into <code>something Like This</code> is where I'm having trouble.</p>\n",
            "last_activity_date": 1410206602,
            "question_id": 4149276,
            "score": 28,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "Javascript camelCase to Regular Form"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>You can use the following to clear all the elements. Note that </p>\n\n<pre><code>var select = document.getElementById(\"DropList\");\nvar length = select.options.length;\nfor (i = 0; i &lt; length; i++) {\n  select.options[i] = null;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>To remove the options of a select html object, you can use this piece of code:</p>\n\n<pre><code>function removeOptions(selectbox)\n{\n    var i;\n    for(i=selectbox.options.length-1;i&gt;=0;i--)\n    {\n        selectbox.remove(i);\n    }\n}\n//using the function:\nremoveOptions(document.getElementById(\"mySelectObject\"));\n</code></pre>\n\n<p>This will work in all browsers. =)</p>\n",
                    "is_accepted": false,
                    "score": 61
                },
                {
                    "body": "<p>Try</p>\n\n<pre><code>document.getElementsByTagName(\"Option\").length=0\n</code></pre>\n\n<p>Or maybe look into the removeChild() function.</p>\n\n<p>Or if you use jQuery framework.</p>\n\n<pre><code>$(\"DropList Option\").each(function(){$(this).remove();});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you wish to have a lighweight scrip, go for jQuery. In jQuery, the solution for removing all options will be like: <code>$(\"#droplist\").empty();</code></p>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<pre><code>function removeOptions(obj){\nwhile(obj.options.length)\n{\n    obj.remove(0);\n}\n</code></pre>\n\n<p>}</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This is the best way :</p>\n\n<pre><code>function (comboBox) {\n    while(comboBox.options.length &gt; 0){                \n    comboBox.remove(0);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Probably, not the cleanest solution, but it is definitely simpler than removing one-by-one:</p>\n\n<pre><code>document.getElementById(\"DropList\").innerHTML = \"\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<pre><code>while(document.getElementById(\"DropList\").childNodes.length&gt;0) \n{\n    document.getElementById(\"DropList\").removeChild(document.getElementById(\"DropList\").childNodes[0]);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var select = document.getElementById('/*id attribute of your select here*/');\nfor (var option in select){\n    select.remove(option);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you have to support IE and you have more than 100 items in your select list, I strongly recommend you consider replacing the select with a function like so:</p>\n\n<pre><code>function clearOptions(select) {\n    var selectParentNode = select.parentNode;\n    var newSelect = select.cloneNode(false); // Make a shallow copy\n    selectParentNode.replaceChild(newSelect, select);\n    return newSelect;\n}\n</code></pre>\n\n<p>The select parameter should be the element either from a jquery selector or document.getElementBy call.  The only downside to this is that you lose events you had wired up to the select, but you can easily reattach them as it is returned back out of the function.  I was working with a select that had ~3k items and it would take 4 seconds on IE9 to clear the select so I could update it with the new content.  Nearly instant doing it this way.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var select =$('#selectbox').val();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>with <strong>PrototypeJS</strong> :</p>\n\n<pre><code>$('yourSelect').select('option').invoke('remove');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>using jquery</p>\n\n<pre><code>$(#selection_box_id).empty();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm stumped.<br>\nMy code works in IE but breaks in Safari, Firefox, and Opera. (big surprise)</p>\n\n<pre><code>document.getElementById(\"DropList\").options.length=0;\n</code></pre>\n\n<p>After searching, I've learned that it's the <strong><em>\"length=0\"</em></strong> that it doesn't like.<br>\nI've tried <strong><em>\"...options=null\"</em></strong> and <strong><em>\"var clear=0; ...length=clear\"</em></strong> with the same result.</p>\n\n<p>I am doing this to multiple objects at a time, so I am looking for some lightweight JS code.</p>\n",
            "last_activity_date": 1424763023,
            "question_id": 3364493,
            "score": 28,
            "tags": [
                "javascript",
                "select",
                "drop-down-menu",
                "option",
                "clear"
            ],
            "title": "How do I clear all options in a dropdown box?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can use eval(jsonString) if you trust the data in the string, otherwise you'll need to parse it properly - check json.org for some code samples.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can use <a href=\"https://github.com/douglascrockford/JSON-js/blob/master/json2.js\" rel=\"nofollow\">this library</a> from JSON.org to translate your string into a JSON object.</p>\n\n<pre><code>var var1_obj = JSON.parse(var1);\n</code></pre>\n\n<p>Or you can use the <a href=\"http://code.google.com/p/jquery-json/\" rel=\"nofollow\">jquery-json</a> library as well.</p>\n\n<pre><code>var var1_obj = $.toJSON(var1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Some modern browsers have support for parsing JSON into a native object:</p>\n\n<pre><code>var var1 = '{\"cols\": [{\"i\" ....... 66}]}';\nvar result = JSON.parse(var1);\n</code></pre>\n\n<p>For the browsers that don't support it, you can download json2.js from <a href=\"http://www.json.org/js.html\">json.org</a> for safe parsing of a JSON object.  The script will check for native JSON support and if it doesn't exist, provide the JSON global object instead.  If the faster, native object is available it will just exit the script leaving it intact.  You must, however, provide valid JSON or it will throw an error &mdash; you can check the validity of your JSON with <a href=\"http://jslint.com\">http://jslint.com</a> or <a href=\"http://jsonlint.com\">http://jsonlint.com</a>.</p>\n",
                    "is_accepted": true,
                    "score": 75
                },
                {
                    "body": "<p>the string in your question is not a valid json string. From <a href=\"http://json.org/\" rel=\"nofollow\">json.org website</a>:</p>\n\n<blockquote>\n  <p>JSON is built on two structures:</p>\n\n<pre><code>* A collection of name/value pairs. In various languages, this is \n  realized as an object, record, struct, dictionary, hash table, keyed list, or\n  associative array.\n* An ordered list of values. In most languages, this is realized as an\n  array, vector, list, or sequence.\n</code></pre>\n</blockquote>\n\n<p>Basically a json string will always start with either { or [.</p>\n\n<p>Then as @Andy E and @Cryo said you can parse the string with json2.js or some other libraries.</p>\n\n<p>IMHO you should avoid eval because it will any javascript program, so you might incur in security issues.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The string you are returning is not valid JSON. The names in the objects needs to be quoted and the whole string needs to be put in <code>{ \u2026 }</code> to form an object. JSON also cannot contain something like <code>new Date()</code>. JSON is just a small subset of JavaScript that has only strings, numbers, objects, arrays, <code>true</code>, <code>false</code> and <code>null</code>.</p>\n\n<p>See the <a href=\"http://json.org/\" rel=\"nofollow\">JSON grammar</a> for more information.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am using a JS object to create graphs with Google visualization. I am trying to design the data source. At first, I created a JS object client-side.  </p>\n\n<pre><code>var JSONObject = {\n    cols: [{id: 'date', label: 'Date', type: 'date'},\n{id: 'soldpencils', label: 'Sold Pencils', type: 'number'},\n        {id: 'soldpens', label: 'Sold Pens', type: 'number'}],\n    rows: [{c:[{v: new Date(2008,1,1),f:'2/1/2008'},{v: 30000}, {v: 40645}]},\n        {c:[{v: new Date(2008,1,2),f:'2/2/2008'},{v: 14045}, {v: 20374}]},\n     {c:[{v: new Date(2008,1,3),f:'2/3/2008'},{v: 55022}, {v: 50766}]}]  \n};\n\nvar data = new google.visualization.DataTable(JSONObject, 0.5);\n</code></pre>\n\n<p>Now I need to fetch the data dynamically. So I send an AJAX request to a page that returns the JSON string:</p>\n\n<pre><code> \"cols: [{id: 'date', label: 'Date', type: 'date'},\n{id: 'soldpencils', label: 'Sold Pencils', type: 'number'},\n{id: 'soldpens', label: 'Sold Pens', type: 'number'}],\n  rows: [{c:[{v: new Date(2008,1,1),f:'2/1/2008'},{v: 30000}, {v: 40645}]},\n      {c:[{v: new Date(2008,1,2),f:'2/2/2008'},{v: 14045}, {v: 20374}]},\n{c:[{v: new Date(2008,1,3),f:'2/3/2008'},{v: 55022}, {v: 50766}]}\"\n</code></pre>\n\n<p>This I save into a variable:</p>\n\n<pre><code>var var1 = \"cols: [{i ....... 66}]}\"\n</code></pre>\n\n<p>and show as </p>\n\n<pre><code>alert(var1);\n</code></pre>\n\n<p>Now my task is to create a JS object from this string. This is not working. When I use a JS object, everything works fine and I am able to get my required graph. Now if I try putting the same value of string from the AJAX request which I confirmed from a alert message into a n object, the object is not getting created correctly. Please let me know your opinion and any correction or advices.</p>\n",
            "last_activity_date": 1350312235,
            "question_id": 2257117,
            "score": 28,
            "tags": [
                "javascript",
                "jquery",
                "json",
                "jsonp",
                "getjson"
            ],
            "title": "JSON string to JS object"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You could try using <code>$(this).attr('style', 'height:1167px !important');</code> I haven't tested it, but it should work.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Unless I've misread your question, what you're doing <a href=\"http://jsfiddle.net/FMbXs/\" rel=\"nofollow\">does work in jsfiddle</a>. </p>\n\n<p><strong>EDIT:</strong> My fiddle only works in some browsers (so far, Chrome: pass, IE8: fail).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can create a dynamic stylesheet with rules that override the properties you want and apply it on the page.</p>\n\n<pre><code>var $stylesheet = $('&lt;style type=\"text/css\" media=\"screen\" /&gt;');\n\n$stylesheet.html('.tall{height:1167px !important;} .short{height:985px !important}');\n\n$('body').append($stylesheet);\n</code></pre>\n\n<p>Now, when you add our newly created classes, they will take precedence since they are the last defined.</p>\n\n<pre><code>$('.ui-widget-overlay').addClass('tall');\n</code></pre>\n\n<p><strong>demo at</strong> <a href=\"http://jsfiddle.net/gaby/qvRSs/\" rel=\"nofollow\">http://jsfiddle.net/gaby/qvRSs/</a></p>\n\n<hr>\n\n<p><strong>update</strong></p>\n\n<p>For pre-IE9 support use</p>\n\n<pre><code>var $stylesheet = $('&lt;style type=\"text/css\" media=\"screen\"&gt;\\\n                    .tall{height:300px !important;}\\\n                    .short{height:100px !important}\\\n                    &lt;/style&gt;');\n\n$('body').append($stylesheet);\n</code></pre>\n\n<p><strong>demo at</strong> <a href=\"http://jsfiddle.net/gaby/qvRSs/3/\" rel=\"nofollow\">http://jsfiddle.net/gaby/qvRSs/3/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Dont apply styles to a class. Apply a class to  your div as a style!</p>\n\n<p>Let jQuery do all the work for you</p>\n\n<p>You style sheet should have these  classes in them</p>\n\n<pre><code>.ui-widget-overlay  {\n         position: absolute;\n         left: 8px;\n         top: 9px;\n         width: 518px !important; \n         }\n\n.ui-widget-small { height: 985px;  }\n\n.ui-widget-full { height: 1167px; }\n</code></pre>\n\n<p>Ok thats your CSS sorted</p>\n\n<p>now your div</p>\n\n<pre><code> &lt;div id=\"myWidget\" class=\"ui-widget-overlay ui-widget-small\"&gt; YOUR STUFF &lt;/div&gt;\n</code></pre>\n\n<p>Now you can use jQuery to manipulate your divs either by attaching to a button/click/hover whatever it is you wanna use</p>\n\n<pre><code>$('#myWidget').removeClass('ui-widget-small').addClass('ui-widget-full')\n</code></pre>\n\n<p>And you dont need to use !important - that is really used when you start having issues with large CSS files or several loaded styles.</p>\n\n<p>This is instant but you can also add an effect</p>\n\n<pre><code>$('#myWidget').hide('slow', function(){ $('#myWidget').removeClass('ui-widget-small').addClass('ui-widget-full').show('slow') }  )\n</code></pre>\n\n<p>You can add styles dynamically to your page like this- and to replace all existing classes with another class, we can use .attr('class', 'newClass') instead.</p>\n\n<pre><code>$('body').prepend('&lt;style type=\"text/css\"&gt; .myDynamicWidget { height: 450px; } &lt;/style&gt;')\n$('#myWidget').attr('class', 'ui-widget-overlay')\n$('#myWidget').addClass('myDynamicWidget')\n</code></pre>\n\n<p>But you do not want to be over writing your existing styles using this method. This should be used in a 'lost' case scenario. Just demonstrates the power of jQuery</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Please remove height attribute from class and then try to implement your if and else condition.</p>\n\n<pre><code>.ui-widget-overlay  {\n         position: absolute;\n         left: 8px;\n         top: 9px;\n         width: 518px !important; \n         }\n\nif\n     $('.ui-widget-overlay').attr(\"height\", \"985px\");\nelse\n     $('.ui-widget-overlay').attr(\"height\", \"1167px\");\n</code></pre>\n\n<p>Enjoy code....keep smiling...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is a trick to do this.</p>\n\n<pre><code>$('.ui-widget-overlay').css('cssText', 'height:985px !important;');\n\n$('.ui-widget-overlay').css('cssText', 'height:1167px !important;');\n</code></pre>\n\n<p><strong>cssText</strong> is doing the trick here. It is appending css styles as string, not as variable. </p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I solved this problem like this:</p>\n\n<pre><code>inputObj.css('cssText', inputObj.attr('style')+'padding-left: ' + (width + 5) + 'px !IMPORTANT;');\n</code></pre>\n\n<p>So no inline-Style is lost, an the last overrides the first</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a dialog with an overlay declared like so:</p>\n\n<pre><code>     .ui-widget-overlay  {\n         position: absolute;\n         left: 8px;\n         top: 9px;\n         height: 985px !important;\n         width: 518px !important; \n      }\n</code></pre>\n\n<p>The page I have will have two different page heights. To account for this with the overlay I have done this in my JS file:</p>\n\n<p>If small one visible:</p>\n\n<pre><code>$('.ui-widget-overlay').css(\"height\", \"985px !important\");\n</code></pre>\n\n<p>else</p>\n\n<pre><code>$('.ui-widget-overlay').css(\"height\", \"1167px !important\");\n</code></pre>\n\n<p>Apparently this does not work. Is there another way to over ride <code>!important</code> that would?</p>\n\n<p>The page can switch back and forth so I need to always have one or the other. Also if I do not add <code>!important</code> to the css then the overlay will expand in height infinitely (its in facebook so i am assuming there is an issue there)</p>\n\n<p>Any suggestions? </p>\n",
            "last_activity_date": 1399292556,
            "question_id": 5824079,
            "score": 27,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "jquery-ui",
                "jquery-dialog"
            ],
            "title": "Using !important in jQuery&#39;s css() function"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Yes, you can use object to do this:</p>\n\n<pre><code>var myDict = { 1:false , 2:true , 3:false };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You don't need separate dictionary classes, since Javascript objects act as dictionaries. See this:</p>\n\n<pre><code>var userObject = {}; // equivalent to new Object()\nuserObject[\"lastLoginTime\"] = new Date();\nalert(userObject[\"lastLoginTime\"]);\n</code></pre>\n\n<p>Full article here: <a href=\"http://msdn.microsoft.com/en-us/magazine/cc163419.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/magazine/cc163419.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>jQuery, no. But JavaScript does. There are only two structures in JavaScript, <a href=\"https://developer.mozilla.org/en/JavaScript/Guide/Predefined_Core_Objects#Array_Object\" rel=\"nofollow\"><em>arrays</em></a> and <a href=\"https://developer.mozilla.org/en/JavaScript/Guide/Working_with_Objects\" rel=\"nofollow\"><em>objects</em></a>.</p>\n\n<p>Objects can be used as dictionary, where the properties are the \"keys\":</p>\n\n<pre><code>var dict = {\n    1: true,\n    2: true,\n    3: false\n};\n</code></pre>\n\n<p>Properties of objects can be either accessed with dot notation, <code>obj.property</code> (if the property name is a valid identifier, which a digit as used above is not) or with array access notation, <code>obj['property']</code>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>No, jQuery doesn't, but Javascript does.</p>\n\n<p>Just use an object:</p>\n\n<pre><code>var dict = {\n  \"1\" : false,\n  \"2\" : true,\n  \"3\" : false\n};\n\n// lookup:\nvar second = dict[\"2\"];\n// update:\ndict[\"2\"] = false;\n// add:\ndict[\"4\"] = true;\n// delete:\ndelete dict[\"2\"];\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 62
                },
                {
                    "body": "<p>With pure JavaScript,</p>\n\n<pre><code>var myDictionary = new Object();\nmyDictionary[1] = false;\nmyDictionary[2] = true;\nmyDictionary[3] = false;\n\nfunction look(i) { return myDictionary[i];}\nlook(1); // will return false\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Does JQuery support <code>Dictionaries</code> (key, value) collection ?</p>\n\n<p>I would like to set the following data in a structure </p>\n\n<pre><code>[1, false]\n[2, true]\n[3, false]\n</code></pre>\n\n<p>with the ability to add, lookup, delete and update.</p>\n\n<p>Any help!</p>\n",
            "last_activity_date": 1342421306,
            "question_id": 5402180,
            "score": 27,
            "tags": [
                "javascript",
                "jquery",
                "collections",
                "dictionary"
            ],
            "title": "Does JQuery support Dictionaries (key, value) collection?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You should <strong>not</strong> add development tools to a production page.</p>\n\n<p>To answer the other question: The code cannot have a negative side-effect:</p>\n\n<ul>\n<li><code>window.console</code> will evaluate to false if <code>console</code> is not defined</li>\n<li><code>console.log(\"Foo\")</code> will print the message to the console when it's defined (provided that the page does not overwrite <code>console.log</code> by a non-function).</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Yes. console.log will throw an exception in browsers that don't have support for it (console object will not be found).</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Another way of dealing with this is to 'stub' out the console object when it isn't defined so no errors are thrown in contexts that do not have the console i.e.</p>\n\n<pre><code>if (!window.console) {\n  var noOp = function(){}; // no-op function\n  console = {\n    log: noOp,\n    warn: noOp,\n    error: noOp\n  }\n}\n</code></pre>\n\n<p>you get the idea... there are a lot of functions defined on the various implementations of the console, so you could stub them all or just the ones you use (e.g. if you only ever use <code>console.log</code> and never used <code>console.profile</code>, <code>console.time</code> etc...)</p>\n\n<p>This for me is a better alternative in development than adding conditionals in front of every call, or not using them.</p>\n\n<p>see also: <a href=\"http://stackoverflow.com/questions/1114187/is-it-a-bad-idea-to-leave-firebug-console-log-calls-in-your-producton-javascri\">Is it a bad idea to leave firebug &quot;console.log&quot; calls in your producton JavaScript code?</a></p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>If minification is part of your build process, you may use it to strip out debug code, as explained here with Google closure compiler: <a href=\"http://stackoverflow.com/questions/2934509/exclude-debug-javascript-code-during-minification\">Exclude debug javascript code during minification</a></p>\n\n<pre><code>if (DEBUG) {\n  console.log(\"Won't be logged if compiled with --define='DEBUG=false'\")\n}\n</code></pre>\n\n<p>If you compile with advanced optimizations, this code will even be identified as dead and removed entirely</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p><em>Yes, its good practice to use <code>console.log</code> for javascript debugging purpose, but it needs to be removed from the production server or if needed can be added on production server with some key points to be taken into consideration:</em></p>\n\n<pre><code>**var isDebugEnabled=\"Get boolean value from Configuration file to check whether debug is enabled or not\".**\nif (window.console &amp;&amp; isDebugEnabled) {\n    console.log(\"Debug Message\");\n}\n</code></pre>\n\n<p><em>Above code block has to be used everywhere for logging in order to first verify whether the console is supported for the current browser and whether debug is enabled or not.</em></p>\n\n<blockquote>\n  <p><code>isDebugEnabled</code> has to be set as true or false based on our\n  environment.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Generally yes, its not a great idea to expose log messages in your production code. </p>\n\n<p>Ideally, you should remove such log messages with a build script before deployment; but many (most) people do not use a build process (including me).</p>\n\n<p>Here's a short snippet of some code I've been using lately to solve this dilemma. It fixes errors caused by an undefined <code>console</code> in old IE, as well as disabling logging if in \"development_mode\".</p>\n\n<pre><code>// fn to add blank (noOp) function for all console methods\nvar addConsoleNoOp =  function (window) {\n    var names = [\"log\", \"debug\", \"info\", \"warn\", \"error\",\n        \"assert\", \"dir\", \"dirxml\", \"group\", \"groupEnd\", \"time\",\n        \"timeEnd\", \"count\", \"trace\", \"profile\", \"profileEnd\"],\n        i, l = names.length,\n        noOp = function () {};\n    window.console = {};\n    for (i = 0; i &lt; l; i = i + 1) {\n        window.console[names[i]] = noOp;\n    }\n};\n\n// call addConsoleNoOp() if console is undefined or if in production\nif (!window.console || !window.development_mode) {\n    this.addConsoleNoOp(window);\n}\n</code></pre>\n\n<p><em>I'm pretty sure I took much of the above <code>addConsoleNoOp</code> f'n from another answer on SO, but cannot find right now. I'll add a reference later if I find it.</em></p>\n\n<p>edit: Not the post I was thinking of, but here's a similar approach: <a href=\"https://github.com/paulmillr/console-polyfill/blob/master/index.js\" rel=\"nofollow\">https://github.com/paulmillr/console-polyfill/blob/master/index.js</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I basically overwrite the console.log function with the one what has knowledge of where the code is being run. Thus i can keep using console.log as I do always. It automatically knows that I am in dev/qa mode or in production. There is also a way to force it.\nHere is a working fiddle.\n<a href=\"http://jsfiddle.net/bsurela/Zneek/\" rel=\"nofollow\">http://jsfiddle.net/bsurela/Zneek/</a></p>\n\n<p>Here is the snippet as stack overflow is intimated by people posting jsfiddle</p>\n\n<pre><code>  log:function(obj)\n{\n    if(window.location.hostname === domainName)\n    {\n        if(window.myLogger.force === true)\n        {\n            window.myLogger.original.apply(this,arguments);\n        }\n    }else {\n        window.myLogger.original.apply(this,arguments);\n    }\n},\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h2>UglifyJS2</h2>\n\n<p>If you are using this minifier, you can set <a href=\"https://github.com/mishoo/UglifyJS2\"><code>drop_console</code> option</a>:</p>\n\n<blockquote>\n  <p>Pass true to discard calls to console.* functions</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>var AppLogger = (function () {\n  var debug = false;\n  var AppLogger = function (isDebug) {\n    debug = isDebug;\n  }\n  AppLogger.conlog = function (data) {\n    if (window.console &amp;&amp; debug) {\n        console.log(data);\n    }\n  }\n  AppLogger.prototype = {\n    conlog: function (data) {\n        if (window.console &amp;&amp; debug) {\n            console.log(data);\n        }\n    }\n  };\nreturn AppLogger;\n})();\n</code></pre>\n\n<p><strong><em>Usage:</em></strong></p>\n\n<pre><code>var debugMode=true;\nvar appLogger = new AppLogger(debugMode);\nappLogger.conlog('test');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I currently have this JS statement everywhere in my code:</p>\n\n<pre><code>window.console &amp;&amp; console.log(\"Foo\");\n</code></pre>\n\n<p>I am wondering if this is costly at all, or has any negative side-effects in production.</p>\n\n<p>Am I free to leave client-side logging in, or should it go?</p>\n\n<p>EDIT: In the end, I suppose the best argument I (and anyone else?) can come up with is that there is a possibly non-negligible amount of extra data transferred between the server and the client by leaving logging messages left in. If production code is to be fully optimized, logging will have to be removed to reduce the size of javascript being sent to the client.</p>\n",
            "last_activity_date": 1418757866,
            "question_id": 8002116,
            "score": 26,
            "tags": [
                "javascript",
                "logging"
            ],
            "title": "Should I be removing console.log from production code?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>It may not be detecting the keyboard.  But I would try detecting if the user is on a mobile browser.  Since the devices that have native virtual keyboards almost unanimously run on mobile browsers.</p>\n\n<p><a href=\"http://jquerybyexample.blogspot.com/2012/03/detect-mobile-browsers-using-jquery.html\" rel=\"nofollow\">Here is a nice little script that uses jquery</a></p>\n\n<p>If they aren't mobile present your standard input field. </p>\n\n<p>If they are mobile do not display the input field (So they don't get the virtual keyboard), instead have a hidden field or list that gets updated with jquery when they click the buttons for your pinpad.  </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think the best approach would be to combine HTML5 form attributes with an optional virtual keyboard link.</p>\n\n<p>HTML5 form attributes can be used to trigger different types of keyboards. For example, <code>&lt;input type=\"email\"&gt;</code>, <code>&lt;input type=\"number\"&gt;</code> and <code>&lt;input type=\"tel\"&gt;</code> will trigger the appropriate keyboard types on iOS (not sure about Android/WinPho/other, but I would imagine it does the same), allowing the user to input the data more easily.</p>\n\n<p>If you want, you could additionally offer a button to trigger a custom numpad under the text field for older non-HTML5 compliant mobile browsers. Those will display the new HTML5 fields as standard text fields.</p>\n\n<p>You can use browser sniffing to detect mobile browsers, but don't forget that those can still support things such as bluetooth keyboards. Sniffing additionally has the problem that it will almost certainly miss some browsers, and incorrectly detect others, thus you shouldn't rely on it solely.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>I don't think overriding default onscreen keyboard is a good idea, and I'd recommend going with what Jani suggested - virtual keyboards adapt too.</p>\n\n<p>But I'm sure it is possible to detect most keyboards with the <code>resize</code> event paired with focus on the field or by monitoring <code>window.innerHeight</code> (or some other [a-z]*Height) and comparing value before and after field focus.</p>\n\n<p>This is a weird case of feature detection, so it will need plenty of experimentation. I wouldn't do it if I were you.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I came across a newer question the other day and a great answer that may help with your keyboard issue.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/13421303/time-out-on-jquery-hover-function\">Time out on jquery hover (touch)</a></p>\n\n<p>Essentially it uses a JQuery function that returns a boolean if it was able to create a touch event.</p>\n\n<pre><code>$(document).ready(function() {\n\n    function hasTouch() {\n        try {\n           document.createEvent(\"TouchEvent\");\n           return true;\n        } catch (e) {\n           return false;\n        }    \n    }\n\n    var touchPresent = hasTouch();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://wurfl.sourceforge.net/\" rel=\"nofollow\">WURFL</a> is a serverside framework that offers you a lot of information about the requesting device's capabilities. With wurfel in place, your application will able to serve the various devices / device groups with optimised output/markup.</p>\n\n<p>One of the simpliest scenarious would be to distiguish between desktops, tables and smartphones.</p>\n\n<p>The database (xml file) is updated regularly and official api's are available for java, php and .net</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have been thinking about this a while now, and I can't figure a way to deal with it. Is there any way to detect if the user uses a virtual (software) keyboard or a traditional (hardware) keyboard?</p>\n\n<p>The new Windows Surface has its own keyboard in the cover, and for Android / iPad there are a ton of different bluetooth keyboards.</p>\n\n<p>So, do any of you have any input about this?<br>\nI'm aiming for Android, IOS &amp; Windows Tablet/Phone.</p>\n\n<hr>\n\n<p><strong>Motivation:</strong> (very subjective)</p>\n\n<p>When developing web applications for tablet/smartphone I have come to the understanding that it's easier - in many situations - to use a JavaScript keyboard instead of the OS's software keyboard.</p>\n\n<p>Lets say you want to enter a PIN code. Instead of having a keyboard filling half of the screen:</p>\n\n<p>Software (OS) keyboard:</p>\n\n<pre><code>|----------------|\n|    [ input]    |\n|                |\n|----------------|\n|  1  2  3  4  5 |\n|  6  7  8  9  0 |\n|----------------|\n</code></pre>\n\n<p>JavaScript keyboard:</p>\n\n<pre><code>|----------------|\n|    [ input]    |\n|    | 1 2 3|    |\n|    | 4 5 6|    |\n|    |_7_8_9|    |\n|                |\n|                |\n|----------------|\n</code></pre>\n\n<p>If you need to handle a lot of inputs, maybe you want to make an overlaying <code>div</code> with the inputs and use the software keyboard:</p>\n\n<pre><code>|----------------|\n| P1 P2    P3 P4 |\n| [inp 1][inp 2] |\n|----------------|\n|    KEYBOARD    |\n|                |\n|----------------|\n</code></pre>\n\n<p>But if the user has their own hardware keyboard, we want to make the edit inline in place.</p>\n\n<hr>\n\n<p>I have been looking around SO and found  this post: <a href=\"http://stackoverflow.com/questions/2593139/ipad-web-app-detect-virtual-keyboard-using-javascript-in-safari\">iPad Web App: Detect Virtual Keyboard Using JavaScript in Safari?</a> ... but this seams to only work in IOS - not sure about browser.</p>\n",
            "last_activity_date": 1353266447,
            "question_id": 13270659,
            "score": 25,
            "tags": [
                "javascript",
                "jquery",
                "keyboard",
                "virtual",
                "tablet"
            ],
            "title": "Detect virtual keyboard vs. hardware keyboard"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>If you're referring to stack trace of the error object, then AFAIK, this is not possible. </p>\n\n<p>Simple reason being that a stack trace is related to an execution context in which runtime exceptions (handled with try...catch...finally) were created or thrown (with <code>new Error()</code> or <code>throw</code>).</p>\n\n<p>Whereas when <code>window.onerror</code> is invoked, it is called within a different context. </p>\n\n<p>You can get some mileage by inspecting <code>window.event</code> (not available on FF) in your <code>onerror</code> handler.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>this is now possible in some browsers.\nThe <a href=\"http://html5.org/tools/web-apps-tracker?from=8085&amp;to=8086\">spec</a> was updated to include the actual error with stacktrace as the 5th parameter.</p>\n\n<p>the problem is that not every browser supports this yet, so you could do something like this:</p>\n\n<pre><code>window.onerror = function(message, filename, lineno, colno, error)\n{\n    if(error != null)\n    {\n        //handle the error with stacktrace in error.stack\n    }\n    else\n    {\n        //sadly only 'message', 'filename' and 'lineno' work here\n    }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                }
            ],
            "body": "<p>Javascript has this great callback <code>window.onerror</code>. It's quite convenient to track any error. However, it calls with the error name, the file name and the line. It's certainly not as rich as getting the actual error object from a <code>try...catch</code> statement. \nThe actual error object contains a lot more data, so I am trying to get that. Unfortunately, <code>try...catch</code> statement do not work fine when you start having async code.</p>\n\n<p>Is there a way to combine and get the best of both worlds? I initially looked for a way to get  the <em>last</em> error triggered within an <code>onerror</code> block, but it looks like JS doesn't store that.</p>\n\n<p>Any clue?</p>\n",
            "last_activity_date": 1389099327,
            "question_id": 7099127,
            "score": 25,
            "tags": [
                "javascript",
                "error-handling",
                "onerror"
            ],
            "title": "Get the actual Javascript Error object with window.onerror"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can add a event listener to the window that calls <code>preventDefault()</code> on all dragover and drop events.<br>\nExample:</p>\n\n<pre><code>window.addEventListener(\"dragover\",function(e){\n  e = e || event;\n  e.preventDefault();\n},false);\nwindow.addEventListener(\"drop\",function(e){\n  e = e || event;\n  e.preventDefault();\n},false);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>try this:</p>\n\n<pre><code>document.body.addEventListener('drop', function(e) {\n    e.preventDefault();\n}, false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm adding an html5 drag and drop uploader to my page.</p>\n\n<p>When a file is dropped into the upload area, everything works great.</p>\n\n<p>However, if I accidentally drop the file outside of the upload area, the browser loads the local file as if it is a new page.</p>\n\n<p>How can I prevent this behavior?</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1420332895,
            "question_id": 6756583,
            "score": 25,
            "tags": [
                "javascript",
                "jquery",
                "html5",
                "drag-and-drop"
            ],
            "title": "Prevent browser from loading a drag-and-dropped file"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Since every view has a reference to the model its displaying, what I would do is assign id of the model to the view's associated element(hopefuly that is not affected by the changes by outside event). Also make sure that the model has a reference to its view. Then have these models stored in a Backbone collection. </p>\n\n<p>With this setup, once something happens to an element, you use the elements id to retrieve corresponding model from Backbone collection that you created above and then this model will give you your view reference.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Every view can register for DOM events.  As such, every view with the kind of element that you are interested in should register for the DOM event and then assign an event-responding function that does what you want.  If you need to DRY things up, use mixin techniques to mix in the function.</p>\n\n<p>I think maybe this solution is easier than you may have initially imagined.  Just let the views do the work that they are intended to do.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You could maintain a views hash (dictionary) that uses the element as the key and returns the view (or views).</p>\n\n<p><a href=\"http://www.timdown.co.uk/jshashtable/\" rel=\"nofollow\">http://www.timdown.co.uk/jshashtable/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've just written a jQuery plugin for this. It also uses the <a href=\"http://api.jquery.com/data/\"><code>.data()</code></a> method.</p>\n\n<h3>Registration:</h3>\n\n<p>I have wrapped / proxied the Backbone View <a href=\"http://backbonejs.org/#View-setElement\"><code>setElement</code></a> method to attach the required data to the view's <code>$el</code> property.</p>\n\n<p>Registration is done <em>behind the scenes</em> like so:</p>\n\n<pre><code>$(myViewsEl).backboneView(myView);\n</code></pre>\n\n<h3>Retrieval:</h3>\n\n<p>The plugin traverses up the DOM hierarchy (using <a href=\"http://api.jquery.com/closest/\"><code>.closest()</code></a>) until it finds an element with the required data entry, i.e a DOM element with an associated view:</p>\n\n<pre><code>var nearestView = $(e.target).backboneView();\n</code></pre>\n\n<p>In addition, we can specify what type of Backbone View we wish to obtain, continuing up the hierarchy until we find an instance of matching type:</p>\n\n<pre><code>var nearestButtonView = $(e.target).backboneView(ButtonView);\n</code></pre>\n\n<h3>JSFiddle Example:</h3>\n\n<p>Can be found <a href=\"http://jsfiddle.net/edslocombe/ZA4k9/\">here</a>.</p>\n\n<h3>Notes:</h3>\n\n<p>I hope I am correct in thinking there are no memory leaks involved here; An 'unlink' is performed if <code>setElement</code> is called a second time round, and since removing a view's element calls <a href=\"http://api.jquery.com/remove/\"><code>.remove()</code></a> by default, which destroys all data as well. Let me know if you think differently.</p>\n\n<h3>The plugin code:</h3>\n\n<pre><code>(function($) {\n\n    // Proxy the original Backbone.View setElement method:\n    // See: http://backbonejs.org/#View-setElement\n\n    var backboneSetElementOriginal = Backbone.View.prototype.setElement;\n\n    Backbone.View.prototype.setElement = function(element) {\n        if (this.el != element) {\n            $(this.el).backboneView('unlink');                    \n        }\n\n        $(element).backboneView(this);    \n\n        return backboneSetElementOriginal.apply(this, arguments);\n    };\n\n    // Create a custom selector to search for the presence of a 'backboneView' data entry:\n    // This avoids a dependency on a data selector plugin...\n\n    $.expr[':'].backboneView = function(element, intStackIndex, arrProperties, arrNodeStack) {\n        return $(element).data('backboneView') !== undefined;        \n    };\n\n    // Plugin internal functions:\n\n    var registerViewToElement = function($el, view) {\n        $el.data('backboneView', view);\n    };\n\n    var getClosestViewFromElement = function($el, viewType) {\n        var ret = null;\n\n        viewType = viewType || Backbone.View;\n\n        while ($el.length) {\n            $el = $el.closest(':backboneView');\n            ret = $el.length ? $el.data('backboneView') : null;\n\n            if (ret instanceof viewType) {\n                break;\n            }\n            else {\n                $el = $el.parent();\n            }           \n        }\n\n        return ret;                \n    };\n\n    // Extra methods:\n\n    var methods = {\n\n        unlink: function($el) {\n            $el.removeData('backboneView');        \n        }\n\n    };\n\n    // Plugin:\n\n    $.fn.backboneView = function() {\n        var ret = this;\n        var args = Array.prototype.slice.call(arguments, 0);\n\n        if ($.isFunction(methods[args[0]])) {\n            methods[args[0]](this);                        \n        }\n        else if (args[0] &amp;&amp; args[0] instanceof Backbone.View) {\n            registerViewToElement(this.first(), args[0]);                \n        }\n        else {\n            ret = getClosestViewFromElement(this.first(), args[0]);\n        }\n\n        return ret;        \n    }        \n\n})(jQuery);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>I've created a bunch of <a href=\"http://documentcloud.github.com/backbone/\">Backbone.js</a> views. Each view has an associated element (<code>view.el</code>).</p>\n\n<p>Given an element on the page \u2014 out of context of the view \u2014 what would be the best way to get the view for the element?</p>\n\n<p>For example, say some event affects a bunch of elements on a page and I want to call a method on every view associated with the affected elements.</p>\n\n<p>One way would be to assign the view to the element's data, but I'm wondering if I've missed something smarter:</p>\n\n<pre><code>var myview = BackBone.View.extend({\n    initialize: function(options) {\n        $(this.el).data('view', this);\n        ...\n    }\n});\n</code></pre>\n\n<p>(I'm using Backbone with jQuery 1.5.)</p>\n",
            "last_activity_date": 1352141911,
            "question_id": 5013848,
            "score": 25,
            "tags": [
                "javascript",
                "jquery",
                "backbone.js"
            ],
            "title": "Backbone.js - Given an element, how do I get the view?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The currently executing script file will always be the last one in the scripts array, so you can easily find its path:</p>\n\n<pre><code>// directive.js\n\nvar scripts = document.getElementsByTagName(\"script\")\nvar currentScriptPath = scripts[scripts.length-1].src;\n\nangular.module('app', [])\n    .directive('test', function () {\n        return {\n            templateUrl: currentScriptPath.replace('directive.js', 'directive.html')\n        };\n    });\n</code></pre>\n\n<p>If you're not sure what is the script name (for example if you're packing multiple scripts into one), use this:</p>\n\n<pre><code>return {\n    templateUrl: currentScriptPath.substring(0, currentScriptPath.lastIndexOf('/') + 1) \n        + 'directive.html'\n};\n</code></pre>\n\n<p><em>Note</em>: In cases where a closure is used, your code should be outside to ensure that the currentScript is evaluated at the correct time, such as:</p>\n\n<pre><code>// directive.js\n\n(function(currentScriptPath){\n    angular.module('app', [])\n        .directive('test', function () {\n            return {\n                templateUrl: currentScriptPath.replace('directive.js', 'directive.html')\n        };\n    });\n})(\n    (function () {\n        var scripts = document.getElementsByTagName(\"script\");\n        var currentScriptPath = scripts[scripts.length - 1].src;\n        return currentScriptPath;\n    })()\n);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>As you said you wanted to provide different templates at different times to the directives, why not allow the template itself to be passed to the directive as an attribute?</p>\n\n<p><code>&lt;div my-directive my-template=\"template\"&gt;&lt;/div&gt;</code></p>\n\n<p>Then use something like <code>$compile(template)(scope)</code> inside the directive.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This code is in a file called routes.js</p>\n\n<p>The following did not work for me:</p>\n\n<pre><code>var scripts = document.getElementsByTagName(\"script\")\nvar currentScriptPath = scripts[scripts.length-1].src;\nvar baseUrl = currentScriptPath.substring(0, currentScriptPath.lastIndexOf('/') + 1);\n</code></pre>\n\n<p>the following did:</p>\n\n<pre><code>var bu2 = document.querySelector(\"script[src$='routes.js']\");\ncurrentScriptPath = bu2.src;\nbaseUrl = currentScriptPath.substring(0, currentScriptPath.lastIndexOf('/') + 1);\n</code></pre>\n\n<p>My test is based on the following blog about using require to lazy load angular:\n<a href=\"http://ify.io/lazy-loading-in-angularjs/\" rel=\"nofollow\">http://ify.io/lazy-loading-in-angularjs/</a></p>\n\n<p>require.js begets a requireConfig bootstrap</p>\n\n<p>requireConfig begets an angular app.js</p>\n\n<p>angular app.js begets my routes.js </p>\n\n<p>I had the same code being served up by a revel web framework and asp.net mvc.\nIn revel \ndocument.getElementsByTagName(\"script\")\nproduced a path to my require bootstrap js file and NOT my routes.js.\nin ASP.NET MVC it produced a path to Visual Studio's injected Browser Link script element that is put there during debugging sessions.   </p>\n\n<p>this is my working routes.js code:</p>\n\n<pre><code>define([], function()\n{\n    var scripts = document.getElementsByTagName(\"script\");\n    var currentScriptPath = scripts[scripts.length-1].src;\n    console.log(\"currentScriptPath:\"+currentScriptPath);\n    var baseUrl = currentScriptPath.substring(0, currentScriptPath.lastIndexOf('/') + 1);\n    console.log(\"baseUrl:\"+baseUrl);\n    var bu2 = document.querySelector(\"script[src$='routes.js']\");\n    currentScriptPath = bu2.src;\n    console.log(\"bu2:\"+bu2);\n    console.log(\"src:\"+bu2.src);\n    baseUrl = currentScriptPath.substring(0, currentScriptPath.lastIndexOf('/') + 1);\n    console.log(\"baseUrl:\"+baseUrl);\n    return {\n        defaultRoutePath: '/',\n            routes: {\n            '/': {\n                templateUrl: baseUrl + 'views/home.html',\n                dependencies: [\n                    'controllers/HomeViewController',\n                    'directives/app-style'\n                ]\n            },\n            '/about/:person': {\n                templateUrl: baseUrl + 'views/about.html',\n                dependencies: [\n                    'controllers/AboutViewController',\n                    'directives/app-color'\n                ]\n            },\n            '/contact': {\n                templateUrl: baseUrl + 'views/contact.html',\n                dependencies: [\n                    'controllers/ContactViewController',\n                    'directives/app-color',\n                    'directives/app-style'\n                ]\n            }\n        }\n    };\n});\n</code></pre>\n\n<p>This is my console output when running from Revel.</p>\n\n<pre><code>currentScriptPath:http://localhost:9000/public/ngApps/1/requireBootstrap.js routes.js:8\nbaseUrl:http://localhost:9000/public/ngApps/1/ routes.js:10\nbu2:[object HTMLScriptElement] routes.js:13\nsrc:http://localhost:9000/public/ngApps/1/routes.js routes.js:14\nbaseUrl:http://localhost:9000/public/ngApps/1/ \n</code></pre>\n\n<p>Another nice thing I have done is to take advantage of the require config and put some custom configurations in it. \ni.e. add </p>\n\n<pre><code>customConfig: { baseRouteUrl: '/AngularLazyBaseLine/Home/Content' } \n</code></pre>\n\n<p>you can then get it by using the following code from inside of routes.js </p>\n\n<pre><code>var requireConfig = requirejs.s.contexts._.config;\nconsole.log('requireConfig.customConfig.baseRouteUrl:' + requireConfig.customConfig.baseRouteUrl); \n</code></pre>\n\n<p>sometimes you need to define a baseurl upfront, sometimes you need to dynamically generate it.  Your choice for your situation.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Some might suggest it slightly \"hacky\", but I think until there is only 1 way to do it, anything is going to be hacky.<br>\nI've had a lot of luck with also doing this:</p>\n\n<pre><code>angular.module('ui.bootstrap', [])\n  .provider('$appUrl', function(){\n    this.route = function(url){\n       var stack = new Error('dummy').stack.match(new RegExp(/(http(s)*\\:\\/\\/)[^\\:]+/igm));\n       var app_path = stack[1];\n       app_path = app_path.slice(0, app_path.lastIndexOf('App/') + 'App/'.length);\n         return app_path + url;\n    }\n    this.$get = function(){\n        return this.route;\n    } \n  });\n</code></pre>\n\n<p>Then when using the code in an application after including the module in the app.<br>\nIn an app config function:</p>\n\n<pre><code>.config(['$routeProvider', '$appUrlProvider', function ($routeProvider, $appUrlProvider) {\n\n    $routeProvider\n        .when('/path:folder_path*', {\n            controller: 'BrowseFolderCntrl',\n            templateUrl: $appUrlProvider.route('views/browse-folder.html')\n        });\n}]);\n</code></pre>\n\n<p>And in an app controller (if required):</p>\n\n<pre><code>var MyCntrl = function ($scope, $appUrl) {\n    $scope.templateUrl = $appUrl('views/my-angular-view.html');\n};\n</code></pre>\n\n<p>It creats a new javascript error and pulls out the stack trace. It then parses out all urls (excluding the calling line/char number).<br>\nYou can then just pull out the first in the array which will be the current file where the code is running.</p>\n\n<p>This is also helpful if you want to centralise the code and then pull out the second (<code>[1]</code>) in the array, to get the calling file location</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm building an angular directive which will be used in a few different locations. \nI can't always guarantee the file structure of the app the directive is used in, but I can force the user to put the <code>directive.js</code> and <code>directive.html</code> (not the real file names) in the same folder. </p>\n\n<p>When the page evaluates the <code>directive.js</code>, it considers the <code>templateUrl</code> to be relative to itself. Is it possible to set the <code>templateUrl</code> to be relative to the <code>directive.js</code> file?</p>\n\n<p>Or is it recommended to just include the template in the directive itself. </p>\n\n<p>I'm thinking I may want to load different templates based on different circumstances, so would prefer to be able to use a relative path rather than updating the <code>directive.js</code></p>\n",
            "last_activity_date": 1423653443,
            "question_id": 21103724,
            "score": 24,
            "tags": [
                "javascript",
                "angularjs",
                "path"
            ],
            "title": "Angular directive templateUrl relative to .js file"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I have encountered this same situation in the wild. Basic symptoms:</p>\n\n<ul>\n<li>You load script code in an iframe</li>\n<li>The script code runs early (from the head section or top of body)</li>\n<li>IE complains about some missing native object</li>\n</ul>\n\n<p>I found that it can often be prevented by delaying the execution of the script code until onload or DOMContentLoaded... Not much help I know but this is one of the most difficult IE scripting bugs I have ever encountered. I upped the score of your question, hope it will be found by others as well and we can get a more detailed answer.</p>\n\n<p>Also see this question:\n<a href=\"http://stackoverflow.com/questions/6528946/error-in-internet-explorer-9-not-earlier-versions-or-other-browsers-when-incl\">Error in Internet Explorer 9  (not earlier versions or other browsers) when including jQuery in an iframe</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There is <a href=\"http://msdn.microsoft.com/en-us/library/gg622929%28v=VS.85%29.aspx?ppud=4\">this msdn page</a> about this bug (or feature).</p>\n\n<p>You get these kinds of errors when you move the iframe element around in DOM. In such cases, IE 9 garbage collects the iframe (causing your undefined bug) and reloads it at another position.</p>\n\n<p>In general, you should create the element, set its <code>src</code> attribute only <em>once</em> and then put it somewhere in the DOM tree <em>once</em>. It has nothing to do with the code which runs in the iframe itself.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>Try loading the javascript at the end after complete web page is loaded. I feel the script is executing even before the iframe is completely loaded. </p>\n\n<p>for some suggestion of scripting in IE9 view the given link below\n    <a href=\"http://blogs.msdn.com/b/ie/archive/2010/06/25/enhanced-scripting-in-ie9-ecmascript-5-support-and-more.aspx\" rel=\"nofollow\">http://blogs.msdn.com/b/ie/archive/2010/06/25/enhanced-scripting-in-ie9-ecmascript-5-support-and-more.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Placing the following script block at the very top of the iFrame html &lt;head&gt; seems to resolve the issue in my case. Basically, it forces the iframe to reload, which as some have pointed out, solves the issue. It seems relatively safe, because, without things like 'Object' and 'Date', javascript is essentially useless.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    if(typeof(Object)===\"undefined\"){\n        window.location.reload();\n    }\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Further investigation revealed that the solution is to add the offending iframe to it's dom location BEFORE setting the 'src' attribute. </p>\n\n<p>Once the 'src' has been set, changing location of the iframe within the DOM stack forces IE9 to garbage collect it.</p>\n\n<p>Once 'src' has been set, iframe can be resized and changed via css positioning, but cannot change the relative location in the DOM stack.</p>\n\n<p>Often times, plugins like dialogs and lightboxes will stuff an iframe with src already set into the dom, then append / prepend or whatever, triggering the GC to take place.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>function waitForjQuery(){\n    if(typeof jQuery!='undefined'){\n        //Do yor stuff!\n    }\n    else{\n        setTimeout(function(){\n            waitForjQuery();\n        },500);\n    }\n}\nwaitForjQuery();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Precondition:</p>\n\n<p>I have an aspx-page with iframe inside. This iframe points to the url handled by MVC on the same site (it's hybrid site, both standard ASP.NET and ASP.NET MVC). The resulting page rendered by MVC contains a lot of scripts references.</p>\n\n<p>Problem:</p>\n\n<p>IE9 throws an exception on every single script it load in iframe. These exceptions are similar to this one:</p>\n\n<pre><code>Error: 'Function' is undefined\n</code></pre>\n\n<p>That is, it says that the most basic things every window has is somehow absent. Once you clicked through all of these popups, the page just works as designed!<br>\nIf I load a URL from <code>&lt;iframe /&gt;</code> src attribute in the browser directly, everything works as expected.<br>\nIf I open the page in another browser (I tried Opera, Firefox), everything works as expected -- no errors.</p>\n\n<p>So, what IE9 wants?</p>\n",
            "last_activity_date": 1421932579,
            "question_id": 8389261,
            "score": 24,
            "tags": [
                "javascript",
                "asp.net-mvc",
                "model-view-controller",
                "iframe",
                "internet-explorer-9"
            ],
            "title": "IE9 throws exceptions when loading scripts in iframe. Why?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>As you know, the <strong>onBlur</strong> event fires for an element if that element had the focus, but loses it.</p>\n\n<p>The <strong>onFocusOut</strong> event fires in this case, but also triggers if any child element loses focus.</p>\n\n<p>For example, you have a div with special formatting because the human is currently editing a field in that area.  You'd could use <strong>onFocusOut</strong> to turn that formatting off when focus leaves that div.</p>\n\n<p>Up until very recently, <strong>onFocusOut</strong> was only used by IE.  If that has changed, it has been very recent.  Test in FF, Chrome, etc.</p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>The <code>onfocusout</code> event is a non-standard event that works only in Internet Explorer, while the <code>onblur</code> event is part of the W3C standards and works in every modern browser.</p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>If they're the same, then why there are two of this kind of event?</p>\n",
            "last_activity_date": 1414452308,
            "question_id": 7755052,
            "score": 24,
            "tags": [
                "javascript",
                "jquery",
                "dom",
                "javascript-events"
            ],
            "title": "In web browsers, what&#39;s the difference between onblur and onfocusout?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>just <code>&lt;iframe src='about:blank'&gt;&lt;/iframe&gt;</code></p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p><strong>No, it is <em>not valid</em> to specify an empty iframe src.</strong></p>\n\n<p>You should use <code>&lt;iframe src=\"about:blank\" /&gt;</code>. </p>\n\n<p><code>#</code> is ment to be a <strong>reference to an anchor within the current page</strong> (or, often used as a routing scheme when working with AJAX requests). Using it as the source of an iframe would be senseless, since an iframe does not reference content on the current page and is not used with AJAX requests.</p>\n\n<p><code>about:blank</code> is a <strong>cross-browser standard</strong> to display a blank document.</p>\n\n<p><strong>Update June 8th 2012:</strong></p>\n\n<p>It seems that the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-iframe-element.html#the-iframe-element\" rel=\"nofollow\">'living' spec</a> no longer renders an iframe invalid if the <code>src</code> attribute is missing:</p>\n\n<blockquote>\n  <p>If, when the element is created, the srcdoc attribute is not set, and\n  the src attribute is either also not set or set but its value cannot\n  be resolved, the browsing context will remain at the initial\n  about:blank page.</p>\n</blockquote>\n\n<p>If both of these attributes, however, are not set, the browsing context will default to <code>about:blank</code>. To provide proper backwards compatibility, it's recommendable to be verbose and, for now, provide the <code>about:blank</code> url.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>You can use <code>about:blank</code> in the <code>src</code> attribute (as mentioned by ariel earlier), otherwise it would throw an error when serving from a secure page.</p>\n\n<p>A secure page <code>https</code> would throw an error of possibly un-secure data on the secure website.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The HTML 5 working draft, <a href=\"http://www.w3.org/TR/html5/the-iframe-element.html#the-iframe-element\">section 4.8.2</a>, says (emphasis mine):</p>\n\n<blockquote>\n  <p>The <code>src</code> attribute gives the address of\n  a page that the nested browsing\n  context is to contain. The attribute,\n  if present, must be a <strong>valid non-empty\n  URL</strong> potentially surrounded by spaces.</p>\n</blockquote>\n\n<p>According to <a href=\"http://tools.ietf.org/html/rfc3986\">RFC 3986</a>, valid URLs must begin with a <a href=\"http://tools.ietf.org/html/rfc3986#section-3.1\">scheme name</a>, and relative references cannot only consist in a <a href=\"http://tools.ietf.org/html/rfc3986#section-3.5\">fragment</a>.</p>\n\n<p>Therefore, <code>#</code> is not a valid URL, and should not be used as the value of the <code>src</code> attribute.</p>\n\n<p>Use <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/urls.html#about%3ablank\">about:blank</a> instead.</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>You could try adding the iframe through Javascript, so you wouldn't need to have a blank one in the HTML:</p>\n\n<p>(jQuery example)</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n$().ready(function() {\n    $(\"&lt;iframe /&gt;\").attr(\"src\", \"http://www.bbc.co.uk/\").appendTo(\"body\");\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>Adding the iframe with Javascript allows graceful degradation - users without Javascript won't see a blank iframe.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It looks like you can also leave out the src completely:</p>\n\n<p><a href=\"http://dev.w3.org/html5/spec/Overview.html#the-iframe-element\">http://dev.w3.org/html5/spec/Overview.html#the-iframe-element</a></p>\n\n<blockquote>\n  <p>If, when the element is created, the srcdoc attribute is <strong>not set</strong>, and\n  the src attribute is either <strong>also not set</strong> or set but its value cannot\n  be resolved, the browsing context will remain at the initial\n  about:blank page.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>As part of the about URI scheme standard, about:blank is probably the best option as it has very good browser support. </p>\n\n<blockquote>\n  <p>about:blank   Returns a blank HTML document with the media type\n  text/html and character encoding UTF-8. This is widely used to load\n  blank pages into browsing contexts, such as iframes within HTML, which\n  may then be modified by scripts.\n  <a href=\"http://en.wikipedia.org/wiki/About_URI_scheme\" rel=\"nofollow\">You can see further here </a></p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want an iframe to initially have <code>src</code> as blank and then once the page loads; call a JS function and then set the <code>src</code> value to an actual one..</p>\n\n<p>So is <code>&lt;iframe src=\"#\" /&gt;</code> valid OR do I need to use something else like <code>javascript:;</code>, etc</p>\n",
            "last_activity_date": 1420506655,
            "question_id": 5946607,
            "score": 24,
            "tags": [
                "javascript",
                "html",
                "css",
                "iframe"
            ],
            "title": "Is an empty iframe src valid?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>This is to do with the weird way <code>this</code> binding works in JavaScript.</p>\n\n<pre><code>[].reverse\n</code></pre>\n\n<p>is the method <code>reverse</code> on an empty list. If you call it, through one of:</p>\n\n<pre><code>[].reverse();\n[]['reverse']();\n([].reverse)();\n</code></pre>\n\n<p>then it executes with <code>this</code> bound to the list instance <code>[]</code>. But if you detach it:</p>\n\n<pre><code>x= [].reverse;\nx();\n</code></pre>\n\n<p>it executes with no <code>this</code>-binding, so <code>this</code> in the function points to the global (<code>window</code>) object, in one of JavaScript's worst, most misleading design mistakes.</p>\n\n<pre><code>(x=[].reverse)()\n</code></pre>\n\n<p>Is also doing the detach. The assignment operator returns the same function object it was passed so it looks like it's doing nothing, but it has the side-effect of breaking the limited special case that causes JavaScript to bind <code>this</code>.</p>\n\n<p>So you are saying:</p>\n\n<pre><code>Array.prototype.reverse.call(window)\n</code></pre>\n\n<p><code>reverse</code>, like many other <code>Array.prototype</code> methods, is defined by ECMAScript to work on any native sequence-like object. It reverses the items with number-string keys (up to <code>object.length</code>) and returns the object. So it'll return the object that was passed in for any type that has a <code>length</code> property.</p>\n\n<p><code>window</code> has a length property, which corresponds to <code>window.frames.length</code>, so calling this method with <code>this</code> pointing at <code>window</code> will work and return the <code>window</code>. In theory it may still fail, because:</p>\n\n<ol>\n<li><code>window</code> is allowed to be a \u201chost object\u201d rather than a \u201cnative object\u201d; in this case the guarantees about what you can pass to other prototypes' methods don't necessarily apply; and</li>\n<li>if the window actually has frames/iframes, it would try to reverse their order, which wouldn't work because the frame collection is read-only.</li>\n</ol>\n\n<p>However, in current browsers the former case does work and the latter fails silently without an error, so you still get the <code>===window</code> behaviour and not an Exception.</p>\n",
                    "is_accepted": true,
                    "score": 38
                }
            ],
            "body": "<p>Original source: <a href=\"http://twitter.com/tobeytailor/status/8998006366\" rel=\"nofollow\">http://twitter.com/tobeytailor/status/8998006366</a>  </p>\n\n<pre><code>(x=[].reverse)() === window // true\n</code></pre>\n\n<p>I've noticed that this behavior affects all the native types.  What exactly is happening here?</p>\n",
            "last_activity_date": 1270674399,
            "question_id": 2261342,
            "score": 24,
            "tags": [
                "javascript",
                "string",
                "window",
                "reverse"
            ],
            "title": "Can somebody explain this Javascript method?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><code>value instanceof Constructor</code> is the same as <code>Constructor.prototype.isPrototypeOf(value)</code> and both check the [[Prototype]]-chain of <code>value</code> for occurences of a specific object. </p>\n\n<p>Strings and numbers are <strong>primitive values</strong>, not objects and therefore don't have a [[Prototype]], so it'll only work if you wrap them in regular objects (called 'boxing' in Java).</p>\n\n<p>Also, as you noticed, <code>String(value)</code> and <code>new String(value)</code> do different things: If you call the constructor functions of the built-in types without using the <code>new</code> operator, they try to convert ('cast') the argument to the specific type. If you use the <code>new</code> operator, they create a wrapper object.</p>\n\n<p><code>new String(value)</code> is roughly equivalent to <code>Object(String(value))</code>, which behaves the same way as <code>new Object(String(value))</code>.</p>\n\n<hr>\n\n<p>Some more on types in JavaScript: ECMA-262 defines the following primitive types: <em>Undefined</em>, <em>Null</em>, <em>Boolean</em>, <em>Number</em>, and <em>String</em>. Additionally, there is the type <em>Object</em> for things which have properties.</p>\n\n<p>For example, functions are of type <em>Object</em> (they just have a special property called [[Call]]), and <code>null</code> is a primitive value of type <em>Null</em>. This means that the result of the <code>typeof</code> operator doesn't really return the type of a value...</p>\n\n<p>Aditionally, JavaScript objects have another property called [[Class]]. You can get it via <code>Object.prototype.toString.call(value)</code> (this will return <code>'[object</code><em><code>Classname</code></em><code>]'</code>). Arrays and functions are of the type <em>Object</em>, but their classes are <em>Array</em> and <em>Function</em>.</p>\n\n<p>The test for an object's class given above works when <code>instanceof</code> fails (e.g. when objects are passed between window/frame boundaries and don't share the same prototypes).</p>\n\n<hr>\n\n<p>Also, you might want to check out this improved version of <code>typeof</code>:</p>\n\n<pre><code>function typeOf(value) {\n    var type = typeof value;\n\n    switch(type) {\n        case 'object':\n        return value === null ? 'null' : Object.prototype.toString.call(value).\n            match(/^\\[object (.*)\\]$/)[1]\n\n        case 'function':\n        return 'Function';\n\n        default:\n        return type;\n    }\n}\n</code></pre>\n\n<p>For primitives, it will return their <strong>type</strong> in <em>lower case</em>, for objects, it will return their <strong>class</strong> in <em>title case</em>.</p>\n\n<p><strong>Examples:</strong></p>\n\n<ul>\n<li><p>For primitives of  <strong>type</strong> <em>Number</em> (eg <code>5</code>), it will return <code>'number'</code>, for wrapper objects of <strong>class</strong> <em>Number</em> (eg <code>new Number(5)</code>), it will return <code>'Number'</code>;</p></li>\n<li><p>For functions, it will return <code>'Function'</code>.</p></li>\n</ul>\n\n<p>If you don't want to discern between primitive values and wrapper objects (for whatever, probably bad reason), use <code>typeOf(...).toLowerCase()</code>.</p>\n\n<p>Known bugs are some built-in functions in IE, which are considered <code>'Object'</code> and a return value of <code>'unknown'</code> when used with some COM+ objects.</p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>You may try to evaluate:</p>\n\n<pre><code>&gt;&gt;&gt; typeof(\"a\")\n\"string\"\n&gt;&gt;&gt; typeof(new String(\"a\"))\n\"object\"\n&gt;&gt;&gt; typeof(4)\n\"number\"\n&gt;&gt;&gt; typeof(new Number(4))\n\"object\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>This is a nuance of Javascript which I've found catches some out.  <code>instanceof</code> of operator will always result in false if the LHS is not an <code>object</code> type.</p>\n\n<p>Note that <code>new String('Hello World')</code> does not result in a <code>string</code> type but is an <code>object</code>.  The <code>new</code> operator always results in an object.  I see this sort of thing:-</p>\n\n<pre><code>function fnX(value)\n{\n     if (typeof value == 'string')\n     {\n          \\\\Do stuff\n     }\n}\nfnX(new String('Hello World'));\n</code></pre>\n\n<p>The expectation is that \"<code>Do Stuff</code>\" will happen but it doesn't because the typeof the value is object.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As stated in Christoph's answer, string and number literals are not the same as String and Number objects. If you use any of the String or Number methods on the literal, say </p>\n\n<pre><code>'a string literal'.length\n</code></pre>\n\n<p>The literal is temporarily converted to an object, the method is invoked and the object is discarded.<br />\nLiterals have some distinct advantages over objects.</p>\n\n<pre><code>//false, two different objects with the same value\nalert( new String('string') == new String('string') ); \n\n//true, identical literals\nalert( 'string' == 'string' );\n</code></pre>\n\n<p>Always use literals to avoid unexpected behaviour!<br />\nYou can use Number() and String() to typecast if you need to:</p>\n\n<pre><code>//true\nalert( Number('5') === 5 )\n\n//false\nalert( '5' === 5 )\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Just curious: </p>\n\n<ul>\n<li>4 instanceof Number => false</li>\n<li>new Number(4) instanceof Number => true?</li>\n</ul>\n\n<p>Why is this? Same with strings: </p>\n\n<ul>\n<li><code>'some string' instanceof String</code> returns false</li>\n<li><code>new String('some string') instanceof String</code> => true</li>\n<li><code>String('some string') instanceof String</code> also returns false</li>\n<li><code>('some string').toString instanceof String</code> also returns false</li>\n</ul>\n\n<p>For object, array or function types the instanceof operator works as expected. I just don't know how to understand this.</p>\n\n<p>[re-opened to share new insights]</p>\n\n<p>After testing I cooked up this functionality to be able to retrieve the type of <em>any javascript object</em> (be it primitive or not):</p>\n\n<pre><code>Object.prototype.typof = objType;    \nobjType.toString = function(){return 'use [obj].typof()';};\nfunction objType() {\n      var inp = String(this.constructor),\n          chkType = arguments[0] || null,\n          val;\n      function getT() {\n         return (inp.split(/\\({1}/))[0].replace(/^\\n/,'').substr(9);\n      }\n      return chkType\n           ? getT().toLowerCase() === chkType.toLowerCase()\n           : getT();\n}\n</code></pre>\n\n<p>Now you can check any type like this:</p>\n\n<pre><code>var Newclass = function(){}; //empty Constructor function\n(5).typof(); //=&gt; Number\n'hello world'.typof(); //=&gt; String\nnew Newclass().typof(); //=&gt; Newclass\n</code></pre>\n\n<p>Or test if an object is of some type:</p>\n\n<pre><code>(5).typof('String'); //=&gt; false\nnew Newclass().typof('Newclass') //=&gt; true\n[].typof('Arrray'); //=&gt; true;\n</code></pre>\n",
            "last_activity_date": 1425147359,
            "question_id": 472418,
            "score": 24,
            "tags": [
                "javascript"
            ],
            "title": "Why is 4 not an instance of Number?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It's important to note that without one of the designers present, we can only really conjecture <em>why</em>. But we can come up with some decent reasons... here's mine:</p>\n\n<p>From the perspective of a function, one reason could be because you can't - obviously - actually change the arguments that were passed into you. You could change an array that represents the arguments passed into you, but the arguments <em>as they were passed</em> is set in stone before you ever receive execution scope.</p>\n\n<p>You can splice, dice and pop arrays, and if you did that to the <code>arguments</code> object then you just ruined what is conceptually an immutable structure (<em>sad face!</em>). The design of the real arguments object is closer to a kind of immutability JavaScript can offer.</p>\n\n<p>It is similar to querystring parameters. You get a collection handed to you by the client sending the request. It's part of the request information, which is already set and done.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>arguments doesn't just return the arguments.  It returns callee object, and the array of arguments.  If it were just an array, the first element might be the callee object and be more confusing.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The arguments object has the very unusual feature that its array-like elements are synonyms for the local variables that hold the function arguments. For example:</p>\n\n<pre><code>function f(x) {\n   console.log(arguments[0]);   // Displays the initial value of the argument x\n   x = 5;                       // Changes the value of the local variable x\n   console.log(arguments[0]);   // Now displays 5\n}\n</code></pre>\n\n<p>I always had the impression that this \"magical behaviour\" is the reason why <code>arguments</code> is not an array.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>My conjecture:</p>\n\n<p>The concept of the <code>arguments</code> object has been on the language since the very beginning, it's even described in the <a href=\"http://www.mozilla.org/js/language/E262.pdf\">ECMAScript First Edition Standard</a><sub>(PDF)</sub>.</p>\n\n<p>In that version of ECMAScript, the <code>Array.prototype</code> was really basic, array objects contained <em>only 4 methods!</em>: <code>toString</code>, <code>join</code>, <code>reverse</code> and <code>sort</code>.</p>\n\n<p>I think that's one of the major reasons about they make <code>arguments</code> to inherit from <code>Object.prototype</code>, at that time those Array methods didn't look too <em>useful</em>.</p>\n\n<p>But the <code>Array.prototype</code> object was extended in the next versions of the standard, now on ES5, Array objects have methods such as <code>map</code>, <code>reduce</code>, <code>every</code>, <code>some</code>, etc, that are <em>really powerful</em>.</p>\n\n<p>The last year, there was a proposal in ES5 to make <code>arguments</code> inherit from <code>Array.prototype</code>, in the draft stages of the standard, but was dropped off time later.</p>\n\n<p>In those drafts, <code>arguments</code> inherited from <code>Array.prototype</code>, but for backwards compatibility with ES3, the <code>arguments</code> object had defined two own properties, <code>toString</code> and <code>toLocaleString</code>, both pointing to the same methods on <code>Object.prototype</code>, but finally, the committee decided to keep inheriting from <code>Object.prototype</code>.</p>\n",
                    "is_accepted": true,
                    "score": 22
                }
            ],
            "body": "<p>Since it seems like the first thing people do is convert <code>arguments</code> into a real array, I'm interested in why the Javascript language authors and implementers decided, and continue to think, that <code>arguments</code> should <em>not</em> be a real <code>Array</code>. I don't mean this as flamebait, I'm sincerely interested in the thinking behind it. Since the function is naturally being called when you're in its body, I don't think it's because the objects <code>arguments</code> are referencing can change, like with some of the DOM results...</p>\n",
            "last_activity_date": 1279069774,
            "question_id": 3242485,
            "score": 23,
            "tags": [
                "javascript",
                "function",
                "arrays",
                "arguments"
            ],
            "title": "Why isn&#39;t a function&#39;s arguments object an array in Javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Remove the anchor you're going to navigate to, then use approach #2? Since there's no anchor, setting the hash shouldn't scroll the page.</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>It should be expected that #foo will scroll to the anchor of the id, \"foo\". If you want to use approach #1 and have it reload, this approach might work.</p>\n\n<pre><code>if (Object.defineProperty &amp;&amp; Object.getOwnPropertyDescriptor) { // ES5\n    var hashDescriptor = Object.getOwnPropertyDescriptor(location, \"hash\"),\n    hashSetter = hashDescriptor.set;\n    hashDescriptor.set = function (hash) {\n        hashSetter.call(location, hash);\n        location.reload(true);\n    };\n    Object.defineProperty(location, \"hash\", hashDescriptor);\n} else if (location.__lookupSetter__ &amp;&amp; location.__defineSetter__) { // JS\n    var hashSetter = location.__lookupSetter__(\"hash\");\n    location.__defineSetter__(\"hash\", function (hash) {\n        hashSetter.call(location, hash);\n        location.reload(true)\n    });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I had a JQuery function that fired on <code>$(document).ready()</code> which detected if there was a hash appended to the URL in my case, so I kept that function the same and then just used a force reload whenever a hash change was detected:</p>\n\n<pre><code>$(window).on('hashchange',function(){ \n    window.location.reload(true); \n});\n</code></pre>\n\n<p>Then my other function -</p>\n\n<pre><code>$(document).ready(function() {\n    var hash = window.location.hash;    \n    if(hash) {\n           //DO STUFF I WANT TO DO WITH HASHES\n    }\n});\n</code></pre>\n\n<p>In my case, it was fine for UX -- might not be good for others. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to reload current page with different url hash, but it doesn't work as expected.</p>\n\n<p>(Clarification how I want it to work: Reload the page and then scroll to the new hash.)</p>\n\n<p><strong>Approach #1:</strong></p>\n\n<pre><code>window.location.hash = \"#\" + newhash;\n</code></pre>\n\n<p>Only scrolls to this anchor without reloading the page.</p>\n\n<p><strong>Approach #2:</strong></p>\n\n<pre><code>window.location.hash = \"#\" + newhash;\nwindow.location.reload(true);\n</code></pre>\n\n<p>Kinda works but it first scrolls to the anchor, then reloads the page, then scrolls to the anchor again.</p>\n\n<p><strong>Approach #3:</strong></p>\n\n<pre><code>window.location.href = window.location.pathname + window.location.search + \"&amp;random=\" + Math.round(Math.random()*100000) + \"#\" + newhash;\n</code></pre>\n\n<p>Works but I would rather not add random garbage to the url.</p>\n\n<p>Is there a better solution?</p>\n",
            "last_activity_date": 1409698071,
            "question_id": 1589799,
            "score": 23,
            "tags": [
                "javascript",
                "url",
                "hash",
                "location",
                "reload"
            ],
            "title": "How to force a page to reload if all what was changed in url is hash?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The error callback should get a reference to the XHR object, check the status code to see if it's a server error or not?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In the error callback or <a href=\"http://docs.jquery.com/Ajax/jQuery.ajax\">$.ajax</a> you have three input arguments:</p>\n\n<pre><code>function (XMLHttpRequest, textStatus, errorThrown) {\n   this; // options for this ajax request\n}\n</code></pre>\n\n<p>You can check directly the <code>xhr.status</code> to get the HTTP response code, for example:</p>\n\n<pre><code>$.ajax({\n  url: \"test.html\",\n  cache: false,\n  success: function(html){\n    $(\"#results\").append(html);\n  },\n  error: function (xhr, textStatus) {\n    if (xhr.status == 500) {\n      alert('Server error: '+ textStatus);\n    }\n  }\n});\n</code></pre>\n\n<p><strong>Edit:</strong>\nTo tell the difference between a connection broken by the browser and the case where the server is down (jasonmerino's comment):</p>\n\n<blockquote>\n  <p>On unload the xhr.readyState should be 0, where for a non responsive\n  server the xhr.readyState should be 4.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p><em>(I'd add this as a comment to the main answer but haven't built up enough points to do so yet!)</em></p>\n\n<p>I'm also seeing this in FF4 and Chrome (9.0.597.107). Probably elsewhere but that's bad enough for me to want to fix it!</p>\n\n<p>One of the things that's odd about this situation is that returned XMLHttpRequest.status === 0</p>\n\n<p>Which seems like a reliable way to detect this situation and, in my particular case, abort the custom error handling that displays to the user:</p>\n\n<pre><code>error: function (XMLHttpRequest, textStatus, errorThrown) {\n    if (XMLHttpRequest.status === 0) return;\n    // error handling here\n}\n</code></pre>\n\n<p>Also worth mentioning that on the assumption if may be a problem in the JSON parse of whatever the browser is giving back to the $.ajax() call, I also tried swapping out the native JSON.stringify for the Douglas Crockford version ( <a href=\"https://github.com/douglascrockford/JSON-js\" rel=\"nofollow\">https://github.com/douglascrockford/JSON-js</a> ) but that made no difference.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is a tough one to handle correctly in all situations.  Unfortunately in many popular browsers the <code>xhr.status</code> is the same (<code>0</code>) if the AJAX call is cancelled by navigation or by a server being down / unresponsive.  So that technique rarely works.</p>\n\n<p>Here's a set of highly \"practical\" hacks that I've accumulated that work fairly well in the majority of circumstances, but still isn't bullet-proof.  The idea is to try to catch the navigate events and set a flag which is checked in the AJAX error handler.  Like this:</p>\n\n<pre><code>var global_is_navigating = false;\n\n$(window).on('beforeunload',function() {\n    // Note: this event doesn't fire in mobile safari\n    global_is_navigating = true;\n});\n\n$(\"a\").on('click',function() {\n    // Giant hack that can be helpful with mobile safari\n    if( $(this).attr('href') ) {\n        global_is_navigating = true;\n    }\n});\n\n$(document).ajaxError(function(evt, xhr, settings) {\n    // default AJAX error handler for page\n    if( global_is_navigating ) {\n        // AJAX call cancelled by navigation. Not a real error\n        return;\n    }\n    // process actual AJAX error here.\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>If I navigate away from a page in the middle of an $.ajax() request it fires the error callback.  I've tested in Safari and FF with both GET and POST requests.</p>\n\n<p>One potential solution would be to abort all AJAX requests on page unload, but the error handler is called before unload, so this doesn't seem possible.</p>\n\n<p>I want to be able to handle REAL errors such as 500s gracefully on the client side with a polite alert or a modal dialog, but I don't want this handling to be called when a user navigates away from the page.</p>\n\n<p>How do I do this?</p>\n\n<p>--</p>\n\n<p>(Also strange: When navigating away from a page, the error handler says that the textStatus parameter is \"error\", the same it throws when receiving a 500/bad request.)</p>\n",
            "last_activity_date": 1404841743,
            "question_id": 1370322,
            "score": 23,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "xmlhttprequest"
            ],
            "title": "jQuery AJAX fires error callback on window unload - how do I filter out unload and only catch real errors?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>If you have HTML like this:</p>\n\n<pre><code>&lt;a href=\"no_javascript.html\" id=\"mylink\"&gt;Do Something&lt;/a&gt;\n</code></pre>\n\n<p>You would do something like this with jQuery:</p>\n\n<pre><code>$(document).ready(function() {\n    $('#mylink').click(function() {\n        doSomethingCool();\n        return false; // cancel the event\n    });\n});\n</code></pre>\n\n<p>All you have to do is cancel the click event with Javascript to prevent the default action from happening. So when someone clicks the link with Javascript enabled, <code>doSomethingCool();</code> is called and the click event is cancelled (thus the <code>return false;</code>) and prevents the browser from going to the page specified. If they have Javascript disabled, however, it would take them to <code>no_javascript.html</code> directly.</p>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>why jQuery?</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;a href=\"no_javascript.html\" onclick=\"return doSmth()\"&gt;Link&lt;/a&gt;\n</code></pre>\n\n<p>...and javascript code:</p>\n\n<pre><code>function doSmth(){\n  // your code here\n  return false\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I use <code>document.location.replace</code> to navigate, but when I want to cancel the navigation, <code>return false</code> (in the same function as <code>document.location.replace</code>) doesn't cancel the navigation.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>for IE at least, just put <code>this.event.returnValue = false;</code> at the end of the method.</p>\n\n<p>e.g:</p>\n\n<pre><code>function onClickFunction()\n {\n  someMethod();\n  this.event.returnValue = false;\n }\n</code></pre>\n\n<p>I had a complex method where this did the trick.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>None of this worked for me with the Google Chrome browser. </p>\n\n<p>Here's what did work though (using jQuery):</p>\n\n<pre><code>$(document).ready(function() {\n    $('#mylink').click(function(event) {\n        doSomethingCool();\n        event.preventDefault(); // cancel the event\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>What I would do are :</p>\n\n<p>a. for href attribute, javascript::void() will be set</p>\n\n<p>b. for onclick event, will provide a function to handle the click event and that     function will return false.</p>\n\n<p>eg: </p>\n\n<pre><code>&lt;script&gt;\n   function myfunction()\n   {\n      //do something\n      return false;\n   }\n   &lt;/script&gt;\n\n   &lt;a href=\"javascript::void()\" onclick=\"myfunction\"&gt;Link&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I'm trying to load some stuff using AJAX when a user clicks a link, but I want the link to actually go somewhere so that the app still works when javascript is disabled. Is there any way to just do something with javascript and cancel navigation when a link is clicked?</p>\n\n<p>What's the best practice? Can that be done, or do I need to replace the link using javascript or what?</p>\n",
            "last_activity_date": 1418406160,
            "question_id": 866583,
            "score": 22,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to cancel navigation when user clicks a link (&lt;a&gt; element)?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Just as with the type checking, the privacy of members are only enforced within the compiler.</p>\n\n<p>A private property is implemented as a regular property, and code outside the class is not allowed to access it.</p>\n\n<p>To make something truly private inside the class, it can't be a member of the class, it would be a local variable created inside a function scope inside the code that creates the object. That would mean that you can't access it like a member of the class, i.e. using the <code>this</code> keyword.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>This is part of the language design apparently... \n<a href=\"https://typescript.codeplex.com/discussions/397651\">https://typescript.codeplex.com/discussions/397651</a> </p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>JavaScript does support private variables.</p>\n\n<pre><code>function MyClass() {\n    var myPrivateVar = 3;\n\n    this.doSomething = function() {\n        return myPrivateVar++;        \n    }\n}\n</code></pre>\n\n<p>In TypeScript this would be expressed like so:</p>\n\n<pre><code>class MyClass {\n\n    doSomething: () =&gt; number;\n\n    constructor() {\n        var myPrivateVar = 3;\n\n        this.doSomething = function () {\n            return myPrivateVar++;\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm looking at implementation of private members in TypeScript, and I find it a little confusing. Intellisense doesn't allow to access private member, but in pure JavaScript, it's all there. This makes me think that TS doesn't implement private members correctly. \nAny thoughts?</p>\n\n<pre><code>class Test{\n  private member: any = \"private member\";\n}\nalert(new Test().member);\n</code></pre>\n",
            "last_activity_date": 1402070460,
            "question_id": 12713659,
            "score": 21,
            "tags": [
                "javascript",
                "typescript"
            ],
            "title": "TypeScript private members"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Use <a href=\"http://api.jquery.com/offset/\"><code>.offset()</code></a> to get the distance between an element and the top of the document:</p>\n\n<pre><code>$(\"li.test\").offset().top\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 58
                },
                {
                    "body": "<p>Rob W's answer is correct - that will give you the offset from the top of the full page.</p>\n\n<p>If you want to get the offset from the top of the viewable screen, you should do this:</p>\n\n<pre><code>var viewableOffset = $(\"#li.test\").offset().top - $(window).scrollTop();\n</code></pre>\n\n<p>Hope that helps!</p>\n",
                    "is_accepted": false,
                    "score": 44
                },
                {
                    "body": "<p>As far as i know <code>.offset()</code> get the distance between the current scroll position and the top of the document.</p>\n\n<p>You need to use this: <code>$(\"li.test\").position().top</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How do I find the vertical distance from the top of the page to where the element exist in the DOM using javascript/jQuery?</p>\n\n<p>I've something like</p>\n\n<pre><code>&lt;ul&gt;\n    &lt;li&gt;one&lt;/li&gt;\n    &lt;li&gt;one&lt;/li&gt;\n    &lt;li&gt;one&lt;/li&gt;\n    &lt;li&gt;one&lt;/li&gt;\n    &lt;li class=\"test\"&gt;one&lt;/li&gt;\n    ....\n    ....\n    ....\n    &lt;li&gt;one&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>For example here, I want to find the vertical distance from top of the page to the <code>li#test</code> element.</p>\n\n<p>I tried <code>.scrollTop()</code> but it always comes as 0!</p>\n",
            "last_activity_date": 1396872422,
            "question_id": 7778580,
            "score": 21,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "how to find the vertical distance from top in px of an element using jQuery"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Try using this instead:</p>\n\n<pre><code>var latitude = results[0].geometry.location.lat();\nvar longitude = results[0].geometry.location.lng();\n</code></pre>\n\n<p>It's bit hard to navigate Google's api but <a href=\"http://code.google.com/intl/sv-SE/apis/maps/documentation/javascript/reference.html#LatLng\">here is</a> the relevant documentation.</p>\n\n<p>One thing I had trouble finding was how to go in the other direction. From coordinates to an address. Here is the code I neded upp using. Please not that I also use jquery.</p>\n\n<pre><code>$.each(results[0].address_components, function(){\n    $(\"#CreateDialog\").find('input[name=\"'+ this.types+'\"]').attr('value', this.long_name);\n});\n</code></pre>\n\n<p>What I'm doing is to loop through all the returned <code>address_components</code> and test if their types match any input element names I have in a form. And if they do I set the value of the element to the <code>address_components</code> value.<br>\nIf you're only interrested in the whole formated address then you can follow <a href=\"http://code.google.com/intl/sv-SE/apis/maps/documentation/javascript/services.html#ReverseGeocoding\">Google's example</a></p>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>You're accessing the latitude and longitude incorrectly.</p>\n\n<p>Try</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://maps.google.com/maps/api/js?sensor=false\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n\nvar geocoder = new google.maps.Geocoder();\nvar address = \"new york\";\n\ngeocoder.geocode( { 'address': address}, function(results, status) {\n\n  if (status == google.maps.GeocoderStatus.OK) {\n    var latitude = results[0].geometry.location.lat();\n    var longitude = results[0].geometry.location.lng();\n    alert(latitude);\n  } \n}); \n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                }
            ],
            "body": "<p>I'm using the following geocoding function to convert a textual address into latitude and longitude numbers, but it's not working right. The alert writes \"undefined\".</p>\n\n<p>Can anyone say what's wrong?</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://maps.google.com/maps/api/js?sensor=false\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n\nvar geocoder = new google.maps.Geocoder();\nvar address = \"new york\";\n\ngeocoder.geocode( { 'address': address}, function(results, status) {\n\nif (status == google.maps.GeocoderStatus.OK) {\n    var latitude = results[0].geometry.location.latitude;\n    var longitude = results[0].geometry.location.longitude;\n    alert(latitude);\n    } \n}); \n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1389978735,
            "question_id": 5984179,
            "score": 21,
            "tags": [
                "javascript",
                "google-maps"
            ],
            "title": "Javascript geocoding from address to latitude and longitude numbers not working"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<pre><code>function getCursorPosition (elem) {\n  var pos = 0;  \n  if (document.selection) {\n    elem.focus ();\n    var sele = document.selection.createRange();\n    sele.moveStart('character', -elem.value.length);\n    pos = sele.text.length;\n  }\n  else if (elem.selectionStart || elem.selectionStart == '0')\n    pos = elem.selectionStart;\n  return pos;\n}\u200b\n\ngetCursorPosition(document.getElementById('textbox1'))\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<h2>Using an invisible faux element</h2>\n\n<p>You can accomplish this by using an absolutely positioned invisible (using <code>visibility</code> not <code>display</code>) faux element that has all the same CSS properties as your input text box (fonts, left borders and left padding).</p>\n\n<p>This <a href=\"http://jsfiddle.net/yfSUk/3\" rel=\"nofollow\">very short and easy to understand JSFiddle</a> is a starting point how this script should be working.<br>\n<strong>It works in Chrome and Firefox as is.</strong> And <a href=\"http://msdn.microsoft.com/en-us/library/ie/ff974768%28v=vs.85%29.aspx\" rel=\"nofollow\">it seems</a> it should be working in IE9+ as well.</p>\n\n<p>Internet Explorer 8 (and down) would <a href=\"http://stackoverflow.com/a/2897510/75642\">need some additional code</a> to get caret position from start of text within input text box. I've even added a meter at the top to show a line every 10 pixels so you can see whether it measures correctly or not. Mind that lines are at 1, 11, 21,... pixel positions.</p>\n\n<p>What this example does it actually takes all the text in text box up to caret position and puts it inside the faux element and then measures its width in pixels. <strong>This gets you offset from left of text box.</strong></p>\n\n<p>When it copies text to faux element it also replaces normal spaces with non-breaking ones so they actually get rendered otherwise if you'd position caret right after space you'd get wrong position:</p>\n\n<pre><code>var faux = $(\"#faux\");\n$(\"#test\").on(\"keyup click focus\", function(evt) {\n    // get caret offset from start\n    var off = this.selectionStart;\n\n    // replace spaces with non-breaking space\n    faux.text(this.value.substring(0, off).replace(/\\s/g, \"\\u00a0\"));\n});\u200b\n</code></pre>\n\n<p>Mind that faux's right dimensions</p>\n\n<ul>\n<li>padding</li>\n<li>border</li>\n<li>margin</li>\n</ul>\n\n<p>have been removed in order to get correct value, otherwise element would be too wide. Element's box has to end right after the text it contains.</p>\n\n<p>Caret's position in pixels from start of input box is then easily gotten from:</p>\n\n<pre><code>faux.outerWidth();\n</code></pre>\n\n<h2>The problem</h2>\n\n<p>There is one problem though. I'm not sure how to handle situation when text within text box is scrolled (when too long) and caret isn't at the very end of text but somewhere in between... If it's at the end then caret position is always at maximum position possible (input width less right dimensions - padding, border, margin).</p>\n\n<p>I'm not sure if it's possible to get text scroll position within text box at all? If you can then even this problem can be solved. But I'm not aware of any solution to this...</p>\n\n<h3>Hope this helps.</h3>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>heres a working example <a href=\"http://jsfiddle.net/gPL3f/2/\" rel=\"nofollow\">http://jsfiddle.net/gPL3f/2/</a></p>\n\n<p>in order to find the position of the caret i counted the letters inside the input and the multiplied that value with the size of 1 letter.</p>\n\n<p>and after that moved the div to that location.</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;style type=\"text/css\"&gt;\nbody { font-size: 12px; line-height: 12px; font-family: arial;}\n#box { width: 100px; height: 15px; position: absolute; top: 35px; left: 0px; background: pink;}\n&lt;/style&gt;\n&lt;script type=\"text/javascript\" src=\"jquery-1.7.1.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n$(document).ready(function(){\nvar letter_size = 6;\n$(\"input[type='text']\").keyup(function(e) {\n    move_size = $(this).val().length * letter_size;\n    $('#box').css({'left': move_size+'px'}); \n});\n});\n&lt;/script&gt;\n\n&lt;/head&gt;\n&lt;body&gt;\n&lt;input type=\"text\" /&gt;\n&lt;div id=\"box\"&gt;\n/ move \n&lt;/div&gt;\n&lt;/body&gt;\n&lt;html&gt;\n</code></pre>\n\n<p>UPDATE </p>\n\n<pre><code>$(document).ready(function(){\n    var letter_size = 6;\n    $(\"input[type='text']\").keyup(function(e) {\n        $('.hidden_for_width').text($(this).val());\n        move_size = $('.hidden_for_width').width();\n        $('#box').css({'left': move_size});\n    });\n});\n</code></pre>\n\n<p>added a hidden container in wich i insert the value from input . after that i get the width of that container and move my DIV accordingly </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>What about canvas 2D? It has API for drawing an measuring text. You could use that. Set same font, font-size and you should be able to measure width of string from text box. </p>\n\n<pre><code>      $('body').append('&lt;canvas id=\"textCanvas\" width=\"100px\" height=\"100px\"&gt;I\\'m sorry your browser does not support the HTML5 canvas element.&lt;/canvas&gt;');\n      var canvas = document.getElementById('textCanvas');\n      var ctx = canvas.getContext('2d');\n      ctx.measureText(text);\n      var width = mes.width;\n</code></pre>\n\n<p>I used this kind of solution to acquire width of some text to draw it in WebGL. I worked just fine but I never tested this what going to happen when text is to big for canvas context, thought i think it will be fine because it is API for measuring text. But ho knows you should totally check it out! :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could use <code>&lt;span contenteditable=\"true\"&gt;&lt;/span&gt;&lt;input type=\"hidden\" /&gt;</code>. That way you can use <code>window.getSelection()</code> with <code>getRangeAt</code> and <code>getClientRects</code> to get the position. This should work with most modern browsers, including IE9+:</p>\n\n<pre><code>function getCaret() {\n    var caret = caret = {top: 0, height: 0},\n        sel = window.getSelection();\n    caret.top = 0;\n    caret.height = 0;\n    if(sel.rangeCount) {\n        var range = sel.getRangeAt(0);          \n        var rects = range.getClientRects();\n        if (rects.length &gt; 0) {\n            caret.top = rects[0].top;\n            caret.height = rects[0].height;\n        } else {\n            caret.top = range.startContainer.offsetTop - document.body.scrollTop;\n            caret.height = range.startContainer.clientHeight;\n        }\n    }\n    return caret;\n}\n</code></pre>\n\n<p>(Keep in mind the project I pulled this from is targeting Mobile Safari, and uses one large contenteditable view. You may need to tweak it to fit your needs. It's more for demonstration purposes how to get the X and Y coordinates.)</p>\n\n<p>For IE8 and below IE has a proprietary API for getting the same information.</p>\n\n<p>The tricky part is making sure that your element only allows plain text. Specifically with the paste event. When the span looses focus (onblur) you want to copy the contents into the hidden field so it can be posted.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Elaborating on my comment above, I guess the following should work.</p>\n\n<p>To show the principle I omitted formatting, so element (id=\"spacer\") color may needed to be set to <code>#FFFFFE</code>, maybe some pixels of leading space added etc ... but the carret will move proportionally now - provided that id's test and spacer use the same font.</p>\n\n<p>Of course <strong>we don't know the distance in <em>[px]</em></strong> as asked, but we are able to <strong>position content</strong> (a carret in this case) <strong>fully in line with the width of a proportional font</strong>, so if that's the ultimate goal (like mentioned in <em>OP line 3</em>), then .... voi l\u00e1!</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;&lt;/title&gt;\n        &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;script type=\"text/javascript\"&gt;\n            function adjust()\n            {\n                document.getElementById('spacer').innerHTML=document.getElementById('test').value;\n            }\n        &lt;/script&gt;\n        &lt;p&gt;\n            &lt;input name=\"test\" id=\"test\" type=\"text\" onkeyup=\"adjust()\" /&gt; Test &lt;br /&gt;\n            &lt;span id=\"spacer\"&gt;&lt;/span&gt;^here\n        &lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>Update:</strong></p>\n\n<pre><code>&lt;span id=\"spacer\" style=\"color: #FFFFFF\"&gt;&lt;/span&gt;\n</code></pre>\n\n<p>this will make the spacer invisible on a white background, but does not yet prevent the user from highlighting the spacer text by selecting the span element. Leaves the task of making the spacer unselectable - there's a good solution <a href=\"http://stackoverflow.com/questions/2326004/prevent-selection-in-html\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Similar questions covering your question:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/9012835/find-caret-position-in-textarea-in-pixels\">Find caret position in textarea in pixels</a></li>\n<li><a href=\"http://stackoverflow.com/questions/6930578/get-cursor-or-text-position-in-pixels-for-input-element\">Get cursor or text position in pixels for input element</a></li>\n<li><a href=\"http://stackoverflow.com/questions/8456652/how-to-get-the-pixel-offset-from-the-current-caret-position-in-an-iframe-with-co\">How to get the pixel offset from the current caret position in an iframe with contentEditable</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p><strong>UPDATE</strong>: duplicate of <a href=\"http://stackoverflow.com/questions/6930578/get-cursor-or-text-position-in-pixels-for-input-element\">Get cursor or text position in pixels for input element</a>.</p>\n\n<p><strong>TL; DR</strong> - use the incredibly lightweight and robust <a href=\"https://github.com/component/textarea-caret-position/releases/tag/2.0.0\" rel=\"nofollow\">textarea-caret-position</a> <em>Component</em> library, which now supports <code>&lt;input ype=\"text\"&gt;</code> as well. Demo at <a href=\"http://jsfiddle.net/dandv/aFPA7/\" rel=\"nofollow\">http://jsfiddle.net/dandv/aFPA7/</a></p>\n\n<hr>\n\n<p>Is there a way to know where the caret is inside an HTML text field?</p>\n\n<pre><code>&lt;input type='text' /&gt; \n</code></pre>\n\n<p>I would like to position in pixels (and reposition) a div depending on the position of the caret.</p>\n\n<blockquote>\n  <p><strong><em>Note</strong>: I don't want to know the position in characters or in a <code>&lt;textarea&gt;</code>. I want to know position in pixels in an <code>&lt;input&gt;</code> element.</em></p>\n</blockquote>\n",
            "last_activity_date": 1399033912,
            "question_id": 13347471,
            "score": 20,
            "tags": [
                "javascript",
                "html",
                "textinput",
                "caret"
            ],
            "title": "Caret position in pixels in an input type text (not a textarea)"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I know only one possible solution, but it's not really 1-1 fallback for IEs. There are no possible communication API for sending files, because you cannot bind input fields in old browsers, like in a modern ones using FormData. But you can send whole form using an iframe. For this case you can use <a href=\"https://github.com/malsup/form\">jquery.form</a> plugin that support XHR DataForm and iframe (data sends with iframe when browser do not FormData API support).</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can send the file manually using XMLHtpRequests, there is lots of information on this <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Submitting_forms_and_uploading_files\" rel=\"nofollow\">here</a>.</p>\n\n<p>You could test if the browser can use the <code>FormData</code> object first with:</p>\n\n<pre><code>if(typeof FormData !== 'undefined')\n   ...\n</code></pre>\n\n<p>MDN has a <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms/Sending_forms_through_JavaScript#Building_an_XMLHttpRequest_manually\" rel=\"nofollow\">this function</a> which you could modify for the fallback:</p>\n\n<pre><code>var XHR = new XMLHttpRequest();\nvar urlEncodedData = \"\";\nvar urlEncodedDataPairs = [];\nvar name;\n\n// We turn the data object into an array of URL encoded key value pairs.\nfor(name in data) {\n  urlEncodedDataPairs.push(encodeURIComponent(name) + '=' + encodeURIComponent(data[name]));\n}\n\n// We combine the pairs into a single string and replace all encoded spaces to \n// the plus character to match the behaviour of the web browser form submit.\nurlEncodedData = urlEncodedDataPairs.join('&amp;').replace(/%20/g, '+');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p><a href=\"https://developer.mozilla.org/en/DOM/XMLHttpRequest/FormData/Using_FormData_Objects\">FormData</a> does not exist in IE 8/9 but I need that functionality in those browsers. Is there a nice fallback for this? </p>\n\n<p>I would try to send over json data, but I need to pass over a file to the server. I append this file to the <code>formData</code> in modern browsers and just submit an <code>XHR</code> request. Because <code>FormData</code> does not exist in IE 8/9 this obviously fails.</p>\n\n<pre><code>// I cant seem to get this to work with a file.\n$.ajax({\n    url: '/genericHandlers/UploadDocsFile.ashx',\n    type: \"POST\",\n    data: model.toJSON(),\n    contentType: 'application/json'\n    }).done(function  (data) { \n       log('stuff happened!');\n    });\n</code></pre>\n\n<p>Maybe an alternative is to create a fake form object in js then append the data to that? </p>\n",
            "last_activity_date": 1407252325,
            "question_id": 10852446,
            "score": 20,
            "tags": [
                "javascript",
                "ajax",
                "xmlhttprequest",
                "fileapi"
            ],
            "title": "Fallback for FormData in IE 8/9"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Just bind the datepicker to a class rather than binding it to the id . Remove the class when you want to revoke the datepicker...</p>\n\n<pre><code>$(\"#ddlSearchType\").change(function () { \n\n                if ($(this).val() == \"Required Date\" || $(this).val() == \"Submitted Date\")                   { \n                    $(\"#txtSearch\").addClass(\"mydate\");\n                    $(\".mydate\").datepicker()\n                     } \n                else { \n                    $(\"#txtSearch\").removeClass(\"mydate\");\n                } \n            }); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can try the enable/disable methods instead of using the option method:</p>\n\n<pre><code>$(\"#txtSearch\").datepicker(\"enable\");\n$(\"#txtSearch\").datepicker(\"disable\");\n</code></pre>\n\n<p>This disables the entire textbox. So may be you can use <a href=\"http://jqueryui.com/demos/datepicker/#method-destroy\"><code>datepicker.destroy()</code></a> instead: </p>\n\n<pre><code>$(document).ready(function() {\n    $(\"#ddlSearchType\").change(function() {\n        if ($(this).val() == \"Required Date\" || $(this).val() == \"Submitted Date\") {\n            $(\"#txtSearch\").datepicker();\n        }\n        else {\n            $(\"#txtSearch\").datepicker(\"destroy\");\n        }\n    }).change();\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/salman/faZ9u/\">Demo here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>Destroy the datepicker's instance when you don't want it and create new instance whenever necessary.</p>\n\n<p>I know this is ugly but only this seems to be working... </p>\n\n<p><a href=\"http://jsfiddle.net/jishnuap/Vc4av/2/\"><strong>Check this out</strong></a></p>\n\n<pre><code> $(\"#ddlSearchType\").change(function () {\n        if ($(this).val() == \"Required Date\" || $(this).val() == \"Submitted Date\") {\n                $(\"#txtSearch\").datepicker();\n\n         }\n          else {\n                $(\"#txtSearch\").datepicker(\"destroy\");                    \n         }\n });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<p>I want to remove datepicker function depending on the dropdownlist selected value.  I try the following codes, but it still shows the calendar when I put the cursor in the text box.  Please give me a suggestion.</p>\n\n<pre><code>$(\"#ddlSearchType\").change(function () {\n    if ($(this).val() == \"Required Date\" || $(this).val() == \"Submitted Date\") {\n        $(\"#txtSearch\").datepicker();\n    } else {\n        $(\"#txtSearch\").datepicker(\"option\", \"disabled\", true);\n    }\n});\n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/s3VMd.jpg\" alt=\"enter image description here\"></p>\n",
            "last_activity_date": 1390296229,
            "question_id": 6107465,
            "score": 20,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui",
                "jquery-ui-datepicker"
            ],
            "title": "Remove Datepicker Function dynamically"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>all of the modern browsers except Chrome support both iframereference.contentWindow and iframereference.contentDocument, but only if the page opened in the iframe is on the same domain as the page containing the iframe.</p>\n\n<p>To include Chrome, use var iwin=iframereference.contentWindow,\nidoc=iwin.document</p>\n\n<p>.contentDocument is the window.document of the page in the iframe, \nas is contentWindow.document, but not .contentDocument.document.</p>\n\n<p>Chrome may include support for .contentDocument in some future version- I hope so, because it is also the way all the other browsers find the document contained in an Object element, type text/html, where the data attribute is the url of an html page.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There's an easier way that's been around longer... use <code>window.frames</code> to get a reference to the frame's window object.</p>\n\n<p>By name or id:</p>\n\n<pre><code>var iframe_doc = window.frames.my_iframe.document;\n</code></pre>\n\n<p>or if you prefer:</p>\n\n<pre><code>var iframe_doc = window.frames['my_iframe'].document;\n</code></pre>\n\n<p>or by index:</p>\n\n<pre><code>var iframe_doc = window.frames[0].document;\n</code></pre>\n\n<p>Good reference for <code>window.frames</code> here: <a href=\"http://developer.mozilla.org/en/DOM/window.frames\">http://developer.mozilla.org/en/DOM/window.frames</a></p>\n\n<p>An excerpt:</p>\n\n<blockquote>\n  <p>each item in the window.frames\n  pseudo-array represents the window\n  object corresponding to the given\n  &lt;frame&gt;'s or &lt;iframe&gt;'s content, not\n  the (i)frame DOM element (i.e.\n  window.frames[ 0 ] is the same thing\n  as document.getElementsByTagName(\n  \"iframe\" )[ 0 ].contentWindow)</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>During the time I made many tests, and finally came up with this short but robust syntax which works on every browser I could test:</p>\n\n<pre><code><strike>var doc = iframe.contentDocument ?\niframe.contentDocument : (iframe.contentWindow.document || iframe.document);</strike></code></pre>\n\n<p><strong>EDIT:</strong> @DaggNabbit noticed that a reference error in <code>iframe.contentWindow.document</code>, if <code>iframe.contentWindow</code> is not set, would block the code execution, not allowing <code>iframe.document</code> to be returned.<br />\nSo I refined my code:</p>\n\n<pre><code>var doc = iframe.contentDocument ?\n    iframe.contentDocument :\n    (iframe.contentWindow ? iframe.contentWindow.document : iframe.document);\n</code></pre>\n\n<p>NOTE: <code>iframe.document</code> is a workaround for IE5.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>i think this is a very easy and cross browser way</p>\n\n<pre><code>//get document object of IFRAME\nif(typeof frame.contentDocument!='undefined') {\n    iframeDocument=frame.contentDocument;\n} else {\n    iframeDocument=frame.document;\n}\n//get window object of IFRAME\nif(typeof frame.contentWindow!='undefined') {\n    iframeWindow=frame.contentWindow;\n} else {\n    iframeWindow=frame.window;\n}\n</code></pre>\n\n<p>you can test it</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to figure out the best way to access an <code>&lt;iframe&gt;</code> element's <code>window</code> and <code>document</code> properties from a parent page. The <code>&lt;iframe&gt;</code> may be created via JavaScript or accessed via a reference stored in an object property or a variable, so, if I understand correctly, that rules out the use of <code>document.frames</code>.</p>\n\n<p>I've seen this done a number of ways, but I'm unsure about the best approach. Given an <code>&lt;iframe&gt;</code> created in this way:</p>\n\n<pre><code>var iframe = document.createElement('iframe');\ndocument.getElementsByTagName('body')[0].appendChild(iframe);\n</code></pre>\n\n<p>I'm currently using this to access the <code>document</code>, and it seems to work OK across the major browsers:</p>\n\n<pre><code>var doc = iframe.contentWindow || iframe.contentDocument;\nif (doc.document) {\n  doc = doc.document;\n}\n</code></pre>\n\n<p>I've also see this approach:</p>\n\n<pre><code>var iframe = document.getElementById('my_iframe');\n\niframe = (iframe.contentWindow) ? iframe.contentWindow :\n         (iframe.contentDocument.document) ? iframe.contentDocument.document :\n         iframe.contentDocument;\n\niframe.document.open();\niframe.document.write('Hello World!');\niframe.document.close();\n</code></pre>\n\n<p>That confuses me, since it seems that if <code>iframe.contentDocument.document</code> is defined, you're going to end up trying to access <code>iframe.contentDocument.document.document</code>.</p>\n\n<p>There's also this:</p>\n\n<pre><code>var frame_ref = document.getElementsByTagName('iframe')[0];\n\nvar iframe_doc = frame_ref.contentWindow ? frame_ref.contentWindow.document :\n    frame_ref.contentDocument;\n</code></pre>\n\n<p>In the end, I guess I'm confused as to which properties hold which properties, whether <code>contentDocument</code> is equivalent to <code>document</code> or whether there is such a property as <code>contentDocument.document</code>, etc.</p>\n\n<p>Can anyone point me to an accurate/timely reference on these properties, or give a quick briefing on how to efficiently access an <code>&lt;iframe&gt;</code>'s <code>window</code> and <code>document</code> properties in a cross-browser way (without the use of jQuery or other libraries)?</p>\n\n<p>Thanks for any help!</p>\n",
            "last_activity_date": 1386034011,
            "question_id": 2947082,
            "score": 20,
            "tags": [
                "javascript",
                "dom",
                "iframe",
                "cross-browser",
                "document"
            ],
            "title": "What&#39;s the most concise cross-browser way to access an &lt;iframe&gt; element&#39;s window and document?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The first parameter in the function is the event. So you could use the target of the event to grab your element.</p>\n\n<pre><code>Template.scores.events({\n  'click .click-me': function (event, template) {\n    console.log(event.target);\n    $(event.target).text(\"O but I did!\");\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>This video explains the concepts: </p>\n\n<p><a href=\"http://www.eventedmind.com/posts/meteor-spark-data-annotation-and-data-contexts\">http://www.eventedmind.com/posts/meteor-spark-data-annotation-and-data-contexts</a>.</p>\n\n<p>The direct answer to your question:</p>\n\n<p>The thisArg inside an event handler <em>should</em> point to a data context. But sometimes the data context is <code>undefined</code>. When you use the <code>Function.prototype.call(thisArg, ...)</code> in JavaScript, if the thisArg is undefined (e.g. a dataContext is undefined) the browser will set <code>this</code> equal to window. So, the docs aren't <em>wrong</em> per se but the event handling code isn't guarding against the possibility of a data context being undefined. I'm guessing that will be fixed in short order.</p>\n\n<p>So, what produces a data context for a template? Normally your root template won't even have a data context. In other words, the Template function is called without an object. But if you use the <code>{{#with</code> block helper or the <code>{{#each</code> iterator, a data context will be created for each item in the list, or in the case of the <em>with</em> helper, the object. </p>\n\n<p>Example:</p>\n\n<pre><code>var context = {};\n\n&lt;template name=\"withHelper\"&gt;\n  {{#with context}}\n    // data context is the context object\n  {{/with}}\n&lt;/template&gt;\n\nvar list = [ {name: \"one\"}, {name: \"two\"} ];\n\n&lt;template name=\"list\"&gt;\n  {{#each list}}\n    {{ &gt; listItem }} // data context set to the list item object\n  {{/each}}\n&lt;/template&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                }
            ],
            "body": "<p>A quick question on the context of the event handlers for templates in Meteor (with Handlebars). </p>\n\n<ul>\n<li>In the section of Documentation on template instances (<a href=\"http://docs.meteor.com/#template_inst\">http://docs.meteor.com/#template_inst</a>) it is mentioned that \"<em>Template instance objects are found as the value of this in the created, rendered, and destroyed template callbacks and <strong>as an argument to event handlers</em></strong>\"</li>\n<li>In the Templates section (<a href=\"http://docs.meteor.com/#templates\">http://docs.meteor.com/#templates</a>) it says \"<em>Finally, you can use an events declaration on a template function to set up a table of event handlers. The format is documented at Event Maps. <strong>The this argument</strong> to the event handler will be the <strong>data context</strong> of the element that triggered the event.</em>\"</li>\n</ul>\n\n<p>Well, this is only partially true. Let's use an example from the docs: </p>\n\n<pre><code>&lt;template name=\"scores\"&gt;\n  {{#each player}}\n    {{&gt; playerScore}}\n  {{/each}}\n&lt;/template&gt;\n\n&lt;template name=\"playerScore\"&gt;\n  &lt;div&gt;{{name}}: {{score}}\n    &lt;span class=\"givePoints\"&gt;Give points&lt;/span&gt;\n  &lt;/div&gt;\n&lt;/template\nTemplate.playerScore.events({\n  'click .givePoints': function () {\n    Users.update({_id: this._id}, {$inc: {score: 2}});\n  });\n</code></pre>\n\n<p>Here the \"this\" context of the 'click .givePoints' event handler is indeed the template instance of playerScore. Let's modify the html:</p>\n\n<pre><code>&lt;template name=\"scores\"&gt;\n  &lt;span class=\"click-me\"&gt;Y U NO click me?&lt;span&gt;\n  {{#each player}}\n    {{&gt; playerScore}}\n  {{/each}}\n&lt;/template&gt;\n\n&lt;template name=\"playerScore\"&gt;\n  &lt;div&gt;{{name}}: {{score}}\n    &lt;span class=\"givePoints\"&gt;Give points&lt;/span&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre>\n\n<p>... and add an event handler for .click-me on the scores template:</p>\n\n<pre><code>Template.scores.events({\n  'click .click-me': function () {\n    console.log(this);\n  }\n});\n</code></pre>\n\n<p>Now, if you click the span, what do you get logged? The Window object! What did I expect to get? The template object! Or maybe the data context, but it's neither. However, inside the callbacks (e.g. Template.scores.rendered = function(){ ... }) the context of \"this\" is always the template instance. </p>\n\n<p>I guess my real question would be: is this something to do with</p>\n\n<ul>\n<li>a bug in Handlebars, Meteor or somewhere in between?  </li>\n<li>slightly incomplete documentation on the templates?</li>\n<li>me completely misinterpreting the docs or not understanding something fundamental\nabout Meteor or Handlebars?</li>\n</ul>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1362106209,
            "question_id": 15137206,
            "score": 19,
            "tags": [
                "javascript",
                "meteor",
                "handlebars.js"
            ],
            "title": "The context of &quot;this&quot; in Meteor template event handlers (using Handlebars for templating)"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Backbone collections support the underscorejs <code>find</code> method, so using that should work.</p>\n\n<pre><code>things.find(function(model) { return model.get('name') == 'Lee'; });\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>For simple attribute based searches you can use <a href=\"http://backbonejs.org/#Collection-where\"><code>Collection#where</code></a>:</p>\n\n<blockquote>\n  <p><strong>where</strong> <code>collection.where(attributes)</code></p>\n  \n  <p>Return an array of all the models in a collection that match the passed <strong>attributes</strong>. Useful for simple cases of <code>filter</code>.</p>\n</blockquote>\n\n<p>So if <code>friends</code> is your <code>Friends</code> instance, then:</p>\n\n<pre><code>var lees = friends.where({ name: 'Lee' });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 36
                }
            ],
            "body": "<p>I am new to Backbone, and have a simple question need to be answer.</p>\n\n<p>So, I have a model with several object:</p>\n\n<pre><code>//Model\nFriend = Backbone.Model.extend({\n    //Create a model to hold friend attribute\nname: null,\n}); \n\n//objects\nvar f1 = new Friend({ name: \"Lee\" });\nvar f2 = new Friend({ name: \"David\"});\nvar f3 = new Friend({ name: \"Lynn\"});\n</code></pre>\n\n<p>and also, I will add these friends object to a collection:</p>\n\n<pre><code>//Collection\nFriends = Backbone.Collection.extend({\n    model: Friend,\n});\n\nFriends.add(f1);\nFriends.add(f2);\nFriends.add(f3);\n</code></pre>\n\n<p>and Now I want to get a model according to the name of the Friend. I know that I can add an <code>ID</code> attribute to achieve this. But I think there should have some more simple way to do this. Could some one provide me the code?</p>\n\n<p>Thank you</p>\n",
            "last_activity_date": 1358644475,
            "question_id": 14420599,
            "score": 19,
            "tags": [
                "javascript",
                "backbone.js",
                "backbone-collections"
            ],
            "title": "Backbone - How to find a model from a collection according to some other attribute but not ID?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You need to check NODE_PATH variable and if it is empty then set it with instructions given here\n<a href=\"http://www.davidarno.org/2012/02/09/writing-a-node.js-module-in-coffeescript/\" rel=\"nofollow\">http://www.davidarno.org/2012/02/09/writing-a-node.js-module-in-coffeescript/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Had similar problem when using grunt, I've removed </p>\n\n<pre><code>node_modules \n</code></pre>\n\n<p>folder from my root folder and run </p>\n\n<pre><code>npm install\n</code></pre>\n\n<p>That fixed my problem </p>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>Update your package.json file </p>\n\n<pre><code>\"coffee-script\": \"~1.6.3\"\n</code></pre>\n\n<p>on \"devDependencies\" and update the npm again</p>\n\n<pre><code>npm update\n</code></pre>\n\n<p>the same issue fixed for me</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p><a href=\"https://github.com/fgnass/node-dev#settings\" rel=\"nofollow\">https://github.com/fgnass/node-dev#settings</a>\nNote: If you want to use coffee-script &lt; 1.7 you have to change the setting to {\"coffee\": \"coffee-script\"}.</p>\n\n<p>so update your coffe-script or config your setting</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You need to check NODE_PATH variable against the location given by <code>npm list -g coffee-script</code>.<br>\nIf empty, <code>npm install -g coffee-script</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This did the trick for me</p>\n\n<pre><code>npm install --save-dev coffee-script\n\nnode -v # v0.10.31\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is a question from 2012. Now it's nearly 2015, and in the meantime, there is now another, new approach for a differerent variation of the problem caused by breaking changes introduced into node and coffeescript.</p>\n\n<p>For coffeescript > v1.7 you must now call</p>\n\n<pre><code>var coffee = require('coffee-script').register();\n</code></pre>\n\n<p>instead of </p>\n\n<pre><code>var coffee = require('coffee-script');\n</code></pre>\n\n<p>See this answer \n<a href=\"http://stackoverflow.com/a/21585379\">http://stackoverflow.com/a/21585379</a>\nto this question: \n<a href=\"http://stackoverflow.com/questions/21583899/how-to-properly-set-up-coffeescript-with-node-js\">How to properly set up Coffeescript with Node.js</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Trying to get a basic site set up with TowerJS as a test, but ran into this error when running the scaffold generator.</p>\n\n<pre><code>Macbook:app john$ tower generate scaffold Post title:string body:text belongsTo:user\n{ [Error: Cannot find module 'coffee-script'] code: 'MODULE_NOT_FOUND' }\n\nmodule.js:340\n    throw err;\n          ^\nError: Cannot find module '/Users/john/Sites/tower/app/app/config/shared/application'\n    at Function.Module._resolveFilename (module.js:338:15)\n    at Function.Module._load (module.js:280:25)\n    at Module.require (module.js:362:17)\n    at require (module.js:378:17)\n    at Function.Tower.Application.Application.reopenClass.instance (/usr/local/lib/node_modules/tower/lib/tower-application/server/application.js:42:15)\n    at _.extend.namespace (/usr/local/lib/node_modules/tower/lib/tower-support/shared/shared.js:218:30)\n    at GeneratorScaffoldGenerator.Tower.GeneratorResources.buildApp (/usr/local/lib/node_modules/tower/lib/tower-generator/server/resources.js:273:66)\n    at GeneratorScaffoldGenerator.Generator (/usr/local/lib/node_modules/tower/lib/tower-generator/server/generator.js:57:23)\n    at new GeneratorScaffoldGenerator (/usr/local/lib/node_modules/tower/lib/tower-generator/server/generators/tower/scaffold/scaffoldGenerator.js:21:61)\n    at Function.run (/usr/local/lib/node_modules/tower/lib/tower-generator/server/generator.js:22:12)\n</code></pre>\n",
            "last_activity_date": 1423343693,
            "question_id": 13011290,
            "score": 19,
            "tags": [
                "javascript",
                "node.js",
                "coffeescript",
                "towerjs"
            ],
            "title": "Cannot find module &#39;coffee-script&#39;"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Your redirect url: <a href=\"http://dennys-m.appspot.com/fb_login/\">http://dennys-m.appspot.com/fb_login/</a> must match the <code>canvas url</code> in <a href=\"https://developers.facebook.com/apps/\">https://developers.facebook.com/apps/</a> configuration panel.</p>\n\n<p>Fortunately, these days Facebook gives the error message <code>Invalid redirect_uri: Given URL is not allowed by the Application configuration</code>. About a year ago no such exception appeared, just strange results.</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>In my case there was no <code>/</code> at the end of mine redirect uri! No comments to fb..</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>if you are using <code>localhost:3000</code> as your call back url,\nFor example your call back uri may like: <code>http://localhost:3000/sessions/create</code>, where <code>sessions/create</code> are the controller and action respectively,\nthen make your Canvas URL as: <code>http://localhost:3000/</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You have to register your <code>redirect URL</code> at <code>Facebook console</code></p>\n\n<p>First go to  <code>Advanced</code> tab inside <code>Settings</code></p>\n\n<p><img src=\"http://i.stack.imgur.com/bnk6Q.png\" alt=\"enter image description here\"></p>\n\n<p>There after scroll down to <code>Valid OAuth redirect URIs</code></p>\n\n<p>register your <code>url</code> there the moment you will save changes it will stop giving this exception</p>\n\n<p><img src=\"http://i.stack.imgur.com/PObmE.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm getting the following error when trying to authenticate to Facebook with OAuth:</p>\n\n<pre><code>{\n   \"error\": {\n      \"message\": \"Invalid redirect_uri: Given URL is not allowed by the Application configuration.\",\n      \"type\": \"OAuthException\"\n   }\n}\n</code></pre>\n\n<p>My url looks like this:</p>\n\n<pre><code>https://graph.facebook.com/oauth/authorize?client_id=283993944973616&amp;redirect_uri=http://dennys-m.appspot.com/fb_login/&amp;scope=publish_stream,email&amp;display=popup\n</code></pre>\n\n<p>I know there are a lot of other posts with this problem, but I can't see what would make my url invalid. Any ideas why I'm getting this error?</p>\n",
            "last_activity_date": 1421066554,
            "question_id": 8100043,
            "score": 19,
            "tags": [
                "javascript",
                "facebook",
                "oauth-2.0"
            ],
            "title": "Facebook &quot;Invalid redirect_uri&quot;, but the url looks fine to me"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I think you can achieve what you are looking for by combining number 1 with calling a function like in number 3. </p>\n\n<p>You don't want to execute scripts on page load and prefer to call a function later on? Fine, just create a function that returns the value you would have set in a variable:</p>\n\n<pre><code>function getContextPath() {\n   return \"&lt;%=request.getContextPath()%&gt;\";\n}\n</code></pre>\n\n<p>It's a function so it wont be executed until you actually call it, but it returns the value directly, without a need to do DOM traversals or tinkering with URLs.</p>\n\n<p>At this point I agree with @BalusC to use EL:</p>\n\n<pre><code>function getContextPath() {\n   return \"${pageContext.request.contextPath}\";\n}\n</code></pre>\n\n<p>or depending on the version of JSP fallback to JSTL:</p>\n\n<pre><code>function getContextPath() {\n   return \"&lt;c:out value=\"${pageContext.request.contextPath}\" /&gt;\";\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Based on the discussion in the comments (particularly from BalusC), it's probably not worth doing anything more complicated than this:</p>\n\n<pre><code>&lt;script&gt;var ctx = \"${pageContext.request.contextPath}\"&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Got it :D</p>\n\n<pre><code>function getContextPath() {\n   return window.location.pathname.substring(0, window.location.pathname.indexOf(\"/\",2));\n}\nalert(getContextPath());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>Using a Java-based back-end (i.e., servlets and JSP), if I need the contextPath from JavaScript, what is the recommended pattern for doing that, any why?  I can think of a few possibilities.  Am I missing any?</p>\n\n<p><strong>1. Burn a SCRIPT tag into the page that sets it in some JavaScript variable</strong></p>\n\n<pre><code>&lt;script&gt;var ctx = \"&lt;%=request.getContextPath()%&gt;\"&lt;/script&gt;\n</code></pre>\n\n<p>This is accurate, but requires script execution when loading the page.</p>\n\n<p><strong>2. Set the contextPath in some hidden DOM element</strong></p>\n\n<pre><code>&lt;span id=\"ctx\" style=\"display:none;\"&gt;&lt;%=request.getContextPath()%&gt;&lt;/span&gt;\n</code></pre>\n\n<p>This is accurate, and doesn't require any script execution when loading the page.  But you do need a DOM query when need to access the contextPath.  The result of the DOM query can be cached if you care that much about performance.</p>\n\n<p><strong>3. Try to figure it out within JavaScript by examining <code>document.URL</code> or the BASE tag</strong></p>\n\n<pre><code>function() {\n    var base = document.getElementsByTagName('base')[0];\n    if (base &amp;&amp; base.href &amp;&amp; (base.href.length &gt; 0)) {\n        base = base.href;\n    } else {\n        base = document.URL;\n    }\n    return base.substr(0,\n        base.indexOf(\"/\", base.indexOf(\"/\", base.indexOf(\"//\") + 2) + 1));\n};\n</code></pre>\n\n<p>This doesn't require any script execution when loading the page, and you can also cache the result if necessary.  But this only works if you know your context path is a single directory -- as opposed to the root directory (<code>/</code>) or the multiple directories down (<code>/mypath/iscomplicated/</code>).</p>\n\n<p><strong>Which way I'm leaning</strong></p>\n\n<p>I'm favoring the hidden DOM element, because it doesn't require JavaScript code execution at the load of the page.  Only when I need the contextPath, will I need to execute anything (in this case, run a DOM query).</p>\n",
            "last_activity_date": 1400701412,
            "question_id": 6615641,
            "score": 19,
            "tags": [
                "javascript",
                "jsp",
                "servlets"
            ],
            "title": "How do you get the contextPath from JavaScript, the right way?"
        },
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>&gt;&gt;&gt; jQuery.fn.jquery;\n\"1.3.2\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<pre><code>$().jquery;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>jQuery.fn.jquery;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Found this in jquery.1.3.2 source:</p>\n\n<pre><code> jQuery.fn = jQuery.prototype = {\n    init: function( selector, context ) {\n    .....\n    // The current version of jQuery being used\n    jquery: \"1.3.2\",\n</code></pre>\n\n<p>I didn't check, but something like \"$.fn.jQuery\" might work.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is a check I used to make sure the user was using at least v. 1.3.2 of jQuery.</p>\n\n<pre><code>if (/1\\.(0|1|2|3)\\.(0|1)/.test($.fn.jquery) \n                    || /^1.1/.test($.fn.jquery) \n                    || /^1.2/.test($.fn.jquery)) \n{\n    //Tell user they need to upgrade.\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>See my answer here: <a href=\"http://stackoverflow.com/questions/2655308/jquery-version-compatibility-detection/3113707#3113707\">jQuery Version Compatibility Detection</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Split the jQuery version string into numbers to test their value. Some version strings do not contain an increment, so make them 0.</p>\n\n<pre><code>var\n  version = $.fn.jquery.split('.'),\n  versionMinor = parseFloat(version[1]),\n  versionIncrement = parseFloat(version[2] || '0');\n\nif (versionMinor === 4 &amp;&amp; versionIncrement &lt; 3 || versionMinor &lt; 4) {\n  $.error('Requires jQuery 1.4.3 or higher to support ...');\n}\n</code></pre>\n\n<p>Use the jQuery error function to prevent execution with an explanation to the developer.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>since there is no jquery version that us more than one digit, you can safely use</p>\n\n<pre><code>if ([$.fn.jquery,\"1.6\"].sort()[0] == \"1.6\")\n{\n  // jquery version greater or same as 1.6\n}\nelse\n{\n  // jquery version lower than 1.6\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I feel like all the solutions are rather bulky, is mine below missing something?</p>\n\n<p>Compressed version:</p>\n\n<pre><code>(parseInt(jQuery.fn.jquery.split('.').join('')) &gt; 140) ? alert(\"Running jquery greater than 1.4.0\") : alert(\"current jquery version is 1.4.0 or less\");\n</code></pre>\n\n<p>Long version for clarity:</p>\n\n<pre><code>// get version as a string and get rid of the periods. \nversion = jQuery.fn.jquery.split('.').join('');\n\n// Make into one long number for easy comparison.  Example, 171, or 141.\nversion = parseInt(version);\nif(version &gt; 141){\n    alert(\"We're using a version greater than 1.4.1\");\n}else{\n    alert(\"jQuery version is 1.4.1 or lower\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>The only correct answer is to use a version comparison function.</strong></p>\n\n<p>A lot of the answers here make really poor assumptions that even a little critical thinking can show to be incorrect, like assuming that each sub-version is one digit, or that jQuery will never reach version 2. I do not want to re-hash them in this answer, but those periods have meaning: It means \u201cwhatever is on my left is a number that matters more than everything to my right.\u201d And therefore the correct solution <strong>always</strong> checks the leftmost version number component, and <strong>only</strong> checks the next component if the first pair matched exactly, and so on.</p>\n\n<p><strong>jQuery\u2019s version number</strong> is available in <code>$.fn.jquery</code> as noted in many other answers here. It is a string, and your version comparison function should expect strings.</p>\n\n<p><a href=\"http://phpjs.org/functions/version_compare:852\" rel=\"nofollow\">Here is a port of PHP\u2019s version comparison function to JS</a>. Note it\u2019s probably overkill for jQuery, especially if you assume you\u2019ll only ever see numbers and won\u2019t be dealing with release candidates and the like. But it\u2019s going to be reliable and future-proof.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Instead of using <code>parseInt</code> as i saw in one of the answers above i would suggest to use <code>parseFloat</code> as mentioned below</p>\n\n<pre><code>  var _jQueryVer = parseFloat('.'+$().jquery.replace(/\\./g, ''));\n  /* Here the value of _jQueryVer would be 0.1012 if the jQuery version is 1.0.12\n     which in case of parseInt would be 1012 which is higher than \n     140 (if jQuery version is 1.4.0) \n  */\n  if(_jQueryVer &lt; 0.130) { \n    alert('Please upgrade jQuery to version 1.3.0 or higher');\n  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Pass version as array of integers, like <code>jQmin([1,4,2])</code> to check if the current version is equal or above v1.4.2.</p>\n\n<pre><code>function jQmin(min) {\n    var i, cur, \n        cver = $.fn.jquery, \n        c = cver.split(\".\");\n    while (min.length &lt; c.length) min.push(0);\n\n    for (i = 0; i &lt; min.length; i++) {\n        cur = parseInt(c[i]);\n        if (cur &gt; min[i]) return true;\n        if (cur &lt; min[i]) return false;\n    }\n    return (cver === min.join(\".\"));\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Something like that?</p>\n\n<p>It checks if jQuery is loaded, and if it is, checks the version.\nThis method works correct for 2 digit version numbers too (1.10.28), and if needed you can extend it for 3 digits, if you replace the 100 numbers to 1000...</p>\n\n<pre><code>function checkJQueryMinVersion(need) {\n    var v1 = need.split('.');\n    var v1_num = 0;\n    var v2 = jQuery.fn.jquery.split('.');\n    var v2_num = 0;\n\n    if(v1[0] != undefined) {\n        v1_num += 100*100*parseInt(v1[0]);\n    }\n    if(v1[1] != undefined) {\n        v1_num += 100*parseInt(v1[1]);\n    }\n    if(v1[2] != undefined) {\n        v1_num += parseInt(v1[2]);\n    }\n\n    if(v2[0] != undefined) {\n        v2_num += 100*100*parseInt(v2[0]);\n    }\n    if(v2[1] != undefined) {\n        v2_num += 100*parseInt(v2[1]);\n    }\n    if(v2[2] != undefined) {\n        v2_num += parseInt(v2[2]);\n    }\n    return (v1_num &lt;= v2_num);\n}\nif(!window.jQuery || !checkJQueryMinVersion('1.10.28')) {\n    alert('Loading //ajax.googleapis.com/ajax/libs/jquery/1.10.28/jquery.min.js');\n    var script = document.createElement('script');script.type = 'text/javascript';\n    script.src = '//ajax.googleapis.com/ajax/libs/jquery/1.10.28/jquery.min.js';\n    document.getElementsByTagName('head')[0].appendChild(script);\n}\nelse {\n    alert('Jquery version OK');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm surprised no one has given this solution yet:</p>\n\n<pre><code>//Returns &lt; 0 if version1 is less than version2; &gt; 0 if version1 is greater than version2, and 0 if they are equal.\nvar compareVersions = function (version1, version2){\n\n    if(version1 == version2)return 0;\n\n    var version1Parts = version1.split('.');\n    var numVersion1Parts = version1Parts.length; \n\n    var version2Parts = version2.split('.');\n    var numVersion2Parts = version2Parts.length; \n\n\n    for(var i = 0; i &lt; numVersion1Parts &amp;&amp; i &lt; numVersion2Parts; i++){\n        var version1Part = parseInt(version1Parts[i], 10);\n        var version2Part = parseInt(version2Parts[i], 10);\n        if(version1Part &gt; version2Part){\n            return 1;\n        }\n        else if(version1Part &lt; version2Part){\n            return -1;\n        }\n    }\n\n    return numVersion1Parts &lt; numVersion2Parts ? -1 : 1;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>What about:</p>\n\n<pre><code>function minVersion(version) {\nvar $vrs = window.jQuery.fn.jquery.split('.'),\nmin  = version.split('.'),\nprevs=[];\n\nfor (var i=0, len=$vrs.length; i&lt;len; i++) {\n    console.log($vrs[i], min[i], prevs[i-1]);\n    if (min[i] &amp;&amp; $vrs[i] &lt; min[i]) {\n        if (!prevs[i-1] || prevs[i-1] == 0)\n            return false;\n    } else {\n        if ($vrs[i] &gt; min[i])\n            prevs[i] = 1;\n        else\n            prevs[i] = 0;\n    }\n}\nreturn true;\n</code></pre>\n\n<p>}</p>\n\n<p>I wrote that code on my forked gist: <a href=\"https://gist.github.com/budiadiono/7954617\" rel=\"nofollow\">https://gist.github.com/budiadiono/7954617</a>, original code written by dshaw on: <a href=\"https://gist.github.com/dshaw/652870\" rel=\"nofollow\">https://gist.github.com/dshaw/652870</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If it's enough to check minor version, not patch version, you can do something like</p>\n\n<p><code>\nparseFloat(jQuery.fn.jquery) &gt;= 1.9\n</code></p>\n\n<p>It is possible to change this slightly to check >= 1.4.3:\n<code>\nparseFloat(jQuery.fn.jquery) &gt; 1.4 ||\n  parseFloat(jQuery.fn.jQuery) == 1.4 &amp;&amp; parseFloat(jQuery.fn.jQuery.slice(2)) &gt;= 4.3\n</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>When writing a new jQuery plugin is there a straightforward way of checking that the current version of jQuery is above a certain number? Displaying a warning or logging an error otherwise.</p>\n\n<p>It would be nice to do something like:</p>\n\n<pre><code>jQuery.version &gt;= 1.2.6\n</code></pre>\n\n<p>in some form or another.</p>\n",
            "last_activity_date": 1398259335,
            "question_id": 1073423,
            "score": 19,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery Plugin Check Version"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>$(this).next(\"p\").css(\"...\")\n</code></pre>\n\n<p>the \"p\" above is optional, if you just want the next non-whitespace node in the DOM.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Try using: </p>\n\n<pre><code>$(this).siblings('p').css()\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<blockquote>\n  <p>I want to use jQuery to display or hide the 'p' tag when the anchor is clicked</p>\n</blockquote>\n\n<p>Since you mentioned that you'd like to toggle the 'p' tag when the anchor is clicked, I'd do:</p>\n\n<pre><code>  $(\"a.question\").click(function (event) {\n      $(this).siblings('p').show(); //toggle the p tags that are siblings to the clicked element\n      event.preventDefault(); //stop the browser from following the link\n  });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have some HTML that looks like this:</p>\n\n<pre><code>&lt;ul class=\"faq\"&gt;\n    &lt;li class=\"open\"&gt;\n        &lt;a class=\"question\" href=\"\"&gt;This is my question?&lt;/a&gt;\n        &lt;p&gt;Of course you can, it will be awesome. &lt;/p&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>Using CSS I'm setting the 'p' tag to display:none;. I want to use jQuery to display or hide the 'p' tag when the anchor is clicked, but I'm having some troubles with the sibling selector. </p>\n\n<p>Just trying to get the selector working, I tried:</p>\n\n<pre><code>$(\"a.question\").click(function () {\n    $(this + \" ~ p\").css(\"background-color\", \"red\");\n});\n</code></pre>\n\n<p>to test it out. Seemingly, the sibling selector can't really be used like that, and as I'm completely new to jQuery I don't know the appropriate means to make that happen. </p>\n\n<p>Thanks in advance!</p>\n",
            "last_activity_date": 1225313132,
            "question_id": 248320,
            "score": 19,
            "tags": [
                "javascript",
                "jquery",
                "css-selectors"
            ],
            "title": "Using &quot;this&quot; with jQuery Selectors"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Since a web app <em>can't</em> have access to any system-related information (like the available amount of memory), and since you would prefer not having to ask users to manually set their performance settings, you must rely on a solution that allows you to get such information about the user's system (available memory) without asking them. Seems impossible ? Well, almost...</p>\n\n<p>But I suggest you do the following : make a Java applet that will automatically get the available memory size (e.g. using <code>Runtime.exec(...)</code> with an appropriate command), provided your applet is signed, and return that information to the server or directly to the web page (with JSObject, see <a href=\"http://docs.oracle.com/javafx/2/api/netscape/javascript/JSObject.html\" rel=\"nofollow\">http://docs.oracle.com/javafx/2/api/netscape/javascript/JSObject.html</a>).</p>\n\n<p>However, that would assume your users can all run a Java applet within their browsers, which is not always the case. Therefore, you could ask them to install a small piece of software on their machines that will measure how much memory your app should use without crashing the browser, and will send that information to your server. Of course, you would have to re-write that little program for every OS and architecture (Windows, Mac, Linux, iPhone, Android...), but it's simpler that having to re-write the whole application in order to gain some performance. It's a sort of in-between solution.</p>\n\n<p>I don't think there is an easy solution. There <em>will</em> be some drawbacks, whatever you choose to do. Remember that web applications don't have the reputation of being fast, so if performance is critical, you should consider writing a traditional desktop application.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In Chrome the answer is Sure!</p>\n\n<p>Go to the console and type:</p>\n\n<pre><code>performance.memory.jsHeapSizeLimit; // will give you the JS heap size\nperformance.memory.usedJSHeapSize; // how much you're currently using\n\narr = []; for(var i = 0; i &lt; 100000; i++) arr.push(i);\nperformance.memory.usedJSHeapSize; // likely a larger number now\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>While it might be possible on some browsers, the right approach should be to decide what limit is acceptable for the typical customer and optionally provide a UI to define their limit.</p>\n\n<p>Most heavy web apps get away with about 10MB JavaScript heap size. There does not seem to be a guideline. But I would imagine consuming more than 100MB on desktop and 20MB on mobile is not really nice. For everything after that look into local storage, e.g. <a href=\"http://www.html5rocks.com/en/tutorials/file/filesystem/\" rel=\"nofollow\">FileSystem API</a> (and you can totally make it PERSISTENT)</p>\n\n<p>UPDATE</p>\n\n<p>The reasoning behind this answer is the following. It is next to never user runs only one application. More so with counting on the browser having only one tab open. Ultimately, consuming all available memory is never a good option. Hence determining the upper boundary is not necessary.</p>\n\n<p>Reasonable amount of memory user would like to allocate to the web app is a guess work. E.g. highly interactive data analytics tool is quite possible in JS and might need millions of data points. One option is to default to less resolution (say, daily instead of each second measurements) or smaller window (one day vs. a decade of seconds). But as user keeps exploring the data set, more and more data will be needed, potentially crippling the underlying OS on the agent side.</p>\n\n<p>Good solution is to go with some reasonable initial assumption. Let's open some popular web applications and go to dev tools - profiles - heap snapshots to take a look:</p>\n\n<ul>\n<li>FB: 18.2 MB</li>\n<li>GMail: 33 MB</li>\n<li>Google+: 53.4 MB</li>\n<li>YouTube: 54 MB</li>\n<li>Bing Maps: 55 MB</li>\n</ul>\n\n<p><em>Note: these numbers include DOM nodes and JS Objects on the heap.</em></p>\n\n<p>It seems to be then, people come to accept 50 MB of RAM for a useful web site. Once you build your DOM Tree, fill your data structures with test data and see how much is ok to keep in RAM.</p>\n\n<p>Using similar measurements while turning device emulation in Chrome, one can see the consumption of the same sites on tablets and phones, BTW.</p>\n\n<p>This is how I arrived at 100 MB on desktop and 20 MB on mobile numbers. Seemed to be reasonable too. Of course, for occasional heavy user it would be nice to have an option to bump max heap up to 2 GB.</p>\n\n<p>Now, what do you do if pumping all this data from the server every time is too costly?</p>\n\n<p>One thing is to use Application Cache. It does create mild version management headaches but allows you to store around 5 MB of data. Rather than storing data though, it is more useful to keep app code and resources in it.</p>\n\n<p>Beyond that we have three choices:</p>\n\n<ul>\n<li>SQLite - support was limited and it seems to be abandoned</li>\n<li>IndexDB - better option, but support is not universal yet (<a href=\"http://caniuse.com/indexeddb\" rel=\"nofollow\">can I use it?)</a></li>\n<li><a href=\"http://www.html5rocks.com/en/tutorials/file/filesystem/\" rel=\"nofollow\">FileSystem API</a></li>\n</ul>\n\n<p>Of them, FileSystem is most supported and can use <a href=\"http://www.html5rocks.com/en/tutorials/offline/quota-research/\" rel=\"nofollow\">sizeable chunk of storage</a></p>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>Can browsers enforce any sort of limit on the amount of data that can be stored in JavaScript objects? If so, is there any way to detect that limit?</p>\n\n<p>It appears that by default, Firefox does not:</p>\n\n<pre><code>var data;\n$(\"document\").ready(function() {\n  data = [];\n  for(var i = 0; i &lt; 100000000000; i++) {\n    data.push(Math.random());\n  }\n});\n</code></pre>\n\n<p>That continues to consume more and more memory until my system runs out.</p>\n\n<p>Since we <a href=\"http://stackoverflow.com/a/2027797/1454117\">can't detect available memory</a>, is there any other way to tell we are getting close to that limit?</p>\n\n<p><strong>Update</strong></p>\n\n<p>The application I'm developing relies on very fast response times to be usable (it's the core selling point). Unfortunately, it also has a very large data set (more than will fit into memory on weaker client machines). Performance can be greatly improved by preemptively loading data strategically (guessing what will be clicked). The fallback to loading the data from the server works when the guesses are incorrect, but the server round trip isn't ideal. Making use of every bit of memory I can makes the application as performant as possible.</p>\n\n<p>Right now, it works to allow the user to \"configure\" their performance settings (max data settings), but users don't want to manage that. Also, since it's a web application, I have to handle users setting that per computer (since a powerful desktop has a lot more memory than an old iPhone). It's better if it just uses optimal settings for what is available on the systems. But guessing too high can cause problems on the client computer too.</p>\n",
            "last_activity_date": 1402071677,
            "question_id": 23506064,
            "score": 18,
            "tags": [
                "javascript"
            ],
            "title": "How do you detect memory limits in JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It 'll be some assumption being violated in the internal mechanism.</p>\n\n<p>There's not much point trying to rationalise about this stuff.</p>\n\n<p><strong><a href=\"http://validator.w3.org/check\" rel=\"nofollow\">You wrote invalid HTML</a>, so <em>anything</em> can happen.</strong></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This raises the important point that the text inside of <code>&lt;script&gt;</code> tags on an HTML page is parsed by the HTML parser before it is parsed by the Javascript parser.</p>\n\n<p>This code is not valid HTML5 syntax, so there is nothing in the HTML5 specification that would give us a clue about what is going one here. To be specific, there are two issues:</p>\n\n<ul>\n<li>There is a <code>&lt;script&gt;</code> tag without a closing <code>&lt;/script&gt;</code>.</li>\n<li>There is an opening <code>&lt;!--</code> without a closing <code>--&gt;</code>. (see <a href=\"http://www.w3.org/TR/html5/scripting-1.html#restrictions-for-contents-of-script-elements\" rel=\"nofollow\">restrictions for contents of script elements</a>)</li>\n</ul>\n\n<p>Both of these problem will put a browser's HTML parser into an error parsing mode, which means they are trying to make sense of invalid syntax. What browsers will do when trying to make sense of invalid syntax is <em>undefined behavior</em>, which technically means that anything can happen (such as <a href=\"http://www.catb.org/jargon/html/N/nasal-demons.html\" rel=\"nofollow\">nasal demons</a>). The <em>de facto</em> behavior here seems to be that browsers are agreeing on how they handle this undefined behavior, but it is undefined behavior nonetheless.</p>\n\n<p>For whatever reason, this combination of syntax issues next to each other causes browsers to ignore the text later in the document.</p>\n\n<hr>\n\n<p>EDIT: I have identified how the parsing error is produced by stepping through <a href=\"http://www.w3.org/TR/html5/scripting-1.html#restrictions-for-contents-of-script-elements\" rel=\"nofollow\">this part of the HTML5 spec</a>.</p>\n\n<p>The text content of the script (excluding whitespace) is </p>\n\n<pre><code>var a = '&lt;!--&lt;script&gt;';\n</code></pre>\n\n<p>This must match the following grammar rule: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>data1 *( escape [ script-start data3 ] \"--&gt;\" data1 ) [ escape ]\n</code></pre>\n\n<p>We can begin parsing the text content by matching <code>data1</code>, which has the following rule: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>data1         = &lt; any string that doesn't contain a substring that matches not-data1 &gt;\nnot-data1     = \"&lt;!--\"    \n</code></pre>\n\n<p>That is, the string <code>var a = '</code> matches the <code>data1</code> production. It ends there because the next part is <code>&lt;!--</code>.</p>\n\n<p>For there to be any text afterwards in the script, it must match the <code>escape</code> production, which is as follows:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>escape        = \"&lt;!--\" data2 *( script-start data3 script-end data2 )\n</code></pre>\n\n<p>Let's match the next part of the text. So far we have</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>data1    var a = '\nescape   &lt;!--\n  data2  ???\n</code></pre>\n\n<p>Now nothing can be contained in <code>data2</code> because the <code>data2</code> production prohibits the substring <code>&lt;script&gt;</code> (i.e. a <code>script-start</code>)!</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>data2         = &lt; any string that doesn't contain a substring that matches not-data2 &gt;\nnot-data2     = script-start / \"--&gt;\"  \n</code></pre>\n\n<p>The lexer cannot proceed with with valid steps according to the grammar, so the browser must now go into error processing.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Not a solution but\u2026 I see this tree in my browser:</p>\n\n<pre><code>&lt;script&gt;\n    var a = '&lt;!--&lt;script&gt;';\n    &lt;/script&gt;\n    &lt;p&gt;Hello&lt;/p&gt;\n&lt;/script&gt;\n</code></pre>\n\n<ul>\n<li><code>&lt;/script&gt;</code> in the source doesn't close the <code>script</code> element (instead the browser closes it when it reaches the end of the document)</li>\n<li><code>&lt;!--</code> in the source doesn't create an HTML comment node</li>\n</ul>\n\n<p>2 changes to the source will close the <code>script</code> element as expected:</p>\n\n<ul>\n<li>change (6) <code>&lt;/script&gt;</code> to <code>--&gt;&lt;/script&gt;</code></li>\n<li>change (6) <code>&lt;/script&gt;</code> to <code>&lt;/script&gt;&lt;/script&gt;</code></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>When I see the answer to solve Level 15 of <a href=\"http://escape.alf.nu\">http://escape.alf.nu</a>, I notice that <code>&lt;!--&lt;script&gt;</code> will cause the DOM parser to break. In the following HTML you won't see the string \"Test\" (tested on IE 11 &amp; Firefox &amp; Chrome):</p>\n\n<pre><code>&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n    &lt;body&gt;\n        &lt;script&gt;\n            var a = '&lt;!--&lt;script&gt;';\n        &lt;/script&gt;\n        &lt;p&gt;Test&lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/2n8aV.png\" alt=\"DOM tree of the above HTML\"></p>\n\n<p>But these two scripts will show \"Test\":</p>\n\n<pre><code>&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n    &lt;body&gt;\n        &lt;script&gt;\n            var a = '&lt;!--';\n        &lt;/script&gt;\n        &lt;p&gt;Test&lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>And,</p>\n\n<pre><code>&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n    &lt;body&gt;\n        &lt;script&gt;\n            var a = '&lt;script&gt;';\n        &lt;/script&gt;\n        &lt;p&gt;Test&lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>I don't understand, why does this happen?</p>\n",
            "last_activity_date": 1389535982,
            "question_id": 20942452,
            "score": 18,
            "tags": [
                "javascript",
                "dom",
                "html"
            ],
            "title": "Why does &lt;!--&lt;script&gt; cause a DOM tree break on the browser?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>i think Chrome may have an issue there...</p>\n\n<p>similar bug is already reported here: </p>\n\n<p><a href=\"https://code.google.com/p/chromium/issues/detail?id=120186\" rel=\"nofollow\">https://code.google.com/p/chromium/issues/detail?id=120186</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It looks like a retain cycle. Frame is calling itself so holds a retain count and doesn't get released. Also any time you are monitoring running code either with profile, timeline or heap stacks there are going to be some side-effects.</p>\n\n<p>Either way I wouldn't worry about it. There are much larger issues to address if you're trying to get your app or page performant. As long as JS completes in under 16ms, no one will ever notice anything. </p>\n\n<p>The biggest memory/CPU issues are: network calls, decompressing PNGs/JPGs, creating and destroying DOM elements, processing/parsing data on a non-worker thread, poor use of GPU textures and allocating lots of data to cause the GC to take a long time to collect data.</p>\n\n<p>I was able to optimize a scroll list with 1,000,000 items to run at 120FPS on chrome (<a href=\"https://github.com/puppybits/BackboneJS-PerfView\" rel=\"nofollow\">https://github.com/puppybits/BackboneJS-PerfView</a>). The performance tools should help you find the largest issues that the user can see and you don't need to worry about the minor things.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><img src=\"http://i.stack.imgur.com/63koc.png\" alt=\"enter image description here\"></p>\n\n<p>I have found out the following:\nIf you change your RAF function into two \"ping-pong\" like functions, you get alot less garbage. You can't avoid the first initial \"big GC\", but after that you see only minor GCs of about 50kb instead of 700kb-1mb GCs. The code will look like this:</p>\n\n<pre><code>&lt;script type='text/javascript' charset='utf-8'&gt;\n  window.frameA = function() {\n    window.webkitRequestAnimationFrame(window.frameB);\n  };\n  window.frameB = function() {\n    window.webkitRequestAnimationFrame(window.frameA);\n  };\n  window.webkitRequestAnimationFrame(window.frameA);\n&lt;/script&gt;\n</code></pre>\n\n<p>I guess this is the best you can do in Chrome.\nI noticed that in FF the gc intervals or memory hardly changes, so its probably related to the chrome debugging stuff (see the linked chrome bug report above for more details). However, I noticed an improvement in my own game when deploying RAF like this - and heck I need to be able to debug it without artificial GCs that won't happen on normal users machines.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm profiling the following code's memory usage using the Timeline in Chrome Dev Tools v27.</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta http-equiv='content-type' content='text/html; charset=UTF-8' /&gt;\n  &lt;title&gt;RAF&lt;/title&gt;\n&lt;/head&gt;\n  &lt;body&gt;\n    &lt;script type='text/javascript' charset='utf-8'&gt;\n      var frame = function() {\n        window.webkitRequestAnimationFrame(frame);\n      };\n      window.webkitRequestAnimationFrame(frame);\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Notice it's simple. But eventually I see the a tooth pattern appear that indicates the garbage collector is reclaiming memory.</p>\n\n<p><img src=\"http://i.stack.imgur.com/oR8ts.jpg\" alt=\"Chrome Dev Tools Timeline\"></p>\n\n<p>Does raf create garbage objects by default? Is there any way to avoid this? Thx.</p>\n",
            "last_activity_date": 1397727596,
            "question_id": 17382321,
            "score": 18,
            "tags": [
                "javascript",
                "optimization",
                "memory-leaks",
                "garbage-collection",
                "requestanimationframe"
            ],
            "title": "requestAnimationFrame garbage collection"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><strike>I wouldn't call it conclusive</strike>, but it does appear class selectors are faster... I just put this together for a quickie test.</p>\n\n<p><a href=\"http://jsperf.com/data-selector-performance\">http://jsperf.com/data-selector-performance</a></p>\n\n<p><strong>EDIT</strong>:</p>\n\n<p>Based on Vlad's and my jsperf tests... if performance is a concern (especially IE)... classes are still the way to go</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>I have the impression that the performance of the selectors are fast enough right now even in the mobile browsers out there. Unless you really plan to use selectors a lot, data-attributes or class based, (in which case I would suggest to revisit your code to try to cache the already queried selectors) we can consider them not that bad. And I would even say that is not dramatic to use style over the others.</p>\n\n<p>I think browsers vendors have spent more time improving the most used scenario (query against classes) than querying against selectors. This is changing and I would not be surprised if they start optimizing other cases too.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>After checking out BLSully's answer and the <a href=\"http://jsperf.com/data-selector-performance\">test page</a> he provided, here are the actual figures for comparison.</p>\n\n<p>jQuery class selector performance vs jQuery data attribute selector performance operations per second:</p>\n\n<ul>\n<li>31% faster in Chrome 27.0.1453</li>\n<li>140% faster in Firefox 15.0.1</li>\n<li>131% faster in Firefox 21.0</li>\n<li>1,267% faster in IE 9.0</li>\n<li>1,356% faster in IE 10.0</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>A few months ago <a href=\"http://coding.smashingmagazine.com/2012/06/19/classes-where-were-going-we-dont-need-classes/\">this article</a> pointed out that classes could actually be avoided all together from website development. </p>\n\n<p>My question is, how efficient are the data selectors compared to class selectors? </p>\n\n<p>A simple example would be to compare querying for elements with <code>data-component='something'</code> versus elements with <code>class='class1 class2 something anotherClass'</code>.</p>\n\n<p>The <code>[data-&lt;attr&gt;='&lt;value&gt;']</code> selector will check the value as a whole versus the class string that should be split. With this in mind, data atributes should be faster.</p>\n\n<p>So, to refine the question, in the case of CSS, are we better off with class selector or data selector? And from a javascript point of view, will <code>jQuery(\"[data-component='something']\")</code> be more efficient than <code>jQuery(\".something\")</code>?</p>\n",
            "last_activity_date": 1369993133,
            "question_id": 12496884,
            "score": 18,
            "tags": [
                "javascript",
                "css",
                "performance",
                "html5",
                "css-selectors"
            ],
            "title": "Are data attribute css selectors faster than class selectors?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Place the image as a background of an empty div, or under a transparent element. When the user clicks on the image to drag, they are clicking on a div.</p>\n\n<p>See <a href=\"http://www.flickr.com/photos/thefella/5878724253/?f=hp\" rel=\"nofollow\">http://www.flickr.com/photos/thefella/5878724253/?f=hp</a></p>\n\n<pre><code>&lt;div id=\"photo-drag-proxy\"&gt;&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Handle the <code>dragstart</code> event and <code>return false</code>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can set the <a href=\"http://dev.w3.org/html5/markup/global-attributes.html#common.attrs.draggable\"><code>draggable</code></a> attribute to <code>false</code> in either the markup or JavaScript code. See <a href=\"http://jsfiddle.net/BoltClock/TB5Uf/2\">this demo</a>.</p>\n",
                    "is_accepted": false,
                    "score": 42
                },
                {
                    "body": "<p>You can assign an alternate ghost image if you really need to use drag events and can't set draggable=false. So just assign a blank png like so: </p>\n\n<pre><code>    $('#img').bind({\n        dragstart: function(e) {\n            var dragIcon = document.createElement('img');\n            dragIcon.src = 'blank.png';\n            dragIcon.width = 100;\n            e.dataTransfer.setDragImage(dragIcon, -10, -10);\n        }\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>For Firefox you need to go a little deeper with this:</p>\n\n<pre><code>var imgs = document.getElementsByTagName('img');\n\n    // loop through fetched images\n    for (i = 0; i &lt; imgs.length; i++) {\n        // and define onmousedown event handler\n        imgs[i].onmousedown = disableDragging;\n    }\n\nfunction disableDragging(e) {\n        e.preventDefault();\n    }\n</code></pre>\n\n<p>Enjoy.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Tested on Firefox: removing and putting back the image works! And it's transparent at the execution, too. For instance,</p>\n\n<pre><code>$('.imageContainerClass').mousedown(function() {\n    var id = $(this).attr('id');\n    $('#'+id).remove();\n    $('#'+id).append('Image tag code');\n});\n</code></pre>\n\n<p><strong>EDIT</strong>: This works only on IE and on Firefox, strangely. I also added <code>draggable = false</code> on each image. Still a ghost with Chrome and Safari.</p>\n\n<p><strong>EDIT 2</strong>: The background-image solution is genuinely the best one. The only subtlety is that the <code>background-size</code> property has to be redefined every time the background-image is changed! Or so, that's what it looked like from my side. Better still, I had an issue with normal <code>img</code> tags under IE, where IE failed to resize the images. Now, the images have the correct dimensions. Simple:</p>\n\n<pre><code>$(id).css( 'background-image', url('blah.png') );\n$(id).css( 'background-size', '40px');\n</code></pre>\n\n<p>Also, perhaps consider those:</p>\n\n<pre><code>background-Repeat:no-repeat;\nbackground-Position: center center;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This will disable dragging for an image in <strong>all browsers</strong>, while <strong>preserving other events</strong> such as click and hover.</p>\n\n<p><code>&lt;img onmousedown=\"return false\" onmouseup=\"return this.onclick() || this.click()\"/&gt;</code></p>\n\n<p>This is a nice technique since as you can see from the other answers, several older browsers lack support for key features and require complex workarounds.</p>\n\n<p>Here's a more comprehensive yet clunky solution, <strong>if JS may be disabled</strong>.</p>\n\n<p><code>&lt;img draggable=\"false\" ondragstart=\"return false\" onselectstart=\"return false\" onmousedown=\"return false\" onmouseup=\"return this.onclick() || this.click()\" style=\"-webkit-tap-highlight-color: transparent; -webkit-touch-callout: none; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;\" /&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way to prevent the user from seeing a ghost of the image they are trying to drag (not concern about security of the images, but the experience).</p>\n\n<p>I've tried this which fixes the problem with the blue selection on text and images but not the ghost image:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>img {\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -o-user-select: none;\n  user-select: none;\n}\n</code></pre>\n\n<p>(I also tried nesting the image inside a div with the same rules applied to the div).\nThanks</p>\n",
            "last_activity_date": 1422915216,
            "question_id": 7439042,
            "score": 18,
            "tags": [
                "javascript",
                "html",
                "css",
                "html5",
                "css3"
            ],
            "title": "CSS /JS to prevent dragging of ghost image?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I don't quite understand the relation between JS and ASP.NET MVC 3 Razor. Javascript runs on the client side no matter which technology has been used on the server to generate the page. So on javascript an array is an array. </p>\n\n<p>There are a couple of possibilities to define arrays of objects in javascript</p>\n\n<pre><code>var activeDates = [ '7-21-2011', '7-22-2011' ];\n</code></pre>\n\n<p>or:</p>\n\n<pre><code>var activeDates = new Array();\nactiveArrays.push('7-21-2011');\nactiveArrays.push('7-22-2011');\n</code></pre>\n\n<p>or yet:</p>\n\n<pre><code>var activeDates = new Array();\nactiveArrays[0] = '7-21-2011';\nactiveArrays[1] = '7-22-2011';\n</code></pre>\n\n<p>At th end all those represent the same array. But it is an array of <strong>strings</strong>, not <strong>dates</strong>.</p>\n\n<p>If you wanted to have an array of dates, here's what you could do:</p>\n\n<pre><code>var activeDates = [ \n    new Date(2011, 6, 21, 0, 0, 0, 0), \n    new Date(2011, 6, 22, 0, 0, 0, 0) \n];\n</code></pre>\n\n<p>Now the only relation I can see with your question to ASP.NET MVC is that you probably have some array on your view model:</p>\n\n<pre><code>public class MyViewModel\n{\n    public DateTime[] ActiveDates { get; set; }\n}\n</code></pre>\n\n<p>that you wanted to serialize and manipulate in a javascript array. In this case here's the syntax:</p>\n\n<pre><code>@model MyViewModel\n&lt;script type=\"text/javascript\"&gt;\n    var activeDates = @Html.Raw(Json.Encode(Model.ActiveDates));\n&lt;/script&gt;\n</code></pre>\n\n<p>Now because of the way DateTime fields are JSON serialized in .NET you will end up with the following in the generated HTML:</p>\n\n<pre><code>var activeDates = [\"\\/Date(1309471200000)\\/\",\"\\/Date(1311199200000)\\/\"];\n</code></pre>\n\n<p>and if you wanted to convert this array of strings into an array of actual javascript dates:</p>\n\n<pre><code>var dates = $.map(activeDates, function(date, index) {\n    date = date.replace('/Date(', '').replace(')/', '');  \n    return new Date(parseInt(date));\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>I just happen to do this yesterday and came up with this solution (if you want it to look like the output you have in your question - I was using this with <a href=\"http://www.jqplot.com/\">jqplot</a>):</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var activeDates = ['@Html.Raw(string.Join(\"', '\", @ActiveDates.Select(f =&gt; string.Format(\"{0:MM-dd-yyyy}\", f)).ToArray()))']\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>What would be the prefered way to initialize a JS array in ASP.NET MVC 3 with Razor with a value I have in my model/view model ?</p>\n\n<p>For example to initialize an array of strings representing dates : </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var activeDates = [\"7-21-2011\", \"7-22-2011\"];\n&lt;/script&gt;\n</code></pre>\n\n<p>with </p>\n\n<pre><code>public class MyViewModel\n{    \n  public DateTime[] ActiveDates { get; set; }\n}\n</code></pre>\n",
            "last_activity_date": 1311708806,
            "question_id": 6777385,
            "score": 18,
            "tags": [
                "javascript",
                "arrays",
                "asp.net-mvc-3",
                "razor"
            ],
            "title": "ASP.NET MVC 3 Razor : Initialize a JavaScript array"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>How about something as simple as:</p>\n\n<pre><code>console.log = function(message) {$('#debugDiv').append('&lt;p&gt;' + message + '&lt;/p&gt;');};\nconsole.error = console.debug = console.info =  console.log\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>To keep the console working:</p>\n\n<pre><code>if (typeof console  != \"undefined\") \n    if (typeof console.log != 'undefined')\n        console.olog = console.log;\n    else\n        console.olog = function() {};\n\nconsole.log = function(message) {\n    console.olog(message);\n    $('#debugDiv').append('&lt;p&gt;' + message + '&lt;/p&gt;');\n};\nconsole.error = console.debug = console.info =  console.log\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>Here's a way using closure, containing the old console log function in the scope of the new one.</p>\n\n<pre><code>console.log = (function(old_funct, div_log) { \n  return function(text) {\n    old_funct(text);\n    div_log.value += text;\n  };\n} (console.log.bind(console), document.getElementById(\"error-log\"));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Else, if you were concerned at keeping <code>log</code>, <code>warn</code> and <code>error</code> separate from one another, you could do something like this (adapted from MST's answer):</p>\n\n<pre><code>var log = document.querySelector('#log');\n\n['log','warn','error'].forEach(function (verb) {\n    console[verb] = (function (method, verb, log) {\n        return function (text) {\n            method(text);\n            // handle distinguishing between methods any way you'd like\n            var msg = document.createElement('code');\n            msg.classList.add(verb);\n            msg.textContent = verb + ': ' + text;\n            log.appendChild(msg);\n        };\n    })(console[verb].bind(console), verb, log);\n});\n</code></pre>\n\n<p>where <code>#log</code> is your HTML element.  The variable <code>verb</code> is one of <code>'log'</code>, <code>'warn'</code>, or <code>'error'</code>.  You can then use CSS to style the text in a distinguishable way.  Note that a lot of this code isn't compatible with old versions of IE.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<h1>Why u override CONSOLE.LOG</h1>\n\n<h2>It is not recommended to override the built-in API .</h2>\n\n<h1>Use Aspect Oriented Programming[AOP] instead .</h1>\n\n<p>Let us work with <a href=\"https://code.google.com/p/jquery-aop/\" rel=\"nofollow\">jQuery.AOP</a> lib for example :</p>\n\n<pre><code>jQuery.aop.before( {target: console, method: 'log'}, \n  function(args) { \n          uiconsole.log.apply(this,args)\n  }\n);\n</code></pre>\n\n<p>For each call of console.log, this solution will call your own console <code>uiconsole.log</code></p>\n\n<h1><a href=\"http://jsfiddle.net/ff3xgojf/5/\" rel=\"nofollow\">DEMO</a></h1>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>I'm building a debugging tool for my web app and I need to show console errors in a div. I know I can use my own made console like object and use it, but for future use I need to send all console errors to window. Actually I want to catch console events. </p>\n",
            "last_activity_date": 1424778860,
            "question_id": 6604192,
            "score": 18,
            "tags": [
                "javascript",
                "browser"
            ],
            "title": "Showing console errors and alerts in a div inside the page"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Since the \"shapes\" and \"lines\" drawn on a canvas are not actual objects (it's like ink on paper), it would be very hard (impossible?) to do a normal unit test on that.</p>\n\n<p>The best you can do with standard canvas it analyze the pixel data (from the putImageData/getImageData. Like what bedraw was saying).</p>\n\n<p>Now, I haven't tried this yet, but it might be more what you need. Cake is a library for the canvas.  It's using alot of the putImageData/getImageData.  <a href=\"http://glimr.rubyforge.org/cake/canvas.html#Picking\" rel=\"nofollow\">This example</a> might help with what you are trying to do with a test.</p>\n\n<p>Hope that helps answer your question.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As discussed in the question comments it's important to check that certain functions have been invoked with suitable parameters. pcjuzer proposed the usage of proxy pattern. The following example (RightJS code) shows one way to do this:</p>\n\n<pre><code>var Context = new Class({\n    initialize: function($canvasElem) {\n        this._ctx = $canvasElem._.getContext('2d');\n\n        this._calls = []; // names/args of recorded calls\n\n        this._initMethods();\n    },\n    _initMethods: function() {\n        // define methods to test here\n        // no way to introspect so we have to do some extra work :(\n        var methods = {\n            fill: function() {\n                this._ctx.fill();\n            },\n            lineTo: function(x, y) {\n                this._ctx.lineTo(x, y);\n            },\n            moveTo: function(x, y) {\n                this._ctx.moveTo(x, y);\n            },\n            stroke: function() {\n                this._ctx.stroke();\n            }\n            // and so on\n        };\n\n        // attach methods to the class itself\n        var scope = this;\n        var addMethod = function(name, method) {\n            scope[methodName] = function() {\n                scope.record(name, arguments);\n\n                method.apply(scope, arguments);\n            };\n        }\n\n        for(var methodName in methods) {\n            var method = methods[methodName];\n\n            addMethod(methodName, method);\n        }\n    },\n    assign: function(k, v) {\n        this._ctx[k] = v;\n    },\n    record: function(methodName, args) {\n        this._calls.push({name: methodName, args: args});\n    },\n    getCalls: function() {\n        return this._calls;\n    }\n    // TODO: expand API as needed\n});\n\n// Usage\nvar ctx = new Context($('myCanvas'));\n\nctx.moveTo(34, 54);\nctx.lineTo(63, 12);\n\nctx.assign('strokeStyle', \"#FF00FF\");\nctx.stroke();\n\nvar calls = ctx.getCalls();\n\nconsole.log(calls);\n</code></pre>\n\n<p>You can find a functional demo <a href=\"http://jsfiddle.net/BNKha/1/\">here</a>.</p>\n\n<p>I have used a similar pattern to implement some features missing from the API. You might need to hack it a bit to fit your purposes. Good luck!</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>I wrote an example for unit-testing canvas and other image-y types with Jasmine and js-imagediff.</p>\n\n<p><a href=\"http://humblesoftware.github.com/js-imagediff/test.html\">Jasmine Canvas Unit Testing</a></p>\n\n<p>I find this to be better than making sure specific methods on a mock Canvas have been invoked because different series of methods may produce the same method.  Typically, I will create a canvas with the expected value or use a known-stable version of the code to test a development version against.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I've been looking at canvas testing recently and I've now thought about a page that allows comparing the canvas to a \"known good\" image version of what the canvas should look like. This would make a visual comparison quick and easy.</p>\n\n<p>And maybe have a button that, assuming the output is OK, updates the image version on the server (by sending the toDataUrl() output to it). This new version can then be used for future comparisons.</p>\n\n<p>Not exactly (at all) automated - but it does make comparing the output of your code easy.</p>\n\n<p><strong>Edit:</strong></p>\n\n<p>Now I've made this:</p>\n\n<p><img src=\"http://i.stack.imgur.com/i0jma.png\" alt=\"Utility to test canvas output\"></p>\n\n<p>The left chart is the real canvas whilst the right is an image stored in a database of what it should look like (taken from when I know the code is working). There'll be lots of these to test all (eventually) aspects of my code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How to unit-test Javascript which draws on a HTML canvas? Drawing on the canvas should be checked.</p>\n",
            "last_activity_date": 1388403916,
            "question_id": 4406864,
            "score": 18,
            "tags": [
                "javascript",
                "unit-testing",
                "html5",
                "canvas"
            ],
            "title": "HTML Canvas Unit testing"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>These classes will make the table act as actual table, using display table-row and table-cell.</p>\n\n<pre><code>.ngCell  {\n  display : table-cell;\n  height: auto !important;\n  overflow:visible;\n  position: static;\n}\n\n.ngRow {\n  display : table-row;\n  height: auto !important;\n  position: static;\n}\n\n.ngCellText{\n  height: auto !important;\n  white-space: normal;\n  overflow:visible;\n}\n</code></pre>\n\n<p>Please note that this is supported by IE8 and up. It's also overriding the entire ng grid classes so it will be wise to use on a \"need to\" base:</p>\n\n<pre><code>#myTableId .ngCell {...}\n#myTableId .ngRow {...}\n...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Researching this discovered that in my fix should call anonymous function <code>$scope.resizeViewPort</code> whenever it makes change to ngGrid data or should be called whenever the viewport rows are updated.  </p>\n\n<p>Examples are after angular performs updates to the rows via data from the ng-grid module.  I've found these steps useful in my anonymous function for height only:</p>\n\n<pre><code>$scope.resizeViewPort = function { // and the two steps below\n  // retrieve viewPortHeight\n  var viewportHeight = $('ngViewPort').height();\n  var gridHeight = $('ngGrid').height();\n\n  // set the .ngGridStyle or the first parent of my ngViewPort in current scope\n  var viewportHeight = $('.ngViewport').height();\n  var canvasHeight = $('.ngCanvas').height();\n  var gridHeight = $('.ngGrid').height();\n\n  alert(\"vp:\" + viewportHeight + \" cv:\" + canvasHeight + \" gh:\" + gridHeight);\n  var finalHeight = canvasHeight;\n  var minHeight = 150;\n  var maxHeight = 300;\n\n\n  // if the grid height less than 150 set to 150, same for &gt; 300 set to 300\n  if (finalHeight &lt; minHeight) {\n    finalHeight = minHeight;\n  } else if (finalHeight &gt; viewportHeight) {\n    finalHeight = maxHeight;\n  }\n\n  $(\".ngViewport\").height(finalHeight);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I wanted to chime in on this question.  I have followed up on this example and have used the solution provided by getuliojr. This solution seems to work pretty well, note that you will have to clone the fork and build the source in order to use in your app.  I have a plunker live of it working: <a href=\"http://plnkr.co/edit/nhujNRyhET4NT04Mv6Mo?p=preview\" rel=\"nofollow\">http://plnkr.co/edit/nhujNRyhET4NT04Mv6Mo?p=preview</a></p>\n\n<p>Note you will also need to add 2 css rules:</p>\n\n<pre><code>.ngCellText{\n    white-space:normal !important;\n    }\n\n.ngVerticalBarVisible{\n      height: 100% !important;\n    }\n</code></pre>\n\n<p>I have yet to test this under significant load or cross-browser but will update with more once I do.</p>\n\n<p>GH Repo for ng-grid with flexible height by getuliojr: <a href=\"https://github.com/getuliojr/ng-grid/commits/master\" rel=\"nofollow\">https://github.com/getuliojr/ng-grid/commits/master</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>None of these solutions will work completely.  The height being fixed is assumed all through out the code. It is typical with row virtualization to assume this because you aren't loading up all the rows at once so its very difficult to tell the ultimate height of the grid.  NGrid 3.0 is supposed to support dynamic row height but I'm not sure when it is expected to be ready.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://adaptv.github.io/adapt-strap/\" rel=\"nofollow\">Adapt-Strap</a>. Here is the <a href=\"http://jsfiddle.net/kashjs/gt8Ljspf/\" rel=\"nofollow\">fiddle</a>.</p>\n\n<p>It is extremely lightweight and has dynamic row heights.</p>\n\n<pre><code>&lt;ad-table-lite table-name=\"carsForSale\"\n               column-definition=\"carsTableColumnDefinition\"\n               local-data-source=\"models.carsForSale\"\n               page-sizes=\"[7, 20]\"&gt;\n&lt;/ad-table-lite&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>it's not the sexiest thing in the world and I doubt it's that performant but this does the trick:</p>\n\n<pre><code>function flexRowHeight() {\n    var self = this;\n    self.grid = null;\n    self.scope = null;\n    self.init = function (scope, grid, services) {\n        self.domUtilityService = services.DomUtilityService;\n        self.grid = grid;\n        self.scope = scope;\n\n        var adjust = function() {\n            setTimeout(function(){\n                var row = $(self.grid.$canvas).find('.ngRow'),\n                    offs;\n                row.each(function(){\n                    var mh = 0,\n                        s = angular.element(this).scope();\n\n                    $(this).find('&gt; div').each(function(){\n                        var h = $(this)[0].scrollHeight;\n                        if(h &gt; mh)\n                            mh = h\n\n                        $(this).css('height','100%');\n                    });\n\n                    $(this).height(mh)\n\n                    if(offs)\n                        $(this).css('top',offs + 'px');\n\n                    offs = $(this).position().top + mh;\n                    self.scope.$apply(function(){\n                        s.rowHeight = mh;\n                    });\n                });\n            },1);\n        }\n\n        self.scope.$watch(self.grid.config.data, adjust, true);\n    }\n}\n</code></pre>\n\n<p>execute using plugins in options:</p>\n\n<pre><code>plugins: [new flexRowHeight()]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>is there any way to apply the height of the row in ng-grid according to its content.\nthere is one option rowHeight which is changed the height of all row. But I want dynamic row height according to its content.</p>\n\n<p>Following is the Plunker I have made, in this I have used cellTemplate to insert Education field, But I want to increase the row height according to education field detail.</p>\n\n<p><a href=\"http://plnkr.co/edit/tQJNpB?p=preview\">http://plnkr.co/edit/tQJNpB?p=preview</a></p>\n\n<p>According to this link it is not possible:\n[1]<a href=\"https://github.com/angular-ui/ng-grid/issues/157\">https://github.com/angular-ui/ng-grid/issues/157</a></p>\n\n<p>But if anyone find the solution.....</p>\n",
            "last_activity_date": 1417471392,
            "question_id": 19094723,
            "score": 17,
            "tags": [
                "javascript",
                "css",
                "angularjs",
                "ng-grid"
            ],
            "title": "Angular ng-grid row height"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I have a couple solutions for you to try. You will have to test them yourself, as I have not tried them in a mobile browser before, but here they are:</p>\n\n<ol>\n<li>Use jQuery's <code>.css()</code> method (or <code>.animate()</code> depending on what your eventual goal us) to adjust the top margin (note: you would have to change the overflow to hidden and wrap the text in an inner div, which would be the element whose to margin you are adjusting)</li>\n<li>Do the same thing as in the first solution, except set the embedded div's position to relative and adjust it's <code>top</code> attribute.</li>\n</ol>\n\n<p>Let me know if you need help with any if this or have any more questions about this. Good luck! :)</p>\n\n<p><br/>\nNote that although I have not tested these in mobile before they are based on CSS standards, not jQuery functions, so they should work.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A workaound that worked for me: first, temporarily set the overflow property to 'hidden', then set the scrollTop property, then set the overflow property back to 'scroll' (or auto).  The scrollTop value seems to be kept intact and honored when the overflow property is set back to 'scroll'.  This was a pretty trivial workaround that worked on all browsers I tested on (desktop and mobile).  I didn't test it exhaustively, and I didn't test with transitions in place, so there may be side-effects that I haven't encountered...  Your mileage may vary - but it's an easy thing to try.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Try using jQuery's .animate method:</p>\n\n<pre><code>$('.div').animate({ scrollTo: x; });\n</code></pre>\n\n<p>Where x is equal to the position of the div you want to scroll to the top of.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Did you try this ?</p>\n\n<pre><code>$(\"html\").scrollTop(0);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I had the same problem and solved it by using jquery <code>.offset()</code> instead.</p>\n\n<p><a href=\"http://api.jquery.com/offset/\" rel=\"nofollow\">http://api.jquery.com/offset/</a></p>\n\n<pre><code>$('#yourFineElement').offset({ top: X, left Y)});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>jQuery(document).ready(function($) {\n\n$(\".scroll\").click(function(event){     \n    event.preventDefault();\n    $('html,body').animate({scrollTop:$(this.hash).offset().top}, 1500);\n});\n});\n\n&lt;a href=\"#top\" class=\"scroll\"&gt;&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Temporarily setting the <code>overflow</code> property to 'hidden', as recommended in @Allan Nienhuis' answer, does not work on Android <code>4.0.3</code>, for instance (which is, e.g., what the Kindle Fire 2s are running) - when you set <code>overflow</code> back to <code>scroll</code>, the element scrolls back to the top.</p>\n\n<p>Alternatives:</p>\n\n<ul>\n<li><p>Roll your own scrolling via a helper function, as demonstrated <a href=\"https://code.google.com/p/android/issues/detail?id=19625#c24\" rel=\"nofollow\">here</a> - while this is simple to implement, it is bare-bones in that it doesn't give you inertial scrolling or overscrolling.</p></li>\n<li><p>Use a library such as <a href=\"http://cubiq.org/iscroll-5\" rel=\"nofollow\">iScroll</a>, which implements its own, sophisticated scrolling (inertial, overscrolling) based on CSS transformations. </p></li>\n</ul>\n\n<p>Using iScroll requires a bit of setup, though: you need a <em>wrapper</em> <code>div</code> with fixed height and style <code>overflow: hidden</code> and the element to scroll should have <em>no</em> <code>overflow</code> style. <a href=\"http://jsfiddle.net/mklement/gz4Sg/\" rel=\"nofollow\">This jsFiddle demo</a> shows how it's done.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use the following code:</p>\n\n<pre><code>$(\"body\").animate( { scrollTop: 50,  },  800,  function(){\n    $(\"body\").clearQueue();\n} );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This worked for me:</p>\n\n<pre><code>setTimeout( function() {\n    $(div).scrollTop(0)\n}, 500 );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to scroll to a specific location in a scrolling DIV.  Right now I am using a pixel offset with the jQuery scrollTop() function which works great on desktop browsers but it does not work on android mobiles browsers with the exception of Google's Chrome Android browser (do not have an iOS device to test if that works).  All the solutions I have found are for page (window) scrolling and not for scrolling in a DIV, anyone have any suggestions on what else I can use to accomplish the same task?</p>\n\n<p><strong>Here is a example</strong>: <br>\n<a href=\"http://jsfiddle.net/aQpPc/\">http://jsfiddle.net/aQpPc/</a> <br>\n<a href=\"http://jsfiddle.net/aQpPc/embedded/result/\">http://jsfiddle.net/aQpPc/embedded/result/</a></p>\n\n<p><strong>Other things I have tried that work in desktop browsers</strong>:</p>\n\n<pre><code>document.getElementById('ID_of_element_in_a_DIV').scrollIntoView();\ndocument.getElementById('ID_of_DIV').scrollTop = 200;\n</code></pre>\n\n<p><strong>EDIT 3/11/13:</strong></p>\n\n<p>This is a know android browser issue: <a href=\"https://code.google.com/p/android/issues/detail?id=19625\">https://code.google.com/p/android/issues/detail?id=19625</a></p>\n\n<p>One user in the bug report suggested a workaround:</p>\n\n<blockquote>\n  <p>because the issue only seems to appear when the overflow property is\n  set to scroll, you can first set it to 'hidden', set the scrollTop\n  property, then reset it back to 'scroll' (or auto).  The scrollTop\n  property seems to be honored when the element is re-rendered with\n  scrollbars.  It's not clear if this has any unexpected side-effects,\n  but \"it works on my machine!\"</p>\n</blockquote>\n",
            "last_activity_date": 1414814703,
            "question_id": 12225456,
            "score": 17,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "scroll",
                "mobile-browser"
            ],
            "title": "jQuery scrollTop() does not work in scrolling DIV on mobile browsers, alternatives?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>To set break points in Chrome bring up the inspector like you have shown above and click on the scripts option at the top. This will allow you to look at the scripts being used on the page and to insert break points on that page. As well as step through them and other useful debugging options.</p>\n\n<p>The above is for javascript, to break on dom elements right click on the element (inside of the inspector) that you want to break on and it will bring up the context menu that allows you to break on subtree modifications and stuff like that.</p>\n",
                    "is_accepted": true,
                    "score": 19
                }
            ],
            "body": "<p>I'm trying to follow the tutorial here:</p>\n\n<p><a href=\"https://developers.google.com/chrome-developer-tools/docs/elements\">https://developers.google.com/chrome-developer-tools/docs/elements</a></p>\n\n<p>I'm stuck on the section <strong>DOM Breakpoints</strong> (near the bottom).</p>\n\n<p>I went to <a href=\"http://closure-library.googlecode.com/svn/trunk/closure/goog/demos/hovercard.html\">http://closure-library.googlecode.com/svn/trunk/closure/goog/demos/hovercard.html</a> (the example site they are talking about). I pressed ctrl+shift+i and navigated to \"elements\" tab. In the elements tab I found the following html section:</p>\n\n<pre><code>&lt;div id=\"profileCard\" style=\"position: absolute; left: 403px; top: 135px; visibility: hidden; display: none; \" class=\"goog-hovercard\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Now I'm stuck trying to find the context menu:</p>\n\n<blockquote>\n  <p>Bring up a context menu on the #profileCard element and select the\n  events you want to break on: subtree modifications, attributes\n  modifications, and the node removal</p>\n</blockquote>\n\n<p>Here is a screenshot to show where I am:</p>\n\n<p><img src=\"http://i.stack.imgur.com/LdOKl.jpg\" alt=\"ss\"></p>\n",
            "last_activity_date": 1338435290,
            "question_id": 10826916,
            "score": 17,
            "tags": [
                "javascript",
                "debugging",
                "google-chrome",
                "google-chrome-devtools"
            ],
            "title": "how to set DOM Breakpoints in chrome"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>After a month of searching for alternatives and not finding anything useful, I decided to code up a bunch of different implementations and test them out, and I went with my modification of Crockford's reference recursive-descent parser (as described in the question, <a href=\"http://stackoverflow.com/revisions/fb2d5072-5b3c-4fea-83f9-256392b9b77d/view-source\">available here</a>).</p>\n\n<p>It wasn't the fastest, but it was more than fast enough in every test I did. More importantly, it catches clearly erroneous JSON, when that's not ambiguous with incomplete JSON, much better than most of the other alternatives. Most importantly, it required very few, and pretty simple, changes from a well-known and -tested codebase, which makes me more confident in its correctness.</p>\n\n<p>Still, if anyone knows of a better library than mine (and just being used by lots of projects instead of just me would count as a major qualification), I'd love to know about it.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Here is a simple JSON Object separator. It assumes that you receive a series of JSON objects (not array) and that are well formed.</p>\n\n<pre><code>function JSONObjectSepaator() {\n\n    this.onObject = function (JSONStr) {};\n\n    this.reset = function () {\n        this.brace_count = 0;\n        this.inString = false;\n        this.escaped = false;\n        this.buffer = \"\";\n    };\n\n    this.receive = function (S) {\n        var i;\n        var pos=0;\n        for (i = 0; i &lt; S.length; i++) {\n            var c = S[i];\n            if (this.inString) {\n                if (this.escaped) {\n                    this.escaped = false;\n                } else {\n                    if (c == \"\\\\\") {\n                        this.escaped = true;\n                    } else if (c == \"\\\"\") {\n                        this.inString = false;\n                    }\n                }\n            } else {\n                if (c == \"{\") {\n                    this.brace_count++;\n                } else if (c == \"}\") {\n                    this.brace_count--;\n                    if (this.brace_count === 0) {\n                        this.buffer += S.substring(pos,i+1);\n                        this.onObject(this.buffer);\n                        this.buffer = \"\";\n                        pos=i+1;\n                    }\n                } else if (c == \"\\\"\") {\n                    this.inString = true;                   \n                } \n            }\n        }\n        this.buffer += S.substring(pos);\n    };\n\n    this.reset();\n    return this;\n}\n</code></pre>\n\n<p>To use it, you can do it this way:</p>\n\n<pre><code>var separator = new JSONObjectSepaator();\nseparator.onObject = function (o) {\n    alert(\"Object received: \"+o);\n};\n\nseparator.receive('{\"id\":1,\"result\":{\"answer\":23},\"error\":null, \"x');\nseparator.receive('x\":\"\\\\\\\"\"}{\"id\":2,\"result\":{\"answer\":42},\"error\":null}{\"id\":');\nseparator.receive('3,\"result\":{\"answer\":43},\"err{or\":3}');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a stream of JSON objects, as with JSON-RPC over TCP or WebSockets. There's no length prefix or delimiter, because JSON is self-delimiting. So, when I read from the stream, I may end up with something like this:</p>\n\n<pre><code>{\"id\":1,\"result\":{\"answer\":23},\"error\":null}\n{\"id\":2,\"result\":{\"answer\":42},\"error\":null}\n{\"id\":3,\"result\":{\"answ\n</code></pre>\n\n<p>I need to parse each JSON object one by one. I can't do this with JSON.parse, because it will just throw a syntax error for extraneous data at the end.</p>\n\n<p>Of course with that example I could go line by line, but I can't rely on the whitespace looking like that; JSON-RPC can just as easily look like this:</p>\n\n<pre><code>{\n  \"id\": 1, \n  \"result\": {\n    \"answer\": 23\n  },\n  \"error\":null\n} \n</code></pre>\n\n<p>Or this:</p>\n\n<pre><code>{\"id\":1,\"result\":{\"answer\":23},\"error\":null}{\"id\":2,\"result\":{\"answer\":42},\"error\":null}\n</code></pre>\n\n<p>With most parsers in other languages, the obvious answer is something like this (using Python as an example):</p>\n\n<pre><code>buf = ''\ndecoder = json.JSONDecoder()\ndef onReadReady(sock):\n  buf += sock.read()\n  obj, index = decoder.raw_decode(buf)\n  buf = buf[index:]\n  if obj:\n    dispatch(obj)\n</code></pre>\n\n<p>But I can't find anything similar in JS. I've looked at every JS parser I can find, and they're all effectively equivalent to JSON.parse.</p>\n\n<p>I tried looking at various JSON-RPC frameworks to see how they handle this problem, and they just don't. Many of them assume that a recv will always return exactly one send (which works fine for JSON-RPC over HTTP, but not over TCP or WebSockets\u2014although it may appear to work in local tests, of course). Others don't actually handle JSON-RPC because they add requirements on whitespace (some of which aren't even valid for JSON-RPC).</p>\n\n<p>I could write a delimiter check that balances brackets and quotes (handling escaping and quoting, of course), or just write a JSON parser from scratch (or port one from another language, or modify <a href=\"http://code.google.com/p/json-sans-eval/\" rel=\"nofollow\">http://code.google.com/p/json-sans-eval/</a>), but I can't believe no one has done this before.</p>\n\n<p>EDIT: I've made two versions myself, <a href=\"http://pastebin.com/fqjKYiLw\" rel=\"nofollow\">http://pastebin.com/fqjKYiLw</a> based on json-sans-eval, and <a href=\"http://pastebin.com/8H4QT82b\" rel=\"nofollow\">http://pastebin.com/8H4QT82b</a> based on Crockford's reference recursive descent parser json_parse.js. I would still prefer to use something that's been tested and used by other people rather than coding it myself, so I'm leaving this question open.</p>\n",
            "last_activity_date": 1378424739,
            "question_id": 9829811,
            "score": 17,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "How can I parse the first JSON object on a stream in JS"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>This probably isn't what you want to hear, but the only way to do it seems to be to manually track whether the element is focused or not. For example (<a href=\"http://jsfiddle.net/pDYsM/2/\" rel=\"nofollow\">fiddle here</a>):</p>\n\n<pre><code>var blurCount = 0;\ndocument.getElementsByTagName('input')[0].onblur = function(e) {\n    if (!e) e = window.event;\n    console.log('blur', e);\n    if (!(e.target || e.srcElement)['data-focused']) return;\n    (e.target || e.srcElement)['data-focused'] = false;\n    document.getElementsByTagName('div')[0].innerHTML = (++blurCount + ' blurs');\n};\ndocument.getElementsByTagName('input')[0].onfocus = function(e) {\n    if (!e) e = window.event;\n    console.log('focus', e);\n    (e.target || e.srcElement)['data-focused'] = true;\n};\n</code></pre>\n\n<p>Interestingly, I couldn't get this to work in jQuery (<a href=\"http://jsfiddle.net/pDYsM/1/\" rel=\"nofollow\">fiddle here</a>) ... I really don't use jQuery much, maybe I'm doing something wrong here?</p>\n\n<pre><code>var blurCount = 0;\n$('input').blur(function(e) {\n    console.log('blur', e);\n    if (!(e.target || e.srcElement)['data-focused']) return;\n    (e.target || e.srcElement)['data-focused'] = false;\n    $('div').innerHTML = (++blurCount + ' blurs');\n});\n$('input').focus(function(e) {\n    console.log('focus', e);\n    (e.target || e.srcElement)['data-focused'] = true;\n});\n</code></pre>\n\n<hr>\n\n<p>You could also try comparing the event's target with <code>document.activeElement</code>. This example will ignore the alt+tab blur events, and the blur events resulting from clicking on Chrome's... chrome. This could be useful depending on the situation. If the user alt+tabs back into Chrome, it's as if the box never lost focus (<a href=\"http://jsfiddle.net/pDYsM/3/\" rel=\"nofollow\">fiddle</a>). </p>\n\n<pre><code>var blurCount = 0;\ndocument.getElementsByTagName('input')[0].onblur = function(e) {\n    if (!e) e = window.event;\n    console.log('blur', e, document.activeElement, (e.target || e.srcElement));\n    if ((e.target || e.srcElement) == document.activeElement) return;\n    document.getElementsByTagName('div')[0].innerHTML = (++blurCount + ' blurs');\n};\u200b\n\u200b\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The reason it is firing twice is because of window.onblur. The window blurring triggers a blur event on all elements in that window as part of the way javascript's capturing/bubbling process. All you need to do is test the event target for being the window.</p>\n\n<pre><code>var blurCount = 0;\nvar isTargetWindow = false;\n$(window).blur(function(e){\n    console.log(e.target);\n    isTargetWindow = true;\n});\n$(window).focus(function(){\n    isTargetWindow = false;\n});\n$('input').blur(function(e) {\n    if(!isTargetWindow){         \n       $('div').text(++blurCount + ' blurs');\n    }\n    console.log(e.target);\n});\n</code></pre>\n\n<p>\u200b\n<a href=\"http://jsfiddle.net/pDYsM/4/\">http://jsfiddle.net/pDYsM/4/</a></p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>This is confirmed Chrome bug. <a href=\"https://code.google.com/p/chromium/issues/detail?id=117307\" rel=\"nofollow\">See the Chromium Issue Tracker</a></p>\n\n<p>The workaround is in the accepted answer.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Skip 2nd blur:</p>\n\n<pre><code>var secondBlur = false;\nthis.onblur = function(){\n    if(secondBlur)return;\n    secondBlur = true;\n    //do whatever\n}\nthis.onfocus = function(){\n    secondBlur = false;    \n    //do whatever\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm on Chrome Version 30.0.1599.101 m on Windows 7 and this issue appears to have been fixed.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I am experiencing the same and the above posts make sense as to why. In my case I just wanted to know if <em>at least</em> one blur event had occurred. As a result I found that just returning from my blur function solved my issue and prevented the subsequent event from firing.</p>\n\n<pre><code>   function handleEditGroup(id) {\n        var groupLabelObject = $('#' + id);\n        var originalText = groupLabelObject.text();\n\n        groupLabelObject.attr('contenteditable', true)\n            .focus().blur(function () {\n                $(this).removeAttr('contenteditable');\n                $(this).text($(this).text().substr(0, 60));\n\n                if ($(this).text() != originalText) {\n                    alert(\"Change Found\");\n                    return; //&lt;--- Added this Return.\n                }\n            });\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p><a href=\"http://jsfiddle.net/Pointy/pDYsM/\">Here is an interesting jsfiddle.</a></p>\n\n<p>In Firefox:</p>\n\n<ol>\n<li>Run the fiddle</li>\n<li>Click in text input</li>\n<li>Click somewhere else. Should say \"1 blurs\".</li>\n<li>Click in the text input again.</li>\n<li>ALT-TAB to another window. Fiddle should now say \"2 blurs\".</li>\n</ol>\n\n<p>In Chrome, at step 5, it says \"3 blurs\".  Two separate \"blur\" events are fired when the whole browser loses focus.  This is of interest because it means that it's not safe to assume, in a \"blur\" handler, that the element actually had focus just before the event was dispatched; that is, that the loss of focus &mdash; the transition from \"being in focus\" to \"not being in focus\" &mdash; is the reason for the event. When <em>two</em> \"blur\" events are generated, that condition is not satisfied during the handling of the second event, as the element is already not in focus.</p>\n\n<p>So is this just a bug?  Is there a way to tell that a \"blur\" event is bogus?</p>\n",
            "last_activity_date": 1417850696,
            "question_id": 9649966,
            "score": 17,
            "tags": [
                "javascript",
                "google-chrome",
                "javascript-events",
                "safari"
            ],
            "title": "Chrome (maybe Safari?) fires &quot;blur&quot; twice on input fields when browser loses focus"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The short and sweet version is that JavaScript was designed and implemented very rapidly by the Netscape team, and it had some inconsistencies such as the ones that you've pointed out.</p>\n\n<p>The Internet Exploder team did its best to copy JS <em>exactly</em> and they did a damn good job of it to the point that the inconsistencies were copied as well. When Netscape went to get JS standardized as ECMAScript MS was a part of it and basically said that they weren't allowed to change the standard because it would break old code (existing systems inertia). The inconsistencies were standardized and that was that.</p>\n\n<p>Douglas Crockford has <a href=\"http://yuiblog.com/crockford/\" rel=\"nofollow\">a very good series of talks about some of these issues</a>.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>They are best thought of as completely different objects used for different purposes:</p>\n\n<p><strong><code>null</code></strong> is used for \"has no value.\" It is used pretty rarely by the language, but often used by the host environment to signify \"no value.\" For example, <code>document.getElementById</code> returns <code>null</code> for nonexistant elements. Similarly, the IE-only property <code>onreadystatechange</code> for <code>HTMLScriptElement</code>s is set to <code>null</code>, not <code>undefined</code>, to signify that though the property <em>exists</em>, it's currently <em>not set</em>. It is generally good practice to use <code>null</code> in your own code, instead of <code>undefined</code>, and leave <code>undefined</code> for the following cases:</p>\n\n<p><strong><code>undefined</code></strong> is used for \"isn't even set or doesn't even exist.\" It is the \"default\" in many cases, e.g. accessing an undefined property (like <code>onreadystatechange</code> for <code>HTMLScriptElement</code> in non-IE browsers), the default return value from methods without <code>return</code> statements, the default value of function parameters when the function is called with fewer arguments than it declares, and the like.</p>\n\n<p>In this way, it's useful to think of <code>null</code> as a \"valid value,\" just one signifying something special. Whereas <code>undefined</code> is more of a language-level thing.</p>\n\n<p>Sure, there are some edge cases where these reasonings don't entirely hold; those are mostly for legacy reasons. But there is a difference, and it's one that makes some deal of sense.</p>\n\n<hr>\n\n<p>As for your pain points in particular, they mostly arise from the evil of the <code>==</code> operator or type coercion:</p>\n\n<ul>\n<li><code>null == undefined</code>: don't use the <code>==</code> operator, because it essentially is a mess of backward-compatibility rules that seemed intuitive at the time.</li>\n<li><code>null + 1 === 1</code> vs. <code>undefined + 1 === NaN</code>: the <code>+</code> operator does type coercion to <code>Number</code> before evaluating. And <code>null</code> coerces to <code>0</code> (<code>+null === 0</code>) whereas <code>undefined</code> coerces to <code>NaN</code> (<code>isNaN(+undefined) === true</code>).</li>\n<li><code>if (!null)</code>, <code>if (null)</code>, <code>null == false</code>: if evaluates the \"truthiness\" or \"falsiness\" of its argument, which has nothing to do with the mess of rules for <code>==</code>. <code>null</code> is falsy, and <code>!null</code> is truthy, but the rules for <code>==</code> don't let <code>null == false</code>.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><code>null == undefined</code> does indeed evaluate to true, but <code>null === undefined</code> evaluates to false.</p>\n\n<p>The difference in those two statements is the equality operator. Double-equal in Javascript will convert the two items to the same type before comparing them; for <code>null == undefined</code>, this means that the <code>null</code> is converted to an undefined variable before the comparison is done, hence the equality.</p>\n\n<p>We can demonstrate the same effect with strings and integers: <code>\"12\" == 12</code> is true, but <code>\"12\" === 12</code> is false.</p>\n\n<p>This example gives us an easier way to discuss your next point, about adding one to each of them. In the example above, adding 1 to the integer obviously gives <code>13</code>, but with the string <code>\"12\" + 1</code> gives us a string <code>\"121\"</code>. This makes perfect sense, and you wouldn't want it any other way, but with a double-equal operator, the original two values were reported as equal.</p>\n\n<p>The lesson here is to always use the triple-equal operator in preference to the double-equal, unless you have a specific need to compare variables of different types.</p>\n\n<p>Your final point demonstrates the fickle nature of <code>null</code> in general. It is a peculiar beast, as anyone who's ever tried to work with a nullable database field will tell you. Null has a very specific definition in computer science, which is implemented in a similar way across multiple languages, so the situation you describe is not a special Javascript weirdness. Null is weird. Don't expect it to behave like an alternative name for <code>false</code>, because it doesn't work that way. The built-in <code>infinity</code> value can behave in a similarly bizarre way, and for similar reasons.</p>\n\n<p>Javascript does have its share of weirdness though. You might be interested in reading <a href=\"http://wtfjs.com/\" rel=\"nofollow\">http://wtfjs.com/</a>, which has entries for a whole load of strange things that Javascript does. Quite a few of them are to do with <code>null</code> and <code>undefined</code> (did you know it's actually possible to redefine the value of the built-in <code>undefined</code> object?!), and most of them come with an explanation as to what's actually happening and why. It might be helpful in showing you why things work the way they do, and will definitely helpful in showing you things to avoid! And if nothing else, it makes for a good entertaining read to see some of the abuses people have tried throwing at the poor language.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>First and foremost</strong>, while plenty of languages get away without having two methods for such similar purpose, they do serve distinct though somewhat overlapping purposes in Javascript.  \"Why have both?\" has been asked here before, and I find that <a href=\"http://stackoverflow.com/questions/6834062/javascript-undefined-replaced-with-null/6834168#6834168\">this answer</a> explains this fairly well. <strong>TL;DR</strong>: Javascript has certain language functions that produce <em>absent</em> values as opposed to <em>non-initialized</em> values:</p>\n\n<ul>\n<li><code>delete</code>'d values</li>\n<li>non-existent properties in an object</li>\n<li>missing function parameters</li>\n</ul>\n\n<p>As for the seeming contradictions in your question, they are actually quite easily explained by the spec.  <em>(I believe it can even be argued that the explanation is elegant, though there are probably those who would vehemently disagree.)</em></p>\n\n<p>Addressing each one separately:</p>\n\n<blockquote>\n  <ul>\n  <li>null == undefined evaluates to true</li>\n  </ul>\n</blockquote>\n\n<p>See <a href=\"http://stackoverflow.com/questions/6834062/javascript-undefined-replaced-with-null/6834254#6834254\">this answer</a> for the best explanation of this.  In short, the <a href=\"http://es5.github.com/#x11.9.3\">abstract equality comparison</a> specification says that they are (non-strictly) equal.</p>\n\n<hr>\n\n<blockquote>\n  <ul>\n  <li>null + 1 equals 1 but undefined + 1 equal NaN</li>\n  </ul>\n</blockquote>\n\n<p>The operator <code>+</code> functions as either the <a href=\"http://es5.github.com/#x11.4.6\">unary +</a> (numeric conversion) operator or <a href=\"http://es5.github.com/#x11.6.1\">addition</a> operator, but both route the arguments to the <a href=\"http://es5.github.com/#x9.3\">ToNumber</a> spec, which says:</p>\n\n<blockquote>\n  <p><strong>Argument Type &mdash;  Result</strong><br>\n  Undefined &mdash; NaN<br>\n  Null &mdash; +0<br>\n  Boolean &mdash; The result is 1 if the argument is true. The result is +0 if the argument is false.<br>\n  Number &mdash; The result equals the input argument (no conversion).  </p>\n</blockquote>\n\n<p>In other words <code>null + 1</code> becomes <code>+0 + 1</code> and <code>undefined + 1</code> becomes <code>NaN + 1</code>, which is always <code>NaN</code>.</p>\n\n<hr>\n\n<blockquote>\n  <ul>\n  <li>if(!null) evaluates to true and if(null) evaluates to false but null == false evaluates to false.</li>\n  </ul>\n</blockquote>\n\n<p>As you know <code>!</code> is the <a href=\"http://es5.github.com/#x11.4.9\">Logical Not</a> operator, and it performs a <a href=\"http://es5.github.com/#x9.2\">ToBoolean</a> <strong>conversion</strong> on the expression.  It is a type of truncation.</p>\n\n<p>The <a href=\"http://es5.github.com/#x12.5\"><code>if</code> statement</a> (<code>if (expr)</code>) performs an implicit boolean comparison on <em>expr</em>.  So take a look at the type of <em>expr</em> in both of the above <code>if</code> statements:</p>\n\n<ul>\n<li><code>if (!null)</code>: <em>expr</em> is <code>!null</code> which, given the result of the logical not operator (<code>!</code>), is a <strong>boolean</strong>.</li>\n<li><code>if (null)</code> : <em>expr</em> is <code>null</code> which means no conversion was performed.</li>\n</ul>\n\n<p>Since the <strong>logical not</strong> operator performs an actual conversion, the same thing happens in other cases as well, and is not actually a logical contradiction as you seem it to be:</p>\n\n<ul>\n<li><code>if (!\"\" == !undefined)</code> = <strong>true</strong></li>\n<li><code>if (\"\" == undefined)</code> = <strong>false</strong>, of course.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>So after a big argument/debate/discussion on the implementation of null and undefined in javascript I'd like somebody to explain the reasoning behind the implementation and why they differ in some circumstances.  Some particular points I find troubling:</p>\n\n<ul>\n<li><code>null == undefined</code> evaluates to <code>true</code></li>\n<li><code>null + 1</code> equals 1 but <code>undefined + 1</code> equal <code>NaN</code></li>\n<li><code>if(!null)</code> evaluates to true and <code>if(null)</code> evaluates to false but <code>null == false</code> evaluates to false.</li>\n</ul>\n\n<p>I've read the specification and I know how the results are reached, I'm looking for the paradigms and reasons that dictate this being the specification.  Some of these points, especially the second one, given the first, feel very inconsistent.</p>\n",
            "last_activity_date": 1406345197,
            "question_id": 7000762,
            "score": 17,
            "tags": [
                "javascript",
                "ecmascript-5"
            ],
            "title": "null vs. undefined and their behaviour in JavaScript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>try using <code>&lt;br/&gt;</code> as a line break</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You need to use the ASCII values for line feed/carriage return:</p>\n\n<pre><code>%0A = \\n\n\n%0D = \\r\n\n%0D%0A = \\r\\n\n</code></pre>\n\n<p>Works like a charm.</p>\n\n<pre><code>&lt;a href=\"mailto:person@somedomain.com?subject=My subject&amp;body=Hello %0D%0A World\"&gt;Link&lt;/a&gt; \n</code></pre>\n\n<p>(Spaces added around %0D%0A for clarity.  In reality, this could add unwanted white space.)</p>\n",
                    "is_accepted": true,
                    "score": 52
                }
            ],
            "body": "<p>The code below works great except the email has all the text on one line like this: \nHeight: 60 | Diagonal: 123 | Width: 107 | Total SF: 13.92 | Cost Per SF: 450 | Total Cost: $6,264.00 </p>\n\n<p>I would like to break after each so it looks like this:  </p>\n\n<blockquote>\n  <p>Height: 60<br>\n  Diagonal: 123<br>\n  Width: 107<br>\n  Total SF: 13.92<br>\n  Cost Per SF: 450<br>\n  Total Cost: $6,264.00   </p>\n</blockquote>\n\n<p>I tried \\n \\r \\n\\r etc but none of them work. Any ideas?</p>\n\n<pre><code>&lt;a class=\"emailText\" href=\"mailto:?subject=Screen Dimensions\" onclick=\"this.href='mailto:?subject=Screen Dimensions&amp;body='+'Height: '+document.forms.myform.high.value+' | '+'Diagonal: '+document.forms.myform.diagonal.value+' | '+'Width: '+document.forms.myform.wide.value+' | '+'Total SF: '+document.forms.myform.sf.value+' | '+'Cost Per SF: '+document.forms.myform.csf.value+' | '+'Total Cost: '+document.forms.myform.tc.value\"&gt;Email&lt;/a&gt;\n</code></pre>\n",
            "last_activity_date": 1396277328,
            "question_id": 2510234,
            "score": 17,
            "tags": [
                "javascript",
                "mailto",
                "line-breaks"
            ],
            "title": "Line break in the mailto onclick"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Put a black, semitransparent, div on top of it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Create black png with lets say 50% transparency. Overlay this on mouseover.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Or, similar to erikkallen's idea, make the background of the A tag black, and make the image semitransparent on mouseover. That way you won't have to create additional divs.</p>\n\n<ul>\n<li><a href=\"http://jsfiddle.net/4Dfpm/\">CSS Only Fiddle</a> (will only work in modern browsers)</li>\n<li><a href=\"http://jsfiddle.net/gTcym/1/\">JavaScript based Fiddle</a> (will [probably] work in all common browsers)</li>\n</ul>\n\n<hr>\n\n<p>Source for the CSS-based solution:</p>\n\n<pre><code>a.darken {\n    display: inline-block;\n    background: black;\n    padding: 0;\n}\n\na.darken img {\n    display: block;\n\n    -webkit-transition: all 0.5s linear;\n       -moz-transition: all 0.5s linear;\n        -ms-transition: all 0.5s linear;\n         -o-transition: all 0.5s linear;\n            transition: all 0.5s linear;\n}\n\na.darken:hover img {\n    opacity: 0.7;\n\n}\n</code></pre>\n\n<p>And the image:</p>\n\n<pre><code>&lt;a href=\"http://google.com\" class=\"darken\"&gt;\n    &lt;img src=\"http://www.prelovac.com/vladimir/wp-content/uploads/2008/03/example.jpg\" width=\"200\"&gt;\n&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>How about this...</p>\n\n<pre><code>&lt;style type=\"text/css\"&gt;\n    div.frame { background-color: #000; }\n    img.pic:hover {\n      opacity: .6;\n      filter:alpha(opacity=60);\n    }\n&lt;/style&gt;\n\n&lt;div class=\"frame\"&gt;\n    &lt;img class=\"pic\" src=\"path/to/image\" /&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I realise this is a little late but you could add the following to your code. This won't work for transparent pngs though, you'd need a cropping mask for that. Which I'm now going to see about.</p>\n\n<pre><code>outerLink {\n    overflow: hidden;\n    position: relative;\n}\n\nouterLink:hover:after {\n    background: #000;\n    content: \"\";\n    display: block;\n    height: 100%;\n    left: 0;\n    opacity: 0.5;\n    position: absolute;\n    top: 0;\n    width: 100%;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p><strong>My problem..</strong></p>\n\n<p>I have a number of images (inside hyperlinks), and I want each to darken on mouseover (i.e. apply a black mask with high opacity or something), and then go back to normal on mouseout . But I can't figure out the best way to do it.</p>\n\n<p><strong>I've tried..</strong> </p>\n\n<ul>\n<li>Jquery color animate and some javascript references.</li>\n<li>Setting the opacity of the image with javascript.</li>\n</ul>\n\n<p><strong>I don't want..</strong></p>\n\n<ul>\n<li>Image start at 80% opacity then go to 100% on mouseover (that's easy).</li>\n<li>To swap between 2 images (one light &amp; one dark), forgot the mention this sorry..</li>\n</ul>\n\n<p><strong>To reiterate..</strong></p>\n\n<p>I want in image (inslide a hyperlink) to darken on mouseover and then lose its darkness on mouseout.</p>\n\n<p>Thoughts?</p>\n\n<p><strong>UPDATE :</strong> </p>\n\n<p>This is my progress from suggestions. Looks fine in IE8, but not in FF3</p>\n\n<pre><code>&lt;html&gt;\n    &lt;body&gt;\n    \t&lt;a href=\"http://www.google.com\" style=\"background-color:black; opacity:1;filter:alpha(opacity=100)\"&gt;\n    \t\t&lt;img src=\"http://www.google.co.uk/intl/en_uk/images/logo.gif\" width=\"200\" \n    \t\tstyle=\"opacity:1;filter:alpha(opacity=100)\" onmouseout=\"this.style.opacity=1;this.filters.alpha.opacity=100\" \n    \t\tonmouseover=\"this.style.opacity=0.6;this.filters.alpha.opacity=60\" /&gt;\n    \t&lt;/a&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Thoughts?</p>\n\n<p>-- Lee</p>\n\n<p><strong>ANSWER</strong></p>\n\n<p>I'm going with this (seems to work in IE8 &amp; FF)</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n    \t&lt;style type=\"text/css\"&gt;\n\n    \t.outerLink \n    \t{\n    \t\tbackground-color:black; \n    \t\tdisplay:block; \n    \t\topacity:1;\n    \t\tfilter:alpha(opacity=100);\n    \t\twidth:200px;\n    \t}\n\n    \timg.darkableImage \n    \t{\n    \t\topacity:1;\n    \t\tfilter:alpha(opacity=100);\n    \t}\n&lt;/style&gt;\n    &lt;/head&gt;\n\n    &lt;body&gt;\n    \t&lt;a href=\"http://www.google.com\" class=\"outerLink\"&gt;\n    \t\t&lt;img src=\"http://www.google.co.uk/intl/en_uk/images/logo.gif\" width=\"200\" \n    \t\tclass=\"darkableImage\" onmouseout=\"this.style.opacity=1;this.filters.alpha.opacity=100\" \n    \t\tonmouseover=\"this.style.opacity=0.6;this.filters.alpha.opacity=60\" /&gt;\n    \t&lt;/a&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1390061953,
            "question_id": 1747637,
            "score": 17,
            "tags": [
                "javascript",
                "css"
            ],
            "title": "How to darken an image on mouseover?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Not tested but this should work:</p>\n\n<pre><code>/\\?v=([a-z0-9\\-]+)\\&amp;?/i\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You almost had it, just need to escape special regex chars:</p>\n\n<pre><code>regex = /http\\:\\/\\/www\\.youtube\\.com\\/watch\\?v=([\\w-]{11})/;\n\nurl = 'http://www.youtube.com/watch?v=Ahg6qcgoay4';\nid = url.match(regex)[1]; // id = 'Ahg6qcgoay4'\n</code></pre>\n\n<p><strong>Edit:</strong> Fix for regex by <a href=\"http://stackoverflow.com/questions/1280557/extract-parameter-value-from-url-using-regular-expressions#comment2200253_1280572\">soupagain</a>.</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>v is a query parameter, technically you need to consider cases ala: <a href=\"http://www.youtube.com/watch?p=DB852818BF378DAC&amp;v=1q-k-uN73Gk\">http://www.youtube.com/watch?p=DB852818BF378DAC&amp;v=1q-k-uN73Gk</a></p>\n\n<p>In .NET I would recommend to use <code>System.Web.HttpUtility.ParseQueryString</code></p>\n\n<pre><code>HttpUtility.ParseQueryString(url)[\"v\"];\n</code></pre>\n\n<p>And you don't even need to check the key, as it will return null if the key is not in the collection.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Why dont you take the string and split it </p>\n\n<p>Example on the url</p>\n\n<pre><code>var url = \"http://www.youtube.com/watch?p=DB852818BF378DAC&amp;v=1q-k-uN73Gk\"\n</code></pre>\n\n<p>you can do a split as</p>\n\n<pre><code>var params = url.split(\"?\")[1].split(\"&amp;\");\n</code></pre>\n\n<p>You will get array of strings with params as name value pairs with \"=\" as the delimiter.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<pre><code>/\\?v=([a-z0-9-]+)\\&amp;?/i \n</code></pre>\n\n<p>doesn't match </p>\n\n<pre><code>http://www.youtube.com/watch?v=La_J77JDOZk&amp;feature=related\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>This should be very simple ( when you know the answer ). From <a href=\"http://stackoverflow.com/questions/412467/how-to-embed-youtube-videos-in-php\">this question</a></p>\n\n<p>I want to give it a try to the posted solution. And my question is:</p>\n\n<p>How to get the parameter value of a given url using javascript regexp?</p>\n\n<p>I have:</p>\n\n<pre><code> http://www.youtube.com/watch?v=Ahg6qcgoay4\n</code></pre>\n\n<p>I need: </p>\n\n<pre><code> Ahg6qcgoay4\n</code></pre>\n\n<p>I tried:</p>\n\n<pre><code>http://www.youtube.com/watch\\\\?v=(w{11})\n</code></pre>\n\n<p>But: I suck... </p>\n",
            "last_activity_date": 1349312910,
            "question_id": 1280557,
            "score": 17,
            "tags": [
                "javascript",
                "regex",
                "url"
            ],
            "title": "Extract parameter value from url using regular expressions"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Events are only triggered when the user performs the event in the browser, so if it's <code>&lt;input type=\"hidden\"&gt;</code> or an <code>&lt;input&gt;</code> hidden by CSS, the user won't be able to trigger events to your input.</p>\n\n<p>The only way you would get onchange to work is if you manually trigger onchange in Javascript.  A quick example of this:</p>\n\n<pre><code>&lt;form name=\"f\" onsubmit=\"document.f.h.value='1'; \n    document.f.h.onchange(); return false;\"&gt;\n&lt;input type=\"hidden\" name=\"h\" value=\"0\"\n    onchange=\"alert(document.f.h.value);\" /&gt;\n&lt;input type=\"submit\" /&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>I used the following code to try and answer your question.</p>\n\n<p>Using firefox I observed the following:</p>\n\n<ol>\n<li>clicking the button did not fire the onchange handler</li>\n<li>editing the textbox manually did fire the onchange handler</li>\n</ol>\n\n<p>Thus, the onchange handler is not going fire when you update the hidden value programatically.  </p>\n\n<p>Why not write a setter method for the hidden element and only use that to change the value.  The setter method could perform any logic you planned on putting in the onchange handler. </p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;script type=\"text/javascript\"&gt; \n    \tfunction handleClick() {\n    \t\tvar e = document.getElementById('abc');\n    \t\te.value = 'dd';\n    \t}\n\n    \tfunction handleChange() {\n    \t\tvar e = document.getElementById('abc');\n    \t\talert(e.value);\n    \t}\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;input type=\"button\" onclick=\"handleClick();\" /&gt;\n    &lt;input id='abc' type=\"text\" value='rr' onchange=\"handleChange();\" /&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>Can I attach any event handlers to HTML hidden input fields? Basically I want to run a function when a hidden input field value changes.</p>\n\n<p>Thanks all,\n~ck in San Diego</p>\n",
            "last_activity_date": 1372132043,
            "question_id": 1003053,
            "score": 17,
            "tags": [
                "javascript",
                "html",
                "dom"
            ],
            "title": "Does HTML Hidden control have any events? Like onchange or something?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>parseInt() is probably the best one. <code>a | 0</code> doesn't do what you really want (it just assigns 0 if a is an undefined or null value, which means an empty object or array passes the test), and Math.floor works by some type trickery (it basically calls parseInt() in the background).</p>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>You can use Number(a).toFixed(0);</p>\n\n<p>Or even just a.toFixed(0);</p>\n\n<p><strong>Edit:</strong></p>\n\n<p>That's rounding to 0 places, slightly different than truncating, and as someone else suggested, toFixed returns a string, not a raw integer. Useful for display purposes.</p>\n\n<pre><code>var num = 2.7;  // typeof num is \"Number\"\nnum.toFixed(0) == \"3\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>According to <a href=\"http://www.jibbering.com/faq/faq_notes/type_convert.html#tcParseIn\"><strong>this website</strong></a>:</p>\n\n<blockquote>\n  <p>parseInt is occasionally used as a means of turning a floating point number into an integer. It is very ill suited to that task because if its argument is of numeric type it will first be converted into a string and then parsed as a number...</p>\n  \n  <p>For rounding numbers to integers one of Math.round, Math.ceil and Math.floor are preferable...</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<pre><code>var i = parseInt(n, 10);\n</code></pre>\n\n<p>If you don't specify a radix values like <code>'010'</code> will be treated as octal (and so the result will be <code>8</code> not <code>10</code>).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The question appears to be asking specifically about converting from a float to an int. My understanding is that the way to do this is to use <code>toFixed</code>. So...</p>\n\n<pre><code>var myFloat = 2.5;\nvar myInt = myFloat.toFixed(0);\n</code></pre>\n\n<p>Does anyone know if <code>Math.floor()</code> is more or less performant than <code>Number.toFixed()</code>?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The answer has already been given but just to be clear.</p>\n\n<p>Use the Math library for this.  round, ceil or floor functions.</p>\n\n<p>parseInt is for converting a string to an int which is not what is needed here</p>\n\n<p>toFixed is for converting a float to a string also not what is needed here</p>\n\n<p>Since the Math functions will not be doing any conversions to or from a string it will be faster than any of the other choices which are wrong anyway.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>you could also do it this way:</p>\n\n<pre><code>var string = '1';\nvar integer = a * 1;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Apparently double bitwise-not is the fastest way to floor a number:</p>\n\n<pre><code>var x = 2.5;\nconsole.log(~~x); // 2\n</code></pre>\n\n<p>Used to be an article here, getting a 404 now though: <a href=\"http://james.padolsey.com/javascript/double-bitwise-not/\" rel=\"nofollow\">http://james.padolsey.com/javascript/double-bitwise-not/</a></p>\n\n<p><del>Google has it cached: <code>http://74.125.155.132/search?q=cache:wpZnhsbJGt0J:james.padolsey.com/javascript/double-bitwise-not/+double+bitwise+not&amp;cd=1&amp;hl=en&amp;ct=clnk&amp;gl=us</code></del></p>\n\n<p>But the Wayback Machine saves the day! <a href=\"http://web.archive.org/web/20100422040551/http://james.padolsey.com/javascript/double-bitwise-not/\" rel=\"nofollow\">http://web.archive.org/web/20100422040551/http://james.padolsey.com/javascript/double-bitwise-not/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>From \"Javascript: The Good Parts\" from Douglas Crockford:</p>\n\n<pre><code>Number.prototype.integer = function () {\n    return Math[this &lt; 0 ? 'ceil' : 'floor'](this);\n}\n</code></pre>\n\n<p>Doing that your are adding a method to every Number object.</p>\n\n<p>Then you can use it like that:</p>\n\n<pre><code>var x = 1.2, y = -1.2;\n\nx.integer(); // 1\ny.integer(); // -1\n\n(-10 / 3).integer(); // -3\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Using bitwise operators. It may not be the clearest way of converting to an integer, but it works on any kind of datatype.</p>\n\n<p>Suppose your function takes an argument <code>value</code>, and the function works in such a way that <code>value</code> must always be an integer (and 0 is accepted). Then any of the following will assign <code>value</code> as an integer:</p>\n\n<pre><code>value = ~~(value)\nvalue = value | 0;\nvalue = value &amp; 0xFF;   // one byte; use this if you want to limit the integer to\n                        // a predefined number of bits/bytes\n</code></pre>\n\n<p>The best part is that this works with strings (what you might get from a text input, etc) that are numbers <code>~~(\"123.45\") === 123</code>. Any non numeric values result in <code>0</code>, ie,</p>\n\n<pre><code>~~(undefined) === 0\n~~(NaN) === 0\n~~(\"ABC\") === 0\n</code></pre>\n\n<p>It does work with hexadecimal numbers as strings (with a <code>0x</code> prefix)</p>\n\n<pre><code>~~(\"0xAF\") === 175\n</code></pre>\n\n<p>There is some type coercion involved, I suppose. I'll do some performance tests to compare these to <code>parseInt()</code> and <code>Math.floor()</code>, but I like having the extra convenience of no <code>Errors</code> being thrown and getting a <code>0</code> for non-numbers</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>So I made a benchmark, on <code>Chrome</code> when the input is already a number, the fastest would be <code>~~num</code> and <code>num|0</code>, half speed: <code>Math.floor</code>, and the slowest would be <code>parseInt</code> see <a href=\"http://jsperf.com/flooring-benchmark\" rel=\"nofollow\">here</a></p>\n\n<p><img src=\"http://i.stack.imgur.com/Lo8Kq.png\" alt=\"benchmark result\"></p>\n\n<p><strong>EDIT</strong>: it seems there are already another person who made <a href=\"http://jsperf.com/truncating-decimals\" rel=\"nofollow\">rounding</a> benchmark (more result) and additional <a href=\"http://jsperf.com/dsafdgdfsaf/3\" rel=\"nofollow\">ways</a>: <code>num&gt;&gt;0</code> (as fast as <code>|0</code>) and <code>num - num%1</code> (sometimes fast)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>There are several different methods for converting floating point numbers to Integers in JavaScript. My question is what method gives the best performance, is most compatible, or is considered the best practice?</p>\n\n<p>Here are a few methods that I know of:</p>\n\n<pre><code>var a = 2.5;\nwindow.parseInt(a); // 2\nMath.floor(a);      // 2\na | 0;              // 2\n</code></pre>\n\n<p>I'm sure there are others out there. Suggestions?</p>\n",
            "last_activity_date": 1424669586,
            "question_id": 131406,
            "score": 17,
            "tags": [
                "javascript",
                "variables",
                "types"
            ],
            "title": "What is the best method to convert floating point to an integer in JavaScript?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>This determines how much precision the GPU uses when calculating floats. <code>Highp</code> is high precision, and of course more intensive than <code>mediump</code> (medium precision) and <code>lowp</code> (low precision).  </p>\n\n<p>Some systems do not support <code>highp</code> at all, which will cause code not to work at all on those systems.</p>\n\n<p>On systems that DO support <code>highp</code>, you will see a performance hit, and should use <code>mediump</code> and <code>lowp</code> wherever possible. A good rule of thumb that I saw was:<br>\n- <code>highp</code> for vertex positions,<br>\n- <code>mediump</code> for texture coordinates,<br>\n- <code>lowp</code> for colors.</p>\n\n<p>Hope that helps!</p>\n",
                    "is_accepted": true,
                    "score": 22
                }
            ],
            "body": "<p>In the <a href=\"http://learningwebgl.com/blog/?p=28\">learningwebgl tutorial1</a> I've found an interesting line in the fragment shader.</p>\n\n<pre><code>precision mediump float;\n</code></pre>\n\n<p>I've found an article about it <a href=\"http://updates.html5rocks.com/2011/12/Use-mediump-precision-in-WebGL-when-possible\">here</a>, but I still can't understand what does it mean?</p>\n\n<p>And if I remove this line, nothing changes. Everything is the same.\nSo what does <code>precision mediump float</code> mean?</p>\n",
            "last_activity_date": 1416291531,
            "question_id": 13780609,
            "score": 16,
            "tags": [
                "javascript",
                "opengl-es",
                "webgl",
                "fragment-shader"
            ],
            "title": "What does `precision mediump float` mean?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>$.get(\"http://www.mypage.com\", function( my_var ) {\n    // my_var contains whatever that request returned\n});\n</code></pre>\n\n<p>Underneath jQuery will launch an ajax request which fires to the given URL. It also tries to intelligently guess which data is going to be received (if it's valid html you don't need to specify). If you need to get another data type just pass that in as last argument, for instance</p>\n\n<pre><code>$.get(\"http://www.mypage.com\", function( my_var ) {\n    // my_var contains whatever that request returned\n}, 'html');  // or 'text', 'xml', 'more'\n</code></pre>\n\n<p>Reference: <a href=\"http://api.jquery.com/jQuery.get/\"><code>.get()</code></a></p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>You could also create an element in memory and use load() on it:</p>\n\n<pre><code>var $div = $('&lt;div&gt;');\n\n$div.load('index.php #somediv', function(){\n    // now $(this) contains #somediv\n});\n</code></pre>\n\n<p>The advantage is that you can specify which part of index.php you want to load by using a selector ( #somediv )</p>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>I know I can load in html in to a div with:</p>\n\n<pre><code>$(\"#my_div\").load(\"http://www.mypage.com\");\n</code></pre>\n\n<p>but I want to do is load html into a variable like:</p>\n\n<pre><code>my_var = load(\"http://www.mypage.com\");\n</code></pre>\n\n<p>Any help is great.</p>\n\n<p>I would like to loop though some items like:</p>\n\n<pre><code>HLS.functions.LoadSideModules = function() {\n    HLS.sideModuleContent = new Object();\n    for(var i = 0; i &lt; HLS.currentModuleConfig.POLICIES.POLICY.length; i++) {\n        for(var y = 0; y &lt; HLS.currentModuleConfig.POLICIES.POLICY[i].PAGES.PAGE.length; y++) {\n            for(var POS in HLS.currentModuleConfig.POLICIES.POLICY[i].PAGES.PAGE[y]) {\n                var item = HLS.currentModuleConfig.POLICIES.POLICY[i].PAGES.PAGE[y][POS];\n                if(!HLS.sideModuleContent[item]) {\n                    HLS.sideModuleContent[item] = j.get(HLS.config.K2GETMODULE + HLS.currentModuleConfig.POLICIES.POLICY[i].PAGES.PAGE[y][POS]);\n                }\n            }\n        }\n    }\n};\n</code></pre>\n",
            "last_activity_date": 1390932946,
            "question_id": 9958282,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "How do I load html into a variable with jquery"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Here you go:</p>\n\n<pre><code>var tid = setInterval( function () {\n    if ( document.readyState !== 'complete' ) return;\n    clearInterval( tid );       \n    // do your work\n}, 100 );\n</code></pre>\n\n<p>Read about the <code>document.readyState</code> property <a href=\"https://developer.mozilla.org/en/DOM/document.readyState\">here</a>. I am not sure if all current browsers implement it.</p>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>Checkout <a href=\"https://github.com/jakobmattsson/onDomReady\" rel=\"nofollow\">https://github.com/jakobmattsson/onDomReady</a></p>\n\n<p>It's more complicated than a few lines! - If you want multiple browser compliance.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This code will work in all browsers</p>\n\n<pre><code>if(window.attachEvent()){\n\n    window.attachEvent(\"onload\",load);\n\n }else{\n\n    window.addEventListener(\"load\",load,true);\n\n }\n\n function load(){\n    //Code to execute when the document is loaded.\n }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/799981/document-ready-equivalent-without-jquery\">$(document).ready equivalent without jQuery</a>  </p>\n</blockquote>\n\n\n\n<p>I know you can use the window.onload event to make functions run, but is there a way for a script to query if the document is ready or not?</p>\n\n<p>Something like</p>\n\n<pre><code>function update()\n{\n    if( !document.ready() )  // don't do unless document loaded\n        return ;\n}\nwindow.setInterval( 'update();', 100 ) ;\n</code></pre>\n\n<p>Cannot change the &lt;body&gt; element, and no jQuery/other libraries.</p>\n",
            "last_activity_date": 1374100199,
            "question_id": 5706757,
            "score": 16,
            "tags": [
                "javascript"
            ],
            "title": "Is there a way to check document.ready() if jQuery is not available?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Is plain JavaScript, it is a <em>function chaining</em> pattern.</p>\n\n<p>The first line, <code>( fab = require(\"fab\") )</code> includes the <code>fab</code> function and returns a reference to it.</p>\n\n<p>All the subsequent parentheses are function calls, each function invocation returns probably the same function again and again.</p>\n\n<p>The pattern probably looks like this simplified example:</p>\n\n<pre><code>var foo = function (arg) {\n  // detect what the argument is\n  if (typeof arg == 'function') {\n    // do something with arg\n    console.log('function: '+arg());\n  } else if (arg instanceof RegExp) {\n    // arg is a RegExp...\n    console.log('A RegExp: '+arg);\n  } else if (typeof arg == \"string\") {\n    // arg is a string\n    console.log('A string: '+arg);\n  }\n  return foo; // return a reference to itself\n};\n\n(foo)\n  (function() { return \"Foo \"; })\n  (/bar/)\n  (\" baz!\");\n</code></pre>\n\n<p>Outputs:</p>\n\n<pre>\nfunction: Foo\nA RegExp: /bar/\nA string: baz!\n</pre>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>That's hard to follow indeed; it doesn't really look like Javascript at all...</p>\n\n<p>Anyway, FAB takes advantage of returning a pointer to the function which was called. For example:</p>\n\n<pre><code>function doSomething(str){\n  alert(str);\n  return arguments.callee;\n}\n\n// Alerts 'hi' and then 'there'\ndoSomething('hi')('there');\n</code></pre>\n\n<p>Of course you can implement extra conditions, like counting the number of arguments or checking the type of arguments passed in. For example:</p>\n\n<pre><code>function doSomething(){\n  if(arguments.length == 1){\n    alert(arguments[0])\n  } \n  else if(arguments.length == 2){\n    alert(arguments[0] + arguments[1]);\n  }\n\n  return arguments.callee;\n}\n\ndoSomething\n  (\"Hi, 3 + 4 is:\")\n  (3, 4);\n</code></pre>\n\n<p>The last example alerts:</p>\n\n<pre><code>&gt; Hi, 3 + 4 is:\n&gt; 7\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I've seen a slide that presented <a href=\"http://github.com/jed/fab\">Fab</a>, a node.js framework.</p>\n\n<p><img src=\"http://i.stack.imgur.com/4KIEI.png\" alt=\"Fab slide\"></p>\n\n<p>Is this JavaScript?</p>\n\n<p>Could someone explain what is going on in that code?</p>\n\n<p>I'm all lost.</p>\n",
            "last_activity_date": 1301404012,
            "question_id": 3799238,
            "score": 16,
            "tags": [
                "javascript",
                "node.js",
                "chaining",
                "fab"
            ],
            "title": "Javascript FAB framework on Node.js"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You will find the big summary of what properties are supported on what browsers <a href=\"http://www.quirksmode.org/dom/w3c%5Fcssom.html\" rel=\"nofollow\">on this page on quirksmode.org</a>. </p>\n\n<p>Your best bet is probably to grab an element in the page (using document.body where supported, or document.getElementById or whatever), walk its offsetParent chain to find the topmost element, then examine that element's clientWidth and clientHeight.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>I would compare the \"innerWidth\" to the width of the body.  If the body width > innerwidth, then scrollbars are present.</p>\n\n<pre><code>if (browserWidth() &lt; document.body.offsetWidth) {\n  doSomething();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A (markedly nasty) workaround if you're only interested in the width is to create a 1px x 100% div and use its offsetWidth. Works on IE>=7, FF, Chrome, Safari and Opera (I've not tried IE6, as we're working to a you're-lucky-it-works-at-all-so-don't-complain-about-rendering-oddities policy thereabouts these days). I hang the div off document.body with attributes <code>{ position: 'absolute', top: '-1px', left: 0, width: '100%', height: '1px' }</code>, creating it the first time it's needed.</p>\n\n<p>Works if you can stomach it.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Just add that before the window.innerWidth() check:</p>\n\n<pre><code>if (typeof(document.body.clientWidth) == 'number') {\n    // newest gen browsers\n    width = document.body.clientWidth;\n    height = document.body.clientHeight;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Another solution you can try is changing some CSS so scrolling happens within your page, instead of the browser window doing it. In the style for body, add overflow:auto. Now the body element includes the scrollbar, so when you get the window width you're measuring the width outside the scrolling container instead of inside it.</p>\n\n<p>This does feel like a potential source of quirkiness, and possibly an accessibility issue, so if you're going for widespread use you might want to test it quite carefully.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is what I did - only half a year into learning JavaScript, so this may be a bad fix.  First, I created a transparent square image <code>(10px x 10px)</code>, but you could also create a non-transparent image and add this to your JavaScript as<br>\n<code>document.getElementById('getDimensions').style.visibility = \"hidden\";</code></p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;img id=\"getDimensions\" src=\"images/aSmallBox.png\" alt=\"A small transparent image  \nmeant to determine the dimensions of the viewport\" width=\"10px\" height=\"10px\"/&gt;\n</code></pre>\n\n<p><strong>JavaScript:</strong></p>\n\n<pre><code>//Inside function called by window.onload event handler (could go in CSS file, but   \n//better to keep it with other related code in JS file)\ndocument.getElementById('getDimensions').style.position = \"fixed\";\ndocument.getElementById('getDimensions').style.bottom = \"0px\";\ndocument.getElementById('getDimensions').style.right = \"0px\";   \n\n//Everything below inside function called by window.onresize event handler\nvar baseWidthCalculation = document.getElementById('getDimensions').offsetLeft;\nvar baseHeightCalculation = document.getElementById('getDimensions').offsetTop;\n  //Account for the dimensions of the square img element (10x10)\nvar viewportWidth = baseWidthCalculation + 10;\nvar viewportHeight = baseHeightCalculation + 10;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is a more efficient version of an idea posted here by Tim Salai ( even though you are just beginning, it was brilliant to place an element in the bottom right corner like that ).</p>\n\n<pre><code>var getDimensions = document.createElement(\"div\");\ngetDimensions.setAttribute(\"style\", \n            \"visibility:hidden;position:fixed;bottom:0px;right:0px;\");\ndocument.getElementsByTagName(\"body\")[0].appendChild(getDimensions);\nvar viewportWidth = getDimensions.offsetLeft;\nvar viewportHeight = getDimensions.offsetTop;\n</code></pre>\n\n<p>And here is a modular version</p>\n\n<pre><code>var PageDimensions = function(){\n var Width;\n var Height;     \n\n function pagedimensionsCtor (){\n   var getDimensions = document.createElement(\"div\");\n   getDimensions.setAttribute(\"style\" , \n         \"visibility:hidden;position:fixed;bottom:0px;right:0px;\");\n   document.getElementsByTagName(\"body\")[0].appendChild(getDimensions);\n   Width = getDimensions.offsetLeft;\n   Height = getDimensions.offsetTop;\n   getDimensions.parentNode.removeChild(getDimensions);\n }\n pagedimensionsCtor();\n\n function Reset(){\n  pagedimensionsCtor();\n }     \n\n function GetPageHeight(){\n  return Height;\n }\n\n function GetPageWidth(){\n  return Width;\n }\n\n return{\n  Reset: Reset,\n  GetPageHeight: GetPageHeight,\n  GetPageWidth: GetPageWidth\n };\n}\n</code></pre>\n\n<p>Use the modular version:</p>\n\n<pre><code>var page = new PageDimensions();\nconsole.log(\"viewportWidth: \" + page.GetPageWidth() + \" viewportHeight: \" + page.GetPageHeight());\n</code></pre>\n\n<p>Bonus feature:</p>\n\n<pre><code>page.Reset();//just in case you think your dimensions have changed\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>How do I detect the width of a user's window with Javascript and account for their scrollbar? (I need the width of the screen INSIDE of the scrollbar). Here's what I have...it seems to work in multiple browsers...except that it doesn't account for the scrollbars..</p>\n\n<pre><code>    function browserWidth() {\n  var myWidth = 0;\n  if( typeof( window.innerWidth ) == 'number' ) {\n    //Non-IE\n    myWidth = window.innerWidth;\n  } else if( document.documentElement &amp;&amp; document.documentElement.clientWidth ) {\n    //IE 6+ in 'standards compliant mode'\n    myWidth = document.documentElement.clientWidth;\n  } else if( document.body &amp;&amp; document.body.clientWidth ) {\n    //IE 4 compatible\n    myWidth = document.body.clientWidth;\n  }\n  return myWidth;\n}\n</code></pre>\n\n<p>any ideas? i need it to work in all browsers;)</p>\n",
            "last_activity_date": 1358535955,
            "question_id": 596072,
            "score": 16,
            "tags": [
                "javascript",
                "screen",
                "width"
            ],
            "title": "detect window width and compensate for scrollbars - Javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The debugger should automatically attach to the browser with Visual Studio 2012.  You can use the <code>debugger</code> keyword to halt at a certain point in the application or use the <code>breakpoints</code> directly inside VS.  </p>\n\n<p>You can also detatch the default debugger in Visual Studio and use the Developer Tools which come pre loaded with Internet Explorer or FireBug etc.</p>\n\n<p>To do this goto <code>Visual Studio</code> -> <code>Debug</code> -> <code>Detatch All</code> and then click Start debugging in <code>Internet Explorer</code>.  You can then set breakpoints at this level.\n<img src=\"http://i.stack.imgur.com/KrxCH.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>First open Visual studio ..select your project in solution explorer..Right click and choose option \"browse with\" then set IE as default browser.</p>\n\n<p><img src=\"http://i.stack.imgur.com/wSr31.jpg\" alt=\"enter image description here\">\nNow open IE ..go to<br>\n<code>Tools &gt;&gt; Internet option &gt;&gt; Advance&gt;&gt; uncheck the checkbox having \"Disable Script Debugging (Internet Explorer).</code> and then click <code>Apply</code> and <code>OK</code> and you are done ..</p>\n\n<p>Now you can set breakpoints in your JS file and then hit the debug button in VS..</p>\n\n<p><img src=\"http://i.stack.imgur.com/FgMVA.jpg\" alt=\"enter image description here\"></p>\n\n<p><strong>EDIT:-</strong> For asp.net web application right click on the page which is your startup page(say default.aspx) and perform the same steps. :)</p>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>I'm developing a webapplication (asp.net mvc 4) with Microsoft Visual Studio 2012, and as the solution is getting bigger, the debug is getting slower.</p>\n\n<p>Need to know if there is a way to debug only my client side (javascript) on visual studio instead of the entire application (server+client).</p>\n\n<p>Is there any way to attach to process of IE and get the breakpoints working ....?</p>\n\n<p>Not interested on get the debugger running on entire client/server application, <strong>just client</strong>.</p>\n\n<p>thanks in advance.</p>\n",
            "last_activity_date": 1363953493,
            "question_id": 15568245,
            "score": 15,
            "tags": [
                "javascript",
                "visual-studio",
                "debugging"
            ],
            "title": "how to Javascript(only) debug on Visual Studio?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You might want to check these 2 links out for additional reference:</p>\n\n<p><a href=\"http://adamcecc.blogspot.com/2011/01/javascript.html\" rel=\"nofollow\">http://adamcecc.blogspot.com/2011/01/javascript.html</a>  (this is only applicable when you're 'filtered' input is ever going to find itself between script tags on a page)</p>\n\n<p><a href=\"http://ha.ckers.org/xss.html\" rel=\"nofollow\">http://ha.ckers.org/xss.html</a> (which has a lot of browser-specific event triggers listed)</p>\n\n<p>I've used HTML Purifier, as you are doing, for this reason too in combination with a wysiwyg-editor. What i did different is using a very strict whitelist with a couple of basic markup tags and attributes available and expanding it when the need arose. This keeps you from getting attacked by very obscure vectors (like the first link above) and you can dig in on the newly needed tag/attribute one by one.</p>\n\n<p>Just my 2 cents..</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You mention <code>href</code> and <code>action</code> as places <code>javascript:</code> URLs can appear, but you're missing the <code>src</code> attribute among a bunch of other URL loading attributes.</p>\n\n<p><a href=\"http://code.google.com/p/owasp-java-html-sanitizer/source/browse/trunk/src/main/org/owasp/html/HtmlPolicyBuilder.java#399\" rel=\"nofollow\">Line 399 of the OWASP Java HTMLPolicyBuilder</a> is the definition of URL attributes in a white-listing HTML sanitizer.</p>\n\n<blockquote>\n<pre><code>private static final Set&lt;String&gt; URL_ATTRIBUTE_NAMES = ImmutableSet.of(\n  \"action\", \"archive\", \"background\", \"cite\", \"classid\", \"codebase\", \"data\",\n  \"dsync\", \"formaction\", \"href\", \"icon\", \"longdesc\", \"manifest\", \"poster\",\n  \"profile\", \"src\", \"usemap\");\n</code></pre>\n</blockquote>\n\n<p>The <a href=\"http://dev.w3.org/html5/spec/index.html#attributes-1\" rel=\"nofollow\">HTML5 Index</a> contains a summary of attribute types.  It doesn't mention some conditional things like <code>&lt;input type=URL value=...&gt;</code> but if you scan that list for <a href=\"http://dev.w3.org/html5/spec/index.html#attributes-1\" rel=\"nofollow\">valid URL</a> and friends, you should get a decent idea of what HTML5 adds.  The set of <a href=\"http://www.w3.org/TR/html4/index/attributes.html\" rel=\"nofollow\">HTML 4 attributes</a> with type <code>%URI</code> is also informative.</p>\n\n<p>Your protocol whitelist looks very similar to the <a href=\"http://code.google.com/p/owasp-java-html-sanitizer/source/browse/trunk/src/main/org/owasp/html/HtmlPolicyBuilder.java#380\" rel=\"nofollow\">OWASP sanitizer</a> one.  The addition of <code>ftp</code> and <code>sftp</code> looks innocuous enough.</p>\n\n<p>A good source of security related schema info for HTML element and attributes is the <a href=\"http://code.google.com/p/google-caja/wiki/CajaWhitelists\" rel=\"nofollow\">Caja JSON whitelists</a> which are used by the Caja <a href=\"http://code.google.com/p/google-caja/wiki/JsHtmlSanitizer\" rel=\"nofollow\">JS HTML sanitizer</a>.</p>\n\n<p>How are you planning on rendering the resulting DOM?  If you're not careful, then even if you strip out all the <code>&lt;script&gt;</code> elements, an attacker might get a buggy renderer to produce content that a browser interprets as containing a <code>&lt;script&gt;</code> element.  Consider the valid HTML that does not contain a script element.</p>\n\n<pre><code>&lt;textarea&gt;&lt;&amp;#47;textarea&gt;&lt;script&gt;alert(1337)&lt;/script&gt;&lt;/textarea&gt;\n</code></pre>\n\n<p>A buggy renderer might output the contents of this as:</p>\n\n<pre><code>&lt;textarea&gt;&lt;/textarea&gt;&lt;script&gt;alert(1337)&lt;/script&gt;&lt;/textarea&gt;\n</code></pre>\n\n<p>which does contain a script element.</p>\n\n<p>(Full disclosure: I wrote chunks of both HTML sanitizers mentioned above.)</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Garuda has already given what I would deem as the \"correct\" answer, and his links are very useful, but he beat me to the punch!</p>\n\n<p>I give my answer only to reinforce.</p>\n\n<p>In this day and age of increasing features in the html and ecmascript specs, avoiding script injection and other such vulnerabilities in html becomes more and more difficult.  With each new addition, a whole world of possible injections is introduced.  This is coupled with the fact that different browsers probably have different ideas of how they are going to implement these specs, so you get even more possible vulnerabilities.</p>\n\n<p>Take a look at a short list of vectors introduced by <a href=\"http://hackerthedude.blogspot.com/2009/12/new-html-5-xss-vectors-by-gareth-heyes.html\" rel=\"nofollow\">html 5</a></p>\n\n<p>The best solution is choose what you will allow rather than what you will deny.  It is much easier to say \"These tags and these  attributes for those given tags alone are allowed.  Everything else will sanitized accordingly or thrown out.\"</p>\n\n<p>It would be very irresponsible for me to compile a list and say \"okay, here you go: here's a list of all of the injection vectors you missed.  You can sleep easy.\"  In fact, there are probably many injection vectors that are not even known by black hats or white hats.  As the ha.ckers website states, script injection is really only limited by the mind.</p>\n\n<p>I'd like to answer your specific question at least a little bit, so here are some glaring omissions from your blacklist:</p>\n\n<ul>\n<li><code>img</code> <code>src</code> attribute. I think it is important to note that <code>src</code> is a valid attribute on other elements and could be potentially harmful.  <code>img</code> also <code>dynsrc</code> and <code>lowsrc</code>, maybe even more.</li>\n<li><code>type</code> and <code>language</code> attributes</li>\n<li><code>CDATA</code> in addition to just html comments.</li>\n<li>Improperly sanitized input values.  This may not be a problem depending upon how strict your html parsing is.</li>\n<li>Any ambiguous special characters.  In my opinion, even unambiguous ones should probably be encoded.</li>\n<li>Missing or incorrect quotes on attributes (such as grave quotes).</li>\n<li>Premature closing of textarea tags.</li>\n<li>UTF-8 (and 7) encoded characters in scripts</li>\n<li>Even though you will only return child nodes of the body tag, many browsers will still evaluate <code>head</code>, and <code>html</code> elements inside of <code>body</code>, and most <code>head</code>-only elements inside of <code>body</code> anyway, so this probably won't help much.</li>\n<li>In addition to css expressions, background image expressions</li>\n<li><code>frame</code>s and <code>iframe</code>s</li>\n<li><code>embed</code> and probably <code>object</code> and <code>applet</code></li>\n<li>Server side includes</li>\n<li>PHP tags</li>\n<li>Any other injections (SQL Injection, executable injection, etc.)</li>\n</ul>\n\n<p>By the way, I'm sure this doesn't matter, but camelCased attributes are invalid xhtml and should be lower cased.  I'm sure this doesn't affect you.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Don't forget the HTML5 JavaScript event handlers</p>\n\n<p><a href=\"http://www.w3schools.com/html5/html5_ref_eventattributes.asp\" rel=\"nofollow\">http://www.w3schools.com/html5/html5_ref_eventattributes.asp</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to code a secure and lightweight white-list based HTML purifier which will use DOMDocument. In order to avoid unnecessary complexity I am willing to make the following compromises:</p>\n\n<ul>\n<li>HTML comments are removed</li>\n<li><code>script</code> and <code>style</code> tags are stripped all together</li>\n<li>only the child nodes of the <code>body</code> tag will be returned</li>\n<li>all HTML attributes that can trigger Javascript events will either be validated or removed</li>\n</ul>\n\n<p>I've been reading a lot about on XSS attacks and prevention and I hope I'm not being too naive (if I am, please let me know!) in assuming that if I follow all the rules I mentioned above, I will be safe from XSS.</p>\n\n<p>The problem is I am not sure what other tags and attributes (in any [X]HTML version and/or browser versions/implementations) can trigger Javascript events, besides the <a href=\"https://files.pbworks.com/download/f3ZPrKJwce/webappsec/13247042/ScriptMapping_Release_26Nov2007.html\" rel=\"nofollow\">default Javascript event attributes</a>:</p>\n\n<ul>\n<li><code>onAbort</code></li>\n<li><code>onBlur</code></li>\n<li><code>onChange</code></li>\n<li><code>onClick</code></li>\n<li><code>onDblClick</code></li>\n<li><code>onDragDrop</code></li>\n<li><code>onError</code></li>\n<li><code>onFocus</code></li>\n<li><code>onKeyDown</code></li>\n<li><code>onKeyPress</code></li>\n<li><code>onKeyUp</code></li>\n<li><code>onLoad</code></li>\n<li><code>onMouseDown</code></li>\n<li><code>onMouseMove</code></li>\n<li><code>onMouseOut</code></li>\n<li><code>onMouseOver</code></li>\n<li><code>onMouseUp</code></li>\n<li><code>onMove</code></li>\n<li><code>onReset</code></li>\n<li><code>onResize</code></li>\n<li><code>onSelect</code></li>\n<li><code>onSubmit</code></li>\n<li><code>onUnload</code></li>\n</ul>\n\n<p>Are there any other non-default or proprietary event attributes that can trigger Javascript (or VBScript, etc...) events or code execution? I can think of <code>href</code>, <code>style</code> and <code>action</code>, for instance:</p>\n\n<pre><code>&lt;a href=\"javascript:alert(document.location);\"&gt;XSS&lt;/a&gt; // or\n&lt;b style=\"width: expression(alert(document.location));\"&gt;XSS&lt;/b&gt; // or\n&lt;form action=\"javascript:alert(document.location);\"&gt;&lt;input type=\"submit\" /&gt;&lt;/form&gt;\n</code></pre>\n\n<p>I will probably just remove any <code>style</code> attributes in the HTML tags, the <code>action</code> and <code>href</code> attributes pose a bigger challenge but I think the following code is enough to make sure their value is either a relative or absolute URL and not some nasty Javascript code:</p>\n\n<pre><code>$value = $attribute-&gt;value;\n\nif ((strpos($value, ':') !== false) &amp;&amp; (preg_match('~^(?:(?:s?f|ht)tps?|mailto):~i', $value) == 0))\n{\n    $node-&gt;removeAttributeNode($attribute);\n}\n</code></pre>\n\n<p>So, my two obvious questions are:</p>\n\n<ol>\n<li><strong>Am I missing any tags or attributes that can trigger events?</strong></li>\n<li><strong>Is there any attack vector that is not covered by these rules?</strong></li>\n</ol>\n\n<hr>\n\n<p>After a lot of testing, pondering and researching I've come up with the <a href=\"https://github.com/alixaxel/phunction/blob/ca71da3ea7b132a44132a6166e2b722098b22d25/_.php#L1781\" rel=\"nofollow\">following (rather simple) implementation</a> which, appears to be immune to any XSS attack vector I could throw at it.</p>\n\n<p>I highly appreciate all your valuable answers, thanks.</p>\n",
            "last_activity_date": 1313696296,
            "question_id": 6976053,
            "score": 15,
            "tags": [
                "php",
                "javascript",
                "html",
                "security",
                "xss"
            ],
            "title": "XSS - Which HTML Tags and Attributes can trigger Javascript Events?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You might want to create a helper function like this:</p>\n\n<pre><code>function defineAndRun(name, func) {\n    window[name] = func;\n    func();\n}\n\ndefineAndRun('addEventsAndStuff', function() {\n    alert('oele');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try to do like that:</p>\n\n<pre><code>var addEventsAndStuff = (function(){\n    var func = function(){\n        alert('ole!');\n    };\n    func();\n    return func;\n})();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<blockquote>\n  <p>There's nothing wrong with this set up (or is there?), but can I smooth it a little bit?</p>\n</blockquote>\n\n<p>Look at using event delegation instead. That's where you actually watch for the event on a container that <em>doesn't</em> go away, and then use <code>event.target</code> (or <code>event.srcElement</code> on IE) to figure out where the event actually occurred and handle it correctly.</p>\n\n<p>That way, you only attach the handler(s) once, and they just keep working even when you swap out content.</p>\n\n<p>Here's an example of event delegation without using any helper libs:</p>\n\n<pre><code>(function() {\n  var handlers = {};\n\n  if (document.body.addEventListener) {\n    document.body.addEventListener('click', handleBodyClick, false);\n  }\n  else if (document.body.attachEvent) {\n    document.body.attachEvent('onclick', handleBodyClick);\n  }\n  else {\n    document.body.onclick = handleBodyClick;\n  }\n\n  handlers.button1 = function() {\n    display(\"Button One clicked\");\n    return false;\n  };\n  handlers.button2 = function() {\n    display(\"Button Two clicked\");\n    return false;\n  };\n  handlers.outerDiv = function() {\n    display(\"Outer div clicked\");\n    return false;\n  };\n  handlers.innerDiv1 = function() {\n    display(\"Inner div 1 clicked, not cancelling event\");\n  };\n  handlers.innerDiv2 = function() {\n    display(\"Inner div 2 clicked, cancelling event\");\n    return false;\n  };\n\n  function handleBodyClick(event) {\n    var target, handler;\n\n    event = event || window.event;\n    target = event.target || event.srcElement;\n\n    while (target &amp;&amp; target !== this) {\n      if (target.id) {\n        handler = handlers[target.id];\n        if (handler) {\n          if (handler.call(this, event) === false) {\n            if (event.preventDefault) {\n              event.preventDefault();\n            }\n            return false;\n          }\n        }\n      }\n      else if (target.tagName === \"P\") {\n        display(\"You clicked the message '\" + target.innerHTML + \"'\");\n      }\n      target = target.parentNode;\n    }\n  }\n\n  function display(msg) {\n    var p = document.createElement('p');\n    p.innerHTML = msg;\n    document.body.appendChild(p);\n  }\n\n})();\n</code></pre>\n\n<p><a href=\"http://jsbin.com/ohofe4/2\" rel=\"nofollow\">Live example</a></p>\n\n<p>Note how if you click the messages that get dynamically added to the page, your click gets registered and handled even though there's no code to hook events on the new paragraphs being added. Also note how your handlers are just entries in a map, and you have <em>one</em> handler on the <code>document.body</code> that does all the dispatching. Now, you probably root this in something more targeted than <code>document.body</code>, but you get the idea. Also, in the above we're basically dispatching by <code>id</code>, but you can do matching as complex or simple as you like.</p>\n\n<p>Modern JavaScript libraries like <a href=\"http://jquery.com\" rel=\"nofollow\">jQuery</a>, <a href=\"http://prototypejs.org\" rel=\"nofollow\">Prototype</a>, <a href=\"http://developer.yahoo.com/yui/\" rel=\"nofollow\">YUI</a>, <a href=\"http://code.google.com/closure/library\" rel=\"nofollow\">Closure</a>, or <a href=\"http://en.wikipedia.org/wiki/List_of_JavaScript_libraries\" rel=\"nofollow\">any of several others</a> should offer event delegation features to smooth over browser differences and handle edge cases cleanly. jQuery certainly does, with both its <a href=\"http://api.jquery.com/live\" rel=\"nofollow\"><code>live</code></a> and <a href=\"http://api.jquery.com/delegate\" rel=\"nofollow\"><code>delegate</code></a> functions, which allow you to specify handlers using a full range of CSS3 selectors (and then some).</p>\n\n<p>For example, here's the equivalent code using jQuery (except I'm sure jQuery handles edge cases the off-the-cuff raw version above doesn't):</p>\n\n<pre><code>(function($) {\n\n  $(\"#button1\").live('click', function() {\n    display(\"Button One clicked\");\n    return false;\n  });\n  $(\"#button2\").live('click', function() {\n    display(\"Button Two clicked\");\n    return false;\n  });\n  $(\"#outerDiv\").live('click', function() {\n    display(\"Outer div clicked\");\n    return false;\n  });\n  $(\"#innerDiv1\").live('click', function() {\n    display(\"Inner div 1 clicked, not cancelling event\");\n  });\n  $(\"#innerDiv2\").live('click', function() {\n    display(\"Inner div 2 clicked, cancelling event\");\n    return false;\n  });\n  $(\"p\").live('click', function() {\n    display(\"You clicked the message '\" + this.innerHTML + \"'\");\n  });\n\n  function display(msg) {\n    $(\"&lt;p&gt;\").html(msg).appendTo(document.body);\n  }\n\n})(jQuery);\n</code></pre>\n\n<p><a href=\"http://jsbin.com/ohofe4/4\" rel=\"nofollow\">Live copy</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you want to create a function and execute immediately - </p>\n\n<pre><code>// this will create as well as execute the function a()\n(a=function a() {alert(\"test\");})();\n\n// this will execute the function a() i.e. alert(\"test\")\na();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There's nothing wrong with the example you posted in your question..  The other way of doing it may look odd, but:</p>\n\n<pre><code>var addEventsAndStuff;\n(addEventsAndStuff = function(){\n    // add events, and ... stuff\n})();\n</code></pre>\n\n<hr>\n\n<p>There are two ways to define a function in JavaScript.  A function declaration:</p>\n\n<pre><code>function foo(){ ... }\n</code></pre>\n\n<p>and a function expression, which is <strong><em>any</em></strong> way of defining a function other than the above:</p>\n\n<pre><code>var foo = function(){};\n(function(){})();\nvar foo = {bar : function(){}};\n</code></pre>\n\n<p>...etc</p>\n\n<p>function expressions can be named, but their name is not propagated to the containing scope.  Meaning this code is valid:</p>\n\n<pre><code>(function foo(){\n   foo(); // recursion for some reason\n}());\n</code></pre>\n\n<p>but this isn't:</p>\n\n<pre><code>(function foo(){\n    ...\n}());\nfoo(); // foo does not exist\n</code></pre>\n\n<p>So in order to name your function and immediately call it, you need to define a local variable, assign your function to it as an expression, then call it.</p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>Your code contains a typo: </p>\n\n<pre><code>(function addEventsAndStuff() {\n  alert('oele');\n)/*typo here, should be }*/)();\n</code></pre>\n\n<p>so</p>\n\n<pre><code>(function addEventsAndStuff() {\n  alert('oele');\n })();\n</code></pre>\n\n<p>works. Cheers!</p>\n\n<p>[<b>edit</b>] based on comment: and this should run and return the function in one go:</p>\n\n<pre><code>var addEventsAndStuff = (\n function(){\n  var addeventsandstuff =  function(){\n    alert('oele');\n  };\n  addeventsandstuff();\n  return addeventsandstuff;\n }()\n);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There is a good shorthand to this (not needing to declare any variables bar the assignment of the function):</p>\n\n<pre><code>var func = (function f(a) { console.log(a); return f; })('Blammo')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have quite a few of these:</p>\n\n<pre><code>function addEventsAndStuff() {\n  // bla bla\n}\naddEventsAndStuff();\n\nfunction sendStuffToServer() {\n  // send stuff\n  // get HTML in response\n  // replace DOM\n  // add events:\n  addEventsAndStuff();\n}\n</code></pre>\n\n<p>Re-adding the events is necessary because the DOM has changed, so previously attached events are gone. Since they have to be attached initially as well (duh), they're in a nice function to be DRY.</p>\n\n<p>There's nothing wrong with this set up (or is there?), but can I smooth it a little bit? I'd like to create the <code>addEventsAndStuff</code> function and immediately call it, so it doesn't look so amateuristic.</p>\n\n<p>Both following respond with a syntax error:</p>\n\n<pre><code>function addEventsAndStuff() {\n  alert('oele');\n}();\n\n(function addEventsAndStuff() {\n  alert('oele');\n})();\n</code></pre>\n\n<p>Any takers?</p>\n",
            "last_activity_date": 1399642569,
            "question_id": 6404196,
            "score": 15,
            "tags": [
                "javascript",
                "function"
            ],
            "title": "Can I name a javascript function and execute it immediately?"
        }
    ]
}
