{
    "items": [
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>By default, Windows associates <code>.js</code> files with the <a href=\"http://en.wikipedia.org/wiki/Windows_Script_Host\">Windows Script Host</a>, Microsoft's stand-alone JS runtime engine.  If you type <em>script.js</em> at a command prompt (or double-click a <code>.js</code> file in Explorer), the script is executed by <code>wscript.exe</code>.</p>\n\n<p>This may be <a href=\"http://blogs.msdn.com/b/oldnewthing/archive/2008/12/11/9193695.aspx\">solving a local problem with a global setting</a>, but you could <a href=\"http://superuser.com/questions/29717/associate-a-file-type-with-a-specific-program\">associate</a> <code>.js</code> files with <code>node.exe</code> instead, so that typing <em>script.js</em> at a command prompt or double-clicking/dragging items onto scripts will launch them with Node.</p>\n\n<p>Of course, if&mdash;like me&mdash;you've associated <code>.js</code> files with an editor so that double-clicking them opens up your favorite text editor, this suggestion won't do much good.  You could also <a href=\"http://superuser.com/questions/29717/associate-a-file-type-with-a-specific-program/29719#29719\">add a right-click menu entry</a> of \"Execute with Node\" to <code>.js</code> files, although this alternative doesn't solve your command-line needs.</p>\n\n<hr>\n\n<p>The simplest solution is probably to just use a batch file &ndash; you don't have to have a copy of Node in the folder your script resides in.  Just reference the Node executable absolutely:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\"C:\\Program Files (x86)\\nodejs\\node.exe\" app.js %*\n</code></pre>\n\n<hr>\n\n<p>Another alternative is this very simple C# app which will start Node using its own filename + <code>.js</code> as the script to run, and pass along any command line arguments.</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>class Program\n{\n    static void Main(string[] args)\n    {\n        var info = System.Diagnostics.Process.GetCurrentProcess();\n        var proc = new System.Diagnostics.ProcessStartInfo(@\"C:\\Program Files (x86)\\nodejs\\node.exe\", \"\\\"\" + info.ProcessName + \".js\\\" \" + String.Join(\" \", args));\n        proc.UseShellExecute = false;\n        System.Diagnostics.Process.Start(proc);\n    }\n}\n</code></pre>\n\n<p>So if you name the resulting EXE \"app.exe\", you can type <code>app arg1 ...</code> and Node will be started with the command line <code>\"app.js\" arg1 ...</code>.  Note the C# bootstrapper app will immediately exit, leaving Node in charge of the console window.</p>\n\n<p>Since this is probably of relatively wide interest, I went ahead and made this <a href=\"https://github.com/daguej/NodeRunner\">available on GitHub</a>, including the <a href=\"https://github.com/daguej/NodeRunner/downloads\">compiled exe</a> if getting in to vans with strangers is your thing.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>There a few alternatives, both free and commercial. I haven't used any of them but in theory they should work:</p>\n\n<ul>\n<li><a href=\"http://www.petri.co.il/create_executable_with_iexpress.htm\">Iexpress (native windows tool)</a></li>\n<li><a href=\"http://www.battoexe.com/\">Quick Batch File Compiler</a> (commercial)</li>\n<li><a href=\"http://www.battoexeconverter.com/\">\"Advanced\" Batch To EXE Converter\"</a> (freeware)</li>\n</ul>\n\n<p>Most will require you to keep the batch file as main executable, and then bundle node.exe and your scripts.</p>\n\n<p>Depending on your script, you also have the option to port it to <a href=\"http://jsdb.org\">JSDB</a>, which supports an <a href=\"http://jsdb.org/tutorial.html\">easy way to create executables</a> by simply appending resources to it.</p>\n\n<p>A third quasi-solution is to keep node somewhere like <code>C:\\utils</code> and add this folder to your <code>PATH</code> environment variable. Then you can create .bat files in that dir that run node + your preferred scripts - I got coffeescript's <code>coffee</code> working on windows this way. This setup can be automated with a batch file, vb script or installer.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>Got tired of starting on win from command prompt then I ran across this as well. Slightly improved ver. over what <em>josh3736</em>. This uses an XML file to grab a few settings. For example the path to <code>Node.exe</code> as well as the file to start in the default app.js. Also the environment to load (production, dev etc) that you have specified in your app.js (or server.js or whatever you called it). Essentially it adds the <code>NODE_ENV={0}</code> where {0} is the name of your configuration in app.js as a var for you. You do this by modifying the \"mode\" element in the config.xml. You can grab the project here ==> <a href=\"https://github.com/chazelton/StartNode\" rel=\"nofollow\">github</a>. Note in the Post Build events you can modify the copy paths to auto copy over your config.xml and the executable to your <code>Nodejs</code> directory, just to save a step. Otherwise edit these out or your build will throw a warning.</p>\n\n<pre><code>var startInfo = new ProcessStartInfo();\n        startInfo.FileName = nodepath;\n        startInfo.Arguments = apppath;\n        startInfo.UseShellExecute = false;\n        startInfo.CreateNoWindow = false;\n        startInfo.WindowStyle = ProcessWindowStyle.Hidden;\n\n        if(env.Length &gt; 0)\n            startInfo.EnvironmentVariables.Add(\"NODE_ENV\", env);\n\n        try\n        {\n            using (Process p = Process.Start(startInfo))\n            {\n                p.WaitForExit();\n            }\n        }\n        catch (Exception ex)\n        {\n            MessageBox.Show(ex.Message.ToString(), \"Start Error\", MessageBoxButtons.OK);\n        }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Bit late on this, but based on the <a href=\"http://stackoverflow.com/a/8176614/131809\">answer</a>, I created a quick \"how-to\" blog post, using Advanced\" Batch To EXE Converter</p>\n\n<p><a href=\"http://www.alexjamesbrown.com/development/create-a-standalone-exe-to-run-a-node-js-application/\" rel=\"nofollow\">http://www.alexjamesbrown.com/development/create-a-standalone-exe-to-run-a-node-js-application/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Since this question has been answered, another solution has been launched.</p>\n\n<p><a href=\"https://github.com/appjs/appjs\" rel=\"nofollow\">https://github.com/appjs/appjs</a></p>\n\n<p>At the time of this writing, this is the end-all solution for packaging node.js apps through a stripped down chromium package compiled into an executable.</p>\n\n<p>Edit:\nAppJS is no longer active, but itself suggests a fork called deskshell. </p>\n\n<p><a href=\"https://github.com/sihorton/appjs-deskshell/\" rel=\"nofollow\">https://github.com/sihorton/appjs-deskshell/</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>The solution I've used is Roger Wang's <a href=\"https://github.com/rogerwang/node-webkit\">node-webkit</a>.</p>\n\n<p>This is a fantastic way to package nodejs apps and distribute them, it even gives you the option to \"bundle\" the whole app as a single executable. It supports windows, mac and linux. </p>\n\n<p><a href=\"https://github.com/rogerwang/node-webkit/wiki/How-to-package-and-distribute-your-apps\">Here</a> are some docs on the various options for deploying node-webkit apps, but in a nutshell, you do the following:</p>\n\n<ol>\n<li>Zip up all your files, with a package.json in the root</li>\n<li>Change the extension from .zip to .nw</li>\n<li>copy /b nw.exe+app.nw app.exe</li>\n</ol>\n\n<p>Just as an added note - I've shipped several production box/install cd applications using this, and it's worked great. Same app runs on windows, mac, linux and over the web.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I did find any of these solutions met my requirements, so made my own version of node called node2exe that does this. It's available from <a href=\"https://github.com/areve/node2exe\" rel=\"nofollow\">https://github.com/areve/node2exe</a> </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Haven't tried it, but nexe looks like nexe can do this:</p>\n\n<p><a href=\"https://github.com/crcn/nexe\" rel=\"nofollow\">https://github.com/crcn/nexe</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There are a lot of good answers here, but they're not all as straightforward as <a href=\"http://jxcore.com/home/\" rel=\"nofollow\">JXcore</a>.</p>\n\n<p>Once you have JXcore installed on windows, all you have to do is run:</p>\n\n<pre><code>jx package app.js \"myAppName\" -native\n</code></pre>\n\n<p>This will produce a .exe file that you can distribute and can be executed without any external dependencies whatsoever (you don't even need JXcore nor Node.js on the system).</p>\n\n<p>Here's the documentation on that functionality: <a href=\"http://jxcore.com/packaging-code-protection/#cat-74\" rel=\"nofollow\">http://jxcore.com/packaging-code-protection/#cat-74</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a node app that I wrote, that I run as follows:</p>\n\n<p><code>node.exe app.js inputArg</code></p>\n\n<p>Is there some way I can package this into a .exe by itself? So I can just do something like this?</p>\n\n<p><code>App.exe inputArg</code></p>\n\n<p>I have some way of faking this by using a batch file, so I can do this:</p>\n\n<p><code>App.bat inputArg</code></p>\n\n<p>But this requires that I have all the dependencies and node in that folder, which is not ideal.</p>\n",
            "last_activity_date": 1419272190,
            "question_id": 8173232,
            "score": 44,
            "tags": [
                "javascript",
                "windows",
                "node.js",
                "exe"
            ],
            "title": "Make exe files from node.js app"
        },
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p><code>navigator.userAgent</code> exists if browser detection (rather than feature detection) is really needed, and jQuery uses it to get the information for the <code>$.browser</code> object. It's much nicer than having to include an IE-specific conditional comment in <em>every</em> page.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you want to do it that way, I think it's much better to use Conditional Compilation instead as you can do it inside the javascript without requiring to change the html:</p>\n\n<pre><code>var isIE = /*@cc_on!@*/false;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 40
                },
                {
                    "body": "<p>Checking for browsers is a bad idea - it's better to check for browser <em>features</em> instead. For example, usually you check if the user is using IE because you want to use some feature not supported in IE. However, can you know ALL current and future non-IE browsers will support that feature? No.\nSo the way e.g. used by jQuery is better: It creates and executes small testcases checking for certain bugs/features - and you can simply check stuff like if(browser_supports_XYZ) instead of checking if the user is using a specific browser.</p>\n\n<p>Anyway, there are always cases where checking for the browser is necessary because it's a visual bug you cannot test for using a script. In this case it's better to use javascript instead of conditional comments because you have the browser check right at the position where you need it instead of at some other place (imagine a .js file where you check for isIE which is never defined in that file)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think you answered your own question: first, it only detects IE, so the script would in essence be splitting the universe of browsers into 2 parts: IE and &lt;everythingelse&gt;. </p>\n\n<p>Second, you'd have to add a wacky looking comment to every HTML page. Given that wide-ranging JavaScript libraries like jQuery and YUI have to be \"easy\" to insert/utilize for a breadth of sites, you would automatically be making them harder to use out of the gate.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<ul>\n<li>It pollutes global namespace</li>\n<li>It requires changes in two files.</li>\n<li>It works in IE only</li>\n<li>Technically, a conditional comment is still a comment</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>James Padolsey put a <a href=\"https://gist.github.com/527683\">little snippet on GitHub</a> that I'll quote here:</p>\n\n<pre><code>// ----------------------------------------------------------\n// A short snippet for detecting versions of IE in JavaScript\n// without resorting to user-agent sniffing\n// ----------------------------------------------------------\n// If you're not in IE (or IE version is less than 5) then:\n// ie === undefined\n// If you're in IE (&gt;=5) then you can determine which version:\n// ie === 7; // IE7\n// Thus, to detect IE:\n// if (ie) {}\n// And to detect the version:\n// ie === 6 // IE6\n// ie &gt; 7 // IE8, IE9 ...\n// ie &lt; 9 // Anything less than IE9\n// ----------------------------------------------------------\n\n// UPDATE: Now using Live NodeList idea from @jdalton\n\nvar ie = (function(){\n\n    var undef,\n        v = 3,\n        div = document.createElement('div'),\n        all = div.getElementsByTagName('i');\n\n    while (\n        div.innerHTML = '&lt;!--[if gt IE ' + (++v) + ']&gt;&lt;i&gt;&lt;/i&gt;&lt;![endif]--&gt;',\n        all[0]\n    );\n\n    return v &gt; 4 ? v : undef;\n\n}());\n</code></pre>\n\n<p>Of course all credits should go to James, I'm only the messenger (but please shoot the messenger if my copy-paste action erred).</p>\n\n<p>Also look at the forks that were created. Paul Irish explained the inner workings in a <a href=\"https://gist.github.com/527683#gistcomment-7599\">comment</a>.</p>\n",
                    "is_accepted": true,
                    "score": 53
                },
                {
                    "body": "<p>This works quite well,<br />\n<code>var isIe = !!window.ActiveXObject;</code></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I think I have what you are looking for. You can get the Full Version of Internet Explorer as a string \"AA.BB.CCCC.DDDD\" using Javascript and clientCaps.</p>\n\n<p><a href=\"http://www.pinlady.net/PluginDetect/IE/\">http://www.pinlady.net/PluginDetect/IE/</a></p>\n\n<p>It appears to work for IE 5.5 and higher (including IE 10).\nIt is immune to the navigator.userAgent/document mode/browser mode.\nThere is no need for conditional comments, or any extra HTML elements. It is a pure Javascript solution.</p>\n\n<p>I am not certain at this time how IE Mobile behaves, but you can always use a backup detection method in case this clientCaps method fails.</p>\n\n<p>So far, I gotta say, it works pretty well. </p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Marcel Korpel's answer no longer works (in IE 10 it returns undef, so IE 10 appears as not being IE). NOTE: Now updated to work with IE 11 also.</p>\n\n<p>This is a variant of that code, but which comes from <a href=\"http://msdn.microsoft.com/en-us/library/ms537509%28v=vs.85%29.aspx\">Microsoft's recommendations</a>.  If you were using the previous code, you can just drop in this replacement since it is built to be called the exact same way.</p>\n\n<p>Unlike conditional comments/compilation, it should also work fine with minimizers.</p>\n\n<pre><code>// ----------------------------------------------------------\n// If you're not in IE (or IE version is less than 5) then:\n// ie === undefined\n// If you're in IE (&gt;=5) then you can determine which version:\n// ie === 7; // IE7\n// Thus, to detect IE:\n// if (ie) {}\n// And to detect the version:\n// ie === 6 // IE6\n// ie &gt; 7 // IE8, IE9, IE10 ...\n// ie &lt; 9 // Anything less than IE9\n// ----------------------------------------------------------\nvar ie = (function(){\n    var undef,rv = -1; // Return value assumes failure.\n    var ua = window.navigator.userAgent;\n    var msie = ua.indexOf('MSIE ');\n    var trident = ua.indexOf('Trident/');\n\n    if (msie &gt; 0) {\n        // IE 10 or older =&gt; return version number\n        rv = parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n    } else if (trident &gt; 0) {\n        // IE 11 (or newer) =&gt; return version number\n        var rvNum = ua.indexOf('rv:');\n        rv = parseInt(ua.substring(rvNum + 3, ua.indexOf('.', rvNum)), 10);\n    }\n\n    return ((rv &gt; -1) ? rv : undef);\n}());\n</code></pre>\n\n<p><em>updated to work with IE11. Thanks 'acarlon' for pointing out that it wasn't working, and 'mario' for code that I based the fix on!</em></p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>Here you can find some really simple hacks for browser-detecting: <a href=\"http://www.thespanner.co.uk/2009/01/29/detecting-browsers-javascript-hacks/\" rel=\"nofollow\">http://www.thespanner.co.uk/2009/01/29/detecting-browsers-javascript-hacks/</a></p>\n\n<pre><code>var isIE = IE='\\v'=='v';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>var version = navigator.userAgent.match(/(msie) (\\d+)/i);\nconsole.log(version);\n</code></pre>\n\n<p>something quick I wrote quick after looking at this question in case anyone wants it.</p>\n\n<p>** EDIT **</p>\n\n<p>Per <em>Johnny Darvall's</em> comment below, I'm adding a link for anyone who is trying to sniff out <strong><em>Internet Explorer 11</em></strong>: </p>\n\n<p><a href=\"http://blogs.msdn.com/b/ieinternals/archive/2013/09/21/internet-explorer-11-user-agent-string-ua-string-sniffing-compatibility-with-gecko-webkit.aspx\" rel=\"nofollow\">http://blogs.msdn.com/b/ieinternals/archive/2013/09/21/internet-explorer-11-user-agent-string-ua-string-sniffing-compatibility-with-gecko-webkit.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm using that code</p>\n\n<p>var isIE = navigator.userAgent.indexOf(' MSIE ') > -1;</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>IE 11 has changed a lot and now many past methods of browser detection do not work.  The below code works for IE 11 and earlier.</p>\n\n<pre><code>function isIE()\n{\n    var isIE11 = navigator.userAgent.indexOf(\".NET CLR\") &gt; -1;      \n    var isIE11orLess = isIE11 || navigator.appVersion.indexOf(\"MSIE\") != -1;\n    return isIE11orLess;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>For my use case, I really just need to detect if lower than IE9, so I use</p>\n\n<pre><code>if (document.body.style.backgroundSize === undefined &amp;&amp; navigator.userAgent.indexOf('MSIE') &gt; -1)\n{\n//IE8- stuff\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Why don't you just program in HTML5, and check that </p>\n\n<pre><code>if ( window.navigator.product !== \"Gecko\" )\n</code></pre>\n\n<p>?? True, this will include IE11 in the \"Gecko\" bunch, but isn't it supposed to be good enough now?</p>\n\n<p>Note: the HTML5 spec. says that navigator.product must return \"Gecko\"... and IE10 and earlier all return something else.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In order to detect IE most Javascript libaries do all sort of tricks.</p>\n\n<ul>\n<li>jQuery seem to add a temporary object into your pages's DOM to detect some features,</li>\n<li>YUI2 does regex on the user agent in its <code>YAHOO.env.ua = function()</code> (file <code>yahoo.js</code>)</li>\n</ul>\n\n<p>After reading <a href=\"http://stackoverflow.com/questions/2196470/what-is-the-best-way-to-detect-ie6-using-javascript\">this answer</a> it came in my mind that it's true, in order to detect simply IE in Javascript we could simply add to our pages:</p>\n\n<pre><code>&lt;!--[if IE]&gt;&lt;script type=\"text/javascript\"&gt;window['isIE'] = true;&lt;/script&gt;&lt;![endif]--&gt;\n\n&lt;script type=\"text/javascript\" src=\"all-your-other-scripts-here.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Now the <code>window.isIE</code> variable is set for all our Javascript code, by simply doing:</p>\n\n<pre><code>if(window.isIE)\n   ...\n</code></pre>\n\n<p>Beside the fact that this might result in being a pain because it has to be added in all pages, <strong>are there any issues/considerations I might be unaware of?</strong></p>\n\n<hr>\n\n<p>FYI: I know it's better to use <a href=\"http://www.quirksmode.org/js/support.html\">object detection rather than browser detection</a>, but there are cases where you still have to use browser detection.</p>\n",
            "last_activity_date": 1420301698,
            "question_id": 4169160,
            "score": 40,
            "tags": [
                "javascript",
                "internet-explorer",
                "browser-detection",
                "conditional-comments"
            ],
            "title": "Javascript IE detection, why not use simple conditional comments?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I'm going to assume for a second that your objective is to read arbitrary bytes from a string.\nMy first suggestion would be to make your string representation a hexidecmal representation of the binary data.</p>\n\n<p>You can read the values using conversions to numbers from hex:</p>\n\n<pre><code>var BITS_PER_BYTE = 8;\n\nfunction readBytes(hexString, numBytes) {\n\treturn Number( parseInt( hexString.substr(0, numBytes * (BITS_PER_BYTE/4) ),16 ) );\n}\n\nfunction removeBytes(hexString, numBytes) {\n\treturn hexString.substr( numBytes * (BITS_PER_BYTE/BITS_PER_CHAR) );\n}\n</code></pre>\n\n<p>The functions can then be used to read whatever you want:</p>\n\n<pre><code>var hex = '4ef2c3382fd';\nalert( 'We had: ' + hex );\n\nvar intVal = readBytes(hex,2);\nalert( 'Two bytes: ' + intVal.toString(2) );\n\nhex = removeBytes(hex,2);\nalert( 'Now we have: ' + hex );\n</code></pre>\n\n<p>You can then interpret the byte string however you want.</p>\n\n<p>Hope this helps!\nCheers!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I believe that you can can do this with relatively simple bit operations:</p>\n\n<pre><code>function stringToBytes ( str ) {\n  var ch, st, re = [];\n  for (var i = 0; i &lt; str.length; i++ ) {\n    ch = str.charCodeAt(i);  // get char \n    st = [];                 // set up \"stack\"\n    do {\n      st.push( ch &amp; 0xFF );  // push byte to stack\n      ch = ch &gt;&gt; 8;          // shift value down by 1 byte\n    }  \n    while ( ch );\n    // add stack contents to result\n    // done because chars have \"wrong\" endianness\n    re = re.concat( st.reverse() );\n  }\n  // return an array of bytes\n  return re;\n}\n\nstringToBytes( \"A\\u1242B\\u4123C\" );  // [65, 18, 66, 66, 65, 35, 67]\n</code></pre>\n\n<p>It should be a simple matter to sum the output up by reading the byte array as if it were memory and adding it up into larger numbers:</p>\n\n<pre><code>function getIntAt ( arr, offs ) {\n  return (arr[offs+0] &lt;&lt; 24) +\n         (arr[offs+1] &lt;&lt; 16) +\n         (arr[offs+2] &lt;&lt; 8) +\n          arr[offs+3];\n}\n\nfunction getWordAt ( arr, offs ) {\n  return (arr[offs+0] &lt;&lt; 8) +\n          arr[offs+1];\n}\n\n'\\\\u' + getWordAt( stringToBytes( \"A\\u1242\" ), 1 ).toString(16);  // \"1242\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>How did you get the binary data into the string in the first place? How the binary data gets encoded into a string is an IMPORTANT consideration, and you need an answer to that question before you can proceed.</p>\n\n<p>One way I know of to get binary data into a string, is to use the XHR object, and set it to expect UTF-16. </p>\n\n<p>Once it's in utf-16, you can retrieve 16-bit numbers from the string using <code>\"....\".charCodeAt(0)</code></p>\n\n<p>which will be a number between 0 and 65535</p>\n\n<p>Then, if you like, you can convert that number into two numbers between 0 and 255 like this:</p>\n\n<pre><code>var leftByte = mynumber&gt;&gt;&gt;8;\nvar rightByte = mynumber&amp;255;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Borgar's answer seems correct.</p>\n\n<p>Just wanted to clarify one point.  Javascript treats bitwise operations as '32-bit signed int's, where the last (left-most) bit is the sign bit.  Ie,</p>\n\n<pre><code>getIntAt([0x7f,0,0,0],0).toString(16)  //  \"7f000000\"\n\ngetIntAt([0x80,0,0,0],0).toString(16)  // \"-80000000\"\n</code></pre>\n\n<p>However, for octet-data processing (eg, network stream, etc), usually want the 'unsigned int' representation.  This can be accomplished by adding a '>>> 0' (zero-fill right-shift) operator which internally tells Javascript to treat this as unsigned.</p>\n\n<pre><code>function getUIntAt ( arr, offs ) {\n  return (arr[offs+0] &lt;&lt; 24) +\n         (arr[offs+1] &lt;&lt; 16) +\n         (arr[offs+2] &lt;&lt; 8) +\n          arr[offs+3] &gt;&gt;&gt; 0;\n}\n\ngetUIntAt([0x80,0,0,0],0).toString(16)   // \"80000000\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Borga's solution works perfectly. In case you want a more concrete implementation, you may want to have a look at the <a href=\"http://blog.vjeux.com/2010/javascript/javascript-binary-reader.html\">BinaryReader class from vjeux</a> (which, for the records, is based on the <a href=\"http://jsfromhell.com/classes/binary-parser\">binary-parser class from Jonas Raoni Soares Silva</a>).</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>There are two methods for encoding and decoding utf-8 string to a byte array and back.</p>\n\n<pre><code>var utf8 = {}\n\nutf8.toByteArray = function(str) {\n    var byteArray = [];\n    for (var i = 0; i &lt; str.length; i++)\n        if (str.charCodeAt(i) &lt;= 0x7F)\n            byteArray.push(str.charCodeAt(i));\n        else {\n            var h = encodeURIComponent(str.charAt(i)).substr(1).split('%');\n            for (var j = 0; j &lt; h.length; j++)\n                byteArray.push(parseInt(h[j], 16));\n        }\n    return byteArray;\n};\n\nutf8.parse = function(byteArray) {\n    var str = '';\n    for (var i = 0; i &lt; byteArray.length; i++)\n        str +=  byteArray[i] &lt;= 0x7F?\n                byteArray[i] === 0x25 ? \"%25\" : // %\n                String.fromCharCode(byteArray[i]) :\n                \"%\" + byteArray[i].toString(16).toUpperCase();\n    return decodeURIComponent(str);\n};\n\n// sample\nvar str = \"\u0414\u0430!\";\nvar ba = utf8.toByteArray(str);\nalert(ba);             // 208, 148, 208, 176, 33\nalert(ba.length);      // 5\nalert(utf8.parse(ba)); // \u0414\u0430!\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>borgars solution <strong>improvement</strong>:<br></p>\n\n<pre><code>...\ndo {\n      st.unshift( ch &amp; 0xFF );  // push byte to stack\n      ch = ch &gt;&gt; 8;          // shift value down by 1 byte\n    }  \n    while ( ch );\n    // add stack contents to result\n    // done because chars have \"wrong\" endianness\n    re = re.concat( st );\n...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>While <a href=\"http://stackoverflow.com/questions/1240408/reading-bytes-from-a-javascript-string/8639991#answer-1242596\">@Borgar</a> answers the question correctly, his solution is pretty slow. It took me a while to track it down (I used his function somewhere in a larger project), so I thought I would share my insight.</p>\n\n<p>I ended up having something like <a href=\"http://stackoverflow.com/questions/1240408/reading-bytes-from-a-javascript-string/8639991#answer-4528265\">@Kadm</a>. It's not some little percent faster, it's like 500 times faster (no exaggeration!). I wrote a <a href=\"http://langweiligeszeug.tumblr.com/post/14830476496/stringtobytes-javascript-performance\">little benchmark</a>, so you can see it for yourself :)</p>\n\n<pre><code>function stringToBytesFaster ( str ) { \nvar ch, st, re = [], j=0;\nfor (var i = 0; i &lt; str.length; i++ ) { \n    ch = str.charCodeAt(i);\n    if(ch &lt; 127)\n    {\n        re[j++] = ch &amp; 0xFF;\n    }\n    else\n    {\n        st = [];    // clear stack\n        do {\n            st.push( ch &amp; 0xFF );  // push byte to stack\n            ch = ch &gt;&gt; 8;          // shift value down by 1 byte\n        }\n        while ( ch );\n        // add stack contents to result\n        // done because chars have \"wrong\" endianness\n        st = st.reverse();\n        for(var k=0;k&lt;st.length; ++k)\n            re[j++] = st[k];\n    }\n}   \n// return an array of bytes\nreturn re; \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>One nice and quick hack is to use a combination of encodeURI and unescape :</p>\n\n<pre><code>t=[]; \nfor(s=unescape(encodeURI(\"za\u017c\u00f3\u0142\u0107 g\u0119\u015bl\u0105 ja\u017a\u0144\")),i=0;i&lt;s.length;++i)\n  t.push(s.charCodeAt(i));\nt\n\n[122, 97, 197, 188, 195, 179, 197, 130, 196, 135, 32, 103, 196, 153, 197, 155, 108, 196, 133, 32, 106, 97, 197, 186, 197, 132]\n</code></pre>\n\n<p>Perhaps some explanation is necessary why the heck it works, so let me split it into steps:</p>\n\n<pre><code> encodeURI(\"za\u017c\u00f3\u0142\u0107 g\u0119\u015bl\u0105 ja\u017a\u0144\")\n</code></pre>\n\n<p>returns </p>\n\n<pre><code> \"za%C5%BC%C3%B3%C5%82%C4%87%20g%C4%99%C5%9Bl%C4%85%20ja%C5%BA%C5%84\"\n</code></pre>\n\n<p>which -- if you look closely -- is the original string in which all characters with values>127 got replaced with (possibly more than one) hexadecimal bytes representations.\nFor example letter \"\u017c\" became \"%C5%BC\". The fact is encodeURI escapes also some regular ascii characters like spaces, but it does not matter. What matters is that at this point each byte of the original string is either represented verbatim (as is the case with \"z\", \"a\", \"g\", or \"j\") or as a percent-encoded sequence of bytes (as was the case with \"\u017c\" which was originaly two bytes 197 and 188 and got converted to %C5 and %BC).</p>\n\n<p>Now, we apply unescape:</p>\n\n<pre><code>unescape(\"za%C5%BC%C3%B3%C5%82%C4%87%20g%C4%99%C5%9Bl%C4%85%20ja%C5%BA%C5%84\")\n</code></pre>\n\n<p>which gives </p>\n\n<pre><code>\"za\u00c5\u00bc\u00c3\u00b3\u00c5\u00c4 g\u00c4\u00c5l\u00c4 ja\u00c5\u00ba\u00c5\"\n</code></pre>\n\n<p>If you are not native Polish speaker you might not notice, that this result is in fact way different from the original \"za\u017c\u00f3\u0142\u0107 g\u0119\u015bl\u0105 ja\u017a\u0144\". For starters, it has a different number of characters :)\nFor sure, you can tell, that this strange versions of big letter A do not belong to standard ascii set. In fact this \"\u00c5\" has value 197. (which is exactly C5 in hexadecimal).</p>\n\n<p>Now, if you are like me, you would ask yourself: wait a minute...if this is really a sequence of bytes with values 122, 97, 197, 188, and JS is really using UTF then why do I see this \"\u00c5\u00bc\" characters, and not the original \"\u017c\" ?</p>\n\n<p>Well, the thing is (I belive) that this sequence 122, 97, 197, 188 (which we see when applying charCodeAt) is not a sequence of <em>bytes</em>, but a sequence of <em>codes</em>. The character \"\u00c5\" has a code 197, but its actually two bytes long sequence: C3 85.</p>\n\n<p>So, the trick works because unescape treats numbers occuring in percent-encoded string as codes, not as byte values - or, to be more specific: unescape knows nothing about multibyte characters, so when it decodes bytes one-by-one, handling values lower than 128 just great, but not-so-good when they are above 127 and multibyte -- unescape in such cases simply returns a multibyte character which happens to have a code equal to the requested byte value. This \"bug\" is actually useful feature.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a string containing binary data in JavaScript. Now I want to read, for example, an integer from it. So I get the first 4 characters, use <code>charCodeAt</code>, do some shifting, etc. to get an integer.</p>\n\n<p>The problem is that strings in JavaScript are UTF-16 (instead of ASCII) and <code>charCodeAt</code> often returns values higher than 256. </p>\n\n<p>The <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String/charCodeAt\">Mozilla reference</a> states that \"The first 128 Unicode code points are a direct match of the ASCII character encoding.\" (what about ASCII values > 128?).</p>\n\n<p>How can I convert the result of <code>charCodeAt</code> to an ASCII value? Or is there a better way to convert a string of four characters to a 4 byte integer?</p>\n",
            "last_activity_date": 1380301872,
            "question_id": 1240408,
            "score": 27,
            "tags": [
                "javascript"
            ],
            "title": "Reading bytes from a JavaScript string"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<pre><code>&lt;select disabled=\"disabled\"&gt;\n    ....\n&lt;/select&gt;\n&lt;input type=\"hidden\" name=\"select_name\" value=\"selected value\" /&gt;\n</code></pre>\n\n<p>Where <code>select_name</code> is the name that you would normally give the <code>&lt;select&gt;</code>.</p>\n\n<p>Another option.</p>\n\n<pre><code>&lt;select name=\"myselect\" disabled=\"disabled\"&gt;\n    &lt;option value=\"myselectedvalue\" selected=\"selected\"&gt;My Value&lt;/option&gt;\n    ....\n&lt;/select&gt;\n&lt;input type=\"hidden\" name=\"myselect\" value=\"myselectedvalue\" /&gt;\n</code></pre>\n\n<p>Now with this one, I have noticed that depending on what webserver you are using, you may have to put the <code>hidden</code> input either before, or after the <code>&lt;select&gt;</code>.</p>\n\n<p>If my memory serves me correctly, with IIS, you put it before, with Apache you put it after. As always, testing is key.</p>\n",
                    "is_accepted": true,
                    "score": 49
                },
                {
                    "body": "<p>Or use some JavaScript to change the name of the select and set it to disabled. This way the select is still submitted, but using a name you aren't checking.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Disable the fields and then enable them before the form is submitted:</p>\n\n<p>jQuery code:</p>\n\n<pre><code>jQuery(function($) {\n\n    $('form').bind('submit', function() {\n        $(this).find(':input').removeAttr('disabled');\n    });\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 115
                },
                {
                    "body": "<p>Another option is to use the readonly attribute.</p>\n\n<pre><code>&lt;select readonly=\"readonly\"&gt;\n    ....\n&lt;/select&gt;\n</code></pre>\n\n<p>With readonly the value is still submitted, the input field is grayed out and the user cannot edit it.</p>\n\n<p>Edit:</p>\n\n<p>Quoted from <a href=\"http://www.w3.org/TR/html401/interact/forms.html#adef-readonly\" rel=\"nofollow\">http://www.w3.org/TR/html401/interact/forms.html#adef-readonly</a>: </p>\n\n<ul>\n<li>Read-only elements receive focus but cannot be modified by the user.</li>\n<li>Read-only elements are included in tabbing navigation.</li>\n<li>Read-only elements may be successful.</li>\n</ul>\n\n<p>When it says the element may be succesful, it means it <em>may</em> be submitted, as stated here: <a href=\"http://www.w3.org/TR/html401/interact/forms.html#successful-controls\" rel=\"nofollow\">http://www.w3.org/TR/html401/interact/forms.html#successful-controls</a></p>\n",
                    "is_accepted": false,
                    "score": -7
                },
                {
                    "body": "<p>I found a workable solution: remove all the elements except the selected one. You can then change the style to something that looks disabled as well.\nUsing jQuery:</p>\n\n<pre><code>jQuery(function($) {\n    $('form').submit(function(){\n        $('select option:not(:selected)', this).remove();\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://stackoverflow.com/questions/1191113/disable-select-form-field-but-still-send-the-value/1191365#1191365\">Same solution suggested by Tres</a> without using jQuery</p>\n\n<pre><code>&lt;form onsubmit=\"document.getElementById('mysel').disabled = false;\" action=\"...\" method=\"GET\"&gt;\n\n   &lt;select id=\"mysel\" disabled=\"disabled\"&gt;....&lt;/select&gt;\n\n   &lt;input name=\"submit\" id=\"submit\" type=\"submit\" value=\"SEND FORM\"&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>This might help someone understand more, but obviously is less flexible than the jQuery one.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The easiest way i found was to create a tiny javascript function tied to your form :</p>\n\n<pre><code>function enablePath() {\n    document.getElementById('select_name').disabled= \"\";\n}\n</code></pre>\n\n<p>and you call it in your form here : </p>\n\n<pre><code>&lt;form action=\"act.php\" method=\"POST\" name=\"form_name\" onSubmit=\"enablePath();\"&gt;\n</code></pre>\n\n<p>Or you can call it in the function you use to check your form :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I`ve been looking for a solution for this, and since i didnt find a solution in this thread i did my own.</p>\n\n<pre><code>// With jQuery\n$('#selectbox').focus(function(e) {\n    $(this).blur();\n});\n</code></pre>\n\n<p>Simple, you just blur the field when you focus on it, something like disabling it, but you actually send its data.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I use next code for disable options in selections</p>\n\n<pre><code>&lt;select class=\"sel big\" id=\"form_code\" name=\"code\" readonly=\"readonly\"&gt;\n   &lt;option value=\"user_played_game\" selected=\"true\"&gt;1 Game&lt;/option&gt;\n   &lt;option value=\"coins\" disabled=\"\"&gt;2 Object&lt;/option&gt;\n   &lt;option value=\"event\" disabled=\"\"&gt;3 Object&lt;/option&gt;\n   &lt;option value=\"level\" disabled=\"\"&gt;4 Object&lt;/option&gt;\n   &lt;option value=\"game\" disabled=\"\"&gt;5 Object&lt;/option&gt;\n&lt;/select&gt;\n\n// Disable selection for options\n$('select option:not(:selected)').each(function(){\n $(this).attr('disabled', 'disabled');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>it dows not work with the :input selector for select fields, use this:</p>\n\n<pre><code>    jQuery(function() {\n\n    jQuery('form').bind('submit', function() {\n        jQuery(this).find(':disabled').removeAttr('disabled');\n    });\n\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just add a line before  submit.</p>\n\n<blockquote>\n  <p>\n  $(\"#XYZ\").removeAttr(\"disabled\");</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I was faced with a slightly different scenario, in that I only wanted to not allow the user to change the selected value based on an earlier selectbox. What I ended up doing was just disabling all the other non-selected options in the selectbox using </p>\n\n<pre><code>$('#toSelect')find(':not(:selected)').attr('disabled','disabled');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I whipped up a quick (Jquery only) plugin, that saves the value in a data field while an input is disabled.\nThis just means as long as the field is being disabled programmaticly through jquery using .prop() or .attr()... then accessing the value by .val(), .serialize() or .serializeArra() will always return the value even if disabled :)</p>\n\n<p>Shameless plug: <a href=\"https://github.com/Jezternz/jq-disabled-inputs\" rel=\"nofollow\">https://github.com/Jezternz/jq-disabled-inputs</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p>this function allows you to switch the property ': disabled' between\n  'true' and 'false'. If you want to keep a certain value put 'disabled'\n  or 'enabled' in the second parameter of the function. It will create\n  an automatic hidden with the same name select when disabling and will\n  destroy it when enabled.</p>\n</blockquote>\n\n<pre><code>function denaggle(obj, keep){\n        keep = (keep == 'undefined')? false : keep;\n        obj = ( typeof obj === 'string' )? $('#'+obj) : obj;\n\n        if(obj.is(':disabled')){\n            if(keep !== 'disabled'){\n                obj.prop('disabled', false);\n                $(\"#hidden_\"+obj.attr('id')).remove();\n            }\n        }else{\n            if(keep !== 'enabled'){\n                obj.prop('disabled', true);\n                obj.after(\"&lt;input type='hidden' id='hidden_\"+obj.attr('id')+\"' name='\"+obj.attr('name')+\"' value='\"+obj.val()+\"'&gt;\");\n            }\n        }\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a <code>select</code> form field that I want to mark as \"readonly\", as in the user cannot modify the value, but the value is still submitted with the form.  Using the <code>disabled</code> attribute prevents the user from changing the value, but does not submit the value with the form.</p>\n\n<p>The <code>readonly</code> attribute is only available for <code>input</code> and <code>textarea</code> fields, but that's basically what I want.  Is there any way to get that working?</p>\n\n<p>Two possibilities I'm considering include:</p>\n\n<ul>\n<li>Instead of disabling the <code>select</code>, disable all of the <code>option</code>s and use CSS to gray out the select so it looks like its disabled.</li>\n<li>Add an onclick event to the submit button so that it enables all of the disabled dropdown menus before submitting the form.</li>\n</ul>\n",
            "last_activity_date": 1424794865,
            "question_id": 1191113,
            "score": 81,
            "tags": [
                "javascript",
                "html",
                "css",
                "forms"
            ],
            "title": "Disable select form field but still send the value"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Sorry, I read jsp not javascript.  You need to do something like (note that this is a relative url and may be different depending on the url of the document this javascript is in):</p>\n\n<pre><code>document.location = 'path/to/servlet';\n</code></pre>\n\n<p>Where your servlet-mapping in web.xml looks something like this:</p>\n\n<pre><code>&lt;servlet-mapping&gt;\n    &lt;servlet-name&gt;someServlet&lt;/servlet-name&gt;\n    &lt;url-pattern&gt;/path/to/servlet*&lt;/url-pattern&gt;\n&lt;/servlet-mapping&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I really recommend you use <a href=\"http://jquery.com/\" rel=\"nofollow\">jquery</a> for the javascript calls and some implementation of JSR311 like <a href=\"http://jersey.java.net/\" rel=\"nofollow\">jersey</a> for the service layer, which would delegate to your controllers. </p>\n\n<p>This will help you with all the underlying logic of handling the HTTP calls and your data serialization, which is a big help.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>So you want to fire <a href=\"http://www.w3schools.com/ajax/\">Ajax</a> calls to the servlet? For that you need the <a href=\"https://developer.mozilla.org/en/XMLHttpRequest\"><code>XMLHttpRequest</code></a> object in JavaScript. Here's a Firefox compatible example:</p>\n\n<pre><code>&lt;script&gt;\n    var xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = function() {\n        if (xhr.readyState == 4) {\n            var data = xhr.responseText;\n            alert(data);\n        }\n    }\n    xhr.open('GET', 'myservlet', true);\n    xhr.send(null);\n&lt;/script&gt;\n</code></pre>\n\n<p>This is however very verbose and not really crossbrowser compatible. For the best crossbrowser compatible way of firing ajaxical requests and traversing the HTML DOM tree, I recommend to grab <a href=\"http://jquery.com\">jQuery</a>. Here's a rewrite of the above in jQuery:</p>\n\n<pre><code>&lt;script src=\"http://code.jquery.com/jquery-latest.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n    $.get('myservlet', function(data) {\n        alert(data);\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>Either way, the Servlet on the server should be mapped on an <code>url-pattern</code> of <code>/myservlet</code> (you can change this to your taste) and have at least <a href=\"http://java.sun.com/javaee/5/docs/api/javax/servlet/http/HttpServlet.html#doGet%28javax.servlet.http.HttpServletRequest,%20javax.servlet.http.HttpServletResponse%29\"><code>doGet()</code></a> implemented and write the data to the response as follows:</p>\n\n<pre><code>String data = \"Hello World!\";\nresponse.setContentType(\"text/plain\");\nresponse.setCharacterEncoding(\"UTF-8\");\nresponse.getWriter().write(data);\n</code></pre>\n\n<p>This should show <code>Hello World!</code> in the JavaScript alert.</p>\n\n<p>You can of course also use <a href=\"http://java.sun.com/javaee/5/docs/api/javax/servlet/http/HttpServlet.html#doPost%28javax.servlet.http.HttpServletRequest,%20javax.servlet.http.HttpServletResponse%29\"><code>doPost()</code></a>, but then you should use <code>'POST'</code> in <code>xhr.open()</code> or use <a href=\"http://api.jquery.com/jQuery.post/\"><code>$.post()</code></a> instead of <a href=\"http://api.jquery.com/jQuery.get/\"><code>$.get()</code></a> in jQuery.</p>\n\n<p>Then, to show the data in the HTML page, you need to manipulate the <a href=\"http://www.w3schools.com/htmldom/\">HTML DOM</a>. For example, you have a </p>\n\n<pre><code>&lt;div id=\"data\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>in the HTML where you'd like to display the response data, then you can do so instead of <code>alert(data)</code> of the 1st example:</p>\n\n<pre><code>document.getElementById(\"data\").firstChild.nodeValue = data;\n</code></pre>\n\n<p>In the jQuery example you could do this in a more concise and nice way:</p>\n\n<pre><code>$('#data').text(data);\n</code></pre>\n\n<p>To go some steps further, you'd like to have an easy accessible data format to transfer more complex data. Common formats are XML and JSON. The last one is most preferred since it's more concise and can be used in both Java and JavaScript on a very easy manner. In Java, you can use <a href=\"http://code.google.com/p/google-gson/\">Google Gson</a> to convert fullworthy Java objects to JSON and vice versa. </p>\n\n<pre><code>List&lt;Product&gt; products = productDAO.list(); // Product is just a Javabean with properties `id`, `name` and `description`.\nString json = new Gson().toJson(products);\nresponse.setContentType(\"application/json\");\nresponse.setCharacterEncoding(\"UTF-8\");\nresponse.getWriter().write(json);\n</code></pre>\n\n<p>In JavaScript you can use jQuery's <a href=\"http://api.jquery.com/jQuery.getJSON/\"><code>$.getJSON()</code></a> to get it \"instantly\". Let's display it in a <code>&lt;table&gt;</code>.</p>\n\n<pre><code>$.getJSON('myservlet', function(data) {\n    var table = $('&lt;table&gt;').appendTo($('#data'));\n    $.each(data, function(i, product) {\n        var row = $('&lt;tr&gt;').appendTo(table);\n        $('&lt;td&gt;').text(product.id).appendTo(row);\n        $('&lt;td&gt;').text(product.name).appendTo(row);\n        $('&lt;td&gt;').text(product.description).appendTo(row);\n    });\n});\n</code></pre>\n\n<p><strong>See also</strong>:</p>\n\n<ul>\n<li><a href=\"http://balusc.blogspot.com/2009/05/javajspjsf-and-javascript.html\">Java/JSP/JSF and JavaScript</a></li>\n<li><a href=\"http://www.hunlock.com/blogs/Essential_Javascript_--_A_Javascript_Tutorial\">JavaScript tutorial</a></li>\n<li><a href=\"http://www.hunlock.com/blogs/Mastering_JSON_%28_JavaScript_Object_Notation_%29\">JSON tutorial</a></li>\n<li><a href=\"http://docs.jquery.com/Tutorials\">jQuery tutorials</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>The code here will use AJAX to print text to an HTML5 document dynamically\n(Ajax code is similar to book Internet &amp; WWW (Deitel)):</p>\n\n<h1>Javascript code:</h1>\n\n<pre><code>var asyncRequest;    \nfunction start(){\n    try\n    {\n        asyncRequest = new XMLHttpRequest();\n        asyncRequest.addEventListener(\"readystatechange\", stateChange, false);\n        asyncRequest.open('GET', '/Test', true);    //   /Test is url to Servlet!\n        asyncRequest.send(null);\n    }\n    catch(exception)\n   {\n    alert(\"Request failed\");\n   }\n}\n\nfunction stateChange(){\nif(asyncRequest.readyState == 4 &amp;&amp; asyncRequest.status == 200)\n    {\n    var text = document.getElementById(\"text\");         //  text is an id of a \n    text.innerHTML = asyncRequest.responseText;         //  div in HTML document\n    }\n}\n\nwindow.addEventListener(\"load\", start(), false);\n</code></pre>\n\n<h1>Servlet java code:</h1>\n\n<pre><code>public class Test extends HttpServlet{\n@Override\npublic void doGet(HttpServletRequest req, HttpServletResponse resp)\n    throws IOException{\n        resp.setContentType(\"text/plain\");\n        resp.getWriter().println(\"Servlet wrote this! (Test.java)\");\n    }\n}\n</code></pre>\n\n<h1>HTML document</h1>\n\n<pre><code> &lt;div id = \"text\"&gt;&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to create a web application using the MVC design pattern. For the GUI part I would like to use JavaScript. And for the controller Java Servlets.</p>\n\n<p>Now I have never really worked with JavaScript, so I'm having a hard time figuring out how to call a Java Servlet from JavaScript and how to get the response from the Servlet. </p>\n\n<p>Can anybody help me out?</p>\n",
            "last_activity_date": 1417718307,
            "question_id": 3028490,
            "score": 16,
            "tags": [
                "java",
                "javascript",
                "ajax",
                "web-applications",
                "servlets"
            ],
            "title": "calling a java servlet from javascript"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p><code>.attr('readonly', 'readonly')</code> should do the trick. Your <code>.attr('readonly')</code> only returns the value, it doesn't set one.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>jQuery &lt;1.9</p>\n\n<pre><code>$('#inputId').attr('readonly', true);\n</code></pre>\n\n<p>jQuery 1.9+</p>\n\n<pre><code>$('#inputId').prop('readonly', true);\n</code></pre>\n\n<p>Read more about <a href=\"http://stackoverflow.com/q/5874652/340046\">difference between prop and attr</a></p>\n",
                    "is_accepted": true,
                    "score": 201
                },
                {
                    "body": "<p>I think \"disabled\" excludes the input from being sent on the POST</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>For enabling readonly:</p>\n\n<pre><code>$(\"#descrip\").attr(\"readonly\",\"true\");\n</code></pre>\n\n<p>For disabling readonly </p>\n\n<pre><code>$(\"#descrip\").attr(\"readonly\",\"\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can disable the readonly by using the .removeAttr;</p>\n\n<pre><code>$('#descrip').removeAttr('readonly');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Use <a href=\"http://api.jquery.com/prop/\">$.prop()</a></p>\n\n<pre><code>$(\"#descrip\").prop(\"readonly\",true);\n\n$(\"#descrip\").prop(\"readonly\",false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 116
                },
                {
                    "body": "<p>Readonly is an attribute as defined in html, so treat it like one. </p>\n\n<p>You need to have something like readonly=\"readonly\" in the object you are working with if you want it not to be editable.\nAnd if you want it to be editable again you won't have something like readonly='' (this is not standard if I understood correctly). You really need to remove the attribute as a whole.</p>\n\n<p>As such, while using jquery adding it and removing it is what makes sense.</p>\n\n<p>Set something readonly:</p>\n\n<pre><code>$(\"#someId\").attr('readonly', 'readonly');\n</code></pre>\n\n<p>Remove readonly:</p>\n\n<pre><code>$(\"#someId\").removeAttr('readonly');\n</code></pre>\n\n<p>This was the only alternative that really worked for me.\nHope it helps!</p>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>How can i add \"readonly\" to a specific <code>&lt;input &gt;</code>? .attr('readonly') does not work.</p>\n",
            "last_activity_date": 1417711277,
            "question_id": 1306708,
            "score": 121,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "add &quot;readonly&quot; to &lt;input &gt; (jQuery)"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Recalculate the length each time through the loop instead of just at the outset, e.g.:</p>\n\n<pre><code>for (i = 0; i &lt; Auction.auctions.length; i++) {\n      auction = Auction.auctions[i];\n      Auction.auctions[i]['seconds'] --;\n      if (auction.seconds &lt; 0) { \n          Auction.auctions.splice(i, 1);\n          i--; //decrement\n      }\n}\n</code></pre>\n\n<p>That way you won't exceed the bounds.</p>\n\n<p>EDIT: added a decrement in the if statement.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>The array is being re-indexed when you do a <code>.splice()</code>, which means you'll skip over an index when one is removed, and your cached <code>.length</code> is obsolete.</p>\n\n<p>To fix it, you'd either need to decrement <code>i</code> after a <code>.splice()</code>, or simply iterate in reverse...</p>\n\n<pre><code>var i = Auction.auctions.length\nwhile (i--) {\n    ....\n}\n</code></pre>\n\n<p>This way the re-indexing doesn't affect the next item in the iteration, since the indexing affects only the items from the current point to the end of the Array, and the next item in the iteration is lower than the current point.</p>\n",
                    "is_accepted": true,
                    "score": 209
                },
                {
                    "body": "<p>Although your question is about deleting elements from <strong>the array being iterated upon</strong> and not about removing elements (in addition to some other processing) efficiently, I think one should reconsider it if in similar situation.</p>\n\n<p>The algorithmic complexity of this approach is <code>O(n^2)</code> as splice function and the for loop both iterate over the array (splice function shifts all elements of array in the worst case). Instead you can just push the required elements to the new array and then just assign that array to the desired variable (which was just iterated upon).</p>\n\n<pre><code>var newArray = [];\nfor (var i = 0, len = Auction.auctions.length; i &lt; len; i++) {\n    auction = Auction.auctions[i];\n    auction.seconds--;\n    if (!auction.seconds &lt; 0) { \n        newArray.push(auction);\n    }\n}\nAuction.auctions = newArray;\n</code></pre>\n\n<p>Also you can use the array functions introduced in <code>ECMAScript 5</code> (Not sure about the version :( ).</p>\n\n<pre><code>Auction.auctions = Auction.auctions.filter(function(auction) {\n    return --auction.seconds &gt;=0;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>Auction.auction = Auction.auctions.filter(function(el) {\n  return --el[\"seconds\"] &gt; 0;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is a pretty common issue. The solution is to loop backwards:</p>\n\n<pre><code>for (var i = Auction.auctions.length - 1; i &gt;= 0; i--) {\n    Auction.auctions[i].seconds--;\n    if (Auction.auctions[i].seconds &lt; 0) { \n        Auction.auctions.splice(i, 1);\n    }\n}\n</code></pre>\n\n<p>It doesn't matter if you're popping them off of the end because the indices will be preserved as you go backwards.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have the following for loop, and when I use splice() to remove an item, I then get that 'seconds' is undefined.  I could check if it's undefined, but I feel there's probably a more elegant way to do this.  The desire is to simply delete an item and keep on going.  </p>\n\n<pre><code> for (i = 0, len = Auction.auctions.length; i &lt; len; i++) {\n            auction = Auction.auctions[i];\n            Auction.auctions[i]['seconds'] --;\n            if (auction.seconds &lt; 0) { \n                Auction.auctions.splice(i, 1);\n            }\n\n        }\n</code></pre>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1422071357,
            "question_id": 9882284,
            "score": 88,
            "tags": [
                "javascript",
                "jquery",
                "loops"
            ],
            "title": "Looping through array and removing items, without breaking for loop"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>var employees = {\n    accounting: []\n};\n\nfor(var i in someData) {\n\n    var item = someData[i];\n\n    employees.accounting.push({ \n        \"firstName\" : item.firstName,\n        \"lastName\"  : item.lastName,\n        \"age\"       : item.age \n    });\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 88
                },
                {
                    "body": "<pre><code>var accounting = [];\nvar employees = {};\n\nfor(var i in someData) {\n\n    var item = someData[i];\n\n   accounting.push({ \n        \"firstName\" : item.firstName,\n        \"lastName\"  : item.lastName,\n        \"age\"       : item.age \n    });\n}\n\nemployees.accounting = accounting;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I am trying the create the following</p>\n\n<pre><code>var employees = {\"accounting\": [   // accounting is an array in employees.\n                    { \"firstName\" : \"John\",  // First element\n                      \"lastName\"  : \"Doe\",\n                      \"age\"       : 23 },\n\n                    { \"firstName\" : \"Mary\",  // Second Element\n                      \"lastName\"  : \"Smith\",\n                      \"age\"       : 32 }\n                  ] // End \"accounting\" array.                                  \n\n    } // End Employees\n</code></pre>\n\n<p>I started with</p>\n\n<pre><code> var employees=new Array();\n</code></pre>\n\n<p>How do I continue to create the array dynamically(might change firstName with variable)? I don't seem to get the nested array right.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1395436050,
            "question_id": 2250953,
            "score": 44,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "How do I create Javascript array(JSON format) dynamically?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I suggest putting it all into one file, which you can then minify and gzip.  The client will only have to download it once, as it'll be cached on all subsequent requests.</p>\n\n<p>Another thing that might interest you is sprockets, a javascript dependency manager, which you can install using gem.  You can get more information on sprockets from the website (<a href=\"http://getsprockets.org/\">http://getsprockets.org/</a>) or from the github page (<a href=\"http://wiki.github.com/sstephenson/sprockets\">http://wiki.github.com/sstephenson/sprockets</a>).  It makes writing big javascript applications much more manageable.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Load the main JavaScript in application.js every time. Now create files for different needs. Create a form.js file, a myfancypart.js file etc. Don't load them in the application.html.erb layout. Load them dynamically when you need them:</p>\n\n<p>application.html.erb:</p>\n\n<pre><code>&lt;%= javascript_include_tag \"application\" %&gt;\n&lt;%= yield :javascript_includes %&gt;\n</code></pre>\n\n<p>top of your view.html.erb:</p>\n\n<pre><code>&lt;% content_for :javascript_includes do %&gt;\n  &lt;%= javascript_include_tag \"forms.js\" %&gt;\n&lt;% end %&gt;\n</code></pre>\n\n<p>Everything in the content_for block will be loaded at yield :javascript_includes.</p>\n",
                    "is_accepted": true,
                    "score": 73
                },
                {
                    "body": "<p>One can use Jammit to include css and javascripts files</p>\n\n<p>for detail: <a href=\"http://documentcloud.github.com/jammit/\" rel=\"nofollow\">http://documentcloud.github.com/jammit/</a></p>\n\n<p>Use:</p>\n\n<p><b> step 1:</b></p>\n\n<p>Add js-files in assets.yml (see code below) </p>\n\n<p>javascripts:</p>\n\n<pre><code>footer:\n\n- app/javascripts/lib/*.js\n- app/javascripts/jquery-plugins/*.js\n- app/javascripts/custom/*.js\n- app/javascripts/application.js\n</code></pre>\n\n<p>header:</p>\n\n<pre><code>- app/javascripts/core/*.js\n- app/javascripts/head/*.js\n</code></pre>\n\n<p><b>step 2:</b></p>\n\n<p>Add simple code in application layout: </p>\n\n<pre><code>&lt;%= include_javascripts :header %&gt;\n&lt;%= include_javascripts :footer %&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This changes with Rails 3.1 and the asset pipeline!!!</p>\n\n<p>Separate files are best as you indicate.\nThe issues about how to reference them all and link them goes away with rails 3.1 which aims to compile them all into single files for production.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>maybe you want to use application_helper</p>\n\n<pre><code>def javascript(*files)\n  content_for(:head) { javascript_include_tag(*files) }\nend\n\ndef stylesheet(*files)\n  content_for(:head) { stylesheet_link_tag(*files) }\nend\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>As per 'unobtrusive JavaScript' recommendations I want to separate my JavaScript logic into<br />\nseparate files. However I don't know how to organize them. </p>\n\n<p>Should I:</p>\n\n<ol>\n<li>Just throw all application javascript into Application.js file and load it with layout page? This is simple approach but I will end up with a bloated Application.js. Some users might want to visit only a couple of pages, but this entire file would preloaded which is not good.</li>\n<li>Or should I create a separate javaScript file for each view and load them independently? This creates a set of questions. How to link each js file to corresponding view? </li>\n</ol>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1395269503,
            "question_id": 602147,
            "score": 31,
            "tags": [
                "javascript",
                "ruby-on-rails",
                "ruby"
            ],
            "title": "JavaScript file per view in Rails"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Use the fall-through feature of the <code>switch</code> statement. A matched case will run until a <code>break</code> (or the end of the <code>switch</code> statement) is found, so you could write it like:</p>\n\n<pre><code>switch (varName)\n{\n   case \"afshin\":\n   case \"saeed\":\n   case \"larry\": \n       alert('Hey');\n       break;\n\n   default: \n       alert('Default case');\n       break;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 252
                },
                {
                    "body": "<p>In Js for assign multiple cases in switch We have to define <code>different case without break</code> like given below:</p>\n\n<pre><code>   &lt;script type=\"text/javascript\"&gt;\n      function checkHere(varName){\n        switch (varName)\n           {\n           case \"saeed\":\n           case \"larry\":\n           case \"afshin\":\n                alert('Hey');\n                break;\n          case \"ss\":\n             alert('ss');\n             break;\n         default:\n             alert('Default case');\n             break;\n       }\n      }\n     &lt;/script&gt;\n</code></pre>\n\n<p>Please see example click on <a href=\"http://jsfiddle.net/kS5M5/\">link</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Here's different approach avoiding the <code>switch</code> statement altogether:</p>\n\n<pre><code>var cases = {\n  afshin: function() { alert('hey'); },\n  _default: function() { alert('default'); }\n};\ncases.larry = cases.saeed = cases.afshin;\n\ncases[ varName ] ? cases[ varName ]() : cases._default();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>You could try this:</p>\n\n<pre><code>if (['afshin', 'saeed', 'larry'].indexOf(varName) !== -1) {\n   alert('Hey');\n} else {\n   alert('Default case');\n}\n</code></pre>\n\n<p>Note that this won't work in older IE browsers, but you could patch things up fairly easily. See the question <a href=\"http://stackoverflow.com/questions/2430000/determine-if-string-is-in-list-in-javascript\">determine if string is in list in javascript</a> for more information.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>you can use the '<strong>in</strong>' operator... <br>\nrelies on the object/hash invocation... <br>\nso its as fast as javascript can be... <br></p>\n\n<pre><code>// assuming you have defined functions f(), g(a) and h(a,b) \n// somewhere in your code\n// you can define them inside the object but... \n// the code becomes hard to read, I prefer this way\n\no = { f1:f, f2:g, f3:h };\n\n// if you use \"STATIC\" code can do:\no['f3']( p1, p2 )\n\n// if your code is someway \"DYNAMIC\", to prevent false invocations\n// m brings the function/method to be invoked (f1, f2, f3)\n// and you can rely on arguments[] to solve any parameter problems\nif ( m in o ) o[m]()\n</code></pre>\n\n<p>Enjoy, ZEE</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need multiple cases in switch statement in JavaScript, Something like:</p>\n\n<pre><code>switch (varName)\n{\n   case \"afshin\", \"saeed\", \"larry\": \n       alert('Hey');\n       break;\n\n   default: \n       alert('Default case');\n       break;\n}\n</code></pre>\n\n<p>How can I do that? If there's no way to do something like that in JavaScript, I want to know an alternative solution that also follows <a href=\"http://c2.com/cgi/wiki?DontRepeatYourself\">DRY concept</a>.</p>\n",
            "last_activity_date": 1420536445,
            "question_id": 13207927,
            "score": 118,
            "tags": [
                "javascript",
                "switch-statement"
            ],
            "title": "Switch statement multiple cases in JavaScript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Try this actually:</p>\n\n<pre><code>$('#textareaID').bind('input propertychange', function() {\n\n      $(\"#yourBtnID\").hide();\n\n      if(this.value.length){\n        $(\"#yourBtnID\").show();\n      }\n});\n</code></pre>\n\n<h1><a href=\"http://jsbin.com/ikeses\">DEMO</a></h1>\n\n<h1><a href=\"http://jsbin.com/uvahep\">DEMO2</a></h1>\n\n<p>That works for any changes you make, typing, cutting, pasting.</p>\n\n<p><strong>EDIT</strong>\nAdded demo2 for new code changes</p>\n",
                    "is_accepted": true,
                    "score": 152
                },
                {
                    "body": "<p>Try this   </p>\n\n<pre><code> $('textarea').trigger('change');\n $(\"textarea\").bind('cut paste', function(e) { });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -7
                },
                {
                    "body": "<p>try this ...</p>\n\n<pre><code>$(\"#txtAreaID\").bind(\"keyup\", function(event, ui) {                          \n\n              // Write your code here       \n });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>bind</code> is deprecated. Use <code>on</code>:</p>\n\n<pre><code>$(\"#textarea\").on('change keyup paste', function() {\n    // your code here\n});\n</code></pre>\n\n<p>Note: The code above will fire multiple times, once for each matching trigger-type. To handle that, do something like this:</p>\n\n<pre><code>var oldVal = \"\";\n$(\"#textarea\").on(\"change keyup paste\", function() {\n    var currentVal = $(this).val();\n    if(currentVal == oldVal) {\n        return; //check to prevent multiple simultaneous triggers\n    }\n\n    oldVal = currentVal;\n    //action to be performed on textarea changed\n    alert(\"changed!\");\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/6bt2g/\"><strong>jsFiddle Demo</strong></a>  </p>\n",
                    "is_accepted": false,
                    "score": 41
                },
                {
                    "body": "<p>You might want to try this (tested on jQuery 2+):</p>\n\n<pre><code>var button = $(\"#buttonId\");\n$(\"#textareaID\").on('keyup',function(e){\n    if(e.target.value === ''){\n        // Textarea has no value\n        button.hide();\n    } else {\n        // Textarea has a value\n        button.show();\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>.delegate</strong> is the only one that is working to me with <em>jQuery JavaScript Library v2.1.1</em></p>\n\n<pre><code> $(document).delegate('#textareaID','change', function() {\n          console.log(\"change!\");\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to capture if any changes happened to <code>&lt;textarea&gt;</code>. Like typing any characters (deleting,backspace) or mouse click and paste or cut.  Is there a jQuery event that can trigger for all those events? </p>\n\n<p>I tried change event, but it triggers the callback only after tabbing out from the component.</p>\n\n<p><strong>Use</strong>: I want to enable a button if a <code>&lt;textarea&gt;</code> contains any text.</p>\n",
            "last_activity_date": 1410860854,
            "question_id": 11338592,
            "score": 65,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui"
            ],
            "title": "How can I bind to the change event of a textarea in jQuery?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>This guy here => <a href=\"http://blog.stevenlevithan.com/archives/date-time-format\" rel=\"nofollow\">http://blog.stevenlevithan.com/archives/date-time-format</a> wrote a <code>format()</code> function for the Javascript's <code>Date</code> object, so it can be used with familiar literal formats.</p>\n\n<p>If you need full featured Date formatting in your app's Javascript, use it. Otherwise if what you want to do is a one off, then concatenating getYear(), getMonth(), getDay() is probably easiest.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It seems that mootools provide Date().format() : <a href=\"http://mootools.net/docs/more/Native/Date\" rel=\"nofollow\">http://mootools.net/docs/more/Native/Date</a></p>\n\n<p>I'm not sure if it worth including just for this particular task though.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Altered piece of code I often use:</p>\n\n<pre><code> Date.prototype.yyyymmdd = function() {\n   var yyyy = this.getFullYear().toString();\n   var mm = (this.getMonth()+1).toString(); // getMonth() is zero-based\n   var dd  = this.getDate().toString();\n   return yyyy + (mm[1]?mm:\"0\"+mm[0]) + (dd[1]?dd:\"0\"+dd[0]); // padding\n  };\n\nd = new Date();\nd.yyyymmdd();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 129
                },
                {
                    "body": "<p>I didn't like adding to the prototype. An alternative would be:</p>\n\n<pre><code>var rightNow = new Date();\nvar res = rightNow.toISOString().slice(0,10).replace(/-/g,\"\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 37
                },
                {
                    "body": "<p>If you don't need a pure JS solution, you can use jQuery UI to do the job like this :</p>\n\n<pre><code>$.datepicker.formatDate('yymmdd', new Date());\n</code></pre>\n\n<p>I usually don't like to import too much libraries. But jQuery UI is so useful, you will probably use it somewhere else in your project.</p>\n\n<p>Visit <a href=\"http://api.jqueryui.com/datepicker/\">http://api.jqueryui.com/datepicker/</a> for more examples</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If you don't mind including an additional (but small) library, <a href=\"http://sugarjs.com/\" rel=\"nofollow\">Sugar.js</a> provides lots of nice functionality for working with <a href=\"http://sugarjs.com/dates\" rel=\"nofollow\">dates</a> in JavaScript.\nTo format a date, use the <a href=\"http://sugarjs.com/api/Date/format\" rel=\"nofollow\">format</a> function:</p>\n\n<pre><code>new Date().format(\"{yyyy}{MM}{dd}\")\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's a compact little function that's easy to read and avoids local variables, which can be time-sinks in JavaScript.  I don't use prototypes to alter standard modules, because it pollutes the namespace and can lead to code that doesn't do what you think it should.</p>\n\n<p>The main function has a stupid name, but it gets the idea across.</p>\n\n<pre><code>function dateToYYYYMMDDhhmmss(date) {\n    function pad(num) {\n        num = num + '';\n        return num.length &lt; 2 ? '0' + num : num;\n    }\n    return date.getFullYear() + '/' +\n        pad(date.getMonth() + 1) + '/' +\n        pad(date.getDate()) + ' ' +\n        pad(date.getHours()) + ':' +\n        pad(date.getMinutes()) + ':' +\n        pad(date.getSeconds());\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I don't like modifying native objects, and I think multiplication is clearer than the string padding the accepted solution.</p>\n\n<pre><code>function yyyymmdd(dateIn) {\n   var yyyy = dateIn.getFullYear();\n   var mm = dateIn.getMonth()+1; // getMonth() is zero-based\n   var dd  = dateIn.getDate();\n   return String(10000*yyyy + 100*mm + dd); // Leading zeros for mm and dd\n}\n\nvar today = new Date();\nconsole.log(yyyymmdd(today));\n</code></pre>\n\n<p>Fiddle: <a href=\"http://jsfiddle.net/gbdarren/Ew7Y4/\" rel=\"nofollow\">http://jsfiddle.net/gbdarren/Ew7Y4/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I ended up doing</p>\n\n<pre><code>var now = new Date();\nvar todayUTC = new Date(Date.UTC(now.getFullYear(), now.getMonth(), now.getDate()));\nreturn todayUTC.toISOString().slice(0, 10).replace(/-/g, '-');\n</code></pre>\n\n<p>This in response to @weberste's comment on @Pierre Guilbert's answer.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here is a little improvement to the answer from <a href=\"https://stackoverflow.com/users/318563/o-o\">https://stackoverflow.com/users/318563/o-o</a></p>\n\n<pre><code>Date.prototype.ddmmyyyy = function(delimiter) {\n    var yyyy = this.getFullYear().toString();\n    var mm = (this.getMonth()+1).toString(); // getMonth() is zero-based\n    var dd  = this.getDate().toString();\n    return (dd[1]?dd:\"0\"+dd[0]) + delimiter + (mm[1]?mm:\"0\"+mm[0]) + delimiter +yyyy  ; // padding\n};\n</code></pre>\n\n<p>Hope to be helpfull for anyone!</p>\n\n<p>:)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use the toISOString function :</p>\n\n<pre><code>var today = new Date();\ntoday.toISOString().substring(0, 10);\n</code></pre>\n\n<p>It will give you a \"yyyy-mm-dd\" format.\nBest regards</p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>I'm trying to use JS to turn a date object into a String in YYYMMDD format.  Is there an easier way than concatenating Date.getYear() Date.getMonth(), and Date.getDay()?</p>\n",
            "last_activity_date": 1425582015,
            "question_id": 3066586,
            "score": 47,
            "tags": [
                "javascript",
                "date"
            ],
            "title": "Get String in YYYYMMDD format from JS date object?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Anyone still hitting this discussion and not finding the answer they were looking for checkout:<br>\n<a href=\"http://dustindiaz.com/rock-solid-addevent\" rel=\"nofollow\">http://dustindiaz.com/rock-solid-addevent</a><br>\nThis is one of the most elegant solutions I found for those of us with restrictions on using the frameworks.</p>\n\n<pre><code> function addEvent(obj, type, fn) {\n\n   if (obj.addEventListener) {\n     obj.addEventListener(type, fn, false);\n     EventCache.add(obj, type, fn);\n   } else if (obj.attachEvent) {\n     obj[\"e\" + type + fn] = fn;\n     obj[type + fn] = function () {\n       obj[\"e\" + type + fn](window.event);\n     }\n     obj.attachEvent(\"on\" + type, obj[type + fn]);\n     EventCache.add(obj, type, fn);\n   } else {\n     obj[\"on\" + type] = obj[\"e\" + type + fn];\n   }\n\n }\n\n var EventCache = function () {\n\n   var listEvents = [];\n   return {\n     listEvents: listEvents,\n     add: function (node, sEventName, fHandler) {\n       listEvents.push(arguments);\n     },\n     flush: function () {\n       var i, item;\n\n       for (i = listEvents.length - 1; i &gt;= 0; i = i - 1) {\n         item = listEvents[i];\n         if (item[0].removeEventListener) {\n           item[0].removeEventListener(item[1], item[2], item[3]);\n         };\n\n         if (item[1].substring(0, 2) != \"on\") {\n           item[1] = \"on\" + item[1];\n         };\n\n         if (item[0].detachEvent) {\n           item[0].detachEvent(item[1], item[2]);\n         };\n\n         item[0][item[1]] = null;\n       };\n     }\n   };\n }();\n\n addEvent(window,'unload',EventCache.flush);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The usage of both is similar, though both take on a slightly different syntax for the event parameter:</p>\n\n<h2>addEventListener (<a href=\"https://developer.mozilla.org/en/DOM/element.addEventListener\">mdn reference</a>):</h2>\n\n<pre><code>obj.addEventListener('click', callback, false);\n\nfunction callback(){ /* do stuff */ }\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en/DOM/DOM_event_reference\">Events list</a> for <code>addEventListener</code>.</p>\n\n<h2>attachEvent (<a href=\"http://msdn.microsoft.com/en-us/library/ie/ms536343(v=vs.85).aspx\">msdn reference</a>):</h2>\n\n<pre><code>obj.attachEvent('onclick', callback);\n\nfunction callback(){ /* do stuff */ }\n</code></pre>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/library/ie/ms533051%28v=vs.85%29.aspx\">Events list</a> for <code>attachEvent</code>.</p>\n\n<h3>Arguments</h3>\n\n<p>For both of the methods the arguments are as follows:<br>\n1. Is the event type.<br>\n2. Is the function to call once the event has been triggered.<br>\n3. <em>(<code>addEventListener</code> only)</em> If true, indicates that the user wishes to initiate <a href=\"https://developer.mozilla.org/en/DOM/element.addEventListener#Syntax\">capture</a>.</p>\n\n<h3>Explanation</h3>\n\n<p>Both methods are used to achieve the same goal of attaching an event to an element.<br>\nThe difference being is that <code>attachEvent</code> can only be used on older <a href=\"http://en.wikipedia.org/wiki/Trident_%28layout_engine%29\">trident</a> rendering engines ( <s>IE5+</s> IE5-8*) and <code>addEventListener</code> is a W3 standard that is implemented in the majority of other browsers (FF, Webkit, Opera, IE9+).</p>\n\n<p>As <a href=\"http://stackoverflow.com/users/1150875/smitty\">Smitty</a> recommended you should take a look at this <a href=\"http://dustindiaz.com/rock-solid-addevent\">Dustin Diaz addEvent</a> for a solid cross browser implementation without the use of a framework.</p>\n\n<p>For solid cross browser event support including normalizations that you won't get with the Diaz solution use a <a href=\"http://en.wikipedia.org/wiki/Comparison_of_JavaScript_frameworks\">framework</a>.</p>\n\n<p>*IE9-10 support both methods, for backwards compatibility.</p>\n\n<p>Thanks to <a href=\"http://stackoverflow.com/users/107783/luke-puplett\">Luke Puplett</a> for pointing out that <code>attachEvent</code> has been removed from IE11.</p>\n",
                    "is_accepted": false,
                    "score": 79
                },
                {
                    "body": "<p>Here's how I would the Javascript for the addEventListener and attachEvent. </p>\n\n<pre><code>function init() {\n\n   if (window.addEventListener) {\n      document.getElementById('handle').addEventListener('click', goSeattleNinja, false);\n      //more event listeners like touch, hover, etc\n\n      } else {\n        // IE before version 9\n        document.getElementById('handle').attachEvent('click', goSeattleNinja );\n      }\n}\n\nfunction goSeattleNinja() {\n         document.getElementById('ninjabox').style.color = 'red';\n         }\n\nwindow.onload = init;\n</code></pre>\n\n<p>Then for the html, I would do something like this. I think hitautodestruct has a better insight on how to do it right.  </p>\n\n<pre><code>&lt;p id=\"handle\"&gt;Click Here to change the color of the ninjatext&lt;/p&gt;\n&lt;p id=\"ninjatext\"&gt;This Color will change&lt;/p&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm wondering how to use <code>addEventListener</code> respectively <code>attachEvent</code> correctly?</p>\n\n<pre><code>window.onload = function (myFunc1) { /* do something */ }\n\nfunction myFunc2() { /* do something */ }\n\nif (window.addEventListener) {\n  window.addEventListener('load', myFunc2, false);\n} else if (window.attachEvent) {\n  window.attachEvent('onload', myFunc2);\n}\n\n // ...\n</code></pre>\n\n<p>or</p>\n\n<pre><code>function myFunc1() { /* do something */ }\n\nif (window.addEventListener) {\n  window.addEventListener('load', myFunc1, false);\n} else if (window.attachEvent) {\n  window.attachEvent('onload', myFunc1);\n}\n\nfunction myFunc2() { /* do something */ }\n\nif (window.addEventListener) {\n  window.addEventListener('load', myFunc2, false);\n} else if (window.attachEvent) {\n  window.attachEvent('onload', myFunc2);\n}\n\n // ...\n</code></pre>\n\n<p>?</p>\n\n<p>Is this cross-browser secure or should I better go with something like this:</p>\n\n<pre><code>function myFunc1(){ /* do something */ }\nfunction myFunc2(){ /* do something */ }\n// ...\n\nfunction addOnloadEvent(fnc){\n  if ( typeof window.addEventListener != \"undefined\" )\n    window.addEventListener( \"load\", fnc, false );\n  else if ( typeof window.attachEvent != \"undefined\" ) {\n    window.attachEvent( \"onload\", fnc );\n  }\n  else {\n    if ( window.onload != null ) {\n      var oldOnload = window.onload;\n      window.onload = function ( e ) {\n        oldOnload( e );\n        window[fnc]();\n      };\n    }\n    else\n      window.onload = fnc;\n  }\n}\n\naddOnloadEvent(myFunc1);\naddOnloadEvent(myFunc2);\n// ...\n</code></pre>\n\n<p>AND: Say <code>myfunc2</code> is for IE 7 only. How to modify the correct/preferred method accordingly?</p>\n\n<p>Thank you so much!</p>\n",
            "last_activity_date": 1424305991,
            "question_id": 2657182,
            "score": 42,
            "tags": [
                "javascript",
                "addeventlistener",
                "attachevent"
            ],
            "title": "Correct usage of addEventListener() / attachEvent()?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>You're certainly not the first. Unfortunately many wireless ISPs have been using this crass and unwelcome approach to compression. It comes from <a href=\"http://www.bytemobile.com/products-applications/web.html\">Bytemobile</a>.</p>\n\n<p>What it does is to have a proxy recompress all images you fetch smaller by default (making image quality significantly worse). Then it crudely injects a script into your document that adds an option to load the proper image for each recompressed image. Unfortunately, since the script is a horribly-written 1990s-style JS, it craps all over your namespace, hijacks your event handlers and stands a high chance of messing up your own scripts.</p>\n\n<p>I don't know of a way to stop the injection itself, short of using HTTPS. But what you could do is detect or sabotage the script. For example, if you add a script near the end of the document (between the 1.2.3.4 script inclusion and the inline script trigger) to neuter the onload hook it uses:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    bmi_SafeAddOnload= function() {};\n&lt;/script&gt;\n</code></pre>\n\n<p>then the script wouldn't run, so your events and DOM would be left alone. On the other hand the initial script would still have littered your namespace with junk, and any markup problems it causes will still be there. Also, the user will be stuck with the recompressed images, unable to get the originals.</p>\n\n<p>You could try just letting the user know:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    if ('bmi_SafeAddOnload' in window) {\n        var el= document.createElement('div');\n        el.style.border= 'dashed red 2px';\n        el.appendChild(document.createTextNode(\n            'Warning. Your wireless ISP is using an image recompression system '+\n            'that will make pictures look worse and which may stop this site '+\n            'from working. There may be a way for you to disable this feature. '+\n            'Please see your internet provider account settings, or try '+\n            'using the HTTPS version of this site.'\n        ));\n        document.body.insertBefore(el, document.body.firstChild);\n    }\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>You can use this on your pages. It still compresses and put everything inline but it wont break scripts like jquery because it will escape everything based on W3C Standards</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n</code></pre>\n\n<p>On your server you can set the cahce control</p>\n\n<pre><code>\"Cache-Control: no-transform\"\n</code></pre>\n\n<p>This will stop <strong>ALL</strong> modifications and present your site as it is!</p>\n\n<p>Reference docs here</p>\n\n<p><a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9.5\" rel=\"nofollow\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9.5</a></p>\n\n<p><a href=\"http://stuartroebuck.blogspot.com/2010/08/official-way-to-bypassing-data.html\" rel=\"nofollow\">http://stuartroebuck.blogspot.com/2010/08/official-way-to-bypassing-data.html</a></p>\n\n<p><a href=\"http://stackoverflow.com/questions/3282373/web-site-exhibits-javascript-error-on-ipad-iphone-under-3g-but-not-under-wifi/3292298#3292298\">Web site exhibits JavaScript error on iPad / iPhone under 3G but not under WiFi</a></p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>You provider might have enabled a Bytemobile Unison feature called \"clientless personalization\". Try accessing the fixed URL <a href=\"http://1.2.3.50/ups/\">http://1.2.3.50/ups/</a> - if it's configured, you will end up on a page which will offer you to disable all feature you don't like. Including Javascript injection.</p>\n\n<p>Good luck!\nAlex.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>BMI js it's not only on Vodafone. Verginmedia UK and T-Mobile UK also gives you this extra feature enabled as default and for free. ;-)\nIn T-mobile it's called \"Mobile Broadband Accelerator\"\nYou can Visit:\n<a href=\"http://accelerator.t-mobile.co.uk\" rel=\"nofollow\">http://accelerator.t-mobile.co.uk</a> \nor\n<a href=\"http://1.2.3.50/\" rel=\"nofollow\">http://1.2.3.50/</a>\nto configure it.</p>\n\n<p>In case the above doesn't apply to you or for some reason it's not an option\nyou could potentially set-up your local proxy (Polipo w/wo Tor)\nThere is also a Firefox addon called \"blocksite\"\nor as more drastic approach reset tcp connection to 1.2.3.0/24:80 on your firewall.\nBut unfortunately that wouldn't fix the damage.</p>\n\n<p>Funny enough T-mobile and Verginmedia mobile/broadband support is not aware about this feature! (2011.10.11)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you are getting it on a site that you own or are developing, then you can simply override the function by setting it to null. This is what worked for me just fine. </p>\n\n<pre><code>bmi_SafeAddOnload = null;\n</code></pre>\n\n<p>As for getting it on other sites you visit, then you could probably open the devtools console and just enter that into there and wipe it out if a page is taking a long time to load. Haven't yet tested that though.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you're writing you own websites, adding a header worked for me:</p>\n\n<pre><code>PHP:\n    Header(\"Cache-Control: no-transform\");\nC#:\n    Response.Cache.SetNoTransforms();\nVB.Net:\n    Response.Cache.SetNoTransforms()\n</code></pre>\n\n<p>Be sure to use it before any data has been sent to the browser.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I found a trick. Just add:</p>\n\n<pre><code>&lt;!--&lt;![--&gt;\n</code></pre>\n\n<p>After:</p>\n\n<pre><code>&lt;html&gt;\n</code></pre>\n\n<p>More information (in German):</p>\n\n<p><a href=\"http://www.programmierer-forum.de/bmi-speedmanager-und-co-deaktivieren-als-webmaster-t292182.htm#3889392\" rel=\"nofollow\">http://www.programmierer-forum.de/bmi-speedmanager-und-co-deaktivieren-als-webmaster-t292182.htm#3889392</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>An effective solution that I found was to edit your hosts file (<code>/etc/hosts</code> on Unix/Linux type systems, <code>C:\\Windows\\System32\\drivers\\etc</code> on Windows) to have:</p>\n\n<pre><code>null 1.2.3.4\n</code></pre>\n\n<p>Which effectively maps all requests to <code>1.2.3.4</code> to <code>null</code>. Tested with my Crazy Johns (owned by Vofafone) mobile broadband. If your provider uses a different IP address for the injected script, just change it to that IP.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>PHP: Header(\"Cache-Control: no-transform\"); Thanks!\nI'm glad I found this page. </p>\n\n<p>That Injector script was messing up my php page source code making me think I made an error in my php coding when viewing the page source. Even though the script was blocked with firefox NoScript add on. It was still messing up my code.\nWell, after that irritating dilemma, I wanted to get rid of it completely and not just block it with adblock or noscript firefox add ons or just on my php page. </p>\n\n<ol>\n<li>STOP http:// 1.2.3.4 Completely in <strong>Firefox</strong>: Get the add on: <strong>Modify\nHeaders</strong>.</li>\n<li>Go to the modify header add on options... now on the Header Tab.</li>\n<li>Select Action: Choose ADD.</li>\n<li>For Header Name type in: cache-control</li>\n<li>For Header Value type in: no-transform</li>\n<li>For Comment type in: Block 1.2.3.4</li>\n<li>Click add... Then click Start.</li>\n</ol>\n\n<p>The 1.2.3.4 script will not be injected into any more pages! yeah!</p>\n\n<p>I no longer see 1.2.3.4 being blocked by NoScript. cause it's not there. yeah.</p>\n\n<p>But I will still add: PHP: Header(\"Cache-Control: no-transform\"); to my php pages.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Header(\"Cache-Control: no-transform\");</p>\n\n<p>use the above php code in your each php file and you will get rid of 1.2.3.4 code injection.</p>\n\n<p>That's all. </p>\n\n<p>I too was suffering from same problem, now it is rectified. Give a try.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I added to <code>/etc/hosts</code></p>\n\n<pre><code>1.2.3.4 localhost\n</code></pre>\n\n<p>Seems to have fixed it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am using a mobile network based internet connection and the source code is being rewritten when they present the site to the end user. </p>\n\n<p>In the localhost my website looks fine, but when I browse the site from the remote server via the mobile network connection the site looks bad. </p>\n\n<p>Checking the source code I found a piece of JavaScript code is being injected to my pages which is disabling the some CSS that makes site look bad.</p>\n\n<p>I don't want image compression or bandwidth compression instead of my well-designed CSS. </p>\n\n<p>How can I prevent or stop the mobile network provider (Vodafone in this case) from proxy injecting their JavaScript into my source code?</p>\n",
            "last_activity_date": 1425344997,
            "question_id": 4113268,
            "score": 39,
            "tags": [
                "javascript",
                "proxy"
            ],
            "title": "Stop mobile network proxy from injecting JavaScript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Is <a href=\"http://www.svendtofte.com/code/curried_javascript/\" rel=\"nofollow\">curried javascript</a> what you're looking for?</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you use Dojo you just call dojo.hitch() that does almost exactly what you want. Almost &mdash; because it can be used to pack the context as well. But your example is first:</p>\n\n<pre><code>dojo.hitch(out, \"hello\")(\"world\");\ndojo.hitch(out, \"hello\", \"world\")();\n</code></pre>\n\n<p>As well as:</p>\n\n<pre><code>var A = {\n  sep: \", \",\n  out: function(a, b){ console.log(a + this.sep + b); }\n};\n\n// using functions in context    \ndojo.hitch(A, A.out, \"hello\")(\"world\");\ndojo.hitch(A, A.out, \"hello\", \"world\")();\n\n// using names in context\ndojo.hitch(A, \"out\", \"hello\")(\"world\");\ndojo.hitch(A, \"out\", \"hello\", \"world\")();\n</code></pre>\n\n<p>dojo.hitch() is the part of the Dojo Base, so as soon as you included dojo.js it is there for you.</p>\n\n<p>Another general facility is available in dojox.lang.functional.curry module (documented in <a href=\"http://lazutkin.com/blog/2008/jan/12/functional-fun-javascript-dojo/\" rel=\"nofollow\">Functional fun in JavaScript with Dojo</a> &mdash; just look on this page for \"curry\"). Specifically you may want to look at curry(), and partial().</p>\n\n<p>curry() accumulates arguments (like in your example) but with one difference: as soon as the arity is satisfied it calls the function returning the value. Implementing your example:</p>\n\n<pre><code>df.curry(out)(\"hello\")(\"world\");\ndf.curry(out)(\"hello\", \"world\");\n</code></pre>\n\n<p>Notice that the last line doesn't have \"()\" at the end &mdash; it is called automatically.</p>\n\n<p>partial() allows to replace arguments at random:</p>\n\n<pre><code>df.partial(out, df.arg, \"world\")(\"hello\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>**\nEDIT: See Jason Bunting's response. This answer actually shows a sub-par way of chaining numerous out calls, not a single out-call with presets for some of the arguments. If this answer actually helps with a similar problem, you should be sure to make use of apply and call as Jason recommends, instead of the obscure way to use eval that I thought up.\n**</p>\n\n<p>Well... your out will actually write \"undefined\" a lot in this... but this should be close to what you want:</p>\n\n<pre><code>function out(a, b) {\n    document.write(a + \" \" + b);\n}\n\nfunction getArgString( args, start ) {\n    var argStr = \"\";\n    for( var i = start; i &lt; args.length; i++ ) {\n        if( argStr != \"\" ) {\n            argStr = argStr + \", \";\n        }\n        argStr = argStr + \"arguments[\" + i + \"]\"\n    }\n    return argStr;\n}\n\nfunction setter(func) {\n    var argStr = getArgString( arguments, 1 );\n    eval( \"func( \" + argStr + \");\" );\n    var newSettter = function() {\n        var argStr = getArgString( arguments, 0 );\n        if( argStr == \"\" ) {\n            argStr = \"func\";\n        } else {\n            argStr = \"func, \" + argStr;\n        }\n        return eval( \"setter( \" + argStr + \");\" );\n    }\n    return newSettter;\n}\n\nsetter(out, \"hello\")(\"world\");\nsetter(out, \"hello\", \"world\")();\n</code></pre>\n\n<p>I'd probably move the code in getArgString into the setter function itself though... a little bit safer since I used 'eval's.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>First of all, you need a partial - <a href=\"http://stackoverflow.com/questions/218025/what-is-the-difference-between-currying-and-partial-application\"><strong>there is a difference between a partial and a curry</strong></a> - and here is all you need, <em>without a framework</em>:</p>\n\n<pre><code>function partial(func /*, 0..n args */) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  return function() {\n    var allArguments = args.concat(Array.prototype.slice.call(arguments));\n    return func.apply(this, allArguments);\n  };\n}\n</code></pre>\n\n<p>Now, using your example, you can do exactly what you are after:</p>\n\n<pre><code>partial(out, \"hello\")(\"world\");\npartial(out, \"hello\", \"world\")();\n\n// and here is my own extended example\nvar sayHelloTo = partial(out, \"Hello\");\nsayHelloTo(\"World\");\nsayHelloTo(\"Alex\");\n</code></pre>\n\n<p>The <code>partial()</code> function could be used to implement, but <em>is not</em> currying. Here is a quote from <a href=\"http://www.uncarved.com/blog/not%5Fcurrying.mrk\"><strong>a blog post on the difference</strong></a>:</p>\n\n<blockquote>\n  <p>Where partial application takes a function and from it builds a function which takes fewer arguments, currying builds functions which take multiple arguments by composition of functions which each take a single argument.</p>\n</blockquote>\n\n<p>Hope that helps.</p>\n",
                    "is_accepted": true,
                    "score": 67
                }
            ],
            "body": "<p>I am trying to write a JavaScript function that will return its first argument(function) with all the rest of its arguments as preset parameters to that function.</p>\n\n<p>So:</p>\n\n<pre>function out(a, b) {\n    document.write(a + \" \" + b);\n}\n\nfunction setter(...) {...}\n\nsetter(out, \"hello\")(\"world\");\nsetter(out, \"hello\", \"world\")();\n</pre>\n\n<p>Would output \"hello world\" twice.  for some implementation of setter</p>\n\n<p>I ran into an issue with manipulating the arguments array on my first try, but it seems there would be a better way to do this.</p>\n",
            "last_activity_date": 1358696762,
            "question_id": 321113,
            "score": 30,
            "tags": [
                "javascript",
                "functional-programming"
            ],
            "title": "How can I pre-set arguments in JavaScript function call? (Partial Function Application)"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I'm not quite sure, why you want to do this. </p>\n\n<ul>\n<li><p>You would prevent the javascript file from being cached, as it contains a dynamic value</p></li>\n<li><p>You would get a coupling between your javascript/coffeescript and rails</p></li>\n</ul>\n\n<p>If possible I would advice you to abstract your problem away by providing your target path in the view and retrieve the value from the DOM-Element when the specific event occurs. Just like 'Unobtrusive Scripting Adapters' for Rails do. E.g.: <a href=\"https://github.com/rails/jquery-ujs/blob/master/src/rails.js#L157-173\">https://github.com/rails/jquery-ujs/blob/master/src/rails.js#L157-173</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Actually, not sure if this helps but there is a way to define your own helpers for use during <code>rake precompile</code></p>\n\n<p>Create a new initializer and put this in it:</p>\n\n<pre><code>module Sprockets\n  module Helpers\n    module RailsHelper\n\n      def my_helper_method\n       ...\n      end\n\n    end\n  end\nend\n</code></pre>\n\n<p>And then you can:</p>\n\n<pre><code>&lt;%= my_helper_method %&gt;\n</code></pre>\n\n<p>in your <code>.erb</code> assets</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can include any helper/module/class in an erb template with:</p>\n\n<pre><code>&lt;% environment.context_class.instance_eval { include MyHelper } %&gt;\n</code></pre>\n\n<p>See: <a href=\"https://github.com/sstephenson/sprockets/blob/master/lib/sprockets/environment.rb\">https://github.com/sstephenson/sprockets/blob/master/lib/sprockets/environment.rb</a> and <a href=\"https://github.com/sstephenson/sprockets/blob/master/lib/sprockets/context.rb\">https://github.com/sstephenson/sprockets/blob/master/lib/sprockets/context.rb</a></p>\n\n<p>To use the url helpers you have to include your specific applications' helpers. </p>\n\n<p>They are available at <code>Rails.application.routes.url_helpers</code> so: </p>\n\n<pre><code>&lt;% environment.context_class.instance_eval { include Rails.application.routes.url_helpers } %&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 50
                },
                {
                    "body": "<p>This will also do the trick in an initializer:</p>\n\n<pre><code>Sprockets::Context.send :include, MyHelper\n</code></pre>\n\n<p>In development mode the helper will not be reloaded on every request.</p>\n\n<p>Your approach with UrlHelpers will work until you need to find <code>post_path(...um...we don't know what post id we'll need at compile time...)</code>. There is a ruby gem which reimplements all of your Rails UrlHelpers in JavaScript: <a href=\"https://github.com/railsware/js-routes\">https://github.com/railsware/js-routes</a></p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Indeed I agree with @eirc answer (taking into account Sprockets documentation). But I would\nconsider including helper modules at rails boot time. As per</p>\n\n<pre><code># config/initializers/sprockets.rb\nRails.application.assets.context_class.instance_eval do\n  include ActionView::Helpers\n  include Rails.application.routes.url_helpers\n  include MyModule\nend\n</code></pre>\n\n<p>this is because of: <a href=\"https://github.com/rails/sprockets-rails/blob/master/lib/sprockets/railtie.rb#L23\" rel=\"nofollow\">https://github.com/rails/sprockets-rails/blob/master/lib/sprockets/railtie.rb#L23</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is there any way to use a Rails helper method, more specifically, a path helper method within a javascript asset file. This file <code>foo.js.coffee.erb</code></p>\n\n<pre><code>$('#bar').val(\"&lt;%= create_post_path %&gt;\")\n</code></pre>\n\n<p>I would love it if I could get from erubis</p>\n\n<pre><code>$('#bar').val(\"path/to/create\")\n</code></pre>\n",
            "last_activity_date": 1417601800,
            "question_id": 7451517,
            "score": 50,
            "tags": [
                "javascript",
                "ruby-on-rails",
                "ruby-on-rails-3",
                "asset-pipeline",
                "erubis"
            ],
            "title": "Using a Rails helper method within a javascript asset"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The following test works in Chrome 16 (dev branch) on X86 and Chrome 15 on Mac OSX Lion</p>\n\n<p><a href=\"http://html5-demos.appspot.com/static/fullscreen.html\">http://html5-demos.appspot.com/static/fullscreen.html</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The API only works during user interaction, so it cannot be used maliciously. Try the following code:</p>\n\n<pre><code>addEventListener(\"click\", function() {\n    var\n      el = document.documentElement\n    , rfs =\n           el.requestFullScreen\n        || el.webkitRequestFullScreen\n        || el.mozRequestFullScreen\n    ;\n    rfs.call(el);\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 73
                },
                {
                    "body": "<p>I made a simple wrapper for the Fullscreen API, called <a href=\"https://github.com/sindresorhus/screenfull.js\">screenfull.js</a>, to smooth out the prefix mess and fix some inconsistencies in the different implementations. Check out the <a href=\"http://sindresorhus.com/screenfull.js/\">demo</a> to see how the Fullscreen API works.</p>\n\n<p>Recommended reading:</p>\n\n<ul>\n<li><a href=\"http://hacks.mozilla.org/2012/01/using-the-fullscreen-api-in-web-browsers/\">Using the Fullscreen API in web browsers</a></li>\n<li><a href=\"https://developer.mozilla.org/en/DOM/Using_full-screen_mode\">MDN - Fullscreen API</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>Here are some functions I created for working with fullscreen in the browser.</p>\n\n<p>They provide both enter/exit fullscreen across most major browsers.</p>\n\n<pre><code>function isFullScreen()\n{\n    return (document.fullScreenElement &amp;&amp; document.fullScreenElement !== null)\n         || document.mozFullScreen\n         || document.webkitIsFullScreen;\n}\n\n\nfunction requestFullScreen(element)\n{\n    if (element.requestFullscreen)\n        element.requestFullscreen();\n    else if (element.msRequestFullscreen)\n        element.msRequestFullscreen();\n    else if (element.mozRequestFullScreen)\n        element.mozRequestFullScreen();\n    else if (element.webkitRequestFullscreen)\n        element.webkitRequestFullscreen();\n}\n\nfunction exitFullScreen()\n{\n    if (document.exitFullscreen)\n        document.exitFullscreen();\n    else if (document.msExitFullscreen)\n        document.msExitFullscreen();\n    else if (document.mozCancelFullScreen)\n        document.mozCancelFullScreen();\n    else if (document.webkitExitFullscreen)\n        document.webkitExitFullscreen();\n}\n\nfunction toggleFullScreen(element)\n{\n    if (isFullScreen())\n        cancelFullScreen();\n    else\n        requestFullScreen(element || document.documentElement);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>According to <a href=\"http://www.zdnet.com/blog/networking/google-chrome-web-browser-to-get-a-makeover/1499\">this article</a> Google Chrome 15 has a fullscreen JavaScript API.</p>\n\n<p>I have tried to make it work but failed. I have also searched for official documentation in vain.</p>\n\n<p>What does the fullscreen JavaScript API look like?</p>\n",
            "last_activity_date": 1419066702,
            "question_id": 7836204,
            "score": 38,
            "tags": [
                "javascript",
                "google-chrome",
                "fullscreen"
            ],
            "title": "Chrome Fullscreen API"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Either\nReplace double quotes around <code>type=\"text\"</code> with singele quotes, Like</p>\n\n<pre><code>\"&lt;form&gt;&lt;input type='text'/&gt;&lt;/form&gt;\"\n</code></pre>\n\n<p>OR</p>\n\n<p>replace double quotes wrapping <code>data-content</code> with singe quotes, Like</p>\n\n<pre><code>data-content='&lt;form&gt;&lt;input type=\"text\"/&gt;&lt;/form&gt;'\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>like this <strong>Working demo</strong> <a href=\"http://jsfiddle.net/7e2XU/21/show/#\" rel=\"nofollow\">http://jsfiddle.net/7e2XU/21/show/#</a>\n* Update: <a href=\"http://jsfiddle.net/kz5kjmbt/\" rel=\"nofollow\">http://jsfiddle.net/kz5kjmbt/</a> </p>\n\n<pre><code> &lt;div class=\"container\"&gt;\n    &lt;div class=\"row\" style=\"padding-top: 240px;\"&gt; &lt;a href=\"#\" class=\"btn btn-large btn-primary\" rel=\"popover\" data-content='\n&lt;form id=\"mainForm\" name=\"mainForm\" method=\"post\" action=\"\"&gt;\n    &lt;p&gt;\n        &lt;label&gt;Name :&lt;/label&gt;\n        &lt;input type=\"text\" id=\"txtName\" name=\"txtName\" /&gt;\n    &lt;/p&gt;\n    &lt;p&gt;\n        &lt;label&gt;Address 1 :&lt;/label&gt;\n        &lt;input type=\"text\" id=\"txtAddress\" name=\"txtAddress\" /&gt;\n    &lt;/p&gt;\n    &lt;p&gt;\n        &lt;label&gt;City :&lt;/label&gt;\n        &lt;input type=\"text\" id=\"txtCity\" name=\"txtCity\" /&gt;\n    &lt;/p&gt;\n    &lt;p&gt;\n        &lt;input type=\"submit\" name=\"Submit\" value=\"Submit\" /&gt;\n    &lt;/p&gt;\n&lt;/form&gt;\n data-placement=\"top\" data-original-title=\"Fill in form\"&gt;Open form&lt;/a&gt;\n\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>JavaScript code:</p>\n\n<pre><code>    $('a[rel=popover]').popover({\n      html: 'true',\n      placement: 'right'\n    })\n</code></pre>\n\n<p><em>ScreenShot</em></p>\n\n<p><img src=\"http://i.stack.imgur.com/G3ZJ8.jpg\" alt=\"working updated fiddle screenshot\"></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I would put my form into the markup and not into some data tag.\nThis is how it could work:</p>\n\n<h2>JS Code:</h2>\n\n<pre><code>$('#popover').popover({ \n    html : true,\n    title: function() {\n      return $(\"#popover-head\").html();\n    },\n    content: function() {\n      return $(\"#popover-content\").html();\n    }\n});\n</code></pre>\n\n<h2>HTML Markup:</h2>\n\n<pre><code>&lt;a href=\"#\" id=\"popover\"&gt;the popover link&lt;/a&gt;\n&lt;div id=\"popover-head\" class=\"hide\"&gt;\n  some title\n&lt;/div&gt;\n&lt;div id=\"popover-content\" class=\"hide\"&gt;\n  &lt;!-- MyForm --&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/handtrix/dzr521qs/\">Demo</a></p>\n\n<h2>Alternative Approaches:</h2>\n\n<h3>X-Editable</h3>\n\n<p>You might want to take a look at <a href=\"http://vitalets.github.io/x-editable\">X-Editable</a>.\n A library that allows you to create editable elements on your page based on popovers.</p>\n\n<p><img src=\"http://i.stack.imgur.com/HAcwW.png\" alt=\"X-Editable demo\"></p>\n\n<h3>Webcomponents</h3>\n\n<p>Mike Costello has released <a href=\"https://github.com/MikeCostello/bootstrap-web-components\">Bootstrap Web Components</a>. \nThis nifty library has a Popovers Component that lets you embed the form as markup:</p>\n\n<pre><code>&lt;button id=\"popover-target\" data-original-title=\"MyTitle\" title=\"\"&gt;Popover&lt;/button&gt;\n\n&lt;bs-popover title=\"Popover with Title\" for=\"popover-target\"&gt;\n  &lt;!-- MyForm --&gt;\n&lt;/bs-popover&gt;\n</code></pre>\n\n<p><a href=\"http://mikecostello.github.io/bootstrap-web-components/\">Demo</a></p>\n",
                    "is_accepted": false,
                    "score": 173
                },
                {
                    "body": "<pre><code>&lt;a data-title=\"A Title\" data-placement=\"top\" data-html=\"true\" data-content=\"&lt;form&gt;&lt;input type='text'/&gt;&lt;/form&gt;\" data-trigger=\"hover\" rel=\"popover\" class=\"btn btn-primary\" id=\"test\"&gt;Top popover&lt;/a&gt;\n</code></pre>\n\n<blockquote>\n  <p>just state data-html=\"true\"</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Or try this one</p>\n\n<p>Second one including second hidden div content to hold the form working and test on fiddle <a href=\"http://jsfiddle.net/7e2XU/21/\" rel=\"nofollow\">http://jsfiddle.net/7e2XU/21/</a></p>\n\n<pre><code>&lt;link href=\"http://twitter.github.com/bootstrap/assets/css/bootstrap.css\" rel=\"stylesheet\"&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js\"&gt;\n   &lt;script src=\"http://twitter.github.com/bootstrap/assets/js/bootstrap-tooltip.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"http://twitter.github.com/bootstrap/assets/js/bootstrap-popover.js\"&gt;&lt;/script&gt;\n\n\n&lt;div id=\"popover-content\" style=\"display: none\" &gt;\n    &lt;div class=\"container\" style=\"margin: 25px; \"&gt;\n    &lt;div class=\"row\" style=\"padding-top: 240px;\"&gt;\n        &lt;label id=\"sample\"&gt;\n            &lt;form id=\"mainForm\" name=\"mainForm\" method=\"post\" action=\"\"&gt;\n    &lt;p&gt;\n        &lt;label&gt;Name :&lt;/label&gt;\n        &lt;input type=\"text\" id=\"txtName\" name=\"txtName\" /&gt;\n    &lt;/p&gt;\n    &lt;p&gt;\n        &lt;label&gt;Address 1 :&lt;/label&gt;\n        &lt;input type=\"text\" id=\"txtAddress\" name=\"txtAddress\" /&gt;\n    &lt;/p&gt;\n    &lt;p&gt;\n        &lt;label&gt;City :&lt;/label&gt;\n        &lt;input type=\"text\" id=\"txtCity\" name=\"txtCity\" /&gt;\n    &lt;/p&gt;\n    &lt;p&gt;\n        &lt;input type=\"submit\" name=\"Submit\" value=\"Submit\" /&gt;\n    &lt;/p&gt;\n&lt;/form&gt;\n\n        &lt;/label&gt;\n    &lt;/div&gt;\n          &lt;/div&gt; \n&lt;/div&gt;\n\n &lt;a href=\"#\" style=\"margin: 40px 40px;\" class=\"btn btn-large btn-primary\" rel=\"popover\" data-content='' data-placement=\"left\" data-original-title=\"Fill in form\"&gt;Open form&lt;/a&gt;\n\n\n&lt;script&gt;\n\n$('a[rel=popover]').popover({\n    html: 'true',\nplacement: 'right',\ncontent : function() {\n    return $('#popover-content').html();\n}\n})\n\n\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>A complete solution for anyone that might need it, I've used this with good results so far</p>\n\n<p>JS:</p>\n\n<pre><code>$(\".btn-popover-container\").each(function() {\n    var btn = $(this).children(\".popover-btn\");\n    var titleContainer = $(this).children(\".btn-popover-title\");\n    var contentContainer = $(this).children(\".btn-popover-content\");\n\n    var title = $(titleContainer).html();\n    var content = $(contentContainer).html();\n\n    $(btn).popover({\n        html: true,\n        title: title,\n        content: content,\n        placement: 'right'\n    });\n});\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div class=\"btn-popover-container\"&gt;\n    &lt;button type=\"button\" class=\"btn btn-link popover-btn\"&gt;Button Name&lt;/button&gt;\n    &lt;div class=\"btn-popover-title\"&gt;\n        Popover Title\n    &lt;/div&gt;\n    &lt;div class=\"btn-popover-content\"&gt;\n        &lt;form&gt;\n          Or Other content..\n        &lt;/form&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>.btn-popover-container {\n    display: inline-block;\n}\n\n\n.btn-popover-container .btn-popover-title, .btn-popover-container .btn-popover-content {\n    display: none;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can load the form from a hidden <code>div</code> element with the Bootstrap-provided <code>hidden</code> class.</p>\n\n<pre><code>&lt;button class=\"btn btn-default\" id=\"form-popover\"&gt;Form popover&lt;/button&gt;\n\n&lt;div class=\"hidden\"&gt;\n  &lt;form id=\"form\"&gt;\n    &lt;input type=\"text\" class=\"form-control\" /&gt;\n  &lt;/form&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>JavaScript:</p>\n\n<pre><code>$('#form-popover').popover({\n    content: $('#form').parent().html(),\n    html: true,\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<pre><code>&lt;div class=\"container\"&gt;\n    &lt;div class=\"row\" style=\"padding-top: 240px;\"&gt;\n        &lt;a href=\"#\" class=\"btn btn-large btn-primary\" rel=\"popover\"\n            data-content=\"&lt;form&gt;&lt;input type=\"text\"/&gt;&lt;/form&gt;\"\n            data-placement=\"top\" data-original-title=\"Fill in form\"&gt;Open form&lt;/a&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong><a href=\"http://jsfiddle.net/EFmw8/\">JSfiddle</a></strong></p>\n\n<p>I'm guessing that I would store the form contents within a javascript function...</p>\n\n<h3>How do I contain a form within a bootstrap popover?</h3>\n",
            "last_activity_date": 1425914411,
            "question_id": 12128425,
            "score": 37,
            "tags": [
                "javascript",
                "jquery",
                "twitter-bootstrap",
                "twitter-bootstrap-3",
                "popover"
            ],
            "title": "Contain form within a bootstrap popover?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Although I think it's a great practice to standardize on the (draft, by the way) <a href=\"http://dev.w3.org/geo/api/spec-source.html\">W3C Geolocation API</a>, it's worth noting that there are a few other options in the browser, which can be particularly helpful if you need to target an older platform.</p>\n\n<ul>\n<li>Firefox 3.1 had support for <a href=\"http://labs.mozilla.com/blog/2008/10/introducing-geode/\">Geode</a>, which uses calls to <code>navigator.geolocation</code> with very similar syntax.</li>\n<li>Loki is a plug-in built by Skyhook which works on Internet Explorer 6, Internet Explorer 7, Firefox 2, Firefox 3, Safari and Opera.  The syntax is <a href=\"http://www.loki.com/why/demoapps/simple\">substantially different, but still easy</a>.</li>\n<li>Google Gears provides a <a href=\"http://code.google.com/apis/gears/api_geolocation.html\">geolocation API</a> with a syntax fairly similar to the W3C API syntax.  You can install Google Gears on Internet Explorer 6+, Firefox 1.5+, Safari, Opera Mobile and IE Mobile.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>From a similar more recent topic:</p>\n\n<p>\"I'm working on an open source library that supports all javascript location capable phones with the W3C standard. So far it supports iPhone, Android, BlackBerry and some fringe browser platforms running in a browser. The lib can also be used when writing web stack standalone apps for Nokia OVI and the Palm WebOS.</p>\n\n<p><a href=\"http://code.google.com/p/geo-location-javascript/\" rel=\"nofollow\">http://code.google.com/p/geo-location-javascript/</a>\"</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The W3C version works on android 2.*. On android 1.6 you can fallback to gears, which will work pretty much the same way. In theory the W3C standard should also work on Firefox mobile (Fennec), which currently is available for Nokia's Maemo devices and will be standard on MeeGo.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As of today, the <a href=\"http://www.w3.org/TR/2009/WD-geolocation-API-20090707/\">W3C Geolocation API</a> (widely associated with, though not technically part of, HTML 5) is support in the following major desktop browsers:</p>\n\n<ul>\n<li>Firefox (since 3.5)</li>\n<li>Safari (since 5.0) </li>\n<li>Google Chrome (version depends on OS)</li>\n<li>Opera (since 10.60)</li>\n<li>Internet Explorer (since IE 9)</li>\n</ul>\n\n<p>There are at least two mobile browsers that implement the Geolocation API:</p>\n\n<ul>\n<li>Safari Mobile (since iPhone OS 3.0)</li>\n<li>Android (since at least Android 1.6)</li>\n</ul>\n\n<p>On all of these platforms, you should be able to use navigator.geolocation.getCurrentPosition, etc.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>You don\u2019t have to have the newest mobile phone to use GPS and Geolocation API. Almost every mobile browser (without proxy server) can be used to read position from buidin GPS. If You have Java and GPS in Your phone \u2013 You can use mobile-gps-web-gate \u2013 see at <a href=\"http://code.google.com/p/mobile-gps-web-gate/\" rel=\"nofollow\">http://code.google.com/p/mobile-gps-web-gate/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I know this is an old question, but you'll find a list of devices that support geolocation here: <a href=\"http://www.quirksmode.org/webkit.html\" rel=\"nofollow\">http://www.quirksmode.org/webkit.html</a>. This list is being maintained by the site author so it should stay up to date.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://gpsgate.com/products/gpsgate_client\" rel=\"nofollow\">Franson's GPSGate</a> is a commercial product that can expose a Windows machine's <strong>hardware GPS</strong> to any browser through javascript. The interface is a little different from the W3C's implementation though.</p>\n\n<p>Update: the <a href=\"http://gpsgate.com/purchase/gpsgate_express_license\" rel=\"nofollow\">Express</a> (lite) version of GPSGate is free.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>The iPhone supports geolocation in mobile Safari via the following call:</p>\n\n<pre><code>navigator.geolocation.getCurrentPosition(\n  function(pos){\n    var lat = pos.coords.latitude;\n    var long = pos.coords.longitude;\n  },\n  function(){\n    /* Handler if location could not be found */\n  }\n);\n</code></pre>\n\n<p>I'd like to build a good list of devices that have one of the following:</p>\n\n<ol>\n<li>support this feature <strong>out of the box</strong>, or</li>\n<li>support this feature with an upgrade, or</li>\n<li>support geolocation with equivalent fidelity of data with some other snippet of Javascript.</li>\n</ol>\n\n<p>I'm only familiar with my own device, so this is my list so far:</p>\n\n<h3>Out of the box:</h3>\n\n<ol>\n<li>iPhone 3GS</li>\n</ol>\n\n<h3>Supported, but only with an update</h3>\n\n<ol>\n<li>iPhone 3G</li>\n<li>iPhone 2G (?)</li>\n<li>PC or Mac computer with Firefox 3.5</li>\n</ol>\n\n<h3>Supported with some other snippet</h3>\n\n<p>?</p>\n\n<p>What is the level of support in Blackberry, Android phones, etc?</p>\n",
            "last_activity_date": 1423089670,
            "question_id": 1349064,
            "score": 24,
            "tags": [
                "javascript",
                "geolocation",
                "gps",
                "mobile-phones",
                "mobile-website"
            ],
            "title": "Which Devices Support Javascript Geolocation via navigator.geolocation?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Instead of writing a form into the new window (which is tricky to get correct, with encoding of values in the HTML code), just open an empty window and post a form to it.</p>\n\n<p>Example:</p>\n\n<pre><code>&lt;form id=\"TheForm\" method=\"post\" action=\"test.asp\" target=\"TheWindow\"&gt;\n&lt;input type=\"hidden\" name=\"something\" value=\"something\" /&gt;\n&lt;input type=\"hidden\" name=\"more\" value=\"something\" /&gt;\n&lt;input type=\"hidden\" name=\"other\" value=\"something\" /&gt;\n&lt;/form&gt;\n\n&lt;script type=\"text/javascript\"&gt;\nwindow.open('', 'TheWindow');\ndocument.getElementById('TheForm').submit();\n&lt;/script&gt;\n</code></pre>\n\n<h3>Edit:</h3>\n\n<p>To set the values in the form dynamically, you can do like this:</p>\n\n<pre><code>function openWindowWithPost(something, additional, misc) {\n  var f = document.getElementById('TheForm');\n  f.something.value = something;\n  f.more.value = additional;\n  f.other.value = misc;\n  window.open('', 'TheWindow');\n  f.submit();\n}\n</code></pre>\n\n<p>To post the form you call the function with the values, like <code>openWindowWithPost('a','b','c');</code>.</p>\n\n<p>Note: I varied the parameter names in relation to the form names to show that they don't have to be the same. Usually you would keep them similar to each other to make it simpler to track the values.</p>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>You could also try putting the form on the remote page, like this:</p>\n\n<pre><code>window.open('formsubmission.html', 'formsubmit');\n</code></pre>\n\n<p>And on <code>formsubmission.html</code>, you put this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nwindow.onload = function () {\n  document.forms[0].submit();\n}\n&lt;/script&gt;\n&lt;form method=\"post\" action=\"/path/to/yourfinalpage.foo\"&gt;\n  // Your parameters here\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The default submit Action is Ext.form.action.Submit, which uses an Ajax request to submit the form's values to a configured URL. To enable normal browser submission of an Ext form, use the standardSubmit config option.</p>\n\n<p>Link: <a href=\"http://docs.sencha.com/extjs/4.2.1/#!/api/Ext.form.Basic-cfg-standardSubmit\" rel=\"nofollow\">http://docs.sencha.com/extjs/4.2.1/#!/api/Ext.form.Basic-cfg-standardSubmit</a></p>\n\n<p>solution: put standardSubmit :true in your config. Hope that this will help you :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Even though I am 3 years late, but to simplify Guffa's example, you don't even need to have the form on the page at all:</p>\n\n<pre><code>$('&lt;form method=\"post\" action=\"test.asp\" target=\"TheWindow\"&gt;\n       &lt;input type=\"hidden\" name=\"something\" value=\"something\"&gt;\n       ...\n   &lt;/form&gt;').submit();\n</code></pre>\n\n<p>Maybe a helpful tip for someone :)</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Since you wanted the whole form inside the javascript, instead of writing it in tags, you can do this:</p>\n\n<pre><code>var form = document.createElement(\"form\");\nform.setAttribute(\"method\", \"post\");\nform.setAttribute(\"action\", \"openData.do\");\n\nform.setAttribute(\"target\", \"view\");\n\nvar hiddenField = document.createElement(\"input\"); \nhiddenField.setAttribute(\"type\", \"hidden\");\nhiddenField.setAttribute(\"name\", \"message\");\nhiddenField.setAttribute(\"value\", \"val\");\nform.appendChild(hiddenField);\ndocument.body.appendChild(form);\n\nwindow.open('', 'view');\n\nform.submit();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>I found a better way to pass parameters to the popup window and even to retrieve parameters from it :</p>\n\n<p><strong>In the main page :</strong></p>\n\n<pre><code>var popupwindow;\nvar sharedObject = {};\n\nfunction openPopupWindow()\n{\n   // Define the datas you want to pass\n   sharedObject.var1 = \n   sharedObject.var2 = \n   ...\n\n   // Open the popup window\n   window.open(URL_OF_POPUP_WINDOW, NAME_OF_POPUP_WINDOW, POPUP_WINDOW_STYLE_PROPERTIES);\n   if (window.focus) { popupwindow.focus(); }\n}\n\nfunction closePopupWindow()\n{\n    popupwindow.close();\n\n    // Retrieve the datas from the popup window\n    = sharedObject.var1;\n    = sharedObject.var2;\n    ...\n}\n</code></pre>\n\n<p><strong>In the popup window :</strong></p>\n\n<pre><code>var sharedObject = window.opener.sharedObject;\n\n// function you have to to call to close the popup window\nfunction myclose()\n{\n    //Define the parameters you want to pass to the main calling window\n    sharedObject.var1 = \n    sharedObject.var2 = \n    ...\n    window.opener.closePopupWindow();\n}\n</code></pre>\n\n<p>That's it !</p>\n\n<p>And this is very convenient because:</p>\n\n<ul>\n<li>You have not to set parameters in the URL of the popup window.</li>\n<li>No form to define</li>\n<li>You can use illimited parameters even objects.</li>\n<li>Bi-directionnal : you can pass parameters AND, if you want you, can retreive new parameters.</li>\n<li>Very easy to implement.</li>\n</ul>\n\n<p>Have Fun!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I created a function to generate a form, based on url, target and an object as the <code>POST</code>/<code>GET</code> data and submit method. It supports nested and mixed types within that object, so it can fully replicate any structure you feed it with a single restriction: the brackets <code>[</code> and <code>]</code> must not be part of any key in the object (like <code>{\"this [key] is problematic\" : \"hello world\"}</code>). If someone knows how to escape it properly, please do tell!</p>\n\n<p>Without further ado, here is the source:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function getForm(url, target, values, method) {\r\n  function grabValues(x) {\r\n    var path = [];\r\n    var depth = 0;\r\n    var results = [];\r\n\r\n    function iterate(x) {\r\n      switch (typeof x) {\r\n        case 'function':\r\n        case 'undefined':\r\n        case 'null':\r\n          break;\r\n        case 'array':\r\n          for (var i = 0; i &lt; x.length; i++) {\r\n            path[depth++] = i;\r\n            iterate(x[i]);\r\n          }\r\n          break;\r\n        case 'object':\r\n          for (var i in x) {\r\n            path[depth++] = i;\r\n            iterate(x[i]);\r\n          }\r\n          break;\r\n        default:\r\n          results.push({\r\n            path: path.slice(0),\r\n            value: x\r\n          })\r\n          break;\r\n      }\r\n      path.splice(--depth);\r\n    }\r\n    iterate(x);\r\n    return results;\r\n  }\r\n  var form = document.createElement(\"form\");\r\n  form.method = method;\r\n  form.action = url;\r\n  form.target = target;\r\n\r\n  var values = grabValues(values);\r\n\r\n  for (var j = 0; j &lt; values.length; j++) {\r\n    var input = document.createElement(\"input\");\r\n    input.type = \"hidden\";\r\n    input.value = values[j].value;\r\n    input.name = values[j].path[0];\r\n    for (var k = 1; k &lt; values[j].path.length; k++) {\r\n      input.name += \"[\" + values[j].path[k] + \"]\";\r\n    }\r\n    form.appendChild(input);\r\n  }\r\n  return form;\r\n}</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>Usage example:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>document.body.onclick = function() {\r\n  var obj = {\r\n    \"a\": [1, 2, [3, 4]],\r\n    \"b\": \"a\",\r\n    \"c\": {\r\n      \"x\": [1],\r\n      \"y\": [2, 3],\r\n      \"z\": [{\r\n        \"a\": \"Hello\",\r\n        \"b\": \"World\"\r\n      }, {\r\n        \"a\": \"Hallo\",\r\n        \"b\": \"Welt\"\r\n      }]\r\n    }\r\n  };\r\n\r\n  var form = getForm(\"http://example.com\", \"_blank\", obj, \"post\");\r\n\r\n  document.body.appendChild(form);\r\n  form.submit();\r\n  form.parentNode.removeChild(form);\r\n}</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>With window.open method I open new site with parameters, which I have to pass by post method.I've found solution, but unfortunately it doesn't work. This is my code:  </p>\n\n<pre><code>&lt;script  type=\"text/javascript\"&gt;    \nfunction openWindowWithPost(url,name,keys,values)\n{\n    var newWindow = window.open(url, name);\n\n    if (!newWindow) return false;\n\n    var html = \"\";\n    html += \"&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;form id='formid' method='post' action='\" + url +\"'&gt;\";\n\n    if (keys &amp;&amp; values &amp;&amp; (keys.length == values.length))\n        for (var i=0; i &lt; keys.length; i++)\n            html += \"&lt;input type='hidden' name='\" + keys[i] + \"' value='\" + values[i] + \"'/&gt;\";\n\n    html += \"&lt;/form&gt;&lt;script type='text/javascript'&gt;document.getElementById(\\\"formid\\\").submit()&lt;/sc\"+\"ript&gt;&lt;/body&gt;&lt;/html&gt;\";\n\n    newWindow.document.write(html);\n    return newWindow;\n}\n&lt;/script&gt;  \n</code></pre>\n\n<p>Next, I create arrays:  </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;    \nvar values= new Array(\"value1\", \"value2\", \"value3\") \nvar keys= new Array(\"a\",\"b\",\"c\") \n&lt;/script&gt;  \n</code></pre>\n\n<p>And call function by:  </p>\n\n<pre><code>&lt;input id=\"Button1\" type=\"button\" value=\"Pass values\" onclick=\"openWindowWithPost('test.asp','',keys,values)\" /&gt;   \n</code></pre>\n\n<p>But, when I click on this button, the site test.asp is empty (of course I try get pass values - <code>Request.Form(\"b\")</code>).  </p>\n\n<p>How could I solve this problem, why I can't get pass values? </p>\n",
            "last_activity_date": 1423957809,
            "question_id": 3951768,
            "score": 23,
            "tags": [
                "javascript"
            ],
            "title": "Window.open and pass parameters by post method"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You could use a print CSS stylesheet...</p>\n\n<p>But this will affect all print functions.</p>\n\n<p>You could try having a print stylesheet external, and it is included via Js when a button is pressed, and then call window.print(), then after that remove it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>How about using canvas? Draw it onto a new window then calling the print() method from that new window?</p>\n\n<p>You can find more documentation through here: <a href=\"https://developer.mozilla.org/en/Drawing%5FGraphics%5Fwith%5FCanvas#Rendering%5FWeb%5FContent%5FInto%5FA%5FCanvas\" rel=\"nofollow\">drawWindow()</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I would go about it somewhat like this:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Print Test Page&lt;/title&gt;\n&lt;script&gt;\nprintDivCSS = new String ('&lt;link href=\"myprintstyle.css\" rel=\"stylesheet\" type=\"text/css\"&gt;')\nfunction printDiv(divId) {\n    window.frames[\"print_frame\"].document.body.innerHTML=printDivCSS + document.getElementById(divId).innerHTML;\n    window.frames[\"print_frame\"].window.focus();\n    window.frames[\"print_frame\"].window.print();\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;&lt;b&gt;&lt;center&gt;This is a test page for printing&lt;/center&gt;&lt;/b&gt;&lt;hr color=#00cc00 width=95%&gt;&lt;/h1&gt;\n&lt;b&gt;Div 1:&lt;/b&gt; &lt;a href=\"javascript:printDiv('div1')\"&gt;Print&lt;/a&gt;&lt;br&gt;\n&lt;div id=\"div1\"&gt;This is the div1's print output&lt;/div&gt;\n&lt;br&gt;&lt;br&gt;\n&lt;b&gt;Div 2:&lt;/b&gt; &lt;a href=\"javascript:printDiv('div2')\"&gt;Print&lt;/a&gt;&lt;br&gt;\n&lt;div id=\"div2\"&gt;This is the div2's print output&lt;/div&gt;\n&lt;br&gt;&lt;br&gt;\n&lt;b&gt;Div 3:&lt;/b&gt; &lt;a href=\"javascript:printDiv('div3')\"&gt;Print&lt;/a&gt;&lt;br&gt;\n&lt;div id=\"div3\"&gt;This is the div3's print output&lt;/div&gt;\n&lt;iframe name=\"print_frame\" width=\"0\" height=\"0\" frameborder=\"0\" src=\"about:blank\"&gt;&lt;/iframe&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>Along the same lines as some of the suggestions you would need to do at least the following:</p>\n\n<ul>\n<li>Load some CSS dynamically through JavaScript </li>\n<li>Craft some print-specific CSS rules</li>\n<li>Apply your fancy CSS rules through JavaScript</li>\n</ul>\n\n<p>An example CSS could be as simple as this:</p>\n\n<pre><code>@media print {\n  body * {\n    display:none;\n  }\n\n  body .printable {\n    display:block;\n  }\n}\n</code></pre>\n\n<p>Your JavaScript would then only need to apply the \"printable\" class to your target div and it will be the only thing visible (as long as there are no other conflicting CSS rules -- a separate exercise) when printing happens.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n  function divPrint() {\n    // Some logic determines which div should be printed...\n    // This example uses div3.\n    $(\"#div3\").addClass(\"printable\");\n    window.print();\n  }\n&lt;/script&gt;\n</code></pre>\n\n<p>You may want to optionally remove the class from the target after printing has occurred, and / or remove the dynamically-added CSS after printing has occurred. </p>\n\n<p>Below is a full working example, the only difference is that the print CSS is not loaded dynamically. If you want it to really be unobtrusive then you will need to <a href=\"http://stackoverflow.com/questions/1071962/how-to-print-part-of-rendered-html-page-in-javascript/1072151#1072151\">load the CSS dynamically like in this answer</a>.</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\" /&gt;\n    &lt;title&gt;Print Portion Example&lt;/title&gt;\n    &lt;style type=\"text/css\"&gt;\n      @media print {\n        body * {\n          display:none;\n        }\n\n        body .printable {\n          display:block;\n        }\n      }\n    &lt;/style&gt;\n    &lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js\"&gt;&lt;/script&gt;\n  &lt;/head&gt;\n\n  &lt;body&gt;\n    &lt;h1&gt;Print Section Example&lt;/h1&gt;\n    &lt;div id=\"div1\"&gt;Div 1&lt;/div&gt;\n    &lt;div id=\"div2\"&gt;Div 2&lt;/div&gt;\n    &lt;div id=\"div3\"&gt;Div 3&lt;/div&gt;\n    &lt;div id=\"div4\"&gt;Div 4&lt;/div&gt;\n    &lt;div id=\"div5\"&gt;Div 5&lt;/div&gt;\n    &lt;div id=\"div6\"&gt;Div 6&lt;/div&gt;\n    &lt;p&gt;&lt;input id=\"btnSubmit\" type=\"submit\" value=\"Print\" onclick=\"divPrint();\" /&gt;&lt;/p&gt;\n    &lt;script type=\"text/javascript\"&gt;\n      function divPrint() {\n        // Some logic determines which div should be printed...\n        // This example uses div3.\n        $(\"#div3\").addClass(\"printable\");\n        window.print();\n      }\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>jQuery PrintArea - Is still today using iFrame or a popup-window.</p>\n\n<p>These techniques are not considered as safe, modern or even reasonable way to achieve what you are asking.</p>\n\n<p>Just hide all other html via DOM or CSS, or as earlier answer, open the printable ContainerElement in a new browser-window with only nessessary body-html and styles which then you can print for examble by jQ- \" $(document).ready(function(){  }); \"</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>try this javascript... </p>\n\n<pre><code>function printout() {\n\n    var newWindow = window.open();\n    newWindow.document.write(document.getElementById(\"output\").innerHTML);\n    newWindow.print();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>javascript code window.print() can print the current html page. </p>\n\n<p>My question is: if I have a div in an html page(for example, a page rendered from ASP.NET MVC view), then I want to print the div only.</p>\n\n<p>Is there any JQuery Unobtrusive javascrpt or normal javascript to implement this request?</p>\n\n<p>Make it more clear. Suppose the rendered html page like:</p>\n\n<pre><code>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head id=\"Head\" runat=\"server\"&gt;\n&lt;title&gt;\n        &lt;asp:ContentPlaceHolder runat=\"server\" ID=\"TitleContent\" /&gt;\n&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"div1\" class=\"div1\"&gt;....&lt;/div&gt;\n    &lt;div id=\"div2\" class=\"div2\"&gt;....&lt;/div&gt;\n    &lt;div id=\"div3\" class=\"div3\"&gt;....&lt;/div&gt;\n    &lt;div id=\"div4\" class=\"div4\"&gt;....&lt;/div&gt;    \n    &lt;div id=\"div4\" class=\"div4\"&gt;....&lt;/div&gt;\n&lt;p&gt;\n    &lt;input id=\"btnSubmit\" type=\"submit\" value=\"Print\" onclick=\"divPrint();\" /&gt;\n&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Then I want to click on the Print button only printing div3. </p>\n",
            "last_activity_date": 1406668165,
            "question_id": 1071962,
            "score": 22,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "how to print part of rendered html page in javascript?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>From PHP:</p>\n\n<pre><code>function OutputJs($Content) \n{   \n    ob_start();\n    echo $Content;\n    $expires = DAY_IN_S; // 60 * 60 * 24 ... defined elsewhere\n    header(\"Content-type: x-javascript\");\n    header('Content-Length: ' . ob_get_length());\n    header('Cache-Control: max-age='.$expires.', must-revalidate');\n    header('Pragma: public');\n    header('Expires: '. gmdate('D, d M Y H:i:s', time()+$expires).'GMT');\n    ob_end_flush();\n    return; \n}\n</code></pre>\n\n<p>works for me.</p>\n\n<p>As a developer you'll probably quickly run into the situation that you <em>don't</em> want files cached, in which case see <a href=\"http://stackoverflow.com/questions/54475/help-with-aggressive-javascript-caching\">Help with aggressive JavaScript caching</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>or in the .htaccess file</p>\n\n<pre><code>AddOutputFilter DEFLATE css js\nExpiresActive On\nExpiresByType application/x-javascript A2592000\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I am heavily tempted to close this as a duplicate; this question appears to be answered in many different ways all over the site: </p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/301284/will-a-script-in-htmls-script-tag-with-extension-php-be-cached\">will a script in html&#39;s script tag with extension php be cached?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/206783/when-does-browser-automatically-clear-javascript-cache\">When Does Browser Automatically Clear JavaScript Cache?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/54475/help-with-aggressive-javascript-caching\">Help with aggressive JavaScript caching</a></li>\n<li><a href=\"http://stackoverflow.com/questions/49547/making-sure-a-web-page-is-not-cached-across-all-browsers\">Making sure a web page is not cached, across all browsers</a></li>\n<li><a href=\"http://stackoverflow.com/questions/3224/how-can-i-make-the-browser-see-css-and-javascript-changes\">How can I make the browser see CSS and Javascript changes?</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>In your Apache .htaccess file:</p>\n\n<pre><code>#Create filter to match files you want to cache \n&lt;Files *.js&gt;\nHeader add \"Cache-Control\" \"max-age=604800\"\n&lt;/Files&gt;\n</code></pre>\n\n<p>I wrote about it here also:</p>\n\n<p><a href=\"http://betterexplained.com/articles/how-to-optimize-your-site-with-http-caching/\" rel=\"nofollow\">http://betterexplained.com/articles/how-to-optimize-your-site-with-http-caching/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Have a look at Yahoo! tips: <a href=\"http://developer.yahoo.com/performance/rules.html#expires\">http://developer.yahoo.com/performance/rules.html#expires</a>. </p>\n\n<p>There are also tips by Google: <a href=\"https://developers.google.com/speed/docs/best-practices/caching\">https://developers.google.com/speed/docs/best-practices/caching</a></p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>The best (and only) method is to set correct HTTP headers, specifically these ones: \"Expires\", \"Last-Modified\", and \"Cache-Control\". How to do it depends on the server software you use.</p>\n\n<p>In <a href=\"http://lazutkin.com/blog/2007/feb/1/improving-performance/\" rel=\"nofollow\">Improving performance&hellip;</a> look for \"Optimization on server side\" for general considerations and relevant links and for \"Client-side cache\" for the Apache-specific advice.</p>\n\n<p>If you are a fan of <a href=\"http://sysoev.ru/nginx/\" rel=\"nofollow\">nginx</a> (or <a href=\"http://nginx.net/\" rel=\"nofollow\">nginx in plain English</a>) like I am, you can easily configure it too:</p>\n\n<pre><code>location /images {\n  ...\n  expires 4h;\n}\n</code></pre>\n\n<p>In the example above any file from /images/ will be cached on the client for 4 hours.</p>\n\n<p>Now when you know right words to look for (HTTP headers \"Expires\", \"Last-Modified\", and \"Cache-Control\"), just peruse the documentation of the web server you use.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I just finished my weekend project <strong>cached-webpgr.js</strong>\n which uses the localStorage / web storage to cache JavaScript files. This approach is very fast. My small test showed </p>\n\n<ul>\n<li>Loading jQuery from CDN: Chrome <strong>268ms</strong>, FireFox: <strong>200ms</strong></li>\n<li>Loading jQuery from localStorage:  Chrome <strong>47ms</strong>, FireFox <strong>14ms</strong></li>\n</ul>\n\n<p>The code to achieve that is tiny, you can check it out at my Github project <a href=\"https://github.com/webpgr/cached-webpgr.js\" rel=\"nofollow\">https://github.com/webpgr/cached-webpgr.js</a></p>\n\n<p>Here is a full example how to use it.</p>\n\n<p>The complete library:</p>\n\n<pre><code>function _cacheScript(c,d,e){var a=new XMLHttpRequest;a.onreadystatechange=function(){4==a.readyState&amp;&amp;(200==a.status?localStorage.setItem(c,JSON.stringify({content:a.responseText,version:d})):console.warn(\"error loading \"+e))};a.open(\"GET\",e,!0);a.send()}function _loadScript(c,d,e,a){var b=document.createElement(\"script\");b.readyState?b.onreadystatechange=function(){if(\"loaded\"==b.readyState||\"complete\"==b.readyState)b.onreadystatechange=null,_cacheScript(d,e,c),a&amp;&amp;a()}:b.onload=function(){_cacheScript(d,e,c);a&amp;&amp;a()};b.setAttribute(\"src\",c);document.getElementsByTagName(\"head\")[0].appendChild(b)}function _injectScript(c,d,e,a){var b=document.createElement(\"script\");b.type=\"text/javascript\";c=JSON.parse(c);var f=document.createTextNode(c.content);b.appendChild(f);document.getElementsByTagName(\"head\")[0].appendChild(b);c.version!=e&amp;&amp;localStorage.removeItem(d);a&amp;&amp;a()}function requireScript(c,d,e,a){var b=localStorage.getItem(c);null==b?_loadScript(e,c,d,a):_injectScript(b,c,d,a)};\n</code></pre>\n\n<p>Calling the library</p>\n\n<pre><code>requireScript('jquery', '1.11.2', 'http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js', function(){\n    requireScript('examplejs', '0.0.3', 'example.js');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>But for the modern browsers you can use something new like this: <a href=\"http://www.w3schools.com/html/html5_app_cache.asp\" rel=\"nofollow\">http://www.w3schools.com/html/html5_app_cache.asp</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Which is the best method to make the browser use cached versions of js files (from the serverside)?</p>\n",
            "last_activity_date": 1425826627,
            "question_id": 311062,
            "score": 22,
            "tags": [
                "javascript",
                "http",
                "caching"
            ],
            "title": "caching JavaScript files"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<pre><code>&lt;a href=\"javascript:alert('Hello!');\"&gt;Clicky&lt;/a&gt;\n</code></pre>\n\n<p><strong>EDIT, years later:</strong> NO! Don't ever do this! I was young and stupid!</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I think you can use the <code>onclick</code> event, something like this:</p>\n\n<pre><code>&lt;a onclick=\"jsFunction();\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>&lt;a onclick=\"jsfunction()\" href=\"#\"&gt;\n</code></pre>\n\n<p>or </p>\n\n<pre><code>&lt;a onclick=\"jsfunction()\" href=\"javascript:void(0);\"&gt;\n</code></pre>\n\n<p>Edit:</p>\n\n<p>The above response is really not a good solution, having learned a lot about JS since I initially posted.  See EndangeredMassa's answer below for the better approach to solving this problem.</p>\n",
                    "is_accepted": true,
                    "score": 55
                },
                {
                    "body": "<p>Or, if you're using <a href=\"http://www.prototypejs.com\">PrototypeJS</a></p>\n\n<pre><code>&lt;script type=\"text/javascript&gt;\n  Event.observe( $('thelink'), 'click', function(event) {\n      //do stuff\n\n      Event.stop(event);\n  }\n&lt;/script&gt;\n\n&lt;a href=\"#\" id=\"thelink\"&gt;This is the link&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Unobtrusive JavaScript, no library dependency:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;script type=\"text/javascript\"&gt;\n\n        // Wait for the page to load first\n        window.onload = function() {\n\n          //Get a reference to the link on the page\n          // with an id of \"mylink\"\n          var a = document.getElementById(\"mylink\");\n\n          //Set code to run when the link is clicked\n          // by assigning a function to \"onclick\"\n          a.onclick = function() {\n\n            // Your code here...\n\n            //If you don't want the link to actually \n            // redirect the browser to another page,\n            // \"google.com\" in our example here, then\n            // return false at the end of this block.\n            // Note that this also prevents event bubbling,\n            // which is probably what we want here, but won't \n            // always be the case.\n            return false;\n          }\n        }\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;a id=\"mylink\" href=\"http://www.google.com\"&gt;linky&lt;/a&gt;        \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 95
                },
                {
                    "body": "<p>And, why not unobtrusive with jQuery:</p>\n\n<pre><code>  $(function() {\n    $(\"#unobtrusive\").click(function(e) {\n      e.preventDefault(); // if desired...\n      // other methods to call...\n    });\n  });\n</code></pre>\n\n<p>HTML</p>\n\n<pre><code>&lt;a id=\"unobtrusive\" href=\"http://jquery.com\"&gt;jquery&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Unobtrusive Javascript has many many advantages, here are the steps it takes and why it's good to use.</p>\n\n<ol>\n<li><p>the link loads as normal: </p>\n\n<p>&lt;a id=\"DaLink\" href=\"http://host/toAnewPage.html\"&gt;click here&lt;/a&gt;</p></li>\n</ol>\n\n<p>this is important becuase it will work for browsers with javascript not enabled, or if there is an error in the javascript code that doesn't work.</p>\n\n<ol>\n<li><p>javascript runs on page load:</p>\n\n<pre><code> window.onload = function(){\n        document.getElementById(\"DaLink\").onclick = function(){\n               if(funcitonToCall()){\n                   // most important step in this whole process\n                   return false;\n               }\n        }\n }\n</code></pre></li>\n<li><p>if the javascript runs successfully, maybe loading the content in the current page with javascript, the return false cancels the link firing. in other words putting return false has the effect of disabling the link if the javascript ran successfully. While allowing it to run if the javascript does not, making a nice backup so your content gets displayed either way, for search engines and if your code breaks, or is viewed on an non-javascript system.</p></li>\n</ol>\n\n<p>best book on the subject is \"Dom Scription\" by Jeremy Keith</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How To Use A Link To Call Javascript?</p>\n",
            "last_activity_date": 1422309362,
            "question_id": 688196,
            "score": 56,
            "tags": [
                "javascript"
            ],
            "title": "How To Use A Link To Call Javascript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><strong>answer updated for the latest version 3.0</strong></p>\n\n<p>Bootstrap 3 has a special class for responsive images (set max-width to 100%). This class is defined as:</p>\n\n<pre><code>.img-responsive {\n display: block;\n height: auto;\n max-width: 100%;\n}\n</code></pre>\n\n<p>Note img tag gets by default:</p>\n\n<pre><code>img {\n     vertical-align: middle;\n     border: 0;\n     page-break-inside: avoid;\n     max-width: 100% !important;\n     }\n</code></pre>\n\n<p>So use <code>class=\"img-responsive\"</code> to make your images responsive.</p>\n\n<p>To make all images responsive by default:</p>\n\n<p><strong>css:</strong> add the code below under the bootstrap css:</p>\n\n<pre><code>   img {\n          display: block;\n          height: auto;\n          max-width: 100%;\n   }\n</code></pre>\n\n<p><strong>less:</strong> add the code below in your mixins.less:</p>\n\n<pre><code>img {\n  &amp;:extend(.img-responsive);\n}\n</code></pre>\n\n<p>Note: requires Less 1.4.0. see: <a href=\"http://stackoverflow.com/a/15573240/1596547\">http://stackoverflow.com/a/15573240/1596547</a></p>\n\n<h2>Carousel</h2>\n\n<p>img tags inside a <a href=\"http://getbootstrap.com/javascript/#carousel\">carousel</a> are responsive by default</p>\n\n<h2>Semantic rules</h2>\n\n<p><strike>See also the answer of <a href=\"http://stackoverflow.com/users/1071413/its-me\">@its-me</a> (<a href=\"http://stackoverflow.com/a/18653778/1596547\">http://stackoverflow.com/a/18653778/1596547</a>). Using the above to make all your images responsive by default turns your images to <a href=\"https://developer.mozilla.org/en-US/docs/HTML/Block-level_elements\">block level elements</a>. Block level elements are not allowed in paragraphs (<code>&lt;p&gt;</code>), see: <a href=\"http://stackoverflow.com/a/4291515/1596547\">http://stackoverflow.com/a/4291515/1596547</a></strike></p>\n\n<p>As far as i understand the distinction of block-level vs. inline elements is replaced with a more complex set of content categories. See also: <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Inline_elemente#Inline_vs._block-level\">https://developer.mozilla.org/en-US/docs/Web/HTML/Inline_elemente#Inline_vs._block-level</a>. \nSo in HTML5 a p tag can contain any phrasing element intermixed with normal character data. (see: <a href=\"http://www.w3.org/TR/html-markup/p.html\">http://www.w3.org/TR/html-markup/p.html</a>) The <code>img</code> tag is such a phrasing element. The <code>img</code> tag's default value for the display property is indeed <code>inline-block</code>. Changing the  display property to block does not violate any of the preceding rules.</p>\n\n<p>Block level elements (<code>display:block</code>) take all the available space of their parent, which seems exactly what you expect for responsive images. So setting <code>display: block;</code> seems a reasonable choice, which has to be preferred above the <code>inline-block</code> declaration.</p>\n\n<p>Images inside p elements which require <code>inline-block</code> as suggest by <a href=\"http://stackoverflow.com/users/1071413/its-me\">@its-me</a> (<a href=\"http://stackoverflow.com/a/18653778/1596547\">http://stackoverflow.com/a/18653778/1596547</a>) should maybe not be responsive at all.</p>\n",
                    "is_accepted": false,
                    "score": 120
                },
                {
                    "body": "<p>Excellent suggestion by @BassJobsen, but I'd use <code>display: inline-block;</code> instead of <code>display: block;</code> as that feels more semantic <sup><a href=\"http://stackoverflow.com/a/4291515/1071413\">1</a></sup> (which means you can be a bit more sure you are not messing up somewhere else).</p>\n\n<p>So, mine would look like this:</p>\n\n<pre><code>img {\n  display: inline-block;\n  height: auto;\n  max-width: 100%;\n}\n</code></pre>\n\n<p><em>Please do let me know if my understanding is flawed. :)</em></p>\n\n<hr>\n\n<p><strong><a href=\"http://stackoverflow.com/a/4291515/1071413\">[1]</a></strong>: For one, images are almost always wrapped in a block-level element if that's the use case; and then again, we also use images in elements like paragraphs (<code>p</code>), where an <code>inline-block</code> would be more appropriate than a <code>block</code> element.</p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>It looks like with the new version 3.0 I have to set the class names of an image to <code>col-lg-4 col-sm-4 col-4</code> if the image is part of div with the same class names to make the image responsive with all breakpoints.</p>\n\n<p>In version 2 the images CSS properties inherited by default the parent's div properties.</p>\n\n<p>Is this correct?</p>\n",
            "last_activity_date": 1423152256,
            "question_id": 17932509,
            "score": 48,
            "tags": [
                "javascript",
                "twitter-bootstrap",
                "twitter-bootstrap-3"
            ],
            "title": "Images not responsive by default in Twitter Bootstrap 3?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>There have been some attempts, but at the moment there isn't a proper library for this:</p>\n\n<p><a href=\"http://www.readwriteweb.com/hack/2011/04/build-desktop-apps-with-nodejs.php\" rel=\"nofollow\">http://www.readwriteweb.com/hack/2011/04/build-desktop-apps-with-nodejs.php</a> <br />\n<a href=\"https://github.com/appcelerator-titans/nodejs-desktop-prototype\" rel=\"nofollow\">https://github.com/appcelerator-titans/nodejs-desktop-prototype</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"https://github.com/rogerwang/node-webkit\">https://github.com/rogerwang/node-webkit</a> is a project with the goal of running an instance of the webkit browser engine in the same process as nodejs. It allows you to directly use nodes API in the browser. It <s>currently only works on linux</s> works on Windows, Mac and Linux now.</p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>I have been investigating this very topic since the <a href=\"https://github.com/rogerwang/node-webkit\">node-webkit</a> project was announced.<br>\nI have a blog post about my early efforts <a href=\"http://csainty.blogspot.com/2012/01/creating-desktop-apps-with-nodejs.html\">http://csainty.blogspot.com/2012/01/creating-desktop-apps-with-nodejs.html</a></p>\n\n<p>In the latest code drop you can now specify an application closedown callback, which makes it easy now to instantiate your applicaton and a localhost webserver when the application is started. Then close it all down cleanly when it is closed.</p>\n\n<p>This make it pretty easy to port a web application to the desktop depending on what other server dependencies you might have.</p>\n\n<pre><code>var nwebkit = require('node-webkit'),\n    http = require('http');\n\nvar server = http.createServer(function (req, res) {\n    // If you need it you can create a local web server\n    // You can also use express etc if preferred\n    }).listen(3000, '127.0.0.1');\n\nnwebkit.init({\n    'url': 'index.html',\n    'width': 800,\n    'height': 600,\n    'onclose': function() {\n       server.close();\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>you can write a desktop app using Qt with node </p>\n\n<p>see this binding</p>\n\n<p><a href=\"https://github.com/arturadib/node-qt\">https://github.com/arturadib/node-qt</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I am also investigating this.</p>\n\n<p>AppJS is looking very promising as an api for building cross platform desktop apps using HTML5, CSS3 and NodeJS. Unfortunately for me it's probably not well enough developed for my next project.</p>\n\n<ul>\n<li><p><a href=\"http://appjs.com/\">appjs.com</a></p></li>\n<li><p><a href=\"https://github.com/appjs/appjs/wiki\">github wiki</a></p></li>\n<li><p><a href=\"http://dl.dropbox.com/u/16384823/appjs_docs/index.html\">draft docs</a></p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I've created an application using node.js, and I'm interested to know if it's possible to pack the client side (js, html ,css) and the server side into a standalone application (that doesn't required browser).</p>\n",
            "last_activity_date": 1379831913,
            "question_id": 8794140,
            "score": 39,
            "tags": [
                "javascript",
                "node.js",
                "window"
            ],
            "title": "Is it possible to create desktop applications with node.js?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>This probably is not what you want but you could scrap the page for the information using the following:</p>\n\n<pre><code>document.getElementsByClassName('watch-view-count')[0].innerHTML\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>I think, the easiest way, is to get video info in JSON format. If you want to use JavaScript, try  <a href=\"http://api.jquery.com/jQuery.getJSON/\">jQuery.getJSON()</a>... But I prefer PHP:</p>\n\n<pre><code>&lt;?php\n$video_ID = 'your-video-ID';\n$JSON = file_get_contents(\"https://gdata.youtube.com/feeds/api/videos/{$video_ID}?v=2&amp;alt=json\");\n$JSON_Data = json_decode($JSON);\n$views = $JSON_Data-&gt;{'entry'}-&gt;{'yt$statistics'}-&gt;{'viewCount'};\necho $views;\n?&gt;\n</code></pre>\n\n<p>Ref: <a href=\"https://developers.google.com/youtube/2.0/developers_guide_protocol#Retrieve_video_entry\">Youtube API - Retrieving information about a single video</a></p>\n",
                    "is_accepted": true,
                    "score": 53
                },
                {
                    "body": "<p>look at <a href=\"http://code.google.com/apis/youtube/2.0/reference.html#youtube_data_api_tag_yt%3astatistics\" rel=\"nofollow\"><code>yt:statistics</code></a> tag.\nIt provides <code>viewCount</code>, <code>videoWatchCount</code>, <code>favoriteCount</code> etc.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here an example that I used in my <a href=\"http://tubecount.com\" rel=\"nofollow\">TubeCount app</a>.</p>\n\n<p>I also use the fields parameter to filter the JSON result, so only the fields that I need are returned.</p>\n\n<pre><code>var fields = \"fields=openSearch:totalResults,entry(title,media:group(yt:videoid),media:group(yt:duration),media:group(media:description),media:group(media:thumbnail[@yt:name='default'](@url)),yt:statistics,yt:rating,published,gd:comments(gd:feedLink(@countHint)))\";\n\nvar channel = \"wiibart\";\n\n$.ajax({\n    url: \"http://gdata.youtube.com/feeds/api/users/\"+channel+\"/uploads?\"+fields+\"&amp;v=2&amp;alt=json\",\n    success: function(data){\n\n        var len = data.feed.entry.length;\n\n        for(var k =0; k&lt;len; k++){\n            var yt = data.feed.entry[k];\n            v.count = Number(yt.yt$statistics != undefined &amp;&amp; yt.yt$statistics.viewCount != undefined ? yt.yt$statistics.viewCount : 0);\n        }\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use the new YouTube Data API v3</p>\n\n<p>if you retrieve the video, the <strong>statistics</strong> part contains the <strong>viewCount</strong>:</p>\n\n<p>from the doc:</p>\n\n<p><a href=\"https://developers.google.com/youtube/v3/docs/videos#resource\">https://developers.google.com/youtube/v3/docs/videos#resource</a></p>\n\n<p>statistics.viewCount / The number of times the video has been viewed.</p>\n\n<p>You can retrieve this info in the client side, or in the server side using some of the client libraries:</p>\n\n<p><a href=\"https://developers.google.com/youtube/v3/libraries\">https://developers.google.com/youtube/v3/libraries</a></p>\n\n<p>And you can test the API call from the doc:</p>\n\n<p><a href=\"https://developers.google.com/youtube/v3/docs/videos/list\">https://developers.google.com/youtube/v3/docs/videos/list</a></p>\n\n<p>Sample:</p>\n\n<p>Request:</p>\n\n<pre><code>GET https://www.googleapis.com/youtube/v3/videos?part=statistics&amp;id=Q5mHPo2yDG8&amp;key={YOUR_API_KEY}\n\nAuthorization:  Bearer ya29.AHES6ZSCT9BmIXJmjHlRlKMmVCU22UQzBPRuxzD7Zg_09hsG\nX-JavaScript-User-Agent:  Google APIs Explorer\n</code></pre>\n\n<p>Response:</p>\n\n<pre><code>200 OK\n\n- Show headers -\n\n{\n \"kind\": \"youtube#videoListResponse\",\n \"etag\": \"\\\"g-RLCMLrfPIk8n3AxYYPPliWWoo/dZ8K81pnD1mOCFyHQkjZNynHpYo\\\"\",\n \"pageInfo\": {\n  \"totalResults\": 1,\n  \"resultsPerPage\": 1\n },\n \"items\": [\n  {\n\n   \"id\": \"Q5mHPo2yDG8\",\n   \"kind\": \"youtube#video\",\n   \"etag\": \"\\\"g-RLCMLrfPIk8n3AxYYPPliWWoo/4NA7C24hM5mprqQ3sBwI5Lo9vZE\\\"\",\n   \"statistics\": {\n    \"viewCount\": \"36575966\",\n    \"likeCount\": \"127569\",\n    \"dislikeCount\": \"5715\",\n    \"favoriteCount\": \"0\",\n    \"commentCount\": \"20317\"\n   }\n  }\n ]\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Here is a small code snippet to get Youtube video views from URL using Javascript</p>\n\n<p><strong><a href=\"http://jsfiddle.net/surendraVsingh/g39x3/\" rel=\"nofollow\">Demo of below code</a></strong></p>\n\n<pre><code>    function videoViews() {\nvar rex = /[a-zA-Z0-9\\-\\_]{11}/,\n    videoUrl = $('input').val() === '' ? alert('Enter a valid Url'):$('input').val(),\n    videoId = videoUrl.match(rex),\n    jsonUrl = 'http://gdata.youtube.com/feeds/api/videos/' + videoId + '?v=2&amp;alt=json',\n   embedUrl = '//www.youtube.com/embed/' + videoId,\n   embedCode = '&lt;iframe width=\"350\" height=\"197\" src=\"' + embedUrl + '\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;'\n\n\n//Get Views from JSON\n$.getJSON(jsonUrl, function (videoData) {\n    var videoJson = JSON.stringify(videoData),\n        vidJson = JSON.parse(videoJson),\n        views = vidJson.entry.yt$statistics.viewCount;\n    $('.views').text(views);\n});\n\n//Embed Video\n$('.videoembed').html(embedCode);}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can use this too:</p>\n\n<pre><code>&lt;?php\n    $youtube_view_count = json_decode(file_get_contents('http://gdata.youtube.com/feeds/api/videos/wGG543FeHOE?v=2&amp;alt=json'))-&gt;entry-&gt;{'yt$statistics'}-&gt;viewCount;\n    echo $youtube_view_count;\n    ?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>The question is very simple. How to get number of video views with YouTube API? </p>\n\n<p><img src=\"http://i.stack.imgur.com/l0OWA.png\" alt=\"enter image description here\"></p>\n\n<p>The task is simple but I would like to use that query on large number of videos very often. Is there any way to call their Youtube API and get it? (something like facebook <a href=\"http://api.facebook.com/restserver.php?method=links.getStats&amp;urls=developers.facebook.com\">http://api.facebook.com/restserver.php?method=links.getStats&amp;urls=developers.facebook.com</a>)</p>\n",
            "last_activity_date": 1407757278,
            "question_id": 3331176,
            "score": 36,
            "tags": [
                "javascript",
                "youtube-api"
            ],
            "title": "How to get number of video views with YouTube API?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Using the javascript engine that is shipped with Java 6:</p>\n\n<pre>\n<code>\nimport javax.script.ScriptEngine;\nimport javax.script.ScriptEngineManager;\n\npublic class Wow\n{\n    public static void main(String[] args) throws Exception\n    {\n        ScriptEngineManager factory = new ScriptEngineManager();\n        ScriptEngine engine = factory.getEngineByName(\"JavaScript\");\n        engine.eval(\"print(encodeURIComponent('\\\"A\\\" B \u00b1 \\\"'))\");\n    }\n}\n</code>\n</pre>\n\n<p>Output: %22A%22%20B%20%c2%b1%20%22</p>\n\n<p>The case is different but it's closer to what you want.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Looking at the implementation differences, I see that:</p>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/encodeURIComponent\" rel=\"nofollow\">MDC on <code>encodeURIComponent()</code></a>:</p>\n\n<ul>\n<li>literal characters (regex representation): <code>[-a-zA-Z0-9._*~'()!]</code></li>\n</ul>\n\n<p><a href=\"http://docs.oracle.com/javase/1.5.0/docs/api/java/net/URLEncoder.html\" rel=\"nofollow\">Java 1.5.0 documentation on <code>URLEncoder</code></a>:</p>\n\n<ul>\n<li>literal characters (regex representation): <code>[-a-zA-Z0-9._*]</code></li>\n<li>the space character <code>\" \"</code> is converted into a plus sign <code>\"+\"</code>. </li>\n</ul>\n\n<p>So basically, to get the desired result, use <code>URLEncoder.encode(s, \"UTF-8\")</code> and then do some post-processing:</p>\n\n<ul>\n<li>replace all occurrences of <code>\"+\"</code> with <code>\"%20\"</code></li>\n<li>replace all occurrences of <code>\"%xx\"</code> representing any of <code>[~'()!]</code> back to their literal counter-parts</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>This is the class I came up with in the end:</p>\n\n<pre><code>import java.io.UnsupportedEncodingException;\nimport java.net.URLDecoder;\nimport java.net.URLEncoder;\n\n/**\n * Utility class for JavaScript compatible UTF-8 encoding and decoding.\n * \n * @see http://stackoverflow.com/questions/607176/java-equivalent-to-javascripts-encodeuricomponent-that-produces-identical-output\n * @author John Topley \n */\npublic class EncodingUtil\n{\n  /**\n   * Decodes the passed UTF-8 String using an algorithm that's compatible with\n   * JavaScript's &lt;code&gt;decodeURIComponent&lt;/code&gt; function. Returns\n   * &lt;code&gt;null&lt;/code&gt; if the String is &lt;code&gt;null&lt;/code&gt;.\n   *\n   * @param s The UTF-8 encoded String to be decoded\n   * @return the decoded String\n   */\n  public static String decodeURIComponent(String s)\n  {\n    if (s == null)\n    {\n      return null;\n    }\n\n    String result = null;\n\n    try\n    {\n      result = URLDecoder.decode(s, \"UTF-8\");\n    }\n\n    // This exception should never occur.\n    catch (UnsupportedEncodingException e)\n    {\n      result = s;  \n    }\n\n    return result;\n  }\n\n  /**\n   * Encodes the passed String as UTF-8 using an algorithm that's compatible\n   * with JavaScript's &lt;code&gt;encodeURIComponent&lt;/code&gt; function. Returns\n   * &lt;code&gt;null&lt;/code&gt; if the String is &lt;code&gt;null&lt;/code&gt;.\n   * \n   * @param s The String to be encoded\n   * @return the encoded String\n   */\n  public static String encodeURIComponent(String s)\n  {\n    String result = null;\n\n    try\n    {\n      result = URLEncoder.encode(s, \"UTF-8\")\n                         .replaceAll(\"\\\\+\", \"%20\")\n                         .replaceAll(\"\\\\%21\", \"!\")\n                         .replaceAll(\"\\\\%27\", \"'\")\n                         .replaceAll(\"\\\\%28\", \"(\")\n                         .replaceAll(\"\\\\%29\", \")\")\n                         .replaceAll(\"\\\\%7E\", \"~\");\n    }\n\n    // This exception should never occur.\n    catch (UnsupportedEncodingException e)\n    {\n      result = s;\n    }\n\n    return result;\n  }  \n\n  /**\n   * Private constructor to prevent this class from being instantiated.\n   */\n  private EncodingUtil()\n  {\n    super();\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 51
                },
                {
                    "body": "<p>I came up with another implementation documented at, <a href=\"http://blog.sangupta.com/2010/05/encodeuricomponent-and.html\" rel=\"nofollow\">http://blog.sangupta.com/2010/05/encodeuricomponent-and.html</a>. The implementation can also handle Unicode bytes.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I came up with my own version of the encodeURIComponent, because the posted solution has one problem, if there was a + present in the String, which should be encoded, it will converted to a space. </p>\n\n<p>So here is my class:</p>\n\n<pre><code>import java.io.UnsupportedEncodingException;\nimport java.util.BitSet;\n\npublic final class EscapeUtils\n{\n    /** used for the encodeURIComponent function */\n    private static final BitSet dontNeedEncoding;\n\n    static\n    {\n        dontNeedEncoding = new BitSet(256);\n\n        // a-z\n        for (int i = 97; i &lt;= 122; ++i)\n        {\n            dontNeedEncoding.set(i);\n        }\n        // A-Z\n        for (int i = 65; i &lt;= 90; ++i)\n        {\n            dontNeedEncoding.set(i);\n        }\n        // 0-9\n        for (int i = 48; i &lt;= 57; ++i)\n        {\n            dontNeedEncoding.set(i);\n        }\n\n        // '()*\n        for (int i = 39; i &lt;= 42; ++i)\n        {\n            dontNeedEncoding.set(i);\n        }\n        dontNeedEncoding.set(33); // !\n        dontNeedEncoding.set(45); // -\n        dontNeedEncoding.set(46); // .\n        dontNeedEncoding.set(95); // _\n        dontNeedEncoding.set(126); // ~\n    }\n\n    /**\n     * A Utility class should not be instantiated.\n     */\n    private EscapeUtils()\n    {\n\n    }\n\n    /**\n     * Escapes all characters except the following: alphabetic, decimal digits, - _ . ! ~ * ' ( )\n     * \n     * @param input\n     *            A component of a URI\n     * @return the escaped URI component\n     */\n    public static String encodeURIComponent(String input)\n    {\n        if (input == null)\n        {\n            return input;\n        }\n\n        StringBuilder filtered = new StringBuilder(input.length());\n        char c;\n        for (int i = 0; i &lt; input.length(); ++i)\n        {\n            c = input.charAt(i);\n            if (dontNeedEncoding.get(c))\n            {\n                filtered.append(c);\n            }\n            else\n            {\n                final byte[] b = charToBytesUTF(c);\n\n                for (int j = 0; j &lt; b.length; ++j)\n                {\n                    filtered.append('%');\n                    filtered.append(\"0123456789ABCDEF\".charAt(b[j] &gt;&gt; 4 &amp; 0xF));\n                    filtered.append(\"0123456789ABCDEF\".charAt(b[j] &amp; 0xF));\n                }\n            }\n        }\n        return filtered.toString();\n    }\n\n    private static byte[] charToBytesUTF(char c)\n    {\n        try\n        {\n            return new String(new char[] { c }).getBytes(\"UTF-8\");\n        }\n        catch (UnsupportedEncodingException e)\n        {\n            return new byte[] { (byte) c };\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I have found PercentEscaper class from google-http-java-client library, that can be used to implement encodeURIComponent quite easily.</p>\n\n<p><a href=\"http://javadoc.google-http-java-client.googlecode.com/hg/1.9.0-beta/com/google/api/client/util/escape/PercentEscaper.html\" rel=\"nofollow\">PercentEscaper from google-http-java-client javadoc</a>\n<a href=\"http://code.google.com/p/google-http-java-client/\" rel=\"nofollow\">google-http-java-client home</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've been experimenting with various bits of Java code trying to come up with something that will encode a string containing quotes, spaces and \"exotic\" Unicode characters and produce output that's identical to JavaScript's <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/encodeURIComponent\">encodeURIComponent</a> function.</p>\n\n<p>My torture test string is: <strong>\"A\" B \u00b1 \"</strong></p>\n\n<p>If I enter the following JavaScript statement in Firebug:</p>\n\n<pre><code>encodeURIComponent('\"A\" B \u00b1 \"');\n</code></pre>\n\n<p>&mdash;Then I get:</p>\n\n<pre><code>\"%22A%22%20B%20%C2%B1%20%22\"\n</code></pre>\n\n<p>Here's my little test Java program:</p>\n\n<pre><code>import java.io.UnsupportedEncodingException;\nimport java.net.URLEncoder;\n\npublic class EncodingTest\n{\n  public static void main(String[] args) throws UnsupportedEncodingException\n  {\n    String s = \"\\\"A\\\" B \u00b1 \\\"\";\n    System.out.println(\"URLEncoder.encode returns \"\n      + URLEncoder.encode(s, \"UTF-8\"));\n\n    System.out.println(\"getBytes returns \"\n      + new String(s.getBytes(\"UTF-8\"), \"ISO-8859-1\"));\n  }\n}\n</code></pre>\n\n<p>&mdash;This program outputs:</p>\n\n<pre>URLEncoder.encode returns %22A%22+B+%C2%B1+%22\ngetBytes returns \"A\" B \u00b1 \"</pre>\n\n<p>Close, but no cigar! What is the best way of encoding a UTF-8 string using Java so that it produces the same output as JavaScript's <code>encodeURIComponent</code>?</p>\n\n<p><strong>EDIT:</strong> I'm using Java 1.4 moving to Java 5 shortly.</p>\n",
            "last_activity_date": 1397745891,
            "question_id": 607176,
            "score": 34,
            "tags": [
                "java",
                "javascript",
                "unicode",
                "utf-8"
            ],
            "title": "Java equivalent to JavaScript&#39;s encodeURIComponent that produces identical output?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>If you wrap your modules in blocks (e.g. anon functions) you can bind to a local name (via parameter or 'var') and then have any arbitrary long (perhaps \"package\" labeled) name you want (if you even need a global at this point).</p>\n\n<p>For instance, my modules often look similar to:</p>\n\n<pre><code>;(function ($, $exp, other) {\n  $(...)\n  other.xyz()\n  $exp.MyExportedObject = ...;\n})(jQuery, window, some_module.other_expression) // end module\n</code></pre>\n\n<p>I use jQuery with noConflict, this the former, and the latter show you can do this for any expression -- global, require, computed, in-line, whatever... this same \"wrapping\" approach can be used to eliminate all (or almost all) \"special named\" globals -- globals must exist at some level, however, removing potentially conflicts is a very big win.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Each module is supposed to be independent. The require doesn't cost anything anyways after the first one for each module.</p>\n\n<p>What if you wanted to test one module alone? You'd be having a lot of issues because it wouldn't recognize some \"global\" requires that you have in your app.</p>\n\n<p>Yes, globals are bad, even in this case. Globals almost always ruin: testability, encapsulation and ease of maintenance.</p>\n\n<p><strike><strong>Updated answer Jan. 2012</strong></p>\n\n<p>The <code>global</code> object is now a global inside each module. So every time you assign to a global variable (no scope) inside a module, that becomes part of the <code>global</code> object of that module.</p>\n\n<p>The <code>global</code> object is therefore still not <em>global</em>, and cannot be used as such.</strike></p>\n\n<p><strong>Updated Dec. 2012</strong></p>\n\n<p>The <code>global</code> object now has the global scope within the application and can be used to store any data/functions that need to be accessed from all modules.</p>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>You could just have a common module.</p>\n\n<p>common.js:</p>\n\n<pre><code>Common = {\n  util: require('util'),\n  fs:   require('fs'),\n  path: require('path')\n};\n\nmodule.exports = Common;\n</code></pre>\n\n<p>app.js:</p>\n\n<pre><code>var Common = require('./common.js');\nconsole.log(Common.util.inspect(Common));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 78
                },
                {
                    "body": "<pre><code>global.util = require('util');\n</code></pre>\n\n<p>There's a section about global objects in the <a href=\"http://nodejs.org/api/globals.html#globals_global_objects\">node documentation</a>.</p>\n\n<p>However, globals should be used with care. By adding modules to the global space you reduce testability and encapsulation. But there are cases where using this method is acceptable. For example, I add functions and objects to the global namespace to use within my unit test scripts.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>I have successfully been using the <code>process</code> object for passing around my configuration object. While in theory suffering from the exact same issues as mentioned above (encapsulation, testability and so forth) it works fine when using only non-state modifying properties (a hash table with primitives, basically).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm confused by the answers in this thread.</p>\n\n<p>I am able to do this...</p>\n\n<p>File: test.js</p>\n\n<pre><code>global.mytest = {\n    x: 3,\n    y: function() { console.log('Works.'); }\n};\n</code></pre>\n\n<p>File: test2.js</p>\n\n<pre><code>console.log('Does this work?');\nmytest.y();\n</code></pre>\n\n<p>File: server.js</p>\n\n<pre><code>require('test.js');\nrequire('test2.js');\n</code></pre>\n\n<p>And it seems to work as the question needed. The first require places the mytest object into the global scope, then the second require can access that object without any other qualifiers.</p>\n\n<p>I was trying to figure this out (which brought me to this thread from a Google search) and I wanted to post what seems to work for me now. Maybe things have changed since the original answers.</p>\n",
                    "is_accepted": false,
                    "score": 16
                }
            ],
            "body": "<p>I know that global variables are bad.</p>\n\n<p>But if I am using node's module \"util\" in 40 files in my framework, isn't it better to just declare it as a global variable like:</p>\n\n<pre><code>util = require('util');\n</code></pre>\n\n<p>in the index.js file instead of writing that line in 40 files?</p>\n\n<p>Cause I often use the same 5-10 modules in each file, that would save a lot of time instead of copy paste all the time.</p>\n\n<p>Isn't DRY good in this case?</p>\n",
            "last_activity_date": 1356814945,
            "question_id": 4140661,
            "score": 32,
            "tags": [
                "javascript",
                "module",
                "node.js",
                "global-variables",
                "shared-libraries"
            ],
            "title": "Global variables for node.js standard modules?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Further parse out the version number (\"5\"), then add a condition where if number is greater than / less than version number.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>First: Don't use <code>match</code> when a <code>test</code> is enough.</p>\n\n<p>Second: You should test the other way round. Find the UAs which are known to be broken.</p>\n\n<pre><code>if(/(iPhone|iPod|iPad)/i.test(navigator.userAgent)) {\n    if (/OS [1-4]_\\d like Mac OS X/i.test(navigator.userAgent)) {\n        changeFooterPosition();\n...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Adding on to Pumbaa80's answer. The version string might be <code>4_0</code>, <code>5_0_1</code>, <code>4_0_4</code>, etc., and so testing against <code>[1-4]_/d</code> (a single underscore and number) isn't adequate. The JavaScript below is working for me for various sub-versions of iOS 3-5:</p>\n\n<pre><code>if (/(iPhone|iPod|iPad)/i.test(navigator.userAgent)) {\n    if (/OS [1-4](.*) like Mac OS X/i.test(navigator.userAgent)) {\n      // iOS version is &lt;= 4.\n    } else {\n      // iOS version is &gt; 4.\n    }\n  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Pumbaa80's Answer was almost 100%, he just left out one part. Some iOS release have a third digit on them.</p>\n\n<p>Example</p>\n\n<pre><code>Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; en_us) AppleWebKit/525.18.1 (KHTML, like Gecko)\n</code></pre>\n\n<p>The follow allows for that </p>\n\n<pre><code>if(/(iPhone|iPod|iPad)/i.test(navigator.userAgent)) { \n    if(/OS [2-4]_\\d(_\\d)? like Mac OS X/i.test(navigator.userAgent)) {  \n        // iOS 2-4 so Do Something   \n    } else if(/CPU like Mac OS X/i.test(navigator.userAgent)) {\n        // iOS 1 so Do Something \n    } else {\n        // iOS 5 or Newer so Do Nothing\n    }\n}\n</code></pre>\n\n<p>That extra bit (_\\d)? allows for the possibility of a third digit in the Version number.\nCharlie S, That should answer your question too.</p>\n\n<p>Note the else because the 1st check won't work on iOS 1. iOS 1 for the iPhone and iPod didn't include a version number in its UserAgent string.</p>\n\n<p>iPhone v 1.0</p>\n\n<pre><code>Mozilla/5.0 (iPhone; U; CPU like Mac OS X; en) AppleWebKit/420+ (KHTML, like Gecko) Version/3.0 Mobile/1A543 Safari/419.3\n</code></pre>\n\n<p>iPod v1.1.3</p>\n\n<pre><code>Mozilla/5.0 (iPod; U; CPU like Mac OS X; en) AppleWebKit/420.1 (KHTML, like Gecko) Version/3.0 Mobile/4A93 Safari/419.3\n</code></pre>\n\n<p>All of this can be found at the following link on <a href=\"http://developer.apple.com/library/IOS/#documentation/AppleApplications/Reference/SafariWebContent/OptimizingforSafarioniPhone/OptimizingforSafarioniPhone.html#//apple_ref/doc/uid/TP40006517-SW3\">Apples website here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Here's a bit of JS to determine iOS and Android OS version.</p>\n\n<p>Tested with actual user agent strings for iOS 4.3 to 6.0.1, and Android 2.3.4 to 4.2</p>\n\n<pre><code>var userOS;    // will either be iOS, Android or unknown\nvar userOSver; // this is a string, use Number(userOSver) to convert\n\nfunction getOS( )\n{\n  var ua = navigator.userAgent;\n  var uaindex;\n\n  // determine OS\n  if ( ua.match(/iPad/i) || ua.match(/iPhone/i) )\n  {\n    userOS = 'iOS';\n    uaindex = ua.indexOf( 'OS ' );\n  }\n  else if ( ua.match(/Android/i) )\n  {\n    userOS = 'Android';\n    uaindex = ua.indexOf( 'Android ' );\n  }\n  else\n  {\n    userOS = 'unknown';\n  }\n\n  // determine version\n  if ( userOS === 'iOS'  &amp;&amp;  uaindex &gt; -1 )\n  {\n    userOSver = ua.substr( uaindex + 3, 3 ).replace( '_', '.' );\n  }\n  else if ( userOS === 'Android'  &amp;&amp;  uaindex &gt; -1 )\n  {\n    userOSver = ua.substr( uaindex + 8, 3 );\n  }\n  else\n  {\n    userOSver = 'unknown';\n  }\n}\n</code></pre>\n\n<p>Then to detect a specific version and higher, try:</p>\n\n<pre><code>if ( userOS === 'iOS' &amp;&amp; Number( userOSver.charAt(0) ) &gt;= 5 ) { ... }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This snippet of code can be used to determine any version of iOS 2.0 and later.</p>\n\n<pre><code>function iOSversion() {\n  if (/iP(hone|od|ad)/.test(navigator.platform)) {\n    // supports iOS 2.0 and later: &lt;http://bit.ly/TJjs1V&gt;\n    var v = (navigator.appVersion).match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    return [parseInt(v[1], 10), parseInt(v[2], 10), parseInt(v[3] || 0, 10)];\n  }\n}\n\nver = iOSversion();\n\nif (ver[0] &gt;= 5) {\n  alert('This is running iOS 5 or later.');\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 47
                }
            ],
            "body": "<p>This is related to the \"fix\" for position:fixed in older versions of iOS. However, if iOS5 or greater is installed, the fix breaks the page.</p>\n\n<p>I know <em>how</em> to detect iOS 5: <code>navigator.userAgent.match(/OS 5_\\d like Mac OS X/i)</code> but that won't work for iOS6 when it eventually comes around, or even iOS 5.0.1, only a 2 digit version.</p>\n\n<p>So this is what I have atm.</p>\n\n<pre><code>$(document).bind(\"scroll\", function() {\n    if((navigator.userAgent.match(/iPhone/i)) || (navigator.userAgent.match(/iPod/i)) || (navigator.userAgent.match(/iPad/i))) {\n        if (navigator.userAgent.match(/OS 5_\\d like Mac OS X/i)) {\n    }\n    else {\n        changeFooterPosition();\n    }\n});\n</code></pre>\n",
            "last_activity_date": 1382809733,
            "question_id": 8348139,
            "score": 21,
            "tags": [
                "javascript",
                "ios",
                "version-detection"
            ],
            "title": "Detect iOS version less than 5 with JavaScript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>var length = $('#selected ul').children('li').length\n// or the same:\nvar length = $('#selected ul &gt; li').length\n</code></pre>\n\n<p>You probably could also omit <code>li</code> in the children's selector.</p>\n\n<p>See <a href=\"http://api.jquery.com/length/\"><code>.length</code></a>.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>You can use <a href=\"http://api.jquery.com/length/\"><code>.length</code></a> with just a <a href=\"http://api.jquery.com/descendant-selector/\">descendant selector</a>, like this:</p>\n\n<pre><code>var count = $(\"#selected li\").length;\n</code></pre>\n\n<p>If you have to use <a href=\"http://api.jquery.com/children/\"><code>.children()</code></a>, then it's like this:</p>\n\n<pre><code>var count = $(\"#selected ul\").children().length;\n</code></pre>\n\n<p><a href=\"http://www.jsfiddle.net/nick_craver/VXg2D/\">You can test both versions here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 265
                },
                {
                    "body": "<pre><code>$('#selected ul').children().length;\n</code></pre>\n\n<p>or even better</p>\n\n<pre><code> $('#selected li').length;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>fastest one:</p>\n\n<pre><code>$(\"div#selected ul li\").length\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<pre><code>$(\"#selected &gt; ul &gt; li\").size()\n</code></pre>\n\n<p>or:</p>\n\n<pre><code>$(\"#selected &gt; ul &gt; li\").length\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>You can use JavaScript (don't need jQuery)</p>\n\n<pre><code>document.querySelectorAll('#selected li').length;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<pre><code>&lt;div id=\"selected\"&gt;\n    &lt;ul&gt;\n        &lt;li&gt;29&lt;/li&gt;\n        &lt;li&gt;16&lt;/li&gt;\n        &lt;li&gt;5&lt;/li&gt;\n        &lt;li&gt;8&lt;/li&gt;\n        &lt;li&gt;10&lt;/li&gt;\n        &lt;li&gt;7&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>I want to count the total number of <code>&lt;li&gt;</code> elements in <code>&lt;div id=\"selected\"&gt;&lt;/div&gt;</code>. How is that possible using jQuery's <code>.children([selector])</code>?</p>\n",
            "last_activity_date": 1389345814,
            "question_id": 4291151,
            "score": 135,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery count child elements"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>It's used for iterator-generators.  Basically, it allows you to you to make a (potentially infinite) sequence using procedural code.  See <a href=\"https://developer.mozilla.org/en/New_in_JavaScript_1.7#Generators_and_iterators\">Mozilla's documentation</a>.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>The <a href=\"https://developer.mozilla.org/en/New_in_JavaScript_1.7#Generators\">MDN documentation</a> is pretty good, IMO.</p>\n\n<blockquote>\n  <p>The function containing the yield keyword is a generator. When you call it, its formal parameters are bound to actual arguments, but its body isn't actually evaluated. Instead, a generator-iterator is returned. Each call to the generator-iterator's next() method performs another pass through the iterative algorithm. Each step's value is the value specified by the yield keyword. Think of yield as the generator-iterator version of return, indicating the boundary between each iteration of the algorithm. Each time you call next(), the generator code resumes from the statement following the yield.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 58
                },
                {
                    "body": "<p>Basically it's same as <code>yield return</code> <a href=\"http://msdn.microsoft.com/en-us/library/9k7k7cf0.aspx\" rel=\"nofollow\">in C#</a>.</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>Late answering, probably everybody knows about <code>yield</code> now, but some better documentation has come along.</p>\n\n<p><a href=\"http://jlongster.com/2012/10/05/javascript-yield.html\" rel=\"nofollow\">\"Javascript's Future: Generators\"</a> by James Long has some good examples, including:</p>\n\n<pre><code>function foo(x) {\n    while (true) {\n        x = x * 2;\n        yield x;\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>\"When you call foo, you get back a Generator object which has a next\n  method.\"</p>\n</blockquote>\n\n<pre><code>var g = foo(2);\ng.next(); // -&gt; 4\ng.next(); // -&gt; 8\ng.next(); // -&gt; 16\n</code></pre>\n\n<p>So <code>yield</code> is kind of like <code>return</code>: you get something back.  <code>return x</code> returns the value of <code>x</code>, but <code>yield x</code> returns a function, which gives you a method to iterate toward the next value.  Useful if you have a <a href=\"http://stackoverflow.com/questions/20815278/porting-invregex-py-to-javascript-node-js\">potentially memory intensive procedure</a> that you might want to interrupt during the iteration.</p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>To give a complete answer: <code>yield</code> is working similar to <code>return</code>, but in a generator.</p>\n\n<p>As for the commonly give example, this works as follows:</p>\n\n<pre><code>function *squareGen(x) {\n    var i;\n    for (i = 0; i &lt; x; i++) {\n        yield i*i;\n    }\n}\n\nvar gen = squareGen(3);\n\nconsole.log(gen.next().value); // prints 0\nconsole.log(gen.next().value); // prints 1\nconsole.log(gen.next().value); // prints 4\n</code></pre>\n\n<p>But theres also a second purpose of the yield keyword. It can be used to send values to the generator.</p>\n\n<p>To clarify, a small example:</p>\n\n<pre><code>function *sendStuff() {\n    y = yield (0);\n    yield y*y;\n}\n\nvar gen = sendStuff();\n\nconsole.log(gen.next().value); // prints 0\nconsole.log(gen.next(2).value); // prints 4\n</code></pre>\n\n<p>This works, as the value <code>2</code> is assigned to <code>y</code>, by sending it to the generator, after it stopped at the first yield (which returned <code>0</code>).</p>\n\n<p>This enables us to to some really funky stuff. (look up coroutine)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><code>yield</code> can also be used to eliminate callback hell, with a coroutine framework.</p>\n\n<pre><code>function start(routine, data) {\n    result = routine.next(data);\n    if(!result.done) {\n        result.value(function(err, data) {\n            if(err) routine.throw(err); // continue next iteration of routine with an exception\n            else start(routine, data);  // continue next iteration of routine normally\n        });\n    }\n}\n\n// with nodejs as 'node --harmony'\nfs = require('fs');\nfunction read(path) {\n    return function(callback) { fs.readFile(path, {encoding:'utf8'}, callback); };\n}\n\nfunction* routine() {\n    text = yield read('/path/to/some/file.txt');\n    console.log(text);\n}\n\n// with mdn javascript 1.7\nhttp.get = function(url) {\n    return function(callback) { \n        // make xhr request object, \n        // use callback(null, resonseText) on status 200,\n        // or callback(responseText) on status 500\n    };\n};\n\nfunction* routine() {\n    text = yield http.get('/path/to/some/file.txt');\n    console.log(text);\n}\n\n// invoked as.., on both mdn and nodejs\n\nstart(routine());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I heard about a \"yield\" keyword in JavaScript, but I found very poor documentation about it. Can someone explain me (or recommend a site that explains) its usage and what it is used for?</p>\n",
            "last_activity_date": 1420491327,
            "question_id": 2282140,
            "score": 79,
            "tags": [
                "javascript",
                "yield",
                "keyword"
            ],
            "title": "What&#39;s the yield keyword in JavaScript?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I believe you want <code>window.onload</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I don't think JavaScript has that function built in. It is jQuery specific.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>In plain vanilla JavaScript, with no libraries? It's an error. <code>$</code> is simply an identifier, and is undefined unless you define it.</p>\n\n<p>jQuery defines <code>$</code> as it's own \"everything object\" (also known as <code>jQuery</code> so you can use it without conflicting with other libraries). If you're not using jQuery (or some other library that defines it), then <code>$</code> will not be defined.</p>\n\n<p>Or are you asking what the equivalent is in plain JavaScript? In that case, you probably want <a href=\"https://developer.mozilla.org/en/DOM/window.onload\" rel=\"nofollow\"><code>window.onload</code></a>, which isn't exactly equivalent, but is the quickest and easiest way to get close to the same effect in vanilla JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The nice thing about <code>$(document).ready()</code> is that it fires before <code>window.onload</code>. The load function waits until everything is loaded, including external assets and images. <code>$(document).ready</code>, however, fires when the DOM tree is complete and can be manipulated. If you want to acheive DOM ready, without jQuery, you might check into this library. Someone extracted just the <code>ready</code> part from jQuery. Its nice and small and you might find it useful:</p>\n\n<p><a href=\"http://code.google.com/p/domready/\">domready at Google Code</a></p>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>This works perfectly, from ECMA</p>\n\n<pre><code>document.addEventListener(\"DOMContentLoaded\", function() {\n  // code...\n});\n</code></pre>\n\n<p>The <code>window.onload</code> dosen't equal to JQuery <code>$(document).ready</code> because JQuery waits only to the DOM tree while Vanilla JS check all elements including external assets and images.</p>\n\n<p><strong>EDIT</strong>: Added IE8 and older equivalent, thanks to <a href=\"http://stackoverflow.com/users/63849/jan-derk\">Jan Derk</a></p>\n\n<pre><code>document.attachEvent(\"onreadystatechange\", function(){\n  if (document.readyState === \"complete\"){\n    document.detachEvent( \"onreadystatechange\", arguments.callee );\n    // code ...\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 42
                },
                {
                    "body": "<p>I know its quite late now, but you can use <code>document.readyState</code> as below, its simple, and I think it will serve you purpose too:  </p>\n\n<pre><code>(function(){\nvar timer = 0;\nfunction load()\n{\n    if(document.readyState==='complete')\n    {\n        clearTimeout(timer);\n        console.log(\"document is ready now\");\n    }\n}\ntimer = setTimeout(load,1000);\n})();  \n</code></pre>\n\n<p>In above code, I am using an IIFE (Immidiately Invoked Function Expression) in JavaScript, which invoked as soon as script loaded into browser. <code>setTimeout()</code> will call <code>load()</code> function every 1 second till <code>document.readyState</code> reached to <code>complete</code> state. Once it reached, <code>clearTimeout()</code> will remove timer and you can go ahead implementing your own code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A little thing I put together</p>\n\n<p><strong>domready.js</strong></p>\n\n<pre><code>(function(exports, d) {\n  function domReady(fn, context) {\n\n    function onReady(event) {\n      d.removeEventListener(\"DOMContentLoaded\", onReady);\n      fn.call(context || exports, event);\n    }\n\n    function onReadyIe(event) {\n      if (d.readyState === \"complete\") {\n        d.detachEvent(\"onreadystatechange\", onReadyIe);\n        fn.call(context || exports, event);\n      }\n    }\n\n    d.addEventListener &amp;&amp; d.addEventListener(\"DOMContentLoaded\", onReady) ||\n    d.attachEvent      &amp;&amp; d.attachEvent(\"onreadystatechange\", onReadyIe);\n  }\n\n  exports.domReady = domReady;\n})(window, document);\n</code></pre>\n\n<p>How to use it</p>\n\n<pre><code>&lt;script src=\"domready.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  domReady(function(event) {\n    alert(\"dom is ready!\");\n  });\n&lt;/script&gt;\n</code></pre>\n\n<p>You can also change the context in which the callback runs by passing a second argument</p>\n\n<pre><code>function init(event) {\n  alert(\"check the console\");\n  this.log(event);\n}\n\ndomReady(init, console);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What is the non-jQuery equivalent of <code>$(document).ready()</code>?</p>\n",
            "last_activity_date": 1417585297,
            "question_id": 2304941,
            "score": 75,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "What is the non-jQuery equivalent of &#39;$(document).ready()&#39;?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You need to use util.inspect()</p>\n\n<pre><code>var util = require('util');\n\nconsole.log(util.inspect(myObject, {showHidden: false, depth: null}));\n\n# alternative shortcut\nconsole.log(util.inspect(myObject, false, null));\n</code></pre>\n\n<p>Outputs</p>\n\n<pre><code>{ a: 'a',  b: { c: 'c', d: { e: 'e', f: { g: 'g', h: { i: 'i' } } } } }\n</code></pre>\n\n<p>See <a href=\"http://nodejs.org/api/util.html#util_util_inspect_object_options\">http://nodejs.org/api/util.html#util_util_inspect_object_options</a></p>\n",
                    "is_accepted": true,
                    "score": 123
                },
                {
                    "body": "<p>You can use <code>JSON.stringify</code>, and get some nice indentation as well as perhaps easier to remember syntax.</p>\n\n<pre><code>console.log(JSON.stringify(myObject, null, 4));\n</code></pre>\n\n<hr>\n\n<pre><code>{\n    \"a\": \"a\",\n    \"b\": {\n        \"c\": \"c\",\n        \"d\": {\n            \"e\": \"e\",\n            \"f\": {\n                \"g\": \"g\",\n                \"h\": {\n                    \"i\": \"i\"\n                }\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>The third argument sets the indentation level, so you can adjust that as desired.</p>\n\n<p>More detail here if needed:</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify</a></p>\n",
                    "is_accepted": false,
                    "score": 82
                },
                {
                    "body": "<p>Another simple method is to convert it to json</p>\n\n<pre><code>console.log('connection : %j', myObject);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>perhaps <code>console.dir</code> is all you need.</p>\n\n<p><a href=\"http://nodejs.org/api/console.html#console_console_dir_obj\">http://nodejs.org/api/console.html#console_console_dir_obj</a></p>\n\n<blockquote>\n  <p>Uses util.inspect on obj and prints resulting string to stdout.</p>\n</blockquote>\n\n<p>use util option if you need more control.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>A compilation of the many useful answers as of node.js <code>v0.10.33</code> (stable) / <code>v0.11.14</code> (unstable):</p>\n\n<p><code>util.inspect()</code> is at the heart of diagnostic output - <strong><code>console.log()</code> and <code>console.dir()</code> use it implicitly, as does the node.js REPL</strong>, so it's <strong>generally NOT necessary to <code>require('util')</code> and call <code>util.inspect()</code> directly</strong>:</p>\n\n<ul>\n<li><p><strong><code>console.log()</code></strong> (and its alias, <code>console.info()</code>):</p>\n\n<ul>\n<li>If the <strong>1st argument is NOT a format string</strong>: <code>util.inspect()</code> is automatically applied to every argument:\n<ul>\n<li><code>o = { one: 1, two: 'deux', foo: function(){} }; console.log(o, [1,2,3]) // -&gt;  '{ one: 1, two: 'deux', foo: [Function] } [ 1, 2, 3 ]'</code></li>\n<li>Note that you cannot pass options to <code>util.inspect()</code> in this case, which implies 2 notable limitations:\n<ul>\n<li>Structural depth of the output is limited to 2 levels (the default).</li>\n<li>You can't turn syntax coloring on.</li>\n</ul></li>\n</ul></li>\n<li>If the <strong>1st argument IS a format string</strong> (see below): uses <code>util.format()</code> to print the remaining arguments based on the format string (see below); e.g.:\n<ul>\n<li><code>o = { one: 1, two: 'deux', foo: function(){} }; console.log('o as JSON: %j', o) // -&gt;  'o as JSON: {\"one\":1,\"two\":\"deux\"}'</code></li>\n<li>Note:\n<ul>\n<li>There is NO placeholder for representing <em>objects</em> <code>util.inspect()</code>-style.</li>\n<li>JSON generated with <code>%j</code> is NOT pretty-printed.</li>\n</ul></li>\n</ul></li>\n</ul></li>\n<li><p><strong><code>console.dir()</code></strong>:</p>\n\n<ul>\n<li><strong>Accepts only <em>1</em> argument to inspect</strong>, and always applies <code>util.inspect()</code> - essentially, a wrapper for <code>util.inspect()</code> without options by default; e.g.:\n<ul>\n<li><code>o = { one: 1, two: 'deux', foo: function(){} foo: function(){} }; console.dir(o); // Effectively the same as console.log(o) in this case.</code></li>\n</ul></li>\n<li>node.js <strong>v0.11.14+</strong>: The optional 2nd argument specifies options for <code>util.inspect()</code> - see below; e.g.:\n<ul>\n<li><code>console.dir({ one: 1, two: 'deux'}, { colors: true }); // node 0.11+: Prints object representation with syntax coloring.</code></li>\n</ul></li>\n</ul></li>\n</ul>\n\n\n\n<ul>\n<li><strong>node.js REPL</strong>: The REPL <strong>implicitly prints any expression's return value with <code>util.inspect()</code> <em>with</em>  syntax coloring</strong>;<br>\ni.e., just typing a variable's name and hitting Enter will print an inspected version of its value; e.g.:\n<ul>\n<li><code>o = { one: 1, two: 'deux', foo: function(){} }  // echoes the object definition with syntax coloring.</code></li>\n</ul></li>\n</ul>\n\n<p><code>util.inspect()</code> <strong>automatically (and invariably) pretty-prints <em>object</em> and <em>array</em> representations</strong>, but produces <strong>multiline output only when needed</strong> - if everything fits on one line, only 1 line is printed.</p>\n\n<ul>\n<li>Unclear, how the max. line length is defined; in practice, it seems to be hardwired to 89 [sic] characters, regardless of whether the output is sent to a file or a terminal. </li>\n</ul>\n\n<p>If you <strong>want more control over pretty-printing</strong>, consider using <strong><code>JSON.stringify()</code> with a 3rd argument</strong>, but note the following:</p>\n\n<ul>\n<li><em>Fails</em> with objects that have <em>circular references</em>, such as <code>module</code> in the global context.</li>\n<li><em>Methods</em> (functions) will by design NOT be included.</li>\n<li>You can't opt into showing hidden (non-enumerable) properties.</li>\n<li>Example call:\n<ul>\n<li><code>JSON.stringify({ one: 1, two: 'deux', three: true}, undefined, 2); // creates a pretty-printed multiline JSON representation indented with 2 spaces</code></li>\n</ul></li>\n</ul>\n\n<hr>\n\n<p><code>util.inspect()</code> <strong>options object</strong> (2nd argument):</p>\n\n<p><sup>source: <a href=\"http://nodejs.org/api/util.html#util_util_format_format\" rel=\"nofollow\">http://nodejs.org/api/util.html#util_util_format_format</a></sup></p>\n\n<p>An optional <em>options</em> object may be passed that alters certain aspects of the formatted string:</p>\n\n<ul>\n<li><code>showHidden</code>\n<ul>\n<li>if <code>true</code>,  then the object's non-enumerable properties [those designated not to show up when you use <code>for keys in obj</code> or <code>Object.keys(obj)</code>] will be shown too. Defaults to <code>false</code>.</li>\n</ul></li>\n<li><code>depth</code>\n<ul>\n<li>tells inspect how many times to recurse while formatting the object. This is useful for inspecting large complicated objects. Defaults to 2. To make it recurse indefinitely, pass <code>null</code>.</li>\n</ul></li>\n<li><code>colors</code>\n<ul>\n<li>if true, then the output will be styled with ANSI color codes. Defaults to <code>false</code>. Colors are customizable [... - see link].</li>\n</ul></li>\n<li><code>customInspect</code>\n<ul>\n<li>if <code>false</code>, then custom <code>inspect()</code> functions defined on the objects being inspected won't be called. Defaults to <code>true</code>.</li>\n</ul></li>\n</ul>\n\n<hr>\n\n<p><code>util.format()</code> <strong>format-string placeholders</strong> (1st argument)</p>\n\n<p><sup>source: <a href=\"http://nodejs.org/api/util.html#util_util_format_format\" rel=\"nofollow\">http://nodejs.org/api/util.html#util_util_format_format</a></sup></p>\n\n<ul>\n<li><code>%s</code> - String.</li>\n<li><code>%d</code> - Number (both integer and float).</li>\n<li><code>%j</code> - JSON.</li>\n<li><code>%</code> - single percent sign ('%'). This does not consume an argument.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>When debugging using console.log, how can I get the full object?</p>\n\n<pre><code>var myObject = {\n   \"a\":\"a\",\n   \"b\":{\n      \"c\":\"c\",\n      \"d\":{\n         \"e\":\"e\",\n         \"f\":{\n            \"g\":\"g\",\n            \"h\":{\n               \"i\":\"i\"\n            }\n         }\n      }\n   }\n};    \nconsole.log(myObject);\n</code></pre>\n\n<p>Outputs:</p>\n\n<pre><code>{ a: 'a', b: { c: 'c', d: { e: 'e', f: [Object] } } }\n</code></pre>\n\n<p>But i want to also see the content of property f    </p>\n",
            "last_activity_date": 1422473442,
            "question_id": 10729276,
            "score": 67,
            "tags": [
                "javascript",
                "debugging",
                "node.js"
            ],
            "title": "How can I get the full object in node.js console.log, rather than &#39;[Object]&#39;?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<pre><code>$('field_name').innerHTML = 'Your text.';\n</code></pre>\n\n<p>One of the nifty features of Prototype is that <code>$('field_name')</code> does the same thing as <code>document.getElementById('field_name')</code>. Use it! :-)</p>\n\n<p>John Topley's answer using Prototype's <code>update</code> function is another good solution.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>You can simply use:</p>\n\n<pre><code>fieldNameElement.innerHTML = \"My new text!\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 92
                },
                {
                    "body": "<p>If you really want us to just continue where you left off, you could do:</p>\n\n<pre><code>if (fieldNameElement)\n    fieldNameElement.innerHTML = 'some HTML';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I would use Prototype's <code>update</code> method which supports plain text, an HTML snippet or any JavaScript object that defines a <code>toString</code> method.</p>\n\n<pre><code>$(\"field_name\").update(\"New text\");\n</code></pre>\n\n<ul>\n<li><a href=\"http://www.prototypejs.org/api/element/update\">Element.update documentation</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<pre><code>function showPanel(fieldName) {\n  var fieldNameElement = document.getElementById(field_name);\n\n  fieldNameElement.removeChild(fieldNameElement.firstChild);\n  var newText = document.createTextNode(\"New Text\");\n  fieldNameElement.appendChild(newText);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The quick answer is to use innerHTML (or prototype's update method which pretty much the same thing).  The problem with innerHTML is you need to escape the content being assigned.  Depending on your targets you will need to do that with other code OR</p>\n\n<p>in IE:-</p>\n\n<pre><code>document.getElementById(\"field_name\").innerText = newText;\n</code></pre>\n\n<p>in FF:-</p>\n\n<pre><code>document.getElementById(\"field_name\").textContent = newText;\n</code></pre>\n\n<p>(Actually of FF have the following present in by code)</p>\n\n<pre><code>HTMLElement.prototype.__defineGetter__(\"innerText\", function () { return this.textContent; })\n\nHTMLElement.prototype.__defineSetter__(\"innerText\", function (inputText) { this.textContent = inputText; })\n</code></pre>\n\n<p>Now I can just use innerText if you need widest possible browser support then this is not a complete solution but neither is using innerHTML in the raw.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<pre><code>\nfunction showPanel(fieldName) {\n  var fieldNameElement = document.getElementById(\"field_name\");\n  while(fieldNameElement.childNodes.length >= 1) {\n    fieldNameElement.removeChild(fieldNameElement.firstChild);\n  }\n  fieldNameElement.appendChild(fieldNameElement.ownerDocument.createTextNode(fieldName));\n}\n</code></pre>\n\n<p>The advantages of doing it this way:</p>\n\n<ol>\n<li>It only uses the DOM, so the technique is portable to other languages, and doesn't rely on the non-standard innerHTML</li>\n<li>fieldName might contain HTML, which could be an attempted XSS attack.  If we know it's just text, we should be creating a text node, instead of having the browser parse it for HTML</li>\n</ol>\n\n<p>If I were going to use a javascript library, I'd use jQuery, and do this:</p>\n\n<pre><code>\n  $(\"div#field_name\").text(fieldName);\n</code></pre>\n\n<p>Note that <a href=\"http://stackoverflow.com/questions/121817/replace-text-inside-a-div-element#comment27322_121898\">@AnthonyWJones' comment</a> is correct: \"field_name\" isn't a particularly descriptive id or variable name.</p>\n",
                    "is_accepted": false,
                    "score": 63
                },
                {
                    "body": "<p>If you're inclined to start using a lot of JavaScript on your site, jQuery makes playing with the DOM extremely simple.</p>\n\n<p><a href=\"http://docs.jquery.com/Manipulation\" rel=\"nofollow\">http://docs.jquery.com/Manipulation</a></p>\n\n<p>Makes it as simple as:\n$(\"#field-name\").text(\"Some new text.\");</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here's an easy <a href=\"http://jquery.com/\" rel=\"nofollow\">jQuery</a> way:</p>\n\n<pre><code>var el = $('#yourid .yourclass');\n\nel.html(el.html().replace(/Old Text/ig, \"New Text\"));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>nodeValue is also a standard DOM property you can use:</p>\n\n<pre><code>function showPanel(fieldName) {\n  var fieldNameElement = document.getElementById(field_name);\n  if(fieldNameElement.firstChild)\n    fieldNameElement.firstChild.nodeValue = \"New Text\";\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>el.innerHTML='';\nel.appendChild(document.createTextNode(\"yo\"));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>Updated for everyone reading this in 2013 and later:</strong></p>\n\n<p>This answer has a lot of SEO, but all the answers are severely out of date and depend on libraries to do things that all current browsers do out of the box.</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node.textContent#Browser_compatibility\" rel=\"nofollow\">To replace text inside a div element, use Node.textContent, which is provided in all current browsers.</a></p>\n\n<pre><code>fieldNameElement.textContent = \"New text\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 29
                }
            ],
            "body": "<p>I need to set the text within a DIV element dynamically. What is the best, browser safe approach? I have prototypejs and scriptaculous available.</p>\n\n<pre><code>&lt;div id=\"panel\"&gt;\n  &lt;div id=\"field_name\"&gt;TEXT GOES HERE&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Here's what the function will look like:</p>\n\n<pre><code>function showPanel(fieldName) {\n  var fieldNameElement = document.getElementById('field_name');\n  //Make replacement here\n}\n</code></pre>\n",
            "last_activity_date": 1426176237,
            "question_id": 121817,
            "score": 66,
            "tags": [
                "javascript",
                "html",
                "dom",
                "prototypejs"
            ],
            "title": "Replace text inside a DIV element with Prototype.js"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><code>top</code> refers to the window object which contains all the current frames ( father of the rest of the windows ). <code>window</code> is the current <code>window</code>.</p>\n\n<p><a href=\"http://www.howtocreate.co.uk/tutorials/javascript/browserinspecific\">http://www.howtocreate.co.uk/tutorials/javascript/browserinspecific</a></p>\n\n<p>so <code>top.location.href</code> can contain the \"master\" page link containing all the frames, while <code>window.location.href</code> just contains the \"current\" page link.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><code>window.location.href</code> returns the location of the current page.</p>\n\n<p><code>top.location.href</code> (which is an alias of <code>window.top.location.href</code>) returns the location of the topmost window in the window hierarchy.  If a window has no parent, <code>top</code> is a reference to itself (in other words, <code>window</code> === <code>window.top</code>).</p>\n\n<p><code>top</code> is useful both when you're dealing with frames and when dealing with windows which have been opened by other pages.  For example, if you have a page called <code>test.html</code> with the following script:</p>\n\n<pre><code>var newWin=window.open('about:blank','test','width=100,height=100');\nnewWin.document.write('&lt;script&gt;alert(top.location.href);&lt;/script&gt;');\n</code></pre>\n\n<p>The resulting alert will have the full path to test.html &ndash; <strong>not</strong> about:blank, which is what <code>window.location.href</code> would return.</p>\n\n<p>To answer your question about redirecting, go with <code>window.location.assign(url);</code></p>\n",
                    "is_accepted": true,
                    "score": 77
                },
                {
                    "body": "<p>The first one adds an item to your history in that you can (or should be able to) click \"Back\" and go back to the current page.</p>\n\n<p>The second replaces the current history item so you can't go back to it.</p>\n\n<p>See window.location:</p>\n\n<pre><code>assign(url): Load the document at the provided URL.\n\nreplace(url):Replace the current document with the one at the provided URL. The difference from the assign() method is that after using replace() the current page will not be saved in session history, meaning the user won't be able to use the Back button to navigate to it.\n\n\nwindow.location.href = url;\n</code></pre>\n\n<p>is favoured over:</p>\n\n<pre><code>window.location = url;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><a href=\"https://developer.mozilla.org/en/window.top\"><code>top</code></a> object makes more sense inside frames. Inside a frame, <code>window</code> refers to current frame's window while <code>top</code> refers to the outermost window that contains the frame(s). So:</p>\n\n<p><code>window.location.href = 'somepage.html';</code> means loading <code>somepage.html</code> inside the frame.</p>\n\n<p><code>top.location.href = 'somepage.html';</code> means loading <code>somepage.html</code> in the main browser window.</p>\n\n<p>Two other interesting objects are <a href=\"https://developer.mozilla.org/en/DOM/window.self\"><code>self</code></a> and <a href=\"https://developer.mozilla.org/en/DOM/window.parent\"><code>parent</code></a>.</p>\n",
                    "is_accepted": false,
                    "score": 16
                }
            ],
            "body": "<p>Can Anyone tell me the difference between <code>window.location.href</code> and <code>top.location.href</code> ?</p>\n\n<p>And also where to use which one. </p>\n\n<p>And which one will be better when redirecting after an ajax call in mvc?</p>\n",
            "last_activity_date": 1332617631,
            "question_id": 3332756,
            "score": 55,
            "tags": [
                "javascript",
                "asp.net-mvc"
            ],
            "title": "Difference between window.location.href and top.location.href"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You can use the localStorage.key(index) function to return the string representation.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>for (var key in localStorage){\n   console.log(key)\n}\n</code></pre>\n\n<p>EDIT: this answer is getting a lot of upvotes, so I guess it's a common question. I feel like I owe it to anyone who might stumble on my answer and think that it's \"right\" just because it was accepted to make an update. Truth is, the example above isn't really the <em>right</em> way to do this. The best and safest way is to do it like this:</p>\n\n<pre><code>for ( var i = 0, len = localStorage.length; i &lt; len; ++i ) {\n  console.log( localStorage.getItem( localStorage.key( i ) ) );\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 87
                },
                {
                    "body": "<pre><code>function listAllItems(){  \n    for (i=0; i&lt;=localStorage.length-1; i++)  \n    {  \n        key = localStorage.key(i);  \n        alert(localStorage.getItem(key));\n    }  \n}\n</code></pre>\n\n<p>regards</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>If the browser supports HTML5 LocalStorage it should also implement Array.prototype.map, enabling this:</p>\n\n<pre><code>Array.apply(0, new Array(localStorage.length)).map(function (o, i) { return localStorage.key(i); })\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I agree with Kevin he has the best answer but sometimes when you have different keys in your local storage with the same values for example you want your public users to see how many times they have added their items into their baskets you need to show them the number of times as well then you ca use this:</p>\n\n<pre><code>var set = localStorage.setItem('key', 'value');\nvar element = document.getElementById('tagId');\n\nfor ( var i = 0, len = localStorage.length; i &lt; len; ++i ) {\n  element.innerHTML =  localStorage.getItem(localStorage.key(i)) + localStorage.key(i).length;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I like to create an easily visible object out of it like this.</p>\n\n<pre><code>Object.keys(localStorage).reduce(function(obj, str) { \n    obj[str] = localStorage.getItem(str); \n    return obj\n}, {});\n</code></pre>\n\n<p>I do a similar thing with cookies as well.</p>\n\n<pre><code>document.cookie.split(';').reduce(function(obj, str){ \n    var s = str.split('='); \n    obj[s[0].trim()] = s[1];\n    return obj;\n}, {});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm just wondering how to get all key values in <code>localStorage</code>.</p>\n\n<hr>\n\n<p>I have tried to retrieve the values with a simple JavaScript loop</p>\n\n<pre><code>for (var i=1; i &lt;= localStorage.length; i++)  {\n   alert(localStorage.getItem(i))\n}\n</code></pre>\n\n<p>But it works only if the keys are progressive numbers, starting at 1.</p>\n\n<hr>\n\n<p>How do I get all the keys, in order to display all available data?</p>\n\n<p>Thanks in advance.</p>\n",
            "last_activity_date": 1422987967,
            "question_id": 8419354,
            "score": 47,
            "tags": [
                "javascript",
                "html5",
                "data",
                "key",
                "local-storage"
            ],
            "title": "Get HTML5 localStorage keys"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<pre><code>var numeric = [\n    ['input1','input2'],\n    ['input3','input4']\n];\nnumeric[0][0] == 'input1';\nnumeric[0][1] == 'input2';\nnumeric[1][0] == 'input3';\nnumeric[1][1] == 'input4';\n\nvar obj = {\n    'row1' : {\n        'key1' : 'input1',\n        'key2' : 'inpu2'\n    },\n    'row2' : {\n        'key3' : 'input3',\n        'key4' : 'input4'\n    }\n};\nobj.row1.key1 == 'input1';\nobj.row1.key2 == 'input2';\nobj.row2.key1 == 'input3';\nobj.row2.key2 == 'input4';\n\nvar mixed = {\n    'row1' : ['input1', 'inpu2'],\n    'row2' : ['input3', 'input4']\n};\nobj.row1[0] == 'input1';\nobj.row1[1] == 'input2';\nobj.row2[0] == 'input3';\nobj.row2[1] == 'input4';\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/z4Un3/\">http://jsfiddle.net/z4Un3/</a></p>\n\n<p>And if you're wanting to store DOM elements:</p>\n\n<pre><code>var inputs = [\n    [\n        document.createElement('input'),\n        document.createElement('input')\n    ],\n    [\n        document.createElement('input'),\n        document.createElement('input')\n    ]\n];\ninputs[0][0].id = 'input1';\ninputs[0][1].id = 'input2';\ninputs[1][0].id = 'input3';\ninputs[1][1].id = 'input4';\n</code></pre>\n\n<p>Not real sure how useful the above is until you attach the elements. The below may be more what you're looking for:</p>\n\n<pre><code>&lt;input text=\"text\" id=\"input5\"/&gt;\n&lt;input text=\"text\" id=\"input6\"/&gt;\n&lt;input text=\"text\" id=\"input7\"/&gt;\n&lt;input text=\"text\" id=\"input8\"/&gt;    \nvar els = [\n    [\n        document.getElementById('input5'),\n        document.getElementById('input6')\n    ],\n    [\n        document.getElementById('input7'),\n        document.getElementById('input8')\n    ]\n];    \nels[0][0].id = 'input5';\nels[0][1].id = 'input6';\nels[1][0].id = 'input7';\nels[1][1].id = 'input8';\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/z4Un3/3/\">http://jsfiddle.net/z4Un3/3/</a></p>\n\n<p>Or, maybe this:</p>\n\n<pre><code>&lt;input text=\"text\" value=\"4\" id=\"input5\"/&gt;\n&lt;input text=\"text\" value=\"4\" id=\"input6\"/&gt;\n&lt;br/&gt;\n&lt;input text=\"text\" value=\"2\" id=\"input7\"/&gt;\n&lt;input text=\"text\" value=\"4\" id=\"input8\"/&gt;\n\nvar els = [\n    [\n        document.getElementById('input5'),\n        document.getElementById('input6')\n    ],\n    [\n        document.getElementById('input7'),\n        document.getElementById('input8')\n    ]\n];\n\nvar result = [];\n\nfor (var i = 0; i &lt; els.length; i++) {\n    result[result.length] = els[0][i].value - els[1][i].value;\n}\n</code></pre>\n\n<p>Which gives:</p>\n\n<pre><code>[2, 0]\n</code></pre>\n\n<p>In the console. If you want to output that to text, you can <code>result.join(' ');</code>, which would give you <code>2 0</code>.</p>\n\n<p><a href=\"http://jsfiddle.net/z4Un3/6/\">http://jsfiddle.net/z4Un3/6/</a></p>\n\n<p><strong>EDIT</strong></p>\n\n<p>And a working demonstration:</p>\n\n<pre><code>&lt;input text=\"text\" value=\"4\" id=\"input5\"/&gt;\n&lt;input text=\"text\" value=\"4\" id=\"input6\"/&gt;\n&lt;br/&gt;\n&lt;input text=\"text\" value=\"2\" id=\"input7\"/&gt;\n&lt;input text=\"text\" value=\"4\" id=\"input8\"/&gt;\n&lt;br/&gt;\n&lt;input type=\"button\" value=\"Add\" onclick=\"add()\"/&gt;\n\n// This would just go in a script block in the head\nfunction add() {\n    var els = [\n        [\n            document.getElementById('input5'),\n            document.getElementById('input6')\n        ],\n        [\n            document.getElementById('input7'),\n            document.getElementById('input8')\n        ]\n    ];\n\n    var result = [];\n\n    for (var i = 0; i &lt; els.length; i++) {\n        result[result.length] = parseInt(els[0][i].value) - parseInt(els[1][i].value);\n    }\n\n    alert(result.join(' '));\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/z4Un3/8/\">http://jsfiddle.net/z4Un3/8/</a></p>\n",
                    "is_accepted": false,
                    "score": 135
                },
                {
                    "body": "<p>Declared without value assignment.</p>\n\n<p>2 dimensions...</p>\n\n<pre><code>var arrayName = new Array(new Array());\n</code></pre>\n\n<p>3 dimensions...</p>\n\n<pre><code>var arrayName = new Array(new Array(new Array()));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<pre><code>var size = 0;   \n var darray = new Array();\n    function createTable(){\n        darray[size] = new Array();\n        darray[size][0] = $(\"#chqdate\").val();\n        darray[size][1]= $(\"#chqNo\").val();\n        darray[size][2] = $(\"#chqNarration\").val() ;\n        darray[size][3]= $(\"#chqAmount\").val();\n        darray[size][4]= $(\"#chqMode\").val();\n    }\n</code></pre>\n\n<p>increase size var after your function.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I know this is ancient but what about...</p>\n\n<p>4x4 example <code>(actually 4x&lt;anything&gt;)</code>:</p>\n\n<pre><code>var matrix = [ [],[],[],[] ]\n</code></pre>\n\n<p>which can filled by:</p>\n\n<pre><code>for (var i=0; i&lt;4; i++) {\n   for (var j=0; j&lt;4; j++) {\n      matrix[i][j] = i*j;\n   }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>function Array2D(x, y)\n{\n    var array2D = new Array(x);\n\n    for(var i = 0; i &lt; array2D.length; i++)\n    {\n        array2D[i] = new Array(y);\n    }\n\n    return array2D;\n}\n\nvar myNewArray = Array2D(4, 9);\n\nmyNewArray[3][5] = \"booger\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>you can create array follow the code below:</p>\n\n<pre><code>var arraymultidimensional = []\n    arraymultidimensional = [[value1,value2],[value3,value4],[value5,value6]];\n</code></pre>\n\n<p>Result: <br>\n [v1][v2] position 0 <br>\n [v3][v4] position 1 <br>\n [v5][v6] position 2</p>\n\n<p>For add to array dinamically, use the method below:</p>\n\n<pre><code>//vectorvalue format = \"[value,value,...]\"\nfunction addToArray(vectorvalue){\n  arraymultidimensional[arraymultidimensional.length] = vectorvalue;\n}\n</code></pre>\n\n<p>Hope this helps. :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Hope the following code suits your requirement</p>\n\n<pre><code>var row= 20;\nvar column= 10;\nvar f = new Array();\n\nfor (i=0;i&lt;row;i++) {\n f[i]=new Array();\n for (j=0;j&lt;column;j++) {\n  f[i][j]=0;\n }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Can anyone give me a sample/example of JavaScript with a multidimensional array of inputs? Hope you could help because I'm still new to the JavaScript.</p>\n\n<p>Like when you input 2 rows and 2 columns the output of it will be 2 rows of input and 2 columns of input.</p>\n\n<p>Like this:</p>\n\n<pre><code>[input][input]                \n[input][input]\n</code></pre>\n",
            "last_activity_date": 1420669882,
            "question_id": 7545641,
            "score": 40,
            "tags": [
                "javascript",
                "multidimensional-array"
            ],
            "title": "JavaScript multidimensional array"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>From <a href=\"http://www.javascriptkit.com/javatutors/closures.shtml\">JavaScript Closures</a></p>\n\n<p>Two one sentence summaries:</p>\n\n<blockquote>\n  <p>A closure is the local variables for a\n  function - kept alive after the \n  function has returned, or</p>\n  \n  <p>A closure is a stack-frame which is\n  not deallocated when the function\n  returns.  (as if a 'stack-frame' were\n  malloc'ed instead of being on the\n  stack!)</p>\n</blockquote>\n\n<p>A very good article on closures</p>\n\n<p><a href=\"http://www.jibbering.com/faq/faq%5Fnotes/closures.html\">Javascript Closures</a></p>\n\n<blockquote>\n  <p>A \"closure\" is an expression\n  (typically a function) that can have\n  free variables together with an\n  environment that binds those variables\n  (that \"closes\" the expression).</p>\n  \n  <p>The simple explanation of a Closure is\n  that ECMAScript allows inner\n  functions; function definitions and\n  function expressions that are inside\n  the function bodes of other functions.\n  And that those inner functions are\n  allowed access to all of the local\n  variables, parameters and declared\n  inner functions within their outer\n  function(s). A closure is formed when\n  one of those inner functions is made\n  accessible outside of the function in\n  which it was contained, so that it may\n  be executed after the outer function\n  has returned. At which point it still\n  has access to the local variables,\n  parameters and inner function\n  declarations of its outer function.\n  Those local variables, parameter and\n  function declarations (initially) have\n  the values that they had when the\n  outer function returned and may be\n  interacted with by the inner function.</p>\n</blockquote>\n\n<p>A good example over here</p>\n\n<p><a href=\"http://devlicio.us/blogs/sergio%5Fpereira/archive/2009/02/23/javascript-time-to-grok-closures.aspx\">JavaScript, time to grok closures</a></p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>As far as I can tell, a closure is a function defined within another function that outlives the parent function's scope. A common example is callbacks:</p>\n\n<pre><code>function delay_message(msg)\n{\n     setTimeout(function closure() { alert(msg); }, 1000);\n}\n</code></pre>\n\n<p>In this case, the above <code>function closure</code> is defined within the body of <code>delay_message</code>, but the function definition -- as well as the parent function's variable <code>msg</code> -- outlive the scope of the <code>delay_message</code> function call.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It's a function that \"holds\" a reference or references to something in another scope. For example:</p>\n\n<pre><code>var myArrayOfFunctions = [];\n\nfor(var i = 0; i&lt;3: i++)\n{\n    //Note how the function being defined uses i, \n    //where i lives in the parent's scope, this creates a closure\n    myArrayOfFunctions[i] = function(a) { return a + i;}\t\n}\n\nmyArrayOfFunctions[0](5);   //Prints 8 WTF!\nmyArrayOfFunctions[1](5);   //8 again\nmyArrayOfFunctions[2](5);   //Well, this 8 was expected\n</code></pre>\n\n<p>This happens because when the functions are \"created\", they do not copy the value of i, they hold a reference to i, so when we call the functions they use the current value of i which is 3.</p>\n\n<p><a href=\"http://www.bennadel.com/blog/1482-A-Graphical-Explanation-Of-Javascript-Closures-In-A-jQuery-Context.htm\" rel=\"nofollow\">Here is a graphical explanation.</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>For me, the closures in JS allows you to do the following.<br />\n\"a\" remains available in the inner function when added to \"b\" although it is declared outside.</p>\n\n<pre><code>function adder(a){\n  return function(b){\n    return a + b;\n  };\n}\nvar add5 = adder(5);\nalert( add5(10) );\n</code></pre>\n\n<p>For an extreme usage of JS closures, you can have a look at the <a href=\"http://github.com/pure/pure/blob/master/libs/pure.js\" rel=\"nofollow\">source code</a> of the PURE library (a JS templating engine)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Essentially a closure is a function body closed over its identifiers (variables) within its local environment.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A closure is a function value created from a nested function declaration or function  expression (i.e. lambda expression) whose body contains one or more references to variables declared in an outer (but not global) scope.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Consider the following code that creates a closure with variables a and b</p>\n\n<pre><code>closure=(function(){ \n\n    var a=3\n    var b=5 \n\nreturn  function(operation){ \n          return operation(a,b)\n      }\n }())\n\n\n// The variables a and b are now part of the closure (They are retained even after the outer function returns)\n\n\nclosure(function(x,y){return x+y})  // outputs 8\n\nclosure(function(x,y){return x*y}) // outputs 15`\n</code></pre>\n\n<p>This particular closure can now take any function that operates on the variables a and b</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I understand what closures are, but I am having some trouble grokking exactly what the term <code>closure</code> refers to.  I have seen the term used in many websites, but rarely do they agree on the actual definition of it.</p>\n\n<ul>\n<li>Is it the variables that are kept on the stack frame?</li>\n<li>Is it the function that is being returned?</li>\n<li>Is it the scope of the outer function?</li>\n<li>Is it the scope of the inner (returned) function?</li>\n<li>Is it maybe the <strong>concept</strong> of keeping the variables on the stack-frame after returning the function?</li>\n</ul>\n\n<p>Can someone tell me exactly to what <code>closure</code> refers to?</p>\n",
            "last_activity_date": 1415749976,
            "question_id": 1801957,
            "score": 39,
            "tags": [
                "javascript",
                "closures",
                "definition"
            ],
            "title": "What exactly does &quot;closure&quot; refer to in JavaScript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The predicate</p>\n\n<pre><code>(window.parent.frames.length &gt; 0)\n</code></pre>\n\n<p>will tell you just what you want.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Looking at frame length breaks down generally if page A itself has frames (I know this might not be the case for this specific instance). The more reliable and meaningful test would be:</p>\n\n<pre><code>if (window!=window.top) { /* I'm in a frame! */ }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 88
                },
                {
                    "body": "<pre><code>if (top === self) { not in a frame } else { in a frame }\n</code></pre>\n\n<p>From <a href=\"http://stackoverflow.com/questions/326069/how-to-identify-if-a-webpage-is-being-loaded-inside-an-iframe-or-directly-into-th\">How to identify if a webpage is being loaded inside an iframe or directly into the browser window?</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Use window.frameElement and check if it is not null and if its nodeName is \"IFRAME\".</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As stated above the accepted solution doesn't work in IE8.  Additionally, checking <code>window.parent.frames.length</code> can cause a cross-domain exception.</p>\n\n<p>Instead I was able to achieve this with <code>var isInIFrame = top.location != self.location</code> - it works in IE8 and it doesn't cause a cross-domain violation as long as you don't attempt to read the contents of <code>top.location</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have an application that has a certain page -- let's call it Page A. Page A is sometimes a top-level page, but also sometimes is embedded as an iframe within page B. All pages come from the same server and there are no cross-domain issues.</p>\n\n<p>I have a greasemonkey script that runs on page A. How can the greasemonkey script detect whether page A is within the iframe context or not?</p>\n",
            "last_activity_date": 1373035098,
            "question_id": 925039,
            "score": 35,
            "tags": [
                "javascript",
                "iframe",
                "greasemonkey"
            ],
            "title": "Detect iFrame embedding in Javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Put functions on a prototype object when you're going to create lots of copies of a particular kind of object and they all need to share common behaviors. By doing so, you'll save some memory by having just one copy of each function, but that's only the simplest benefit.</p>\n\n<p>Changing methods on prototype objects, or adding methods, instantly changes the nature of all the instances of the corresponding type(s).</p>\n\n<p>Now exactly <em>why</em> you'd do all these things is mostly a function of your own application design, and the kinds of things you need to do in client-side code. (A whole different story would be code inside a server; much easier to imagine doing more large-scale \"OO\" code there.)</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>If i explain in class based term then Person is class, walk() is Prototype method. So walk() will have its existence only after you instantiate new object with this.</p>\n\n<p>So if you want to create the copies of object like Person u can create many users Prototype is good solution as it saves memory by sharing/inheriting same copy of function for each of the object in memory.</p>\n\n<p>Whereas static is not that great help in such scenario.</p>\n\n<pre><code>function Person(){\nthis.name = \"anonymous\";\n}\n\n// its instance method and can access objects data data \nPerson.prototype.walk = function(){\nalert(\"person has started walking.\");\n}\n// its like static method\nPerson.ProcessPerson = function(Person p){\nalert(\"Persons name is = \" + p.name);\n}\n\nvar userOne = new Person();\nvar userTwo = new Person();\n\n//Call instance methods\nuserOne.walk();\n\n//Call static methods\nPerson.ProcessPerson(userTwo);\n</code></pre>\n\n<p>So with this its more like instance method.\nThe object's approach is like Static methods.</p>\n\n<p><a href=\"https://developer.mozilla.org/en/Introduction_to_Object-Oriented_JavaScript\" rel=\"nofollow\">https://developer.mozilla.org/en/Introduction_to_Object-Oriented_JavaScript</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Prototypes are an <em>optimisation</em>. </p>\n\n<p>A great example of using them well is the jQuery library. Every time you obtain a jQuery object by using <code>$('.someClass')</code>, that object has dozens of \"methods\". The library could achieve that by returning an object:</p>\n\n<pre><code>return {\n   show: function() { ... },\n   hide: function() { ... },\n   css: function() { ... },\n   animate: function() { ... },\n   // etc...\n};\n</code></pre>\n\n<p>But that would mean that every jQuery object in memory would have dozens of named slots containing the same methods, over and over.</p>\n\n<p>Instead, those methods are defined on a prototype and all jQuery objects \"inherit\" that prototype so as to gain all those methods at very little runtime cost.</p>\n\n<p>One vitally important part of how jQuery gets it right is that this is hidden from the programmer. It's treated purely an optimisation, not as something that you have to worry about when using the library.</p>\n\n<p>The problem with JavaScript is that naked constructor functions require the caller to remember to prefix them with <code>new</code> or otherwise they typically don't work. There is no good reason for this. jQuery gets it right by hiding that nonsense behind an ordinary function, <code>$</code>, so you don't have to care how the objects are implemented.</p>\n\n<p>So that you can conveniently create an object with a specified prototype, ECMAScript 5 includes a standard function <code>Object.create</code>. A greatly simplified version of it would look like this:</p>\n\n<pre><code>Object.create = function(prototype) {\n    var Type = function () {};\n    Type.prototype = prototype;\n    return new Type();\n};\n</code></pre>\n\n<p>It just takes care of the pain of writing a constructor function and then calling it with <code>new</code>.</p>\n\n<p><strong>When would you avoid prototypes?</strong></p>\n\n<p>A useful comparison is with popular OO languages such as Java and C#. These support two kinds of inheritance:</p>\n\n<ul>\n<li><strong>interface</strong> inheritance, where you <code>implement</code> an <code>interface</code> such that the class provides its own unique implementation for every member of the interface.</li>\n<li><strong>implementation</strong> inheritance, where you <code>extend</code> a <code>class</code> that provides default implementations of some methods.</li>\n</ul>\n\n<p>In JavaScript, prototypical inheritance is a kind of <em>implementation</em> inheritance. So in those situations where (in C# or Java) you would have derived from a base class to gain default behaviour, which you then make small modifications to via overrides, then in JavaScript, prototypical inheritance makes sense.</p>\n\n<p>However, if you're in a situation where you would have used interfaces in C# or Java, then you don't need any particular language feature in JavaScript. There is no need to explicitly declare something that represents the interface, and no need to mark objects as \"implementing\" that interface:</p>\n\n<pre><code>var duck = {\n    quack: function() { ... }\n};\n\nduck.quack(); // we're satisfied it's a duck!\n</code></pre>\n\n<p>In other words, if each \"type\" of object has its own definitions of the \"methods\", then there is no value in inheriting from a prototype. After that, it depends on how many instances you allocate of each type. But in many modular designs, there is only one instance of a given type.</p>\n\n<p>And in fact, <a href=\"http://www.javaworld.com/javaworld/jw-08-2003/jw-0801-toolbox.html\">it has been suggested by many people that implementation inheritance is evil</a>. That is, if there are some common operations for a type, then maybe it's clearer if they are not put into a base/super class, but are instead just exposed as ordinary functions in some module, to which you pass the object(s) you want them to operate on.</p>\n",
                    "is_accepted": true,
                    "score": 50
                },
                {
                    "body": "<p>You should use prototypes if you wish to declare a \"non-static\" method of the object.  </p>\n\n<pre><code>var myObject = function () {\n\n};\n\nmyObject.prototype.getA = function (){\n  alert(\"A\");\n};\n\nmyObject.getB = function (){\n  alert(\"B\");\n};\n\nmyObject.getB();  // This works fine\n\nmyObject.getA();  // Error!\n\nvar myPrototypeCopy = new myObject();\nmyPrototypeCopy.getA();  // This works, too.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>One reason to use the built-in <code>prototype</code> object is if you'll be duplicating an object multiple times that will share common functionality.  By attaching methods to the prototype, you can save on duplicating methods being created per each <code>new</code> instance.  But when you attach a method to the <code>prototype</code>, all instances will have access to those methods.</p>\n\n<p>Say you have a base <code>Car()</code> class/object.  </p>\n\n<pre><code>function Car() {\n    // do some car stuff\n}\n</code></pre>\n\n<p>then you create multiple <code>Car()</code> instances.  </p>\n\n<pre><code>var volvo = new Car(),\n    saab = new Car();\n</code></pre>\n\n<p>Now, you know each car will need to drive, turn on, etc.  Instead of attaching a method directly to the <code>Car()</code> class (which takes up memory per each instance created), you can attach the methods to the prototype instead (creating the methods only once), therefore giving access to those methods to both the new <code>volvo</code> and <code>saab</code>.</p>\n\n<pre><code>// just mapping for less typing\nCar.fn = Car.prototype;\n\nCar.fn.drive = function () {\n    console.log(\"they see me rollin'\");\n};\nCar.fn.honk = function () {\n    console.log(\"HONK!!!\");\n}\n\nvolvo.honk();\n// =&gt; HONK!!!\nsaab.drive();\n// =&gt; they see me rollin'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'd like to understand when it is appropriate to use prototype methods in js.  Should they always be used (or are there cases where using them is not preferred and/or incurs a performance penalty)?  In searching around this site on common methods for namespacing in js it seems that most use a non-prototype based implementation: simply using an object, or a function object to encapsulate a namespace.  Coming from a class-based language its hard not to try and draw parallels and think that prototypes are like \"classes\" and the namespace implementations I mentioned are like static methods.  Any clarification would be great.</p>\n",
            "last_activity_date": 1398535485,
            "question_id": 4736910,
            "score": 27,
            "tags": [
                "javascript",
                "performance",
                "prototype",
                "function-prototypes"
            ],
            "title": "Javascript when to use prototypes"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I'm sure that as far as instantiating the object goes, it's way faster and also consumes less memory, no doubts about that, but I would think that the javascript engine needs to loop through all the properties of the object to determine if the property/method invoked is part of that object and if not, then go check for the prototype. I am not 100% sure about this but I'm assuming that's how it works and if so, then in SOME cases where your object has a LOT of methods added to it, instantiated only once and used heavily, then it could possibly be a little slower, but that's just a supposition I haven't tested anything.</p>\n\n<p>But in the end, I would still agree that as a general rules, using prototype will be faster.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It was an interesting question, so I ran some very simple tests (I should have restarted my browsers to clear out the memory, but I didn't; take this for what it's worth). It looks like at least on Safari and Firefox, <code>prototype</code> runs significantly faster [edit: not 20x as stated earlier]. I'm sure a real-world test with fully-featured objects would be a better comparison. The code I ran was this (I ran the tests several times, separately):</p>\n\n<pre><code>var X,Y, x,y, i, intNow;\n\nX = function() {};\nX.prototype.message = function(s) { var mymessage = s + \"\";}\nX.prototype.addition = function(i,j) { return (i *2 + j * 2) / 2; }\n\nY = function() {\n    this.message = function(s) { var mymessage = s + \"\";}\n    this.addition = function(i,j) { return (i *2 + j * 2) / 2; }\n};\n\n\nintNow = (new Date()).getTime();\nfor (i = 0; i &lt; 1000000; i++) {\n    y = new Y();\n    y.message('hi');\n    y.addition(i,2)\n}\nconsole.log((new Date()).getTime() - intNow); //FF=5206ms; Safari=1554\n\nintNow = (new Date()).getTime();\nfor (i = 0; i &lt; 1000000; i++) {\n    x = new X();\n    x.message('hi');\n    x.addition(i,2)\n}\nconsole.log((new Date()).getTime() - intNow);//FF=3894ms;Safari=606\n</code></pre>\n\n<p>It's a real shame, because I really hate using <code>prototype</code>. I like my object code to be self-encapsulated, and not allowed to drift. I guess when speed matters, though, I don't have a choice. Darn. </p>\n\n<p>[Edit] Many thanks to @Kevin who pointed out my previous code was wrong, giving a huge boost to the reported speed of the <code>prototype</code> method. After fixing, prototype is still around significantly faster, but the difference is not as enormous.</p>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>Intuitively, it seems that it would be more memory-efficient and faster to create functions on the prototype: the function's only created once, not each time a new instance is created.</p>\n\n<p>However, there will be a slight performance difference when it's time to <em>access</em> the function. When <code>c.showMsg</code> is referenced, the JavaScript runtime first checks for the property on <code>c</code>. If it's not found, <code>c</code>'s prototype is then checked.</p>\n\n<p>So, creating the property on the instance would result in slightly faster access time - but this might only be an issue for a very deep prototype hierarchy.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I would guess that it depends on the type of object you want to create.  I ran a similar test as Andrew, but with a static object, and the static object won hands down.  Here's the test:</p>\n\n<pre><code>var X,Y,Z x,y,z;\n\nX = function() {};\nX.prototype.message = function(s) { var mymessage = s + \"\";}\nX.prototype.addition = function(i,j) { return (i *2 + j * 2) / 2; }\n\nY = function() {\n    this.message = function(s) { var mymessage = s + \"\";}\n    this.addition = function(i,j) { return (i *2 + j * 2) / 2; }\n};\n\nZ = {\n message: function(s) { var mymessage = s + \"\";}\n ,addition: function(i,j) { return (i *2 + j * 2) / 2; }\n}\n\nfunction TestPerformance()\n{\n  var closureStartDateTime = new Date();\n  for (var i = 0; i &lt; 100000; i++)\n  {\n y = new Y();\n    y.message('hi');\n    y.addition(i,2);\n  }\n  var closureEndDateTime = new Date();\n\n  var prototypeStartDateTime = new Date();\n  for (var i = 0; i &lt; 100000; i++)\n  {\n    x = new X();\n    x.message('hi');\n    x.addition(i,2);\n  }\n  var prototypeEndDateTime = new Date();\n\n  var staticObjectStartDateTime = new Date();\n  for (var i = 0; i &lt; 100000; i++)\n  {\n z = Z; // obviously you don't really need this\n    z.message('hi');\n    z.addition(i,2);\n  }\n  var staticObjectEndDateTime = new Date();\n  var closureTime = closureEndDateTime.getTime() - closureStartDateTime.getTime();\n  var prototypeTime = prototypeEndDateTime.getTime() - prototypeStartDateTime.getTime();\n  var staticTime = staticObjectEndDateTime.getTime() - staticObjectStartDateTime.getTime();\n  alert(\"Closure time: \" + closureTime + \", prototype time: \" + prototypeTime + \", static object time: \" + staticTime);\n}\n\nTestPerformance();\n</code></pre>\n\n<p>This test is a modification of code I found at: </p>\n\n<blockquote>\n  <p><a href=\"http://blogs.msdn.com/b/kristoffer/archive/2007/02/13/javascript-prototype-versus-closure-execution-speed.aspx\">http://blogs.msdn.com/b/kristoffer/archive/2007/02/13/javascript-prototype-versus-closure-execution-speed.aspx</a></p>\n</blockquote>\n\n<p><strong>Results:</strong> </p>\n\n<p>IE6:    closure time: 1062, prototype time: 766, static object time: 406</p>\n\n<p>IE8:    closure time:  781, prototype time: 406, static object time: 188</p>\n\n<p>FF:     closure time:  233, prototype time: 141, static object time:  94</p>\n\n<p>Safari: closure time:  152, prototype time:  12, static object time:   6</p>\n\n<p>Chrome: closure time:   13, prototype time:   8, static object time:   3</p>\n\n<p>The lesson learned is that if you <strong>DON'T</strong> have a need to instantiate many different objects from the same class, then creating it as a static object wins hands down.  So think carefully about what kind of class you really need.</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<blockquote>\n  <p>So, creating the property on the instance would result in slightly faster access time - but this might only be an issue for a very deep prototype hierarchy.</p>\n</blockquote>\n\n<p>Actually the result is different then we could expect - access time to prototyped methods is faster then accessing to the methods attached exactly to the object (FF tested).</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>So I decided to test this as well. I tested creation time, execution time, and memory use. I used Nodejs v0.8.12 and the mocha test framework running on a Mac Book Pro booted into Windows 7. The 'fast' results are using prototypes and the 'slow' ones are using module pattern. I created 1 million of each type of object and then accessed the 4 methods in each object. Here are the results: </p>\n\n<pre><code>c:\\ABoxAbove&gt;mocha test/test_andrew.js\n\nFast Allocation took:170 msec\n\u00b7Fast Access took:826 msec\nstate[0] = First0\nFree Memory:5006495744\n\n\u00b7Slow Allocation took:999 msec\n\u00b7Slow Access took:599 msec\nstate[0] = First0\nFree Memory:4639649792\n\nMem diff:358248k\nMem overhead per obj:366.845952bytes\n\n? 4 tests complete (2.6 seconds)\n</code></pre>\n\n<p>The code is as follows:</p>\n\n<pre><code>var assert = require(\"assert\"), os = require('os');\n\nfunction Fast (){}\nFast.prototype = {\n    state:\"\",\n    getState:function (){return this.state;},\n    setState:function (_state){this.state = _state;},\n    name:\"\",\n    getName:function (){return this.name;},\n    setName:function (_name){this.name = _name;}\n};\n\nfunction Slow (){\n    var state, name;\n    return{\n        getState:function (){return this.state;},\n        setState:function (_state){this.state = _state;},\n        getName:function (){return this.name;},\n        setName:function (_name){this.name = _name;}\n    };\n}\ndescribe('test supposed fast prototype', function(){\n    var count = 1000000, i, objs = [count], state = \"First\", name=\"Test\";\n    var ts, diff, mem;\n    it ('should allocate a bunch of objects quickly', function (done){\n        ts = Date.now ();\n        for (i = 0; i &lt; count; ++i){objs[i] = new Fast ();}\n        diff = Date.now () - ts;\n        console.log (\"Fast Allocation took:%d msec\", diff);\n        done ();\n    });\n    it ('should access a bunch of objects quickly', function (done){\n        ts = Date.now ();\n        for (i = 0; i &lt; count; ++i){\n            objs[i].setState (state + i);\n            assert (objs[i].getState () === state + i, \"States should be equal\");\n            objs[i].setName (name + i);\n            assert (objs[i].getName () === name + i, \"Names should be equal\");\n        }\n        diff = Date.now() - ts;\n        console.log (\"Fast Access took:%d msec\", diff);\n        console.log (\"state[0] = \" + objs[0].getState ());\n        mem = os.freemem();\n        console.log (\"Free Memory:\" + mem + \"\\n\");\n        done ();\n    });\n    it ('should allocate a bunch of objects slowly', function (done){\n        ts = Date.now ();\n        for (i = 0; i &lt; count; ++i){objs[i] = Slow ();}\n        diff = Date.now() - ts;\n        console.log (\"Slow Allocation took:%d msec\", diff);\n        done ();\n    });\n    it ('should access a bunch of objects slowly', function (done){\n        ts = Date.now ();\n        for (i = 0; i &lt; count; ++i){\n            objs[i].setState (state + i);\n            assert (objs[i].getState () === state + i, \"States should be equal\");\n            objs[i].setName (name + i);\n            assert (objs[i].getName () === name + i, \"Names should be equal\");\n        }\n        diff = Date.now() - ts;\n        console.log (\"Slow Access took:%d msec\", diff);\n        console.log (\"state[0] = \" + objs[0].getState ());\n        var mem2 = os.freemem();\n        console.log (\"Free Memory:\" + mem2 + \"\\n\");\n        console.log (\"Mem diff:\" + (mem - mem2) / 1024 + \"k\");\n        console.log (\"Mem overhead per obj:\" + (mem - mem2) / count + 'bytes');\n        done ();\n    });\n});\n</code></pre>\n\n<p>Conclusion: This backs up what others in this post have found. If you are constantly creating objects then the prototype mechanism is clearly faster. If your code spends most of its time accessing objects then the module pattern is faster. If you are sensitive about memory use, the prototype mechanism uses ~360 bytes less per object.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><a href=\"http://jsperf.com/closure-prototype-static-performance/26\" rel=\"nofollow\">I ran my own tests</a>.</p>\n\n<p>The first conclusion is, that static access is actually slower than real prototyping. Interestingly, <a href=\"http://jsperf.com/closure-prototype-static-performance/23\" rel=\"nofollow\">the Version 23 of this test</a> has a flawed prototyping (Variable X) in it, which just returns the completely overridden prototype object over and over again and when I was creating my test, this prototyping was still slower than my \"real prototype\" test.</p>\n\n<p>Anyway, <strong>to the answer</strong>: Unless my test is flawed, it shows that real prototyping is fastest. It beats or is at least equal to the static object when ignoring instantiation. this-assignments on instantiation and private variables are both much slower. I wouldn't have guessed private variables would be this slow.</p>\n\n<p>It might be of interest that I extended the prototype Object with jQuery.extend in between and it was about the same speed as the direct assignment. The extend was outside the test itself, of course. At least this is a way to circumvent writing annoying \".prototype.\"-Parts all the time.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I read <a href=\"http://www.crockford.com/javascript/private.html\">here (Douglas Crockford)</a> using prototype operator to add methods to Javascript classes <strong>saves also memory</strong>.</p>\n\n<p>Then I read in <a href=\"http://ejohn.org/blog/simple-class-instantiation/#postcomment\">this John Resig's article</a> <em>\"Instantiating a function with a bunch of prototype properties is <strong>very, very, fast</strong>\"</em>, but is he talking about using prototype in the standard way, or is he talking about his specific example in his article?</p>\n\n<p>For example, is creating this object:</p>\n\n<pre><code>function Class1()\n{\n   this.showMsg = function(string) { alert(string); }\n}\nvar c = new Class1();\nc.showMsg();\n</code></pre>\n\n<p><strong>slower than</strong> creating this object, then?</p>\n\n<pre><code>function Class1() {}\nClass1.prototype.showMsg = function(string) { alert(string); }\nvar c = new Class1();\nc.showMsg();\n</code></pre>\n\n<p>P.S. </p>\n\n<p>I know prototype is used to create inheritance and singleton object etc. But this question does not have anyhting to do with these subjects.</p>\n\n<hr>\n\n<p>EDIT: to whom it might be interested also in <strong>performance comparison between a JS object and a JS static objet</strong> can read <a href=\"http://stackoverflow.com/questions/3493252/javascript-prototype-operator-performance-saves-memory-but-is-it-faster/4041582#4041582\">this answer below</a>. <strong>Static object are definitely faster</strong>, obviously they can be usued only when you don't need more than one instance of the object.</p>\n",
            "last_activity_date": 1424878209,
            "question_id": 3493252,
            "score": 27,
            "tags": [
                "javascript",
                "performance",
                "function-prototypes"
            ],
            "title": "Javascript prototype operator performance: saves memory, but is it faster?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can play audio with <code>&lt;audio&gt;</code> tag or <code>object</code> or <code>embed</code>. This is the best way like below. You can control audio tag with javascript. </p>\n\n<p>You can control audio by clicking these button:</p>\n\n<pre><code>&lt;div class=\"play\"&gt;Play&lt;/div&gt;\n\n&lt;div class=\"pause\"&gt;Stop&lt;/div&gt;\n</code></pre>\n\n<p>And you must put this script to <code>&lt;body&gt;</code>    </p>\n\n<pre><code>&lt;script&gt;\n    $(document).ready(function() {\n        var audioElement = document.createElement('audio');\n        audioElement.setAttribute('src', 'audio.mp3');\n        audioElement.setAttribute('autoplay', 'autoplay');\n        //audioElement.load()\n\n        $.get();\n\n        audioElement.addEventListener(\"load\", function() {\n            audioElement.play();\n        }, true);\n\n        $('.play').click(function() {\n            audioElement.play();\n        });\n\n        $('.pause').click(function() {\n            audioElement.pause();\n        });\n    });\n&lt;/script&gt;      \n</code></pre>\n\n<p>But for Chrome you cant use <code>.play()</code> and <code>.pause()</code>. You must use <code>.Play()</code> and <code>.Stop</code>.</p>\n",
                    "is_accepted": true,
                    "score": 47
                },
                {
                    "body": "<p>For anyone else following along, I've simply taken Ahmet's answer and updated the original asker's <a href=\"http://jsfiddle.net/gD4Dr/35/\">jsfiddle here</a>, substituting:</p>\n\n<pre><code>audio.mp3\n</code></pre>\n\n<p>for</p>\n\n<pre><code>http://www.uscis.gov/files/nativedocuments/Track%2093.mp3\n</code></pre>\n\n<p>linking in a freely available mp3 off the web. Thank you for sharing the easy solution!</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Well, its so simple to use the Ion.Sound plugin created by IonDen group.</p>\n\n<p>Lots of sounds are available and you can add you own sound files if you want. Then simple play them on any html event.</p>\n\n<p>We have made a live customization system for this plugin like a fiddle here -\n<a href=\"http://bitconfig.com/ion-sound/bitconfig_ion_sound.html\" rel=\"nofollow\">http://bitconfig.com/ion-sound/bitconfig_ion_sound.html</a></p>\n\n<p>Check out if interested.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I here have a nice and versatile solution with a fallback:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var audiotypes={\n        \"mp3\": \"audio/mpeg\",\n        \"mp4\": \"audio/mp4\",\n        \"ogg\": \"audio/ogg\",\n        \"wav\": \"audio/wav\"\n    }\n\n    function ss_soundbits(sound){\n        var audio_element = document.createElement('audio')\n        if (audio_element.canPlayType){\n            for (var i=0; i&lt;arguments.length; i++){\n                var source_element = document.createElement('source')\n                source_element.setAttribute('src', arguments[i])\n                if (arguments[i].match(/\\.(\\w+)$/i))\n                    source_element.setAttribute('type', audiotypes[RegExp.$1])\n                audio_element.appendChild(source_element)\n            }\n            audio_element.load()\n            audio_element.playclip=function(){\n                audio_element.pause()\n                audio_element.currentTime=0\n                audio_element.play()\n            }\n            return audio_element\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>After that you can initialize as many audio as you like:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" &gt;\n    var clicksound  = ss_soundbits('your/path/to/click.ogg', \"your/path/to/click.mp3\");\n    var plopsound  = ss_soundbits('your/path/to/plopp.ogg', \"your/path/to/plopp.mp3\");\n&lt;/script&gt;\n</code></pre>\n\n<p>Now you can reach the initialized audio element whereever you like with simple event calls like</p>\n\n<pre><code>onclick=\"clicksound.playclip()\"\n\nonmouseover=\"plopsound.playclip()\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p><br/>\nI am trying to play an audio file when I click the button, but it's not working, my html code is:</p>\n\n<pre><code>&lt;html&gt;    \n    &lt;body&gt;\n        &lt;div id=\"container\"&gt;\n            &lt;button id=\"play\"&gt;\n                Play Music\n            &lt;/button&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>my JavaScript is :</p>\n\n<pre><code>$('document').ready(function () {\n    $('#play').click(function () {\n        var audio = {};\n        audio[\"walk\"] = new Audio();\n        audio[\"walk\"].src = \"http://www.rangde.org/static/bell-ring-01.mp3\"\n        audio[\"walk\"].addEventListener('load', function () {\n            audio[\"walk\"].play();\n        });\n    });\n});   \n</code></pre>\n\n<p>I have created a Fiddle for that too:  </p>\n\n<p><a href=\"http://jsfiddle.net/sureshpattu/gD4Dr/1/\">jsfiddle</a></p>\n",
            "last_activity_date": 1406828467,
            "question_id": 8489710,
            "score": 22,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "Play an audio file using jQuery when a button is clicked"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Check out <s><a href=\"http://plugins.jquery.com/project/json2html\" rel=\"nofollow\">JSON2HTML</a></s> <a href=\"http://json2html.com/\" rel=\"nofollow\">http://json2html.com/</a> plugin for jQuery. It allows you to specify a transform that would convert your JSON object to unstrcutured list that you could easily format into a table. (i.e. use CSS to change the display properties of the li elements to inline-block).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Thanks all for your replies. <a href=\"http://jsfiddle.net/manishmmulani/7MRx6\" rel=\"nofollow\">I wrote one myself.</a> Please note that this uses jQuery.</p>\n\n<p>Javascript:</p>\n\n<pre><code>var myList = [{\"name\" : \"abc\", \"age\" : 50},\n              {\"age\" : \"25\", \"hobby\" : \"swimming\"},\n              {\"name\" : \"xyz\", \"hobby\" : \"programming\"}];\n\n// Builds the HTML Table out of myList.\nfunction buildHtmlTable() {\n    var columns = addAllColumnHeaders(myList);\n\n    for (var i = 0 ; i &lt; myList.length ; i++) {\n        var row$ = $('&lt;tr/&gt;');\n        for (var colIndex = 0 ; colIndex &lt; columns.length ; colIndex++) {\n            var cellValue = myList[i][columns[colIndex]];\n\n            if (cellValue == null) { cellValue = \"\"; }\n\n            row$.append($('&lt;td/&gt;').html(cellValue));\n        }\n        $(\"#excelDataTable\").append(row$);\n    }\n}\n\n// Adds a header row to the table and returns the set of columns.\n// Need to do union of keys from all records as some records may not contain\n// all records\nfunction addAllColumnHeaders(myList)\n{\n    var columnSet = [];\n    var headerTr$ = $('&lt;tr/&gt;');\n\n    for (var i = 0 ; i &lt; myList.length ; i++) {\n        var rowHash = myList[i];\n        for (var key in rowHash) {\n            if ($.inArray(key, columnSet) == -1){\n                columnSet.push(key);\n                headerTr$.append($('&lt;th/&gt;').html(key));\n            }\n        }\n    }\n    $(\"#excelDataTable\").append(headerTr$);\n\n    return columnSet;\n}\u200b\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;body onLoad=\"buildHtmlTable()\"&gt;\n&lt;table id=\"excelDataTable\" border=\"1\"&gt;\n  &lt;/table&gt;\n&lt;/body&gt;\u200b\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>I have rewritten your code in vanilla-js, using DOM methods to prevent html injection.</p>\n\n<p><a href=\"http://jsfiddle.net/7MRx6/338/\"><strong>Demo</strong></a></p>\n\n<pre><code>var _table_ = document.createElement('table'),\n    _tr_ = document.createElement('tr'),\n    _th_ = document.createElement('th'),\n    _td_ = document.createElement('td');\n\n// Builds the HTML Table out of myList json data from Ivy restful service.\n function buildHtmlTable(arr) {\n     var table = _table_.cloneNode(false),\n         columns = addAllColumnHeaders(arr, table);\n     for (var i=0, maxi=arr.length; i &lt; maxi; ++i) {\n         var tr = _tr_.cloneNode(false);\n         for (var j=0, maxj=columns.length; j &lt; maxj ; ++j) {\n             var td = _td_.cloneNode(false);\n                 cellValue = arr[i][columns[j]];\n             td.appendChild(document.createTextNode(arr[i][columns[j]] || ''));\n             tr.appendChild(td);\n         }\n         table.appendChild(tr);\n     }\n     return table;\n }\n\n // Adds a header row to the table and returns the set of columns.\n // Need to do union of keys from all records as some records may not contain\n // all records\n function addAllColumnHeaders(arr, table)\n {\n     var columnSet = [],\n         tr = _tr_.cloneNode(false);\n     for (var i=0, l=arr.length; i &lt; l; i++) {\n         for (var key in arr[i]) {\n             if (arr[i].hasOwnProperty(key) &amp;&amp; columnSet.indexOf(key)===-1) {\n                 columnSet.push(key);\n                 var th = _th_.cloneNode(false);\n                 th.appendChild(document.createTextNode(key));\n                 tr.appendChild(th);\n             }\n         }\n     }\n     table.appendChild(tr);\n     return columnSet;\n }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You can use simple jQuery jPut plugin</p>\n\n<p><a href=\"http://plugins.jquery.com/jput/\" rel=\"nofollow\">http://plugins.jquery.com/jput/</a></p>\n\n<pre><code>&lt;script&gt;\n$(document).ready(function(){\n\nvar json = [{\"name\": \"name1\",\"email\":\"email1@domain.com\"},{\"name\": \"name2\",\"link\":\"email2@domain.com\"}];\n//while running this code the template will be appended in your div with json data\n$(\"#tbody\").jPut({\n    jsonData:json,\n    //ajax_url:\"youfile.json\",  if you want to call from a json file\n    name:\"tbody_template\",\n});\n\n});\n&lt;/script&gt;   \n\n&lt;table jput=\"t_template\"&gt;\n &lt;tbody jput=\"tbody_template\"&gt;\n     &lt;tr&gt;\n         &lt;td&gt;{{name}}&lt;/td&gt;\n         &lt;td&gt;{{email}}&lt;/td&gt;\n     &lt;/tr&gt;\n &lt;/tbody&gt;\n&lt;/table&gt;\n\n&lt;table&gt;\n &lt;tbody id=\"tbody\"&gt;\n &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Is there any jQuery or javascript library that generates a dynamic table given json data?\nI don't want to define the columns, the library should read the keys in the json hash and generate columns.</p>\n\n<p>Of course, I can myself iterate through the json data and generate the html table. I just want to know if any such library exists which I can simply reuse.</p>\n",
            "last_activity_date": 1416712863,
            "question_id": 5180382,
            "score": 17,
            "tags": [
                "javascript",
                "html",
                "json",
                "html-table"
            ],
            "title": "Convert json data to a html table"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>In this example, taken from</p>\n\n<p><a href=\"http://www.webdeveloper.com/forum/showthread.php?t=75170\" rel=\"nofollow\">http://www.webdeveloper.com/forum/showthread.php?t=75170</a></p>\n\n<p>You can see the way to change the target on the button OnClick event.</p>\n\n<pre><code>function subm(f,newtarget)\n{\ndocument.myform.target = newtarget ;\nf.submit();\n}\n\n&lt;FORM name=\"myform\" method=\"post\" action=\"\" target=\"\" &gt;\n\n&lt;INPUT type=\"button\" name=\"Submit\" value=\"Submit\" onclick=\"subm(this.form,'_self');\"&gt;\n&lt;INPUT type=\"button\" name=\"Submit\" value=\"Submit\" onclick=\"subm(this.form,'_blank');\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>On each of your buttons you could have the following;</p>\n\n<pre><code>&lt;input type=\"button\" name=\"newWin\" onclick=\"frmSubmitSameWin();\"&gt;\n&lt;input type=\"button\" name=\"SameWin\" onclick=\"frmSubmitNewWin();\"&gt;\n</code></pre>\n\n<p>Then have a few small js functions;</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction frmSubmitSameWin() {\nform.target = '';\nform.submit();\n}\n\n\nfunction frmSubmitNewWin() {\nform.target = '_blank';\nform.submit();\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>That should do the trick.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's a quick example script that displays a form that changes the target type:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    function myTarget(form) {\n    \tfor (i = 0; i &lt; form.target_type.length; i++) {\n    \t\tif (form.target_type[i].checked)\n    \t\t\tval = form.target_type[i].value;\n    \t}\n    \tform.target = val;\n    \treturn true;\n    }\n&lt;/script&gt;\n&lt;form action=\"\" onSubmit=\"return myTarget(this);\"&gt;\n    &lt;input type=\"radio\" name=\"target_type\" value=\"_self\" checked /&gt; Self &lt;br/&gt;\n    &lt;input type=\"radio\" name=\"target_type\" value=\"_blank\" /&gt; Blank &lt;br/&gt;\n    &lt;input type=\"submit\"&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It is more appropriate to approach this problem with the mentality that a form will have a default action tied to one submit button, and then an alternative action bound to a plain button. The difference here is that whichever one goes under the submit will be the one used when a user submits the form by pressing enter, while the other one will only be fired when a user explicitly clicks on the button.</p>\n\n<p>Anyhow, with that in mind, this should do it:</p>\n\n<pre><code>&lt;form id='myform' action='jquery.php' method='GET'&gt;\n    &lt;input type='submit' id='btn1' value='Normal Submit'&gt;\n    &lt;input type='button' id='btn2' value='New Window'&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>With this javascript:</p>\n\n<pre><code>var form = document.getElementById('myform');\nform.onsubmit = function() {\n    form.target = '_self';\n};\n\ndocument.getElementById('btn2').onclick = function() {\n    form.target = '_blank';\n    form.submit();\n}\n</code></pre>\n\n<p>Approaches that bind code to the submit button's click event will not work on IE.</p>\n",
                    "is_accepted": true,
                    "score": 44
                },
                {
                    "body": "<p>I do this on the server-side.  That is, the form always submits to the same target, but I have a server-side script that is responsible for redirecting to the appropriate location depending on what button was pressed.</p>\n\n<p>If you have multiple buttons, such as </p>\n\n<pre><code>&lt;form action=\"mypage\" method=\"get\"&gt;\n\n  &lt;input type=\"submit\" name=\"retry\" value=\"Retry\" /&gt;\n  &lt;input type=\"submit\" name=\"abort\" value=\"Abort\" /&gt;\n\n&lt;/form&gt;\n</code></pre>\n\n<p>(note, I used GET, but it works for POST too)</p>\n\n<p>Then you can easily determine which button was pressed - if the variable 'retry' exists and has a value then retry was pressed, and if the variable 'abort' exists and has a value then abort was pressed.  This knowledge can then be used to redirect to the appropriate place.</p>\n\n<p>This method needs no Javascript.</p>\n\n<p>Note that some browsers are capable of submitting a form without pressing any buttons (by pressing enter).  Non-standard as this is, you have to account for it, by having a clear 'default' action and activating that whenever no buttons were pressed.  In other words, make sure your form does <em>something sensible</em> (whether that's displaying a helpful error message or assuming a default) when someone hits enter in a different form element instead of clicking a submit button, rather than just breaking.</p>\n",
                    "is_accepted": false,
                    "score": 51
                },
                {
                    "body": "<p>Have both buttons submit to the current page and then add this code at the top:</p>\n\n<pre><code>&lt;?php\n    if(isset($_GET['firstButtonName'])\n        header(\"Location: first-target.php?var1={$_GET['var1']}&amp;var2={$_GET['var2']}\");\n    if(isset($_GET['secondButtonName'])\n        header(\"Location: second-target.php?var1={$_GET['var1']}&amp;var2={$_GET['var2']}\");\n?&gt;\n</code></pre>\n\n<p>It could also be done using $_SESSION if you don't want them to see the variables.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In case you are up to HTML5, you can just use the attribute <code>formaction</code>:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;body&gt;\n    &lt;form&gt;\n      &lt;input type=\"submit\" formaction=\"firsttarget\" value=\"Submit to first\" /&gt;\n      &lt;input type=\"submit\" formaction=\"secondtarget\" value=\"Submit to second\" /&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Example:</p>\n\n<pre><code>&lt;input \n  type=\"submit\" \n  onclick=\"this.form.action='new_target.php?do=alternative_submit'\" \n  value=\"Alternative Save\"\n/&gt;\n</code></pre>\n\n<p>Voila.\nVery \"fancy\", three word JavaScript!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>HTML: </p>\n\n<pre><code>&lt;form method=\"get\"&gt;\n&lt;input type=\"text\" name=\"id\" value=\"123\"/&gt;\n&lt;input type=\"submit\" name=\"action\" value=\"add\"/&gt;\n&lt;input type=\"submit\" name=\"action\" value=\"delete\"/&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>JS: </p>\n\n<pre><code>$('form').submit(function(ev){ \nev.preventDefault();\nconsole.log('clicked',ev.originalEvent,ev.originalEvent.explicitOriginalTarget) \n})\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/arzo/unhc3/\" rel=\"nofollow\">http://jsfiddle.net/arzo/unhc3/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This works for me:</p>\n\n<pre><code>&lt;input type='submit' name='self' value='This window' onclick='this.form.target=\"_self\";' /&gt;\n\n&lt;input type='submit' name='blank' value='New window' onclick='this.form.target=\"_blank\";' /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Simple and easy to understand, this will send the name of the button that has been clicked, then will branch off to do whatever you want. This can reduce the need for two targets. Less pages...!</p>\n\n<pre><code>&lt;form action=\"twosubmits.php\" medthod =\"post\"&gt;\n&lt;input type = \"text\" name=\"text1\"&gt;\n\n&lt;input type=\"submit\"  name=\"scheduled\" value=\"Schedule Emails\"&gt;\n&lt;input type=\"submit\"  name=\"single\" value=\"Email Now\"&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>twosubmits.php</p>\n\n<pre><code>&lt;?php\nif (empty($_POST['scheduled'])) {\n// do whatever or collect values needed\ndie(\"You pressed single\");\n}\n\nif (empty($_POST['single'])) {\n// do whatever or collect values needed\ndie(\"you pressed scheduled\");\n}\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Alternate Solution. Don't get messed up with onclick,buttons,server side and all.Just create a new form with different action like this.</p>\n\n<pre><code>&lt;form method=post name=main onsubmit=\"return validate()\" action=\"scale_test.html\"&gt;\n&lt;input type=checkbox value=\"AC Hi-Side Pressure\"&gt;AC Hi-Side Pressure&lt;br&gt;\n&lt;input type=checkbox value=\"Engine_Speed\"&gt;Engine Speed&lt;br&gt;\n&lt;input type=submit value=\"Linear Scale\" /&gt;\n&lt;/form&gt;\n&lt;form method=post name=main1 onsubmit=\"return v()\" action=scale_log.html&gt;\n&lt;input type=submit name=log id=log value=\"Log Scale\"&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>Now in Javascript you can get all the elements of main form in v() with the help of <a href=\"http://www.w3schools.com/jsref/met_document_getelementsbytagname.asp\" rel=\"nofollow\">getElementsByTagName()</a>. To know whether the checkbox is checked or not</p>\n\n<pre><code>function v(){\nvar check = document.getElementsByTagName(\"input\");\n\n    for (var i=0; i &lt; check.length; i++) {\n        if (check[i].type == 'checkbox') {\n            if (check[i].checked == true) {\n\n        x[i]=check[i].value\n            }\n        }\n    }\nconsole.log(x);\n}   \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Hi I have one html &lt;form&gt;.</p>\n\n<p>The form has only one <code>action=\"\"</code> attribute.</p>\n\n<p>However I wish to have 2 different <code>target=\"\"</code> attributes depending on which button you click to submit the form.  This is probably some fancy javascript, but I haven't an idea where to begin.</p>\n\n<p>Any ideas how I could create two buttons, each submit the same form, but each button gives the form a different target?</p>\n\n<p>THANKS!</p>\n",
            "last_activity_date": 1392093349,
            "question_id": 942772,
            "score": 51,
            "tags": [
                "javascript",
                "html",
                "forms",
                "submit"
            ],
            "title": "HTML form with two submit buttons and two &quot;target&quot; attributes"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>To store another value in select options:</p>\n\n<pre><code>$(\"#select\").append('&lt;option value=\"4\"&gt;another&lt;/option&gt;')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I made two examples from what I think your question might be:</p>\n\n<p><a href=\"http://jsfiddle.net/grdn4/\" rel=\"nofollow\">http://jsfiddle.net/grdn4/</a></p>\n\n<p>Check this out for storing additional values.  It uses data attributes to store the other value:</p>\n\n<p><a href=\"http://jsfiddle.net/27qJP/1/\" rel=\"nofollow\">http://jsfiddle.net/27qJP/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>HTML Markup</strong></p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;select id=\"select\"&gt;\n  &lt;option value=\"1\" data-foo=\"dogs\"&gt;this&lt;/option&gt;\n  &lt;option value=\"2\" data-foo=\"cats\"&gt;that&lt;/option&gt;\n  &lt;option value=\"3\" data-foo=\"gerbils\"&gt;other&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"lang-js prettyprint-override\"><code>// JavaScript using jQuery\n$(function(){\n    $('select').change(function(){\n       var selected = $(this).find('option:selected');\n       var extra = selected.data('foo'); \n       ...\n    });\n});\n\n// Plain old JavaScript\nvar sel = document.getElementById('select');\nvar selected = sel.options[sel.selectedIndex];\nvar extra = selected.getAttribute('data-foo');\n</code></pre>\n\n<p>See this as a working sample using jQuery here: <a href=\"http://jsfiddle.net/GsdCj/1/\">http://jsfiddle.net/GsdCj/1/</a><br>\nSee this as a working sample using plain JavaScript here: <a href=\"http://jsfiddle.net/GsdCj/2/\">http://jsfiddle.net/GsdCj/2/</a></p>\n\n<p>By using <a href=\"http://ejohn.org/blog/html-5-data-attributes/\">data attributes</a> from HTML5 you can add extra data to elements in a syntactically-valid manner that is also easily accessible from jQuery.</p>\n",
                    "is_accepted": true,
                    "score": 127
                },
                {
                    "body": "<p>To me, it sounds like you want to create a new attribute?  Do you want </p>\n\n<pre><code>&lt;option value=\"2\" value2=\"somethingElse\"&gt;...\n</code></pre>\n\n<p>To do this, you can do</p>\n\n<pre><code>$(your selector).attr('value2', 'the value');\n</code></pre>\n\n<p>And then to retrieve it, you can use</p>\n\n<pre><code>$(your selector).attr('value2')\n</code></pre>\n\n<p>It's not going to be valid code, but I guess it does the job.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>HTML/JSP Markup:</p>\n\n<p>\n</p>\n\n<p>JQUERY CODE:\nEvent: change</p>\n\n<pre><code>var $this = $(this);\n</code></pre>\n\n<p>var $selectedOption = $this.find('option:selected');\nvar libelle = $selectedOption.data('libelle');</p>\n\n<p>To have  a element libelle.val() or libelle.text() </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Very simple question I hope.</p>\n\n<p>I have the usual <code>&lt;select&gt;</code> box like this</p>\n\n<pre><code>&lt;select id=\"select\"&gt;\n    &lt;option value=\"1\"&gt;this&lt;/option&gt;\n    &lt;option value=\"2\"&gt;that&lt;/option&gt;\n    &lt;option value=\"3\"&gt;other&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>I can get the selected value (by using <code>$(\"#select\").val()</code>) and the selected item's display value (by using <code>$(\"#select :selected\").text()</code>.</p>\n\n<p>But how can I store like an additional value in the <code>&lt;option&gt;</code> tag? I would like to be able to do something like <code>&lt;option value=\"3.1\" value2=\"3.2\"&gt;other&lt;/option&gt;</code> and get the value of the <code>value2</code> attribute (which would be 3.2 in the example).</p>\n",
            "last_activity_date": 1392132599,
            "question_id": 4564659,
            "score": 47,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "Adding additional data to select options using jQuery"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>stopPropagation</code> has to be called on an event object, not the element itself. Here's an example:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>compile: function (elm) {\n    return function (scope, elm, attrs) {\n        $(elm).click(function (event) {\n            event.stopPropagation();\n        });\n    };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><em>\"Currently some directives (i.e. ng:click) stops event propagation. This prevents interoperability with other frameworks that rely on capturing such events.\"</em> - <a href=\"https://github.com/angular/angular.js/issues/259\">link</a></p>\n\n<p>... and was able to fix without a directive, and simply doing:</p>\n\n<pre><code>&lt;a ng-click=\"doThing($index); $event.stopPropagation();\"&gt;x&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 68
                },
                {
                    "body": "<p>I've used this way: Created a directive:\n</p>\n\n<pre><code>    .directive('stopEvent', function () {\n        return {\n            restrict: 'A',\n            link: function (scope, element, attr) {\n                element.bind(attr.stopEvent, function (e) {\n                    e.stopPropagation();\n                });\n            }\n        };\n     });\n</code></pre>\n\n<p>that could be used this way:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;a ng-click='expression' stop-event='click'&gt;\n</code></pre>\n\n<p>This is more generic way of stopping propagation of any kind of events.</p>\n",
                    "is_accepted": false,
                    "score": 103
                }
            ],
            "body": "<p>I am trying to \"stopPropagation\" to prevent a Twitter Bootstrap navbar dropdown from closing when an element (link) inside an li is clicked.  Using this method seems to be the common <a href=\"http://stackoverflow.com/questions/12323066/twitter-bootstrap-stop-propagation-on-dropdown-open\">solution</a>.</p>\n\n<p>In Angular, seems like a directive is the place to do this?  So I have:</p>\n\n<pre><code>// do not close dropdown on click\ndirectives.directive('stopPropagation', function () {\n    return {\n        link:function (elm) {            \n            $(elm).click(function (event) {                \n                event.stopPropagation();\n            });\n        }\n    };\n});\n</code></pre>\n\n<p>... but the method does not belong to element:</p>\n\n<pre><code>TypeError: Object [object Object] has no method 'stopPropagation'\n</code></pre>\n\n<p>I tie in the directive with</p>\n\n<pre><code>&lt;li ng-repeat=\"foo in bar\"&gt;\n  &lt;div&gt;\n    {{foo.text}}&lt;a stop-propagation ng-click=\"doThing($index)\"&gt;clickme&lt;/a&gt;\n  &lt;/div&gt;\n&lt;/li&gt;\n</code></pre>\n\n<p>Any suggestions?</p>\n",
            "last_activity_date": 1400867601,
            "question_id": 14544741,
            "score": 46,
            "tags": [
                "javascript",
                "jquery",
                "angularjs",
                "stoppropagation"
            ],
            "title": "How can I make an AngularJS directive to stopPropagation?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>There is a good article/tutorial written by <a href=\"http://www.peej.co.uk/\">Paul James</a>. I used it some time ago and it worked for me.</p>\n\n<p><a href=\"http://www.peej.co.uk/articles/http-auth-with-html-forms.html\">HTTP Authentication with HTML Forms</a></p>\n\n<blockquote>\n  <p>[...] XMLHTTPRequest, it can submit the\n  correct HTTP auth headers for us.\n  Rather than adjusting the URL the form\n  submits to, we can use XMLHTTPRequest\n  to do a request before the form\n  submits supplying the entered username\n  and password.</p>\n  \n  <p>This will set up the\n  browser with the HTTP auth credentials\n  so it'll also send them with our\n  actual form submission login request.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>Take a look at the W3C specifications for the <a href=\"http://www.w3.org/TR/XMLHttpRequest/#the-open()-method\" rel=\"nofollow\">XMLHttpRequest Object</a>.  The five-parameter version of the 'open' method allow you to specify the username and password.</p>\n",
                    "is_accepted": true,
                    "score": 42
                }
            ],
            "body": "<p>Where can I find reference code that implements a HTTP Basic Authentication client in pure Javascript, suitable for Ajax?</p>\n\n<p>(Yes, I could read the spec and implement it myself, but it's for a side project and I'd rather not spend much time on it.)</p>\n\n<p>Extra points for code, or pointers to code, that can be used independent of JS toolkits like YUI. No points for Java, Flash/Flex, PHP frameworks, etc.</p>\n",
            "last_activity_date": 1421429890,
            "question_id": 491914,
            "score": 43,
            "tags": [
                "javascript",
                "http",
                "basic-authentication"
            ],
            "title": "Pure Javascript code for HTTP Basic Authentication?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>It's all about performance and development speed. Of course, if you are a good programmer and design something that is really tailored to your needs, you might achieve better performance than if you had used a Javascript framework. But do you have the time to do it all by yourself?</p>\n\n<p>My personal opinion is that Javascript is incredibly useful and overused, but that if you really need it, a framework is the way to go.</p>\n\n<p>Now comes the choice of the framework. For what benchmarks are worth, you can find one at <a href=\"http://ejohn.org/files/142/\">http://ejohn.org/files/142/</a> . It also depends on which plugins are available and what you intend to do with them. I started using jQuery because it seemed to be maintained and well featured, even though it wasn't the fastest at that moment. I do not regret it but I didn't test anything else since then.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Jquery like any other good JavaScript frameworks supplies you with functionality independent of browser platform wrapping all the intricacies, which you may not care about or don't want to care about.</p>\n\n<p>I think using a framework is better instead of using pure JavaScript and doing all the stuff from scratch, unless you usage is very limited.</p>\n\n<p>I definitely recommend JQuery!</p>\n\n<p>Thanks</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Jquery VS javascript, I am completely against the OP in this question. Comparison happens with two similar things, not in such case.</p>\n\n<p>Jquery is Javascript. A javascript library to reduce vague coding, collection commonly used javascript functions which has proven to help in efficient and fast coding.</p>\n\n<p>Javascript is the source, the actual scripts that browser responds to. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<ul>\n<li>Does jQuery heavily rely on browser sniffing? Could be that potential problem in future? \nWhy?</li>\n</ul>\n\n<p>No - there is the $.browser method, but it's deprecated and isn't used in the core.</p>\n\n<ul>\n<li>I found plenty JS-selector engines, are there any AJAX and FX libraries?</li>\n</ul>\n\n<p>Loads. jQuery is often chosen because it does AJAX and animations well, and is easily extensible. jQuery doesn't use it's own selector engine, it uses <a href=\"http://sizzlejs.com/\">Sizzle</a>, an incredibly fast selector engine.</p>\n\n<ul>\n<li>Is there any reason (besides browser sniffing and personal \"hate\" against John Resig) why jQuery is wrong?</li>\n</ul>\n\n<p>No - it's quick, relatively small and easy to extend.</p>\n\n<p>For me personally it's nice to know that as browsers include more stuff (classlist API for example) that jQuery will update to include it, meaning that my code runs as fast as possible all the time.</p>\n\n<p>Read through the source if you are interested, <a href=\"http://code.jquery.com/jquery-1.4.3.js\">http://code.jquery.com/jquery-1.4.3.js</a> - you'll see that features are added based on the best case first, and gradually backported to legacy browsers - for example, a section of the parseJSON method from 1.4.3:</p>\n\n<pre><code>return window.JSON &amp;&amp; window.JSON.parse ?\n    window.JSON.parse( data ) :\n    (new Function(\"return \" + data))();\n</code></pre>\n\n<p>As you can see, if window.JSON exists, the browser uses the native JSON parser, if not, then it avoids using eval (because otherwise minfiers won't minify this bit) and sets up a function that returns the data. This idea of assuming modern techniques first, then degrading to older methods is used throughout meaning that new browsers get to use all the whizz bang features without sacrificing legacy compatibility.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<blockquote>\n  <p>\"I actually tried to had a normal objective discusssion over pros and\n  cons of 1., <strong>using framework over pure javascript</strong> and 2., jquery vs.\n  others, since jQuery seems to be easiest to work with with quickest\n  learning curve.\"</p>\n</blockquote>\n\n<p>Using any <em>framework</em> because you don't want to actually learn the underlying language is absolutely wrong not only for JavaScript, but for any other programming language.</p>\n\n<blockquote>\n  <p>\"Is there any reason (besides browser sniffing and personal \"hate\"\n  against John Resig) <strong>why jQuery is wrong</strong>?\"</p>\n</blockquote>\n\n<p>Most of the hate agains it comes from the exaggerated fanboyism which pollutes forums with \"use jQuery\" as an answer for every single JavaScript question and the overuse which produces code in which simple statements such as declaring a variable are done through library calls.</p>\n\n<p>Nevertheless, there are also some legit technical issues such as the shared guilt in producing illegible code and overhead. Of course those two are aggravated by the lack of developer proficiency rather than the library itself.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Personally i think you should learn the hard way first. It will make you a better programmer and you will be able to solve that one of a kind issue when it comes up. After you can do it with pure JavaScript then using jQuery to speed up development is just an added bonus. </p>\n\n<p>If you can do it the hard way then you can do it the easy way, it doesn't work the other way around. That applies to any programming paradigm. </p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I recently stumbled upon some javascript forums (sadly, link is lost somewhere in the universe), where you could feel real hate against jQuery for not being... any good?</p>\n\n<p>Most arguments seem to make sense actually.</p>\n\n<p>Now, I really like jQuery, mostly for letting me concentrate on things I want to do rather on browser inconsistencies and it actually makes AJAXing with cool (or <em>overused</em>?) effects fun.</p>\n\n<p>But if really is something rotten in the core of jQuery, I don't want to rely on it the way I actually... rely on it.</p>\n\n<p>I don't want to start yet another argument over which framework is the best... but... Which framework is the best <em>(joke)</em>? As a case usage, think about small to medium web and it's administration.</p>\n\n<p>I'm just trying to figure out, if stuff in <em>some</em> framework or pure javascript with few mine functions really makes difference.</p>\n\n<h2>Edit:</h2>\n\n<p>I actually tried to have a normal objective discusssion over pros and cons of 1., using a framework over pure javascript and 2., jquery vs. others, since jQuery seems to be easiest to work with with the quickest learning curve. However, some people just don't understand it and think that I'm starting yet another flame (what I am not). I am actually voting to reopen this question.</p>\n\n<p>Also I'm really interested in:</p>\n\n<ul>\n<li>Does jQuery heavily rely on browser sniffing? Could that be a potential problem in the future? Why?</li>\n<li>I found plenty JS-selector engines, are there any AJAX and FX libraries?</li>\n<li>Is there any reason (besides browser sniffing and personal \"hate\" against John Resig) why jQuery is wrong?</li>\n</ul>\n\n<p>jQuery actually, as most used, stands for other frameworks also.</p>\n",
            "last_activity_date": 1386145345,
            "question_id": 2340412,
            "score": 31,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery vs. javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Since you tagged it with javascript, I would go with a timer control since your function names are 3, 5, and 8 seconds. So start your timer, 3 seconds in, call the first, 5 seconds in call the second, 8 seconds in call the third, then when it's done, stop the timer.</p>\n\n<p>Normally in Javascript what you have is correct for the functions are running one after another, but since it looks like you're trying to do timed animation, a timer would be your best bet.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In Javascript, there are <em>synchronous</em> and <em>asynchronous</em> functions.</p>\n\n<h2>Synchronous Functions</h2>\n\n<p>Most functions in Javascript are synchronous. If you were to call several synchronous functions in a row</p>\n\n<pre><code>doSomething();\ndoSomethingElse();\ndoSomethingUsefulThisTime();\n</code></pre>\n\n<p>they will execute in order. <code>doSomethingElse</code> will not start until <code>doSomething</code> has completed. <code>doSomethingUsefulThisTime</code>, in turn, will not start until <code>doSomethingElse</code> has completed.</p>\n\n<h2>Asynchronous Functions</h2>\n\n<p>Asynchronous function, however, will not wait for each other. Let us look at the same code sample we had above, this time assuming that the functions are asynchronous</p>\n\n<pre><code>doSomething();\ndoSomethingElse();\ndoSomethingUsefulThisTime();\n</code></pre>\n\n<p>The functions will be initialized in order, but they will all execute roughly at the same time. You can't consistently predict which one will finish first: the one that happens to take the shortest amount of time to execute will finish first.</p>\n\n<p>But sometimes, you want functions that are asynchronous to execute in order, and sometimes you want functions that are synchronous to execute asynchronously. Fortunately, this is possible with callbacks and timeouts, respectively.</p>\n\n<h2>Callbacks</h2>\n\n<p>Let's assume that we have three asynchronous functions that we want to execute in order, <code>some_3secs_function</code>, <code>some_5secs_function</code>, and <code>some_8secs_function</code>.</p>\n\n<p>Since functions can be passed as arguments in Javascript, you can pass a function as a callback to execute after the function has completed.</p>\n\n<p>If we create the functions like this</p>\n\n<pre><code>function some_3secs_function(value, callback){\n  //do stuff\n  callback();\n}\n</code></pre>\n\n<p>then you can call then in order, like this:</p>\n\n<pre><code>some_3secs_function(some_value, function() {\n  some_5secs_function(other_value, function() {\n    some_8secs_function(third_value, function() {\n      //All three functions have completed, in order.\n    });\n  });\n});\n</code></pre>\n\n<h2>Timeouts</h2>\n\n<p>In Javascript, you can tell a function to execute after a certain timeout (in milliseconds). This can, in effect, make synchronous functions behave asynchronously.</p>\n\n<p>If we have three synchronous functions, we can execute them asynchronously using the <code>setTimeout</code> function.</p>\n\n<pre><code>setTimeout(doSomething, 10);\nsetTimeout(doSomethingElse, 10);\nsetTimeout(doSomethingUsefulThisTime, 10);\n</code></pre>\n\n<p>This is, however, a bit ugly and violates the <a href=\"http://en.wikipedia.org/wiki/Don%27t_repeat_yourself\">DRY principle<sup>[wikipedia]</sup></a>. We could clean this up a bit by creating a function that accepts an array of functions and a timeout. </p>\n\n<pre><code>function executeAsynchronously(functions, timeout) {\n  for(var i = 0; i &lt; functions.length; i++) {\n    setTimeout(functions[i], timeout);\n  }\n}\n</code></pre>\n\n<p>This can be called like so:</p>\n\n<pre><code>executeAsynchronously(\n    [doSomething, doSomethingElse, doSomethingUsefulThisTime], 10);\n</code></pre>\n\n<p>In summary, if you have asynchronous functions that you want to execute syncronously, use callbacks, and if you have synchronous functions that you want to execute asynchronously, use timeouts.</p>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p>your functions should take a callback function, that gets called when it finishes.</p>\n\n<pre><code>function fone(callback){\n...do something...\ncallback.apply(this,[]);\n\n}\n\nfunction ftwo(callback){\n...do something...\ncallback.apply(this,[]);\n}\n</code></pre>\n\n<p>then usage would be like:</p>\n\n<pre><code>fone(function(){\n  ftwo(function(){\n   ..ftwo done...\n  })\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>asec=1000; \n\nsetTimeout('some_3secs_function(\"somevalue\")',asec*3);\nsetTimeout('some_5secs_function(\"somevalue\")',asec*5);\nsetTimeout('some_8secs_function(\"somevalue\")',asec*8);\n</code></pre>\n\n<p>I won't go into a deep discussion of setTimeout here, but:  </p>\n\n<ul>\n<li>in this case I've added the code to execute as a string.  this is the simplest way to pass a var into your setTimeout-ed function, but purists will complain.</li>\n<li>you can also pass a function name without quotes, but no variable can be passed.</li>\n<li>your code does not wait for setTimeout to trigger.  </li>\n<li>This one can be hard to get your head around at first:  because of the previous point, if you pass a variable from your calling function, that variable will not exist anymore by the time the timeout triggers - the calling function will have executed and it's vars gone.</li>\n<li>I have been known to use anonymous functions to get around all this, but there could well be a better way,</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It sounds like you're not fully appreciating the difference between <strong>synchronous</strong> and <strong>asynchronous</strong> function execution. </p>\n\n<p>The code you provided in your update <em>immediately</em> executes each of your callback functions, which in turn immediately start an animation. The animations, however, execute <em>asyncronously</em>. It works like this:</p>\n\n<ol>\n<li>Perform a step in the animation</li>\n<li>Call <code>setTimeout</code> with a function containing the next animation step and a delay</li>\n<li>Some time passes </li>\n<li>The callback given to <code>setTimeout</code> executes </li>\n<li>Go back to step 1</li>\n</ol>\n\n<p>This continues until the last step in the animation completes. In the meantime, your synchronous functions have long ago completed. In other words, your call to the <code>animate</code> function doesn't <em>really</em> take 3 seconds. The effect is simulated with delays and callbacks.</p>\n\n<p>What you need is a <strong>queue</strong>. Internally, jQuery queues the animations, only executing <em>your</em> callback once its corresponding animation completes. If your callback then starts another animation, the effect is that they are executed in sequence. </p>\n\n<p>In the simplest case this is equivalent to the following:</p>\n\n<pre><code>window.setTimeout(function() {\n    alert(\"!\");\n    // set another timeout once the first completes\n    window.setTimeout(function() {\n        alert(\"!!\");\n    }, 1000);\n}, 3000); // longer, but first\n</code></pre>\n\n<p>Here's a general asynchronous looping function. It will call the given functions in order, waiting for the specified number of seconds between each.</p>\n\n<pre><code>function loop() {\n    var args = arguments;\n    if (args.length &lt;= 0)\n        return;\n    (function chain(i) {\n        if (i &gt;= args.length || typeof args[i] !== 'function')\n            return;\n        window.setTimeout(function() {\n            args[i]();\n            chain(i + 1);\n        }, 2000);\n    })(0);\n}    \n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>loop(\n  function() { alert(\"sam\"); }, \n  function() { alert(\"sue\"); });\n</code></pre>\n\n<p>You could obviously modify this to take configurable wait times or to immediately execute the first function or to stop executing when a function in the chain returns <code>false</code> or to <code>apply</code> the functions in a specified context or whatever else you might need.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>If I need call this functions one after other,</p>\n\n<pre><code>        $('#art1').animate({'width':'1000px'},1000);        \n        $('#art2').animate({'width':'1000px'},1000);        \n        $('#art3').animate({'width':'1000px'},1000);        \n</code></pre>\n\n<p>I know in jQuery I could do something like:</p>\n\n<pre><code>        $('#art1').animate({'width':'1000px'},1000,'linear',function(){\n            $('#art2').animate({'width':'1000px'},1000,'linear',function(){\n                $('#art3').animate({'width':'1000px'},1000);        \n            });        \n        });        \n</code></pre>\n\n<p>But, let's assume that I'm not using jQuery and I want to call:</p>\n\n<pre><code>        some_3secs_function(some_value);        \n        some_5secs_function(some_value);        \n        some_8secs_function(some_value);        \n</code></pre>\n\n<p>How I should call this functions in order to execute <code>some_3secs_function</code>, and AFTER that call ends, then execute <code>some_5secs_function</code> and AFTER that call ends, then call <code>some_8secs_function</code>?</p>\n\n<p><strong>UPDATE:</strong></p>\n\n<p>This still not working:</p>\n\n<pre><code>    (function(callback){\n        $('#art1').animate({'width':'1000px'},1000);\n        callback();\n    })((function(callback2){\n        $('#art2').animate({'width':'1000px'},1000);\n        callback2();\n    })(function(){\n        $('#art3').animate({'width':'1000px'},1000);\n    }));\n</code></pre>\n\n<p>Three animations start at same time</p>\n\n<p>Where is my mistake.</p>\n",
            "last_activity_date": 1342018265,
            "question_id": 5187968,
            "score": 28,
            "tags": [
                "javascript",
                "asynchronous",
                "callback",
                "closures"
            ],
            "title": "How should I call 3 functions in order to execute them one after the other?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Here is what I found until now :</p>\n\n<ul>\n<li><a href=\"http://www.dotvoid.com/2005/06/aspect-oriented-programming-and-javascript/\">dotvoid</a>'s implementation, clean syntax, nice to use, the article is a good introduction on why/how to use the given code, supports introductions, but is bugged,</li>\n<li>Dojo has what seems to be a good built-in implementation in <a href=\"http://api.dojotoolkit.org/jsdoc/1.3/dojox.lang.aspect\">dojox</a>, <a href=\"http://lazutkin.com/blog/2008/may/18/aop-aspect-javascript-dojo/\">here</a> is a nice introduction on how to use it,</li>\n<li>there is a plugin for jQuery, <a href=\"http://code.google.com/p/jquery-aop/\">jquery-aop</a>, with a rougher syntax, passing objects and methods in a javascript object,</li>\n<li><a href=\"http://zer0.free.fr/aspectjs/aspectjs.js\">AspectJS</a> with an even rougher syntax (need to pass type of pointcut as arguments to a single method)</li>\n</ul>\n\n<p>Like I said, dotvoid's code did not work.\nI corrected a little and got something that seems to work better :</p>\n\n<pre><code>InvalidAspect = new Error(\"Missing a valid aspect. Aspect is not a function.\");\nInvalidObject = new Error(\"Missing valid object or an array of valid objects.\");\nInvalidMethod = new Error(\"Missing valid method to apply aspect on.\");\n\nfunction doBefore(beforeFunc,func){\n    return function(){\n    \tbeforeFunc.apply(this,arguments);\n    \treturn func.apply(this,arguments);\n    };\t\n}\n\nfunction doAfter(func, afterFunc){\n    return function(){\n    \tvar res = func.apply(this,arguments);\n    \tafterFunc.apply(this,arguments);\n    \treturn res;   \n    };\n}\n\nAspects = function(){};\nAspects.prototype={\n    _addIntroduction : function(intro, obj){\n    \t for (var m in intro.prototype) {\n    \t      obj.prototype[m] = intro.prototype[m];\n    \t    }\n    \t},\n\n    addIntroduction : function(aspect, objs){\n    \tvar oType = typeof(objs);\n\n    \tif (typeof(aspect) != 'function')\n    \tthrow(InvalidAspect);\n\n    \tif (oType == 'function'){\n    \t\tthis._addIntroduction(aspect, objs);\n    \t}\n    \telse if (oType == 'object'){\n    \t\tfor (var n = 0; n &lt; objs.length; n++){\n    \t\t\tthis._addIntroduction(aspect, objs[n]);\n    \t\t}\n    \t}\n    \telse{\n    \t\tthrow InvalidObject;\n    \t}\n    },\n\n    addBefore : function(aspect, obj, funcs){\n    \t  var fType = typeof(funcs);\n\n    \t  if (typeof(aspect) != 'function')\n    \t    throw(InvalidAspect);\n\n    \t  if (fType != 'object')\n    \t    funcs = Array(funcs);\n\n    \t  for (var n = 0; n &lt; funcs.length; n++){\n    \t    var fName = funcs[n];\n    \t    var old = obj.prototype[fName];\n\n    \t    if (!old)\n    \t      throw InvalidMethod;\n\n    \t    var res = doBefore(aspect,old)\n    \t    obj.prototype[fName] = res;\n      \t}\n    },\n\n    addAfter : function(aspect, obj, funcs) {\n    \t  if (typeof(aspect) != 'function')\n    \t    throw InvalidAspect;\n\n    \t  if (typeof(funcs) != 'object')\n    \t    funcs = Array(funcs);\n\n    \t  for (var n = 0; n &lt; funcs.length; n++)\n    \t  {\n    \t    var fName = funcs[n];\n    \t    var old = obj.prototype[fName];\n\n    \t    if (!old)\n    \t      throw InvalidMethod;\n\n    \t\tvar res = doAfter(old,aspect);\n    \t\tobj.prototype[fName] = res;\n    \t  }\n    \t},\n\n    addAround : function(aspect, obj, funcs){\n    \t  if (typeof(aspect) != 'function')\n    \t    throw InvalidAspect;\n\n    \t  if (typeof(funcs) != 'object')\n    \t    funcs = Array(funcs);\n\n    \t  for (var n = 0; n &lt; funcs.length; n++)\n    \t  {\n    \t    var fName = funcs[n];\n    \t    var old = obj.prototype[fName];\n    \t    if (!old)\n    \t      throw InvalidMethod;\n\n    \t\tvar res = aspect(old);\n    \t\tobj.prototype[fName] = res;\n    \t  }\n\n    \t  return true;\n    \t}\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>Have you seen <code>meld.js</code> and <code>aop.js</code> from \n<a href=\"https://github.com/cujojs\">https://github.com/cujojs</a>?</p>\n\n<p>SpringSource provides AOP functionality there, in addition to a bunch of other useful things for advanced Javascript programmers.</p>\n\n<p><strong>Disclaimer</strong>: I work for SpringSource.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Based on dotvoid solution, I created my own version of JS AOP for my own projects needs.\nI basically want to minimize the aspect setup costs, so I added aspect setup functionality at\nFunction.prototype.</p>\n\n<pre><code>Function.prototype.applyBefore = function (aspect, targetFuncNames) {\n....\n}\n</code></pre>\n\n<p>I also need to support aync callbacks, such as supporting authentication and authorization for certain methods.\nFor example:</p>\n\n<pre><code>var authenticateAspect = function (error, success, context, args) {\n    logger.log('authenticate (applyBefore async) aspect is being called');\n    var request = $.ajax({\n        url: \"http://localhost/BlogWeb/api/user/authenticate\",\n        type: \"GET\",\n        data: { username:'jeff', pwd:'jeff' },\n        success: function (data) {\n            if (data) {\n                success();\n            } else {\n                error();\n            }\n        },\n        error: error\n    });\n    return request;\n};\n\nPerson.applyBefore(authenticateAspect, 'sendNotification');\n\nvar p1 = new Person();\n\np1.sendNotification();\n</code></pre>\n\n<p>To implement this, I need to run the security and and continue upon success or stop execution on failure.</p>\n\n<pre><code>var invalidAspect = new Error(\"Missing a valid aspect. Aspect is not a function.\"),\n    invalidMethod = new Error(\"Missing valid method to apply aspect on.\");\n\n///Parameters: aspect - defines the methods we want call before or/and \n///             after each method call ob target obejct\n///            targetFuncNames - target function names to apply aspects\n///Return: it should return a new object with all aspects setup on target object\nFunction.prototype.applyBefore = function (aspect, targetFuncNames) {\n    if (typeof (aspect) != 'function')\n        throw invalidAspect;\n\n    if (typeof (targetFuncNames) != 'object')\n        targetFuncNames = Array(targetFuncNames);\n\n    var targetObj = this;\n    //error handling function\n\n    // Copy the properties over onto the new prototype\n    for (var i = 0, len = targetFuncNames.length; i &lt; len; i++) {\n        var funcName = targetFuncNames[i];\n        var targetFunc = targetObj.prototype[funcName];\n\n        if (!targetFunc)\n            throw invalidMethod;\n\n\n        targetObj.prototype[funcName] = function () {\n            var self = this, args = arguments;\n            var success = function() {\n                return targetFunc.apply(self, args);\n            };\n            var error = function () {\n                logger.log('applyBefore aspect failed to pass');\n                //log the error and throw new error\n                throw new Error('applyBefore aspect failed to pass');\n            };\n\n            var aspectResult = aspect.apply(null, Array.prototype.concat([error, success, self], args));\n            return aspectResult;\n        };\n    }\n};\n</code></pre>\n\n<p>Full implementation can be found at <a href=\"http://www.jeffjin.net/aop-with-javascript\" rel=\"nofollow\">http://www.jeffjin.net/aop-with-javascript</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Which Javascript AOP library do you use, and what are its key features ?</p>\n",
            "last_activity_date": 1366518023,
            "question_id": 1005486,
            "score": 23,
            "tags": [
                "javascript",
                "aop"
            ],
            "title": "Javascript AOP libraries"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>In theory you'd just have a page call out somewhere that would set a thirdparty cookie and then check for that cookie's existence. However, standard browser security does not allow scripts from domain A to do anything with cookies set on domains B,C,etc... e.g. you can't access \"foreign\" cookies. </p>\n\n<p>If you have some specific usage in mind, such as checking if ads are blocked (which would also block the 3rd party tracking cookie), you could check if the ad server's content is within the page's DOM, but you couldn't see if the cookie's there.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<h1>Technical Background</h1>\n\n<p>The third party sets &amp; reads cookies over HTTP (not in JavaScript).</p>\n\n<p>So we need two requests to an external domain to test if third-party cookies are enabled:</p>\n\n<ol>\n<li>One where the third party sets the cookie(s)</li>\n<li>The second, with a differing response depending on whether the browser sent the cookie(s) back to the same third party in a second request.</li>\n</ol>\n\n<p>We cannot use XMLHTTPRequest (Ajax) because of the DOM security model.</p>\n\n<p>Obviously you can't load both scripts in parallel, or the second request may be made <em>before</em> the first request\u2019s response makes it back, and the test cookie(s) will not have been set.</p>\n\n<h1>Code Example</h1>\n\n<p>Given: </p>\n\n<ol>\n<li><p>The <code>.html</code> file is on one domain, and</p></li>\n<li><p>The <code>.js.php</code> files are on a second domain, we have:</p></li>\n</ol>\n\n<h3>The HTML test page</h3>\n\n<p>Saved as <code>third-party-cookies.html</code></p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head id=\"head\"&gt;\n  &lt;meta charset=utf-8 /&gt;\n  &lt;title&gt;Test if Third-Party Cookies are Enabled&lt;/title&gt;\n&lt;style type=\"text/css\"&gt;\nbody {\n  color: black;\n  background: white none;\n}\n.error {\n  color: #c00;\n}\n.loading {\n  color: #888;\n}\n.hidden {\n  display: none;\n}\n&lt;/style&gt;\n&lt;script type=\"text/javascript\"&gt;\nwindow._3rd_party_test_step1_loaded = function(){\n  // At this point, a third-party domain has now attempted to set a cookie (if all went to plan!)\n  var step2Url = 'http://third-party.example.com/step2.js.php',\n    resultsEl = document.getElementById('3rd_party_cookie_test_results'),\n    step2El = document.createElement('script');\n\n  // Update loading / results message\n  resultsEl.innerHTML = 'Stage one complete, loading stage 2&amp;hellip;';\n  // And load the second part of the test (reading the cookie)\n  step2El.setAttribute('src', step2Url);\n  resultsEl.appendChild(step2El);\n}\nwindow._3rd_party_test_step2_loaded = function(cookieSuccess){\n  var resultsEl = document.getElementById('3rd_party_cookie_test_results'),\n    errorEl = document.getElementById('3rd_party_cookie_test_error');\n  // Show message\n  resultsEl.innerHTML = (cookieSuccess ? 'Third party cookies are &lt;b&gt;functioning&lt;/b&gt; in your browser.' : 'Third party cookies appear to be &lt;b&gt;disabled&lt;/b&gt;.');\n\n  // Done, so remove loading class\n  resultsEl.className = resultsEl.className.replace(/\\bloading\\b/,' ');\n  // And remove error message\n  errorEl.className = 'hidden';\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body id=\"thebody\"&gt;\n\n  &lt;h1&gt;Test if Third-Party Cookies are Enabled&lt;/h1&gt;\n\n  &lt;p id=\"3rd_party_cookie_test_results\" class='loading'&gt;Testing&amp;hellip;&lt;/p&gt;\n  &lt;p id=\"3rd_party_cookie_test_error\" class=\"error hidden\"&gt;(If this message persists, the test could not be completed; we could not reach the third-party to test, or another error occurred.)&lt;/p&gt;\n\n  &lt;script type=\"text/javascript\"&gt;\n  window.setTimeout(function(){\n    var errorEl = document.getElementById('3rd_party_cookie_test_error');\n    if(errorEl.className.match(/\\berror\\b/)) {\n      // Show error message\n      errorEl.className = errorEl.className.replace(/\\bhidden\\b/,' ');\n    } else {\n    }\n  }, 7*1000); // 7 sec timeout\n  &lt;/script&gt;\n  &lt;script type=\"text/javascript\" src=\"http://third-party.example.com/step1.js.php\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<h3>The first third-party JavaScript file</h3>\n\n<p>Saved as <code>step1.js.php</code></p>\n\n<p>This is written in PHP so we can set cookies as the file loads. (It could, of course, be written in any language, or even done in server config files.)</p>\n\n<pre><code>&lt;?php\n  header('Content-Type: application/javascript; charset=UTF-8');\n  // Set test cookie\n  setcookie('third_party_c_t', 'hey there!', time() + 3600*24*2);\n?&gt;\nwindow._3rd_party_test_step1_loaded();\n</code></pre>\n\n<h3>The second third-party JavaScript file</h3>\n\n<p>Saved as <code>step2.js.php</code></p>\n\n<p>This is written in PHP so we can read cookies, server-side, before we respond. We also clear the cookie so the test can be repeated (if you want to mess around with browser settings and re-try).</p>\n\n<pre><code>&lt;?php\n  header('Content-Type: application/javascript; charset=UTF-8');\n  // Read test cookie, if there\n  $cookie_received = (isset($_COOKIE['third_party_c_t']) &amp;&amp; $_COOKIE['third_party_c_t'] == 'hey there!');\n  // And clear it so the user can test it again \n  setcookie('third_party_c_t', '', time() - 3600*24);\n?&gt;\nwindow._3rd_party_test_step2_loaded(&lt;?php echo ($cookie_received ? 'true' : 'false'); ?&gt;);\n</code></pre>\n\n<p>The last line uses the ternary operator to output a literal Javascript <code>true</code> or <code>false</code> depending on whether the test cookie was present.</p>\n\n<h1><a href=\"https://dl.dropbox.com/u/105727/web/3rd/third-party-cookies.html\">Test it here</a>.</h1>\n\n<p>Available for your testing pleasure at <a href=\"https://dl.dropbox.com/u/105727/web/3rd/third-party-cookies.html\">https://dl.dropbox.com/u/105727/web/3rd/third-party-cookies.html</a>.</p>\n\n<p>(As a final note \u2014 <strong>don\u2019t use someone else\u2019s server</strong> to test third-party cookies without their permission. It could break spontaneously, or inject malware. And it\u2019s rude.)</p>\n",
                    "is_accepted": false,
                    "score": 38
                },
                {
                    "body": "<p><a href=\"http://stackoverflow.com/a/7104048/2693875\">Alan's solution</a> is great but you don't have to use PHP, or anything else actually, on the server-side.</p>\n\n<p>At least if you use <strong>nginx</strong>. :)</p>\n\n<p>This is a pure* nginx server-side configuration for Alan's solution:</p>\n\n<h1>Nginx config start</h1>\n\n<pre><code>server {\n    listen 80;\n    server_name third-party.example.com\n\n    # don't allow user's browser to cache these replies\n    expires -1;\n    add_header Cache-Control \"private\";\n    etag off;\n</code></pre>\n\n<h1>The first third-party \"JavaScript file\" - served by nginx</h1>\n\n<pre><code>    location = /step1.js.php {\n        add_header Content-Type 'application/javascript; charset=UTF-8';\n\n        add_header Set-Cookie \"third_party_c_t=hey there!;Max-Age=172800\";\n\n        return 200 'window._3rd_party_test_step1_loaded();';\n    }\n</code></pre>\n\n<h1>The second third-party \"JavaScript file\" - served by nginx</h1>\n\n<pre><code>    location = /step2.js.php {\n        add_header Content-Type 'application/javascript; charset=UTF-8';\n\n        set $test 'false';\n        if ($cookie_third_party_c_t = 'hey there!') {\n            set $test 'true';\n            # clear the cookie\n            add_header Set-Cookie \"third_party_c_t=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\n        }\n\n        return 200 'window._3rd_party_test_step2_loaded($test);';\n    }\n</code></pre>\n\n<h1>Nginx config end</h1>\n\n<pre><code>}\n</code></pre>\n\n<p><br/></p>\n\n<p>Side notes:</p>\n\n<ul>\n<li>Yeah, yeah, I know that <a href=\"http://wiki.nginx.org/IfIsEvil\" rel=\"nofollow\">IfIsEvil</a>,</li>\n<li>I kept the names ending with \".php\" for complete compatibility with Alan's \"The HTML test page\" (<code>third-party-cookies.html</code>),</li>\n<li>You can also move common \"setting the Content-Type header\" line of both locations to the <code>server</code> section (scope) of the config - I have kept it this way for the keep it more \"1:1\" translation.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an application that needs to check whether the client browser has third-party-cookies enabled. Does anyone know how to do this in Javascript?</p>\n",
            "last_activity_date": 1425590285,
            "question_id": 3550790,
            "score": 20,
            "tags": [
                "javascript",
                "cookies",
                "third-party"
            ],
            "title": "Check if third-party cookies are enabled"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You're looking for the <code>setInterval</code> function, which runs a function every <em>x</em> milliseconds.</p>\n\n<p>For example:</p>\n\n<pre><code>var start = new Date;\n\nsetInterval(function() {\n    $('.Timer').text((new Date - start) / 1000 + \" Seconds\");\n}, 1000);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 48
                },
                {
                    "body": "<p>setInterval as suggested by SLaks was exactly what I needed to make my timer. (Thanks mate!)</p>\n\n<p>Using setInterval and <a href=\"http://www.elated.com/articles/creating-a-javascript-clock/\">this great blog post</a> I ended up creating the following function to display a timer inside my \"box_header\" div. I hope this helps anyone else with similar requirements!</p>\n\n<pre><code> function get_elapsed_time_string(total_seconds) {\n  function pretty_time_string(num) {\n    return ( num &lt; 10 ? \"0\" : \"\" ) + num;\n  }\n\n  var hours = Math.floor(total_seconds / 3600);\n  total_seconds = total_seconds % 3600;\n\n  var minutes = Math.floor(total_seconds / 60);\n  total_seconds = total_seconds % 60;\n\n  var seconds = Math.floor(total_seconds);\n\n  // Pad the minutes and seconds with leading zeros, if required\n  hours = pretty_time_string(hours);\n  minutes = pretty_time_string(minutes);\n  seconds = pretty_time_string(seconds);\n\n  // Compose the string for display\n  var currentTimeString = hours + \":\" + minutes + \":\" + seconds;\n\n  return currentTimeString;\n}\n\nvar elapsed_seconds = 0;\nsetInterval(function() {\n  elapsed_seconds = elapsed_seconds + 1;\n  $('#box_header').text(get_elapsed_time_string(elapsed_seconds));\n}, 1000);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>How about the best of both worlds? I combined the answer with the OP's format.</p>\n\n<pre><code>function pretty_time_string(num) {\n    return ( num &lt; 10 ? \"0\" : \"\" ) + num;\n  }\n\nvar start = new Date;    \n\nsetInterval(function() {\n  var total_seconds = (new Date - start) / 1000;   \n\n  var hours = Math.floor(total_seconds / 3600);\n  total_seconds = total_seconds % 3600;\n\n  var minutes = Math.floor(total_seconds / 60);\n  total_seconds = total_seconds % 60;\n\n  var seconds = Math.floor(total_seconds);\n\n  hours = pretty_time_string(hours);\n  minutes = pretty_time_string(minutes);\n  seconds = pretty_time_string(seconds);\n\n  var currentTimeString = hours + \":\" + minutes + \":\" + seconds;\n\n  $('.timer').text(currentTimeString);\n}, 1000);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>var eventdate = new Date(\"January 01, 2014 00:00:00\");\n\nfunction toSt(n) {\n s=\"\"\n if(n&lt;10) s+=\"0\"\n return s+n.toString();\n}\n\nfunction countdown() {\n cl=document.clock;\n d=new Date();\n count=Math.floor((eventdate.getTime()-d.getTime())/1000);\n if(count&lt;=0)\n   {cl.days.value =\"----\";\n    cl.hours.value=\"--\";\n    cl.mins.value=\"--\";\n    cl.secs.value=\"--\";\n    return;\n  }\n cl.secs.value=toSt(count%60);\n count=Math.floor(count/60);\n cl.mins.value=toSt(count%60);\n count=Math.floor(count/60);\n cl.hours.value=toSt(count%24);\n count=Math.floor(count/24);\n cl.days.value=count;    \n\n setTimeout(\"countdown()\",500);\n}\n</code></pre>\n\n<p>Hello, I've a similar assignment which involved creating a Javascript Countdown Clock. Here's the code I used. Plug the above code between the &lt; script language=\"Javascript\" >&lt; /script > tags. Keep in mind that just having this javascript won't do much if you don't have the html to display the clock. I'll leave writing the html to you. Design the clock however you wish. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>################## JQuery (use API) #################   \n $(document).ready(function(){\n         function getdate(){\n                var today = new Date();\n            var h = today.getHours();\n            var m = today.getMinutes();\n            var s = today.getSeconds();\n             if(s&lt;10){\n                 s = \"0\"+s;\n             }\n\n            $(\"h1\").text(h+\" : \"+m+\" : \"+s);\n             setTimeout(function(){getdate()}, 500);\n            }\n\n        $(\"button\").click(getdate);\n    });\n\n################## HTML ###################\n&lt;button&gt;start clock&lt;/button&gt;\n&lt;h1&gt;&lt;/h1&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have a simple quiz application and I want display a nice timer / clock at the top of the page which shows the user how long they've been going for. (If I could somehow show them a timer for Total Quiz Time and also a second one for This Question Time that would be even cooler but I should be able to figure out how to do myself that once I've got one timer working.</p>\n\n<p>My question is:</p>\n\n<p><strong>What's a nice, easy way to show a simple timer / clock using JQuery? (straight JS is also ok) I know how to check time, but how do I get incrementing seconds?</strong></p>\n\n<p>My own searches keep leading me to JQuery plugins (I want to roll my own) and also \"event timers\" which are not what I'm looking for...</p>\n",
            "last_activity_date": 1384359616,
            "question_id": 2604450,
            "score": 20,
            "tags": [
                "javascript",
                "jquery",
                "timer",
                "clock"
            ],
            "title": "How to create a JQuery Clock / Timer"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Being a lazy person at heart, I would put an element to the very bottom of the DIV, and apply the \"<a href=\"http://remysharp.com/2009/01/26/element-in-view-event-plugin/\">element in view</a>\" jQuery plugin on it. (Disclaimer: I have no own experience with it but it looks good.)</p>\n\n<p>A slight variation of the example from the blog entry:</p>\n\n<pre><code>$('#bottomDIV').bind('inview', function (event, visible) {\n  if (visible == true) {\n    // element is now visible in the viewport\n    highlightButtons(); // or whatever you want to do in the context\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>when <code>window.innerHeight</code> + <code>document.body.scrollTop</code> is greater than or equal to <code>document.body.offsetHeight</code> then you are at bottom</p>\n\n<p>but since IE has issues with these properties you need to use alternative properties, like</p>\n\n<p><code>document.documentElement.scrollTop</code> for the scroll and <code>document.documentElement.clientHeight</code> for the window height</p>\n\n<p>full code: <a href=\"http://jsbin.com/egegu3/6/edit\">http://jsbin.com/egegu3/6/edit</a></p>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p>I'm trying to determine when I've scrolled to the bottom of the page (without using any JS library), but so far, I'm a bit confused over which one of the following to use.  The most promising one I've seen is <code>window.scrollY</code>, but even when scrolled to the bottom of the page, it never matches the value of <code>window.innerHeight</code>.  What's the best way to do this?</p>\n\n<pre><code>window.innerWidth\nwindow.innerHeight\n\nwindow.outerWidth\nwindow.outerHeight\n\nwindow.scrollX\nwindow.scrollY\n\ndocument.body.scrollWidth\ndocument.body.scrollHeight\ndocument.body.scrollTop\ndocument.body.scrollLeft\n\ndocument.body.offsetTop\ndocument.body.offsetLeft\ndocument.body.offsetWidth\ndocument.body.offsetHeight\n</code></pre>\n",
            "last_activity_date": 1342472059,
            "question_id": 2817042,
            "score": 16,
            "tags": [
                "javascript",
                "pagination"
            ],
            "title": "Determining when scrolled to bottom of a page with Javascript"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<pre><code>window.location.href = 'URL';\n</code></pre>\n\n<p>is the standard implementation for changing the current window's location.</p>\n",
                    "is_accepted": true,
                    "score": 130
                },
                {
                    "body": "<p>There really isn't a difference; there are about 5 different methods of doing it. However, the ones I see most often are <code>document.location</code> and <code>window.location</code> because they're supported by all major browsers. (I've personally never seen <code>window.navigate</code> used in production code, so maybe it doesn't have very good support?)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'd go with <code>window.location = \"http://...\";</code>. I've been coding cross-browser JavaScript for a few years, and I've never experienced problems using this approach.</p>\n\n<p><code>window.navigate</code> and <code>window.location.href</code> seems a bit odd to me.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>document.location is a (deprecated but still present) read-only string property, replaced by document.url.</p>\n\n<p>location='url path' is the simplest expression to open a new page in the same window. </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>window.location will affect to your browser target.\ndocument.location will only affect to your browser and frame/iframe.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><code>window.location</code> also affects to the frame, </p>\n\n<p>the best form i found is:</p>\n\n<pre><code>parent.window.location.href\n</code></pre>\n\n<p>And the worse is:</p>\n\n<pre><code>parent.document.URL \n</code></pre>\n\n<p>I did a massive browser test, and some rare IE with several plugins get undefined with the second form.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>window.navigate is NOT supported in some browsers, so that one should be avoided. Any of the other methods using the location property are the most reliable and consistent approach</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>support for document.location is also good though its a deprecated method.\nI've been using this method for a while with no problems.\nyou can refer here for more details:</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/document.location\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/document.location</a> </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What's the preferred method to use to change the location of the current web page using JavaScript? I've seen both window.navigate and document.location used. Are there any differences in behavior? Are there differences in browser implementations? </p>\n",
            "last_activity_date": 1388686713,
            "question_id": 948227,
            "score": 111,
            "tags": [
                "javascript",
                "html",
                "navigation"
            ],
            "title": "Should I use window.navigate or document.location in JavaScript?"
        },
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p>seems to be a bug in safari / webkit. maybe <a href=\"https://bugs.webkit.org/show%5Fbug.cgi?id=22994\" rel=\"nofollow\">this one</a>, or <a href=\"https://bugs.webkit.org/buglist.cgi?query%5Fformat=specific&amp;order=relevance%2Bdesc&amp;bug%5Fstatus=%5F%5Fopen%5F%5F&amp;product=WebKit&amp;content=Resource%2Binterpreted%2Bas%2Bother\" rel=\"nofollow\">any of these</a>. try upgrading your safari. if there is no more recent stable version, try the 4 beta.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>You need to use a tool to view the HTTP headers sent with the file, something like <a href=\"https://addons.mozilla.org/en-US/firefox/addon/3829\" rel=\"nofollow\">LiveHTTPHeaders</a> or <a href=\"https://addons.mozilla.org/en-US/firefox/addon/6647\" rel=\"nofollow\">HTTPFox</a> are what I use. If the files are sent from the webserver without a MIME type, or with a default MIME type like text/plain, that might be what this error is about.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>It is because of the period in the file name. It is stupid, but anytime there is a period in the js file name you will get this error, and I have come across situations where it will actually prevent the js file from loading.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This warning appears because no default script type is specified.  Try adding the following directive to your HTML file:</p>\n\n<p><code>&lt;meta http-equiv=\"content-script-type\" content=\"text/javascript\"&gt;</code></p>\n\n<p>You can read more about default scripting specifications here:\n<a href=\"http://www.w3.org/TR/REC-html40/interact/scripts.html#h-18.2.2.1\" rel=\"nofollow\">http://www.w3.org/TR/REC-html40/interact/scripts.html#h-18.2.2.1</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I had the same issue with a css file instead of javascript.  (using the xitami webserver)</p>\n\n<p>what fixed for me was adding under the MIME section of xitami.cfg:</p>\n\n<p>css=text/css</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It seems like a bug in Safari's cache handling policies.</p>\n\n<p>Workaround in apache:</p>\n\n<pre><code>Header unset ETag\nHeader unset Last-Modified\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I don't think it is a bug,\nTry adding the MIME type to your .htaccess file\nFor instance, put or add the following content to your .htaccess file (which should be in the same place of your .js or above folders)</p>\n\n<pre><code>#JavaScript\nAddType application/x-javascript .js\n</code></pre>\n\n<p>This solved my tree \"Resource interpreted as other but transfered ... \" warnings. \nEverytime you have that kind of warning it means you don't have enough info in your .htaccess file. </p>\n\n<p><strike>BTW1: Since you are modifying .htaccess file, make sure you restart your server.</strike></p>\n\n<p>BTW2: I also could clear same warnings for GIF files in Safari 4 with this:</p>\n\n<pre><code>#GIF\nAddType image/gif .gif\n</code></pre>\n\n<p>BTW3: For other file types: see <a href=\"http://www.w3schools.com/media/media_mimeref.asp\" rel=\"nofollow\">w3schools list</a> or <a href=\"http://www.htaccess-guide.com/adding-mime-types/\" rel=\"nofollow\">htaccess-guide</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I found out that the naming of my css files was in conflict with the proxy filters</p>\n\n<p>www.dating.com (which is not my site) was blocked and my css and js files were called dating.css and dating.js. The filter was blocking this. Maybe that is the case with some of you, working on corporates systems.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>An image with an empty \"src\" attribute generates this error under Windows-Chrome:</p>\n\n<pre><code>&lt;img src=\"\"&gt;\n</code></pre>\n\n<p>... whereas ...</p>\n\n<pre><code>&lt;img&gt;\n</code></pre>\n\n<p>... does not.</p>\n\n<p>I arrived here because my ajax resultset was returning \"src\" data which was empty yet the img was still being inserted into the page. </p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>I just got this and solved it locally on my mac. For some reason the javascript file in question had bad permissions. I noticed when I looked at it in firebug I was getting a 403. I hope that helps anyone.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This bug seem to have resurfaced (Noticed it November 2010)</p>\n\n<p>I think the WebKit bug reports involved are <a href=\"https://bugs.webkit.org/show_bug.cgi?id=26572\" rel=\"nofollow\">this one</a> and <a href=\"https://bugs.webkit.org/show_bug.cgi?id=46968\" rel=\"nofollow\">this</a>. Essentially it boils down to incorrect cache handling when doing an <code>If-Modified-Since</code> which get a <code>304</code> response.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Another common cause of this error on the Mac is Apple's quarantine flag.</p>\n\n<p><code>ls</code> the directory containing the resource(s) in question. If you see the extended attribute indicator, i.e., the little <code>@</code> symbol at the end of the permissions block (e.g. <code>-rw-r--r--@</code> ) then the file could be quarantined.</p>\n\n<p>Try <code>ls -la@e</code> and look for <code>com.apple.quarantine</code> </p>\n\n<p>The following command will remove the quarantine:</p>\n\n<pre><code>xattr -d com.apple.quarantine /path/to/file\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There seem to be many things that cause this.  For me it was a lowercase rewrite rule in IIS.  Changed the problem files (js and png) to lowercase and problem went away.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Solved!</p>\n\n<p>I have had this error for several days. It was driving me crazy because it didnt allow me to use firefox firebug's script debugger. Finally, my error was solved when I removed an <strong>empty url in a  \"background-image: url()\" style property</strong>.</p>\n\n<p>This has been so much a pain than I really hope somebody can use this advice.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p><strong>On APACHE</strong></p>\n\n<p>Append these MIME types to .htaccess in your root. I recommend the second line, as it may help prevent any future potential MIME interpretation warnings with CSS files.</p>\n\n<pre><code>AddType application/x-javascript .js\nAddType text/css .css    \n</code></pre>\n\n<p>Restart Your Apache...</p>\n\n<p><strong>On NGINX</strong></p>\n\n<p>Add to your nginx.conf or your mime.types import file (Recommended Method). Add any or all as needed/relevant.</p>\n\n<pre><code>types {\n    text/html                             html htm shtml;\n    text/css                              css;\n    text/xml                              xml;\n    image/gif                             gif;\n    image/jpeg                            jpeg jpg;\n    application/x-javascript              js;\n    application/rss+xml                   rss;\n    text/plain                            txt;\n    image/png                             png;\n    image/tiff                            tif tiff;\n    image/svg+xml                         svg svgz;\n    image/webp                            webp;\n    application/postscript                ps eps ai;\n    application/pdf                       pdf;\n    application/rtf                       rtf;\n    application/vnd.ms-excel              xls;\n    application/vnd.ms-powerpoint         ppt;\n    application/msword                    doc;\n    application/x-shockwave-flash         swf;\n    application/xhtml+xml                 xhtml;\n    application/zip                       zip;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>OK, I understand what the messages <em>means</em>, but I'm really not sure what's causing it. I'm using Safari and the Web Inspector on Mac OS X, by the way.</p>\n\n<p>I've got the following in my document head:</p>\n\n<pre><code>&lt;script src=\"http://local.url/a/js/jquery.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"http://local.url/a/js/jquery.inplace.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p><code>jquery.js</code> is handled fine, but the other file causes the warning. It also seems that the javascript in this file never gets executed.</p>\n\n<p>The file is being served via <code>mod_deflate</code>, so it is gzip encoded, but so is the other file.</p>\n\n<p>Has anybody got any ideas what's causing this, or how to resolve it?</p>\n\n<p>Cheers all,\nGaz.</p>\n",
            "last_activity_date": 1351862530,
            "question_id": 658238,
            "score": 57,
            "tags": [
                "javascript",
                "apache",
                "safari",
                "mime-types"
            ],
            "title": "Debug message &quot;Resource interpreted as other but transferred with MIME type application/javascript&quot;"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<pre><code>$('form').keyup(function(e) {\n  return e.which !== 13  \n});\n</code></pre>\n\n<blockquote>\n  <p>The <strong>event.which</strong> property normalizes event.keyCode and event.charCode. It is recommended to watch event.which for keyboard key input.</p>\n</blockquote>\n\n<p><a href=\"http://api.jquery.com/event.which/\"><code>which</code> docs.</a></p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>If <code>keyCode</code> is not caught, catch <code>which</code>:</p>\n\n<pre><code>$('#formid').on(\"keyup keypress\", function(e) {\n  var code = e.keyCode || e.which; \n  if (code  == 13) {               \n    e.preventDefault();\n    return false;\n  }\n});\n</code></pre>\n\n<p>EDIT: missed it, it's better to use <code>keyup</code> instead of <code>keypress</code></p>\n\n<p>EDIT 2: As in some newer versions of Firefox the form submission is not prevented, it's safer to add the keypress event to the form as well. Also it doesn't work (anymore?) by just binding the event to the form \"name\" but only to the form id. Therefore I made this more obvious by changing the code example appropriately.</p>\n\n<p>EDIT 3: Changed <code>bind()</code> to <code>on()</code></p>\n",
                    "is_accepted": true,
                    "score": 106
                },
                {
                    "body": "<p>Usually form is submitted on <kbd>Enter</kbd> when you have focus on input elements.</p>\n\n<p>We can disable <kbd>Enter</kbd> press on input elements within a form:</p>\n\n<pre><code>$(\"form :input\").on(\"keypress\", function(e) {\n    return e.keyCode != 13;\n});\u200b\n</code></pre>\n\n<p><strong>DEMO:</strong> <a href=\"http://jsfiddle.net/bnx96/\">http://jsfiddle.net/bnx96/</a></p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Even shorter:</p>\n\n<pre><code>$('myform').submit(function() {\n  return false;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>How about this:</p>\n\n<pre><code>$(\":submit\").closest(\"form\").submit(function(){\n    $(':submit').attr('disabled', 'disabled');\n});\n</code></pre>\n\n<p>This should disable all forms with submit buttons in your app.</p>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>The following code will negate the enter key from being used to submit a form, but will still allow you to use the enter key in a textarea. You can edit it further depending on your needs.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n        function stopRKey(evt) {\n          var evt = (evt) ? evt : ((event) ? event : null);\n          var node = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null);\n          if ((evt.keyCode == 13) &amp;&amp; ((node.type==\"text\") || (node.type==\"radio\") || (node.type==\"checkbox\")) )  {return false;}\n        }\n\n        document.onkeypress = stopRKey;\n&lt;/script&gt; \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>if you just want to disable submit on enter and submit button too use form's onsubmit event</p>\n\n<pre><code>&lt;form onsubmit=\"return false;\"&gt;\n</code></pre>\n\n<p>You can replace \"return false\" with call to JS function that will do whatever needed and also submit the form as a last step.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>$(document).on('keyup keypress', 'form input[type=\"text\"]', function(e) {\n  if(e.which == 13) {\n    e.preventDefault();\n    return false;\n  }\n});\n</code></pre>\n\n<p>This solution works on all forms on website (also on forms inserted with ajax), preventing only Enters in input texts. Place it in a document ready function, and forget this problem for a life.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I don't know if you already resolve this problem, or anyone trying to solve this right now but, here is my solution for this!</p>\n\n<pre><code>$j(':input:not(textarea)').keydown(function(event){\n    var kc = event.witch || event.keyCode;\n    if(kc == 13){\n    event.preventDefault();\n        $j(this).closest('form').attr('data-oldaction', function(){\n            return $(this).attr('action');\n        }).attr('action', 'javascript:;');\n\n        alert('some_text_if_you_want');\n\n        $j(this).closest('form').attr('action', function(){\n            return $(this).attr('data-oldaction');\n        });\n        return false;\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In firefox, when you at input and press enter, it will submit it's upper form. The solution is in the will submit form add this:</p>\n\n<pre><code>&lt;input type=\"submit\" onclick=\"return false;\" style=\"display:none\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The overkill of having to capture and test every keystroke for the ENTER key really bugs me, so my solution relies on the following browser behavior: </p>\n\n<p><strong>Pressing ENTER will trigger a <em>click</em> event on the submit button (tested in IE11, Chrome 38, FF 31)</strong> \n(ref: <a href=\"http://mattsnider.com/how-forms-submit-when-pressing-enter/\" rel=\"nofollow\">http://mattsnider.com/how-forms-submit-when-pressing-enter/</a> )</p>\n\n<p>(NB: the above is not true if the form's only input field is a 'text' input; in this case the form will be submitted upon ENTER key even if no submit button is present e.g. search boxes)</p>\n\n<p>So my solution is to remove the submit button completely and use a click handler to submit the form. </p>\n\n<pre><code>&lt;form id=\"myform\" method=\"post\"&gt;\n  &lt;input name=\"fav_color\" type=\"text\"&gt;\n  &lt;input name=\"fav_color2\" type=\"text\"&gt;\n&lt;button type=\"button\" id=\"form-button-submit\"&gt;DO IT!&lt;/button&gt;\n&lt;/form&gt;\n\n&lt;script&gt;\n $('#form-button-submit').click(function(){\n    $('#myform').submit();\n  });\n&lt;/script&gt;\n</code></pre>\n\n<p>Demo: <a href=\"http://codepen.io/anon/pen/fxeyv?editors=101\" rel=\"nofollow\">http://codepen.io/anon/pen/fxeyv?editors=101</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have the following javascript in my page which does not seem to be working.</p>\n\n<pre><code>$('form').bind(\"keypress\", function(e) {\n  if (e.keyCode == 13) {               \n    e.preventDefault();\n    return false;\n  }\n});\n</code></pre>\n\n<p>I'd like to disable submitting the form on enter, or better yet, to call my ajax form submit.  Either solution is acceptable but the code I'm including above does not prevent the form from submitting.</p>\n",
            "last_activity_date": 1416453598,
            "question_id": 11235622,
            "score": 54,
            "tags": [
                "javascript",
                "jquery",
                "forms",
                "form-submit"
            ],
            "title": "jquery disable form submit on enter"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You have to store the <em>timer id</em> of the interval when you start it, you will use this value later to stop it, using the <a href=\"https://developer.mozilla.org/en/window.clearInterval\"><code>clearInterval</code></a> function:</p>\n\n<pre><code>$(function () {\n  var timerId = 0;\n\n  $('textarea').focus(function () {\n    timerId = setInterval(function () {\n      // interval function body\n    }, 1000);\n  });\n\n  $('textarea').blur(function () {\n    clearInterval(timerId);\n  });\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 87
                },
                {
                    "body": "<p>Store the return of <code>setInterval</code> in a variable, and use it later to clear the interval.</p>\n\n<pre><code>var timer = null;\n$(\"textarea\").blur(function(){\n    timer = window.setInterval(function(){ ... whatever ... }, 2000);\n}).focus(function(){\n    if(timer){\n       window.clearInterval(timer);\n       timer = null\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>setInterval returns an id that you can use to cancel the interval with clearInterval()</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This is based on CMS's answer. The question asked for the timer to be restarted on the blur and stopped on the focus, so I moved it around a little:</p>\n\n<pre><code>$(function () {\n  var timerId = 0;\n\n  $('textarea').focus(function () {\n    clearInterval(timerId);\n  });\n\n  $('textarea').blur(function () {\n    timerId = setInterval(function () {\n     //some code here \n    }, 1000);\n  });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>How do I stop and start <code>setInterval</code>?</p>\n\n<p>Suppose I have a <code>textarea</code>.  I want to stop <code>setInterval</code> on focus and restart <code>setInterval</code> on blur (with jQuery).</p>\n",
            "last_activity_date": 1341079984,
            "question_id": 1831152,
            "score": 48,
            "tags": [
                "javascript",
                "jquery",
                "setinterval"
            ],
            "title": "how to stop &quot;setInterval&quot;"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The <code>attributes</code> property contains them all:</p>\n\n<pre><code>$(this).each(function() {\n  $.each(this.attributes, function() {\n    // this.attributes is not a plain object, but an array\n    // of attribute nodes, which contain both the name and value\n    if(this.specified) {\n      console.log(this.name, this.value);\n    }\n  });\n});\n</code></pre>\n\n<hr>\n\n<p>What you can also do is extending <code>.attr</code> so that you can call it like <code>.attr()</code> to get a plain object of all attributes:</p>\n\n<pre><code>(function(old) {\n  $.fn.attr = function() {\n    if(arguments.length === 0) {\n      if(this.length === 0) {\n        return null;\n      }\n\n      var obj = {};\n      $.each(this[0].attributes, function() {\n        if(this.specified) {\n          obj[this.name] = this.value;\n        }\n      });\n      return obj;\n    }\n\n    return old.apply(this, arguments);\n  };\n})($.fn.attr);\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>var $div = $(\"&lt;div data-a='1' id='b'&gt;\");\n$div.attr();  // { \"data-a\": \"1\", \"id\": \"b\" }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 88
                },
                {
                    "body": "<p>with LoDash you could simply do this:</p>\n\n<pre><code>_.transform(this.attributes, function (result, item) {\n  item.specified &amp;&amp; (result[item.name] = item.value);\n}, {});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am trying to go through an element and get all the attributes of that element to output them, for example an  tag may have 3 or more attributes, unknown to me and I need to get the names and values of these attributes. I was thinking something along the lines of:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>$(this).attr().each(function(index, element) {\n    var name = $(this).name;\n    var value = $(this).value;\n    //Do something with name and value...\n});\n</code></pre>\n\n<p>Could anyone tell me if this is even possible, and if so what the correct syntax would be?</p>\n",
            "last_activity_date": 1411317963,
            "question_id": 14645806,
            "score": 39,
            "tags": [
                "javascript",
                "jquery",
                "attributes"
            ],
            "title": "Get all attributes of an element using jQuery"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Specify an anonymous callback, and make function1 accept it:</p>\n\n<pre><code>$('a.button').click(function(){\n    if (condition == 'true'){\n        function1(someVariable, function() {\n          function2(someOtherVariable);\n        });\n    }\n    else {\n        doThis(someVariable);\n    }\n});\n\n\nfunction function1(param, callback) {\n  ...do stuff\n  callback();\n} \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 49
                },
                {
                    "body": "<p>This depends on what function1 is doing.</p>\n\n<p>If function1 is doing some simple synchrounous javascript, like updating a div value or something, then function2 will fire after function1 has completed.</p>\n\n<p>If function1 is making an asynchronous call, such as an AJAX call, you will need to create a \"callback\" method (most ajax API's have a callback function parameter). Then call function2 in the callback. eg:</p>\n\n<pre><code>function1()\n{\n  new AjaxCall(ajaxOptions, MyCallback);\n}\n\nfunction MyCallback(result)\n{\n  function2(result);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you're using jQuery 1.5 you can use the new Deferreds pattern:</p>\n\n<pre><code>$('a.button').click(function(){\n    if(condition == 'true'){\n        $.when(function1()).then(function2());\n    }\n    else {\n        doThis(someVariable);\n    }\n});\n</code></pre>\n\n<p><strong>Edit: Updated blog link:</strong></p>\n\n<p>Rebecca Murphy had a great write-up on this here: <a href=\"http://rmurphey.com/blog/2010/12/25/deferreds-coming-to-jquery/\">http://rmurphey.com/blog/2010/12/25/deferreds-coming-to-jquery/</a></p>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>Or you can trigger a custom event when one function completes, then bind it to the document:</p>\n\n<pre><code>function a() {\n    // first function code here\n    $(document).trigger('function_a_complete');\n}\n\nfunction b() {\n    // second function code here\n}\n\n$(document).bind('function_a_complete', b);\n</code></pre>\n\n<p>Using this method, function 'b' can only execute AFTER function 'a', as the trigger only exists when function a is finished executing.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Try this :</p>\n\n<pre><code>function method1(){\n   // some code\n\n}\n\nfunction method2(){\n   // some code\n}\n\n$.ajax({\n   url:method1(),\n   success:function(){\n   method2();\n}\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code> function clickin(){\n    if (condition == 'true'){\n        function firstFun(someVariable);\n    }\n    else {\n        doThis(someVariable);\n    }\n }\n\n$(document).ready(function(e){\n $('a.button').click(clickin);\n});\n\n$(window).load(function secondFun(){\n //after DOM is ready in firstFun Execute what written here secondFun\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>Ok, it's 1 a.m., I suck at coding javascript, and I can't seem to find a clear solution anywhere.</p>\n\n<p>This is essentially what I have:</p>\n\n<pre><code>$('a.button').click(function(){\n    if (condition == 'true'){\n        function1(someVariable);\n        function2(someOtherVariable);\n    }\n    else {\n        doThis(someVariable);\n    }\n});\n</code></pre>\n\n<p>How can I ensure that \"function2\" is called only after \"function1\" has completed?</p>\n",
            "last_activity_date": 1423442784,
            "question_id": 5000415,
            "score": 33,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Javascript/Jquery : Call a Function after Previous Function is Complete"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>I think you're misinterpreting the <a href=\"http://www.w3schools.com/css/pr_dim_min-width.asp\" rel=\"nofollow\">min-width CSS property</a>. min-width is generally used to define a minimum DOM width in a fluid layout, like:</p>\n\n<pre><code>input {\n  width: 30%;\n  min-width: 200px;\n}\n</code></pre>\n\n<p>That would set the input element to a minimum width of 200 pixels. In this context, \"px\" stands for \"pixels\".</p>\n\n<p>Now, if you're trying to check to make sure that input field contains at least one <em>character</em> when a user submits it, you'll need to do some form validation with JavaScript and PHP. If that is indeed what you're attempting to do, I'll edit this answer and do my best to help you out.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could do something like <a href=\"http://jsbin.com/onako4/3/\">this</a></p>\n\n<pre><code>// HTML\n&lt;input id=\"input\" type=\"text\" style=\"width:3px\" /&gt;\n// jQuery\n$(function(){\n  $('#input').keyup(function(){\n    $('&lt;span id=\"width\"&gt;').append( $(this).val() ).appendTo('body');\n    $(this).width( $('#width').width() + 2 );\n    $('#width').remove();\n  });\n});\n</code></pre>\n\n<p>\u200b</p>\n\n<p>\u200b</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>It sounds like your expectation is that the style be applied dynamically to the width of the textbox based on the contents of the textbox.  If so you will need some js to run on textbox contents changing, something like this:</p>\n\n<pre><code>&lt;input id=\"txt\" type=\"text\" onkeypress=\"this.style.width = ((this.value.length + 1) * 8) + 'px';\"&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>To calculate the width of the current input, you'll have to embed it in a temporary <code>span</code> element, attach that thing to the DOM, get the computed width (in pixels) using the <code>scrollWidth</code> property and remove the <code>span</code> again. Of course you'll have to ensure that the same font family, font size, etc., is used in the <code>input</code> as well as in the <code>span</code> element. Therefore I assigned the same class to them.</p>\n\n<p>I attached the function to the <code>keyup</code> event, as on <code>keypress</code> the input character is not yet added to the input <code>value</code>, so that will result in the wrong width. Unfortunately, I don't know how to get rid of the scrolling of the input field (when adding characters to the end of the field); it scrolls, because the character is added and shown before <code>adjustWidthOfInput()</code> is called. And, as said, I can't do this the other way round because then you'll have the value of the input field <em>before</em> the pressed character is inserted. I'll try to solve this issue later.</p>\n\n<p>BTW, I only tested this in Firefox (3.6.8), but you'll get the point, I hope.</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;title&gt;Get/set width of &amp;lt;input&amp;gt;&lt;/title&gt;\n    &lt;style&gt;\n      body {\n        background: #666;\n      }\n\n      .input-element {\n        border: 0;\n        padding: 2px;\n        background: #fff;\n        font: 12pt sans-serif;\n      }\n\n      .tmp-element {\n        visibility: hidden;\n        white-space: pre;\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;input id=\"theInput\" type=\"text\" class=\"input-element\" value=\"1\"&gt;\n    &lt;script&gt;\n      var inputEl = document.getElementById(\"theInput\");\n\n      function getWidthOfInput() {\n        var tmp = document.createElement(\"span\");\n        tmp.className = \"input-element tmp-element\";\n        tmp.innerHTML = inputEl.value.replace(/&amp;/g,'&amp;amp;').replace(/&lt;/g,'&amp;lt;').replace(/&gt;/g,'&amp;gt;');\n        document.body.appendChild(tmp);\n        var theWidth = tmp.getBoundingClientRect().width;\n        document.body.removeChild(tmp);\n        return theWidth;\n      }\n\n      function adjustWidthOfInput() {\n        inputEl.style.width = getWidthOfInput() + \"px\";\n      }\n\n      adjustWidthOfInput();\n      inputEl.onkeyup = adjustWidthOfInput;\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p><strong>FOR A NICER LOOK&amp;FEEL</strong></p>\n\n<p>You should use jQuery keypress() event in combination with String.fromCharCode(e.which) to get the pressed character. Hence you can calculate what your width <em>will be</em>. Why? Because it will look a lot more sexy :)</p>\n\n<p>Here is a jsfiddle that results in a nice behaviour compared to solutions using the keyup event : <a href=\"http://jsfiddle.net/G4FKW/3/\" rel=\"nofollow\">http://jsfiddle.net/G4FKW/3/</a></p>\n\n<p>Basic html.</p>\n\n<pre><code>&lt;input type=\"text\" /&gt;\n&lt;span style=\"display:none\"&gt;&lt;/span&gt;\n</code></pre>\n\n<p>The jQuery.</p>\n\n<pre><code>$('input[type=\"text\"]').keypress(function(e) {\n    if (e.which !== 0 &amp;&amp; e.charCode !== 0) { // only characters\n        var c = String.fromCharCode(e.keyCode|e.charCode);\n        $span = $(this).siblings('span').first();\n        $span.text($(this).val() + c) ; // the hidden span takes \n                                        // the value of the input\n        $inputSize = $span.width() ; \n        $(this).css(\"width\", $inputSize) ; // apply width of the span to the input\n     }\n\n}) ;\n</code></pre>\n\n<p>The css.</p>\n\n<pre><code>input, span {\n    padding:0;\n    font-size:9px;\n    font-family:Sans-serif;\n    white-space:pre; // white-spaces will work effectively\n}\n/* it's important the input and its span have same styling */\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>sorry to join so late to this party. </p>\n\n<p>I just want to note a simpler solution for the calculation of the width - assuming you don't mind styling the input field with monospace font family. </p>\n\n<p>Tahbaza's solution will work with monospace font family. </p>\n\n<p>Even though the \"invisible span\" solution is definitely the most precise solution even with monospace, I consider it an overkill. </p>\n\n<p><a href=\"http://plnkr.co/edit/wQthYZWru2YpvU4DGL0e?p=preview\" rel=\"nofollow\">Here is a nice angularjs directive that implements it.</a> </p>\n\n<p>Note that you should always add \"1\" character to the actual value - otherwise you will get annoying ticks. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can do it even simpler in angularjs using the built-in <a href=\"http://docs.angularjs.org/api/ng.directive%3angStyle\" rel=\"nofollow\">ng-style</a> directive.</p>\n\n<p>In your html:</p>\n\n<pre><code>  &lt;input ng-style=\"inputStyle(testdata)\" ng-model=\"testdata\" /&gt;\n</code></pre>\n\n<p>In your controller:</p>\n\n<pre><code> $scope.testdata = \"whatever\";\n\n $scope.inputStyle = function(str) {\n    var charWidth = 7;\n    return  {\"width\": (str.length +1) * charWidth + \"px\" };\n    };\n</code></pre>\n\n<p>In your css:</p>\n\n<pre><code>input { font-family:monospace; font-size:12px; }\n</code></pre>\n\n<p>Adjust the charWidth to match the width of your font. It seems to be 7 at a font-size of 12px;</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can set an input's width using the <em>size</em> attribute as well.  The size of an input determines it's width in characters.</p>\n\n<p>An input could dynamically adjust it's size by listening for key events.</p>\n\n<p>For example</p>\n\n<pre><code>$(\"input[type='text']\").bind('keyup', function () {\n    $(this).attr(\"size\", $(this).val().length );\n});\n</code></pre>\n\n<p>JsFiddle <a href=\"http://jsfiddle.net/MVpw4/\" rel=\"nofollow\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here's a modification of Lyth's answer that takes into account:</p>\n\n<ul>\n<li>Deletion </li>\n<li>Initialisation</li>\n<li>Placeholders</li>\n</ul>\n\n<p>It also allows for any number of input fields! To see it in action: <a href=\"http://jsfiddle.net/4Qsa8/\" rel=\"nofollow\">http://jsfiddle.net/4Qsa8/</a></p>\n\n<p>Script:</p>\n\n<pre><code>$(document).ready(function () {\n    var $inputs = $('.resizing-input');\n\n    // Resize based on text if text.length &gt; 0\n    // Otherwise resize based on the placeholder\n    function resizeForText(text) {\n        var $this = $(this);\n        if (!text.trim()) {\n            text = $this.attr('placeholder').trim();\n        }\n        var $span = $this.parent().find('span');\n        $span.text(text);\n        var $inputSize = $span.width();\n        $this.css(\"width\", $inputSize);\n    }\n\n    $inputs.find('input').keypress(function (e) {\n        if (e.which &amp;&amp; e.charCode) {\n            var c = String.fromCharCode(e.keyCode | e.charCode);\n            var $this = $(this);\n            resizeForText.call($this, $this.val() + c);\n        }\n    });\n\n    // Backspace event only fires for keyup\n    $inputs.find('input').keyup(function (e) { \n        if (e.keyCode === 8 || e.keyCode === 46) {\n            resizeForText.call($(this), $(this).val());\n        }\n    });\n\n    $inputs.find('input').each(function () {\n        var $this = $(this);\n        resizeForText.call($this, $this.val())\n    });\n});\n</code></pre>\n\n<p>Style: </p>\n\n<pre><code>.resizing-input input, .resizing-input span {\n    font-size: 12px;\n    font-family: Sans-serif;\n    white-space: pre;\n    padding: 5px;\n}\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;div class=\"resizing-input\"&gt;\n    &lt;input type=\"text\" placeholder=\"placeholder\"/&gt;\n    &lt;span  style=\"display:none\"&gt;&lt;/span&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I really liked <a href=\"http://stackoverflow.com/a/14855810/450668\">Lyth's answer</a>, but also really wanted it to:</p>\n\n<ol>\n<li>Handle backspace and delete</li>\n<li>Not require you to manually add an adjacent  tag.</li>\n<li>Enforce a min width.</li>\n<li>Automatically be applied to elements with a specific class</li>\n</ol>\n\n<p>I adapted his JSFiddle and came up with <a href=\"http://jsfiddle.net/jbeall/Le8Ya/9/\" rel=\"nofollow\">this</a>. One improvement not present in this fiddle would be to use something like the <a href=\"http://bililite.com/blog/2009/01/16/jquery-css-parser/\" rel=\"nofollow\">jQuery CSS Parser</a> to actually read the initial width from the input.textbox-autosize rule, and use that as the minWidth. Right I'm simply using an attribute on the , which makes for a compact demo but is not ideal. as it requires an extra attribute on each input. You might also just want to put the minWidth as 100 right in the JavaScript.</p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;div id='applicationHost'&gt;\n&lt;div&gt;Name:   &lt;input class='textbox-autosize' data-min-width='100' type=\"text\" /&gt;&lt;/div&gt;\n&lt;div&gt;Email:  &lt;input class='textbox-autosize' data-min-width='100' type=\"email\" /&gt;&lt;/div&gt;\n&lt;div&gt;Points: &lt;input class='textbox-autosize' data-min-width='100' type=\"number\" /&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>CSS:</strong></p>\n\n<pre><code>#applicationHost {\n    font-family: courier;\n    white-space: pre;\n}\n\ninput.textbox-autosize, span.invisible-autosize-helper {\n    padding:0;\n    font-size:12px;\n    font-family:Sans-serif; \n    white-space:pre;\n}\ninput.textbox-autosize {\n    width: 100px; /* Initial width of textboxes */\n}\n\n/*\nIn order for the measurements to work out, your input and the invisible\nspan need to have the same styling.\n*/\n</code></pre>\n\n<p><strong>JavaScript:</strong></p>\n\n<pre><code>$('#applicationHost').on('keyup', '.textbox-autosize', function(e) {\n    // Add an arbitary buffer of 15 pixels.\n    var whitespaceBuffer = 15;\n    var je = $(this);\n    var minWidth = parseInt(je.attr('data-min-width'));\n    var newVal = je.val();\n    var sizingSpanClass = 'invisible-autosize-helper';\n    var $span = je.siblings('span.' + sizingSpanClass).first();\n    // If this element hasn't been created yet, we'll create it now.\n    if ($span.length === 0) {\n        $span = $('&lt;span/&gt;', {\n            'class': sizingSpanClass,\n            'style': 'display: none;'\n        });\n        je.parent().append($span);\n    }\n    $span = je.siblings('span').first();\n    $span.text(newVal) ; // the hidden span takes \n    // the value of the input\n    $inputSize = $span.width();\n    $inputSize += whitespaceBuffer;\n    if($inputSize &gt; minWidth)\n        je.css(\"width\", $inputSize) ; // apply width of the span to the input\n    else\n        je.css(\"width\", minWidth) ; // Ensure we're at the min width\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This simple code yields exact fit, independent of text size; does proper initialization; works with backspace, deletions, placeholders, as well as multiple input fields; whitespaces properly handled by 'white-space: pre;', does not interfere with hidden input. <a href=\"http://jsfiddle.net/t2pbLxxa/5/\" rel=\"nofollow\">JSFiddle</a></p>\n\n<p><strong>CSS:</strong></p>\n\n<pre><code>#spanId {display:none; white-space: pre;}\ninput, span {font-family: Sans-serif; font-size: 14px}\n</code></pre>\n\n<p><strong>JavaScript:</strong></p>\n\n<pre><code>$(document).ready( function() {\n    function adjust() {\n        var txt = $(this).val();    // Loads value from input, or...\n        if (txt == '') {\n            var txt = $(this).attr('placeholder'); // ...loads text from placeholder\n            }\n        $('#spanId').text(txt); // Generates \"&lt;span&gt;txt&lt;/span&gt;\" needed for .width()\n        var pix = $('#spanId').width(); // .width() gets number of pixels of 'txt'\n        $(this).attr('style', 'width:' + pix + 'px');   // inline css with input field width\n    }\n\n    /* works onload */\n    $('input:text').each(adjust);  // 'input:text' skips other input types\n\n    /* works onkeydown */\n    $('input:text').keydown(adjust);\n});\n</code></pre>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;span id=\"spanId\"&gt;&lt;/span&gt;\n\nInput field\n&lt;input type=\"text\" style=\"\" placeholder=\"enter text\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<pre><code>&lt;html&gt;\n  &lt;head&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;input type=\"text\" value=\"1\" style=\"min-width:1px;\" /&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>This is my code and it is not working. Is there any other way in HTML, JavaScript, PHP or CSS to set minimum width?</p>\n\n<p><strong>Clarification by Marcel:</strong> The OP wants a text input field with a dynamically changing width, so that the input field fluids around its contents.</p>\n",
            "last_activity_date": 1421113564,
            "question_id": 3392493,
            "score": 29,
            "tags": [
                "javascript",
                "html",
                "css"
            ],
            "title": "Adjust width of input field to its input"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>jQuery can handle JSONP, just pass an url formatted with the callback=? paramtere to the $.getJSON method, for example:</p>\n\n<pre><code> $.getJSON(\"http://jsonip.appspot.com?callback=?\",\n    function(data){\n       alert( \"Your ip: \" + data.ip);\n  });\n</code></pre>\n\n<p>This example is of a really simple JSONP service implemented on Google App Engine, you can see more details <a href=\"http://zaa.ch/past/2009/7/3/crosssite%5Fhttp%5Frequest%5Ffor%5Fjsonip/\">here</a>.</p>\n\n<p>Check the source of the service, is a small Python script, it can be implemented on any server-side language.</p>\n\n<p>If you aren't looking for a cross-domain solution the script can be simplified even more, since you don't need the callback parameter, and you return pure JSON.</p>\n\n<p>Run the above snippet <a href=\"http://jsbin.com/ijiha/\">here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 47
                },
                {
                    "body": "<p>A simple AJAX call to your server, and then the serverside logic to get the ip address should do the trick.</p>\n\n<pre><code>$.getJSON('getip.php', function(data){\n  alert('Your ip is: ' +  data.ip);\n});\n</code></pre>\n\n<p>Then in php you might do:</p>\n\n<pre><code>&lt;?php\n/* getip.php */\nheader('Cache-Control: no-cache, must-revalidate');\nheader('Expires: Mon, 26 Jul 1997 05:00:00 GMT');\nheader('Content-type: application/json');\n\nif (!empty($_SERVER['HTTP_CLIENT_IP']))\n{\n  $ip=$_SERVER['HTTP_CLIENT_IP'];\n}\nelseif (!empty($_SERVER['HTTP_X_FORWARDED_FOR']))\n{\n  $ip=$_SERVER['HTTP_X_FORWARDED_FOR'];\n}\nelse\n{\n  $ip=$_SERVER['REMOTE_ADDR'];\n}\nprint json_encode(array('ip' =&gt; $ip));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                }
            ],
            "body": "<p>I want to know how to get client IP address using jQuery?</p>\n\n<p>Is it possible? I know pure javascript can't, but got some code using <code>JSONP</code> from Stack Overflow itself.</p>\n\n<p>So, is there any workaround using jQuery?</p>\n",
            "last_activity_date": 1353988547,
            "question_id": 1641868,
            "score": 28,
            "tags": [
                "javascript",
                "jquery",
                "ip-address"
            ],
            "title": "How to get client IP address using jQuery"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You can obfuscate it, but there's no way of protecting it completely.</p>\n\n<p>example obfuscator: <a href=\"http://www.javascriptobfuscator.com/Default.aspx\">http://www.javascriptobfuscator.com/Default.aspx</a></p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>No, it's not possible. If it runs on the client browser, it must be downloaded by the client browser. It's pretty trivial to use Fiddler to inspect the HTTP session and get any downloaded js files.</p>\n\n<p>There are tricks you can use. One of the most obvious is to employ a javascript obfuscator.</p>\n\n<p>Then again, obfuscation only prevents casual snooping, and doesnt prevent people from lifting and using your code.</p>\n\n<p>You can try compiled action script in the form of a flash movie.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>One of the best compressors (not specifically an obfuscator) is the <a href=\"http://www.julienlecomte.net/yuicompressor/\">YUI Compressor</a>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The only safe way to protect your code is not giving it away.  With client deployment, there is no avoiding the client having access to the code.</p>\n\n<p>So the short answer is: You can't do it</p>\n\n<p>The longer answer is considering flash or Silverlight.  Although I believe silverlight will gladly give away it's secrets with reflector running on the client.</p>\n\n<p>I'm not sure if something simular exists with the flash platform.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>JavaScript is a scripting language and therefore stays in human readable form until it is time for it to be interpreted and executed by the JavaScript runtime.</p>\n\n<p>The only way to partially hide it, at least from the less technical minds, is to obfuscate.</p>\n\n<p>Obfuscation makes it harder for humans to read it, but not impossible for the technically savvy.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you have anything in particular you want to hide (like a proprietary algorithm), put that on the server, or put it in a Flash movie and call it with JavaScript. Writing ActionScript is very similar to writing JavaScript, and you can communicate between JavaScript and ActionScript. You can do the same with Silverlight, but Silverlight doesn't have the penetration Flash does.</p>\n\n<p>However, remember that any mobile phones can run your JavaScript, but not Silverlight or Flash, so you're crippling your mobile users if you go with Flash or Silverlight.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>While everyone will generally agree that Javascript encryption is a <a href=\"http://www.matasano.com/articles/javascript-cryptography/\" rel=\"nofollow\">bad idea</a>, there are a few small use cases where slowing down the attack is better than nothing.\nYou can start with <a href=\"http://refresh-sf.com/yui/\" rel=\"nofollow\">YUI Compressor</a> (as @Ben Alpert) said, or JSMin, Uglify, or many more.</p>\n\n<p>However, the main case in which I want to really 'hide stuff' is when I'm publishing an email address. Note, there is the problem of Chrome when you click on 'inspect element'. It will show your original code: every time. This is why obfuscation is generally regarded as being a better way to go.</p>\n\n<p>On that note, I take a two pronged attack, purely to slow down spam bots. I Obfuscate/minify the js and then run it again through an encoder (again, this second step is completely pointless in chrome).</p>\n\n<p>While not exactly a pure Javascript encoder, the best html encoder I have found is <a href=\"http://hivelogic.com/enkoder/\" rel=\"nofollow\">http://hivelogic.com/enkoder/</a>. It will turn this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n//&lt;![CDATA[\n&lt;!--\nvar c=function(e) { var m=\"mail\" + \"to:webmaster\";var a=\"somedomain\"; e.href = m+\"@\"+a+\".com\";  \n};\n//--&gt;\n//]]&gt;\n&lt;/script&gt;\n&lt;a href=\"#\" onclick=\"return c(this);\"&gt;&lt;img src=\"images/email.png\" /&gt;&lt;/a&gt;\n</code></pre>\n\n<p>into this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n//&lt;![CDATA[\n&lt;!--\nvar x=\"function f(x){var i,o=\\\"\\\",ol=x.length,l=ol;while(x.charCodeAt(l/13)!\" +\n\"=50){try{x+=x;l+=l;}catch(e){}}for(i=l-1;i&gt;=0;i--){o+=x.charAt(i);}return o\" +\n\".substr(0,ol);}f(\\\")87,\\\\\\\"meozp?410\\\\\\\\=220\\\\\\\\s-dvwggd130\\\\\\\\#-2o,V_PY420\" +\n\"\\\\\\\\I\\\\\\\\\\\\\\\\_V[\\\\\\\\\\\\\\\\620\\\\\\\\o710\\\\\\\\RB\\\\\\\\\\\\\\\\610\\\\\\\\JAB620\\\\\\\\720\\\\\\\\n\\\\\"+\n\"\\\\{530\\\\\\\\410\\\\\\\\WJJU010\\\\\\\\|&gt;snnn|j5J(771\\\\\\\\p{}saa-.W)+T:``vk\\\\\\\"\\\\\\\\`&lt;02\" +\n\"0\\\\\\\\!610\\\\\\\\'Dr\\\\\\\\010\\\\\\\\630\\\\\\\\400\\\\\\\\620\\\\\\\\700\\\\\\\\\\\\\\\\\\\\\\\\N730\\\\\\\\,530\" +\n\"\\\\\\\\2S16EF600\\\\\\\\;420\\\\\\\\9ZNONO1200\\\\\\\\/000\\\\\\\\`'7400\\\\\\\\%n\\\\\\\\!010\\\\\\\\hpr\\\\\"+\n\"\\\\= -cn720\\\\\\\\a(ce230\\\\\\\\500\\\\\\\\f730\\\\\\\\i,`200\\\\\\\\630\\\\\\\\[YIR720\\\\\\\\]720\\\\\\\\\"+\n\"r\\\\\\\\720\\\\\\\\h][P]@JHADY310\\\\\\\\t230\\\\\\\\G500\\\\\\\\VBT230\\\\\\\\200\\\\\\\\Clxhh{tzra/{\" +\n\"g0M0$./Pgche%Z8i#p`v^600\\\\\\\\\\\\\\\\\\\\\\\\R730\\\\\\\\Q620\\\\\\\\030\\\\\\\\730\\\\\\\\100\\\\\\\\72\" +\n\"0\\\\\\\\530\\\\\\\\700\\\\\\\\720\\\\\\\\M410\\\\\\\\N730\\\\\\\\r\\\\\\\\530\\\\\\\\400\\\\\\\\4420\\\\\\\\8OM771\" +\n\"\\\\\\\\`4400\\\\\\\\$010\\\\\\\\t\\\\\\\\120\\\\\\\\230\\\\\\\\r\\\\\\\\610\\\\\\\\310\\\\\\\\530\\\\\\\\e~o120\\\\\\\\\"+\n\"RfJjn\\\\\\\\020\\\\\\\\lZ\\\\\\\\\\\\\\\\CZEWCV771\\\\\\\\v5lnqf2R1ox771\\\\\\\\p\\\\\\\"\\\\\\\\tr\\\\\\\\220\" +\n\"\\\\\\\\310\\\\\\\\420\\\\\\\\600\\\\\\\\OSG300\\\\\\\\700\\\\\\\\410\\\\\\\\320\\\\\\\\410\\\\\\\\120\\\\\\\\620\\\\\" +\n\"\\\\q)5&lt;: 0&gt;+\\\\\\\"(f};o nruter};))++y(^)i(tAedoCrahc.x(edoCrahCmorf.gnirtS=+o;\" +\n\"721=%y;++y)87&lt;i(fi{)++i;l&lt;i;0=i(rof;htgnel.x=l,\\\\\\\"\\\\\\\"=o,i rav{)y,x(f noit\" +\n\"cnuf\\\")\"                                                                     ;\nwhile(x=eval(x));\n//--&gt;\n//]]&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>Maybe it's enough to slow down a few spam bots. I haven't had any spam come through using this (!yet).</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>How to hide or encrypt javascript code?</p>\n",
            "last_activity_date": 1363944246,
            "question_id": 1020368,
            "score": 20,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to hide or encrypt javascript code?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Do you control the web page?</p>\n\n<p>If so, here's a blog post that explains how: \n<a href=\"http://www.palladiumconsulting.com/blog/sebastian/2007/04/ultimate-intranet-toy.html\" rel=\"nofollow\">http://www.palladiumconsulting.com/blog/sebastian/2007/04/ultimate-intranet-toy.html</a></p>\n\n<p>If not, there's probably a solution but I can't help you, sorry.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You will need to use DOM for it. Cast WebBrowser.Document.DomDocument to IHTMLDocument?. You will have to import some COM interfaces or Microsoft.mshtml assembly.</p>\n\n<p>Have a look to <a href=\"http://msdn.microsoft.com/en-us/library/aa752641\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/aa752641</a>(VS.85).aspx for more details.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I assume that since you're reading content which is generated from Ajax requests that you require the user to progress the application to a point where the relevant data is loaded, at which point you run code to read the data. </p>\n\n<p>If that's not the case, you'll need to automate this process, generating the click events which build out the DOM nodes you're interested in reading. I do this somewhat commonly with the WebBrowser control and tend to write that layer of functionality in Javascript and call it with .InvokeScript(). Another route would be to find the nodes which fire the Ajax functionality from C# and manually trigger their click events:</p>\n\n<pre><code>HtmlElement content = webMain.Document.GetElementById(\"content\");\ncontent.RaiseEvent(\"onclick\");\n</code></pre>\n\n<p>An important aspect to note in the script above is the fact that you can interact with DOM nodes naively in C# if you accept and work around the limitations of the HtmlElement object type. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>How about running javascript to caption the element and displaying it in a new window? </p>\n\n<p>I haven't tested it out but it may work.</p>\n\n<pre><code>(WebBrowser)w.Navigate(\"javascript:GetElementById('div').innerHtml;\", true);\n</code></pre>\n\n<p>The true attribute to open the return in a new windows. (Or a frame or maybe you can find a better way)</p>\n\n<p>To capture the NewWindow event you'll need to reference the SHDocVw.dll which is in your Windows/System32 folder. Then you can cast your WebBrowser Control like this:</p>\n\n<pre><code>SHDocVw.WebBrowser_V1 browser = (SHDocVw.WebBrowser_V1)(WebBrowser)w.ActiveXInstance;\n</code></pre>\n\n<p>You can have it close right away after storing the response. Well good luck and let me know how it goes.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Is the information not in the WebBrowser.DocumentText? <a href=\"http://msdn.microsoft.com/en-us/library/system.windows.forms.webbrowser.documenttext.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/system.windows.forms.webbrowser.documenttext.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>using System;\nusing System.Windows.Forms;\n\nnamespace WebBrowserDemo\n{\n    class Program\n    {\n        public const string TestUrl = \"http://www.w3schools.com/Ajax/tryit_view.asp?filename=tryajax_first\";\n\n        [STAThread]\n        static void Main(string[] args)\n        {\n            WebBrowser wb = new WebBrowser();\n            wb.DocumentCompleted += new WebBrowserDocumentCompletedEventHandler(wb_DocumentCompleted);\n            wb.Navigate(TestUrl);\n\n            while (wb.ReadyState != WebBrowserReadyState.Complete)\n            {\n                Application.DoEvents();\n            }\n\n            Console.WriteLine(\"\\nPress any key to continue...\");\n            Console.ReadKey(true);\n        }\n\n        static void wb_DocumentCompleted(object sender, WebBrowserDocumentCompletedEventArgs e)\n        {\n            WebBrowser wb = (WebBrowser)sender;\n\n            HtmlElement document = wb.Document.GetElementsByTagName(\"html\")[0];\n            HtmlElement button = wb.Document.GetElementsByTagName(\"button\")[0];\n\n            Console.WriteLine(document.OuterHtml + \"\\n\");\n\n            button.InvokeMember(\"Click\");\n\n            Console.WriteLine(document.OuterHtml);           \n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I solved the problem for me.</p>\n\n<p>the key is, attaching a handler for <code>onPropertyChanged</code> event of the div element which is being populated via ajax call.</p>\n\n<pre><code>HtmlElement target = webBrowser.Document.GetElementById(\"div_populated_by_ajax\");\n\nif (target != null)\n{\n      target.AttachEventHandler(\"onpropertychange\", handler);\n}\n</code></pre>\n\n<p>and finally,</p>\n\n<pre><code>private void handler(Object sender, EventArgs e)\n{\n      HtmlElement div = webBrowser.Document.GetElementById(\"div_populated_by_ajax\");\n      if (div == null) return;\n      String contentLoaded = div.InnerHtml; // get the content loaded via ajax\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>I'm writing an application that uses the WebBrowser control to view web content that can change with AJAX that adds new content/elements.\nI can't seem to get at the new elements any way I've tried. BrowserCtl.DocumentText doesn't have the up-to-date page and of course it's not in \"view source\" either.</p>\n\n<p>Is there some way to get this new data using this control? :(\nPlease help. Thanks!</p>\n\n<p>IE:</p>\n\n<pre><code>Browser.Navigate(\"www.somewebpagewithAJAX.com\");\n//Code that waits for browser to finish...\n...\n//WebBrowser control has loaded content and AJAX has loaded new content\n// (is visible at runtime on form) but can't see them in Browser.Document.All\n// or Browser.DocumentText :(\n</code></pre>\n",
            "last_activity_date": 1386802647,
            "question_id": 635948,
            "score": 17,
            "tags": [
                "c#",
                "javascript",
                "ajax",
                "browser"
            ],
            "title": "C# WebBrowser control -- Get Document Elements After AJAX?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Uhm, if you mean in JavaScript then you could do like this:</p>\n\n<pre><code>a &lt; b ? /*do something*/ : /*do something else*/;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You don't necessarily need jQuery.  JavaScript alone will do this.</p>\n\n<pre><code>var a = 30;\nvar b = 40;    \nvar c = ((a &lt; b) ? 2 : 3);\n</code></pre>\n\n<p>There 2 is the value when <code>true</code>, 3 is the value when <code>false</code>.</p>\n\n<hr>\n\n<p>This is known as a  Conditional (ternary) Operator.</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/Conditional_Operator\">https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/Conditional_Operator</a></p>\n",
                    "is_accepted": true,
                    "score": 175
                },
                {
                    "body": "<p>There is a ternary operator, like this:</p>\n\n<pre><code>var c = (a &lt; b) ? \"a is less than b\"  : \"a is not less than b\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>for writing <code>if</code> statement inline, the code inside of it should only be one statement:</p>\n\n<pre><code>if ( a &lt; b ) // code to be executed without curly braces;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<pre><code>&lt;div id=\"ABLAHALAHOO\"&gt;8008&lt;/div&gt;\n&lt;div id=\"WABOOLAWADO\"&gt;1110&lt;/div&gt;\n\nparseInt( $( '#ABLAHALAHOO' ).text()) &gt; parseInt( $( '#WABOOLAWADO ).text()) ? alert( 'Eat potato' ) : alert( 'You starve' );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>In plain English, the syntax explained:</p>\n\n<pre><code>if(condition){\n    do_something_if_condition_is_met;\n}\nelse{\n    do_something_else_if_condition_is_not_met;\n}\n</code></pre>\n\n<p>Can be written as:</p>\n\n<pre><code>condition ? do_something_if_condition_is_met : do_something_else_if_condition_is_not_met;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>To add to this you can also use inline if condition with &amp;&amp; and || operators.\nLike this</p>\n\n<pre><code>var a = 2;\nvar b = 0;\n\nvar c = (a &gt; b || b == 0)? \"do something\" : \"do something else\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can also approximate an if/else using only Logical Operators.</p>\n\n<pre><code>(a &amp;&amp; b) || c\n</code></pre>\n\n<p>The above is roughly the same as saying:</p>\n\n<pre><code>a ? b : c\n</code></pre>\n\n<p>And of course, roughly the same as:</p>\n\n<pre><code>if ( a ) { b } else { c }\n</code></pre>\n\n<p>I say roughly because there is one difference with this approach, in that you have to know that the value of <code>b</code> will evaluate as true, otherwise you will always get <code>c</code>. Bascially you have to realise that the part that would appear <code>if () { here }</code> is now part of the condition that you place <code>if ( here ) {  }</code>.</p>\n\n<p>The above is possible due to JavaScripts behaviour of passing / returning one of the original values that formed the logical expression, which one depends on the type of operator. Certain other languages, like PHP, carry on the actual result of the operation i.e. true or false, meaning the result is always true or false; e.g:</p>\n\n<pre><code>14 &amp;&amp; 0          /// results as 0,  not false\n14 || 0          /// results as 14, not true\n1 &amp;&amp; 2 &amp;&amp; 3 &amp;&amp; 4 /// results as 4,  not true\ntrue &amp;&amp; ''       /// results as ''\n{} || '0'        /// results as {}\n</code></pre>\n\n<p>One main benefit, compared with a normal if statement, is that the first two methods can operate on the righthand-side of an argument i.e. as part of an assignment.</p>\n\n<pre><code>d = (a &amp;&amp; b) || c;\nd = a ? b : c;\n\nif `a == true` then `d = b` else `d = c`\n</code></pre>\n\n<p>The only way to achieve this with a standard if statement would be to duplicate the assigment:</p>\n\n<pre><code>if ( a ) { d = b } else { d = c }\n</code></pre>\n\n<p>You may ask why use just <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Logical_operators\" rel=\"nofollow\">Logical Operators</a> instead of the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#conditional_operator\" rel=\"nofollow\">Ternary Operator</a>, for simple cases you probably wouldn't, unless you wanted to make sure <code>a</code> and <code>b</code> were both true. You can also achieve more streamlined complex conditions with the Logical operators, which can get quite messy using nested ternary operations... then again if you want your code to be easily readable, neither are really that intuative.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can I use an inline <code>if</code> statement in JavaScript? Is there an inline <code>else</code> statement too?</p>\n\n<p>Something like this:</p>\n\n<pre><code>var a = 2;\nvar b = 3;\n\nif(a &lt; b) {\n    // do something\n}\n</code></pre>\n",
            "last_activity_date": 1421719142,
            "question_id": 10270351,
            "score": 82,
            "tags": [
                "javascript",
                "if-statement",
                "ternary-operator",
                "conditional-operator"
            ],
            "title": "How to write an inline IF statement in JavaScript?"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>You might have to re check the order in witch you are merging the files,\nit should be something like.</p>\n\n<ol>\n<li>jquery.min.js</li>\n<li>jquery-ui.js</li>\n<li>any third partly plugins you loading</li>\n<li>your custom JS code.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Assuming this problem still has not be resolved, a lot of individual files don't end their code with a semicolon. Most jQuery scripts end with <code>(jQuery)</code> and you need to have <code>(jQuery);</code>.</p>\n\n<p>As separate files the script will load just fine but as one individual file you need the semicolons.</p>\n",
                    "is_accepted": true,
                    "score": 129
                },
                {
                    "body": "<p>I had this problem recently with the <a href=\"https://github.com/jzaefferer/jquery-validation\" rel=\"nofollow\">jQuery Validation plug-in</a>, using <a href=\"https://github.com/jetheredge/SquishIt\" rel=\"nofollow\">Squishit</a>, also getting the js error:</p>\n\n<blockquote>\n  <p>\"undefined is not a function\"</p>\n</blockquote>\n\n<p>I fixed it by changing the reference to the <strong>unminified</strong> jquery.validate.js file, rather than jquery.validate.min.js.</p>\n\n<pre><code>@MvcHtmlString.Create(\n    @SquishIt.Framework.Bundle.JavaScript()\n        .Add(\"~/Scripts/Libraries/jquery-1.8.2.min.js\")\n        .Add(\"~/Scripts/Libraries/jquery-ui-1.9.1.custom.min.js\")\n        .Add(\"~/Scripts/Libraries/jquery.unobtrusive-ajax.min.js\")\n        .Add(\"~/Scripts/Libraries/jquery.validate.js\")\n        .Add(\"~/Scripts/Libraries/jquery.validate.unobtrusive.js\")\n         ... more files\n</code></pre>\n\n<p>I think that the minified version of certain files, when further compressed using Squishit, for example, might in some cases not deal with missing semi-colons and the like, as @Dustin suggests, so you might have to experiment with which files you can doubly compress, and which you just leave to Squishit or whatever you're bundling with.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I just had the same message with the following code (in IcedCoffeeScript):</p>\n\n<pre><code>f = (err,cb) -&gt;\n  cb null, true\n\nawait f defer err, res\nconsole.log err if err  \n</code></pre>\n\n<p>This seemed to me like regular ICS code. I unfolded the await-defer construct to regular CoffeeScript:</p>\n\n<pre><code>f (err,res) -&gt;\n  console.log err if err\n</code></pre>\n\n<p>What really happend was that I tried to pass 1 callback function( with 2 parameters ) to function <code>f</code> expecting two parameters, effectively not setting <code>cb</code> inside <code>f</code>, which the compiler correctly reported as <code>undefined is not a function</code>.</p>\n\n<p>The mistake happened because I blindly pasted callback-style boilerplate code. <code>f</code> doesn't need an <code>err</code> parameter passed into it, thus should simply be:</p>\n\n<pre><code>f = (cb) -&gt;\n  cb null, true\nf (err,res) -&gt;\n  console.log err if err\n</code></pre>\n\n<p>In the general case, I'd recommend to double-check function signatures and invocations for matching arities. The call-stack in the error message should be able to provide helpful hints.</p>\n\n<p>In your special case, I recommend looking for function definitions appearing twice in the merged file, with different signatures, or assignments to global variables holding functions.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've run into the very same issue, when mistakenly named variable with the very same name, as function.</p>\n\n<p>So this:</p>\n\n<pre><code>isLive = isLive(data);\n</code></pre>\n\n<p>failed, generating OP's mentioned error message.</p>\n\n<p>Fix to this was as simple as changing above line to:</p>\n\n<pre><code>isItALive = isLive(data);\n</code></pre>\n\n<p>I don't know, how much does it helps in this situation, but I decided to put this answer for others looking for a solution for similar problems.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yes, i also I fixed it changing in the js libraries to the unminified.</p>\n\n<p>For example, in the  tag, change:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"js/jquery.ui.core.min.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"js/jquery.ui.widget.min.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"js/jquery.ui.rcarousel.min.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>For:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"js/jquery.ui.core.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"js/jquery.ui.widget.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"js/jquery.ui.rcarousel.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Quiting the 'min' as unminified.</p>\n\n<p>Thanks for the idea.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I got the same error from having two references to different versions of jQuery.</p>\n\n<p>In my master page:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.4.4/jquery.min.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>And also on the page:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js\"&gt; &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Make sure you have commented out any commentaries. Sometimes when copying and pasting you will leave out the \"/*!\"  </p>\n\n<p>Also when you go into the console they will list your errors and you should take it one at a time. If you see \"Uncaught SyntaxError: Unexpected token * \" That might mean it is reading your js file and it isn't getting past the first line. </p>\n\n<p>/*!\n * jquery.tools 1.1.2 - The missing UI library for the Web\n *\n * [tools.tabs-1.0.4, tools.tooltip-1.1.2, tools.scrollable-1.1.2, tools.overlay-1.1.2, tools.expose-1.0.5]\n *\n * Copyright (c) 2009 Tero Piirainen\n * <a href=\"http://flowplayer.org/tools/\" rel=\"nofollow\">http://flowplayer.org/tools/</a>\n * File generated: Wed Oct 07 09:40:16 GMT 2009\n */</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For those are there who still couldn't fix this, I did so by changing my 'this' to '$(this)' when using jQuery.</p>\n\n<p>E.G:</p>\n\n<pre><code>$('.icon').click(function() {\n    this.fadeOut();\n});\n</code></pre>\n\n<p>Fixed:</p>\n\n<pre><code>$('.icon').click(function() {\n    $(this).fadeOut();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In case there are any morons out there like me, I had this frustrating problem because I forgot a simple </p>\n\n<p><code>new</code> </p>\n\n<p>keyword before instantiating a new object.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>this one solved my problem, I just arrange my javascript in masterpage:</p>\n\n<ol>\n<li>jquery.min.js</li>\n<li>jquery-ui.js</li>\n<li>any third partly plugins you loading</li>\n<li>your custom JS code.</li>\n</ol>\n\n<p>thanks to Billa Ustad</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This solution worked for me </p>\n\n<pre>\n\n    ;(function($){\n        // your code\n    })(jQuery);\n\n</pre>\n\n<p>Move your code inside the closure and use $ instead of jQuery</p>\n\n<p>I found the above solution in <a href=\"http://magento.stackexchange.com/questions/33348/uncaught-typeerror-undefined-is-not-a-function-when-using-a-jquery-plugin-in-ma\">http://magento.stackexchange.com/questions/33348/uncaught-typeerror-undefined-is-not-a-function-when-using-a-jquery-plugin-in-ma</a> </p>\n\n<p>after seraching too much</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<h2>Remember: Javascript functions are CASE SENSITIVE.</h2>\n\n<p>I had a case where I'm pretty sure that my code would run smoothly. But still, got an error and I checked the <em>Javascript console</em> of Google Chrome to check what it is.</p>\n\n<p>My error line is</p>\n\n<pre><code>opt.SetAttribute(\"value\",values[a]);\n</code></pre>\n\n<p>And got the same error message:</p>\n\n<pre><code>Uncaught TypeError: undefined is not a function\n</code></pre>\n\n<p>Nothing seems wrong with the code above but it was not running. I troubleshoot for almost an hour and then compared it with my other running code. My error is that it was set to <code>SetAttribute</code>, which should be <code>setAttribute</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm building a normal webpage which requires me to load about five CSS files and ten Javascript files.</p>\n\n<ul>\n<li>When loading them separately in the HTML page, my webpage loads fine.</li>\n<li><p>Now for production, I concatenated all the Javascript into a single file, in the order needed, and all the CSS into another file. But when I try to run the web page with the concatenated files it throws an error saying:</p>\n\n<p><code>Uncaught TypeError: undefined is not a function</code></p></li>\n</ul>\n\n<p>On the line where jquery.min.js is being loaded in the concatenated Javascript file.</p>\n\n<p>What can I do to mitigate this? I want to concatenate all files and minify them for production. Please help.</p>\n\n<p><br>\n<strong>EDIT:</strong> I merged the Javascript and CSS in the order they were when they were being loaded individually and were working fine.</p>\n",
            "last_activity_date": 1425546018,
            "question_id": 10429838,
            "score": 63,
            "tags": [
                "javascript",
                "jquery",
                "minify"
            ],
            "title": "Uncaught TypeError: undefined is not a function on loading jquery-min.js"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<pre><code>foo.prototype.myFunction = function(){alert(\"me\");}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You cannot change the <code>[[prototype]]</code> reference of already-constructed objects, as far as I know. You could alter the the prototype property of the original constructor function but, as you've already commented, that constructor is <code>Object</code>, and altering core JS constructs is a Bad Thing. </p>\n\n<p>You could create a proxy object of the constructed object that implements the additional functionality that you need, though. You could also monkeypatch the additional methods and behaviors by assigning directly to the object in question.</p>\n\n<p>Perhaps you can get what you want some other way, if you're willing to approach from a different angle: What do you need to do that involves messing with the prototype?</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can do <code>foo.__proto__ = FooClass.prototype</code>, AFAIK that's supported by Firefox, Chrome and Safari. Keep in mind that the <code>__proto__</code> property is non-standard and might go away at some point.</p>\n\n<p>Documentation: <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/proto\">https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/proto</a>. Also see <a href=\"http://www.mail-archive.com/jsmentors@googlegroups.com/msg00392.html\">http://www.mail-archive.com/jsmentors@googlegroups.com/msg00392.html</a> for an explanation why there is no <code>Object.setPrototypeOf()</code> and why <code>__proto__</code> is deprecated.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You could define your proxy constructor function and then create a new instance and copy all the properties from the original object to it.</p>\n\n<pre><code>// your original object\nvar obj = { 'foo': true };\n\n// your constructor - \"the new prototype\"\nfunction Custom(obj) {\n    for ( prop in obj ) {\n        if ( obj.hasOwnProperty(prop) ) {\n            this[prop] = obj[prop];\n        }\n    }\n}\n\n// the properties of the new prototype\nCustom.prototype.bar = true;\n\n// pass your original object into the constructor\nvar obj2 = new Custom(obj);\n\n// the constructor instance contains all properties from the original \n// object and also all properties inherited by the new prototype\nobj2.foo; // true\nobj2.bar; // true\n</code></pre>\n\n<p><strong>Live demo:</strong> <a href=\"http://jsfiddle.net/6Xq3P/\" rel=\"nofollow\">http://jsfiddle.net/6Xq3P/</a></p>\n\n<p>The <code>Custom</code> constructor represents the new prototype, ergo, its <code>Custom.prototype</code> object contains all the new properties which you'd like to use with your original object.</p>\n\n<p>Inside the <code>Custom</code> constructor, you just copy all the properties from the original object to the new instance object. </p>\n\n<p>This new instance object contains all the properties from the original object (they were copied to it inside the constructor), and also all the new properties defined inside <code>Custom.prototype</code> (because the new object is a <code>Custom</code> instance).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can use <code>constructor</code> on an instance of an object to alter the prototype of an object in-place. I believe this is what you're asking to do.</p>\n\n<p>This means if you have <code>foo</code> which is an instance of <code>Foo</code>:</p>\n\n<pre><code>function Foo() {}\n\nvar foo = new Foo();\n</code></pre>\n\n<p>You can add a property <code>bar</code> to all instances of <code>Foo</code> by doing the following:</p>\n\n<pre><code>foo.constructor.prototype.bar = \"bar\";\n</code></pre>\n\n<p>Here's a fiddle showing the proof-of-concept: <a href=\"http://jsfiddle.net/C2cpw/\">http://jsfiddle.net/C2cpw/</a>. Not terribly sure how older browsers will fare using this approach, but I'm pretty sure this should do the job pretty well.</p>\n\n<p>If your intention is to mixin functionality into objects, this snippet should do the job:</p>\n\n<pre><code>function mix() {\n  var mixins = arguments,\n      i = 0, len = mixins.length;\n\n  return {\n    into: function (target) {\n      var mixin, key;\n\n      if (target == null) {\n        throw new TypeError(\"Cannot mix into null or undefined values.\");\n      }\n\n      for (; i &lt; len; i += 1) {\n        mixin = mixins[i];\n        for (key in mixin) {\n          target[key] = mixin[key];\n        }\n\n        // Take care of IE clobbering `toString` and `valueOf`\n        if (mixin &amp;&amp; mixin.toString !== Object.prototype.toString) {\n          target.toString = mixin.toString;\n        } else if (mixin &amp;&amp; mixin.valueOf !== Object.prototype.valueOf) {\n          target.valueOf = mixin.valueOf;\n        }\n      }\n      return target;\n    }\n  };\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p><strong>EDIT Feb. 2012: the answer below is no longer accurate. _<em>proto</em>_ is being added to ecmascript6 as \"normative optional\" which means it isn't required to be implemented but if it is must follow the given set of rules. This is currently unresolved but at least it will be officially part of JavaScript's specification.</strong></p>\n\n<p>This question is a lot more complicated than it seems on the surface, and beyond most peoples' pay grade in regards to knowledge of Javascript internals.</p>\n\n<p>The <code>prototype</code> property of an object is used when creating new child objects of that object. Changing it does not reflect in the object itself, rather is reflected when that objected is used as a constructor for other objects, and has no use in changing the prototype of an existing object.</p>\n\n<pre><code>function myFactory(){};\nmyFactory.prototype = someOtherObject;\n\nvar newChild = new myFactory;\nnewChild.__proto__ === myFactory.prototype === someOtherObject; //true\n</code></pre>\n\n<p>Objects have an internal [[prototype]] property which points to the current prototype. The way it works is whenever a property on an object is called it will start at the object and then go up through the [[prototype]] chain until it finds a match, or fail after the root Object prototype. This is how Javascript allows for runtime building and modification of objects; it has a plan for searching for what it needs.</p>\n\n<p>The <code>__proto__</code> property exists in some implementations (a lot now): any Mozilla implementation, all the webkit ones I know of, some others. This property points to the internal [[prototype]] property and allows modification post-creation on objects. Any properties and functions will instantly switch to match the prototype due to this chained lookup.</p>\n\n<p>This feature, while being standardized now, still is not a required part of JavaScript, and in languages supporting it has a high likelihood of knocking your code down into the \"unoptimized\" category. JS engines have to do their best to classify code, especially \"hot\"  code which is accessed very often, and if you're doing something fancy like modifying <code>__proto__</code> they won't optimize your code at all.</p>\n\n<p>This posts <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=607863\">https://bugzilla.mozilla.org/show_bug.cgi?id=607863</a> specifically discusses current implementations of <code>__proto__</code> and the differences between them. Every implementation does it different, because it's a hard and unsolved problem. Everything in Javascript is mutable except a.) the syntax b.) host objects (the DOM exists outside Javascript technically) and c.) <code>__proto__</code>. The rest is completely in the hands of you and every other developer, so you can see why <code>__proto__</code> sticks out like a sore thumb. </p>\n\n<p>There is one thing that <code>__proto__</code> allows for that is otherwise impossible to do: the designation of an objects prototype at runtime separate from its constructor. This is an important use case and is one of the primary reasons <code>__proto__</code> isn't already dead. It's important enough that it's been a serious discussion point in the formulation of Harmony, or soon to be known as ECMAScript 6. The ability to specify the prototype of an object during creation will be a part of the next version of Javascript and this will be the bell indicating <code>__proto__</code>'s days are formally numbered.</p>\n\n<p>In the short term, you can use <code>__proto__</code> if you're targeting browsers that support it (not IE, and no IE ever will). It's likely it'll work in webkit and moz for the next 10 years as ES6 won't be finalized until 2013.</p>\n\n<p><strong>Brendan Eich</strong> - re:<a href=\"https://mail.mozilla.org/pipermail/es-discuss/2010-April/010917.html\">Approach of new Object methods in ES5</a>:</p>\n\n<blockquote>\n  <p>Sorry, ... but settable <code>__proto__</code>, apart from the object initialiser use case (i.e., on a new object not yet reachable, analogous to ES5's Object.create), is a terrible idea. I write this having designed and implemented settable <code>__proto__</code> over 12 years ago.</p>\n  \n  <p>... the  lack of stratification is a problem (consider JSON data with a key <code>\"__proto__\"</code>). And worse, the mutability means implementations must check for cyclic prototype chains in order to avoid ilooping. <em>[constant checks for infinite recursion are required]</em></p>\n  \n  <p>Finally, mutating <code>__proto__</code> on an existing object may break non-generic methods in the new prototype object, which cannot possibly work on the receiver (direct) object whose <code>__proto__</code> is being set. This is simply bad practice, a form of intentional type confusion, in general.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 72
                },
                {
                    "body": "<p>You can't change the prototype of a JavaScript object that has already been instantiated in a cross browser way.  As others have mentioned, your options include:</p>\n\n<ol>\n<li>changing the non standard/cross browser <code>__proto__</code> property</li>\n<li>Copy the Objects properties to a new object</li>\n</ol>\n\n<p>Neither are particularly great, especially if you have to recursively loop through an object into inner objects to effectively change an elements entire prototype.</p>\n\n<h3>Alternative solution to question</h3>\n\n<p>I'm going to take a more abstract look at the functionality it appears you desire.</p>\n\n<p>Basically prototype/methods just allow for a way to group functions based on an object.<br>\nInstead of writing </p>\n\n<pre><code>function trim(x){ /* implementation */ }\ntrim('   test   ');\n</code></pre>\n\n<p>you write</p>\n\n<pre><code>'   test  '.trim();\n</code></pre>\n\n<p>The above syntax has been coined the term OOP because of the object.method() syntax.\nSome of OOPs main advantage over traditional functional programming includes: </p>\n\n<ol>\n<li>Short methods names and fewer variables <code>obj.replace('needle','replaced')</code> vs having to remember names like <code>str_replace ( 'foo' , 'bar' , 'subject')</code> and the location of the different variables</li>\n<li>method chaining(<code>string.trim().split().join()</code>) is a potentially easier to modify and write  then nested functions <code>join(split(trim(string))</code> </li>\n</ol>\n\n<p>Unfortunately in JavaScript (as shown above) you can't modify an already existent prototype.  Ideally above you could modify <code>Object.prototype</code> for only the given Object's above, but unfortunately modifying <code>Object.prototype</code> would potentially break scripts (resulting in property collision and overriding).</p>\n\n<p>There is no commonly used middle ground between these 2 styles of programming, and no OOP way to organize custom functions.</p>\n\n<p><a href=\"http://limeblack.github.com/UnlimitJS/\" rel=\"nofollow\">UnlimitJS</a> provides a middle ground that allows you to define custom methods.  It avoids:</p>\n\n<ol>\n<li>Property collision, because it doesn't extend Objects' prototypes</li>\n<li>Still allows for an OOP chaining syntax</li>\n<li>It is 450 byte cross browser(IE6+,Firefox 3.0+,Chrome,Opera,Safari 3.0+) script that Unlimit's much of JavaScript's prototype property collision issues</li>\n</ol>\n\n<p>Using your code above I would simply create a namespace of functions that you intend to call against the object.  </p>\n\n<p>Here is an example:</p>\n\n<pre><code>var foo = [{\"A\":\"1\",\"B\":\"2\"},{\"X\":\"7\",\"Y\":\"8\"}];\n\n// define namespace with methods\nvar $ = {\n  log:function(){\n    console.log(this);\n    return this;\n  }[Unlimit](),\n  alert:function(){\n    alert(''+this);\n  }[Unlimit]()\n}\n\n\nfoo[$.log]()\n   [$.log]()\n   [$.alert]();\n</code></pre>\n\n<p>You can read more of the examples here <a href=\"http://limeblack.github.com/UnlimitJS/\" rel=\"nofollow\">UnlimitJS</a>.  Basically when you call <code>[Unlimit]()</code> on a function, it allows for the function to be called as a method on an Object.  It's like a middle ground between the OOP and functional roads.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There is no way to really inherit from <code>Array</code> or \"sub-class\" it.</p>\n\n<p>What you can do is this (<strong>WARNING: FESTERING CODE AHEAD</strong>):</p>\n\n<pre><code>function Foo(arr){\n  [].push.apply(this, arr)\n}\nFoo.prototype = []\nFoo.prototype.something = 123\n\nvar foo = new Foo(&lt;%=MyData %&gt;)\n\nfoo.length // =&gt; 2\nfoo[0] // =&gt; {\"A\":\"1\",\"B\":\"2\"}\nfoo.something // =&gt; 123\n</code></pre>\n\n<p>This works, but will cause certain trouble for anyone that crosses it's path (it looks like an array, but things will go wrong if you try manipulating it).</p>\n\n<p>Why don't you go the sane route and add methods/properties directly to <code>foo</code>, or use a constructor and save your array as a property?</p>\n\n<pre><code>function Foo(arr){\n  this.items = arr\n}\nFoo.prototype = {\n  someMethod : function(){ ... }\n  //...\n}\n\nvar foo = new Foo(&lt;%=MyData %&gt;)\nfoo.items // =&gt; [{\"A\":\"1\",\"B\":\"2\"},{\"X\":\"7\",\"Y\":\"8\"}]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you know the prototype, why not injecting it in the code?</p>\n\n<pre><code>var foo = new MyPrototype(&lt;%= MyData %&gt;);\n</code></pre>\n\n<p>So, once the data is serialized, you get</p>\n\n<pre><code>var foo = new MyPrototype([{\"A\":\"1\",\"B\":\"2\"},{\"X\":\"7\",\"Y\":\"8\"}]);\n</code></pre>\n\n<p>now you only need a constructor that takes an array as argument.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Suppose I have an object <code>foo</code> in my JavaScript code.  <code>foo</code> is a complex object and it is generated somewhere else.  How can I change the prototype of the <code>foo</code> object?</p>\n\n<p><b>Update</b>:  I realize that I need to be more specific about what I'm doing here.</p>\n\n<p>Suppose that I've written the following JavaScript code within an ASP.net page.</p>\n\n<pre><code>var foo = &lt;%=MyData %&gt;;\n</code></pre>\n\n<p>Suppose that <code>MyData</code> is the result of invoking the .net <code>JavaScriptSerializer</code> on a <code>Dictionary&lt;string,string&gt;</code> object in my .net code.</p>\n\n<p>At run-time, this becomes the following:</p>\n\n<pre><code>var foo = [{\"A\":\"1\",\"B\":\"2\"},{\"X\":\"7\",\"Y\":\"8\"}];\n</code></pre>\n\n<p>As you can see, foo becomes an array of objects.  I would like to be able to initialize foo with an appropriate prototype.  I do not want to modify the Object or Array prototypes.  How can I do this?</p>\n",
            "last_activity_date": 1387812723,
            "question_id": 7015693,
            "score": 55,
            "tags": [
                "javascript",
                "function-prototypes"
            ],
            "title": "How to set the prototype of a JavaScript object that has already been instantiated?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>From this link <a href=\"http://www.svennerberg.com/2009/09/google-maps-api-3-infowindows/\">http://www.svennerberg.com/2009/09/google-maps-api-3-infowindows/</a>:</p>\n\n<blockquote>\n  <p>Teo: The easiest way to do this is to\n  just have one instance of the\n  InfoWindow object that you reuse over\n  and over again. That way when you\n  click a new marker the infoWindow is\n  \u201cmoved\u201d from where it\u2019s currently at,\n  to point at the new marker.</p>\n  \n  <p>Use its setContent method to load it\n  with the correct content.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>There is a <a href=\"http://code.google.com/apis/maps/documentation/v3/reference.html#InfoWindow\">close()</a> function for InfoWindows.  Just keep track of the last opened window, and call the close function on it when a new window is created.</p>\n\n<p><a href=\"http://www.lootogo.com/googlemapsapi3/markerPlugin.html\">This demo</a> has the functionality you're looking for.  I found it in the <a href=\"http://code.google.com/apis/maps/documentation/v3/demogallery.html\">Maps API V3 demo gallery</a>.</p>\n",
                    "is_accepted": true,
                    "score": 82
                },
                {
                    "body": "<pre><code>//assuming you have a map called 'map'\nvar infowindow = new google.maps.InfoWindow();\n\nvar latlng1 = new google.maps.LatLng(0,0);\nvar marker1 = new google.maps.Marker({position:latlng1, map:map});\ngoogle.maps.event.addListener(marker1, 'click',\n    function(){\n        infowindow.close();//hide the infowindow\n        infowindow.setContent('Marker #1');//update the content for this marker\n        infowindow.open(map, marker1);//\"move\" the info window to the clicked marker and open it\n    }\n);\nvar latlng2 = new google.maps.LatLng(10,10);\nvar marker2 = new google.maps.Marker({position:latlng2, map:map});\ngoogle.maps.event.addListener(marker2, 'click',\n    function(){\n        infowindow.close();//hide the infowindow\n        infowindow.setContent('Marker #2');//update the content for this marker\n        infowindow.open(map, marker2);//\"move\" the info window to the clicked marker and open it\n    }\n);\n</code></pre>\n\n<p>This will \"move\" the info window around to each clicked marker, in effect closing itself, then reopening (and panning to fit the viewport) in its new location. It changes its contents before opening to give the desired effect. Works for n markers.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<pre><code>var map;\nvar infowindow;\n...\nfunction createMarker(...) {\n    var marker = new google.maps.Marker({...});\n    google.maps.event.addListener(marker, 'click', function() {\n        ...\n        if (infowindow) {\n            infowindow.close();\n        };\n        infowindow = new google.maps.InfoWindow({\n            content: contentString,\n            maxWidth: 300\n        });\n        infowindow.open(map, marker);\n    }\n...\nfunction initialize() {\n    ...\n    map = new google.maps.Map(document.getElementById(\"map_canvas\"), myOptions);\n    ...\n    google.maps.event.addListener(map, 'click', function(event) {\n        if (infowindow) {\n            infowindow.close();\n        };\n        ...\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>alternative solution for this with using many infowindows:\nsave prev opened infowindow in a variable and then close it when new window opened</p>\n\n<pre><code>var prev_infowindow =false; \n...\nbase.attachInfo = function(marker, i){\n    var infowindow = new google.maps.InfoWindow({\n        content: 'yourmarkerinfocontent'\n    });\n\n    google.maps.event.addListener(marker, 'click', function(){\n        if( prev_infowindow ) {\n           prev_infowindow.close();\n        }\n\n        prev_infowindow = infowindow;\n        infowindow.open(base.map, marker);\n    });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>There is a easier way besides using the close() function. if you create a variable with the InfoWindow property it closes automatically when you open another. </p>\n\n<pre><code>var info_window;\nvar map;\nvar chicago = new google.maps.LatLng(33.84659, -84.35686);\n\nfunction initialize() {\n    var mapOptions = {\n        center: chicago,\n        zoom: 14,\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n    };\n    map = new google.maps.Map(document.getElementById(\"map_canvas\"), mapOptions);\n\n    info_window = new google.maps.InfoWindow({\n        content: 'loading'\n    )};\n\ncreateLocationOnMap('Location Name 1', new google.maps.LatLng(33.84659, -84.35686), '&lt;p&gt;&lt;strong&gt;Location Name 1&lt;/strong&gt;&lt;br/&gt;Address 1&lt;/p&gt;');\ncreateLocationOnMap('Location Name 2', new google.maps.LatLng(33.84625, -84.36212), '&lt;p&gt;&lt;strong&gt;Location Name 1&lt;/strong&gt;&lt;br/&gt;Address 2&lt;/p&gt;');\n\n}\n\nfunction createLocationOnMap(titulo, posicao, conteudo) {            \n    var m = new google.maps.Marker({\n        map: map,\n        animation: google.maps.Animation.DROP,\n        title: titulo,\n        position: posicao,\n        html: conteudo\n    });            \n\n    google.maps.event.addListener(m, 'click', function () {                \n        info_window.setContent(this.html);\n        info_window.open(map, this);\n    });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>How about -    </p>\n\n<pre><code>google.maps.event.addListener(yourMarker, 'mouseover', function () {\n        yourInfoWindow.open(yourMap, yourMarker);\n\n    });\n\ngoogle.maps.event.addListener(yourMarker, 'mouseout', function () {\n        yourInfoWindow.open(yourMap, yourMarker);\n\n    });\n</code></pre>\n\n<p>Then you can just hover over it and it will close itself. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I stored a variable at the top to keep track of which info window is currently open, see below.</p>\n\n<pre><code>var currentInfoWin = null;\ngoogle.maps.event.addListener(markers[counter], 'click', function() {      \n    if (currentInfoWin !== null) {\n        currentInfoWin.close(map, this); \n    }\n    this.infoWin.open(map, this); \n    currentInfoWin = this.infoWin;  \n}); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>My solution.</p>\n\n<pre><code>var map;\nvar infowindow = new google.maps.InfoWindow();\n...\nfunction createMarker(...) {\nvar marker = new google.maps.Marker({\n     ...,\n     descrip: infowindowHtmlContent  \n});\ngoogle.maps.event.addListener(marker, 'click', function() {\n    infowindow.setOptions({\n        content: this.descrip,\n        maxWidth:300\n    });\n    infowindow.open(map, marker);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p><a href=\"http://www.uptownelite.com/test.html?city=dallas,tx\">On my site</a>, I'm using Google Maps API v3 to place house markers on the map.</p>\n\n<p>The InfoWindows stay open unless you explicitly click the close icon. Meaning, you can have 2+ InfoWindows open at a time if you hover over the map marker.</p>\n\n<p><strong>Question</strong>: How do I make it so that only the current active InfoWindow is open and all other InfoWindows are closed? Meaning, no more than 1 InfoWindow will be open at a time?</p>\n",
            "last_activity_date": 1396958465,
            "question_id": 2223574,
            "score": 53,
            "tags": [
                "javascript",
                "google-maps",
                "google-maps-api-3"
            ],
            "title": "Google Maps: Auto close open InfoWindows?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>A quick Google turns up this <a href=\"https://web.archive.org/web/20120413212614/http://www.nanaze.com/2009/01/debugging-javascript-on-android.html\">blog post</a> (posted after you asked your question), that should at least let you see any Javascript errors via the Android Debug Bridge using the command:</p>\n\n<pre><code>adb logcat WebCore:V *:S\n</code></pre>\n\n<p>Not quite the same as a full debug console though.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>It looks like, with the Android 2.0.1 SDK you'll need to filter on \"browser\" instead of \"WebCore\"</p>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>I have discovered that you can get this debugging information on the phone itself, without needingn to use adb or plug it into a computer, just download a log viewer. (more info: <a href=\"http://www.technomancy.org/android/javascript-debugging/\" rel=\"nofollow\">http://www.technomancy.org/android/javascript-debugging/</a> )</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I know your question is about Safari, but you might want to look into using Chrome instead. You can now use Chrome's desktop developer tools to debug and profile apps on your Android device. </p>\n\n<p>Here's how:</p>\n\n<ol>\n<li>On <em>Android</em> Chrome, go to settings -> Developer tools and check \"<strong>Enable USB Web debugging</strong>\"</li>\n<li>On the desktop, run <code>adb forward tcp:9222 localabstract:chrome_devtools_remote</code></li>\n<li>Now on <em>Desktop</em> Chrome, navigate to localhost:9222.</li>\n</ol>\n\n<p>You should see a list of the pages you have open on your phone. Click the one you want to debug/profile.</p>\n\n<p>Detailed instructions are here: <a href=\"https://developers.google.com/chrome/mobile/docs/debugging\">https://developers.google.com/chrome/mobile/docs/debugging</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>You can view the log and much more with weinre </p>\n\n<p>From <a href=\"http://people.apache.org/~pmuellr/weinre-docs/latest/Home.html\" rel=\"nofollow\">http://people.apache.org/~pmuellr/weinre-docs/latest/Home.html</a></p>\n\n<blockquote>\n  <p><em>weinre is a debugger for web pages, like FireBug (for FireFox) and Web Inspector (for WebKit-based browsers), except it's designed to work <strong>remotely</strong>, and in particular, to <strong>allow you debug web pages on a mobile device such as a phone</strong>.</em> </p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>On Android write about:debug on the address line when the current page is the page you want to debug. you will get access to the console.</p>\n",
                    "is_accepted": false,
                    "score": 17
                }
            ],
            "body": "<p>I'm developing a JavaScript application that needs to run on the Google Android Phone OS.  Is there a way to enable the JavaScript Error/Debug console within Safari on either the Android Emulator or an actual device?  If so any instructions on how to do so would be appreciated.</p>\n",
            "last_activity_date": 1397868763,
            "question_id": 468993,
            "score": 37,
            "tags": [
                "javascript",
                "android",
                "safari"
            ],
            "title": "Is there a way to enable the JavaScript Error/Debug Console for Safari within Android?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Subtract the X and Y offsets of the canvas DOM element from the mouse position to get the local position inside the canvas.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Easiest way is probably to add a onmousemove event listener to the canvas element, and then you can get the coordinates relative to the canvas from the event itself.</p>\n\n<p>This is trivial to accomplish if you only need to support specific browsers, but there are differences between f.ex. Opera and Firefox. </p>\n\n<p>Something like this should work for those two:</p>\n\n<pre><code>function mouseMove(e)\n{\n    var mouseX, mouseY;\n\n    if(e.offsetX) {\n        mouseX = e.offsetX;\n        mouseY = e.offsetY;\n    }\n    else if(e.layerX) {\n        mouseX = e.layerX;\n        mouseY = e.layerY;\n    }\n\n    /* do something with mouseX/mouseY */\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>Also note that you'll need CSS:</p>\n\n<p>position: relative;</p>\n\n<p>set to your canvas tag, in order to get the relative mouse position inside the canvas.</p>\n\n<p>And the offset changes if there's a border</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>For mouse position, I usually use jQuery since it normalizes some of the event attributes.</p>\n\n<pre><code>function getPosition(e) {\n\n    //this section is from http://www.quirksmode.org/js/events_properties.html\n    var targ;\n    if (!e)\n        e = window.event;\n    if (e.target)\n        targ = e.target;\n    else if (e.srcElement)\n        targ = e.srcElement;\n    if (targ.nodeType == 3) // defeat Safari bug\n        targ = targ.parentNode;\n\n    // jQuery normalizes the pageX and pageY\n    // pageX,Y are the mouse positions relative to the document\n    // offset() returns the position of the element relative to the document\n    var x = e.pageX - $(targ).offset().left;\n    var y = e.pageY - $(targ).offset().top;\n\n    return {\"x\": x, \"y\": y};\n};\n\n// now just make sure you use this with jQuery\n// obviously you can use other events other than click\n$(elm).click(function(event) {\n    // jQuery would normalize the event\n    position = getPosition(event);\n    //now you can use the x and y positions\n    alert(\"X: \" + position.x + \" Y: \" + position.y);\n});\n</code></pre>\n\n<p>This works for me in all the browsers.</p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>I copied the code from one of my classes I was using, so the jQuery call to <code>this.canvas</code> was wrong. The updated function figures out which DOM element (<code>targ</code>) caused the event and then uses that element's offset to figure out the correct position.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p><a href=\"http://georgealways.github.com/gee/\" rel=\"nofollow\"><strong>GEE</strong></a> is an endlessly helpful library for smoothing out troubles with canvas, including mouse location.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I'll share the most bulletproof mouse code that I have created thus far. It works on all browsers will all manner of padding, margin, border, and add-ons (like the stumbleupon top bar)</p>\n\n<pre><code>// Creates an object with x and y defined,\n// set to the mouse position relative to the state's canvas\n// If you wanna be super-correct this can be tricky,\n// we have to worry about padding and borders\n// takes an event and a reference to the canvas\nfunction getMouse = function(e, canvas) {\n  var element = canvas, offsetX = 0, offsetY = 0, mx, my;\n\n  // Compute the total offset. It's possible to cache this if you want\n  if (element.offsetParent !== undefined) {\n    do {\n      offsetX += element.offsetLeft;\n      offsetY += element.offsetTop;\n    } while ((element = element.offsetParent));\n  }\n\n  // Add padding and border style widths to offset\n  // Also add the &lt;html&gt; offsets in case there's a position:fixed bar (like the stumbleupon bar)\n  // This part is not strictly necessary, it depends on your styling\n  offsetX += stylePaddingLeft + styleBorderLeft + htmlLeft;\n  offsetY += stylePaddingTop + styleBorderTop + htmlTop;\n\n  mx = e.pageX - offsetX;\n  my = e.pageY - offsetY;\n\n  // We return a simple javascript object with x and y defined\n  return {x: mx, y: my};\n}\n</code></pre>\n\n<p>You'll notice that I use some (optional) variables that are undefined in the function. They are:</p>\n\n<pre><code>  stylePaddingLeft = parseInt(document.defaultView.getComputedStyle(canvas, null)['paddingLeft'], 10)      || 0;\n  stylePaddingTop  = parseInt(document.defaultView.getComputedStyle(canvas, null)['paddingTop'], 10)       || 0;\n  styleBorderLeft  = parseInt(document.defaultView.getComputedStyle(canvas, null)['borderLeftWidth'], 10)  || 0;\n  styleBorderTop   = parseInt(document.defaultView.getComputedStyle(canvas, null)['borderTopWidth'], 10)   || 0;\n  // Some pages have fixed-position bars (like the stumbleupon bar) at the top or left of the page\n  // They will mess up mouse coordinates and this fixes that\n  var html = document.body.parentNode;\n  htmlTop = html.offsetTop;\n  htmlLeft = html.offsetLeft;\n</code></pre>\n\n<p>I'd recommend only computing those once, which is why they are not in the <code>getMouse</code> function.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I'd use jQuery.</p>\n\n<pre><code>$(document).ready(function() {\n\n    $(\"#canvas_id\").bind( \"mousedown\", function(e){ canvasClick(e); } );\n\n}\n\nfunction canvasClick( e ){\n\n    var x = e.offsetX;\n    var y = e.offsetY;\n\n}\n</code></pre>\n\n<p>This way your canvas can be anywhere on your page, relative or absolute.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The accepted answer will not work every time. If you don't use relative position the attributes offsetX and offsetY can be misleading. </p>\n\n<p>You should use the function: <code>canvas.getBoundingClientRect()</code> from the canvas API.</p>\n\n<pre><code>  function getMousePos(canvas, evt) {\n    var rect = canvas.getBoundingClientRect();\n    return {\n      x: evt.clientX - rect.left,\n      y: evt.clientY - rect.top\n    };\n  }\n  canvas.addEventListener('mousemove', function(evt) {\n    var mousePos = getMousePos(canvas, evt);\n    console.log('Mouse position: ' + mousePos.x + ',' + mousePos.y);\n  }, false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<h2>Simple approach using mouse event and canvas properties:</h2>\n\n<p>JSFiddle demo of functionality <a href=\"http://jsfiddle.net/Dwqy7/5/\" rel=\"nofollow\">http://jsfiddle.net/Dwqy7/5/</a><br>\n(Note: borders are not accounted for, resulting in off-by-one):</p>\n\n<ol>\n<li><p>Add a mouse event to your canvas<br>\n<code>canvas.addEventListener(\"mousemove\", mouseMoved);</code></p></li>\n<li><p>Adjust <code>event.clientX</code> and <code>event.clientY</code> based on:<br>\n<code>canvas.offsetLeft</code><br>\n<code>window.pageXOffset</code><br>\n<code>window.pageYOffset</code><br>\n<code>canvas.offsetTop</code><br>\nThus:  </p>\n\n<p><code>canvasMouseX = event.clientX - (canvas.offsetLeft - window.pageXOffset);\ncanvasMouseY = event.clientY - (canvas.offsetTop - window.pageYOffset);\n</code></p></li>\n</ol>\n\n<p>The original question asked for coordinates from the upper right (second function).\nThese functions will need to be within a scope where they can access the canvas element.</p>\n\n<p>0,0 at upper left:</p>\n\n<pre><code>function mouseMoved(event){\n    var canvasMouseX = event.clientX - (canvas.offsetLeft - window.pageXOffset);\n    var canvasMouseY = event.clientY - (canvas.offsetTop - window.pageYOffset);\n}\n</code></pre>\n\n<p>0,0 at upper right:</p>\n\n<pre><code>function mouseMoved(event){\n    var canvasMouseX =  canvas.width - (event.clientX - canvas.offsetLeft)- window.pageXOffset;\n    var canvasMouseY = event.clientY - (canvas.offsetTop - window.pageYOffset);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there a way to get the location mouse inside a <code>&lt;canvas&gt;</code> tag? I want the location relative to to the upper right corner of the <code>&lt;canvas&gt;</code>, not the entire page.</p>\n",
            "last_activity_date": 1401577733,
            "question_id": 1114465,
            "score": 31,
            "tags": [
                "javascript",
                "html5",
                "canvas"
            ],
            "title": "Getting mouse location in canvas"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I don't know if it works with google maps, but there is a web service that returns a country code and takes as parameters the lat and long.</p>\n\n<p>Here is an example:\n<a href=\"http://ws.geonames.org/countryCode?lat=49.03&amp;lng=10.2\">http://ws.geonames.org/countryCode?lat=49.03&amp;lng=10.2&amp;username=someuser</a></p>\n\n<p>I also found a little description:</p>\n\n<blockquote>\n  <p>The iso country code of any given point.</p>\n  \n  <ul>\n  <li>Webservice Type: REST</li>\n  <li>Url: <code>ws.geonames.org/countryCode?</code></li>\n  <li>Parameters: <code>lat</code>, <code>lng</code>, <code>type</code>, <code>lang</code>, <code>radius</code> (buffer in km for closest country in coastal areas)</li>\n  <li>Result: returns the iso country code for the given latitude/longitude</li>\n  </ul>\n  \n  <p>With the parameter <code>type=xml</code> this service returns an xml document with iso country code and country name. The optional parameter lang can be used to specify the language the country name should be in. JSON output is produced with <code>type=JSON</code></p>\n</blockquote>\n\n<p><strong>Edit:</strong> Please note that you have to create a user account at <a href=\"http://www.geonames.org/login\">http://www.geonames.org/login</a> in order to use the service now.</p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>Yes, you can use google maps to find the country for given latitudes and longitudes. Use the <a href=\"http://code.google.com/apis/maps/documentation/javascript/services.html#ReverseGeocoding\" rel=\"nofollow\">reverse geocoding service</a>.</p>\n\n<p>You can get the country, city, zip code and the complete address from the response you get from the server. Check the example from the link for details ;)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>&lt;form id=\"form1\" runat=\"server\"&gt;\n&lt;div&gt;\n    &lt;script type=\"text/javascript\" src=\"http://j.maxmind.com/app/geoip.js\" &gt;&lt;/script&gt;\n    &lt;br /&gt;Country Code:\n    &lt;script type=\"text/javascript\"&gt;document.write(geoip_country_code());&lt;/script&gt;\n    &lt;br /&gt;Country Name:\n    &lt;script type=\"text/javascript\"&gt;document.write(geoip_country_name());&lt;/script&gt;\n    &lt;br /&gt;City:\n    &lt;script type=\"text/javascript\"&gt;document.write(geoip_city());&lt;/script&gt;\n    &lt;br /&gt;Region:\n    &lt;script type=\"text/javascript\"&gt;document.write(geoip_region());&lt;/script&gt;\n    &lt;br /&gt;Region Name:\n    &lt;script type=\"text/javascript\"&gt;document.write(geoip_region_name());&lt;/script&gt;\n    &lt;br /&gt;Latitude:\n    &lt;script type=\"text/javascript\"&gt;document.write(geoip_latitude());&lt;/script&gt;\n    &lt;br /&gt;Longitude:\n    &lt;script type=\"text/javascript\"&gt;document.write(geoip_longitude());&lt;/script&gt;\n    &lt;br /&gt;Postal Code:\n    &lt;script type=\"text/javascript\"&gt;document.write(geoip_postal_code());&lt;/script&gt;\n\n&lt;/div&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>I would like to know how I can get the country name from latitude &amp; longitude using JavaScript. I open to use of Google Maps\u2019 JavaScript API. Can I also get city and zip?</p>\n\n<p><strong>Edit:</strong> My aim is fill up the address field automatically, not to display it on a map.</p>\n",
            "last_activity_date": 1399880561,
            "question_id": 4497728,
            "score": 25,
            "tags": [
                "javascript",
                "google-maps",
                "geolocation"
            ],
            "title": "Get country from latitude longitude"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><strong>Edit:</strong> I totally misunderstood the question. In the browser, I would use <code>setTimeout</code>. If it was important that it ran in another thread, I would use <a href=\"https://developer.mozilla.org/En/Using_web_workers\" rel=\"nofollow\">Web Workers</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use a timer:</p>\n\n<pre><code>setTimeout( yourFn, 0 );\n</code></pre>\n\n<p>(where <code>yourFn</code> is a reference to your function)</p>\n\n<p>or, with <a href=\"http://documentcloud.github.com/underscore/#defer\">underscore.js</a>:</p>\n\n<pre><code>_.defer( yourFn );\n</code></pre>\n\n<blockquote>\n  <p>Defers invoking the function until the current call stack has cleared,\n  similar to using setTimeout with a delay of 0. Useful for performing\n  expensive computations or HTML rendering in chunks without blocking\n  the UI thread from updating.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>You cannot make a truly custom asynchronous function. You'll eventually have to leverage on a technology provided natively, such as:</p>\n\n<ul>\n<li><code>setInterval</code></li>\n<li><code>setTimeout</code></li>\n<li><code>requestAnimationFrame</code></li>\n<li><code>XMLHttpRequest</code></li>\n<li><code>WebSocket</code></li>\n<li><code>Worker</code></li>\n<li>Some HTML5 APIs such as the File API, Web Database API</li>\n<li>Technologies that support <code>onload</code></li>\n<li>... many others</li>\n</ul>\n\n<p>In fact, for the animation jQuery <a href=\"https://github.com/jquery/jquery/blob/master/src/effects.js#L475\">uses</a> <code>setInterval</code>.</p>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p><a href=\"http://devedge.primedirective.net/toolbox/examples/2003/CCallWrapper/index.html\" rel=\"nofollow\">This page</a> walks you through the basics of creating an async javascript function.</p>\n\n<blockquote>\n  <p>Performing asynchronous function calls in JavaScript using arguments\n  normally involves constructing the expression argument to setTimeout\n  or setInterval manually.</p>\n</blockquote>\n\n<p>If that doesn't solve it for you, check out the documentation on the <code>animate</code> function.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>here you have simple solution (other write about it)\n<a href=\"http://www.benlesh.com/2012/05/calling-javascript-function.html\" rel=\"nofollow\">http://www.benlesh.com/2012/05/calling-javascript-function.html</a></p>\n\n<p>And here you have above ready solution:</p>\n\n<pre><code>function async(your_function, callback) {\n    setTimeout(function() {\n        your_function();\n        if (callback) {callback();}\n    }, 0);\n}\n</code></pre>\n\n<p>TEST 1 (<strong>may output '1 x 2 3' or '1 2 x 3' or '1 2 3 x'</strong>):</p>\n\n<pre><code>console.log(1);\nasync(function() {console.log('x')}, null);\nconsole.log(2);\nconsole.log(3);\n</code></pre>\n\n<p>TEST 2 (<strong>will always output 'x 1'</strong>):</p>\n\n<pre><code>async(function() {console.log('x')}, console.log(1));\n</code></pre>\n\n<p>This function is executed with timeout 0 - it will simulate asynchronous task</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I mean, check it out this <a href=\"http://jsfiddle.net/5H9XT/5/\">code</a> :</p>\n\n<pre><code>&lt;a href=\"#\" id=\"link\"&gt;Link&lt;/a&gt;\n&lt;span&gt;Moving&lt;/span&gt;\n\n$('#link').click(function () {\n    console.log(\"Enter\");\n    $('#link').animate({ width: 200 }, 2000, function() {\n         console.log(\"finished\");            \n    });    \n    console.log(\"Exit\");    \n});\n</code></pre>\n\n<p>as you can see in console, the \"animate\" function is Asynchronous, and it \"fork\" the flow of the event handler block code. In fact :</p>\n\n<pre><code>$('#link').click(function () {\n    console.log(\"Enter\");\n    asyncFunct();\n    console.log(\"Exit\");    \n});\n\nfunction asyncFunct() {\n    console.log(\"finished\");\n}\n</code></pre>\n\n<p>follow the flow of the block code!</p>\n\n<p>If I wish to create my <code>function asyncFunct() { }</code> with this behaviour, how can I do it with javascript/jquery? I think there is a strategy without use <code>setTimeout()</code>\n    \u200b</p>\n",
            "last_activity_date": 1423433889,
            "question_id": 9516900,
            "score": 23,
            "tags": [
                "javascript",
                "jquery",
                "function",
                "asynchronous"
            ],
            "title": "How can I create an Asynchronous function on Javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Not directly. You can invoke Javascript code in the context of the current Web page, via <code>loadUrl()</code>, much like a bookmarklet does. However, you do not have direct access to the DOM from Java code.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>To expand on CommonsWare's correct answer:</p>\n\n<pre><code>WebView webview = new WebView();\nwebview.setWebViewClient(new WebClient());\nwebview.loadUrl(\"stackoverflow.com\");\n</code></pre>\n\n<p>then in WebClient:</p>\n\n<pre><code>public class WebClient extends WebViewClient {\n    @Override\n    public boolean shouldOverrideUrlLoading(WebView view, String url) {\n        view.loadUrl(url);\n        return true;\n    }\n\n    @Override\n    public void onPageFinished(WebView view, String url) \n    {       \n        // Obvious next step is: document.forms[0].submit()\n        view.loadUrl(\"javascript:document.forms[0].q.value='[android]'\");       \n    }\n}\n</code></pre>\n\n<p>In a nutshell, you wait for the page to load. Then you loadUrl(\"javascript:[your javascript here]\").</p>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<pre><code>WebView webview = new WebView();\n\n//Maybe need to set to enabled javascript?\nwebView.getSettings().setJavaScriptEnabled(true);\n\nwebview.setWebViewClient(new WebClient());\n\nwebview.loadUrl(\"stackoverflow.com\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -4
                }
            ],
            "body": "<p>Suppose I load a 3rd party URL through webview.</p>\n\n<pre><code>public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.main);\n        webview = (WebView) findViewById(R.id.webview);\n        webview.setWebViewClient(new HelloWebViewClient());\n        webview.getSettings().setJavaScriptEnabled(true);\n        webview.setWebChromeClient(new MyWebChromeClient());\n        webview.loadUrl(\"http://ebay.com\");         \n    }\n</code></pre>\n\n<p>Is it possible for me to <strong>inject something into this WebView</strong> to replace the ebay logo with my own?</p>\n",
            "last_activity_date": 1307570644,
            "question_id": 2219074,
            "score": 23,
            "tags": [
                "javascript",
                "android",
                "templates",
                "webview"
            ],
            "title": "In Android Webview, am I able to modify a webpage&#39;s DOM?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You could serialize the image into a Data URI.  There's a tutorial in this <a href=\"http://appcropolis.com/blog/web-technology/javascript-encode-images-dataurl/\" rel=\"nofollow\">blog post</a>.  That will produce a string you can store in local storage.  Then on the next page, use the data uri as the source of the image.   </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>To whoever also needs this problem solved:</p>\n\n<p>Firstly, I grab my image with <code>getElementByID</code> and save the image as a Base64. Then I save the Base64 string as my localStorage value.</p>\n\n<pre><code>bannerImage = document.getElementById('bannerImg');\nimgData = getBase64Image(bannerImage);\nlocalStorage.setItem(\"imgData\", imgData);\n</code></pre>\n\n<p>Here is the function that converts the image to a Base64 sting:</p>\n\n<pre><code>function getBase64Image(img) {\n    // Create an empty canvas element\n    var canvas = document.createElement(\"canvas\");\n    canvas.width = img.width;\n    canvas.height = img.height;\n\n    // Copy the image contents to the canvas\n    var ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n\n    // Get the data-URL formatted image\n    var dataURL = canvas.toDataURL(\"image/png\");\n\n    return dataURL.replace(/^data:image\\/(png|jpg);base64,/, \"\");\n}\n</code></pre>\n\n<p>Then, on my next page I created an image with a blank src like so:</p>\n\n<pre><code>&lt;img src=\"\" id=\"tableBanner\" /&gt;\n</code></pre>\n\n<p>And straight when the page loads, I call this tiny piece of Javascript:</p>\n\n<pre><code>var dataImage = localStorage.getItem('imgData');\nbannerImg = document.getElementById('tableBanner');\nbannerImg.src = \"data:image/png;base64,\" + dataImage;\n</code></pre>\n\n<p>All that Javascript does is pull out the localStorage string and save it as a new variable. It then finds the image on my page with the blank source that I created and gives it its source in Base64.</p>\n\n<p>Tested it in quite a few different browsers and versions and it seems to work quite well.</p>\n",
                    "is_accepted": true,
                    "score": 33
                }
            ],
            "body": "<p>So basically, I need to do as the title states; Upload a single image, save it to localStorage, then display it on the next page.</p>\n\n<p>Currently, I have my HTML file upload:</p>\n\n<pre><code>&lt;input type='file' id=\"uploadBannerImage\" onchange=\"readURL(this);\" /&gt;\n</code></pre>\n\n<p>Which uses this function to display the image on the page</p>\n\n<pre><code>function readURL(input) \n{\n    document.getElementById(\"bannerImg\").style.display = \"block\";\n\n    if (input.files &amp;&amp; input.files[0]) {\n        var reader = new FileReader();\n\n        reader.onload = function (e) {\n            document.getElementById('bannerImg').src =  e.target.result;\n        }\n\n        reader.readAsDataURL(input.files[0]);\n    }\n}\n</code></pre>\n\n<p>The image is displayed instantly on the page for the user to see. They are then asked to fill out the rest of the form. This part is working perfectly.</p>\n\n<p>Once the form is complete, they then press a 'Save' button. Once this button is pressed, I save all form inputs as <code>localStorage</code> strings. I need a way to also save the image as a <code>localStorage</code> item.</p>\n\n<p>The save button will also direct them to a new page. This new page will display the users data in a table, with the image being at the top.</p>\n\n<p>So plain and simple, I need to save the image in <code>localStorage</code> once the 'Save' button is pressed, and then loan the image on the next page from <code>localStorage</code>.</p>\n\n<p>I found some solutions such as this fiddle: <a href=\"http://jsfiddle.net/8V9w6/\">http://jsfiddle.net/8V9w6/</a></p>\n\n<p>And this: <a href=\"https://hacks.mozilla.org/2012/02/saving-images-and-files-in-localstorage/\">https://hacks.mozilla.org/2012/02/saving-images-and-files-in-localstorage/</a></p>\n\n<p>Although I am still extremely confused on how this works, and I only really need a simple solution. Basically, I just need to find the image via <code>getElementByID</code> once the 'Save' button is pressed, and then process and save the image.</p>\n\n<p>All help is greatly appreciated. Thanks!</p>\n",
            "last_activity_date": 1421279221,
            "question_id": 19183180,
            "score": 22,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "html5",
                "local-storage"
            ],
            "title": "How to save an image to localStorage and display it on the next page?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>By default, every CoffeeScript file is compiled down into a closure. You cannot interact with functions from a different file, unless you export them to a global variable. I'd recommend doing something like this:</p>\n\n<p>On top of every coffeescript file, add a line like</p>\n\n<pre><code>window.Application ||= {}\n</code></pre>\n\n<p>This will ensure that there's a global named Application present at all times.</p>\n\n<p>Now, for every function that you'll have the need to call from another file, define them as</p>\n\n<pre><code>Application.indicator_tag = (el) -&gt;\n  ...\n</code></pre>\n\n<p>and call them using</p>\n\n<pre><code>Application.indicator_tag(params)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>Dogbert's solution is a great way to go if you have a very sophisticated JS back-end. However, there's a much simpler solution if you only have a handful of functions you're working with. Just add them directly to the window object, like this:</p>\n\n<pre><code>window.indicator_tag = (el) -&gt;\n  ...\n</code></pre>\n\n<p>Then you can use your functions from anywhere without having to wrap them up in another object.</p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I have views in my application that reference my application.js file which contains functions I use throughout my application.</p>\n\n<p>I just installed the Rails 3.1 release candidate after having used the edge version of 3.1. Until I installed the RC I wasn't having any problems but now I'm getting this error:</p>\n\n<blockquote>\n  <p>ReferenceError: Can't find variable: indicator_tag</p>\n</blockquote>\n\n<p>indicator_tag is a function I defined in application.js.\nThe only difference I notice in the javascript file is that now all my functions are wrapped in:</p>\n\n<pre><code>(function() { ... }).call(this);\n</code></pre>\n\n<p>I understand this is for variable scoping? But could it be preventing my pages from using those variables? And before anyone asks, I've made sure the javascript paths are correct in my include tags.</p>\n",
            "last_activity_date": 1315291181,
            "question_id": 6089992,
            "score": 21,
            "tags": [
                "javascript",
                "ruby-on-rails",
                "coffeescript"
            ],
            "title": "&quot;Can&#39;t find variable&quot; error with Rails 3.1 and Coffeescript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You would need to rewrite the function to cache the element list, then loop over the list using a counter of some sort.</p>\n\n<p>Then when the counter reaches counter % max_num_before_wait == 0, call timeout back to the function itself.</p>\n\n<p>Make sure to clear the cache and counter at the end of the complete list, or use a secondary function with an extra count parameter.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>It just so happens that I was posting about this a moment ago <a href=\"http://stackoverflow.com/questions/205631/javascript-loadingbusy-indicator-or-transparent-div-over-page-on-event-click#210931\">here</a>. Here is a timed loop function:</p>\n\n<pre><code>function processLoop( actionFunc, numTimes, doneFunc ) {\n  var i = 0;\n  var f = function () {\n    if (i &lt; numTimes) {\n      actionFunc( i++ );  // closure on i\n      setTimeout( f, 10 )\n    } \n    else if (doneFunc) { \n      doneFunc();\n    }\n  };\n  f();\n}\n</code></pre>\n\n<p>For your situation this would be used like this:</p>\n\n<pre><code>function appendToSelect () {\n\n  $(\"#mySelect\").children().remove() ;\n  $(\"#mySelect\").html(\n      '&lt;option selected value=\"' + obj.data[0].value + '\"&gt;'\n      + obj.data[0].name\n      + '&lt;/option&gt;'\n  );\n  var j = 1 ;\n\n  processLoop(function (i){\n    $(\"#mySelect\").append(\n        '&lt;option value=\"' + obj.data[i].value + '\"&gt;'\n        + obj.data[i].name\n        + '&lt;/option&gt;'\n    ); \n  }, obj.data.length);\n\n}\n</code></pre>\n\n<p>You'll want to make sure that you have a closure or some other access to the obj variable within the iteration function. </p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>Here is a solution:</p>\n\n<pre><code>function appendToSelect() {\n  $(\"#mySelect\").children().remove();\n  $(\"#mySelect\").html(\n    '&lt;option selected value=\"'+obj.data[0].value+'\"&gt;'\n    + obj.data[0].name\n    + '&lt;/option&gt;'\n  );\n  obj.data.splice(0, 1); // we only want remaining data\n  var appendOptions = function() {\n    var dataChunk = obj.data.splice(0, 10); // configure this last number (the size of the 'chunk') to suit your needs\n    for(var i = 0; i &lt; dataChunk.length; i++) {\n      $(\"#mySelect\").append(\n        '&lt;option value=\"' + dataChunk[i].value + '\"&gt;'\n        + dataChunk[i].name\n        + '&lt;/option&gt;'\n      );\n    }\n    if(obj.data.length &gt; 0) {\n      setTimeout(appendOptions, 100); // change time to suit needs\n    }\n  };\n  appendOptions(); // kicks it off\n}\n</code></pre>\n\n<p>Not as elegant as <a href=\"http://stackoverflow.com/questions/210821/giving-brief-control-back-to-the-browser-during-intensive-javascript-processing#210968\">@Borgar's</a> solution, but you get the idea. Basically, I am doing the same thing, but all in your one function rather than breaking it into a higher-order function like he does. I like his solution, but if you don't, perhaps this will work for you.</p>\n\n<p><hr /></p>\n\n<p>EDIT: For those that don't immediately see it, one of the main differences between this solution and <a href=\"http://stackoverflow.com/questions/210821/giving-brief-control-back-to-the-browser-during-intensive-javascript-processing#210968\">@Borgar's</a> is that this solution allows you to set the size of the 'chunks' of data that is processed between each timeout. <a href=\"http://stackoverflow.com/questions/210821/giving-brief-control-back-to-the-browser-during-intensive-javascript-processing#210968\">@Borgar's</a> times-out after <em>every single member</em> of the array is processed. If I get time, I will try to create a higher-order function to handle this so it is more elegant. No promises though! ;)</p>\n\n<p><hr /></p>\n\n<p>EDIT: So, here is my adaptation of <a href=\"http://stackoverflow.com/questions/210821/giving-brief-control-back-to-the-browser-during-intensive-javascript-processing#210968\">@Borgar's</a> solution, which allows for setting a 'chunk' size and configuring the timeout value more easily:</p>\n\n<pre><code>function incrementallyProcess(workerCallback, data, chunkSize, timeout, completionCallback) {\n  var itemIndex = 0;\n  (function() {\n    var remainingDataLength = (data.length - itemIndex);\n    var currentChunkSize = (remainingDataLength &gt;= chunkSize) ? chunkSize : remainingDataLength;\n    if(itemIndex &lt; data.length) {\n      while(currentChunkSize--) {\n        workerCallback(data[itemIndex++]);\n      }\n      setTimeout(arguments.callee, timeout);\n    } else if(completionCallback) {\n      completionCallback();\n    }\n  })();\n}\n\nfunction appendToSelect() {\n  $(\"#mySelect\").children().remove();\n  $(\"#mySelect\").html(\n    '&lt;option selected value=\"' + obj.data[0].value + '\"&gt;'\n    + obj.data[0].name\n    + '&lt;/option&gt;'\n  );\n  obj.data.splice(0,1); // we only want remaining data  \t\n  incrementallyProcess(function(data) {\n    $(\"#mySelect\").append(\n    '&lt;option value=\"' + data.value + '\"&gt;'\n    + data.name\n    + '&lt;/option&gt;'\n   );\n  }, obj.data, 10, 100, removeAnimatedGifFunction); // last function not required...\n}\n</code></pre>\n\n<p>Hope that helps - I think this combines the best of both solutions. <strong>Notice</strong>, the second anonymous function no longer uses the index value, but simply passes in the entire object (with the value and name properties); that makes it a bit cleaner, since the index of the current object really isn't <em>usually</em> that useful when iterating over things, IMO.</p>\n\n<p>I am sure there are still things that could be done to make this even better, but that is left as an exercise for the reader. ;)</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>If you need something simpler, I wrote a jQuery plugin to ease writing of asynchronous loops: <a href=\"http://mess.genezys.net/jquery/jquery.async.php\" rel=\"nofollow\">jQuery Async</a>.</p>\n\n<p>Using the plugin, your code can be rewritten as:</p>\n\n<pre><code>function appendToSelect() {\n    $(\"#mySelect\").children().remove() ;\n    $(\"#mySelect\").html(\n        '&lt;option selected value=\"' + obj.data[0].value + '\"&gt;'\n        + obj.data[0].name\n        + '&lt;/option&gt;'\n    );\n\n    /////////////////////////////\n    var i = 1;\n    $.whileAsync({\n    \ttest: function(){ i &lt; obj.data.length; }\n    \tloop: function()\n    \t{\n            $(\"#mySelect\").append(\n                '&lt;option value=\"' + obj.data[i].value + '\"&gt;'\n                + obj.data[i].name\n                + '&lt;/option&gt;'\n            ); \n    \t\ti++;\n    \t}\n    });\n    /////////////////////////////\n}\n</code></pre>\n\n<p>Should help the responsiveness. Tweak the 'bulk' and 'delay' option for more control.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have read the post <a href=\"http://www.julienlecomte.net/blog/2007/10/28/\">here</a> about using setTimeout() during intensive DOM processing (using JavaScript), but how can I integrate this function with the below code? The below code works fine for a small number of options, but when the number of options gets too big my \"please wait\" animated GIF freezes while the local JavaScript is processing. Thanks!</p>\n\n<pre><code>function appendToSelect() {\n    $(\"#mySelect\").children().remove() ;\n    $(\"#mySelect\").html(\n        '&lt;option selected value=\"' + obj.data[0].value + '\"&gt;'\n        + obj.data[0].name\n        + '&lt;/option&gt;'\n    );\n    var j = 1 ;\n    for (var i = 1; i &lt; obj.data.length; i++) {\n        $(\"#mySelect\").append(\n            '&lt;option value=\"' + obj.data[i].value + '\"&gt;'\n            + obj.data[i].name\n            + '&lt;/option&gt;'\n        ); \n    }\n}\n</code></pre>\n",
            "last_activity_date": 1256246565,
            "question_id": 210821,
            "score": 19,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How can I give control back (briefly) to the browser during intensive JavaScript processing?"
        },
        {
            "answer_count": 29,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.antiyes.com/jquery-blink-plugin\">Try using this blink plugin</a></p>\n\n<p>For Example</p>\n\n<pre><code>$('.blink').blink(); // default is 500ms blink interval.\n//$('.blink').blink(100); // causes a 100ms blink interval.\n</code></pre>\n\n<p>It is also a very simple plugin, and you could probably extend it to stop the animation and start it on demand.</p>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>You can also try these:</p>\n\n<pre><code>&lt;div&gt;some &lt;span class=\"blink\"&gt;text&lt;/span&gt; are &lt;span class=\"blink\"&gt;blinking&lt;/span&gt;&lt;/div&gt;\n&lt;button onclick=\"startBlink()\"&gt;blink&lt;/button&gt;\n&lt;button onclick=\"stopBlink()\"&gt;no blink&lt;/button&gt;\n\n&lt;script&gt;\n  function startBlink(){\n    window.blinker = setInterval(function(){\n    \tif(window.blink){\n    \t   $('.blink').css('color','blue');\n    \t   window.blink=false;\n    \t }\n    \telse{\n    \t\t$('.blink').css('color','white');\n    \t\twindow.blink = true;\n    \t}\n    },500);\n  }\n\n  function stopBlink(){\n    if(window.blinker) clearInterval(window.blinker);\n  } \n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can also use the standard CSS way (no need for JQuery plugin, but compatible with all browsers):</p>\n\n<pre><code>// Start blinking\n$(\".myblink\").css(\"text-decoration\", \"blink\");\n\n// Stop blinking\n$(\".myblink\").css(\"text-decoration\", \"none\");\n</code></pre>\n\n<p><a href=\"http://www.w3.org/WAI/UA/TS/html401/cp0303/0303-CSS-BLINK.html\">W3C Link</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>$(\".myblink\").css(\"text-decoration\", \"blink\");\n</code></pre>\n\n<p>do not work with IE 7 &amp; Safari. Work well with Firefox</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here you can find a <a href=\"https://github.com/fcarriedo/jquery-blink\" rel=\"nofollow\">jQuery blink</a> plugin with its quick <a href=\"http://fcarriedo.github.com/jquery-blink/\" rel=\"nofollow\">demo</a>.</p>\n\n<p>Basic blinking (<em>unlimited blinking, blink period ~1 sec</em>):</p>\n\n<pre><code>$('selector').blink();\n</code></pre>\n\n<p>On a more advanced usage, you can override any of the settings:</p>\n\n<pre><code>$('selector').blink({\n    maxBlinks: 60, \n    blinkPeriod: 1000,   // in milliseconds\n    onBlink: function(){}, \n    onMaxBlinks: function(){}\n});\n</code></pre>\n\n<p>There you can specify the max number of blinks as well as have access to a couple of callbacks: <code>onBlink</code> and <code>onMaxBlinks</code> that are pretty self explanatory.</p>\n\n<p>Works in IE 7 &amp; 8, Chrome, Firefox, Safari and probably in IE 6 and Opera (although haven't tested on them).</p>\n\n<p>(In full disclosure: I'm am the creator of this previous one. We had the legitimate need to use it at work [<em>I know we all like to say this :-)</em>] for an alarm within a system and I thought of sharing <strong>only</strong> for use on a legitimate need ;-)). </p>\n\n<p>Here is another list of <a href=\"http://plugins.jquery.com/plugin-tags/blink\" rel=\"nofollow\">jQuery blink plugins</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>A plugin to blink some text sounds a bit like overkill to me...</p>\n\n<p>Try this...</p>\n\n<pre><code>$('.blink').each(function() {\n    var elem = $(this);\n    setInterval(function() {\n        if (elem.css('visibility') == 'hidden') {\n            elem.css('visibility', 'visible');\n        } else {\n            elem.css('visibility', 'hidden');\n        }    \n    }, 500);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 56
                },
                {
                    "body": "<p>One more made from the core jQuery functionality(it could be better):</p>\n\n<pre><code>function blink( el ) {\n    if (!el) {\n        el = this\n    }\n\n    $(el).animate( { opacity: 0.5 },1200, function() {\n        $(this).animate( {opacity: 1 }, 1200, blink );\n    } );\n}\n</code></pre>\n\n<p>You can tweak the animation opacity change(0.5- 1) and delay(1200) to get a better \"blink\". This one is less annoying than the blink of the 90es :-)</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>here's blinking with animation:</p>\n\n<pre><code>$(\".blink\").animate({opacity:0},200,\"linear\",function(){\n  $(this).animate({opacity:1},200);\n});\n</code></pre>\n\n<p>just give a blink class whatever u want to blink:</p>\n\n<pre><code>&lt;div class=\"someclass blink\"&gt;some text&lt;/div&gt;\n</code></pre>\n\n<p>all regards to DannyZB on #jquery </p>\n\n<p>features:</p>\n\n<ul>\n<li>doesn't need any plugins (but JQuery itself)</li>\n<li>does the thing</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>Blinking !</p>\n\n<pre><code>var counter = 5; // Blinking the link 5 times\nvar $help = $('div.help');\nvar blinkHelp = function() {\n    ($help.is(':visible') ? $help.fadeOut(250) : $help.fadeIn(250));    \n    counter--;\n    if (counter &gt;= 0) setTimeout(blinkHelp, 500);\n};\nblinkHelp();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you'd rather not use jQuery, this can be achieved with CSS3</p>\n\n<pre><code>@-webkit-keyframes blink {  \n  from { opacity: 1.0; }\n  to { opacity: 0.0; }\n}\n\nblink {\n  -webkit-animation-name: blink;  \n  -webkit-animation-iteration-count: infinite;  \n  -webkit-animation-timing-function: cubic-bezier(1.0,0,0,1.0);\n  -webkit-animation-duration: 1s; \n}\n</code></pre>\n\n<p>Seems to work in Chrome, though I thought I heard a slight sobbing noise.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p><a href=\"http://awesome-gallery.blogspot.com/2011/03/blinking-text-using-jquery.html\" rel=\"nofollow\">Link to author</a></p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-1.4.1.min.js\"&gt;&lt;/script&gt;\n\n&lt;div id=\"msg\"&gt; &lt;strong&gt;&lt;font color=\"red\"&gt;Awesome Gallery By Anil Labs&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/div&gt;\n\n&lt;script type=\"text/javascript\" &gt;\nfunction blink(selector){\n    $(selector).fadeOut('slow', function(){\n        $(this).fadeIn('slow', function(){\n            blink(this);\n        });\n    });\n}\n\nblink('#msg');\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>$.fn.blink = function (delay) {\n  delay = delay || 500;\n  return this.each(function () {\n    var element = $(this);\n    var interval = setInterval(function () {\n      element.fadeOut((delay / 3), function() {\n        element.fadeIn(delay / 3);\n      })\n    }, delay);\n    element.data('blinkInterval', interval);\n  });\n};\n\n$.fn.stopBlinking = function() {\n  return this.each(function() {\n    var element = $(this);\n    element.stop(true, true);\n    clearInterval(element.data('blinkInterval'));\n  });\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Combine the codes above, I think this is a good solution.</p>\n\n<pre><code>function blink(selector){\n    $(selector).animate({opacity:0}, 50, \"linear\", function(){\n        $(this).delay(800);\n        $(this).animate({opacity:1}, 50, function(){\n        blink(this);\n        });\n        $(this).delay(800);\n    });\n}\n</code></pre>\n\n<p>At least it works on my web.\n<a href=\"http://140.138.168.123/2y78%202782\">http://140.138.168.123/2y78%202782</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You can try the jQuery UI Pulsate effect:</p>\n\n<p><a href=\"http://docs.jquery.com/UI/Effects/Pulsate\" rel=\"nofollow\">http://docs.jquery.com/UI/Effects/Pulsate</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This code might help to this topic. Simple, yet useful.</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-1.4.1.min.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    $(document).ready(function(){\n        setInterval(\"$('#myID/.myClass').toggle();\",500);\n    });\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Some of these answers are quite complicated, this is a bit easier:</p>\n\n<pre><code>$.fn.blink = function(time) {\n    var time = typeof time == 'undefined' ? 200 : time;\n    this.hide(0).delay(time).show(0);\n}\n\n$('#msg').blink();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>based on alex idea</p>\n\n<pre><code>$('#selector').blink();\n\n$.fn.blink = function(options) {    \n    options = $.extend({}, {'speed' : 800}, options);\n\n    var elem = this;\n    setInterval(function() {\n        if (!elem.is(':visible')) {\n            elem.show();\n        } else {\n            elem.hide();\n        }    \n    }, options.speed);      \n}   \n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<pre><code>$.fn.blink = function(times, duration) {\n    times = times || 2;\n    while (times--) {\n        this.fadeTo(duration, 0).fadeTo(duration, 1);\n    }\n    return this;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>var doBlink = function (obj,start,finish) {\n    $(obj).fadeOut(300).fadeIn(300);\n    if(start!=finish) {\n        start=start+1; doBlink(obj,start,finish);\n    }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I like alex's answer, so this is a bit of an extension of that without an interval (since you would need to clear that interval eventually and know when you want a button to stop blinking. This is a solution where you pass in the jquery element, the ms you want for the blinking offset and the number of times you want the element to blink:</p>\n\n<pre><code>function blink ($element, ms, times) {\n    for (var i = 0; i &lt; times; i++) {\n        window.setTimeout(function () {\n            if ($element.is(':visible')) {\n                $element.hide();\n            } else {\n                $element.show();\n            }\n        }, ms * (times + 1));\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I feel the following is of greater clarity and customization than other answers.<br></p>\n\n<pre><code>    element_id=\"#element_to_blink\";\n    min_opacity=0.5;\n    max_opacity=1.0;\n    switch_duration=100;\n    blink_quantity=10;\n\n    var cblink=0;\n    while(cblink&lt;blink_quantity){\n        //go to lowest opacity and then to highest opacity.\n        $(element_id).animate({opacity:min_opacity},switch_duration,\"linear\");\n        $(element_id).animate({opacity:max_opacity},switch_duration,\"linear\");\n        cblink+=1;\n        }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This stand-alone solution will blink the text a specified number of times and then stop.</p>\n\n<p>The blinking uses opacity, rather than show/hide, fade or toggle so that the DIV remains clickable, in case that's ever an issue (allows you to make buttons with blinking text).</p>\n\n<p><a href=\"http://jsfiddle.net/fzhVx/\" rel=\"nofollow\">jsFiddle here</a> (contains additional comments)</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"&gt;&lt;/script&gt;\n\n        &lt;script type=\"text/javascript\"&gt;\n            $(document).ready(function() {\n\n                var init = 0;\n\n                $('#clignotant').click(function() {\n                    if (init==0) {\n                        init++;\n                        blink(this, 800, 4);\n                    }else{\n                        alert('Not document.load, so process the click event');\n                    }\n                });\n\n                function blink(selector, blink_speed, iterations, counter){\n                    counter = counter | 0;\n                    $(selector).animate({opacity:0}, 50, \"linear\", function(){\n                        $(this).delay(blink_speed);\n                        $(this).animate({opacity:1}, 50, function(){\n\n                            counter++;\n\n                            if (iterations == -1) {\n                                blink(this, blink_speed, iterations, counter);\n                            }else if (counter &gt;= iterations) {\n                                return false;\n                            }else{\n                                blink(this, blink_speed, iterations, counter);\n                            }\n                        });\n                        $(this).delay(blink_speed);\n                    });\n                }\n\n                //This line must come *AFTER* the $('#clignotant').click() function !!\n                window.load($('#clignotant').trigger('click'));\n\n\n            }); //END $(document).ready()\n\n        &lt;/script&gt;\n    &lt;/head&gt;\n&lt;body&gt;\n\n    &lt;div id=\"clignotant\" style=\"background-color:#FF6666;width:500px;\n    height:100px;text-align:center;\"&gt;\n        &lt;br&gt;\n        Usage: blink(selector, blink_speed, iterations) &lt;br /&gt;\n        &lt;span style=\"font-weight:bold;color:blue;\"&gt;if iterations == -1 blink forever&lt;/span&gt;&lt;br /&gt;\n        Note: fn call intentionally missing 4th param\n    &lt;/div&gt;\n\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Sources:<br />\n<a href=\"http://stackoverflow.com/users/2497335/daniel-gimenez\">Danny Gimenez</a><br />\n<a href=\"http://stackoverflow.com/users/983798/moses-christian\">Moses Christian</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here's mine ; it gives you control over the 3 parameters that matter:</p>\n\n<ul>\n<li>the fade in speed</li>\n<li>the fade out speed</li>\n<li><p>the repeat speed</p>\n\n<pre><code>function pulse() {\n    $('.blink').fadeIn(300);\n    $('.blink').fadeOut(500);\n}\nsetInterval(pulse, 1000);\n</code></pre></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Seeing the number of views on this question, and the lack of answers that cover both blinking and stopping it, here goes: try <a href=\"http://pioul.fr/jquery-blinker\" rel=\"nofollow\">jQuery.blinker</a> out (<a href=\"http://jsfiddle.net/pioul/aMwFt/1/\" rel=\"nofollow\">demo</a>).</p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;p&gt;Hello there!&lt;/p&gt;\n</code></pre>\n\n<p><strong>JavaScript:</strong></p>\n\n<pre><code>var p = $(\"p\");\n\np.blinker();\n\np.bind({\n    // pause blinking on mouseenter\n    mouseenter: function(){\n        $(this).data(\"blinker\").pause();\n    },\n    // resume blinking on mouseleave\n    mouseleave: function(){\n        $(this).data(\"blinker\").blinkagain();\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I was going to post the <code>steps</code>-timed polyfill, but then I remembered that I really don\u2019t want to ever see this effect, so\u2026</p>\n\n<pre><code>function blink(element, interval) {\n    var visible = true;\n\n    setInterval(function() {\n        visible = !visible;\n        element.style.visibility = visible ? \"visible\" : \"hidden\";\n    }, interval || 1000);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Indeed a plugin for a simple blink effect is overkill. So after experimenting with various solutions, I have choosen between one line of javascript and a CSS class that controls exactly how I want to blink the elements (in my case for the blink to work I only need to change the background to transparent, so that the text is still visible):</p>\n\n<p>JS:</p>\n\n<pre><code>$(document).ready(function () {\n        setInterval(function () { $(\".blink\").toggleClass(\"no-bg\"); }, 1000);\n    });\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>span.no-bg {\n    background-color: transparent;\n}\n</code></pre>\n\n<p>Full example at this <a href=\"http://jsfiddle.net/lucd/GxG7h/\" rel=\"nofollow\">js fiddle</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Blink functionality can be implemented by plain javascript, no requirement for jquery plugin or even jquery.</p>\n\n<p>This will work in <strong>all the browsers</strong>, as it is using the basic functionality</p>\n\n<p>Here is the code </p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;p id=\"blinkThis\"&gt;This will blink&lt;/p&gt;\n</code></pre>\n\n<p>JS Code:</p>\n\n<pre><code>var ele = document.getElementById('blinkThis');\nsetInterval(function () {\n    ele.style.display = (ele.style.display == 'block' ? 'none' : 'block');\n}, 500);\n</code></pre>\n\n<p>and a <a href=\"http://jsfiddle.net/ptcyu7qq/\" rel=\"nofollow\">working fiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;script type=\"text/javascript\"&gt;\n    function blinker()\n    {\n        if(document.getElementById(\"blink\"))\n        {\n            var d = document.getElementById(\"blink\") ;\n            d.style.color= (d.style.color=='red'?'white':'red');\n            setTimeout('blinker()', 500);\n        }\n    }\n&lt;/script&gt;\n\n&lt;body onload=\"blinker();\"&gt;\n    &lt;div id=\"blink\"&gt;Blinking Text&lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is what ended up working best for me. I used jQuery fadeTo because this is on WordPress, which already links jQuery in.  Otherwise, I probably would have opted for something with pure JavaScript before adding another http request for a plugin.</p>\n\n<pre><code>$(document).ready(function() {\n    // One \"blink\" takes 1.5s\n    setInterval(function(){\n        // Immediately fade to opacity: 0 in 0ms\n        $(\".cursor\").fadeTo( 0, 0);\n        // Wait .75sec then fade to opacity: 1 in 0ms\n        setTimeout(function(){\n            $(\".cursor\").fadeTo( 0, 1);\n        }, 750);\n    }, 1500);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What is an easy way to make text blinking in jQuery and a way to stop it? Must work for IE, FF and Chrome. Thanks</p>\n",
            "last_activity_date": 1426103295,
            "question_id": 1605698,
            "score": 78,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css"
            ],
            "title": "Text blinking jQuery"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>window.getSelection() lets you access the selected text, from there, there's a few things you can do to manipulate it..</p>\n\n<p>Read More: <a href=\"https://developer.mozilla.org/en/DOM/Selection\" rel=\"nofollow\">Developer Mozilla DOM Selection</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>if (window.getSelection) {\n  if (window.getSelection().empty) {  // Chrome\n    window.getSelection().empty();\n  } else if (window.getSelection().removeAllRanges) {  // Firefox\n    window.getSelection().removeAllRanges();\n  }\n} else if (document.selection) {  // IE?\n  document.selection.empty();\n}\n</code></pre>\n\n<p><a href=\"http://groups.google.com/group/jquery-ui-layout/browse_thread/thread/875b5f2ae68821b6\">Credit to Mr. Y.</a></p>\n",
                    "is_accepted": true,
                    "score": 78
                },
                {
                    "body": "<p>Best to test the features you want directly:</p>\n\n<pre><code>var sel = window.getSelection ? window.getSelection() : document.selection;\nif (sel) {\n    if (sel.removeAllRanges) {\n        sel.removeAllRanges();\n    } else if (sel.empty) {\n        sel.empty();\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<h1>State of De-selection Affairs 2014</h1>\n\n<p>I did some research of my own. Here's the function I wrote and am using these days:</p>\n\n<pre><code>(function deselect(){\n  var selection = ('getSelection' in window)\n    ? window.getSelection()\n    : ('selection' in document)\n      ? document.selection\n      : null;\n  if ('removeAllRanges' in selection) selection.removeAllRanges();\n  else if ('empty' in selection) selection.empty();\n})();\n</code></pre>\n\n<p>Basically, <code>getSelection().removeAllRanges()</code> is currently supported by all modern browsers (including IE9+). This is clearly the correct method moving forward. </p>\n\n<p><strong>Compatibility issues accounted for:</strong></p>\n\n<ul>\n<li>Old versions of Chrome and Safari used <code>getSelection().empty()</code></li>\n<li>IE8 and below used <code>document.selection.empty()</code></li>\n</ul>\n\n<h2>Update</h2>\n\n<p>It's probably a good idea to wrap up this selection functionality for re-use.</p>\n\n<pre><code>function ScSelection(){\n  var sel=this;\n  var selection = sel.selection = \n    'getSelection' in window\n      ? window.getSelection()\n      : 'selection' in document\n        ? document.selection\n        : null;\n  sel.deselect = function(){\n    if ('removeAllRanges' in selection) selection.removeAllRanges();\n    else if ('empty' in selection) selection.empty();\n    return sel; // chainable :)\n  };\n  sel.getParentElement = function(){\n    if ('anchorNode' in selection) return selection.anchorNode.parentElement;\n    else return selection.createRange().parentElement();\n  };\n}\n\n// use it\nvar sel = new ScSelection;\nvar $parentSection = $(sel.getParentElement()).closest('section');\nsel.deselect();\n</code></pre>\n\n<p>I've made this a community wiki so that you people can add functionality to this, or update things as the standards evolve.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Here's the accepted answer, but in two lines of code:</p>\n\n<pre><code>var selection = window.getSelection ? window.getSelection() : document.selection ? document.selection : null;\nif(!!selection) selection.empty ? selection.empty() : selection.removeAllRanges();\n</code></pre>\n\n<p>The only check I don't do is for the existence of removeAllRanges - but AFAIK there is no browser that has either <code>window.getSelection</code> or <code>document.selection</code> but <em>doesn't</em> have either a <code>.empty</code> or <code>.removeAllRanges</code> for that property.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Simple question which I can't find the answer to: how can I use JavaScript (or jQuery) to deselect any text which may be selected on a webpage? E.G. user clicks and drags to highlight a bit of text -- I want to have a function deselectAll() which clears this selection. How should I go about writing it?</p>\n\n<p>Thanks for the help.</p>\n",
            "last_activity_date": 1400863189,
            "question_id": 3169786,
            "score": 49,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Clear Text Selection with JavaScript"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You need to be using AJAX. Submitting the form usually results in the browser loading a new page.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I am not sure that you understand what submit() does...</p>\n\n<p>When you do <code>form1.submit();</code> the form information is sent to the webserver.</p>\n\n<p>The WebServer will do whatever its supposed to do and return a brand new webpage to the client(usually the same page with something changed).</p>\n\n<p>So, there is no way you can \"catch\" the return of a form.submit() action.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There is no callback. It's like following a link.</p>\n\n<p>If you want to capture the server response, use AJAX or post it to an Iframe and grab what appears there after the iframe's <code>onload()</code> event.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can do that using javascript and AJAX technology. Have a look at jquery and at this <a href=\"http://malsup.com/jquery/form/\" rel=\"nofollow\">form plug in</a>. You only need to include two js files to register a callback for the form.submit.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You won't be able to do this easily with plain javascript. When you post a form, the form inputs are sent to the server and your page is refreshed - the data is handled on the server side. That is, the <code>submit()</code> function doesn't actually return anything, it just sends the form data to the server.</p>\n\n<p>If you really wanted to get the response in Javascript (without the page refreshing), then you'll need to use AJAX, and when you start talking about using AJAX, you'll <em>need</em> to use a library. <a href=\"http://www.jquery.com\">jQuery</a> is by far the most popular, and my personal favourite. There's a great plugin for jQuery called <a href=\"http://malsup.com/jquery/form/\">Form</a> which will do exactly what it sounds like you want.</p>\n\n<p>Here's how you'd use jQuery and that plugin:</p>\n\n<pre><code>$('#myForm')\n    .ajaxForm({\n        url : 'myscript.php', // or whatever\n        dataType : 'json',\n        success : function (response) {\n            alert(\"The server says: \" + response);\n        }\n    })\n;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 48
                },
                {
                    "body": "<p>An Ajax alternative is to set an invisible <code>&lt;iframe&gt;</code> as your form's target and read the contents of that <code>&lt;iframe&gt;</code> in its <code>onload</code> handler. But why bother when there's Ajax?</p>\n\n<p><strong>Note:</strong> I just wanted to mention this alternative since some of the answers claim that it's <strong>impossible</strong> to achieve this without Ajax.</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>In case you want to capture the output of an AJAX request using Chrome you can follow these simple steps:</p>\n\n<ol>\n<li>Open up the Programmers toolbox</li>\n<li>Go to the console and right anywhere inside it</li>\n<li>In the menu that appears, click \"Enable XMXHTTPRequest Logging\"</li>\n<li>After doing that everytime you make an AJAX request a message starting with \"XHR finished loading:http://......\" will appear in your console.</li>\n<li>Clicking on the link that appears, will bring the \"Resources tab\" where your can see the headers and the content of the response!</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I am doing it this way and its working.</p>\n\n<pre><code>$('#form').submit(function(){\n    $.ajax({\n      url: $('#form').attr('action'),\n      type: post,\n      data : $('#form').serialize(),\n      success: function(){\n        console.log('form submitted.');\n      }\n    });\n    return false;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have the following code:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n        function SubmitForm()\n        {\n\n            form1.submit();\n        }\n\n        function ShowResponse()\n        {\n\n        }\n&lt;/script&gt;\n.\n.\n.\n&lt;div&gt;\n    &lt;a href=\"#\" onclick=\"SubmitForm();\"&gt;Click&lt;/a&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>I want to capture the html response of <code>form1.submit</code>? How do I do this? Can I register any callback function to form1.submit method?</p>\n",
            "last_activity_date": 1395430452,
            "question_id": 374644,
            "score": 34,
            "tags": [
                "javascript",
                "forms",
                "javascript-events",
                "form-submit"
            ],
            "title": "How do I capture response of form.submit"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>Instead of modifying the height and width attributes of the image, try modifying the CSS height and width.</p>\n\n<pre><code>myimg = document.getElementById('myimg');\nmyimg.style.height = \"50px\";\nmyimg.style.width = \"50px\";\n</code></pre>\n\n<p>One common \"gotcha\" is that the height and width styles are strings that include a unit, like \"px\" in the example above.</p>\n\n<p>Edit - I think that setting the height and width directly instead of using style.height and style.width should work. It would also have the advantage of already having the original dimensions. Can you post a bit of your code? Are you sure you're in standards mode instead of quirks mode?</p>\n\n<p>This should work:</p>\n\n<pre><code>myimg = document.getElementById('myimg');\nmyimg.height = myimg.height * 2;\nmyimg.width = myimg.width * 2;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>To modify an image proportionally, simply only alter one of the width/height css properties, leave the other set to auto.</p>\n\n<pre><code>image.style.width = '50%'\nimage.style.height = 'auto'\n</code></pre>\n\n<p>This will ensure that its aspect ratio remains the same.</p>\n\n<p>Bear in mind that browsers tend to <em>suck</em> at resizing images nicely - you'll probably find that your resized image looks horrible.</p>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>Tried the following code, worked OK on IE6 on WinXP Pro SP3.</p>\n\n<pre><code>function Resize(imgId)\n{\n  var img = document.getElementById(imgId);\n  var w = img.width, h = img.height;\n  w /= 2; h /= 2;\n  img.width = w; img.height = h;\n}\n</code></pre>\n\n<p>Also OK in FF3 and Opera 9.26.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>okay it solved, here is my final code</p>\n\n<pre><code>if($(this).width() &gt; $(this).height()) { \n $(this).css('width',MaxPreviewDimension+'px');\n $(this).css('height','auto');\n} else {\n $(this).css('height',MaxPreviewDimension+'px');\n $(this).css('width','auto');\n}\n</code></pre>\n\n<p>Thanks guys </p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<pre><code>function resize_image(image, w, h) {\n\n    if (typeof(image) != 'object') image = document.getElementById(image);\n\n    if (w == null || w == undefined)\n        w = (h / image.clientHeight) * image.clientWidth;\n\n    if (h == null || h == undefined)\n        h = (w / image.clientWidth) * image.clientHeight;\n\n    image.style['height'] = h + 'px';\n    image.style['width'] = w + 'px';\n    return;\n}\n</code></pre>\n\n<p>just pass it either an img DOM element, or the id of an image element, and the new width and height.</p>\n\n<p>or you can pass it either just the width or just the height (if just the height, then pass the width as null or undefined) and it will resize keeping aspect ratio</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use JQuery</p>\n\n<pre><code>var scale=0.5;\n\nminWidth=50;\nminHeight=100;\n\nif($(\"#id img\").width()*scale&gt;minWidth &amp;&amp; $(\"#id img\").height()*scale &gt;minHeight)\n{\n    $(\"#id img\").width($(\"#id img\").width()*scale);\n    $(\"#id img\").height($(\"#id img\").height()*scale);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try this..</p>\n\n<pre><code>&lt;html&gt;\n&lt;body&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction splitString()\n{\nvar myDimen=document.getElementById(\"dimen\").value;\nvar splitDimen = myDimen.split(\"*\");\ndocument.getElementById(\"myImage\").width=splitDimen[0];\ndocument.getElementById(\"myImage\").height=splitDimen[1];\n}\n&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;h2&gt;Norwegian Mountain Trip&lt;/h2&gt;\n&lt;img border=\"0\" id=\"myImage\" src=\"...\" alt=\"Pulpit rock\" width=\"304\" height=\"228\" /&gt;&lt;br&gt;\n&lt;input type=\"text\" id=\"dimen\" name=\"dimension\" /&gt;\n&lt;input type=\"submit\" value=\"Submit\" Onclick =\"splitString()\"/&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>In the text box give the dimension as ur wish, in the format 50*60. Click submit. You will get the resized image. Give your image path in place of dots in the image tag.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You don't have to do it with Javascript. You can just create a CSS class and apply it to your  tag.</p>\n\n<pre><code>.preview_image{\n        width: 300px;\n    height: auto;\n    border: 0px;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Example: How To resize with a percent</p>\n\n<pre><code>&lt;head&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        var CreateNewImage = function (url, value) {\n            var img = new Image;\n            img.src = url;\n            img.width = img.width * (1 + (value / 100));\n            img.height = img.height * (1 + (value / 100));\n\n            var container = document.getElementById (\"container\");\n            container.appendChild (img);\n        }\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;button onclick=\"CreateNewImage ('http://www.medellin.gov.co/transito/images_jq/imagen5.jpg', 40);\"&gt;Zoom +40%&lt;/button&gt;\n    &lt;button onclick=\"CreateNewImage ('http://www.medellin.gov.co/transito/images_jq/imagen5.jpg', 60);\"&gt;Zoom +50%&lt;/button&gt;\n    &lt;div id=\"container\"&gt;&lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>to resize image in javascript:  </p>\n\n<pre><code>$(window).load(function() {\nmitad();doble();\n});\nfunction mitad(){ \n\n    imag0.width=imag0.width/2;\n    imag0.height=imag0.height/2;\n\n    }\nfunction doble(){ \n  imag0.width=imag0.width*2; \n  imag0.height=imag0.height*2;}\n</code></pre>\n\n<p>imag0 is the name of the image:</p>\n\n<pre><code> &lt;img src=\"xxx.jpg\" name=\"imag0\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have <a href=\"http://stackoverflow.com/a/14731922/382536\">answered</a> this question here: <a href=\"http://stackoverflow.com/questions/3971841/how-to-resize-images-proportionally-keeping-the-aspect-ratio/14731922#14731922\">How to resize images proportionally / keeping the aspect ratio?</a>. I am copying it here because I really think it is a very reliable method :)</p>\n\n<pre><code>/**\n* Conserve aspect ratio of the orignal region. Useful when shrinking/enlarging\n* images to fit into a certain area.\n*\n* @param {Number} srcWidth Source area width\n* @param {Number} srcHeight Source area height\n* @param {Number} maxWidth Fittable area maximum available width\n* @param {Number} maxHeight Fittable area maximum available height\n* @return {Object} { width, heigth }\n*\n*/\nfunction calculateAspectRatioFit(srcWidth, srcHeight, maxWidth, maxHeight) {\n\n    var ratio = [maxWidth / srcWidth, maxHeight / srcHeight ];\n    ratio = Math.min(ratio[0], ratio[1]);\n\n    return { width:srcWidth*ratio, height:srcHeight*ratio };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>this works for all cases</p>\n\n<pre><code>function resizeImg(imgId) {\nvar img = document.getElementById(imgId);\nvar $img = $(img);\nvar maxWidth = 110;\nvar maxHeight = 100;\nvar width = img.width;\nvar height = img.height;\nvar aspectW = width / maxWidth;\nvar aspectH = height / maxHeight;\n\nif (aspectW &gt; 1 || aspectH &gt; 1) {\n    if (aspectW &gt; aspectH) {\n        $img.width(maxWidth);\n        $img.height(height / aspectW);\n    }\n    else {\n        $img.height(maxHeight);\n        $img.width(width / aspectH);\n    }\n}\n</code></pre>\n\n<p>}</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>does anyone knows how to resize image proportionaly using javascript?, i have tried to modify the DOM adding attributes height &amp; Width on the fly, but seems did not work on IE6</p>\n",
            "last_activity_date": 1396016991,
            "question_id": 170624,
            "score": 29,
            "tags": [
                "javascript",
                "image-manipulation"
            ],
            "title": "javascript Image Resize"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Five ways:</p>\n\n<ol>\n<li><p>Declare it as global variable in the parent JSF page.</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"script.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    var messages = [];\n    &lt;ui:repeat value=\"#{bean.messages}\" var=\"message\"&gt;\n        messages['#{message.key}'] = '#{message.value}';\n    &lt;/ui:repeat&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>Or, if it's in JSON format already.</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"script.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;var messages = #{bean.messagesAsJson};&lt;/script&gt;\n</code></pre></li>\n<li><p>Put the whole <code>&lt;script&gt;</code> in a XHTML file and use <code>ui:include</code> to include it.</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"script.js\"&gt;&lt;/script&gt;\n&lt;ui:include src=\"script-variables.xhtml\" /&gt;\n</code></pre></li>\n<li><p>Pass <code>*.js</code> through the <code>JspServlet</code> (only if it's enough to evaluate only the <code>${}</code> expressions). E.g. in <code>web.xml</code> (the <code>&lt;servlet-name&gt;</code> of <code>JspServlet</code> can be found in <code>web.xml</code> of the servletcontainer in question, it's usually <code>jsp</code>).</p>\n\n<pre><code>&lt;servlet-mapping&gt;\n    &lt;servlet-name&gt;jsp&lt;/servlet-name&gt;\n    &lt;url-pattern&gt;*.js&lt;/url-pattern&gt;\n&lt;/servlet-mapping&gt;\n</code></pre></li>\n<li><p>Make use of \"good old\" JSP with a modified content type. Rename <code>script.js</code> to <code>script.jsp</code> and add the following line to top of JSP (only if it's enough to evaluate only the <code>${}</code> expressions):</p>\n\n<pre><code>&lt;%@page contentType=\"text/javascript\" %&gt;\n</code></pre></li>\n<li><p>Let JS obtain the data ajaxically during load. Here's a <a href=\"http://jquery.com\" rel=\"nofollow\">jQuery</a> targeted example.</p>\n\n<pre><code>$.getJSON('json/messages', function(messages) {\n    $.each(messages, function(key, value) {\n        $.messages[key] = value;\n    });\n});\n</code></pre></li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>Since I don't like techniques that won't let the browser cache the localized Strings, I used the following technique to localize JS alerts etc. . It seems a good fit if the Strings that you need in your Javascript are different from the ones needed by the Web server:</p>\n\n<pre><code>&lt;h:head&gt;\n    &lt;h:outputScript library=\"javascript\" name=\"#{fw.JsFwStrings}\" /&gt;\n    ...\n</code></pre>\n\n<p>I then assign the resource string JsFwStrings to the filename of the JS file defining the localized strings for the given language.</p>\n\n<p>For example, the fw_en.properties file contains the entry\n   JsFwStrings=JsFwStrings_en.js</p>\n\n<p>and the JsFwStrings_en.js file contains</p>\n\n<pre><code>var TosFramework = TosFramework || {};\nTosFramework.Strings = {\n    UnSavedChangesWarning : 'You have unsaved changes.',\n    CancelConfirmQuestion : 'Are you sure you want to cancel?'\n} \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I was wondering if anyone out there knew of a way to have EL expressions in included JavaScript files be evaluated by JSF. I was hoping that Seam might have a way around this but no luck so far. All I want is to be able to use localized messages in my JavaScript functions which are shared across pages.</p>\n",
            "last_activity_date": 1416897823,
            "question_id": 2547814,
            "score": 27,
            "tags": [
                "javascript",
                "jsf",
                "seam",
                "el"
            ],
            "title": "Mixing JSF EL in a Javascript file"
        },
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p>Remove half the code and see if it still happens. If not, it's in the half you removed. Repeat until you figure out what code block is causing the problem.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>It is usually an infinite loop that causes this. Check your loops and their exit conditions.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I don't believe there's a tool that can find the offending script. You might try attaching an IE debugger like Visual Studio and maybe it will break at the point where the problem is occurring. But I can't give any guarantees on that working.</p>\n\n<p>In the past when I've had similar problems I've simply commented out sections of code to test narrow down where the issue is occurring, usually in a binary search type pattern. Comment out half of the javascript libraries, etc...</p>\n\n<p>Aside from that as others have said, this type of problem occurs from large loops and many setTimeout function calls or setTimeout recursive loops.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If javascript ties up page processing for more than 10 seconds, you get this message. IE obviously has a slower javascript engine, causing this.</p>\n\n<p>I'm guessing that some code optimization will certainly help, and try reducing the amount of javascript executing on page load. Perhaps use setTimeout() to defer processing of some unnecessary things if you have to.</p>\n\n<p>As far as tools go, use Firebug's profiler to see where you're spending so much time.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Get yourself a copy of the IBM Page Profiler:</p>\n\n<p><a href=\"https://www.ibm.com/developerworks/community/groups/service/html/communityview?communityUuid=61d74777-1701-4014-bfc0-96067ed50156\">https://www.ibm.com/developerworks/community/groups/service/html/communityview?communityUuid=61d74777-1701-4014-bfc0-96067ed50156</a></p>\n\n<p>It's free (always a win).  Start it up in the background, give it a few seconds, then refresh the page in IE.  Go back to the profiler and it will list out all the resources used on the page and give you detailed profile information - in particular where JavaScript is taking a long time to execute.  </p>\n\n<p>It should be a good start to finding the source of your problem.</p>\n\n<p>If the script tags are inline, I'd suggest creating a local copy of the file and separating out the script tags to separate files if you can.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>For IE, the dialog is based on the # of JS commands processed. See here for info &amp; method to change default: <a href=\"http://support.microsoft.com/kb/175500\" rel=\"nofollow\">http://support.microsoft.com/kb/175500</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Long running scripts are detected differently by different browsers:</p>\n\n<ul>\n<li>IE will raise the warning once 5 million statements have been executed (<a href=\"http://support.microsoft.com/kb/175500\">more info on MSDN</a>)</li>\n<li>Firefox will warn if the script takes longer than 10 seconds (<a href=\"http://support.mozilla.com/en-US/kb/Warning%20Unresponsive%20script\">more info on MDN</a>)</li>\n<li>Safari will warn if the script takes longer than 5 seconds</li>\n<li>Chrome (1.0) has no set limit and will simply keep trying until an OutOfMemory exception at which point it crashes</li>\n<li>Opera will just continue to run forever, without warning.</li>\n</ul>\n\n<p><a href=\"http://www.nczonline.net/blog/2009/01/05/what-determines-that-a-script-is-long-running/\">Nicholas Zakas has written an excellent article covering this topic.</a></p>\n\n<p>As such - the best way to avoid these problems is by reducing looping, recursion and DOM manipulation.</p>\n",
                    "is_accepted": false,
                    "score": 48
                },
                {
                    "body": "<p>I just <a href=\"http://www.picnet.com.au/blogs/Guido/post/2010/03/04/How-to-prevent-Stop-running-this-script-message-in-browsers.aspx\" rel=\"nofollow\">blogged about this</a> and put what I think is a pretty stylish solution. So have a look. As mentioned above my solution just breaks up long running operations into chunks but I provide a nice utility class to do this.</p>\n\n<p>Thanks</p>\n\n<p>Guido</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you have control over the JavaScript, you could break it into separate scripts or try a Lazy Load approach.</p>\n\n<p>Just my $.02</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>you can also check if there is a google analytics javascript include in your page. The bug occured only with IE and once the google code was removed, it worked!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Make sure that below JavaScript code is run only once:</p>\n\n<pre><code>Sys.WebForms.PageRequestManager.getInstance().add_pageLoaded(win_onload);\n</code></pre>\n\n<p>Above code is inside the function <code>win_onload()</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In my case having too many ASP.NET HoverMenuExtender controls in a GridView bound to a lot of rows was causing extremely slow performance. I removed the HoverMenuExtender and my speed issues (and the dialog) went away. Not quite related to why the dialog pops up, but it might help someone.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I found that adding alert('before X') alert('after X') was helpful for me to find my issue.  I added them to my $(function () {</p>\n\n<p>}</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>@nikmd23 answer is informative..</p>\n\n<p>My 2 cents here... I had the script warning issue - due to loading a <code>dropdown list</code> items with the help of <code>for</code> loop.</p>\n\n<p>I referred @Eric Leschinski post in  <a href=\"http://stackoverflow.com/questions/4460263/disabling-the-long-running-script-message-in-internet-explorer\">Disabling the long-running-script message in Internet Explorer</a>. </p>\n\n<p>Refer <a href=\"http://stackoverflow.com/questions/24847655/settimeout-for-loading-items-in-a-dropdown-list\">setTimeout for loading items in a dropdown list</a> to see how I resolved this problem</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There are few reason for this kind of alert </p>\n\n<ol>\n<li><p>No. of JS instructions executed by IE exceeds predefined limits. This can be fixed by editing windows registry see <a href=\"http://support.microsoft.com/default.aspx?scid=kb;en-us;175500\" rel=\"nofollow\">Here</a></p></li>\n<li><p>Optimize the javascript code so that execution time is reduced.</p></li>\n<li>JS code optimization is a real trial and error subject and there are few thumb rules to do so. Just Google it.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>The problem is in the title - IE is misbehaving and is saying that there is a script running slowly - FF and Chrome don't have this problem.</p>\n\n<p>How can I find the problem . .there's a lot of JS on that page. Checking by hand is not a good ideea</p>\n\n<p><strong>EDIT :</strong> It's a page from a project i'm working on... but I need a tool to find the problem.</p>\n\n<p><strong>End :</strong> It turned out to be the UpdatePanel - somehow it would get \"confused\" and would take too long to process something. I just threw it out the window - will only use JQuery from now on :D.</p>\n\n<p>And I'm selecting Remy Sharp's answere because I really didn't know about the tool and it seems pretty cool.</p>\n",
            "last_activity_date": 1410876650,
            "question_id": 212550,
            "score": 27,
            "tags": [
                "javascript",
                "internet-explorer"
            ],
            "title": "a script on this page is causing ie to run slowly"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>[a-z0-9-_]\n</code></pre>\n\n<p>This is wrong,  The last <code>-</code> must be at the beginning or end.</p>\n\n<pre><code>[a-z0-9_-]\n</code></pre>\n\n<p>Whether that would cause this problem or not, I don't know.</p>\n\n<p>Additional notes:</p>\n\n<p>The first and last characters are allowed to be any character that isn't <code>-</code> or <code>_</code> rather than being restricted to <code>a-z0-9</code></p>\n\n<p><code>a-z0-9</code> doesn't include uppercase characters.  You need <code>a-zA-Z0-9</code> for that.\n<code>a-zA-Z0-9_</code> can be shortened to <code>\\w</code> in most RegEx engines.  I haven't tried it in JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>/^[^-_]([a-z0-9-_]{4,20})[^-_]$/gi;\n</code></pre>\n\n<p>You're using a <code>g</code> (global) <code>RegExp</code>. In JavaScript, global regexen have state: you call them (with <code>exec</code>, <code>test</code> etc.) the first time, you get the first match in a given string. Call them again and you get the next match, and so on until you get no match and it resets to the start of the next string. You can also write <code>regex.lastIndex= 0</code> to reset this state.</p>\n\n<p>(This is of course an absolutely terrible piece of design, guaranteed to confuse and cause weird errors. Welcome to JavaScript!)</p>\n\n<p>You can omit the <code>g</code> from your <code>RegExp</code>, since you're only testing for one match.</p>\n\n<p>Also, I don't think you want <code>[^-_]</code> at the front and back. That will allow <em>any</em> character at each end, ie. <code>*plop!</code> would be valid. You're probably thinking of lookahead/lookbehind assertions, but they're not available in JavaScript. (Well, lookahead is supposed to be, but it's broken in IE.) Suggest instead:</p>\n\n<pre><code>/^[a-z0-9][a-z0-9_-]{2,18}[a-z0-9]$/i\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 47
                }
            ],
            "body": "<p>I have a strange problem with the validation I am writing on a form. It is a 'Check Username' button next to an input. The input default value is the username for example 'betamax'. When I press 'Check Username' it passes the regex and sends the username to the server. The server behaves as expected and returns '2' to tell the javascript that they are submitting their own username.</p>\n\n<p>Then, when I click the button again, the regex fails. Nothing is sent to the server obviously because the regex has failed. If I press the button again, the regex passes and then the username is sent to the server.</p>\n\n<p>I literally cannot figure out what would be making it do this! It makes no sense to me!</p>\n\n<p>Edit: I've tested the problem in Firefox and Chrome (mac)</p>\n\n<p>This is my code: </p>\n\n<pre><code>$j(\"#username-search\").click(checkUserName);\n\nfunction checkUserName() {\n    var userName = $j(\"#username\").val();\n\n\n    var invalidUserMsg = 'Invalid username (a-zA-Z0-9 _ - and not - or _ at beginning or end of string)';\n    var filter = /^[^-_]([a-z0-9-_]{4,20})[^-_]$/gi;\n    if (filter.test(userName)) {\n        console.log(\"Pass\")\n        $j.post(\n        \"/account/profile/username_check/\", \n        { q: userName }, \n        function(data){\n            if(data == 0) {\n                $j(\"#username-search-results\").html(\"Error searching for username. Try again?\");\n            }\n            else if(data == 5) {\n                $j(\"#username-search-results\").html(invalidUserMsg);\n            }\n            else if(data == 4) {\n                $j(\"#username-search-results\").html(\"Username too short or too long.\");\n            }\n            else if(data == 2) {\n                $j(\"#username-search-results\").html(\"This is already your username.\");\n            }\n            else if(data == 3) {\n                $j(\"#username-search-results\").html(\"This username is taken.\");\n            }\n            else if(data == 1){\n                $j(\"#username-search-results\").html(\"This username is available!\");\n            }\n        });\n    } else {\n        console.log(\"fail\")\n        $j(\"#username-search-results\").html(invalidUserMsg);\n    }\n\n    return false;\n\n}\n</code></pre>\n\n<p>The HTML:</p>\n\n<pre><code>&lt;input name=\"username\" id=\"username\" value=\"{{ user.username }}\" /&gt;\n&lt;input type=\"button\" value=\"Is it taken?\" id=\"username-search\"&gt;\n&lt;span id=\"username-search-results\"&gt;&lt;/span&gt;\n</code></pre>\n",
            "last_activity_date": 1271170906,
            "question_id": 2630418,
            "score": 26,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "ajax",
                "regex"
            ],
            "title": "Javascript regex returning true.. then false.. then true.. etc"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>One piece of the puzzle:</p>\n\n<pre><code>/**\n * Determines if a form is dirty by comparing the current value of each element\n * with its default value.\n *\n * @param {Form} form the form to be checked.\n * @return {Boolean} &lt;code&gt;true&lt;/code&gt; if the form is dirty, &lt;code&gt;false&lt;/code&gt;\n *                   otherwise.\n */\nfunction formIsDirty(form)\n{\n    for (var i = 0; i &lt; form.elements.length; i++)\n    {\n        var element = form.elements[i];\n        var type = element.type;\n        if (type == \"checkbox\" || type == \"radio\")\n        {\n            if (element.checked != element.defaultChecked)\n            {\n                return true;\n            }\n        }\n        else if (type == \"hidden\" || type == \"password\" || type == \"text\" ||\n                 type == \"textarea\")\n        {\n            if (element.value != element.defaultValue)\n            {\n                return true;\n            }\n        }\n        else if (type == \"select-one\" || type == \"select-multiple\")\n        {\n            for (var j = 0; j &lt; element.options.length; j++)\n            {\n                if (element.options[j].selected !=\n                    element.options[j].defaultSelected)\n                {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\n</code></pre>\n\n<p><a href=\"http://developer.mozilla.org/en/DOM/window.onbeforeunload\">And another</a>:</p>\n\n<pre><code>window.onbeforeunload = function(e)\n{\n    e = e || window.event;  \n    if (formIsDirty(document.forms[\"someFormOfInterest\"]))\n    {\n        // For IE and Firefox\n        if (e)\n        {\n            e.returnValue = \"You have unsaved changes.\";\n        }\n        // For Safari\n        return \"You have unsaved changes.\";\n    }\n};\n</code></pre>\n\n<p>Wrap it all up, and what do you get?</p>\n\n<pre><code>var confirmExitIfModified = (function()\n{\n    function formIsDirty(form)\n    {\n        // ...as above\n    }\n\n    return function(form, message)\n    {\n        window.onbeforeunload = function(e)\n        {\n            e = e || window.event;\n            if (formIsDirty(document.forms[form]))\n            {\n                // For IE and Firefox\n                if (e)\n                {\n                    e.returnValue = message;\n                }\n                // For Safari\n                return message;\n            }\n        };\n    };\n})();\n\nconfirmExitIfModified(\"someForm\", \"You have unsaved changes.\");\n</code></pre>\n\n<p>You'll probably also want to change the registration of the <code>beforeunload</code> event handler to use <code>LIBRARY_OF_CHOICE</code>'s event registration.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>If you use jQuery, here's an easy trick:</p>\n\n<pre><code>$('input:text,input:checkbox,input:radio,textarea,select').one('change',function() {\n  $('BODY').attr('onbeforeunload',\"return 'Leaving this page will cause any unsaved data to be lost.';\");\n});\n</code></pre>\n\n<p>But just remember, if you have a condition where you redirect from this page, or you want to permit a successful form post, you need to do this before that redirect or submit event like so:</p>\n\n<pre><code>$('BODY').removeAttr('onbeforeunload');\n</code></pre>\n\n<p>...or you'll get yourself in a loop where it keeps asking you the prompt.</p>\n\n<p>In my case, I had a big app and I was doing location.href redirects in Javascript, as well as form posting, and then some AJAX submits that then come back with a success response inline in the page. In any of those conditions, I had to capture that event and use the removeAttr() call.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Wanted to expand slightly on Volomike excellent jQuery code. </p>\n\n<p>So with this, we have a very very cool and elegant mechanism to accomplish the objective of preventing inadvertent data loss through navigating away from updated data prior to saving \u2013 ie. updated field on a page, then click on a button, link or even the back button in the browser before clicking the Save button.</p>\n\n<p>The only thing you need to do is add a \u201cnoWarn\u201d class tag to all controls ( especially Save buttons ) that do a post back to the website, that either save or do not remove any updated data.  </p>\n\n<p>If the control causes the page to lose data, ie. navigates to the next page or clears the data \u2013 you do not need to do anything, as the scripts will automatically show the warning message.</p>\n\n<p>Awesome!  Well done Volomike!</p>\n\n<p>Simply have the jQuery code as follows:</p>\n\n<pre><code>$(document).ready(function() {\n\n    //----------------------------------------------------------------------\n    // Don't allow us to navigate away from a page on which we're changed\n    //  values on any control without a warning message.  Need to class our \n    //  save buttons, links, etc so they can do a save without the message - \n    //  ie. CssClass=\"noWarn\"\n    //----------------------------------------------------------------------\n    $('input:text,input:checkbox,input:radio,textarea,select').one('change', function() {\n        $('BODY').attr('onbeforeunload',\n        \"return 'Leaving this page will cause any unsaved data to be lost.';\");\n    });\n\n    $('.noWarn').click(function() { $('BODY').removeAttr('onbeforeunload'); });\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Additional to Lance's answer, I just spent an afternoon trying to get this snippet running.\nFirstly, jquery 1.4 seems to have bugs with binding the change event (as of Feb '10). jQuery 1.3 is OK.\nSecondly, I can't get jquery to bind the onbeforeunload/beforeunload (I suspect IE7, which I'm using). I've tried different selectors, (\"body\"), (window).  I've tried '.bind', '.attr'.\nReverting to pure js worked (I also saw a few similar posts on SO about this problem):</p>\n\n<pre><code>$(document).ready(function() {\n    $(\":input\").one(\"change\", function() {\n        window.onbeforeunload = function() { return 'You will lose data changes.'; }\n    });\n    $('.noWarn').click(function() { window.onbeforeunload = null; });\n});\n</code></pre>\n\n<p>Note I've also used the ':input' selector rather than enumerating all the input types.  Strictly overkill, but I thought it was cool :-)</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I made one more slight improvement to the jQuery implementations listed on this page. My implementation will handle if you have <strong>client-side ASP.NET page validation</strong> enabled and being used on a page.</p>\n\n<p>It avoids the \"error\" of clearing the <code>onBeforeLeave</code> function when the page doesn't actually post on click due to a validation failure. Simply use the <code>no-warn-validate</code> class on buttons/links that cause validation. It still has the <code>no-warn</code> class to use on controls that have <code>CausesValidation=false</code> (e.g. a \"Save as Draft\" button). This pattern could probably be used for other validation frameworks other than ASP.NET, so I post here for reference.</p>\n\n<pre><code> function removeCheck() { window.onbeforeunload = null; }\n\n$(document).ready(function() {\n    //-----------------------------------------------------------------------------------------\n    // Don't allow navigating away from page if changes to form are made. Save buttons, links,\n    // etc, can be given \"no-warn\" or \"no-warn-validate\" css class to prevent warning on submit.\n    // \"no-warn-validate\" inputs/links will only remove warning after successful validation\n    //-----------------------------------------------------------------------------------------\n    $(':input').one('change', function() {\n        window.onbeforeunload = function() {\n            return 'Leaving this page will cause edits to be lost.';\n        }\n    });\n\n    $('.no-warn-validate').click(function() {\n        if (Page_ClientValidate == null || Page_ClientValidate()) { removeCheck(); }\n    });\n\n    $('.no-warn').click(function() { removeCheck() });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've created a jQuery <a href=\"http://kenbrowning.blogspot.com/2010/03/how-to-warn-users-of-unsaved-changes.html\" rel=\"nofollow\">plug-in</a> which can be used to implement a warn-on-unsaved-changes feature for web applications.  It supports postbacks.  It also includes a link to information on how to normalize behavior of the <code>onbeforeunload</code> event of Internet Explorer.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>We have a typical web application that is essentially a data entry application with lots of screens some of which have some degree of complexity.  We need to provide that standard capability on making sure if the user forgets to click the \"Save\" button before navigating away or closing their browser they get a warning and can cancel (but only when there is unsaved or dirty data).</p>\n\n<p>I know the basics of what I've got to do-- in fact I'm sure I've done it all before over the years (tie in to onbeforeunload, track the \"dirty\" state of the page, etc...) but before I embark on coding this YET AGAIN, does anyone have some suggestions for libraries already out there (free or otherwise) that will help out?</p>\n",
            "last_activity_date": 1386489377,
            "question_id": 140460,
            "score": 16,
            "tags": [
                "javascript",
                "data-protection"
            ],
            "title": "Client/JS Framework for &quot;Unsaved Data&quot; Protection?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>This isn't a direct answer, but check out <a href=\"http://raphaeljs.com/\" rel=\"nofollow\">Raphael</a> and <a href=\"http://www.pixastic.com/\" rel=\"nofollow\">Pixastic</a>.  Both are JS libraries that might help you out with what you're looking for.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think you will never get an accurate result... I spent some time investigating how to do 3d graphics using canvas 2d context and I found it viable to do texture mapping gouraud shading by computing appropriate 2d gradients and matrices:</p>\n\n<ul>\n<li>Solid polygons are of course easy</li>\n<li>Gouraud filling is possible only on one component (i.e. you cannot have a triangle where every vertex is an arbitrary RGB filled with bilinear interpolation, but you can do that filling using for example three arbitrary shades of a single color)</li>\n<li>Linear texture mapping can be done using clipping and image drawing</li>\n</ul>\n\n<p>I would implement perspective-correct texture mapping using mesh subdivision (like on PS1).</p>\n\n<p>However I found many problems... for example image drawing with a matrix transform (needed for texture mapping) is quite inaccurate on chrome and IMO it's impossible to get a pixel-accurate result; in general there is no way to turn off antialiasing when drawing on a canvas and this means you will get visible see-through lines when subdividing in triangles. I also found multipass rendering working really bad on chrome (probably because of how hw-accellerated rendering is implemented).</p>\n\n<p>In general this kind of rendering is surely a stress for web browsers and apparently these use cases (strange matrices for example) are not tested very well. I was even able to get Firefox crashing so bad that it took down the whole X susbsystem on my Ubuntu.</p>\n\n<p>You can see the results of my efforts <a href=\"http://raksy.dyndns.org/torus.html\">here</a> or as a video <a href=\"http://www.youtube.com/watch?v=XHT23NnW-EY\">here</a>... IMO is surely impressing that this can be done in a browser without using 3D extensions, but I don't think current problems will be fixed in the future.</p>\n\n<p>Anyway the basic idea used to draw an image so that the 4 corners ends up in specific pixels position is to draw two triangles, each of which will use bilinear interpolation.</p>\n\n<p>In the following code I assume you have a picture object <code>texture</code> and 4 corners each of which is an object with fields <code>x,y,u,v</code> where <code>x,y</code> are pixel coordinates on the target canvas and <code>u,v</code> are pixel coordinates on <code>texture</code>:</p>\n\n<pre><code>function textureMap(ctx, texture, pts) {\n    var tris = [[0, 1, 2], [2, 3, 0]]; // Split in two triangles\n    for (var t=0; t&lt;2; t++) {\n        var pp = tris[t];\n        var x0 = pts[pp[0]].x, x1 = pts[pp[1]].x, x2 = pts[pp[2]].x;\n        var y0 = pts[pp[0]].y, y1 = pts[pp[1]].y, y2 = pts[pp[2]].y;\n        var u0 = pts[pp[0]].u, u1 = pts[pp[1]].u, u2 = pts[pp[2]].u;\n        var v0 = pts[pp[0]].v, v1 = pts[pp[1]].v, v2 = pts[pp[2]].v;\n\n        // Set clipping area so that only pixels inside the triangle will\n        // be affected by the image drawing operation\n        ctx.save(); ctx.beginPath(); ctx.moveTo(x0, y0); ctx.lineTo(x1, y1);\n        ctx.lineTo(x2, y2); ctx.closePath(); ctx.clip();\n\n        // Compute matrix transform\n        var delta = u0*v1 + v0*u2 + u1*v2 - v1*u2 - v0*u1 - u0*v2;\n        var delta_a = x0*v1 + v0*x2 + x1*v2 - v1*x2 - v0*x1 - x0*v2;\n        var delta_b = u0*x1 + x0*u2 + u1*x2 - x1*u2 - x0*u1 - u0*x2;\n        var delta_c = u0*v1*x2 + v0*x1*u2 + x0*u1*v2 - x0*v1*u2\n                      - v0*u1*x2 - u0*x1*v2;\n        var delta_d = y0*v1 + v0*y2 + y1*v2 - v1*y2 - v0*y1 - y0*v2;\n        var delta_e = u0*y1 + y0*u2 + u1*y2 - y1*u2 - y0*u1 - u0*y2;\n        var delta_f = u0*v1*y2 + v0*y1*u2 + y0*u1*v2 - y0*v1*u2\n                      - v0*u1*y2 - u0*y1*v2;\n\n        // Draw the transformed image\n        ctx.transform(delta_a/delta, delta_d/delta,\n                      delta_b/delta, delta_e/delta,\n                      delta_c/delta, delta_f/delta);\n        ctx.drawImage(texture, 0, 0);\n        ctx.restore();\n    }\n}\n</code></pre>\n\n<p>Those ugly strange formulas for all those \"delta\" variables are used to solve two linear systems of three equations in three unknowns using <a href=\"http://en.wikipedia.org/wiki/Cramer%27s_rule\">Cramer's</a> method and <a href=\"http://en.wikipedia.org/wiki/Rule_of_Sarrus\">Sarrus</a> scheme for 3x3 determinants.</p>\n\n<p>More specifically we are looking for the values of <code>a</code>, <code>b</code>, ... <code>f</code> so that the following equations are satisfied</p>\n\n<pre><code>a*u0 + b*v0 + c = x0\na*u1 + b*v1 + c = x1\na*u2 + b*v2 + c = x2\n\nd*u0 + e*v0 + f = y0\nd*u1 + e*v1 + f = y1\nd*u2 + e*v2 + f = y2\n</code></pre>\n\n<p><code>delta</code> is the determinant of the matrix</p>\n\n<pre><code>u0  v0  1\nu1  v1  1\nu2  v2  1\n</code></pre>\n\n<p>and for example <code>delta_a</code> is the determinant of the same matrix when you replace the first column with <code>x0</code>, <code>x1</code>, <code>x2</code>. With these you can compute <code>a = delta_a / delta</code>.</p>\n",
                    "is_accepted": true,
                    "score": 31
                }
            ],
            "body": "<p>In a 3D engine I'm working on I've succesfully managed to draw a cube in 3D. The only method to fill the sides is using either a solid color or gradient as far as I'm concerned. To make things more exciting, I'd really love to implement texture mapping using a simple bitmap.</p>\n\n<p>The point is that I can hardly find any articles or code samples on the subject of image manipulation in JavaScript. Moreover, image support in HTML5 canvas seems to be restricted to cropping.</p>\n\n<p>How could I go about stretching a bitmap so that a rectangular bitmap can fill up a unregular cube face? In 2D, a projected square cube face is, due to perspective, not of a square shape, so I'll have to stretch it to make it fit in any quadrilateral.</p>\n\n<p>Hopefully this image clarifies my point. The left face is now filled up with a white/black gradient. How could I fill it with a bitmap, after it has been texture-mapped?</p>\n\n<p><img src=\"http://i.stack.imgur.com/M5omO.png\" alt=\"Cube\"></p>\n\n<p>Does anyone have any tips on perspective texture mapping (or image manipulation at all) using JavaScript and HTML5 Canvas?</p>\n\n<p><strong>Edit:</strong> I got it working, thanks to 6502!</p>\n\n<p>It is, however, rather CPU intensive so I'd love to hear any optimization ideas.</p>\n\n<p><a href=\"http://i.stack.imgur.com/Uwb86.png\">Result using 6502's technique</a> - <a href=\"http://farm4.static.flickr.com/3593/3491018590_866b089479_z.jpg?zz=1\">Texture image used</a></p>\n",
            "last_activity_date": 1319813099,
            "question_id": 4774172,
            "score": 12,
            "tags": [
                "javascript",
                "html5",
                "3d",
                "texture-mapping",
                "html5-canvas"
            ],
            "title": "Image manipulation and texture mapping using HTML5 Canvas?"
        },
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p>The standard Javascript doesn't have a built-in function to generate ranges.  Several javascript frameworks add support for such features, including <a href=\"http://www.prototypejs.org/\">Prototype.js</a>.</p>\n\n<p>If you'd like to double-check, the definitive resource is the <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\">ECMA-262 Standard</a>.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>It works for characters and numbers, going forwards or backwards with an optional step.</p>\n\n<pre><code>var range = function(start, end, step) {\n    var range = [];\n    var typeofStart = typeof start;\n    var typeofEnd = typeof end;\n\n    if (step === 0) {\n        throw TypeError(\"Step cannot be zero.\");\n    }\n\n    if (typeofStart == \"undefined\" || typeofEnd == \"undefined\") {\n        throw TypeError(\"Must pass start and end arguments.\");\n    } else if (typeofStart != typeofEnd) {\n        throw TypeError(\"Start and end arguments must be of same type.\");\n    }\n\n    typeof step == \"undefined\" &amp;&amp; (step = 1);\n\n    if (end &lt; start) {\n        step = -step;\n    }\n\n    if (typeofStart == \"number\") {\n\n        while (step &gt; 0 ? end &gt;= start : end &lt;= start) {\n            range.push(start);\n            start += step;\n        }\n\n    } else if (typeofStart == \"string\") {\n\n        if (start.length != 1 || end.length != 1) {\n            throw TypeError(\"Only strings with one character are supported.\");\n        }\n\n        start = start.charCodeAt(0);\n        end = end.charCodeAt(0);\n\n        while (step &gt; 0 ? end &gt;= start : end &lt;= start) {\n            range.push(String.fromCharCode(start));\n            start += step;\n        }\n\n    } else {\n        throw TypeError(\"Only string and number types are supported\");\n    }\n\n    return range;\n\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/ZaZAZ/\">jsFiddle</a>.</p>\n\n<p>If augmenting native types is your thing, then assign it to <code>Array.range</code>.</p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<pre><code>Array.range= function(a, b, step){\n    var A= [];\n    if(typeof a== 'number'){\n        A[0]= a;\n        step= step || 1;\n        while(a+step&lt;= b){\n            A[A.length]= a+= step;\n        }\n    }\n    else{\n        var s= 'abcdefghijklmnopqrstuvwxyz';\n        if(a=== a.toUpperCase()){\n            b=b.toUpperCase();\n            s= s.toUpperCase();\n        }\n        s= s.substring(s.indexOf(a), s.indexOf(b)+ 1);\n        A= s.split('');        \n    }\n    return A;\n}\n\n\n    Array.range(0,10);\n    // [0,1,2,3,4,5,6,7,8,9,10]\n\n    Array.range(-100,100,20);\n    // [-100,-80,-60,-40,-20,0,20,40,60,80,100]\n\n    Array.range('A','F');\n    // ['A','B','C','D','E','F')\n\n    Array.range('m','r');\n    // ['m','n','o','p','q','r']\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Use the underscore.js <a href=\"http://underscorejs.org/#range\"><code>_.range()</code></a> function.</p>\n\n<p>Or without a library: </p>\n\n<pre><code>Array.apply(null, Array(5)).map(function (_, i) {return i;});\n&gt;[0,1,2,3,4]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 98
                },
                {
                    "body": "<p>Using <a href=\"http://wiki.ecmascript.org/doku.php?id=harmony%3agenerators\" rel=\"nofollow\">Harmony generators</a>, <a href=\"http://kangax.github.io/es5-compat-table/es6/\" rel=\"nofollow\">current browser support is zero or very low</a>:</p>\n\n<pre><code>var take = function (amount, generator) {\n    var a = [];\n\n    try {\n        while (amount) {\n            a.push(generator.next());\n            amount -= 1;\n        }\n    } catch (e) {}\n\n    return a;\n};\n\nvar takeAll = function (gen) {\n    var a = [],\n        x;\n\n    try {\n        do {\n            x = a.push(gen.next());\n        } while (x);\n    } catch (e) {}\n\n    return a;\n};\n\nvar range = (function (d) {\n    var unlimited = (typeof d.to === \"undefined\");\n\n    if (typeof d.from === \"undefined\") {\n        d.from = 0;\n    }\n\n    if (typeof d.step === \"undefined\") {\n        if (unlimited) {\n            d.step = 1;\n        }\n    } else {\n        if (typeof d.from !== \"string\") {\n            if (d.from &lt; d.to) {\n                d.step = 1;\n            } else {\n                d.step = -1;\n            }\n        } else {\n            if (d.from.charCodeAt(0) &lt; d.to.charCodeAt(0)) {\n                d.step = 1;\n            } else {\n                d.step = -1;\n            }\n        }\n    }\n\n    if (typeof d.from === \"string\") {\n        for (let i = d.from.charCodeAt(0); (d.step &gt; 0) ? (unlimited ? true : i &lt;= d.to.charCodeAt(0)) : (i &gt;= d.to.charCodeAt(0)); i += d.step) {\n            yield String.fromCharCode(i);\n        }\n    } else {\n        for (let i = d.from; (d.step &gt; 0) ? (unlimited ? true : i &lt;= d.to) : (i &gt;= d.to); i += d.step) {\n            yield i;\n        }\n    }\n});\n</code></pre>\n\n<h2>Examples</h2>\n\n<p><strong>take</strong></p>\n\n<p><em>Example 1.</em></p>\n\n<p><code>take</code> only takes as much as it can get</p>\n\n<p><code>take(10, range( {from: 100, step: 5, to: 120} ) )</code> </p>\n\n<p>returns </p>\n\n<p><code>[100, 105, 110, 115, 120]</code></p>\n\n<p><em>Example 2.</em></p>\n\n<p><code>to</code> not neccesary</p>\n\n<p><code>take(10, range( {from: 100, step: 5} ) )</code></p>\n\n<p>returns</p>\n\n<p><code>[100, 105, 110, 115, 120, 125, 130, 135, 140, 145]</code></p>\n\n<p><strong>takeAll</strong></p>\n\n<p><em>Example 3.</em></p>\n\n<p><code>from</code> not neccesary</p>\n\n<p><code>takeAll( range( {to: 5} ) )</code></p>\n\n<p>returns</p>\n\n<p><code>[0, 1, 2, 3, 4, 5]</code></p>\n\n<p><em>Example 4.</em></p>\n\n<p><code>takeAll( range( {to: 500, step: 100} ) )</code></p>\n\n<p>returns</p>\n\n<p><code>[0, 100, 200, 300, 400, 500]</code></p>\n\n<p><em>Example 5.</em></p>\n\n<p><code>takeAll( range( {from: 'z', to: 'a'} ) )</code></p>\n\n<p>returns </p>\n\n<p><code>[\"z\", \"y\", \"x\", \"w\", \"v\", \"u\", \"t\", \"s\", \"r\", \"q\", \"p\", \"o\", \"n\", \"m\", \"l\", \"k\", \"j\", \"i\", \"h\", \"g\", \"f\", \"e\", \"d\", \"c\", \"b\", \"a\"]</code></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>simple range function:</p>\n\n<pre><code>function range(start, stop, step){\n  var a=[start], b=start;\n  while(b&lt;stop){b+=step;a.push(b)}\n  return a;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here's my 2 cents:</p>\n\n<pre><code>    function range(start, count) {\n        return Array.apply(0, Array(count))\n                    .map(function (element, index) { \n                             return index + start;  \n                         });\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Did some research on some various Range Functions.\n<strong><a href=\"http://jsperf.com/javascript-range-tests\" rel=\"nofollow\">Checkout the jsperf comparison</a></strong> of the different ways to do these functions. Certainly not a perfect or exhaustive list, but should help :)</p>\n\n<p><strong>The Winner is...</strong></p>\n\n<pre><code>function range(lowEnd,highEnd){\nvar arr = [],\nc = highEnd - lowEnd + 1;\nwhile ( c-- ) {\n arr[c] = highEnd--\n}\nreturn arr;\n}\nrange(0,31);\n</code></pre>\n\n<p>Technically its not the fastest on firefox, but crazy speed difference (imho) on chrome makes up for it.</p>\n\n<p>Also interesting observation is how much faster chrome is with these array functions than firefox. <strong>Chrome is at least 4 or 5 times faster</strong>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Range is not defined in javascript by the compiler but interestingly google chrome V8 engine defines it and </p>\n\n<pre><code>&gt;console.log(sum(range(1,10)))\n45\n</code></pre>\n\n<p>This is also explained in the first chapter of <a href=\"http://eloquentjavascript.net/chapter1.html\" rel=\"nofollow\">http://eloquentjavascript.net/chapter1.html</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I found a JS range function equivalent to the one in PHP, and works amazingly great <a href=\"http://phpjs.org/functions/range/\" rel=\"nofollow\">here</a>. Works forward &amp; backward, and works with integers, floats and alphabets!</p>\n\n<pre><code>function range(low, high, step) {\n  //  discuss at: http://phpjs.org/functions/range/\n  // original by: Waldo Malqui Silva\n  //   example 1: range ( 0, 12 );\n  //   returns 1: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n  //   example 2: range( 0, 100, 10 );\n  //   returns 2: [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\n  //   example 3: range( 'a', 'i' );\n  //   returns 3: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i']\n  //   example 4: range( 'c', 'a' );\n  //   returns 4: ['c', 'b', 'a']\n\n  var matrix = [];\n  var inival, endval, plus;\n  var walker = step || 1;\n  var chars = false;\n\n  if (!isNaN(low) &amp;&amp; !isNaN(high)) {\n    inival = low;\n    endval = high;\n  } else if (isNaN(low) &amp;&amp; isNaN(high)) {\n    chars = true;\n    inival = low.charCodeAt(0);\n    endval = high.charCodeAt(0);\n  } else {\n    inival = (isNaN(low) ? 0 : low);\n    endval = (isNaN(high) ? 0 : high);\n  }\n\n  plus = ((inival &gt; endval) ? false : true);\n  if (plus) {\n    while (inival &lt;= endval) {\n      matrix.push(((chars) ? String.fromCharCode(inival) : inival));\n      inival += walker;\n    }\n  } else {\n    while (inival &gt;= endval) {\n      matrix.push(((chars) ? String.fromCharCode(inival) : inival));\n      inival -= walker;\n    }\n  }\n\n  return matrix;\n}\n</code></pre>\n\n<p>And here is the minified version:</p>\n\n<pre><code>function range(h,c,b){var i=[];var d,f,e;var a=b||1;var g=false;if(!isNaN(h)&amp;&amp;!isNaN(c)){d=h;f=c}else{if(isNaN(h)&amp;&amp;isNaN(c)){g=true;d=h.charCodeAt(0);f=c.charCodeAt(0)}else{d=(isNaN(h)?0:h);f=(isNaN(c)?0:c)}}e=((d&gt;f)?false:true);if(e){while(d&lt;=f){i.push(((g)?String.fromCharCode(d):d));d+=a}}else{while(d&gt;=f){i.push(((g)?String.fromCharCode(d):d));d-=a}}return i};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Though this is not from <em>PHP</em>, but an imitation of <code>range</code> from <strong><em>Python</em></strong>.</p>\n\n<pre><code>function range(start, end) {\n    var total = [];\n\n    if (!end) {\n        end = start;\n        start = 0;\n    }\n\n    for (var i = start; i &lt; end; i += 1) {\n        total.push(i);\n    }\n\n    return total;\n}\n\nconsole.log(range(10)); // [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] \nconsole.log(range(0, 10)); // [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\nconsole.log(range(5, 10)); // [5, 6, 7, 8, 9] \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For a more ruby-like approach with good backward compatibility:</p>\n\n<p><code>range([begin], end = 0)</code> where <code>begin</code> and <code>end</code> are numbers</p>\n\n<pre><code>var range = function(begin, end) {\n  if (typeof end === \"undefined\") {\n    end = begin; begin = 0;\n  }\n  var result = [], modifier = end &gt; begin ? 1 : -1;\n  for ( var i = 0; i &lt;= Math.abs(end - begin); i++ ) {\n    result.push(begin + i * modifier);\n  }\n  return result;\n}\n</code></pre>\n\n<p>Examples:</p>\n\n<pre><code>range(3); //=&gt; [0, 1, 2, 3]\nrange(-2); //=&gt; [0, -1, -2]\nrange(1, 2) //=&gt; [1, 2]\nrange(1, -2); //=&gt; [1, 0, -1, -2]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>An interesting challenge would be to write the <em>shortest</em> function to do this.  Recursion to the rescue!</p>\n\n<pre><code>function r(a,b){return a&gt;b?[]:[a].concat(r(++a,b))}\n</code></pre>\n\n<p>Tends to be slow on large ranges, but luckily quantum computers are just around the corner.</p>\n\n<p>An added bonus is that it's obfuscatory.  Because we all know how important it is to hide our code from prying eyes.</p>\n\n<p>To truly and utterly obfuscate the function, do this:</p>\n\n<pre><code>function r(a,b){return (a&lt;b?[a,b].concat(r(++a,--b)):a&gt;b?[]:[a]).sort(function(a,b){return a-b})}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Using Harmony <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator\" rel=\"nofollow\">spread operator</a> and arrow functions:</p>\n\n<pre><code>var range = (start, end) =&gt; [...Array(end - start + 1)].map((_, i) =&gt; start + i);\n</code></pre>\n\n<p>Example:</p>\n\n<pre><code>range(10, 15);\n[ 10, 11, 12, 13, 14, 15 ]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>you can use <code>lodash</code> function <code>_.range(10)</code> <a href=\"https://lodash.com/docs#range\" rel=\"nofollow\">https://lodash.com/docs#range</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In PHP, you can do...</p>\n\n<pre><code>range(1, 3); // Array(1, 2, 3)\nrange(\"A\", \"C\"); // Array(\"A\", \"B\", \"C\")\n</code></pre>\n\n<p>That is, there is a function that lets you get a range of numbers or characters by passing the upper and lower bounds.</p>\n\n<p>Is there anything built-in to JavaScript natively for this? If not, how would I implement it?</p>\n",
            "last_activity_date": 1422900446,
            "question_id": 3895478,
            "score": 70,
            "tags": [
                "javascript",
                "arrays"
            ],
            "title": "Does JavaScript have a method like &quot;range()&quot; to generate an array based on supplied bounds?"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>I think <a href=\"http://www.quirksmode.org/js/events_mouse.html#mouseenter\">Quirksmode</a> has all the answers you need (different browsers bubbling behaviour and the <em>mouseenter/mouseleave</em> events), but I think the most common conclusion to that event bubbling mess <strong>is</strong> the use of a framework like JQuery or Mootools (which has the <em>mouseenter</em> and <em>mouseleave</em> events, which are exactly what you intuited would happen).</p>\n\n<p>Have a look at how they do it, if you want, do it yourself<br>\n<em>or</em> you can <a href=\"http://mootools.net/core/\">create your custom</a> \"lean mean\" version of Mootools with just the event part (and its dependencies).</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>There are two ways to handle this.</p>\n\n<p>1) Check the event.target result in your callback to see if it matches your parent div</p>\n\n<pre><code>var g_ParentDiv;\n\nfunction OnMouseOut(event) {\n    if (event.target != g_ParentDiv) {\n        return;\n    }\n    // handle mouse event here!\n};\n\n\nwindow.onload = function() {\n    g_ParentDiv = document.getElementById(\"parentdiv\");\n    g_ParentDiv.onmouseout = OnMouseOut;\n};\n\n&lt;div id=\"parentdiv\"&gt;\n    &lt;img src=\"childimage.jpg\" id=\"childimg\" /&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>2) Or use event capturing and call event.stopPropagation in the callback function</p>\n\n<pre><code>var g_ParentDiv;\n\nfunction OnMouseOut(event) {\n\n    event.stopPropagation(); // don't let the event recurse into children\n\n    // handle mouse event here!\n};\n\n\nwindow.onload = function() {\n    g_ParentDiv = document.getElementById(\"parentdiv\");\n    g_ParentDiv.addEventListener(\"mouseout\", OnMouseOut, true); // pass true to enable event capturing so parent gets event callback before children\n};\n\n&lt;div id=\"parentdiv\"&gt;\n    &lt;img src=\"childimage.jpg\" id=\"childimg\" /&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>function onMouseOut(event) {\n        //this is the original element the event handler was assigned to\n        var e = event.toElement || event.relatedTarget;\n        if (e.parentNode == this || e == this) {\n           return;\n        }\n    alert('MouseOut');\n    // handle mouse event here!\n}\n\ndocument.getElementById('parent').addEventListener('mouseout',onMouseOut,true);\n</code></pre>\n\n<p>I made a quick JsFiddle demo, with all the CSS and HTML needed, check it out...  </p>\n\n<p><strong>EDIT</strong> FIXED link for cross-browser support <a href=\"http://jsfiddle.net/RH3tA/9/\">http://jsfiddle.net/RH3tA/9/</a></p>\n\n<p><strong>NOTE</strong> that this only checks the immediate parent, if the parent div had nested children then you have to somehow traverse through the elements parents looking for the \"Orginal element\"  </p>\n\n<p><strong>EDIT</strong> example for nested children <strong>EDIT</strong> Fixed for hopefully cross-browser</p>\n\n<pre><code>function makeMouseOutFn(elem){\n    var list = traverseChildren(elem);\n    return function onMouseOut(event) {\n        var e = event.toElement || event.relatedTarget;\n        if (!!~list.indexOf(e)) {\n            return;\n        }\n        alert('MouseOut');\n        // handle mouse event here!\n    };\n}\n\n//using closure to cache all child elements\nvar parent = document.getElementById(\"parent\");\nparent.addEventListener('mouseout',makeMouseOutFn(parent),true);\n\n//quick and dirty DFS children traversal, \nfunction traverseChildren(elem){\n    var children = [];\n    var q = [];\n    q.push(elem);\n    while (q.length &gt; 0) {\n      var elem = q.pop();\n      children.push(elem);\n      pushAll(elem.children);\n    }\n    function pushAll(elemArray){\n      for(var i=0; i &lt; elemArray.length; i++) {\n        q.push(elemArray[i]);\n      }\n    }\n    return children;\n}\n</code></pre>\n\n<p>And a new JSFiddle <a href=\"http://jsfiddle.net/amasad/TH9Hv/8/\">http://jsfiddle.net/amasad/TH9Hv/8/</a> <strong>EDIT</strong> updated link</p>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>I check the original element's offset to get the page coordinates of the element's bounds, then make sure the mouseout action is only triggered when the mouseout is out of those bounds.  Dirty but it works.</p>\n\n<pre><code>$(el).live('mouseout', function(event){\n    while(checkPosition(this, event)){\n        console.log(\"mouseovering including children\")\n    }\n    console.log(\"moused out of the whole\")\n})\n\nvar checkPosition = function(el, event){\n    var position = $(el).offset()\n    var height = $(el).height()\n    var width = $(el).width()\n    if (event.pageY &gt; position.top \n|| event.pageY &lt; (position.top + height) \n|| event.pageX &gt; position.left \n|| event.pageX &lt; (position.left + width)){\n    return true\n}\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I make it work like a charm with this:</p>\n\n<pre><code>function HideLayer(theEvent){\n var MyDiv=document.getElementById('MyDiv');\n if(MyDiv==(!theEvent?window.event:theEvent.target)){\n  MyDiv.style.display='none';\n }\n}\n</code></pre>\n\n<p>Ah, and <code>MyDiv</code> tag is like this:</p>\n\n<pre><code>&lt;div id=\"MyDiv\" onmouseout=\"JavaScript: HideLayer(event);\"&gt;\n &lt;!-- Here whatever divs, inputs, links, images, anything you want... --&gt;\n&lt;div&gt;\n</code></pre>\n\n<p>This way, when onmouseout goes to a child, grand-child, etc... the <code>style.display='none'</code> is not executed; but when onmouseout goes out of MyDiv it runs.</p>\n\n<p>So no need to stop propagation, use timers, etc...</p>\n\n<p>Thanks for examples, i could make this code from them.</p>\n\n<p>Hope this helps someone.</p>\n\n<p>Also can be improved like this:</p>\n\n<pre><code>function HideLayer(theLayer,theEvent){\n if(theLayer==(!theEvent?window.event:theEvent.target)){\n  theLayer.style.display='none';\n }\n}\n</code></pre>\n\n<p>And then the DIVs tags like this:</p>\n\n<pre><code>&lt;div onmouseout=\"JavaScript: HideLayer(this,event);\"&gt;\n &lt;!-- Here whatever divs, inputs, links, images, anything you want... --&gt;\n&lt;div&gt;\n</code></pre>\n\n<p>So more general, not only for one div and no need to add <code>id=\"...\"</code> on each layer.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Thanks to Amjad Masad that inspired me.</p>\n\n<p>I've the following solution which seems to work in IE9, FF and Chrome and the code is quite short (without the complex closure and transverse child things) :</p>\n\n<pre><code>    DIV.onmouseout=function(e){\n        // check and loop relatedTarget.parentNode\n        // ignore event triggered mouse overing any child element or leaving itself\n        var obj=e.relatedTarget;\n        while(obj!=null){\n            if(obj==this){\n                return;\n            }\n            obj=obj.parentNode;\n        }\n        // now perform the actual action you want to do only when mouse is leaving the DIV\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<pre><code>var elem = $('#some-id');\nelem.mouseover(function () {\n   // Some code here\n}).mouseout(function (event) {\n   var e = event.toElement || event.relatedTarget;\n   if (elem.has(e).length &gt; 0) return;\n\n   // Some code here\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's a more elegant solution based on what came below.\nit accounts for event bubbling up from more than one level of children.\nIt also accounts for cross-browser issues.</p>\n\n<pre><code>function onMouseOut(this, event) {\n//this is the original element the event handler was assigned to\n   var e = event.toElement || event.relatedTarget;\n\n//check for all children levels (checking from bottom up)\nwhile(e &amp;&amp; e.parentNode &amp;&amp; e.parentNode != window) {\n    if (e.parentNode == this||  e == this) {\n        if(e.preventDefault) e.preventDefault();\n        return false;\n    }\n    e = e.parentNode;\n}\n\n//Do something u need here\n}\n\ndocument.getElementById('parent').addEventListener('mouseout',onMouseOut,true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>I've found a very simple solution, </p>\n\n<p>just use the onmouseleave=\"myfunc()\" event than the onmousout=\"myfunc()\" event</p>\n\n<p>In my code it worked!!</p>\n\n<p><strong>Example:</strong></p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\n   function myFunc(){\n      document.getElementById('hide_div').style.display = 'none';\n   }\n   function ShowFunc(){\n      document.getElementById('hide_div').style.display = 'block';\n   }\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div onmouseleave=\"myFunc()\" style='border:double;width:50%;height:50%;position:absolute;top:25%;left:25%;'&gt;\n   Hover mouse here\n   &lt;div id='child_div' style='border:solid;width:25%;height:25%;position:absolute;top:10%;left:10%;'&gt;\n      CHILD &lt;br/&gt; It doesn't fires if you hover mouse over this child_div\n   &lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"hide_div\" &gt;TEXT&lt;/div&gt;\n&lt;a href='#' onclick=\"ShowFunc()\"&gt;Show \"TEXT\"&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>Same Example with mouseout function:</strong></p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\n   function myFunc(){\n      document.getElementById('hide_div').style.display = 'none';\n   }\n   function ShowFunc(){\n      document.getElementById('hide_div').style.display = 'block';\n   }\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div onmouseout=\"myFunc()\" style='border:double;width:50%;height:50%;position:absolute;top:25%;left:25%;'&gt;\n   Hover mouse here\n   &lt;div id='child_div' style='border:solid;width:25%;height:25%;position:absolute;top:10%;left:10%;'&gt;\n      CHILD &lt;br/&gt; It fires if you hover mouse over this child_div\n   &lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"hide_div\"&gt;TEXT&lt;/div&gt;\n&lt;a href='#' onclick=\"ShowFunc()\"&gt;Show \"TEXT\"&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Hope it helps :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try <code>mouseleave()</code> </p>\n\n<p>Example :</p>\n\n<pre><code>&lt;div id=\"parent\" mouseleave=\"function\"&gt;\n   &lt;div id=\"child\"&gt;\n\n   &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>;)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>&lt;div id=\"parent\" onmouseout=\"if (this == event.target) YourFunction(this)\"&gt;\n    &lt;div id=\"child\"&gt;\n\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you added (or have) a CSS class or id to the parent element, then you can do something like this: </p>\n\n<pre><code>&lt;div id=\"parent\"&gt;\n  &lt;div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n\nJavaScript:\ndocument.getElementById(\"parent\").onmouseout = function(e) {\n  e = e ? e : window.event //For IE\n  if(e.target.id == \"parent\") {\n    //Do your stuff\n  }\n}\n</code></pre>\n\n<p>So stuff only gets executed when the event is on the parent div. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>For a simpler pure CSS solution</strong> that works in some cases (<a href=\"http://caniuse.com/#search=pointer-events\">IE11 or newer</a>), one could remove children's <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events\"><code>pointer-events</code></a> by setting them to <code>none</code></p>\n\n<pre><code>.parent * {\n     pointer-events: none;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>If you're using jQuery you can also use the \"mouseleave\" function, which deals with all of this for you.</p>\n\n<pre><code>$('#thetargetdiv').mouseenter(do_something);\n$('#thetargetdiv').mouseleave(do_something_else);\n</code></pre>\n\n<p>do_something will fire when the mouse enters thetargetdiv or any of its children, do_something_else will only fire when the mouse leaves thetargetdiv and any of its children.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Hi I am having trouble with the onmouseout function in a absolute positoned div. When the mouse hits a child element in the div, the mouseout event fires, but I do not want it to fire until the mouse is out of the parent, absolute div.</p>\n\n<p>How can I prevent the mouseout event from firing when it hits a child element WITHOUT jquery.</p>\n\n<p>I know this has something to do with event bubbling, but I am having no luck on finding out how to work this out. A similar post I found here: <a href=\"http://stackoverflow.com/questions/350639/how-to-disable-mouseout-events-triggered-by-child-elements\">How to disable mouseout events triggered by child elements?</a></p>\n\n<p>How ever that solution uses jquery.</p>\n",
            "last_activity_date": 1406083311,
            "question_id": 4697758,
            "score": 55,
            "tags": [
                "javascript",
                "css",
                "javascript-events",
                "onmouseout"
            ],
            "title": "Prevent onmouseout when hovering child element of the parent absolute div WITHOUT jQuery"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Try to use:</p>\n\n<pre><code>location.reload(true);\n</code></pre>\n\n<p>When this method receives a <code>true</code> value as argument, it will cause the page to always be reloaded from the server. If it is false or not specified, the browser <em>may</em> reload the page from its cache.</p>\n\n<p>More info:</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/En/DOM/Window.location\">The location object</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 95
                },
                {
                    "body": "<p><em>You can perform this task using <code>window.location.reload(true);</code>. As there are many ways to do this but I think it is the appropriate way to reload the same docuemnt with javascript. Here is the explaination</em></p>\n\n<p>Javascript <strong>window.location</strong> object can be used </p>\n\n<ul>\n<li>Get the current page address (URL). </li>\n<li>To redirect the browser to other page.</li>\n<li>To reload the same page.</li>\n</ul>\n\n<p><strong>window</strong> -- The window object in java-script represents an open window in a browser. </p>\n\n<p><strong>location</strong> -- The location object in java script holds information about the current URL.</p>\n\n<p>The location object is like a fragment of the window object and is called up through the <strong>window.location</strong> property.</p>\n\n<p><strong>Location Objects</strong> has three methods -- </p>\n\n<ol>\n<li><strong>assign()</strong>      Used to load a new document</li>\n<li><strong>reload()</strong>      Used to reloads the current document.    </li>\n<li><strong>replace()</strong>    Used to replace the current document with a new one</li>\n</ol>\n\n<p>So here we need to use <strong>reload()</strong> because it can help us in reloading  the same document.</p>\n\n<p>So use it like <code>window.location.reload();</code></p>\n\n<p><a href=\"http://jsfiddle.net/agrawalnikhil/4FhHA/\">Online Demo jsfiddle</a></p>\n\n<p><em><strong>To ask your browser to retrieve the page directly from the server not from the cache, you can pass a true parameter to window.location.reload():</em></strong> </p>\n\n<p>Like this <code>window.location.reload(true);</code></p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>In Javascript how can I force the web browser to do a hard refresh of the page? i.e., get a fresh copy of the page AND refresh all the external resources (images, javascript, css, etc.)</p>\n",
            "last_activity_date": 1392639075,
            "question_id": 2099201,
            "score": 54,
            "tags": [
                "javascript",
                "jquery",
                "reload",
                "page-refresh",
                "window.location"
            ],
            "title": "Javascript hard refresh of current page"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>setTimeout(function() { $('#foo').fadeOut(); }, 5000);\n</code></pre>\n\n<p>The 5000 is five seconds in milliseconds.</p>\n",
                    "is_accepted": true,
                    "score": 76
                },
                {
                    "body": "<p>You can avoid using setTimeout by using the fadeTo() method, and setting a 5 second delay on that.</p>\n\n<pre><code>$(\"#hideAfterFiveSeconds\").click(function(){\n  $(this).fadeTo(5000,1,function(){\n    $(this).fadeOut(\"slow\");\n  });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>i use this pause plugin i just wrote</p>\n\n<pre><code>$.fn.pause = function(duration) {\n    $(this).animate({ dummy: 1 }, duration);\n    return this;\n};\n</code></pre>\n\n<p>Call it like this :</p>\n\n<pre><code>$(\"#mainImage\").pause(5000).fadeOut();\n</code></pre>\n\n<p>Note: you don't need a callback.</p>\n\n<hr>\n\n<p><strong>Edit: You should now use the <a href=\"http://api.jquery.com/delay/\">jQuery 1.4. built in delay()</a> method. I haven't checked but I assume its more 'cleverer' than my plugin.</strong></p>\n",
                    "is_accepted": false,
                    "score": 43
                },
                {
                    "body": "<p>I've written a plugin to let you add a delay into the chain.</p>\n\n<p>for example $('#div').fadeOut().delay(5000).fadeIn(); // fade element out, wait 5 seconds, fade element back in.  </p>\n\n<p>It doesn't use any animation hacks or excessive callback chaining, just simple clean short code.</p>\n\n<p><a href=\"http://blindsignals.com/index.php/2009/07/jquery-delay/\" rel=\"nofollow\">http://blindsignals.com/index.php/2009/07/jquery-delay/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Previously you would do something like this </p>\n\n<pre><code>$('#foo').animate({opacity: 1},1000).fadeOut('slow');\n</code></pre>\n\n<p>The first animate isn't doing anything since you already have opacity 1 on the element, but it would pause for the amount of time.</p>\n\n<p>In jQuery 1.4, they have built this into the framework so you don't have to use the hack like above.</p>\n\n<pre><code>$('#foo').delay(1000).fadeOut('slow');\n</code></pre>\n\n<p>The functionality is the same as the original <code>jQuery.delay()</code> plugin <a href=\"http://www.evanbot.com/article/jquery-delay-plugin/4\" rel=\"nofollow\">http://www.evanbot.com/article/jquery-delay-plugin/4</a></p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>The best way is by using the jQuery delay method:</p>\n\n<p>$('#my_id').delay(2000).fadeOut(2000);</p>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>I want to fade out an element and all its child elements after a delay of a few seconds. but I haven't found a way to specify that an effect should start after a specified time delay.</p>\n",
            "last_activity_date": 1300043949,
            "question_id": 251204,
            "score": 45,
            "tags": [
                "javascript",
                "jquery",
                "effects"
            ],
            "title": "delay JQuery effects"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Easy.</p>\n\n<pre><code>var scrollIt = function(time) {\n    // time = scroll time in ms\n    var start = new Date().getTime(),\n        scroll = document.documentElement.scrollTop + document.body.scrollTop,\n        timer = setInterval(function() {\n            var now = Math.min(time,(new Date().getTime())-start)/time;\n            document.documentElement.scrollTop\n                = document.body.scrollTop = (1-time)/start;\n            if( now == 1) clearTimeout(timer);\n        },25);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>function scrollTo(element, to, duration) {\n    if (duration &lt; 0) return;\n    var difference = to - element.scrollTop;\n    var perTick = difference / duration * 10;\n\n    setTimeout(function() {\n        element.scrollTop = element.scrollTop + perTick;\n        if (element.scrollTop === to) return;\n        scrollTo(element, to, duration - 10);\n    }, 10);\n}\n</code></pre>\n\n<p>Demo:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function runScroll() {\r\n  scrollTo(document.body, 0, 600);\r\n}\r\nvar scrollme;\r\nscrollme = document.querySelector(\"#scrollme\");\r\nscrollme.addEventListener(\"click\",runScroll,false)\r\n\r\nfunction scrollTo(element, to, duration) {\r\n  if (duration &lt; 0) return;\r\n  var difference = to - element.scrollTop;\r\n  var perTick = difference / duration * 10;\r\n\r\n  setTimeout(function() {\r\n    element.scrollTop = element.scrollTop + perTick;\r\n    if (element.scrollTop == to) return;\r\n    scrollTo(element, to, duration - 10);\r\n  }, 10);\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;p&gt;Very long page.Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page.  Very long page.Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page.  Very long page.Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page.  Very long page.Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page.  Very long page.Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page. Very long page.\r\n&lt;/p&gt;\r\n&lt;button id=scrollme type=\"button\"&gt;To the top&lt;/button&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>I modified TimWolla's answer to use quadratic in-out easing ( a little smoother :). Here is an example in action: <a href=\"http://jsfiddle.net/62MTU/15/\">on jsFiddle</a>. Easing functions are available here: <a href=\"http://robertpenner.com/easing/\">Robert Penner's Easing functions</a></p>\n\n<pre><code>document.getElementsByTagName('button')[0].onclick = function () {\n    scrollTo(document.body, 0, 1250);   \n}\nfunction scrollTo(element, to, duration) {\n    var start = element.scrollTop,\n        change = to - start,\n        currentTime = 0,\n        increment = 20;\n\n    var animateScroll = function(){        \n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);                        \n        element.scrollTop = val; \n        if(currentTime &lt; duration) {\n            setTimeout(animateScroll, increment);\n        }\n    };\n    animateScroll();\n}\n\n//t = current time\n//b = start value\n//c = change in value\n//d = duration\nMath.easeInOutQuad = function (t, b, c, d) {\n    t /= d/2;\n    if (t &lt; 1) return c/2*t*t + b;\n    t--;\n    return -c/2 * (t*(t-2) - 1) + b;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>Just made this javascript only solution below.</p>\n\n<p>Simple usage:</p>\n\n<pre><code>EPPZScrollTo.scrollVerticalToElementById('wrapper', 0);\n</code></pre>\n\n<p>Engine object (you can fiddle with filter, fps values):</p>\n\n<pre><code>/**\n *\n * Created by Borb\u00e1s Geri on 12/17/13\n * Copyright (c) 2013 eppz! development, LLC.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n */\n\n\nvar EPPZScrollTo =\n{\n    /**\n     * Helpers.\n     */\n    documentVerticalScrollPosition: function()\n    {\n        if (self.pageYOffset) return self.pageYOffset; // Firefox, Chrome, Opera, Safari.\n        if (document.documentElement &amp;&amp; document.documentElement.scrollTop) return document.documentElement.scrollTop; // Internet Explorer 6 (standards mode).\n        if (document.body.scrollTop) return document.body.scrollTop; // Internet Explorer 6, 7 and 8.\n        return 0; // None of the above.\n    },\n\n    viewportHeight: function()\n    { return (document.compatMode === \"CSS1Compat\") ? document.documentElement.clientHeight : document.body.clientHeight; },\n\n    documentHeight: function()\n    { return (document.height !== undefined) ? document.height : document.body.offsetHeight; },\n\n    documentMaximumScrollPosition: function()\n    { return this.documentHeight() - this.viewportHeight(); },\n\n    elementVerticalClientPositionById: function(id)\n    {\n        var element = document.getElementById(id);\n        var rectangle = element.getBoundingClientRect();\n        return rectangle.top;\n    },\n\n    /**\n     * Animation tick.\n     */\n    scrollVerticalTickToPosition: function(currentPosition, targetPosition)\n    {\n        var filter = 0.2;\n        var fps = 60;\n        var difference = parseFloat(targetPosition) - parseFloat(currentPosition);\n\n        // Snap, then stop if arrived.\n        var arrived = (Math.abs(difference) &lt;= 0.5);\n        if (arrived)\n        {\n            // Apply target.\n            scrollTo(0.0, targetPosition);\n            return;\n        }\n\n        // Filtered position.\n        currentPosition = (parseFloat(currentPosition) * (1.0 - filter)) + (parseFloat(targetPosition) * filter);\n\n        // Apply target.\n        scrollTo(0.0, Math.round(currentPosition));\n\n        // Schedule next tick.\n        setTimeout(\"EPPZScrollTo.scrollVerticalTickToPosition(\"+currentPosition+\", \"+targetPosition+\")\", (1000 / fps));\n    },\n\n    /**\n     * For public use.\n     *\n     * @param id The id of the element to scroll to.\n     * @param padding Top padding to apply above element.\n     */\n    scrollVerticalToElementById: function(id, padding)\n    {\n        var element = document.getElementById(id);\n        if (element == null)\n        {\n            console.warn('Cannot find element with id \\''+id+'\\'.');\n            return;\n        }\n\n        var targetPosition = this.documentVerticalScrollPosition() + this.elementVerticalClientPositionById(id) - padding;\n        var currentPosition = this.documentVerticalScrollPosition();\n\n        // Clamp.\n        var maximumScrollPosition = this.documentMaximumScrollPosition();\n        if (targetPosition &gt; maximumScrollPosition) targetPosition = maximumScrollPosition;\n\n        // Start animation.\n        this.scrollVerticalTickToPosition(currentPosition, targetPosition);\n    }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Without JQuery code, Hope this will help you.</p>\n\n<pre><code>function TopscrollTo() {\nif(window.scrollY!=0)\n{\n    setTimeout(function() {\n       window.scrollTo(0,window.scrollY-30);\n        TopscrollTo();\n    }, 100);\n   }\n}\n</code></pre>\n\n<p>call this <strong>TopscrollTo() function</strong> on button click event or on any other element/event which you want.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I modified the code of @TimWolla to add more options and a some movement functions.\nAlso, added support to crossbrowser with <em>document.body.scrollTop</em> and <em>document.documentElement.scrollTop</em></p>\n\n<pre><code>// scroll to top\nscrollTo(0, 1000);\n\n// Element to move, time in ms to animate\nfunction scrollTo(element, duration) {\n    var e = document.documentElement;\n    if(e.scrollTop===0){\n        var t = e.scrollTop;\n        ++e.scrollTop;\n        e = t+1===e.scrollTop--?e:document.body;\n    }\n    scrollToC(e, e.scrollTop, element, duration);\n}\n\n// Element to move, element or px from, element or px to, time in ms to animate\nfunction scrollToC(element, from, to, duration) {\n    if (duration &lt; 0) return;\n    if(typeof from === \"object\")from=from.offsetTop;\n    if(typeof to === \"object\")to=to.offsetTop;\n\n    scrollToX(element, from, to, 0, 1/duration, 20, easeOutCuaic);\n}\n\nfunction scrollToX(element, x1, x2, t, v, step, operacion) {\n    if (t &lt; 0 || t &gt; 1 || v &lt;= 0) return;\n    element.scrollTop = x1 - (x1-x2)*operacion(t);\n    t += v * step;\n\n    setTimeout(function() {\n        scrollToX(element, x1, x2, t, v, step, operacion);\n    }, step);\n}\nfunction easeOutCuaic(t){\n    t--;\n    return t*t*t+1;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/forestrf/tPQSv/2/\" rel=\"nofollow\">http://jsfiddle.net/forestrf/tPQSv/2/</a></p>\n\n<p>EDIT: Minified version (tested in this page with chrome and firefox) (384 bytes):</p>\n\n<pre><code>// e = element to scroll to or top position in pixels, d = time to scroll in ms\nfunction scrollTo(e,d){if(d&lt;0)return;var h=document.documentElement;if(h.scrollTop===0){var t=h.scrollTop;++h.scrollTop;h=t+1===h.scrollTop--?h:document.body;}if(typeof e===\"object\")e=e.offsetTop;scrollToX(h,h.scrollTop,e,0,1/d,20);}function scrollToX(e,a,b,t,v,s){if(t&lt;0||t&gt;1||v&lt;=0)return;k=t-1;e.scrollTop=a-(a-b)*(k*k*k+1);t+=v*s;setTimeout(function(){scrollToX(e,a,b,t,v,s);},s);}\n</code></pre>\n\n<p>EDIT: More minified version, remove the comments if you don't need them (353 bytes):</p>\n\n<pre><code>/*\nscrollTo:\ne = element to scroll to or top position in pixels\nd = time to scroll in ms\n\nscrollToX:\ne = scrollable element\na = initiall scrollable element position (from)\nb = height to scroll to (to)\nt = lerp from a to b (0 - 1)\nv = speed. input 1 / time to scroll\ns = repeat every 's' miliseconds\n*/\n\nfunction scrollTo(e,d){if(d&gt;=0){var h=document.documentElement;if(h.scrollTop===0){var t=h.scrollTop;++h.scrollTop;h=t+1===h.scrollTop--?h:document.body}typeof e===\"object\"&amp;&amp;(e=e.offsetTop);scrollToX(h,h.scrollTop,e,0,1/d,20)}}function scrollToX(e,a,b,t,v,s){function F(){t&lt;0||t&gt;1||v&lt;=0||(k=t-1,e.scrollTop=a-(a-b)*(k*k*k+1),t+=v*s,setTimeout(F,s))}F()}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>looks like there's a lot of solutions already. anyway, here's another one, uses easing equations..</p>\n\n<pre><code>// first add raf shim\n// http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\nwindow.requestAnimFrame = (function(){\n  return  window.requestAnimationFrame       ||\n          window.webkitRequestAnimationFrame ||\n          window.mozRequestAnimationFrame    ||\n          function( callback ){\n            window.setTimeout(callback, 1000 / 60);\n          };\n})();\n\n// main function\nfunction scrollToY(scrollTargetY, speed, easing) {\n    // scrollTargetY: the target scrollY property of the window\n    // speed: time in pixels per second\n    // easing: easing equation to use\n\n    var scrollY = window.scrollY,\n        scrollTargetY = scrollTargetY || 0,\n        speed = speed || 2000,\n        easing = easing || 'easeOutSine',\n        currentTime = 0;\n\n    // min time .1, max time .8 seconds\n    var time = Math.max(.1, Math.min(Math.abs(scrollY - scrollTargetY) / speed, .8));\n\n    // easing equations from https://github.com/danro/easing-js/blob/master/easing.js\n    var PI_D2 = Math.PI / 2,\n        easingEquations = {\n            easeOutSine: function (pos) {\n                return Math.sin(pos * (Math.PI / 2));\n            },\n            easeInOutSine: function (pos) {\n                return (-0.5 * (Math.cos(Math.PI * pos) - 1));\n            },\n            easeInOutQuint: function (pos) {\n                if ((pos /= 0.5) &lt; 1) {\n                    return 0.5 * Math.pow(pos, 5);\n                }\n                return 0.5 * (Math.pow((pos - 2), 5) + 2);\n            }\n        };\n\n    // add animation loop\n    function tick() {\n        currentTime += 1 / 60;\n\n        var p = currentTime / time;\n        var t = easingEquations[easing](p);\n\n        if (p &lt; 1) {\n            requestAnimFrame(tick);\n\n            window.scrollTo(0, scrollY + ((scrollTargetY - scrollY) * t));\n        } else {\n            console.log('scroll done');\n            window.scrollTo(0, scrollTargetY);\n        }\n    }\n\n    // call it once to get started\n    tick();\n}\n\n// scroll it!\nscrollToY(0, 1500, 'easeInOutQuint');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I see that most/all of the above posts search for a button with javascript. This works, as long as you have only one button. I would recommend defining an \"onclick\" element inside the button. That \"onclick\" would then call the function causing it to scroll.</p>\n\n<p>If you do it like that, you can use more than one button, as long as the button looks something like this:</p>\n\n<pre><code>&lt;button onclick=\"scrollTo(document.body, 0, 1250)\"&gt;To the top&lt;/button&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm looking for a simple, cross-browser \"scroll to top\" animation I can apply to a link. I don't want to require a JS library such as jQuery/Moo, etc.</p>\n\n<pre><code>// jQuery Equivilant to convert to pure JS...\n$('html, body').animate({scrollTop:0}, 400);\n</code></pre>\n\n<p>I'm a perfect case for someone who should have learned JS 100% before jumping into a library. :(</p>\n",
            "last_activity_date": 1423948742,
            "question_id": 8917921,
            "score": 42,
            "tags": [
                "javascript"
            ],
            "title": "Cross browser JavaScript (not jQuery...) scroll to top animation"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>Nope  Just in the <code>&lt;Script&gt;</code> tags.. for the most part.</p>\n\n<p>Outside the <code>&lt;Script&gt;</code> tags, you can call functionality as in:</p>\n\n<pre><code>&lt;button onclick=\"someFunction(someValue)\"&gt;Click Me&lt;/button&gt;\n</code></pre>\n\n<p>But you'd be calling a native js function, one within the <code>&lt;Script&gt;</code> tags or one within an external .js file referenced like:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"external.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>And...</p>\n\n<ul>\n<li>JavaScripts in the body section will\nbe executed WHILE the page loads.</li>\n<li>JavaScripts in the head section will \nbe executed when CALLED.</li>\n</ul>\n\n<p><a href=\"http://www.w3schools.com/js/js%5Fwhereto.asp\" rel=\"nofollow\">http://www.w3schools.com/js/js_whereto.asp</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>JavaScript is executed wherever it is found in the document. If you place inline JavaScript in the body, it will be executed when the browser comes to it. If you're using <code>$(document).ready(...)</code> to execute things, then the positioning shouldn't matter. Otherwise, you may find corner cases where it matters. In general, it does not matter. Scripts end up in the <code>head</code> tag mostly out of tradition.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Everything stops when the browser reads a script tag until it has processed it. Your page will therefore render quicker if you move the script tags down as far as possible - ideally just before the end body tag. Obviously the total load time will be the same.</p>\n\n<p>You will have to make sure you don't actually call any jQuery functions until jQuery is included of course.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Basically, browsers stop rendering page until <code>.js</code> files are completely downloaded and processed. Since they render page progressively as HTML arrives, the later <code>.js</code> files are referenced, the better user experience will be.</p>\n\n<p>So the trick is to include only absolutely crucial scripts in the <code>head</code>, and load remaining ones towards the end of the page.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>It can go in the <code>head</code> or <code>body</code> tag.  Just keep in mind that it will execute whenever is read and not necessarily when the document is finished loading.  Take a look <a href=\"http://www.w3schools.com/js/js%5Fwhereto.asp\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<ol>\n<li><p>Because you don't want JavaScript mixed with HTML - content with behaviour. Preferably you want it in a separate file.</p></li>\n<li><p>Having JS elsewhere has advantages and disadventages - it will be executed at different time, for instance, and you can write to the document from javascript located in the body.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>No, it can be anywhere. In fact, it\u2019s sometimes a good idea to put it at the bottom of the document. For an explanation why, see <a href=\"http://developer.yahoo.com/performance/rules.html#js_bottom\">http://developer.yahoo.com/performance/rules.html#js_bottom</a>.</p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>Actually, for performance reasons, you almost always want to put your script tags at the bottom of your page. Why?  You want your page structure and your CSS to load first so that the user sees the page right away.  Then you want all your behavior driven code to load last.  YSlow is a good firefox extension that will show you a grade for performance. One of the items it grades you on is whether you have javascript at the bottom rather than the top.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>No. <code>SCRIPT</code> is not only categorized as <a href=\"http://www.w3.org/TR/html4/sgml/dtd.html#head.misc\"><em>head.misc</em> element</a> but also as <a href=\"http://www.w3.org/TR/html4/sgml/dtd.html#special\"><em>special</em> element</a> and thus everywhere allowed where <a href=\"http://www.w3.org/TR/html4/sgml/dtd.html#inline\"><em>inline</em> elements</a> are allowed. So you can put a <code>SCRIPT</code> wherever inline elements are allowed:</p>\n\n<pre><code>&lt;p&gt;foo &lt;script&gt;document.write(\"bar\")&lt;/script&gt;&lt;/p&gt;\n</code></pre>\n\n<p>In fact, <a href=\"http://developer.yahoo.com/performance/rules.html#js%5Fbottom\">some recommend to put <code>SCRIPT</code> elements at the end of the <code>BODY</code></a> just before the closing tag so that the whole document is parsed before the JavaScript is loaded. That is to prevent JavaScript from blocking parallel downloads.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Just be careful about the bad effects on latency that you can have, depending on the user's browser and where exactly you place your Javascript in the page -- see just about all that <a href=\"http://stevesouders.com/\" rel=\"nofollow\">Steve Souders</a> has to say, including the videos of his Stanford lectures, and the fruit of his labors left behind e.g. <a href=\"http://developer.yahoo.com/performance/rules.html#js%5Fbottom\" rel=\"nofollow\">here</a> (put scripts at the <em>bottom</em> of the page in as much as feasible, etc etc).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In some cases, yes the script may not work if its in the wrong location.  Some JavaScript needs to be executed after a specific HTML element, others need to be exactly where you want your script output to show, others should be in the head of the document. It really depends on how the code is written.  If you are not sure, you should execute your code on window.load or DOMready: <a href=\"http://www.javascriptkit.com/dhtmltutors/domready.shtml\" rel=\"nofollow\">http://www.javascriptkit.com/dhtmltutors/domready.shtml</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I believe javascript can be anywhere (almost), but I almost always see it in between <code>&lt;head&gt;&lt;/head&gt;</code>.  I am using jquery and wanted to know if it has to be in the head tags for some reason or if will break something if I move it.  Thank you.</p>\n\n<p>EDIT:  Why is it almost always in the head tags?</p>\n",
            "last_activity_date": 1249056307,
            "question_id": 1213281,
            "score": 42,
            "tags": [
                "javascript"
            ],
            "title": "Does javascript have to be in the head tags?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Do you really need all the data? can't you stream just the data currently needed using AJAX? Similar to Google Maps - you can't fit all the map data into browser's memory, they display just the part you are currently seeing.</p>\n\n<p>Remember that 40 megs of hard data can be inflated to much more in browser's internal representation. For example the JS interpreter may use hashtable to implement the array, which would add additional memory overhead. Also, I expect that the browsers stores both source code and the JS memory, that alone doubles the amount of data.</p>\n\n<p>JS is designed to provide client-side UI interaction, not handle loads of data.</p>\n\n<p>EDIT:</p>\n\n<p>Btw, do you really think users will like downloading 40 megabytes worth of code? There are still many users with less than broadband internet access. And execution of the script will be suspended until all the data is downloaded.</p>\n\n<p>EDIT2:</p>\n\n<p>I had a look at the data. That array will definitely be represented as hashtable. Also many of the items are objects, which will require reference tracking...that is additional memory.</p>\n\n<p>I guess the performance would be better if it was simple vector of primitive data.</p>\n\n<p>EDIT3: The data could certainly be simplified. The bulk of it are repeating strings, which could be encoded\nin some way as integers or something. Also, my Opera is having trouble just displaying the text, let alone interpreting it.</p>\n\n<p>EDIT4: <strong>Forget the DateTime objects</strong>! Use unix era timestamps or strings, but not objects!</p>\n\n<p>EDIT5: Your processor doesn't matter because JS is single-threaded. And your RAM doesn't matter either, most browsers are 32bit, so they can't use much of that memory.</p>\n\n<p>EDIT6: <strong>Try changing the array indices to sequential integers</strong> (0, 1, 2, 3...). That might make the browser use more efficient array data structure. You can use constants to access the array items efficiently. This is going to cut down the array size by huge chunk.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Try retrieving the data with Ajax as an JSON page. I don't know the exact size but I've been able to pull large amounts of data into Google Chrome that way.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I would try having it as one big string with separator between each \"item\" then use <code>split</code>, something like:</p>\n\n<pre><code>var largeString = \"item1,item2,.......\";\nvar largeArray = largeString.split(\",\");\n</code></pre>\n\n<p>Hopefully string won't exhaust the stack so fast.</p>\n\n<p>Edit: in order to test it I created dummy array with 200,000 simple items (each item one number) and Chrome loaded it within an instant. 2,000,000 items? Couple of seconds but no crash. 6,000,000 items array (50 MB file) made Chrome load for about 10 seconds but still, no crash in either ways.</p>\n\n<p>So this leads me to believe the problem is not with the array itself but rather it's <strong>contents</strong>.. optimize the contents to simple items then parse them \"on the fly\" and it should work.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use lazy loading. Have pointers to the data and get it when the user asks.</p>\n\n<p>This technique is used in various places to manage millions of records of data.</p>\n\n<p>[Edit]</p>\n\n<p>I found what I was looking for. Virtual scrolling in the <a href=\"http://www.trirand.net/aspnetmvc/grid/performancevirtualscrolling\" rel=\"nofollow\">jqgrid</a>. That's 500k records being lazy loaded.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Yes, it's too much to ask of a browser.</p>\n\n<p>That amount of data would be managable if it already was data, but it isn't data yet. Consider that the browser has to parse that huge block of source code while checking that the syntax adds up for it all. Once parsed into valid code, the code has to run to produce the actual array.</p>\n\n<p>So, all of the data will exist in (at least) two or three versions at once, each with a certain amount of overhead. As the array literal is a single statement, each step will have to include all of the data.</p>\n\n<p>Dividing the data into several smaller arrays would possibly make it easier on the browser.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here's what I would try: you said it's a 44MB file. That surely takes more than 44MB of memory, I'm guessing this takes much over 44MB of RAM, maybe half a gig. Could you just cut down the data until the browser doesn't crash and see how much memory the browser uses?</p>\n\n<p>Even apps that run only on the server would be well served to not read a 44MB file and keep it in memory. Having said all that, I believe the browser should be able to handle it, so let me run some tests.</p>\n\n<p>(Using Windows 7, 4GB of memory)</p>\n\n<p><strong>First Test</strong>\nI cut the array in half and there were no problems, uses 80MB, no crash</p>\n\n<p><strong>Second Test</strong>\nI split the array into two separate arrays, but still contains all the data, uses 160Mb, no crash</p>\n\n<p><strong>Third Test</strong>\nSince Firefox said it ran out of stack, the problem is probably that it can't parse the array at once. I created two separate arrays, arr1, arr2 then did arr3 = arr1.concat(arr2); It ran fine and uses only slightly more memory, around 165MB.</p>\n\n<p><strong>Fourth Test</strong> I am creating 7 of those arrays (22MB each) and concatting them to test browser limits. It takes about 10 seconds for the page to finish loading. Memory goes up to 1.3GB, then it goes back down to 500MB. So yeah chrome can handle it. It just can't parse it all at once because it uses some kind of recursion as can be noticed by the console's error message.</p>\n\n<p><strong>Answer</strong> Create separate arrays (less than 20MB each) and then concat them.</p>\n\n<p>I would still consider fetching only the necessary part, it may make the browser sluggish. however, if it's an internal task, this should be fine.</p>\n\n<p>Last point: You're not at maximum memory levels, just max parsing levels.</p>\n",
                    "is_accepted": true,
                    "score": 43
                }
            ],
            "body": "<p>I'm embedding a large array in <code>&lt;script&gt;</code> tags in my HTML, like this (nothing surprising):</p>\n\n<pre><code>&lt;script&gt;\n    var largeArray = [/* lots of stuff in here */];\n&lt;/script&gt;\n</code></pre>\n\n<p>In this particular example, the array has 210,000 elements. That's well below the theoretical maximum of 2<sup>31</sup> - by <strong>4 orders of magnitude</strong>. Here's the fun part: if I save JS source for the array to a file, that file is >44 megabytes (46,573,399 bytes, to be exact).</p>\n\n<p>If you want to see for yourself, you can <a href=\"https://github.com/downloads/mjball/Stack-Overflow-Q-A/largeArray.js.zip\">download it from GitHub</a>. (All the data in there is canned, so much of it is repeated. This will not be the case in production.)</p>\n\n<p>Now, I'm really not concerned about <em>serving</em> that much data. My server gzips its responses, so it really doesn't take all that long to get the data over the wire. However, there is a really nasty tendency for the page, once loaded, to <strong>crash</strong> the browser. I'm not testing at all in IE (this is an internal tool). My primary targets are Chrome 8 and Firefox 3.6.</p>\n\n<p>In Firefox, I can see a reasonably useful error in the console:</p>\n\n<blockquote>\n  <p><strong><code>Error: script stack space quota is exhausted</code></strong></p>\n</blockquote>\n\n<p>In Chrome, I simply get the sad-tab page:</p>\n\n<p><img src=\"http://i.stack.imgur.com/QsHwD.png\" alt=\"enter image description here\"></p>\n\n<h2>Cut to the chase, already</h2>\n\n<ul>\n<li>Is this <em>really</em> too much data for our modern, \"high-performance\" browsers to handle?</li>\n<li>Is there anything I can do* to gracefully handle this much data?</li>\n</ul>\n\n<p>Incidentally, I was able to get this to work (read: not crash the tab) on-and-off in Chrome. I really thought that Chrome, at least, was made of tougher stuff, but apparently I was wrong...</p>\n\n<hr>\n\n<h2>Edit 1</h2>\n\n<p>@Crayon: I wasn't looking to justify <em>why</em> I'd like to dump this much data into the browser at once. Short version: either I solve this one (admittedly not-that-easy) problem, or I have to solve a whole slew of other problems. I'm opting for the simpler approach for now.</p>\n\n<p>@various: right now, I'm not especially looking for ways to actually reduce the number of elements in the array. I know I could implement Ajax paging or what-have-you, but that introduces its own set of problems for me in other regards.</p>\n\n<p>@Phrogz: each element looks something like this:</p>\n\n<pre><code>{dateTime:new Date(1296176400000),\n terminalId:'terminal999',\n 'General___BuildVersion':'10.05a_V110119_Beta',\n 'SSM___ExtId':26680,\n 'MD_CDMA_NETLOADER_NO_BCAST___Valid':'false',\n 'MD_CDMA_NETLOADER_NO_BCAST___PngAttempt':0}\n</code></pre>\n\n<p>@Will: but I have a computer with a 4-core processor, 6 gigabytes of RAM, over half a terabyte of disk space ...and I'm not even asking for the browser to do this quickly - I'm just asking for it to work <em>at all!</em> \u2639</p>\n\n<hr>\n\n<h2>Edit 2</h2>\n\n<p><strong>Mission accomplished!</strong></p>\n\n<p>With the spot-on suggestions from <a href=\"http://stackoverflow.com/questions/4833480/is-this-asking-too-much-of-a-browser/4833756#4833756\">Juan</a> as well as <a href=\"http://stackoverflow.com/questions/4833480/is-this-asking-too-much-of-a-browser/4833631#4833631\">Guffa</a>, I was able to get this to work! It would appear that the problem was just in <em>parsing</em> the source code, not actually working with it in memory.</p>\n\n<p>To summarize the comment quagmire on Juan's answer: I had to split up my big array into a series of smaller ones, and then <code>Array#concat()</code> them, but that wasn't enough. I <strong>also</strong> had to put them into separate <code>var</code> statements. Like this:</p>\n\n<pre><code>var arr0 = [...];\nvar arr1 = [...];\nvar arr2 = [...];\n/* ... */\nvar bigArray = arr0.concat(arr1, arr2, ...);\n</code></pre>\n\n<p>To everyone who contributed to solving this: <strong>thank you.</strong> The first round is on me!</p>\n\n<hr>\n\n<p><sub>*other than the obvious: sending less data to the browser</sub></p>\n",
            "last_activity_date": 1422871254,
            "question_id": 4833480,
            "score": 36,
            "tags": [
                "javascript",
                "arrays",
                "memory"
            ],
            "title": "Have I reached the limits of the size of objects JavaScript in my browser can handle?"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>You could programatically iterate the form elements adding the onkeydown handler as you go. This way you can reuse the code.</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>If you can I would reconsider doing this: the default action of pressing <code>&lt;Enter&gt;</code> while in a form submits the form and anything you do to change this default action / expected behaviour could cause some usability issues with the site.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had a simular need.\nHere is what I did:</p>\n\n<pre><code>  &lt;script type=\"text/javascript\" language=\"javascript\"&gt;\n    function convertEnterToTab() {\n      if(event.keyCode==13) {\n        event.keyCode = 9;\n      }\n    }\n    document.onkeydown = convertEnterToTab;    \n  &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Changing this behaviour actually creates a far better user experience than the default behaviour implemented natively.  Consider that the behaviour of the enter key is already inconsistent from the user's point of view, because in a single line input, enter tends to submit a form, while in a multi-line textarea, it simply adds a newline to the contents of the field.</p>\n\n<p>I recently did it like this (uses jQuery):</p>\n\n<pre><code>$('input.enterastab, select.enterastab, textarea.enterastab').live('keydown', function(e) {\n if (e.keyCode==13) {\n  var focusable = $('input,a,select,button,textarea').filter(':visible');\n  focusable.eq(focusable.index(this)+1).focus();\n  return false;\n }\n});\n</code></pre>\n\n<p>This is not terribly efficient, but works well enough and is reliable - just add the 'enterastab' class to any input element that should behave in this way.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've had a similar problem, where I wanted to press <kbd>+</kbd> on the numpad to tab to the next field. Now I've released a library that I think will help you.</p>\n\n<blockquote>\n  <p><a href=\"http://joelpurra.github.com/plusastab\" rel=\"nofollow\">PlusAsTab</a>: A jQuery plugin to use the numpad plus key as a tab key equivalent.</p>\n</blockquote>\n\n<p>Since you want <kbd>enter</kbd>/<kbd>&crarr;</kbd> instead, you can set the options. Find out which key you want to use with the <a href=\"http://api.jquery.com/event.which/\" rel=\"nofollow\">jQuery event.which demo</a>.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>JoelPurra.PlusAsTab.setOptions({\n  // Use enter instead of plus\n  // Number 13 found through demo at\n  // http://api.jquery.com/event.which/\n  key: 13\n});\n\n// Matches all inputs with name \"a[]\" (needs some character escaping)\n$('input[name=a\\\\[\\\\]]').plusAsTab();\n</code></pre>\n\n<p>You can try it out yourself in the <a href=\"http://joelpurra.github.com/plusastab/example/enter-as-tab.html\" rel=\"nofollow\">PlusAsTab enter as tab demo</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I used the logic suggested by Andrew which is very effective. And this is my version:</p>\n\n<pre><code>$('body').on('keydown', 'input, select, textarea', function(e) {\n    var self = $(this)\n      , form = self.parents('form:eq(0)')\n      , focusable\n      , next\n      ;\n    if (e.keyCode == 13) {\n        focusable = form.find('input,a,select,button,textarea').filter(':visible');\n        next = focusable.eq(focusable.index(this)+1);\n        if (next.length) {\n            next.focus();\n        } else {\n            form.submit();\n        }\n        return false;\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>I have it working in only JavaScript.  Firefox won't let you update the keyCode, so all you can do is trap keyCode 13 and force it to focus on the next element by tabIndex as if keyCode 9 was pressed.  The tricky part is finding the next tabIndex.  I have tested this only on IE8-IE10 and Firefox and it works:</p>\n\n<pre><code>function ModifyEnterKeyPressAsTab(event)\n{\n    var caller;\n    var key;\n    if (window.event)\n    {\n        caller = window.event.srcElement; //Get the event caller in IE.\n        key = window.event.keyCode; //Get the keycode in IE.\n    }\n    else\n    {\n        caller = event.target; //Get the event caller in Firefox.\n        key = event.which; //Get the keycode in Firefox.\n    }\n    if (key == 13) //Enter key was pressed.\n    {\n        cTab = caller.tabIndex; //caller tabIndex.\n        maxTab = 0; //highest tabIndex (start at 0 to change)\n        minTab = cTab; //lowest tabIndex (this may change, but start at caller)\n        allById = document.getElementsByTagName(\"input\"); //Get input elements.\n        allByIndex = []; //Storage for elements by index.\n        c = 0; //index of the caller in allByIndex (start at 0 to change)\n        i = 0; //generic indexer for allByIndex;\n        for (id in allById) //Loop through all the input elements by id.\n        {\n            allByIndex[i] = allById[id]; //Set allByIndex.\n            tab = allByIndex[i].tabIndex;\n            if (caller == allByIndex[i])\n                c = i; //Get the index of the caller.\n            if (tab &gt; maxTab)\n                maxTab = tab; //Get the highest tabIndex on the page.\n            if (tab &lt; minTab &amp;&amp; tab &gt;= 0)\n                minTab = tab; //Get the lowest positive tabIndex on the page.\n            i++;\n        }\n        //Loop through tab indexes from caller to highest.\n        for (tab = cTab; tab &lt;= maxTab; tab++)\n        {\n            //Look for this tabIndex from the caller to the end of page.\n            for (i = c + 1; i &lt; allByIndex.length; i++)\n            {\n                if (allByIndex[i].tabIndex == tab)\n                {\n                    allByIndex[i].focus(); //Move to that element and stop.\n                    return;\n                }\n            }\n            //Look for the next tabIndex from the start of page to the caller.\n            for (i = 0; i &lt; c; i++)\n            {\n                if (allByIndex[i].tabIndex == tab + 1)\n                {\n                    allByIndex[i].focus(); //Move to that element and stop.\n                    return;\n                }\n            }\n            //Continue searching from the caller for the next tabIndex.\n        }\n\n        //The caller was the last element with the highest tabIndex,\n        //so find the first element with the lowest tabIndex.\n        for (i = 0; i &lt; allByIndex.length; i++)\n        {\n            if (allByIndex[i].tabIndex == minTab)\n            {\n                allByIndex[i].focus(); //Move to that element and stop.\n                return;\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>To use this code, add it to your html input tag:</p>\n\n<pre><code>&lt;input id=\"SomeID\" onkeydown=\"ModifyEnterKeyPressAsTab(event);\" ... &gt;\n</code></pre>\n\n<p>Or add it to an element in javascript:</p>\n\n<pre><code>document.getElementById(\"SomeID\").onKeyDown = ModifyEnterKeyPressAsTab;\n</code></pre>\n\n<p><strong>A couple other notes:</strong></p>\n\n<p>I only needed it to work on my input elements, but you could extend it to other document elements if you need to.  For this, getElementsByClassName is very helpful, but that is a whole other topic.</p>\n\n<p>A limitation is that it only tabs between the elements that you have added to your allById array.  It does not tab around to the other things that your browser might, like toolbars and menus outside your html document.  Perhaps this is a feature instead of a limitation.  If you like, trap keyCode 9 and this behavior will work with the tab key too.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I reworked the OPs solution into a Knockout binding and thought I'd share it. Thanks very much :-)</p>\n\n<p><a href=\"http://jsfiddle.net/damiensawyer/AWNxq/\" rel=\"nofollow\">Here's</a> a Fiddle </p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" &gt;\n&lt;head&gt;\n    &lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n    &lt;script src=\"http://ajax.aspnetcdn.com/ajax/knockout/knockout-2.2.1.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n\n\n&lt;/head&gt;\n&lt;body&gt;\n\n    &lt;div data-bind=\"nextFieldOnEnter:true\"&gt;\n        &lt;input type=\"text\" /&gt;\n        &lt;input type=\"text\" /&gt;\n        &lt;select&gt;\n          &lt;option value=\"volvo\"&gt;Volvo&lt;/option&gt;\n          &lt;option value=\"saab\"&gt;Saab&lt;/option&gt;\n          &lt;option value=\"mercedes\"&gt;Mercedes&lt;/option&gt;\n          &lt;option value=\"audi\"&gt;Audi&lt;/option&gt;\n        &lt;/select&gt;\n        &lt;input type=\"text\" /&gt;\n        &lt;input type=\"text\" /&gt;\n    &lt;/div&gt;\n\n\n    &lt;script type=\"text/javascript\"&gt;\n    ko.bindingHandlers.nextFieldOnEnter = {\n        init: function(element, valueAccessor, allBindingsAccessor) {\n            $(element).on('keydown', 'input, select', function (e) {\n                var self = $(this)\n                , form = $(element)\n                  , focusable\n                  , next\n                ;\n                if (e.keyCode == 13) {\n                    focusable = form.find('input,a,select,button,textarea').filter(':visible');\n                    var nextIndex = focusable.index(this) == focusable.length -1 ? 0 : focusable.index(this) + 1;\n                    next = focusable.eq(nextIndex);\n                    next.focus();\n                    return false;\n                }\n            });\n        }\n    };\n\n    ko.applyBindings({});\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<blockquote>\n  <p>You can use my code below, tested in Mozilla, IE, and Chrome</p>\n</blockquote>\n\n<pre><code>   // Use to act like tab using enter key\n    $.fn.enterkeytab=function(){\n         $(this).on('keydown', 'input, select,', function(e) {\n        var self = $(this)\n          , form = self.parents('form:eq(0)')\n          , focusable\n          , next\n          ;\n            if (e.keyCode == 13) {\n                focusable = form.find('input,a,select,button').filter(':visible');\n                next = focusable.eq(focusable.index(this)+1);\n                if (next.length) {\n                    next.focus();\n                } else {\n                    alert(\"wd\");\n                    //form.submit();\n                }\n                return false;\n            }\n        });\n\n    }\n</code></pre>\n\n<p>How to Use?</p>\n\n<blockquote>\n  <p>$(\"#form\").enterkeytab(); // enter key tab</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Thank you for the good script.</p>\n\n<p>I have just added the shift event on the above function to go back between elements, I thought someone may need this.</p>\n\n<pre><code>$('body').on('keydown', 'input, select, textarea', function(e) {\nvar self = $(this)\n  , form = self.parents('form:eq(0)')\n  , focusable\n  , next\n  , prev\n  ;\n\nif (e.shiftKey) {\n if (e.keyCode == 13) {\n     focusable =   form.find('input,a,select,button,textarea').filter(':visible');\n     prev = focusable.eq(focusable.index(this)-1); \n\n     if (prev.length) {\n        prev.focus();\n     } else {\n        form.submit();\n    }\n  }\n}\n  else\nif (e.keyCode == 13) {\n    focusable = form.find('input,a,select,button,textarea').filter(':visible');\n    next = focusable.eq(focusable.index(this)+1);\n    if (next.length) {\n        next.focus();\n    } else {\n        form.submit();\n    }\n    return false;\n}\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Here is an angular.js directive to make enter go to the next field using the other answers as inspiration. There is some, perhaps, odd looking code here because I only use the jQlite packaged with angular. I believe most of the features here work in all browsers > IE8.</p>\n\n<pre><code>angular.module('myapp', [])\n.directive('pdkNextInputOnEnter', function() {\n    var includeTags = ['INPUT', 'SELECT'];\n\n    function link(scope, element, attrs) {\n        element.on('keydown', function (e) {\n            // Go to next form element on enter and only for included tags\n            if (e.keyCode == 13 &amp;&amp; includeTags.indexOf(e.target.tagName) != -1) {\n                // Find all form elements that can receive focus\n                var focusable = element[0].querySelectorAll('input,select,button,textarea');\n\n                // Get the index of the currently focused element\n                var currentIndex = Array.prototype.indexOf.call(focusable, e.target)\n\n                // Find the next items in the list\n                var nextIndex = currentIndex == focusable.length - 1 ? 0 : currentIndex + 1;\n\n                // Focus the next element\n                if(nextIndex &gt;= 0 &amp;&amp; nextIndex &lt; focusable.length)\n                    focusable[nextIndex].focus();\n\n                return false;\n            }\n        });\n    }\n\n    return {\n        restrict: 'A',\n        link: link\n    };\n});\n</code></pre>\n\n<p>Here's how I use it in the app I'm working on, by just adding the <code>pdk-next-input-on-enter</code> directive on an element. I am using a barcode scanner to enter data into fields, the default function of the scanner is to emulate a keayboard, injecting an enter key after typing the data of the scanned barcode.</p>\n\n<p>There is one side-effect to this code (a positive one for my use-case), if it moves focus onto a button, the enter keyup event will cause the button's action to be activated. This worked really well for my flow as the last form element in my markup is a button that I want activated once all the fields have been \"tabbed\" through by scanning barcodes.</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html ng-app=myapp&gt;\n  &lt;head&gt;\n      &lt;script src=\"angular.min.js\"&gt;&lt;/script&gt;\n      &lt;script src=\"controller.js\"&gt;&lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body ng-controller=\"LabelPrintingController\"&gt;\n      &lt;div class='.container' pdk-next-input-on-enter&gt;\n          &lt;select ng-options=\"p for p in partNumbers\" ng-model=\"selectedPart\" ng-change=\"selectedPartChanged()\"&gt;&lt;/select&gt;\n          &lt;h2&gt;{{labelDocument.SerialNumber}}&lt;/h2&gt;\n          &lt;div ng-show=\"labelDocument.ComponentSerials\"&gt;\n              &lt;b&gt;Component Serials&lt;/b&gt;\n              &lt;ul&gt;\n                  &lt;li ng-repeat=\"serial in labelDocument.ComponentSerials\"&gt;\n                      {{serial.name}}&lt;br/&gt;\n                      &lt;input type=\"text\" ng-model=\"serial.value\" /&gt;\n                  &lt;/li&gt;\n              &lt;/ul&gt;\n          &lt;/div&gt;\n          &lt;button ng-click=\"printLabel()\"&gt;Print&lt;/button&gt;\n      &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There are problems with all of the implementations given here. Some don't work properly with textareas and submit buttons, most don't allow you to use shift to go backwards, none of them use tabindexes if you have them, and none of them wrap around from the last to the first or the first to the last.</p>\n\n<p>To have the [enter] key act like the [tab] key but still work properly with text areas and submit buttons use the following code. In addition this code allows you to use the shift key to go backwards and the tabbing wraps around front to back and back to front.</p>\n\n<p>Source code: <a href=\"https://github.com/mikbe/SaneEnterKey\" rel=\"nofollow\">https://github.com/mikbe/SaneEnterKey</a></p>\n\n<h3>CoffeeScript</h3>\n\n<pre><code>mbsd_sane_enter_key = -&gt;\n  input_types = \"input, select, button, textarea\"\n  $(\"body\").on \"keydown\", input_types, (e) -&gt;\n    enter_key = 13\n    tab_key = 9\n\n    if e.keyCode in [tab_key, enter_key]\n      self = $(this)\n\n      # some controls should just press enter when pressing enter\n      if e.keyCode == enter_key and (self.prop('type') in [\"submit\", \"textarea\"])\n        return true\n\n      form = self.parents('form:eq(0)')\n\n      # Sort by tab indexes if they exist\n      tab_index = parseInt(self.attr('tabindex'))\n      if tab_index\n        input_array = form.find(\"[tabindex]\").filter(':visible').sort((a,b) -&gt; \n          parseInt($(a).attr('tabindex')) - parseInt($(b).attr('tabindex'))\n        )\n      else\n        input_array = form.find(input_types).filter(':visible')\n\n      # reverse the direction if using shift\n      move_direction = if e.shiftKey then -1 else 1\n      new_index = input_array.index(this) + move_direction\n\n      # wrap around the controls\n      if new_index == input_array.length\n        new_index = 0\n      else if new_index == -1\n        new_index = input_array.length - 1\n\n      move_to = input_array.eq(new_index)\n      move_to.focus()\n      move_to.select()\n\n      false\n\n$(window).on 'ready page:load', -&gt;\n  mbsd_sane_enter_key()\n</code></pre>\n\n<h3>JavaScript</h3>\n\n<pre><code>var mbsd_sane_enter_key = function() {\n  var input_types;\n  input_types = \"input, select, button, textarea\";\n\n  return $(\"body\").on(\"keydown\", input_types, function(e) {\n    var enter_key, form, input_array, move_direction, move_to, new_index, self, tab_index, tab_key;\n    enter_key = 13;\n    tab_key = 9;\n\n    if (e.keyCode === tab_key || e.keyCode === enter_key) {\n      self = $(this);\n\n      // some controls should react as designed when pressing enter\n      if (e.keyCode === enter_key &amp;&amp; (self.prop('type') === \"submit\" || self.prop('type') === \"textarea\")) {\n        return true;\n      }\n\n      form = self.parents('form:eq(0)');\n\n      // Sort by tab indexes if they exist\n      tab_index = parseInt(self.attr('tabindex'));\n      if (tab_index) {\n        input_array = form.find(\"[tabindex]\").filter(':visible').sort(function(a, b) {\n          return parseInt($(a).attr('tabindex')) - parseInt($(b).attr('tabindex'));\n        });\n      } else {\n        input_array = form.find(input_types).filter(':visible');\n      }\n\n      // reverse the direction if using shift\n      move_direction = e.shiftKey ? -1 : 1;\n      new_index = input_array.index(this) + move_direction;\n\n      // wrap around the controls\n      if (new_index === input_array.length) {\n        new_index = 0;\n      } else if (new_index === -1) {\n        new_index = input_array.length - 1;\n      }\n\n      move_to = input_array.eq(new_index);\n      move_to.focus();\n      move_to.select();\n      return false;\n    }\n  });\n};\n\n$(window).on('ready page:load', function() {\n  mbsd_sane_enter_key();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h2>Map [Enter] key to work like the [Tab] key</h2>\n\n<p>I've rewritten <a href=\"http://stackoverflow.com/users/714905/andre-van-zuydam\">Andre Van Zuydam</a>'s answer, which didn't work for me, in jQuery.  This caputures both <kbd>Enter</kbd> and <kbd>Shift</kbd>+<kbd>Enter</kbd>.  <kbd>Enter</kbd> tabs forward, and <kbd>Shift</kbd>+<kbd>Enter</kbd> tabs back.</p>\n\n<p>I've also rewritten the way <code>self</code> is initialized by the current item in focus.  The form is also selected that way.  Here's the code:</p>\n\n<pre><code>// Map [Enter] key to work like the [Tab] key\n// Daniel P. Clark 2014\n\n// Catch the keydown for the entire document\n$(document).keydown(function(e) {\n\n  // Set self as the current item in focus\n  var self = $(':focus'),\n      // Set the form by the current item in focus\n      form = self.parents('form:eq(0)'),\n      focusable;\n\n  // Array of Indexable/Tab-able items\n  focusable = form.find('input,a,select,button,textarea,div[contenteditable=true]').filter(':visible');\n\n  function enterKey(){\n    if (e.which === 13 &amp;&amp; !self.is('textarea,div[contenteditable=true]')) { // [Enter] key\n\n      // If not a regular hyperlink/button/textarea\n      if ($.inArray(self, focusable) &amp;&amp; (!self.is('a,button'))){\n        // Then prevent the default [Enter] key behaviour from submitting the form\n        e.preventDefault();\n      } // Otherwise follow the link/button as by design, or put new line in textarea\n\n      // Focus on the next item (either previous or next depending on shift)\n      focusable.eq(focusable.index(self) + (e.shiftKey ? -1 : 1)).focus();\n\n      return false;\n    }\n  }\n  // We need to capture the [Shift] key and check the [Enter] key either way.\n  if (e.shiftKey) { enterKey() } else { enterKey() }\n});\n</code></pre>\n\n<h2>The reason <strong><code>textarea</code></strong></h2>\n\n<p>is included is because we \"<strong>do</strong>\" want to tab into it.  Also, once in, we don't want to stop the default behavior of <kbd>Enter</kbd> from putting in a new line.</p>\n\n<h2>The reason <strong><code>a</code></strong> and <strong><code>button</code></strong></h2>\n\n<p>allow the default action, \"<strong>and</strong>\" still focus on the next item, is because they don't always load another page.  There can be a trigger/effect on those such as an accordion or tabbed content.  So once you trigger the default behavior, and the page does its special effect, you still want to go to the next item since your trigger may have well introduced it.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm looking to create a form where pressing the enter key causes focus to go to the \"next\" form element on the page. The solution I keep finding on the web is...</p>\n\n<pre><code> &lt;body onkeydown=\"if(event.keyCode==13){event.keyCode=9; return event.keyCode}\"&gt;\n</code></pre>\n\n<p>Unfortunately, that only seems to work in IE. So the real meat of this question is if anybody knows of a solution that works for FF and Chrome? Additionally, I'd rather not have to add <em>onkeydown</em> events to the form elements themselves, but if that's the only way, it will have to do.</p>\n\n<p>This issue is similar to <a href=\"http://stackoverflow.com/questions/905222/javascriptenter-key-press-event\">question 905222</a>, but deserving of it's own question in my opinion.</p>\n\n<p>Edit: also, I've seen people bring up the issue that this isn't good style, as it diverges from form behavior that users are used to. I agree! It's a client request :(</p>\n",
            "last_activity_date": 1421234533,
            "question_id": 1009808,
            "score": 26,
            "tags": [
                "javascript",
                "html",
                "javascript-events",
                "cross-browser"
            ],
            "title": "Enter key press behaves like a Tab in Javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You would have to unbind the event and either rebind to a separate event that does not preventDefault or just call the default event yourself later in the method after unbinding.\nThere is no magical event.cancelled=false;</p>\n\n<p>As requested</p>\n\n<pre><code> $('form').submit( function(ev){\n\n         ev.preventDefault();\n\n         //later you decide you want to submit\n         $(this).unbind('submit').submit()\n\n  });\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 53
                },
                {
                    "body": "<p>Either you do what redsquare proposes with this code:</p>\n\n<pre><code>function preventDefault(e) {\n    e.preventDefault();\n}\n$(\"form\").bind(\"submit\", preventDefault);\n\n// later, now switching back\n$(\"form#foo\").unbind(\"submit\", preventDefault);\n</code></pre>\n\n<p>Or you assign a form attribute whenever submission is allowed. Something like this:</p>\n\n<pre><code>function preventDefault(e) {\n    if (event.currentTarget.allowDefault) {\n        return;\n    }\n    e.preventDefault();\n}\n$(\"form\").bind(\"submit\", preventDefault);\n\n// later, now allowing submissions on the form\n$(\"form#foo\").get(0).allowDefault = true;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<pre><code>$('form').submit( function(ev){\n\n     e.preventDefault();\n\n     //later you decide you want to submit\n     $(this).trigger('submit');     or     $(this).trigger('anyEvent');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>function(e){ e.preventDefault();\n</code></pre>\n\n<p>and its opposite</p>\n\n<pre><code>function(e){ return true; }\n</code></pre>\n\n<p>cheers!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can re-activate the actions by adding </p>\n\n<pre><code>this.delegateEvents();  // Re-activates the events for all the buttons\n</code></pre>\n\n<p>If you add it to the render function of a backbone js view, then you can use event.preventDefault() as required.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a web page which I have prevented the default action on all submit buttons, however I would like to re-enable default submit action on a button how can I do this?</p>\n\n<p>I am currently preventing the default action using the following:</p>\n\n<pre><code>$(\"form\").bind(\"submit\", function(e){\ne.preventDefault();\n});\n</code></pre>\n\n<p>I have successfully done this using the following: </p>\n\n<pre><code>$(document).ready(function(){\n$(\"form:not('#press')\").bind(\"submit\", function(e){\ne.preventDefault();\n});\n</code></pre>\n\n<p>But can I do this dynamically when the button is clicked?</p>\n",
            "last_activity_date": 1397167958,
            "question_id": 1164132,
            "score": 23,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to reenable event.preventDefault?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>This is because <em>this</em> is always the instance that the function is attached to. In the case of an EventHandler it is the class that triggered the event.</p>\n\n<p>You can help your self with an anonymous function like this:</p>\n\n<pre><code>function foo() {\n  var obj = this;\n  $(\"#thing\").after($(\"&lt;div&gt;click me&lt;/div&gt;\").click(function(){obj.bar();}));\n}\n\nfoo.prototype.bar = function() {\n  alert(this);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You may use <code>Function.apply</code> on the function to set what <code>this</code> should refer to:</p>\n\n<pre><code>$(\"#thing\").after($(\"&lt;div&gt;click me&lt;/div&gt;\").click(function() {\n    barf.apply(document); // now this refers to the document\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Welcome to the world of javascript! :D</p>\n\n<p>You have wandered into the realm of javascript scope and closure.</p>\n\n<p><strong>For the short answer:</strong></p>\n\n<pre><code>this.bar()\n</code></pre>\n\n<p>is executed under the scope of <em>foo</em>, (as <em>this</em> refers to <em>foo</em>)</p>\n\n<pre><code>var barf = this.bar;\nbarf();\n</code></pre>\n\n<p>is executed under the global scope.</p>\n\n<p>this.bar basically means:</p>\n\n<p>execute the function pointed by this.bar, under the scope of <em>this</em> (foo).\nWhen you copied this.bar to barf, and run barf. Javascript understood as, run the function pointed by barf, and since there is no <em>this</em>, it just runs in global scope.</p>\n\n<p>To correct this, you can change </p>\n\n<pre><code>barf();\n</code></pre>\n\n<p>to something like this:</p>\n\n<pre><code>barf.apply(this);\n</code></pre>\n\n<p>This tells Javascript to bind the scope of <em>this</em> to barf before executing it.</p>\n\n<p>For jquery events, you will need to use an anonymous function, or extend the bind function in prototype to support scoping.</p>\n\n<p>For more info:</p>\n\n<ul>\n<li><a href=\"http://ryanmorr.com/understanding-scope-and-context-in-javascript/\" rel=\"nofollow\">Good explanation on scoping</a></li>\n<li><a href=\"http://www.sanghvilabs.com/?p=12\" rel=\"nofollow\">Extending jQuery bind to supportscoping</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>There's a good explanation on <code>this</code> keyword in JavaScript available at <a href=\"http://www.quirksmode.org/js/this.html\">QuirksMode</a>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You might find this:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/520019/controlling-the-value-of-this-in-a-jquery-event\">http://stackoverflow.com/questions/520019/controlling-the-value-of-this-in-a-jquery-event</a></p>\n\n<p>or this:</p>\n\n<p><a href=\"http://www.learningjquery.com/2007/08/what-is-this\" rel=\"nofollow\">http://www.learningjquery.com/2007/08/what-is-this</a></p>\n\n<p>Useful.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Get the book: JavaScript: the Good Parts.</p>\n\n<p>Also, read as much as you can by Douglas Crockford\n<a href=\"http://www.crockford.com/javascript/\" rel=\"nofollow\">http://www.crockford.com/javascript/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>this.bar();  // when called here, \"this\" is the foo instance\n</code></pre>\n\n<p>this comment is wrong when foo is used as a normal function, not as a constructor.\nhere:</p>\n\n<pre><code>foo();//this stands for window\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>The behavior of \"this\" when function <code>bar</code> is called is baffling me. See the code below. Is there any way to arrange for \"this\" to be a plain old js object instance when bar is called from a click handler, instead of being the html element?</p>\n\n<pre><code>// a class with a method\n\nfunction foo() {\n\n    this.bar();  // when called here, \"this\" is the foo instance\n\n    var barf = this.bar;\n    barf();   // when called here, \"this\" is the global object\n\n    // when called from a click, \"this\" is the html element\n    $(\"#thing\").after($(\"&lt;div&gt;click me&lt;/div&gt;\").click(barf));\n}\n\nfoo.prototype.bar = function() {\n    alert(this);\n}\n</code></pre>\n",
            "last_activity_date": 1426217710,
            "question_id": 710542,
            "score": 21,
            "tags": [
                "javascript",
                "jquery",
                "this"
            ],
            "title": "jQuery/JavaScript &quot;this&quot; pointer confusion"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Send string to web view:</p>\n\n<pre><code>[webView stringByEvaluatingJavaScriptFromString:@\"YOUR_JS_CODE_GOES_HERE\"];\n</code></pre>\n\n<hr>\n\n<p>Send string from web view to Obj-C:</p>\n\n<p>Declare that you implement the UIWebViewDelegate protocol (inside the .h file):</p>\n\n<pre><code>@interface MyViewController : UIViewController &lt;UIWebViewDelegate&gt; {\n\n    // your class members\n\n}\n\n// declarations of your properties and methods\n\n@end\n</code></pre>\n\n<p>In Objective-C (inside the .m file):</p>\n\n<pre><code>// right after creating the web view\nwebView.delegate = self;\n</code></pre>\n\n<p>In Objective-C (inside the .m file) too:</p>\n\n<pre><code>- (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType {\n    NSString *url = [[request URL] absoluteString];\n\n    static NSString *urlPrefix = @\"myApp://\";\n\n    if ([url hasPrefix:urlPrefix]) {\n        NSString *paramsString = [url substringFromIndex:[urlPrefix length]];\n        NSArray *paramsArray = [paramsString componentsSeparatedByString:@\"&amp;\"];\n        int paramsAmount = [paramsArray count];\n\n        for (int i = 0; i &lt; paramsAmount; i++) {\n            NSArray *keyValuePair = [[paramsArray objectAtIndex:i] componentsSeparatedByString:@\"=\"];\n            NSString *key = [keyValuePair objectAtIndex:0];\n            NSString *value = nil;\n            if ([keyValuePair count] &gt; 1) {\n                value = [keyValuePair objectAtIndex:1];\n            }\n\n            if (key &amp;&amp; [key length] &gt; 0) {\n                if (value &amp;&amp; [value length] &gt; 0) {\n                    if ([key isEqualToString:@\"param\"]) {\n                        // Use the index...\n                    }\n                }\n            }\n        }\n\n        return NO;\n    }\n    else {\n        return YES;\n    }\n}\n</code></pre>\n\n<p>Inside JS:</p>\n\n<pre><code>location.href = 'myApp://param=10';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>When passing an NSString into a UIWebView (for use as a javascript String) you need to make sure to escape newlines as well as single/double quotes:</p>\n\n<pre><code>NSString *html = @\"&lt;div id='my-div'&gt;Hello there&lt;/div&gt;\";\n\nhtml = [html stringByReplacingOccurrencesOfString:@\"\\'\" withString:@\"\\\\\\'\"];\nhtml = [html stringByReplacingOccurrencesOfString:@\"\\\"\" withString:@\"\\\\\\\"\"];\nhtml = [html stringByReplacingOccurrencesOfString:@\"\\n\" withString:@\"\\\\n\"];\nhtml = [html stringByReplacingOccurrencesOfString:@\"\\r\" withString:@\"\"];\n\nNSString *javaScript = [NSString stringWithFormat:@\"injectSomeHtml('%@');\", html];\n[_webView stringByEvaluatingJavaScriptFromString:javaScript];\n</code></pre>\n\n<p>The reverse process is well described by @Michael-Kessler</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an <code>NSString</code> and a webView in my project (Objective-C for iPhone), I have called <code>index.html</code> in webView and inside it I inserted my script (javascript).</p>\n\n<p>How can I pass the NSString as a var in my script and viceversa?</p>\n\n<p>This is an <a href=\"http://developer.apple.com/library/safari/#documentation/AppleApplications/Conceptual/SafariJSProgTopics/Tasks/ObjCFromJavaScript.html\" rel=\"nofollow\">example</a>, but I don't understand it very well.</p>\n",
            "last_activity_date": 1396440961,
            "question_id": 3742590,
            "score": 13,
            "tags": [
                "javascript",
                "iphone",
                "objective-c",
                "uiwebview",
                "uiwebviewdelegate"
            ],
            "title": "NSString in UIWebview"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>This is usually done with <code>Event#findElement</code>:</p>\n\n<pre><code>document.observe('click', function(e, el) {\n  if (el = e.findElement('.foo')) {\n    // there's your `el`\n    // might want to stop event at this point - e.stop()\n  }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>The correct answer to the question is here: <a href=\"http://gurde.com/2011/08/jquery-live-in-prototype/\">http://gurde.com/2011/08/jquery-live-in-prototype/</a></p>\n\n<p>The equivalent of the jQuery <code>.live()</code> in Prototype is the Event.on() method:</p>\n\n<pre><code>var handler = document.on(\n    'click',\n    'div[id^=\"post-\"] .attached-post-thumbnail',\n    function(event, element) {\n        console.log(this);\n        console.log(element);\n    }.bind(this)\n);\n\nhandler.stop();\nhandler.start();\n</code></pre>\n\n<p>Within the callback, the this keyword will always refer to the original element (in this case document).</p>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>I need to bind event listener to all dynamicaly created elements by given css selector.</p>\n\n<p>In jQuery, that would be</p>\n\n<pre><code>$(\".foo\").live(\"click\", function(e) {\n   // bar\n});\n</code></pre>\n\n<p>Is there any equivalent in <strong>Prototype</strong> for this?</p>\n",
            "last_activity_date": 1378630816,
            "question_id": 1479782,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "events",
                "prototypejs"
            ],
            "title": "Prototype equivalent for jQuery live function"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Pretty much every browser you encounter will barf on \"too much recursion\". Here's an <a href=\"http://code.google.com/p/v8/issues/detail?id=457\">entry in the V8 bug tracker</a> that will probably be interesting reading.</p>\n\n<p>If it's simple self-recursion, it's probably worth the effort to use explicit iteration rather than hoping for tail-call elimination.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>The ECMAScript 4 spec was originally going to add support for TCO, but it was dropped.</p>\n\n<p><a href=\"http://lambda-the-ultimate.org/node/3047\">http://lambda-the-ultimate.org/node/3047</a></p>\n\n<p>As far as I know, no widely-available implementations of JS currently do automatic TCO.  This may be of use to you, though:</p>\n\n<p><a href=\"http://www.paulbarry.com/articles/2009/08/30/tail-call-optimization\">http://www.paulbarry.com/articles/2009/08/30/tail-call-optimization</a></p>\n\n<p>Essentially, using the accumulator pattern accomplish the same effect.</p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>No joy for the moment, but thankfully proper tail calls are slated for Harmony (ECMAScript version 6)\n<a href=\"http://wiki.ecmascript.org/doku.php?id=harmony:proper_tail_calls\">http://wiki.ecmascript.org/doku.php?id=harmony:proper_tail_calls</a></p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>Tail call optimization is now available in <a href=\"http://lispyscript.com\" rel=\"nofollow\">LispyScript</a> which compiles to javascript. You can read more about it <a href=\"http://lispyscript.blogspot.in/2012/09/loop-recur-and-tail-call-optimization.html\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Currently no JS implementations recognise tail recursion. Changes are being made in ECMAScript 6, and as others have said, there is an open ticket on V8</p>\n\n<p>Here you can see V8's generated assembler for a tail recursion function</p>\n\n<p><a href=\"https://gist.github.com/mcfedr/832e3553964a014621d5\" rel=\"nofollow\">https://gist.github.com/mcfedr/832e3553964a014621d5</a></p>\n\n<p>Compare that to how clang has compiled the same function in C</p>\n\n<p><a href=\"https://gist.github.com/mcfedr/63ad08370d856bad3694\" rel=\"nofollow\">https://gist.github.com/mcfedr/63ad08370d856bad3694</a></p>\n\n<p>V8 retains the recursive call, whereas the C compiler has recognised the tail recursion and changed it into a loop</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a tail recursive pathfinding algorithm that I've implemented in Javascript and would like to know if any (all?) browsers would possibly get stack overflow exceptions.</p>\n",
            "last_activity_date": 1415395075,
            "question_id": 3660577,
            "score": 61,
            "tags": [
                "javascript",
                "functional-programming",
                "tail-recursion"
            ],
            "title": "Are any Javascript engines tail call optimized?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You could wrap the work in a function and assign it to the <code>Object</code> prototype. Maybe use the fluent interface style to make multiple renames flow.</p>\n\n<pre><code>Object.prototype.renameProperty = function (oldName, newName) {\n    // Check for the old property name to avoid a ReferenceError in strict mode.\n    if (this.hasOwnProperty(oldName)) {\n        this[newName] = this[oldName];\n        delete this[oldName];\n    }\n    return this;\n};\n</code></pre>\n\n<p><strong>ECMAScript 5 Specific</strong></p>\n\n<p>I wish the syntax wasn't this complex but it is definitely nice having more control.</p>\n\n<pre><code>Object.defineProperty(\n    Object.prototype, \n    'renameProperty',\n    {\n        writable : false, // Cannot alter this property\n        enumerable : false, // Will not show up in a for-in loop.\n        configurable : false, // Cannot be deleted via the delete operator\n        value : function (oldName, newName) {\n            // Check for the old property name to \n            // avoid a ReferenceError in strict mode.\n            if (this.hasOwnProperty(oldName)) {\n                this[newName] = this[oldName];\n                delete this[oldName];\n            }\n            return this;\n        }\n    }\n);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 36
                },
                {
                    "body": "<p>I would say that it would be better from a conceptual point of view to just leave the old object (the one from the web service) as it is, and put the values you need in a new object. I'm assuming you are extracting specific fields at one point or another anyway, if not on the client, then at least on the server. The fact that you chose to use field names that are the same as those from the web service, only lowercase, doesn't really change this. So, I'd advise to do something like this:</p>\n\n<pre><code>var myObj = {\n    field1: theirObj.FIELD1, \n    field2: theirObj.FIELD2,\n    (etc)\n}\n</code></pre>\n\n<p>Of course, I'm making all kinds of assumptions here, which may not be true. If this doesn't apply to you, or if it's too slow (is it? I haven't tested, but I imagine the difference gets smaller as the number of fields increases), please ignore all of this :)</p>\n\n<p>If you don't want to do this, and you only have to support specific browsers, you could also use the new getters to also return \"uppercase(field)\": see <a href=\"http://robertnyman.com/2009/05/28/getters-and-setters-with-javascript-code-samples-and-demos/\" rel=\"nofollow\">http://robertnyman.com/2009/05/28/getters-and-setters-with-javascript-code-samples-and-demos/</a> and the links on that page for more information.</p>\n\n<p>EDIT:</p>\n\n<p>Incredibly, this is also almost twice as fast, at least on my FF3.5 at work. See: <a href=\"http://jsperf.com/spiny001\" rel=\"nofollow\">http://jsperf.com/spiny001</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The most complete (and correct) way of doing this would be, I believe:</p>\n\n<pre><code>if (old_key !== new_key) {\n    Object.defineProperty(o, new_key,\n        Object.getOwnPropertyDescriptor(o, old_key));\n    delete o[old_key];\n}\n</code></pre>\n\n<p>This method ensures that the renamed property <strong>behaves identically</strong> to the original one. </p>\n\n<p>Also, it seems to me that the possibility to wrap this into a function/method and put it into <code>Object.prototype</code> is irrelevant regarding your question.</p>\n",
                    "is_accepted": false,
                    "score": 27
                }
            ],
            "body": "<p>Is there a clever (i.e. optimized) way to rename a key in a javascript object?</p>\n\n<p>A non-optimized way would be:</p>\n\n<pre><code>o[ new_key ] = o[ old_key ];\ndelete o[ old_key ];\n</code></pre>\n\n<p>Thanks in advance for your help.</p>\n",
            "last_activity_date": 1359494234,
            "question_id": 4647817,
            "score": 48,
            "tags": [
                "javascript",
                "object",
                "key",
                "rename"
            ],
            "title": "JavaScript: Object Rename Key"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You onlly need the MicrosoftAjax functionality if you are using the libraries. Microsoft AJAX does offer some functionality not found in the provided JQuery libraries (although could be replicated with plug-ins). If you are not using Microsoft AJAX within your application you can delete all reference to these scripts. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Yes, all <code>Microsoft*</code> helpers are obsolete in ASP.NET MVC 3. For me they have always been obsolete but now at least Microsoft made this official and replaced them with jQuery. </p>\n\n<p>2 new functionalities have been introduced</p>\n\n<pre><code>&lt;appSettings&gt;\n    &lt;add key=\"webpages:Version\" value=\"1.0.0.0\"/&gt;\n    &lt;add key=\"ClientValidationEnabled\" value=\"true\"/&gt;\n    &lt;add key=\"UnobtrusiveJavaScriptEnabled\" value=\"true\"/&gt;\n&lt;/appSettings&gt;\n</code></pre>\n\n<p>The first is <code>UnobtrusiveJavaScriptEnabled</code>. This means that if you enable this functionality in your web.config (its enabled by default when you create a new ASP.NET MVC 3 application), all the <code>Ajax.*</code> helpers such as <code>Ajax.BeginForm</code> and <code>Ajax.ActionLink</code> will emit HTML5 data-* attributes on their respective DOM elements instead of mixing javascript with markup. Then you should include the <code>jquery.unobtrusive-ajax.js</code> script to your page which will parse those attributes and use jQuery to unobtrusively AJAXify them.</p>\n\n<p>The second is <code>ClientValidationEnabled</code> which is also enabled by default. The same way unobtrusive javascript works, when you enable this setting all helpers that generate input fields will emit HTML5 data-* attributes on them. Then you include <code>jquery.validate.js</code> and <code>jquery.validate.unobtrusive.js</code> scripts to make them work, such as in your _Layout.cshtml.  <strong>They must appear in this order, and they must be after jquery is loaded:</strong></p>\n\n<pre><code>&lt;script src=\"@Url.Content(\"~/Scripts/jquery-1.7.1.min.js\")\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"@Url.Content(\"~/Scripts/jquery.validate.min.js\")\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"@Url.Content(\"~/Scripts/jquery.validate.unobtrusive.min.js\")\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>So in ASp.NET MVC 3 you can forget about all <code>Microsoft*</code> scripts. Remove them from your site. Delete those files.</p>\n",
                    "is_accepted": true,
                    "score": 92
                }
            ],
            "body": "<p>Are <code>MicrosoftAjax.js</code>, <code>MicrosoftMvcAjax.js</code> and <code>MicrosoftMvcValidation.js</code> obsolete as of ASP.NET MVC 3? I haven't been able to find much info on this on the web, but from what I've read it implies that these files were used in ASP.NET MVC 1-2, and were replaced by <code>jquery.validate.min.js</code>, <code>jquery.unobtrusive-ajax.min.js</code> and <code>jquery.validate.unobtrusive.min.js</code>. Is that correct? Do I still need the Microsoft files?</p>\n",
            "last_activity_date": 1393305110,
            "question_id": 8782697,
            "score": 46,
            "tags": [
                "javascript",
                "ajax",
                "asp.net-mvc-3",
                "asp.net-ajax"
            ],
            "title": "Are MicrosoftAjax.js, MicrosoftMvcAjax.js and MicrosoftMvcValidation.js obsolete as of ASP.NET MVC 3?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You can use <a href=\"http://www.w3schools.com/js/js_obj_math.asp\">Math.round()</a> for rounding numbers to the nearest integer.</p>\n\n<pre><code>Math.round(532.24) =&gt; 532\n</code></pre>\n\n<p>Also, you can use <a href=\"http://www.w3schools.com/jsref/jsref_parseInt.asp\">parseInt()</a> and <a href=\"http://www.w3schools.com/jsref/jsref_parseFloat.asp\">parseFloat()</a> to cast a variable to a certain type, in this case integer and floating point.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>According to the <a href=\"http://bclary.com/2004/11/07/#a-4.3.20\">ECMAScript specification</a>, numbers in JavaScript are represented only by the double-precision 64-bit format IEEE 754. Hence there is not really an integer type in JavaScript.</p>\n\n<p>Regarding the rounding of these numbers, there are a number of ways you can achieve this. The <a href=\"http://bclary.com/2004/11/07/#a-15.8\">Math</a> object gives us three rounding methods wich we can use:</p>\n\n<p>The <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Math/round\">Math.round()</a> is most commonly used, it returns the value rounded to the nearest integer. Then there is the <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Math/floor\">Math.floor()</a> wich returns the largest integer less than or equal to a number. Lastly we have the <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Math/ceil\">Math.ceil()</a> function that returns the smallest integer greater than or equal to a number.</p>\n\n<p>There is also the <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Number/toFixed\">toFixed()</a> that returns a string representing the number using fixed-point notation.</p>\n\n<p>Ps.: There is <strong>no 2nd argument</strong> in the <em>Math.round()</em> method. The <em>toFixed()</em> is <strong>not IE specific</strong>, its <a href=\"http://bclary.com/2004/11/07/#a-15.7.4\">within</a> the ECMAScript specification aswell</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>You hav to convert your input into a number and then round them:</p>\n\n<pre><code>function toInteger(number){ \n  return Math.round(  // round to nearest integer\n    Number(number)    // type cast your input\n  ); \n};\n</code></pre>\n\n<p>Or as a one liner:</p>\n\n<pre><code>function toInt(n){ return Math.round(Number(n)); };\n</code></pre>\n\n<p>Testing with different values:</p>\n\n<pre><code>toInteger(2.5);           // 3\ntoInteger(1000);          // 1000\ntoInteger(\"12345.12345\"); // 12345\ntoInteger(\"2.20011E+17\"); // 220011000000000000\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>If you need to round to a certain number of digits use the following function</p>\n\n<pre><code>function roundNumber(number, digits) {\n            var multiple = Math.pow(10, digits);\n            var rndedNum = Math.round(number * multiple) / multiple;\n            return rndedNum;\n        }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 101
                },
                {
                    "body": "<p>Here is a way to be able to use <code>Math.round()</code> with a second argument (number of decimals for rounding):</p>\n\n<pre><code>// 'improve' Math.round() to support a second argument\nvar _round = Math.round;\nMath.round = function(number, decimals /* optional, default 0 */)\n{\n  if (arguments.length == 1)\n    return _round(number);\n\n  var multiplier = Math.pow(10, decimals);\n  return _round(number * multiplier) / multiplier;\n}\n\n// examples\nMath.round('123.4567', 2); // =&gt; 123.46\nMath.round('123.4567');    // =&gt; 123\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>You can also use <code>toFixed(x)</code> or <code>toPrecision(x)</code> where <em>x</em> is the number of digits.</p>\n\n<p>Both these methods are supported in all major browsers</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>A very good approximation for rounding:</p>\n\n<pre><code>function Rounding (number, precision){\n\nvar newNumber;\nvar sNumber = number.toString();\n\nvar increase = precision + sNumber.length - sNumber.indexOf('.') + 1;\n\nif (number &lt; 0)\n  newNumber = (number -  5 * Math.pow(10,-increase));\nelse\n  newNumber = (number +  5 * Math.pow(10,-increase));\n\nvar multiple = Math.pow(10,precision);\n\nreturn Math.round(newNumber * multiple)/multiple;\n}\n</code></pre>\n\n<p>Only in some cases when the length of the decimal part of the number is very long will it be incorrect.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Math.floor(19.5) = 19  should also work.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>While working on a project, I came across a JS-script created by a former employee that basically creates a report in the form of</p>\n\n<pre><code>Name : Value\nName2 : Value2\n</code></pre>\n\n<p>etc.</p>\n\n<p>The peoblem is that the values can sometimes be floats (with different precision), integers, or even in the form <code>2.20011E+17</code>. What I want to output are pure integers. I don't know a lot of JavaScript, though.  How would I go about writing a method that takes these sometimes-floats and makes them integers?</p>\n",
            "last_activity_date": 1400194570,
            "question_id": 246193,
            "score": 44,
            "tags": [
                "javascript",
                "floating-point",
                "numbers",
                "rounding"
            ],
            "title": "How do I round a number in JavaScript?"
        }
    ]
}
