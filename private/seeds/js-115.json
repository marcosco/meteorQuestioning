{
    "items": [
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You cannot access any of your iframe's contents if it points to a different domain than the parent site.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The SCRIPT70 error in IE9 occurs most likely when your iframe is calling some javascript (especially if it affects the parent page - e.g. hash change of parent url)</p>\n\n<p>Check that your iframe's host/protocol/port number matches.\nIE9 is exceptionally strict about the host name(down to the www portion in my case) and document.domain did not seem to provide a workaround for that.</p>\n\n<p>Encountered this issue and fixed it while dealing with multiple iframes, hope this helps others with the same issue.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Tip from this one page should help: <a href=\"http://forum.jquery.com/topic/strange-behaviour-in-ie9\" rel=\"nofollow\">http://forum.jquery.com/topic/strange-behaviour-in-ie9</a></p>\n\n<blockquote>\n  <p>Make sure that HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Internet Explorer\\MAIN\\FeatureControl\\FEATURE_OBJECT_CACHING\\iexplore.exe is not set to 0 (it should be 1 or missing)</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Facing a similar issue (maybe not with jquery.js but the same error description) the solution was a bit different from above. Actually I have searched for other iexplore.exe lines in regedit.  I have found other two and changed it to 1 and it worked then.</p>\n\n<pre><code>hkey_local_machine\\software\\microsoft\\internet explorer\\main\\featurecontrol\\feature_protocol_lockdown \nhkey_local_machine\\software\\microsoft\\internet explorer\\main\\featurecontrol\\feature_internet_shell_folders\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>If you run a 64-bit OS, make sure the value of this key is also set to 1: <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\**Wow6432Node**\\Microsoft\\Internet Explorer\\Main\\FeatureControl\\FEATURE_OBJECT_CACHING\\\\iexplore.exe</code></p>\n\n<p>Without this key we had random <code>SCRIPT70: Permission denied</code> errors in Internet Explorer 11.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>If you are dealing with select element in your script maybe your problem is like mine</p>\n\n<p><a href=\"http://stackoverflow.com/questions/22169779/script70-permission-denied-when-adding-options-to-select-element-from-a-recentl\">SCRIPT70: Permission denied when adding options to select element from a recently closed iframe</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>function Sizzle( selector, context, results, seed ) {\n  var match, elem, m, nodeType,\n\n  // QSA vars\n  i, groups, old, nid, newContext, newSelector;\n\n  // MY EDIT - this try/catch seems to fix IE 'permission denied' errors as described here:\n  // http://bugs.jquery.com/ticket/14535\n\n  try{\n    document === document; //may cause permission denied\n  }\n  catch(err){\n    document = window.document; //resets document, and no more permission denied errors.\n  }\n\n  if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n    setDocument( context );\n  }\n\n  //...... snip .........//\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/xqb4s/\" rel=\"nofollow\">http://jsfiddle.net/xqb4s/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Recently I encountered this error. In the application I am working, I'm using <b>TinyMce text editor</b> for our email composer. This creates an <b>iframe</b> which contains the objects I need for an email composer. After seeing many blogs about the said error, I tried to programmatically remove the TinyMce text editor object then triggered the redirection. And it WORKED!</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am getting the strange error \"<code>SCRIPT70: Permission denied jquery.js, line 21 character 67</code>\" on IE-9. Searched on google but could not find anything except a bug on CKEditor. </p>\n\n<p>Position it showed just contains following:</p>\n\n<pre><code>P=navigator.userAgent,xa=false,Q=[],M,ca=Object.prototype.toString,da=Object.prototype.hasOwnProperty,ea=Array.prototype.push,R=Array.prototype.slice,V=Array.prototype.indexOf;c.fn=c.prototype={init:function(a,b){var d,f;if(!a)return this;if(a.nodeType){this.context=this[0]=a;this.length=1;return this}if(typeof a===\"string\")if((d=Oa.exec(a))&amp;&amp;(d[1]||!b))if(d[1]){f=b?b.ownerDocument||b:s;if(a=Sa.exec(a))if(c.isPlainObject(b)){a=[s.createElement(a[1])];\n</code></pre>\n\n<p>anyone run into this error?</p>\n\n<p>*<em>Additional Info:</em>*We open an iframe and call some javascript functions inside this iframe. </p>\n\n<p>thanks.</p>\n",
            "last_activity_date": 1426139919,
            "question_id": 5352057,
            "score": 12,
            "tags": [
                "javascript",
                "permissions",
                "internet-explorer-9"
            ],
            "title": "SCRIPT70: Permission denied IE9"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>A word boundary (<code>\\b</code>) is a zero width match that can match:</p>\n\n<ul>\n<li>Between a word character (<code>\\w</code>) and a non-word character (<code>\\W</code>) or</li>\n<li>Between a word character and the start or end of the string.</li>\n</ul>\n\n<p>In Javascript the definition of <code>\\w</code> is <code>[A-Za-z0-9_]</code> and <code>\\W</code> is anything else.</p>\n\n<p>The negated version of <code>\\b</code>, written <code>\\B</code>, is a zero width match where the above does <em>not</em> hold. Therefore it can match:</p>\n\n<ul>\n<li>Between two word characters.</li>\n<li>Between two non-word characters.</li>\n<li>Between a non-word character and the start or end of the string.</li>\n<li>The empty string.</li>\n</ul>\n\n<p>For example if the string is <code>\"Hello, world!\"</code> then <code>\\b</code> matches in the following places:</p>\n\n<pre><code> H e l l o ,   w o r l d !\n^         ^   ^         ^ \n</code></pre>\n\n<p>And <code>\\B</code> matches those places where <code>\\b</code> doesn't match:</p>\n\n<pre><code> H e l l o ,   w o r l d !\n  ^ ^ ^ ^   ^   ^ ^ ^ ^   ^\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 40
                }
            ],
            "body": "<p>What are non-word boundary in regex (\\B), compared to word-boundary?</p>\n",
            "last_activity_date": 1293494165,
            "question_id": 4541573,
            "score": 12,
            "tags": [
                "javascript",
                "regex",
                "word-boundary",
                "boundary",
                "word-boundaries"
            ],
            "title": "What are non-word boundary in regex (\\B), compared to word-boundary?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Use the <a href=\"http://nodejs.org/api/http.html\">http client</a>.</p>\n\n<p>Something along these lines:</p>\n\n<pre><code>var http = require('http');\nvar client = http.createClient(3000, 'localhost');\nvar request = client.request('PUT', '/users/1');\nrequest.write(\"stuff\");\nrequest.end();\nrequest.on(\"response\", function (response) {\n    // handle the response\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<pre><code>var http = require('http');\nvar client = http.createClient(1337, 'localhost');\nvar request = client.request('PUT', '/users/1');\nrequest.write(\"stuff\");\nrequest.end();\nrequest.on(\"response\", function (response) {\nresponse.on('data', function (chunk) {\nconsole.log('BODY: ' + chunk);\n });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For others googling this question, the accepted answer is no longer correct and has been deprecated.</p>\n\n<p>The correct method (as of this writing) is to use the http.request method as described here: <a href=\"http://docs.nodejitsu.com/articles/HTTP/clients/how-to-create-a-HTTP-request\">nodejitsu example</a></p>\n\n<p>Code example (from the above article, modified to answer the question):</p>\n\n<pre><code>var http = require('http');\n\nvar options = {\n  host: 'localhost',\n  path: '/users/1',\n  port: 3000,\n  method: 'PUT'\n};\n\ncallback = function(response) {\n  var str = '';\n\n  //another chunk of data has been recieved, so append it to `str`\n  response.on('data', function (chunk) {\n    str += chunk;\n  });\n\n  //the whole response has been recieved, so we just print it out here\n  response.on('end', function () {\n    console.log(str);\n  });\n}\n\nhttp.request(options, callback).end();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>A small request function in CoffeeScript</p>\n\n<pre><code>http = require \"http\"\nrequest = (url, done) -&gt;\n  throw \"Invalid URL\" unless (m = url.match /^http:\\/\\/([^\\/]+)(.*)/)\n  http.request({ host:m[1], path:m[2] }, (res) -&gt;\n    str = ''\n    res.on 'data', (c) -&gt; str += c\n    res.on 'end', -&gt; res.body = str; done res\n  ).end()\n</code></pre>\n\n<p>and if you hate CoffeeScript (puzzling why...) here's a JavaScript version</p>\n\n<pre><code>var http = require(\"http\");\nvar request = function(url, done) {\n  var m;\n  if (!(m = url.match(/^http:\\/\\/([^\\/]+)(.*)/))) {\n    throw \"Invalid URL\";\n  }\n  http.request({\n    host: m[1],\n    path: m[2]\n  }, function(res) {\n    var str = '';\n    res.on('data', function(c) {\n      str += c;\n    });\n    return res.on('end', function() {\n      res.body = str;\n      done(res);\n    });\n  }).end();\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How do I make a Http request with node.js that is equivalent to this code:</p>\n\n<pre><code>curl -X PUT http://localhost:3000/users/1\n</code></pre>\n",
            "last_activity_date": 1368283126,
            "question_id": 4294939,
            "score": 12,
            "tags": [
                "javascript",
                "http",
                "node.js",
                "httpclient"
            ],
            "title": "Http request with node?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Nope, not possible. You can hide things by using closures though.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think this is possible as long as the loop is not recursive (sort of inspired by Matti's answer above)</p>\n\n<p>Consider this example.</p>\n\n<pre><code>var obj = {\n\n  name: 'jim',\n  age: '35',\n  hidden: {status: 'cool'}\n\n}\n</code></pre>\n\n<p>Your code above will produce the following output</p>\n\n<pre><code>jim\n35\n(object)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>It isn't possible in ECMAScript 3 (which was what the major browsers implemented at the time this question was asked in 2010). However, in ECMAScript 5, which current versions of all major browsers implement, it is possible to set a property as non-enumerable:</p>\n\n<pre><code>var obj = {\n   name: \"Fred\"\n};\n\nObject.defineProperty(obj, \"age\", {\n    enumerable: false,\n    writable: true\n});\n\nobj.age = 75;\n\n/* The following will only alert \"name=&gt;Fred\" */\nfor (var i in obj) {\n   window.alert(i + \"=&gt;\" + obj[i]);\n}\n</code></pre>\n\n<p>This works in current browsers: see <a href=\"http://kangax.github.com/es5-compat-table/\">http://kangax.github.com/es5-compat-table/</a> for details of compatibility in older browsers.</p>\n\n<p>Note that the property must also be set writable in the call to <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\"><code>Object.defineProperty</code></a> to allow normal assignments (it's <code>false</code> by default).</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>It's a bit tricky!</p>\n\n<pre><code>function secret() {\n  var cache = {};\n  return function(){\n    if (arguments.length == 1) { return cache[arguments[0]];}\n    if (arguments.length == 2) { cache[arguments[0]] = arguments[1]; }\n  };\n}\nvar a = secret();\n\na.hello = 'world';\na('hidden', 'from the world');\n</code></pre>\n\n<p>If you are a real pro though, you can do it this way!</p>\n\n<pre><code>var a = new (secret())();\n\na.hello = 'world';\na.constructor('hidden', 'from the world');\n</code></pre>\n\n<p>Now if you look a in firebug it will be an object ... but you know better! ;-) </p>\n\n<p>psst.. check out my db.js project on github.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I want to create an object with a hidden property(a property that does not show up in a <code>for (var x in obj</code> loop). Is it possible to do this?</p>\n",
            "last_activity_date": 1382698453,
            "question_id": 2636453,
            "score": 12,
            "tags": [
                "javascript"
            ],
            "title": "Is it possible to create a hidden property in javascript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Ext.js is completely independent of jQuery and as such does not rely on jQuery in any way. Don't know what you mean by 'full compatibility' but you can use both on the same page as they don't interfere with each other.</p>\n\n<p>As Ext.js doesn't use the <code>$</code>-function, you don't even have to do any special trickery to get them to work together, as is the case with using Prototype with jQuery, for example.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>You should be able to find some answers on the <a href=\"http://jquery.com/\" rel=\"nofollow\">jquery site</a> where it talks about <a href=\"http://docs.jquery.com/Using_jQuery_with_Other_Libraries\" rel=\"nofollow\">using jQuery with other libraries</a>.</p>\n\n<p>Hope this helps some.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<h2>No more other libraries</h2>\n\n<p>ExtJS used to be built on top of other libraries. With version 2 they had their own but still offered the possibility to use other libs. But not anymore with version 3. ExtJS core code is very very mature, very efficient and VERY tidy. If you ask me, their code is written a lot better than jQuery's but that's subjective.</p>\n\n<h2>Combine with jQuery with no tricks</h2>\n\n<p>Anyway. If you intend to use ExtJS but would like to use other libs as well you can still do that. But if you think that you'd rather use jQuery with ExtJS I suggest you don't do that, because your code will have many hacks to overcome differences. I would rather use just ExtJS. You'll like it and probably won't want to switch back anymore.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I think jQuery (core) and ExtJS are very compatible.  I prefer to start new projects using both; in fact, flot.js demands jQuery - and flot.js is very nice - so in nearly every project I use both jQuery and ExtJS.  Go for it!</p>\n\n<p>Though ExtJS has made strides in their DOM manipulation and traversal utilities (core), nothing beats the elegance of jQuery (core).  However, I prefer ExtJS (UI) to jQuery UI; I find it is much more homogeneous (and capable) than jQuery UI.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>For ExtJS 3 for example, you need to follow a given loading order for these libraries AND load the ExtJS jQuery adapter.</p>\n\n<p>See <a href=\"http://www.extjs.com/learn/Ext_Getting_Started#What_is_the_proper_include_order_for_my_JavaScript_files.3F\" rel=\"nofollow\">http://www.extjs.com/learn/Ext_Getting_Started</a> for details :</p>\n\n<pre><code>jQuery (1.1+)    jquery.js\njquery-plugins.js // required jQuery plugins\next-jquery-adapter.js\next-all.js (or your choice of files) \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Upto Extjs 3.XX, adapters were configurable. \nBut Sencha (Ext4) onwards, there is no separate adapters, instead we have ExtCore.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I believe Ext.js was using jQuery, but I'm not sure. Does anyone know if there is full compatibility with jQuery and Ext.js?</p>\n",
            "last_activity_date": 1327292049,
            "question_id": 2000759,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "extjs"
            ],
            "title": "Is jQuery compatible with ExtJS?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It honestly depends. Your first method is called Camel Coding, and is a standard used by Java and C++ languages, and taught a lot in CS.</p>\n\n<p>The second is used by .NET for their classes and then the <code>_camelCode</code> notation used for private members.</p>\n\n<p>I like the second, but that's my taste, which is what I think this depends on.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I like to think it's because \"JavaScript\" start's with \"java\", hence we like to code in the standard of java, while, in it :) At least, this is my reasoning.</p>\n\n<p>I still follow this pattern to this day, even though I program in c# mostly.</p>\n\n<p>It doesn't matter at all; pick which way is most readable for you and your team, and stick with that approach.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>the <a href=\"http://en.wikipedia.org/wiki/Naming%5Fconvention\" rel=\"nofollow\">naming convention</a> with the lowercase at the start is called <a href=\"http://en.wikipedia.org/wiki/CamelCase\" rel=\"nofollow\">camel case</a>. The other naming convention with a capital at the start is named Pascal case.</p>\n\n<p>The naming convention only matters for your readability. Pick a convention and remember to stick with it throughout your application.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A popular convention in Javascript is to only <strong>capitalize constructors</strong> (also often mistakenly called \"classes\").</p>\n\n<pre><code>function Person(name) {\n  this.name = name;\n}\nvar person = new Person('John');\n</code></pre>\n\n<p>This convention is so popular that Crockford even included it in its <a href=\"http://www.jslint.com/\">JSLint</a> under an optional \u2014 \"Require Initial Caps for constructors\" : )</p>\n\n<p>Anything that's not a constructor usually <strong>starts with lowercase</strong> and is <strong>camelcased</strong>. This style is somewhat native to Javascript; ECMAScript, for example (ECMA-262, 3rd and 5th editions) \u2014 which JavaScript and other implementations conform to \u2014 follows exactly this convention, naming built-in methods in camelcase \u2014 <code>Date.prototype.getFullYear</code>, <code>Object.prototype.hasOwnProperty</code>, <code>String.prototype.charCodeAt</code>, etc.</p>\n",
                    "is_accepted": true,
                    "score": 28
                }
            ],
            "body": "<p>I am for the most part a developer in ASP.NET and C#. I name my variables starting in lowercase and my methods starting in uppercase. but most javascript examples I study have functions starting in lowercase. Why is this and does it matter?</p>\n\n<pre><code>function someMethod() { alert('foo'); }\n</code></pre>\n\n<p>vs </p>\n\n<pre><code>function SomeMethod() { alert('bar'); }\n</code></pre>\n",
            "last_activity_date": 1255499907,
            "question_id": 1564398,
            "score": 12,
            "tags": [
                "javascript",
                "naming-conventions"
            ],
            "title": "Javascript Method Naming lowercase vs uppercase"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I'm using Chrome 32.0 (newest version). Both methods work fine here, can't understand why it is different in your end...</p>\n\n<p>That said, I've often had to use a setTimeout() for a few hundred milliseconds to make e.g. focus() work as expected. That would probably do the trick for you as well. In your case:</p>\n\n<pre><code>setTimeout(display_login_form(),500)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>After researching this issue thoroughly, here is my final report:</p>\n\n<p>First, the problem highlighted in the question was actually a red herring. I was incorrectly submitting the form to an <code>iframe</code> (which <a href=\"http://stackoverflow.com/users/1478248/arty\">arty</a> highlighted - but I didn't connect the dots). My approach to this issue was based on <a href=\"https://gist.github.com/kostiklv/968927/\" rel=\"nofollow\">this example</a>, which some of the other, related answers also referenced. The correct approach can be seen <a href=\"http://css-tricks.com/snippets/html/post-data-to-an-iframe/\" rel=\"nofollow\">here</a>. Basically, the <code>action</code> of the <code>form</code> should be set to the <code>src</code> of the <code>iframe</code> (which is exactly what @arty suggested).</p>\n\n<p>When you do that, the particular problem highlighted in the question goes away because the page is not reloaded at all (which makes sense - why should the page reload when you're submitting to an <code>iframe</code>? It shouldn't, which should have tipped me off). Anyhow, because the page does not reload, Chrome never asks you to save your password, no matter how long you wait to display the form after <code>onDomReady</code>.</p>\n\n<p><strong>Accordingly, submitting to an <code>iframe</code> (properly) will NEVER result in Chrome asking you to save your password. Chrome will only do so if the page that contains the form reloads (note: contrary to older posts on here, Chrome WILL ask you to save your password if the form was dynamically created).</strong></p>\n\n<p>And so, the only solution is to force a page reload when the form is submitted. But how do we do that AND keep our AJAX/SPA structure intact? Here is my solution:</p>\n\n<p>(1) Divide the SPA into two pieces: (1) For non-logged in users, (2) For logged-in users. This might not be doable for those with bigger sites. <strong>And I don't consider this a permanent solution - please, Chrome, please... fix this bug.</strong></p>\n\n<p>(2) I capture two events on my forms: <code>onClickSaveButton</code> and <code>onFormSubmit</code>. For the login form, in particular, I grab the user details on <code>onClickSaveButton</code> and make an AJAX call to verify their information. If that information passes, then I manually call <code>formName.submit()</code> In <code>onFormSubmit</code>, I ensure that the form is not submitted before <code>onClickSaveButton</code> is called.</p>\n\n<p>(3) The form submits to a PHP file that simply redirects to the <code>index.php</code> file</p>\n\n<p>There are two advantages to this approach:</p>\n\n<p>(1) It works on Chrome.</p>\n\n<p>(2) On Firefox, the user is now only asked to save their password if they have successfully logged in (personally I've always found it annoying to be asked to save my pwd when it was wrong).</p>\n\n<p>Here is the relevant code (simplified):</p>\n\n<p><strong>INDEX.PHP</strong></p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Chrome: Remember Password&lt;/title&gt;\n\n&lt;!-- dependencies --&gt;\n&lt;script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-2.0.3.min.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"http://underscorejs.org/underscore.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"http://backbonejs.org/backbone.js\"&gt;&lt;/script&gt;\n\n&lt;!-- app code --&gt;\n&lt;script type=\"text/javascript\" src=\"mycode.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n\n    $(function(){\n\n        createForm();\n\n    });\n\n&lt;/script&gt;\n\n&lt;/head&gt;\n&lt;body&gt;\n\n    &lt;div id='header'&gt;\n        &lt;h1&gt;Welcome to my page!&lt;/h1&gt;\n    &lt;/div&gt;\n\n    &lt;div id='content'&gt;\n        &lt;div id='form'&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n&lt;/body&gt; \n&lt;/html&gt;\n</code></pre>\n\n<p><strong>MYCODE.JS</strong></p>\n\n<pre><code>function createForm() {\n\n    VLoginForm = Backbone.View.extend({\n\n        allowDefaultSubmit : true,\n\n        // UI events from the HTML created by this view\n        events : {\n            \"click button[name=login]\" : \"onClickLogin\",\n            \"submit form\" : \"onFormSubmit\"\n        },\n\n        initialize : function() {\n            this.verified = false;\n            // this would be in a template\n            this.html = \"&lt;form method='post' action='dummy.php'&gt;&lt;p&gt;&lt;label for='email'&gt;Email&lt;/label&gt;&lt;input type='text' name='email'&gt;&lt;/p&gt;&lt;p&gt;&lt;label for='password'&gt;Password&lt;input type='password' name='password'&gt;&lt;/p&gt;&lt;button name='login'&gt;Login&lt;/button&gt;&lt;/form&gt;\";        \n        },\n        render : function() {\n            this.$el.html(this.html);\n            return this;\n        },\n        onClickLogin : function(event) {\n\n            // verify the data with an AJAX call (not included)\n\n            if ( verifiedWithAJAX ) {\n                this.verified = true;\n                this.$(\"form\").submit();\n            }           \n            else {\n                // not verified, output a message\n            }\n\n            // we may have been called manually, so double check\n            // that we have an event to stop.\n            if ( event ) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n\n        },\n        onFormSubmit : function(event) {\n            if ( !this.verified ) {             \n                event.preventDefault();\n                event.stopPropagation();\n                this.onClickLogin();\n            }\n            else if ( this.allowDefaultSubmit ) {\n                // submits the form as per default\n            }\n            else {\n                // do your own thing...\n                event.preventDefault();\n                event.stopPropagation();\n            }\n        }\n    });\n\n    var form = new VLoginForm();\n    $(\"#form\").html(form.render().$el);\n\n}\n</code></pre>\n\n<p><strong>DUMMY.PHP</strong></p>\n\n<pre><code>&lt;?php\n    header(\"Location: index.php\");\n?&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>You can get Chrome (v39) to show the password save prompt without reloading. Simply submit the form to an iframe whose src is a blank page that <strong>does not</strong> have a <code>Content-Type: text/html</code> header (leaving out the header or using <code>text/plain</code> both seem to work).</p>\n\n<p>Don't know if this is a bug, or intended behavior. If former, please keep it quiet :-)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p><em>NOTE: This question was heavily edited from its original version. The issue has been greatly simplified.</em></p>\n\n<p>Similar questions have been asked several times before, in different forms - e.g.,</p>\n\n<p><a href=\"http://stackoverflow.com/questions/2382329/how-can-i-get-browser-to-prompt-to-save-password\">How can I get browser to prompt to save password?</a></p>\n\n<p><a href=\"http://stackoverflow.com/questions/2398763/how-does-browser-know-when-to-prompt-user-to-save-password\">How does browser know when to prompt user to save password?</a></p>\n\n<p>However, this question is getting at a very specific aspect of Chrome's functionality, so it is quite different in that regard.</p>\n\n<p><em>Judging by past answers, it appears that the best approach to getting Chrome to prompt for password saving is to submit the form to a dummy iframe, while actually logging in through AJAX</em>: <a href=\"https://gist.github.com/kostiklv/968927/\">example</a>. That makes sense to me and so I have been fiddling around with some sample code for a few days now. However, Chrome's behaviour in this regard DOES NOT make sense to me. At all. Hence the question.</p>\n\n<p><strong>For some reason, Chrome will not prompt you to save your password if the form that submits to a dummy iframe is present during/right after <em>onDomReady</em></strong>.</p>\n\n<p>A jsfiddle can be found <a href=\"http://jsfiddle.net/68hau/show/\">here</a>, but it's of little use because <em>you must create <code>dummy.html</code> locally to see the behaviour described</em>. So the best way to see this is to copy the full html into your own <code>index.html</code> and then create a <code>dummy.html</code> file too.</p>\n\n<p>Here is the full code for <code>index.html</code>. The three approaches are highlighted as <code>(1)</code>, <code>(2)</code>, <code>(3)</code>. Only <code>(2)</code> ensures that the user is prompted to save their password, and the fact that <code>(3)</code> doesn't work is particular perplexing to me.</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Chrome: Remember Password&lt;/title&gt;\n&lt;script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-2.0.3.min.js\"&gt;&lt;/script&gt;\n\n&lt;script type=\"text/javascript\"&gt;  \n\n    $(function(){\n\n        function create_login_form()\n        {\n            $('#login_form').html(\n            \"&lt;input type='text' name='email'&gt;\" +\n            \"&lt;input type='password' name='password'&gt;\" +\n            \"&lt;input id='login-button' type='submit' value='Login'/&gt;\");\n        }\n\n        // (1) this does not work. chrome seems to require time after \"onDomReady\" to process\n        // the forms that are present on the page. if the form fields exist while that processing\n        // is going on, they will not generate the \"Save Password?\" prompt.\n        //create_login_form();\n\n        // (2) This works. chrome has obviously finished its \"work\" on the form fields by now so\n        // we can add our content to the form and, upon submit, it will prompt \"Save Password?\"\n\n        setTimeout(create_login_form,500);\n\n    });\n\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;!-- Our dummy iframe where the form submits to --&gt;\n&lt;iframe src=\"dummy.html\" name=\"dummy\" style=\"display: none\"&gt;&lt;/iframe&gt;\n\n&lt;form action=\"\" method=\"post\" target=\"dummy\" id=\"login_form\"&gt;\n\n    &lt;!-- (3) fails. form content cannot be present on pageload --&gt;\n    &lt;!--\n    &lt;input type='text' name='email'&gt;\n    &lt;input type='password' name='password'&gt;\n    &lt;input id='login-button' type='submit' value='Login'/&gt;      \n    --&gt;\n\n&lt;/form&gt;\n\n&lt;/body&gt; \n&lt;/html&gt;\n</code></pre>\n\n<p>If anyone could possibly explain what's going on here, I would be most appreciative.</p>\n\n<p><em>EDIT:</em> Note that this \"saving password issue\" with Chrome has extended to people working with AngularJS, also developed by Google: <a href=\"http://github.com/fnakstad/angular-client-side-auth/issues/58\">Github</a></p>\n",
            "last_activity_date": 1418843353,
            "question_id": 21191336,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "google-chrome",
                "backbone.js"
            ],
            "title": "Getting Chrome to prompt to save password when using AJAX to login"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>That's their new tracking code, I wouldn't be surprised if their detector isn't set up to find it yet. Go into the Google Analytics real-time dashboard and see if your pageviews are showing up - if they are, don't worry about the incorrect flagging.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>It took a day or two after I put the tracking code on each of my pages for the status on my Google Analytics Tracking Info tab to be updated from \"Tracking Not Installed\" to \"Universal Analytics is enabled for this property\".  During this time I was seeing regular activity in my tracking reports.</p>\n\n<p>If you're brand new to Google Analytics, the default reports only include data up to the previous day.  If you want to check for activity on the same day that you added the tracking code, you have to adjust the date range to include the current day's activity.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>I fix this by using the asynchronous script first, then visiting a page on the site, refreshing the GA screen to check if the status has been changed, then replacing the GA script with the Universal script once the status has been updated. It works every time. It makes my clients happy.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am trying to setup Google Analytics on my site, however it will not detect that it is being tracked. </p>\n\n<p>I have placed the code they provided in my header.php right before the <code>&lt;/head&gt;</code> as recommended:</p>\n\n<pre><code>&lt;script&gt;\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\nm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\nga('create', 'UA-41420598-1', 'example.com');\nga('send', 'pageview');\n\n&lt;/script&gt;\n</code></pre>\n\n<p>Not really sure what else to do..</p>\n",
            "last_activity_date": 1407213817,
            "question_id": 16904846,
            "score": 11,
            "tags": [
                "javascript",
                "wordpress",
                "seo",
                "google-analytics"
            ],
            "title": "Google analytics: Tracking Not Installed"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>There is no constructor for the google.maps.Icon, it is an anonymous javascript object like <a href=\"https://developers.google.com/maps/documentation/javascript/reference#MapOptions\">MapOptions</a>, <a href=\"https://developers.google.com/maps/documentation/javascript/reference#MarkerOptions\">MarkerOptions</a>, <a href=\"https://developers.google.com/maps/documentation/javascript/reference#PolygonOptions\">PolygonOptions</a>, etc.</p>\n\n<p>You use it like this:</p>\n\n<pre><code>var icon = {\n    anchor: new Point(...),\n    url: \"myurl\"\n    // etc..\n    };\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>Hmm... Now, this answer is just wrong.</p>\n\n<p>You can't </p>\n\n<pre><code>var icon = new google.maps.Icon({\n    anchor: new Point(...),\n    url: \"myurl\"\n    // etc..\n});\n</code></pre>\n\n<p>It's an object literal, which means that you can just use it like this:</p>\n\n<pre><code>var icon = {\n    anchor: new Point(...),\n    url: \"myurl\"\n    // etc..\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>The docs of <a href=\"https://developers.google.com/maps/documentation/javascript/reference#Icon\">Google Maps V3 JS API</a> does not seem to give the interface of the construct of <code>google.maps.Icon</code>. I found an example with <code>MarkerImage</code>, which seems to be deprecated now.</p>\n\n<p>So, what are the possible <code>google.maps.Icon</code> construct parameters and what is their order? How to define icon size, icon offset in sprite, icon anchor, etc?</p>\n\n<p><strong>Edit:</strong></p>\n\n<p>How would I create an icon and assign it to a marker? Eg (not tested/does not work):</p>\n\n<pre><code>var icon = new google.maps.Icon(path, \n    new google.maps.Size(32, 32), // size\n    new google.maps.Point(0, 32), // offset in sprite\n    null, // anchor\n);\n</code></pre>\n\n<p>I do see the docs but I do not see example usage if that class!</p>\n",
            "last_activity_date": 1361808871,
            "question_id": 14407079,
            "score": 11,
            "tags": [
                "javascript",
                "google-maps"
            ],
            "title": "What is the construct interface `google.maps.Icon`"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Several options:</p>\n\n<ul>\n<li>Open the IE developer tools (by hitting F12 while in the browser), and use the provided JavaScript debugger. To get to know it better, see the <a href=\"http://msdn.microsoft.com/en-us/library/dd565625%28v=vs.85%29.aspx\">MSDN reference on using the JavaScript debugger</a>.</li>\n<li>Install <a href=\"http://www.debugbar.com/\">Debug Bar</a>, which provides an extended feature-set to the built-in developer tools.</li>\n<li>Install <a href=\"http://www.my-debugbar.com/wiki/IETester/HomePage\">IE Tester</a>, which emulates various IE instances (versions), and use its built-in Debug Bar. With that approach, you can also pin-point version-specific problems.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>You can use IE (by hitting F12 while in the browser)<img src=\"http://i.stack.imgur.com/92Fkn.png\" alt=\"enter image description here\"></p>\n\n<p><img src=\"http://i.stack.imgur.com/jNlGs.png\" alt=\"enter image description here\"></p>\n\n<p><img src=\"http://i.stack.imgur.com/3YpyN.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am trying to debug my JavaScript in IE but I have no idea where to start. Can anybody help me? I think it's only a small error, but the developer tools are a bit useless.</p>\n\n<p>An <code>unexpected identifier</code> error comes up when you go to <a href=\"http://songtagapp.com/\">http://songtagapp.com/</a>. I think it's something to do with the <a href=\"https://github.com/ZeeAgency/requirejs-tpl\"><code>tpl!</code> plugin</a> I am using for RequireJS, but that's all I can tell.</p>\n",
            "last_activity_date": 1375358045,
            "question_id": 10191099,
            "score": 11,
            "tags": [
                "javascript",
                "internet-explorer",
                "debugging",
                "requirejs"
            ],
            "title": "Debugging JavaScript in IE"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Some years ago, I think year 2010, the <a href=\"http://www.ndp.org.sg/\" rel=\"nofollow\">Singapore National Day parade</a> site frontpage had multiple pictures, like 20 x 20 of them. Every day during peak hours the database (MySQL) and web server (Apache) went down. </p>\n\n<p>The development team then deployed <code>memcached</code> to resolve the issue.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Very few use cases support serving hundreds or thousands of images on a single page. One such case is Google Images. This is how to do it right:</p>\n\n<p><a href=\"https://www.google.com/search?tbm=isch&amp;q=jeff+atwood\">https://www.google.com/search?tbm=isch&amp;q=jeff+atwood</a></p>\n\n<ol>\n<li><p><strong>Lazy load images</strong> This is a requirement. If the images are below the fold (outside the visible document area) there's no reason to load them.</p></li>\n<li><p><strong>Use pagination</strong> Google Images breaks up results into pages where only a handful of images are loaded at the time. Google also uses some JavaScript-fu to implement an <em>infinite scroll</em> - once the browser gets close to the bottom of the current results, it sends a request to load more result pages and injects them at the bottom of the page. </p></li>\n<li><p><strong>SEO: No JavaScript, No Problem</strong> Visit the Google Images link again, but with JavaScript turned off. You can still browse through the results pages - there's about 15 images per page. Search engines can index this image content. </p></li>\n<li><p><strong>Maximum Image Display</strong> Once more than 150+ images are being displayed put a button at the bottom of the page to \"Load More Results\" - this button reloads the entire page, but starts at the 151st image instead of the 1st. Every image the browser has to draw takes up more memory &amp; CPU cycles. Scrolling a long list can quickly bring a mobile browser or modest desktop to crawl. </p></li>\n</ol>\n\n<p>Loading thousands of images is bad - it will tax your server to ruing the user experience. This is true of any large data set that a user wants to browse.  </p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Use <a href=\"http://en.wikipedia.org/wiki/Lazy_loading\" rel=\"nofollow\">lazy loading</a> to render these images when the user scrolls the page load set of images on the fly.</p>\n\n<p>This is a complex way to do where you load af few (N number of) images first and check that the user has not scrolled till few rows of images are left before <code>containerNode.offsetHeight</code>. If the user scrolls down that limit you create N number of image tags for the next n images to be loaded.</p>\n\n<p>This N can be varied based upon the image file size or dimensions.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The best answer I can think of:</p>\n\n<p><strong>Don't do this</strong>. Don't load 1000 images on one site, and <strong>do use</strong> some kind of lazy loading or pagination.</p>\n\n<p>Nevertheless, one idea, not sure if it fits, as you never gave the concrete use case:\nrun a <a href=\"http://en.wikipedia.org/wiki/Cron\" rel=\"nofollow\">cron</a> job to stitch the images together to a/some bigger image(s) every X minutes depending on your needs. Use the bigger image as you would use a sprite solution.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try the plugin <a href=\"http://www.gayadesign.com/diy/queryloader2-preload-your-images-with-ease/\" rel=\"nofollow\">QueryLoader 2</a>. It won't help you to load them quicker - as you say, the increase in number - but it will show a \"loading\" screen while elements are still loading, and may provide you with a better user experience.</p>\n\n<p>That or do as in some other answers and load them as you scroll down.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have like 1000 images on the same page. Unfortunately, I can't use sprites on them, as the number of images increases continuously. So you can imagine it sends 1000 HTTP requests, so it takes lots of time for the images to load plus it's not good experience for the visitors.</p>\n\n<p>I have seen one of the scripts named as <em>Lazy Load</em>, but I was thinking if there is a <strong><em>smarter way</em></strong> of loading images (good regarding <a href=\"http://en.wikipedia.org/wiki/Search_engine_optimization\" rel=\"nofollow\">SEO</a>, loads images faster and is good for user experience).</p>\n\n<p>Is there a way out to load images in a better way? </p>\n\n<p>To elaborate:</p>\n\n<p>I have to load all 1000 images on the same page, there is no other way out. What is it going to be like or for what am I going to use it for, I have actually made a <em>test page</em> for you at <a href=\"http://bloghutsbeta.blogspot.com/2012/03/testing-2_04.html\" rel=\"nofollow\">http://bloghutsbeta.blogspot.com/2012/03/testing-2_04.html</a>.</p>\n\n<p>As you can see, I am using the <a href=\"http://razorjack.net/quicksand/\" rel=\"nofollow\">jQuery Quicksand</a> plugin made by Jacek Galanciak. I don't have good relations with this plugin as if I am going to add jQuery or a script to it. It will ask for a callback function which is a blind spot for me. (That's why I made a CSS tooltip for it :D)</p>\n\n<p>I have many pictures in my test page but not 1000. When they will be 1000, it will be a mess. So I don't know how to deal with 1000 images in this case. (By the way THANKS TO YOU ALL FOR LOVELY COMMENTS)</p>\n",
            "last_activity_date": 1334348415,
            "question_id": 10137758,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "image",
                "loading"
            ],
            "title": "Load 1000 images smartly"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I think you need to add <code>{add:true}</code> to the options of fetch,</p>\n\n<p>if you assigned the fetch to a variable, you would get the result as well,\nbut then its not inside the collection you wanted</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I/O operations in javascript are almost always asynchronous, and so it is with Backbone as well. That means that just because <code>AllStudents.fetch</code> has returned, it hasn't fetched the data yet. So when you hit your <code>console.log</code> statement, the resources has not yet been fetched. You should pass a callback to <code>fetch</code>:</p>\n\n<pre><code>AllStudents.fetch({ url: \"/init.json\", success: function() {\n    console.log(AllStudents);\n}});\n</code></pre>\n\n<p>Or optionally, use the new promise feature in jQuery (<code>fetch</code> will return a promise):</p>\n\n<pre><code>AllStudents.fetch({ url: \"/init.json\" }).complete(function() {\n    console.log(AllStudents);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>fetch() returns a 'success' notification as already stated, but that just means that the server request was successful. fetch() brought back some JSON, but it still needs to stuff it into the collection. </p>\n\n<p>The collection fires a 'reset' event when it's contents have been updated. That is when the collection is ready to use...</p>\n\n<pre><code>AllStudents.bind('reset', function () { alert('AllStudents bind event fired.'); });\n</code></pre>\n\n<p>It looks like you had this in your first update. The only thing I did differently was to put fetch() in front of the event binding.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The attribute names and non-numeric attribute values in your JSON file must be double quoted (\" \") . Single quotes or no-quotes produces errors and response object is not created that could be used to create the models and populate the collection.</p>\n\n<p>So. If you change the json file content to :</p>\n\n<pre><code>[\n  { \"text\": \"Amy\", grade: 5 },\n  { \"text\": \"Angeline\", grade: 26 },\n  { \"text\": \"Anna\", grade: 55 }    \n]\n</code></pre>\n\n<p>you should see the non-empty collection object.</p>\n\n<p>You can change your code to see both success and failure as below:</p>\n\n<pre><code>    AllStudents.fetch({ \n    url: \"/init.json\", \n    success: function() {\n          console.log(\"JSON file load was successful\", AllStudents);\n      },\n    error: function(){\n       console.log('There was some error in loading and processing the JSON file');\n    }\n  });\n</code></pre>\n\n<p>For more details, probably it will be a good idea to look in to the way ajax response objects are created.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I'm trying to load some data into a Backbone Collection from a local JSON file, using this very basic code: </p>\n\n<pre><code>  window.Student = Backbone.Model.extend({\n  });\n  window.Students = Backbone.Collection.extend({\n    model: Student, \n  });\n  window.AllStudents = new Students();\n  AllStudents.fetch({ url: \"/init.json\"});\n  console.log('AllStudents', AllStudents);\n</code></pre>\n\n<p>In the console statement, <code>AllStudents</code> is empty. But <code>init.json</code> is definitely being loaded. It looks like this:</p>\n\n<pre><code>[\n  { text: \"Amy\", grade: 5 },\n  { text: \"Angeline\", grade: 26 },\n  { text: \"Anna\", grade: 55 }    \n]\n</code></pre>\n\n<p>What am I doing wrong?</p>\n\n<p><strong>UPDATE</strong>: I've also tried adding a <code>reset</code> listener above the <code>.fetch()</code> call, but that's not firing either:</p>\n\n<pre><code>AllStudents.bind(\"reset\", function() {\n  alert('hello world');\n});\nAllStudents.fetch({ url: \"/init.json\"});\n</code></pre>\n\n<p>No alert appears. </p>\n\n<p><strong>UPDATE 2</strong>: Trying this script (reproduced here in full):</p>\n\n<pre><code>$(function(){\n  window.Student = Backbone.Model.extend({\n  });\n  window.Students = Backbone.Collection.extend({\n    model: Student, \n  });\n  window.AllStudents = new Students();\n  AllStudents.url = \"/init.json\";\n  AllStudents.bind('reset', function() { \n      console.log('hello world');  \n  }); \n  AllStudents.fetch();\n  AllStudents.fetch({ url: \"/init.json\", success: function() {\n      console.log(AllStudents);\n  }});\n  AllStudents.fetch({ url: \"/init.json\" }).complete(function() {\n      console.log(AllStudents);\n  });\n});\n</code></pre>\n\n<p>Only one console statement even appears, in the third <code>fetch()</code> call, and it's an empty object. </p>\n\n<p>I'm now absolutely baffled. What am I doing wrong?</p>\n\n<p>The JSON file is being served as application/json, so it's nothing to do with that. </p>\n",
            "last_activity_date": 1366114802,
            "question_id": 9431673,
            "score": 11,
            "tags": [
                "javascript",
                "json",
                "backbone.js"
            ],
            "title": "Load data into a Backbone collection from JSON file?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The JavaScript functions always return something. If you don't specify something to return in the function, 'undefined' is returned by default (you can check this out in Firebug too).</p>\n\n<p>Don't worry though, this doesn't affect anything, you can ignore it.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Just write <code>\"hello world\";</code> and hit enter... it will return <code>\"hello world\"</code> instead of <code>undefined</code>, thus no <code>undefined</code> is displayed. <code>console.log</code> returns <code>undefined</code> and also logs arguments to console so you get multiple messages.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>As pointed out by others, javascript function will always return undefined if you do not specify any return value. You can just ignore it. It's not going to cause any harm.\nBut if it's annoying you too much then you can turn it off in repl. Repl has this property <strong>ignoreUndefined</strong> which is set to false by default. You can set it to true.\nTry this:</p>\n\n<pre><code>module.exports.repl.ignoreUndefined = true;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Recently I installed node.js on my Windows 7 machine. </p>\n\n<p>On execution of JavaScript, I get an <em>undefined</em> message along with successful execution of the expression. </p>\n\n<p>What's wrong here? I have not noticed any other side effects.</p>\n\n<p><img src=\"http://i.stack.imgur.com/Egdfu.png\" alt=\"enter image description here\"></p>\n",
            "last_activity_date": 1377692822,
            "question_id": 8457389,
            "score": 11,
            "tags": [
                "javascript",
                "node.js",
                "console",
                "undefined"
            ],
            "title": "node.js displays &quot;undefined&quot; on the console"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>since you already have the code to perform .submit(), why not change the button type to simple button instead of submit?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I don't know for sure that this is the problem, but, translated to plain english, your code appears to be saying \"On clicking the submit button, turn the disabled attribute to true, and then submit the form.\"</p>\n\n<p>But, since clicking the submit button already submits the form, maybe your browser is receiving two requests to submit - once when you click the button, and the second time when your javascript tells it to submit.</p>\n\n<p>If you are not doing ajax, just a regular submit, you should be able to <code>return true</code> instead of calling <code>submit</code> - essentially, tell the browser to go ahead and do the default action (which is submit).</p>\n\n<p>Or really, kill the whole <code>submit()</code> portion entirely, since it's redundant.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Part of the problem is that I believe you're submitting twice. You need to stop the first event before you start the second. See this post for more information on stopping events using inline javascript: <a href=\"http://stackoverflow.com/questions/387736/how-to-stop-event-propagation-with-inline-onclick-attribute\">How to stop event propagation with inline onclick attribute?</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This code is wrong:</p>\n\n<pre><code>onclick=\"this.disabled=true;document.forms[0].submit();\"\n</code></pre>\n\n<p>The onclick Javascript does not guarantee that the normal submit will not execute as well. For that it needs to return false, like this:</p>\n\n<pre><code>onclick=\"this.disabled=true;document.forms[0].submit(); return false;\"\n</code></pre>\n\n<p>Is this change in behavior an IE9 bug? It depends, this could depend on legal behavior that is the result of timing issues. It's only a bug if the DOM/Javacript standard guarantees that the document.submit() is the end of all execution in a document. I doubt that this is the case.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Abstracting out the complexity, the issue seems to be that <strong>IE9 submits forms twice with \none button click</strong> when the submit event is fired in javascript. </p>\n\n<p>In general, I found doing this fixes the IE9 double\nform submission problem: </p>\n\n<p>(failing IE9 double submission HTML):</p>\n\n<p><code>&lt;input type=\"submit\" /&gt;</code></p>\n\n<p>(IE9 html double submission fix):</p>\n\n<pre><code>&lt;input type=\"submit\" onclick=\"return false; \" /&gt;\n</code></pre>\n\n<p>So basically, I am handling the form submission in javascript ( not shown) with an event listener ( click ) , but returning false on the old school event handler ( onclick) which IE9 seems to call automatically even if you have already handled it through an event listener. </p>\n\n<p>I'm guessing you could do the same in pure javascript: </p>\n\n<pre><code>inputElement.onclick = function(){ return false; };\n</code></pre>\n\n<p>but I did not test it. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>When you use </p>\n\n<p><code>onclick=\"document.forms[0].submit();\"</code> </p>\n\n<p>on the submit button, write <code>input type=\"button\"</code> instead of <code>type=\"submit\"</code>,</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>we had the same problem in IE9 and we solved the issue by setting cancelBubble and returnValue flags of event to true and false respectively. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am just wondering if anyone have some info or feedback about the situation I am in.\nCurrently I am facing a \"Double Form Submit\" issue, where I click the \"Submit\" button once, and it submit the form twice. This only happens in IE9, but I have only tested against Safari, Chrome (Latest), FF (Ver 5/6), IE8, and IE9.</p>\n\n<p>Here is the code:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en-us\" dir=\"ltr\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"utf-8\" /&gt;\n&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" &gt;\n&lt;title&gt;IE9 test&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Testing&lt;/h1&gt;\n&lt;form method=\"POST\" id=\"submit_form\"&gt;\n&lt;input type=\"text\" name=\"x\" value=\"xxxx\" /&gt;\n&lt;input type=\"text\" name=\"y\" value=\"yyyy\" /&gt;\n&lt;button type=\"submit\" class=\"btn_sign_in\" id=\"btn_logon\" onclick=\"this.disabled=true;document.forms[0].submit();\"&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>The problematic part is:</p>\n\n<pre><code>onclick=\"this.disabled=true;document.forms[0].submit();\"\n</code></pre>\n\n<p>The code has been in my site for ages, and this is the first time I have encountered double submit problem since IE9 only releases this year, and probably these days more and more people using IE9, and hence I have received users complaints about this problem.</p>\n\n<p>The hardest part is that the double submit problem is not always reproducible. Sometimes it will double submit, sometimes it will submit once.</p>\n\n<p>My current work around is change from:</p>\n\n<pre><code>&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" &gt;\n</code></pre>\n\n<p>and change to:</p>\n\n<pre><code>&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=8\" &gt;\n</code></pre>\n\n<p>This forces IE9 to use IE8 compatibility and it will execute the Javascript properly for for submission.</p>\n\n<p>I have called Microsoft support, and they claim this is a \"Javascript compatibility issue\", so we will need to fine tune our Javascript to have our site work properly under IE9..(Duh!)</p>\n\n<p>Anyway, is my code:</p>\n\n<pre><code>onclick=\"this.disabled=true;document.forms[0].submit();\"\n</code></pre>\n\n<p>is already wrong to begin with? Because even though other browsers are not complaining, but probably this is not right to be begin with?</p>\n\n<p>I am hoping if someone also faces similar issues have some more info or feedback.\nCurrently if I don't change X-UA-Compatible to IE=8, I can change my code to:</p>\n\n<pre><code>onclick=\"this.disabled=true;\"\n</code></pre>\n\n<p>This will also solve the double submit issue, but is there also a list of IE9 compatibility issues that we should take note on?</p>\n\n<p>Thanks! </p>\n",
            "last_activity_date": 1395402058,
            "question_id": 7577542,
            "score": 11,
            "tags": [
                "javascript",
                "forms",
                "internet-explorer-9",
                "double-submit-problem"
            ],
            "title": "IE9 Double Form Submit Issue"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The <strong>Same Origin Policy</strong> prevents you from making AJAX requests to other domains. Unless you're running this on \"http://www.mojopin.co.uk\", this code won't work.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You cannot solve this problem only with jQuery: The <a href=\"http://en.wikipedia.org/wiki/Same_origin_policy\" rel=\"nofollow\">Same Origin Policy</a> wont allow you to make requests to third web sites.</p>\n\n<p>The easiest solution is to implement a service on your server that proxies the requests to the external website.</p>\n\n<p>Basically if your website is on </p>\n\n<p><a href=\"http://www.foo.bar\" rel=\"nofollow\">http://www.foo.bar</a> </p>\n\n<p>then you create </p>\n\n<p><a href=\"http://www.foo.bar/scheckscript.php\" rel=\"nofollow\">http://www.foo.bar/scheckscript.php</a> (for example)</p>\n\n<p>that you can query with the url you need </p>\n\n<p><a href=\"http://www.foo.bar/scheckscript.php?url=http%3A//www.third.com\" rel=\"nofollow\">http://www.foo.bar/scheckscript.php?url=http%3A//www.third.com</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You don't have to use AJAX to do this, since you can hot-link images from other domains without any restrictions. Here's how you can check if an image exists:</p>\n\n<pre><code>function checkImage(src) {\n  var img = new Image();\n  img.onload = function() {\n    // code to set the src on success\n  };\n  img.onerror = function() {\n    // doesn't exist or error loading\n  };\n\n  img.src = src; // fires off loading of image\n}\n</code></pre>\n\n<p>Here's a working implementation <a href=\"http://jsfiddle.net/jeeah/\">http://jsfiddle.net/jeeah/</a></p>\n",
                    "is_accepted": true,
                    "score": 27
                }
            ],
            "body": "<p>I have <a href=\"http://jsfiddle.net/rcebw/3/\">http://jsfiddle.net/rcebw/3/</a></p>\n\n<p>The point of this is I will have numerous of these <code>inlinediv</code> divs. Each one has 2 divs inside it, one which holds an image and one which holds a link. These are generated dynamically from a list of the subsites on another site.</p>\n\n<p>What I want it to do is check each div with the class <code>inlinediv</code>. Get the inner text of the link in div <code>iconLinkText</code> and search for a file with that name at the site. (http://www.mojopin.co.uk/images/ for this test.) If it exists then change the image src to it.</p>\n\n<p>I am probably taking the absolutely wrong route for this but I can't seem to get it to work. When testing it can't even find the <code>inlinediv</code> div! Says it's null.</p>\n\n<p>I'm pretty new to jQuery but does anyone have any advice? (I don't even know if I've explained myself well!)</p>\n",
            "last_activity_date": 1302902502,
            "question_id": 5678899,
            "score": 11,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Change image source if file exists"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Use a functions.php file inside your theme template add this :</p>\n\n<pre><code>&lt;?php\n\nfunction add_this_script_footer(){ ?&gt;\n\n[YOUR JS CODE HERE]\n\n&lt;?php } \n\nadd_action('wp_footer', 'add_this_script_footer'); ?&gt;\n</code></pre>\n\n<p>Hope it helps!</p>\n",
                    "is_accepted": false,
                    "score": 36
                },
                {
                    "body": "<p>For an external javascript file to be linked in the footer, use this (>= WP2.8)</p>\n\n<pre><code>function my_javascripts() {\n    wp_enqueue_script( 'the-script-handle', \n                       'path/to/file.js', \n                       array( 'jquery','other_script_that_we_depend_on' ), \n                       'scriptversion eg. 1.0', \n                       true);\n}\nadd_action( 'wp_enqueue_scripts', 'my_javascripts' );\n</code></pre>\n\n<p>That last true means that the script should be put at the wp_footer() hook.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Hum may be it's too late to answer, but if anyone else comes here with the same problem :</p>\n\n<p>There is a plugin to do this : \n<a href=\"http://wordpress.org/extend/plugins/footer-javascript/\">http://wordpress.org/extend/plugins/footer-javascript/</a></p>\n\n<p>Or you can doing this manually by adding this short code in your functions.php :</p>\n\n<pre><code>/**\n * Automatically move JavaScript code to page footer, speeding up page loading time.\n */\nremove_action('wp_head', 'wp_print_scripts');\nremove_action('wp_head', 'wp_print_head_scripts', 9);\nremove_action('wp_head', 'wp_enqueue_scripts', 1);\nadd_action('wp_footer', 'wp_print_scripts', 5);\nadd_action('wp_footer', 'wp_enqueue_scripts', 5);\nadd_action('wp_footer', 'wp_print_head_scripts', 5);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You can also try this plugin, <a href=\"https://wordpress.org/plugins/scripts-to-footerphp\" rel=\"nofollow\">Scripts To Footerphp</a></p>\n\n<p>It is compatible with Wordpress version 4</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I just want to ask on how to print script 'javascript' at the footer using simple plugin. I'm using WordPress 3.0 any ideas?</p>\n",
            "last_activity_date": 1417322765,
            "question_id": 4221870,
            "score": 11,
            "tags": [
                "javascript",
                "wordpress",
                "plugins"
            ],
            "title": "How to put my javascript in the footer"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I found a DEFLATE encoder and decoder implementation at <a href=\"http://github.com/dankogai/js-deflate\">http://github.com/dankogai/js-deflate</a> and they both work perfectly.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Pako <a href=\"https://github.com/nodeca/pako\" rel=\"nofollow\">https://github.com/nodeca/pako</a> is now the fastest javascript implementation of deflate and other zlib methods (inflate / gzip / ungzip). It also supports chunking if you need to work with big blobs.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Are there any open source DEFLATE encoder implementations for JavaScript? I need it to generate a binary format on the client-side that requires DEFLATE.</p>\n",
            "last_activity_date": 1394914809,
            "question_id": 2233062,
            "score": 11,
            "tags": [
                "javascript",
                "algorithm",
                "deflate"
            ],
            "title": "JavaScript DEFLATE Implementation"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Right now there really isn't a <em>cross-platform</em> solution for cross-site scripting. Do you have control or access to the RSS feeds? If so, why not simply respond with JSON and use JSONP? </p>\n\n<p>There are other things coming down the pike with HTML5, like cross-site messaging (referred to as Cross-Document Messaging) that may be capable of delivering a payload of XML, but last time I checked, they hadn't even fully decided on a size limit for the messaging.</p>\n\n<p>You can see the spec here: <a href=\"http://dev.w3.org/html5/spec/Overview.html#crossDocumentMessages\" rel=\"nofollow\">http://dev.w3.org/html5/spec/Overview.html#crossDocumentMessages</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use something like <a href=\"http://pipes.yahoo.com/\" rel=\"nofollow\">Yahoo! Pipes</a> to serve as your proxy and translate the RSS XML into a JSON response.  </p>\n\n<p>Here is an article with instructions and code samples that explains how to do it: <a href=\"http://www.hunlock.com/blogs/Yahoo%5FPipes--RSS%5Fwithout%5FServer%5FSide%5FScripts\" rel=\"nofollow\"><strong>Yahoo Pipes--RSS without Server Side Scripts</strong></a>.  </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>A solution for cross-domain calls without a server-side proxy is to use a SWF component.\nYou can script yourself one or use the readily available <a href=\"http://flxhr.flensed.com/\" rel=\"nofollow\">FLSend</a> </p>\n\n<p>The component uses ActionScript's URLRequest to call remote domains and ExternalInterface to communicate with the JavaScript methods that render your content.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The only way I can think of would be to embed a signed java applet on the webpage to retrive the xml and use javascript to interface with that. I'm not even 100% certain what the java security model is for that at present though but I think it would work.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you have control over both domains, you can try a cross-domain scripting library like <a href=\"http://easyxdm.net/\" rel=\"nofollow\">EasyXDM</a>, which wraps cross-browser quirks and provides an easy-to-use API for communicating in client script between different domains using the best available mechanism for that browser (e.g. <a href=\"https://developer.mozilla.org/en/DOM/window.postMessage\" rel=\"nofollow\">postMessage</a> if available, other mechanisms if not). </p>\n\n<p>Caveat: you need to have control over both domains in order to make it work (where \"control\" means you can place static files on both of them).  But you don't need any server-side code changes.</p>\n\n<p>Another Caveat: there are security implications here-- make sure you trust the other domain's script!</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have seen server side proxy workarounds for retrieving rss (xmls) from cross-domains. In fact this very <a href=\"http://stackoverflow.com/questions/1550839/need-help-with-getting-cross-domain-xml-with-javascript\">question</a> addressess my same problem but gives out a different solution.</p>\n\n<p>I have a constraint of <strong><em>do not use a proxy</em></strong> to retrieve rss feeds. And hence the <a href=\"http://code.google.com/apis/ajaxfeeds/\">Google AJAX Feed API</a> solution also goes out of picture. Is there a <em>client-only</em> workaround for this problem.</p>\n\n<p><a href=\"http://en.wikipedia.org/wiki/JSONP\">JSONP</a> is the solution for requests that respond with JSON output. But here, I have RSS feeds which can respond with pure xml .</p>\n\n<p>How do I solve the problem.</p>\n",
            "last_activity_date": 1314771464,
            "question_id": 1837848,
            "score": 11,
            "tags": [
                "javascript",
                "xml",
                "cross-domain"
            ],
            "title": "Retrieve a cross domain RSS(xml) through Javascript"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>... as courtesy to the users pretty much. Makes life easier for the ordinary users that simply commit human things from time to time.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Javascript validation allows your user to be informed of any errors prior to their submitting the form to the server. This saves irritating page-reloads (since on submit the JS catches the event and validates the form, preventing form-submission if errors are found) and minimises the chances of their having to re-enter information again (and again and again...), or leaving prior to completing the form properly. JS validation is not a substitute for server-side validation (since the user can see the JS, and, by saving the page and amending the JS do whatever they want); but it's a convenience for them.</p>\n\n<p>This is simply part of the concept of progressive enhancement, whereby JS provides a mechanism for enhancing the experience for the user, if it's there and turned on, and hopefully makes their interaction with your site pleasant, or, at least, minimally irritating.</p>\n\n<p><hr />\n<strong>Edited</strong> in response to OP's question regarding 'where to download a JS validation tool.'</p>\n\n<p>While I can't -necessarily- recommend any one library (I tend to write my own as required, or borrow from previously self-written examples), a <a href=\"http://www.google.com/search?q=client+side+javascript+validation+library\">Google search</a> threw these options up:</p>\n\n\n<li><a href=\"http://www.jsvalidate.com/\">http://www.jsvalidate.com/</a></li>\n<li>Stephen Walther's page, discussing Microsoft's CDN and jQuery-validation, linking to jQuery Validation plug-in:\n  <ul>\n    <li><a href=\"http://ajax.microsoft.com/ajax/jquery.validate/1.5.5/jquery.validate.js\">jQuery.validate</a> (hosted at MS' ajax.microsoft.com subdomain)</li>\n    <li><a href=\"http://ajax.microsoft.com/ajax/jquery.validate/1.5.5/jquery.validate.min.js\">jQuery.validate.min</a></li>\n    <li><a href=\"http://bassistance.de/jquery-plugins/jquery-plugin-validation/\">jQuery validate plug-in homepage</a> (bassistance.de).</li>\n   </ul>\n\n<p></li></p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>It's a matter of whether you want your form (and website as a whole) to be interactive-cum-user-friendly or not. You can just let the server-side do the validations and throw the error back to the users but that would be less interactive and less user-friendly than warning the users before they submit the form (although you still need to validate the inputs on server-side no matter what). Just my 2 cents :P</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You should ALWAYS validate in PHP on the SERVER SIDE and validation in JavaScript is CLIENT SIDE validation for user CONVENIENCE. Thanks to validation on client user may find errors in his form without page relodaing. But user may sent form data without data script validation \n(for example he may not have JS support in web browser), thus always validate on the server side. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I recommend you using unified server-side and client-side validation using a framework, since it may avoid confronting the user to data valid on client side but rejected by the server, or the opposite (client side too restrictive).\nFollowing list of framework give information about server/client side validation:\n<a href=\"http://en.wikipedia.org/wiki/Comparison%5Fof%5Fweb%5Fapplication%5Fframeworks\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Comparison_of_web_application_frameworks</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Yes, it is best practice to validate the user input values from both sides client and server side ,</p>\n\n<p>some cases client was disabled javascript or mobile browser that doesn't javascript, remember there is spammers also.</p>\n\n<p>So it must validate on both sides. </p>\n\n<p><a href=\"http://www.maheshchari.com/60-validation-functions-with-php/\" rel=\"nofollow\">here is a nice tutorial for 50 php validation methods that may help you</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I recomend to use <strong>Javascript</strong> for client side and <strong>Php</strong> for server side\nThis will make interaction or user friendly site nad reduce reloading page many times in case user submit wrong data</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To my mind, only client-side-checking of form input does not work because of security. Imagine you want to check a user password(if \"yourpwd\" == userinput), with js the user will see the password because it is in the browser-sourcecode .With php, it is not visible because php is for some reason hidden.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Why should I bother to use JavaScript for form validation when I still have to use PHP since the user could have JavaScript support turned off.</p>\n\n<p>Isn't it unnecessary?</p>\n\n<h3>Update:</h3>\n\n<p>Ok thanks for your answers. it sounds like a good idea to have it on the client side too. where can I download good JavaScript validations?</p>\n\n<p>Do you know where I can download a validation script like that one in yahoo when you register an account?</p>\n",
            "last_activity_date": 1382465938,
            "question_id": 1726617,
            "score": 11,
            "tags": [
                "php",
                "javascript",
                "forms",
                "validation"
            ],
            "title": "form validation with javascript vs php"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>Make the user awnser a question like \"What is 3 + 5?\"</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The most reliable way to detect spiders is by IP address.  Common spiders use several commonly known IP addresses.  <a href=\"http://www.iplists.com/nw/\">http://www.iplists.com/nw/</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Remember, that whatever you do you are making it harder for an automated process to do it, doesn't mean you are completely preventing it.</p>\n\n<p>Regarding mouse events, those are things that happen on the client side, so you would only be adding info to the request.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You should check the user-agent property.  You can likely accomplish this in C#.  </p>\n\n<p>For example <code>HttpContext.Current.Request...</code> and then ask for the user-agent.  This might give you something like crawler.google or what have you so you may have to build your own list to check against and return the result.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You need to distingish between well beheaved law abiding robots, and, nasty data thieving piratical robots.</p>\n\n<p>Nice robots will read the 'Robots' meta tag and comply with you policy. 'no index' being a polite way to refuse any of thier services.</p>\n\n<p>Malicious robots on the other hand are going to fake any \"UserAgent\" and similar headers.</p>\n\n<p>Captchas are probably the best method but they can P*ss off non robots if over used.</p>\n\n<p>One sneaky method I have seen is to have a recursive link as the first link on the page which will send the crawler into a loop. Another is to have a link to a site you dislike as the first link on the page to distract the robots attention. Both these links can easily be rendered \"invisable\" to meat based agents.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>With forms you can use javascript alter the form action to point to a real url. That will filter out any bot that does not render pages with javascript. You can have multiple submit buttons where only one of them really works and then you hide all the rest with css. The bots will not know which to click first. If you ever recieve a click from one of the bogus buttons then you know you have bot.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Either use Captcha or use Javascript to validate. A huge percentage of bots do not evaluate Javascript.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you're mainly concerned on form validation... I would suggest <a href=\"http://akismet.com/\" rel=\"nofollow\">Akismet</a> - the wordpress free service to catch spam. It works very well.</p>\n\n<p>If you're trying to save the server some bandwidth... the question is completely different and I would probably go another way like preventing hot-linking. </p>\n\n<p>That said, no solution is perfect but you should try to stick with the one that provides you with a minimum level of comfort and your users with a maximum. Its all about the users. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you are going down the Captcha route you could always use invisable Captcha. </p>\n\n<p>Basicly create a input control with a label saying what is 5+2 and then using javascript solve this and enter the value in your text box then hide the text field. \nAlmost all spiders cant run Javascript, any normal user they wont even know that is happening, and any user with out Javascript just sees the field to fill in. </p>\n\n<p>Google analytics also works on JS so you could just use that?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://xkcd.com/233/\" rel=\"nofollow\"><img src=\"http://imgs.xkcd.com/comics/a_new_captcha_approach.png\" alt=\"a new captcha approach\"></a></p>\n\n<p>The comic strip is from <a href=\"http://xkcd.com/233/\" rel=\"nofollow\">XKCD</a>.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>You may want to look into <a href=\"http://msdn.microsoft.com/en-us/library/5e2aew0b.aspx\" rel=\"nofollow\">HttpCapabilitiesBase Class</a> there are some help full properties in there that you may be able to use and people who browse your site will not notice.</p>\n\n<p>For example, Browser, Crawler, and maybe Cookies. There are a ton of ways but this will require a bit of work on your part.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As this is a question about logging page hits I think the use of captchas is to invasive. You can't have every visitor fill in a captcha or logging before using the website.</p>\n\n<p>And do you want to block spiders completely or just ignore them in your logs?</p>\n\n<p>Google Analytics is a good example of ignoring bots by being JavaScript driven. </p>\n\n<p>That could be your solution. You'd need an on load event to send a request to your server that logged the page hit.</p>\n\n<p>You could even have it wait on mouse moves before it logs the hit.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can detect know bots/crawlers very reliably using user agent strings. 'bad bots' require a honeypot or similar solution. Both explained in my answer here:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/544450/detecting-honest-web-crawlers\">Detecting honest web crawlers</a></p>\n\n<p>IP's can be changed and aren't reliable.</p>\n\n<p>We also see that bots (good and bad) tend not to support javascript.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am logging every visit to my website and determining if the visitor is human is important. I have searched the web and found many interesting ideas on how to detect if the visitor is human. </p>\n\n<ol>\n<li>if the visitor is logged in and passed captcha</li>\n<li>detecting mouse events</li>\n<li>Detecting if the user has a browser [user agent]</li>\n<li>detecting mouse clicks  [how would i go about this?]</li>\n</ol>\n\n<p>Are there any other surefire ways to detect if the visitor is human?</p>\n",
            "last_activity_date": 1369216815,
            "question_id": 1501514,
            "score": 11,
            "tags": [
                "c#",
                "javascript",
                "asp.net-mvc",
                "seo",
                "web-crawler"
            ],
            "title": "How to detect if a visitor is human and not a spider"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>That's an interesting idea, I'm not sure if it could be done via Javascript (at least the CSS part).</p>\n\n<p>You might place an IFRAME on the page with the other resources you want to load, but put some CSS on it to hide it...</p>\n\n<pre><code>.preload {\n    position : absolute;\n    top      : -9999px;\n    height   : 1px;\n    width    : 1px;\n    overflow : hidden;\n}\n</code></pre>\n\n<p>If you put this at the end of the page then I would think it would load <em>after</em> the rest of the page. If not then you could use some Javascript and setTimeout to actually create the IFRAME after the page loads.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>It's up to you to make the bandwidth decision.</p>\n\n<p>If you pre-load everything, you get a better user-experience but a <em>very high</em> bandwidth consumption, since the user might not even ever use that stuff that has been loaded, making it very inefficient.</p>\n\n<p>If you don't pre-load anything, bandwidth is used at its minimum, and the user loads <em>only</em> what it needs.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you just want to load them into the browser's cache, I suppose you could do that via a document in a hidden iframe.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The hidden iFrame idea that people are advocating will work just fine.</p>\n\n<p>If page load time of the landing page is a priority too though, the thing to to do would be to create the iFrame dynamically in javascript once the page has finished loading.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can prefetch arbitrary files (CSS, images, etc.) like this, the question is whether the small return and added bandwidth cost make it the right optimization to pursue now. <a href=\"http://developer.yahoo.com/performance/rules.html\" rel=\"nofollow\">The Yahoo performance rules</a> are an excellent starting point. If this is your first performance optimization, then you're likely starting in the wrong place. This is definitely an optimization with a major tradeoff (the increased bandwidth), whereas other optimizations like \"Minimize HTTP Requests\" have smaller costs and likely a much bigger payoff.</p>\n\n<p>To do this in a cross-browser compatible way, you'll basically add code to your page's onload event that creates an DOM object, like an , and sets its src to the URL you want to prefetch. Note that because a large fraction of all visitors probably only visit your front page, they would never have requested the files you've preloaded. I've seen doing preloading like this result in a several-times increase in requests and bandwidth for prefetched files.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think you should analyze what time it takes user to get to another page after landing on your main page. </p>\n\n<p>Then check which links on main pages are followed most frequently and at the main page/OnLoad event fire a timer function setTimeOut that will execute your auxilary function with pre-loading code for the most probable next links.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I agree with Gareth, I would created the iframe dynamically. You'll want to put this code as the very last thing on your landing page.</p>\n\n<p>E.g:</p>\n\n<pre><code>....\n  &lt;script type=\"text/javascript\"&gt;\n    preloadContent();\n  &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>As for caching, that really depends on your setup. But the reference on the Yahoo! web site should be a good start: <a href=\"http://developer.yahoo.com/performance/rules.html#expires\" rel=\"nofollow\">http://developer.yahoo.com/performance/rules.html#expires</a>\nIn brief, a good technique is to have your static files (CSS, images, potentially even scripts) with a 1 year expiry date. This way, anything your client has fetched will be kept in the browser cache without even checking for new versions.</p>\n\n<p>If you <em>do</em> have to modify a file:</p>\n\n<ul>\n<li>Create a different file (i.e. different file name) for images</li>\n<li>CSS and scripts could be appended a version/date number at the end.</li>\n</ul>\n\n<p>This ensures that a client never uses stale content.</p>\n\n<p>Cheers!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Filament Group has a nice jQuery script that will preload images from a CSS file:</p>\n\n<p><a href=\"http://www.filamentgroup.com/lab/update%5Fautomatically%5Fpreload%5Fimages%5Ffrom%5Fcss%5Fwith%5Fjquery/\" rel=\"nofollow\">Filament Group article</a></p>\n\n<p>In fact, there are a number of other jQuery based solutions if you google 'jquery preload'.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Loading everything in an hidden iframe is not the only way. There are two fantastic posts by Stoyan Stefanov on preloading/prefetching JS and CSS files for optimization.</p>\n\n<p>Here are the links:</p>\n\n<p><a href=\"http://www.phpied.com/the-art-and-craft-of-postload-preloads/\" rel=\"nofollow\">http://www.phpied.com/the-art-and-craft-of-postload-preloads/</a></p>\n\n<p><a href=\"http://www.phpied.com/preload-cssjavascript-without-execution/\" rel=\"nofollow\">http://www.phpied.com/preload-cssjavascript-without-execution/</a></p>\n\n<p>I personally like the AJAX approach a lot as well. Its nice and clean and works fine unless you want to fetch cross-domain stuff.</p>\n\n<p>His latest technique in the second link also looks extremely promising ( though I haven't tried it yet.)</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I'm curious if there is an efficient way to wait for the front page of a site to load, and then pre-load CSS and script files that I know will likely be needed for the other pages on the site.</p>\n\n<p>I want the front page of the site to be as fast as possible (lean and mean). It's likely that the user will not immediately click on a link. Since there will likely be some idle time, this seems like an opportune time to pre-load some of the external assets. Pre-loading should cause them to become cached. When the user does click on another page, the only request needed will be for the content and possibly some images, etc.</p>\n\n<p>Has anyone done this?\nIs it a bad idea?\nIs there an elegant way to implement it?</p>\n",
            "last_activity_date": 1354638188,
            "question_id": 1059793,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "preload"
            ],
            "title": "Pre-loading external files (CSS, JavaScript) for other pages"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>$(\"#di\").html('My New Text');\n</code></pre>\n\n<p>Check out the <a href=\"http://docs.jquery.com/Attributes/html#val\">jQuery documentation</a>.</p>\n\n<p>If you wanted to increment the number, you would do</p>\n\n<pre><code>var theint = parseInt($(\"#di\").html(),10)\ntheint++;\n$(\"#di\").html(theint);\n</code></pre>\n\n<p>P.S. Not sure if it was a typo or not, but you need to include the <code>#</code> in your selector to let jQuery know you are looking for an element with an ID of <code>di</code>. Maybe if you come from prototype you do not expect this, just letting you know.</p>\n",
                    "is_accepted": false,
                    "score": 35
                },
                {
                    "body": "<pre><code>$('#d1').html(\"Html here\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This would changed the inner text of your HTML element.</p>\n\n<pre><code>$('#d1').text(parseInt(requestResponse)++);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>jQuery('#d1').html(\"Hello World\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Unless you're embedding html like <code>&lt;b&gt;blah&lt;/b&gt;</code> I'd suggest using <code>$(\"#di\").text()</code> as it'll automatically escape things like &lt;, &gt; and &amp;, whereas <code>.html()</code> will not.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Use the <a href=\"http://docs.jquery.com/Attributes/text\" rel=\"nofollow\">text</a> function:</p>\n\n<pre><code>$(\"#d1\").text($(\"#d1\").text() + 1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Using a ajax request I want to change content of my div.</p>\n\n<pre><code>&lt;div id=\"d1\"&gt;202&lt;/div&gt;\n</code></pre>\n\n<p>So I want to change the content to a different number.</p>\n\n<pre><code>$('d1').InnerText???\n</code></pre>\n\n<p>Also, say I wanted to increment the number, how could I do that? Do I have to convert to int?</p>\n",
            "last_activity_date": 1249270297,
            "question_id": 537554,
            "score": 11,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Using jQuery, how do I change the elements html value? (div)"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Use lookahead to avoid replacing dot if not followed by space + word char:</p>\n\n<pre><code>sentences = str.replace(/(?=\\s*\\w)\\./g,'.|').replace(/\\?/g,'?|').replace(/\\!/g,'!|').split(\"|\");\n</code></pre>\n\n<p><strong>OUTPUT:</strong></p>\n\n<pre><code>[\"This is a long string with some numbers [125.000,55 and 140.000] and an end. This is another sentence.\"]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You're safer using lookahead to make sure what follows after the dot is not a digit.</p>\n\n<pre><code>var str =\"This is a long string with some numbers [125.000,55 and 140.000] and an end. This is another sentence.\"\n\nvar sentences = str.replace(/\\.(?!\\d)/g,'.|');\nconsole.log(sentences);\n</code></pre>\n\n<p>If you want to be even safer you could check if what is behind is a digit as well, but since JS doesn't support lookbehind, you need to capture the previous character and use it in the replace string.</p>\n\n<pre><code>var str =\"This is another sentence.1 is a good number\"\n\nvar sentences = str.replace(/\\.(?!\\d)|([^\\d])\\.(?=\\d)/g,'$1.|');\nconsole.log(sentences);\n</code></pre>\n\n<p>An even simpler solution is to escape the dots inside numbers (replace them with $$$$ for example), do the split and afterwards unescape the dots.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>str.replace(/([.?!])\\s*(?=[A-Z])/, \"$1|\").split(\"|\")\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>[ 'This is a long string with some numbers [125.000,55 and 140.000] and an end.',\n  'This is another sentence.' ]\n</code></pre>\n\n<p>Breakdown:</p>\n\n<p>([.?!]) = Capture either . or ? or !</p>\n\n<p>\\s* = Capture 0 or more whitespace characters following the previous token ([.?!]). This accounts for spaces following a punctuation mark which matches the English language grammar.</p>\n\n<p>(?=[A-Z]) = The previous tokens only match if the next character is within the range A-Z (capital A to capital Z). Most English language sentences start with a capital letter. None of the previous regexes take this into account.</p>\n\n<hr>\n\n<p>The replace operation uses:</p>\n\n<p>\"$1|\"</p>\n\n<p>We used one \"capturing group\" ([.?!]) and we capture one of those characters, and replace it with $1 (the match) plus |. So if we captured ? then the replacement would be ?|.</p>\n\n<p>Finally, we split the pipes (|) and get our result.</p>\n\n<hr>\n\n<p>So, essentially, what we are saying is this:</p>\n\n<p>1) Find punctuation marks (one of . or ? or !) and capture them</p>\n\n<p>2) Punctuation marks can optionally include spaces after them.</p>\n\n<p>3) After a punctuation mark, I expect a capital letter.</p>\n\n<p>Unlike the previous regular expressions provided, this would properly match the English language grammar.</p>\n\n<p>From there:</p>\n\n<p>4) We replace the captured punctuation marks by appending a pipe (|)</p>\n\n<p>5) We split the pipes to create an array of sentences.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>You could exploit that the next sentence begins with an uppercase letter or a number.</p>\n\n<pre><code>.*?(?:\\.|!|\\?)(?:(?= [A-Z0-9])|$)\n</code></pre>\n\n<p><img src=\"http://www.debuggex.com/i/BSpVl0xCfqajJC5O.png\" alt=\"Regular expression visualization\"></p>\n\n<p><a href=\"http://www.debuggex.com/r/BSpVl0xCfqajJC5O\" rel=\"nofollow\">Debuggex Demo</a></p>\n\n<p>It splits this text</p>\n\n<pre><code>This is a long string with some numbers [125.000,55 and 140.000] and an end. This is another sentence. Sencenes beginning with numbers work. 10 people like that.\n</code></pre>\n\n<p>into the sentences:</p>\n\n<pre><code>This is a long string with some numbers [125.000,55 and 140.000] and an end.\nThis is another sentence.\nSencenes beginning with numbers work.\n10 people like that.\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/3nCjB/3/\" rel=\"nofollow\">jsfiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>you forgot to put '\\s' in your regexp.</p>\n\n<p>try this one</p>\n\n<pre><code>var str = \"This is a long string with some numbers [125.000,55 and 140.000] and an end. This is another sentence.\";\nvar sentences = str.replace(/\\.\\s+/g,'.|').replace(/\\?\\s/g,'?|').replace(/\\!\\s/g,'!|').split(\"|\");\nconsole.log(sentences[0]);\nconsole.log(sentences[1]);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/hrRrW/\" rel=\"nofollow\">http://jsfiddle.net/hrRrW/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I would just change the strings and put something between each sentence.\nYou told me you have the right to change them so it will be easier to do it this way.</p>\n\n<pre><code>\\r\\n\n</code></pre>\n\n<p>By doing this you have a string to search for and you won't need to use these complex regex.</p>\n\n<p>If you want to do it the harder way I would use a regex to look for \".\" \"?\" \"!\" folowed by a capital letter. Like Tessi showed you.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Currently i am working on an application that splits a long column into short ones. For that i split the entire text into words, but at the moment my regex splits numbers too.</p>\n\n<p>What i do is this:</p>\n\n<pre><code>str = \"This is a long string with some numbers [125.000,55 and 140.000] and an end. This is another sentence.\";\nsentences = str.replace(/\\.+/g,'.|').replace(/\\?/g,'?|').replace(/\\!/g,'!|').split(\"|\");\n</code></pre>\n\n<p>The result is: </p>\n\n<pre><code>Array [\n    \"This is a long string with some numbers [125.\",\n    \"000,55 and 140.\",\n    \"000] and an end.\",\n    \" This is another sentence.\"\n]\n</code></pre>\n\n<p>The desired result would be:</p>\n\n<pre><code>Array [\n    \"This is a long string with some numbers [125.000, 140.000] and an end.\",\n    \"This is another sentence\"\n]\n</code></pre>\n\n<p>How do i have to change my regex to achieve this? Do i need to watch out for some problems i could run into? Or would it be good enough to search for <code>\". \"</code>, <code>\"? \"</code> and <code>\"! \"</code>?</p>\n",
            "last_activity_date": 1379674935,
            "question_id": 18914629,
            "score": 10,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "Split string into sentences in javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It's much simpler than that.</p>\n\n<p><code>$.ajax</code> already returns a promise (Deferred object), so you can simply write</p>\n\n<pre><code>function first() {\n    return $.ajax(...);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>In each case, return the jqXHR object returned by <code>$.ajax()</code>. </p>\n\n<p>These objects are Promise-compatible so can be chained with <code>.then()</code>/<code>.done()</code>/<code>.fail()</code>/<code>.always()</code>. </p>\n\n<p><code>.then()</code> is the one you want in this case, exactly as in the question.</p>\n\n<pre><code>function first() {\n   return $.ajax(...);\n}\n\nfunction second(data, textStatus, jqXHR) {\n   return $.ajax(...);\n}\n\nfunction third(data, textStatus, jqXHR) {\n   return $.ajax(...);\n}\n\nfunction main() {\n    first().then(second).then(third);\n}\n</code></pre>\n\n<p>Arguments <code>data</code>, <code>textStatus</code> and <code>jqXHR</code> arise from the <code>$.ajax()</code> call in the previous function, ie. <code>first()</code> feeds <code>second()</code> and <code>second()</code> feeds <code>third()</code>.</p>\n\n<p><strong><a href=\"http://jsfiddle.net/dK9tc/\">DEMO</a></strong> (with <code>$.when('foo')</code> to deliver a fulfilled promise, in place of <code>$.ajax(...)</code>).</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>There is actually a much easier approach when using promises with jQuery.  Have a look at the following:</p>\n\n<pre><code>$.when(\n    $.ajax(\"/first/call\"),\n    $.ajax(\"/second/call\"),\n    $.ajax(\"/third/call\")\n    )\n    .done(function(first_call, second_call, third_call){\n        //do something\n    })\n    .fail(function(){\n        //handle errors\n    });\n</code></pre>\n\n<p>Simply chain all your calls into the $.when(...) call and handle the return values in the .done(...) call.</p>\n\n<p>Here's a walkthrough if you prefer:  <a href=\"http://collaboradev.com/2014/01/27/understanding-javascript-promises-in-jquery/\" rel=\"nofollow\">http://collaboradev.com/2014/01/27/understanding-javascript-promises-in-jquery/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have three HTTP calls that need I need to make in a synchronous manner and how do I pass data from one call to the other?</p>\n\n<pre><code>function first()\n{\n   ajax()\n}\n\nfunction second()\n{\n   ajax()\n}\n\nfunction third()\n{\n   ajax()\n}\n\n\nfunction main()\n{\n    first().then(second).then(third)\n}\n</code></pre>\n\n<p>I tried to use the deferred for the two functions and I came up with a partial solution. Can I extend  it to be for three functions?</p>\n\n<pre><code>function first() {\n    var deferred = $.Deferred();\n     $.ajax({\n\n             \"success\": function (resp)\n             {\n\n                 deferred.resolve(resp);\n             },\n\n         });\n    return deferred.promise();\n}\n\nfunction second(foo) {\n     $.ajax({\n            \"success\": function (resp)\n            {\n            },\n            \"error\": function (resp)\n            {\n            }\n        });\n}\n\n\nfirst().then(function(foo){second(foo)})\n</code></pre>\n",
            "last_activity_date": 1397347613,
            "question_id": 16026942,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "deferred"
            ],
            "title": "How do I chain three asynchronous calls using jQuery promises?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You want to use <code>ng-bind-html</code> and <code>ng-bind-html-unsafe</code> for that kind of purpose.</p>\n\n<p>The examples are shown <a href=\"http://docs.angularjs.org/api/ngSanitize.%24sanitize\">here</a></p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>A better way is to use <code>$compile</code> instead of <code>ng-bind-html-unsafe</code>.</p>\n\n<p>See: <a href=\"http://docs.angularjs.org/api/ng.%24compile\" rel=\"nofollow\">http://docs.angularjs.org/api/ng.$compile</a></p>\n\n<p>Lastly, at the moment, the last version of angularJS (release candidate 1.2.0) do not have any <code>ng-bind-html-unsafe</code> directive. So I really encourage you to consider this option before any future update of your app. ( <code>ng-bind-html-unsafe</code> may/will not working any more...)</p>\n\n<p><a href=\"http://code.angularjs.org/1.2.0rc1/docs/api/ng.directive%3angBindHtml\" rel=\"nofollow\">http://code.angularjs.org/1.2.0rc1/docs/api/ng.directive:ngBindHtml</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As ng-bind-html-unsafe is deprecated, you can use this code instead.</p>\n\n<p>You need to create function inside your controller:</p>\n\n<pre><code>$scope.toTrustedHTML = function( html ){\n    return $sce.trustAsHtml( html );\n}\n</code></pre>\n\n<p>and use something like this in your view:</p>\n\n<pre><code>&lt;span ng-bind-html='toTrustedHTML( myHTMLstring )'&gt;&lt;/span&gt;\n</code></pre>\n\n<p>Don't forget to inject $sce:</p>\n\n<pre><code>AppObj.controller('MyController', function($scope, $sce) {\n    //your code here \n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm having issue with angularJs. My application requests some data from the server and one of the values from the data returned from the server is a string of html. I am binding it in my angular template like this </p>\n\n<pre><code>&lt;div&gt;{{{item.location_icons}}&lt;/div&gt;\n</code></pre>\n\n<p>but as you might expect what I see is not the icons images but the markup \nbasically the stuff in the div looks like</p>\n\n<pre><code> \"&lt;i class='my-icon-class'/&gt;\"\n</code></pre>\n\n<p>which is not what I want. </p>\n\n<p>anyone know what I can do to parse the html in the transclusion </p>\n",
            "last_activity_date": 1422802584,
            "question_id": 14888822,
            "score": 10,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "parse html inside ng-bind using angularJS"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>as the tag says it's a <code>button</code>, for that, you should do what it suggests, and work with those buttons... here's a simple example:</p>\n\n<pre><code>&lt;input type=\"hidden\" id=\"alignment\" value=\"\" /&gt;\n&lt;div class=\"btn-group alignment\" data-toggle=\"buttons-checkbox\"&gt;\n    &lt;button type=\"button\" class=\"btn\"&gt;Left&lt;/button&gt;\n    &lt;button type=\"button\" class=\"btn\"&gt;Middle&lt;/button&gt;\n    &lt;button type=\"button\" class=\"btn\"&gt;Right&lt;/button&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>now the jQuery:</p>\n\n<pre><code>$(\".alignment .btn\").click(function() {\n    // whenever a button is clicked, set the hidden helper\n    $(\"#alignment\").val($(this).text());\n}); \n</code></pre>\n\n<p>upon submit, you will find the value in the <code>alignment</code> hidden field.</p>\n\n<p>Here's a basic example: <a href=\"http://jsbin.com/oveniw/1/\">http://jsbin.com/oveniw/1/</a></p>\n\n<hr>\n\n<p>a good thing to take attention is that upon click, the element changes and bootstrap appends an <code>active</code> class name to the clicked button.</p>\n\n<p>You can always use this to change the <code>hidden field</code>, but I would continue to do my example if I wanted to submit the form it self.</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>You can get the selected as follows:</p>\n\n<pre><code>$('.btn-group button.btn.active')\n</code></pre>\n\n<p>To, set a button active</p>\n\n<pre><code>$(selector).addClass('active')\n</code></pre>\n\n<p>For example, if you want set the first button active:</p>\n\n<pre><code>$('.btn-group button.btn:eq(0)').addClass('active')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can \"check\" a button by setting its class to \u00b4active\u00b4:</p>\n\n<pre><code>&lt;div class=\"btn-group\" data-toggle=\"buttons-checkbox\"&gt;\n  &lt;button type=\"button\" class=\"btn\"&gt;Left&lt;/button&gt;\n  &lt;button type=\"button\" class=\"btn active\"&gt;Middle&lt;/button&gt;\n  &lt;button type=\"button\" class=\"btn\"&gt;Right&lt;/button&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>To get a value, you should have a \"value\" data, such as:</p>\n\n<pre><code>&lt;div class=\"btn-group\" data-toggle=\"buttons-checkbox\" id=\"my_radiogroup\"&gt;\n  &lt;button type=\"button\" class=\"btn\" data-value=\"0\"&gt;Left&lt;/button&gt;\n  &lt;button type=\"button\" class=\"btn active\" data-value=\"1\"&gt;Middle&lt;/button&gt;\n  &lt;button type=\"button\" class=\"btn\" data-value=\"2\"&gt;Right&lt;/button&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>This way, you may get the value via:</p>\n\n<pre><code>$(\"#my_radiogroup .active\").data(\"value\");\n&gt;&gt;&gt; 1\n(but may, of course, be undefined if no button is checked)\n</code></pre>\n\n<p>But keep in mind that the value won't be posted in your form, unless you have a <code>&lt;input type=hidden&gt;</code> to actually store the selected data.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>There is no reason to make this complicated.</p>\n\n<p>Say you have a button group, for selecting whether something is active or inactive...like so...</p>\n\n<pre><code>&lt;div class=\"btn-group\" data-toggle=\"buttons-radio\"&gt;\n    &lt;button type=\"button\" class=\"productStatus btn btn-success\" value=\"1\"&gt;Yes&lt;/button&gt;\n    &lt;button type=\"button\" class=\"productStatus btn btn-danger\" value=\"0\"&gt;No&lt;/button&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>When you run a function or anything to gather your selected button, you would run this command...which would get you the value of your selected radio button.  When you click on a button, or more to the point, when it's \"checked\", it's given the class of \"active\" like in previous answers.  That's all you really need to look for.  With this little snippet below.</p>\n\n<pre><code>var active = $('.productStatus[class*=\"active\"]').val();\nalert(active);\n</code></pre>\n\n<p>Basically it's using a wildcard selector looking for this \"productStatus\" button class, and then returning the value of the button that has the \"active\" class.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I use this hook when a number of Bootstrap radio buttons more than one</p>\n\n<pre><code>$('div[data-toggle=\"buttons-radio\"] .btn').click(function(){\n    $('input[name=\"' + $(this).parent().attr('id') + '\"]').val($(this).val());\n});\n</code></pre>\n\n<p>And in HTML:</p>\n\n<pre><code>&lt;div class=\"btn-group\" id=\"rental\" data-toggle=\"buttons-radio\"&gt;\n    &lt;button type=\"button\" class=\"btn\" value=\"0\"&gt;Sale&lt;/button&gt;\n    &lt;button type=\"button\" class=\"btn\" value=\"1\"&gt;Rent&lt;/button&gt;\n&lt;/div&gt;\n\n&lt;input type=\"hidden\" name=\"rental\" value=\"0\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can check the value of radio button on submission of form in a function or any click event of submit button </p>\n\n<pre><code>alert($('.btn-group &gt; .btn.active').attr(\"value\"));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm using the Radio-button from twitter bootstrap: <a href=\"http://twitter.github.com/bootstrap/javascript.html#buttons\">http://twitter.github.com/bootstrap/javascript.html#buttons</a>.</p>\n\n<p>In my html in looks like this:</p>\n\n<pre><code>  &lt;div class=\"btn-group\" data-toggle=\"buttons-checkbox\"&gt;\n  &lt;button type=\"button\" class=\"btn\"&gt;Left&lt;/button&gt;\n  &lt;button type=\"button\" class=\"btn\"&gt;Middle&lt;/button&gt;\n  &lt;button type=\"button\" class=\"btn\"&gt;Right&lt;/button&gt;\n  &lt;/div&gt;\n  &lt;input type=\"submit\" onclick=\"get_the_value_and_do_something_with_it\"\n</code></pre>\n\n<p>I would like to know how to get the value of the button the user checked thanks to Jquery or Javascript.</p>\n\n<p>I saw several question on this topic, but I think it is different with this kind of button, because it looks like they do not accept a \"checked\" attribute.</p>\n\n<p>Any help would be very welcome</p>\n\n<p>PS: if someone knows how to check by default one of the button, it would also help me a lot. Thank you.</p>\n",
            "last_activity_date": 1393677282,
            "question_id": 13348672,
            "score": 10,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Get the value of a twitter bootstrap radio button. JQuery"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>If you can use jQuery, look at <a href=\"http://api.jquery.com/load-event/\">load</a>.  You could then set your function to run after your element finishes loading.</p>\n\n<p>For example, consider a page with a simple image:</p>\n\n<pre><code>&lt;img src=\"book.png\" alt=\"Book\" id=\"book\" /&gt;\n</code></pre>\n\n<p>The event handler can be bound to the image:</p>\n\n<pre><code>$('#book').load(function() {\n  // Handler for .load() called.\n});\n</code></pre>\n\n<p>If you need all elements on the current window to load, you can use </p>\n\n<pre><code>$(window).load(function () {\n  // run code\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>this may work for you :</p>\n\n<pre><code>document.addEventListener('DOMContentLoaded', function() {\n   // your code here\n}, false);\n</code></pre>\n\n<p>or\nif your comfort with jquery,</p>\n\n<pre><code>$(document).ready(function(){\n// your code\n});\n</code></pre>\n\n<p>$(document).ready() fires on DOMContentLoaded, but this event is not being fired consistently among browsers. This is why jQuery will most probably implement some heavy workarounds to support all the browsers. And this will make it very difficult to \"exactly\" simulate the behaviour using plain Javascript (but not impossible of course).</p>\n\n<p>as Jeffrey Sweeney and J Torres suggested, i think its better to have a setTimeout function, before firing the function like below :</p>\n\n<pre><code>setTimeout(function(){\n //your code here\n}, 3000);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>Try this <a href=\"http://api.jquery.com/ready/\" rel=\"nofollow\">jQuery</a>:</p>\n\n<pre><code>$(function() {\n // Handler for .ready() called.\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>If you are not using any JS frameworks, this project is the best way to get the dom ready state, with cross browser compatibility</p>\n\n<p><a href=\"https://github.com/ded/domready/blob/master/ready.js\" rel=\"nofollow\">https://github.com/ded/domready/blob/master/ready.js</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Put your script after the completion of body tag...it works...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you wanna call a js function in your html page use onload event. The onload event occurs when the user agent finishes loading a window or all frames within a FRAMESET. This attribute may be used with BODY and FRAMESET elements.</p>\n\n<pre><code>&lt;body onload=\"callFunction();\"&gt;\n....\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Hi I am using following code to execute some statements after page load.</p>\n\n<pre><code> &lt;script type=\"text/javascript\"&gt;\n    window.onload = function () { \n\n        newInvite();\n        document.ag.src=\"b.jpg\";\n    }\n&lt;/script&gt;\n</code></pre>\n\n<p>But this code does not work properly. The function is called even if some images or elements  are loading. What i want is to call the function the the page is loaded completely.</p>\n",
            "last_activity_date": 1425987241,
            "question_id": 11936816,
            "score": 10,
            "tags": [
                "javascript",
                "html",
                "image"
            ],
            "title": "call a function after complete page load"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>declare this</p>\n\n<pre><code>var intro;\n</code></pre>\n\n<p>outside of <code>$(document).ready()</code> because, <code>$(document).ready()</code> will hide your variable from global scope.</p>\n\n<p><strong>Code</strong></p>\n\n<pre><code>var intro;\n\n$(document).ready(function() {\n    if ($('.intro_check').is(':checked')) {\n        intro = true;\n        $('.intro').wrap('&lt;div class=\"disabled\"&gt;&lt;/div&gt;');\n    };\n    $('.intro_check').change(function(){\n        if(this.checked) {\n            intro = false;\n            $('.enabled').removeClass('enabled').addClass('disabled');\n        } else {\n            intro = true;\n            if($('.intro').exists()) {\n                $('.disabled').removeClass('disabled').addClass('enabled'); \n            } else {\n                $('.intro').wrap('&lt;div class=\"disabled\"&gt;&lt;/div&gt;');\n            }\n        }\n    });\n});\n</code></pre>\n\n<hr>\n\n<h3>According to @Zakaria comment</h3>\n\n<p>Another way:</p>\n\n<pre><code>window.intro = undefined;\n\n$(document).ready(function() {\n    if ($('.intro_check').is(':checked')) {\n        window.intro = true;\n        $('.intro').wrap('&lt;div class=\"disabled\"&gt;&lt;/div&gt;');\n    };\n    $('.intro_check').change(function(){\n        if(this.checked) {\n            window.intro = false;\n            $('.enabled').removeClass('enabled').addClass('disabled');\n        } else {\n            window.intro = true;\n            if($('.intro').exists()) {\n                $('.disabled').removeClass('disabled').addClass('enabled'); \n            } else {\n                $('.intro').wrap('&lt;div class=\"disabled\"&gt;&lt;/div&gt;');\n            }\n        }\n    });\n});\n</code></pre>\n\n<hr>\n\n<h2>Note</h2>\n\n<pre><code>console.log(intro);\n</code></pre>\n\n<p>outside of DOM ready function (currently you've) will log <code>undefined</code>, but within DOM ready it will give you true/ false.</p>\n\n<h3>Your outer <code>console.log</code> execute before DOM ready execute, because DOM ready execute after all resource appeared to DOM i.e after DOM is prepared, so I think you'll always get absurd result.</h3>\n\n<hr>\n\n<h3>According to comment of @W0rldart</h3>\n\n<blockquote>\n  <p>I need to use it outside of DOM ready function</p>\n</blockquote>\n\n<p>You can use following approach:</p>\n\n<pre><code>var intro = undefined;\n\n$(document).ready(function() {\n    if ($('.intro_check').is(':checked')) {\n        intro = true;\n        introCheck();\n        $('.intro').wrap('&lt;div class=\"disabled\"&gt;&lt;/div&gt;');\n    };\n    $('.intro_check').change(function() {\n        if (this.checked) {\n            intro = true;\n        } else {\n            intro = false;\n        }\n        introCheck();\n    });\n\n});\n\nfunction introCheck() {\n    console.log(intro);\n}\n</code></pre>\n\n<p>After change the value of <code>intro</code> I called a function that will fire with new value of <code>intro</code>.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>like this: put <code>intro</code> outside your document ready, Good discussion here: <a href=\"http://forum.jquery.com/topic/how-do-i-declare-a-global-variable-in-jquery\" rel=\"nofollow\">http://forum.jquery.com/topic/how-do-i-declare-a-global-variable-in-jquery</a> @thecodeparadox is awesomely fast :P anyways!</p>\n\n<pre><code> var intro;\n\n$(document).ready(function() {\n\n\n\n    if ($('.intro_check').is(':checked')) {\n        intro = true;\n        $('.intro').wrap('&lt;div class=\"disabled\"&gt;&lt;/div&gt;');\n    };\n\n    $('.intro_check').change(function(){\n        if(this.checked) {\n            intro = false;\n            $('.enabled').removeClass('enabled').addClass('disabled');\n        } else {\n            intro = true;\n            if($('.intro').exists()) {\n                $('.disabled').removeClass('disabled').addClass('enabled'); \n            } else {\n                $('.intro').wrap('&lt;div class=\"disabled\"&gt;&lt;/div&gt;');\n            }\n        }\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use <code>window.intro = \"value\";</code> inside the ready function. <code>\"value\"</code> could be <code>void 0</code> if you want it to be <code>undefined</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>JavaScript has <strong>Function-Level</strong> variable scope which means you will have to declare your variable outside <code>$(document).ready()</code> function.</p>\n\n<p>Or alternatively to make your variable to have <strong>global</strong> scope, simply dont use <code>var</code> keyword before it like shown below. However generally this is considered <strong>bad practice</strong> because it <em>pollutes</em> the global scope but it is up to you to decide.</p>\n\n<pre><code>$(document).ready(function() {\n   intro = null; // it is in global scope now\n</code></pre>\n\n<hr>\n\n<p>To learn more about it, check out:</p>\n\n<ul>\n<li><a href=\"http://robertnyman.com/2008/10/09/explaining-javascript-scope-and-closures/\" rel=\"nofollow\">Explaining JavaScript Scope And Closures</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Use <code>window.intro</code> inside of <code>$(document).ready()</code>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If you're declaring a global variable, you might want to use a namespace of some kind.  Just declare the namespace outside, then you can throw whatever you want into it.  Like this...</p>\n\n<pre><code>var MyProject = {};\n$(document).ready(function() {\n    MyProject.intro = \"\";\n\n    MyProject.intro = \"something\";\n});\n\nconsole.log(MyProject.intro); // \"something\"\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Unlike another programming languages, any variable declared outside any function automatically becomes global,</p>\n\n<pre><code>&lt;script&gt;\n\n//declare global variable\nvar __foo = '123';\n\nfunction __test(){\n //__foo is global and visible here\n alert(__foo);\n}\n\n//so, it will alert '123'\n__test();\n\n&lt;/script&gt;\n</code></pre>\n\n<p>You problem is that you declare variable inside <code>ready()</code> function, which means that it becomes visible (in scope) ONLY inside <code>ready()</code> function, but not outside,</p>\n\n<p>Solution:\nSo just make it global, i.e declare this one outside <code>$(document).ready(function(){});</code></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Which is the right way of declaring a global javascript variable? The way I'm trying it, doesn't work</p>\n\n<pre><code>$(document).ready(function() {\n\n    var intro;\n\n    if ($('.intro_check').is(':checked')) {\n        intro = true;\n        $('.intro').wrap('&lt;div class=\"disabled\"&gt;&lt;/div&gt;');\n    };\n\n    $('.intro_check').change(function(){\n        if(this.checked) {\n            intro = false;\n            $('.enabled').removeClass('enabled').addClass('disabled');\n        } else {\n            intro = true;\n            if($('.intro').exists()) {\n                $('.disabled').removeClass('disabled').addClass('enabled'); \n            } else {\n                $('.intro').wrap('&lt;div class=\"disabled\"&gt;&lt;/div&gt;');\n            }\n        }\n    });\n});\n\nconsole.log(intro);\n</code></pre>\n",
            "last_activity_date": 1340415267,
            "question_id": 11152977,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "global-variables",
                "variable-scope"
            ],
            "title": "Global javascript variable inside document.ready"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The problem is that you can't really send empty array. Have you tried to send an empty array manually? How would that uri look (note that it's the same reasoning for POST)?</p>\n\n<pre><code>/path?arr[]\n</code></pre>\n\n<p>This would result in a $_GET like this:</p>\n\n<pre><code>array (\n 'arr' =&gt; array (\n    0 =&gt; ''\n  )\n)\n</code></pre>\n\n<p>That's not really an empty array, is it? It's an array with a single element of an empty string. So what jQuery does, and I would agree that this is the correct way of handling it, is to not send anything at all.</p>\n\n<p>This is actually really simple for you to check on the server. Just add an extra check whether the parameter exists or not, i.e:</p>\n\n<pre><code>$tabs = array();\nif(isset($_POST['tab'])) {\n  $tabs = $_POST['tab'];\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Try</p>\n\n<p>php</p>\n\n<pre><code>&lt;?php\n// `echo.php`\nif (isset($_POST[\"emptyArray\"])) { \n  function arr() { \n    $request = $_POST[\"emptyArray\"]; \n    if(is_array($request) &amp;&amp; count($request) === 0) { \n      // do stuff\n      echo $request;\n    };\n  };\n  arr();\n};\n</code></pre>\n\n<p>js</p>\n\n<pre><code>    $.post(\"echo.php\", {\"emptyArray\":[]}\n      , function (data, textStatus, jqxhr) {\n          if (textStatus === \"success\" &amp;&amp; data.length === 0) {\n            // do stuff\n            console.log(data.length === 0 ? new Error(\"error\").message : data);\n          };\n    });\n</code></pre>\n\n<p>jsfiddle <a href=\"http://jsfiddle.net/guest271314/Lf6GG/\" rel=\"nofollow\">http://jsfiddle.net/guest271314/Lf6GG/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've already read those questions but none of them answer to my need:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/334836/testing-for-an-empty-array-object-in-json-with-jquery\">Testing for an empty array object in JSON with jQuery</a></li>\n<li><a href=\"http://stackoverflow.com/questions/5319106/jquery-1-4-4-ajax-request-post-empty-array-or-object-becomes-string\">jQuery 1.4.4+ AJAX request - post empty array or object becomes string</a></li>\n<li><a href=\"http://stackoverflow.com/questions/2280332/cannot-access-data-from-jquery-ajax-request-returns-empty-array\">Cannot access data from jquery ajax request, returns empty array</a></li>\n<li><a href=\"http://stackoverflow.com/questions/6622224/jquery-removes-empty-arrays-when-sending\">JQuery removes empty arrays when sending</a></li>\n</ul>\n\n<p>(the latest one said just add hard-coded quotes ie <code>['']</code> but I can't do this, I'm calling a function that returns an Array)</p>\n\n<p>So here's my code (note that the problem lies to the empty array <strong><code>new Array()</code></strong>):</p>\n\n<pre><code>function AjaxSend() {\n  $.ajax({\n    url: '/json/myurl/',\n    type: 'POST',\n    dataType: 'jsonp',\n    data : { 'tab':new Array() },\n    context: this,\n    success: function (data) {\n      if (data.success) {\n        console.log('ok');\n      }   \n      else {\n        console.log('error');\n      }   \n    }   \n  }); \n}\n</code></pre>\n\n<p>Simple eh?\nHere's my Php code:</p>\n\n<pre><code>echo '_POST='.var_export($_POST,true).\"\\n\";\n</code></pre>\n\n<p>And here's the result:</p>\n\n<pre><code>_POST=array (\n)\njQuery1710713708313414827_1329923973282(...)\n</code></pre>\n\n<p>If I change the empty Array by a non-empty, i.e.:</p>\n\n<pre><code>'tab':new Array({ 't':'u' },{ 'v':'w' })\n</code></pre>\n\n<p>The result is:</p>\n\n<pre><code>_POST=array (\n  'tab' =&gt; \n  array (\n    0 =&gt; \n    array (\n      't' =&gt; 'u',\n    ),\n    1 =&gt; \n    array (\n      'v' =&gt; 'w',\n    ),\n  ),\n)\njQuery1710640656704781577_1329923761425(...)\n</code></pre>\n\n<p>So this clearly means that when there's an empty Array() to be sent, it is ignored, and <em>it's not added to the POST variables</em>.</p>\n\n<p>Am I missing something?</p>\n\n<p>PS: my jQuery version is from the latest google CDN i.e.:</p>\n\n<p><a href=\"http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js\">http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js</a></p>\n\n<p>and</p>\n\n<p><a href=\"http://ajax.googleapis.com/ajax/libs/jqueryui/1/jquery-ui.min.js\">http://ajax.googleapis.com/ajax/libs/jqueryui/1/jquery-ui.min.js</a></p>\n\n<p>I want the array to be sent, even if it's empty (= send <strong><code>[]</code></strong>)!\nAny solution? Any idea? I've already tried to add this option <code>traditional: true</code> without success.</p>\n",
            "last_activity_date": 1406271926,
            "question_id": 9397669,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "json"
            ],
            "title": "jQuery, AJAX, JSONP: how to actually send an array even if it&#39;s empty?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This won't work as the event only fires while you're mouse is over the li.</p>\n\n<pre><code>('li').mouseover(function(e) { });\n</code></pre>\n\n<p>You need to be able to tell the position of the mouse relative to the viewport when an item is being dragged. When the users starts to drag an item attach an 'mousemove' event to the body and then in that check the mouse position and scroll when necessary.</p>\n\n<pre><code>$(\"body\").on(\"mousemove\", function(event) {\n// Check mouse position - scroll if near bottom or top\n});\n</code></pre>\n\n<p>Dont forget to remove your event when the user stops dragging.</p>\n\n<pre><code>$(\"body\").off(\"mousemove\", function(event) {\n// Check mouse position - scroll if near bottom or top\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I get a weekly newsletter (email) from CodeProject, and it had some stuff that certainly looks like it will solve my problem... hopefully this can help others:</p>\n\n<ol>\n<li><p><a href=\"http://johnpolacek.github.com/scrollorama/\" rel=\"nofollow\">http://johnpolacek.github.com/scrollorama/</a> -- JQuery based and animates the scroll</p></li>\n<li><p><a href=\"https://github.com/IanLunn/jQuery-Parallax\" rel=\"nofollow\">https://github.com/IanLunn/jQuery-Parallax</a> -- JQuery based, similar to above</p></li>\n<li><p>http:// remysharp. com/2009/01/26/element-in-view-event-plugin/ -- JQuery, detects whether an element is currently in view of the user (super helpful for this issue!)</p></li>\n<li><p>Also the site in #2 had some interesting code: </p>\n\n<pre><code>var windowHeight = $window.height();\nvar navHeight = $('#nav').height() / 2;\nvar windowCenter = (windowHeight / 2);\nvar newtop = windowCenter - navHeight;\n//ToDo: Find a way to use these vars and my original ones to determine scroll regions\n</code></pre></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Works pretty well now, user just needs to \"jiggle\" the mouse when dragging items sometimes to keep scrolling, but for scrolling just with mouse position its pretty solid. Here is what I finally ended up using:</strong></p>\n\n<pre><code> $(\"li\").mouseover(function(e) {\n\n  e = e || window.event; var cursor = { y: 0 }; cursor.y = e.pageY; //Cursor YPos\n  var papaWindow = parent.window;\n  var $pxFromTop = $(papaWindow).scrollTop();\n  var $userScreenHeight = $(papaWindow).height();\n\n  if (cursor.y &gt; (($userScreenHeight + $pxFromTop) / 1.25)) {\n\n         if ($pxFromTop &lt; ($userScreenHeight * 3.2)) {\n\n                   papaWindow.scrollBy(0, ($userScreenHeight / 30));\n             }\n        }\n  else if (cursor.y &lt; (($userScreenHeight + $pxFromTop) * .75)) {\n\n        papaWindow.scrollBy(0, -($userScreenHeight / 30));\n\n        }\n\n   }); //End mouseover()\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>This may not be exactly what you want, but it might help. It will auto-scroll when the mouse is over the 'border of the screen' (a user defined region). Say you have a 40px wide bar on the right of the screen, if the mouse reaches the first 1px, it will start scrolling. Each px you move into it, the speed will increase. It even has a nice easing animation.</p>\n\n<p><a href=\"http://www.smoothdivscroll.com/v1-2.htm\" rel=\"nofollow\">http://www.smoothdivscroll.com/v1-2.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Simple, <strong>I just would like to have it so when a user is dragging an item and they reach the very bottom or top of the viewport <em>(10px or so)</em>, the page <em>(about 3000px long)</em> gently scrolls down or up, until they move their cursor <em>(and thus the item being dragged)</em> out of the region</strong>.</p>\n\n<p>An item is an li tag which uses jquery to make the list items draggable. To be specific:</p>\n\n<ul>\n<li>../jquery-ui-1.8.14.custom.min.js</li>\n<li><a href=\"http://code.jquery.com/jquery-1.6.2.min.js\">http://code.jquery.com/jquery-1.6.2.min.js</a></li>\n</ul>\n\n<p>I currently use window.scrollBy(x=0,y=3) to scroll the page and have the variables of:</p>\n\n<ol>\n<li>e.pageY ... provides absolute Y-coordinates of cursor on page (not relative to screen)</li>\n<li>$.scrollTop() ... provides offset from top of page (when scroll bar is all the way up, it is 0)</li>\n<li>$.height()... provides the height of viewable area in the user's browser/viewport</li>\n<li>body.offsetHeight ... height of the entire page</li>\n</ol>\n\n<p>How can I achieve this and which event best accommodates this (currently its in mouseover)?\n         My ideas:</p>\n\n<ol>\n<li>use a an if/else to check if it is in top region or bottom, scroll up if e.pageY is showing it is in the top, down if e.page&amp; is in bottom, and then calling the $('li').mouseover() event to iterate through... \n<ol>\n<li>Use a do while loop... this has worked moderately well actually, but is hard to stop from scrolling to far. But I am not sure how to control the iterations....</li>\n</ol></li>\n</ol>\n\n<p>My latest attempt:</p>\n\n<pre><code>          ('li').mouseover(function(e) {\n\n            totalHeight = document.body.offsetHeight;\n            cursor.y = e.pageY;\n            var papaWindow = window;\n            var $pxFromTop = $(papaWindow).scrollTop();\n            var $userScreenHeight = $(papaWindow).height();\n            var iterate = 0;\n\n            do {\n                papaWindow.scrollBy(0, 2);\n                iterate++;\n                console.log(cursor.y, $pxFromTop, $userScreenHeight);\n            }\n\n            while (iterate &lt; 20);\n      });\n</code></pre>\n",
            "last_activity_date": 1356100478,
            "question_id": 9113364,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "scroll",
                "draggable",
                "viewport"
            ],
            "title": "How use JQuery/Javascript to scroll down a page when the cursor at the top or bottom edge of the screen?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This is not \"encrypted\", it is just obfuscated.</p>\n\n<p>Yes, there are <a href=\"http://www.kahusecurity.com/2011/javascript-deobfuscation-tools-part-1/\" rel=\"nofollow\">tools available to help</a>, but it isn't a perfect process.  All of the original variable names and comments and what not are gone, so a tool can't really add that stuff back in.  You have to figure out the details yourself, but a tool can make it easier.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I wish people would stop doing that. There's just no way to \"encrypt\" JavaScript. It's an exercise in futility (minification is good, but obfuscation is bad and useless)</p>\n\n<p>That being said, try using <a href=\"http://jsbeautifier.org/\" rel=\"nofollow\">JSBeautifier</a>. It gives me the following result:</p>\n\n<pre><code>jQuery.iFisheye = {\n    build: function (options) {\n        return this.each(function () {\n            var el = this;\n            el.fisheyeCfg = {\n                items: jQuery(options.items, this),\n                container: jQuery(options.container, this),\n                pos: jQuery.iUtil.getPosition(this),\n                itemWidth: options.itemWidth,\n                itemsText: options.itemsText,\n                proximity: options.proximity,\n                valign: options.valign,\n                halign: options.halign,\n                maxWidth: options.maxWidth\n            };\n            jQuery.iFisheye.positionContainer(el, 0);\n            jQuery(window).bind('resize', function () {\n                el.fisheyeCfg.pos = jQuery.iUtil.getPosition(el);\n                jQuery.iFisheye.positionContainer(el, 0);\n                jQuery.iFisheye.positionItems(el)\n            });\n            jQuery.iFisheye.positionItems(el);\n            el.fisheyeCfg.items.bind('mouseover', function () {\n                jQuery(el.fisheyeCfg.itemsText, this).get(0).style.display = 'block'\n            }).bind('mouseout', function () {\n                jQuery(el.fisheyeCfg.itemsText, this).get(0).style.display = 'none'\n            });\n            jQuery(document).bind('mousemove', function (e) {\n                var pointer = jQuery.iUtil.getPointer(e);\n                var toAdd = 0;\n                if (el.fisheyeCfg.halign &amp;&amp; el.fisheyeCfg.halign == 'center') var posx = pointer.x - el.fisheyeCfg.pos.x - (el.offsetWidth - el.fisheyeCfg.itemWidth * el.fisheyeCfg.items.size()) / 2 - el.fisheyeCfg.itemWidth / 2;\n                else if (el.fisheyeCfg.halign &amp;&amp; el.fisheyeCfg.halign == 'right') var posx = pointer.x - el.fisheyeCfg.pos.x - el.offsetWidth + el.fisheyeCfg.itemWidth * el.fisheyeCfg.items.size();\n                else var posx = pointer.x - el.fisheyeCfg.pos.x;\n                var posy = Math.pow(pointer.y - el.fisheyeCfg.pos.y - el.offsetHeight / 2, 2);\n                el.fisheyeCfg.items.each(function (nr) {\n                    distance = Math.sqrt(Math.pow(posx - nr * el.fisheyeCfg.itemWidth, 2) + posy);\n                    distance -= el.fisheyeCfg.itemWidth / 2;\n                    distance = distance &lt; 0 ? 0 : distance;\n                    distance = distance &gt; el.fisheyeCfg.proximity ? el.fisheyeCfg.proximity : distance;\n                    distance = el.fisheyeCfg.proximity - distance;\n                    extraWidth = el.fisheyeCfg.maxWidth * distance / el.fisheyeCfg.proximity;\n                    this.style.width = el.fisheyeCfg.itemWidth + extraWidth + 'px';\n                    this.style.left = el.fisheyeCfg.itemWidth * nr + toAdd + 'px';\n                    toAdd += extraWidth\n                });\n                jQuery.iFisheye.positionContainer(el, toAdd)\n            })\n        })\n    },\n    positionContainer: function (el, toAdd) {\n        if (el.fisheyeCfg.halign) if (el.fisheyeCfg.halign == 'center') el.fisheyeCfg.container.get(0).style.left = (el.offsetWidth - el.fisheyeCfg.itemWidth * el.fisheyeCfg.items.size()) / 2 - toAdd / 2 + 'px';\n        else if (el.fisheyeCfg.halign == 'left') el.fisheyeCfg.container.get(0).style.left = -toAdd / el.fisheyeCfg.items.size() + 'px';\n        else if (el.fisheyeCfg.halign == 'right') el.fisheyeCfg.container.get(0).style.left = (el.offsetWidth - el.fisheyeCfg.itemWidth * el.fisheyeCfg.items.size()) - toAdd / 2 + 'px';\n        el.fisheyeCfg.container.get(0).style.width = el.fisheyeCfg.itemWidth * el.fisheyeCfg.items.size() + toAdd + 'px'\n    },\n    positionItems: function (el) {\n        el.fisheyeCfg.items.each(function (nr) {\n            this.style.width = el.fisheyeCfg.itemWidth + 'px';\n            this.style.left = el.fisheyeCfg.itemWidth * nr + 'px'\n        })\n    }\n};\njQuery.fn.Fisheye = jQuery.iFisheye.build;\n</code></pre>\n\n<p>Other links (lifted from the very same page):</p>\n\n<ul>\n<li>Chrome: <a href=\"https://github.com/rixth/jsbeautify-for-chrome\" rel=\"nofollow\">jsbeautify-for-chrome</a> by Tom Rix,</li>\n<li>Chrome: <a href=\"https://chrome.google.com/webstore/detail/piekbefgpgdecckjcpffhnacjflfoddg\" rel=\"nofollow\">Pretty Beautiful JavaScript</a> by Will McSweeney,</li>\n<li>Firefox: <a href=\"https://addons.mozilla.org/en-US/firefox/addon/javascript-deminifier/\" rel=\"nofollow\">Javascript deminifier</a> by Ben Murphy,\nto be used together with the firebug,</li>\n<li>Safari: <a href=\"http://spadin.github.com/js-beautify-safari-extension\" rel=\"nofollow\">Safari extension</a> by Sandro Padin,</li>\n<li>Opera: <a href=\"https://addons.opera.com/addons/extensions/details/readable-javascript/\" rel=\"nofollow\">Readable JavaScript</a> by Dither,</li>\n<li>Opera: <a href=\"https://addons.opera.com/addons/extensions/details/source/\" rel=\"nofollow\">Source</a> extension by Deathamns,</li>\n<li><a href=\"http://fiddler2.com/\" rel=\"nofollow\">Fiddler</a> proxy: JavaScript Formatter addon</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Using one of the unpackers mentioned on this question:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/2460751/how-to-unpack-the-contents-of-a-javascript-file\">How to unpack the contents of a Javascript file?</a></li>\n</ul>\n\n<p>you can unpack the packed javascript to the following code: </p>\n\n<pre><code>jQuery.iFisheye = {\n    build: function (options) {\n        return this.each(function () {\n            var el = this;\n            el.fisheyeCfg = {\n                items: jQuery(options.items, this),\n                container: jQuery(options.container, this),\n                pos: jQuery.iUtil.getPosition(this),\n                itemWidth: options.itemWidth,\n                itemsText: options.itemsText,\n                proximity: options.proximity,\n                valign: options.valign,\n                halign: options.halign,\n                maxWidth: options.maxWidth\n            };\n            jQuery.iFisheye.positionContainer(el, 0);\n            jQuery(window).bind('resize', function () {\n                el.fisheyeCfg.pos = jQuery.iUtil.getPosition(el);\n                jQuery.iFisheye.positionContainer(el, 0);\n                jQuery.iFisheye.positionItems(el)\n            });\n            jQuery.iFisheye.positionItems(el);\n            el.fisheyeCfg.items.bind('mouseover', function () {\n                jQuery(el.fisheyeCfg.itemsText, this).get(0).style.display = 'block'\n            }).bind('mouseout', function () {\n                jQuery(el.fisheyeCfg.itemsText, this).get(0).style.display = 'none'\n            });\n            jQuery(document).bind('mousemove', function (e) {\n                var pointer = jQuery.iUtil.getPointer(e);\n                var toAdd = 0;\n                if (el.fisheyeCfg.halign &amp;&amp; el.fisheyeCfg.halign == 'center') var posx = pointer.x - el.fisheyeCfg.pos.x - (el.offsetWidth - el.fisheyeCfg.itemWidth * el.fisheyeCfg.items.size()) / 2 - el.fisheyeCfg.itemWidth / 2;\n                else if (el.fisheyeCfg.halign &amp;&amp; el.fisheyeCfg.halign == 'right') var posx = pointer.x - el.fisheyeCfg.pos.x - el.offsetWidth + el.fisheyeCfg.itemWidth * el.fisheyeCfg.items.size();\n                else var posx = pointer.x - el.fisheyeCfg.pos.x;\n                var posy = Math.pow(pointer.y - el.fisheyeCfg.pos.y - el.offsetHeight / 2, 2);\n                el.fisheyeCfg.items.each(function (nr) {\n                    distance = Math.sqrt(Math.pow(posx - nr * el.fisheyeCfg.itemWidth, 2) + posy);\n                    distance -= el.fisheyeCfg.itemWidth / 2;\n                    distance = distance &lt; 0 ? 0 : distance;\n                    distance = distance &gt; el.fisheyeCfg.proximity ? el.fisheyeCfg.proximity : distance;\n                    distance = el.fisheyeCfg.proximity - distance;\n                    extraWidth = el.fisheyeCfg.maxWidth * distance / el.fisheyeCfg.proximity;\n                    this.style.width = el.fisheyeCfg.itemWidth + extraWidth + 'px';\n                    this.style.left = el.fisheyeCfg.itemWidth * nr + toAdd + 'px';\n                    toAdd += extraWidth\n                });\n                jQuery.iFisheye.positionContainer(el, toAdd)\n            })\n        })\n    },\n    positionContainer: function (el, toAdd) {\n        if (el.fisheyeCfg.halign) if (el.fisheyeCfg.halign == 'center') el.fisheyeCfg.container.get(0).style.left = (el.offsetWidth - el.fisheyeCfg.itemWidth * el.fisheyeCfg.items.size()) / 2 - toAdd / 2 + 'px';\n        else if (el.fisheyeCfg.halign == 'left') el.fisheyeCfg.container.get(0).style.left = -toAdd / el.fisheyeCfg.items.size() + 'px';\n        else if (el.fisheyeCfg.halign == 'right') el.fisheyeCfg.container.get(0).style.left = (el.offsetWidth - el.fisheyeCfg.itemWidth * el.fisheyeCfg.items.size()) - toAdd / 2 + 'px';\n        el.fisheyeCfg.container.get(0).style.width = el.fisheyeCfg.itemWidth * el.fisheyeCfg.items.size() + toAdd + 'px'\n    },\n    positionItems: function (el) {\n        el.fisheyeCfg.items.each(function (nr) {\n            this.style.width = el.fisheyeCfg.itemWidth + 'px';\n            this.style.left = el.fisheyeCfg.itemWidth * nr + 'px'\n        })\n    }\n};\njQuery.fn.Fisheye = jQuery.iFisheye.build;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In this case, you can get the original source here: <a href=\"http://interface.eyecon.ro/download\" rel=\"nofollow\">http://interface.eyecon.ro/download</a>. It's not really \"obfuscated\", in that the goal wasn't really obfuscation; rather, the goal was \"compression\" (minification), and the tool for that was a compressor/obfuscator.</p>\n\n<p>(Of course, the tools that everyone else mentions are indispensable here. I used jsbeautifier.org to find that the whole thing is an assignment to <code>jQuery.iFisheye</code>, which then told me what to Google to find the above.)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Here is one example:</p>\n\n<pre><code>eval(function(p,a,c,k,e,d){e=function(c){return(c&lt;a?'':e(parseInt(c/a)))+((c=c%a)&gt;35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--){d[e(c)]=k[c]||e(c)}k=[function(e){return d[e]}];e=function(){return'\\\\w+'};c=1};while(c--){if(k[c]){p=p.replace(new RegExp('\\\\b'+e(c)+'\\\\b','g'),k[c])}}return p}('4.h={H:9(d){T 7.F(9(){g 1=7;1.3={8:4(d.8,7),i:4(d.i,7),m:4.z.J(7),5:d.5,t:d.t,j:d.j,K:d.K,b:d.b,A:d.A};4.h.s(1,0);4(S).v(\\'W\\',9(){1.3.m=4.z.J(1);4.h.s(1,0);4.h.E(1)});4.h.E(1);1.3.8.v(\\'O\\',9(){4(1.3.t,7).l(0).a.I=\\'P\\'}).v(\\'R\\',9(){4(1.3.t,7).l(0).a.I=\\'11\\'});4(Z).v(\\'10\\',9(e){g p=4.z.Y(e);g c=0;k(1.3.b&amp;&amp;1.3.b==\\'L\\')g r=p.x-1.3.m.x-(1.w-1.3.5*1.3.8.n())/2-1.3.5/2;u k(1.3.b&amp;&amp;1.3.b==\\'N\\')g r=p.x-1.3.m.x-1.w+1.3.5*1.3.8.n();u g r=p.x-1.3.m.x;g M=B.G(p.y-1.3.m.y-1.X/2,2);1.3.8.F(9(q){6=B.Q(B.G(r-q*1.3.5,2)+M);6-=1.3.5/2;6=6&lt;0?0:6;6=6&gt;1.3.j?1.3.j:6;6=1.3.j-6;C=1.3.A*6/1.3.j;7.a.D=1.3.5+C+\\'f\\';7.a.o=1.3.5*q+c+\\'f\\';c+=C});4.h.s(1,c)})})},s:9(1,c){k(1.3.b)k(1.3.b==\\'L\\')1.3.i.l(0).a.o=(1.w-1.3.5*1.3.8.n())/2-c/2+\\'f\\';u k(1.3.b==\\'o\\')1.3.i.l(0).a.o=-c/1.3.8.n()+\\'f\\';u k(1.3.b==\\'N\\')1.3.i.l(0).a.o=(1.w-1.3.5*1.3.8.n())-c/2+\\'f\\';1.3.i.l(0).a.D=1.3.5*1.3.8.n()+c+\\'f\\'},E:9(1){1.3.8.F(9(q){7.a.D=1.3.5+\\'f\\';7.a.o=1.3.5*q+\\'f\\'})}};4.V.U=4.h.H;',62,64,'|el||fisheyeCfg|jQuery|itemWidth|distance|this|items|function|style|halign|toAdd|options||px|var|iFisheye|container|proximity|if|get|pos|size|left|pointer|nr|posx|positionContainer|itemsText|else|bind|offsetWidth|||iUtil|maxWidth|Math|extraWidth|width|positionItems|each|pow|build|display|getPosition|valign|center|posy|right|mouseover|block|sqrt|mouseout|window|return|Fisheye|fn|resize|offsetHeight|getPointer|document|mousemove|none'.split('|'),0,{}))\n</code></pre>\n\n<p>Obviously, this code is intentionally written to confuse other people. How can I understand it and rewrite it in simple code? </p>\n\n<p>Is there some tool for this job? This is very common in HTML.</p>\n",
            "last_activity_date": 1396085759,
            "question_id": 8100993,
            "score": 10,
            "tags": [
                "javascript",
                "html",
                "obfuscation",
                "deobfuscation"
            ],
            "title": "How to &quot;decode&quot; some obfuscated JavaScript in HTML?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Not really. There is no <code>change</code> event for <code>contenteditable</code> elements, and there's no HTML5 <code>input</code> event either, although I think that will eventually appear. It's a pain.</p>\n\n<hr>\n\n<p><strong>UPDATE 23 June 2012</strong> </p>\n\n<p>Recent WebKit supports the HTML5 <code>input</code> event on <code>contenteditable</code> elements, as does Firefox 14.</p>\n\n<hr>\n\n<p><code>focus</code>, however, does work, as does <code>DOMCharacterDataModified</code> in most browsers (though notably not IE &lt; 9). See <a href=\"http://jsfiddle.net/UuYQH/112/\">http://jsfiddle.net/UuYQH/112/</a></p>\n\n<p>By the way, <code>contenteditable</code> is not a Boolean attribute: it requires a value, which should be one of \"true\", \"false\", \"inherit\" and the empty string (which is equivalent to \"true\").</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>I know this is kinda late but jQuery seems to work with focus, check this example out:</p>\n\n<p><a href=\"http://jsfiddle.net/powerphillg5/EGtSC/\" rel=\"nofollow\">http://jsfiddle.net/powerphillg5/EGtSC/</a></p>\n\n<pre><code>$(\"#test\").focus(function(){\n     $(\"#log\").append(\"&lt;li&gt;Item Focused&lt;/li&gt;\");\n});\n</code></pre>\n\n<p>I hope this helps, but if it's not what you were looking for I will humbly accept the votes down.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Blur (when the area loses focus) and focus both works. At least with jQuery.\nTested with Chrome 28 and Safari 6.  </p>\n\n<pre><code>$(\"#test\").blur(function(){\n  $(\"#log\").append(\"&lt;li&gt;Item lost focus&lt;/li&gt;\");\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>contenteditable was introduced way back in IE 5.5, it was supported by the JavaScript 1.1 / 1.2 API and applied first to iframes, later to DIV's. Its supported in all browsers to some degree. Now in the HTML5 spec most elements can accept this attribute (but beware backwards compatibility). onchange event support may apply still to form elements as it was originally designed, having little to do with this attribute. Your option is still keypress events, which are easy to capture and when combined with a check for the target elements focus you have a similar result to onchange. It might not be ideal for edge cases but for most use cases I would go this route and its the most backwards compatible too.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to figure out if there is any way to listen to events like <code>focus</code> or <code>change</code> of an HTML element with <code>contenteditable</code> attribute.</p>\n\n<p>I have this html markup:</p>\n\n<pre><code>&lt;p id=\"test\" contenteditable &gt;Hello World&lt;/p&gt;\n</code></pre>\n\n<p>I've tried these without any success(<a href=\"http://jsbin.com/upidak/edit#javascript,html,live\">JSBin</a>):</p>\n\n<pre><code>var test = document.querySelector('#test');\ntest.addEventListener('change', function(){\n  alert('content edited');\n}, false);\ntest.addEventListener('DOMCharacterDataModified', function(){\n  alert('content edited');\n}, false);\ntest.addEventListener('focus', function(){\n  alert('content edited');\n}, false);\n</code></pre>\n\n<p>I don't want to listen to keyboard or mouse events. I didn't find any clear documentation in <a href=\"http://www.w3.org/TR/html5/editing.html#contenteditable\"><strong>W3C</strong></a> and <a href=\"https://developer.mozilla.org/en/HTML/Content_Editable\"><strong>MDN</strong></a> about <code>contenteditable</code>.</p>\n\n<p>Is it possible to listen to <code>change</code> and <code>focus</code> or other events on a content editable HTML element?</p>\n",
            "last_activity_date": 1390554438,
            "question_id": 7802784,
            "score": 10,
            "tags": [
                "javascript",
                "html",
                "html5",
                "dom",
                "mutation-events"
            ],
            "title": "Listening to events of a  contenteditable HTML element "
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Could you use <code>window.location.pathname</code>?</p>\n\n<pre><code>var pathname = window.location.pathname;\n$.ajax({\n    //...\n    url: pathname + 'Controls/...', // might need a leading '/'\n    //...\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>You've got two options:</p>\n\n<ol>\n<li><p>Build a configuration/ preferences object in JavaScript which contains all your environment specific settings:</p>\n\n<pre><code> var config = {\n     base: &lt;% /* however the hell you output stuff in ASPX */ %&gt;,\n     someOtherPref: 4\n };\n</code></pre>\n\n<p>and then prefix the AJAX url with <code>config.base</code> (and change the value for <code>config.base</code> whether you're on a dev/ testing/ deployment server.)</p></li>\n<li><p>Use the <a href=\"https://developer.mozilla.org/en/HTML/Element/base\"><code>&lt;base /&gt;</code></a> HTML tag to set the URL prefix for all relative URL's. This affects <strong>all</strong> relative URL's: image's, links etc.</p></li>\n</ol>\n\n<p>Personally, I'd go for option 1. You'll most likely find that config object coming in handy elsewhere.</p>\n\n<p>Obviously the config object will have to be included in a part of your site where server-side-code is evaluated; a <code>.js</code> file won't cut it without configuring your server. I always include the config object in the HTML <code>&lt;head&gt;</code>; its a small config object, whose contents can change on each page, so it's perfectly warrented to stick it in there.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>As long as you don't care about asp.net <em>virtual directories</em> (which makes it actually impossible to figure out from script, you'll have to pass something from the server) you can look at the URL and parse it:</p>\n\n<pre><code>function baseUrl() {\n   var href = window.location.href.split('/');\n   return href[0]+'//'+href[2]+'/';\n}\n</code></pre>\n\n<p>then:</p>\n\n<pre><code>...\n   url: baseUrl()+\"Controls/ModelSelectorWebMethods.aspx/getDeviceTypes\",\n...\n</code></pre>\n\n<p>... and now I see from your comments above that virtual directories are a problem. I usually do this.</p>\n\n<p>1) In your masterpage, put code to inject a script somewhere, preferably before anything else (I add it directly to HEAD by adding controls instead of using ScriptManager) to make sure it's run before any other script. c#: </p>\n\n<pre><code>string basePath = Request.ApplicationPath;\n// Annoyingly, Request.ApplicationPath is inconsistent about trailing slash\n// (if not root path, then there is no trailing slash) so add one to ensure \n// consistency if needed\nstring myLocation = \"basePath='\" + basePath + basePath==\"/\"?\"\":\"/\" + \"';\";\n// now emit myLocation as script however you want, ideally in head\n</code></pre>\n\n<p>2) Change baseUrl to include that:</p>\n\n<pre><code>function baseUrl() {\n   var href = window.location.href.split('/');\n   return href[0]+'//'+href[2]+basePath;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Create an app root variable...</p>\n\n<pre><code>var root = location.protocol + \"//\" + location.host;\n</code></pre>\n\n<p>And use an absolute URI (instead of relative) when you are making AJAX requests...</p>\n\n<pre><code>url: root + \"/Controls/ModelSelectorWebMethods.aspx/getDeviceTypes\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I think this function will work... it is to get a relative path as \"../../../\"\nso if you invoke this function in each page, this will return a relative path format.</p>\n\n<pre><code>function getPath() {\n    var path = \"\";\n    nodes = window.location. pathname. split('/');\n    for (var index = 0; index &lt; nodes.length - 3; index++) {\n        path += \"../\";\n    }\n    return path;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can import the namespace at the beginning: System.Web.Hosting.HostingEnvironment</p>\n\n<blockquote>\n<pre><code>  &lt;%@ Master Language=\"VB\" AutoEventWireup=\"false\" CodeFile=\"Site.master.vb\" Inherits=\"Site\" %&gt;\n   &lt;%@ Import namespace=\"System.Web.Hosting.HostingEnvironment\" %&gt;\n</code></pre>\n</blockquote>\n\n<p>and on js:</p>\n\n<blockquote>\n<pre><code>  &lt;script type=\"text/javascript\"&gt;\n        var virtualpathh = \"&lt;%=ApplicationVirtualPath  %&gt;\";\n   &lt;/script&gt;\n</code></pre>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In my ASP.net web project, I've written the following Javascript code in a .js file:</p>\n\n<pre><code>function getDeviceTypes() {\n    var deviceTypes;\n    $.ajax({\n        async: false,\n        type: \"POST\",\n        url: \"Controls/ModelSelectorWebMethods.aspx/getDeviceTypes\",\n        data: '{ }',\n        contentType: \"application/json;\",\n        dataType: \"json\",\n        success: function(response) {\n            deviceTypes = response.d;\n        },\n        error: function(xhr, status) {\n            debugger;\n            alert('Error getting device types.');\n        }\n    });    // end - $.ajax\n    return deviceTypes;\n}\n</code></pre>\n\n<p>It was working great until I tried to load this .js file into a page in a subdirectory.</p>\n\n<p>Let's suppose that the name of my project is <code>widget</code>.</p>\n\n<p>When I use this code in the main virtual directory, Javascript interprets <code>Controls/ModelSelectorWebMethods.aspx/getDeviceTypes</code> to mean <code>https://mysite.com/widget/Controls/ModelSelectorWebMethods.aspx/getDeviceTypes</code> and all is well.  However, from the page in a subdirectory, Javascript interprets it to mean <code>https://mysite.com/widget/subdirectory/Controls/ModelSelectorWebMethods.aspx/getDeviceTypes</code> and it doesn't work.</p>\n\n<p>How can I write my Javascript code so that the AJAX web method can be called from pages in any directory in my application?</p>\n",
            "last_activity_date": 1408568594,
            "question_id": 6310620,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "asp.net",
                "ajax"
            ],
            "title": "How to get relative path in Javascript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You would need to do something like on <code>mouseDown</code>, start doing something and continue doing it till <code>mouseUp</code> event is fired.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Something like</p>\n\n<pre><code>var mouseStillDown = false;\n\n$(document).mousedown(function(event) {\n    mouseStillDown = true;\n    doSomething();\n});\n\nfunction doSomething() {\n    if (!mouseStillDown) { return; } // we could have come back from\n                                     // SetInterval and the mouse is no longer down\n    // do something\n\n    if (mouseStillDown) { setInterval(\"doSomething\", 100); }\n}\n\n$(document).mouseup(function(event) {\n    mouseStillDown = false;\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>You'd implement some recursion!</p>\n\n<pre><code>var mouseisdown = false;\n\n$(document).mousedown(function(event) {\n    mouseisdown = true;\n    doSomething();\n}).mouseup(function(event) {\n    mouseisdown = false;\n});\n\nfunction doSomething(){\n    //Code goes here\n    if (mouseisdown)\n        doSomething();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>use the mousedown event to set a flag, and mouseup to unset the flag.  Then you can simply check the flag, to see if it is set.</p>\n\n<p>exmaple</p>\n\n<pre><code>var mouseDownFlag = false;\n$(document).mousedown(function(event) {\n     mouseDownFlag = true;\n     someFunc();\n}\n$(document).mouseup(function(event) {\n     mouseUpFlag = true;\n}\nvar someFunc = function(){\n     if(mouseDownFLag){//only run this function when the mouse is clicked\n     // your code\n         setTimeout(\"somefunc()\", 1000); //run this function once per second if your mouse is down.\n     }\n}\n</code></pre>\n\n<p>Hope that helps!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>$('#trigger').mousedown(function(){\n    int00 = setinterval(function() { repeatingfunction(); }, 50);\n}).mouseup(function() {\n    clearInterval(int00);\n});\n\nfunction repeatingfunction() {\n    // This will repeat //\n}\n</code></pre>\n\n<p>You can also put a clearInterval on the mouseleave event. </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>$(document).ready(function(){\n\n  var mouseStillDown = false;\n\n  $('#some_element').mousedown(function() {\n    do_something();\n  }).mouseup(function() {\n    clearInterval(mouseStillDown);\n    mouseStillDown = false;\n  });\n\n  function do_something() {\n\n    // add some code here that repeats while mouse down\n\n    if (!mouseStillDown) {\n      mouseStillDown = setInterval(do_something, 100);\n    }\n\n  }\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have the following code snippets</p>\n\n<pre><code>$(document).mousedown(function(event) {\n    doSomething();\n}\n</code></pre>\n\n<p>I can capture the <code>mousedown</code> event successfully.</p>\n\n<p>I am trying to do the following:</p>\n\n<ol>\n<li>Capture the first <code>mousedown</code> event</li>\n<li>I want to detect if the user is still holding the mouse down so I can do something else.</li>\n</ol>\n",
            "last_activity_date": 1377863441,
            "question_id": 4961072,
            "score": 10,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery continuous mousedown"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Somewhat surprisingly, there's no simple way to do this. IE has a <a href=\"http://msdn.microsoft.com/en-us/library/ms536967%28VS.85%29.aspx\" rel=\"nofollow\">select</a> event that is implemented on all elements but other browsers have never extended this beyond inputs. You'll have to handle <code>keyup</code> and <code>mouseup</code> events on the whole document, and even then, your callback may well be called when the selection hasn't actually changed.</p>\n\n<hr>\n\n<p><strong>UPDATE 13 OCTOBER 2013</strong></p>\n\n<p>WebKit browsers have supported the <code>selectionchange</code> event on <code>Document</code> nodes for a couple of years. IE also supports this event back to version 5.5. Example:</p>\n\n<pre><code>document.onselectionchange = function() {\n    console.log(\"Selection changed\");\n};\n</code></pre>\n\n<hr>\n\n<p>Here's a simple example:</p>\n\n<pre><code>function selectCallback(selectionParentElement) {\n    console.log(\"Selecting, parent element is \" + selectionParentElement.nodeName);\n}\n\nvar mouseOrKeyUpHandler;\n\nif (typeof window.getSelection != \"undefined\") {\n    // Non-IE\n    mouseOrKeyUpHandler = function() {\n        var sel = window.getSelection();\n        if (sel.rangeCount &gt; 0) {\n            var range = sel.getRangeAt(0);\n            if (range.toString()) {\n                var selParentEl = range.commonAncestorContainer;\n                if (selParentEl.nodeType == 3) {\n                    selParentEl = selParentEl.parentNode;\n                }\n                selectCallback(selParentEl);\n            }\n        }\n    };\n} else if (typeof document.selection != \"undefined\") {\n    // IE\n    mouseOrKeyUpHandler = function() {\n        var sel = document.selection;\n        if (sel.type == \"Text\") {\n            var textRange = sel.createRange();\n            if (textRange.text != \"\") {\n                selectCallback(textRange.parentElement());\n            }\n        }\n    };\n}\n\ndocument.onmouseup = mouseOrKeyUpHandler;\ndocument.onkeyup = mouseOrKeyUpHandler;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>you can use <a href=\"http://msdn.microsoft.com/en-us/library/ms536923%28VS.85%29.aspx\" rel=\"nofollow\">this</a></p>\n\n<p>use <code>&lt;ELEMENT ondrag = \"handler(event);\" &gt;</code></p>\n\n<pre><code>object.addEventListener( \"drag\", handler, bCapture);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>is it possible that when user selected some text(non textarea nor input), jquery can call my callback to let me know which div's text is selected, and if the select focus is lost also call my callback?</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1381696617,
            "question_id": 4367353,
            "score": 10,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jquery: select text event"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>In your case remove the <code>g</code> modifier from the end, for example:</p>\n\n<pre><code>var dateRegex = /\\/Date\\((\\d+)\\)\\//;\ndateRegex.test(\"Date(1286445750000)\"); // true\ndateRegex.test(\"Date(1286445750000)\"); // true\ndateRegex.test(\"Date(1286445750000)\"); // true\ndateRegex.test(\"Date(1286445750000)\"); // true\ndateRegex.test(\"Date(1286445750000)\"); // true\n</code></pre>\n\n<p>It's a bug with the way regexes are implemented in ECMAScript 3, <a href=\"http://blog.stevenlevithan.com/archives/es3-regexes-broken\">there's a great post on the details here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>The <code>/g</code> was causing problem. Following code works fine.</p>\n\n<pre><code>&lt;div id=\"test\"&gt;&lt;/div&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        var reg = /Date\\(\\d+\\)/; //REGEX WITHOUT g\n        var d=\"Date(1286445750000)\";\n        $(function(){\n            var $d=$(\"div#test\");\n            for(var i=0;i&lt;100;i++){\n                if(reg.test(d)){\n                    $d.html($d.html()+\"&lt;br/&gt;Matched: [\"+d+\"]\");\n                }\n                else{\n                    $d.html($d.html()+\"&lt;br/&gt;Not Matched: [\"+d+\"]\");\n                }\n            }\n        });\n    &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<pre><code>var dateRegex = /\\/Date\\((\\d+)\\)\\//g;    // [0-9] instead of \\d does not help.\ndateRegex.test(\"/Date(1286443710000)/\"); // true\ndateRegex.test(\"/Date(1286445750000)/\"); // false\n</code></pre>\n\n<p>Both Chrome and Firefox JavaScript consoles confirm. What the hell, guys?</p>\n\n<p>Edit: even simpler test case:</p>\n\n<pre><code>var dateRegex = /Date\\(([0-9]+)\\)/g;\ndateRegex.test(\"Date(1286445750000)\"); // true\ndateRegex.test(\"Date(1286445750000)\"); // false\ndateRegex.test(\"Date(1286445750000)\"); // true\ndateRegex.test(\"Date(1286445750000)\"); // false\ndateRegex.test(\"Date(1286445750000)\"); // true\n</code></pre>\n\n<p>This shows that it alternates true/false every time...</p>\n",
            "last_activity_date": 1285818360,
            "question_id": 3827456,
            "score": 10,
            "tags": [
                "javascript",
                "regex",
                "date"
            ],
            "title": "What is wrong with my date regex?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Yes, your update is correct. You <strong>must</strong> assume that any input you receive from the user may contain malicious elements. Thus, you <strong>must</strong> validate on the server before accepting their input :-)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can try the same solution adopted by CKEditor, of which you have a demo <a href=\"http://ckeditor.com/demo\" rel=\"nofollow\">here</a>.<br />\nBy switching from RTE mode to view source mode, you can enter some JavaScript and see the result, which is a replacement of the JS node in a safely encoded string.<br />\nIf you are in <strong>view source</strong> mode, by entering some JS line like:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n// comment\nalert('Ciao');\n&lt;/script&gt;\n</code></pre>\n\n<p>you will see it rendered this way when going back to <strong>rich text editor</strong> mode:</p>\n\n<pre><code>&lt;!--{cke_protected}%3Cscript%20type%3D%22text%2Fjavascript%22%3E%0D%0A%2F%2F%20comment%0D%0Aalert('Ciao')%3B%0D%0A%3C%2Fscript%3E--&gt;\n</code></pre>\n\n<p>I think it is one of the easiest and effective way, since the RegExp to parse JS nodes is not complex.<br />\nAn example:</p>\n\n<pre><code>var pattern = /&lt;script(\\s+(\\w+\\s*=\\s*(\"|').*?\\3)\\s*)*\\s*(\\/&gt;|&gt;.*?&lt;\\/script\\s*&gt;)/;\nvar match = HTMLString.match(pattern); // array containing the occurrences found\n</code></pre>\n\n<p>(Of course, to replace the script node you should use the replace() method).</p>\n\n<p>Regards.</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>HTML5 introduces \"sandbox\" attribute on the iframe that (if empty) disables the javascript loading and execution.</p>\n\n<p><a href=\"http://www.w3.org/TR/html5/embedded-content-0.html#attr-iframe-sandbox\">http://www.w3.org/TR/html5/embedded-content-0.html#attr-iframe-sandbox</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I am making a small HTML page editor. The editor loads a file into an iframe. From there, it could add, modify, or delete the elements on the page with new attributes, styles, etc. The problem with this, is that JavaScript (and/or other programming languages) can completely modify the page when it loads, before you start editing the elements. So when you save, it won't save the original markup, but the modified page + your changes.</p>\n\n<p>So, I need some way to disable the JavaScript on the iframe, or somehow remove all the JavaScript before the JavaScript starts modifying the page. (I figure I'll have to end up parsing the file for PHP, but that shouldn't be too hard) I considered writing a script to loop through all the elements, removing any  tags, onclick's, onfocus's, onmouseover's, etc. But that would be a real pain.</p>\n\n<p>Does anyone know of an easier way to get rid of JavaScript from running inside an iframe?</p>\n\n<p>UPDATE: unless I've missed something, I believe there is no way to simply 'disable JavaScript.' Please correct me if I'm wrong. But, I guess the only way to do it would be to parse out any script tags and JavaScript events (click, mouseover, etc) from a requested page string.</p>\n",
            "last_activity_date": 1370057895,
            "question_id": 3689455,
            "score": 10,
            "tags": [
                "javascript",
                "iframe"
            ],
            "title": "Disable JavaScript in iframe/div"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Those are all correct.</p>\n\n<p>Of course, there are \"drawbacks\" as well:</p>\n\n<p><strong>No closures</strong></p>\n\n<pre><code>function a() {\n    var ival = 0;\n    this.start = function(){ ival = setInterval(function(){ }, 300); }\n    this.finish = function(){ clearTimeout(ival); }\n}\n</code></pre>\n\n<p>compare to:</p>\n\n<pre><code>function a() {\n    this.ival = 0;\n}\na.prototype.start = function(){ this.ival = setInterval(function(){ }, 300); }\na.prototype.finish = function(){ clearTimeout(this.ival); }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p><a href=\"http://en.wikipedia.org/wiki/Prototype-based_programming#Comparison_with_class-based_models\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Prototype-based_programming#Comparison_with_class-based_models</a></p>\n\n<p>Also, please see the discussion of prototype inheritance in the answers to this:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/816071/prototype-based-vs-class-based-inheritance\">http://stackoverflow.com/questions/816071/prototype-based-vs-class-based-inheritance</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I've been wondering about JavaScript's prototypal nature, and the benefits of it, and have come down to the following list : </p>\n\n<p><strong>1) Inheritance</strong></p>\n\n<pre><code>cat.prototype = animal\n</code></pre>\n\n<p><strong>2) Memory Efficiency</strong></p>\n\n<pre><code>a.prototype.b = function() {}\n\nvar a1 = new a();\nvar a2 = new a();\n</code></pre>\n\n<p>Then a1.b and a2.b are essentially the same object, where as : </p>\n\n<pre><code>var a = function() {\n             this.b = function() {}; \n        }\n\nvar a1 = new a();\nvar a2 = new a();\n</code></pre>\n\n<p>a1.b and a2.b would be different function objects and take up more memory.</p>\n\n<p><strong>3) Adding methods/fields to multiple, already created, 'out in the wild' objects.</strong></p>\n\n<pre><code>var a = function() {}\n\nvar a1 = new a();\nvar a2 = new a();\n\na.prototype.b = function() {}\n\na1.b();\na2.b();\n</code></pre>\n\n<p>So the question is, are these correct?</p>\n\n<p>... and are there any other benefits I've missed?</p>\n\n<p>Cheers!</p>\n",
            "last_activity_date": 1281558986,
            "question_id": 3462464,
            "score": 10,
            "tags": [
                "javascript",
                "prototype"
            ],
            "title": "The Benefits of JavaScript Prototype"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You should move the code in your <code>drop</code> handler to a separate function.<br>\nYou can then call the function both in the handler and elsewhere.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>You can trigger the function associated with the drop call via the option-method:</p>\n\n<pre><code>$(\"#droppable\").droppable({\n        drop: function(event, ui) {\n            do stuff }\n    });\nvar drop_function = $(\"#droppable\").droppable.option('drop');\ndrop_function();\n</code></pre>\n\n<p>This way you get whatever would happen when dropping something on droppable. Of course you could just execute the function instead of assigning it.\nIt's nonetheless a good idea to assign a function to drop, that you define somewhere else, just for clarities sake.</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I have a <strong>droppable</strong> with a drop event handler:</p>\n\n<pre><code>$(this).droppable({\n  drop:function(){\n    console.log('OMG You Dropped It!');\n  }\n});\n</code></pre>\n\n<p>I have a <strong>draggable</strong>:</p>\n\n<pre><code>$(this).draggable();\n</code></pre>\n\n<p>What I want to do is trigger the drop event handler on the <strong>droppable</strong> without actually dragging and dropping the <strong>draggable</strong>. I want to simulate the actual behavior without physically performing the behavior.</p>\n\n<p>I thought something like this would do:</p>\n\n<pre><code>$(droppable).trigger('drop', [draggable]);\n</code></pre>\n\n<p>Unfortunately, it's not quite that simple. Does anyone know how I can accomplish this?</p>\n",
            "last_activity_date": 1296666209,
            "question_id": 3188130,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui",
                "droppable"
            ],
            "title": "How do I trigger the Drop event with jQuery UI Droppable without actually dragging and dropping?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If it's still in XML format you should be able to just wrap it in the jQuery function and start using jQuery to parse through it. For example:</p>\n\n<pre><code>$(xmlStringFromDB).find('foo');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Non-jQuery version:</p>\n\n<pre><code>var parseXml;\n\nif (window.DOMParser) {\n    parseXml = function(xmlStr) {\n        return ( new window.DOMParser() ).parseFromString(xmlStr, \"text/xml\");\n    };\n} else if (typeof window.ActiveXObject != \"undefined\" &amp;&amp; new window.ActiveXObject(\"Microsoft.XMLDOM\")) {\n    parseXml = function(xmlStr) {\n        var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n        xmlDoc.async = \"false\";\n        xmlDoc.loadXML(xmlStr);\n        return xmlDoc;\n    };\n} else {\n    parseXml = function() { return null; }\n}\n\nvar xmlDoc = parseXml(\"&lt;foo&gt;Stuff&lt;/foo&gt;\");\nif (xmlDoc) {\n    window.alert(xmlDoc.documentElement.nodeName);\n}\n</code></pre>\n\n<p>Since jQuery 1.5, you can use <a href=\"https://api.jquery.com/jQuery.parseXML/\" rel=\"nofollow\"><code>jQuery.parseXML()</code></a>, which works in exactly the same way as the above code:</p>\n\n<pre><code>var xmlDoc = jQuery.parseXML(\"&lt;foo&gt;Stuff&lt;/foo&gt;\");\nif (xmlDoc) {\n    window.alert(xmlDoc.documentElement.nodeName);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>With jquery, you can use <code>$.parseXML(str)</code>, <a href=\"https://api.jquery.com/jQuery.parseXML/\" rel=\"nofollow\">https://api.jquery.com/jQuery.parseXML/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am aware of <a href=\"http://stackoverflow.com/questions/1290321/convert-string-to-xml-document-in-javascript\">this</a> question already existing, but it has given me no luck.</p>\n\n<p>I have an application which loads a physicial XML document via the following method:</p>\n\n<pre><code>      jQuery.ajax( {\n    type: \"GET\",\n    url: fileName,\n    dataType: \"xml\",\n    success: function(data) {\n      etc...\n</code></pre>\n\n<p>I parse the XML and convert it into a string which is saved into a variable so that it can easily be stored in a database. How can I now convert the data in this variable back into an XML object so that it can be parsed as such?</p>\n",
            "last_activity_date": 1408615411,
            "question_id": 3054108,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "xml"
            ],
            "title": "How to convert string to XML object in JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can do A, since if you get a security error (which you can catch), that's means they're cross-domain :)  Then you can resize the iframe to be the whole page.  But I think you're right you can't actually bust out, without explicit cooperation from the other domain.</p>\n\n<p>EDIT: You're right you don't need to poll.  Here's the basic code:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Cross-domain frame test&lt;/title&gt;\n&lt;!-- http://stackoverflow.com/questions/2365822/detect-when-iframe-is-cross-domain-then-bust-out-of-it/2365853#2365853 --&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction checkForCross()\n{\n  var iframe = document.getElementById(\"myFrame\");\n  try\n  {\n    var loc = iframe.contentDocument.location.href;\n  } catch(e)\n  {\n    iframe.setAttribute(\"style\", \"border: 0; margin: 0; padding: 0; height: 100%; width: 100%;\");\n  }\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;iframe name=\"myFrame\" id=\"myFrame\" src=\"child.html\" style=\"height: 50%; width: 50%;\" onload=\"checkForCross()\"&gt;&lt;/iframe&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>set the 'target' attribute on external links to '_top'.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This works for chrome at least (not tester on other browsers)</p>\n\n<pre><code>   if(parent.location.host != undefined){ \n       alert(\"hello world!\");\n    }else{\n       throw \"cannot access parent!\";\n    }\n</code></pre>\n\n<p>It will still throw the <code>\"unsafe javascript attempt\"</code> warning, but this doesn't stop code execution.  Instead the variable is returned as undefined.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a page with a large iframe that contains a majority of the content. The user interacts with the website by clicking around within the iframe. The functionality I'm trying to build is: When a user navigates away from my site, I do them a favor and bust out of the iframe.</p>\n\n<p>The iframe has an onload event which is fired every time a new page is loaded, cross-domain or not.</p>\n\n<pre><code>&lt;iframe id=\"testframe\" src=\"http://mysite.com\" onload=\"testframe_loaded()\"&gt;&lt;/iframe&gt;\n</code></pre>\n\n<p>Each time the event is fired, I'm looking for some way to:</p>\n\n<p><strong>A</strong>) Detect when the user navigates to a different domain</p>\n\n<p><strong>B</strong>) Bust out of the iframe.</p>\n\n<p>I suspect that B isn't possible, since browsers don't give access to</p>\n\n<pre><code>document.getElementById(\"testframe\").contentDocument.location.href\n</code></pre>\n\n<p>when the iframe is cross-domain. I'm also not sure whether or not A is possible.</p>\n\n<p>If anybody has ideas as to how to accomplish this, or is positive that it can't be done, I'd appreciate the advice.</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1343679689,
            "question_id": 2365822,
            "score": 10,
            "tags": [
                "javascript",
                "security",
                "iframe",
                "cross-domain"
            ],
            "title": "Detect when iframe is cross-domain, then bust out of it"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The <code>navigator</code> object contains all the info you need. This should do:</p>\n\n<pre><code>navigator.userAgent.indexOf(\"Opera\");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>do you mind using jQuery?</p>\n\n<p>then you can use <code>jQuery.browser</code> (<a href=\"http://docs.jquery.com/Utilities/jQuery.browser\" rel=\"nofollow\">see documnentation</a>)</p>\n\n<p>But the jQuery-guys recommend not to use this.</p>\n\n<blockquote>\n  <p>We recommend against using this\n  property, please try to use feature\n  detection instead (see <a href=\"http://docs.jquery.com/Utilities/jQuery.support\" rel=\"nofollow\">jQuery.support</a>)</p>\n</blockquote>\n\n<p><strong>Edit:</strong></p>\n\n<p>For Mootools: use <code>window.opera</code> (see <a href=\"http://docs111.mootools.net/#window\" rel=\"nofollow\">documentation</a>)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>if(window.opera){\n    //do stuffs, for example\n    alert(opera.version()); //10.10 \n}\n</code></pre>\n\n<p>No kidding, there is an object <code>opera</code> in opera browser.</p>\n\n<p>You may think, object <code>opera</code> is overridable, but <code>navigator</code> is overridable too.</p>\n\n<p><strong>UPDATE</strong>:</p>\n\n<p>To get more accurate result, you could do like</p>\n\n<pre><code>if (window.opera &amp;&amp; opera.toString() == \"[object Opera]\"){\n    //do stuffs, tested on opera 10.10\n}\n</code></pre>\n\n<p>And I noticed, Opera have both addEventListener and attachEvent, so there is also another way like</p>\n\n<pre><code>if (window.addEventListener &amp;&amp; window.attachEvent){\n    //do stuffs, tested on opera 10.10\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>In Prototype.js, <a href=\"http://github.com/sstephenson/prototype/blob/master/src/prototype.js#L14\">we use this inference</a>:</p>\n\n<pre><code>var isOpera = Object.prototype.toString.call(window.opera) == '[object Opera]';\n</code></pre>\n\n<p>This essentially checks that <code>window.opera</code> object exists and its internal [[Class]] value is \"Opera\". This is a more solid test than just checking for <code>window.opera</code> existence, since there's much less chance of some unrelated global <code>opera</code> variable getting in the way and resulting in false positives.</p>\n\n<p>Speaking of unrelated global variable, remember that in MSHTML DOM, for example, elements can be resolved by id/name globally; this means that presence of something like <code>&lt;a name=\"opera\" href=\"...\"&gt;foo&lt;/a&gt;</code> in a markup will result in <code>window.opera</code> referencing that anchor element. There's your false positive...</p>\n\n<p>In other words, test [[Class]] value, not just existence.</p>\n\n<p>And of course always think twice before sniffing for browser. Oftentimes there are better ways to solve a problem ;)</p>\n\n<p>P.S. There's a chance of future versions of Opera changing [[Class]] of <code>window.opera</code>, but that seems to be unlikely.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Now that Opera uses the Chrome rendering engine, the accepted solution no longer works. </p>\n\n<p>The User Agent string shows up like this:</p>\n\n<pre>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.52 Safari/537.36 OPR/15.0.1147.132</pre>\n\n<p>The only identifier for Opera is the <code>OPR</code> part. </p>\n\n<p><strong>Here's the code I use</strong>, which should match the old Opera or the new Opera. It makes the <code>Opera</code> var a boolean value (true or false):</p>\n\n<p><code>var Opera = (navigator.userAgent.match(/Opera|OPR\\//) ? true : false);</code></p>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>I want to determine that the browser of the client machines in opera or not using javascript.</p>\n",
            "last_activity_date": 1381145099,
            "question_id": 1998293,
            "score": 10,
            "tags": [
                "javascript",
                "cross-browser",
                "opera"
            ],
            "title": "how to determine the opera browser using javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>First of all, <code>onmouseenter</code> is IE-specific. Doesn't work in other browsers unless you use jQuery which can <a href=\"http://docs.jquery.com/Events/mouseenter\">simulate</a> this event.</p>\n\n<p>Secondly, both <code>onmouseenter</code> and <code>onmouseover</code> fire when the mouse enters the boundary of an element. However, <code>onmouseenter</code> doesn't fire again (does not bubble) if the mouse enters a child element within this first element.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Unlike the onmouseover event, the onmouseenter event does not bubble. In other words, the onmouseenter event does not fire when the user moves the mouse pointer over elements contained by the object, whereas onmouseover does fire.</p>\n\n<p>I always use onmouseover. I use onmouseover in the same purpose (highlights a row).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You might spare yourself some coding by just adding <code>:hover</code> support for all elements in IE too:<br />\ntry <a href=\"http://www.xs4all.nl/~peterned/csshover.html\" rel=\"nofollow\">csshover.htc</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to have a simple html table, that highlights a row as a user mouses over it.  Unfortunately the css hover item doesn't work for IE.  That leaves me to simulate it in javascript. I can use either <code>onmouseenter</code> or <code>onmouseover</code>.</p>\n\n<p>What is the difference between them, and which one should I use?</p>\n",
            "last_activity_date": 1421206511,
            "question_id": 1638877,
            "score": 10,
            "tags": [
                "javascript",
                "html",
                "javascript-events"
            ],
            "title": "Difference between onMouseOver and onMouseEnter"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>From <a href=\"http://stackoverflow.com/users/1041853/parthik-gosar\">Parthik Gosar</a>'s <a href=\"http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\">link</a> in <a href=\"http://stackoverflow.com/questions/17242144/#comment24984878_17242144\">this comment</a> with slight modification to let you enter each value independently or all at once as an object</p>\n\n<pre><code>/* accepts parameters\n * h  Object = {h:x, s:y, v:z}\n * OR \n * h, s, v\n*/\nfunction HSVtoRGB(h, s, v) {\n    var r, g, b, i, f, p, q, t;\n    if (h &amp;&amp; s === undefined &amp;&amp; v === undefined) {\n        s = h.s, v = h.v, h = h.h;\n    }\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n    switch (i % 6) {\n        case 0: r = v, g = t, b = p; break;\n        case 1: r = q, g = v, b = p; break;\n        case 2: r = p, g = v, b = t; break;\n        case 3: r = p, g = q, b = v; break;\n        case 4: r = t, g = p, b = v; break;\n        case 5: r = v, g = p, b = q; break;\n    }\n    return {\n        r: Math.floor(r * 255),\n        g: Math.floor(g * 255),\n        b: Math.floor(b * 255)\n    };\n}\n</code></pre>\n\n<p>This code expects <code>0 &lt;= h, s, v &lt;= 1</code>, if you're using degrees or radians, remember to divide them out.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>Unity3d version:</p>\n\n<pre><code>function HSVToRGB(h : float, s : float, v : float) {\nh=h%1;\ns=s%1;\nv=v%1;\n\n    var r : float;\n    var g : float;\n    var b : float;\n    var i : float;\n    var f : float;\n    var p : float;\n    var q : float;\n    var t : float; \n    i = Mathf.Floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n    switch (i % 6) {\n        case 0: r = v; g = t; b = p; break;\n        case 1: r = q; g = v; b = p; break;\n        case 2: r = p; g = v; b = t; break;\n        case 3: r = p; g = q; b = v; break;\n        case 4: r = t; g = p; b = v; break;\n        case 5: r = v; g = p; b = q; break;\n    }\n    return Color(r,g,b); \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I need to accurately convert HSB to RGB but I am not sure how to get around the problem of turning decimals into whole numbers without rounding. This is the current function I have out of a colorpicker library:</p>\n\n<pre><code>HSBToRGB = function (hsb) {\n                    var rgb = {};\n                    var h = Math.round(hsb.h);\n                    var s = Math.round(hsb.s * 255 / 100);\n                    var v = Math.round(hsb.b * 255 / 100);\n                    if (s == 0) {\n                        rgb.r = rgb.g = rgb.b = v;\n                    } else {\n                        var t1 = v;\n                        var t2 = (255 - s) * v / 255;\n                        var t3 = (t1 - t2) * (h % 60) / 60;\n                        if (h == 360) h = 0;\n                        if (h &lt; 60) { rgb.r = t1; rgb.b = t2; rgb.g = t2 + t3 }\n                        else if (h &lt; 120) { rgb.g = t1; rgb.b = t2; rgb.r = t1 - t3 }\n                        else if (h &lt; 180) { rgb.g = t1; rgb.r = t2; rgb.b = t2 + t3 }\n                        else if (h &lt; 240) { rgb.b = t1; rgb.r = t2; rgb.g = t1 - t3 }\n                        else if (h &lt; 300) { rgb.b = t1; rgb.g = t2; rgb.r = t2 + t3 }\n                        else if (h &lt; 360) { rgb.r = t1; rgb.g = t2; rgb.b = t1 - t3 }\n                        else { rgb.r = 0; rgb.g = 0; rgb.b = 0 }\n                    }\n                    return { r: Math.round(rgb.r), g: Math.round(rgb.g), b: Math.round(rgb.b) };\n</code></pre>\n\n<p>As you can see the inaccuracy in this function comes from the Math.round</p>\n",
            "last_activity_date": 1403063460,
            "question_id": 17242144,
            "score": 9,
            "tags": [
                "javascript",
                "converter",
                "rgb",
                "hsv",
                "hsb"
            ],
            "title": "Javascript convert HSB/HSV color to RGB accurately"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>MutationObservers are fired asynchronously but 'soon', which means they fire before other things in the queue, such as layout, paint, or triggered events.</p>\n\n<p>This ameliorates the loss of synchrony, because you don't have to worry about screen flashing or other bad things happening before your observer gets a chance to react.</p>\n\n<p>In developer notes, they talk about an 'end-of-microtask' timing model. I agree this is poorly documented.</p>\n",
                    "is_accepted": true,
                    "score": 9
                }
            ],
            "body": "<p>I know that MutationObservers callbacks may get called sometime after the DOM change. But the question is: What is the timing of these callbacks?\nDo the callbacks enter the event queue of the browsers? If so, when do they enter the queue?</p>\n\n<p>Are the callbacks:</p>\n\n<ul>\n<li>called immediately after the DOM mutation take place,</li>\n<li>called as soon as the function that manipulate DOM finishes,</li>\n<li>called as soon as the call stack is empty,</li>\n<li>enqueued immediately after the DOM mutation take place,</li>\n<li>enqueued as soon as the function that manipulate DOM finishes, or</li>\n<li>at some other time?</li>\n</ul>\n\n<p>For example, if the following piece of code is executed (with <a href=\"http://dbaron.org/log/20100309-faster-timeouts\">setZeroTimeout defined here</a>):</p>\n\n<pre><code>var target = document.body;\n\nnew MutationObserver(function(mutations) {\n  console.log('MutationObserver');\n}).observe(target, {\n  attributes: true,\n  childList: true,\n  characterData: true\n});\n\n\n// Post message\nsetZeroTimeout(function () { console.log('message event'); });\n// DOM mutation\ntarget.setAttribute(\"data-test\", \"value\");\n</code></pre>\n\n<p>Should \"MutationObserver\" be printed before \"message event\" or after it?\nOr is it implementation-defined?</p>\n\n<p>I'm getting \"MutationObserver\" before \"message event\" on Chromium 26, though the DOM mutation is after message posting. Maybe this is indicating that MutationObserver callbacks are <strong>not</strong> using the event queue.</p>\n\n<p>I have googled for HTML specification, DOM specification or browser implementation documents, but I didn't found anything related to this behavior.</p>\n\n<p>Any explanation or documentation on the timing of MutationObservers callbacks please?</p>\n",
            "last_activity_date": 1365457525,
            "question_id": 14564617,
            "score": 9,
            "tags": [
                "javascript",
                "dom",
                "browser",
                "javascript-events",
                "dom4"
            ],
            "title": "When are MutationObserver callbacks fired?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Twig, since it's written in php, runs on the server, completely separately than the javascript code, so what you want needs a workaround.</p>\n\n<p>First, generate the route, but with a placeholder, then replace that with the value of your variable when neccessary:</p>\n\n<pre><code>var route = \"{{ path('post_display', { 'id': \"PLACEHOLDER\" }) }}\";\nwindow.location = route.replace(\"PLACEHODER\", js_variable);\n</code></pre>\n\n<p>Something like this should work for you.</p>\n",
                    "is_accepted": true,
                    "score": 20
                }
            ],
            "body": "<p>I am trying to create a route inside of some Javascript inside of a Twig template and need to use a JS variable as a value to a route parameter.</p>\n\n<p>Example:</p>\n\n<pre><code>window.location.href = {{ path('post_display', { 'id': this_is_where_i_need_to_use_the_js_var }) }};\n</code></pre>\n\n<p>I am using the Silex framework and am unsure if FOS JS works for Silex. I don't think it does, though.</p>\n",
            "last_activity_date": 1386850453,
            "question_id": 12009271,
            "score": 9,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "twig",
                "silex"
            ],
            "title": "Using Javascript variable in Twig template using Silex framework"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There aren't, in this example, any functional differences, but I do think the parentheses make it much more readable. How do you know how it is scoped without the parens? Is it hoisted? <a href=\"http://stackoverflow.com/questions/440739/what-do-parentheses-surrounding-a-javascript-object-function-class-declaration-m\">This is a brilliant thread</a> on the subject.</p>\n\n<p><strong>ASIDE:</strong></p>\n\n<p>JSLint will complain that \"function statements are not invocable. Wrap the whole function invocation in parens.\" I think most browser parsers not running in strict-mode would generally let it pass, but it's better not to rely on that. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There isn't any difference in this case, but <em>only</em> because it's prefixed with:</p>\n\n<pre><code>var obj = ...\n</code></pre>\n\n<p>Without that, only the first version is correct, because you need the additional parentheses to allow the interpreter to correctly parse the <code>function</code> as a function <em>expression</em> and not as a function <em>declaration</em>.</p>\n\n<p>You would of course only omit <code>var obj</code> if you only want the function to run (i.e. you want its side effects) but it either returns no value, or you don't care what its return value is.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>JavaScript: The Good Parts was written by Doug Crockford, who has updated his example to look like this:</p>\n\n<pre><code>var obj = (function() {\n    var value = 0;\n\n    return {\n        increment: function(inc) {\n            value += typeof inc === \"number\" ? inc : 1;\n        },\n        getValue: function() {\n            return value;\n        }\n    };\n}());\n</code></pre>\n\n<p>So the whole expression is within the brackets.</p>\n\n<p>The idea of the outside brackets, which are not required, is that it makes it clear to developers that this is an intentionally self-executed function. So the value is readability.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/423228/difference-between-function-and-function\">Difference between (function(){})(); and function(){}();</a>  </p>\n</blockquote>\n\n\n\n<p>I am trying to understand a few of the features of JavaScript a little better. In <code>The Definitive JavaScript</code> it says that self-executing functions should have brackets round them like so:</p>\n\n<pre><code>var obj = (function() {\n    var value = 0;\n\n    return {\n        increment: function(inc) {\n            value += typeof inc === \"number\" ? inc : 1;\n        },\n        getValue: function() {\n            return value;\n        }\n    }\n})();\n</code></pre>\n\n<p>but in <code>JavaScript - The Good Parts</code> where this example is taken from, it has the above self-executing function without the brackets round, like so:</p>\n\n<pre><code>var obj = function() {\n    var value = 0;\n\n    return {\n        increment: function(inc) {\n            value += typeof inc === \"number\" ? inc : 1;\n        },\n        getValue: function() {\n            return value;\n        }\n    }\n}();\n</code></pre>\n\n<p>Both of these examples work for me, but I wanted to ask if there were any differences in functionality that I should be aware of. I hope this isn't too trivial. I just wanted to be sure.</p>\n\n<p>Thanks a lot.</p>\n\n<p><strong>Edit:</strong></p>\n\n<p>As Rob W has pointed out, there is another thread on the subject. <a href=\"http://peter.michaux.ca/articles/an-important-pair-of-parens\" rel=\"nofollow\">This is an excellent blog regarding this issue</a> that was linked to from the other post.</p>\n",
            "last_activity_date": 1373918266,
            "question_id": 11085355,
            "score": 9,
            "tags": [
                "javascript"
            ],
            "title": "Self-executing functions"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>No, this is not possible. This would be a security risk, because then you could open the \"file selection\" dialog without user intervention from a script.</p>\n\n<p>If I remember correctly, this was possible before FP 9 and we exploited this behavior for our file uploader. This started to cause issues once they fixed it, but I'm glad they did so :)</p>\n\n<p>The typical way to fix this is by creating a transparent Flash object and position a layer over it that shows a button image; the click event will eventually hit the Flash object and trigger a user click event.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>No you can't capture clicks on embedded elements, unless it's behind a div or something.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I never tested this, so it is just thought </p>\n\n<p>Note please note that you should have a certain div which will capture the clicks.</p>\n\n<p>In Actionscript To simulate a click event, it is possible to use. </p>\n\n<pre><code> element.dispatchEvent(new MouseEvent(MouseEvent.CLICK, true, false));\n</code></pre>\n\n<p>So why not creating an external function that will dispatch the event once receiving the invoke from JavaScript using externalinterface? Of course this is very rough but it may well work.</p>\n\n<p>Actionscript:</p>\n\n<pre><code>import flash.external.*;\n\nfunction simulateButtonClick() \n{ \n// Here goes your code\n} \nExternalInterface.addCallback(\"invokeSimulateButtonClick\", simulateButtonClick); \n</code></pre>\n\n<p>Javascript:</p>\n\n<pre><code> ExternalInterface.addCallback(\"invokeSimulateButtonClick\", YOUR_VARIABLES);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It is possible with Flash <code>ExternalInterface</code>, but you need to write some ActionScript in Flash (.fla) first.</p>\n\n<p>Some references - </p>\n\n<p><a href=\"http://stackoverflow.com/questions/818089/using-externalinterface-in-flash\">Using ExternalInterface in Flash</a></p>\n\n<p><a href=\"http://www.actionscript.org/resources/articles/638/1/Basics-of-using-the-ExternalInterface/Page1.html\" rel=\"nofollow\">http://www.actionscript.org/resources/articles/638/1/Basics-of-using-the-ExternalInterface/Page1.html</a></p>\n\n<p><a href=\"http://www.adobe.com/devnet/flash/articles/external_interface.html\" rel=\"nofollow\">http://www.adobe.com/devnet/flash/articles/external_interface.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is it possible to trigger click event on Flash object via JavaScript?</p>\n",
            "last_activity_date": 1339361528,
            "question_id": 10947254,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "flash"
            ],
            "title": "Click to Flash object via JavaScript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Use <code>toFixed</code> to convert it to a string with some decimal places shaved off, and then convert it back to a number.</p>\n\n<pre><code>+(0.1 + 0.2).toFixed(12) // 0.3\n</code></pre>\n\n<p>It looks like IE's <code>toFixed</code> has some weird behavior, so if you need to support IE something like this might be better:</p>\n\n<pre><code>Math.round((0.1 + 0.2) * 1e12) / 1e12\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<pre><code>function add(){\n    var first=parseFloat($(\"#first\").val());\n    var second=parseFloat($(\"#second\").val());\n    $(\"#result\").val(+(first+second).toFixed(2));\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/heera/esqnC/6/\" rel=\"nofollow\"><strong>DEMO.</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is common issue with floating points.</p>\n\n<p>Use <code>toFixed</code> in combination with <code>parseFloat</code>. </p>\n\n<p>Here is <a href=\"http://jsfiddle.net/49HGP/5\">example</a> in JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Testing this Javascript:</p>\n\n<pre><code>var arr = [1234563995.721, 12345691212.718, 1234568421.5891, 12345677093.49284];\n\nvar sum = 0;\nfor( var i = 0; i &lt; arr.length; i++ ) {\n    sum += arr[i];\n}\n\nalert( \"fMath(sum) = \" + Math.round( sum * 1e12 ) / 1e12 );\nalert( \"fFixed(sum) = \" + sum.toFixed( 5 ) );\n</code></pre>\n\n<h2>Conclusion</h2>\n\n<p>Dont use <code>Math.round( (## + ## + ... + ##) * 1e12) / 1e12</code></p>\n\n<p>Instead, use <code>( ## + ## + ... + ##).toFixed(5) )</code></p>\n\n<p>In IE 9, <code>toFixed</code> works very well.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>So I am making a script that adds two numbers (decimal numbers) together, which I have encountered a problem.</p>\n\n<p><a href=\"http://jsfiddle.net/DerekL/esqnC/\" rel=\"nofollow\">http://jsfiddle.net/DerekL/esqnC/</a></p>\n\n<p>I made the script, it turns out pretty good:</p>\n\n<pre><code>0.1 + 0.5  //0.6\n0.2 + 0.3  //0.5\n</code></pre>\n\n<p>But soon I see:</p>\n\n<pre><code>0.1 + 0.2  //0.30000000000000004\n0.01 + 0.06  //0.06999999999999999\n</code></pre>\n\n<p>And it does not look right to me. I know it is a \"bug\" of computer languages, but I can't find a way to fix that.</p>\n\n<pre><code>Math.ceil   //No\nMath.floor  //No\n.slice      //No\n</code></pre>\n\n<p><strong>UPDATE</strong></p>\n\n<p>Is it possible to multiply the numbers by 1000 first, then add them then divide it by 1000?</p>\n",
            "last_activity_date": 1386477386,
            "question_id": 10473994,
            "score": 9,
            "tags": [
                "javascript",
                "numbers"
            ],
            "title": "JavaScript adding decimal numbers issue"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I'm not sure if you can detect whether it's loaded or not, but you can fire an event once it's done loading:</p>\n\n<pre><code>$(function(){\n    $('#myIframe').ready(function(){\n        //your code (will be called once iframe is done loading)\n    });\n}\n</code></pre>\n\n<p>EDIT: As pointed out by Jesse Hallett, this will always fire when the iframe has loaded, even if it already has. So essentially, if the iframe has already loaded, the callback will execute immediately.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Try this.</p>\n\n<pre><code>&lt;script&gt;\nfunction checkIframeLoaded() {\n    // Get a handle to the iframe element\n     iframe = document.getElementById('i_frame');\n\n    var iframeDoc = iframe.contentDocument || iframe.contentWindow.document;\n\n    // Check if loading is complete\n    if (  iframeDoc.readyState  == 'complete' ) {\n\n        //iframe.contentWindow.alert(\"Hello\");\n\n        iframe.contentWindow.onload = function(){\n            alert(\"I am loaded\");\n        };\n\n        // The loading is complete, call the function we want executed once the iframe is loaded\n        afterLoading();\n        return;\n    } \n\n    // If we are here, it is not loaded. Set things up so we check   the status again in 100 milliseconds\n    window.setTimeout('checkIframeLoaded();', 100);\n}\n\nfunction afterLoading(){\n    alert(\"I am here\");\n}\n&lt;/script&gt;\n\n&lt;body onload=\"checkIframeLoaded();\"&gt; \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>kindly use:</p>\n\n<pre><code>$('#myIframe').load(function(){\n    //your code (will be called once iframe is done loading)\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>When an iFrame loads, it initially contains the #document, so checking the load state might best work by checking what's there now..</p>\n\n<pre><code>if ($('iframe').contents().find('body').children().length &gt; 0) {\n    // is loaded\n} else {\n    // is not loaded\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Easiest option:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n  function frameload(){\n   alert(\"iframe loaded\")\n  }\n&lt;/script&gt;\n\n&lt;iframe onload=\"frameload()\" src=...&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have an iframe with id = \"myIframe\" and here my code to load it's content : </p>\n\n<pre><code>$('#myIframe').attr(\"src\",\"my_url\");\n</code></pre>\n\n<p>The problem is sometimes it take too long for loading and sometimes it loaded very quickly. So I must to use \"setTimeout\" function : </p>\n\n<pre><code>setTimeout(function(){\n   if (//something shows iframe is loaded or has content)\n   {\n       //my code\n   }\n   else\n   {\n       $('#myIframe').attr(\"src\",\"\"); //stop loading content\n   }\n},5000);\n</code></pre>\n\n<p>All I want to know is how to find out if an iFrame is loaded or it has a content. I try many ways but useless : using iframe.contents().find() will not work. In my situation, I can't use \"iframe.load(function(){})\".</p>\n\n<p>I google all days but ... :(( . Please help !</p>\n",
            "last_activity_date": 1398706257,
            "question_id": 9249680,
            "score": 9,
            "tags": [
                "javascript",
                "iframe"
            ],
            "title": "How to check if iframe is loaded or it has a content?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Do what @Sudhir said, and then to get a String out of the comma seperated list of numbers use:</p>\n\n<pre><code>for (var i=0; i&lt;unitArr.byteLength; i++) {\n            myString += String.fromCharCode(unitArr[i])\n        }\n</code></pre>\n\n<p>This will give you the string you want, \nif it's still relevant</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Found in one of the Chrome sample applications, although this is meant for larger blocks of data where you're okay with an asynchronous conversion.</p>\n\n<pre><code>/**\n * Converts an array buffer to a string\n *\n * @private\n * @param {ArrayBuffer} buf The buffer to convert\n * @param {Function} callback The function to call when conversion is complete\n */\nfunction _arrayBufferToString(buf, callback) {\n  var bb = new Blob([new Uint8Array(buf)]);\n  var f = new FileReader();\n  f.onload = function(e) {\n    callback(e.target.result);\n  };\n  f.readAsText(bb);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Here's what I use:</p>\n\n<pre><code>var str = String.fromCharCode.apply(null, uint8Arr);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I am using this Typescript snippet:</p>\n\n<pre><code>function UInt8ArrayToString(uInt8Array: Uint8Array): string\n{\n    var s: string = \"[\";\n    for(var i: number = 0; i &lt; uInt8Array.byteLength; i++)\n    {\n        if( i &gt; 0 )\n            s += \", \";\n        s += uInt8Array[i];\n    }\n    s += \"]\";\n    return s;\n}\n</code></pre>\n\n<p>Remove the type annotations if you need the JavaScript version.\nHope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This should work:</p>\n\n<pre><code>// http://www.onicos.com/staff/iz/amuse/javascript/expert/utf.txt\n\n/* utf.js - UTF-8 &lt;=&gt; UTF-16 convertion\n *\n * Copyright (C) 1999 Masanao Izumo &lt;iz@onicos.co.jp&gt;\n * Version: 1.0\n * LastModified: Dec 25 1999\n * This library is free.  You can redistribute it and/or modify it.\n */\n\nfunction Utf8ArrayToStr(array) {\n    var out, i, len, c;\n    var char2, char3;\n\n    out = \"\";\n    len = array.length;\n    i = 0;\n    while(i &lt; len) {\n    c = array[i++];\n    switch(c &gt;&gt; 4)\n    { \n      case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7:\n        // 0xxxxxxx\n        out += String.fromCharCode(c);\n        break;\n      case 12: case 13:\n        // 110x xxxx   10xx xxxx\n        char2 = array[i++];\n        out += String.fromCharCode(((c &amp; 0x1F) &lt;&lt; 6) | (char2 &amp; 0x3F));\n        break;\n      case 14:\n        // 1110 xxxx  10xx xxxx  10xx xxxx\n        char2 = array[i++];\n        char3 = array[i++];\n        out += String.fromCharCode(((c &amp; 0x0F) &lt;&lt; 12) |\n                       ((char2 &amp; 0x3F) &lt;&lt; 6) |\n                       ((char3 &amp; 0x3F) &lt;&lt; 0));\n        break;\n    }\n    }\n\n    return out;\n}\n</code></pre>\n\n<p>It's somewhat cleaner as the other solutions because it doesn't use any hacks nor depends on Browser JS functions, e.g. works also in other JS environments.</p>\n\n<p>Check out the <a href=\"http://jsfiddle.net/3VuLx/2/\" rel=\"nofollow\">JSFiddle demo</a>.</p>\n\n<p>Also see the related questions: <a href=\"http://stackoverflow.com/questions/17191945/conversion-between-utf-8-arraybuffer-and-string/22373135\">here</a> and <a href=\"http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript/22373061\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have some UTF-8 encoded data living in a range of Uint8Array elements in Javascript. Is there an efficient way to decode these out to a regular javascript string (I believe Javascript uses 16 bit Unicode)? I dont want to add one character at the time as the string concaternation would become to CPU intensive. </p>\n",
            "last_activity_date": 1394700106,
            "question_id": 8936984,
            "score": 9,
            "tags": [
                "javascript"
            ],
            "title": "Uint8Array to string in Javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I am using <a href=\"https://developer.mozilla.org/En/HTTP_access_control#Access-Control-Allow-Origin\">Access-Control-Allow-Origin</a>. You just send the header and you are fine.</p>\n\n<p>See also <a href=\"http://stackoverflow.com/questions/231478/ajax-subdomains-and-ssl\">AJAX, Subdomains, and SSL</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You should reconsider accessing the whole page over HTTPS or at least be really sure this is not feasible.</p>\n\n<p>By loading the initial page and script over HTTP the user has no security guarantee that the script is the one you originally intended to send and is not being manipulated by a third party (by, for example, keylogging his password). This means that any HTTPS request that bypasses the SOP will not provide the same security guarantees as a HTTPS request from a page originally served over HTTPS.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>First of all, I've +1 both questions from @missingo and @PiTheNumber.</p>\n\n<p>After spending a lot of hours, I've arrived to the conclusion I'm going to switch the entire page to HTTPS. That's because:</p>\n\n<ul>\n<li><p>Most moderns browsers support CORS, but Internet Explorer, starting from 8th version has a proprietary implementation (XDomainRequest object), which may be disabled in some computers (mine had cross-domain request disabled by default in Internet security zone).</p>\n\n<ul>\n<li><p>Opera doesn't support CORS. 12th version will support it, but this isn't an option as users should adopt this new version first, and this won't be in 2 days.</p></li>\n<li><p>I need to do cross-domain requests since Web client application must request a RESTful service layer located in another domain. No way.</p></li>\n<li><p>Switching everything to HTTPS makes the service layer proxy approach work again (this is the expected behavior).</p></li>\n</ul></li>\n</ul>\n\n<p>Thanks anyway because both answer have helped me a lot for arriving to this conclusion.</p>\n\n<h2>UPDATE</h2>\n\n<p>@Sam has added a comment that could be interesting for anyone. It's about how to get CORS in Internet Explorer 8 and 9 (see #7): <a href=\"http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\">http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx</a> </p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Has anyone looked at:</p>\n\n<p><a href=\"https://github.com/jpillora/xdomain\" rel=\"nofollow\">https://github.com/jpillora/xdomain</a></p>\n\n<p>It uses postMessage and iframes to achieve cors requests, and is cross browser (no need for teeth clenching XDomainRequests in IE).</p>\n\n<p>Perhaps it will allow cross protocol cors requests?</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to make an asynchronous call to a secure (HTTPS) URL for the same domain.</p>\n\n<p>Currently the page is working with regular HTTP (non-secure). </p>\n\n<p>In other words: this is calling an URL in the same domain but using HTTPS.</p>\n\n<p>Before switching this calls to HTTPS I ended implementing a server-side proxy to allow cross-domain AJAX calls, but now I'm facing same origin policy since HTTP and HTTPS are considered different origins too. So this proxy is unusable.</p>\n\n<p><strong>Summary: how to do cross-domain, asnynchronous POST requests in this scenario?</strong> </p>\n\n<p>Various notes:</p>\n\n<ul>\n<li>I couldn't accept any answer suggesting JSONP. Asynchronous calls must be using POST verb.</li>\n<li>I'm using latest version of jQuery. Answer could be based on this library, or any other solving this problem.</li>\n<li>Accessing the entire page over HTTPS isn't a solution.</li>\n<li>Server platform is Microsoft .NET 4.0 (ASP.NET 4.0).</li>\n<li><strike><strong>UDPATE</strong>: CORS isn't an option. There's no wide support for this in modern browsers.</strike></li>\n</ul>\n",
            "last_activity_date": 1418771687,
            "question_id": 8414786,
            "score": 9,
            "tags": [
                "javascript",
                "ajax",
                "http",
                ".net-4.0",
                "cross-domain"
            ],
            "title": "JavaScript cross-domain call: call from HTTP to HTTPS"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>No actual I/O will happen until after your script finishes executing, so there should not be a race condition.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>JavaScript is single threaded which means the network connection can't be established until the current scope of execution completes and the network execution gets a chance to run. The scope of execution could be the current function (the <code>connect</code> function in the example below). So, you could miss the <code>onopen</code> event if you bind to it very late on using a setTimeout e.g. in this example you can miss the event:</p>\n\n<p>View: <a href=\"http://jsbin.com/ulihup/edit#javascript,html,live\" rel=\"nofollow\">http://jsbin.com/ulihup/edit#javascript,html,live</a></p>\n\n<p>Code:</p>\n\n<pre><code>var ws = null;\n\nfunction connect() {\n  ws = new WebSocket('ws://ws.pusherapp.com:80/app/a42751cdeb5eb77a6889?client=js&amp;version=1.10');\n  setTimeout(bindEvents, 1000);\n  setReadyState();\n}\n\nfunction bindEvents() {\n  ws.onopen = function() {\n    log('onopen called');\n    setReadyState();\n  };\n}\n\nfunction setReadyState() {\n  log('ws.readyState: ' + ws.readyState);\n}\n\nfunction log(msg) {\n  if(document.body) {\n    var text = document.createTextNode(msg);\n    document.body.appendChild(text);\n  }\n}\n\nconnect();\n</code></pre>\n\n<p>If you run the example you may well see that the 'onopen called' log line is never output. This is because we missed the event.</p>\n\n<p>However, if you keep the <code>new WebSocket(...)</code> and the binding to the <code>onopen</code> event in the same scope of execution then there's no chance you'll miss the event.</p>\n\n<p>For more information on <code>scope of execution</code> and how these are queued, scheduled and processed take a look at John Resig's post on <a href=\"http://ejohn.org/blog/how-javascript-timers-work/\" rel=\"nofollow\">Timers in JavaScript</a>.\n</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>@<a href=\"http://stackoverflow.com/users/39904/leggetter\">leggetter</a> is right, following code did executes sequentially:</p>\n\n<pre><code>(function(){\n    ws = new WebSocket(\"ws://echo.websocket.org\");\n    ws.addEventListener('open', function(e){\n        console.log('open', e);\n        ws.send('test');\n    });\n    ws.addEventListener('message', function(e){console.log('msg', e)});\n\n})();\n</code></pre>\n\n<p>But, in <a href=\"http://dev.w3.org/html5/websockets/#the-websocket-interface\" rel=\"nofollow\">W3C spec</a> there is a curious line: </p>\n\n<blockquote>\n  <p>Return a new WebSocket object, and continue these steps in the background (without blocking scripts).</p>\n</blockquote>\n\n<p>It was confusing for me, when I was learning browser api for it. I assume that user agents ignoring it, or I misinterpreting it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Two related questions that may be more rooted in my lack of knowledge of how/if browsers pre-parse javascript:</p>\n\n<pre><code>var ws = new WebSocket(\"ws://ws.my.url.com\");\nws.onOpen = function() { ... };\n</code></pre>\n\n<p>There appears to be no way to directly control the initialisation of a <code>WebSocket</code>, beyond wrapping it in a callback, so I assume the connection is created as soon as the javascript code is loaded and get to the constructor?</p>\n\n<p>When does the <code>onOpen</code> property get attached to <code>ws</code>? Is there any possibility of a race condition (if for some reason you had some code in between the definition of the socket and the definition of <code>onOpen</code>?) so that <code>onOpen</code> is undecidably bound before/after the connection is established (I know you could optionally check <code>ws.readyState</code>). Supplementary to this, is the WebSocket handshake blocking?</p>\n\n<p>I realise it's all a draft at the moment, possibly implementation dependent and I may have missed something blindingly obvious, but I couldn't see anything particular pertinent on my internet searches/skim through the draft w3c spec, so any help in my understanding of websockets/javascript's inner workings is very much appreciated!</p>\n",
            "last_activity_date": 1405418963,
            "question_id": 8393092,
            "score": 9,
            "tags": [
                "javascript",
                "html5",
                "websocket"
            ],
            "title": "javascript websockets - control initial connection/when does onOpen get bound"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<pre><code>function sameDay( d1, d2 ){\n  return d1.getUTCFullYear() == d2.getUTCFullYear() &amp;&amp;\n         d1.getUTCMonth() == d2.getUTCMonth() &amp;&amp;\n         d1.getUTCDate() == d2.getUTCDate();\n}\n\nif (sameDay( new Date(userString), new Date)){\n  // ...\n}\n</code></pre>\n\n<p>Using the UTC* methods ensures that two equivalent days in different timezones matching the same global day are the same. (Not necessary if you're parsing both dates directly, but a good thing to think about.) </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><a href=\"http://www.datejs.com/\" rel=\"nofollow\">Date.js</a> is a handy library for manipulating and formatting dates. It can help in this situation.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A simple date comparison in pure JS should be sufficient:</p>\n\n<pre><code>//Create date from input value\nvar inputDate = new Date(\"11/21/2011\");\n\n//Get today's date\nvar todaysDate = new Date();\n\n//call setHours to take the time out of the comparison\nif(inputDate.setHours(0,0,0,0) == todaysDate.setHours(0,0,0,0));\n{\n    //Date equals today's date\n}\n</code></pre>\n\n<p>Here's <a href=\"http://jsfiddle.net/mzdqc/\">a working fiddle</a>.</p>\n",
                    "is_accepted": false,
                    "score": 40
                },
                {
                    "body": "<p>Have you looked at <strong><a href=\"http://www.datejs.com/2007/11/27/getting-started-with-datejs/\" rel=\"nofollow\">datejs</a></strong>? (using the appropriate globalization pack to parse dd/mm/yyyy correctly)</p>\n\n<p>Just pass the date in to its <code>parse()</code> method and compare with today's date.</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>Just use the following code in your javaScript:</p>\n\n<pre><code>if(new Date(hireDate).getTime() &gt; new Date().getTime())\n{\n//Date greater than today's date \n}\n</code></pre>\n\n<p>Change the condition according to your requirement.Here is one link for comparision <a href=\"http://www.w3schools.com/js/js_comparisons.asp\" rel=\"nofollow\">compare in java script</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try using moment.js</p>\n\n<pre><code>moment('dd/mm/yyyy').isSame(Date.now(), 'day');\n</code></pre>\n\n<p>You can replace 'day' string with 'year, month, minute' if you want.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>for completeness, taken from <a href=\"http://stackoverflow.com/a/8393961/176140\">this solution</a>:</p>\n\n<p>You could use toDateString:</p>\n\n<pre><code>var d = new Date();\nvar bool = (d.toDateString() == otherDate.toDateString());\n</code></pre>\n\n<p>no library dependencies, and looking cleaner than the 'setHours()' approach shown in a previous answer, imho</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have a form input with an id of 'date_trans'. The format for that date input (which is validated server side) can be any of:</p>\n\n<ul>\n<li>dd/mm/yyyy</li>\n<li>dd-mm-yyyy</li>\n<li>yyyy-mm-dd</li>\n<li>yyyy/mm/dd</li>\n</ul>\n\n<p>However, before posting the form, I'd like to check if the date_trans field has a date that is equal to today's date. Its ok if the date taken is the client's date (i.e. it uses js), since I run a double check on the server as well.</p>\n\n<p>I'm totally lost on how to do the date comparrison in jQuery or just plain old javascript. If it helps, I am using the <a href=\"http://jqueryui.com/demos/datepicker/\">jquery datepicker</a></p>\n",
            "last_activity_date": 1412773365,
            "question_id": 8215556,
            "score": 9,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to check if input date is equal to today&#39;s date?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>if (window.location.hash) {\n    // Fragment exists, do something with it\n    var fragment = window.location.hash;\n}\n</code></pre>\n\n<p>Just for reference, the part of a url specified by the <code>#</code> is called a 'fragment'</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you have a url of <code>site.com/faq/#open</code>, then you can do</p>\n\n<pre><code>var hash = window.location.hash\n</code></pre>\n\n<p>to get <code>hash = 'open'</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Simply look at <code>window.location.hash</code> on page load:</p>\n\n<pre><code>$(document).ready(function() {\n    if(window.location.hash === \"open\")\n    {\n        //Show something\n    }\n});\n</code></pre>\n\n<p>Or bind to the <code>hashchange</code> event of the window:</p>\n\n<pre><code>$(document).ready(function() {\n    $(window).hashchange(hashchanged);\n});\n\nfunction hashchanged()\n{\n    //Show something\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can use the <strong><a href=\"https://developer.mozilla.org/en/DOM/window.onhashchange\" rel=\"nofollow\">hashchange</a></strong> event.<br>\nor integrate a <a href=\"http://benalman.com/projects/jquery-hashchange-plugin/\" rel=\"nofollow\">jquery hashchange plugin</a>  </p>\n\n<pre><code>$(function(){\n\n  // Bind the event.\n  $(window).hashchange(hashchanged);\n\n  // Trigger the event (useful on page load).\n  hashchanged();\n\n});\n\nfunction hashchanged(){\n var hash = location.hash.replace( /^#/, '' );\n //your code\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Try This </p>\n\n<pre><code>$(window).on('hashchange', function(e){\n // Your Code goes here\n});\n</code></pre>\n\n<p>Its working for me</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>How can jQuery detect changes to a url?</p>\n\n<p>For example: If a user goes to a page <code>site.com/faq/</code> nothing shows, but if he goes to <code>site.com/faq/#open</code> jquery detects it and does something.</p>\n",
            "last_activity_date": 1406440615,
            "question_id": 8212845,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "url"
            ],
            "title": "How to detect URL changes with jQuery"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>In jQuery, at the OP's request:</p>\n\n<pre><code>$(':input').blur(function() {\n    $focusedElement = $(':input:focus');\n    //Do stuff with $focusedElement\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can try something like this:</p>\n\n<pre><code>function whereDidYouGo() {\n    var all = document.getElementsByTagName('*');\n\n        for (var i = 0; i &lt; all.length; i++)\n            if (all[i] === all[i].ownerDocument.activeElement)\n                return all[i];\n}\n</code></pre>\n\n<p>EDIT:</p>\n\n<pre><code>function whereDidYouGo() { return document.activeElement; }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>Interesting question.  The heart of the matter is - when does the 'focus' event fire, before or after the blur event?  If it fires before the blur event, the problem is easy, because you can just store the current focus in a variable that your blur event can access.</p>\n\n<p>However, at least in Chrome 13, it appears the blur event happens <em>before</em> the focus event.  One possible solution.</p>\n\n<p>Given the following HTML:</p>\n\n<pre><code>&lt;input id=\"foo\" value='foo' /&gt;\n&lt;input id=\"bar\" value='bar' /&gt;\n</code></pre>\n\n<p>You can then:</p>\n\n<pre><code>var currentFocus;\nvar pendingBlur;\n\nvar foo = document.getElementById('foo');\nfoo.addEventListener('focus', function(){ \n    currentFocus = foo;\n    if(pendingBlur !== undefined){\n        pendingBlur();\n        pendingBlur = undefined;\n    }\n});\nfoo.addEventListener('blur', function(){\n    pendingBlur = function(){\n        console.log('new focus:', currentFocus);\n    };\n});\n\nvar bar= document.getElementById('bar');\nbar.addEventListener('focus', function(){ \n   currentFocus = bar;\n   if(pendingBlur !== undefined){\n        pendingBlur();\n        pendingBlur = undefined;\n   }\n});\nbar.addEventListener('blur', function(){\n    pendingBlur = function(){\n        console.log('new focus:', currentFocus);\n    };\n});\n</code></pre>\n\n<p>Basically, I just not the blur callback so it is handy for the focus event to call after we know about which element was focused.</p>\n\n<p>Here is a <a href=\"http://jsfiddle.net/BaYJu/\" rel=\"nofollow\">working example</a> on JSFiddle.</p>\n\n<p>EDIT: This solution suffers from the problem that if you blur on the form by clicking on something <em>other</em> than another form element, the blur event never fires (since we wait for the focus event).  The only way around that, that I can conceive, is using a timer to check if pendingBlur is defined, and if so, call it.  At which point you don't really need the focus event to call the blur callback anymore...</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>This has been asked <a href=\"http://stackoverflow.com/questions/121499/when-onblur-occurs-how-can-i-find-out-which-element-focus-went-to\">here</a> before, but several years ago, and there was no cross-platform solution at the time (other than the <code>setTimeout</code> solution, which is really not very handy).</p>\n\n<p>I'd like to do <code>onblur=\"foo(parm);\"</code> and have <code>foo</code> be able to determine which element now has focus.</p>\n\n<p>I'm using regular javascript; no jQuery for this one, please.</p>\n\n<p>Is that possible these days?</p>\n",
            "last_activity_date": 1313599358,
            "question_id": 7096120,
            "score": 9,
            "tags": [
                "javascript",
                "html",
                "focus",
                "onblur"
            ],
            "title": "How to determine where focus went?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Modern WebKit browsers don't necessarily fire the <code>unload</code> event at the moment where the page is hidden. This is done in order to allow improved caching.</p>\n\n<p>You might consider replacing the use of <code>unload</code> with the <code>pagehide</code> event.</p>\n\n<p>See <a href=\"http://www.webkit.org/blog/516/webkit-page-cache-ii-the-unload-event/\">this blog post for an in-depth discussion</a>.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Maybe try <code>onbeforeunload</code> event?</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>yea onbeforeunload attached to window (or inner window of the child page) should do it</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Unload works in modern browsers, but for example you cant launch an alert.\nSee:\n<a href=\"http://bugs.jquery.com/ticket/10509\">http://bugs.jquery.com/ticket/10509</a></p>\n\n<p>Also if you want to use $.get or $.post in unload, is better that you use $.ajax with async=false.</p>\n\n<p>Ex:</p>\n\n<pre><code>$(window).unload(function() {\n            $.ajax({\n              url: '/some_url.htm',\n              async: false\n            });\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I have parent page and child page. In child page body tag i have below code. </p>\n\n<pre><code>&lt;body onunload=\"window.g_autoclosed=true;if(window.opener&amp;&amp;window.opener.NavModelessClose){window.opener.NavModelessClose(window,false);}\"&gt; \n</code></pre>\n\n<p>when i click on button in parent page, child page should close and call the onunload event.</p>\n\n<p>The unload event is raising correctly in IE and FF. But it is not raising in chrome and safari.</p>\n\n<p>Please help me.</p>\n",
            "last_activity_date": 1352848741,
            "question_id": 6843565,
            "score": 9,
            "tags": [
                "javascript",
                "html",
                "webkit"
            ],
            "title": "onunload not working in Chrome and safari"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Your jQuery code never gets executed. You should run it from within jQuery's \"onload\" event:</p>\n\n<pre><code>$( function() {\n    $('#mypage').live('pageshow', function (event, ui) {\n        alert('This page was just hidden: ' + ui.prevPage);\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>OnPageShow and OnPageHide are <a href=\"http://www.w3schools.com/tags/ref_eventattributes.asp\" rel=\"nofollow\">new HTML5 event attributes</a>, and as such will only enjoy limited browser support (at the time of writing)</p>\n\n<p>Its more likely that later versions of incumbent browsers will support it. Firefox certainly will, as will Safari according to <a href=\"https://developer.mozilla.org/en/using_firefox_1.5_caching\" rel=\"nofollow\">this article</a>.</p>\n\n<p>I couldn't find anything that stated it definitively, but I would say that its likely that these events aren't supported in the version of IE that you are using. Can you maybe post this information for clarification.</p>\n\n<p>Hope this helps</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Your code is inconsistent. You're using <code>jQuery.ready</code>, <code>onload</code>, <code>onpageshow</code> at the same time. Seems like a good place to start your refactoring process.</p>\n\n<p>What do you really want to achieve?</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Do away with <code>window.onload</code> and <code>pageshow</code>. Whatever you want to be executed on window load, body load or page show put them in <code>$(document).ready()</code>, they will be executed serially once the page has been loaded.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>PageShow event is not supported in Internet Explorer.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It is a mispell; in the body's tag, the name of the event is \"onpageshow\" and no \"pageshow\". </p>\n\n<pre><code>...\n&lt;body onpageshow=\"alert('Done');\"&gt;\n...\n</code></pre>\n\n<p>For IE pageshow event is not supported.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>From my tests:</p>\n\n<ul>\n<li>IE8/9 does not support pageshow/pagehide</li>\n<li>Chrome12 fires them but doesn't appear to have a page cache - they behave the same as load/unload</li>\n<li>FF4 supports them as expected</li>\n<li>iOS on iPad supports them as expected</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>$(function(){ //your code })\n</code></pre>\n\n<p>Is the shorthand for $(document).ready(). document.ready fires just after the DOM is loaded, adding a window.onload inside it is unnecessary. </p>\n\n<p>IE wont fire a \"pageshow\" event, since it doesn't recognize it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>i'm using FF 4.0.1</p>\n\n<p>your pageShow event won't fire even in this.</p>\n\n<p><a href=\"https://developer.mozilla.org/en/using_firefox_1.5_caching\" rel=\"nofollow\">click here</a></p>\n\n<p>for more information</p>\n\n<p><strong>Update:</strong>\n<code>pageShow</code> fire after <code>pageLoad</code>.</p>\n\n<p>it's better to use <code>onLoad</code>.</p>\n\n<p><code>pageShow</code> should be <code>onpageShow</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The pageshow event doesn't work in many browsers e.g. if using WebView or UIWebView within an App on mobile.</p>\n\n<p>Instead you need a four pronged attack:</p>\n\n<ol>\n<li><p><code>onfocus</code> occurs when desktop pages and some mobile pages come back to life</p></li>\n<li><p><code>pageshow</code> occurs when iOS Safari comes back to life - but not UIWebView</p></li>\n<li><p><code>visibilitychange</code> occurs when Windows Mobile IE11 comes back to life     - see <a href=\"http://daniemon.com/tech/webapps/page-visibility/\" rel=\"nofollow\">http://daniemon.com/tech/webapps/page-visibility/</a> and try <a href=\"http://jsbin.com/runed/4\" rel=\"nofollow\">http://jsbin.com/runed/4</a></p></li>\n<li><p><code>webkitRequestAnimationFrame</code> detects if page inside Mobile App comes back to focus. Workaround needed because window.focus, visibilitychange and pageshow events don't work in Android apps (WebView) or iOS apps (UIWebView).</p></li>\n</ol>\n\n<p>Code might look like:</p>\n\n<pre><code>window.addEventListener('focus', pageAwakened);\nwindow.addEventListener('pageshow', pageAwakened);\nwindow.addEventListener('visibilitychange', function() {\n    !document.hidden &amp;&amp; pageAwakened();\n});\nif (window.webkitRequestAnimationFrame &amp;&amp; (/^iP/.test(navigator.platform) || /Android/.test(navigator.userAgent))) {\n    webkitRequestAnimationFrame(webkitWake);\n}\n\nvar lastTs;\nfunction webkitWake(timestamp) {\n    if ((timestamp - lastTs) &gt; 10000) {\n        pageAwakened();\n    }\n    lastTs = timestamp;\n    webkitRequestAnimationFrame(webkitWake);\n}\n\nfunction pageAwakened() {\n    console.log('awakened at ' + (new Date));\n}\n</code></pre>\n\n<p>If you wish to support &lt;= IE8 or documentMode &lt;= 8 then need attachEvent for focus.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have the following code:</p>\n\n<pre><code>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head runat=\"server\"&gt;\n    &lt;title&gt;&lt;/title&gt;\n    &lt;script src=\"http://code.jquery.com/jquery-1.4.4.min.js\"&gt;&lt;/script&gt;\n\n    &lt;script type=\"text/javascript\" language=\"javascript\"&gt;\n    $( function() {\n        window.onload = function () {\n            alert('This page was just hidden:');\n        }\n    });\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body pageshow=\"alert('Done');\"&gt;\n&lt;div id=\"mypage\" data-role=\"page\"  data-theme=\"b\"&gt; \n    &lt;div data-role=\"header\"&gt;\n        &lt;h1&gt;Page 2&lt;/h1&gt;\n    &lt;/div&gt; \n    &lt;div data-role=\"content\"&gt;\n        &lt;p&gt;This is page 2.&lt;/p&gt; \n    &lt;/div&gt; \n&lt;/div&gt; \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>But the <code>pageShow</code> event is not firing in IE. Any idea why?</p>\n",
            "last_activity_date": 1426112495,
            "question_id": 6363199,
            "score": 9,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "pageShow event in javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Why not to put the javascript for the particular controller as a view on this controller (as they correspond there if are <strong><em>so</strong> specific</em>)?</p>\n\n<p>If they are general enaugh you can mark your view with classes, ids or data (html5) and make your javascript look for that (so you can reuse your code).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://stackoverflow.com/users/66226/trevor-burnham\">Trevor Burnham</a> answers this question nicely here: <a href=\"http://stackoverflow.com/questions/6133235/rails-3-1-rc1-javascript-and-asset-pipeline/6133366#6133366\">rails 3.1 rc1 javascript and asset pipeline</a></p>\n\n<p>He says:</p>\n\n<blockquote>\n  <p>There are two common approaches:</p>\n  \n  <ol>\n  <li><p>Make behavior conditional on the presence of a particular element. For\n  instance, code to run a signup sheet\n  should be prefaced with something like</p>\n  \n  <p><code>if $('#signup').length &gt; 0</code></p></li>\n  <li><p>Make behavior conditional on a class on the <code>body</code> element. You can\n  set the body class using ERB. This is\n  often desirable for stylesheets as\n  well. The code would be something like</p>\n  \n  <p><code>if $('body').hasClass 'user'</code></p></li>\n  </ol>\n</blockquote>\n\n<p>And if you're interested in CoffeeScript, Trevor is working on a book that looks to be very good: <a href=\"http://pragprog.com/titles/tbcoffee/coffeescript\">http://pragprog.com/titles/tbcoffee/coffeescript</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>what i normally do is to have a yield :js under the javascripts in my layout and when I need a specific script it, I load it directly from my view with:</p>\n\n<pre><code>content_for :js do\n    javascript_include_tag \"myscript\"\nend\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>One way to restrict coffeescript to a particular view is to make a custom sprockets file for the javascript in question, similar in format to application.js. Say you call it extras.js.</p>\n\n<blockquote>\n  <p>//= require my_code.js.coffee</p>\n</blockquote>\n\n<p>Then use <code>javascript_include_tag \"extras\"</code> to include that code in the views you want, either by making a custom layout for those views, or by using content_for()</p>\n\n<p>BTW, your question stated that the rails pipeline forces you to put all your js assets in one file. That's not true. That's efficient often to avoid multiple round trips, but you can have multiple sprocket files.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you are using the <strong><a href=\"https://github.com/gazay/gon\" rel=\"nofollow\">gon</a></strong> gem for your vars in coffee script you can use this pattern:</p>\n\n<p>Put a flag for every action in the controller:</p>\n\n<pre><code>  def index\n    @gps_coords = GpsCoord.all\n\n    # Flag for the CoffeeScript to decide which part to run\n    gon.index = true;\n  end\n\n  def show\n    @gps_coord = GpsCoord.find(params[:id])\n\n    gon.lat = @gps_coord.latitude\n    gon.lon = @gps_coord.longitude\n\n    gon.show = true;\n  end\n</code></pre>\n\n<p>In the correlating coffee script use those flags to distiguish between the both actions:</p>\n\n<pre><code>  # index action?\n  if gon.index? \n    first_coord = gon.gps_coords[0]\n    map.setView([first_coord.latitude, first_coord.longitude], 15);\n\n  # show action?\n  if gon.show?\n    map.setView([gon.lat, gon.lon], 15);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>The new Rails 3.1 asset pipeline is really nice, but since all CoffeeScript (or JavaScript) files get melded down into a single file that is included in every page, it raises this question:</p>\n\n<p>How do I limit the execution of my script to a particular controller or action? Is there a way within my CoffeeScript to know which controller and action was used during the request so that I can put conditional statements in my script?</p>\n\n<p>Or am I approaching this the wrong way altogether?</p>\n",
            "last_activity_date": 1412592651,
            "question_id": 6137733,
            "score": 9,
            "tags": [
                "javascript",
                "ruby-on-rails",
                "coffeescript"
            ],
            "title": "How do you limit CoffeeScript (or JavaScript) execution to a particular controller and action in Rails 3.1?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>A simple way to do this is to set the text in the textarea to a substring of the full amount. You can find an example here:</p>\n\n<p><a href=\"http://www.mediacollege.com/internet/javascript/form/limit-characters.html\" rel=\"nofollow\">http://www.mediacollege.com/internet/javascript/form/limit-characters.html</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Returning false and using .keypress() instead of .keyup() stops input once the length has been reached. Here's the example in a jsFiddle:</p>\n\n<p><a href=\"http://jsfiddle.net/p43BH/1/\" rel=\"nofollow\">http://jsfiddle.net/p43BH/1/</a></p>\n\n<p>Updated to allow backspace.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you change your js to look like this it should work for you:</p>\n\n<pre><code>var $txtLenLeft = $('#txt-length-left'); // lets cache this since it isn't changing\n$('#send-txt').keydown(function(e) { //take the event argument\n   var Length = $(this).val().length; // lets use 'this' instead of looking up the element in the DOM\n   var AmountLeft = maxLen - Length;\n   $txtLenLeft.html(AmountLeft);\n   if(Length &gt;= maxLen &amp;&amp; e.keyCode != 8){ // allow backspace\n      e.preventDefault(); // cancel the default action of the event\n   }\n});\n</code></pre>\n\n<p>You can see a working example here: <a href=\"http://jsfiddle.net/aP5sK/2/\" rel=\"nofollow\">http://jsfiddle.net/aP5sK/2/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here it goes. Anything beyond character limit will be removed.  </p>\n\n<pre><code>$('textarea').keypress(function(e) {\n    var tval = $('textarea').val(),\n        tlength = tval.length,\n        set = 10,\n        remain = parseInt(set - tlength);\n    $('p').text(remain);\n    if (remain &lt;= 0 &amp;&amp; e.which !== 0 &amp;&amp; e.charCode !== 0) {\n        $('textarea').val((tval).substring(0, tlength - 1))\n    }\n})\n</code></pre>\n\n<h2>Check working example at <a href=\"http://jsfiddle.net/JCehq/1/\">http://jsfiddle.net/JCehq/1/</a></h2>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Here's a solution using HTML5 data attribute to automatically bind to all needed textareas:</p>\n\n<pre><code>$('textarea[data-max-length]').live('keypress', function(e) {\n    if (String.fromCharCode(e.charCode || e.keyCode).match(/\\S/) &amp;&amp; $(this).val().length &gt;= $(this).attr('data-max-length')) {\n        e.preventDefault();\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I know this is a little late, but I just had to figure this out, too. I had to get it to work with UTF8 byte-lengths, and allow certain keypresses. Here's what I came up with:</p>\n\n<pre><code>checkContent = function (event) {\n\n    var allowedKeys = [8,46,35,36,37,38,39,40];\n    var contentLength = lengthInUtf8Bytes(jQuery(event.currentTarget).val());\n    var charLength = lengthInUtf8Bytes(String.fromCharCode(event.charCode));\n\n    if (charLength + contentLength &gt; 20) {\n\n        if(jQuery.inArray(event.keyCode, allowedKeys) == -1) {\n            event.preventDefault();\n        } \n    }\n}\n\ncountLength = function(event) {\n\n    var len = lengthInUtf8Bytes(jQuery(event.currentTarget).val());\n    jQuery('#length').html(len);\n}\n\n\nlengthInUtf8Bytes = function(str) {\n    var m = encodeURIComponent(str).match(/%[89ABab]/g);\n    return str.length + (m ? m.length : 0);\n}\n\njQuery(function(){jQuery(\"#textarea\").keypress(function(event){checkContent(event)}).keyup(function(event){countLength(event)})});\n</code></pre>\n\n<p>You need to have a textarea with id #textarea and an element to display the current length with id #length. </p>\n\n<p>The keypress event determines whether or not to allow the keypress. The keyup event counts the size of the data in the field after the keypress is allowed/prevented.</p>\n\n<p>This code works with the following keys: home, end, pagedown, pageup, backspace, delete, up, down, left and right. It doesn't deal with pasting from the clipboard.</p>\n\n<p>Hope someone finds it useful!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>All of these answers are a bit odd in that they try to do a little too much.  A simpler and visually more pleasing way (because it shows the text quickly being cut off) - and with with less oddities that the previous example (note how it overwrites the final key?) - is to simply cut off the number of characters on keyUp to the number that's allowed.</p>\n\n<pre><code>        $('textarea').keyup(function() {\n            var tlength = $(this).val().length;\n            $(this).val($(this).val().substring(0,textlimit));\n            var tlength = $(this).val().length;\n            remain = parseInt(tlength);\n            $('#remain').text(remain);\n         });    \n</code></pre>\n\n<p>Note that this then also works for pasting in text, as some of the examples above don't.</p>\n\n<p>Example here: <a href=\"http://jsfiddle.net/PzESw/5/\">http://jsfiddle.net/PzESw/5/</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>ehm, textarea maxlength is a valid attribute in html5 ? \nnot supported in ie9, thats all.</p>\n\n<p>w3nerds <a href=\"http://www.w3.org/TR/html-markup/textarea.html#textarea.attrs.maxlength\" rel=\"nofollow\">http://www.w3.org/TR/html-markup/textarea.html#textarea.attrs.maxlength</a></p>\n\n<p>w3fools <a href=\"http://www.w3schools.com/tags/att_textarea_maxlength.asp\" rel=\"nofollow\">http://www.w3schools.com/tags/att_textarea_maxlength.asp</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Got it with this:</p>\n\n<pre><code>$(\"#div_id\").prop('maxlength', '80');\n</code></pre>\n\n<p>I really dont know if there's something wrong with this solution, but it worked for me.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Relying on keypress, keydown, keyup is a flawed solution because a user can copy and paste data into the textarea without pressing any keys.</p>\n\n<p>To limit the length of text in a textarea with javascript regardless of how the data gets in there you must rely on a setInterval timer instead.</p>\n\n<pre><code>setInterval(function() {\nif ($('#message').val().length &gt; 250) {\n    $('#message').val($('#message').val().substring(0, 250));\n}}, 500);\n</code></pre>\n\n<p>Obviously, I'm assuming you have an id of message assigned to your textarea.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have the following code, and I'm kind of stuck on what to do next. The idea is when you enter text into a text area a counter tells you how many characters you have left. Once you get to the max characters I want to stop allowing characters to be entered, or delete all the characters that were entered so there are only 10 characters in the text area. I know I have to put the code where it says \"Alert(\"LONG\");\" but I'm not quite sure what.</p>\n\n<p>Thanks</p>\n\n<pre><code>var maxLen = 10;\n        console.log(\"Start\");\n        $('#send-txt').keyup(function(){\n            var Length = $(\"#send-txt\").val().length;\n            var AmountLeft = maxLen - Length;\n            $('#txt-length-left').html(AmountLeft);\n            if(Length &gt;= maxLen){\n                alert(\"LONG\");\n            }\n\n\n\n        });\n</code></pre>\n",
            "last_activity_date": 1401068765,
            "question_id": 5292235,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "validation",
                "textarea"
            ],
            "title": "max characters in textarea with jquery"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can use Blueduck Sda (http://sda.blueducktesting.com)\nIs an OSS that has implemented ALL selenium functions (It works with selenium RC) but it allows you to automate Windows actions. So you can test web, and interact with the OS.\nSo you can make your test, and then, just tell the mouse to click on the element and drop it where you want!</p>\n\n<p>Nice testing!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I post an RSpec test that simulate files drag and drop using Selenium webdriver.\nIt use jQuery to make and trigger a fake 'drop' event.</p>\n\n<p>This code simulate drag and drop of a single file. For sake of simplicity I've stripped code that allow multiple files dropping. Tell me if you need it.</p>\n\n<pre><code>describe \"when user drop files\", :js =&gt; true do\n  before do\n    page.execute_script(\"seleniumUpload = window.$('&lt;input/&gt;').attr({id: 'seleniumUpload', type:'file'}).appendTo('body');\")\n\n    attach_file('seleniumUpload', Rails.root + 'spec/support/pdffile/pdfTest.pdf')\n\n    # Trigger the drop event\n    page.execute_script(\"e = $.Event('drop'); e.originalEvent = {dataTransfer : { files : seleniumUpload.get(0).files } }; $('#fileDropArea').trigger(e);\")\n  end\n\n  it \"should ...\" do\n     should have_content '...'\n  end\n</code></pre>\n\n<p><strong>P.S.:</strong> remember to replace #fileDropArea with ID of your drop area.</p>\n\n<p><strong>P.P.S:</strong> don't use evaluate_script in place of execute_script, otherwise selenium get stuck evaluating complex jQuery objects!</p>\n\n<p><strong>UPDATE:</strong>\nI've write a method you can reuse and do the stuff written above.</p>\n\n<pre><code>def drop_files files, drop_area_id\n  js_script = \"fileList = Array();\"\n  files.count.times do |i|\n    # Generate a fake input selector\n    page.execute_script(\"if ($('#seleniumUpload#{i}').length == 0) { seleniumUpload#{i} = window.$('&lt;input/&gt;').attr({id: 'seleniumUpload#{i}', type:'file'}).appendTo('body'); }\")\n    # Attach file to the fake input selector through Capybara\n    attach_file(\"seleniumUpload#{i}\", files[i])\n    # Build up the fake js event\n    js_script = \"#{js_script} fileList.push(seleniumUpload#{i}.get(0).files[0]);\"\n  end\n\n  # Trigger the fake drop event\n  page.execute_script(\"#{js_script} e = $.Event('drop'); e.originalEvent = {dataTransfer : { files : fileList } }; $('##{drop_area_id}').trigger(e);\")\nend\n</code></pre>\n\n<p>Usage: </p>\n\n<pre><code>describe \"when user drop files\", :js =&gt; true do\n  before do\n     files = [ Rails.root + 'spec/support/pdffile/pdfTest1.pdf',\n               Rails.root + 'spec/support/pdffile/pdfTest2.pdf',\n               Rails.root + 'spec/support/pdffile/pdfTest3.pdf' ]\n     drop_files files, 'fileDropArea'\n  end\n\n  it \"should ...\" do\n     should have_content '...'\n  end\nend   \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>As @Shmoopy asked for it, here's a C# translation of the code provided by @micred</p>\n\n<pre><code>private void DropImage(string dropBoxId, string filePath)\n{\n   var javascriptDriver = this.Driver as IJavaScriptExecutor;\n   var inputId = dropBoxId + \"FileUpload\";\n\n   // append input to HTML to add file path\n   javascriptDriver.ExecuteScript(inputId + \" = window.$('&lt;input id=\\\"\" + inputId + \"\\\"/&gt;').attr({type:'file'}).appendTo('body');\");\n   this.Driver.FindElement(By.Id(inputId)).SendKeys(filePath);\n\n   // fire mock event pointing to inserted file path\n   javascriptDriver.ExecuteScript(\"e = $.Event('drop'); e.originalEvent = {dataTransfer : { files : \" + inputId + \".get(0).files } }; $('#\" + dropBoxId + \"').trigger(e);\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a web page that opens a div when you click a button. This div allows you to drag a file from your desktop onto its area; the file then gets uploaded to the server. I'm working with the Ruby implementation of Selenium.</p>\n\n<p>By using the JavaScript debugger in Firefox, I can see that an event called \"drop\" is being passed to some JavaScript code \"handleFileDrop(event)\". I presume that if I were to create a mock event and fire it somehow that I could trigger this code.</p>\n\n<p>If found an <a href=\"http://asheepapart.blogspot.com/2010/09/html5-drag-and-drop-upload-testing.html\">interesting article</a> that seemed to point me in a promising direction, but I'm still short of figuring it all out. I am able to pass JavaScript to the page using Selenium's get_eval method. Calling methods using this.browserbot is getting me the elements I need.</p>\n\n<p>So:</p>\n\n<ol>\n<li>How do I build the file object that\nneeds to be part of the mock drop\nevent? </li>\n<li>How do I fire the drop event\nsuch that it gets picked up as if I\nhad dropped a file in the div?</li>\n</ol>\n",
            "last_activity_date": 1399283661,
            "question_id": 5188240,
            "score": 9,
            "tags": [
                "javascript",
                "ruby",
                "selenium"
            ],
            "title": "Using Selenium to imitate dragging a file onto an upload element"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Using a temporary array holding the keys in reverse order:</p>\n\n<pre><code>var keys = new Array();\n\nfor (var k in arr) {\n    keys.unshift(k);\n}\n\nfor (var c = keys.length, n = 0; n &lt; c; n++) {\n   alert(arr[keys[n]]);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>Four things:</p>\n\n<ol>\n<li><p>JavaScript has arrays (integer-indexed [see comments below]) and objects (string-indexed). What you would call an associative array in another language is called an object in JS.</p></li>\n<li><p>You <a href=\"http://stackoverflow.com/questions/500504/javascript-for-in-with-arrays\">shouldn't use <code>for in</code> to loop through a JS array</a>.</p></li>\n<li><p>If you're looping through an object, use: <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>hasOwnProperty</code></a>.</p></li>\n<li><p>JavaScript doesn't guarantee the order of keys in an object. If you care about order, use an array instead.</p></li>\n</ol>\n\n<p>If you're using a normal array, do this:</p>\n\n<pre><code>for (var i = arr.length - 1; i &gt;= 0; i--) {\n    //do something with arr[i]\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>For a normal array, I would have done this:</p>\n\n<pre><code>var i = arr.length;\nwhile (i--) {\n    var value = arr[i];\n    alert(i =\") \"+ value);\n}\n</code></pre>\n\n<p>This is faster than a \"for\" loop.</p>\n\n<p><a href=\"http://blogs.oracle.com/greimer/entry/best_way_to_code_a\" rel=\"nofollow\">http://blogs.oracle.com/greimer/entry/best_way_to_code_a</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In modern browsers you can now use <code>Object.keys</code> to get your array of properties and step through it in reverse order, allowing you to skip the preliminary key collection loop.</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys</a></p>\n\n<pre><code>var keys = Object.keys(subject);\nfor (var i = keys.length-1; i &gt;= 0; i--) {\n    var k = keys[i],\n        v = subject[k];\n    console.log(k+\":\",v);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using a javascript associative array (arr) and am using this method to loop through it.</p>\n\n<pre><code>for(var i in arr) {\n    var value = arr[i];\n    alert(i =\") \"+ value);\n}\n</code></pre>\n\n<p>The problem is that the order of the items is important to me, and it needs to loop through from last to first, rather than first to last as it currently does.</p>\n\n<p>Is there a way to do this?</p>\n",
            "last_activity_date": 1402417255,
            "question_id": 4956256,
            "score": 9,
            "tags": [
                "javascript"
            ],
            "title": "Loop through associative array in reverse"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Using jQuery, and assuming that you have <code>&lt;div id=\"foo\"&gt;</code>:</p>\n\n<pre><code>jQuery(function($){\n  $('#foo').click(function(e){\n    console.log( 'clicked on div' );\n    e.stopPropagation(); // Prevent bubbling\n  });\n  $('body').click(function(e){\n    console.log( 'clicked outside of div' );\n  });\n});\n</code></pre>\n\n<p><strong>Edit</strong>: For a single handler:</p>\n\n<pre><code>jQuery(function($){\n  $('body').click(function(e){\n    var clickedOn = $(e.target);\n    if (clickedOn.parents().andSelf().is('#foo')){\n      console.log( \"Clicked on\", clickedOn[0], \"inside the div\" );\n    }else{\n      console.log( \"Clicked outside the div\" );\n  });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>What about this?</p>\n\n<pre><code>&lt;style type=\"text/css\"&gt;\ndiv {border: 1px solid red; color: black; background-color: #9999DD;\nwidth: 20em; height: 40em;}\n&lt;/style&gt;\n\n&lt;script type=\"text/javascript\"&gt;\nfunction sayLoc(e) {\ne = e || window.event;\nvar tgt = e.target || e.srcElement;\n\n// Get top lef co-ords of div\nvar divX = findPosX(tgt);\nvar divY = findPosY(tgt);\n\n// Workout if page has been scrolled\nvar pXo = getPXoffset();\nvar pYo = getPYoffset();\n\n// Subtract div co-ords from event co-ords\nvar clickX = e.clientX - divX + pXo;\nvar clickY = e.clientY - divY + pYo;\n\nalert('Co-ords within div (x, y): '\n+ clickX + ', ' + clickY);\n}\n\nfunction findPosX(obj) {\nvar curleft = 0;\nif (obj.offsetParent) {\nwhile (obj.offsetParent) {\ncurleft += obj.offsetLeft\nobj = obj.offsetParent;\n}\n} else if (obj.x) {\ncurleft += obj.x;\n}\nreturn curleft;\n}\n\nfunction findPosY(obj) {\nvar curtop = 0;\nif (obj.offsetParent) {\nwhile (obj.offsetParent) {\ncurtop += obj.offsetTop\nobj = obj.offsetParent;\n}\n} else if (obj.y) {\ncurtop += obj.y;\n}\nreturn curtop;\n}\n\nfunction getPXoffset(){\nif (self.pageXOffset) { // all except Explorer\nreturn self.pageXOffset;\n} else if (document.documentElement\n&amp;&amp; document.documentElement.scrollTop) {// Explorer 6 Strict\nreturn document.documentElement.scrollLeft;\n} else if (document.body) { // all other Explorers\nreturn document.body.scrollLeft;\n}\n}\n\nfunction getPYoffset(){\nif (self.pageYOffset) { // all except Explorer\nreturn self.pageYOffset;\n} else if (document.documentElement\n&amp;&amp; document.documentElement.scrollTop) {// Explorer 6 Strict\nreturn document.documentElement.scrollTop;\n} else if (document.body) { // all other Explorers\nreturn document.body.scrollTop;\n}\n}\n&lt;/script&gt;\n\n&lt;div onclick=\"sayLoc(event);\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>(from <a href=\"http://bytes.com/topic/javascript/answers/151689-detect-click-inside-div-mozilla\" rel=\"nofollow\">http://bytes.com/topic/javascript/answers/151689-detect-click-inside-div-mozilla</a>, using the Google.)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In JavaScript (via jQuery):</p>\n\n<pre><code>$(function() {\n    $(\"body\").click(function(e) {\n        if (e.target.id == \"myDiv\" || $(e.target).parents(\"#myDiv\").size()) { \n            alert(\"Inside div\");\n        } else { \n           alert(\"Outside div\");\n        }\n    });\n})\n</code></pre>\n\n<p>In HTML:</p>\n\n<pre><code>&lt;div id=\"myDiv\"&gt;&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Instead of using the body you could create a curtain with <code>z-index</code> of 100 (to pick a number) and give the inside element a higher <code>z-index</code> while all other elements have a lower z-index than the curtain.</p>\n\n<p>See working example here: <a href=\"http://jsfiddle.net/Flandre/6JvFk/\" rel=\"nofollow\">http://jsfiddle.net/Flandre/6JvFk/</a></p>\n\n<p>jQuery: </p>\n\n<pre><code>$('#curtain').on(\"click\", function(e) {\n\n    $(this).hide();\n    alert(\"clicked ouside of elements that stand out\");\n\n});\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>.aboveCurtain\n{\n    z-index: 200; /* has to have a higher index than the curtain */\n    position: relative;\n    background-color: pink;\n}\n\n#curtain\n{\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    height: 100%;\n    background-color: black;\n    width: 100%;\n    z-index:100;   \n    opacity:0.5 /* change opacity to 0 to make it a true glass effect */\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>Suppose I have one div in my page. how to detect the user click on div content or outside of div content through JavaScript or JQuery. please help with small code snippet.\nthanks.</p>\n\n<p><strong>Edit</strong>: As commented in one of the answers below, I only want to attach an event handler to my body, and also want to know which element was clicked upon.</p>\n",
            "last_activity_date": 1369307577,
            "question_id": 4660633,
            "score": 9,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Detect click inside/outside of element with single event handler"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Select <code>div</code>s that have the <code>status_billed</code> class:</p>\n\n<pre><code>$(this).parent('div.status_billed')\n</code></pre>\n\n<p>Select <code>div</code>s whose <code>class</code> attribute contains <code>status_</code>:</p>\n\n<pre><code>$(this).parent('div[class*=status_]')\n</code></pre>\n\n<p>That's about the best you'll get with <a href=\"http://api.jquery.com/category/selectors/\">jQuery selectors</a>. You can do better using <a href=\"http://api.jquery.com/filter\"><code>.filter()</code></a>:</p>\n\n<pre><code>$(this).parent('div').filter(function ()\n{\n    var classes = $(this).attr('class').split(' ');\n    for (var i=0; i&lt;classes.length; i++)\n    {\n        if (classes[i].slice(0,7) === 'status_')\n        {\n            return true;\n        }\n    }\n    return false;\n});\n</code></pre>\n\n<hr>\n\n<p>...but I'm not sure why you're doing all this - <a href=\"http://api.jquery.com/parent\"><code>.parent()</code></a> returns at most 1 element. Did you mean <a href=\"http://api.jquery.com/closest\"><code>.closest()</code></a> or <a href=\"http://api.jquery.com/parents\"><code>.parents()</code></a>?</p>\n",
                    "is_accepted": true,
                    "score": 25
                }
            ],
            "body": "<p>I'm currently using this to get the class for a specific bit of HTML on the page:</p>\n\n<pre><code>$(this).parent(\"div\").attr('class')\n</code></pre>\n\n<p>But that <code>div</code> has multiple classes: <code>current_status status_billed</code></p>\n\n<p>My end goal here is to grab the class that starts with <code>status_</code> and replace it with a different class name.</p>\n\n<p>So using my <code>.parent()</code> function above, I'm able to select the div I need, but I then need to remove the <code>status_billed</code> class and replace it with, for example, <code>status_completed</code> (or a number of other class names).</p>\n",
            "last_activity_date": 1289261100,
            "question_id": 4106958,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "css-selectors"
            ],
            "title": "jQuery: Select only a class containing a string?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>In general, I concatenate and minify all the scripts on the site and serve only two requests - one for JS and one for CSS. The exception to that rule is if a certain page has a significantly sized script that is only run there - in that case it should be loaded separately.</p>\n\n<p>Load all the JS scripts at the bottom of the your page to prevent scripts from blocking page load.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As always: it depends. The bigger the page-specific files are, the more sense it makes to keep them separate. If they're not big (think 10 kB minified) it probably makes more sense to join, minimize and compress them, so you can save some requests and rely on caching.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Minification and combining JS are only part of the battle.  The placement of the files is more important.  Obtrustive javascript should be the last loaded thing on the page as it will halt page load until it's done loading. </p>\n\n<p>Consolidate what you can but namespacing and using closures may help keep the DOM clean of your function calls until they're needed.  </p>\n\n<p>There are tools that can test page load speed.  </p>\n\n<p>The Net Panel in <a href=\"http://getfirebug.com/\" rel=\"nofollow\">Firebug</a> as well as <a href=\"http://developer.yahoo.com/yslow/\" rel=\"nofollow\">Yslow</a> are handy tools that you can use to help debug page load speed.</p>\n\n<p>Good luck and happy javascripting!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Usually you can use the following pattern:</p>\n\n<ol>\n<li><strong>main.js</strong> - bundle all scripts here that are used by several pages\non the website.</li>\n<li><strong>page.js</strong> - all js specific to the page. This would mean bundling\n    together js of all widgets on a\n    page.</li>\n</ol>\n\n<p>With this practice, you just have <strong>2 requests</strong> for your JS on each page and you get a clear separation/structure in your JS. For all pages except the first one, it will be just one request as <strong>main.js</strong> would be cached.</p>\n\n<p>You can use the same principle for the CSS as well. This is effective but as mentioned by another answer, you can actually take this further and bundle everything in 1 js only. Its a preference or style. I like to break it into 2 as it keeps things logical for me.</p>\n\n<p>Ensure the following though:</p>\n\n<ol>\n<li>Namespace your JS else you might end up with errors when you bundle them together. </li>\n<li>Do your pages a favor and push them at the bottom of the page.</li>\n</ol>\n\n<hr>\n\n<p><strong>EDIT:</strong>\nI thought I would update the answer to answer some of your points.</p>\n\n<p><strong>Point 2: Is it better to combine only those files which are always used together?</strong></p>\n\n<p>Ans: Personally, I don't think so. If you are serving all files which are being used together, it doesn't matter which group they belong to or how they land up on the page.This is because we combine JS files to reduce the amount of HTTP Requests. </p>\n\n<p>Once your JS is combined &amp; minified &amp; in PROD, you are not expect to debug or make sense out of it. So to bind together logically related JS files is a moot point. Its in your DEV environment where you would like to have all these logically related code files together.</p>\n\n<p><strong>Point 3: What about having one file for all javascripts that should load in the head and one file for all javascripts that should load at the end of body?</strong></p>\n\n<p>Ans: There are certain cases where you are somehow forced to inject JS in the <strong>HEAD</strong>. Ideally, you shouldn't do it as <strong>SCRIPT</strong> tags are blocking in nature. So unless you really need to, place all your JS ( 1 or multiple files ) at the end of the <strong>BODY</strong> tag.</p>\n\n<p><strong>Point 4: What about having one file for common functions and one for administrative functions which is loaded if the user has specific permissions?</strong></p>\n\n<p>Ans: This seems like a reasonable approach to split your JS code. Depending upon the user privileges, you can fork your JS code.</p>\n\n<p><strong>Point 6: What is a recommended amount of javascript and css requests for a page?</strong></p>\n\n<p>Ans: This is a very subjective question. It depends on what you are building. If you are worried about too much JS being loaded on page load, you can always split it and use on-demand <strong>SCRIPT</strong> injection methods to split the load.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>Like some others have said, put used-on-more-than-one-page scripts all together into a <code>main.js</code> and then if there are page specific ones: <code>home.js</code>, <code>another_page.js</code>, etc.</p>\n\n<p>The only thing I really wanted to add was that for libraries like jQuery, you should use something like Google's <a href=\"http://code.google.com/apis/libraries/devguide.html\" rel=\"nofollow\">Libraries API</a>. </p>\n\n<ul>\n<li>If your user has visited a different site which also uses Google's servers for the libraries, then they'll arrive with a primed cache! Win!</li>\n<li>I'm going to go out on a limb here and bet that Google's servers are faster than yours.</li>\n<li>Because the requests are going to different servers, clients can simultaneously process two requests to the Google servers (eg: jQuery &amp; jQuery UI) as well as two requests to your servers (main.js &amp; main.css)</li>\n</ul>\n\n<p>Oh, and finally -- don't forget to turn gzipping on your server!</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Depending on your development environment, you might consider automating the process.  It is a fair bit more work up front, but I found it has been worth it in the long run.  How you would go about doing that depends largely on your project and environment.  There are several options, but I will explain (high level) what we did.</p>\n\n<p>In our case, we have several ASP.NET based websites.  I wrote an ASP.NET control that simply contains a list of static dependencies - CSS and JavaScript.  Each page lists what it needs.  We have some pages with 7 or 8 JS dependencies and 4 or 5 CSS dependencies, depending on what shared libraries/controls are being used.  The first time the page loads, I create a new background worker thread that evaluates all the static resources, combines them into a single file (1 for CSS, 1 for JS), and then performs minification on them using the <a href=\"http://developer.yahoo.com/yui/compressor/\" rel=\"nofollow\">Yahoo Yui Compressor</a> (can do both JS and CSS).  I then output the file into a new \"merged\" or \"optimized\" directory.  </p>\n\n<p>The next time someone loads that page, the ASP.NET control sees the optimized version of the resource, and loads that instead of the list of 10-12 other resources.</p>\n\n<p>Furthermore, it is designed to only load the optimized resources when the project is running in \"RELEASE\" mode (as opposed to DEBUG mode inside Visual Studio).  This is fantastic because we can keep different classes, pages, controls, etc. separate for organization (and sharing across projects), but we still get the benefit of optimized loading.  It is a completely transparent process that requires no additional attention (once it is working).  We even went back and added a condition where the non-optimized resources were loaded if \"debug=true\" was specified in the query string of the URL for cases where you need to verify/replicate bugs in production.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There are a multitude of things to consider while deciding how to combine your JS and CSS files.</p>\n\n<ol>\n<li><p>Do you use CDN to serve your resources. If you do, you might get away with more requests per page then otherwise. Biggest killer of performance with multiple downloads is latency. CND will lower your latency.</p></li>\n<li><p>What are your target browsers. If you are audience is mostly using IE8+, FF3 and WebKit browsers that will allow 6+ simultaneous connections to a given sub-domain, you can get away with more CSS files (but not JS). More than that, in the case of modern browsers, you actually would want to avoid combining all CSS into one big file, because even though overall time spent on downloading 1 large file is going to be shorter then time spent on downloading 6 smaller files of equal sumed size in sequence, you can download multiple files simultaneously, and download for 6 smaller files will finish before the download of one large file (because your users will not max out their bandwidth on CSS file download alone).</p></li>\n<li><p>How many other assets do you serve from the same domain. Images, Flash, etc. will all count against connection limit of the browser per sub-domain. If possible, you want to move those to a separate sub-domain.</p></li>\n<li><p>Do you heavily rely on caching. Deciding how to combine files is always a tradeoff between number of connections and caching. If you combine all files on one page and 90% of those files are used on other pages, your users will be forced to re-download combined file on every page of the site, because of ever-changing last 10%.</p></li>\n<li><p>Do you use domain-splitting. If you do, again for CSS you can get away with more files if you serve them from multiple sub-domains. More available connections - faster download.</p></li>\n<li><p>How often do you update your site after it goes life. If you do a patch every few days that will modify CSS/JS files, you defiantly want to avoid combining everything into one file, cause it will destroy caching.</p></li>\n</ol>\n\n<p>Overall, my generic suggestion, not knowing all the facts about what your situation, is to combine files that are used on all pages (jquery, jquery-ui, etc.) into one file, after that if there are  multiple widgets that are used on all pages, or almost all pages, combine those. And then combine files that are either unique to the page, or used only on one-two pages into another group. That should give you the biggest bang for your buck, without having to resort to calculating size of each file, hit numbers on each page and projected standard path of the user on the site to achieve ultimate combining strategy (yeah, I had to do all of the above for very large sites).</p>\n\n<p>Also, one other comment unrelated to your question, but about something you mentioned. Avoid adding Javascript files to the head of the document. Javascript download, parsing and execution will block all other activates in the browser (except for IE9, I believe), so you want your CSS to be included as early as possible on the page, and you want your JavaScripts to be included as late as possible, right before closing body tag, if possible at all.</p>\n\n<p>And one more comment, if you are so interested in getting the best performance from your site, I suggest looking at some more obscure optimization techniques, such as preloading assets for the next page after page completion, or possibly even more obscure, like using Comet to serve only required javascript files (or chunks of js code) when they are requested.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Assuming its on apache, if not, ignore the answer :)</p>\n\n<p>I have not tried this myself yet but you might want to have a look at <a href=\"http://code.google.com/speed/page-speed/docs/module.html\" rel=\"nofollow\">mod_pagespeed</a> from google.</p>\n\n<p>Alot of the features you want to do by hand are already in it, take a look <a href=\"http://www.modpagespeed.com/\" rel=\"nofollow\">here</a> as well.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm working on a really big project in the same area which has a lot of style definitions and different JS-Scripts for different tasks in the project. The site had the same problems => too many requests. Basically, we've implemented a fix as follows:</p>\n\n<ul>\n<li>The render component of the application remembers each necessary js include file and puts them together, minified at the end of the rendering process. the resulting output is being cached by the clients via caching headers and the <a href=\"http://de.wikipedia.org/wiki/HTTP_ETag\" rel=\"nofollow\">HTTP ETag</a>!</li>\n<li>the style sheets of the given application rely on each other. There is a huge basic style-sheet that cares about basic formatting and page objects (size, floats etc.) which is being extended by a basic color scheme, which may be extended by a custom overriding style sheet for different customers to enable custom colors, layout, icons etc....\nAll these stylesheets put together can exceed for example 300k in size because there are a lot of icons as background images... each icon has two definitions - one as a GIF for IE6 and a PNG image for all other Browsers.</li>\n</ul>\n\n<p>And here we came to <strong>Problems</strong>.. at first the Stylesheets worked with <em>@import</em> rules. We wrote a wrapper script, which parsed all the styles and combined them into a single file. The result was, that all IE versions broke the layout when a style sheet exceedes about 250-270k in size. the formatting just looked like crap. So we changed this back, so that our wrapper only puts together two style sheets and writes all other sheets as <em>@import</em> rules at the top. Also, the wrapper uses caching headers and the ETag.</p>\n\n<p>This solved the loading issues for us.</p>\n\n<p>Regards</p>\n\n<p>(Please, don't rant at me because we have a 300k stylesheet. Trust me, it just has to be for various reasons. :D)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>One thing you should do is optimize your .htaccess file to compress and cache files properly:</p>\n\n<pre><code># compress text, html, javascript, css, xml:  \nAddOutputFilterByType DEFLATE text/plain  \nAddOutputFilterByType DEFLATE text/html  \nAddOutputFilterByType DEFLATE text/xml  \nAddOutputFilterByType DEFLATE text/css  \nAddOutputFilterByType DEFLATE application/xml  \nAddOutputFilterByType DEFLATE application/xhtml+xml  \nAddOutputFilterByType DEFLATE application/rss+xml  \nAddOutputFilterByType DEFLATE application/javascript  \nAddOutputFilterByType DEFLATE application/x-javascript\n\n# cache media files\n&lt;FilesMatch \".(flv|gif|jpg|jpeg|png|ico|swf|js|css|pdf)$\"&gt;  \nHeader set Cache-Control \"max-age=2592000\"  \n&lt;/FilesMatch&gt; \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think it's necessary to perform the following optimisations:</p>\n\n<ul>\n<li><p>Server-side:</p>\n\n<ol>\n<li>Use fast web-server like nginx or lighttpd for serving js and css files if not using yet.</li>\n<li>Enable caching and gziping for the files.</li>\n</ol></li>\n<li><p>And client-side:</p>\n\n<ol>\n<li>Place all common js-files into minified one and enable hardcore caching. If your page don't require running them before \"onload\", you can add one to page dynamically. It will speed up loading.</li>\n<li>Place per-page code into separate files and if it's not necessary to do smth. before onload event, add it dynamically.</li>\n<li>If it more than a few Kbytes of css at all, just merge it into one. Else you should split it to common and per-page styles.</li>\n<li>If you need best performance on client-side, place into common css file really common styles, that applied to ALL pages. Load rules you need on the page only, it will speed up rendering.</li>\n<li>The simplest way to minify js and css together is to use YUI Compress. If you want better speedup, you can remove all evals and other \"dynamic\" code and use Google Closure Compiler.</li>\n</ol></li>\n</ul>\n\n<p>If it will not help, than everything's bad and you need more servers to serve js and css files.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I need to optimize the loading speed of several existing websites. One of the issues that I have is the amount of requests per page. The websites have 7 or more different types of pages which should load different set of css and javascripts because they contain different widgets or functionality. Currently each widget or functionality has its own javascript file. I am planning to <strong>combine and minify</strong> the files to have fewer requests.</p>\n\n<ol>\n<li>Would it be a good practice to combine and minify all javascripts necessary on each type of page into one file (and to do the same for css)? e.g.\n<ul>\n<li>home page has just one <code>homepage.js</code>,</li>\n<li>list pages have just <code>listing.js</code>,</li>\n<li>detail pages have just <code>detail.js</code>,</li>\n<li>etc.</li>\n</ul></li>\n<li>Is it better to combine only those files which are always used together? e.g.\n<ul>\n<li><code>jquery.js</code> + <code>jquery.cookie.js</code> + <code>common.js</code>,</li>\n<li><code>list.js</code> + <code>paging.js</code> + <code>favorite.js</code>,</li>\n<li><code>detail.js</code> + <code>favorite.js</code>,</li>\n<li>etc.</li>\n</ul></li>\n<li>What about having one file for all javascripts that should load in the head and one file for all javascripts that should load at the end of body, e.g.\n<ul>\n<li><code>init.js</code> goes to <code>&lt;head&gt;</code> and <code>do.js</code> goes to <code>&lt;body&gt;</code>.</li>\n</ul></li>\n<li>What about having one file for common functions and one for administrative functions which is loaded if the user has specific permissions? </li>\n<li>Are there any strategies how to balance between 1., 2., 3., and 4.?</li>\n<li>What is a recommended amount of javascript and css requests for a page?</li>\n</ol>\n\n<p>I am considering large-scale websites a.k.a. portals or social networks. </p>\n\n<p>(BTW, there are some libraries which requests I can't control, e.g. TinyMCE or google maps).</p>\n",
            "last_activity_date": 1337002741,
            "question_id": 4090017,
            "score": 9,
            "tags": [
                "javascript",
                "optimization",
                "minify"
            ],
            "title": "Optimizing javascript and css requests"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You could try using jquery to change the z-index of the div when you hover over it, so that the link is temporarily above the div while hovering over said div.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I did it once. Here's the code:</p>\n\n<pre><code>quickDelegate = function(event, target) {\n            var eventCopy = document.createEvent(\"MouseEvents\");\n            eventCopy.initMouseEvent(event.type, event.bubbles, event.cancelable, event.view, event.detail,\n                event.pageX || event.layerX, event.pageY || event.layerY, event.clientX, event.clientY, event.ctrlKey, event.altKey,\n                event.shiftKey, event.metaKey, event.button, event.relatedTarget);\n            target.dispatchEvent(eventCopy);\n            // ... and in webkit I could just dispath the same event without copying it. eh.\n        };\n</code></pre>\n\n<p>please note that I was only targeting new versions of Firefox and Chrome.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>A bit late since the question was asked, but there is now a JQuery implementation of the ExtJS event forwarding script. Hope this helps anyone who stumbles across this question.</p>\n\n<p><a href=\"http://e-infotainment.com/applications/jquery-plugins/behaviours/forward-mouse-events/\" rel=\"nofollow\">JQuery Forward Mouse Event Example</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Since the <a href=\"http://e-infotainment.com/applications/jquery-plugins/behaviours/forward-mouse-events/\" rel=\"nofollow\">JQuery Forward Mouse Event Example</a> link is currently dead, I wrote some jQuery code to handle a simple case:</p>\n\n<ol>\n<li>overlay div with a transparent image and no links</li>\n<li>underlay div with links</li>\n</ol>\n\n<p>Goal: keep overlay visible, make links work and cursor change when over a link.</p>\n\n<p>Method: compare the mouse location to each link offset().</p>\n\n<p>I don't handle general mouse events, I just treat the events I need ad-hoc. So it's really a workaround instead of the best solution, which would handle every mouse event abstractly, something like using Wildcard's above quickDelegate() after checking the geometry. Also I only care about certain link elements, not the whole layered DOM.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function mouse_event_over_element(evt, elem) {\n  var o= elem.offset();\n  var w= elem.width();\n  var h= elem.height();\n  return evt.pageX &gt;= o.left &amp;&amp; evt.pageX &lt;= o.left + w &amp;&amp; evt.pageY &gt;= o.top &amp;&amp; evt.pageY &lt;= o.top + h;\n}\n\n$(overlay_selector).click(function(e){\n  $(underlay_selector + ' a').each(function() {\n    if (mouse_event_over_element(e, $(this))) {\n      // $(this).click(); // trigger a jQuery click() handler\n      // quickDelegate(e, this); // not in IE8\n      // this.click(); // maybe not in Mozilla pre-HTML5\n      window.location.href= this.href;\n      return false;\n    }\n  });\n});\n\n$(overlay_selector).mousemove(function(e){\n  var newcursor= 'default';\n  $(underlay_selector + ' a').each(function() {\n    if (mouse_event_over_element(e, $(this))) {\n      newcursor= 'pointer';\n      // $(this).mouseenter(); // trigger a one-argument jQuery hover() event (no mouseleave)\n      return false;\n    }\n  });\n  $(overlay_selector).css('cursor', newcursor);\n});\n</code></pre>\n\n<p>Using the geometry function 'mouse_event_over_element()' you can handle other events and elements.</p>\n\n<p>To do: figure out what mouse events trigger the tooltip over <code>&lt;a title=\"foo\"&gt;</code>, and trigger() them, or replicate showing the tooltip. Same for the status line.</p>\n\n<p>..............................</p>\n\n<p><strong>Edit 2014/09</strong></p>\n\n<p>..............................</p>\n\n<p>User user2273627 sggested:</p>\n\n<blockquote>\n  <p>For the default tooltip and status-line you can use the z-index\n  css-property. Check if the mouse is over a link and set the z-index\n  for that link. $(this).css('z-index','9'); Put an else when the mouse\n  is not over an element and set the z-index to auto. Make sure you set\n  the underlying links position: relative in the css-file, otherwise\n  z-index will not work.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The <a href=\"http://e-infotainment.com/applications/jquery-plugins/behaviours/forward-mouse-events/\" rel=\"nofollow\">jQuery Forward Mouse Event example</a> given here is part of a larger framework and even just figuring that much out from the given website was a chore. </p>\n\n<p>I therefore rewrote the code as a standalone jQuery plugin.</p>\n\n<p>Here's the Github repository:<br>\n<a href=\"https://github.com/MichaelPote/jquery.forwardevents\" rel=\"nofollow\">https://github.com/MichaelPote/jquery.forwardevents</a></p>\n\n<p>Unfortunately, the purpose I was using it for - overlaying a mask over Google Maps did not capture click and drag events, and the mouse cursor does not change which degrades the user experience enough that I just decided to hide the mask under IE and Opera - the two browsers <a href=\"http://caniuse.com/#feat=pointer-events\" rel=\"nofollow\">which dont support pointer events</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can do all that or you can just use this CSS for that div:</p>\n\n<p><code>pointer-events: none</code></p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>Does anybody know of either a jQuery or native JavaScript way to enable mouse events through layers? e.g. enable a link underneath a <code>div</code>.</p>\n\n<p>Other solutions that cannot use in my case:</p>\n\n<ul>\n<li>The simple way, although using not really supported 'pointer-events': \n<a href=\"http://hacks.mozilla.org/2009/12/pointer-events-for-html-in-firefox-3-6/\">http://hacks.mozilla.org/2009/12/pointer-events-for-html-in-firefox-3-6/</a></li>\n<li>A ExtJS solution:\n<a href=\"http://vinylfox.com/forwarding-mouse-events-through-layers/\">http://vinylfox.com/forwarding-mouse-events-through-layers/</a></li>\n</ul>\n",
            "last_activity_date": 1411650197,
            "question_id": 3015422,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "javascript-events"
            ],
            "title": "Forwarding Mouse Events through layers/divs"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>The @require attribute doesn't work correctly in Greasemonkey and jQuery...this same error can occur in FireBug as well.</p>\n\n<p>An alternative is to include jQuery in the page via Greasemonkey by creating the script tag.  <a href=\"http://joanpiedra.com/jquery/greasemonkey/\" rel=\"nofollow\">Here's how to do that</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Ok, so i looked into this a bit more deeper. I used your script exactly, but used our JQuery version, making it look like this:</p>\n\n<pre><code>// ==UserScript==\n// @name           My Script\n// @namespace      http://www.google.com\n// @description    My test script\n// @include        http://www.google.se/*\n// @include        http://www.dn.se/*\n// @require        http://myserver/jquery-1.3.2.js\n// ==/UserScript==\n\nGM_log(\"Hello\");\n</code></pre>\n\n<p>This works just fine for me, my guess, the JQuery up on the google api is missing some functions. Because this code above, works just fine. Also note the <code>/*</code> at the end of each url, please include that.</p>\n\n<p>Try another JQuery and change the urls and it should world properly.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>Not entirely true, it seems like jQuery 1.4 tries to detect something using a call that just doesn't work in the greasemonkey environment. @require does normally work as it should.</p>\n\n<p>So reverting to 1.3.2 does do the trick, but I'd rather find a solution that lets me use 1.4.</p>\n\n<p>btw, I use this, slightly different:</p>\n\n<pre><code>// @require http://ajax.googleapis.com/ajax/libs/jquery/1.3/jquery.min.js\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I found a non-ideal way to use it with jQuery 1.4.1 -- this seems to fix it. It's the <a href=\"http://forum.jquery.com/topic/importing-jquery-1-4-1-into-greasemonkey-scripts-generates-an-error\" rel=\"nofollow\">new browser sniffing</a> that seems to \"break\" it.</p>\n\n<p>jquery-1.4.1.min.js:</p>\n\n<pre><code>  [old]  36: var o=r.createElement(\"div\");n=\"on\"+n;var m=n in o;\n  [new]  36: var o=r.createElement(\"div\");n=\"on\"+n;var m=true;\n</code></pre>\n\n<p>jquery-1.4.1.js</p>\n\n<pre><code>  [old] 934: var isSupported = (eventName in el);\n  [new] 934: var isSupported = true;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I was stumbling around trying to deal with this issue with GM 0.8 and jquery 1.4.2 and found this: <a href=\"http://forum.jquery.com/topic/importing-jquery-1-4-1-into-greasemonkey-scripts-generates-an-error\">http://forum.jquery.com/topic/importing-jquery-1-4-1-into-greasemonkey-scripts-generates-an-error</a></p>\n\n<p>It looks to me like the definitive answer to the question and how to work around it.  The workaround worked for me.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Patch for jquery-1.4.3.min.js</p>\n\n<blockquote>\n  <p>[old] line 41 \n  u.createElement(\"div\");s=\"on\"+s;var\n  B=s in v;<br/> [new] line 41 \n  u.createElement(\"div\");s=\"on\"+s;var\n  B=true;</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's a minified version of jQuery 1.4.4 for Greasemonkey:</p>\n\n<p><a href=\"http://userscripts.org/scripts/show/92329\" rel=\"nofollow\">http://userscripts.org/scripts/show/92329</a></p>\n\n<p>Hope it helps,\nyah</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Good news and updating all postings: </p>\n\n<p>The above patch allowed pre-1.5.2 jQuery versions to be run in Greasemonkey scripts, but fortunately the patch is no longer required if you use the current jQuery 1.5.2 version.</p>\n\n<p>I checked its code and noticed that the eventSupported function code in jQuery</p>\n\n<pre><code>var eventSupported = function(eventName) { ... }\n</code></pre>\n\n<p>has been updated with the consequence that unpatched jQuery 1.5.2 now runs in Greasemonkey 0.9.2.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I've seen <a href=\"http://stackoverflow.com/questions/859024/how-can-i-use-jquery-in-greasemonkey\">the other question on here</a> about loading jQuery in a Greasemonkey. Having tried that method, with this require statement inside my <code>==UserScript==</code> tags:</p>\n\n<pre><code>// @require    http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js\n</code></pre>\n\n<p>I still get the following error message in Firefox's error console:</p>\n\n<pre><code>Error: Component is not available\nSource File: file:///Users/greg/Library/Application%20Support/\n       Firefox/Profiles/xo9xhovo.default/gm_scripts/myscript/jquerymin.js\nLine: 36\n</code></pre>\n\n<p>This stops my greasemonkey code from running. I've made sure I included the <code>@require</code> for jQuery and saved my js file before installing it, as required files are only loaded on installation.</p>\n\n<p>Code:</p>\n\n<pre><code>// ==UserScript==\n// @name           My Script\n// @namespace      http://www.google.com\n// @description    My test script\n// @include        http://www.google.com\n// @require        http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js\n// ==/UserScript==\n\nGM_log(\"Hello\");\n</code></pre>\n\n<p>I have Greasemonkey 0.8.20091209.4 installed on Firefox 3.5.7 on my Macbook Pro, Leopard (10.5.8). I've cleared my cache (except cookies) and have disabled all other plugins except Flashblock 1.5.11.2, Web Developer 1.1.8 and Adblock Plus 1.1.3.</p>\n\n<p>My <code>config.xml</code> with my Greasemonkey script installed:</p>\n\n<pre><code>&lt;UserScriptConfig&gt;\n&lt;Script filename=\"myscript.user.js\" name=\"My Script\" \n namespace=\"http://www.google.com\" description=\"My test script\" enabled=\"true\" \n basedir=\"myscript\"&gt;\n    &lt;Include&gt;http://www.google.com&lt;/Include&gt;\n    &lt;Require filename=\"jquerymin.js\"/&gt;\n&lt;/Script&gt;\n</code></pre>\n\n<p></p>\n\n<p>I can see jquerymin.js sat in the <code>gm_scripts/myscript/</code> directory.</p>\n\n<p>Additionally, is it common for this error to occur in the console when installing a Greasemonkey script?</p>\n\n<pre><code>Error: not well-formed\nSource File: file:///Users/Greg/Documents/myscript.user.js\nLine: 1, Column: 1\nSource Code:\n   // ==UserScript==\n</code></pre>\n",
            "last_activity_date": 1360498626,
            "question_id": 2077714,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "firefox-addon",
                "greasemonkey"
            ],
            "title": "Greasemonkey @require jQuery not working &quot;Component not available&quot;"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Pear <a href=\"http://pear.php.net/pepr/pepr-proposal-show.php?id=198\">Services_JSON</a> will parse that string (tested version 1.31). But given that that is a JSON parser and that this isn't valid JSON you have no guarantee that future versions will still work.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>This sounded like a fun challenge, so I coded up a tiny parser :D</p>\n\n<pre><code>class JsParserException extends Exception {}\nfunction parse_jsobj($str, &amp;$data) {\n    $str = trim($str);\n    if(strlen($str) &lt; 1) return;\n\n    if($str{0} != '{') {\n    \tthrow new JsParserException('The given string is not a JS object');\n    }\n    $str = substr($str, 1);\n\n    /* While we have data, and it's not the end of this dict (the comma is needed for nested dicts) */\n    while(strlen($str) &amp;&amp; $str{0} != '}' &amp;&amp; $str{0} != ',') { \n    \t/* find the key */\n    \tif($str{0} == \"'\" || $str{0} == '\"') {\n    \t\t/* quoted key */\n    \t\tlist($str, $key) = parse_jsdata($str, ':');\n    \t} else {\n    \t\t$match = null;\n    \t\t/* unquoted key */\n    \t\tif(!preg_match('/^\\s*[a-zA-z_][a-zA-Z_\\d]*\\s*:/', $str, $match)) {\n    \t\tthrow new JsParserException('Invalid key (\"'.$str.'\")');\n    \t\t}\t\n    \t\t$key = $match[0];\n    \t\t$str = substr($str, strlen($key));\n    \t\t$key = trim(substr($key, 0, -1)); /* discard the ':' */\n    \t}\n\n    \tlist($str, $data[$key]) = parse_jsdata($str, '}');\n    }\n    \"Finshed dict. Str: '$str'\\n\";\n    return substr($str, 1);\n}\n\nfunction comma_or_term_pos($str, $term) {\n    $cpos = strpos($str, ',');\n    $tpos = strpos($str, $term);\n    if($cpos === false &amp;&amp; $tpos === false) {\n    \tthrow new JsParserException('unterminated dict or array');\n    } else if($cpos === false) {\n    \treturn $tpos;\n    } else if($tpos === false) {\n    \treturn $cpos;\n    }\n    return min($tpos, $cpos);\n}\n\nfunction parse_jsdata($str, $term=\"}\") {\n    $str = trim($str);\n\n\n    if(is_numeric($str{0}.\"0\")) {\n    \t/* a number (int or float) */\n    \t$newpos = comma_or_term_pos($str, $term);\n    \t$num = trim(substr($str, 0, $newpos));\n    \t$str = substr($str, $newpos+1); /* discard num and comma */\n    \tif(!is_numeric($num)) {\n    \t\tthrow new JsParserException('OOPSIE while parsing number: \"'.$num.'\"');\n    \t}\n    \treturn array(trim($str), $num+0);\n    } else if($str{0} == '\"' || $str{0} == \"'\") {\n    \t/* string */\n    \t$q = $str{0};\n    \t$offset = 1;\n    \tdo {\n    \t\t$pos = strpos($str, $q, $offset);\n    \t\t$offset = $pos;\n    \t} while($str{$pos-1} == '\\\\'); /* find un-escaped quote */\n    \t$data = substr($str, 1, $pos-1);\n    \t$str = substr($str, $pos);\n    \t$pos = comma_or_term_pos($str, $term);\n    \t$str = substr($str, $pos+1);\t\t\n    \treturn array(trim($str), $data);\n    } else if($str{0} == '{') {\n    \t/* dict */\n    \t$data = array();\n    \t$str = parse_jsobj($str, $data);\n    \treturn array($str, $data);\n    } else if($str{0} == '[') {\n    \t/* array */\n    \t$arr = array();\n    \t$str = substr($str, 1);\n    \twhile(strlen($str) &amp;&amp; $str{0} != $term &amp;&amp; $str{0} != ',') {\n    \t\t$val = null;\n    \t\tlist($str, $val) = parse_jsdata($str, ']');\n    \t\t$arr[] = $val;\n    \t\t$str = trim($str);\n    \t}\n    \t$str = trim(substr($str, 1));\n    \treturn array($str, $arr);\n    } else if(stripos($str, 'true') === 0) {\n    \t/* true */\n    \t$pos = comma_or_term_pos($str, $term);\n    \t$str = substr($str, $pos+1); /* discard terminator */\n    \treturn array(trim($str), true);\n    } else if(stripos($str, 'false') === 0) {\n    \t/* false */\n    \t$pos = comma_or_term_pos($str, $term);\n    \t$str = substr($str, $pos+1); /* discard terminator */\n    \treturn array(trim($str), false);\n    } else if(stripos($str, 'null') === 0) {\n    \t/* null */\n    \t$pos = comma_or_term_pos($str, $term);\n    \t$str = substr($str, $pos+1); /* discard terminator */\n    \treturn array(trim($str), null);\n    } else if(strpos($str, 'undefined') === 0) {\n    \t/* null */\n    \t$pos = comma_or_term_pos($str, $term);\n    \t$str = substr($str, $pos+1); /* discard terminator */\n    \treturn array(trim($str), null);\n    } else {\n    \tthrow new JsParserException('Cannot figure out how to parse \"'.$str.'\" (term is '.$term.')');\n    }\n}\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>$data = '{fu:\"bar\",baz:[\"bat\"]}';    \n$parsed = array();    \nparse_jsobj($data, $parsed);    \nvar_export($parsed);\n</code></pre>\n\n<p>Gives:</p>\n\n<pre><code>array (\n  'fu' =&gt; 'bar',\n  'baz' =&gt;\n  array (\n    0 =&gt; 'bat',\n  ),\n)\n</code></pre>\n\n<p>Tested with these strings:</p>\n\n<pre><code>'{fu:\"bar\",baz:[\"bat\"]}',\n'{rec:{rec:{rec:false}}}',\n'{foo:[1,2,[3,4]]}',\n'{fu:{fu:\"bar\"},bar:{fu:\"bar\"}}',\n'{\"quoted key\":[1,2,3]}',\n'{und:undefined,\"baz\":[1,2,\"3\"]}',\n'{arr:[\"a\",\"b\"],\"baz\":\"foo\",\"gar\":{\"faz\":false,t:\"2\"},f:false}',\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I found out that the Yii-framework's <code>CJSON::decode()</code> function handles Javascript objects as well.</p>\n\n<p>If you're not using Yii, you should be able to just use the <a href=\"https://github.com/yiisoft/yii/blob/1.1.14/framework/web/helpers/CJSON.php#L323\" rel=\"nofollow\">source code</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a php string containing the serialization of a javascript object :</p>\n\n<pre><code>$string = '{fu:\"bar\",baz:[\"bat\"]}';\n</code></pre>\n\n<p>The actual string is far more complicated, of course, but still well-formed javascript. This is not standard JSON, so json_decode fails. Do you know any php library that would parse this string and return a php associative array ?</p>\n",
            "last_activity_date": 1398101048,
            "question_id": 1554100,
            "score": 9,
            "tags": [
                "php",
                "javascript"
            ],
            "title": "Parsing Javascript (not JSON) in PHP"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>If you pass jQuery a function, it will not run until the page has loaded:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n$(function() {\n    //your header rotation code goes here\n});\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Well the first can be achieved with the document.ready function in jquery</p>\n\n<pre><code>$(document).ready(function(){...});\n</code></pre>\n\n<p>The changing image can be achieved with any number of plugins </p>\n\n<ul>\n<li><a href=\"http://malsup.com/jquery/cycle/\">http://malsup.com/jquery/cycle/</a></li>\n<li><a href=\"http://www.matto1990.com/jquery/slideshow/\">http://www.matto1990.com/jquery/slideshow/</a></li>\n</ul>\n\n<p>If you wish you can check if images are loaded with the complete property.  I know that at least the malsup jquery cycle slideshow makes use of this function internally.  </p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The $(document).ready mechanism is meant to fire after the DOM has been loaded successfully but makes no guarantees as to the state of the images referenced by the page.</p>\n\n<p>When in doubt, fall back on the good ol' window.onload event:</p>\n\n<pre><code>window.onload = function()\n{\n  //your code here\n};\n</code></pre>\n\n<p>Now, this is obviously slower than the jQuery approach.  However, you can compromise somewhere in between:</p>\n\n<pre><code>$(document).ready\n(\n  function()\n  {\n    var img = document.getElementById(\"myImage\");\n\n    var intervalId = setInterval(\n                        function()\n                        {\n                          if(img.complete)\n                          {\n                            clearInterval(intervalId);\n                            //now we can start rotating the header\n                          }\n                        },\n                        50);\n  }\n);\n</code></pre>\n\n<p>To explain a bit: </p>\n\n<ol>\n<li><p>we grab the DOM element of the image\nwhose image we want completely\nloaded</p></li>\n<li><p>we then set an interval to\nfire every 50 milliseconds.</p></li>\n<li><p>if, during one of these intervals, the\ncomplete attribute of this image is\nset to true, the interval is cleared\nand the rotate operation is safe to\nstart.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You probably already know about $(document).ready(...). What you need is a preloading mechanism; something that fetches data (text or images or whatever) before showing it off.  This can make a site feel much more professional.</p>\n\n<p>Take a look at <a href=\"http://flesler.blogspot.com/2008/01/jquerypreload.html\">jQuery.Preload</a> (there are others). jQuery.Preload has several ways of triggering preloading, and also provides callback functionality (when the image is preloaded, then show it).  I have used it heavily, and it works great.</p>\n\n<p>Here's how easy it is to get started with jQuery.Preload:</p>\n\n<pre><code>$(function() {\n  // First get the preload fetches under way\n  $.preload([\"images/button-background.png\", \"images/button-highlight.png\"]);\n  // Then do anything else that you would normally do here\n  doSomeStuff();\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>you can try</p>\n\n<pre><code>$(function()\n{\n\n$(window).bind('load', function()\n{\n\n// INSERT YOUR CODE THAT WILL BE EXECUTED AFTER THE PAGE COMPLETELY LOADED...\n\n});\n});\n</code></pre>\n\n<p>i had the same problem and this code worked for me. how it works for you too!</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>did you try this ?</p>\n\n<pre><code>$(\"#yourdiv\").load(url, function(){ \n\n         your functions goes here !!!\n\n}); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have a site with a rotating header image (you've all seen them). I want to do the following:</p>\n\n<ol>\n<li>Load the entire page plus the first header image</li>\n<li>Start the header image slideshow transitioning every x seconds or when the next image has finished loading, whichever is later</li>\n</ol>\n\n<p>I haven't really need an example that truly does this.</p>\n",
            "last_activity_date": 1322622744,
            "question_id": 1430854,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "slideshow",
                "preload"
            ],
            "title": "JQuery wait for page to finish loading before starting the slideshow?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Well, one advantage is that it means you don't have to worry about quotes within the script being loaded interfering with quotes in your script that's doing the loading (since the ones in the loaded script can be escaped).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It means the code will work in XML / XHTML and HTML without having to mess with CDATA</p>\n",
                    "is_accepted": true,
                    "score": 13
                }
            ],
            "body": "<p>The code that you have to add to track a web page with google analytics looks like:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar gaJsHost = ((\"https:\" == document.location.protocol) ? \"https://ssl.\" : \"http://www.\");\ndocument.write(unescape(\"%3Cscript src='\" + gaJsHost + \"google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E\"));\n&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\ntry {\nvar pageTracker = _gat._getTracker(\"UA-XXXXX\");\npageTracker._trackPageview();\n} catch(err) {}&lt;/script&gt;\n</code></pre>\n\n<p>What's the advantage of doing these line:</p>\n\n<pre><code>document.write(unescape(\"%3Cscript src='\" + gaJsHost + \"google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E\"));\n</code></pre>\n\n<p>versus these line:</p>\n\n<pre><code>document.write(\"&lt;script src='\" + gaJsHost + \"google-analytics.com/ga.js' type='text/javascript'&gt;&lt;\\/script&gt;\");\n</code></pre>\n\n<p>I wrote some code that does something similar (load javascript \"via\" document write) but it does not use unescape and I am wondering if I should follow the google-analytics example.</p>\n",
            "last_activity_date": 1388167119,
            "question_id": 1224670,
            "score": 9,
            "tags": [
                "javascript",
                "google-analytics"
            ],
            "title": "What is the advantage of using unescape on document.write to load javascript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You can't refresh the parent page without reloading the iframe.</p>\n\n<p>What you could do is use <a href=\"http://en.wikipedia.org/wiki/AJAX\">AJAX</a> to update the parent's content, but that could be a fair amount of work (using the jQuery or Prototype frameworks would make this easier).</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>You can't tell the parent window to refresh and exclude any part of its own page, including the iframe contained within it. You can do this using AJAX techniques though.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You'll need to have your iframe become a \"regular\" frame in order to preserve it while refreshing another part of the page.  Since the iframe is technically part of the parent (it's an inline frame, after all), refreshing the parent will reload the iframe content as well.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Depends what your layout is, but as other posts have observed you cannot refresh the parent frame without refreshing the iframe itself as it is part of the page.</p>\n\n<p>If you do not wish to use ajax, and layout permits, one solution is to place the contents of the parent frame in an iframe itself.  You can then tell the parent page to refresh the iframe containing the 'parent content' when your iframe loads.  If your 'parent' iframe is borderless and there is no scrolling then this is all transparent to the user.</p>\n\n<p>You could push this technique as far as a couple of iframes for the parent contents and it can be quicker and simpler to implement than ajax, beyond that you're as well to bite the bullet and implement an ajax solution.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You won't need to use ajax techniques either. You can simply call a javascript function in parent page from the page contained in the iframe of parent page. This way you can easily perform actions on parent page. <a href=\"http://dotnetspidor.blogspot.com/2011/07/refresh-parent-page-partially-from.html\" rel=\"nofollow\">How to refresh parent page partially from page in iframe without affecting the iframe</a> illustrates how.</p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As long as your on the same domain you can use something like:</p>\n\n<pre><code>window.parent.location = window.parent.location + '?parent-updated=true'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've got a parent page and an iframe inside that page. The links in the parent control the page that gets loaded in the iframe. What I want to do is refresh the parent page when the iframe gets loaded.\nI've got this in the iframe:</p>\n\n<pre><code>RefreshParent(){\n    parent.location.reload();\n}\n\n&lt;body onload=\"RefreshParent();\"&gt;\n</code></pre>\n\n<p>But, the above code refreshes the whole parent page along with the iframe inside it which in turn reloads the parent page and goes into an infinite loop.</p>\n",
            "last_activity_date": 1396012414,
            "question_id": 492573,
            "score": 9,
            "tags": [
                "javascript",
                "iframe"
            ],
            "title": "How can I refresh parent window from an iframe?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The following ought to do it:</p>\n\n<pre><code>function handleOnClick() {\n    if( confirm( \"Sure?\" ) ) {\n        return handleOnClickConfirmed.call( this );\n    }\n    return false;\n}\n</code></pre>\n\n<p>The <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Function/call\"><code>call()</code></a> function attached to <code>Function</code> objects is designed to allow this; calling a function with a desired context. It's an extremely useful trick when setting up event handlers that call back into functions within other objects.</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Rob's answer is the best answer for your problem, but I wanted to address something that you wrote in your original question:</p>\n\n<blockquote>\n  <p>I know I can pass this as an argument to handleOnClickConfirmed, but some of my code already uses handleOnClickConfirmed and I don't want to have to rewrite those calls.</p>\n</blockquote>\n\n<p>JavaScript parameters are always optional, as far as the interpreter is concerned.  For example if you have the function:</p>\n\n<pre><code>function MyFunction(paramA, paraB) {\n  // do nothing\n}\n</code></pre>\n\n<p>All of these calls will execute without error:</p>\n\n<pre><code>MyFunction(1,2);\nMyFunction(1);\nMyFunction();\n</code></pre>\n\n<p>So you could modify handleOnClickConfirmed to accept what would essentially be an optional parameter.  Like so:</p>\n\n<pre><code>function handleOnClickConfirmed(context) {\n  context = context || this;\n  // use context instead of 'this' through the rest of your code\n}\n</code></pre>\n\n<p>Again, in this particular case, the call function is the best solution.  But the technique I outlined above is a good one to have in your toolbox.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I have an onclick handler for an &lt;a&gt; element (actually, it's a jQuery-created handler, but that's not important).  It looks like this:</p>\n\n<pre><code>function handleOnClick() {\n    if(confirm(\"Are you sure?\")) {\n        return handleOnClickConfirmed();\n    }\n    return false;\n}\n</code></pre>\n\n<p>From this function, the <strong>this</strong> object is accessable as the &lt;a&gt; element clicked.  However, handleOnClickConfirmed's <strong>this</strong> is a Window element!  I want handleOnClickConfirmed to have the same <strong>this</strong> as handleOnClick does.  How would I do this?</p>\n\n<p>(I know I can pass <strong>this</strong> as an argument to handleOnClickConfirmed, but some of my code already uses handleOnClickConfirmed and I don't want to have to rewrite those calls.  Besides, I think using <strong>this</strong> looks cleaner.)</p>\n",
            "last_activity_date": 1227855067,
            "question_id": 325004,
            "score": 9,
            "tags": [
                "javascript",
                "context"
            ],
            "title": "Call function with &quot;this&quot;"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The easiest way is to sling an ever-changing querystring onto the end:</p>\n\n<pre><code>var url = 'http://.../?' + escape(new Date())\n</code></pre>\n\n<p>Some people prefer using <code>Math.random()</code> for that instead of <code>escape(new Date())</code>. But the correct way is probably to alter the headers the web server sends to disallow caching.</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>You can't stop it from caching the image altogether within Javascript. But, you can toy with the src/address of the image to force it to cache anew:</p>\n\n<pre><code>[Image].src = 'image.png?' + (new Date()).getTime();\n</code></pre>\n\n<p>You can probably take any of the Ajax cache solutions and apply it here.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>That actually sounds like a bug in the browser -- you could file at <a href=\"http://bugs.webkit.org\" rel=\"nofollow\">http://bugs.webkit.org</a> if it's in Safari or <a href=\"https://bugzilla.mozilla.org/\" rel=\"nofollow\">https://bugzilla.mozilla.org/</a> for Firefox.  Why do i say potential browser bug?  Because the browser realises it should not be caching on reload, yet it does give you a cached copy of the image when you request it programmatically.</p>\n\n<p>That said are you sure you're actually drawing anything?  the Canvas.drawImage API will not wait for an image to load, and is spec'd to not draw if the image has not completely loaded when you try to use it.</p>\n\n<p>A better practice is something like:</p>\n\n<pre><code>    var myimg = new Image();\n    myimg.onload = function() {\n        var rx=Math.floor(Math.random()*100)*10\n        var ry=Math.floor(Math.random()*100)*10\n        ctx.drawImage(myimg,rx,ry);\n        window.setTimeout(draw,0);\n    }\n    myimg.src = 'http://ohm:8080/cgi-bin/nextimg'\n</code></pre>\n\n<p>(You can also just pass <code>draw</code> as an argument to setTimeout rather than using a string, which will save reparsing and compiling the same string over and over again.)</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>There are actually <strong>two</strong> caches you need to bypass here:  One is the regular HTTP cache, that you can avoid by using the correct HTTP headers on the image.  But you've also got to stop the browser from re-using an in-memory copy of the image; if it decides it can do that it will never even get to the point of querying its cache, so HTTP headers won't help.</p>\n\n<p>To prevent this, you can use either a changing querystring or a changing fragment identifier.</p>\n\n<p>See my post <a href=\"http://stackoverflow.com/a/22429796/999120\" title=\"My answer to: Refresh image with a new one at the same url\">here</a> for more details.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>If I load the nextimg URL manually in the browser, it gives a new picture every time I reload. But this bit of code shows the same image every iteration of <code>draw()</code>.</p>\n\n<p>How can I force myimg not to be cached?</p>\n\n<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;script type=\"text/javascript\"&gt;\n      function draw(){\n        var canvas = document.getElementById('canv');\n        var ctx = canvas.getContext('2d');\n        var rx;\n        var ry;\n        var i;\n\n        myimg = new Image();\n        myimg.src = 'http://ohm:8080/cgi-bin/nextimg'\n\n        rx=Math.floor(Math.random()*100)*10\n        ry=Math.floor(Math.random()*100)*10\n        ctx.drawImage(myimg,rx,ry);\n        window.setTimeout('draw()',0);\n      }\n    &lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body onload=\"draw();\"&gt;\n    &lt;canvas id=\"canv\" width=\"1024\" height=\"1024\"&gt;&lt;/canvas&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1394919777,
            "question_id": 165253,
            "score": 9,
            "tags": [
                "javascript",
                "image",
                "caching"
            ],
            "title": "JavaScript: how to force Image() not to use the browser cache?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat\"><code>concat</code></a> returns a new array, so you can do</p>\n\n\n\n<pre><code>this.setState({list: this.state.list.concat([newObject])});\n</code></pre>\n\n<p>another alternative is React's <a href=\"https://facebook.github.io/react/docs/update.html\">immutability helper</a></p>\n\n<pre><code>  var newState = React.addons.update(this.state, {\n      list : {\n        $push : [newObject]\n      }\n  });\n\n  this.setState(newState);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                }
            ],
            "body": "<p>Let's say I have a list of plain objects in my <code>this.state.list</code> that I can then use to render a list of children. What then is the right way to insert object into <code>this.state.list</code>?</p>\n\n<p>Below is the only way I think it will work because you can not mutate the <code>this.state</code> directly as mentioned in the doc.</p>\n\n<pre><code>this._list.push(newObject):\nthis.setState({list: this._list});\n</code></pre>\n\n<p>This seems ugly to me. Is there a better way?</p>\n",
            "last_activity_date": 1401572731,
            "question_id": 23966438,
            "score": 8,
            "tags": [
                "javascript",
                "reactjs"
            ],
            "title": "what is the preferred way to mutate a React state?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>When using <code>Promise.promisifyAll()</code>, it helps to identify a target prototype if your target object must be instantiated. In case of the MongoDB JS driver, the standard pattern is:</p>\n\n<ul>\n<li>Get a <code>Db</code> object, using either <code>MongoClient</code> static method or the <code>Db</code> constructor</li>\n<li>Call <code>Db#collection()</code> to get a <code>Collection</code> object.</li>\n</ul>\n\n<p>So, borrowing from <a href=\"http://stackoverflow.com/a/21733446/741970\">http://stackoverflow.com/a/21733446/741970</a>, you can:</p>\n\n<pre><code>var Promise = require('bluebird');\nvar mongodb = require('mongodb');\nvar MongoClient = mongodb.MongoClient;\nvar Collection = mongodb.Collection;\n\nPromise.promisifyAll(Collection.prototype);\nPromise.promisifyAll(MongoClient);\n</code></pre>\n\n<p>Now you can:</p>\n\n<pre><code>var client = MongoClient.connectAsync('mongodb://localhost:27017/test')\n    .then(function(db) {\n        return db.collection(\"myCollection\").findOneAsync({ id: 'someId' })\n    })\n    .then(function(item) {\n      // Use `item`\n    })\n    .catch(function(err) {\n        // An error occurred\n    });\n</code></pre>\n\n<p>This gets you pretty far, except it'll also help to make sure the <code>Cursor</code> objects returned by <code>Collection#find()</code> are also promisified. In the MongoDB JS driver, the cursor returned by <code>Collection#find()</code> is not built from a prototype. So, you can wrap the method and promisify the cursor each time. This isn't necessary if you don't use cursors, or don't want to incur the overhead. Here's one approach:</p>\n\n<pre><code>Collection.prototype._find = Collection.prototype.find;\nCollection.prototype.find = function() {\n    var cursor = this._find.apply(this, arguments);\n    cursor.toArrayAsync = Promise.promisify(cursor.toArray, cursor);\n    cursor.countAsync = Promise.promisify(cursor.count, cursor);\n    return cursor;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The 2.0 branch documentation contains a better promisification guide <a href=\"https://github.com/petkaantonov/bluebird/blob/master/API.md#promisification\" rel=\"nofollow\">https://github.com/petkaantonov/bluebird/blob/master/API.md#promisification</a></p>\n\n<p>It actually has mongodb example which is much simpler:</p>\n\n<pre><code>var Promise = require(\"bluebird\");\nvar MongoDB = require(\"mongodb\");\nPromise.promisifyAll(MongoDB);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Version 1.4.9 of <code>mongodb</code> should now be easily promisifiable as such:</p>\n\n<pre><code>Promise.promisifyAll(mongo.Cursor.prototype);\n</code></pre>\n\n<p>See <a href=\"https://github.com/mongodb/node-mongodb-native/pull/1201\" rel=\"nofollow\">https://github.com/mongodb/node-mongodb-native/pull/1201</a> for more details.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I'd like to use the <a href=\"http://mongodb.github.io/node-mongodb-native\">MongoDB native JS driver</a> with <a href=\"https://github.com/petkaantonov/bluebird\">bluebird promises</a>. How can I use <a href=\"https://github.com/petkaantonov/bluebird/blob/master/API.md#promisepromisifyallobject-target---object\"><code>Promise.promisifyAll()</code></a> on this library?</p>\n",
            "last_activity_date": 1424184009,
            "question_id": 23771853,
            "score": 8,
            "tags": [
                "javascript",
                "promise",
                "node-mongodb-native",
                "bluebird"
            ],
            "title": "How can I promisify the MongoDB native Javascript driver using bluebird?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>There is a JavaScript <a href=\"http://shapeshed.com/html5-speech-recognition-api/\" rel=\"nofollow\">SpeechRecognition API</a> that does text-to-speech and speech-to-text. Not many browsers support it but Chrome should have support.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><strong>Answering my own question:</strong></p>\n\n<p>Just made a Github project for this purpose: <a href=\"https://github.com/Daniel-Hug/speech-input\" rel=\"nofollow\">https://github.com/Daniel-Hug/speech-input</a></p>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p>I noticed this warning in Chrome devtool's console:</p>\n\n<blockquote>\n  <p>The <code>x-webkit-speech</code> input field attribute is deprecated. Please use the JavaScript API instead.</p>\n</blockquote>\n\n<p>So what's the best JS API replacement for simple speech input on input fields?</p>\n\n<p>Perhaps there exists a drop-in JS module that will handle it for me?</p>\n",
            "last_activity_date": 1416246012,
            "question_id": 23188951,
            "score": 8,
            "tags": [
                "javascript",
                "speech-to-text"
            ],
            "title": "x-webkit-speech is deprectated. A JS replacement for simple speech input for &lt;input&gt;?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>At the same time <code>$sce</code> service was introduced (angular 1.2), support for <code>ng-bind-html-unsafe</code> directive was dropped.  The new directive is <code>ng-bind-html</code>.  If you use this, the code should work <a href=\"http://docs.angularjs.org/api/ng.%24sce\">as documented</a>:</p>\n\n<pre><code> &lt;div ng-bind-html=\"mail.htmlbody\"&gt;&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Use this  directive: </p>\n\n<pre><code>&lt;div ng-bind-html=\"mail.htmlbody\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Don't forget to use angular sanitize on your app module. </p>\n\n<p>check here : <a href=\"http://docs.angularjs.org/api/ngSanitize\" rel=\"nofollow\">http://docs.angularjs.org/api/ngSanitize</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Nice article \"Ng-Bind-Html\" Eric</p>\n\n<p><a href=\"http://erikaugust.com/thoughts/tag/ng-bind-html/\" rel=\"nofollow\">http://erikaugust.com/thoughts/tag/ng-bind-html/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am getting JSON data from the server, one of the field contains escaped html (an email body actually):</p>\n\n<p><code>&amp;lt;html&amp;gt;\\r\\n&amp;lt;head&amp;gt;\\r\\n&amp;lt;meta http-equiv=&amp;quot;Content-Type&amp;quot; content=&amp;quot;text/html; charset=iso-8859-1&amp;quot;&amp;gt;\\r\\n&amp;lt;/head&amp;gt;\\r\\n&amp;lt;body dir=&amp;quot;auto&amp;quot;&amp;gt;\\r\\n&amp;lt;div&amp;gt;Buonasera, ho verificato i dati sul mio account ed il numero di cell che vi ho fornito&amp;lt;/div&amp;gt;\\r\\n&amp;lt;div&amp;gt;&amp;lt;br&amp;gt;\\r\\n&amp;lt;a</code> (more...)</p>\n\n<p>I am getting crazy at trying to render it with AngularJs.</p>\n\n<p>The following is not working:</p>\n\n<pre><code>&lt;div ng-bind-html-unsafe=\"mail.htmlbody\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Which I believe is normal because the html is in fact escaped.\nShould I unescape it first? Is Angular capable of unescaping html with some available service?</p>\n\n<p>If I use $sce like this:</p>\n\n<pre><code>scope.mail.htmlbody = $sce.trustAsHtml(scope.mail.htmlbody);\n</code></pre>\n\n<p>The source html is displayed, inspecting the element I can see the content is quoted. In other words in the page the source html is displayed instead of the html being rendered. Maybe I am missing something?</p>\n",
            "last_activity_date": 1413555170,
            "question_id": 20436579,
            "score": 8,
            "tags": [
                "javascript",
                "json",
                "angularjs",
                "html-escape-characters"
            ],
            "title": "How to have AngularJS output escaped HTML"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<h2>Yes, IE11 has removed javascript conditional compilation</h2>\n\n<hr>\n\n<p>The <a href=\"https://www.google.com/search?q=ie11+javascript+conditional+compilation\" rel=\"nofollow\">google search</a> linked in the question returns this question as its third result, after two MSDN pages also linked above. This establishes the lack of a better source, so I think this question (including comments) should be considered the authoritative reference for the fact that Javascript conditional compilation is not available in IE11.</p>\n\n<p>I have submitted feedback on the MSDN pages to the effect that they are incorrect.</p>\n\n<p><strong>Update 2015-02-03</strong>: <a href=\"https://msdn.microsoft.com/en-us/library/ie/8ka90k2e%28v=vs.94%29.aspx\" rel=\"nofollow\">MSDN</a> now acknowledges that IE11 no longer supports <code>@cc_on</code>.</p>\n\n<hr>\n\n<p>Some workarounds are as follows:</p>\n\n<p><strong>User-agent detection</strong></p>\n\n<pre><code> /\\([^)]*Trident[^)]*rv:([0-9.]+)/.exec(ua)\n</code></pre>\n\n<p>will parse IE11's UA string and return the \"revision number\" at the end.</p>\n\n<p><strong>ScriptEngineMajorVersion()</strong> (thanks @Teemu)</p>\n\n<pre><code> var tridentVersion = \n     typeof ScriptEngineMajorVersion === \"function\" ?\n         ScriptEngineMajorVersion() : undefined\n</code></pre>\n\n<p>should evaluate correctly on all browsers, but we can't guarantee <code>ScriptEngineMajorVersion</code> will not be dropped without warning just as conditional compilation has been.</p>\n\n<hr>\n\n<p>Thanks to all commenters.</p>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>I have been determining the version of the IE Trident engine using <a href=\"http://msdn.microsoft.com/en-us/library/ie/121hztk3%28v=vs.94%29.aspx\" rel=\"nofollow\">javascript conditional compilation</a>:</p>\n\n<pre><code>var ieVersion = undefined;\n/*@cc_on\n   ieVersion = Math.floor(@_jscript_version);\n@*/\n</code></pre>\n\n<p>This worked fine for IE8, 9 and 10. In IE11, the conditionally-commented block does not execute, <em>unless</em> I use the F12 dev tools to emulate IE10 (in which case it returns the correct value, 11).</p>\n\n<p>This is confusing, since the <a href=\"http://msdn.microsoft.com/en-us/library/ie/121hztk3%28v=vs.94%29.aspx\" rel=\"nofollow\">MSDN page on conditional compilation</a> <em>specifies that it applies to Internet Explorer 11</em>. (<strong>UPDATE 2015-02-03</strong>: this page has since been updated to explicitly state that its content <em>does not</em> apply to IE11 in standards mode.) I've <a href=\"https://www.google.com/search?q=ie11+javascript+conditional+compilation\" rel=\"nofollow\">not found any information online</a> to suggest that IE11 should not support conditional comments.</p>\n\n<p>Does anyone have any information about this? Can anyone reproduce this behaviour in IE11?</p>\n\n<hr>\n\n<p>Edit: the relevance of this is in IE's <code>&lt;audio&gt;</code> support. I have a web app that requires playback of around 50 short (~1sec) audio files, which should be played in a (pseudo-)random order, and individually after user interaction. The problems are various:</p>\n\n<ul>\n<li>IE9 has an undocumented limit of 41 <code>audio</code> elements (whether declared in HTML or as JS objects). All subsequent audio files silently fail to load and play. (Each of the 41 elements can have its source re-assigned, but every second re-assignment also fails silently. I would love to see the code behind these bugs...)</li>\n<li>IE10 and IE11 \"stutter\" when playing short sounds: they play a fraction of a second, then pause, then continue on. The effect to the end-user is that the audio is unintelligible. (The <code>audio</code>s have <code>preload=\"auto\"</code> and report a non-zero buffer.)</li>\n</ul>\n\n<p>Naturally there's no practical way to feature-detect these issues, hence the browser-detect. I generally feel user-agent sniffing is too dicey for production code; the <code>@cc_on</code> technique seemed more robust.</p>\n\n<p>My workaround for IE9 is to serialise the app state to <code>sessionStorage</code> after the 25th sound, then reload the page and deserialise.</p>\n\n<p>In IE10/11, my workaround is to play the last 90% of the audio at 0 volume, which seems to force IE to <em>actually</em> buffer the file.</p>\n",
            "last_activity_date": 1422915332,
            "question_id": 20392163,
            "score": 8,
            "tags": [
                "javascript",
                "internet-explorer",
                "internet-explorer-11"
            ],
            "title": "Did IE11 remove javascript conditional compilation?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The best way to convert a nest to a treemap is specifying children accessor function with <a href=\"https://github.com/mbostock/d3/wiki/Treemap-Layout#wiki-children\">Treemap.children()</a>. </p>\n\n<p>In the zoomable treemap example , it requires not only \"children\" but also \"name\" and \"size\". You can do either: </p>\n\n<p>1)change the accessor functions of those properties so that keep using \"key\" and \"value\".</p>\n\n<p>Let's change the <a href=\"http://mbostock.github.io/d3/talk/20111018/treemap.html\">source code</a>.</p>\n\n<p>1.1)line 79 &amp; 86:</p>\n\n<pre><code> .style(\"fill\", function(d) { return color(d.parent.name); });\n\n .text(function(d) { return d.name; })\n</code></pre>\n\n<p>Replace \".name\" with \".YOUR_NAME_KEY\"(i.e. \".key\")</p>\n\n<pre><code> .style(\"fill\", function(d) { return color(d.parent.YOUR_NAME_KEY); });\n\n .text(function(d) { return d.YOUR_NAME_KEY; })\n</code></pre>\n\n<p>1.2)line 47:</p>\n\n<pre><code>var treemap = d3.layout.treemap()\n.round(false)\n.size([w, h])\n.sticky(true)\n.value(function(d) { return d.size; });\n</code></pre>\n\n<p>Append a line to specify children accessor function.(i.e \".values\")</p>\n\n<pre><code>var treemap = d3.layout.treemap()\n.round(false)\n.size([w, h])\n.sticky(true)\n.value(function(d) { return d.YOUR_SIZE_KEY; })\n.children(function(d){return d.YOUR_CHILDREN_KEY});\n</code></pre>\n\n<p>1.3)line 97 &amp; 51:</p>\n\n<pre><code>function size(d) {\n  return d.size;\n}\n</code></pre>\n\n<p>Replace \".size\" with \".YOUR_SIZE_KEY\"(you didn't mention in your resulting JSON)</p>\n\n<pre><code>function size(d) {\n  return d.YOUR_SIZE_KEY;\n}\n</code></pre>\n\n<p>P.S. Maybe something omitted, you need verify it yourself.</p>\n\n<p>2)convert your JSON structure to fit the example with <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map?redirectlocale=en-US&amp;redirectslug=JavaScript/Reference/Global_Objects/Array/map\">Array.map()</a>.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>I completely agree with @Anderson that the easiest approach to this issue is to use the treemap <code>children(function)</code> and <code>.value(function)</code> methods to specify the names of the properties within the nested dataset.</p>\n\n<p>However, a <a href=\"http://stackoverflow.com/q/23345973/3128209\">duplicate question has recently been posted</a> in which the questioner specifically asks for help using an <code>Array.map</code> approach.  So here it is:</p>\n\n<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\" rel=\"nofollow\">array <code>map(function)</code> method</a> creates a new array where each element in the array is the result of running the specified function on each element of the original array.  Specifically, the function is run with up to three arguments: the element from the original array, the index of that element, and the original array as a whole.  For the purposes of manipulating the property names, we only need the first argument.</p>\n\n<p>The nested data in the original post has three levels, equivalent to the three key functions.  Therefore, we're going to need a three-level mapping function:</p>\n\n<pre><code>var treeData= { \"key\": \"World\", \"values\": \n        d3.nest()\n        .key(function (d) { return d.Major_Region; })\n        .key(function (d) { return d.Region; })\n        .key(function (d) { return d.Country; })\n        .entries(pop)\n      };\n\nvar treeData2 = { \"name\": \"World\", \"children\":\n        treeData.values.map( function(major){\n\n            return { \"name\": major.key, \"children\": \n              major.values.map( function(region){\n\n                 return { \"name\": region.key, \"children\": \n                   region.values.map(function(country){\n\n                      return { \"name\": country.key, \"children\": country.values };\n\n                   }) //end of map(function(country){\n                 };\n\n              }) //end of map(function(region){\n            }; \n\n         }) //end of map(function(major){\n      }; //end of var declaration\n</code></pre>\n\n<p>You could also probably implement this with a recursive function, which would be especially useful if you had many more levels of nesting.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Hey guys I think I found a fairly simple solution. I accomplished a very nice nesting of a large dataset (400,000 rows) for a hierarchical bar chart in a very streamline way. It utilizes the Underscore library and an additional function _.nest.\nSimply download and include the two libraries necessary </p>\n\n<p>\"underscore-min.js\"\n\"underscore.nest.js\"</p>\n\n<p>Then use the _.nest function to create your structure. Here's my line:</p>\n\n<pre><code>var newdata = _.nest(data, [\"Material\", \"StudyName\"]);\n</code></pre>\n\n<p>\"Material\" and \"StudyName\" are the columns I want to group my structure to.</p>\n\n<p>There are other options to use this function if you need to accomplish more things but I will leave it like this</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am working on creating a Treemap from a csv file.\nThe data in the csv file is hierarchical, as a result i used d3.nest().\nHowever, the resulting JSON is in the form of {key:\"United States\", values:[...]}\nThe zoomable treemap e.g (<a href=\"http://mbostock.github.io/d3/talk/20111018/treemap.html\">http://mbostock.github.io/d3/talk/20111018/treemap.html</a>)\nrequires hierarchy as {name:\"United States\", children:[...]}.\nI have tried replacing name and children to key and values in the example, but it doesnt work.\nIf anyone has already looked into using key and values on a zoomable treemap, please help. I am new to D3 and i dont know whether d.children means structure or value from the data.</p>\n\n<p>This is the code to convert World Continents, Regions, and Countries from CSV to a hierarchy using d3.</p>\n\n<p><code>$ d3.csv(\"../Data/WorldPopulation.csv\", function (pop) {\n        var treeData= { \"key\": \"World\", \"values\": d3.nest()\n        .key(function (d) { return d.Major_Region; })\n        .key(function (d) { return d.Region; })\n        .key(function (d) { return d.Country; })\n        .entries(pop)\n        };</code></p>\n\n<p>The first few lines of the result is:</p>\n\n<pre><code> `[{\"key\":\"AFRICA\",\"values\":[{\"key\":\"Eastern Africa\",\"values\"\n [{\"key\":\"Burundi\",\"values\":[.........`\n</code></pre>\n\n<p>I can not use the zoomable treemap because it requires name and children labels in json rather than key and values.</p>\n",
            "last_activity_date": 1413989129,
            "question_id": 17416186,
            "score": 8,
            "tags": [
                "javascript",
                "d3.js",
                "treemap"
            ],
            "title": "d3.nest() key and values conversion to name and children"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>How about this approach, which splits the problem into two parts:</p>\n\n<ul>\n<li>Using jQuery, it shows a decrementing counter below the <code>textarea</code>, which turns red when it hits zero but still allows the user to type.</li>\n<li>I use a separate string length validator (server and client-side) to actually prevent submission of the form if the number of chatacters in the <code>textarea</code> is greater than 160.</li>\n</ul>\n\n<p>My <code>textarea</code> has an id of <code>Message</code>, and the <code>span</code> in which I display the number of remaining characters has an id of <code>counter</code>. The css class of <code>error</code> gets applied when the number of remaining characters hits zero.</p>\n\n<pre><code>var charactersAllowed = 160;\n\n$(document).ready(function () {\n    $('#Message').keyup(function () {\n        var left = charactersAllowed - $(this).val().length;\n        if (left &lt; 0) {\n            $('#counter').addClass('error');\n            left = 0;\n        }\n        else {\n            $('#counter').removeClass('error');\n        }\n        $('#counter').text('Characters left: ' + left);\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can bind key press event with your input box and returning false if characters are more than 160 will solve the problem <a href=\"http://jsfiddle.net/r34gM/1/\">jsfiddle</a></p>\n\n<p>JS</p>\n\n<pre><code>$('textarea').keypress(function(){\n\n    if(this.value.length &gt; 160){\n        return false;\n    }\n    $(\"#remainingC\").html(\"Remaining characters : \" +(160 - this.value.length));\n});\u200b\n</code></pre>\n\n<p>HTML</p>\n\n<pre><code>&lt;textarea&gt;&lt;/textarea&gt;\u200b &lt;span id='remainingC'&gt;&lt;/span&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Just register an Eventhandler on <code>keydown</code> events and check the length of the input field on that function and write it into a separate element.</p>\n\n<p>See the <strong><a href=\"http://jsfiddle.net/poikl/AvH3Q/\" rel=\"nofollow\">demo</a></strong>.</p>\n\n<pre><code>var maxchar = 160;\nvar i = document.getElementById(\"textinput\");\nvar c = document.getElementById(\"count\");\nc.innerHTML = maxchar;\n\ni.addEventListener(\"keydown\",count);\n\nfunction count(e){\n    var len =  i.value.length;\n    if (len &gt;= maxchar){\n       e.preventDefault();\n    } else{\n       c.innerHTML = maxchar - len-1;   \n    }\n}\n\u200b\n</code></pre>\n\n<p>You should check the length on your server too, because Javascript might be disabled or the user wants to do something nasty on purpose.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try the following code for instance:</p>\n\n<p>working code in <strong><a href=\"http://jsfiddle.net/7ktFX/\" rel=\"nofollow\">jsfiddle.net</a></strong></p>\n\n<p>For textArea, use this:</p>\n\n<pre><code>&lt;textarea id=\"txtBox\"&gt;&lt;/textarea&gt;\n...\n...\n</code></pre>\n\n<p>For textBox, use this:</p>\n\n<pre><code>&lt;input type=\"text\" id=\"txtBox\"/&gt;\n&lt;br&gt;\n&lt;input type=\"text\" id=\"counterBox\"/&gt;\n&lt;script&gt;\n var txtBoxRef = document.querySelector(\"#txtBox\");\n var counterRef = document.querySelector(\"#counterBox\");\n txtBoxRef.addEventListener(\"keydown\",function(){\n  var remLength = 0;\n  remLength = 160 - parseInt(txtBoxRef.value.length);\n  if(remLength &lt; 0)\n   {\n    txtBoxRef.value = txtBoxRef.value.substring(0, 160);\n    return false;\n   }\n  counterRef.value = remLength + \" characters remaining...\";\n },true);\n&lt;/script&gt;\n</code></pre>\n\n<p>Hope this Helps!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The code in <a href=\"http://www.java-samples.com/showtutorial.php?tutorialid=733\">here</a> with a little bit of modification and simplification:</p>\n\n<pre><code>&lt;input disabled  maxlength=\"3\" size=\"3\" value=\"10\" id=\"counter\"&gt;\n&lt;textarea onkeyup=\"textCounter(this,'counter',10);\" id=\"message\"&gt;\n&lt;/textarea&gt;\n&lt;script&gt;\nfunction textCounter(field,field2,maxlimit)\n{\n var countfield = document.getElementById(field2);\n if ( field.value.length &gt; maxlimit ) {\n  field.value = field.value.substring( 0, maxlimit );\n  return false;\n } else {\n  countfield.value = maxlimit - field.value.length;\n }\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>Hope this helps!</p>\n\n<p>tip:</p>\n\n<p>When merging the codes with your page, make sure the HTML elements(<code>textarea</code>, <code>input</code>) are loaded first before the scripts (Javascript functions)</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>try this code in here...this is done using javascript onKeyUp() function...</p>\n\n<pre><code>&lt;script&gt;\nfunction toCount(entrance,exit,text,characters) {  \nvar entranceObj=document.getElementById(entrance);  \nvar exitObj=document.getElementById(exit);  \nvar length=characters - entranceObj.value.length;  \nif(length &lt;= 0) {  \nlength=0;  \ntext='&lt;span class=\"disable\"&gt; '+text+' &lt;\\/span&gt;';  \nentranceObj.value=entranceObj.value.substr(0,characters);  \n}  \nexitObj.innerHTML = text.replace(\"{CHAR}\",length);  \n}\n&lt;/script&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/4epdC/\" rel=\"nofollow\">textarea counter demo</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>This is my code:</p>\n\n<pre><code>function textCounter(field, countfield, maxlimit) {\n    if (field.value.length &gt; maxlimit) {\n        field.value = field.value.substring(0, 160);\n        field.blur();\n        field.focus();\n        return false;\n    } else {\n        countfield.value = maxlimit - field.value.length;\n    }\n}\n</code></pre>\n\n<p>How can I display how many characters are remaining from a certain text box with a limit of 160?</p>\n",
            "last_activity_date": 1423816075,
            "question_id": 12742595,
            "score": 8,
            "tags": [
                "javascript",
                "textarea"
            ],
            "title": "Show how many characters remaining in a HTML text box using JavaScript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This link could help you <a href=\"http://stackoverflow.com/questions/3948934/synchronise-scrollview-scroll-positions-android\">Synchronise ScrollView scroll positions - android</a> -- or you could check scroll position against a point at which the element resides, and do something at that point! Say, if th element was 600px from the top:</p>\n\n<pre><code>  $(window).scroll(function() {\n    if ($(window).scrollTop() &gt; 600)\n        do something like save the world;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>For those who found this question hoping to find an answer that doesn't involve jQuery, you hook into the <code>window</code> \"scroll\" event using normal event listening. Say we want to add scroll listening to a number of CSS-selector-able elements:</p>\n\n<pre><code>// what should we do when scrolling occurs\nvar runOnScroll =  function(evt) {\n  // not the most exciting thing, but a thing nonetheless\n  console.log(evt.target);\n};\n\n// grab elements as array, rather than as NodeList\nvar elements = document.querySelectorAll(\"...\");\nelements = Array.prototype.slice.call(elements);\n\n// and then make each element do something on scroll\nelements.forEach(function(element) {\n  window.addEventListener(\"scroll\", runOnScroll);\n});\n</code></pre>\n\n<p>For bonus points, you can give the scroll handler a lock mechanism so that it doesn't run if we're already scrolling:</p>\n\n<pre><code>// global lock, so put this code in a closure of some sort so you're not polluting.\nvar locked = false;\nvar runOnScroll =  function(evt) {\n  if(locked) return;\n  locked = true;\n  // ...your code goes here...\n  locked = false;\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Wont the below basic approach doesn't suffice your requirements?</p>\n\n<p>HTML Code having a div</p>\n\n<pre><code>&lt;div id=\"mydiv\" onscroll='myMethod();'&gt;\n</code></pre>\n\n<p><br>\nJS will have below code</p>\n\n<pre><code>function myMethod(){ alert(1); }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there a js listener for when a user scrolls in a certain textbox that can be used? Kinda like onclick except for scrolling. I saw <a href=\"http://stackoverflow.com/questions/5669207/html5-event-listener-for-number-input-scroll-chrome-only\">HTML5 event listener for number input scroll - Chrome only</a> but that seems to be for chrome only. I'm looking for something cross-browser.</p>\n",
            "last_activity_date": 1418238423,
            "question_id": 12522807,
            "score": 8,
            "tags": [
                "javascript"
            ],
            "title": "Scroll event listener javascript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>GWT is just the ideal framewok for that.</p>\n\n<p><a href=\"http://www.gwtproject.org/\">http://www.gwtproject.org/</a></p>\n\n<p>It allows :</p>\n\n<ul>\n<li>to code in java and all is converted to javascript</li>\n<li>to debug in java</li>\n<li>to optimize your javascript files (one javascript file per browser)</li>\n<li>add css constants, sprite, and so many other cool feature to improve your productivity ;)</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>Is there any free tool to convert java into javascript?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1397780923,
            "question_id": 9429063,
            "score": 8,
            "tags": [
                "java",
                "javascript"
            ],
            "title": "Any free tool to convert java to javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You forgot the ''</p>\n\n<pre><code>:javascript\n    $(function() {\n      window.router = new Dotz.Routers.ManageRouter({store: '#{@store.to_json}'});\n      Backbone.history.start();\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Inside a <code>&lt;script&gt;</code> block it is <a href=\"http://www.w3.org/TR/REC-html32-19970114#script\">syntactically illegal</a> to have any <code>&lt;/</code> followed by a name\u2014not just <code>&lt;/script&gt;</code>\u2014so you need to escape that anywhere it may appear. For example:</p>\n\n<pre><code>:javascript\n   var foo = { store: #{@store.to_json.gsub('&lt;/','&lt;\\/')} };\n</code></pre>\n\n<p>This will create the sequence <code>&lt;\\/</code> inside your JS strings, which is interpreted to be the  same as <code>&lt;/</code>. Ensure that you use single quotes in your gsub replacement string, or else use <code>gsub( \"&lt;/\", \"&lt;\\\\/\" )</code> due to the difference between single and double quotes in Ruby.</p>\n\n<p>Shown in action:</p>\n\n<pre><code>irb:02.0&gt; s = \"&lt;b&gt;foo&lt;/b&gt;\" # Here's a dangerous string\n#=&gt; \"&lt;b&gt;foo&lt;/b&gt;\"\n\nirb:03.0&gt; a = [s]          # Wrapped in an array, for fun.\n#=&gt; [\"&lt;b&gt;foo&lt;/b&gt;\"]\n\nirb:04.0&gt; json = a.to_json.gsub( '&lt;/', '&lt;\\/' )  # Sanitized\nirb:05.0&gt; puts json        # This is what would come out in your HTML; safe!\n#=&gt; [\"&lt;b&gt;foo&lt;\\/b&gt;\"]\n\nirb:06.0&gt; puts JSON.parse(json).first  # Same as the original? Yes! Yay!\n#=&gt; &lt;b&gt;foo&lt;/b&gt;\n</code></pre>\n\n<p>If you are using Rails (or ActiveSupport) you can enable <a href=\"http://apidock.com/rails/ActiveSupport/JSON/Encoding/escape_html_entities_in_json%3D/class\">JSON escaping</a>:</p>\n\n<pre><code>ActiveSupport::JSON::Encoding.escape_html_entities_in_json = true\n</code></pre>\n\n<p>Seen in action:</p>\n\n<pre><code>irb:02.0&gt; a = [\"&lt;b&gt;foo&lt;/b&gt;\"]\nirb:03.0&gt; puts a.to_json # Without the magic\n#=&gt; [\"&lt;b&gt;foo&lt;/b&gt;\"]\n\nirb:04.0&gt; require 'active_support'\nirb:05.0&gt; ActiveSupport::JSON::Encoding.escape_html_entities_in_json = true\nirb:06.0&gt; puts a.to_json # With the magic\n#=&gt; [\"\\u003Cb\\u003Efoo\\u003C/b\\u003E\"]\n</code></pre>\n\n<p>It produces JSON that is more verbose than you need to solve this particular problem, but it is effective.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>The magic word is:</p>\n\n<pre><code>ActiveSupport.escape_html_entities_in_json = true\n</code></pre>\n\n<p>Although marked as deprecated, this still works in current rails versions (see my <code>rails c</code>):</p>\n\n<pre><code>ruby-1.9.3-head :001 &gt; ::Rails.version\n =&gt; \"3.2.1\" \nruby-1.9.3-head :002 &gt; [\"&lt;&gt;\"].to_json\n =&gt; \"[\\\"&lt;&gt;\\\"]\" \nruby-1.9.3-head :003 &gt; ActiveSupport.escape_html_entities_in_json = true\n =&gt; true \nruby-1.9.3-head :004 &gt; [\"&lt;&gt;\"].to_json\n =&gt; \"[\\\"\\\\u003C\\\\u003E\\\"]\" \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I'm using backbone, and the general way for passing the collections when the page load is</p>\n\n<pre><code>window.router = new Routers.ManageRouter({store: #{@store.to_json});\n</code></pre>\n\n<p>which is fine and works well, until someone decides to add the text \"<code>&lt;script&gt;alert(\"owned\")&lt;/script&gt;</code>\" to one of the store fields. the last <code>&lt;/script&gt;</code> obviously closes the javascript. How can this be circumvented?</p>\n\n<pre><code>  :javascript\n    $(function() {\n      window.router = new Dotz.Routers.ManageRouter({store: #{@store.to_json}});\n      Backbone.history.start();\n    });\n</code></pre>\n\n<p><strong>The above outputs:</strong></p>\n\n<pre><code>&lt;script&gt;\n    //&lt;![CDATA[\n      $(function() {\n        window.router = new Dotz.Routers.ManageRouter({store: '{\"_id\":\"4f3300e19c2ee41d9a00001c\", \"points_text\":\"&lt;script&gt;alert(\\\"hey\\\");&lt;/script&gt;\"'});\n        Backbone.history.start();\n      });\n    //]]&gt;\n  &lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1329129833,
            "question_id": 9246382,
            "score": 8,
            "tags": [
                "javascript",
                "ruby-on-rails",
                "ruby",
                "backbone.js",
                "haml"
            ],
            "title": "Escaping &lt;/script&gt; tag inside javascript"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>This will do it:</p>\n\n<pre><code>for(var i = 1; i &lt;= 100; i++) {\n    eval(\"variable_\" + i + \" = \" + i + \";\");\n}\n</code></pre>\n\n<p><code>eval</code> is basically evil, but for such purpose it's OK to use it. (<a href=\"http://stackoverflow.com/questions/197769/when-is-javascripts-eval-not-evil\">reference</a>)</p>\n\n<p><a href=\"http://jsfiddle.net/U9HME/\">Live test case</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here are a few methods:</p>\n\n<h2>Method 1: use eval</h2>\n\n<p>Here is the most direct method:</p>\n\n<pre><code>for(var i = 1; i &lt;= 100; i++) {\n  eval(\"var variable_\" + i + \" = \" + i);\n}\nvariable_1; // =&gt; 1\n</code></pre>\n\n<p><strong>Disclaimer for the above method</strong>: I don't think this problem is a good candidate for using <code>eval</code>. If you <em>do</em> use <code>eval</code>, you should never allow user input to go into what you are <code>eval</code>ing, or you could open your site to security risks. That mistake is the main reason people say <code>eval</code> is evil.</p>\n\n<h2>Method 2: use dynamically generated object properties</h2>\n\n<p>This is a <em>much, much</em> better way:</p>\n\n<pre><code>// If you want these variables to be global, then use `window` (if you're \n// in a browser) instead of your own object.\nvar obj = {};\nfor(var i = 1; i &lt;= 100; i++) {\n  obj[\"variable_\" + i] = i;\n}\nobj.variable_1; // =&gt; 1\n</code></pre>\n\n<p>About the note in the comment about using window to create global variables: I would recommend against this, as it is a quick way to pollute your global scope and step on variables unwittingly.</p>\n\n<h2>Method 3: use an array</h2>\n\n<p>David suggested using an array. This is another great idea, and, depending on what you are trying to do, may be preferred:</p>\n\n<pre><code>var arr = [];\nfor(var i = 1; i &lt;= 100; i++) {\n  arr.push(i);\n}\narr[0]; // =&gt; 1\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>If it is like that why not to define array of the objects </p>\n\n<pre><code>var a = new Array();\nfor(i=0;i&lt;100;i+=)\n a[i] = i;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Use an array:</p>\n\n<pre><code>var variable = [];\n\nfor(var i = 1; i &lt;= 100; i++) {\n    variable[i] = i;\n}\n</code></pre>\n\n<p>By way of analogy, you'd want to use an array instead of 100 variables for the same reason you'd want</p>\n\n<pre><code>&lt;div class=\"variable\"&gt;&lt;/div&gt;\n&lt;div class=\"variable\"&gt;&lt;/div&gt;\n&lt;div class=\"variable\"&gt;&lt;/div&gt;\n//and so on\n</code></pre>\n\n<p>instead of</p>\n\n<pre><code>&lt;div id=\"variable_1\"&gt;&lt;/div&gt;\n&lt;div id=\"variable_2\"&gt;&lt;/div&gt;\n&lt;div id=\"variable_3\"&gt;&lt;/div&gt;\n//and so on\n&lt;div id=\"variable_100\"&gt;&lt;/div&gt;\n</code></pre>\n\n<hr/>\n\n<pre><code>Invalid left-hand side in assignment\n</code></pre>\n\n<p>This error gets generated because <code>variable_ + i</code> is an expression.  The interpreter thinks you are trying to add two variables instead of concatenating a variable name and a string.  An expression cannot be on the left-hand side of an assignment operation.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You are better off using an array</p>\n\n<pre><code>var variable = [];\nfor (var i=1; i &lt;= 100; i++) {\n  variable[i] = i;\n}\n</code></pre>\n\n<p>Later, you can access the values using variable[1], variable[2] etc.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>for(var i = 1; i &lt;= 100; i++) {\n    window[\"variable_\" + i] = i;\n}\n\nalert( variable_50 );\n\nalert( variable_34 );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Why not using an array instead like this?</p>\n\n<pre><code>&lt;script language=\"javascript\"&gt;\nvar arrayVar = new Array();\n\nfor (var i=0; i&lt;100; i++) {\n    arrayVar[\"variable_\" + i] = i;\n}\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Is there a shortcut for writing the following 100 assignments?</p>\n\n<pre><code>variable_1 = 1;\nvariable_2 = 2;\nvariable_3 = 3;\n\n...\n\nvariable_100 = 100;\n</code></pre>\n\n<p>I have tried</p>\n\n<pre><code>for(var i = 1; i &lt;= 100; i++) {\n    variable_ + i = i;\n}\n</code></pre>\n\n<p>but I get the error message \"Invalid left-hand side in assignment\". Any ideas?</p>\n",
            "last_activity_date": 1360085788,
            "question_id": 8525221,
            "score": 8,
            "tags": [
                "javascript"
            ],
            "title": "Programmatically setting the name of a variable"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I suppose if you wanted to do this you could simply do:</p>\n\n<pre><code>var spans = $(\"span[class='a']\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>$('.a').not('.b, .c')\n</code></pre>\n\n<p>This will select all elements with class <code>a</code> that do not have <code>b</code> or <code>c</code>. However, they could still have class <code>d</code>, <code>e</code>, etc. Use Phil's answer if you really only want elements with no class other than <code>a</code>.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>A hacky way to do this is use the <code>[class=\"a\"]</code> \"attribute equals selector\":</p>\n\n<pre><code>$('span[class=\"a\"]').hide();\n</code></pre>\n\n<p>The problem with this is that if you have any whitespace in your class attribute, [it will break.  See this fiddle: <a href=\"http://jsfiddle.net/c7DP7/\">http://jsfiddle.net/c7DP7/</a></p>\n\n<p>You could do a basic query on those items using the class selector, then further filter them by a custom filter function that trims whitespace, and ensures they're exactly <code>a</code>.  See this fiddle: <a href=\"http://jsfiddle.net/uD48E/1/\">http://jsfiddle.net/uD48E/1/</a></p>\n\n<pre><code>$('.a')\n    .filter(function(index){\n        return $(this).attr(\"class\").trim() == \"a\";\n    })\n    .hide();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>For example, say I have the following:  </p>\n\n<pre><code>&lt;span class=\"a b c\"&gt;Has class a, b, and c&lt;/span&gt;  \n&lt;span class=\"a\"&gt;Has class a&lt;/span&gt;  \n&lt;span class=\"b c\"&gt;Has class b and c&lt;/span&gt; \n&lt;span class=\"a c\"&gt;Has class a and c&lt;/span&gt; \n&lt;span class=\"a c\"&gt;Has class a and c&lt;/span&gt; \n&lt;span class=\"a\"&gt;Has class a&lt;/span&gt;\n</code></pre>\n\n<p>Now, suppose I want to select all elements that have <b>only</b> class a.<br>\nMeaning only the second and last <code>span</code>s would get selected.<br>\nIs there a simple way to do this?</p>\n",
            "last_activity_date": 1323900435,
            "question_id": 8512111,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "jquery-selectors"
            ],
            "title": "jQuery: Is it possible to select elements with only one class from among elements with, potentially, up to 3 classes?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Use a custom event, attach handlers to the custom event that fire before/after the remove.  For example,</p>\n\n<pre><code>$( document ).bind( 'remove', function( event, dom ){\n\n    $( document ).trigger( 'beforeRemove', [ dom ] );\n    $( dom ).remove();\n    $( document ).trigger( 'afterRemove', [ dom ] );\n});\n\n$( document ).trigger( 'remove', 'p' ); //Remove all p's\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>you can use <a href=\"http://api.jquery.com/jQuery.when/\">jQuery.when()</a>:</p>\n\n<pre><code>$.when($('div').remove()).then( console.log('div removed') );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>Is there an official way to hook in to jQuery.remove() so that a function can be called before/after?</p>\n\n<p>I have a system whereby certain handlers are attached to elements, and sometimes these elements are removed (eg. a UI widget whose primary element is removed by some other action on the page). If handlers could be notified that their primary element was removed, I can run cleanup routines a little easier.</p>\n",
            "last_activity_date": 1377082205,
            "question_id": 7594817,
            "score": 8,
            "tags": [
                "javascript",
                "callback",
                "jquery"
            ],
            "title": "jQuery remove() callback?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Presumably you would iterate over one object and copy its property names to a new object and values to arrays assigned to those properties. Iterate over subsequent objects, adding properties and arrays if they don't already exist or adding their values to existing properties and arrays.</p>\n\n<p>e.g.</p>\n\n<pre><code>function mergeObjects(a, b, c) {\n  c = c || {};\n  var p;\n\n  for (p in a) {\n    if (a.hasOwnProperty(p)) {\n      if (c.hasOwnProperty(p)) {\n        c[p].push(a[p]);\n      } else {\n        c[p] = [a[p]];\n      }\n    }\n  }\n  for (p in b) {\n    if (b.hasOwnProperty(p)) {\n      if (c.hasOwnProperty(p)) {\n        c[p].push(b[p]);\n      } else {\n        c[p] = [b[p]];\n      }\n    }\n  }\n  return c;\n}\n</code></pre>\n\n<p>You could modify it to handle any number of objects by iterating over the arguments supplied, but that would make passing the object to merge into more difficult.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This ought to do what you're looking for. It will recursively merge arbitrarily deep objects into arrays.</p>\n\n<pre><code>// deepmerge by Zachary Murray (dremelofdeath) CC-BY-SA 3.0\nfunction deepmerge(foo, bar) {\n  var merged = {};\n  for (var each in bar) {\n    if (foo.hasOwnProperty(each) &amp;&amp; bar.hasOwnProperty(each)) {\n      if (typeof(foo[each]) == \"object\" &amp;&amp; typeof(bar[each]) == \"object\") {\n        merged[each] = deepmerge(foo[each], bar[each]);\n      } else {\n        merged[each] = [foo[each], bar[each]];\n      }\n    } else if(bar.hasOwnProperty(each)) {\n      merged[each] = bar[each];\n    }\n  }\n  for (var each in foo) {\n    if (!(each in bar) &amp;&amp; foo.hasOwnProperty(each)) {\n      merged[each] = foo[each];\n    }\n  }\n  return merged;\n}\n</code></pre>\n\n<p>And this one will do the same, except that the merged object will include copies of inherited properties. This probably isn't what you're looking for (as per RobG's comments below), but if that is actually what you are looking for, then here it is:</p>\n\n<pre><code>// deepmerge_inh by Zachary Murray (dremelofdeath) CC-BY-SA 3.0\nfunction deepmerge_inh(foo, bar) {\n  var merged = {};\n  for (var each in bar) {\n    if (each in foo) {\n      if (typeof(foo[each]) == \"object\" &amp;&amp; typeof(bar[each]) == \"object\") {\n        merged[each] = deepmerge(foo[each], bar[each]);\n      } else {\n        merged[each] = [foo[each], bar[each]];\n      }\n    } else {\n      merged[each] = bar[each];\n    }\n  }\n  for (var each in foo) {\n    if (!(each in bar)) {\n      merged[each] = foo[each];\n    }\n  }\n  return merged;\n}\n</code></pre>\n\n<p>I tried it out with your example on <a href=\"http://jsconsole.com\" rel=\"nofollow\">http://jsconsole.com</a>, and it worked fine:</p>\n\n<pre><code>deepmerge(foo, bar)\n{\"a\": [1, 3], \"b\": [2, 4]}\nbar\n{\"a\": 3, \"b\": 4}\nfoo\n{\"a\": 1, \"b\": 2}\n</code></pre>\n\n<p>Slightly more complicated objects worked as well:</p>\n\n<pre><code>deepmerge(as, po)\n{\"a\": [\"asdf\", \"poui\"], \"b\": 4, \"c\": {\"q\": [1, 444], \"w\": [function () {return 5;}, function () {return 1123;}]}, \"o\": {\"b\": {\"t\": \"cats\"}, \"q\": 7}, \"p\": 764}\npo\n{\"a\": \"poui\", \"c\": {\"q\": 444, \"w\": function () {return 1123;}}, \"o\": {\"b\": {\"t\": \"cats\"}, \"q\": 7}, \"p\": 764}\nas\n{\"a\": \"asdf\", \"b\": 4, \"c\": {\"q\": 1, \"w\": function () {return 5;}}}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>Suppose you have two objects: </p>\n\n<pre><code>var foo = {\n    a : 1,\n    b : 2\n};\n\nvar bar = {\n    a : 3,\n    b : 4\n}\n</code></pre>\n\n<p>What's the best way to merge them (and allow deep merging) to create this:</p>\n\n<pre><code>var foobar = {\n    a : [1, 3],\n    b : [2, 4]\n}\n</code></pre>\n\n<p><em>Edit for question clarification:</em> Ideally, in the case of an existing property in one and not the other, I would expect an array to still be created, for normalization purposes and to allow for further reduction of the map, however the answers I'm seeing below are more than sufficient. For the purposes of this exercise, I was only looking for string or numerical merges, so I hadn't entertained every possible situational case. If you held a gun to my head and asked me to make a choice, though, I'd say default to arrays. </p>\n\n<p>Thanks all for your contributions.</p>\n",
            "last_activity_date": 1317030846,
            "question_id": 7549574,
            "score": 8,
            "tags": [
                "javascript",
                "merge",
                "extend",
                "deep-copy"
            ],
            "title": "Merge JS objects without overwriting"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I think this example could help you to clarify the usefulness of the <strong>Module Pattern</strong>.</p>\n\n<h2>Module Pattern</h2>\n\n<blockquote>\n  <p>The module pattern is widely used because it provides structure and helps organize\n  your code as it grows. Unlike other languages, JavaScript doesn\u2019t have special syntax\n  for packages, but the module pattern provides the tools to create self-contained decoupled\n  pieces of code, which can be treated as black boxes of functionality and added,\n  replaced, or removed according to the (ever-changing) requirements of the software\n  you\u2019re writing.</p>\n</blockquote>\n\n<p>The module pattern is a combination of several patterns, namely:</p>\n\n<ul>\n<li>Namespaces</li>\n<li>Immediate functions</li>\n<li>Private and privileged members</li>\n<li>Declaring dependencies</li>\n</ul>\n\n<p>The first step is setting up a namespace. Let\u2019s use the <strong>namespace()</strong> function from earlier\nin this chapter and start an example utility module that provides useful array methods:</p>\n\n<pre><code>MYAPP.namespace('MYAPP.utilities.array');\n</code></pre>\n\n<p>The next step is defining the module. The pattern uses an immediate function that will\nprovide private scope if privacy is needed. The immediate function returns an object - the actual module with its public interface, which will be available to the consumers of\nthe module:</p>\n\n<pre><code> MYAPP.utilities.array = (function () {\n    return {\n    // todo...\n    };\n }());\n</code></pre>\n\n<p>Next, let\u2019s add some methods to the public interface:</p>\n\n<pre><code>MYAPP.utilities.array = (function () {\n   return {\n      inArray: function (needle, haystack) {\n         // ...\n      },\n      isArray: function (a) {\n         // ...\n      }\n   };\n}());\n</code></pre>\n\n<p>Using the private scope provided by the immediate function, you can declare some\nprivate properties and methods as needed. Right at the top of the immediate function\nwill also be the place to declare any dependencies your module might have. Following\nthe variable declarations, you can optionally place any one-off initialization code that\nhelps set up the module. The final result is an object returned by the immediate function\nthat contains the public API of your module:</p>\n\n<pre><code>MYAPP.namespace('MYAPP.utilities.array');\nMYAPP.utilities.array = (function () {\n   // dependencies\n   var uobj = MYAPP.utilities.object,\n       ulang = MYAPP.utilities.lang,\n       // private properties\n       array_string = \"[object Array]\",\n       ops = Object.prototype.toString;\n       // private methods\n       // ...\n       // end var\n   // optionally one-time init procedures\n   // ...\n   // public API\n   return {\n      inArray: function (needle, haystack) {\n         for (var i = 0, max = haystack.length; i &lt; max; i += 1) {\n            if (haystack[i] === needle) {\n               return true;\n            }\n         }\n      },\n      isArray: function (a) {\n         return ops.call(a) === array_string;\n      }\n      // ... more methods and properties\n   };\n}());\n</code></pre>\n\n<p>The module pattern is a widely used and highly recommended way to <strong>organize</strong> your\ncode, especially as it grows.</p>\n\n<p><em>\u201cJavaScript Patterns, by Stoyan Stefanov\n(O\u2019Reilly). Copyright 2010 Yahoo!, Inc., 9780596806750</em></p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Not sure why no one's answered this one properly. I can see potential for using auto-invoking functions in some kind of pattern meant to make private vars inheritable, but you're absolutely right. </p>\n\n<p>There is no benefit to using the module pattern in place of a core language function constructor. It's the same exact language mechanic (closures) that allows the persistent internal vars to exist as non-accessible entities only with more code.</p>\n\n<p>In JS a function constructor follows the same rules of scope as a fired function. Scope and closure is set at point of definition. The reason the internal var from a function constructor lives on is because the instance with methods defined inside the same constructor referencing that var lives on.</p>\n\n<p>The only thing that changes is that you've eliminated the use of prototyped methods on the constructor and have to jury-rig your own inheritance mechanism for inherited methods.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I've read a lot of things about the <strong>module</strong> pattern.\nOk It brings structure, private method, etc... \nBut with the code below I can get the same behavior without using it.</p>\n\n<pre><code>function Human()\n{\n  // private properties\n  var _name='';\n  var _age=0;\n\n\n  // private methods\n  function created()\n  {\n    console.log(\"Human \"+_name+\" called\");\n  };\n\n  // public\n  this.setName = function(name){\n    _name=name;\n    created(); \n  };\n\n}\n\n\nvar h1 = new Human();\n\nh1.setName(\"John\");\n</code></pre>\n\n<p>So, what are the real advantage of a module pattern finally ?</p>\n",
            "last_activity_date": 1361651120,
            "question_id": 7471349,
            "score": 8,
            "tags": [
                "javascript",
                "design-patterns"
            ],
            "title": "why module pattern?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You should redefine <code>_extractParameters</code> function in <code>Backbone.Router</code>. Then all router functions will be invoked with the first parameter being <code>params</code> object.</p>\n\n<pre><code>// Backbone Router with a custom parameter extractor\nvar Router = Backbone.Router.extend({\n    routes: {\n        'dashboard/:country/:city/?:params': 'whereAmIActually',\n        'dashboard/?:params': 'whereAmI'\n    },\n    whereAmIActually: function(params, country, city){\n        console.log('whereAmIActually');\n        console.log(arguments);\n    },\n    whereAmI: function(params){\n        console.log('whereAmI');\n        console.log(arguments);\n    },\n    _extractParameters: function(route, fragment) {\n        var result = route.exec(fragment).slice(1);\n        result.unshift(deparam(result[result.length-1]));\n        return result.slice(0,-1);\n    }\n});\n\n// simplified $.deparam analog\nvar deparam = function(paramString){\n    var result = {};\n    if( ! paramString){\n        return result;\n    }\n    $.each(paramString.split('&amp;'), function(index, value){\n        if(value){\n            var param = value.split('=');\n            result[param[0]] = param[1];\n        }\n    });\n    return result;\n};\n\nvar router = new Router;\nBackbone.history.start();\n\n// this call assumes that the url has been changed\nBackbone.history.loadUrl('dashboard/?planet=earth&amp;system=solar');\nBackbone.history.loadUrl('dashboard/usa/la/?planet=earth&amp;system=solar');\n</code></pre>\n\n<p>The working demo is <a href=\"http://jsfiddle.net/avrelian/h5wL2/\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I want to pass key value pairs as params to Backbone routes and want it to be deserialized to a javascript object before the mapped function is called. </p>\n\n<pre><code>var MyRouter = Backbone.Router.extend({\n  routes: {\n    \"dashboard?:params\" : \"show_dashboard\"\n  },\n  show_dashboard: function(params){\n     console.log(params); \n  }\n}); \n</code></pre>\n\n<p>When I go to \"http://...#dashboard?key1=val1&amp;key2=val2\", then {key1: \"val1\", key2: \"val2\"} should be printed on the console.</p>\n\n<p>Am currently using jQuery BBQ's $.deparam method inside each mapped function to get at the deserialized object. It would be nice if I can extend Router and define it just once so params is accessible inside all mapped functions as an object. What would be a clean way to do this? And are there some pitfalls in this??</p>\n\n<p>Much thanks,</p>\n\n<p>mano </p>\n",
            "last_activity_date": 1321629738,
            "question_id": 7445353,
            "score": 8,
            "tags": [
                "javascript",
                "backbone.js",
                "params",
                "query-parameters"
            ],
            "title": "Key value pair params handling in Backbone.js Router"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Google is your friend - there are many tutorials in this field, for example: \n<a href=\"http://html5.litten.com/graphing-data-in-the-html5-canvas-element-part-iv-simple-pie-charts/\" rel=\"nofollow\">http://html5.litten.com/graphing-data-in-the-html5-canvas-element-part-iv-simple-pie-charts/</a></p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Even after searching Google and triple-checking my radians values, etc. I was <strong>still</strong> having trouble with this, so I have created a <a href=\"http://jsfiddle.net/hvYkM/1/\" rel=\"nofollow\">jsFiddle</a> for people to play with as a live example and will post the code below as well.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var canvas = document.getElementById(\"can\");\r\nvar ctx = canvas.getContext(\"2d\");\r\nvar lastend = 0;\r\nvar data = [200, 60, 15]; // If you add more data values make sure you add more colors\r\nvar myTotal = 0; // Automatically calculated so don't touch\r\nvar myColor = ['red', 'green', 'blue']; // Colors of each slice\r\n\r\nfor (var e = 0; e &lt; data.length; e++) {\r\n  myTotal += data[e];\r\n}\r\n\r\nfor (var i = 0; i &lt; data.length; i++) {\r\n  ctx.fillStyle = myColor[i];\r\n  ctx.beginPath();\r\n  ctx.moveTo(canvas.width / 2, canvas.height / 2);\r\n  // Arc Parameters: x, y, radius, startingAngle (radians), endingAngle (radians), antiClockwise (boolean)\r\n  ctx.arc(canvas.width / 2, canvas.height / 2, canvas.height / 2, lastend, lastend + (Math.PI * 2 * (data[i] / myTotal)), false);\r\n  ctx.lineTo(canvas.width / 2, canvas.height / 2);\r\n  ctx.fill();\r\n  lastend += Math.PI * 2 * (data[i] / myTotal);\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;canvas id=\"can\" width=\"200\" height=\"200\" /&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I'm attempting to create a simple pie chart like shown in the graphic below:</p>\n\n<p><img src=\"http://i.stack.imgur.com/dwMB0.png\" alt=\"enter image description here\"></p>\n\n<p>The chart will show the results for a quiz where a user can choose either a, b or c. They're 10 questions and the user can only choose one option per question.</p>\n\n<p>What I want to do is show the pie chart with each segment being a percentage of 100% by passing in the values for either a,b, or c.</p>\n\n<p>I have the following so far:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var greenOne = \"#95B524\";\r\nvar greenTwo = \"#AFCC4C\";\r\nvar greenThree = \"#C1DD54\";\r\n\r\nfunction CreatePieChart() {\r\n  var chart = document.getElementById('piechart');\r\n  var canvas = chart.getContext('2d');\r\n  canvas.clearRect(0, 0, chart.width, chart.height);\r\n\r\n  var total = 100;\r\n\r\n  var a = 3;\r\n  var b = 4;\r\n  var c = 3;\r\n\r\n  for (var i = 0; i &lt; 3; i++) {\r\n    canvas.fillStyle = \"#95B524\";\r\n    canvas.beginPath();\r\n    canvas.strokeStyle = \"#fff\";\r\n    canvas.lineWidth = 3;\r\n    canvas.arc(100, 100, 100, 0, Math.PI * 2, true);\r\n    canvas.closePath();\r\n    canvas.stroke();\r\n    canvas.fill();\r\n  }\r\n}\r\nCreatePieChart();</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;canvas id=\"piechart\" width=\"200\" height=\"200\"&gt;&lt;/canvas&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>The colors are specific to the size of the segment, so green one is used for the largest and green three for the smallest.</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1413403884,
            "question_id": 6995797,
            "score": 8,
            "tags": [
                "javascript",
                "canvas"
            ],
            "title": "HTML5 Canvas pie chart"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Not defined by the standard, no. <a href=\"http://es5.github.com/#x7.3\">Section 7.3</a> defines line terminators for the source code of a JavaScript program (there are four), but nothing related to the platform's definition of a line terminator for text.</p>\n\n<p>If you're talking about non-browser environments (shell scripts, server-based JavaScript, etc.), I'd look at the documentation for the environment in which you're running (NodeJS, Rhino, etc.), which will hopefully have that kind of environmental info for you. (In Rhino, of course, you can just use Java's.)</p>\n\n<p>If you're talking about browser-based environments, <em>by and large</em>, <code>\\n</code> is used, but it's that \"by and large\" that can bite you. :-) Some browsers will even convert line endings, such as in a <code>textarea</code>, before JavaScript even sees them. For instance, the raw version of <a href=\"http://jsbin.com/amodek\">this page</a> has no carriage returns in it at all. And yet, if you run that page in Internet Explorer, note that it says it found <code>\\r</code> characters in the text area's value. Not so Chrome or Firefox (even when running on Windows), but Opera adds them too (even when running on *nix). So on browsers, I tend to \"normalize\" line endings when accessing multi-line field values, via <code>str = str.replace(/(?:\\r\\n|\\r)+/g, \"\\n\");</code>, just in case. (That assumes that <code>\\r</code>, both on its own and when followed by <code>\\n</code>, should be a line break; older Macs used <code>\\r</code> on its own.)</p>\n\n<p>Continuing with the browser side of things, since different browsers do different things even on the same OS, is there any way to know what they use? Why, yes there is, you can find out with a sneaky trick:</p>\n\n<pre><code>function getLineBreakSequence() {\n    var div, ta, text;\n\n    div = document.createElement(\"div\");\n    div.innerHTML = \"&lt;textarea&gt;one\\ntwo&lt;/textarea&gt;\";\n    ta = div.firstChild;\n    text = ta.value;\n    return text.indexOf(\"\\r\") &gt;= 0 ? \"\\r\\n\" : \"\\n\";\n}\n</code></pre>\n\n<p>This works because the browsers that use <code>\\r\\n</code> <em>convert</em> the <code>\\n</code> on-the-fly when parsing the HTML string. Here's a <a href=\"http://jsbin.com/aruzuz\">live running copy</a> you can try for yourself with your favorite browser(s).</p>\n\n<hr>\n\n<p><strong>Update</strong>: Ah, you're using NodeJS. Sadly, like you, I don't see anything at all about this in the NodeJS docs. NodeJS is very closely tied to C/C++, and in C/C++, you use <code>\\n</code> for linebreak regardless of the OS&nbsp;&mdash; on streams opened in text mode it gets converted to the OS-specific version on the fly (both read and write). But I don't see any support for text-mode file streams in NodeJS. The <code>fs.open</code> function doesn't document the <code>b</code> flag from <code>fopen</code> (which is otherwise where it got that flags syntax), and if you look at the source, it <a href=\"https://github.com/joyent/node/blob/master/src/node_file.cc\">sets <code>_fmode</code> to <code>_O_BINARY</code></a> on MinGW. All of which leads me to suspect that files are only ever in binary mode. <a href=\"https://github.com/joyent/node/blob/master/lib/console.js\"><code>console.log</code>'s implementation</a> uses <code>\\n</code> for newline, for what that's worth.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Some browsers use <code>\\n</code> and some use <code>\\r\\n</code>. If you want to split the text on newlines just use this: </p>\n\n<pre><code>lines = foo.value.split(/\\r\\n|\\r|\\n/);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Nope. There are linefeed (\\n) and carriage return (\\r) characters in RegExp, but there is no such a thing like \"line.separator\" property. If we are talking about clientside js.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is best answered on ... wait for it ... StackOverflow! Where the question includes one function to determine line break character, and the answer linked here provides a way to detect platform, and then deduce platform sensitive line break character for use within pre or textarea.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/6148393/in-the-browser-how-does-one-determine-which-flavour-of-line-breaks-is-appropriat/6148447#6148447\">In the browser, how does one determine which flavour of line breaks is appropriate to the OS?</a></p>\n\n<p>Also, you can find a good explanation of how outside a pre and textarea, JavaScipt converts all line separators to <code>\\n</code> here: <a href=\"http://www.bennadel.com/blog/161-Ask-Ben-Javascript-Replace-And-Multiple-Lines-Line-Breaks.htm\" rel=\"nofollow\">http://www.bennadel.com/blog/161-Ask-Ben-Javascript-Replace-And-Multiple-Lines-Line-Breaks.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had the same problem and came across this quite old question. After investing for some time I finally found <code>os.EOL</code> at the very end of the <a href=\"http://nodejs.org/api/os.html#os_os_eol\">os</a> documentation.</p>\n\n<pre><code>var os = require('os')\nconsole.log(JSON.stringify(os.EOL)) // prints \"\\n\" on my Mac\n</code></pre>\n\n<p><code>JSON.stringify</code> is in this case important, otherwise you would only see a blank line in the console (which makes sense because that's what it should do). In an normal use case it is not needed.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>This did it for me (though I stumbled onto this question first).</p>\n\n<p><a href=\"http://stackoverflow.com/questions/6833269/javascript-platform-independent-line-separator/6833299#6833299\">JavaScript Platform Independent Line separator</a></p>\n\n<pre><code>function getLineBreakSequence() {\n    var div, ta, text;\n\n    div = document.createElement(\"div\");\n    div.innerHTML = \"&lt;textarea&gt;one\\ntwo&lt;/textarea&gt;\";\n    ta = div.firstChild;\n    text = ta.value;\n    return text.indexOf(\"\\r\") &gt;= 0 ? \"\\r\\n\" : \"\\n\";\n}\n</code></pre>\n\n<p>The question there is focused on Node.js use, but that answer describes the cross browser and cross platform situation well.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Does something similar to Java's <code>System.getProperty(\"line.separator\");</code> exist in JavaScript? </p>\n\n<p>Edit: I am using the non-browser JavaScript environment Node.js</p>\n",
            "last_activity_date": 1389216138,
            "question_id": 6833269,
            "score": 8,
            "tags": [
                "javascript"
            ],
            "title": "JavaScript Platform Independent Line separator"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<blockquote>\n  <p><em>\"REST is an architectural style in which every resource is addressed by using a unique URI.\"</em>\n  <a href=\"http://msdn.microsoft.com/en-us/library/gg334279.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/gg334279.aspx</a></p>\n</blockquote>\n\n<p>You will not be able to use the REST end-point if you need to use FetchXml.</p>\n\n<p>The alternative is to construct a SOAP message as you saw in your CRM4 examples. I haven't done this myself yet, but perhaps you could use a tool like Fiddler to see what the SOAP message look like so you can replicate them in your environment which your modified FetchXml. </p>\n\n<p>Anyway, just an idea for now. Let me know how it goes, and if you manage to resolve it perhaps post your solution.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The \"Capture Sample HTTP Request and Response\" section of <a href=\"http://msdn.microsoft.com/en-us/library/gg594434.aspx\" rel=\"nofollow\">this MSDN article</a> outlines how to get a SOAP message that is sent to CRM 2011 from managed code.</p>\n\n<p>The \"Execute the Query\" section of <a href=\"http://msdn.microsoft.com/en-us/library/gg328117.aspx\" rel=\"nofollow\">this MSDN article</a> gives an example of using 2011's IOrganizationService.RetrieveMultiple in managed code to execute a FetchXML query.</p>\n\n<p>Using both of these samples, you can extract a sample SOAP message for RetrieveMultiple that contains a FetchXML query.</p>\n\n<p>The \"Create a JScript Library\" section of <a href=\"http://msdn.microsoft.com/en-us/library/gg594434.aspx\" rel=\"nofollow\">the first MSDN article</a> shows how to perform an Execute request in JavaScript against the 2011 SOAP endpoint.  Replace the Assign SOAP request in this example with the RetrieveMultiple SOAP message that you get from executing the managed code.</p>\n\n<p>This enables you to execute a FetchXML request in JavaScript against the 2011 SOAP endpoint.</p>\n\n<p>Here are some snippets from a JavaScript library I wrote using the information above:</p>\n\n<pre><code>(function (window, undefined) {\n    var _window = undefined;\n\n    if (window.Xrm)\n        _window = window;\n    else if (window.parent.Xrm)\n        _window = window.parent;\n    else throw new Error(\"Unable to determine proper window\");\n\n    (function (Crm) {\n        (function (Service, $, JSON, Xrm) {\n            if (!Xrm)\n                throw new Error(\"Unable to locate Xrm\");\n            if (!JSON)\n                throw new Error(\"Unable to locate JSON\");\n            if (!$)\n                throw new Error(\"Unable to locate jQuery\");\n\n            Service.Create = function (ODataSetName, EntityObject) {\n                if (!EntityObject) {\n                    throw new Error(\"EntityObject is a required parameter\");\n                    return;\n                }\n                if (!ODataSetName) {\n                    throw new Error(\"ODataSetName is a required parameter\");\n                    return;\n                }\n                var jsonEntityObject = JSON.stringify(EntityObject);\n\n                var req = new XMLHttpRequest();\n                req.open(\"POST\", Service.GetODataEndPoint() + \"/\" + ODataSetName, false);\n                req.setRequestHeader(\"Accept\", \"application/json\");\n                req.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n                req.onreadystatechange = function () {\n                    debuggingCallBack(this);\n                };\n\n                req.send(jsonEntityObject);\n\n            };\n            function debuggingCallBack(req) {\n                if (req.readyState == 4 /* complete */) {\n                    if (req.status == 201 || req.status == 204 || req.status == 1223) {\n                        //Success\n                        //201 = create\n                        //204 = update\n                        //1223 = delete\n                    }\n                    else {\n                        //Failure\n                        debugger;\n                    }\n                }\n            };\n\n\n            Service.Fetch = function (FetchXML) {\n                var request = \"&lt;?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?&gt;\";\n                request += \"&lt;s:Envelope xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"&gt;\";\n                request += \"&lt;s:Body&gt;\";\n                request += \"&lt;RetrieveMultiple xmlns=\\\"http://schemas.microsoft.com/xrm/2011/Contracts/Services\\\" xmlns:i=\\\"http://www.w3.org/2001/XMLSchema-instance\\\"&gt;\";\n                request += \"&lt;query i:type=\\\"a:FetchExpression\\\" xmlns:a=\\\"http://schemas.microsoft.com/xrm/2011/Contracts\\\"&gt;\";\n                request += \"&lt;a:Query&gt;\";\n                request += Service.FetchEncode(FetchXML);\n                request += \"&lt;/a:Query&gt;\";\n                request += \"&lt;/query&gt;\";\n                request += \"&lt;/RetrieveMultiple&gt;\";\n                request += \"&lt;/s:Body&gt;\";\n                request += \"&lt;/s:Envelope&gt;\";\n\n                var req = new XMLHttpRequest();\n                req.open(\"POST\", Service.GetSOAPEndPoint(), false)\n                req.setRequestHeader(\"SOAPAction\", \"http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/RetrieveMultiple\");\n                req.setRequestHeader(\"Content-Type\", \"text/xml; charset=utf-8\");\n                req.setRequestHeader(\"Content-Length\", request.length);\n                req.send(request);\n\n                results = Service.GetResults(req.responseXML);\n\n                return results;\n            };\n            Service.Delete = function (ODataSetName, EntityID) {\n                if (!EntityID) {\n                    throw new Error(\"EntityID is a required parameter\");\n                    return;\n                }\n                if (!ODataSetName) {\n                    throw new Error(\"ODataSetName is a required parameter\");\n                    return;\n                }\n\n                var req = new XMLHttpRequest();\n                req.open(\"POST\", Service.GetODataEndPoint() + \"/\" + ODataSetName + \"(guid'\" + EntityID + \"')\", false)\n                req.setRequestHeader(\"Accept\", \"application/json\");\n                req.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n                req.setRequestHeader(\"X-HTTP-Method\", \"DELETE\");\n                req.onreadystatechange = function () {\n                    debuggingCallBack(this);\n                };\n                req.send();\n\n            };\n\n\n            Service.GetServerUrl = function () {\n                var serverUrl = null;\n                serverUrl = Xrm.Page.context.getServerUrl();\n                if (serverUrl.match(/\\/$/)) {\n                    serverUrl = serverUrl.substring(0, serverUrl.length - 1);\n                }\n                return serverUrl;\n            };\n            Service.GetODataEndPoint = function () {\n                return Service.GetServerUrl() + \"/XRMServices/2011/OrganizationData.svc\";\n            };\n            Service.GetSOAPEndPoint = function () {\n                return Service.GetServerUrl() + \"/XRMServices/2011/Organization.svc/web\";\n            };\n\n            Service.GetResults = function (responseXML) {\n                var sFetchResult = responseXML.selectSingleNode(\"//RetrieveMultipleResult\").xml;\n\n                var oResultDoc = new ActiveXObject(\"Microsoft.XMLDOM\");\n                oResultDoc.async = false;\n                oResultDoc.loadXML(sFetchResult);\n\n                var oResults = new Array(oResultDoc.firstChild.firstChild.childNodes.length);\n\n                var iLen = oResultDoc.firstChild.firstChild.childNodes.length;\n                for (var i = 0; i &lt; iLen; i++) {\n\n                    var oResultNode = oResultDoc.firstChild.firstChild.childNodes[i];\n                    var oBE = new BusinessEntity(oResultNode.selectSingleNode(\"//a:LogicalName\").text);\n\n                    var iLenInner = oResultNode.firstChild.childNodes.length;\n                    for (var j = 0; j &lt; iLenInner; j++) {\n                        var oRA = new Object();\n\n                        var value = null;\n                        if (oResultNode.firstChild.childNodes[j].lastChild.childNodes.length == 3) {\n                            if (oResultNode.firstChild.childNodes[j].lastChild.getElementsByTagName(\"a:Id\").length == 1)\n                                value = oResultNode.firstChild.childNodes[j].lastChild.getElementsByTagName(\"a:Id\")[0].text;\n                            if (oResultNode.firstChild.childNodes[j].lastChild.getElementsByTagName(\"a:Value\").length == 1)\n                                value = oResultNode.firstChild.childNodes[j].lastChild.getElementsByTagName(\"a:Value\")[0].text;\n                        }\n                        if (!value)\n                            value = oResultNode.firstChild.childNodes[j].lastChild.text;\n\n                        oRA[\"value\"] = value;\n\n                        oBE.attributes[oResultNode.firstChild.childNodes[j].firstChild.firstChild.text] = oRA;\n                    }\n\n                    oResults[i] = oBE;\n                }\n                return oResults;\n            };\n\n            Service.BusinessEntity = function BusinessEntity(sName) {\n                this.name = sName;\n                this.attributes = new Object();\n            };\n\n            Service.FetchEncode = function (FetchXML) {\n                var c;\n                var HtmlEncode = '';\n\n                if (FetchXML == null) {\n                    return null;\n                }\n                if (FetchXML == '') {\n                    return '';\n                }\n\n                for (var cnt = 0; cnt &lt; FetchXML.length; cnt++) {\n                    c = FetchXML.charCodeAt(cnt);\n\n                    if (((c &gt; 96) &amp;&amp; (c &lt; 123)) ||\n                            ((c &gt; 64) &amp;&amp; (c &lt; 91)) ||\n                            (c == 32) ||\n                            ((c &gt; 47) &amp;&amp; (c &lt; 58)) ||\n                            (c == 46) ||\n                            (c == 44) ||\n                            (c == 45) ||\n                            (c == 95)) {\n                        HtmlEncode = HtmlEncode + String.fromCharCode(c);\n                    }\n                    else {\n                        HtmlEncode = HtmlEncode + '&amp;#' + c + ';';\n                    }\n                }\n\n                return HtmlEncode;\n            };\n        } (Crm.Service = Crm.Service || {}, _window.jQuery, _window.JSON, _window.Xrm));\n    } (_window.Crm = _window.Crm || {}));\n} (window));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>From the link you posted to the <a href=\"http://msdn.microsoft.com/en-us/library/gg309549.aspx#Y1500\" rel=\"nofollow\">Microsoft SDK</a>, you will see how to connect to the ODATA service.  As you may have already found, ODATA doesn't allow you to execute fetch.</p>\n\n<p>Instead, you will need to use the SOAP service (<em>/XrmServices/2011/Organization.svc</em>), and pass your fetch using Retrieve Multiple.</p>\n\n<p>Here's a more detailed look at using the 2011 service through JavaScript: <a href=\"http://blog.customereffective.com/blog/2011/05/execute-fetch-from-javascript-in-crm-2011.html\" rel=\"nofollow\">http://blog.customereffective.com/blog/2011/05/execute-fetch-from-javascript-in-crm-2011.html</a></p>\n\n<p>Here is another blog post which parses the returned XML and builds an easily consumable JavaScript object: <a href=\"http://blog.customereffective.com/blog/2011/05/parsing-and-consuming-the-crm-2011-soap-service-inside-javascript.html\" rel=\"nofollow\">http://blog.customereffective.com/blog/2011/05/parsing-and-consuming-the-crm-2011-soap-service-inside-javascript.html</a></p>\n\n<p>The 2011 Organization Service is quite different in it's return, so it won't be plug-n-play from your 4.0 stuff; however, the 2011 endpoint has a lot of nice improvements.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>To execute fetchxml queries with JavaScript a bunch of frameworks /libraries are available:</p>\n\n<ul>\n<li><a href=\"http://xrmsvctoolkit.codeplex.com/\">XrmSvcToolkit</a></li>\n<li><a href=\"http://xrmservicetoolkit.codeplex.com/\">XrmServiceToolkit</a></li>\n<li><a href=\"http://crmfetchkit.codeplex.com/\">CrmFetchKit.js</a></li>\n</ul>\n\n<p>Instead of writing the code by hand these libraries provide a simple way to perform several operations and access the results. But take into account that not all libraries (currently) support cross-browser (Q2.2012).</p>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>I want to execute FetchXML queries in a CRM 2011 environment using the <strong>CRM 2011 SOAP web services</strong> and <strong>JavaScript</strong>.</p>\n\n<p>I have found a number of articles <a href=\"http://social.microsoft.com/Forums/en/crmdevelopment/thread/fd591f97-11dc-4292-8ee8-d7b33dbabecf\">like this one</a> showing how to use the 4.0 web service that is still available in the 2011 environment, but I do not want to do this.</p>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/library/gg328117.aspx\">This link</a> seems to indicate that IOrganizationService.RetrieveMultiple can handle FetchXML.  However, I do not want to use managed code for this.</p>\n\n<p>I've come across <a href=\"http://msdn.microsoft.com/en-us/library/gg309549.aspx\">this link</a> that shows essentially what I want to do in the RetrieveMultiple function, but I want to be able to pass in existing FetchXML that I've written, not a new filter expression.</p>\n",
            "last_activity_date": 1416071424,
            "question_id": 5876964,
            "score": 8,
            "tags": [
                "javascript",
                "dynamics-crm-2011",
                "fetchxml"
            ],
            "title": "How to Execute FetchXML in CRM 2011 using a CRM 2011 webservice and JavaScript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>See this bug report : <a href=\"http://bugs.developers.facebook.net/show_bug.cgi?id=15596\" rel=\"nofollow\">IE8, getLoginStatus never completes when flash XD is used</a> - it sounds like it might be what you are experiencing.</p>\n\n<p>In that case, make sure that your <code>fb-root</code> div is not being set to <code>visibility:hidden</code> or <code>display:none</code> as this will cause the XD Flash not to render.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Sometimes this happens because of cookies , try to clear cookies.And its not just the problem in IE , its also problem in other browsers.If you test your app again you'll face it.\nThe best option for it is to use php api , it will take you to the facebook page user will enter credentials and it will send back you to your site again , with string embedded in your url.This is best way without any harm.And easy to implement.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have solved the issue by giving <code>channelUrl</code> parameter in FB.init . Now its working fine. Given absolute url to channel receiver. Content of that file will be a single line <code>&lt;script src=\"http://connect.facebook.net/en_US/all.js\"&gt;&lt;/script&gt;</code> . Thanks to all :) \n`</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>The custom channel solution provided by @Shameer solved the problem for me. See also the documentation for the Custom Channel URL here:\n<a href=\"http://developers.facebook.com/docs/reference/javascript/FB.init/\" rel=\"nofollow\">http://developers.facebook.com/docs/reference/javascript/FB.init/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If someone is still having problem with this, the easiest fix is to use the latest API from <a href=\"http://code.google.com/p/facebook-actionscript-api/\" rel=\"nofollow\">http://code.google.com/p/facebook-actionscript-api/</a> and publish the .swf for Flash Player 10 (this is the most important part).</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>If someone is still having problems, there are two things that usually cause fb login problems (it stays open, blank, no response..) in IE:</p>\n\n<ol>\n<li>Missing <code>channelUrl</code> parameter in <code>FB.init</code>. </li>\n<li>Protected mode: <em>IE -> Internet Options -> Security tab -> Local intranet -></em> (check) <em>Enable protected mode</em></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am integrating facebook login to my application and it is working fine in browsers except IE. It opens the login window, after login redirecting to <a href=\"http://static.ak.fbcdn.net/connect/xd_proxy.php\">http://static.ak.fbcdn.net/connect/xd_proxy.php</a>, and got stuck there displaying a blank page in the popup. In other browsers it will close the popup and redirect to my site. My application url is like <code>http://dev.mysite.com/app/</code>. so I have given the domain name <code>dev.mysite.com</code> in facebook application settings. I am using facebook javascript sdk and my site is in PHP. Some one please help me to figure out the actual problem. </p>\n\n<p>Thanks in advance</p>\n",
            "last_activity_date": 1369255657,
            "question_id": 5778100,
            "score": 8,
            "tags": [
                "javascript",
                "facebook"
            ],
            "title": "Facebook connect showing blank popup on login in Internet explorer 8"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You could use jquery to edit. Refer to <a href=\"http://api.jquery.com/css/\" rel=\"nofollow\">http://api.jquery.com/css/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Are you trying to retrieve the property before it's actually rendered/the DOM is ready?  Try doing it in the body's <code>onload</code> event, or if you're using jQuery, <code>$(document).ready()</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you are trying to access a css property set in a stylesheet, \nrather than an inline style property,\nuse document.defaultView.getComputedStyle (anything but IE below 9) \nor element.currentStyle in older IE's.</p>\n\n<p>eg:</p>\n\n<pre><code>function deepCss (who, css){\n    var dv, sty, val;\n    if(who &amp;&amp; who.style){\n        css= css.toLowerCase();\n        sty= css.replace(/\\-([a-z])/g, function(a, b){\n            return b.toUpperCase();\n        });\n        val= who.style[sty];\n        if(!val){\n            dv= document.defaultView || window;\n            if(dv.getComputedStyle){\n                val= dv.getComputedStyle(who,'').getPropertyValue(css);\n            }\n            else if(who.currentStyle){\n                val= who.currentStyle[sty];\n            }\n        }\n    }\n    return val || '';\n}\n</code></pre>\n\n<p><strong>deepCss(document.body,'font-size')</strong></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can only access style properties in Javascript that have been set via Javascript (or the <code>style</code> attr). </p>\n\n<p>To access the elements current style you should fetch the <strong><code>computed style</code></strong> of the element.</p>\n\n<pre><code>var el = document.getElementById('hello');\nvar comp = el.currentStyle || getComputedStyle(el, null);\nalert( comp.backgroundColor );\n</code></pre>\n\n<p>Note, that the computed style may <strong>vary</strong> in browsers (like color being in hex or rgb) so you should <strong>normalize</strong> that if you want unified results.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>the <em>style</em> property can be used to set styles and to retrieve inline style values, but it cannot retrieve style values set in an external style sheet. </p>\n\n<pre><code>someElement = document.getElementById(\"element\");\nmyStyles = document.defaultView.getComputedStyle(someElement,null);\nbackgroundImage = myStyles.getPropertyValue(\"background-image\"); // w3c\nbackgroundImage = someElement.currentStyle[\"background-image\"]; //IE\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a little problem. \nWhen I set the css rule using some property, say, background-image in an external .css file and then try to access it using javascript in another external .js file, it does not work. That is to say I do not get any value for <code>document.getElementById(someId).style.backgroundImage.</code></p>\n\n<p>But when I set the css rule using style attribute in html file itself, it works.</p>\n\n<p>So, my query is can't I access css property in js, if css is set in external .css file.</p>\n",
            "last_activity_date": 1309473526,
            "question_id": 4057270,
            "score": 8,
            "tags": [
                "javascript",
                "html",
                "css"
            ],
            "title": "How to access css properties in javascript when applied via external CSS file?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You can't just replace the string, you'll have to replace the entire TextNode element, since <a href=\"http://stackoverflow.com/questions/1111258/can-a-textnode-have-a-childnode-which-is-an-elementnode\">TextNode elements can't contain child elements</a> in the DOM.</p>\n\n<p>So, when you find your text node, generate your replacement element, then replace the text node with a function similar to:</p>\n\n<pre><code>function ReplaceNode(textNode, eNode) {\n    var pNode = textNode.parentNode;\n    pNode.replaceChild(textNode, eNode);\n}\n</code></pre>\n\n<p>For what it appears you want to do, you will have to break apart the current Text Node into two new Text Nodes and a new HTML element.  Here's some sample code to point you hopefully in the right direction:</p>\n\n<pre><code>function DecorateText(str) {\n    var e = document.createElement(\"span\");\n    e.style.color = \"#ff0000\";\n    e.appendChild(document.createTextNode(str));\n    return e;\n}\n\nfunction SearchAndReplaceElement(elem) {\n    for(var i = elem.childNodes.length; i--;) {\n        var childNode = elem.childNodes[i];\n        if(childNode.nodeType == 3) { // 3 =&gt; a Text Node\n            var strSrc = childNode.nodeValue; // for Text Nodes, the nodeValue property contains the text\n            var strSearch = \"Special String\";\n            var pos = strSrc.indexOf(strSearch);\n\n            if(pos &gt;= 0) {\n                var fragment = document.createDocumentFragment();\n\n                if(pos &gt; 0)\n                    fragment.appendChild(document.createTextNode(strSrc.substr(0, pos)));\n\n                fragment.appendChild(DecorateText(strSearch));\n\n                if((pos + strSearch.length + 1) &lt; strSrc.length)\n                    fragment.appendChild(document.createTextNode(strSrc.substr(pos + strSearch.length + 1)));\n\n                elem.replaceChild(fragment, childNode);\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>Maybe jQuery would have made this easier, but it's good to understand why all of this stuff works the way it does.</p>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>I want to add an element to a textNode. For example: I have a function that search for a string within element's textNode. When I find it, I want to replace with a HTML element. Is there some standard for that?\nThank you.</p>\n",
            "last_activity_date": 1422808164,
            "question_id": 3963872,
            "score": 8,
            "tags": [
                "javascript",
                "html",
                "replace",
                "textnode"
            ],
            "title": "JavaScript: Add elements in textNode"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Key events only fire on the document and elements that may receive focus. Therefore to handle key events on a <code>&lt;canvas&gt;</code> element, you either need to allow it to receive focus by adding a <code>tabindex</code> attribute (e.g. <code>&lt;canvas id=\"game\" width=\"800\" height=\"400\" tabindex=\"1\"&gt;&lt;/canvas&gt;</code>) or by simply handling key events for the whole document, which may not be what you want (for example, if you have more than one element on the page for which you wish to handle key events).</p>\n\n<p>As to how to attach the event handlers, the simplest way is the following:</p>\n\n<pre><code>var el = document.getElementById(\"your_element_id\");\n\nel.onkeydown = function(evt) {\n    evt = evt || window.event;\n    alert(\"keydown: \" + evt.keyCode);\n};\n\nel.onkeyup = function(evt) {\n    evt = evt || window.event;\n    alert(\"keyup: \" + evt.keyCode);\n};\n</code></pre>\n\n<p>If you may need multiple listeners, you can use <code>addEventListener</code> in most browsers or <code>attachEvent</code> in IE &lt;= 8:</p>\n\n<pre><code>if (typeof el.addEventListener != \"undefined\") {\n    el.addEventListener(\"keydown\", function(evt) {\n        alert(\"keydown: \" + evt.keyCode);\n    }, false);\n} else if (typeof el.attachEvent != \"undefined\") {\n    el.attachEvent(\"onkeydown\", function(evt) {\n        alert(\"keydown: \" + evt.keyCode);\n    });\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                }
            ],
            "body": "<p>How do I bind a function to the key down/up events?</p>\n\n<p>It can be either binded to the entire document or a single element, either will work in this case.</p>\n\n<p>This has to be without any JavaScript library. I am only primarily concerned with the latest Firefox. Particularly the canvas element.</p>\n\n<p>Ive tried this: (FF 3.6.9 Windows 7)</p>\n\n<pre><code>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Test&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div class=\"wrapper\"&gt;\n            &lt;canvas id=\"game\" width=\"800\" height=\"400\"&gt;\n            &lt;/canvas&gt;\n        &lt;/div&gt;\n        &lt;script type=\"text/javascript\"&gt;\n            var el = document.getElementById(\"game\");\n\n            el.onkeydown = function(evt) {\n                evt = evt || window.event;\n                alert(\"keydown: \" + evt.keyCode);\n            };\n\n            el.onkeyup = function(evt) {\n                evt = evt || window.event;\n                alert(\"keyup: \" + evt.keyCode);\n            };\n        &lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1284208199,
            "question_id": 3690904,
            "score": 8,
            "tags": [
                "javascript",
                "javascript-events"
            ],
            "title": "Javascript bind keyup/down event"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>In JavaScript, the argument will be undefined if the user didn't pass it in. You can use the || operator to set the value of the argument if it's undefined:</p>\n\n<pre><code>function foo(bar) {\n  bar = bar || 0;\n  ...\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can't have overloaded functions in JavaScript. Instead, use object based initialization, or check for the values and assign a default if none supplied.</p>\n\n<p>In your example, the second function <code>foo(bar)</code> will replace the first one.</p>\n\n<p>Here's a function using object initialization.</p>\n\n<pre><code>function foo(config) {\n    extend(this, config);\n}\n</code></pre>\n\n<p>where <code>extend</code> is a function that merges the config object with the current object. It is similar to the <code>$.extend</code> method in jQuery, or <code>$extend</code> method of MooTools.</p>\n\n<p>Invoke the function and pass it named key value pairs </p>\n\n<pre><code>foo({ bar: 0 });\n</code></pre>\n\n<p>The other way to initialize is to look at the supplied values, and assign a default if the value is not given</p>\n\n<pre><code>function foo(bar) {\n    bar = bar || 0;\n}\n</code></pre>\n\n<p>This works as long as bar is not a falsy value. So <code>foo(false)</code> or <code>foo(\"\")</code> will still initialize <code>bar</code> to <code>0</code>. For such cases, do an explicit check.</p>\n\n<pre><code>function foo(bar) {\n    bar = (typeof bar == 'undefined' ? 0 : bar);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>The simplest way I know of is test for a value and then set it to a default value if no value is found. I have not come across a catch all one liner yet, this is the best i have got.</p>\n\n<p>If expecting a string value use this. Default will trigger on these values: [ undefined, null, \"\" ]</p>\n\n<pre><code>function foo(str) {\n  str = !!str  ? str  : 'bar';\n  ...\n}\n</code></pre>\n\n<p>If expecting a number or Boolean value. This allows 0 and false as values. Default will trigger on [ undefined, null, {}, functions ]</p>\n\n<p>Handy for making values arguments that only accept primitive values like number, boolean and string</p>\n\n<pre><code>function foo(val) {\n  val= !!val == val || val*1 ? val : 10;\n  ...\n}\n</code></pre>\n\n<p>If you're looking to test for objects such as {}, There is documentation on doing this but it isn't so simple.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>So I've been doing this for as long as I can remember, but I'm curious if this is really what I should be doing.  You write a function that takes a parameter, so you anticipate it to have a value, but if it doesn't, you have a good reason to default it, to say zero.  What I currently do is write a helper function:</p>\n\n<pre><code>function foo() { return foo(0); };\nfunction foo(bar) { ... };\n</code></pre>\n\n<p>I just ran across an instance where I did this and I looked at it oddly for a few seconds before understanding my logic behind it.  I come from php where it's trivial:</p>\n\n<pre><code>function foo(bar=0) { ... }\n</code></pre>\n\n<p>Is there a javascript alternative that I'm not aware of?</p>\n",
            "last_activity_date": 1363747043,
            "question_id": 3672084,
            "score": 8,
            "tags": [
                "javascript"
            ],
            "title": "Default value for function parameter?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If you look at HTML 5 there is the data attribute for fields that will allow you to store information for the field. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think more than anything, the best reason not to store data in the DOM is because the DOM is meant to represent content structure and styling for an HTML page. While you could surely add data to the nodes in a well-namespaced manner as to avoid conflicts, you're introducing data state into the visual representation.</p>\n\n<p>I'm trying to find an example for or against storing data in the DOM, and scratching my head to find a convincing case. In the past, I've found that the separation of the data state from the visual state has saved headache during re-designs of sites I've worked on.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>Don't be surprised to run into trouble with IE 6 &amp; 7. They are very inconsistent with setAttribute vs set as a property.</p>\n\n<p>And if you're not careful you could set circular references and give yourself a memory leak.</p>\n\n<p><a href=\"http://www.ibm.com/developerworks/web/library/wa-memleak/\" rel=\"nofollow\">http://www.ibm.com/developerworks/web/library/wa-memleak/</a></p>\n\n<p>I always set node properties as a last resort, and when I do I'm extra careful with my code and test more heavily than usual.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>No, it is usually a <strong>bad idea</strong> to store your own properties on DOM nodes.</p>\n\n<ul>\n<li>DOM nodes are host objects and host objects can do what they like. Specifically, there is no requirement in the ECMAScript spec for host objects to allow this kind of extension, so browsers are not obliged to allow it. In particular, new browsers may choose not to, and existing code relying on it will break.</li>\n<li>Not all host objects in existing browsers allow it. For example, text nodes and all ActiveX objects (such as XMLHttpRequest and XMLDOM objects, used for parsing XML) in IE do not, and failure behaviour varies from throwing errors to silent failure.</li>\n<li>In IE, the ability to add properties can be switched off for a whole document, including all nodes within the document, with the line <code>document.expando = false;</code>. Thus if any of the code in your page includes this line, all code relying on adding properties to DOM nodes will fail.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>JavaScript lets you add arbitrary properties and methods to any object, including DOM nodes. Assuming the property was well namespaced (something like <code>_myLib_propertyName</code>) so that it would be unlikely to create a conflict, are there any good reasons not to stash data in DOM nodes?</p>\n\n<p>Are there any good use cases for doing so?</p>\n\n<p>I imagine doing this frequently could contribute to a sloppy coding style or code that is confusing or counter-intuitive, but it seems like there would also be times when tucking \"custom\" properties into DOM nodes would be an effective and expedient technique.</p>\n",
            "last_activity_date": 1411058306,
            "question_id": 3095336,
            "score": 8,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "Is it bad practice to add properties to DOM nodes?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Without having a definitive answer, you can:</p>\n\n<ul>\n<li>find a comprehensive source of information on epub is this <a href=\"http://www.ibm.com/developerworks/xml/tutorials/x-epubtut/index.html\" rel=\"nofollow\">IBM article</a></li>\n<li>try some experiment in epub creation with <a href=\"http://calibre-ebook.com/\" rel=\"nofollow\">Calibre</a> and its <a href=\"http://calibre-ebook.com/user_manual/\" rel=\"nofollow\">manual</a>.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>EPUB doesn't really have a concept of pages-- it's meant for reflowable content that flows to fit the dimensions of the display container. So what you're suggesting is a bit of a hack.</p>\n\n<p>That said, users are comfortable with pages, and most readers implement some concept of a page.</p>\n\n<p>What you will need is to implement something like Knuth's page-breaking algorithm, which in turn depends upon his paragraph, and line breaking algorithms. See his TeX book for the full literate code (IIRC, it's in Pascal). (It's not that complex a piece of code-- I implemented one in a desktop publishing program I wrote many years back).</p>\n\n<p>If you went this route, it means you probably couldn't use a UIWebView.</p>\n\n<p>BTW, Adobe Digital Edition implements a variation of Knuth's algorithm.</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>In the underlying html, you can put something like this:</p>\n\n<pre><code>&lt;span style=\"page-break-after: always\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Any idea how to implement 'page break' in epub reader? \n.epub is nothing but HTML pages, and epub reader renders those html pages.\nbut i wonder how some epub readers like Adobe Digital Edition implemented page break.\nThere,when we jump to any page, you will not find half displayed line(i.e only upper part of the letters visible and lower part will be in the next page) or half images where the other part in the next page.\nHow to push the line to next page if i cannot display it completely in the current page?</p>\n",
            "last_activity_date": 1287477672,
            "question_id": 2808652,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "how to implement &#39;page break&#39; in epub reader"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Yes, that is the correct way.</p>\n\n<p>See the reference here:</p>\n\n<p><a href=\"http://www.javascriptkit.com/javatutors/error2.shtml\">http://www.javascriptkit.com/javatutors/error2.shtml</a></p>\n\n<p>And explanation of how to see more details of the error here:</p>\n\n<p><a href=\"http://www.javascriptkit.com/javatutors/error3.shtml\">http://www.javascriptkit.com/javatutors/error3.shtml</a></p>\n\n<p>Their example:</p>\n\n<pre><code>window.onerror = function(msg, url, linenumber) {\n    alert('Error message: '+msg+'\\nURL: '+url+'\\nLine Number: '+linenumber);\n    return true;\n}\n</code></pre>\n\n<p>If you wish to display a LIST of errors in a single pop-up, it's trickier.</p>\n\n<p>Since the errors occue 1 by 1, you need to do the following:</p>\n\n<ul>\n<li>have <code>window.onerror</code> handler store error details in some array</li>\n<li><p>Check that array periodically - either via a timer, or on every N'th call of <code>window.onerror</code> handler, or both.</p>\n\n<p>When the check happens, process entire array, display contents as desired, and empty out an array</p></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Have a look at <a href=\"http://www.javascriptkit.com/javatutors/error.shtml\" rel=\"nofollow\">The onerror event of the window object</a>, specifically <a href=\"http://www.javascriptkit.com/javatutors/error3.shtml\" rel=\"nofollow\">Getting additional details on an error</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Check this out: <a href=\"http://www.javascriptkit.com/javatutors/error3.shtml\" rel=\"nofollow\">http://www.javascriptkit.com/javatutors/error3.shtml</a>.  Looks like signature is <code>function(message, url, linenumber)</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just in case someone would like to use it with jQuery:</p>\n\n<pre><code>$(window).on(\"error\", function(evt) {\n\n    console.log(\"jQuery error event:\", evt);\n    var e = evt.originalEvent; // get the javascript event\n    console.log(\"original event:\", e);\n    if (e.message) { \n        alert(\"Error:\\n\\t\" + e.message + \"\\nLine:\\n\\t\" + e.lineno + \"\\nFile:\\n\\t\" + e.filename);\n    } else {\n        alert(\"Error:\\n\\t\" + e.type + \"\\nElement:\\n\\t\" + (e.srcElement || e.target));\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I want to display script errors in a popup alert instead of showing them in the browser console.</p>\n\n<pre><code>window.onerror = function() {\n  var message = /* get error messages and put them here */;\n  alert(message);\n  return true;\n};\n</code></pre>\n",
            "last_activity_date": 1406877205,
            "question_id": 2604976,
            "score": 8,
            "tags": [
                "javascript",
                "error-handling"
            ],
            "title": "javascript: how to display script errors in a popup alert?"
        }
    ]
}
