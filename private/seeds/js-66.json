{
    "items": [
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>There's no isNumeric type of function but you could do:\n<code>\n<strike>\nif(parseInt(yourVal, 10) > 0) {\n  ...numeric value\n}\n</strike>\n</code></p>\n\n<p>OR add your own:</p>\n\n<pre>\n<code>\nfunction isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n</code>\n</pre>\n\n<p><strong>Note:: Since <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt\">parseInt()</a> is not a proper way to check for numeric it \"SHOULD NOT BE USED\".</strong></p>\n",
                    "is_accepted": true,
                    "score": 49
                },
                {
                    "body": "<p>Hey this should help </p>\n\n<pre><code>function isNumber(n) {\n  return !isNaN(parseFloat(n)) &amp;&amp; isFinite(n);\n}\n</code></pre>\n\n<p>Very good link: <a href=\"http://stackoverflow.com/questions/18082/validate-numbers-in-javascript-isnumeric\">Validate numbers in JavaScript - IsNumeric()</a></p>\n\n<p>Hope it helps, CHeers!</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>There is Javascript function <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/isNaN\">isNaN</a> which will do that.</p>\n\n<pre><code>isNaN(90)\n=&gt;false\n</code></pre>\n\n<p>so you can check numeric by </p>\n\n<pre><code>!isNaN(90)\n=&gt;true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><strong>isFinite(String(n))</strong> returns true for n=0 or '0', '1.1' or 1.1,</p>\n\n<p>but false for '1 dog' or '1,2,3,4', +- Infinity and any NaN values.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>var str = 'test343',\n    isNumeric = /^[-+]?(\\d+|\\d+\\.\\d*|\\d*\\.\\d+)$/;\n\nisNumeric.test(str);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>function IsNumeric(val) {\n    return Number(parseFloat(val))==val;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Is there is any function like IsNumeric in pure javascript. I know jQuery have this function to check the integers</p>\n",
            "last_activity_date": 1417692408,
            "question_id": 9716468,
            "score": 21,
            "tags": [
                "javascript"
            ],
            "title": "Is there any function like IsNumeric in javascript to validate numbers"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>As found on <strong><a href=\"http://monkeyandcrow.com/blog/why_javascripts_filter_is_slow/\">this blog post</a></strong> (which also does the same kind of tests):</p>\n\n<blockquote>\n  <p>If you read the documentation for <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\"><code>filter</code></a>, you will see why it's so much slower.</p>\n  \n  <ol>\n  <li>It ignores deleted values and gaps in the array</li>\n  <li>It optionally sets the execution context of the predicate function</li>\n  <li>It prevents the predicate function from mutating the data</li>\n  </ol>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p><a href=\"http://ecma-international.org/ecma-262/5.1/#sec-15.4.4.20\" rel=\"nofollow\">Section 15.4.4.20 of the ECMAScript 5.1 spec</a> defines <code>Array.prototype.filter(callbackfn, thisArg)</code> as follows:</p>\n\n<blockquote>\n  <p><code>callbackfn</code> should be a function that accepts three arguments and\n  returns a value that is coercible to the Boolean value <code>true</code> or\n  <code>false</code>. <code>filter</code> calls <code>callbackfn</code> once for each element in the\n  array, in ascending order, and constructs a new array of all the\n  values for which <code>callbackfn</code> returns <code>true</code>. <code>callbackfn</code> is called\n  only for elements of the array which actually exist; it is not called\n  for missing elements of the array.</p>\n  \n  <p>If a <code>thisArg</code> parameter is provided, it will be used as the <code>this</code>\n  value for each invocation of <code>callbackfn</code>. If it is not provided,\n  <code>undefined</code> is used instead.</p>\n  \n  <p><code>callbackfn</code> is called with three arguments: the value of the element,\n  the index of the element, and the object being traversed.</p>\n  \n  <p><code>filter</code> does not directly mutate the object on which it is called but\n  the object may be mutated by the calls to <code>callbackfn</code>.</p>\n  \n  <p>The range of elements processed by filter is set before the first call\n  to <code>callbackfn</code>. Elements which are appended to the array after the\n  call to filter begins will not be visited by <code>callbackfn</code>. If existing\n  elements of the array are changed their value as passed to\n  <code>callbackfn</code> will be the value at the time filter visits them;\n  elements that are deleted after the call to filter begins and before\n  being visited are not visited.</p>\n</blockquote>\n\n<p>That in itself is already a lot of work; a lot of steps that the ECMAScript engine needs to perform.</p>\n\n<p>Then it goes on to say the following:</p>\n\n<blockquote>\n  <p>When the filter method is called with one or two arguments, the\n  following steps are taken:</p>\n  \n  <p>Let <code>O</code> be the result of calling <code>ToObject</code> passing the <code>this</code> value as the\n  argument.\n  Let <code>lenValue</code> be the result of calling the <code>[[Get]]</code> internal\n  method of <code>O</code> with the argument <code>length</code>.\n  Let <code>len</code> be <code>ToUint32(lenValue)</code>.\n  If IsCallable(callbackfn) is false, throw a TypeError exception. If\n  thisArg was supplied, let T be thisArg; else let T be undefined. Let A\n  be a new array created as if by the expression new Array() where Array\n  is the standard built-in constructor with that name. Let k be 0. Let\n  to be 0. Repeat, while k &lt; len Let Pk be ToString(k). Let kPresent be\n  the result of calling the [[HasProperty]] internal method of O with\n  argument Pk. If kPresent is true, then Let kValue be the result of\n  calling the [[Get]] internal method of O with argument Pk. Let\n  selected be the result of calling the [[Call]] internal method of\n  callbackfn with T as the this value and argument list containing\n  kValue, k, and O. If ToBoolean(selected) is true, then Call the\n  [[DefineOwnProperty]] internal method of A with arguments\n  ToString(to), Property Descriptor {[[Value]]: kValue, [[Writable]]:\n  true, [[Enumerable]]: true, [[Configurable]]: true}, and false.\n  Increase to by 1. Increase k by 1. Return A.</p>\n  \n  <p>The length property of\n  the filter method is 1.</p>\n  \n  <p>NOTE The filter function is intentionally generic; it does not require\n  that its this value be an Array object. Therefore it can be\n  transferred to other kinds of objects for use as a method. Whether the\n  filter function can be applied successfully to a host object is\n  implementation-dependent.</p>\n</blockquote>\n\n<p>Some things to note about this algorithm:</p>\n\n<ul>\n<li>It prevents the predicate function from mutating the data</li>\n<li>It optionally sets the execution context of the predicate function</li>\n<li>It ignores deleted values and gaps in the array</li>\n</ul>\n\n<p>In a lot of cases, none of these things are needed. So, when writing a <code>filter</code> method of your own, most of the time you wouldn\u2019t even bother to perform these steps.</p>\n\n<p>Every ES5.1-compliant JavaScript engine must conform to that algorithm, and must thus perform all those steps every time you use <code>Array#filter</code>.</p>\n\n<p>It should be no surprise that any custom-written method that only performs a part of those steps will be faster :)</p>\n\n<p>If you write your own <code>filter</code> function, chances are it\u2019s not gonna be as complex as the above algorithm. Perhaps you won\u2019t be converting the array to an object at all, as depending on the use case it may not be needed just to filter the array.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I found out something interesting. As explained by MarcoK, $.grep is just a simple implementation with a for loop. Filter is slower in most cases, so the implementation must be different. I think i found the answer:</p>\n\n<pre><code>function seak (e) { return e === 3; }\n\nvar array = [1,2,3,4,5,6,7,8,9,0], i, before;\narray[10000] = 20; // This makes it slow, $.grep now has to iterate 10000 times.\nbefore = new Date();\n\n// Perform natively a couple of times.\nfor(i=0;i&lt;10000;i++){\n    array.filter(seak);\n}\n\ndocument.write('&lt;div&gt;took: ' + (new Date() - before) + '&lt;/div&gt;'); // took: 8515 ms (8s)\n\nbefore = new Date();\n\n// Perform with JQuery a couple of times\nfor(i=0;i&lt;10000;i++){\n    $.grep(array, seak);\n}\ndocument.write('&lt;div&gt;took: ' + (new Date() - before) + '&lt;/div&gt;'); // took: 51790 ms  (51s)\n</code></pre>\n\n<p>The native 'filter' is much faster in this case. So i think it iterates the properties rather than the array index.</p>\n\n<p>Now lets get back to 'big' problems ;).</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>In a <a href=\"http://stackoverflow.com/q/14644693/1047823\">question</a> it was discussed on how jQuery and native JS would perform against each other.</p>\n\n<p>While of course the vanilla solution performs a lot faster because it does not process the whole array I proposed the usage of <code>Array.filter</code> which I was pretty confident would be at least faster than <code>$.grep</code>.</p>\n\n<p>Surprisingly after adding it to the test I was taught a lesson: <strong><a href=\"http://jsperf.com/grep-vs-pure-js/8\">Testsuite</a></strong></p>\n\n<p><a href=\"http://jsperf.com/grep-vs-pure-js/7\">Edgecases</a> of course have a different outcome.</p>\n\n<p>Anyone having an idea why <code>$.grep</code> is supposed to be over 3 times faster than the native method <code>Arrray.filter</code>?</p>\n\n<p>Edit: I modified the test to use the <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/filter#Compatibility\">filter shim from MDN</a> and the results are pretty interesting:</p>\n\n<ul>\n<li>Chrome: Even MDN shim is faster than the native method, jQuery way ahead  </li>\n<li>Firefox: shim a bit slower than native method, jQuery way ahead</li>\n</ul>\n\n<p>and finally a result like i was hoping it to see in </p>\n\n<ul>\n<li>Internet Explorer: \nnative method is the fastest, then jQuery, shim is slowest (perhaps this is just the result of IEs rather weak JS-engine...)</li>\n</ul>\n",
            "last_activity_date": 1373492829,
            "question_id": 14647470,
            "score": 20,
            "tags": [
                "javascript",
                "jquery",
                "performance"
            ],
            "title": "Performance of jQuery.grep vs. Array.filter"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You could check for elements that have the <code>focus()</code> function:</p>\n\n<pre><code>$('*').each(function() {\n  if(typeof this.focus == 'function') {\n    // Do something with this element\n  }\n}) ;\n</code></pre>\n\n<p><b>Edit</b>\nThinking a little more, it would probably makes sense to have <code>*:visible</code> rather than just <code>*</code> as the selector for most applications of this.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>From the <a href=\"http://stackoverflow.com/questions/1599660/which-html-elements-can-receive-focus/1600194#1600194\">other SO answer referred to by the OP</a>:</p>\n\n<blockquote>\n  <p>Today's browsers define focus() on HTMLElement, ...</p>\n</blockquote>\n\n<p>So, this means testing for <code>focus</code> as a member of the element is <em>not</em> effective, because <em>all</em> elements will have it, regardless of whether they actually accept focus or not.</p>\n\n<blockquote>\n  <p>...but an element won't actually take focus unless it's one of:</p>\n  \n  <ul>\n  <li>HTMLAnchorElement/HTMLAreaElement with an href\n  *\n  HTMLInputElement/HTMLSelectElement/HTMLTextAreaElement/HTMLButtonElement\n  but not with <code>disabled</code> (IE actually gives you an error if you try),\n  and file uploads have unusual behaviour for security reasons</li>\n  <li>HTMLIFrameElement (though focusing it doesn't do anything useful).\n  Other embedding elements also, maybe, I haven't tested them all.</li>\n  <li>Any element with a <code>tabindex</code></li>\n  </ul>\n</blockquote>\n\n<p>So, what about naming all those explicitly in a <a href=\"http://api.jquery.com/category/selectors/\">jQuery Selector</a>?</p>\n\n<pre><code>$('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]')\n</code></pre>\n\n<hr>\n\n<p><strong>Update #1</strong>:</p>\n\n<p>I <a href=\"http://jsfiddle.net/vHNSX/6/\">updated your jsFiddle here</a>.  It appears to work.</p>\n\n<p>I also added elements with attribute <code>contenteditable</code> to the list above.</p>\n\n<hr>\n\n<p><strong>Update #2</strong>:</p>\n\n<p>As @jfriend00 pointed out, \"Depending upon the use, one may want to filter out elements that aren't visible\".  To accomplish this, simply apply <a href=\"http://api.jquery.com/filter/\">.filter(':visible')</a> to the set generated from the above selector.</p>\n\n<hr>\n\n<p><strong>Update #3</strong>:</p>\n\n<p>As <a href=\"http://stackoverflow.com/a/14422317/416630\">Xavin pointed out</a>: jQuery UI now has a selector, <a href=\"http://api.jqueryui.com/focusable-selector/\">:focusable</a>, that performs this function.  If you're already using jQuery UI, this might be the way to go.  If not, then you might want to <a href=\"https://github.com/jquery/jquery-ui/blob/24756a978a977d7abbef5e5bce403837a01d964f/ui/jquery.ui.core.js#L93\">check out how jQuery UI does it</a>.  In any case, the description on jQuery UI's page for <code>:focusable</code> is helpful:</p>\n\n<blockquote>\n  <blockquote>\n    <p>Elements of the following type are focusable if they are not disabled: input, select, textarea, button, and object. Anchors are focusable if they have an href or tabindex attribute. area elements are focusable if they are inside a named map, have an href attribute, and there is a visible image using the map. All other elements are focusable based solely on their tabindex attribute and visibility.</p>\n  </blockquote>\n</blockquote>\n\n<p>So, the selector I proposed above is close, but it fails to account for a few nuances.</p>\n\n<p>Here's the function ripped from jQuery UI, with minor adaptations to make it self-contained. (the adaptations are untested, but should work):</p>\n\n<pre><code>function focusable( element ) {\n    var map, mapName, img,\n        nodeName = element.nodeName.toLowerCase(),\n        isTabIndexNotNaN = !isNaN( $.attr( element, \"tabindex\" ) );\n    if ( \"area\" === nodeName ) {\n        map = element.parentNode;\n        mapName = map.name;\n        if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\n            return false;\n        }\n        img = $( \"img[usemap=#\" + mapName + \"]\" )[0];\n        return !!img &amp;&amp; visible( img );\n    }\n    return ( /input|select|textarea|button|object/.test( nodeName ) ?\n        !element.disabled :\n        \"a\" === nodeName ?\n            element.href || isTabIndexNotNaN :\n            isTabIndexNotNaN) &amp;&amp;\n        // the element and all of its ancestors must be visible\n        visible( element );\n\n    function visible( element ) {\n      return $.expr.filters.visible( element ) &amp;&amp;\n        !$( element ).parents().addBack().filter(function() {\n          return $.css( this, \"visibility\" ) === \"hidden\";\n        }).length;\n    }\n}\n</code></pre>\n\n<p>Note: the above function still depends on jQuery, but should not require jQuery UI.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>A general test for whetehr an element supports a particular type of listener is to see if it has a related property, e.g. to test for support for the <em>focus</em> event, use:</p>\n\n<pre><code>if ('focus' in element) {\n  // element supports the foucs event\n}\n</code></pre>\n\n<p>However, there are some exceptions. See the answers to <a href=\"http://stackoverflow.com/questions/7667533/how-do-you-programmatically-determine-to-which-events-an-html-object-can-listen-f\">How do you programmatically determine to which events an HTML object can listen for?</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Instead of getting a list of focusable elements, you may want to try setting up a focus handler at the <code>body</code> element that captures focus events.</p>\n\n<pre><code>$(document.body).on(\"focus\", \"*\", function(e) {\n    //Scroll to e.target\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In jQuery not exists the selector you're finding.</p>\n\n<p>If you're already using jQueryUI, you can use <a href=\"http://api.jqueryui.com/focusable-selector/\" rel=\"nofollow\">:focusable</a> selector.</p>\n\n<p><a href=\"http://api.jqueryui.com/focusable-selector/\" rel=\"nofollow\">http://api.jqueryui.com/focusable-selector/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Another simple, but complete, jQuery selector could be this one:</p>\n\n<pre><code>$('a[href], area[href], input, select, textarea, button, iframe, object, embed, *[tabindex], *[contenteditable]')\n.not('[tabindex=-1], [disabled], :hidden')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p><a href=\"http://stackoverflow.com/questions/1599660/which-html-elements-can-receive-focus/1600194#1600194\">This answer</a> tells which HTML elements can receive focus. Is there a jQuery selector that matches exactly these elements?</p>\n\n<p>For now I'm just using <code>$('input,select,textarea,a')</code>, but I wonder if there's something more precise.</p>\n",
            "last_activity_date": 1413988052,
            "question_id": 7668525,
            "score": 20,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Is there a jQuery selector to get all elements that can get focus?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>$(function () {\n    $('#signupform').submit(function (e) {\n        if (validateForm() === true) {\n            alert('Form is valid.');\n        }\n    });\n});\n</code></pre>\n\n<p>Note, the <code>validateForm()</code> function would be the one you use within the browser to test validation. EDIT: This is indeed jQuery's <code>$(this).valid()</code>.</p>\n\n<p>NOTE: On clarification of the question, the answer above is one way to stop form submitting on validation, but not the technique that was desired (<a href=\"http://docs.jquery.com/Plugins/Validation/valid\" rel=\"nofollow\">jQuery valid() validation</a>). See Darin Dimitrov's answer for details.</p>\n\n<p>Also, on rereading the original question, the intent was the exact opposite of what I originally described. So I edited to demonstrate a functional response on validation, not how to prevent submitting a form.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you are using jquery validate unobtrusive validation you could:</p>\n\n<pre><code>$(function () {\n    $('#signupform').submit(function () {\n        if($(this).valid()) {\n            alert('the form is valid');\n        }\n    });\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 56
                }
            ],
            "body": "<p>I have a jQuery function tied to my submit button like this:</p>\n\n<pre><code>$(function () {\n    $('#signupform').submit(function () {\n        alert('test');\n    });\n});\n</code></pre>\n\n<p>However, it fires whether or not the form is valid. My model is decorated with various DataAnnotations and the client-side validation is working well, but I only want that jQuery function to fire if the form has been validated. How do I accomplish that?</p>\n\n<p><strong>EDIT:</strong> To clarify, I'm using MVC DataAnnotations + jQuery's unobtrusive javascript to handle the client-side validation. I do not have my own javascript validation routines written. The built in jQuery validation is doing a great job of validating the form, but I just need to know how to get the results of that validation into a boolean value within my own function.</p>\n",
            "last_activity_date": 1411668625,
            "question_id": 5052315,
            "score": 20,
            "tags": [
                "javascript",
                "jquery",
                "boolean"
            ],
            "title": "How to fire jQuery function only if form is valid"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>No. Because you can \"use\" methods in insanely dynamic ways like this.</p>\n\n<pre><code>obj[prompt(\"Gimme a method name.\")]();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Unless the library author kept track of dependencies and provided a way to download the minimal code [e.g. <a href=\"http://mootools.net/core\" rel=\"nofollow\">MooTools Core download</a>], it will be hard to to identify 'unused' functions. </p>\n\n<p>The problem is that JS is a dynamic language and there are several ways to call a function.</p>\n\n<p>E.g. you may have a method like</p>\n\n<pre><code>function test() \n{\n   //\n}\n</code></pre>\n\n<p>You can call it like</p>\n\n<pre><code>   test();\n\n   var i = 10;\n   var hello = i &gt; 1 ? 'test' : 'xyz';\n\n   window[hello]();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Check out <a href=\"http://siliconforks.com/jscoverage/\">JSCoverage</a> .  Generates code coverage statistics that show which lines of a program have been executed (and which have been missed). </p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<pre><code>npm install -g fixmyjs\nfixmyjs &lt;filename or folder&gt;\n</code></pre>\n\n<p>A configurable module that uses jshint to flag functions that are unused and perform clean up as well.  </p>\n\n<p>github:      <a href=\"https://github.com/jshint/fixmyjs\" rel=\"nofollow\">https://github.com/jshint/fixmyjs</a> </p>\n\n<p>jshint info: <a href=\"http://www.jshint.com/docs/\" rel=\"nofollow\">http://www.jshint.com/docs/</a></p>\n\n<p>I am honestly not sure that it removes undefined functions as opposed to flagging them, but it is a great tool for cleanup. </p>\n\n<p>There is also the google closure compiler which claims to remove dead JS but this is more of a build tool <a href=\"https://developers.google.com/closure/compiler/\" rel=\"nofollow\">https://developers.google.com/closure/compiler/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I've got a collection of javascript files from a 3rd party, and I'd like to remove all the unused methods to get size down to a more reasonable level.</p>\n\n<p>Does anyone know of a tool that does this for Javascript? At the very least give a list of unused/used methods, so I could do the manually trimming? This would be in addition to running something like the YUI Javascript compressor tool...</p>\n\n<p>Otherwise my thought is to write a perl script to attempt to help me do this.</p>\n",
            "last_activity_date": 1399855334,
            "question_id": 1167663,
            "score": 20,
            "tags": [
                "javascript"
            ],
            "title": "Is there a tool to remove unused methods in javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can use JavaScript's <a href=\"http://javascript.about.com/od/reference/g/shasownproperty.htm\">hasOwnProperty</a> method to achieve this in the loop, like this:</p>\n\n<pre><code>for(var key in arr) {\n    if (arr.hasOwnProperty(key)) {\n        ...\n    }\n}\n</code></pre>\n\n<p>Reference: <a href=\"http://yuiblog.com/blog/2006/09/26/for-in-intrigue/\">This YUI blog article</a>.</p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>you could do this:</p>\n\n<pre><code>for(var key in arr)\n{\n   if (typeof(arr[key]) == \"function\")\n      continue;\n   alert(key);\n}\n</code></pre>\n\n<p>But that's a shoddy workaround</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Javascript doesn't support associative arrays the way you think they do. <a href=\"http://ajaxian.com/archives/javascript-associative-arrays-considered-harmful\" rel=\"nofollow\">http://ajaxian.com/archives/javascript-associative-arrays-considered-harmful</a></p>\n\n<p>for (var i in .. gets all of the properties of an object (an array is just another object) which is why you're seeing the other objects you've prototyped to it.</p>\n\n<p>As the article suggests you should use an object:</p>\n\n<pre><code>\nvar assoc = {'One' : 1, 'Two' : 2};\nassoc['Three'] = 3;\n\nfor(var key in assoc)\n   alert(key+' => '+assoc[key]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>For high-performance iteration over JavaScript arrays, use either a <code>for</code> or <code>while</code> loop.  Nicholas Zakas discusses the most-performant options for iterating over arrays in his Tech Talk <a href=\"http://www.youtube.com/watch?v=mHtdZgou0qU&amp;feature=channel%5Fpage\" rel=\"nofollow\">Speed Up Your JavaScript</a>.</p>\n\n<p>Your best bet is probably something like this:</p>\n\n<pre><code>for (var i = collection.length - 1; i &gt;= 0; i--) {\n  if (obj == collection[i]) return true;\n}\n</code></pre>\n\n<p>This approach will be peform best for a few reasons:</p>\n\n<ul>\n  <li>Only a single local variable is allocated</li>\n  <li>The collection's <code>length</code> property is only accessed once, at the initialization of the loop</li>\n  <li>Each iteration, a local is compared to a constant (<code>i >= 0</code>) instead of to another variable</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can achieve desired outcome from the other end by making the prototype methods not enumerable:</p>\n\n<pre><code>Object.defineProperty(Array.prototype, \"containsKey\", {\n  enumerable: false,\n  value: function(obj) {\n      for(var key in this)\n        if (key == obj) return true;\n      return false;\n    }\n});\n</code></pre>\n\n<p>This works better if you have fewer method definitions than occassions using <code>for(var key in arr)</code> loop and you have control over method definitions.</p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>So lets say I've added some prototype methods to the Array class:</p>\n\n<pre><code>\n\nArray.prototype.containsKey = function(obj) {\n    for(var key in this)\n        if (key == obj) return true;\n    return false;\n}\n\nArray.prototype.containsValue = function(obj) {\n    for(var key in this)\n        if (this[key] == obj) return true;\n    return false;\n}\n\n</code></pre>\n\n\nthen I create an associative array and attempt to loop through it's keys:\n\n<pre><code>\n\nvar arr = new Array();\narr['One'] = 1;\narr['Two'] = 2;\narr['Three'] = 3;\n\nfor(var key in arr)\n   alert(key);\n\n</code></pre>\n\nthis returns five items:\n<pre>\n  -One\n  -Two\n  -Three\n  -containsKey\n  -containsValue\n</pre>\n\n<p>but I want (expect?) only three.  Am I approaching this wrong?  is there a way to \"hide\" the prototype methods?  or should I be doing something differently?</p>\n",
            "last_activity_date": 1421346298,
            "question_id": 1107681,
            "score": 20,
            "tags": [
                "javascript",
                "arrays",
                "prototype",
                "loops",
                "for-loop"
            ],
            "title": "Javascript: hiding prototype methods in for loop?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I'm not sure why doesn't it work, it's probably a bug, but there's a nice workaround. Simply put <code>onclick=\"\"</code> to the div you're delegating and it will work perfectly</p>\n\n<pre><code>&lt;div id=\"click\" onclick=\"\"&gt;Click here&lt;/div&gt;\n&lt;script&gt;\n$(\"body\").on(\"click\", \"#click\", function() {\n    alert(\"This works on iPad\");\n});\n&lt;/script&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/8SEgW/13/embedded/result/\">fiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>It's a Safari mobile bug/feature : click events won't bubble all the way up to body.</p>\n\n<p>Adding <code>onclick=\"\"</code> is a known workaround, but IMHO it's easier to attach your listener on a first child of <code>&lt;body&gt;</code>.</p>\n\n<p>See: <a href=\"http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\">http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html</a></p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Change the cursor style of the body on iOS to \"pointer\" and everything will work perfectly. You won't have to add onclick=\"\" on every element you want clickable...</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    $(function() {\n        // The trick\n        if (/ip(hone|od)|ipad/i.test(navigator.userAgent)) {\n           $(\"body\").css (\"cursor\", \"pointer\");\n        }\n        // The test\n        $(\"body\").on(\"click\", \"#click\", function() {\n            alert(\"This also works on iOS !\");\n        });\n    });\n&lt;/script&gt;\n&lt;div id=\"click\"&gt;Click here&lt;/div&gt;\n</code></pre>\n\n<p>I know what you're thinking right now: \"WTF!\".</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>i found a solution on <a href=\"http://www.danwellman.co.uk/fixing-jquery-click-events-for-the-ipad/\" rel=\"nofollow\">http://www.danwellman.co.uk/fixing-jquery-click-events-for-the-ipad/</a></p>\n\n<p>do the following approach:</p>\n\n<pre><code>var isIPad = function() {\n    return (/ipad/i).test(navigator.userAgent);\n};\nvar isIPhone = function() {\n    return (/iphone/i).test(navigator.userAgent);\n};\nvar isIPod = function() {\n    return (/ipod/i).test(navigator.userAgent);\n};\n</code></pre>\n\n<p>and where you bind the click-event-handler do so:</p>\n\n<pre><code>var eventName = (isIPod() || isIPad() || isIPhone()) ? \"touchstart\" : \"click\";\n// if you are using jquery-mobile\neventName = (isIPod() || isIPad() || isIPhone()) ? \"touchstart\" : \"vclick\";\n\n$(\".selector\").bind(eventName, function(e) {\n    //do something here\n});\n// or\n$(document).on(eventName, \".selector\", function(e) {\n    //do something here\n});\n</code></pre>\n\n<p>that's it.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>On <strong>iOS</strong> there is <strong>no event bubbling without a cursor style</strong>.<br>\nSo in your CSS you need to add <code>cursor: pointer;</code> to the element.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>$('body').on('click', '#click', function() {\r\n    alert(\"This alert won't work on iPad\");\r\n});</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>#click { \r\n  font-size: 24px; \r\n  cursor: pointer;\r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;div id=\"click\"&gt;Click here&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>I know it been asked a long time ago, but I thought a <strong>simple CSS solution</strong> might help.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>If you try this snippet on desktop, everything works.<br> Whenever you try it on <strong>iPad</strong>, it won't do anything.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>$('body').on('click', '#click', function() {\r\n    alert(\"This alert won't work on iPad\");\r\n});</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>div { \r\n  font-size: 24px; \r\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"&gt;&lt;/script&gt;\r\n&lt;div id=\"click\"&gt;Click here&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>Simple <code>.click()</code> handler works, but it isn't what I want. The same applies for <code>.delegate();</code> and <code>.live()</code></p>\n\n<p>Is it a bug or something?</p>\n",
            "last_activity_date": 1415912252,
            "question_id": 10165141,
            "score": 19,
            "tags": [
                "javascript",
                "jquery",
                "ipad",
                "delegation"
            ],
            "title": "jQuery .on() and .delegate() doesn&#39;t work on iPad"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>When a JavaScript function returns <code>NaN</code>, this is not a literal string but an object property in the global space. You cannot compare it to the string <code>\"NaN\"</code>.</p>\n\n<p>See <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/NaN\">https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/NaN</a></p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>It's a special case, NaN is the only thing in Javascript not equal to itself.</p>\n\n<p>Although the other answers about strings vs the NaN object are right too.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<ul>\n<li>When <code>Number</code> (returned by ParseFloat) compares with <code>string</code> <code>string</code> converted to <code>Number</code></li>\n<li><code>NaN</code> is not equal to any other object ( including <code>NaN</code>)</li>\n</ul>\n\n<p>You get <code>NaN==NaN</code> . It is false by second rule.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The proper way to check this would be:</p>\n\n<pre><code>isNaN(parseInt(variable))\n</code></pre>\n\n<p>If whatever you're checking is a NaN, that function will return true.</p>\n\n<p><strong>** Update **</strong>\nAfter jQuery 1.7, they changed this function to isNumeric().</p>\n\n<p><a href=\"http://bugs.jquery.com/ticket/10478\">Documentation of the switch</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p><code>NaN</code> is one of the few examples of an object which is not equal to itself. In fact, this very property is used to implement the common <code>bool IsNaN(number)</code> method:</p>\n\n<pre><code>function isNaN(x)\n{ \n    return x != x; \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<pre><code>parseFloat(\"NaN\")\n</code></pre>\n\n<p>returns \"NaN\", but</p>\n\n<pre><code>parseFloat(\"NaN\") == \"NaN\"\n</code></pre>\n\n<p>returns false. Now, that's probably a good thing that it does return false, but I don't understand how this is so. Did the JavaScript creators just make this a special case? Because otherwise I can't understand how this returns false.</p>\n",
            "last_activity_date": 1410048172,
            "question_id": 6976721,
            "score": 19,
            "tags": [
                "javascript",
                "function",
                "nan",
                "parseint",
                "parsefloat"
            ],
            "title": "is NaN equals to NaN"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>When you use \"var\" , you are instantiating (or overwriting) a variable in the current scope. This will also prevent access of variables named the same in higher scope, within the current scope.</p>\n\n<p>In your first example, 'a' is being instantiated and set within the function scope. In your second example, 'a' is being set outside the function scope (most likely window.a).</p>\n\n<p>With <code>var</code>:</p>\n\n<pre><code>var a = \"A\"\n(function(){\n  var a = \"B\"\n  alert(a) //B\n})()\n\nalert(a); //A\n</code></pre>\n\n<p>Without <code>var</code>:</p>\n\n<pre><code>var a = \"A\";\n(function(){\n  a = \"B\"\n  alert(a) //B\n})()\n\nalert(a) //B\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>if var not used inside function, JS will look for it above, so in case you use save vars in different functions they might conflict. It always worth to use a var if you are defining new variable.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Using var:</p>\n\n<pre><code>var a = 'world';   \nmyfunction = function(){\n  var a = \"mundo\"\n  alert(\"Hola, \" + a )\n}\n\nmyfunction();  //alerts 'hola, mundo'\nalert(a);  //alerts 'world';\n</code></pre>\n\n<p>Not using var:</p>\n\n<pre><code>var a = 'world';   \nmyfunction = function(){\n  a = \"mundo\"\n  alert(\"Hola, \" + a )\n}\n\nmyfunction();  //alerts 'hola, mundo'\nalert(a);  //alerts 'mundo'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I think that you need to refresh yourself on Javascript object scopes.</p>\n\n<p>Using the \"var\" keyword will place your variable at the top-most (global) scope.  This means that if a function uses the same variable, the \"var\" variable you declared will overwrite the (non-var) variable in your function...\n<a href=\"http://www.digital-web.com/articles/scope_in_javascript/\" rel=\"nofollow\">JavaScript Scopes</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Maybe pretty easy question. </p>\n\n<p>Where should I use <code>var</code> keyword in JavaScript. It seems to me using it or not have the same effect ( but of course I'm still learning the language ) </p>\n\n<p>For instance these both seems the same to me:</p>\n\n<pre><code>(function(){\n  var a = \"mundo\"\n  alert(\"Hola, \" + a )\n})()\n</code></pre>\n\n<p>and </p>\n\n<pre><code>(function(){\n  a = \"mundo\"\n  alert(\"Hola, \" + a )\n})()\n</code></pre>\n\n<p>But of course there must be a more complex example where the difference shows up.</p>\n",
            "last_activity_date": 1401818082,
            "question_id": 5398766,
            "score": 19,
            "tags": [
                "javascript",
                "var"
            ],
            "title": "When to use var in Javascript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Use the <a href=\"https://github.com/Modernizr/Modernizr/blob/master/feature-detects/a/download.js\">Modernizr</a> approach: create the element, and check if the attribute is defined:</p>\n\n<pre><code>var a = document.createElement('a');\nif (typeof a.download != \"undefined\") {\n    alert('has support');\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                }
            ],
            "body": "<p>One of the new features implemented in HTML5 is the \"download\" attribute for anchor tags. The benefit of this attribute is that it gives users the means to download content created within a client application, such as an image (converted from a canvas, for instance).</p>\n\n<p>Currently, support for this feature is very poor, so I'd like to know how can I detect support for this feature in a browser.</p>\n",
            "last_activity_date": 1389742081,
            "question_id": 12112844,
            "score": 18,
            "tags": [
                "javascript",
                "html5"
            ],
            "title": "How to detect support for the HTML5 &quot;download&quot; attribute?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>document.frames[\"myiframe\"].onload = function(){\n   alert(\"Hello World\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre>\ntop.document.getElementById('AppFrame').setAttribute(\"src\",fullPath);\n</pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction iframeDidLoad() {\n    alert('Done');\n}\n\nfunction newSite() {\n    var sites = ['http://getprismatic.com',\n                 'http://gizmodo.com/',\n                 'http://lifehacker.com/']\n\n    document.getElementById('myIframe').src = sites[Math.floor(Math.random() * sites.length)];\n}    \n&lt;/script&gt;\n&lt;input type=\"button\" value=\"Change site\" onClick=\"newSite()\" /&gt;\n&lt;iframe id=\"myIframe\" src=\"http://getprismatic.com/\" onLoad=\"iframeDidLoad();\"&gt;&lt;/iframe&gt;\n</code></pre>\n\n<p>Example at <a href=\"http://jsfiddle.net/MALuP/\">http://jsfiddle.net/MALuP/</a></p>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>You should also consider that in some Opera versions onload is fired several times and add some hooks:</p>\n\n<pre><code>// fixing Opera 9.26, 10.00\nif (doc.readyState &amp;&amp; doc.readyState != 'complete') {\n    // Opera fires load event multiple times\n    // Even when the DOM is not ready yet\n    // this fix should not affect other browsers\n    return;\n}\n\n// fixing Opera 9.64\nif (doc.body &amp;&amp; doc.body.innerHTML == \"false\") {\n    // In Opera 9.64 event was fired second time\n    // when body.innerHTML changed from false\n    // to server response approx. after 1 sec\n    return;\n}\n</code></pre>\n\n<p>Code borrowed from <a href=\"http://valums.com/ajax-upload/\" rel=\"nofollow\">Ajax Upload</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try this...</p>\n\n<pre><code>function urlChange(url) {\n    var site = url+'?toolbar=0&amp;amp;navpanes=0&amp;amp;scrollbar=0';\n    document.getElementById('iFrameName').src = site;\n}\n\n&lt;a href=\"javascript:void(0);\" onClick=\"urlChange('www.mypdf.com/test.pdf')\"&gt;TEST &lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have a program which will dynamically set an iframe src to load pages. I need to hook a event handler for the page completely loaded. How can i do it? Thanks!</p>\n",
            "last_activity_date": 1373279330,
            "question_id": 6000987,
            "score": 18,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "dynamically set iframe src"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>'' == '0' // false\n</code></pre>\n\n<p>The left hand side is an empty string, and the right hand side is a string with one character. They are false because it is making a comparison between two un identical strings (thanks <a href=\"http://stackoverflow.com/users/176311/niall-smart\">Niall</a>). </p>\n\n<pre><code>0 == '' // true\n</code></pre>\n\n<p>Hence, why this one is true, because <code>0</code> is <em>falsy</em> and the empty string is <em>falsy</em>.</p>\n\n<pre><code>0 == '0' // true\n</code></pre>\n\n<p>This one is a bit trickier. The spec states that if the operands are a string and a number, then coerce the string to number. <code>'0'</code> becomes <code>0</code>. Thanks <a href=\"http://stackoverflow.com/users/329880/smfoote\">smfoote</a>.</p>\n\n<pre><code>false == undefined // false\n</code></pre>\n\n<p>The value <code>undefined</code> is special in JavaScript and is not equal to anything else except <code>null</code>. However, it is <em>falsy</em>.</p>\n\n<pre><code>false == null // false\n</code></pre>\n\n<p>Again, <code>null</code> is special. It is only equal to <code>undefined</code>. It is also <em>falsy</em>.</p>\n\n<pre><code>null == undefined // true\n</code></pre>\n\n<p><code>null</code> and <code>undefined</code> are similar, but not the same. <code>null</code> means <em>nothing</em>, whilst <code>undefined</code> is the value for a variable not set or not existing. It would kind of make sense that their values would be considered equal.</p>\n\n<p>If you want to be really confused, check this...</p>\n\n<pre><code>'\\n\\r\\t' == 0\n</code></pre>\n\n<p>A string consisting only of whitespace is considered equal to 0.</p>\n\n<p>Douglas Crockford makes a lot of recommendations, but you don't have to take them as gospel. :)</p>\n\n<p><a href=\"http://stackoverflow.com/users/157247/t-j-crowder\">T.J. Crowder</a> makes an excellent suggestion of studying the <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\" rel=\"nofollow\">ECMAScript Language Specification</a> to know the whole story behind these equality tests.</p>\n\n<p>Further Reading? <a href=\"http://bclary.com/2004/11/07/#a-11.9.1\" rel=\"nofollow\">Check the spec</a>.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>The answer to this question has to do with how JavaScript handles coercion. In the case of <code>==</code>, <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3\" rel=\"nofollow\">strings are coerced to be numbers</a>. Therefore:</p>\n\n<p><code>'' == '0'</code> is equivalent to <code>'' === '0'</code> (both are strings, so no coercion is necessary).</p>\n\n<p><code>0 == ''</code> is equivalent to <code>0 === 0</code> because the number the string <code>''</code> becomes the number <code>0</code> (<code>math.abs('') === 0</code>).</p>\n\n<p><code>0 == '0'</code> is equivalent to <code>0 === 0</code> for the same reason.</p>\n\n<p><code>false == undefined</code> is equivalent to <code>0 === undefined</code> because JavaScript coerces booleans to be numbers when types don't match</p>\n\n<p><code>false == null</code> is equivalent to <code>0 === null</code> for the same reason.</p>\n\n<p><code>null == undefined</code> is true because the spec says so.</p>\n\n<p>Thanks for asking this question. My understanding of <code>==</code> is much better for having researched it.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I've been reading <a href=\"http://rads.stackoverflow.com/amzn/click/0596517742\" rel=\"nofollow\">Douglas Crockford's <em>JavaScript: The Good Parts</em></a>, and I came across this weird example that doesn't make sense to me:</p>\n\n<pre><code>'' == '0'           // false\n0 == ''             // true\n0 == '0'            // true\n\nfalse == undefined  // false\nfalse == null       // false\nnull == undefined   // true\n</code></pre>\n\n<p>The author also goes on to mention \"to never use <code>==</code> and <code>!=</code>. Instead, always use <code>===</code> and <code>!==</code>\". However, he doesn't explain why the above behavior is exhibited? So my question is, why are the above results as they are? Isn't transitivity considered in JavaScript?</p>\n",
            "last_activity_date": 1410292906,
            "question_id": 5447153,
            "score": 18,
            "tags": [
                "javascript",
                "comparison-operators",
                "equivalence",
                "transitivity"
            ],
            "title": "JavaScript equality transitivity is weird"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>if(window.innerWidth == screen.width &amp;&amp; window.innerHeight == screen.height) {\n\n} else {\n\n}\n</code></pre>\n\n<p>(Warning: The browser chrome may muck with the height comparisons but the width checks should be pretty spot on)</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>In Firefox 3, window.fullScreen works (https://developer.mozilla.org/en/DOM/window.fullScreen).</p>\n\n<p>So, you could potentially do something like this:</p>\n\n<pre><code>if((window.fullScreen) ||\n   (window.innerWidth == screen.width &amp;&amp; window.innerHeight == screen.height)) {\n\n} else {\n\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>This works for all new browsers :</p>\n\n<pre><code>if (!window.screenTop &amp;&amp; !window.screenY) {\n    alert('Browser is in fullscreen');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I've ended up with following solution:  </p>\n\n<pre><code>function _fullscreenEnabled() {\n    // FF provides nice flag, maybe others will add support for this later on?\n    if(window['fullScreen'] !== undefined) {\n      return window.fullScreen;\n    }\n    // 5px height margin, just in case (needed by e.g. IE)\n    var heightMargin = 5;\n    if($.browser.webkit &amp;&amp; /Apple Computer/.test(navigator.vendor)) {\n      // Safari in full screen mode shows the navigation bar, \n      // which is 40px  \n      heightMargin = 42;\n    }\n    return screen.width == window.innerWidth &amp;&amp;\n        Math.abs(screen.height - window.innerHeight) &lt; heightMargin;\n  }\n</code></pre>\n\n<p>Which works in every browser I care about (Chrome, FF, IE, Safari/Mac, Opera).</p>\n\n<p>Update: It doesn't work on Opera/Mac, Opera on Mac while in full screen mode hides only the 'common' OSX menu, thus height differs only by few pixels which is too dangerous for me. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Simple enough: Find the browser viewport using <code>$(window).width()</code> and <code>$(window).height()</code>, and if they conform to a set of defined viewport sizes (600 x 480, 1280 x 800, etc.), then you can know that it is most likely fullscreen. Also you can set event handlers for like the <code>fll</code> key and other possible shortcuts to define browser fullscreen.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>this works on major browsers (ie,ff,opera,chrome)</p>\n\n<pre><code>   function isFullscreen(){\n\n    if($.browser.opera){\n\n      var fs=$('&lt;div class=\"fullscreen\"&gt;&lt;/div&gt;');\n      $('body').append(fs);\n\n      var check=fs.css('display')=='block';\n      fs.remove();\n\n      return check;\n    }\n\n    var st=screen.top || screen.availTop || window.screenTop;\n\n    if(st!=window.screenY){\n\n      return false;\n    }\n\n    return window.fullScreen==true || screen.height-document.documentElement.clientHeight&lt;=30;\n  }\n</code></pre>\n\n<p>css for opera:</p>\n\n<pre><code>.fullscreen { display: none; }\n\n@media all and (view-mode: fullscreen){\n\n  .fullscreen { display: block; }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/1047319/detecting-if-a-browser-is-in-full-screen-mode\">Detecting if a browser is in full screen mode</a>  </p>\n</blockquote>\n\n\n\n<p>Is there a way to check if a browser is currently in fullscreen mode (after the user pressed f11)?</p>\n\n<p>Something like:</p>\n\n<pre><code>if (window.fullscreen) {\n  // it's fullscreen!\n}\nelse {\n  // not fs!\n}\n</code></pre>\n\n<p>Thanks.</p>\n\n<p>Steerpike's answer is pretty good, but my comment:</p>\n\n<blockquote>\n  <p>Thanks a lot, but this answer is not\n  sufficient for FF. In Chrome I can set\n  a small tolerance, but in FF the\n  urlbar and tabs takes a while to\n  disappear, which means after pressing\n  f11, the detected window.innerWidth is\n  still too small.</p>\n</blockquote>\n",
            "last_activity_date": 1345821567,
            "question_id": 2863351,
            "score": 18,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Checking if browser is in fullscreen"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><code>map.setZoom(zoom:number)</code></p>\n\n<p><a href=\"https://developers.google.com/maps/documentation/javascript/reference#Map\" rel=\"nofollow\">https://developers.google.com/maps/documentation/javascript/reference#Map</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here is a function I use:</p>\n\n<pre><code>var map =  new google.maps.Map(document.getElementById('map'), {\n            center: new google.maps.LatLng(52.2, 5),\n            mapTypeId: google.maps.MapTypeId.ROADMAP,\n            zoom: 7\n        });\n\nfunction zoomTo(level) {\n        google.maps.event.addListener(map, 'zoom_changed', function () {\n            zoomChangeBoundsListener = google.maps.event.addListener(map, 'bounds_changed', function (event) {\n                if (this.getZoom() &gt; level &amp;&amp; this.initialZoom == true) {\n                    this.setZoom(level);\n                    this.initialZoom = false;\n                }\n                google.maps.event.removeListener(zoomChangeBoundsListener);\n            });\n        });\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Your code below is zooming the map to fit the specified bounds:</p>\n\n<pre><code>    addMarker(27.703402,85.311668,'New Road');\n    center = bounds.getCenter();\n    map.fitBounds(bounds);\n</code></pre>\n\n<p>If you only have 1 marker and add it to the bounds, that results in the closest zoom possible:</p>\n\n<pre><code>    function addMarker(lat, lng, info) {\n        var pt = new google.maps.LatLng(lat, lng);\n        bounds.extend(pt);\n</code></pre>\n\n<p>If you keep track of the number of markers you have \"added\" to the map (or extended the bounds with), you can only call fitBounds if that number is greater than one.  I usually push the markers into an array (for later use) and test the length of that array.</p>\n\n<p>If you will only ever have one marker, don't use fitBounds.  Call setCenter, setZoom with the marker position and your desired zoom level.</p>\n\n<pre><code>    function addMarker(lat, lng, info) {\n        var pt = new google.maps.LatLng(lat, lng);\n        map.setCenter(pt);\n        map.setZoom(your desired zoom);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>For zooming your map two level then just add this small code of line\n<code>map.setZoom(map.getZoom() + 2);</code></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Here is the code I have written to add a marker to the google map by providing latitude and longitude. The problem is that I get a very highly zoomed google map. I have tried setting the zoom level to 1 but this has no effect to the very highly zoomed map.</p>\n\n<pre><code> &lt;script src=\"http://maps.google.com/maps/api/js?v=3&amp;sensor=false\" type=\"text/javascript\"&gt;&lt;/script&gt;\n     &lt;script type=\"text/javascript\"&gt;\n        var icon = new google.maps.MarkerImage(\"http://maps.google.com/mapfiles/ms/micons/blue.png\",new google.maps.Size(32, 32), new google.maps.Point(0, 0),new google.maps.Point(16, 32));\n        var center = null;\n        var map = null;\n        var currentPopup;\n        var bounds = new google.maps.LatLngBounds();\n        function addMarker(lat, lng, info) {\n            var pt = new google.maps.LatLng(lat, lng);\n            bounds.extend(pt);\n            var marker = new google.maps.Marker({\n                position: pt,\n                icon: icon,\n                map: map\n            });\n            var popup = new google.maps.InfoWindow({\n                content: info,\n                maxWidth: 300\n            });\n            google.maps.event.addListener(marker, \"click\", function() {\n                if (currentPopup != null) {\n                    currentPopup.close();\n                    currentPopup = null;\n                }\n                popup.open(map, marker);\n                currentPopup = popup;\n            });\n            google.maps.event.addListener(popup, \"closeclick\", function() {\n                map.panTo(center);\n                currentPopup = null;\n            });\n        }\n        function initMap() {\n            map = new google.maps.Map(document.getElementById(\"map\"), {\n            center: new google.maps.LatLng(0, 0),\n            zoom: 1,\n            mapTypeId: google.maps.MapTypeId.ROADMAP,\n            mapTypeControl: false,\n            mapTypeControlOptions: {\n                style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR\n            },\n            navigationControl: true,\n            navigationControlOptions: {\n                style: google.maps.NavigationControlStyle.SMALL\n            }\n        });\n        addMarker(27.703402,85.311668,'New Road');\n        center = bounds.getCenter();\n        map.fitBounds(bounds);\n\n        }\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body onload=\"initMap()\" style=\"margin:0px; border:0px; padding:0px;\"&gt;\n&lt;div id=\"map\"&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>How can i decrease the level of zoom for this case?</p>\n",
            "last_activity_date": 1373032666,
            "question_id": 11454229,
            "score": 16,
            "tags": [
                "javascript",
                "google-maps",
                "google-maps-api-3"
            ],
            "title": "How to set zoom level in google map"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>If you modify your .htaccess file to include</p>\n\n<pre><code> AddType application/x-httpd-php .js\n</code></pre>\n\n<p>you can use a .js file and it will be handled by PHP, which is half of what you require.</p>\n\n<p>In terms of how ugly that solution is, I would say that this is the least ugly mechanism. You could try to pass your whole JS script through a PHP script as a string and do a search and replace for the variables you need to insert, but I think that you will agree that this is uglier than the solution you are currently using.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As far as avoiding running .js files through the PHP parser, there is little you can do, except maybe fetching the value of <code>js-variable</code> via an AJAX call.</p>\n\n<p>Also you may consider outputing the value like this:</p>\n\n<pre><code>var js_variable = &lt;?php echo json_encode ($php_variable); ?&gt;\n</code></pre>\n\n<p>to escape all the things that would break your javascript.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;?php\nheader('content-type:text/javascript;charset=utf-8');\nprintf('var foo = %s;', json_encode($foo));\n</code></pre>\n\n<p>json_encode ensures valid javascript. the header tells the browser tho interpret it as javascript.</p>\n\n<p>then you can link to it like a file</p>\n\n<pre><code>&lt;script src=\"script.php\"&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you don't want to use PHP to generate your javascript (and don't mind the extra call to your webserver), use AJAX to fetch the data.</p>\n\n<p>If you do want to use PHP, always encode with json_encode before outputting.</p>\n\n<pre><code>&lt;script&gt;\n    var myvar = &lt;?php echo json_encode($myVarValue); ?&gt;;\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>Put all your .js files in a folder and configure your HTTP server to redirect all the request to those files to a PHP file that loads the files and outputs them.</p>\n\n<p>Let's suppose you have Apache and your .js files are in /js:</p>\n\n<pre><code>RewriteRule /js   /getjs.php\n</code></pre>\n\n<p>getjs.php:</p>\n\n<pre><code>&lt;?php\nheader('Content-Type: text/javascript');\ninclude_once($_SERVER['SCRIPT_NAME']);\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Please use a rest/rpc api and pass json to your js. \nThis can be done in the following way if you are using jquery:</p>\n\n<p>rest.php </p>\n\n<pre><code>&lt;?php echo \"{name:biplav}\" ?&gt;\n</code></pre>\n\n<p>Then From your js make a get call like this:</p>\n\n<pre><code>var js_var;\n$.get(\"rest.php\", function(data) {\n         js_var=data;\n});\n</code></pre>\n\n<p>Thats the simplest example I can think of.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>In my opinion, if you need to pass a variable directly in your JS, probably your web application is not good designed.</p>\n\n<p>So, I have two tips:\n* Use JSON files for general configurations, like <code>/js/conf/userprefs.json</code></p>\n\n<pre><code>{\n    \"avatar\": \"/img/users/123/avatar.jpg\",\n    \"preferred_color\": \"blue\"\n    // ...\n}\n</code></pre>\n\n<ul>\n<li>or (better way) you can retrieve your json confs with an AJAX call.</li>\n</ul>\n\n<p>With PHP frameworks like Symfony2, you can decide a format in your routing configuration leaving the output of a variable to the template engine (like Twig).</p>\n\n<p>I do an example for Symfony2 users but this can be used by any programmer:</p>\n\n<p>routing.yml</p>\n\n<pre><code>userprefs:\n    pattern: /js/confs/userprefs.{_format}\n    defaults: { _controller: CoreBundle:JsonPrefs:User, _format: json }\n    requirements:\n        _format: json\n        _method: GET\n</code></pre>\n\n<p>Inside the controller you can do all the queries that you need to retrieve your variables putting these in the view:</p>\n\n<p>Resources/Views/JsonPrefs/User.json</p>\n\n<pre><code>{\n    \"avatar\": \"{{ user.avatar }}\",\n    \"preferred_color\": \"{{ user.preferred_color }}\"\n    // ...\n}\n</code></pre>\n\n<p>Inside your JS now you'll be able to retrieve the JSON with a simple AJAX call.\nFor performance purposes you can cache the JSONs (for example) with Varnish. In this way your server doesn't need to do a query every time you read the user preferences.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>At the very least, you can use a PHP shortcode to make your \"ugly\" solution a bit cleaner:</p>\n\n<pre><code>var js-variable = \"&lt;?= $php-variable ?&gt;\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>From time to time I have to pass some variables from PHP to JS script.\nFor now I did it like this:</p>\n\n<pre><code>var js-variable = \"&lt;?php echo $php-variable; ?&gt;\";\n</code></pre>\n\n<p>But this is very ugly and I can't hide my JS script in .js file because it has to be parsed by PHP. What is the best solution to handle this? </p>\n",
            "last_activity_date": 1373560673,
            "question_id": 10889233,
            "score": 16,
            "tags": [
                "php",
                "javascript",
                "cakephp",
                "cakephp-2.0"
            ],
            "title": "Efficient way to Pass variables from PHP to JavaScript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>In order to delete a cookie set the <code>expires</code> date to something in the past.  A function that does this would be.</p>\n\n<pre><code>var delete_cookie = function(name) {\n    document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n};\n</code></pre>\n\n<p>Then to delete a cookie named <code>roundcube_sessauth</code> just do.</p>\n\n<pre><code>delete_cookie('roundcube_sessauth');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>I'm not really sure if that was the situation with Roundcube version from May '12, but for current one the answer is that you can't delete <code>roundcube_sessauth</code> cookie from JavaScript, as it is marked as <code>HttpOnly</code>. And this means it's not accessible from JS client side code and can be removed only by server side script or by direct user action (via some browser mechanics like integrated debugger or some plugin).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You should define path on which cookie exists to ensure that you delete the real one</p>\n\n<pre><code>function set_cookie(name, value) {\n  document.cookie = name +'='+ value +'; Path=/;';\n}\nfunction delete_cookie(name) {\n  document.cookie = name +'=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n}\n</code></pre>\n\n<p>If you don't specify path browser sets cookie relative to page you are currently on, so if you delete cookie while on different page previous cookie continues its existence.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>To delete a cookie it's best practice to set its' value to <code>null</code>:</p>\n\n<p><code>document.cookie(\"cookieName\",null)</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I delete a specific cookie with the name <code>roundcube_sessauth</code>?</p>\n\n<p>Shouldn't the following:</p>\n\n<pre><code>function del_cookie(name) {\n    document.cookie = 'roundcube_sessauth' + \n    '=; expires=Thu, 01-Jan-70 00:00:01 GMT;';\n} \n</code></pre>\n\n<p>And then:</p>\n\n<pre><code>&lt;a href=\"javascript:del_cookie(name);\"&gt;KILL&lt;/a&gt;\n</code></pre>\n\n<p>Kill the <code>roundcube_sessauth</code> cookie?</p>\n",
            "last_activity_date": 1424647616,
            "question_id": 10593013,
            "score": 16,
            "tags": [
                "javascript",
                "cookies"
            ],
            "title": "Delete cookie by name?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>This is because the unload event is not part of any standard</p>\n\n<p><a href=\"https://developer.mozilla.org/en/DOM/window.onunload\">https://developer.mozilla.org/en/DOM/window.onunload</a></p>\n\n<p>check the bottom of the page i just linked to.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>This should work to show a confirmation when the users leaves, this is also not part of any standard.</p>\n\n<pre><code>$(window).on('beforeunload ',function() {\n    return 'Are you sure ?';\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>the unload function of jquery has some problem with browsers..refer the following link\n<a href=\"http://bugs.jquery.com/ticket/5538\" rel=\"nofollow\">http://bugs.jquery.com/ticket/5538</a></p>\n\n<p>can you elaborate on the problem so that we can find some work around??</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>you can use onfocusout on the body .. but i wouldn't recommend if you are trying to use something like an alert, on this operation, asking the user not to leave your page ..</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I found Joseph's comment as the correct answer, So posting this answer.</p>\n\n<p>Dialogs are blocked/prevented during \"beforeunload\" (with exception to the beforeunload prompt) and \"unload\" events. Can be confirmed by checking your console.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>jQuery's unload works well in chrome too, with the exception that Chrome doesn't allow alerts within it. I've used it to set cookies. And if it works with Chrome hope it works in Safari too.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>unload function in jQuery works fine in Firefox but not in chrome and safari. please check this fiddle in chrome and Firefox. <a href=\"http://jsfiddle.net/jeevankk/Gywnw/2/\">http://jsfiddle.net/jeevankk/Gywnw/2/</a> . Alerts a message when the page is refreshed.</p>\n\n<pre><code>$(window).unload(function() {  \n        alert(\"Unload\");  \n});\u200b  \n</code></pre>\n",
            "last_activity_date": 1402310182,
            "question_id": 9973816,
            "score": 16,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Why is jQuery unload not working in chrome and safari?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>you may need to implement a switch using the value of ...</p>\n\n<pre><code>require('os').type()\n</code></pre>\n\n<p>and the use spawn(\"open\") or spawn(\"xdg-open\") depending on the platform?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use <a href=\"https://github.com/jjrdn/node-open\">open</a> because it will handle the cross platform issue.  To install:</p>\n\n<pre><code>$ npm install open\n</code></pre>\n\n<p>To use:</p>\n\n<pre><code>var open = require('open');\n\nopen('http://www.google.com');\n\n//or\n\nopen('http://www.google.com', function (err) {\n  if (err) throw err;\n  console.log('The user closed the browser');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 26
                }
            ],
            "body": "<p>I'm writing an application using nodejs.</p>\n\n<p>One of function I wan to create is to open an default web browser and navigate to an specific URL.</p>\n\n<p>I want it to be portable so that it runs on windows/mac/linux.</p>\n",
            "last_activity_date": 1389477207,
            "question_id": 8500326,
            "score": 16,
            "tags": [
                "javascript",
                "node.js"
            ],
            "title": "How to use nodejs to open default browser and navigate to a specific URL"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Given that you have hours and minutes in variables (if you don't you can get them from the <code>Date</code> instance anyway by using <code>Date</code> instance <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date#Methods_2\">functions</a>):</p>\n\n<pre><code>var m = (parseInt((minutes + 7.5)/15) * 15) % 60;\nvar h = minutes &gt; 52 ? (hours === 23 ? 0 : ++hours) : hours;\n</code></pre>\n\n<p>minutes can as well be calculated by using <code>Math.round()</code>:</p>\n\n<pre><code>var m = (Math.round(minutes/15) * 15) % 60;\n</code></pre>\n\n<p>or doing it in a more javascript-sophisticated expression without any functions:</p>\n\n<pre><code>var m = (((minutes + 7.5)/15 | 0) * 15) % 60;\nvar h = ((((minutes/105) + .5) | 0) + hours) % 24;\n</code></pre>\n\n<p>You can check the jsPerf test that shows <code>Math.round()</code> is the slowest of the three while mainly the last one being the fastest as it's just an expression without any function calls (no function call overhead i.e. stack manipulation, although native functions may be treated differently in Javascript VM).\n//----     </p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>The code here is a little verbose but I'm sure you'll see how you could combine the lines to make this shorter. I've left it this way to clearly show the steps:</p>\n\n<pre><code>var now = new Date();\nvar mins = now.getMinutes();\nvar quarterHours = Math.round(mins/15);\nif (quarterHours == 4)\n{\n    now.setHours(now.getHours()+1);\n}\nvar rounded = (quarterHours*15)%60;\nnow.setMinutes(rounded);\ndocument.write(now);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This function round the time to the nearest quarter hour.</p>\n\n<pre><code>function roundTimeQuarterHour(time) {\n    var timeToReturn = new Date(time);\n\n    timeToReturn.setMilliseconds(Math.round(time.getMilliseconds() / 1000) * 1000);\n    timeToReturn.setSeconds(Math.round(timeToReturn.getSeconds() / 60) * 60);\n    timeToReturn.setMinutes(Math.round(timeToReturn.getMinutes() / 15) * 15);\n    return timeToReturn;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>For example:</p>\n\n<pre><code>Given time: 08:22 =&gt; Rounded to: 08:15\n\nGiven time: 08:23 =&gt; Rounded to: 08:30\n</code></pre>\n\n<p>Should be pretty simple. But all I was able to produce is lengthy, not very good code to solve the issue. My mind's just gone blank.</p>\n\n<p>Regards</p>\n",
            "last_activity_date": 1402125457,
            "question_id": 4968250,
            "score": 16,
            "tags": [
                "javascript",
                "time"
            ],
            "title": "How to round time to the nearest quarter hour in JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>you can use:\n$window.open(url, windowName, attributes);</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Here's a directive that will add <code>target=\"_blank\"</code> to all <code>&lt;a&gt;</code> tags with an <code>href</code> attribute. That means they will all open in a new window. Remember that directives are used in Angular for any dom manipulation/behavior. <strong><a href=\"http://jsbin.com/AXanuFEN/33/edit\">Live demo (click).</a></strong></p>\n\n<pre><code>app.directive('href', function() {\n  return {\n    compile: function(element) {\n      element.attr('target', '_blank');\n    }\n  };\n});\n</code></pre>\n\n<p>Here's the same concept made less invasive (so it won't affect all links) and more adaptable. You can use it on a parent element to have it affect all children links. <strong><a href=\"http://jsbin.com/AYUneQUc/1/edit\">Live demo (click).</a></strong></p>\n\n<pre><code>app.directive('targetBlank', function() {\n  return {\n    compile: function(element) {\n      var elems = (element.prop(\"tagName\") === 'A') ? element : element.find('a');\n      elems.attr(\"target\", \"_blank\");\n    }\n  };\n});\n</code></pre>\n\n<h3>Old Answer</h3>\n\n<p>It seems like you would just use <code>\"target=\"_blank\"</code> on your <code>&lt;a&gt;</code> tag. Here are two ways to go:</p>\n\n<pre><code>&lt;a href=\"//facebook.com\" target=\"_blank\"&gt;Facebook&lt;/a&gt;\n&lt;button ng-click=\"foo()\"&gt;Facebook&lt;/button&gt;\n</code></pre>\n\n<p>JavaScript:</p>\n\n<pre><code>var app = angular.module('myApp', []);\n\napp.controller('myCtrl', function($scope, $window) {\n  $scope.foo = function() {\n    $window.open('//facebook.com');\n  };\n});\n</code></pre>\n\n<p><a href=\"http://jsbin.com/AXanuFEN/2/edit\">Live demo here (click).</a></p>\n\n<p>Here are the docs for <code>$window</code>: <a href=\"http://docs.angularjs.org/api/ng.%24window\">http://docs.angularjs.org/api/ng.$window</a></p>\n\n<p>You could just use <code>window</code>, but it is better to use dependency injection, passing in angular's <code>$window</code> for testing purposes.</p>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>@m59 Directives will work for ng-bind-html you just need to wait for <code>$viewContentLoaded</code> to finish</p>\n\n<pre><code>app.directive('targetBlank', function($timeout) {\n  return function($scope, element) {\n    $scope.initializeTarget = function() {\n      return $scope.$on('$viewContentLoaded', $timeout(function() {\n        var elems;\n        elems = element.prop('tagName') === 'A' ? element : element.find('a');\n        elems.attr('target', '_blank');\n      }));\n    };\n    return $scope.initializeTarget();\n\n  };\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way to tell AngularJS that I want links to be opened in new windows when the user clicks on them?</p>\n\n<p>With jQuery I would do this:</p>\n\n<pre><code>jQuery(\"a.openInNewWindow\").click( function() {\n    window.open(this.href);\n    return false;\n})\n</code></pre>\n\n<p>Is there an equivalent with AngularJS?</p>\n",
            "last_activity_date": 1423529319,
            "question_id": 20099784,
            "score": 15,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "Open links in new window using AngularJS"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Google Chrome's engine works very much in this way. However, you'll notice in the console you'll get an <code>ReferenceError: Invalid left-hand side in assignment</code> when executing the following:</p>\n\n<pre><code>var myObj = new Object();\nfunction myFunc() {\n    myObj.test = \"blah\";\n    return myObj;\n}\nmyFunc() = new String(\"foobar\");\n</code></pre>\n\n<p>This is an Early Error, however, and because the v8's ECMAScript implementation, this should work if it properly executes <code>myFunc</code> before assuming the reference error.</p>\n\n<p>So, in v8's current implementation? Yes and No. It is implemented by default (due to how the language is structured), however the capability is halted by a different issue. <code>coolHostFn() = value</code> should not return an error, and should indeed be able to execute properly. However <code>3=4</code> should most certainly return a left-hand side assignment error.</p>\n\n<p>Not exactly an answer to your question, but I hope it helps clarify why it doesn't work.</p>\n\n<p>(Here's the Issue/Ticket in case anyone wants to chime in... <a href=\"http://code.google.com/p/v8/issues/detail?id=838\" rel=\"nofollow\">http://code.google.com/p/v8/issues/detail?id=838</a> )</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Read the <a href=\"http://es5.github.com/#x8.7\">EcmaScript specification, section 8.7 <em>The Reference Specification Type</em></a>:</p>\n\n<blockquote>\n  <p>The <code>Reference</code> type is used to explain the behaviour of such operators as <code>delete</code>, <code>typeof</code>, and the assignment operators. [\u2026] A Reference is a resolved name binding.</p>\n  \n  <p>Function calls are permitted to return references. This possibility is admitted purely for the sake of host objects. No built-in ECMAScript function defined by this specification returns a reference and there is no provision for a user-defined function to return a reference.</p>\n</blockquote>\n\n<p>Those last two sentences impressed me. With this, you could do things like <code>coolHostFn() = value</code> (<a href=\"http://stackoverflow.com/a/3710015/1048572\">valid syntax</a>, btw). So my question is:</p>\n\n<p>Are there any EcmaScript implementations that define host function objects which result in <code>Reference</code> values?</p>\n",
            "last_activity_date": 1351616299,
            "question_id": 13124417,
            "score": 15,
            "tags": [
                "javascript",
                "reference"
            ],
            "title": "Real world examples of Ecmascript functions returning a Reference?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Don't bother with the first snippet. Just use LABEL elements: </p>\n\n<pre><code>&lt;label&gt;&lt;input type=\"checkbox\"&gt;Some option&lt;/label&gt;\n</code></pre>\n\n<p>Now, when the user clicks the label (the text next to the checkbox), the checkbox will be activated. </p>\n\n<hr>\n\n<p>The second snippet can be optimized:  </p>\n\n<pre><code>$('input:checkbox').change(function() {\n    $('#' + this.id).toggle(this.checked);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The <strong>change</strong> event does not fire when you programmatically change the value of a check box.  What you can do to ensure it fires is:</p>\n\n<pre><code> $(\":checkbox\").parent().click(function(evt) {\n    if (evt.target.type !== 'checkbox') {\n        var $checkbox = $(\":checkbox\", this);\n        $checkbox.attr('checked', !$checkbox.attr('checked'));\n        $checkbox.change();\n    }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>you are using <code>'.'</code> which is for class selectors instead use <code>'#'</code> since you are using the element ID. Like this:</p>\n\n<pre><code>$(document).ready(function() {\n    $(\":checkbox\").bind('change', function() {\n        if($(this).attr(\"checked\")) {\n            $('#'+this.id).show();\n        }\n        else {\n            $('#'+this.id).hide();\n        }\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have two functions.</p>\n\n<p>The first function translates a div click into a checked/unchecked toggle.\nThe second function translates a checkbox change into a hide/show event.</p>\n\n<p>The problem is that when I use the first function to check/uncheck the box, the second function is not called. I am new to javascript, thanks.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n$(document).ready(function() {\n    $(\":checkbox\").parent().click(function(evt) {\n        if (evt.target.type !== 'checkbox') {\n            var $checkbox = $(\":checkbox\", this);\n            $checkbox.attr('checked', !$checkbox.attr('checked'));\n            evt.stopPropagation();\n            return false;\n        }\n    });\n});\n&lt;/script&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n$(document).ready(function() {\n    $(\":checkbox\").change(function() {\n        if($(this).attr(\"checked\")) {\n            $('.'+this.id).show();\n        }\n        else {\n            $('.'+this.id).hide();\n        }\n    });\n});\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1315721613,
            "question_id": 4869981,
            "score": 15,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "checkbox",
                "click"
            ],
            "title": "Why isn&#39;t my checkbox change event triggered?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You <em>can</em> access it the same way, it's a different parsing issue here, to do it, use a slightly different syntax:</p>\n\n<pre><code>(1).toString()\n</code></pre>\n\n<p>Numbers can have decimals, so the syntax for ending in a decimal is a bit ambiguous when you go to parse the code, use parenthesis to be valid.  It's a bit clearer when you see that this is also valid:</p>\n\n<pre><code>(1.).toString()\n</code></pre>\n\n<p>However with just <code>1.toString()</code> it's trying to parse as a number <em>with a decimal</em>, and it fails.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>I think you'll find an answer to your question in <a href=\"http://stackoverflow.com/questions/1995113/strangest-language-feature/3297392#3297392\">this answer</a> to another Stack Overflow question. To summarize <a href=\"http://stackoverflow.com/users/1109/theo\">Theo</a>'s answer:</p>\n\n<blockquote>\n  <p>[T]he parser expects a number followed\n  by a dot to be a floating point\n  literal. [...] [Y]ou only have to add another dot to make it work[.]</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Null (capital N) is a variable name.  Reserved words are case sensitive. null is the object null.  typeof null === \"object\" //true</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>If you look at the ECMAScript 3 specification you will see that primitive value types Null and Undefined don't have accompanying Null and Undefined Objects.</p>\n\n<pre><code>&gt;&gt; Null\nReferenceError: Null is not defined\n</code></pre>\n\n<p>The other primitive value types Number, String and Boolean types do have accompanying Number, String and Boolean objects which you can reference from global scope.  </p>\n\n<pre><code>&gt;&gt;Number\nfunction Number() { [native code] }\n&gt;&gt;Boolean\nfunction Boolean() { [native code] }\n</code></pre>\n\n<p>The purpose for these primitive value types is to provide methods such as <code>toString</code> and <code>valueOf</code> for their respective primitive value types:</p>\n\n<pre><code>&gt;&gt;var n = 1;\n&gt;&gt;n.toString();\n\"1\" \n</code></pre>\n\n<p>is the same as</p>\n\n<pre><code>&gt;&gt;var n = 1;\n&gt;&gt;Number.prototype.toString.call(n);\n\"1\"\n</code></pre>\n\n<p>Booleans and strings also work that way:</p>\n\n<pre><code>&gt;&gt;var b = true;\n&gt;&gt;b.toString(); \n\"true\"\n&gt;&gt;Boolean.prototype.toString.call(b);\n\"true\"\n</code></pre>\n\n<p>You can see that the primitive value objects are using the methods of their accompanying object when you try to mix types:</p>\n\n<pre><code>&gt;&gt;Boolean.prototype.toString.call(n); \nTypeError: Boolean.prototype.toString is not generic\n&gt;&gt;Number.prototype.toString.call(b)\nTypeError: Number.prototype.toString is not generic\n</code></pre>\n\n<p>Interestingly enough for boolean and string literal types, you can call these methods directly from the literal:</p>\n\n<pre><code>&gt;&gt;true.toString();\n\"true\"\n&gt;&gt;Boolean.prototype.toString.call(true)\n\"true\"\n&gt;&gt;\"moo\".toString();\n\"moo\"\n&gt;&gt;String.prototype.toString.call(\"moo\")\n\"moo\"\n</code></pre>\n\n<p>Primitive values null and undefined, since they don't have accompanying Null and Undefined objects cannot do these things:</p>\n\n<pre><code>&gt;&gt;Null\nReferenceError: Null is not defined\n&gt;&gt;null.toString()\nTypeError: Cannot call method 'toString' of null\n</code></pre>\n\n<p>Primitive value type number behaves like a mix of the two. You can call <code>toString</code> on a literal if you directly use the Number's prototype object's method:</p>\n\n<pre><code>&gt;&gt;Number.prototype.toString.call(1);\n\"1\"\n</code></pre>\n\n<p>But you cannot access the method from the literal itself like you can with strings and booleans:</p>\n\n<pre><code>&gt;&gt;1.toString()\nSyntaxError: Unexpected token ILLEGAL\n</code></pre>\n\n<p>Why is it that number literals behave differently from boolean and string even though there's a Number object?</p>\n",
            "last_activity_date": 1288296170,
            "question_id": 4046342,
            "score": 15,
            "tags": [
                "javascript"
            ],
            "title": "Why don&#39;t number literals have access to Number methods?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Chrome extensions with the <code>tabs</code> permission can use the <a href=\"http://code.google.com/chrome/extensions/windows.html#method-create\"><code>chrome.windows.create</code></a> method:</p>\n\n<pre><code>chrome.windows.create({\"url\": url, \"incognito\": true});\n</code></pre>\n\n<p>However, to access it, you'll either need to write your own extension or find an existing one which provides a suitable hook (I don't know whether this can be done with \"Mouse Stroke\"\u2014I'm too scared to look).</p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>I want to help my friend open a website in a new incognito window when he performs some mouse gestures (custom stroke in Mouse Stroke - Chrome Extension).</p>\n",
            "last_activity_date": 1410928145,
            "question_id": 2228118,
            "score": 15,
            "tags": [
                "javascript",
                "google-chrome-extension"
            ],
            "title": "How to open new incognito window with Javascript? (Google Chrome)"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Edit: now works in IE!  insertSiblingNodesAfter uses the parentNode of the sibling, which happens to be a tbody in IE</p>\n\n<p><hr /></p>\n\n<p>It's hard to know what quirks are in store when you try to manipulate the DOM cross-browser.  I'd recommend that you use an existing library that has been fully tested across all major browsers, and accounts for quirks.</p>\n\n<p>Personally I use MochiKit, you can dive into DOM manipulation here:\n<a href=\"http://mochikit.com/doc/html/MochiKit/DOM.html\" rel=\"nofollow\">http://mochikit.com/doc/html/MochiKit/DOM.html</a></p>\n\n<p>Your final function might look something like this:</p>\n\n<pre><code>function addEmployee(employeeName, employeeJob) {\n    var trs = getElementsByTagAndClassName(\"tr\", null, \"employeetable\");\n    insertSiblingNodesAfter(trs[trs.length-1], TR({}, TD({}, employeeName), TD({}, employeeJob));\n    alert(\"code executed!\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Apparently, in IE you need to append your row to the TBody element, not the Table element...\nSee discussion at <a href=\"http://www.ruby-forum.com/topic/139836\">Ruby-Forum</a>.</p>\n\n<p>Expanding on the discussion there, the &lt;table> markup is generally done without explicit &lt;thead> and &lt;tbody> markup, but the &lt;tbody> ELEMENT is where you actually need to add your new row, as &lt;table> does not contain &lt;tr> elements directly.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You need to create a TBODY element to add your new TR to and then add the TBODY to your table, like this:</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;&lt;head&gt;&lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body&gt;\n\n&lt;table id=\"employeetable\"&gt;\n    &lt;tr&gt;\n        &lt;th&gt;Name&lt;/th&gt;\n        &lt;th&gt;Job&lt;/th&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    function addEmployee(employeeName, employeeJob) {\n        var tableElement = document.getElementById(\"employeetable\");\n        if (tableElement) {\n            var newTable = document.createElement('tbody');   // New\n            var newRow = document.createElement(\"tr\");\n            var nameCell = document.createElement(\"td\");\n            var jobCell = document.createElement(\"td\");\n            nameCell.appendChild(document.createTextNode(employeeName));\n            jobCell.appendChild(document.createTextNode(employeeJob));\n            newRow.appendChild(nameCell);\n            newRow.appendChild(jobCell);\n            newTable.appendChild(newRow);   // New\n            tableElement.appendChild(newTable);   // New\n            alert(\"code executed!\");\n        }\n    }\n\n    setTimeout(\"addEmployee(\\\"Bob Smith\\\", \\\"CEO\\\");\", 1000);\n    setTimeout(\"addEmployee(\\\"John Franks\\\", \\\"Vice President\\\");\", 2000);\n    setTimeout(\"addEmployee(\\\"Jane Doe\\\", \\\"Director of Marketing\\\");\", 3000);\n&lt;/script&gt;\n\n&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>I have an AJAX application that downloads a JSON object and uses the data to add rows to an HTML &lt;table&gt; using Javascript DOM functions. It works perfectly... except in Internet Explorer. IE doesn't give any sort of error, and I've verified as best as I can that the code is being executed by the browser, but it simply has no effect. I created this quick and dirty page to demonstrate the problem:</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;&lt;head&gt;&lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body&gt;\n\n&lt;table id=\"employeetable\"&gt;\n    &lt;tr&gt;\n        &lt;th&gt;Name&lt;/th&gt;\n        &lt;th&gt;Job&lt;/th&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    function addEmployee(employeeName, employeeJob) {\n        var tableElement = document.getElementById(\"employeetable\");\n        if (tableElement) {\n            var newRow = document.createElement(\"tr\");\n            var nameCell = document.createElement(\"td\");\n            var jobCell = document.createElement(\"td\");\n            nameCell.appendChild(document.createTextNode(employeeName));\n            jobCell.appendChild(document.createTextNode(employeeJob));\n            newRow.appendChild(nameCell);\n            newRow.appendChild(jobCell);\n            tableElement.appendChild(newRow);\n            alert(\"code executed!\");\n        }\n    }\n\n    setTimeout(\"addEmployee(\\\"Bob Smith\\\", \\\"CEO\\\");\", 1000);\n    setTimeout(\"addEmployee(\\\"John Franks\\\", \\\"Vice President\\\");\", 2000);\n    setTimeout(\"addEmployee(\\\"Jane Doe\\\", \\\"Director of Marketing\\\");\", 3000);\n&lt;/script&gt;\n\n&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n\n<p>I haven't tried IE 8, but both IE 7 and IE 6 do not show the additional rows that are supposedly being added. I can't fathom why. Does anyone know a good workaround to this problem, or am I perhaps doing something wrong?</p>\n",
            "last_activity_date": 1241211160,
            "question_id": 812693,
            "score": 15,
            "tags": [
                "javascript",
                "ajax",
                "internet-explorer",
                "table",
                "cross-browser"
            ],
            "title": "Can&#39;t dynamically add rows to a &lt;TABLE&gt; in IE?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>you simply need to test a few parts of the user agent string in order to make sure you have the default android browser:</p>\n\n<pre><code>var nua = navigator.userAgent;\nvar is_android = (nua.indexOf('Mozilla/5.0') &gt; -1 &amp;&amp; nua.indexOf('Android ') &gt; -1 &amp;&amp; nua.indexOf('AppleWebKit') &gt; -1);\n</code></pre>\n\n<p>you can use the following to ensure that you do not match chrome within android, although on a lot of devices now, chrome is being used as the default browser.</p>\n\n<pre><code>var nua = navigator.userAgent;\nvar is_android = ((nua.indexOf('Mozilla/5.0') &gt; -1 &amp;&amp; nua.indexOf('Android ') &gt; -1 &amp;&amp; nua.indexOf('AppleWebKit') &gt; -1) &amp;&amp; !(nua.indexOf('Chrome') &gt; -1));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<pre><code>var ua = navigator.userAgent.toLowerCase();\nvar isAndroid = ua.indexOf(\"android\") &gt; -1; //&amp;&amp; ua.indexOf(\"mobile\");\nif(isAndroid) {\n    // Do something!\n    // Redirect to Android-site?\n    window.location = 'http://android.davidwalsh.name';\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>You can do this with Javascript and the useragent feature. What u need to do is to make 2 If-requests:</p>\n\n<p><strong>First you detect the device type:</strong></p>\n\n<pre><code>If android, ios, mobile, ipad, iphone \n   Take this setting\n</code></pre>\n\n<p>Now you make as much as u need if-requests or a case-request to detect the type of browser</p>\n\n<pre><code>If chrome, firefox, safari and so on\n   Take this setting\n</code></pre>\n\n<p>Thats it in the theory :)</p>\n",
                    "is_accepted": false,
                    "score": -7
                },
                {
                    "body": "<p>I think you are searching for this:</p>\n\n<p>Android native browser not updated above version 534.30 so you can filter to the version and \nAndroid UA string combination (above we can presume its a Chrome browser)</p>\n\n<p><strong>Here's my sample JavaScript code:</strong></p>\n\n<p><em>(If you need specific styling I would add a class to the body with the following JS snippet)</em></p>\n\n<pre><code>var defectAndroid = $window.navigator &amp;&amp; $window.navigator.userAgent.indexOf('534.30') &gt; 0 &amp;&amp; $window.navigator.userAgent.toLowerCase().match(/android/);\n\nif (defectAndroid) {\n   // sample code specific for your Android Stock browser\n}\n</code></pre>\n\n<p><em>(Some Android devices reporting 'android' that's why we need the lower case conversation)</em></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>it's easy to detect the Android device, but I am having trouble detecting ONLY the Android native browser. Problem is the Dolphin browser has an almost identical user-agent string, and I'd like a way to know if they are using the native browser or not..</p>\n\n<p>Is this possible?</p>\n",
            "last_activity_date": 1415030961,
            "question_id": 9286355,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "android",
                "jquery-mobile"
            ],
            "title": "How to detect only the native Android browser"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Instead of using a <code>submit</code>-type input, use a <code>button</code>-type input for form submission. The JavaScript handler for the <code>button</code>-type input should call form's <code>submit()</code> method after checking that commentary is non-empty. You should also alert the user to their mistake (better with a red text on the page rather than the pop-up produced by <code>alert()</code>).</p>\n\n<p>Remember that you should not rely <strong>solely</strong> on client-side input validation, though since it is always possible to send the form from a modified page or directly in HTTP.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This can only be done through JavaScript, as far as I know, so if you rely on this functionality you need to restructure.</p>\n\n<p>If you are using jQuery or something similar, it's pretty easy:</p>\n\n<pre><code>$('#my-form-id').submit(function() {\n    $('input[name,value=\"\"]').attr('name', '');\n});\n</code></pre>\n\n<p>Otherwise, handle the <code>submit</code> event (in this example, I use <code>onsubmit</code> but you may not want to do that):</p>\n\n<pre><code>var myForm = document.getElementById('my-form-id');\nmyForm.onsubmit = function() {\n    var allInputs = myForm.getElementsByTagName('input');\n    var input, i;\n\n    for(i = 0; input = allInputs[i]; i++) {\n        if(input.getAttribute('name') &amp;&amp; !input.value) {\n            input.setAttribute('name', '');\n        }\n    }\n};\n</code></pre>\n\n<p>You might also want to reset the form afterwards, if you use a listener and cancel.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>You probably don't want to match radio buttons. And if the form contains select's, you'll need to match them too.</p>\n\n<p>With jQuery, you might use something like this:</p>\n\n<pre><code>$('#form-id').submit(function() {\n    $(this).find('input[type!=\"radio\"][value=\"\"],select:not(:has(option:selected[value!=\"\"]))').attr('name', '');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have HTML form with input fields. Some of inputs can be empty, i.e. the value is \"\".</p>\n\n<p><code>&lt;input name=\"commentary\" value=\"\"&gt;</code></p>\n\n<p>Just now, when <code>commentary</code> field is not set, it appears in submit url like: <code>&amp;commentary=</code></p>\n\n<p>How I can remove empty inputs from the submit url, so when the <code>commentary</code> input is empty it would not be passed at all.</p>\n\n<p>Thank you very much.</p>\n\n<h3>Update</h3>\n\n<p>Thanks to <strong>minitech</strong> answer, I could resolve it. JavaScript code is below:</p>\n\n<pre><code>$('#my-form-id').submit(function() {\n  var commentary = $('#commentary').val(); \n  if (commentary === undefined || commentary === \"\") {\n    $('#commentary').attr('name', 'empty_commentary');\n  } else {\n    $('#commentary').attr('name', 'commentary');        \n  }\n});\n</code></pre>\n\n<p>The only reason I have prefixed field name with \"empty_\" is that IE passes empty name in URL anyway.</p>\n",
            "last_activity_date": 1401902347,
            "question_id": 8029532,
            "score": 14,
            "tags": [
                "javascript",
                "html",
                "html-form",
                "html-form-post"
            ],
            "title": "How to prevent submitting the HTML form&#39;s input field value if it empty"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Transforms don't affect the intrinsic CSS properties, so you are seeing correct behavior. You need to look at the Current Transformation Matrix - as returned from getComputedStyle().webkitTransform in order to figure out how big something has been scaled.</p>\n\n<p>Update: In Firefox 12 and later and Chrome/Safari - as Alex says below, you can use getBoundingClientRect() to take into account any transforms applied to an element</p>\n\n<p>The scale transition starts from 50%/50% because that's the default &amp; correct behavior. If you want it to start from the origin, then you need to set transform-origin: 0% 0%;</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I take it the span tag has <code>display:block</code>? transforms are only supposed to work for block elements. When I goto console and load jquery (just for ease) and do this: </p>\n\n<p><code>$('span#foo').css({\"-webkit-transform\": \"scale(2.0, 2.0)\"})</code></p>\n\n<p>nothing happens. But if I do this:</p>\n\n<p><code>$('span#foo').css('display','block').css({\"-webkit-transform\": \"scale(2.0, 2.0)\"})</code></p>\n\n<p>suddenly it changes, and offsetHeight increases. Disappointingly, the offset hight goes from 16 to 19, and not to 32 (although the visual appearance is double the size and maybe it is accurate) \u2014 but at least it does appear to work as advertised.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"https://developer.mozilla.org/en-US/docs/DOM/element.getBoundingClientRect\"><code>getBoundingClientRect()</code></a> returns the correct values for me.</p>\n\n<p><a href=\"http://jsfiddle.net/zj9Rs/\">jsFiddle</a>.</p>\n",
                    "is_accepted": true,
                    "score": 13
                }
            ],
            "body": "<p>I'm fighting against an oddity (I think) of the offsetWidth property.<br>\nthis is the scenario:  </p>\n\n<p>I've got, let's say, a <em>span</em> tag, in my js, at a certain point I perform a css3 transform\nto this element, like:</p>\n\n<pre><code>        el.set('styles', {\n            'transform':'scale('+scale+', '+scale+')',      /* As things would be in a normal world */\n            '-ms-transform':'scale('+scale+', '+scale+')',      /* IE 9 */\n            '-moz-transform':'scale('+scale+', '+scale+')',         /* Moz */\n            '-webkit-transform':'scale('+scale+', '+scale+')',  /* Safari / Chrome */\n            '-o-transform':'scale('+scale+')'       /* Oprah Winfrey */ \n        }); \n        w = el.getWidth();\n        console.log('after scaling: ' + w);\n</code></pre>\n\n<p>at this point the log returns me fuzzy values, like it doesn't know what to say.<br>\nany suggestion?  </p>\n",
            "last_activity_date": 1354214666,
            "question_id": 5834624,
            "score": 14,
            "tags": [
                "javascript",
                "html",
                "css3",
                "mootools"
            ],
            "title": "Retrieve width/height of a css3 scaled element"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>To my knowledge you can't do this as the path would lie outside of the website.</p>\n\n<p>You can however do the following:</p>\n\n<p>1) Put all the scripts you want to share in Common.Web\\Scripts<br>\n2) For each script file in your Web application <a href=\"http://msdn.microsoft.com/en-us/library/9f4t9t92.aspx\" rel=\"nofollow\">'Add as Link'</a> to your Common.Web Scripts (<em>you don't even need to do this step; it is however nice to see what scripts your web app uses in VS</em>)<br>\n3) Add a post-build event to your Web application that copies the scripts from Common.Web\\Scripts to your WebApp\\Scripts folder:</p>\n\n<blockquote>\n  <p>copy $(ProjectDir)..\\Common.Web\\Scripts* $(ProjectDir)\\Scripts</p>\n</blockquote>\n\n<p>so from your perspective in Visual Studio you will only have a single place to update your .js files that can be used by multiple projects.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Instead of using <code>Url</code> helper use relative addressing. What you tried to do makes no sense, as helper is used to resolve paths relative to it's project.</p>\n\n<p>Since you are trying to use resources of another project, it's ok to assume that you know upfront where you're going to deploy each project. Even though I don't like this practice, I can think of a pragmatic solution for this.</p>\n\n<hr>\n\n<p>If your two applications are at urls:</p>\n\n<pre><code>http://www.mysite.com/app1\nhttp://www.mysite.com/Common.Web\n</code></pre>\n\n<p>you could address like this:</p>\n\n<pre><code>&lt;script src=\"@Url.Content(\"~\")/../Common.Web/Scripts/bootstrap-typeahead.js\")\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>meaning, resolve my app root folder, go up a level, and go down rest of the path.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I do this very thing.  However I embed the Javascript files and other content in another DLL and then call them from my razor syntax like so.  Here is the code I use.\nIn the View: \nScript example: </p>\n\n<pre><code>        &lt;script src=@Url.Action(\"GetEmbeddedResource\", \"Shared\", new { resourceName = \"Namespace.Scripts.jquery.qtip.min.js\", pluginAssemblyName = @Url.Content(\"~/bin/Namespace.dll\") }) type=\"text/javascript\" &gt;&lt;/script&gt;\n</code></pre>\n\n<p>Image Example: </p>\n\n<pre><code>@Html.EmbeddedImage(\"corporate.gif\", new { width = 150, height = 50})\n</code></pre>\n\n<p>Here is my helper methods: </p>\n\n<pre><code>        public static MvcHtmlString EmbeddedImage(this HtmlHelper htmlHelper, string imageName, dynamic htmlAttributes)\n    {\n        UrlHelper url = new UrlHelper(HttpContext.Current.Request.RequestContext);\n        var anchor = new TagBuilder(\"img\");\n        anchor.Attributes[\"src\"] = url.Action(\"GetEmbeddedResource\", \"Shared\",\n                                              new\n                                                  {\n                                                      resourceName = \"Namespace.Content.Images.\" + imageName,\n                                                      pluginAssemblyName = url.Content(\"~/bin/Namespace.dll\")\n                                                  });\n\n        if (htmlAttributes != null)\n        {\n            string width = \"\";\n            string height = \"\";\n            PropertyInfo pi = htmlAttributes.GetType().GetProperty(\"width\");\n            if (pi != null)\n                width = pi.GetValue(htmlAttributes, null).ToString();\n\n            pi = htmlAttributes.GetType().GetProperty(\"height\");\n            if (pi != null)\n                height = pi.GetValue(htmlAttributes, null).ToString();\n\n            if (!string.IsNullOrEmpty(height))\n                anchor.Attributes[\"height\"] = height;\n\n            if (!string.IsNullOrEmpty(width))\n                anchor.Attributes[\"width\"] = width;\n        }\n        return MvcHtmlString.Create(anchor.ToString());\n    }\n</code></pre>\n\n<p>Lastly my shared Controller:</p>\n\n<pre><code>        [HttpGet]\n    public FileStreamResult GetEmbeddedResource(string pluginAssemblyName, string resourceName)\n    {\n        try\n        {\n            string physicalPath = Server.MapPath(pluginAssemblyName);\n            Stream stream = ResourceHelper.GetEmbeddedResource(physicalPath, resourceName);\n            return new FileStreamResult(stream, GetMediaType(resourceName));\n            //return new FileStreamResult(stream, GetMediaType(tempResourceName));\n        }\n        catch (Exception)\n        {\n            return new FileStreamResult(new MemoryStream(), GetMediaType(resourceName));\n        }\n    }\n\n    private string GetMediaType(string fileId)\n    {\n        if (fileId.EndsWith(\".js\"))\n        {\n            return \"text/javascript\";\n        }\n        else if (fileId.EndsWith(\".css\"))\n        {\n            return \"text/css\";\n        }\n        else if (fileId.EndsWith(\".jpg\"))\n        {\n            return \"image/jpeg\";\n        }\n        else if (fileId.EndsWith(\".gif\"))\n        {\n            return \"image/gif\";\n        }\n        else if (fileId.EndsWith(\".png\"))\n        {\n            return \"image/png\";\n        }\n        return \"text\";\n    }\n</code></pre>\n\n<p>Resource Helper:</p>\n\n<pre><code>    public static class ResourceHelper\n{\n    public static Stream GetEmbeddedResource(string physicalPath, string resourceName)\n    {\n        try\n        {\n            Assembly assembly = PluginHelper.LoadPluginByPathName&lt;Assembly&gt;(physicalPath);\n\n            if (assembly != null)\n            {\n                string tempResourceName = assembly.GetManifestResourceNames().ToList().FirstOrDefault(f =&gt; f.EndsWith(resourceName));\n                if (tempResourceName == null)\n                    return null;\n                return assembly.GetManifestResourceStream(tempResourceName);\n            }\n        }\n        catch (Exception)\n        {\n\n        }\n\n        return null;\n    }\n}  \n</code></pre>\n\n<p>Plugin Helper</p>\n\n<pre><code>public static T LoadPluginByPathName&lt;T&gt;(string pathName)\n{\n    string viewType = typeof(T).GUID.ToString();\n\n    if (HttpRuntime.Cache[viewType] != null)\n        return HttpRuntime.Cache[viewType] is T ? (T)HttpRuntime.Cache[viewType] : default(T);\n\n    object plugin = Assembly.LoadFrom(pathName);\n    if (plugin != null)\n    {\n        //Cache this object as we want to only load this assembly into memory once.\n        HttpRuntime.Cache.Insert(viewType, plugin);\n        return (T)plugin;\n    }\n\n    return default(T);\n}\n</code></pre>\n\n<p>Remember that I am using these as embedded content!</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I've got a C# MVC project that uses Razor syntax.<br>\nTo be able to reuse some code, I want to put some of my JavaScript and CSS files in a different project and include them somehow.<br>\nThis is how my scripts are included atm:</p>\n\n<pre><code>&lt;script src=\"@Url.Content(\"~/Scripts/bootstrap-typeahead.js\")\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"@Url.Content(\"~/Scripts/bootstrap-dropdown.js\")\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>At the momemnt, the scripts are in the same project as the cshtml file. But the scripts should be placed in the Common.Web project instead...<br>\nWhat I want to do is this (doesn't work tho):</p>\n\n<pre><code>&lt;script src=\"@Url.Content(\"Common.Web/Scripts/bootstrap-typeahead.js\")\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"@Url.Content(\"Common.Web/Scripts/bootstrap-dropdown.js\")\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1346765403,
            "question_id": 11842988,
            "score": 13,
            "tags": [
                "c#",
                "javascript",
                "asp.net-mvc",
                "razor"
            ],
            "title": "MVC Razor, Include JS / CSS files from another project"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Well... idk how extensive it would be, but you could use this:</p>\n\n<pre><code>[^\\w\\s\\n\\t]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Your regex would look something like...</p>\n\n<pre><code>/[,!@#$%^&amp;*()\\u9999]/\n</code></pre>\n\n<p>Where you replace each <code>\\u9999</code> with the Unicode codepoint for the other punctuation characters. </p>\n\n<p>If you could find a bunch in a <em>range</em>, you could specify that with the <code>-</code> range operand, e.g. <code>\\u9990-\\u9999</code>.</p>\n\n<p>As far as I know you can't use something like <code>\\pP</code> in JavaScript regexes.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If it's possible for you to use a plugin, there is a plugin for JavaScript: <a href=\"http://xregexp.com/plugins/\" rel=\"nofollow\">XRegExp Unicode plugins</a>. That adds support for Unicode categories, scripts, and blocks (I personally have only read about it, I never used it).</p>\n\n<p>With this plugin it should be possible to use Unicode categories like <code>\\p{P}</code> as explained at <a href=\"http://www.regular-expressions.info/unicode.html\" rel=\"nofollow\">regular-expressions.info</a>.</p>\n\n<p><strong>Update:</strong>\nOK, I tested it, and it seems to work fine.</p>\n\n<p>You need to get the lib from <a href=\"http://xregexp.com/\" rel=\"nofollow\">XRegExp</a> and additionally the Unicode Base and Unicode Category plugins (linked above).</p>\n\n<pre><code>&lt;script src=\"xregexp.js\"&gt;&lt;/script&gt;\n&lt;script src=\"addons/unicode-base.js\"&gt;&lt;/script&gt;\n&lt;script src=\"addons/unicode-categories.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n    var unicodePunctuation = XRegExp(\"^\\\\p{P}+$\");\n\n    alert(unicodePunctuation.test(\"?.,;!\u00a1\u00bf\u3002\u3001\u00b7\")); // true\n&lt;/script&gt;\n</code></pre>\n\n<p>The above alerts <code>true</code>. I included some Spanish and Chinese punctuation in my test string, <code>\"?.,;!\u00a1\u00bf\u3002\u3001\u00b7\"</code>.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>Adding to @stema's answer (<a href=\"http://stackoverflow.com/a/7578937/114140\">http://stackoverflow.com/a/7578937/114140</a>)... here is the regex as a string (so you don't need to bloat your project with XRegExp).</p>\n\n<pre><code>!-#%-\\x2A,-/:;\\x3F@\\x5B-\\x5D_\\x7B}\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E3B\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65\n</code></pre>\n\n<p>I used this in my own project with some additions...</p>\n\n<pre><code>    // any kind of punctuation character (including international e.g. Chinese and Spanish punctuation)\n    // author: http://www.regular-expressions.info/unicode.html\n    // source: https://github.com/slevithan/xregexp/blob/41f4cd3fc0a8540c3c71969a0f81d1f00e9056a9/src/addons/unicode/unicode-categories.js#L142\n    // note: XRegExp unicode output taken from http://jsbin.com/uFiNeDOn/3/edit?js,console (see chrome console.log), then converted back to JS escaped unicode here http://rishida.net/tools/conversion/, then tested on http://regexpal.com/\n    // suggested by: http://stackoverflow.com/a/7578937\n    // added: extra characters like \"$\", \"\\uFFE5\" [yen symbol], \"^\", \"+\", \"=\" which are not consider punctuation in the XRegExp regex (they are currency or mathmatical characters)\n    // added: \\u3000-\\u303F Chinese Punctuation for good measure\n    var regex_characters_to_remove = /[\\$\\uFFE5\\^\\+=`~&lt;&gt;{}\\[\\]|\\u3000-\\u303F!-#%-\\x2A,-/:;\\x3F@\\x5B-\\x5D_\\x7B}\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E3B\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]+/g\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I need a regular expression to match against all punctuation marks, such as the standard [,!@#$%^&amp;*()], but including international marks like the upside-down Spanish question mark, Chinese periods, etc. My google-fu is coming up short. Does anyone have such a regular expression on hand that's compatible with Javascript?</p>\n",
            "last_activity_date": 1390888242,
            "question_id": 7576945,
            "score": 13,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "Javascript regular expression for punctuation (international)?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.movable-type.co.uk/scripts/latlong.html\">This page</a> has JavaScript code for computing the distance of two geographical locations, if that is what you're after.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>It depends on what level of accuracy you want.</p>\n\n<p>You could work it out by basic triangle trigonomoetry - ie work out the difference between their longitude, that's one side; then the diff between their latitude, that's the second. Now you can calculate the third side (ie the actual distance between the two) easily enough with basic junior school maths.</p>\n\n<p>However, that method ignores the curvature of the earth's surface, so if you need to take that into account, you'll need to start getting a bit more clever. But you won't need to worry about that unless the distances are quite large or you need an very high degree of accuracy. For most purposes the basic trig method is fine.</p>\n\n<p>The other point, of course is that these methods give you a straight-line measurement. This may be what you want, but you may also want to know the distance to travel - ie on the road. This is completely different, as you'd need to have an accurate map of all the relevant roads. If this is what you need, it might be easier to delegate to Google's maps service (or one of several other similar alternatives).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>GPS coordinates are geographical coordinates on the WGS84 spheroid. Under this model, Vincenty's formulae gives results of sub-millimeter accuracy. For most applications, that's either overkill or actually deceptive, as the earth's surface is not modelled by WGS84 to that scale.</p>\n\n<p>You can compare the accurracy of various methods of distance computation <a href=\"http://mercurial.intuxication.org/hg/js-hacks/raw-file/tip/geo/distance.html\">on this page</a>. As you can see, the spherical and the differential approximations (the latter uses the Pythagorean theorem with the correct local metric) are inaccurate for a lot of cases.</p>\n\n<p>Of the remaining methods, the first one uses the spheroid's mean radius to convert from geographical to geocentrical latitude, whereas the second one uses the cosine rule to get more accurate results in case of 'small' distances (where the definition of 'small' mainly depends on the difference in latitude).</p>\n\n<p>A seperate script containing only these two methods <a href=\"http://mercurial.intuxication.org/hg/js-hacks/raw-file/tip/geo/distance.js\">can be found here</a>, which provides a function called <code>distance()</code> and expecting four arguments: the two latitudes, the difference in longitude (all in radians) and a boolean flag incidating whether the distance is 'small'.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>If you use the Google Maps API v3 you can calculate the distance as follows:</p>\n\n<p>Include the <strong>Google Maps</strong> JavaScript file with the <strong>geometry library</strong>:</p>\n\n<pre><code>http://maps.google.com/maps/api/js?sensor=true&amp;libraries=geometry\n</code></pre>\n\n<p>The distance can be measured now by using the <a href=\"https://developers.google.com/maps/documentation/javascript/reference?csw=1#spherical\" rel=\"nofollow\"><strong><code>computeDistanceBetween()</code></strong></a> method:</p>\n\n<pre><code>var from = new google.maps.LatLng(49.004, 8.456);\nvar to   = new google.maps.LatLng(49.321, 8.789);\nvar dist = google.maps.geometry.spherical.computeDistanceBetween(from, to);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                }
            ],
            "body": "<p>I have two GEO locations.  How can I calculate the distance between them?</p>\n",
            "last_activity_date": 1392384802,
            "question_id": 3838493,
            "score": 13,
            "tags": [
                "javascript"
            ],
            "title": "Distance Between Two GEO Locations"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I think you can start by checking testStatus of the callback function to make sure that the script was really loaded. Callback function has two parameters, more defails on those you can find on <a href=\"http://docs.jquery.com/Ajax/jQuery.getScript#urlcallback\" rel=\"nofollow\">jQuery Docs</a></p>\n\n<pre><code>$.getScript(\"CAGScript.js\", function (data, textStatus) {\n    if (textStatus === \"success\") {\n        try {\n            CAGinit();\n        } catch(err) {\n            console.log(err);\n        }\n    } else {\n        console.log(\"script not loaded\");\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If the file is held on the same domain then jQuery will use XHR to retrieve its contents and then will globally \"eval\" it. This should work fine but if you're having problems then I'd suggest using the alternative method of injecting a script tag. Unfortunately, jQuery doesn't expose this functionality so you'll have to do it yourself:</p>\n\n<pre><code>var script = jQuery('&lt;script/&gt;').attr('src', 'CAGSCript.js').appendTo('head');\n\nvar timer = setInterval( function(){ \n    if (window.CAGInit !== undefined) {\n        clearInterval(timer);\n        script.remove();\n        // Do your stuff:\n        CAGInit();\n    }\n}, 200);\n</code></pre>\n\n<p>It'd be best to abstract this to a function; the above is just an example...</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Just had the same problem on firefox, solved it with a little hack.</p>\n\n<p>Applying it to your example:</p>\n\n<pre><code>$.getScript(\"CAGScript.js\", function (xhr) {\n    try {\n        CAGinit();\n    } catch(err) {\n        eval(xhr);\n        CAGinit();\n    }\n});\n</code></pre>\n\n<p>Basically forcing an evaluation of the XHR response if it fails to do so by itself.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Yeah, I've discovered too that getScript is unreliable in FireFox, firing the callback before the script has been downloaded and/or executed. (Using JQuery 1.41 &amp; FireFox 3.6. Issue doesn't seem to afflict IE, Chrome or Opera.)</p>\n\n<p>I haven't done extensive testing, but it seems to only happen with some specific scripts...not sure why.</p>\n\n<p>RaYell's suggestion doesn't work, as getScript will report success even though the script has not yet been eval'ed. Pieter's suggestion in most cases causes the code to be eval'ed twice, which is inefficient and can cause errors.</p>\n\n<p>This alternative seems to work where getScript does not. Note that it seems to be adding a SCRIPT DOM element, whereas getScript does XHR.</p>\n\n<p><a href=\"http://www.diveintojavascript.com/projects/sidjs-load-javascript-and-stylesheets-on-demand\" rel=\"nofollow\">http://www.diveintojavascript.com/projects/sidjs-load-javascript-and-stylesheets-on-demand</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I noticed the same issue with FF 3.6.</p>\n\n<p>A solution is to load the script synchronously.</p>\n\n<p>As mentioned in <a href=\"http://api.jquery.com/jQuery.getScript/\">jQuery's documentation</a>, getScript is shorthand for:</p>\n\n<pre><code>$.ajax({\n  url: url,\n  dataType: 'script',\n  success: success\n});\n</code></pre>\n\n<p>Everything works fine if I use the following instead of getScript:</p>\n\n<pre><code>$.ajax({\n  url: url,\n  dataType: 'script',\n  success: success,\n  async: false\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I've gotten bit by this issue on Chrome as well. jQuery occasionally calls the success callback as if all is well, but the script hasn't actually been loaded properly.  In our case, the solution was to simply change from trusting jQuery: </p>\n\n<pre><code>&lt;script&gt;\n    $.getScript(\"helpers.js\", function () {\n        // use helpers....or: EXPLODE (wheeeee!)\n        helpers.doSomething();\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>To trusting the browser:</p>\n\n<pre><code>&lt;script src=\"helpers.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n    helpers.doSomething();\n&lt;/script&gt;\n</code></pre>\n\n<p>I'm finding again and again that \"less jQuery == less edge cases == less bugs\". And usually more readable code, too!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just wanted to offer some insight I have on this issue. The callback won't fire if there is an error in the code you are loading and (at least on Chrome with jQuery 1.7.1) the error will be swallowed. I discovered that I had a stray curly brace from autocomplete in the code I was loading and the callback function didn't fire. Intermittent behavior here could be caused by changing the loaded code between tests.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>I wanted to have something similar to auto_load in PHP implemented in JS, the typical solution is using try-catch on all functions.. when the function is missing we jump to downloading its library..\nMy solution is taken from Pieter solution as follows:</p>\n\n<pre><code>function CheckUserPW(username,password){\n    try{\n       loginCheckUserPW(username,password);\n    } catch(err) {\n        $.getScript('login.js', function(xhr){ \n            eval(xhr);\n            loginCheckUserPW(username,password);\n        });\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In order to make sure CAGScript.js is LOADED and EXECUTED before calling CAGinit function, the surest way is to have the function call inside CAGScript.js.</p>\n\n<p>CAGScript.js:</p>\n\n<pre><code>\n\n    ...\n    /*\n    your code\n    */\n    function CAGinit(){\n    ...\n    }\n    ...\n    /* last line */\n    CAGinit();\n\n</code></pre>\n\n<p>and then, in your main file just call getScript():</p>\n\n<pre> <code>\n\n    $.getScript(\"CAGScript.js\");\n\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm using the following bit of script to load another one:</p>\n\n<pre><code>$.getScript(\"CAGScript.js\", function () {\n    try {\n        CAGinit();\n    } catch(err) {\n        console.log(err);\n    }\n});\n</code></pre>\n\n<p>The idea is that $.getScript loads the script, then executes the callback when it's done. <code>CAGInit()</code> is a function that lives in <code>CAGScript.js</code>.</p>\n\n<p>The problem is that roughly half the time, <code>CAGInit()</code> doesn't fire (in any browser). Logging to the Firebug console reports that it's not defined. The rest of the time it works perfectly.</p>\n\n<p>Does anyone have any ideas what I'm doing wrong?</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1383761828,
            "question_id": 1130921,
            "score": 13,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Is the callback on jQuery&#39;s getScript() unreliable or am I doing something wrong?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><strong>Edit:</strong></p>\n\n<blockquote>\n  <p>The problem i face is that HTML5 is all on one index page. So i need\n  the timer to start on click of the blog link.</p>\n</blockquote>\n\n<p>Try calling the setTimeout inside a click handler on the blog link,</p>\n\n<pre><code>$('#blogLink').click (function (e) {\n   e.preventDefault(); //will stop the link href to call the blog page\n\n   setTimeout(function () {\n       window.location.href = \"blog.html\"; //will redirect to your blog page (an ex: blog.html)\n    }, 2000); //will call the function after 2 secs.\n\n});\n</code></pre>\n\n<hr>\n\n<p>Try using <code>setTimeout</code> function like below,</p>\n\n<pre><code>setTimeout(function () {\n   window.location.href = \"blog.html\"; //will redirect to your blog page (an ex: blog.html)\n}, 2000); //will call the function after 2 secs.\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>Include this code somewhere when you slide to your 'section' called blog.</p>\n\n<pre><code>$(\"#myLink\").click(function() {\n    setTimeout(function() {\n        window.navigate(\"the url of the page you want to navigate back to\");\n    }, 2000);\n});\n</code></pre>\n\n<p>Where <code>myLink</code> is the id of your href.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>&lt;meta http-equiv=\"refresh\" content=\"2; url=http://example.com/\" /&gt;\n</code></pre>\n\n<p>Here 2 is delay in seconds.</p>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<pre><code> &lt;script type=\"text/JavaScript\"&gt;\n      setTimeout(\"location.href = 'http://www.your_site.com';\",1500);\n &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can easily create timed redirections with JavaScript. But I suggest you to use <em>location.replace('url')</em> instead of <em>location.href</em>. It prevents to browser to push the site into the history. I found <a href=\"http://online-marketing-technologies.com/tools/javascript-redirection-generator.html\" rel=\"nofollow\" title=\"Javascript redirect\">this JavaScript redirect</a> tool. I think you could use this.</p>\n\n<p>Example code (with 5 secs delay):</p>\n\n<pre><code>&lt;!--Pleace this snippet right after opening the head tag to make it work properly--&gt;\n&lt;!--REDIRECTING STARTS--&gt;\n&lt;link rel=\"canonical\" href=\"https://yoururl.com\"/&gt;\n&lt;noscript&gt;\n&lt;meta http-equiv=\"refresh\" content=\"5;URL=https://yoururl.com\"&gt;\n&lt;/noscript&gt;\n&lt;script type=\"text/javascript\"&gt;\nvar url = \"https://yoururl.com\";\nvar delay = \"5000\";\n\nwindow.onload = function ()\n{\n    DoTheRedirect()\n}\nfunction DoTheRedirect()\n{\n    setTimeout(GoToURL, delay)\n}\nfunction GoToURL()\n{\n    // IE8 and lower fix\n    if (navigator.userAgent.match(/MSIE\\s(?!9.0)/))\n    {\n        var referLink = document.createElement(\"a\");\n        referLink.href = url;\n        document.body.appendChild(referLink);\n        referLink.click();\n    }\n\n    // All other browsers\n    else { window.location.replace(url); }\n}\n&lt;/script&gt;\n&lt;!--REDIRECTING ENDS--&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have a website which slides to a \"section\" called blog in my HTML. I want the user to simply see the page for a brief second or 2 then redirect to my blog engine.</p>\n\n<p>Please suggest a time delayed redirect?</p>\n\n<p>If i can redirect with a time delayed based on the click of the blog li:</p>\n\n<pre><code>&lt;li data-target=\"blog\" data-target-activation=\"click\" class=\"tile icon_add_favourite\"&gt;\n          &lt;div&gt;\n            &lt;h2&gt;Blog&lt;/h2&gt;&lt;h3&gt;13&lt;/h3&gt;\n                &lt;script type=\"text/JavaScript\"&gt;\n                &amp;lt;!--\n                    setTimeout(\"location.href = 'http://www.mysite.co.uk/blog';\", 1500);\n                --&amp;gt;\n                &lt;/script&gt;\n          &lt;/div&gt;\n        &lt;/li&gt;\n</code></pre>\n\n<p><strong>UPDATE:</strong> This is sooo strange when the HTML5 slides to the section block the page is still rendering with all the code and therefore the JS should be fired by the click event then run the redirect based on the timer.</p>\n\n<p>The solutions work in JS as the alert boxes pop up. Wonder why they dont work in my page?</p>\n",
            "last_activity_date": 1390585302,
            "question_id": 9877263,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "html5"
            ],
            "title": "time delayed redirect?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Your code isn't asynchronous, it will still block. To make it asynchronous you can start it with a setTimeout (tbh, I'm not sure if it is truly asynchronous, but it doesn't block):</p>\n\n<pre><code>setTimeout(function() {\n    processArray(arr, 0, function(){\n        console.log(\"done async\");\n    });\n}, 10);\n</code></pre>\n\n<p>Here is an example showing it being called synchronously, asynchronously and then another console log after just to show the order it is running:</p>\n\n<p><a href=\"http://jsfiddle.net/infernalbadger/xn8GR/\" rel=\"nofollow\">http://jsfiddle.net/infernalbadger/xn8GR/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Take a look at this project: <a href=\"https://github.com/fitzgen/noodles\" rel=\"nofollow\">noodles</a>. It provides async interfaces for all the array extras methods.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Checkout the <a href=\"https://github.com/caolan/async\" rel=\"nofollow\">async</a> library, it's made for control flow (async stuff) and it has a lot of methods for array stuff: forEach, filter, map. Check the documentation on github. Here's what you probably need:</p>\n\n<p><strong>forEach(arr, iterator, callback)</strong></p>\n\n<p>Applies an iterator function to each item in an array, in parallel. The iterator is called with an item from the list and a callback for when it has finished. If the iterator passes an error to this callback, the main callback for the forEach function is immediately called with the error.</p>\n\n<p><strong>forEachSeries(arr, iterator, callback)</strong></p>\n\n<p>The same as forEach only the iterator is applied to each item in the array in series. The next iterator is only called once the current one has completed processing. This means the iterator functions will complete in order.</p>\n\n<p><strong>Update</strong> - the functions are now called <code>each</code> and <code>eachSeries</code></p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>As correctly pointed out, you have to use setTimeout, for example:</p>\n\n<pre><code>each_async = function(ary, fn) {\n    var i = 0;\n    -function() {\n        fn(ary[i]);\n        if (++i &lt; ary.length)\n            setTimeout(arguments.callee, 0)\n    }()\n}\n\n\neach_async([1,2,3,4], function(p) { console.log(p) })\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As pointed in some answer one can use \"async\" library. But sometimes you just don't want to introduce new dependency in your code. And below is another way how you can loop and wait for completion of some asynchronous functions.</p>\n\n<pre><code>var items = [\"one\", \"two\", \"three\"];\n\n// This is your async function, which may perform call to your database or\n// whatever...\nfunction someAsyncFunc(arg, cb) {\n    setTimeout(function () {\n        cb(arg.toUpperCase());\n    }, 3000);\n}\n\n// cb will be called when each item from arr has been processed and all\n// results are available.\nfunction eachAsync(arr, func, cb) {\n    var doneCounter = 0,\n        results = [];\n    arr.forEach(function (item) {\n        func(item, function (res) {\n            doneCounter += 1;\n            results.push(res);\n            if (doneCounter === arr.length) {\n                cb(results);\n            }\n        });\n    });\n}\n\neachAsync(items, someAsyncFunc, console.log);\n</code></pre>\n\n<p>Now, running <code>node iterasync.js</code> will wait for about three seconds and then print <code>[ 'ONE', 'TWO', 'THREE' ]</code>. This is a simple example, but it can be extended to handle many situations.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Thats how I do it:</p>\n\n<pre><code>function processArray(array, index, callback) {\n    processItem(array[index], function(){\n        if(++index === array.length) {\n            callback();\n            return;\n        }\n        processArray(array, index, callback);\n    });\n};\n\nfunction processItem(item, callback) {\n    // do some ajax (browser) or request (node) stuff here\n\n    // when done\n    callback();\n}\n\nvar arr = [\"url1\", \"url2\", \"url3\"];\n\nprocessArray(arr, 0, function(){\n    console.log(\"done\");\n});\n</code></pre>\n\n<p>Is it any good? How to avoid those spaghetti'ish code? </p>\n",
            "last_activity_date": 1422530296,
            "question_id": 8413857,
            "score": 12,
            "tags": [
                "javascript",
                "node.js"
            ],
            "title": "Whats the smartest / cleanest way to iterate async over arrays (or objs)?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>It is not possible. The windowName is just to be used in <code>target=\"...\"</code> of links/forms or to use the same name again in another <code>window.open</code> call to open a new url in that window.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>afaik there's no way like <code>windows['windowname']</code>.\nThe 'windowname' assigned in window.open() can be addressed as a target in <code>&lt;a target=\"windowname\" [...] &gt;</code></p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>If you didn't save a reference to the window then there is no way to restore it. However, <strong>if</strong> that window is still open and <strong>if</strong> the page loaded there belongs to the same domain as your page, you can run JavaScript code in it:</p>\n\n<pre><code>window.open(\"javascript:doSomething()\", \"windowname\");\n</code></pre>\n\n<p>Whether that's sufficient in your scenario depends on what you are trying to achieve.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>In firefox (might work in other browsers too, but now it's not my concern) I was able to reference one window accross multiple page loads with</p>\n\n<pre><code>var w = window.open(\"\", \"nameofwindow\");\n</code></pre>\n\n<p>This opens new window if it doesn't exist and return reference to existing window if it does exist without changing contents of the window.</p>\n\n<p>With jQuery I was then able to append new content, to make quick collection of interresting links like this</p>\n\n<pre><code>$('body', w.document).append(link_tag);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Petr is correct:</p>\n\n<pre><code>var w = window.open(\"\", \"nameofwindow\");\n</code></pre>\n\n<p>works in all browsers, I am using it to retrieve the reference to the window object previously opened by a different page. The only problem is the initial opening of the page, if the popup does not exist, you will get a new window with a blank page. </p>\n\n<p>I tried invoking a Javascript function inside the context of the other document in order to check whether I opened a new window or retrieved the already active page. If the check fails, I just invoke window.open again to actually load my popup content:</p>\n\n<pre><code>var w = window.open(\"http://mydomain.com/myPopup\", \"nameofwindow\");\n</code></pre>\n\n<p>Hope that helps.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>If I open a window using </p>\n\n<pre><code>window.open('myurl.html', 'windowname', 'width=100,height=100');\n</code></pre>\n\n<p>How do I refer to the new window (from the same page that opened it) using 'windowname'?  This question is specifically about this.  I'm aware that I could save a reference to the handle by using \"var mywin = window.open(...)\" but I don't care about that in this situation.</p>\n\n<p>Thanks, - Dave</p>\n",
            "last_activity_date": 1394164149,
            "question_id": 7243970,
            "score": 12,
            "tags": [
                "javascript"
            ],
            "title": "Access a window by window name"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You need to have the latest connect installed (connect@0.5.10). Make sure you check the connect version that is installed and active:</p>\n\n<p><code>npm ls connect | grep active</code></p>\n\n<p>The line that throws up an error references connect.Server.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The issue is that you probably have the latest connect (as opposed to \"you need to install the latest connect\") the command @Shripad showed is helpful and will probably show you that you have connect 1.0, <em>yay</em>...uh oh express isn't quite ready for 1.0 connect, do this to go back to 0.5.10:</p>\n\n<pre><code>npm install connect@0.5.10\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>For others (if your connect@1.0.1 doesn't uninstall with npm uninstall connect@1.0.1) I removed the actual files found at /usr/local/lib/node/connect/</p>\n\n<p>Hope that helps.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>try <em>jpstrikesback</em> answer and make sure to install the dependencys in the correct order:</p>\n\n<pre><code>npm install connect@0.5.10\nnpm install express@1.0.7\n</code></pre>\n\n<p>because <strong>npm install express</strong> will install the latest version of connect (if no one is available, and it will break) and in express/1.0.7/package/lib/express/server.js </p>\n\n<pre><code>connect = require('connect')\n</code></pre>\n\n<p>which seems to require the latest version of connect not the one you have required in your app.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>commenting out the code that includes connect helped in my case.</p>\n\n<p><code>//connect = require('connect');</code></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm trying to use Express in node, install everything okay, compiled, got npm and installed express with:</p>\n\n<blockquote>\n  <p>npm install express</p>\n</blockquote>\n\n<p>The problem is, everytime I try to \"require\" it, it gives me an error!\nTake a look, a simple file app.js as:</p>\n\n<pre><code>var express = require('express');\n</code></pre>\n\n<p>When I run it:</p>\n\n<pre><code>tlab065:~/proj/Express-server-abstraction&gt; node app.js \nnode.js:116\n        throw e; // process.nextTick error, or 'error' event on first tick\n        ^\nTypeError: Cannot read property 'prototype' of undefined\n    at Object.&lt;anonymous&gt; (/people/home/jdomingues/local/node/lib/node/.npm/express/1.0.7/package/lib/express/server.js:87:44)    \n    at Module._compile (module.js:373:26)\n    at Object..js (module.js:379:10)\n    at Module.load (module.js:305:31)\n    at Function._load (module.js:271:10)\n    at require (module.js:317:19)\n    at Object.&lt;anonymous&gt; (/people/home/jdomingues/local/node/lib/node/.npm/express/1.0.7/package/lib/express/index.js:28:31)\n    at Module._compile (module.js:373:26)\n    at Object..js (module.js:379:10)\n    at Module.load (module.js:305:31\n</code></pre>\n\n<p>Can someone help me? Why am I getting this error? How can I maybe install a different version from express?</p>\n",
            "last_activity_date": 1332616339,
            "question_id": 5161828,
            "score": 12,
            "tags": [
                "javascript",
                "node.js",
                "express"
            ],
            "title": "Express framework giving a very strange error"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I don't think it ever will support integers. It isn't a problem as every unsigned 32 bit integer can be accurately represented as a 64 bit floating point number.</p>\n\n<p>Modern JavaScript engines could be smart enough to generate special code when the numbers are integer (with safeguard checks to make sure of it), but I'm not sure.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There are really only a few data types in Javascript: Objects, numbers, and strings.  As you read, JS numbers are all 64-bit floats.  There are no ints.</p>\n\n<p>Firefox 4 will have support for Typed Arrays, where you can have arrays of <em>real</em> ints and such: <a href=\"https://developer.mozilla.org/en/JavaScript_typed_arrays\">https://developer.mozilla.org/en/JavaScript_typed_arrays</a></p>\n\n<p>Until then, there are hackish ways to store integer arrays as strings, and plucking out each integers using <code>charCodeAt()</code>.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>There is zero support for integers. It should be a simple matter of rounding off a variable every time you need it. The performance overhead isn't bad at all.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you really need to use integers, just use the floor method on each number you encounter.</p>\n\n<p>Other than that, the loose typing of Javascript is one of it's strengths.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use this:</p>\n\n<pre><code>function int(a) { return Math.floor(a); }\n</code></pre>\n\n<p>And yo can use it like this:</p>\n\n<pre><code>var result = int(2.1 + 8.7 + 9.3); //int(20.1)\nalert(result);                     //alerts 20\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm a beginner to Javascript so forgive me if I sound dumb because I learned some Javascript from <a href=\"http://w3fools.com/\">W3Fools</a> (which are really difficult tutorials - they don't explain anything I want to know, but everything I probably can guess from my experience with C++).</p>\n\n<p>I may be switching over to <a href=\"https://developer.mozilla.org/en/JavaScript/A_re-introduction_to_JavaScript\">MDN</a>, but if you can recommend any other tutorials, that be great.</p>\n\n<p>Anyways, so here's my question:</p>\n\n<p>I just read a few lines of <a href=\"https://developer.mozilla.org/en/JavaScript/A_re-introduction_to_JavaScript#Numbers\">this</a>, and apparently:</p>\n\n<blockquote>\n  <p>Numbers in JavaScript are\n  \"double-precision 64-bit format IEEE\n  754 values\", according to the spec.\n  This has some interesting\n  consequences. There's no such thing as\n  an integer in JavaScript, so you have\n  to be a little careful with your\n  arithmetic if you're used to math in C\n  or Java.</p>\n</blockquote>\n\n<p>I've already seen that there are few of the data types (for variables) I'm used to from C++. But I didn't expect all numbers to automatically be <code>float</code>s. Isn't there any way to use <code>int</code>egers, not <code>float</code>? Will a future version of JavaScript support <code>int</code>s?</p>\n",
            "last_activity_date": 1362567565,
            "question_id": 4703725,
            "score": 12,
            "tags": [
                "javascript",
                "floating-point",
                "integer"
            ],
            "title": "Integers in JavaScript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>How can you make the value in the password field visible? So, when typing your password in the field, it will not show the black dots, but the actual value that you are typing.</p>\n</blockquote>\n\n<p>You can't.</p>\n\n<p>You can, however, use a normal text input for the user to type in the password.</p>\n\n<p>I wouldn't recommend this, though - for example, the browser might auto-save whatever you type in it. A <code>autocomplete=\"off\"</code> is mandatory in any case.</p>\n\n<p>Reference:</p>\n\n<ul>\n<li><p><a href=\"http://msdn.microsoft.com/en-us/library/ms535126%28VS.85%29.aspx\" rel=\"nofollow\">MSDN article</a> on input elements in IE; mentions that the <code>element.value</code> property is always asterisks for password inputs, even when accessing it from JS</p></li>\n<li><p>MDC: <a href=\"https://developer.mozilla.org/en/How_to_Turn_Off_Form_Autocompletion\" rel=\"nofollow\">How to Turn Off Form Autocompletion</a></p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Don't make it a password field, make it a normal text box.</p>\n\n<p>If you need to switch the field type dynamically, there is a <a href=\"http://codingforums.com/showthread.php?t=107073\">HOWOTO over on codingforums.com</a>, and also several SO questions:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/1987788/javascript-ie6-7-8-change-input-type\">Javascript IE6/7/8 change input type</a></li>\n<li><a href=\"http://stackoverflow.com/questions/2566394/changing-the-input-type-in-ie-with-javascript\">Changing the &lt;input&gt; type in IE with JavaScript</a></li>\n<li><a href=\"http://stackoverflow.com/questions/7618306/javascript-change-input-type-dynamically-doesnt-work-on-ie8\">Javascript change input type dynamically doesnt work on IE8</a></li>\n<li><a href=\"http://stackoverflow.com/questions/1544317/jquery-change-type-of-input-field\">JQuery change type of input field</a></li>\n</ul>\n\n<p>To ensure that browsers keep their normal behavior (saving/not saving passwords) you can convert this back to a password field upon submit.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Then is it called password?It is simple text box only.<br/>\n<code>&lt;input type=\"text\" name=\"password\" id=\"password\" /&gt;</code><br/>\n<strong>Edit:</strong>\nWhether you want like a remember my password?<br/></p>\n\n<p>So if you want to keep the password in the client side then put it in the cookie and if cookie already set replace the password field with cookie value.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>How can you make the value in the password field visible? So, when typing your password in the field, it will not show the black dots, but the actual value that you are typing.</p>\n\n<p>Thanks!</p>\n\n<p>edit: Ok, so then a better question might be: How can I force the browser to remember the value in this 'password' field and treat it as a password?</p>\n",
            "last_activity_date": 1361039943,
            "question_id": 4004313,
            "score": 12,
            "tags": [
                "javascript",
                "html",
                "css",
                "passwords"
            ],
            "title": "HTML/CSS: How to make &quot;password&quot; input show the password?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You're limited to JSONP (and not XML) because of how it works.  JSONP turns into this:</p>\n\n<pre><code>&lt;script src=\"myPage?callback=myFunction\" type=\"text/javscript\"&gt;\n</code></pre>\n\n<p>So when you take the content, it's <em>effectively</em> doing this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n  myFunction({ data: value, data2: value2 });\n&lt;/script&gt;\n</code></pre>\n\n<p>What comes back is actual running JavaScript, so it can't be XML, you'll get all sorts of syntax errors, <em>exactly</em> as you would doing this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n  &lt;elem&gt;\n    &lt;data&gt;value&lt;/data&gt;\n    &lt;data2&gt;value2&lt;/data2&gt;\n  &lt;/elem&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>As you can imagine, the JavaScript parser isn't going to like that very much, and doesn't know what to do with it.  jQuery can parse XML in most cases without any trouble, but if you're using JSONP and it's for cross-domain requests...well JSONP is your only option there, unless you wrote a proxy page on your site that didn't violate same-origin policy rules, and used it as a proxy to fetch the XML through.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>The idea is to send back executable code from the server. Write a jQuery plugin or extend the ajax function to return the XML string as a function parameter.</p>\n\n<pre><code>myCallback(\"\n  &lt;root&gt;\n    &lt;person&gt;\n      &lt;first&gt;John&lt;/first&gt;\n      &lt;last&gt;Doe&lt;/last&gt;\n    &lt;/person&gt;\n  &lt;/root&gt;\")\n</code></pre>\n\n<p>The plugin will parse this string to XML and return it back to your actual callback. As far as your callback is concerned, it is unaware of the <code>string -&gt; xml</code> conversion process. </p>\n\n<p>Here's an existing <a href=\"http://trac.hyves-api.nl/wiki/APIHaFormat\" rel=\"nofollow\">implementation</a>.</p>\n\n<p>The most ideal interface to this with jQuery would be,</p>\n\n<pre><code>$.ajax({\n    url: 'http://example.com/resource?type=xml',\n    dataType: 'xmlp',\n    success: function(xml) { .. }\n});\n</code></pre>\n\n<p>but since messing around and rewriting <code>jQuery.ajax</code> is problematic, you could write this as a separate namespaced plugin itself which will use <code>getScript</code> underneath.</p>\n\n<pre><code>$.myNamespace.ajax({\n    ..\n});\n</code></pre>\n\n<p>For this to work, you would need control of the server. The server has to know that XML is requested, and respond with a function call which contains the XML string as a parameter. Assuming the callback name you sent over to the remote server was <code>foo</code>, the server will have to respond with something like:</p>\n\n<pre><code>foo(\"&lt;names&gt;&lt;name&gt;..&lt;/name&gt;&lt;/names&gt;\")\n</code></pre>\n\n<p>I think if you were using a browser that supported E4X, then there would be no need to wrap the XML inside a string. The server could simply return the XML as an argument to the callback function:</p>\n\n<pre><code>foo(\n  &lt;names&gt;\n    &lt;name&gt;John Doe&lt;/name&gt;\n  &lt;/names&gt;\n)\n</code></pre>\n\n<p>But unfortunately, E4X is not widely supported yet.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can write XML in Javascript function inside in <code>/* comment */</code> and convert this function to text with method <strong>functionname.toString()</strong> and parsing text between \"<code>/*</code>\" and \"<code>*/</code>\" with <strong>JSONP</strong>'s <em>callback</em> function, that works in all old browsers. Example <strong>xml_via_jsonp.js</strong> : </p>\n\n<pre><code>function myfunc()\n{/*\n&lt;xml&gt;\n&lt;div class=\"container\"&gt;\n        &lt;div class=\"panel panel-info col-lg-10 col-lg-offset-1 added-panel\"&gt;\n            &lt;div class=\"panel-heading\"&gt;Random1 - Random2&lt;/div&gt;\n            &lt;div class=\"panel-body\"&gt;\n                &lt;div&gt;Random3&lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/xml&gt;\n*/}\n\nfunction callback(func)\n{\nvar myhtml = func.toString();\nvar htmlstart = myhtml.indexOf('/*');\nvar htmlend = myhtml.lastIndexOf('*/');\nreturn myhtml.substr(htmlstart+2, htmlend-htmlstart-2);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -3
                }
            ],
            "body": "<p>I asked an earlier <a href=\"http://stackoverflow.com/questions/3339621/ideas-on-how-to-handle-a-javascript-widget\">question</a> which was definitely helpful and let me know about JSONP. However, I see that I have to specify JSONP as the datatype. Now, as far as I know, that is the return type of the data coming back, which would be XML. Can XML be returned using JSONP or am I limited to it coming back as JSONP format? Thanks!</p>\n",
            "last_activity_date": 1424348154,
            "question_id": 3435454,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "xml",
                "jsonp"
            ],
            "title": "Using JSONP when returning XML"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Use the <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/splice\" rel=\"nofollow\">splice</a> method.</p>\n\n<p>(At least I assume that is the answer, you say you have <em>an object</em>, but the code you give just creates two variables, and there is no sign of how the Array is created)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use delete-keyword.</p>\n\n<pre><code>delete obj[1];\n</code></pre>\n\n<p>EDIT:\nsee: <a href=\"http://stackoverflow.com/questions/500606/javascript-array-delete-elements\">http://stackoverflow.com/questions/500606/javascript-array-delete-elements</a> \ndelete will undefine the offset but not completly remove the entry. Splice would be correct like David said.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>delete obj[1];\n</code></pre>\n\n<p>Note that this will not change array indices. Any array members you delete will remain as \"slots\" that contain <code>undefined</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use either the <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/splice\"><code>splice()</code></a> method or the <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Operators/Special_Operators/delete_Operator\"><code>delete</code></a> operator. </p>\n\n<p>The main difference is that when you delete an array element using the <code>delete</code> operator, the length of the array is not affected, even if you delete the last element of the array. On the other hand, the <code>splice()</code> method shifts all the elements such that no holes remain in the place of the deleted element.</p>\n\n<p>Example using the <code>delete</code> operator:</p>\n\n<pre><code>var trees = [\"redwood\", \"bay\", \"cedar\", \"oak\", \"maple\"];  \ndelete trees[3];  \nif (3 in trees) {  \n   // this does not get executed  \n}\nconsole.log(trees.length);  //  5\nconsole.log(trees);         //  [\"redwood\", \"bay\", \"cedar\", undefined, \"maple\"]\n</code></pre>\n\n<p>Example using the <code>splice()</code> method:</p>\n\n<pre><code>var trees = [\"redwood\", \"bay\", \"cedar\", \"oak\", \"maple\"];  \ntrees.splice(3, 1);\nconsole.log(trees.length);  //  4\nconsole.log(trees);         //  [\"redwood\", \"bay\", \"cedar\", \"maple\"]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Well splice works:</p>\n\n<pre><code>var arr = [{id:1,name:'serdar'}];\narr.splice(0,1);\n// []\n</code></pre>\n\n<p>Do NOT use the delete 'delete' operator on Arrays.</p>\n\n<p>But maybe you want something like this?</p>\n\n<pre><code>var removeByAttr = function(arr, attr, value){\n    var i = arr.length;\n    while(i--){\n       if( arr[i] \n           &amp;&amp; arr[i].hasOwnProperty(attr) \n           &amp;&amp; (arguments.length &gt; 2 &amp;&amp; arr[i][attr] === value ) ){ \n\n           arr.splice(i,1);\n\n       }\n    }\n    return arr;\n}\n\nvar arr = [{id:1,name:'serdar'},{id:2,name:'alfalfa'},{id:3,name:'joe'}];\nremoveByAttr(arr, 'id', 1);\n// [{id:2,name:'alfalfa'},{id:3,name:'joe'}]\n\nremoveByAttr(arr, 'name', 'joe');\n// [{id:2,name:'alfalfa'}]\n</code></pre>\n\n<p>Just an example.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>If it's the last item in the array, you can do <code>obj.pop()</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you know the index that the object has within the array then you can use splice(), as others have mentioned, ie:</p>\n\n<pre><code>var removedObject = myArray.splice(index,1);\nremovedObject = null;\n</code></pre>\n\n<p>If you don't know the index then you need to search the array for it, ie:</p>\n\n<pre><code>for (var n = 0 ; n &lt; myArray.length ; n++) {\n    if (myArray[n].name == 'serdar') {\n      var removedObject = myArray.splice(n,1);\n      removedObject = null;\n      break;\n    }\n}\n</code></pre>\n\n<p>Marcelo</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have an JavaScript object like this:</p>\n\n<pre><code>id=\"1\";\nname = \"serdar\";\n</code></pre>\n\n<p>and I have an Array which contains many objects of above. How can I remove an object from that array such as like that:</p>\n\n<pre><code>obj[1].remove();\n</code></pre>\n",
            "last_activity_date": 1412088285,
            "question_id": 3396088,
            "score": 12,
            "tags": [
                "javascript",
                "arrays",
                "object"
            ],
            "title": "How do I remove an object from an array with JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>$.get('http://example.com', function(){\n    alert(this.myHello);  // this is scoped to the function\n    alert(myThis.myHello);  // myThis is 'closed-in'; defined outside\n});\n</code></pre>\n\n<p>note the anonymous function.  this in that scope is the scope of the function.  myThis is the this of the outer scope, where the myHello has been defined.  Check it out in firebug.</p>\n\n<p>'this' <em>always</em> refers to the current scope of execution, i believe.  If you want to take the current scope and preserve it, you do what you did, which is assign this to another variable.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<blockquote>\n  <p>What happens to this when the closure is passed outside the scope of do_stuff() (in this case $.get())?</p>\n</blockquote>\n\n<p>Each function has its own execution context, the <code>this</code> keyword retrieves the value of the current context.</p>\n\n<p>The <code>doStuff</code> identifier and the <code>obj.myMethod</code> property refer to the same function object, but since you are invoking it as a property of an object (<code>obj.myMethod();</code>), the <code>this</code> value inside that function, will refer to <code>obj</code>.</p>\n\n<p>When the Ajax request has succeeded, jQuery will invoke the second function (starting a new execution context), and it will use an object that contains the settings used for the request as the <code>this</code> value of that callback.</p>\n\n<blockquote>\n  <p>Does myThis contain a copy of this or a reference to it?</p>\n</blockquote>\n\n<p>The <code>myThis</code> identifier will contain a <em>reference</em> to the object that is also referenced by the <code>this</code> value on the outer scope.</p>\n\n<blockquote>\n  <p>Is it generally not a good idea to use this in closures?</p>\n</blockquote>\n\n<p>If you understand how the <code>this</code> value is handled implicitly, I don't see any problem...</p>\n\n<p>Since you are using jQuery, you might want to check the  <a href=\"http://api.jquery.com/jQuery.proxy/\" rel=\"nofollow\"><code>jQuery.proxy</code></a> method, is an utility method that can be used to preserve the context of a function, for example:</p>\n\n<pre><code>function myObject(){\n    this.myHello = \"hello\";\n    this.myMethod = do_stuff;\n}\n\nfunction do_stuff(){\n    $.get('http://example.com', jQuery.proxy(function(){\n        alert(this.myHello);\n    }, this)); // we are binding the outer this value as the this value inside\n}\n\nvar obj = new myObject;\nobj.myMethod();\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/3274387/this-object-cant-be-accessed-in-private-javascript-functions-without-a-hack\">\u2018this\u2019 object can\u2019t be accessed in private JavaScript functions without a hack?</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<pre><code>$.get('http://example.com', function(){\n   // inside jQuery ajax functions - this == the options used for the ajax call\n});\n</code></pre>\n\n<blockquote>\n  <p>What happens to this when the closure is passed outside the scope of do_stuff() (in this case $.get())? </p>\n</blockquote>\n\n<p>Nothing \"happens\" to it, this is still this <strong>for that closure</strong>, the execution context of the functions called from the closure do not automatically inherit <code>this</code>.</p>\n\n<blockquote>\n  <p>Does myThis contain a copy of this or a reference to it? </p>\n</blockquote>\n\n<p>All non-scalar assignments are references in JavaScript.  So it is a reference to <code>this</code>, if you change properties on either, they change for both.</p>\n\n<blockquote>\n  <p>Is it generally not a good idea to use this in closures?</p>\n</blockquote>\n\n<p>It is generally a good idea to use <code>this</code> in closures, but if you're going to be using closures inside that need to access the same <code>this</code>, its good practice to do exactly what you did: <code>var someName = this;</code> and then access using <code>someName</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm a beginner to closures (and Javscript in general), and I can't find a satisfactory explanation as to what's going on in this code:</p>\n\n<pre><code>function myObject(){\n    this.myHello = \"hello\";\n    this.myMethod = do_stuff;\n}\n\nfunction do_stuff(){\n    var myThis = this;\n    $.get('http://example.com', function(){\n        alert(this.myHello);\n        alert(myThis.myHello);\n    });\n}\n\nvar obj = new myObject;\nobj.myMethod();\n</code></pre>\n\n<p>It will alert 'undefined' and then 'hello'. Obviously this should not be jQuery specific, but this is the simplest form of my original code I could come up with. The closure in <code>do_stuff()</code> has access to the variables in that scope, but apparently this rule does not apply to the <code>this</code> keyword.</p>\n\n<p>Questions:</p>\n\n<p>What happens to <code>this</code> when the closure is passed outside the scope of <code>do_stuff()</code> (in this case <code>$.get()</code>)? Does <code>myThis</code> contain a copy of <code>this</code> or a reference to it? Is it generally not a good idea to use <code>this</code> in closures?</p>\n\n<p>Any response much appreciated.</p>\n",
            "last_activity_date": 1279930925,
            "question_id": 3323189,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "closures",
                "this"
            ],
            "title": "Why doesn&#39;t this closure have access to the &#39;this&#39; keyword? - jQuery"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You need to use CSS to adjust the layout of the two pieces of content.  Either break up the label into two labels and apply css classes to each, or wrap each bit of text inside your label with a <code>&lt;span&gt;</code> tag and style them that way.</p>\n\n<p>Filling empty space with characters to try to adjust the layout is not the correct approach, and wouldn't be recommended for the same reasons you don't format your text documents by adding space characters everywhere.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<ol>\n<li><p>Find the first instance of three spaces.  I am assuming that this is the minimum number needed to constitute a \"break\"</p></li>\n<li><p>Find the first non-space character after that.</p></li>\n<li><p>Replace all the spaces between the index in #1 (+1) and the index in #2 (-1).  That would give you the results above.</p></li>\n</ol>\n\n<p>Check other answers for more clean ways to do it with CSS.  That would be the cleanest way to display the text.  Dashes look ghetto. :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Try this:</strong> <a href=\"http://jsfiddle.net/FpRp2/4/\">http://jsfiddle.net/FpRp2/4/</a> <strong>(updated, now works in ie7)</strong></p>\n\n<p><strong>The solution @Marcel gave to use a dashed border instead of text hyphens solved the final issue with IE7.</strong></p>\n\n<p>(Note, I've only tested in Safari, Firefox and Chrome so far.)</p>\n\n<p>EDIT: IE8 works. <s>Working on a fix for IE7.</s></p>\n\n<p>HTML</p>\n\n<pre><code>&lt;div class='outer'&gt;\n    &lt;div class='container'&gt;\n        &lt;div class='filler'&gt;&lt;/div&gt;\n        &lt;span class='label'&gt;some label&lt;/span&gt;\n        &lt;span class='text'&gt;some text&lt;/span&gt;\n    &lt;/div&gt;\n    &lt;br&gt;\n    &lt;div class='container'&gt;\n        &lt;div class='filler'&gt;&lt;/div&gt;\n        &lt;span class='label'&gt;some other label&lt;/span&gt;\n        &lt;span class='text'&gt;some other text&lt;/span&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>CSS</p>\n\n<pre><code>.outer {\n    display: inline-block;\n    *display: inline;\n    zoom: 1;\n    position: relative;\n    clip: auto;\n    overflow: hidden;\n}\n.container {\n    position: relative;\n    text-align: right;\n    white-space: nowrap;\n}\n.filler {\n    position: absolute;\n    left: 0;\n    right: 0;\n    border-bottom: 1px dashed #333;\n    height: 50%;\n}\n.label {\n    background: white;\n    float: left;\n    margin-right: 20px;\n    padding-right: 4px;\n    position: relative;\n}\n.text {\n    background: white;\n    padding-left: 4px;\n    position: relative;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>For anyone interested, here is another way to do this from the W3C using CSS with links to other similar techniques:</p>\n\n<p><a href=\"http://www.w3.org/Style/Examples/007/leaders.en.html\" rel=\"nofollow\">http://www.w3.org/Style/Examples/007/leaders.en.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have implemented this on a table <strong>with pure CSS</strong> and even without using any span or div.</p>\n\n<p>CSS is:</p>\n\n<pre><code>.dot-table td {\n    max-width:200px;\n    overflow:hidden;\n    white-space:nowrap;\n}\n.dot-table td:first-child:after {\n    content:\" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \"\n}\n</code></pre>\n\n<p>HTML is</p>\n\n<pre><code>&lt;table class=\"dot-table\"&gt;\n  &lt;tr&gt;\n    &lt;td&gt;\n       Coffee\n    &lt;/td&gt;\n    &lt;td&gt;\n       45 INR\n    &lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td&gt;\n       Tea\n    &lt;/td&gt;\n    &lt;td&gt;\n       36 INR\n    &lt;/td&gt;\n   &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p><strong>A detailed output</strong> (from a site I developed) \n<img src=\"http://i.stack.imgur.com/8wPfe.png\" alt=\"A detailed table with filling dots\"></p>\n\n<p>View it live <a href=\"http://ontrip.in/tiyabon-chalsa/\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a page with labels which are contained in a div, the labels has a variable with and i want to fill spaces between both with characters, dots or '-'. </p>\n\n<p>For example.</p>\n\n<p>My label text 1 ----------- Some Text Here.</p>\n\n<p>My text 2 ----------------------- Another Text.</p>\n\n<p>If you notice both text are justified (or at least i try), could be a problem of counting characters but character can have different width, any one knows a clean way of doing this programmatically in Asp.Net, css, jquery or anything else? </p>\n\n<p>Update</p>\n\n<p>................</p>\n\n<p>Someone suggested in answers align both labels with css, but i think i will be having the same problem with the characters in the middle, which can be another label of course. Any thoughts?</p>\n\n<p>Update</p>\n\n<p>.................</p>\n\n<p>Answer from Patrick is really close to the solution, but now hyphens are not shown in IE8, maybe there is a miss understand in one of my comments, it should work on IE7, IE8 and Firefox, only these browsers. </p>\n\n<p>Thanks to everyone.</p>\n",
            "last_activity_date": 1386329166,
            "question_id": 3097851,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css"
            ],
            "title": "Fill available spaces between labels with dots or hyphens"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<pre><code>document.getElementById('username').value=\"moo\"\ndocument.forms[0].submit()\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>You can try something like this:</p>\n\n<pre><code>    &lt;script type=\"text/javascript\"&gt;\n        function simulateLogin(userName)\n        {\n            var userNameField = document.getElementById(\"username\");\n            userNameField.value = userName;\n            var goButton = document.getElementById(\"go\");\n            goButton.click();\n        }\n\n        simulateLogin(\"testUser\");\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It would be something like:</p>\n\n<pre><code>document.getElementById(\"username\").value=\"Username\";\ndocument.forms[0].submit()\n</code></pre>\n\n<p>Or similar\nedit: you guys are too fast ;)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>document.getElementById('username').value = 'foo';\ndocument.getElementById('login_form').submit();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>If I have an html document whose rough structure is</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;/head&gt;\n&lt;body class=\"bodyclass\" id=\"bodyid\"&gt;\n&lt;div class=\"headerstuff\"&gt;..stuff...&lt;/div&gt;\n&lt;div class = \"body\"&gt;\n&lt;form action=\"http://example.com/login\" id=\"login_form\" method=\"post\"&gt;\n&lt;div class=\"form_section\"&gt;You can login here&lt;/div&gt;\n&lt;div class=\"form_section\"&gt;\n&lt;input xmlns=\"http://www.w3.org/1999/xhtml\" class=\"text\" id=\"username\"\n       name=\"session[username_or_email]\" tabindex=\"1\" type=\"text\" value=\"\" /&gt;\n&lt;/div&gt;\n&lt;div class=\"form_section\"&gt;etc&lt;/div&gt;\n&lt;div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"buttons\"&gt;\n    &lt;button type=\"submit\" class=\"\" name=\"\" id=\"go\" tabindex=\"3\"&gt;Go&lt;/button&gt;\n    &lt;button type=\"submit\" class=\"\" name=\"cancel\" \n            id=\"cancel\" tabindex=\"4\"&gt;Cancel&lt;/button&gt;\n&lt;/div&gt;\n&lt;/form&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>You can see that there is a username field and a Go button. How would I, using Javascript, fill in the username and press Go...? </p>\n\n<p>I would prefer to use plain JS, rather than a library like jQuery.</p>\n",
            "last_activity_date": 1346869181,
            "question_id": 4683331,
            "score": 11,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "How to fill in form field, and submit, using javascript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>No. There is no way of doing this in any browser implementation of JavaScript.</p>\n\n<p>It's theoretically possible that an implementation could provide an extension to allow code to inspect the current Variable object (aka the Activation object within a function; \"Call object\" is a term made up by Flanagan that is not mentioned anywhere within the ECMAScript spec) but no implementation I know of does this. </p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>You get an implicit array called \"arguments\" in every function but beside this there is no such thing.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Every global variable in javascript is a property of 'window'</p>\n\n<p>Apparently all local variable (aswell as arguments) are stored as properties of the <a href=\"http://books.google.co.uk/books?id=2weL0iAfrEMC&amp;pg=PT78&amp;lpg=PT78&amp;dq=local+variables+are+a+property+of+the+call+object&amp;source=bl&amp;ots=_81BuA-Z4E&amp;sig=OU-H-dl-FssQfnIQItOugN6jjtk&amp;hl=en&amp;ei=J6ekTMqVNJS7jAfB8-i1DA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=1&amp;ved=0CBUQ6AEwAA#v=onepage&amp;q=local%20variables%20are%20a%20property%20of%20the%20call%20object&amp;f=false\">'Call object'</a> (See chapter 4.6.2 of each function. Persumably only existing for the lifetime of said function.</p>\n\n<p>Basically I want to be able to do</p>\n\n<pre><code>for (var obj in CallObject ) { // }\n</code></pre>\n\n<p>Can I access said object containing local variables and if so how? Alternatively is there any other way of accessing all local variables of a function.</p>\n\n<p>[Edit]</p>\n\n<p>It turns out that arguments is a property of the Activation Object of a function. This has to be stored somewhere. </p>\n\n<blockquote>\n  <p>\"The activation object is purely a\n  specification mechanism. It is\n  impossible for an ECMAScript program\n  to access the activation object.\"</p>\n</blockquote>\n\n<p>Turns out ECMAScript states I am not allowed to access it. </p>\n\n<p>What about accessing arguments properties and somehow chaining up to local variables?</p>\n",
            "last_activity_date": 1285861787,
            "question_id": 3831932,
            "score": 11,
            "tags": [
                "javascript",
                "local"
            ],
            "title": "Access all local variables"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>PrimeFaces already ships with jQuery bundled, yet you've downloaded and installed another one which would only conflict with PrimeFaces bundled jQuery. I'm sure that if you have paid a bit more attention and love to the webbrowser's builtin JavaScript console, you would have seen JS errors.</p>\n\n<p>You need to <strong>remove</strong> the following line:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"js/jquery-1.7.1.min.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>On pages which do not necessarily use PrimeFaces components, jQuery won't be automatically included, you'd then need to explicitly load its bundled jQuery by a proper <code>&lt;h:outputScript&gt;</code>.</p>\n\n<pre><code>&lt;h:outputScript library=\"primefaces\" name=\"jquery/jquery.js\" /&gt;\n</code></pre>\n\n<p>Note that using <code>&lt;h:outputScript&gt;</code> does not end up in a duplicate script include on pages which actually use PrimeFaces components.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p><strong>EDIT 2:</strong> I ran a manual debug and found out that this line was causing the trouble, and after removing it, things got back to normal hopefully.</p>\n\n<pre><code> &lt;script type=\"text/javascript\" src=\"js/main.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>I wasn't actually getting any errors or excretions but some primeface components were acting weird. For example I have a <code>selectOneMenu</code> component defined with a converter. When one item is selected the form gets updated via Ajax. The problem was after selecting an item the menu items got broken (they were representing numbers instead of text) as if somehow the converter wasn't working and the other commands of the page stooped functioning (were not doing anything). \nAnother problem was <code>datatable</code> component where each row has a commandlink which triggers some Ajax behavior. After the links are clicked the pagination of datatable wasn't working.\nFrom these issues I assumed that there is a conflict between juqery and ajax.</p>\n\n<p>Allthough its a very large file, If anyone is interested this is the content of the js file that was causing the troubles</p>\n\n<pre><code> (function($) {\n$(function(){\n    $(document).ready(function(){\n\n    $('ul.accordion li').click(function () {\n        $(this).each(function() {\n            $('ul.accordion li').removeClass('active');\n            });\n        $(this).addClass('active');\n    });\n\n    $('ul.accordion').accordion({\n        active: \".active\",\n        autoHeight: false,\n        header: \".opener\",\n        collapsible: true,\n        event: \"click\"\n    });\n});\n});\n})(jQuery);\n\n// background resize init\nfunction initBackgroundResize() {\nvar holder = document.getElementById('bg');\nif(holder) {\n    var images = holder.getElementsByTagName('img');\n    for(var i = 0; i &lt; images.length; i++) {\n        BackgroundStretcher.stretchImage(images[i]);\n    }\n    BackgroundStretcher.setBgHolder(holder);\n}\n }\n\n if (window.addEventListener) window.addEventListener(\"load\", initBackgroundResize, false);\n else if (window.attachEvent) window.attachEvent(\"onload\", initBackgroundResize);\n\n // image stretch module\n BackgroundStretcher = {\nimages: [],\nholders: [],\nviewWidth: 0,\nviewHeight: 0,\nieFastMode: true,\nstretchBy: 'window', // \"window\", \"page\", \"block-id\", or block\ninit: function(){\n    this.addHandlers();\n    this.resizeAll();\n    return this;\n},\nstretchImage: function(origImg) {\n    // wrap image and apply smoothing\n    var obj = this.prepareImage(origImg);\n\n    // handle onload\n    var img = new Image();\n    img.onload = this.bind(function(){\n        obj.iRatio = img.width / img.height;\n        this.resizeImage(obj);\n    });\n    img.src = origImg.src;\n    this.images.push(obj);\n},\nprepareImage: function(img) {\n    var wrapper = document.createElement('span');\n    img.parentNode.insertBefore(wrapper, img);\n    wrapper.appendChild(img);\n\n    if(/MSIE (6|7|8)/.test(navigator.userAgent) &amp;&amp; img.tagName.toLowerCase()  === 'img') {\n        wrapper.style.position = 'absolute';\n        wrapper.style.display = 'block';\n        wrapper.style.zoom = 1;\n        if(this.ieFastMode) {\n            img.style.display = 'none';\n            wrapper.style.filter =  'progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\"'+img.src+'\",  sizingMethod=\"scale\")'; // enable smoothing in IE6\n            return wrapper;\n        } else {\n            img.style.msInterpolationMode = 'bicubic'; // IE7 smooth  fix\n            return img;\n        }\n    } else {\n        return img;\n    }\n},\nsetBgHolder: function(obj) {\n    this.holders.push(obj);\n    this.resizeAll();\n},\nresizeImage: function(obj) {\n    if(obj.iRatio) {\n        // calculate dimensions\n        var dimensions = this.getProportion({\n            ratio: obj.iRatio,\n            maskWidth: this.viewWidth,\n            maskHeight: this.viewHeight\n        });\n        // apply new styles\n        obj.style.width = dimensions.width + 'px';\n        obj.style.height = dimensions.height + 'px';\n        obj.style.top = dimensions.top + 'px';\n        obj.style.left = dimensions.left +'px';\n    }\n},\nresizeHolder: function(obj) {\n    obj.style.width = this.viewWidth+'px';\n    obj.style.height = this.viewHeight+'px';\n},\ngetProportion: function(data) {\n    // calculate element coords to fit in mask\n    var ratio = data.ratio || (data.elementWidth / data.elementHeight);\n    var slideWidth = data.maskWidth, slideHeight = slideWidth / ratio;\n    if(slideHeight &lt; data.maskHeight) {\n        slideHeight = data.maskHeight;\n        slideWidth = slideHeight * ratio;\n    }\n    return {\n        width: slideWidth,\n        height: slideHeight,\n        top: (data.maskHeight - slideHeight) / 2,\n        left: (data.maskWidth - slideWidth) / 2\n    }\n},\nresizeAll: function() {\n    // crop holder width by window size\n    for(var i = 0; i &lt; this.holders.length; i++) {\n        this.holders[i].style.width = '100%'; \n    }\n\n    // delay required for IE to handle resize\n    clearTimeout(this.resizeTimer);\n    this.resizeTimer = setTimeout(this.bind(function(){\n        // hide background holders\n        for(var i = 0; i &lt; this.holders.length; i++) {\n            this.holders[i].style.display = 'none';\n        }\n\n        // calculate real page dimensions with hidden background blocks\n        if(typeof this.stretchBy === 'string') {\n            // resize by window or page dimensions\n            if(this.stretchBy === 'window' || this.stretchBy === 'page') {\n                this.viewWidth =  this.stretchFunctions[this.stretchBy].width();\n                this.viewHeight = this.stretchFunctions[this.stretchBy].height();\n            }\n            // resize by element dimensions (by id)\n            else {\n                var maskObject = document.getElementById(this.stretchBy);\n                this.viewWidth = maskObject ? maskObject.offsetWidth : 0;\n                this.viewHeight = maskObject ? maskObject.offsetHeight : 0;\n            }\n        } else {\n            this.viewWidth = this.stretchBy.offsetWidth;\n            this.viewHeight = this.stretchBy.offsetHeight;\n        }\n\n        // show and resize all background holders\n        for(i = 0; i &lt; this.holders.length; i++) {\n            this.holders[i].style.display = 'block';\n            this.resizeHolder(this.holders[i]);\n        }\n        for(i = 0; i &lt; this.images.length; i++) {\n            this.resizeImage(this.images[i]);\n        }\n    }),10);\n},\naddHandlers: function() {\n    if (window.addEventListener) {\n        window.addEventListener('resize', this.bind(this.resizeAll), false);\n        window.addEventListener('orientationchange',  this.bind(this.resizeAll), false);\n    } else if (window.attachEvent) {\n        window.attachEvent('onresize', this.bind(this.resizeAll));\n    }\n},\nstretchFunctions: {\n    window: {\n        width: function() {\n            return typeof window.innerWidth === 'number' ?  window.innerWidth : document.documentElement.clientWidth;\n        },\n        height: function() {\n            return typeof window.innerHeight === 'number' ? window.innerHeight : document.documentElement.clientHeight;\n        }\n    },\n    page: {\n        width: function() {\n            return !document.body ? 0 : Math.max(\n                Math.max(document.body.clientWidth,  document.documentElement.clientWidth),\n                Math.max(document.body.offsetWidth, document.body.scrollWidth)\n            );\n        },\n        height: function() {\n            return !document.body ? 0 : Math.max(\n                Math.max(document.body.clientHeight, document.documentElement.clientHeight),\n                Math.max(document.body.offsetHeight,  document.body.scrollHeight)\n            );\n        }\n    }\n},\nbind: function(fn, scope, args) {\n    var newScope = scope || this;\n    return function() {\n        return fn.apply(newScope, args || arguments);\n    }\n}\n}.init();\n// clear inputs on focus\nfunction initInputs() {\n// replace options\nvar opt = {\n    clearInputs: true,\n    clearTextareas: true,\n    clearPasswords: true\n}\n// collect all items\nvar inputs = [].concat(\n    PlaceholderInput.convertToArray(document.getElementsByTagName('input')),\n    PlaceholderInput.convertToArray(document.getElementsByTagName('textarea'))\n);\n// apply placeholder class on inputs\nfor(var i = 0; i &lt; inputs.length; i++) {\n    if(inputs[i].className.indexOf('default') &lt; 0) {\n        var inputType = PlaceholderInput.getInputType(inputs[i]);\n        if((opt.clearInputs &amp;&amp; inputType === 'text') ||\n            (opt.clearTextareas &amp;&amp; inputType === 'textarea') || \n            (opt.clearPasswords &amp;&amp; inputType === 'password')\n        ) {\n            new PlaceholderInput({\n                element:inputs[i],\n                wrapWithElement:false,\n                showUntilTyping:false,\n                getParentByClass:false,\n                placeholderAttr:'value'\n            });\n        }\n    }\n}\n}\n\n// input type placeholder class\n;(function(){\nPlaceholderInput = function() {\n    this.options = {\n        element:null,\n        showUntilTyping:false,\n        wrapWithElement:false,\n        getParentByClass:false,\n        placeholderAttr:'value',\n        inputFocusClass:'focus',\n        inputActiveClass:'text-active',\n        parentFocusClass:'parent-focus',\n        parentActiveClass:'parent-active',\n        labelFocusClass:'label-focus',\n        labelActiveClass:'label-active',\n        fakeElementClass:'input-placeholder-text'\n    }\n    this.init.apply(this,arguments);\n}\nPlaceholderInput.convertToArray = function(collection) {\n    var arr = [];\n    for (var i = 0, ref = arr.length = collection.length; i &lt; ref; i++) {\n     arr[i] = collection[i];\n    }\n    return arr;\n}\nPlaceholderInput.getInputType = function(input) {\n    return (input.type ? input.type : input.tagName).toLowerCase();\n}\nPlaceholderInput.prototype = {\n    init: function(opt) {\n        this.setOptions(opt);\n        if(this.element &amp;&amp; this.element.PlaceholderInst) {\n            this.element.PlaceholderInst.refreshClasses();\n        } else {\n            this.element.PlaceholderInst = this;\n            if(this.elementType == 'text' || this.elementType ==  'password' || this.elementType == 'textarea') {\n                this.initElements();\n                this.attachEvents();\n                this.refreshClasses();\n            }\n        }\n    },\n    setOptions: function(opt) {\n        for(var p in opt) {\n            if(opt.hasOwnProperty(p)) {\n                this.options[p] = opt[p];\n            }\n        }\n        if(this.options.element) {\n            this.element = this.options.element;\n            this.elementType =  PlaceholderInput.getInputType(this.element);\n            this.wrapWithElement = (this.elementType === 'password' || this.options.showUntilTyping ? true : this.options.wrapWithElement);\n            this.setOrigValue( this.options.placeholderAttr == 'value' ? this.element.defaultValue : this.element.getAttribute(this.options.placeholderAttr) );\n        }\n    },\n    setOrigValue: function(value) {\n        this.origValue = value;\n    },\n    initElements: function() {\n        // create fake element if needed\n        if(this.wrapWithElement) {\n            this.element.value = '';\n            this.element.removeAttribute(this.options.placeholderAttr);\n            this.fakeElement = document.createElement('span');\n            this.fakeElement.className = this.options.fakeElementClass;\n            this.fakeElement.innerHTML += this.origValue;\n            this.fakeElement.style.color = getStyle(this.element, 'color');\n            this.fakeElement.style.position = 'absolute';\n            this.element.parentNode.insertBefore(this.fakeElement, this.element);\n        }\n        // get input label\n        if(this.element.id) {\n            this.labels = document.getElementsByTagName('label');\n            for(var i = 0; i &lt; this.labels.length; i++) {\n                if(this.labels[i].htmlFor === this.element.id) {\n                    this.labelFor = this.labels[i];\n                    break;\n                }\n            }\n        }\n        // get parent node (or parentNode by className)\n        this.elementParent = this.element.parentNode;\n        if(typeof this.options.getParentByClass === 'string') {\n            var el = this.element;\n            while(el.parentNode) {\n                if(hasClass(el.parentNode,  this.options.getParentByClass)) {\n                    this.elementParent = el.parentNode;\n                    break;\n                } else {\n                    el = el.parentNode;\n                }\n            }\n        }\n    },\n    attachEvents: function() {\n        this.element.onfocus = bindScope(this.focusHandler, this);\n        this.element.onblur = bindScope(this.blurHandler, this);\n        if(this.options.showUntilTyping) {\n            this.element.onkeydown = bindScope(this.typingHandler, this);\n            this.element.onpaste = bindScope(this.typingHandler, this);\n        }\n        if(this.wrapWithElement) this.fakeElement.onclick = bindScope(this.focusSetter, this);\n    },\n    togglePlaceholderText: function(state) {\n        if(this.wrapWithElement) {\n            this.fakeElement.style.display = state ? '' : 'none';\n        } else {\n            this.element.value = state ? this.origValue : '';\n        }\n    },\n    focusSetter: function() {\n        this.element.focus();\n    },\n    focusHandler: function() {\n        this.focused = true;\n        if(!this.element.value.length || this.element.value === this.origValue) {\n            if(!this.options.showUntilTyping) {\n                this.togglePlaceholderText(false);\n            }\n        }\n        this.refreshClasses();\n    },\n    blurHandler: function() {\n        this.focused = false;\n        if(!this.element.value.length || this.element.value === this.origValue) {\n            this.togglePlaceholderText(true);\n        }\n        this.refreshClasses();\n    },\n    typingHandler: function() {\n        setTimeout(bindScope(function(){\n            if(this.element.value.length) {\n                this.togglePlaceholderText(false);\n                this.refreshClasses();\n            }\n        },this), 10);\n    },\n    refreshClasses: function() {\n        this.textActive = this.focused || (this.element.value.length &amp;&amp; this.element.value !== this.origValue);\n        this.setStateClass(this.element, this.options.inputFocusClass,this.focused);\n        this.setStateClass(this.elementParent, this.options.parentFocusClass,this.focused);\n        this.setStateClass(this.labelFor, this.options.labelFocusClass,this.focused);\n        this.setStateClass(this.element, this.options.inputActiveClass, this.textActive);\n        this.setStateClass(this.elementParent, this.options.parentActiveClass, this.textActive);\n        this.setStateClass(this.labelFor, this.options.labelActiveClass, this.textActive);\n    },\n    setStateClass: function(el,cls,state) {\n        if(!el) return; else if(state) addClass(el,cls); else removeClass(el,cls);\n    }\n}\n\n// utility functions\nfunction hasClass(el,cls) {\n    return el.className ? el.className.match(new  RegExp('(\\\\s|^)'+cls+'(\\\\s|$)')) : false;\n}\nfunction addClass(el,cls) {\n    if (!hasClass(el,cls)) el.className += \" \"+cls;\n}\nfunction removeClass(el,cls) {\n    if (hasClass(el,cls)) {el.className=el.className.replace(new RegExp('(\\\\s|^)'+cls+'(\\\\s|$)'),' ');}\n}\nfunction bindScope(f, scope) {\n    return function() {return f.apply(scope, arguments)}\n}\nfunction getStyle(el, prop) {\n    if (document.defaultView &amp;&amp; document.defaultView.getComputedStyle) {\n        return document.defaultView.getComputedStyle(el, null)[prop];\n    } else if (el.currentStyle) {\n        return el.currentStyle[prop];\n    } else {\n        return el.style[prop];\n    }\n}\n  }());\n\n  if (window.addEventListener) window.addEventListener(\"load\", initInputs, false);\n else if (window.attachEvent) window.attachEvent(\"onload\", initInputs);\n // init rounded corners\n function initRoundedCorners() {\nvar images = document.getElementsByTagName('img');\nfor(var i = 0; i &lt; images.length; i++) {\n    if(images[i].className.indexOf('rounded-corner-') != -1) {\n        var radValue = parseInt(images[i].className.replace(/.*rounded-corner-(\\d+).*/, '$1'),10);\n        if(!isNaN(radValue)) {\n            new ImgCorner({\n                image: images[i],\n                radius: radValue\n            });\n        }\n    }\n}\n }\n\n // DOM ready\n function domReady(handler){\nvar called = false\nfunction ready() {\n    if (called) return;\n    called = true\n    handler()\n}\nif (document.addEventListener) {\n    document.addEventListener( \"DOMContentLoaded\", ready, false )\n} else if (document.attachEvent) {\n    if (document.documentElement.doScroll &amp;&amp; window == window.top) {\n        function tryScroll(){\n            if (called) return\n            if (!document.body) return\n            try {\n                document.documentElement.doScroll(\"left\")\n                ready()\n            } catch(e) {\n                setTimeout(tryScroll, 0)\n            }\n        }\n        tryScroll()\n    }\n    document.attachEvent(\"onreadystatechange\", function(){\n        if ( document.readyState === \"complete\" ) {\n            ready()\n        }\n    })\n}\nif (window.addEventListener) window.addEventListener('load', ready, false)\nelse if (window.attachEvent) window.attachEvent('onload', ready)\n}\n\ndomReady(initRoundedCorners);\n\n\n\n // rounded image module\n ;(function(window){\n// init VML for IE6, IE7, IE8\nvar IE = /(MSIE (6|7|8))/.test(navigator.userAgent);\nif(IE) {\n    var ns = 'rcr';\n    if(document.namespaces &amp;&amp; !document.namespaces[ns]) {\n        // add VML namespace\n        document.namespaces.add(ns,'urn:schemas-microsoft-com:vml','#default#VML'); \n        // create stylesheets\n        var screenStyleSheet, printStyleSheet;\n        screenStyleSheet = document.createElement('style');\n        screenStyleSheet.setAttribute('media', 'screen');\n        document.documentElement.firstChild.insertBefore(screenStyleSheet, document.documentElement.firstChild.firstChild);\n        if (screenStyleSheet.styleSheet) {\n            try {\n                // add screen-media rule\n                screenStyleSheet = screenStyleSheet.styleSheet;\n                screenStyleSheet.addRule(ns + '\\\\:*', '{behavior:url(#default#VML); display:inline-block}');\n                // add a print-media stylesheet\n                printStyleSheet = document.createElement('style');\n                printStyleSheet.setAttribute('media', 'print');\n                document.documentElement.firstChild.insertBefore(printStyleSheet, screenStyleSheet);\n                printStyleSheet = printStyleSheet.styleSheet;\n                printStyleSheet.addRule(ns + '\\\\:*', '{display: none !important;}');\n            } catch(e) {}\n        }\n    }\n}\n\n// browsers techniques support detection\nvar supportCanvas = !!document.createElement('canvas').getContext;\nvar supportBorderRadius = (function(){\n    var cssAttributeNames = ['borderRadius','BorderRadius','MozBorderRadius','WebkitBorderRadius','OBorderRadius','KhtmlBorderRadius']; \n    for (var i = 0; i &lt; cssAttributeNames.length; i++) {\n        var attributeName = cssAttributeNames[i];\n        if (document.documentElement.style[attributeName] !== undefined) {\n            return true;\n            break;\n        }\n    }\n    return false;\n}());\n\n// rounded image class\nImgCorner = function() {\n    this.options = {\n        radius: 0,\n        image: null,\n        roundedClass: 'img-rounded'\n    }\n    this.init.apply(this, arguments);\n}\nImgCorner.prototype = {\n    init: function(options) {\n        for(var p in options) {\n            if(options.hasOwnProperty(p)) {\n                this.options[p] = options[p];\n            }\n        }\n        this.initImage();\n    },\n    initImage: function() {\n        // create image to calculate dimensions\n        if(this.options.image) {\n            // check borders\n            this.realImage = this.options.image;\n            this.borderWidth = parseInt(this.getStyle(this.realImage, 'borderTopWidth')) || 0;\n            this.borderColor = this.getStyle(this.realImage, 'borderTopColor') || '#333';\n\n            this.tmpImage = new Image();\n            this.tmpImage.onload = this.bind(function() {\n                this.realWidth = this.tmpImage.width;\n                this.realHeight = this.tmpImage.height;\n                this.onImageComplete();\n            },this);\n            this.tmpImage.src = this.realImage.src;\n        }\n    },\n    onImageComplete: function() {\n        if(IE) {\n            this.createVMLNode();\n        } else {\n            if(supportBorderRadius) {\n                this.createCSS3Node();\n            } else if(supportCanvas) {\n                this.createCanvasNode();\n            }\n        }\n    },\n    createCanvasNode: function() {\n        var canvas = document.createElement('canvas'), ctx;\n        canvas.width = this.realWidth + this.borderWidth*2;\n        canvas.height = this.realHeight + this.borderWidth*2;\n        if(typeof canvas.getContext === 'function') {\n            // create path function\n            var createPath = function(dc,x,y,w,h,r,bw) {\n                var a = Math.PI/180;\n                r -= bw;\n                dc.beginPath();\n                dc.moveTo(x+r,y);\n                dc.lineTo(x+w-r,y);\n                dc.arc(x+w-r,y+r,r,a*270,a*360,false);\n                dc.lineTo(x+w,y+h-r);\n                dc.arc(x+w-r,y+h-r,r,a*0,a*90,false);\n                dc.lineTo(x+r,y+h);\n                dc.arc(x+r,y+h-r,r,a*90,a*180,false);\n                dc.lineTo(x,y+r);\n                dc.arc(x+r,y+r,r,a*180,a*270,false); \n            }\n\n            // create rounded path\n            ctx = canvas.getContext('2d');\n            ctx.save();\n            createPath(ctx, this.borderWidth,this.borderWidth,this.realWidth,this.realHeight,this.options.radius, this.borderWidth);\n\n            // draw border only if needed\n            if(this.borderWidth) {\n                ctx.strokeStyle = this.borderColor;\n                ctx.lineWidth = this.borderWidth*2;\n                ctx.stroke();\n            }\n            ctx.clip();\n            ctx.drawImage(this.tmpImage,this.borderWidth,this.borderWidth);\n            ctx.restore();\n\n            // append canvas image\n            this.realImage.style.display = 'none';\n            this.realImage.parentNode.insertBefore(canvas, this.realImage);\n        }\n    },\n    createVMLNode: function() {\n        var w = this.realWidth, h = this.realHeight, r = this.options.radius;\n        var vmlBox = document.createElement('corner');\n        var sh = document.createElement(ns + ':shape');\n        var filler = document.createElement(ns + ':fill');\n        vmlBox.style.cssText = 'width:'+this.realWidth+'px;height:'+this.realHeight+'px;margin:0;padding:0;border:0;';\n        sh.appendChild(filler);\n        sh.style.cssText = 'width:'+this.realWidth+'px;height:'+this.realHeight+'px;display:inline-block;';\n        sh.path = 'm '+r+',0 l '+(w-r)+',0 qx '+w+','+r+' l '+w+','+(h-r)+' qy '+(w-r)+','+h+' l '+r+','+h+' qx 0,'+(h-r)+' l 0,'+r+' qy '+r+',0 e';\n        sh.coordorigin = \"-1 -1\";\n        sh.coordsize = w+' '+h;\n\n        // draw border if needed\n        if(this.borderWidth) {\n            sh.strokecolor = this.borderColor;\n            sh.strokeweight = this.borderWidth/2;\n            sh.stroked = true;\n        } else {\n            sh.stroked = false;\n        }\n\n        filler.style.display = 'inline-block';\n        filler.setAttribute('type', 'frame');\n        filler.setAttribute('src', this.realImage.src);\n        vmlBox.appendChild(sh);\n        vmlBox.innerHTML = vmlBox.innerHTML;\n        this.realImage.style.display = 'none';\n        this.realImage.parentNode.insertBefore(vmlBox, this.realImage);\n    },\n    createCSS3Node: function() {\n        var borderAttr = ['borderRadius', 'MozBorderRadius', 'WebkitBorderRadius', 'OBorderRadius']; \n        var span = document.createElement('span');\n        span.style.width = this.realWidth+'px';\n        span.style.height = this.realHeight+'px';\n        span.style.display = 'inline-block';\n        span.style.background = 'url('+this.realImage.src+')';\n        span.style.overflow = 'hiddden';\n\n        for(var i = 0; i &lt; borderAttr.length; i++) {\n            span.style[borderAttr[i]] = this.options.radius + 'px';\n        }\n\n        // draw border if needed\n        if(this.borderWidth) {\n            span.style.border = this.borderWidth+'px solid  '+this.borderColor;\n        }\n\n        this.realImage.style.border = '0';\n        this.realImage.style.display = 'none';\n        this.realImage.parentNode.insertBefore(span, this.realImage);\n        span.appendChild(this.realImage);\n        return span;\n    },\n    getStyle: function(el, prop) {\n        if (document.defaultView &amp;&amp; document.defaultView.getComputedStyle) {\n            return document.defaultView.getComputedStyle(el, null)[prop];\n        } else if (el.currentStyle) {\n            return el.currentStyle[prop];\n        } else {\n            return el.style[prop];\n        }\n    },\n    bind: function(fn, scope, args) {\n        return function() {\n            return fn.apply(scope, args || arguments);\n        }\n    } \n}\n  })(this);\n /*! HTML5 Shiv pre3.5 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed\n  Uncompressed source: https://github.com/aFarkas/html5shiv  */\n ;(function(){\n  /*@cc_on(function(a,b){function h(a,b){var c=a.createElement(\"p\"),d=a.getElementsByTagName(\"head\")[0]||a.documentElement;return c.innerHTML=\"x&lt;style&gt;\"+b+\"&lt;/style&gt;\",d.insertBefore(c.lastChild,d.firstChild)}function i(){var a=l.elements;return typeof a==\"string\"?a.split(\" \"):a}function j(a){var b={},c=a.createElement,f=a.createDocumentFragment,g=f();a.createElement=function(a){l.shivMethods||c(a);var f;return b[a]?f=b[a].cloneNode():e.test(a)?f=(b[a]=c(a)).cloneNode():f=c(a),f.canHaveChildren&amp;&amp;!d.test(a)?g.appendChild(f):f},a.createDocumentFragment=Function(\"h,f\",\"return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&amp;&amp;(\"+i().join().replace(/\\w+/g,function(a){return b[a]=c(a),g.createElement(a),'c(\"'+a+'\")'})+\");return n}\")(l,g)}function k(a){var b;return a.documentShived?a:(l.shivCSS&amp;&amp;!f&amp;&amp;(b=!!h(a,\"article,aside,details,figcaption,figure,footer,header,hgroup,nav,section{display:block}audio{display:none}canvas,video{display:inline-block;*display:inline;*zoom:1}[hidden]{display:none}audio[controls]{display:inline-block;*display:inline;*zoom:1}mark{background:#FF0;color:#000}\")),g||(b=!j(a)),b&amp;&amp;(a.documentShived=b),a)}function p(a){var b,c=a.getElementsByTagName(\"*\"),d=c.length,e=RegExp(\"^(?:\"+i().join(\"|\")+\")$\",\"i\"),f=[];while(d--)b=c[d],e.test(b.nodeName)&amp;&amp;f.push(b.applyElement(q(b)));return f}function q(a){var b,c=a.attributes,d=c.length,e=a.ownerDocument.createElement(n+\":\"+a.nodeName);while(d--)b=c[d],b.specified&amp;&amp;e.setAttribute(b.nodeName,b.nodeValue);return e.style.cssText=a.style.cssText,e}function r(a){var b,c=a.split(\"{\"),d=c.length,e=RegExp(\"(^|[\\\\s,&gt;+~])(\"+i().join(\"|\")+\")(?=[[\\\\s,&gt;+~#.:]|$)\",\"gi\"),f=\"$1\"+n+\"\\\\:$2\";while(d--)b=c[d]=c[d].split(\"}\"),b[b.length-1]=b[b.length-1].replace(e,f),c[d]=b.join(\"}\");return c.join(\"{\")}function s(a){var b=a.length;while(b--)a[b].removeNode()}function t(a){var b,c,d=a.namespaces,e=a.parentWindow;return!o||a.printShived?a:(typeof d[n]==\"undefined\"&amp;&amp;d.add(n),e.attachEvent(\"onbeforeprint\",function(){var d,e,f,g=a.styleSheets,i=[],j=g.length,k=Array(j);while(j--)k[j]=g[j];while(f=k.pop())if(!f.disabled&amp;&amp;m.test(f.media)){for(d=f.imports,j=0,e=d.length;j&lt;e;j++)k.push(d[j]);try{i.push(f.cssText)}catch(l){}}i=r(i.reverse().join(\"\")),c=p(a),b=h(a,i)}),e.attachEvent(\"onafterprint\",function(){s(c),b.removeNode(!0)}),a.printShived=!0,a)}var c=a.html5||{},d=/^&lt;|^(?:button|form|map|select|textarea|object|iframe)$/i,e=/^&lt;|^(?:a|b|button|code|div|fieldset|form|h1|h2|h3|h4|h5|h6|i|iframe|img|input|label|li|link|ol|option|p|param|q|script|select|span|strong|style|table|tbody|td|textarea|tfoot|th|thead|tr|ul)$/i,f,g;(function(){var c=b.createElement(\"a\");c.innerHTML=\"&lt;xyz&gt;&lt;/xyz&gt;\",f=\"hidden\"in c,f&amp;&amp;typeof injectElementWithStyles==\"function\"&amp;&amp;injectElementWithStyles(\"#modernizr{}\",function(b){b.hidden=!0,f=(a.getComputedStyle?getComputedStyle(b,null):b.currentStyle).display==\"none\"}),g=c.childNodes.length==1||function(){try{b.createElement(\"a\")}catch(a){return!0}var c=b.createDocumentFragment();return typeof c.cloneNode==\"undefined\"||typeof c.createDocumentFragment==\"undefined\"||typeof c.createElement==\"undefined\"}()})();var l={elements:c.elements||\"abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video\",shivCSS:c.shivCSS!==!1,shivMethods:c.shivMethods!==!1,type:\"default\",shivDocument:k};a.html5=l,k(b);var m=/^$|\\b(?:all|print)\\b/,n=\"html5shiv\",o=!g&amp;&amp;function(){var c=b.documentElement;return typeof b.namespaces!=\"undefined\"&amp;&amp;typeof b.parentWindow!=\"undefined\"&amp;&amp;typeof c.applyElement!=\"undefined\"&amp;&amp;typeof c.removeNode!=\"undefined\"&amp;&amp;typeof a.attachEvent!=\"undefined\"}();l.type+=\" print\",l.shivPrint=t,t(b)})(this,document);@*/\n}());\n</code></pre>\n\n<p>Regards</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I developed a web application using primefaces. I have no skills in designing so I decided to use a template, which has some css and jqueries. When I use them, primeface's components loose their functionality and some of their styles; for example primeface dialogs dont show up, accordions dont slide, panel grids loose their cellspacing etc.\nHere are the css and jqueries that Im using</p>\n\n<pre><code>&lt;h:head&gt;\n\n    &lt;link media=\"all\" rel=\"stylesheet\" type=\"text/css\" href=\"css/green-style.css\"/&gt;\n    &lt;link href='http://fonts.googleapis.com/css?family=Merriweather' rel='stylesheet' type='text/css'/&gt;\n    &lt;link href='http://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css'/&gt;\n    &lt;link href='http://fonts.googleapis.com/css?family=Open+Sans:600' rel='stylesheet' type='text/css'/&gt;\n    &lt;link href='http://fonts.googleapis.com/css?family=Merriweather:300' rel='stylesheet' type='text/css'/&gt;\n    &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"css/carousel.css\"/&gt;\n\n    &lt;script src=\"js/onebyone/jquery.onebyone.js\"&gt;&lt;/script&gt;              \n    &lt;script src=\"js/onebyone/jquery.touchwipe.min.js\"&gt;&lt;/script&gt; \n    &lt;script type=\"text/javascript\"&gt; \n        $(document).ready(function() {      \n            $('#banner').oneByOne({\n                className: 'oneByOne1', // the wrapper's name\n                easeType: 'random', //'fadeInLeft',  // the ease animation style\n                width: 990,  // width of the slider\n                height: 397, // height of the slider\n                delay: 300,  // the delay of the touch/drag tween\n                tolerance: 0.25, // the tolerance of the touch/drag  \n                enableDrag: true,  // enable or disable the drag function by mouse\n                showArrow: false,  // display the previous/next arrow or not\n                showButton: true,  // display the circle buttons or not\n                slideShow: true,  // auto play the slider or not\n                slideShowDelay: 3000 // the delay millisecond of the slidershow\n            });\n        });\n    &lt;/script&gt; \n    &lt;link href=\"js/onebyone/css/jquery.onebyone.css\" rel=\"stylesheet\" type=\"text/css\"/&gt;\n    &lt;link href=\"js/onebyone/css/default.css\" rel=\"stylesheet\" type=\"text/css\"/&gt;\n    &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"js/onebyone/css/animate.css\"/&gt; \n\n    &lt;script type=\"text/javascript\" src=\"js/jquery.carouFredSel-5.5.0.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        $(function() {\n            //  Scrolled by user interaction\n            $('#portfolio_carousel').carouFredSel({\n                pagination: \"#carousel_pager\",\n                auto: false\n            });\n\n        });\n    &lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"js/main.js\"&gt;&lt;/script&gt;\n\n&lt;/h:head&gt;\n</code></pre>\n\n<p><strong>EDIT:</strong> Removed the line as suggested by BalusC.\nHowever after testing the application for a little longer I found out that there are still issues or conflicts between jquery and ajax of primefaces</p>\n\n<p>Any help will be appreciated.</p>\n\n<p>EDIT 2: Don't have enough space so I'm continuing in following post (Scroll down)</p>\n",
            "last_activity_date": 1340217839,
            "question_id": 11112058,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "jsf",
                "primefaces"
            ],
            "title": "how to use jquery with primefaces"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Yes, you can use a <code>MessageEvent</code> or a <a href=\"https://developer.mozilla.org/en/DOM/CustomEvent\"><code>CustomEvent</code></a>.</p>\n\n<p>Example usage:</p>\n\n<pre><code>//Listen for the event\nwindow.addEventListener(\"MyEventType\", function(evt) {\n    alert(evt.detail);\n}, false);\n\n//Dispatch an event\nvar evt = document.createEvent(\"CustomEvent\");\nevt.initCustomEvent(\"MyEventType\", true, true, \"Any Object Here\");\nwindow.dispatchEvent(evt);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>pass json object as detail.</p>\n\n<pre><code>var event = new CustomEvent('build', { 'detail1': \"something\", detail2: \"something else\" });\n\nfunction eventHandler(e) {\n  log('detail1: ' + e.detail.detail1);\n  log('detail2: ' + e.detail.detail2);\n}\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I need to pass data between two autonomic userscripts - ideally w/o touching the <code>unsafeWindow</code> object - and I thought using custom events would be the way to go. I thought of something like this (let us disregard the MSIE model for the purpose of the example):</p>\n\n<pre><code>addEventListener(\"customEvent\", function(e) {\n  alert(e.data);\n});\n\nvar custom = document.createEvent(\"HTMLEvents\");\ncustom.initEvent(\"customEvent\", true, true);\ncustom.data = \"Some data...\";\ndispatchEvent(custom);\n</code></pre>\n\n<p>This works nicely in the standard javascript environment and within one userscript, but when the event is fired by the userscript and caught outside of it or inside another userscript, the <code>data</code> property is <code>undefined</code> in chromium. I suppose I could just save the passed data in the <code>sessionStorage</code>, but it is far from seamless. Any other elegant solutions, gentlemen and gentlewomen? Perfection need and can be achieved, I can feel it.</p>\n",
            "last_activity_date": 1411454615,
            "question_id": 9417121,
            "score": 10,
            "tags": [
                "javascript",
                "dom",
                "javascript-events",
                "google-chrome-extension",
                "userscripts"
            ],
            "title": "Is there any way of passing additional data via custom events?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Maybe you could put</p>\n\n<pre><code>overflow-y:scroll;\n</code></pre>\n\n<p>in your css. This forces the scrollbar to be present even when the text area is blank, so the width is always constant.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I think this helps to get the width of scrollbar.</p>\n\n<pre>\ntextarea.scrollHeight\n</pre>\n\n<p>gives the height so cant this be used..</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is a jQuery plugin that can help with this: <a href=\"https://github.com/brandonaaron/jquery-getscrollbarwidth/blob/master/jquery.getscrollbarwidth.js\">https://github.com/brandonaaron/jquery-getscrollbarwidth/blob/master/jquery.getscrollbarwidth.js</a></p>\n\n<p>Also, from <a href=\"http://www.alexandre-gomes.com/?p=115\">http://www.alexandre-gomes.com/?p=115</a> \nHere is some code that may help. </p>\n\n<p>This creates a hidden <code>&lt;p&gt;</code> element at 100% width inside a <code>&lt;div&gt;</code> with a scrollbar, then calculates the <code>&lt;div&gt;</code> width - the <code>&lt;p&gt;</code> width = scroll bar width. </p>\n\n<pre><code>function getScrollBarWidth () { \n  var inner = document.createElement('p'); \n  inner.style.width = \"100%\"; \n  inner.style.height = \"200px\"; \n\n  var outer = document.createElement('div'); \n  outer.style.position = \"absolute\"; \n  outer.style.top = \"0px\"; \n  outer.style.left = \"0px\"; \n  outer.style.visibility = \"hidden\"; \n  outer.style.width = \"200px\"; \n  outer.style.height = \"150px\"; \n  outer.style.overflow = \"hidden\"; \n  outer.appendChild (inner); \n\n  document.body.appendChild (outer); \n  var w1 = inner.offsetWidth; \n  outer.style.overflow = 'scroll'; \n  var w2 = inner.offsetWidth; \n  if (w1 == w2) w2 = outer.clientWidth; \n\n  document.body.removeChild (outer); \n\n  return (w1 - w2); \n}; \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Scrollbar width is simply (offsetWidth - clientWidth) in a borderless! element.\nThis function calculates it on the fly and caches the result for further use. No need need for percentage width etc.</p>\n\n<pre><code>var getScrollbarWidth = function() {\n  var div, width = getScrollbarWidth.width;\n  if (width === undefined) {\n    div = document.createElement('div');\n    div.innerHTML = '&lt;div style=\"width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;\"&gt;&lt;div style=\"width:1px;height:100px;\"&gt;&lt;/div&gt;&lt;/div&gt;';\n    div = div.firstChild;\n    document.body.appendChild(div);\n    width = getScrollbarWidth.width = div.offsetWidth - div.clientWidth;\n    document.body.removeChild(div);\n  }\n  return width;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I was looking for something similar - here is what i found </p>\n\n<pre><code> function measureScrollbar() {\n      var $c = $(\"&lt;div style='position:absolute; top:-10000px; left:-10000px; width:100px; height:100px; overflow:scroll;'&gt;&lt;/div&gt;\").appendTo(\"body\");\n      var dim = {\n        width: $c.width() - $c[0].clientWidth,\n        height: $c.height() - $c[0].clientHeight\n      };\n      $c.remove();\n      return dim;\n    }\n</code></pre>\n\n<p>Source : <a href=\"https://github.com/mleibman/SlickGrid\" rel=\"nofollow\">Slickgrid</a> uses this - <a href=\"https://github.com/mleibman/SlickGrid/blob/master/slick.grid.js#L378\" rel=\"nofollow\">https://github.com/mleibman/SlickGrid/blob/master/slick.grid.js#L378</a></p>\n\n<p>Or </p>\n\n<p>Use Google Closure Library -<a href=\"http://docs.closure-library.googlecode.com/git/closure_goog_style_style.js.source.html#line1903\" rel=\"nofollow\">link</a></p>\n\n<pre><code>/**\n * Returns the scroll bar width (represents the width of both horizontal\n * and vertical scroll).\n *\n * @param {string=} opt_className An optional class name (or names) to apply\n *     to the invisible div created to measure the scrollbar. This is necessary\n *     if some scrollbars are styled differently than others.\n * @return {number} The scroll bar width in px.\n */\ngoog.style.getScrollbarWidth = function(opt_className) {\n  // Add two hidden divs.  The child div is larger than the parent and\n  // forces scrollbars to appear on it.\n  // Using overflow:scroll does not work consistently with scrollbars that\n  // are styled with ::-webkit-scrollbar.\n  var outerDiv = goog.dom.createElement('div');\n  if (opt_className) {\n    outerDiv.className = opt_className;\n  }\n  outerDiv.style.cssText = 'overflow:auto;' +\n      'position:absolute;top:0;width:100px;height:100px';\n  var innerDiv = goog.dom.createElement('div');\n  goog.style.setSize(innerDiv, '200px', '200px');\n  outerDiv.appendChild(innerDiv);\n  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);\n  var width = outerDiv.offsetWidth - outerDiv.clientWidth;\n  goog.dom.removeNode(outerDiv);\n  return width;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Using jQuery, simply write:</p>\n\n<pre><code>function getScrollBarWidth () {\n    var $outer = $('&lt;div&gt;').css({visibility: 'hidden', width: 100, overflow: 'scroll'}).appendTo('body'),\n        widthWithScroll = $('&lt;div&gt;').css({width: '100%'}).appendTo($outer).outerWidth();\n    $outer.remove();\n    return 100 - widthWithScroll;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Given a <code>&lt;textarea&gt;</code> with a fixed <code>width</code>, I would like its \"active width\" to be constant (in <code>px</code>). By \"active width\" I mean the area where the text appears. </p>\n\n<p>When the vertical scroll bar doesn't appear, the \"active width\" equals to <code>width</code>. But, when the vertical scroll bar appears, the \"active width\" becomes smaller than <code>width</code> (I guess smaller exactly by the width of the scroll bar).</p>\n\n<p>I thought to identify whether the vertical scroll bar appears or not, and if yes, to increase the width of the <code>&lt;textarea&gt;</code> by the width of the scroll bar. How could I identify the width of the scroll bar?</p>\n\n<p>Is there a better approach?</p>\n\n<p>(I'm interested in Firefox, if it makes the life easier.)</p>\n",
            "last_activity_date": 1408706572,
            "question_id": 8079187,
            "score": 10,
            "tags": [
                "javascript",
                "html",
                "width",
                "scrollbar"
            ],
            "title": "How to calculate the width of the scroll bar?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I'm not quite sure what the point is you want to make, so the only answer I can give is: Yes, it's ok to use reserved words as property names.</p>\n\n<p>(However two small remarks: <code>foo[\"class\"]</code> is ok, not <code>foo[class]</code>. And any way you should be using  <code>form.elements[\"xyz\"]</code> and not <code>form.xyz</code> to access an element named <code>xyz</code>.)</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>In ECMAScript, starting from ES5, reserved words may be used as object property names \"in the buff\". This means that they don't need to be \"clothed\" in quotes when defining object literals, and they can be dereferenced (for accessing, assigning, and deleting) on objects without having to use square bracket indexing notation.</p>\n\n<p>That said, reserved words may still <em>NOT</em> be used as identifier names. This is stated quite unambiguously in the spec and is stated somewhat emphatically here (if you don't want your eyes to bleed by having to read the actual language spec)...</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Reserved_Words\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Reserved_Words</a></p>\n\n<blockquote>\n  <p>The following are keywords and may not be used as variables,\n  functions, methods, or object identifiers, because ECMAScript\n  specifies special behavior for them:</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Yes, it can be used.</p>\n\n<p>Just small remark, if you use YUI compressor you have to put property name which is equal to one of js reserved words in quotes.</p>\n\n<p>For example, this won't compress</p>\n\n<pre><code>var a = { case : \"foo\"}; // syntax error, \"invalid property id\"\na.for = \"bar\"; // syntax error, \"missing name after . operator\"\n</code></pre>\n\n<p>This will do</p>\n\n<pre><code>var a = { \"case\" : \"foo\"}; //OK\na[\"for\"] = \"bar\"; //OK\n</code></pre>\n\n<p>Here is <a href=\"http://refresh-sf.com/yui/\" rel=\"nofollow\">Online JavaScript/CSS Compression Using YUI Compressor</a> where this can be tested.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Can a <code>reserved word</code> be used as an object's property name?</p>\n\n<p>This issue was raised in indirectly previous a <a href=\"http://stackoverflow.com/questions/5306315/browser-support-for-using-a-reserved-word-as-a-property-name-in-javascript\">stackoverflow question</a>.  the answer seemed general consensus by @Squeegy: <blockquote>You can use those words, but only as strings and not shorthand properties - <code>foo[\"class\"]</code> is cool, whereas <code>foo.class</code> is not</blockquote>helpfully giving a link to the <a href=\"http://javascript.about.com/library/blreserved.htm\">list of reserved words</a></p>\n\n<p>while I think that @Squeeky is probably more knowledgeable than me in this area and it is probably a <em>bad idea</em> to use reserved words in some situations, I think his conclusion is wrong based on two points:</p>\n\n<ul>\n<li><p>testing of the reserved words using them as a \"shorthand\" properties</p></li>\n<li><p>the HTMLFormElement makes it impossible <em>not</em> to use reserved words in \"shorthand\"</p></li>\n</ul>\n\n<p>First, using the reserved word list, each was added as a property to an <code>Object</code> and <code>HTMLElement</code>, both as <code>obj[\"word\"]</code> and <code>obj.word</code>, and then retrieved as <code>obj[\"word\"]</code> and <code>obj.word</code>.  In each of the 63 cases all eight tests worked correctly.</p>\n\n<p>Second, the HTMLFormElement necessitates this works because it retrieves in its elements using shorthand notation.  If <code>&lt;input name='typeof' value='scalar' /&gt;</code> is an element of a form, then <code>form.typeof</code> == \"scalar\".</p>\n\n<p>From my experience, reserved words are usually data inflicted (eg, a column named \"private\"), not program inflicted.  As such they contaminate JSON objects, and from there INPUT, and from there the HTMLFormElement.  Simply put, without a huge amount of (imho unnecessary) work, it's impossible to keep reserved words <em>not</em> being forced to work correctly in shorthand.</p>\n\n<p>It seems to me these real problems:</p>\n\n<ul>\n<li><p>care needs to be taken not to conflict with existent <strong>properties</strong>, not reserved words</p></li>\n<li><p>(many if not all) <strong>variables</strong> cannot be reserved words</p></li>\n<li><p>use of reserved words as properties can be (but are not necessarily) confusing</p></li>\n</ul>\n\n<p>Is this conclusion correct then, that reserved words as property names, and accessing them either as strings or shorthand, is just fine - as long as a little common sense is applied to the situation?</p>\n",
            "last_activity_date": 1377866767,
            "question_id": 7022397,
            "score": 10,
            "tags": [
                "javascript",
                "json",
                "properties",
                "javascript-objects",
                "reserved-words"
            ],
            "title": "using reserved words as property names, revisited"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>HTML Code:</p>\n\n<pre><code>&lt;div id=\"welcomeDiv\"  style=\"display:none;\" class=\"answer_list\" &gt; WELCOME&lt;/div&gt;\n&lt;input type=\"button\" name=\"answer\" value=\"Show Div\" onclick=\"showDiv()\" /&gt;\n</code></pre>\n\n<p>Javascript:    </p>\n\n<pre><code>function showDiv() {\n   document.getElementById('welcomeDiv').style.display = \"block\";\n}\n</code></pre>\n\n<p>See the Demo: <a href=\"http://jsfiddle.net/rathoreahsan/vzmnJ/\">http://jsfiddle.net/rathoreahsan/vzmnJ/</a></p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p><strong>HTML</strong></p>\n\n<pre><code>&lt;div id=\"myDiv\" style=\"display:none;\" class=\"answer_list\" &gt;WELCOME&lt;/div&gt;\n&lt;input type=\"button\" name=\"answer\" onclick=\"ShowDiv()\" /&gt;\n</code></pre>\n\n<p><strong>JavaScript</strong></p>\n\n<pre><code>function ShowDiv() {\n    document.getElementById(\"myDiv\").style.display = \"\";\n}\n</code></pre>\n\n<p>Or if you wanted to use jQuery with a nice little animation:</p>\n\n<pre><code>&lt;input id=\"myButton\" type=\"button\" name=\"answer\" /&gt;\n\n$('#myButton').click(function() {\n  $('#myDiv').toggle('slow', function() {\n    // Animation complete.\n  });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>&lt;div  style=\"display:none;\" class=\"answer_list\" &gt; WELCOME&lt;/div&gt;\n&lt;input type=\"button\" name=\"answer\" onclick=\"document.getElementsByClassName('answer_list')[0].style.display = 'auto';\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction showDiv(toggle){\ndocument.getElementById(toggle).style.display = 'block';\n}\n&lt;/script&gt;\n\n&lt;input type=\"button\" name=\"answer\" onclick=\"showDiv('toggle')\"&gt;Show&lt;/input&gt;\n\n&lt;div id=\"toggle\" style=\"display:none\"&gt;Hello&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/4357291/javascript-show-element-on-click\">Javascript show element on click</a>  </p>\n</blockquote>\n\n\n\n<p>I have following DIV . I want to display the DIV after button click .Now it is display none </p>\n\n<pre><code>&lt;div  style=\"display:none;\" class=\"answer_list\" &gt; WELCOME&lt;/div&gt;\n&lt;input type=\"button\" name=\"answer\" &gt;\n</code></pre>\n",
            "last_activity_date": 1390395705,
            "question_id": 6957443,
            "score": 10,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "How to display div after click the button in Javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I like jsconsole.com.  </p>\n\n<p>Also, you can use the json2.js library (https://github.com/douglascrockford/JSON-js), which will give you JSON.stringify() function.</p>\n\n<pre><code>console.log(JSON.stringify({a:'a',b:'b'});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>There isn't a Developer Tools window in mobile safari. There is a Debug Console, which will report errors in javascript, html and css, but it is nowhere near Developer Tools you'll find in a desktop browser. This debug console doesn't allow input of javascript (although this can be done in the address bar, eg <code>javascript:alert(\"hi\");</code>)</p>\n\n<p>To enable the Debug Console, open the <strong>settings</strong> app, go to the <strong>Safari</strong> menu, then <strong>Developer</strong>, and then turn on the debug console. Go back to Safari, scroll to the top of the page and it will be obvious what to do to get to the Debug Console.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Those outputs look entirely correct. E.g., when I ask for the string version of <code>window.navigator</code>, I correctly get</p>\n\n<pre><code>console.log(String(window.navigator));\n\"[object Navigator]\"\n</code></pre>\n\n<p>On the other hand, when I ask for a specific value, I get (in Chromium):</p>\n\n<pre><code>console.log(window.navigator.userAgent);\n\"Mozilla/5.0 (X11; Linux i686) AppleWebKit/534.24 (KHTML, like Gecko) Chrome/11.0.696.71 Safari/534.24\"\n</code></pre>\n\n<p>And when I try to enumerate all items, I get</p>\n\n<pre><code>for (var i in window.navigator) console.log(i);\nlanguage\nproduct\nmimeTypes\nappVersion\nplugins\nonLine\nplatform\nvendor\nappCodeName\ncookieEnabled\ngeolocation\nappName\nproductSub\nuserAgent\nvendorSub\njavaEnabled\ngetStorageUpdates\n</code></pre>\n\n<p>(please be aware that in the above line of code I didn't check for <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\" rel=\"nofollow\"><code>hasOwnProperty</code></a>, which you normally should use when iterating over object elements).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>Update!!!</strong> On OS X you can use the Safari web inspector on the iOS Simulator AND iOS 6 devices.</p>\n\n<ol>\n<li>First enable the Developer menu in Safari.</li>\n<li><p>Next, enable remote debugging on your iOS device (or simulator).</p>\n\n<pre><code>Settings &gt; Safari &gt; Advanced &gt; Web Inspector (ON)\n</code></pre></li>\n<li>Go back to Safari on your device.</li>\n<li>Go back to your computer, click the Developer menu, and select your\ndevice (e.g. iPhone Simulator, iPhone)</li>\n</ol>\n\n<p>Note: You'll see your device in the Developer menu ONLY when Safari is active and running.</p>\n\n<p>Enjoy!</p>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>You can also use this to activate Firebug on your device. Took me a lot of time to find this.</p>\n\n<p><a href=\"http://martinkool.com/post/13629963755/firebug-on-ipad-and-iphone\" rel=\"nofollow\">http://martinkool.com/post/13629963755/firebug-on-ipad-and-iphone</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can I inspect the window object for mobile safari?</p>\n\n<p>Or more specifically window.navigator - trying to convert to string doesn't work and I can't explore it within the console either. </p>\n\n<p>Thanks!</p>\n\n<p>EDIT:</p>\n\n<p><code>console.log(window.navigator);</code></p>\n\n<p><code>console.log(String(window.navigator));</code></p>\n\n<p><code>console.log(JSON.stringify(window.navigator));</code></p>\n\n<p><code>console.log(window.navigator.serialize());</code></p>\n\n<p>Also tried sending all these variations over the socket to the server and logging them there.</p>\n\n<p>Output is either <code>[object Navigator]</code>, <code>\"{}\"</code>, or nothing</p>\n",
            "last_activity_date": 1391691386,
            "question_id": 6206568,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "iphone",
                "mobile",
                "safari"
            ],
            "title": "How can I inspect the window object for mobile safari?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Here is how jQuery does it :</p>\n\n<pre><code>// Calculate pageX/Y if missing and clientX/Y available\nif ( event.pageX == null &amp;&amp; event.clientX != null ) {\n  var doc = document.documentElement, body = document.body;\n  event.pageX = event.clientX + (doc &amp;&amp; doc.scrollLeft || body &amp;&amp; body.scrollLeft || 0) - (doc &amp;&amp; doc.clientLeft || body &amp;&amp; body.clientLeft || 0);\n  event.pageY = event.clientY + (doc &amp;&amp; doc.scrollTop  || body &amp;&amp; body.scrollTop  || 0) - (doc   &amp;&amp; doc.clientTop  || body &amp;&amp; body.clientTop  || 0);\n}\n</code></pre>\n\n<p>Testing pageX (or pageY) or calculating it from clientX and scrollLeft ans clientLeft</p>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>working with the mouse within Javascript I have occasionally met the following event attributes:</p>\n\n<ul>\n<li><strong>clientX, clientY</strong></li>\n<li><strong>layerX, layerY</strong></li>\n<li><strong>offsetX, offsetY</strong></li>\n<li><strong>pageX, pageY</strong></li>\n<li><strong>screenX, screenY</strong></li>\n<li><strong>x, y</strong></li>\n</ul>\n\n<p>I'm wondering what their cross-browser compatibility looks like in general, as I have only found bits and pieces of info that I'm trying to patch up together.</p>\n\n<p>Thanks guys</p>\n",
            "last_activity_date": 1280232540,
            "question_id": 3343384,
            "score": 10,
            "tags": [
                "javascript",
                "javascript-events",
                "mouse"
            ],
            "title": "Mouse position - Cross browser compatibility - Javascript"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>What you have works: <a href=\"http://jsfiddle.net/cUSVj/\">http://jsfiddle.net/cUSVj/</a></p>\n\n<p>Though keep in mind you can't do much with it after it's created if it's in not in the same domain, this is due to restrictions in place per the <a href=\"http://en.wikipedia.org/wiki/Same_origin_policy\">same-origin policy</a>.</p>\n\n<p><em>Edit:</em> I was closing the tag thinking it was a paste error, you are indeed missing a <code>/</code> in your <code>&lt;/iframe&gt;</code> closing tag...this will/won't work depending on how generous the browser is.    Make sure to close it correctly so your HTML is valid, otherwise you'll have cross-browser issues, <em>if</em> it works to begin with.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>The actual jquery code looks fine, you may not be referencing the div correctly i.e.</p>\n\n<pre><code>#div - would be an element with the id \"div\"\n.div - would be an element with the class \"div\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It works, I just tested it, what you might need is give jquery the id/class of the div you want to insert the iframe</p>\n\n<p>eg. (id)</p>\n\n<pre><code>$(\"#myDiv\").html(\"&lt;iframe src='http://google.com'&gt;&lt;/iframe&gt;\");  \n</code></pre>\n\n<p>eg. (class)</p>\n\n<pre><code>$(\".myDiv\").html(\"&lt;iframe src='http://google.com'&gt;&lt;/iframe&gt;\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yes. It is working fine.</p>\n\n<p>Check here : <a href=\"http://jsbin.com/arolo3/2/edit\" rel=\"nofollow\">http://jsbin.com/arolo3/2/edit</a></p>\n\n<p>You should close the iframe tag. It might be the issue.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>you did not close the iframe tag</p>\n\n<pre><code>&lt;iframe&gt;\n&lt;/iframe&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>&lt;html&gt;\n\n&lt;head&gt;\n&lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n\n\n&lt;body&gt;\n&lt;script type=\"text/javascript\"&gt;\n    $(document).ready(function() {\n        $(\"#frameDiv\").html(\"&lt;iframe src='http://google.com'&gt;&lt;/iframe&gt;\");  \n    });\n\n\n&lt;/script&gt;\n&lt;p&gt;An IFrame should appear here&lt;/p&gt;\n&lt;div id=\"frameDiv\" style=\"width: 400px; height: 400px;\"&gt;&lt;/div&gt;\n\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've used it like this and it works well ;-)</p>\n\n<pre><code>$(\".div\").html(\"&lt;iframe width='850' height='450' frameborder='0' scrolling='no' marginheight='0' marginwidth='0' src='http://yourlocation.com'&gt;&lt;/iframe&gt;\");  \n$(\".div\").css(\"display\",\"block\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How do I dynamically insert an iframe in a div using jQuery?</p>\n\n<pre><code>$(document).ready(function() {\n    $(\"div\").html(\"&lt;iframe src='http://google.com'&gt;&lt;iframe&gt;\");  \n});\n</code></pre>\n\n<p>I tried the above code, but it doesn't work.</p>\n",
            "last_activity_date": 1423359213,
            "question_id": 3236430,
            "score": 10,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How do I dynamically insert an iframe in a div"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Well, the <code>onclick</code> property expects a reference to a function, for it to execute when the element is clicked. Normally it's either:</p>\n\n<pre><code>element.onclick = funcRef;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>element.onclick = function () {\n    funcRef();\n};\n</code></pre>\n\n<p>(but of course, it's best to use <code>addEventListener</code> and <code>attachEvent</code>)</p>\n\n<p>Notice how both of them are references to functions, not calling.</p>\n\n<p>When something expects a reference, you don't call it...you assign a reference to it (first example).</p>\n\n<p>When you want to specifically call a function, you call it with <code>()</code> (second example). But notice how in the second example, there's still a reference to a function that's assigned to <code>onclick</code> - it's just an anonymous function.</p>\n\n<p><strong>Probably the more important part:</strong></p>\n\n<p>Some people think you want to do this:</p>\n\n<pre><code>element.onclick = funcRef();\n</code></pre>\n\n<p>But that immediately executes the function (because of the <code>()</code>), and assigns its return value to <code>onclick</code>. Unless the return value <strong>is</strong> a function, this isn't what you want.</p>\n\n<p>I think the moral of the story is that when you want/need something to execute right now, you call the function. If the function is wanted for later use or needs stored, you don't call it.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<blockquote>\n  <p>How can I know where I'm supposed to give a reference to the function, and when I'm supposed to actually call it?</p>\n</blockquote>\n\n<p><strong>Do you need the function to run now?</strong></p>\n\n<p>Than add the () to execute it</p>\n\n<p><strong>Do you need to function to be referenced so it is called later?</strong></p>\n\n<p>Do not add the ().</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>A reference to your function is needed <em>somewhere</em> no matter how it gets called. The difference here is that you are not explicitly calling the <code>hello</code> function. You are assigning a reference to that function to the <code>elem</code> DOM node's <code>onclick</code> event handler so that when <code>onclick</code> is fired for that Node, your function gets called.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>hello() means you call that function, which means the function will be executed directly.</p>\n\n<p>while when you have elem.onclick = hello, this is called a callback. Where hello doesn't get executed directly but only when a certain event is fired (in this case when there's a click on the element)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Do you want it to execute NOW? Then call it.</p>\n\n<p><code>a=hello()</code> means \"Call <code>hello()</code> ASAP, and set its return value to <code>a</code>\".</p>\n\n<p>On the other hand, <code>a=hello</code> means \"<code>a</code> is an alias for <code>hello</code>. If you call <code>a()</code>, you get the same results as calling <code>hello()</code>\"</p>\n\n<p>You use the latter for callbacks, etc, where you want to tell the browser what you want to happen after an event occurs. For example, you may want to say \"call <code>hello()</code> when the user clicks\" (as in the example). Or, \"When the AJAX query returns a result, call the <code>callback()</code> function on the returned data\". </p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Pretty much all statements in JavaScript have a return value. Unless otherwise specified, functions in JavaScript will return <code>undefined</code> when called. So, the only context in which it would make sense to call your function in this assignment statement if it were to return a function:</p>\n\n<pre><code>function hello() {\n    return function() {\n        alert(\"hi!\");\n    }\n}\n\nelem.onclick = hello();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have the following function   </p>\n\n<pre><code>function hello() {\n alert(\"hi!\");\n}\n</code></pre>\n\n<p>Take this piece of code:</p>\n\n<pre><code>var elem = document.getElementById(\"btn\");\nelem.onclick = hello;\n</code></pre>\n\n<p>My question might be a bit hard to understand, so bear with me:\nWhat EXACTLY differentiates THIS piece of code from a normal call, or what makes this piece of code require a reference to the function variable rather than a regular call? (<code>hello();</code>)</p>\n\n<p>How can I know where I'm supposed to give a reference to the function, and when I'm supposed to actually call it?</p>\n",
            "last_activity_date": 1365446148,
            "question_id": 15886272,
            "score": 9,
            "tags": [
                "javascript",
                "function",
                "reference",
                "call"
            ],
            "title": "What is the difference between a function call and function reference?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Did you try enclosing the result like in\u2026</p>\n\n<pre><code>(new XMLSerializer()).serializeToString(xml)\n</code></pre>\n\n<p>Also, I'd use console instead to see the content better:</p>\n\n<pre><code>console.log((new XMLSerializer()).serializeToString(xml));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre class=\"lang-javascript prettyprint-override\"><code>function getXmlString(xml) {\n  if (window.ActiveXObject) { return xml.xml; }\n  return new XMLSerializer().serializeToString(xml);\n}\nalert(getXmlString(xml));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You haven't told us how you go about displaying that object. XMLSerializer works on DOM nodes, so you object has to be added somewhere, for example:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>document.getElementById('SomeDiv').appendChild(xml); \n</code></pre>\n\n<p>and if you just want the full xml string to me displayed:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var xmlText = new XMLSerializer().serializeToString(xml);\nvar xmlTextNode = document.createTextNode(xmlText);\nvar parentDiv = document.getElementById('SomeDiv');\nparentDiv.appendChild(xmlTextNode);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>If the DOM element <code>&lt;asin&gt;\u200bB0013FRNKG\u200b&lt;/asin&gt;\u200b</code> is stored in the object <code>element</code>, then you can access the value using:</p>\n\n<pre><code>element.textContent\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;script type='text/javascript'&gt;\n\n    function xmlToString(xmlData) { \n\n        var xmlString;\n        //IE\n        if (window.ActiveXObject){\n            xmlString = xmlData.xml;\n        }\n        // code for Mozilla, Firefox, Opera, etc.\n        else{\n            xmlString = (new XMLSerializer()).serializeToString(xmlData);\n        }\n        return xmlString;\n    }   \n\n&lt;/script&gt;    \n</code></pre>\n\n<p>use this in case of IE for browser compatibility issues.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to convert an xml element like this:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>&lt;asin&gt;\u200bB0013FRNKG\u200b&lt;/asin&gt;\u200b\n</code></pre>\n\n<p>to string in javascript</p>\n\n<p>I used <code>XMLSerializer</code>:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>new XMLSerializer().serializeToString(xml);\n</code></pre>\n\n<p>the string only shows on alert() and in the console. On the page it just says </p>\n\n<pre class=\"lang-js prettyprint-override\"><code>[object Element][object Element]\n</code></pre>\n\n<p>I want to get the string.</p>\n",
            "last_activity_date": 1408444455,
            "question_id": 9898698,
            "score": 9,
            "tags": [
                "javascript",
                "xml",
                "xml-serialization"
            ],
            "title": "Convert XML to String and append to page"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can have to add an extra line in your manifest file:</p>\n\n<pre><code>\"content_scripts\": [\n    {\n      \"matches\": [\"http://test-website.com/*\"], \n      \"js\": [\"js/content-script.js\"],\n      \"css\" : [\"yourcss.css\"]\n    }\n],\n</code></pre>\n\n<p>The CSS file as defined in <code>\"css\": [\"...\"]</code>will be added to every page which matches the location as mentioned in <code>matches</code>.</p>\n\n<p>If you're developing a Chrome extension, make sure that you have a look at these pages:</p>\n\n<ol>\n<li><strong><a href=\"https://developer.chrome.com/extensions/devguide\" rel=\"nofollow\">Developer's guide</a></strong>\n<ul>\n<li><a href=\"https://developer.chrome.com/extensions/manifest\" rel=\"nofollow\">Manifest files</a></li>\n<li><a href=\"https://developer.chrome.com/extensions/content_scripts\" rel=\"nofollow\">Content scripts</a></li>\n<li><a href=\"https://developer.chrome.com/extensions/background_pages\" rel=\"nofollow\">Background pages</a></li>\n</ul></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>You can also inject a css file into one or more tab's content by using the following syntax as detailed on the <a href=\"http://code.google.com/chrome/extensions/tabs.html\" rel=\"nofollow\">Chrome Tabs API webpage</a>:</p>\n\n<pre><code>chrome.tabs.insertCSS(integer tabId, object details, function callback);\n</code></pre>\n\n<p>You will first need the ID of your target tab, of course.</p>\n\n<p>The Chrome Extension documentation doesn't discuss <em>how</em> the injected CSS is interpreted, but the fact is that CSS files that are injected into a webpage, by this method or by including them in the manifest, are interpreted as user stylesheets.</p>\n\n<p>In this respect, it is important to note that if you <em>do</em> inject stylesheets by using these methods, they will be limited in one crucial way ( at least, as of Chrome v.19 ): Chrome ignores \"!important\" directives in user stylesheets.  Your injected style rules will be trumped by anything included in the page as it was authored.</p>\n\n<p>One work-around, if you want to avoid injecting inline style rules, is the following (I'm using jQuery for the actual insertion, but it could be done with straight Javascript):</p>\n\n<pre><code>$(document).ready(function() {\nvar path = chrome.extension.getURL('styles/myExtensionRulz.css');\n$('head').append($('&lt;link&gt;')\n    .attr(\"rel\",\"stylesheet\")\n    .attr(\"type\",\"text/css\")\n    .attr(\"href\", path));\n});\n</code></pre>\n\n<p>You can then put the stylesheet in your extension's styles folder, but you won't need to list it anywhere on the manifest.  The relevant part above is that you will use the chrome API to get your stylesheet's URL, then plug that in as the link's href value.  Now, your stylesheet will be given a higher precedence, and you can use the \"!important\" directive where needed.  </p>\n\n<p>This is the only solution that works for me in the latest version of Chrome. </p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I do not know how to inject CSS into a webpage through a Chrome extension. I am trying to inject this into a web page:</p>\n\n<pre><code>body {\n   background: #000 !important;\n}\n\na {\n   color: #777 !important;\n}\n</code></pre>\n\n<p>Here is my manifest.json:</p>\n\n<pre><code>{\n\"update_url\":\"http://clients2.google.com/service/update2/crx\",\n  \"name\": \"Test Extension\",\n  \"version\": \"1.0\",\n  \"description\": \"This is a test extension for Google Chrome.\",\n  \"icons\": { \"16\": \"icon16.png\",\n           \"48\": \"icon48.png\",\n          \"128\": \"icon128.png\" },\n  \"background_page\": \"background.html\",\n  \"browser_action\": {\n    \"default_icon\": \"icon19.png\"\n  },\n  \"content_scripts\": [\n    {\n      \"matches\": [\"http://test-website.com/*\"], \n      \"js\": [\"js/content-script.js\"]\n    }\n  ],\n\n    \"permissions\": [ \"tabs\", \"http://test-website.com/*\" ]\n\n}\n</code></pre>\n",
            "last_activity_date": 1399266506,
            "question_id": 7619095,
            "score": 9,
            "tags": [
                "javascript",
                "css",
                "google-chrome",
                "google-chrome-extension"
            ],
            "title": "How to inject CSS into webpage through Chrome extension?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>It is an object.</p>\n\n<p><code>$</code> holds different functions.</p>\n\n<p>You can test this yourself by making your own object:</p>\n\n<pre><code>var $ = {\n     select: function(id){return document.getElementById(id);}\n}\n\nfunction $(id){\n      return $.select(id);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>var s = function(){};\ns.test = function(){console.log('inside s');}\ns.test();\n</code></pre>\n\n<p>is perfectly legal code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Javascript is an object oriented language, so functions ARE objects, just fancy ones that you can call.</p>\n\n<pre><code>foo = function() { console.log(\"foo\") }\nfoo.bar = function() { console.log(\"bar\") }\nfoo() //=&gt; prints \"foo\"\nfoo.bar() //=&gt; prints \"bar\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This isn't unique to jQuery, but an aspect of javascript.  All functions are objects.  E.g.:</p>\n\n<pre><code>var f = function() { alert('yo'); }\nf.foo = \"bar\";\n\nalert(f.foo); // alerts \"bar\"\nf();          // alerts \"yo\"\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>people play around with javascript functions and it leads to interesting design patterns.. Jquery uses of many of these patterns and creates a nice wrapper around many functions.. so ultimately jquery is like a static class using which one can do really neat stuff..</p>\n\n<p>like all classes it has a name and the default Name is jQuery. The $ is nothing buy an identifier that is tied into the jQuery Library and stops you from having to type \u201cjQuery\u201d as the identifier. </p>\n\n<p>The fact that it is a $ symbol is arbitrary. At some point a decision was made to use the $ symbol but the fact of the matter is that it could have been almost any type of ECMAScript acceptable identifier.</p>\n\n<p>The main reason we use $ as the identifier is that you are less likely to make simple typo mistakes when typing one character instead of a string.</p>\n\n<p>Hope that makes things clear.. please correct me guys if I hv got something wrong</p>\n\n<p>A simple example of say my own library would be say a calculator class</p>\n\n<pre><code>var Calculator= (function()\n{\n\n    function add(a,b)\n    {\n     return a+b;\n    }\n    function subtract(a,b)\n    {\n     return a-b;\n    }\n    function multiply()\n    {\n     return a*b;\n    }\n    function log()\n    {\n      console.log(\"log 123\")\n    }\n    return\n    {\n     add: add,\n     subtract: subtract,\n     multiply: multiply\n    }\n}());\n</code></pre>\n\n<p>Now I can perform operation using the Calculator class as follows:</p>\n\n<pre><code>Calculator.multiply(Calculator.add(2,3),5);\n</code></pre>\n\n<p>add my local functions are private and are not exposed to be used outside. In this case my log function can't be accessed using Calculator.log it will say method not found on object.</p>\n\n<p>Now coming back to your question you could do something like this:</p>\n\n<p>var _=Calculator;</p>\n\n<p>and now use the calc functions like</p>\n\n<pre><code>_.multiply(_.add(2,3),5);\n</code></pre>\n\n<p>Interestingly there is a library called underscore too..</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>$</code> is a function. \na method of $ can return any thing.</p>\n\n<p>For example: </p>\n\n<pre><code>$ = function() {\n     return {\n                 foo : function() { return 'baa'; },\n                 r1: 1,\n                 r2 : 'string'\n            }\n};\n\ntypeof $ &lt;- function \ntypeof $() &lt;- object\ntypeof $().foo &lt;- function \ntypeof $().foo() &lt;- string\ntypeof $().r1; &lt;- number \ntypeof $().r2 &lt;- string\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>jQuery</code> or <code>$</code> is an function(you know <code>$</code> is an alias of <code>jQuery</code>).</p>\n\n<pre><code>// Define a local copy of jQuery\njQuery = function( selector, context ) {\n    // The jQuery object is actually just the init constructor 'enhanced'\n    return new jQuery.fn.init( selector, context, rootjQuery );\n},\n</code></pre>\n\n<p>In Javascript, everything is an object even <code>function</code> too. Hence You can directly add properties to function.</p>\n\n<pre><code>   jQuery.find = function () {\n   }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>var q=function(){};\n\nvar s = function(){\n    alert(\"base\");\n    window.s = s;\n    return new q()};\n\nq.fn = q.prototype = {};\n\nq.fn.x = s.x = function(){alert(\"x\");return this;};\nq.fn.y = s.y = function(){alert(\"y\");return this;};\nq.fn.z = s.z = function(){alert(\"z\");return this;};\n\ns().y().z().x();\ns.z().x().y();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I mean object as in <code>{} [object Object]</code>. How does it do <code>$(selector)</code> and <code>$.fn.init</code> at the same time?</p>\n\n<p>Can you give me a simple example please?</p>\n",
            "last_activity_date": 1415396861,
            "question_id": 7223585,
            "score": 9,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How is jQuery&#39;s $ a function and an object?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>No. Replacing with images is the fastest and the safest way. (Unless you are willing to switch to Flash/Java Applet/etc.)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I don't think there's a way to disable the feature altogether and there <strong>should</strong> not be a way to disable it.</p>\n\n<p><em>However</em> you can ensure that some text will not be found by <kbd>Ctrl</kbd>+<kbd>F</kbd> by writing it in away that the browser doesn't consider continous text.</p>\n\n<p>Using images is one approach that's relatively simply.</p>\n\n<p>Alternatively you can randomize the letters and re-arrange them with some CSS magic (my CSS-fu is too weak to give an example, unfortunately). For example if you want to \"hide\" the word \"hello\", then write out \"lehol\" with each letter in a separate <code>&lt;div&gt;</code> and apply some CSS styles so that visually the letters will be in the correct order.</p>\n\n<p>Note that this (and probably all other working solutions as well) will <em>also</em> break copy-and-paste of the text.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>you can do it with javascript - this is only pseudocode (written in jQuery) as I'm not certain how to listen for both a ctrl AND an f, but you get the idea:</p>\n\n<pre><code>$(body).keypress(function(e)\n{\n    if (e.keyCode===17)\n    {\n        //ctrl has been pressed, listen for subsequent F press (keyCode 70)\n        //if next keyCode===70\n        return false;\n    }\n});\n</code></pre>\n\n<p>Returning false like this will stop the browser doing anything when the keys are pressed, as far as I know. you could also use <code>e.preventDefault();</code> to try to prevent anything happening if <code>return false;</code> isn't enough.</p>\n\n<p>Hope this helps</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can disable the keyboard shortcut in most browsers (IE9, Firefox, Chrome, Opera), but you can't stop someone using Find by clicking it in the browser.</p>\n\n<p>Here's some jQuery-powered JavaScript that does it:</p>\n\n<pre><code>$(window).keydown(function(e){\n    if ((e.ctrlKey || e.metaKey) &amp;&amp; e.keyCode === 70) {\n        e.preventDefault();\n    }\n});\n</code></pre>\n\n<p>Taken from <a href=\"http://caniuse.com/\">http://caniuse.com/</a>, where this feature <em>regularly</em> irritates me. On that site, it's used to make CTRL+F do a custom search on the page, instead of disabling it completely.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I would presume that using keydown would enable this, however as a matter of principle, changing the way that a browser behaves is a bad idea. Although it is more of a pain for you to do, there are font replacement techniques that should make it easier.</p>\n\n<p>If you do find a means of doing this, there is always a danger that someone will get around it. It is far better to write the page to work whatever than hack the browser.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>Code</strong></p>\n\n<pre><code>window.addEventListener(\"keydown\",function (e) {\n    if (e.keyCode === 114 || (e.ctrlKey &amp;&amp; e.keyCode === 70)) { \n        e.preventDefault();\n    }\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>Rather than disable the Find function, you could make it so that Find won't find the words! One way to do this would be to use the CSS <code>content</code> declaration to inject the words. Find won't find them:</p>\n\n<pre><code>&lt;div class=\"word-foobar\"&gt;&lt;/div&gt;\n\n.word-foobar:before {\n    content: \"Foobar\";\n}\n</code></pre>\n\n<p>You could quite easily write some Javascript to automatically generate all the necessary CSS rules for you, too.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Here's a <a href=\"https://github.com/seangransee/Disable-CTRL-F-jQuery-plugin\" rel=\"nofollow\">jQuery plugin</a> that does what you're looking for.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have a puzzle site and its an awful way of cheating. Its okay if only partially, but can it be done?<br>\nSomething I had in mind was replacing the letters with images, but anything easier than that?</p>\n",
            "last_activity_date": 1383137077,
            "question_id": 7091538,
            "score": 9,
            "tags": [
                "javascript",
                "html",
                "css",
                "browser"
            ],
            "title": "Is it possible to disable Ctrl + F of find in page?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>There's <a href=\"https://github.com/rsms/node-imagemagick\">node-imagemagick</a>, (you'll need to have ImageMagick, obviously).</p>\n\n<pre><code>var im = require('imagemagick');\nim.identify('kittens.jpg', function(err, features){\n  if (err) throw err\n  console.log(features)\n  // { format: 'JPEG', width: 3904, height: 2622, depth: 8 }\n})\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Using <code>imagemagick</code> for this is very overkill since you only want to read the header of the file and check the dimensions. <code>image-size</code> is a pure javascript implementation of said feature which is very easy to use.</p>\n\n<p><a href=\"https://github.com/netroy/image-size\">https://github.com/netroy/image-size</a></p>\n\n<pre><code>var sizeOf = require('image-size');\nsizeOf('images/funny-cats.png', function (err, dimensions) {\n  console.log(dimensions.width, dimensions.height);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>Thanks a lot in advance for the future help. What I need is the equivalent of a \"new Image()\" (and then myImage.src... etc) but on NodeJS. I will thank whoever answers quickly deep in my heart... and well, also saying \"thanks!\" :P</p>\n",
            "last_activity_date": 1385000443,
            "question_id": 5530946,
            "score": 9,
            "tags": [
                "javascript",
                "image",
                "node.js"
            ],
            "title": "Opening images on NodeJS and finding out width/height"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It does work in Firefox (<em>including <code>2.0.0.20</code></em>). See <a href=\"http://jsbin.com/akili\">http://jsbin.com/akili</a> (add <code>/edit</code> to the url to edit):</p>\n\n<pre><code>&lt;p id=\"one\"&gt;One&lt;/p&gt;\n&lt;a href=\"#\" onclick=\"document.getElementById('one').id = 'two'; return false\"&gt;Link2&lt;/a&gt;\n</code></pre>\n\n<p>The first click changes the <code>id</code> to <code>\"two\"</code>, the second click errors because the element with <code>id=\"one\"</code> now can't be found!</p>\n\n<p>Perhaps you have another element <em>already</em> with <code>id=\"two\"</code> (FYI <a href=\"http://www.w3.org/TR/html401/struct/global.html#h-7.5.2\">you can't have more than one element with the same <code>id</code></a>).</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>That seems to work for me:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;&lt;style&gt;\n#monkey {color:blue}\n#ape {color:purple}\n&lt;/style&gt;&lt;/head&gt;\n&lt;body&gt;\n&lt;span id=\"monkey\" onclick=\"changeid()\"&gt;\nfruit\n&lt;/span&gt;\n&lt;script&gt;\nfunction changeid ()\n{\nvar e = document.getElementById(\"monkey\");\ne.id = \"ape\";\n}\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>The expected behaviour is to change the colour of the word \"fruit\".</p>\n\n<p>Perhaps your document was not fully loaded when you called the routine?</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can modify the id without have to use getElementById</p>\n\n<p>Example :</p>\n\n<pre><code>&lt;div id = 'One' onclick = \" One.id = 'Two'; return false;\" &gt;One&lt;/div&gt;\n</code></pre>\n\n<p>Tested with firefox 20</p>\n\n<p>You can see here : <a href=\"http://jsbin.com/elikaj/1/\" rel=\"nofollow\">http://jsbin.com/elikaj/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am modifying the ID of an HTML <code>div</code> element client side with JavaScript. The following code works OK in Internet Explorer but not in Firefox/2.0.0.20. (It does work in more recent versions of Firefox.)</p>\n\n<pre><code>document.getElementById('one').id = 'two';\n</code></pre>\n\n<p>Can anyone tell me:</p>\n\n<p>a) Why this doesn't work in FireFox.<br>\n   b) How to make this work in FireFox.</p>\n\n<p>To clarify, I'm changing the element ID to reference a different style in an external style sheet. The style is applied in IE but not in FF.</p>\n",
            "last_activity_date": 1371351757,
            "question_id": 1650299,
            "score": 9,
            "tags": [
                "javascript",
                "html",
                "cross-browser"
            ],
            "title": "How do I change the ID of a HTML element with JavaScript?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>What about:</p>\n\n<pre><code>var oFra = document.createDocumentFragment();\nvar myDiv = document.createElement(\"div\");\nmyDiv.id=\"myId\";\noFra.appendChild(myDiv);\noFra.getElementById(\"myId\"); //not in FF\n</code></pre>\n\n<p>Unless you've added the the created <code>div</code> to your document fragment I'm not sure why <code>getElementById</code> would find it?</p>\n\n<p>--edit</p>\n\n<p>If you're willing to roll your own getElementById function then you ought to be able to get the reference you're after, because this code works:</p>\n\n<pre><code>var oFra = document.createDocumentFragment();\nvar myDiv = document.createElement(\"div\");\nmyDiv.id = \"myId\";\noFra.appendChild(myDiv);\nif (oFra.hasChildNodes()) {\n    var i=0;\n    var myEl;\n    var children = oFra.childNodes;\n    for (var i = 0; i &lt; children.length; i++) {\n        if (children[i].id == \"myId\") {\n            myEl = children[i];\n        }\n    }\n}\nwindow.alert(myEl.id);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": -1
                },
                {
                    "body": "<p>No. The <a href=\"http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-B63ED1A3\"><code>DocumentFragment</code> API</a> is minimal to say the least: it defines no properties or methods, meaning that it only supports the properties and methods defined in the <a href=\"http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\"><code>Node</code> API</a>. As methods such as <code>getElementById</code> are defined in the <a href=\"http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#i-Document\"><code>Document</code> API</a>, they cannot be used with a <code>DocumentFragment</code>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>An external source, listed below, showed the following code snippet:</p>\n\n<pre><code>var textblock=document.createElement(\"p\")\ntextblock.setAttribute(\"id\", \"george\")\ntextblock.setAttribute(\"align\", \"center\")\n</code></pre>\n\n<p>Which displays a different way of setting the object's ID parameter.</p>\n\n<p><a href=\"http://www.javascriptkit.com/domref/documentmethods.shtml\" rel=\"nofollow\">Javascript Kit - Document Object Methods</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>NickFitz is right, <code>DocumentFragment</code> doesn't have the API you expect from <code>Document</code> or <code>Element</code>, in the standard or in browsers (which is a shame; it would be really handy to be able to set a fragment's <code>innerHTML</code>.</p>\n\n<p>Even frameworks don't help you here, as they tend to require Nodes be in the document, or otherwise use methods on the context node that don't exist on fragments. You'd probably have to write your own, eg.:</p>\n\n<pre><code> function Node_getElementById(node, id) {\n      for (var i= 0; i&lt;node.childNodes.length; i++) {\n          var child= node.childNodes[i];\n          if (child.nodeType!==1) // ELEMENT_NODE\n              continue;\n          if (child.id===id)\n              return child;\n          child= Node_getElementById(child, id);\n          if (child!==null)\n              return child;\n      }\n      return null;\n }\n</code></pre>\n\n<p>It would almost certainly be better to keep track of references as you go along than to rely on a na\u00efve, poorly-performing function like the above.</p>\n\n<pre><code>var frag= document.createDocumentFragment();\nvar mydiv= document.createElement(\"div\");\nmydiv.id= 'myId';\nfrag.appendChild(mydiv);\n// keep reference to mydiv\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>All of these answers are rather old, from back when <code>querySelectorAll</code> and <code>querySelector</code> were not widely available. It should be noted that these two functions which accept CSS selectors as parameters do work on <code>DocumentFragment</code>s in modern browsers, and should be the preferred way of dealing with the situation in the question. The alternate solutions presented in some of the answers would be a good approach for legacy browsers which did not support <code>querySelectorAll</code> or <code>querySelector</code>.</p>\n\n<p>Here is an example usage:</p>\n\n<pre><code>var df = document.createDocumentFragment();\nvar div = document.createElement('div');\ndiv.id = 'foo';\ndf.appendChild(div);\nvar result = df.querySelector('#foo'); // result contains the div element\n</code></pre>\n\n<p>A good implementation should first use object detection to see if the browser supports this. For instance:</p>\n\n<pre><code>function getElementByIdInFragment(fragment, id) {\n    if (fragment.querySelector) {\n        return fragment.querySelector('#' + id);\n    } else {\n        // your custom implementation here\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Using jQuery:</p>\n\n<pre><code>// Create DocumentFragment\nvar fragment  = document.createDocumentFragment(),\n    container = document.createElement('div');\n\ncontainer.textContent = 'A div full of text!';\ncontainer.setAttribute('id', 'my-div-1');\ncontainer.setAttribute('class', 'a-div-class');\nfragment.appendChild(container);\n\n// Query container's class when given ID\nvar div = $('&lt;div&gt;&lt;/div&gt;').html(fragment);\nconsole.log(div.find('#my-div-1').attr('class'));\n</code></pre>\n\n<p>jsFiddle: <a href=\"http://jsfiddle.net/CCkFs/\" rel=\"nofollow\">http://jsfiddle.net/CCkFs/</a></p>\n\n<p>You have the overhead of creating the div with jQuery, though. A little hacky, but it works.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>My DOM has a <em>#document-fragment</em> under the  element tag.</p>\n\n<p>This is what I am using (using jQuery) , Also I have a use case where I have the HTML DOM in a string - </p>\n\n<pre><code> var texttemplate = $(filecontents).find('template').html();\n\n\n $(texttemplate).children()\n\n      &lt;p&gt;\u200bSuper produced One\u200b&lt;/p&gt;\u200b, \n      &lt;appler-one&gt;\u200b&lt;/appler-one&gt;, \n      &lt;p&gt;\u200bSuper produced Two\u200b&lt;/p&gt;, \n      &lt;appler-two&gt;\u200b\u2026\u200b&lt;/appler-two&gt;]\n\n$(texttemplate).html()\n\n                \"&lt;p&gt;Super produced One&lt;/p&gt;\n                &lt;appler-one&gt;&lt;/appler-one&gt;\n                &lt;p&gt;Super produced Two&lt;/p&gt;\n                &lt;appler-two&gt;\n                    &lt;p&gt;Super produced Three&lt;/p&gt;\n                    &lt;appler-three&gt;&lt;/appler-three&gt;\n                &lt;/appler-two&gt;\"\n\n\n$(texttemplate).find(\"appler-one\")\n\n              [&lt;appler-one&gt;\u200b&lt;/appler-one&gt;\u200b]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<pre><code>var oFra = document.createDocumentFragment();\n// oFra.[add elements];\ndocument.createElement(\"div\").id=\"myId\";\noFra.getElementById(\"myId\"); //not in FF\n</code></pre>\n\n<p>How can I get \"myId\" before attaching fragment to document?</p>\n",
            "last_activity_date": 1408901692,
            "question_id": 1643349,
            "score": 9,
            "tags": [
                "javascript",
                "dom",
                "documentfragment"
            ],
            "title": "Is there any way to find an element in a documentFragment?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Check out <a href=\"http://javascript.gakaa.com/domnodeinserted-description.aspx\">DOMNodeInserted</a> and <a href=\"http://javascript.gakaa.com/domnoderemoved-description.aspx\">DOMNodeRemoved</a>.</p>\n\n<p>Ben Nadel recently blogged the following: <a href=\"http://www.bennadel.com/blog/1623-Ask-Ben-Detecting-When-DOM-Elements-Have-Been-Removed-With-jQuery.htm\">Detecting When DOM Elements Have Been Removed With jQuery</a></p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>The DOMNodeInserted and DOMNodeRemoved are part of the <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Mutation_events\" rel=\"nofollow\">Mutation Events</a> which is now deprecated. Hence, you need to take a look on <a href=\"https://developer.mozilla.org/en/docs/Web/API/MutationObserver\" rel=\"nofollow\">Mutation Observer</a>. I did the same in one of my project which is I needed to listen to the DOM changes of a certain element., e.g. DOM append, remove, attribute, and data changes.</p>\n\n<p>These links will help you :</p>\n\n<ol>\n<li><a href=\"http://gabrieleromanato.name/jquery-detecting-new-elements-with-the-mutationobserver-object/\" rel=\"nofollow\">http://gabrieleromanato.name/jquery-detecting-new-elements-with-the-mutationobserver-object/</a></li>\n<li><a href=\"https://github.com/kapetan/jquery-observe\" rel=\"nofollow\">https://github.com/kapetan/jquery-observe</a></li>\n<li><a href=\"http://stackoverflow.com/questions/2844565/is-there-a-jquery-dom-change-listener/11546242#11546242\">Is there a jQuery DOM change listener?</a></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>My question is somewhat weird, but can i add events for any DOM elements(div), like\n'onHtmlChange', to be notified when that div has changed their content?</p>\n",
            "last_activity_date": 1404467217,
            "question_id": 1324647,
            "score": 9,
            "tags": [
                "javascript",
                "events",
                "dom"
            ],
            "title": "Can javascript listen for &quot;onDomChange&quot; on every Dom elements?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You will have to hack the datepicker yourself. This is the code it uses. If it is not inline it will hide when you select a date. </p>\n\n<p>You could pass in your own onSelect method and quickly change the datePicker instance to be inline and then change it back without having to change the datepicker internals but it is a very hacky solution.</p>\n\n<pre><code>if (inst.inline)\n        this._updateDatepicker(inst);\nelse {\n      this._hideDatepicker(null, this._get(inst, 'duration'));\n      this._lastInput = inst.input[0];\n      if (typeof(inst.input[0]) != 'object')\n      inst.input[0].focus(); // restore focus\n      this._lastInput = null;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>For reference, and since people have asked me this through mail. Here's a code chunk that needs to be added to timepicker.js:</p>\n\n<pre><code>/**\n * Don't hide the date picker when clicking a date\n */\n$.datepicker._selectDateOverload = $.datepicker._selectDate;\n$.datepicker._selectDate = function(id, dateStr) {\n    var target = $(id);\n    var inst = this._getInst(target[0]);\n    inst.inline = true;\n    $.datepicker._selectDateOverload(id, dateStr);\n    inst.inline = false;\n    this._updateDatepicker(inst);\n}\n</code></pre>\n\n<p>Good luck in getting it working on your site!</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>Following with what Emil suggested, I found a nicer and easier way to modify the widget to support a not closing widget on select event.</p>\n\n<p>First, I added another property to the defaults dict on the widget:</p>\n\n<pre><code>closeOnSelect:true //True to close the widget when you select a date\n</code></pre>\n\n<p>Second, find this statement in the _selectDate method:</p>\n\n<pre><code>if (inst.inline)\n        this._updateDatepicker(inst);\nelse {\n        ...\n    }\n</code></pre>\n\n<p>And change the condition to be like this:</p>\n\n<pre><code>var closeOnSelect = this._get(inst, \"closeOnSelect\");        \nif (inst.inline || !closeOnSelect)\n        this._updateDatepicker(inst);\nelse {\n        ...\n    }\n</code></pre>\n\n<p>Give it a try, it is working for me. I did it over the JQuery UI 1.8.5 version.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Cool, if you are using jquery-ui-1.8.5.custom.min.js and jquery-ui.multidatespicker.js, you could modify the jquery-ui-1.8.5.custom.min.js:\nfrom:</p>\n\n<pre><code>if(a.inline)this._updateDatepicker(a);\n</code></pre>\n\n<p>into:</p>\n\n<pre><code>if(a.inline || !this._get(a, 'closeOnSelect'))this._updateDatepicker(a);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>rather than changing the source it's best to use the existing events</p>\n\n<pre><code>onSelect: function() {\n    $(this).data('datepicker').inline = true;                               \n},\nonClose: function() {\n    $(this).data('datepicker').inline = false;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>well this a dirty workaround...but it works for me...even with <em>showButtonPanel: true</em></p>\n\n<pre><code>  $(function() {\n    var dp_c = null, dp_once = false;\n    $( '#datepicker' ).datepicker({\n      showButtonPanel: true,\n      onSelect: function() {\n        $(this).data('datepicker').inline = true;  \n        setTimeout(function () {\n          $('#ui-datepicker-div').find('.ui-datepicker-buttonpane').append(dp_c);\n        }, 1);\n\n      },\n      onClose: function() {\n        $(this).data('datepicker').inline = false;\n      }\n    }).click(function () {\n      if(!dp_once) {\n        setTimeout(function () {\n          dp_c = $('#ui-datepicker-div').find('.ui-datepicker-close').clone();\n        }, 500);\n        dp_once = !!1;\n      }\n    });\n\n    $('#ui-datepicker-div').on('click', '.ui-datepicker-close', function () {\n      $('#datepicker').datepicker( \"hide\" );\n    });\n\n  });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You should override native js function:</p>\n\n<pre><code> /* Update the input field with the selected date. */\n        _selectDate: function(id, dateStr) {\n            var target = $(id);\n            var inst = this._getInst(target[0]);\n            dateStr = (dateStr != null ? dateStr : this._formatDate(inst));\n            if (inst.input)\n                inst.input.val(dateStr);\n            this._updateAlternate(inst);\n            var onSelect = this._get(inst, 'onSelect');\n            if (onSelect)\n                onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst]);  // trigger custom callback\n            else if (inst.input)\n                inst.input.trigger('change'); // fire the change event\n            if (inst.inline)\n                this._updateDatepicker(inst);\n            else {\n                if(inst.settings.hideOnSelect != false){\n                    this._hideDatepicker();\n                }\n                this._lastInput = inst.input[0];\n                if (typeof(inst.input[0]) != 'object')\n                    inst.input.focus(); // restore focus\n                this._lastInput = null;\n            }\n        },\n</code></pre>\n\n<p>And add appropriate option to datepicker configuration, as example:</p>\n\n<pre><code>var defaultDatePickerOptions = {\n        hideOnSelect: false,\n        ...\n    }; \n var birthDate = jQuery.extend({}, defaultDatePickerOptions);\n $('#birthdate').datepicker(birthDate);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is a solution :</p>\n\n<pre><code>onSelect: function ( dateText, inst ) {\n    ..... // Your code like $(this).val( dateText );`\n\n\n    //Set inline to true to force \"no close\"\n    inst.inline = true;\n},\nonClose: function(date,inst){\n    //Set inline to false =&gt; datapicker is closed\n    // onClose is called only if you click outside the datapicker, onSelect will not\n    // trig onClose due to inline = true\n   inst.inline = false;\n}\n</code></pre>\n\n<p>`</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Why all comments provide workaround? it is straigtfarword:</p>\n\n<p>Use inline calendar with altField :)</p>\n\n<p>check this fiddle</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Hi fellow stackoverflow:ers,</p>\n\n<p>I'm using the <a href=\"http://docs.jquery.com/UI/API/1.7.2/Datepicker\">jQuery Datepicker plugin</a>, together with <a href=\"http://milesich.com/timepicker/\">Martin Milesich Timepicker</a> plugin. Everything works great, except for the fact that clicking a date in the datepicker, closes the widget, leaving no time to pick the time. </p>\n\n<p>Question: So I'm wondering if there's a way to prevent the widget from closing when clicking a date, and instead force users to click the \"Done\" button (that shows up when enabling the \"showButtonPanel: true\" option), or clicking outside of the widget. I don't want my users having to open the widget twice! See the behavior <a href=\"http://milesich.com/tpdemo/\">online at the timepicker demo</a></p>\n\n<p>Any help solving this issue, or even pointers in the right direction, is appreciated!</p>\n\n<p>More info:\nI'm using the files supplied from Martins download link: <a href=\"http://milesich.com/tpdemo/timepicker-0.2.0.zip\">http://milesich.com/tpdemo/timepicker-0.2.0.zip</a></p>\n\n<ul>\n<li>jquery-ui-1.7.2.custom.min.js</li>\n<li>timepicker.js (latest version 0.2.0)</li>\n</ul>\n\n<p>These are the options I'm using:</p>\n\n<pre><code>$(document).ready(function(){\n    $(\".datepicker\").datepicker({\n    \tduration: '',  \n    \tshowTime: true,  \n    \tconstrainInput: false,  \n    \tstepMinutes: 5,  \n    \tstepHours: 1, \n    \ttime24h: true,\n    \tdateFormat: \"yy-mm-dd\",\n    \tbuttonImage: '/static/images/datepicker.png',\n    \tbuttonImageOnly: true,\n    \tfirstDay: 1,\n    \tmonthNames: ['Januari','Februari','Mars','April','Maj','Juni','Juli','Augusti','September','Oktober','November','December'],\n    \tshowOn: 'both',\n    \tshowButtonPanel: true\n     });\n})\n</code></pre>\n",
            "last_activity_date": 1424806128,
            "question_id": 1252512,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui",
                "jquery-ui-datepicker"
            ],
            "title": "jQuery Datepicker: Prevent closing picker when clicking a date"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>Object.keys</code> has been introduced in ECMAScript 5th Edition. So if you IE-version is lower than 9, it will not be supported.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The <code>keys</code> property is supported in IE >= 9. You are probably testing it in an earlier version. A simple workaround is:</p>\n\n<pre><code>var length = 0;\nfor(var prop in data){\n    if(data.hasOwnProperty(prop))\n        length++;\n}\n</code></pre>\n\n<p>Here is a demonstration: <a href=\"http://jsfiddle.net/vKr8a/\">http://jsfiddle.net/vKr8a/</a></p>\n\n<p>See this compatibility table for more info:</p>\n\n<p><a href=\"http://kangax.github.com/es5-compat-table/\">http://kangax.github.com/es5-compat-table/</a></p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Alternatively, you could use a recommended polyfill for browsers that don't natively support <code>Object.keys</code></p>\n\n<pre><code>Object.keys=Object.keys||function(o,k,r){r=[];for(k in o)r.hasOwnProperty.call(o,k)&amp;&amp;r.push(k);return r}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I've been trying to debug some js in Internet Explorer, and I can't figure this one out. Here's the line that is causing the error:</p>\n\n<pre><code>var numberOfColumns = Object.keys(value).length;\n</code></pre>\n\n<p>And the error is...</p>\n\n<pre><code>Message: Object doesn't support this property or method\nLine: 640\nChar: 5\nCode: 0\nURI: xxx\n</code></pre>\n\n<p>At first I thought it had something to do with the <code>Object.keys(value).length;</code> property, but strangely (for me anyways), the error is at char 5, which is the beginning of the variable name. </p>\n\n<p>Anyways, I have no idea what's going on or how to fix it. Also, if I replace:</p>\n\n<pre><code>var numberOfColumns = Object.keys(value).length;\n</code></pre>\n\n<p>With ...</p>\n\n<pre><code>var numberOfColumns = 9; // troubleshooting\n</code></pre>\n\n<p>The error persists. Please help.</p>\n\n<p><strong>Update</strong></p>\n\n<p>jsFiddle added </p>\n\n<p><a href=\"http://jsfiddle.net/4Rab7/\">http://jsfiddle.net/4Rab7/</a></p>\n",
            "last_activity_date": 1404889608,
            "question_id": 13723805,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "internet-explorer"
            ],
            "title": "IE issue - Object.keys(value).length not supported"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>MongoDB doesn't support <a href=\"http://docs.mongodb.org/manual/reference/limits/#Restrictions-on-Field-Names\" rel=\"nofollow\">keys with a dot</a> in them so you're going to have to preprocess your JSON file to remove/replace them before importing it or you'll be setting yourself up for all sorts of problems.</p>\n\n<p>There isn't a standard workaround to this issue, the best approach is too dependent upon the specifics of the situation. But I'd avoid any key encoder/decoder approach if possible as you'll continue to pay the inconvenience of that in perpetuity, where a JSON restructure would presumably be a one-time cost.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>You can try using a hash in the key instead of the value, and then store that value in the JSON value.</p>\n\n<pre><code>var crypto = require(\"crypto\");   \n\nfunction md5(value) {\n    return crypto.createHash('md5').update( String(value) ).digest('hex');\n}\n\nvar data = {\n    \"_id\": {\n        \"$oid\": \"...\"\n    },\n    \"make\": \"saab\",\n    \"models\": {}\n}\n\nvar version = \"9.7x\";\n\ndata.models[ md5(version) ] = {\n    \"version\": version,\n    \"years\" : [\n        2007,\n        2008,\n        2009,\n        2010\n    ]\n}\n</code></pre>\n\n<p>You would then access the models using the hash later.</p>\n\n<pre><code>var version = \"9.7x\";\ncollection.find( { _id : ...}, function(e, data ) {\n    var models = data.models[ md5(version) ];\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The <a href=\"http://docs.mongodb.org/manual/reference/limits/#Restrictions-on-Field-Names\" rel=\"nofollow\">Mongo docs</a> suggest replacing illegal characters such as <code>$</code> and <code>.</code> with unicode alternates.</p>\n\n<blockquote>\n  <p>In these situations, keys will need to substitute the reserved $ and . characters. Any character is sufficient, but consider using the Unicode full width equivalents: U+FF04 (i.e. \u201c\uff04\u201d) and U+FF0E (i.e. \u201c\uff0e\u201d).</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>It seems mongo does not allow insertion of keys with a dot (.) or dollar sign ($) however when I imported a JSON file that contained a dot in it using the mongoimport tool it worked fine. The driver is complaining about trying to insert that element.</p>\n\n<p>This is what the document looks like in the database:</p>\n\n<pre><code>{\n    \"_id\": {\n        \"$oid\": \"...\"\n    },\n    \"make\": \"saab\",\n    \"models\": {\n        \"9.7x\": [\n            2007,\n            2008,\n            2009,\n            2010\n        ]\n    }\n}\n</code></pre>\n\n<p>Am I doing this all wrong and should not be using hash maps like that with external data (i.e. the models) or can I escape the dot somehow? Maybe I am thinking too much Javascript-like.</p>\n",
            "last_activity_date": 1411140275,
            "question_id": 12397118,
            "score": 8,
            "tags": [
                "javascript",
                "mongodb",
                "nosql"
            ],
            "title": "MongoDB dot (.) in key name"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Add an onchange event handler and set the pages location to the value</p>\n\n<pre><code>&lt;select id=\"foo\"&gt;\n    &lt;option value=\"\"&gt;Pick a site&lt;/option&gt;\n    &lt;option value=\"http://www.google.com\"&gt;x&lt;/option&gt;\n    &lt;option value=\"http://www.yahoo.com\"&gt;y&lt;/option&gt;\n&lt;/select&gt;\n\n&lt;script&gt;\n    document.getElementById(\"foo\").onchange = function() {\n        if (this.selectedIndex!==0) {\n            window.location.href = this.value;\n        }        \n    };\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>You can use the onChange property.  Something like:</p>\n\n<pre><code>&lt;select onChange=\"window.location.href=this.value\"&gt;\n    &lt;option value=\"www.google.com\"&gt;A&lt;/option&gt;\n    &lt;option value=\"www.aol.com\"&gt;B&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>... or if you want / need to keep your option 'value' as it was, just add a new attribute:</p>\n\n<pre><code>&lt;select id=\"my_selection\"&gt;\n&lt;option value=\"x\" href=\"/link/to/somewhere\"&gt;value 1&lt;/option&gt;\n&lt;option value=\"y\" href=\"/link/to/somewhere/else\"&gt;value 2&lt;/option&gt;\n&lt;/select&gt;\n\n&lt;script&gt;\ndocument.getElementById('my_selection').onchange = function() {\n    window.location.href = this.children[this.selectedIndex].getAttribute('href');\n}\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use this code:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt; &lt;head&gt; &lt;title&gt;&lt;/title&gt; &lt;/head&gt;&lt;body&gt; &lt;select id=\"menu\" name=\"links\"&gt; size=\"1\" onchange=\"window.location.href=this.value;\"&gt; &lt;option&gt; value=\"URL\"&gt;Book&lt;/option&gt; &lt;option value=\"URL\"&gt;Pen&lt;/option&gt; &lt;option&gt; value=\"URL\"&gt;Read&lt;/option&gt; &lt;option value=\"URL\"&gt;Apple&lt;/option&gt; &lt;/select&gt;\n&lt;/body&gt; &lt;/html&gt;*\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>Is it possible for each dropdown options to link somewhere when selected without the need for an external button?</p>\n\n<pre><code>&lt;select&gt;\n  &lt;option value=\"x\"&gt;x&lt;/option&gt;\n  &lt;option value=\"y\"&gt;y&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n",
            "last_activity_date": 1415184137,
            "question_id": 12287672,
            "score": 8,
            "tags": [
                "javascript",
                "html",
                "select",
                "drop-down-menu"
            ],
            "title": "Links in &lt;select&gt; dropdown options"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Your <code>avatars</code> is not an Array, it is just an object:</p>\n\n<pre><code>avatars = {};\n</code></pre>\n\n<p>so there is <a href=\"http://es5.github.io/#x12.6.4\">no defined order for its elements</a>:</p>\n\n<blockquote>\n  <p>The mechanics and order of enumerating the properties (step 6.a in the first algorithm, step 7.a in the second) is not specified.</p>\n</blockquote>\n\n<p>and <a href=\"http://es5.github.io/#x15.2.3.7\">15.2.3.7</a> (and <a href=\"http://es5.github.io/#x15.2.3.14\">15.2.3.14</a>):</p>\n\n<blockquote>\n  <p>If an implementation defines a specific order of enumeration for the for-in statement, that same enumeration order must be used to order the list elements in step 3 of this algorithm.</p>\n</blockquote>\n\n<p>You can also check <a href=\"http://es5.github.io/#x8.6\">section 8.6</a> to see if there is any mention about the order of properties in an object. The only requirement for ordering of object properties is that if the implementation defines an order anywhere then it has to use that same ordering everywhere but that's a big <em>if</em>. Most implementations probably use insertion order for an object's keys but I can't find anything that requires them to (I'd appreciate a comment if anyone can point out anything in the specs that define any particular order of an object's keys).</p>\n\n<p>That said, Underscore's <a href=\"http://underscorejs.org/#sortBy\"><code>sortBy</code></a> is basically a <a href=\"http://en.wikipedia.org/wiki/Schwartzian_Transform\">Schwartzian Transform</a> combined with a standard JavaScript <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\"><code>sort</code></a> and Underscore's <a href=\"http://underscorejs.org/#pluck\"><code>pluck</code></a> to unwrap the Schwartzian Transform memo wrappers; <code>pluck</code> returns an array so <code>sortBy</code> also returns an array. Hence, your final <code>_.keys(avatars)</code> call is actually calling <a href=\"http://underscorejs.org/#keys\"><code>_.keys</code></a> on an array; the keys of an array (AKA enumerable properties) are the array's indices and those are consecutive integers starting at zero.</p>\n\n<p>You're using the wrong data structure. If you need a sparse array but also need to manipulate it like an array (i.e. sort it), then you should put the indexes inside the objects and use a normal array and <code>pluck</code> instead of <code>keys</code>:</p>\n\n<pre><code>var avatars = [\n    {idx: 102, userInfo: {buddy_name: 'Avatar102', is_online: 1}},\n    {idx: 100, userInfo: {buddy_name: 'Avatar100', is_online: 1}},\n    {idx: 101, userInfo: {buddy_name: 'Avatar101', is_online: 1}}\n];\nconsole.log(_(avatars).pluck('idx'));\navatars = _(avatars).sortBy(function(avatar) {\n    return avatar.userInfo.buddy_name.toLowerCase();\n});\nconsole.log(_(avatars).pluck('idx'));\n</code></pre>\n\n<p>Demo: <a href=\"http://jsfiddle.net/ambiguous/UCWL2/\">http://jsfiddle.net/ambiguous/UCWL2/</a></p>\n\n<p>If you also need quick access by <code>idx</code> then you could set up a parallel object for direct <code>idx</code> access:</p>\n\n<pre><code>var avatars_by_idx = { };\nfor(var i = 0; i &lt; avatars.length; ++i)\n    avatars_by_idx[avatars[i].idx] = avatars[i];\n</code></pre>\n\n<p>Then <code>avatars_by_idx</code> provides the direct access you're looking for. Of course, you'd have to keep <code>avatars</code> and <code>avatars_by_idx</code> synchronized but that's not terribly difficult if you hide them both behind an object.</p>\n",
                    "is_accepted": true,
                    "score": 21
                }
            ],
            "body": "<p>I am trying to avoid writing my own sorting algorithm for the following use case:</p>\n\n<pre><code>avatars = {};\navatars[102] = {userInfo: {buddy_name: 'Avatar102', is_online: 1}};\navatars[100] = {userInfo: {buddy_name: 'Avatar100', is_online: 1}};\navatars[101] = {userInfo: {buddy_name: 'Avatar101', is_online: 1}};\n\nconsole.log(_.keys(avatars));\navatars = _.sortBy(avatars, function(avatar) {return avatar.userInfo.buddy_name.toLowerCase();});\nconsole.log(_.keys(avatars));\n</code></pre>\n\n<p>Here's the console output:</p>\n\n<ul>\n<li>[\"102\", \"100\", \"101\"]</li>\n<li>[\"0\", \"1\", \"2\"]</li>\n</ul>\n\n<p>As you can see, with undescore's sortBy I am losing the key data. This struct can get very large, so I am trying to avoid things like converting to an array and then back to the collection. Is there any way to do this without rolling my own sort function?</p>\n",
            "last_activity_date": 1389632655,
            "question_id": 10623463,
            "score": 8,
            "tags": [
                "javascript",
                "underscore.js"
            ],
            "title": "How to sort a collection of objects in JavaScript without converting it to an array"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>If you are certain that you always want to insert the break after the fourth character, you can do this:</p>\n\n<pre><code>var html = $(\"#wine-name\").html();\nhtml = html.substring(0, 4) + \"&lt;br&gt;\" + html.substring(4);\n$(\"#wine-name\").html(html);\n</code></pre>\n\n<p>You can see it in action <a href=\"http://jsfiddle.net/UJgAa/\">here</a>.</p>\n\n<p>If you want it to instead break after the first word (delimited by spaces), you can do this instead:</p>\n\n<pre><code>var html = $(\"#wine-name\").html().split(\" \");\nhtml = html[0] + \"&lt;br&gt;\" + html.slice(1).join(\" \");\n$(\"#wine-name\").html(html);\n</code></pre>\n\n<p>You can see this in action <a href=\"http://jsfiddle.net/UJgAa/2/\">here</a>.</p>\n\n<p>EDITed for your comment:</p>\n\n<pre><code>$(\".wine-name\").each(function() {\n    var html = $(this).html().split(\" \");\n    html = html[0] + \"&lt;br&gt;\" + html.slice(1).join(\" \");\n    $(this).html(html);\n});\n</code></pre>\n\n<p>See it <a href=\"http://jsfiddle.net/UJgAa/3/\">here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>The code in JavaScript would look something like this:</p>\n\n<pre><code>var element = document.getElementById('wine-name');\nelement.innerHTML = element.innerHTML.substring(0, element.innerHTML.indexOf(' ')) + '&lt;br /&gt;' + element.innerHTML.substring(element.innerHTML.indexOf(' '), element.innerHtml.length);\n</code></pre>\n\n<p>It's probably better to go with JQuery.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am looking for a way to insert a <code>&lt;br /&gt;</code> after only the first 4 or 5 characters in a <code>&lt;div&gt;</code>. </p>\n\n<p>Example:\n<code>&lt;div id=\"wine-name\"&gt;</code>2008 Cabernet Sauvignon<code>&lt;/div&gt;</code></p>\n\n<p>To display like:<br /><br />\n<strong>2008<br />\nCabernet Sauvignon</strong></p>\n\n<p>Not sure which would be easier javascript or jQuery. The site is already using jQuery.</p>\n\n<p>Any ideas?</p>\n",
            "last_activity_date": 1351175848,
            "question_id": 7068653,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "Jquery or javascript to add one line break &lt;br /&gt; after x amount of characters in a &lt;div&gt;"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I got an excellent explanation on this while asking very similar question: <a href=\"http://stackoverflow.com/questions/5142286/two-functions-with-the-same-name-in-javascript-how-can-this-work\">Two functions with the same name in JavaScript - how can this work?</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>No, they're not the same, although they do both result in a function you can call via the symbol <code>foo</code>. One is a function <em>declaration</em>, the other is a function <em>expression</em>. They are evaluated at different times, have different effects on the scope in which they're defined, and are legal in different places.</p>\n\n<p>Quoting <a href=\"http://stackoverflow.com/questions/5142286/two-functions-with-the-same-name-in-javascript-how-can-this-work/5142335#5142335\">my answer to this other question</a> here (edited a bit for relevance), in case the other question were ever removed for some reason (and to save people following the link):</p>\n\n<hr>\n\n<p>JavaScript has two different but related things: Function <em>declarations</em>, and function <em>expressions</em>. There are marked differences between them:</p>\n\n<p>This is a function <em>declaration</em>:</p>\n\n<pre><code>function foo() {\n    // ...\n}\n</code></pre>\n\n<p>Function declarations are evaluated upon entry into the enclosing scope, before any step-by-step code is executed. The function's name (<code>foo</code>) is added to the enclosing scope (technically, the <em>variable object</em> for the <em>execution context</em> the function is defined in).</p>\n\n<p>This is a function <em>expression</em> (specifically, an anonymous one, like your quoted code):</p>\n\n<pre><code>var foo = function() {\n    // ...\n};\n</code></pre>\n\n<p>Function expressions are evaluated as part of the step-by-step code, at the point where they appear (just like any other expression). That one creates a function with no name, which it assigns to the <code>foo</code> variable.</p>\n\n<p>Function expressions can also be <em>named</em> rather than anonymous. A named one looks like this:</p>\n\n<pre><code>var x = function foo() {  // Valid, but don't do it; see details below \n    // ...\n};\n</code></pre>\n\n<p>A named function expression <em>should</em> be valid, according to the spec. It should create a function with the name <code>foo</code>, but <em>not</em> put <code>foo</code> in the enclosing scope, and then assign that function to the <code>x</code> variable (all of this happening when the expression is encountered in the step-by-step code). When I say it shouldn't put <code>foo</code> in the enclosing scope, I mean exactly that:</p>\n\n<pre><code>var x = function foo() {\n    alert(typeof foo); // alerts \"function\" (in compliant implementations)\n};\nalert(typeof foo);     // alerts \"undefined\" (in compliant implementations)\n</code></pre>\n\n<p>Note how that's different from the way function <em>declarations</em> work (where the function's name <strong>is</strong> added to the enclosing scope).</p>\n\n<p>Named function expressions work on compliant implementations, but there are bugs in several implementations in the wild, most especially Internet Explorer (that is, JScript). It processes a named function expresssion <em>twice</em>: First as a function <em>declaration</em> (upon entry into the execution context), and then later as a function <em>expression</em>, generating two distinct functions in the process. (Really.)</p>\n\n<p>More here: <a href=\"http://stackoverflow.com/questions/5142286/two-functions-with-the-same-name-in-javascript-how-can-this-work/5142335#5142335\"><em>Double take</em></a> and here: <a href=\"http://kangax.github.com/nfe/\"><em>Named function expressions demystified</em></a></p>\n\n<p>Because of implementation bugs, I avoid named function expressions. But <a href=\"http://blog.niftysnippets.org/2010/03/anonymouses-anonymous.html\">I like my functions to have names</a> so my tools can help me. Consequently, where some might write:</p>\n\n<pre><code>var Thingy = {\n    foo: function() {\n        // Do something\n    }\n};\n</code></pre>\n\n<p>I'll usually write</p>\n\n<pre><code>var Thingy = (function(){\n    var publicSymbols = {};\n\n    publicSymbols.foo = foo;\n    function foo() {\n        // Do something\n    }\n\n    return publicSymbols;\n})();\n</code></pre>\n\n<p>...except that I have utilities to do that plumbing for me, so it's not really that verbose.</p>\n\n<p>Here's how that gets processed:</p>\n\n<ol>\n<li>An anonymous enclosing function is created when the <code>var Thingy = ...</code> line is encountered in the step-by-step code, and then it is called (because I have the <code>()</code> at the very end).</li>\n<li>Upon entry into the execution context created by that anonymous function, the <code>foo</code> function declaration is evaluated and the symbol <code>foo</code> is added to the scope inside that anonymous function (technically, to the <em>variable object</em> for the execution context).</li>\n<li>The <code>publicSymbols</code> symbol is added to the scope inside the anonymous function. (More: <a href=\"http://blog.niftysnippets.org/2008/03/poor-misunderstood-var.html\"><em>Poor misunderstood <code>var</code></em></a>)</li>\n<li>Step-by-step code begins by assigning <code>{}</code> to <code>publicSymbols</code>.</li>\n<li>Step-by-step code continues with <code>publicSymbols.foo = foo;</code>. Then it executes the <code>return publicSymbols;</code></li>\n<li>The anonymous function's result is assigned to <code>Thingy</code>.</li>\n</ol>\n\n<p>Technically, you should be able to write that like this:</p>\n\n<pre><code>var Thingy = (function(){\n    return {\n        foo: foo\n    };\n\n    function foo() {\n        // Do something\n    }\n})();\n</code></pre>\n\n<p>...but I never do, because there are too many tools (and JavaScript implementations) that don't understand when the declarations really happen. :-) And also, it's easier for me to do maintenance on large structures if I do the declaration and the assignment to the property next to each other.</p>\n\n<hr>\n\n<p>And finally, another difference between them is where they're legal. A function expression can appear anywhere an expression can appear (which is virtually anywhere). A function <em>declaration</em> can only appear at the top level of its enclosing scope, outside of any control-flow statements. So for instance, this is valid:</p>\n\n<pre><code>function bar(x) {\n    var foo;\n\n    if (x) {\n        foo = function() {  // Function expression...\n            // Do X\n        };\n    }\n    else {\n        foo = function() {  // ...and therefore legal\n            // Do Y\n        };\n    }\n    foo();\n}\n</code></pre>\n\n<p>...but this is not, and <strong>does not</strong> do what it looks like it does on most implementations:</p>\n\n<pre><code>function bar(x) {\n\n    if (x) {\n        function foo() {  // Function declaration -- INVALID\n            // Do X\n        }\n    }\n    else {\n        function foo() {  // INVALID\n            // Do Y\n        }\n    }\n    foo();\n}\n</code></pre>\n\n<p>And it makes perfect sense: Since the <code>foo</code> function declarations are evaluated upon entry into the <code>bar</code> function, before any step-by-step code is executed, the interpreter has no idea which <code>foo</code> to evaluate. This isn't a problem for expressions since they're done during the control-flow.</p>\n\n<p>Since the syntax is invalid, implementations are free to do what they want. I've never met one that did what I would have expected, which is to throw a syntax error and fail. Instead, nearly all of them just ignore the control flow statements and do what they should do if there are two <code>foo</code> function declarations at the top level (which is use the second one; that's in the spec). So only the second <code>foo</code> is used. Firefox's SpiderMonkey is the standout, it seems to (effectively) convert them into expressions, and so which it uses depends on the value of <code>x</code>. <a href=\"http://jsbin.com/oyiti5\">Live example</a>.</p>\n",
                    "is_accepted": true,
                    "score": 21
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/336859/javascript-var-functionname-function-vs-function-functionname\">JavaScript: var functionName = function() {} vs function functionName() {}</a>  </p>\n</blockquote>\n\n\n\n<p>are they the same? I've always wondered</p>\n",
            "last_activity_date": 1301469133,
            "question_id": 5403121,
            "score": 8,
            "tags": [
                "javascript",
                "functional-programming"
            ],
            "title": "whats the difference between function foo(){} and foo = function(){}?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Yes, when you do:</p>\n\n<pre><code>document.body.innerHTML += '&lt;br&gt;'; \n</code></pre>\n\n<p>You're really doing:</p>\n\n<pre><code>document.body.innerHTML = (document.body.innerHTML + '&lt;br&gt;'); \n</code></pre>\n\n<p>So you're completely destroying and recreating all the content.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Modifying <code>innerHTML</code> causes the content to be re-parsed and DOM nodes to be recreated, losing the handlers you have attached. Appending elements as in the first example doesn't cause that behavior, so no re-parsing has to occur, since you are modify the DOM tree explicitly.</p>\n\n<p>Another good way to handle this is to use <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/element.insertAdjacentHTML\" rel=\"nofollow\">insertAdjacentHTML()</a>. For example:</p>\n\n<pre><code>document.body.insertAdjacentHTML('beforeend', '&lt;br&gt;')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have this very simple demo: </p>\n\n<pre><code>function foo() {\n    alert('Works!');\n}\n\nvar inp = document.createElement('input');\ninp.onblur = foo;\ndocument.body.appendChild(inp);\n</code></pre>\n\n<p><strong>See here:</strong> <a href=\"http://jsfiddle.net/A7aPA/\">http://jsfiddle.net/A7aPA/</a></p>\n\n<p>As you can see, this works. (Click on the input, then click somewhere else and an alert will pop up.) </p>\n\n<p>However, if I add this line to the JavaScript code: </p>\n\n<pre><code>document.body.innerHTML += '&lt;br&gt;'; \n</code></pre>\n\n<p>then the blur handler stops working (and no error is thrown btw). </p>\n\n<p><strong>See here:</strong> <a href=\"http://jsfiddle.net/A7aPA/1/\">http://jsfiddle.net/A7aPA/1/</a></p>\n\n<p>Why is that?</p>\n",
            "last_activity_date": 1413607723,
            "question_id": 5113105,
            "score": 8,
            "tags": [
                "javascript",
                "dom",
                "browser",
                "javascript-events"
            ],
            "title": "Manipulating innerHTML removes the event handler of a child element?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Because JavaScript uses floating point math which always leads to rounding errors.</p>\n\n<p>If you need an exact result with two decimal places, multiply your numbers with <code>100</code> before the operation and then divide again afterwards:</p>\n\n<pre><code>var result = ( 4990 % 10 ) / 100;\n</code></pre>\n\n<p>Round if necessary.</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p><a href=\"http://en.wikipedia.org/wiki/Modulo_operation\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Modulo_operation</a>\nDon't be angry modulo is used with integers ^^\nSo floating values occure some errors.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Take a look at <a href=\"http://en.wikipedia.org/wiki/Floating_point\" rel=\"nofollow\">floating points</a> and its disadvantages - a number like <code>0.1</code> can't be saved correctly as floating point, so there will always be such problems. Take your numbers *10 or *100 and do the calculations with integers instead.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Javascript's Number is using \"IEEE double-precision\" to store the values. They are incapable of storing all decimal numbers exactly. The result is not zero because of round-off error when converting the decimal number to binary.</p>\n\n<pre><code>49.90 = 49.89999999999999857891452848...\n 0.10 =  0.10000000000000000555111512...\n</code></pre>\n\n<p>Thus floor(49.90 / 0.10) is only 498, and the remainder will be 0.09999....</p>\n\n<hr>\n\n<p>It seems that you are using numbers to store amount of dollars. <a href=\"http://stackoverflow.com/questions/61872/use-float-or-decimal-for-accounting-application-dollar-amount\">Don't do this</a>, as floating point operations propagate and amplify the round-off error. Store the number as amount of <em>cents</em> instead. Integer can be represented exactly, and <code>4990 % 10</code> will return 0.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>This is not a perfect answer but it works. </p>\n\n<pre><code>function format_float_bug(num)\n{\n   return parseFloat( num.toFixed(15) ); \n} \n</code></pre>\n\n<p>you can use as follows,</p>\n\n<pre><code>format_float_bug(4990 % 10);\n</code></pre>\n\n<p>because below number (49.89999999999999857891452848) first 15 decimal places are like 9999999</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Why does <code>49.90 % 0.10</code> in JavaScript return <code>0.09999999999999581</code>? I expected it to be 0.</p>\n",
            "last_activity_date": 1416218518,
            "question_id": 3966484,
            "score": 8,
            "tags": [
                "javascript",
                "floating-point",
                "modulus"
            ],
            "title": "Floating point numbers and JavaScript modulus operator"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>This is nothing natively supported.</p>\n\n<p>You could roll your own function for this, working from the first day of the month</p>\n\n<pre><code>var currentDate = new Date();\nvar firstDayOfMonth = new Date( currentDate.getFullYear(), currentDate.getMonth(), 1 );\n</code></pre>\n\n<p>And then getting the weekday of that date:</p>\n\n<pre><code>var firstWeekday = firstDayOfMonth.getDay();\n</code></pre>\n\n<p>... which will give you a zero-based index, from 0-6, where 0 is Sunday.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>function weekAndDay() {\n\n    var date = new Date,\n        days = ['Sunday','Monday','Tuesday','Wednesday',\n                'Thursday','Friday','Saturday'],\n        prefixes = ['First', 'Second', 'Third', 'Fourth', 'Fifth'];\n\n    return prefixes[0 | date.getDate() / 7] + ' ' + days[date.getDay()];\n\n}\n\nweekAndDay(); // =&gt; \"Third Monday\"\n</code></pre>\n\n<p>Adding the capability to have <code>Last ...</code> may take some more hacking...</p>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>J-P's answer got me on the right track, here's what worked for me...</p>\n\n<pre><code>function weekAndDay() {\n\n    var date = new Date,\n    var days = ['Sunday','Monday','Tuesday','Wednesday',\n        'Thursday','Friday','Saturday'],\n    var prefixes = ['First', 'Second', 'Third', 'Fourth', 'Fifth'];\n\n    var weekNum = 0 | date.getDate() / 7;\n    weekNum = ( date.getDate() % 7 === 0 ) ? weekNum - 1 : weekNum;\n\n    return prefixes[ weekNum ] + ' ' + days[ date.getDay() ];\n\n}\n\nweekAndDay(); // =&gt; \"Third Monday\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>This is an old question but the answers that exist are just plain wrong. This is my cross-browser compatible solution:</p>\n\n<pre><code>Date.prototype.getWeekOfMonth = function(exact) {\n    var month = this.getMonth()\n        , year = this.getFullYear()\n        , firstWeekday = new Date(year, month, 1).getDay()\n        , lastDateOfMonth = new Date(year, month + 1, 0).getDate()\n        , offsetDate = this.getDate() + firstWeekday - 1\n        , index = 1 // start index at 0 or 1, your choice\n        , weeksInMonth = index + Math.ceil((lastDateOfMonth + firstWeekday - 7) / 7)\n        , week = index + Math.floor(offsetDate / 7)\n    ;\n    if (exact || week &lt; 2 + index) return week;\n    return week === weeksInMonth ? index + 5 : week;\n};\n</code></pre>\n\n<p>You don't need to put it directly on the prototype if you don't want to. In my implementation, 6 means \"Last\", not \"Sixth\". If you want it to always return the actual week of the month, just pass <code>true</code>.</p>\n\n<p><strong>EDIT:</strong> Fixed this to handle 5 &amp; 6-week months. My \"unit tests\", feel free to fork: <a href=\"http://jsfiddle.net/OlsonDev/5mXF6/1/\">http://jsfiddle.net/OlsonDev/5mXF6/1/</a>.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I was just able to figure out a easier code for calculate the number of weeks for a given month of an year ..</p>\n\n<p>y == year for example { 2012 }\nm == is a value from { 0 - 11 }</p>\n\n<pre><code>function weeks_Of_Month( y, m ) {\n    var first = new Date(y, m,1).getDay();      \n    var last = 32 - new Date(y, m, 32).getDate(); \n\n    // logic to calculate number of weeks for the current month\n    return Math.ceil( (first + last)/7 );   \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>week number = 0 | new Date().getDate() / 7\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think this works. It returns the week of the month, starting at 0:</p>\n\n<pre><code>var d = new Date();\nvar date = d.getDate();\nvar day = d.getDay();\n\nvar weekOfMonth = Math.ceil((date - 1 - day) / 7);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can i get the week number of month using javascript / jquery?</p>\n\n<p>For ex.: </p>\n\n<p>First Week: 5th July, 2010. / Week Number = <strong>First monday</strong></p>\n\n<p>Previous Week: 12th July, 2010. / Week Number = <strong>Second monday</strong></p>\n\n<p>Current Date: 19th July, 2010. / Week Number = <strong>Third Monday</strong></p>\n\n<p>Next week: 26th July, 2010. / Week Number = <strong>Last monday</strong></p>\n",
            "last_activity_date": 1398195632,
            "question_id": 3280323,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "date"
            ],
            "title": "Get week of the month"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>It is possible but: </p>\n\n<ul>\n<li>you would have to use the server anyway, there's no way you can get content of a file on user computer without transferring it to server and back</li>\n<li>I don't thing anyone has written such library yet</li>\n</ul>\n\n<p>So if you have some free time you can learn pdf format and write such a library yourself, or you can just use server side library of course.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I don't know of a library for reading PDF files, but there is a library for <a href=\"https://github.com/MrRio/jsPDF\" rel=\"nofollow\">creating them in JavaScript called jsPDF</a>. You might get some ideas about how to read PDF files in JavaScript by looking at the source of that library.</p>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>there is <a href=\"https://github.com/mozilla/pdf.js\" rel=\"nofollow\">Pdf.js</a> that you can render the pdf using javascript.\ni didnt try extracting text on it but i guess its a start ...</p>\n\n<p>See: <a href=\"http://groups.google.com/group/mozilla.dev.pdf-js/browse_thread/thread/d9951f88c14b7e13\" rel=\"nofollow\">http://groups.google.com/group/mozilla.dev.pdf-js/browse_thread/thread/d9951f88c14b7e13</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here's some JavaScript code that does what you want using Pdf.js from <a href=\"http://hublog.hubmed.org/archives/001948.html\" rel=\"nofollow\">http://hublog.hubmed.org/archives/001948.html</a>:</p>\n\n<pre><code>var input = document.getElementById(\"input\");  \nvar processor = document.getElementById(\"processor\");  \nvar output = document.getElementById(\"output\");  \n\n// listen for messages from the processor  \nwindow.addEventListener(\"message\", function(event){  \n  if (event.source != processor.contentWindow) return;  \n\n  switch (event.data){  \n    // \"ready\" = the processor is ready, so fetch the PDF file  \n    case \"ready\":  \n      var xhr = new XMLHttpRequest;  \n      xhr.open('GET', input.getAttribute(\"src\"), true);  \n      xhr.responseType = \"arraybuffer\";  \n      xhr.onload = function(event) {  \n        processor.contentWindow.postMessage(this.response, \"*\");  \n      };  \n      xhr.send();  \n    break;  \n\n    // anything else = the processor has returned the text of the PDF  \n    default:  \n      output.textContent = event.data.replace(/\\s+/g, \" \");  \n    break;  \n  }  \n}, true);\n</code></pre>\n\n<p>...and here's an example:</p>\n\n<p><a href=\"http://git.macropus.org/2011/11/pdftotext/example/\" rel=\"nofollow\">http://git.macropus.org/2011/11/pdftotext/example/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This is an ancient question, but because pdf.js has been developing over the years, I would like to give a new answer. That is, it can be done locally without involving any server or external service. The new pdf.js has a function: page.getTextContent(). You can get the text content from that. I've done it successfully with the following code. </p>\n\n<ol>\n<li><p>What you get in each step is a promise. You need to code this way: <code>.then( function(){...})</code> to proceed to the next step. </p>\n\n<p>1) <code>PDFJS.getDocument( data ).then( function(pdf) {</code></p>\n\n<p>2) <code>pdf.getPage(i).then( function(page){</code></p>\n\n<p>3) <code>page.getTextContent().then( function(textContent){</code></p></li>\n<li><p>What you finally get is an string array <code>textContent.bidiTexts[]</code>. You concatenate them to get the text of 1 page. Text blocks' coordinates are used to judge whether newline or space need to be inserted. (This may not be totally robust, but from my test it seems ok.></p></li>\n<li><p>The input parameter <code>data</code> needs to be either a URL or ArrayBuffer type data. I used the ReadAsArrayBuffer(file) function in  <code>FileReader</code> API to get the data.</p></li>\n</ol>\n\n<p>Hope this helps.</p>\n\n<pre><code>    function Pdf2TextClass(){\n     var self = this;\n     this.complete = 0;\n\n    /**\n     *\n     * @param data ArrayBuffer of the pdf file content\n     * @param callbackPageDone To inform the progress each time\n     *        when a page is finished. The callback function's input parameters are:\n     *        1) number of pages done;\n     *        2) total number of pages in file.\n     * @param callbackAllDone The input parameter of callback function is \n     *        the result of extracted text from pdf file.\n     *\n     */\n     this.pdfToText = function(data, callbackPageDone, callbackAllDone){\n     console.assert( data  instanceof ArrayBuffer  || typeof data == 'string' );\n     PDFJS.getDocument( data ).then( function(pdf) {\n     var div = document.getElementById('viewer');\n\n     var total = pdf.numPages;\n     callbackPageDone( 0, total );        \n     var layers = {};        \n     for (i = 1; i &lt;= total; i++){\n        pdf.getPage(i).then( function(page){\n        var n = page.pageNumber;\n        page.getTextContent().then( function(textContent){\n          if( null != textContent.bidiTexts ){\n            var page_text = \"\";\n            var last_block = null;\n            for( var k = 0; k &lt; textContent.bidiTexts.length; k++ ){\n                var block = textContent.bidiTexts[k];\n                if( last_block != null &amp;&amp; last_block.str[last_block.str.length-1] != ' '){\n                    if( block.x &lt; last_block.x )\n                        page_text += \"\\r\\n\"; \n                    else if ( last_block.y != block.y &amp;&amp; ( last_block.str.match(/^(\\s?[a-zA-Z])$|^(.+\\s[a-zA-Z])$/) == null ))\n                        page_text += ' ';\n                }\n                page_text += block.str;\n                last_block = block;\n            }\n\n            textContent != null &amp;&amp; console.log(\"page \" + n + \" finished.\"); //\" content: \\n\" + page_text);\n            layers[n] =  page_text + \"\\n\\n\";\n          }\n          ++ self.complete;\n          callbackPageDone( self.complete, total );\n          if (self.complete == total){\n            window.setTimeout(function(){\n              var full_text = \"\";\n              var num_pages = Object.keys(layers).length;\n              for( var j = 1; j &lt;= num_pages; j++)\n                  full_text += layers[j] ;\n              callbackAllDone(full_text);\n            }, 1000);              \n          }\n        }); // end  of page.getTextContent().then\n      }); // end of page.then\n    } // of for\n  });\n }; // end of pdfToText()\n}; // end of class\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                }
            ],
            "body": "<p>I wonder if is possible to get the text inside of a PDF file by using only Javascript?\nIf yes, what libraries should I use?</p>\n\n<p>I know there are some server-side java, c#, etc libraries but I would prefer not using a server. \nthanks</p>\n",
            "last_activity_date": 1416329592,
            "question_id": 1554280,
            "score": 8,
            "tags": [
                "javascript",
                "pdf",
                "text"
            ],
            "title": "extract text from pdf in Javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The best thing I ever read about <a href=\"http://javascript.crockford.com/memory/leak.html\" rel=\"nofollow\">Javascript memory leaks</a> was written by Doulgas Crockford.</p>\n\n<p>To answer your question, yes, the browser absolutely <em>should</em> unload all the objects (and most importantly, event handlers) at the appropriate time.  If it did, it wouldnt have leaks :) </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You don't have to make sense of them -- they are bugs in broswers and being fixed from versions to versions.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's the problem. IE has a separate garbage collector for the DOM and for javascript. They can't detect circular references between the two.</p>\n\n<p>What we used to was to clean up all event handlers from all nodes at page unload. This could, however, halt the browser while unloading. This only addressed the case where the circular reference was caused by event handlers. It could also be caused by adding direct references from DOM nodes to js objects which had a reference to the DOM node itself.</p>\n\n<p>Another good thing to remember is that if you are deleting nodes, it's a good idea to remove the handlers yourself first. Ext-js has a Ext.destroy method that does just that (if you've set the handlers using ext). </p>\n\n<p>Example</p>\n\n<pre><code>// Leaky code to wrap HTML elements that allows you to find the custom js object by adding \n//a reference as an \"expando\" property\nfunction El(node) {\n  this.dom = node;\n  node.el = this;\n}\n</code></pre>\n\n<p>Then Microsoft hacked IE so it removed all event handlers and expando properties when unloading internally, therefore it's much faster than doing it with js. This fix seemed to fix our memory problems, but not all problems as there are people still having the problem.</p>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/library/bb250448(VS.85).aspx\">MS's description of the problem</a></p>\n\n<p><a href=\"http://support.microsoft.com/kb/929874/\">MS releases patch that \"fixes\" memory leaks: </a></p>\n\n<p><a href=\"http://novemberborn.net/javascript/memory-leaks-gone\"> Blog about fixed memory leaks </a></p>\n\n<p><a href=\"http://ajaxian.com/archives/ies-memory-leak-fix-greatly-exaggerated\"> IE still has some problems </a></p>\n\n<p>At our company, we use ext-js. By always setting event handlers using ext-js, which has a an internal clean up routine, we have not experienced memory leaks. In reality, memory usage grows but stops at about 250Mb for a machine with 4Gb of RAM. We don't think that's too bad since we load about 2Mb(uncompressed) of js files and all the elements on the page are dynamic.</p>\n\n<p>There's a lot to be said about this and we've researched this extensively where I work. Feel free to ask a more specific question. I may be able to help you.</p>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>I have been reading up to try to make sense of memory leaks in browsers, esp. IE. I understand that the leaks are caused by a mismatch in garbage collection algorithms between the Javascript engine and the DOM object tree, and will persist past. What I don't understand is why (according to some statements in the articles I'm reading) the memory is not reclaimed after the page is unloaded by the browser. Navigating away from a webpage should put all the DOM and javascript objects out of scope at that point, shouldn't it?</p>\n",
            "last_activity_date": 1260515439,
            "question_id": 1077840,
            "score": 8,
            "tags": [
                "javascript",
                "internet-explorer",
                "dom",
                "memory",
                "memory-leaks"
            ],
            "title": "Javascript memory leaks after unloading a web page"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>When the URL is changed the browser automatically adds it to the history, and there is no way to stop this.</p>\n\n<p>On the contrary AJAX application coders usually strive to add some kind of history so that user interactivity pattern is not broken. </p>\n\n<p>For adding to the history using AJAX / XMLHttpRequest application, add to the hash.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could change the location without having the browser display a Back button like this:</p>\n\n<pre><code>window.location.replace(new_url);\n</code></pre>\n\n<p>However, the original address remains in the browser's history and may be accessed using something like <kbd>CTRL</kbd>+<kbd>H</kbd></p>\n\n<p>Reference:</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en/DOM/window.location#replace\" rel=\"nofollow\">https://developer.mozilla.org/en/DOM/window.location#replace</a></li>\n<li><a href=\"https://developer.mozilla.org/En/DOM/Window.history#Notes\" rel=\"nofollow\">https://developer.mozilla.org/En/DOM/Window.history#Notes</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Alas, your question can't be answered, AJAX requests have nothing to do with browser history, and if you loaded some dynamic content with them, then the user clicked the browser back button, the <em>previous</em> page is loaded (this which was loaded with an ordinary GET or POST request), which corrupts the sequence you display content in.</p>\n\n<p>Dmitri's answers means that you will maintain your own history for the dynamic content using the fragment part of the url (this after the # symbol), maybe you'll provide your own back and forward buttons, but still you're not protected from the effect of the browser back and forward buttons.</p>\n\n<p>If only they had provided some kind of events to handle user clicks on these buttons with the ability to cancel.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I was facing the same problem and found this workaround which worked for me</p>\n\n<p>instead of </p>\n\n<pre><code>function onAjaxCallback(evt){\n    location.href=newLocation;\n}\n</code></pre>\n\n<p>i wrapped the location.href call around a setTimeout. Seems to do the trick. My history's behaving fine now. Hope that helps</p>\n\n<pre><code>function onAjaxCallback(evt){\n    setTimeout(function(){\n    \tlocation.href=newLocation;\n    },0)\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>Read the original question more carefully. The question is not about content loaded by an XHR, but about content <em>loaded by a script</em> loaded by an XHR. I had the same problem and the setTimeout method seems to work well.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>study: <code>window.location.replace()</code> and <code>window.location.assign()</code></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>In testing document.location.href, I have observed that when the user initiates an action that results in javascript that assigns to document.location.href, the new URL is added to the history.</p>\n\n<p>However, if the call is initiated by javascript that is result of, say, state change of an XMLHTTPRequest, the entry for the current page in the history is over-written. Have I characterized this correctly? Is there a way to get the page change to be reflected in the history in this latter case?</p>\n",
            "last_activity_date": 1275320168,
            "question_id": 864633,
            "score": 8,
            "tags": [
                "javascript"
            ],
            "title": "Assigning to document.location.href without clobbering history"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>I don't know C# but here's Java code that does the job, I hope you can translate it to C#</p>\n\n<pre><code>import org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.logging.LogEntries;\nimport org.openqa.selenium.logging.LogEntry;\nimport org.openqa.selenium.logging.LogType;\nimport org.openqa.selenium.logging.LoggingPreferences;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.testng.annotations.AfterMethod;\nimport org.testng.annotations.BeforeMethod;\nimport org.testng.annotations.Test;\n\npublic class ChromeConsoleLogging {\n    private WebDriver driver;\n\n\n    @BeforeMethod\n    public void setUp() {\n        System.setProperty(\"webdriver.chrome.driver\", \"c:\\\\path\\\\to\\\\chromedriver.exe\");        \n        DesiredCapabilities caps = DesiredCapabilities.chrome();\n        LoggingPreferences logPrefs = new LoggingPreferences();\n        logPrefs.enable(LogType.BROWSER, Level.ALL);\n        caps.setCapability(CapabilityType.LOGGING_PREFS, logPrefs);\n        driver = new ChromeDriver(caps);\n    }\n\n    @AfterMethod\n    public void tearDown() {\n        driver.quit();\n    }\n\n    public void analyzeLog() {\n        LogEntries logEntries = driver.manage().logs().get(LogType.BROWSER);\n        for (LogEntry entry : logEntries) {\n            System.out.println(new Date(entry.getTimestamp()) + \" \" + entry.getLevel() + \" \" + entry.getMessage());\n            //do something useful with the data\n        }\n    }\n\n    @Test\n    public void testMethod() {\n        driver.get(\"http://mypage.com\");\n        //do something on page\n        analyzeLog();\n    }\n}\n</code></pre>\n\n<p>Pay attention to setUp method in above code.  We use LoggingPreferences object to enable logging. There are a few types of logs, but if you want to track console errors then LogType.BROWSER is the one that you should use. Then we pass that object to DesiredCapabilities and further to ChromeDriver constructor and voila - we have an instance of ChromeDriver with logging enabled.</p>\n\n<p>After performing some actions on page we call analyzeLog() method. Here we simply extract the log and iterate through its entries. Here you can put assertions or do any other reporting you want.</p>\n\n<p>My inspiration was <a href=\"https://gist.github.com/klepikov/5457750\">this code by Michael Klepikov</a> that explains how to extract performance logs from ChromeDriver.</p>\n",
                    "is_accepted": true,
                    "score": 13
                }
            ],
            "body": "<p>I want to build an automation testing, so I have to know the errors that appear in the console of chrome.</p>\n\n<p>there is an option to get the error lines that appear in the console?</p>\n\n<p>In order to see the console: right click somewhere in the page, click \"inspect element\" and then go to \"console\".</p>\n",
            "last_activity_date": 1417600333,
            "question_id": 18261338,
            "score": 7,
            "tags": [
                "c#",
                "javascript",
                "asp.net-mvc",
                "selenium"
            ],
            "title": "Get chrome&#39;s console log"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You need to return the validating function. Something like:</p>\n\n<pre><code>onsubmit=\"return validateForm();\"\n</code></pre>\n\n<p>Then the validating function should return false on errors. If everything is OK return true. Remember that the server has to validate as well.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You have several errors there.\nfirst you have to return value from the function in the html markup: <code>&lt;form name=\"ff1\" method=\"post\" onsubmit=\"return validateForm();\"&gt;</code> </p>\n\n<p>second in jsfiddle your place the code inside onLoad which then the form won't recognize - and last you have to return true from the function if all validation success - \nI fixed some issues in the update:</p>\n\n<p><a href=\"http://jsfiddle.net/CrLsR/8/\">http://jsfiddle.net/CrLsR/8/</a></p>\n\n<pre><code>function validateURL(url) {\n    var reurl = /^(http[s]?:\\/\\/){0,1}(www\\.){0,1}[a-zA-Z0-9\\.\\-]+\\.[a-zA-Z]{2,5}[\\.]{0,1}/;\n    return reurl.test(url);\n}\n\nfunction validateForm()\n{\n    // Validate URL\n    var url = $(\"#frurl\").val();\n    if (validateURL(url)) { } else {\n        alert(\"Please enter a valid URL, remember including http://\");\n    }\n\n    // Validate Title\n    var title = $(\"#frtitle\").val();\n    if (title==\"\" || title==null) { } else {\n        alert(\"Please enter only alphanumeric values for your advertisement title\");\n    }\n\n    // Validate Email\n    var email = $(\"#fremail\").val();\n    if ((/(.+)@(.+){2,}\\.(.+){2,}/.test(email)) || email==\"\" || email==null) { } else {\n        alert(\"Please enter a valid email\");\n    }\n  return false;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>The simplest validation is as follows:</p>\n\n<pre><code>&lt;form name=\"ff1\" method=\"post\"&gt;\n &lt;input type=\"email\" name=\"email\" id=\"fremail\" placeholder=\"your@email.com\" /&gt;\n &lt;input type=\"text\" pattern=\"[a-z0-9. -]+\" title=\"Please enter only alphanumeric characters.\" name=\"title\" id=\"frtitle\" placeholder=\"Title\" /&gt;\n &lt;input type=\"url\" name=\"url\" id=\"frurl\" placeholder=\"http://yourwebsite.com/\" /&gt;\n &lt;input type=\"submit\" name=\"Submit\" value=\"Continue\" /&gt;         \n&lt;/form&gt;\n</code></pre>\n\n<p>Javascript: none.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Disclosure: I wrote FieldVal.</p>\n\n<p>Here is a solution using <a href=\"http://fieldval.com\" rel=\"nofollow\">FieldVal</a>. By using FieldVal UI to build a form and then FieldVal to validate the input, you can pass the error straight back into the form. </p>\n\n<p>You can even run the validation code on the backend (if you're using Node) and show the error in the form without wiring all of the fields up manually.</p>\n\n<p>Live demo: <a href=\"http://codepen.io/MarcusLongmuir/pen/WbOydx\" rel=\"nofollow\">http://codepen.io/MarcusLongmuir/pen/WbOydx</a></p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function validate_form(data) {\n    //This would work on the back end too (if you're using Node)\n\n    //Validate the provided data\n    var validator = new FieldVal(data);\n    validator.get(\"email\", BasicVal.email(true));\n    validator.get(\"title\", BasicVal.string(true));\n    validator.get(\"url\", BasicVal.url(true));\n    return validator.end();\n}\n\n\n$(document).ready(function(){\n\n    //Create a form and add some fields\n    var form = new FVForm()\n    .add_field(\"email\", new FVTextField(\"Email\"))\n    .add_field(\"title\", new FVTextField(\"Title\"))\n    .add_field(\"url\", new FVTextField(\"URL\"))\n    .on_submit(function(value){\n\n        //Clear the existing errors\n        form.clear_errors();\n\n        //Use the function above to validate the input\n        var error = validate_form(value);\n\n        if (error) {\n            //Pass the error into the form\n            form.error(error);\n        } else {\n            //Use the data here\n            alert(JSON.stringify(value));\n        }\n    })\n\n    form.element.append(\n        $(\"&lt;button/&gt;\").text(\"Submit\")\n    ).appendTo(\"body\");\n\n    //Pre-populate the form\n    form.val({\n        \"email\": \"user@example.com\",\n        \"title\": \"Your Title\",\n        \"url\": \"http://www.example.com\"\n    })\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to validate my form with the easiest way possible, but somehow is not working and when I click submit it just takes me to the next page without giving the alert message:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;form name=\"ff1\" method=\"post\" onsubmit=\"validateForm();\"&gt;\n &lt;input type=\"text\" name=\"email\" id=\"fremail\" placeholder=\"your@email.com\" /&gt;\n &lt;input type=\"text\" name=\"title\" id=\"frtitle\" placeholder=\"Title\" /&gt;\n &lt;input type=\"text\" name=\"url\" id=\"frurl\" placeholder=\"http://yourwebsite.com/\" /&gt;\n &lt;input type=\"submit\" name=\"Submit\" value=\"Continue\" /&gt;         \n&lt;/form&gt;\n</code></pre>\n\n<p>Javascript:</p>\n\n<pre><code>&lt;script type=\"text/JavaScript\"&gt;\n\nfunction validateURL(url) {\n    var reurl = /^(http[s]?:\\/\\/){0,1}(www\\.){0,1}[a-zA-Z0-9\\.\\-]+\\.[a-zA-Z]{2,5}[\\.]{0,1}/;\n    return re.test(url);\n}\n\nfunction validateForm()\n{\n    // Validate URL\n    var url = $(\"#frurl\").val();\n    if (validateURL(url)) { } else {\n        alert(\"Please enter a valid URL, remember including http://\");\n    }\n\n    // Validate Title\n    var title = $(\"#frtitle\").val();\n    if (title==\"\" || title==null) { } else {\n        alert(\"Please enter only alphanumeric values for your advertisement title\");\n    }\n\n    // Validate Email\n    var email = $(\"#fremail\").val();\n    if ((/(.+)@(.+){2,}\\.(.+){2,}/.test(email)) || email==\"\" || email==null) { } else {\n        alert(\"Please enter a valid email\");\n    }\n  return false;\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>Here is also in jsfiddle <a href=\"http://jsfiddle.net/CrLsR/\">http://jsfiddle.net/CrLsR/</a></p>\n\n<p>Thanks in advance</p>\n",
            "last_activity_date": 1422223716,
            "question_id": 16134733,
            "score": 7,
            "tags": [
                "javascript",
                "html",
                "forms",
                "validation"
            ],
            "title": "HTML/Javascript: Simple form validation on submit"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>jQuery UI Tabs can take in options. The ones that are particularly useful for your questions are <code>cookie</code> and <code>selected</code>. You can read about the options <a href=\"http://docs.jquery.com/UI/API/1.8/Tabs#options\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I solved my own jQuery tab issues after additional research and trial and error.  Here's a working example.  I don't know if this is the most elegant solution but it works.  I hope this helps.</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"css/redmond/jquery-ui-1.10.1.custom.min.css\"&gt;\n    &lt;script language=\"javascript\" type=\"text/javascript\" src=\"js/jquery/jquery-1.9.1.js\"&gt;&lt;/script&gt;\n    &lt;script language=\"javascript\" type=\"text/javascript\" src=\"js/jquery/jquery-ui-1.10.1.custom.min.js\"&gt;&lt;/script&gt;\n\n    &lt;script language=\"javascript\" type=\"text/javascript\"&gt;\n        $(document).ready(function() {\n            $(\"#tabs\").tabs({active: document.tabTest.currentTab.value});\n\n            $('#tabs a').click(function(e) {\n                var curTab = $('.ui-tabs-active');\n                curTabIndex = curTab.index();\n                document.tabTest.currentTab.value = curTabIndex;\n            });\n        });\n    &lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;form name=\"tabTest\" method=\"post\" action=\"tab\"&gt;\n        &lt;!-- default tab value 2 for Tab 3 --&gt;            \n        &lt;input type=\"hidden\" name=\"currentTab\" value=\"2\"/&gt; \n        &lt;div id=\"tabs\"&gt;\n            &lt;ul&gt;\n                &lt;li&gt;&lt;a href=\"#tabs-1\"&gt;Tab 1&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#tabs-2\"&gt;Tab 2&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#tabs-3\"&gt;Tab 3&lt;/a&gt;&lt;/li&gt;\n            &lt;/ul&gt;\n            &lt;div id=\"tabs-1\"&gt;Tab 1 Content&lt;/div&gt; \n            &lt;div id=\"tabs-2\"&gt;Tab 2 Content&lt;/div&gt;\n            &lt;div id=\"tabs-3\"&gt;Tab 3 Content&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p></p>\n\n<p>Here's how I answered each of my previous questions.</p>\n\n<p><strong>1. How can I set the active tab based on a querystring value?</strong> \nI ended up not needing to use a querystring.  I added the #tabs-x to the end of my url.  For example, if I wanted a link directly to Tab 3 I coded a link as:</p>\n\n<pre><code>localhost:8080/pm/detail?prjID=2077#tabs-3\n</code></pre>\n\n<p><strong>2. When the user selects the Save button in my browser application, and the browser page reloads, how can I maintain focus on the tab they were on before they pressed save?</strong></p>\n\n<p>I solved this by capturing the click event, getting the current tab index and then setting a hidden forms element \"currentTab\" to store the current tab value. Then back in the Java Servlet I retrieved the hidden forms elements and reset it when the page reloads.</p>\n\n<pre><code>$(document).ready(function() {\n        // Set active tab on page load\n        $(\"#tabs\").tabs({active: document.tabTest.currentTab.value});\n\n        // Capture current tab index.  Remember tab index starts at 0 for tab 1.\n        $('#tabs a').click(function(e) {\n            var curTab = $('.ui-tabs-active');\n            curTabIndex = curTab.index();\n            document.tabTest.currentTab.value = curTabIndex;\n        });\n    });\n</code></pre>\n\n<p><strong>3. How can I set the active tab when a user returns to the Project page of my browser application? For example, all within my web application, if the user browses to the Task page and then returns to the Project page, how can I reset the tab they were previously on?</strong></p>\n\n<p>This is solved by setting a session variable in my Java Servlet to store the hidden forms element \"currentTab\".  That way when I return the Project page, I can reset the \"currentTab\" value the same way I set it in the Save forms action.</p>\n\n<p>I hope this example can help someone else with their jQuery tab issues!</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>You can edit the <code>jquery-ui.js</code> file</p>\n\n<ul>\n<li>open the file</li>\n<li>search for <code>this.anchors.bind(\"click.tabs\",function(){return!1})}</code></li>\n<li>replace with <code>this.anchors.bind(\"click.tabs\",function(){})}</code></li>\n<li>refresh your page and it's all right</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<pre><code>     var currentTab = $('.ui-state-active a').index();\n    currentTab = $('#divMainContent').find('#sel_tab')[0].value;\n</code></pre>\n\n<p>Note: Where Sel_tab is hidden field.\nonclick on tabs achor link assign value to hidden feild </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using a basic implementation of Jquery UI Tabs that are working fine but I want to set (or reset) the active tab dynamically based on a user action. </p>\n\n<ol>\n<li><p>How can I set the active tab based on a querystring value?  With my previous tab solution I was able to pass a querystring value and set the active tab when the page loaded.  (I had to abandon this older solution due to other technical challenges.)</p></li>\n<li><p>When the user selects the Save button in my browser application, and the browser page reloads, how can I maintain focus on the tab they were on before they pressed save?</p></li>\n<li><p>How can I set the active tab when a user returns to the Tasks page of my browser application?  For example, all within my web application, if the user browses to the Projects page and then returns to the Task page, how can I reset the tab they were previously on?</p></li>\n</ol>\n\n<p>Javascript:</p>\n\n<pre><code>$(function() {\n   $(\"#tabs\").tabs();\n});\n</code></pre>\n\n<p>HTML Example code:</p>\n\n<pre><code>&lt;div id=\"tabs\"&gt;\n    &lt;ul&gt;\n        &lt;li&gt;&lt;a href=\"#tabs-1\"&gt;Description&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"#tabs-2\"&gt;Action&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"#tabs-3\"&gt;Resources&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"#tabs-4\"&gt;Settings&lt;/a&gt;&lt;/li&gt;\n    &lt;/ul&gt;\n\n&lt;div id=\"tabs-1\"&gt;\n    &lt;p&gt;Description content&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;div id=\"tabs-2\"&gt;\n    &lt;p&gt;Action content&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;div id=\"tabs-3\"&gt;\n    &lt;p&gt;Resources content&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;div id=\"tabs-4\"&gt;\n    &lt;p&gt;Settings &lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/div&gt;\n</code></pre>\n",
            "last_activity_date": 1424281465,
            "question_id": 15421669,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "jsp"
            ],
            "title": "Set Jquery ui active tab on page load/reload"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>IE9 <a href=\"http://caniuse.com/filereader\" rel=\"nofollow\">doesn't support the HTML5 File API</a>. Of course there might be other ways to implement the feature you are trying to implement (which by the way you haven't explained).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"https://github.com/Jahdrien/FileReader\">This polyfill</a> uses Flash to provide access to the filesystem on browsers that don't support the File APIs (IE and Safari), but does not support drag-n-drop.</p>\n\n<p><a href=\"https://github.com/MrSwitch/dropfile\">This one</a> uses Silverlight to allow drag-n-drop.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>It looks like there is one <a href=\"https://github.com/ebidel/idb.filesystem.js\" rel=\"nofollow\">https://github.com/ebidel/idb.filesystem.js</a> (untested).<br>\n<a href=\"http://html5please.com/\" rel=\"nofollow\">http://html5please.com/</a> is great for this kind of question.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a shim for <a href=\"https://developer.mozilla.org/en/DOM/FileReader\"><code>FileReader</code></a> in IE 9?</p>\n\n<pre><code>var reader = new FileReader();\n</code></pre>\n",
            "last_activity_date": 1340049482,
            "question_id": 11089897,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "internet-explorer"
            ],
            "title": "Shim for FileReader() in IE 9"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Closure-compiler's ability to create modules provides a powerful tool to separate input files into distinct output files. It is designed such that different modules can be loaded at differing times depending on the features required. There are multiple compiler flags pertaining to modules.</p>\n\n<p>Each use of the --module flag describes an output file and it's dependencies. Each module flag follows the following syntax:</p>\n\n<pre><code>--js inputfile.js\n--module name:num_files:dependency\n</code></pre>\n\n<p>The resulting output file will be name.js and includes the files specified by the preceding --js flag(s).</p>\n\n<p>The dependency option is what you will be most interested in. It specifies what the parent module is. The module options must describe a valid dependency tree (you must have a base module).</p>\n\n<p>Here's an example:</p>\n\n<pre><code>--js commonfunctions.js\n--module common:1\n--js page1functions.js\n--js page1events.js\n--module page1:2:common\n--js page2function.js\n--module page2:1:common\n--js page1addons.js\n--module page1addons:1:page1\n</code></pre>\n\n<p>In this case, you are telling the compiler that the page1 and page2 modules depend on the common module and that the page1addons module depends on the page1 module.</p>\n\n<p>Keep in mind that the compiler can and does move code from module source files into other module output files if it determines that it is only used by that module.</p>\n\n<p>None of this requires closure-library or the use of goog.require/provide calls nor does it add any code to your output. If you want the compiler to determine dependencies automatically or to be able to manage those dependencies for you, you'll need goog.require/provide calls.</p>\n",
                    "is_accepted": true,
                    "score": 17
                }
            ],
            "body": "<p>I want to use the google closure compiler on the javascript source we're using.\nIn development mode we tend to break functionality to lots of files but for production would like to have them combined into modules.</p>\n\n<p>When calling the compiler I can give it a list of files to include for compilation, but the output of that shows that the compiler did not save the order of the files list.</p>\n\n<p>I searched about it and found that I can use <em>goog.provide/good.require</em> in order to control the dependencies between the different js files.\nThe problem with that is that it adds code to my js which I just don't need or want, for example:</p>\n\n<pre><code>goog.provide(\"mainFile\")\n</code></pre>\n\n<p>will add this:</p>\n\n<pre><code>var mainFile = {};\n</code></pre>\n\n<p>to the compiled js file, something that I don't want.\nWe're not using the google closure library at all, all I want to use is the compiler.</p>\n\n<p>Is there a way to tell the compiler the order of the files without including more \"closure library\" functionality which I have no need for?\nI can of course create a tool of my own which will first take all the files, combine them into one which will then be the input of the compiler, but I would prefer to void that if it can be done by the compiler itself.</p>\n\n<hr>\n\n<h1>Edit</h1>\n\n<p>The goal is to be able to produce modules like the answer in this thread: <a href=\"http://stackoverflow.com/questions/3204474/using-the-module-option-in-closure-compiler-to-create-multiple-output-files\">Using the --module option in Closure Compiler to create multiple output files</a></p>\n\n<p>And so I want to add to that the ability to control which files go into which module while also having control on their order.\nFor now I don't use wildcards, but I plan to do so in the future (if it's possible).</p>\n\n<p>simply \"cat file1.js file2.js > combined.js &amp;&amp; compile...\" is fine, but in our case it's a bit more complicated and we'll have to write a program/script that does that based on some logic.\nIf we can somehow tell the compiler the order of the files in advanced it might just save the time of implementing such a program.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1352322296,
            "question_id": 10395810,
            "score": 7,
            "tags": [
                "javascript",
                "minify",
                "google-closure-compiler"
            ],
            "title": "How do I split my javascript into modules using Google&#39;s Closure Compiler?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>javascript:</code> inside an <code>onwhatever=\"\"</code> handler is a no-op. The content of this attribute is always JavaScript so <code>javascript:</code> defines a <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Statements/label\" rel=\"nofollow\">label</a> - but outside of a <code>switch</code> block or a loop (where you can use it to <code>break</code>/<code>continue</code> to the position of the label) it does nothing.</p>\n\n<p>However, using inline event handlers is discouraged, there are <a href=\"https://developer.mozilla.org/en/DOM/element.addEventListener\" rel=\"nofollow\">better</a> <a href=\"http://api.jquery.com/on/\" rel=\"nofollow\">ways</a> to register event handlers.</p>\n\n<hr>\n\n<p>While not mentioned in the question, it's worth noting that using <code>javascript:</code> in the <code>href</code> attribute does work (and in there it is actually necessary) but is highly discouraged for various reasons:</p>\n\n<ul>\n<li><code>this</code> does not point to the element</li>\n<li>Calling a function returning a value causes the browser to leave the site</li>\n<li>Clicking the link with disabled JavaScript breaks</li>\n<li>Trying to open the link in a new window/tab breaks</li>\n</ul>\n\n<p>So, if you really have to use inline events, always use <code>onclick=\"\"</code> etc. without <code>javascript:</code>.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>When you are in a <code>onclick</code> attribute, you shouldn't use the <code>javascript:</code> prefix. This is usefull when you want a link <code>&lt;a /&gt;</code> to handle a JS function, for example:</p>\n\n<pre><code>&lt;a href=\"javascript:myfunc();\"&gt;&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>javascript:func()</code> is using the <a href=\"http://msdn.microsoft.com/en-us/library/aa767736%28v=VS.85%29.aspx\" rel=\"nofollow\">javascript protocol</a> so that it could be used in an anchors <code>href</code> attribute. However, don't do this see <a href=\"http://stackoverflow.com/q/2479557/540765\">Why is it bad practice to use links with the javascript: \u201cprotocol\u201d?</a> for more information.</p>\n\n<p>Event handlers are preferable to trigger events instead of attributes.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there any difference between</p>\n\n<pre><code>&lt;input type=\"submit\" value=\"Register\" onclick=\"javascript:submitTheForm();\"&gt;\n</code></pre>\n\n<p>and</p>\n\n<pre><code>&lt;input type=\"submit\" value=\"Register\" onclick=\"submitTheForm();\"&gt;\n</code></pre>\n\n<p>Should I use <code>javascript:</code> before a JS function call?</p>\n",
            "last_activity_date": 1334910196,
            "question_id": 10242576,
            "score": 7,
            "tags": [
                "javascript"
            ],
            "title": "onclick=&quot;javascript:func()&quot; vs. onclick=&quot;func()&quot;"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>A <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/sort\">custom compareFunction</a> needs to return -1, 0 or 1.</p>\n\n<pre><code>function sort_by_name(a, b) {\n    var sa = a.innerHTML.toLowerCase(), sb = b.innerHTML.toLowerCase();\n    return sb&lt;sa ? -1 : sb&gt;sa ? 1 : 0;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>var sort_by_name = function(a, b) {\n    return $(a).text().toLowerCase().localeCompare($(b).text().toLowerCase());\n}\n</code></pre>\n\n<p>You can use localeCompare instead to make things more elegant and workable. </p>\n\n<p>See jsfiddle <a href=\"http://jsfiddle.net/Qww87/11/\">http://jsfiddle.net/Qww87/11/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>according to documentation it needs numeric values.\nmore intelligible:</p>\n\n<pre><code>    var sort_by_name = function(a, b) {\n         if(a.innerHTML.toLowerCase() &lt; b.innerHTML.toLowerCase()) return -1;\n         if(a.innerHTML.toLowerCase() &gt; b.innerHTML.toLowerCase()) return 1;\n         return 0;\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There are much better ways to sort.  </p>\n\n<ol>\n<li>You need a comparison function that returns the right values: -1, 0, and 1.  </li>\n<li><code>localeCompare()</code> is such a comparison function.  </li>\n<li>You can just move the DOM elements around rather than regenerating the HTML.  </li>\n<li>You can get the LI elements directly in the original selector.</li>\n<li><code>\"#table1\"</code> is a more efficient selector than <code>\"ol#table1\"</code>.</li>\n</ol>\n\n<p>I would suggest this:</p>\n\n<pre><code>$(\"div#btn\").click(function() {\n    var sort_by_name = function(a, b) {\n        return a.innerHTML.toLowerCase().localeCompare(b.innerHTML.toLowerCase());\n    }\n\n    var list = $(\"#table1 &gt; li\").get();\n    list.sort(sort_by_name);\n    for (var i = 0; i &lt; list.length; i++) {\n        list[i].parentNode.appendChild(list[i]);\n    }\n});\u200b\n</code></pre>\n\n<p>Which you can see work here: <a href=\"http://jsfiddle.net/jfriend00/yqd3w/\">http://jsfiddle.net/jfriend00/yqd3w/</a></p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Use my jquery plugin Sort Content : </p>\n\n<pre><code>   $('ol#table1').sortContent({asc:true})\n</code></pre>\n\n<p>That's it!</p>\n\n<p>DEMO :\n<a href=\"http://jsfiddle.net/abdennour/SjWXU/\" rel=\"nofollow\">http://jsfiddle.net/abdennour/SjWXU/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to sort an <code>li</code> elements and get an unexpacted result\nI need to sort it three times to get it correctly,</p>\n\n<p>where have I mistaken?\njavascript</p>\n\n<pre><code>var sort_by_name = function(a, b) {\n    return a.innerHTML.toLowerCase() &gt; b.innerHTML.toLowerCase();\n}\n$this = $(\"ol#table1\");\nvar list = $this.children();\nlist.sort(sort_by_name);\nconsole.log(list);\n$this.html(list);\n</code></pre>\n\n<p>HTML</p>\n\n<pre><code>&lt;ol id=\"table1\" style=\"display: block; \"&gt;\n   &lt;li class=\"menu__run\"&gt;I&lt;/li&gt;\n   &lt;li class=\"menu__run\"&gt;IXX&lt;/li&gt;\n   &lt;li class=\"menu__run\"&gt;I&lt;/li&gt;\n   &lt;li class=\"menu__run\"&gt;I&lt;/li&gt;\n   &lt;li class=\"menu__run\"&gt;I&lt;/li&gt;\n   &lt;li class=\"menu__run\"&gt;I&lt;/li&gt;\n   &lt;li class=\"menu__run\"&gt;I&lt;/li&gt;\n   &lt;li class=\"menu__run\"&gt;I&lt;/li&gt; \n   &lt;li class=\"menu__run\"&gt;IXX&lt;/li&gt;\n   &lt;li class=\"menu__run\"&gt;I&lt;/li&gt;\n   &lt;li class=\"menu__run\"&gt;I&lt;/li&gt;\n   &lt;li class=\"menu__run\"&gt;I&lt;/li&gt;\n   &lt;li class=\"menu__run\"&gt;I&lt;/li&gt;\n   &lt;li class=\"menu__run\"&gt;I&lt;/li&gt;\n   &lt;li class=\"menu__test\"&gt;st&lt;/li&gt;\n   &lt;li class=\"menu__test\"&gt;st&lt;/li&gt;\n   &lt;li class=\"menu__test\"&gt;st&lt;/li&gt;\n&lt;/ol&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/Qww87/4/\">fiddle example</a></p>\n",
            "last_activity_date": 1379091588,
            "question_id": 10186192,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "sorting"
            ],
            "title": "javascript sort of HTML elements"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>According to <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=571822\">this Bugzilla page</a>:</p>\n\n<blockquote>\n  <p>Firefox fires the timeupdate event once per frame. Safari 5 and Chrome 6 fire every 250ms.  Opera 10.50 fires every 200ms.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>I used a generic throttle function</p>\n\n<pre><code>_self.throttle = function (fn, threshhold, scope) {\n    threshhold || (threshhold = 250);\n    var last,\n        deferTimer;\n    return function () {\n        var context = scope || this;\n\n        var now = +new Date,\n            args = arguments;\n        if (last &amp;&amp; now &lt; last + threshhold) {\n            // hold on to it\n            clearTimeout(deferTimer);\n            deferTimer = setTimeout(function () {\n                last = now;\n                fn.apply(context, args);\n            }, threshhold);\n        } else {\n            last = now;\n            fn.apply(context, args);\n        }\n    };\n};\n</code></pre>\n\n<p>and wired it up with</p>\n\n<pre><code>myPlayer.on('timeupdate', window.vm.throttle(function () {\n        window.vm.setWatched(myPlayer.currentTime());\n    }, 3000));\n</code></pre>\n\n<p>hope this helps someone.</p>\n\n<p>code cribbed from <a href=\"http://remysharp.com/2010/07/21/throttling-function-calls/\" rel=\"nofollow\">http://remysharp.com/2010/07/21/throttling-function-calls/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Learning html5 stuff. It's pretty awesome! Wondering how often the timeupdate event fires. </p>\n\n<p>SIDE NOTE: There are so many interesting possibilities with the js video api. For instance, it might be possible to use ctrl + F to search through video. Run a voice recognition as part of video processing, then create a long key value store with timestamps as keys and words as values, and write a function that searches for instances of those words, but returns timestamps and seeks your video. Anyways, that's just one crazy idea youtube should jump on.</p>\n\n<p>Any help with timeupdate would be awesome!</p>\n",
            "last_activity_date": 1375788294,
            "question_id": 9678177,
            "score": 7,
            "tags": [
                "javascript",
                "html5",
                "video"
            ],
            "title": "How often does the timeupdate event fire for an html5 video"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The issue is that the JavaScript inside the content scripts runs in its own sandboxed environment and only has access to other JavaScript that was loaded in one of two ways:</p>\n\n<p>Via the <a href=\"http://developer.chrome.com/extensions/content_scripts.html#registration\" rel=\"nofollow\">manifest</a>:</p>\n\n<pre><code>{\n  \"name\": \"My extension\",\n  ...\n  \"content_scripts\": [\n    {\n      \"js\": [\"https://connect.facebook.net/en_US/all.js\"]\n    }\n  ],\n  ...\n}\n</code></pre>\n\n<p>Or using <a href=\"http://developer.chrome.com/extensions/content_scripts.html#pi\" rel=\"nofollow\">Programmatic injection</a>:</p>\n\n<pre><code>/* in background.html */\nchrome.browserAction.onClicked.addListener(function(tab) {\n    chrome.tabs.executeScript(null,\n                       {file:\"https://connect.facebook.net/en_US/all.js\"});\n});\n</code></pre>\n\n<p>Be sure to update your manifest permissions:</p>\n\n<pre><code>/* in manifest.json */\n\"permissions\": [\n    \"tabs\", \"https://connect.facebook.net\"\n ], \n</code></pre>\n\n<p>Appending a script tag will in effect evaluate the JavaScript in the context of the containing page, outside of the JavaScript sandbox that your JavaScript has access to.</p>\n\n<p>Also, since the FB script requires the \"fb-root\" to be in the DOM, you will probably need to use the programmatic approach so that you can first update the DOM with the element, then <a href=\"http://developer.chrome.com/extensions/messaging.html\" rel=\"nofollow\">pass a message</a> back to the background page to load the Facebook script so it is accessible to the JavaScript that is loaded in the content scripts.</p>\n",
                    "is_accepted": true,
                    "score": 19
                }
            ],
            "body": "<p>I'm writing a Google Chrome extension which manipulates the current page (basically adds a button).</p>\n\n<p>In my content script, I want to load the Facebook Graph API:</p>\n\n<pre><code>$fbDiv = $(document.createElement('div')).attr('id', 'fb-root');\n$fbScript = $(document.createElement('script')).attr('src', 'https://connect.facebook.net/en_US/all.js');\n$(body).append($fbDiv);\n$(body).append($fbScript);\n\nconsole.log(\"fbScript: \" + typeof $fbScript.get(0));\nconsole.log(\"fbScript parent: \" + typeof $fbScript.parent().get(0));\nconsole.log(\"find through body: \" + typeof $(body).find($fbScript.get(0)).get(0));\n</code></pre>\n\n<p>However, the script doesn't seem to added to <code>body</code>. Here's the console log:</p>\n\n<pre><code>fbScript: object\nfbScript parent: undefined\nfind through body: undefined\n</code></pre>\n\n<p>Any ideas on what I'm doing wrong?</p>\n",
            "last_activity_date": 1401722833,
            "question_id": 7781851,
            "score": 7,
            "tags": [
                "javascript",
                "google-chrome",
                "facebook-graph-api",
                "google-chrome-extension"
            ],
            "title": "Loading external javascript in google chrome extension"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I'm not entirely sure I know what you're asking about, but you can use string functions to create the actual ID that you're looking for.</p>\n\n<pre><code>var base = \"common\";\nvar num = 3;\n\nvar o = document.getElementById(base + num);  // will find id=\"common3\"\n</code></pre>\n\n<p>If you don't know the actual ID, then you can't look up the object with getElementById, you'd have to find it some other way (by class name, by tag type, by attribute,  by parent, by child, etc...).</p>\n\n<p>Now that you've finally given us some of the HTML, you could use this plain JS to find all form elements that have an ID that starts with \"poll-\":</p>\n\n<pre><code>// get a list of all form objects that have the right type of ID\nfunction findPollForms() {\n    var list = getElementsByTagName(\"form\");\n    var results = [];\n    for (var i = 0; i &lt; list.length; i++) {\n        var id = list[i].id;\n        if (id &amp;&amp; id.search(/^poll-/) != -1) {\n            results.push(list[i]);\n        }\n    }\n    return(results);\n}\n\n// return the ID of the first form object that has the right type of ID\nfunction findFirstPollFormID() {\n    var list = getElementsByTagName(\"form\");\n    var results = [];\n    for (var i = 0; i &lt; list.length; i++) {\n        var id = list[i].id;\n        if (id &amp;&amp; id.search(/^poll-/) != -1) {\n            return(id);\n        }\n    }\n    return(null);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You'll probably have to either give it a constant class and call <code>getElementsByClassName</code>, or maybe just use <code>getElementsByTagName</code>, and loop through your results, checking the name.</p>\n\n<p>I'd suggest looking at your underlying problem and figure out a way where you can know the ID in advance.</p>\n\n<p>Maybe if you posted a little more about why you're getting this, we could find a better alternative.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You use the <code>id</code> property to the get the id, then the <code>substr</code> method to remove the first part of it, then optionally <code>parseInt</code> to turn it into a number:</p>\n\n<pre><code>var id = theElement.id.substr(5);\n</code></pre>\n\n<p>or:</p>\n\n<pre><code>var id = parseInt(theElement.id.substr(5));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Given that what you want is to determine the full id of the element based upon just the prefix, you're going to have to do a search of the entire DOM (or at least, a search of an entire subtree if you know of some element that is always guaranteed to contain your target element).  You can do this with something like:</p>\n\n<pre><code>function findChildWithIdLike(node, prefix) {\n    if (node &amp;&amp; node.id &amp;&amp; node.id.indexOf(prefix) == 0) {\n        //match found\n        return node;\n    }\n\n    //no match, check child nodes\n    for (var index = 0; index &lt; node.childNodes.length; index++) {\n        var child = node.childNodes[index];\n        var childResult = findChildWithIdLike(child, prefix);\n        if (childResult) {\n            return childResult;\n        }\n    }\n};\n</code></pre>\n\n<p>Here is an example:  <a href=\"http://jsfiddle.net/xwqKh/\" rel=\"nofollow\">http://jsfiddle.net/xwqKh/</a></p>\n\n<p>Be aware that dynamic element ids like the ones you are working with are typically used to guarantee uniqueness of element ids on a single page.  Meaning that it is likely that there are multiple elements that share the same prefix.  Probably you want to find them all.  </p>\n\n<p>If you want to find all of the elements that have a given prefix, instead of just the first one, you can use something like what is demonstrated here:  <a href=\"http://jsfiddle.net/xwqKh/1/\" rel=\"nofollow\">http://jsfiddle.net/xwqKh/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try this.</p>\n\n<pre><code>function getElementsByIdStartsWith(container, selectorTag, prefix) {\n    var items = [];\n    var myPosts = document.getElementById(container).getElementsByTagName(selectorTag);\n    for (var i = 0; i &lt; myPosts.length; i++) {\n        //omitting undefined null check for brevity\n        if (myPosts[i].id.lastIndexOf(prefix, 0) === 0) {\n            items.push(myPosts[i]);\n        }\n    }\n    return items;\n}\n</code></pre>\n\n<p>Sample HTML Markup.</p>\n\n<pre><code>&lt;div id=\"posts\"&gt;\n    &lt;div id=\"post-1\"&gt;post 1&lt;/div&gt;\n    &lt;div id=\"post-12\"&gt;post 12&lt;/div&gt;\n    &lt;div id=\"post-123\"&gt;post 123&lt;/div&gt;\n    &lt;div id=\"pst-123\"&gt;post 123&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Call it like</p>\n\n<pre><code>var postedOnes = getElementsByIdStartsWith(\"posts\", \"div\", \"post-\");\n</code></pre>\n\n<p>Demo here: <a href=\"http://jsfiddle.net/naveen/P4cFu/\">http://jsfiddle.net/naveen/P4cFu/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can use the <a href=\"http://caniuse.com/queryselector\" rel=\"nofollow\">querySelector</a> for that:</p>\n\n<pre><code>document.querySelector('[id^=\"poll-\"]').id;\n</code></pre>\n\n<h2><a href=\"http://jsfiddle.net/hkv8D/\" rel=\"nofollow\">jsfiddle</a></h2>\n",
                    "is_accepted": true,
                    "score": 3
                }
            ],
            "body": "<p>I need to get the ID of an element but the value is dynamic with only the beginning of it is the same always. </p>\n\n<p>Heres a snippet of the code.</p>\n\n<pre><code>&lt;form class=\"form-poll\" id=\"poll-1225962377536\" action=\"/cs/Satellite\" target=\"_blank\"&gt;\n</code></pre>\n\n<p>The ID always starts with 'post-' then the numbers are dynamic.</p>\n\n<p>How can I get the ID using just JavaScript and not jQuery?</p>\n",
            "last_activity_date": 1403131785,
            "question_id": 6991494,
            "score": 7,
            "tags": [
                "javascript",
                "regex",
                "getelementbyid"
            ],
            "title": "Javascript getElementById base on partial string"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>jQuery is your best bet, <a href=\"https://plugins.jquery.com/icheck/\" rel=\"nofollow\">this is a checkbox plugin for example</a>, but there are hundreds of them so something else may suit you better. Just google '<a href=\"http://google.com?q=jquery%20custom%20checkbox\" rel=\"nofollow\">jquery custom checkbox</a>'.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There is a CSS trick that actually works by hiding the checkbox (or radio), defining a label (which in all relevant browsers will turn the checkbox on/off) that will be the visual representation, and using the <code>:checked</code> and <code>+</code> selectors.</p>\n\n<p>This is just a simple example:</p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;div class=\"foscheck\"&gt;\n    &lt;input type=\"checkbox\" id=\"fos1\" /&gt;\n    &lt;label for=\"fos1\"&gt;&lt;/label&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>CSS</strong></p>\n\n<pre><code>.foscheck input { display: none; }\n.foscheck label { display: block; width: 20px; height: 20px; background: red; }\n.foscheck input:checked + label { background: blue; }\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/f5buA/\" rel=\"nofollow\">jsFiddle Demo</a></p>\n\n<p><strong>Downsides:</strong> the <code>:checked</code> selector unfortunately <a href=\"http://www.quirksmode.org/css/contents.html#CSS3\" rel=\"nofollow\">does not work on IE</a>, only from IE9. You can apply a Javascript fallback only for IE through conditional comments though.</p>\n\n<p><strong>Note:</strong> For accessibility, you should have some text describing the checkbox in the <code>label</code>, I just wanted to illustrate the effect.</p>\n",
                    "is_accepted": true,
                    "score": 9
                }
            ],
            "body": "<p>Hello i am trying to create  a custom checkbox for my website like the image link provided. What would be the best way to go around doing this?\nMany thanks.</p>\n\n<p><img src=\"http://i.stack.imgur.com/JAJm4.png\" alt=\"Custom checkboxes\"></p>\n",
            "last_activity_date": 1393675868,
            "question_id": 6491962,
            "score": 7,
            "tags": [
                "javascript",
                "html",
                "css",
                "forms",
                "checkbox"
            ],
            "title": "Custom Checkbox"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Type into adress-bar:</p>\n\n<pre><code>javascript:alert(document.cookie)\n</code></pre>\n\n<p>to see the cookies that are currently readable by javascript.</p>\n\n<p>Regarding to the  read/write of session-cookies:<br>\nWhy do you need to do it using javascript? usually session-cookies are needed to have an relation to serverside stored data, so you need to manage the cookies from serverside, no matter what browser there may be.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Cookies set with the <code>HTTPOnly</code> attribute will not be visible to Javascript (e.g. via the <code>document.cookie</code> accessor). In IE8, 9, and 10, hit F12 to open the Developer Tools. Click Cache > View Cookie Information to see persistent and session cookies that apply to the current domain.</p>\n\n<p>This feature is not present in the IE11 version of the tools, which would mean that your choices are 1> Watch outbound Cookie headers in Fiddler or on the Network tab, or 2> Write a plugin that calls the <code>InternetGetCookieEx</code> API with the appropriate flag to include <code>HTTPOnly</code> cookies.</p>\n",
                    "is_accepted": true,
                    "score": 17
                }
            ],
            "body": "<p>I am able to see session cookies in Firefox 3.6 by going to </p>\n\n<blockquote>\n  <p>Tools->Options->Privacy->Remove Individual Cookies</p>\n</blockquote>\n\n<p>How do I see those same session cookies in IE (6/7/8)?</p>\n\n<blockquote>\n  <p>Tools->Internet Options->Browsing\n  history Settings->View files</p>\n</blockquote>\n\n<p>only contains persistent cookies</p>\n\n<p>Also how do I access them programmatically? In Firefox I use the <code>nsICookieManager</code> interface to read the session cookies, does IE contain an equivalent interface?</p>\n",
            "last_activity_date": 1417200234,
            "question_id": 6051811,
            "score": 7,
            "tags": [
                "javascript",
                "internet-explorer",
                "session-cookies"
            ],
            "title": "How do you view session cookies in Internet Explorer?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>you can simply make a SPAN tag for selecting some part of the text, for example:</p>\n\n<pre><code>Some &lt;span style=\"color:#FF3333\"&gt;text&lt;/span&gt; here\n</code></pre>\n\n<p>Wich will make the word text look in red</p>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>No, you can't do this in a textarea or text input. Any CSS text-related property will affect the whole text within the the textarea/input. You'll need an editable element or document to achieve syntax highlighting. Example (works in all recent browsers; the last major browser not to support <code>contenteditable</code> was Firefox 2.0):</p>\n\n<pre><code>&lt;code contenteditable=\"true\"&gt;\n    &lt;span style=\"color: blue\"&gt;var&lt;/span&gt; foo = &lt;span style=\"color: green\"&gt;\"bar\"&lt;/span&gt;;\n&lt;/code&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>This can actually be done by using styling inside of the tag, this is a reference from one of my websites where i have done this  </p>\n\n<pre><code>&lt;input style=\"border-radius: 5px; background-color: #000000; color: #ff0000; border-color:\n blue;\" class=\"form-control\" name=\"firstname\" placeholder=\"What you were looking for?\"\n type=\"text\"\n required autofocus /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'd like to set text in a textarea or text input using different colors (one or the other is fine, I don't need both).  Think of something like simple syntax highlighting. So, let's say I have some keywords defined.  I'd like those words to be colored a different color as the user types into the textarea or text input</p>\n\n<p>I understand this needs to be some combination of CSS, Javascript, and maybe some pixie dust.  I wondering which direction I need to dig into to find out how this can be done.</p>\n\n<p>Thank you</p>\n",
            "last_activity_date": 1396175276,
            "question_id": 4845813,
            "score": 7,
            "tags": [
                "javascript",
                "html",
                "css",
                "html5",
                "css3"
            ],
            "title": "Multicolor Text Highlighting in a Textarea or Text Input"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>As objects are associative arrays in javascript you can access the 'name' field as <code>obj['name']</code> or <code>obj[fieldName]</code> where <code>fieldName = 'name'</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In Javascript, <code>obj.name</code> is equivalent to <code>obj['name']</code>, which adds the necessary indirection.</p>\n\n<p>In your example:</p>\n\n<pre><code>var fieldName = 'name'\nvar obj = {\n  name: 'js',\n  age: 20\n};\nvar value = obj[fieldName]; // 'js'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>It's quite simple, to access an object's value via a variable, you use square brackets:</p>\n\n<pre><code>var property = 'name';\nvar obj = {name: 'js'};\nalert(obj[property]); // pops 'js'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can access the properties of javascript object using the index i.e.</p>\n\n<pre><code>var obj = {\n  name: 'js',\n  age: 20\n};\n\nvar isSame = (obj[\"name\"] == obj.name)\nalert(isSame);\n\nvar nameIndex = \"name\"; // Now you can use nameIndex as an indexor of obj to get the value of property name.\nisSame = (obj[nameIndex] == obj.name)\n</code></pre>\n\n<p>Check example@ : <a href=\"http://www.jsfiddle.net/W8EAr/\">http://www.jsfiddle.net/W8EAr/</a></p>\n",
                    "is_accepted": true,
                    "score": 19
                }
            ],
            "body": "<p>I have a js object like:</p>\n\n<pre><code>obj = {\n  name: 'js',\n  age: 20\n};\n</code></pre>\n\n<p>now i want to access name field of obj, but i can only get string 'name', so how to convert 'name' to obj's field name, then to get result like obj.name.</p>\n\n<p>Thank you in advance.</p>\n",
            "last_activity_date": 1296364078,
            "question_id": 4841254,
            "score": 7,
            "tags": [
                "javascript"
            ],
            "title": "How to convert string as object&#39;s field name in javascript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You were almost there :-) This should work:</p>\n\n<pre><code>spark-dev.js: ${modules}\n    cat &gt; $@ $^\n</code></pre>\n\n<p>Background: The function of <code>cat</code> is to (try to) open all the files listed on its command line, and dump the contents to stdout. The <code>&gt; $@</code> syntax is understood by the shell to mean \"create the file <code>$@</code>, and connect this command's stdout to it\", so now we end up with the contents of <code>$^</code> combined together into <code>$@</code>.</p>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>I am trying to write a basic makefile that combines multiple js files into a single one and then does the same but compresses them.</p>\n\n<p>So far I have this one that can make the compressed version fine.</p>\n\n<pre><code># Set the source directory\nsrcdir = src/\n\n# Create the list of modules\nmodules =   ${srcdir}core.js\\\n            ${srcdir}sizzle.js\\\n            ${srcdir}json2.js\\\n            ${srcdir}ajax.js\\\n            ${srcdir}attribute.js\\\n            ${srcdir}content.js\\\n            ${srcdir}cookie.js\\\n            ${srcdir}css.js\\\n            ${srcdir}event.js\\\n            ${srcdir}json.js\\\n            ${srcdir}location.js\\\n            ${srcdir}opacity.js\\\n            ${srcdir}ready.js\\\n            ${srcdir}size.js\\\n            ${srcdir}init.js\n\n# Compress all of the modules into spark.js\nspark.js: ${modules}\n    java -jar yuicompressor.jar -o $@ $^\n</code></pre>\n\n<p>Does anyone know how I would go about adding an uncompressed version called spark-dev.js? I have been trying to use cat but I didn't get very far. This is my first makefile I have ever written.</p>\n\n<p><strong>EDIT</strong>\nI tried this code with cat</p>\n\n<pre><code>spark-dev.js: ${modules}\n    cat $@ $^\n</code></pre>\n",
            "last_activity_date": 1292022185,
            "question_id": 4413903,
            "score": 7,
            "tags": [
                "javascript",
                "build",
                "makefile",
                "make",
                "compression"
            ],
            "title": "Makefile to combine js files and make a compressed version"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>It looks like you have bumped into the <a href=\"http://en.wikipedia.org/wiki/Same_origin_policy\">same origin policy</a>. You have to use a relative path, otherwise most browsers will simply return an empty <code>responseText</code>.</p>\n\n<p>The following Stack Overflow post is probably also related to your problem: </p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/1941340/\">Empty responseText from XMLHttpRequest</a>.</li>\n</ul>\n\n<p>As one possible workaround, you could set up a very simple <a href=\"http://en.wikipedia.org/wiki/Reverse_proxy\">reverse proxy</a> (with <a href=\"http://httpd.apache.org/docs/2.0/mod/mod_proxy.html\">mod_proxy</a> if you are using Apache). This would allow you to use relative paths in your AJAX request, while the HTTP server would be acting as a proxy to any \"remote\" location. </p>\n\n<p>The fundamental configuration directive to set up a reverse proxy in mod_proxy is the ProxyPass. You would typically use it as follows:</p>\n\n<pre><code>ProxyPass     /web-services/     http://third-party.com/web-services/\n</code></pre>\n\n<p>In this case, the browser would be requesting <code>/web-services/service.xml</code> but the server would serve this by acting as a proxy to <code>http://third-party.com/web-services/service.xml</code>. </p>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>I am trying to hit a third party URL to get the XML response and to show the reposne into my webpage.\nI get a proper response with status as 200 and readystate as 4 in IE and Safari browsers.\nBut In FF3.5 and Crome i get XMLHTTPRequest status as 0 and reponseText comes as a blank string. I tried many options writing the normal XMLHTTPRequest Ajax code as well as using Prototype 1.5 version js file for this ajax request, but still the status and reponseText in FF 3.5 remains the same as 0 and blank string. </p>\n\n<p>Any help how to resolve this issue or what exactly is causing this issue would be greatly appreciated. \nI had also tried to execute my code locally as well as deploying to webserver still the repsonse in FF is same.</p>\n\n<p>Below is my code snippet</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"prototype_ajax.js\"&gt;&lt;/script&gt;\n\n&lt;script type=\"text/javascript\" language=\"javascript\"&gt;\n\nnew Ajax.Request(\"I place my URL Here\", {\n    method: 'get',\n    onSuccess : function(transport){\n\n       var resultDoc = transport.responseText;\n       var rootObj = loadXML(resultDoc);\n\n    },\n    onFailure : function(transport){\n       alert(' On Failure '+transport)\n\n    }\n});\n\nfunction loadXML(xmlFile) {\n   var xmlDocElement =null;\n   var xmlDoc = null;\n\n   if (window.ActiveXObject) {\n     try {\n        // code for IE\n        xmlDoc=new ActiveXObject(\"Microsoft.XMLDOM\");\n        xmlDoc.async=false;\n        xmlDoc.loadXML(xmlFile);\n     } catch (e) {\n        alert(\"inside catch::\"+e.message);\n     }\n   } else {\n     // code for Mozilla, Firefox, Opera, etc.\n     parser=new DOMParser();\n     xmlDoc=parser.parseFromString(xmlFile,\"text/xml\");\n\n     //xmlDocElement=xmlDoc.documentElement;\n   }\n\n   //alert('loadXML value  '+xmlDoc)\n   return xmlDoc;\n}\n\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1272311279,
            "question_id": 1980880,
            "score": 7,
            "tags": [
                "javascript",
                "html",
                "ajax",
                "xmlhttprequest"
            ],
            "title": "XMLHTTPRequest.status returns 0 and responseText is blank in FireFox 3.5"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>function doMyStuff(jQueryJustForThisFn) {\n    // do jQuery stuff!\n    jQueryJustForThisFn('div').addClass('wow');\n}\n\nfunction check() {\n    return window.jQuery &amp;&amp; jQuery.fn &amp;&amp; /^1\\.[3-9]/.test(jQuery.fn.jquery);\n}\n\nif ( check() ) {\n\n    doMyStuff( jQuery );\n\n} else {\n\n    var script = document.createElement('script'),\n\n        timer = setInterval(function(){\n            if ( check() ) {\n                clearInterval(timer);\n                document.body.removeChild(script);\n                doMyStuff( jQuery.noConflict(true) );\n            }\n        }, 30);\n\n    script.src = 'http://ajax.googleapis.com/ajax/libs/jquery/1.3/jquery.min.js';\n\n    document.body.insertBefore( script, document.body.firstChild );\n\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>I don't know much about the noConflict, so i can only mostly answer 2.</p>\n\n<p>This is usually called lazy loading. See <a href=\"http://stackoverflow.com/questions/903012/waiting-on-lazy-loaded-objects-without-lockup/903087#903087\">my answer</a> on a similar question to do this</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I haven't tried to see how it behaves with a lower-version already loaded, but you may want to check out google.load</p>\n\n<p><a href=\"http://code.google.com/apis/ajaxlibs/documentation/#googleDotLoad\" rel=\"nofollow\">http://code.google.com/apis/ajaxlibs/documentation/#googleDotLoad</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For absolute safety, you may want to consider namespacing the version of jQuery you are using.  It's a bit ugly, but a regex against the codebase to define your own global attach point will ensure you break nothing.  If the code will be widely deployed across a variety of sites, this will be your best option and most ensure future compatibility.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>(function(){\n\n    var myBkl = {\n             jq: null,\n             loadScript: function(src) {\n                    if(window.jQuery &amp;&amp; window.jQuery.fn.jquery == '1.3.2'){\n                            return;\n                    }\n                    var s = document.createElement('script');\n                    s.setAttribute('src', src);\n                    s.setAttribute('type', 'text/javascript');\n                    document.getElementsByTagName('head')[0].appendChild(s); \n            },\n            whenLoaded: function(callback){\n                    if (typeof(window.jQuery) !== 'undefined' &amp;&amp; window.jQuery.fn.jquery == '1.3.2') { \n                            myBkl.jq = window.jQuery.noConflict(true);\n                            callback(myBkl.jq); \n                    } \n                    else {\n                            setTimeout((function() {myBkl.whenLoaded(callback); }),      \n100);\n                    } \n            },\n            init: function($){\n                    console.log($.fn.jquery);\n                    console.log(window.jQuery.fn.jquery);\n            }\n    };\n    myBkl.loadScript('http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.js');\n    myBkl.whenLoaded(myBkl.init);\n})();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm writing a little JavaScript tool for myself that I plan on making available to other people and it uses jQuery. My dream for this little utility is for people to be able to include a single <code>.js</code> file from a remote source and, when that file is loaded, have it check to see if jQuery has already been included and, if it has, make sure it's a recent enough version so as to be compatible with what my code needs to do.  Some pseudocode which may explain my issue more clearly (this code would appear at the top of the single <code>.js</code> file I mentioned earlier):</p>\n\n<pre><code>if jQuery is loaded {\n    if version is less than (say) 1.3 {\n        // load latest version of jQuery \n    }\n} else {\n    // load latest version of jQuery\n}\n\n// and do the jQuery.noConflict() \n// dance to avoid trampling any other libraries, etc. that the \n// user may be utilizing.\n\n// The rest of my code lives here, happy in the knowledge that it's running in\n// isolation from the rest of the JS that the page knows about.\n</code></pre>\n\n<p>My question, distilled into three friendly parts:</p>\n\n<ol>\n<li>Is it possible to load two separate versions of jQuery without them crapping all over each other?</li>\n<li>Can I stop the execution of my JS code while jQuery is loaded, then proceed?</li>\n<li>Is it possible to use noConflict() as I'm describing it? Or should I just call everything using jQuery() and not bother with it?</li>\n</ol>\n\n<p>The overarching idea here is that any old user could grab a small snippet of HTML and drop it into their site/blog/whatever and have it Just Work&trade;. And since many modern publishing platforms now ship with jQuery, I can't just quietly assume that it's not running and include it.</p>\n\n<p>Thanks for your time, and please let me know if any part of this isn't clear or if I can provide additional context/detail to make your providing a response easier.</p>\n",
            "last_activity_date": 1305776268,
            "question_id": 1973647,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "compatibility"
            ],
            "title": "Dynamically Including jQuery using JavaScript if it&#39;s not already present"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><a href=\"http://en.wikipedia.org/wiki/Unix%5Ftime\" rel=\"nofollow\">UNIX timestamp</a> (milliseconds since the January 1, 1970) would be my preferred choice.</p>\n\n<p>You can pass it around as an integer and use the JS <a href=\"http://www.w3schools.com/jsref/jsref%5Fsettime.asp\" rel=\"nofollow\">setTime()</a> method to make a JS Date object from it.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can split the date '-' as separator and use this constructor:</p>\n\n<pre><code>var d = new Date(Y, M - 1, D);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Given your clarification that you cannot change the format of the incoming date, you need something like this:</p>\n\n<pre><code>var dateParts = isoFormatDateString.split(\"-\");\nvar jsDate = new Date(dateParts[0], dateParts[1] - 1, dateParts[2].substr(0,2));\n</code></pre>\n\n<p>Original response:</p>\n\n<p>Is there a reason you can't get a timestamp instead of the date string? This would be done by something like:  </p>\n\n<pre><code> SELECT UNIX_TIMESTAMP(date) AS epoch_time FROM table;\n</code></pre>\n\n<p>Then get the epoch_time into JavaScript, and it's a simple matter of:</p>\n\n<pre><code>var myDate = new Date(epoch_time * 1000);\n</code></pre>\n\n<p>The multiplying by 1000 is because JavaScript takes milliseconds, and UNIX_TIMESTAMP gives seconds.</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Stumbled on this looking to do exactly what the OP wanted, and used jhurshman answer so I +1'ed it, but it is incomplete as it will use <code>00:00:00 GMT-0500 (CDT)</code> for the time part as it is not passed to the date object (var jsDate).</p>\n\n<p>In case anyone else is looking to create the full <code>Javascript</code> <a href=\"http://www.w3schools.com/jsref/jsref_obj_date.asp\" rel=\"nofollow\">date object</a></p>\n\n<p><strong>ex:</strong></p>\n\n<pre><code>Sat Mar 29 2014 23:24:28 GMT-0500 (CDT)\n</code></pre>\n\n<p>Based on a MySQL <a href=\"http://dev.mysql.com/doc/refman/5.5/en/datetime.html\" rel=\"nofollow\">DATETIME</a> format</p>\n\n<p><strong>ex:</strong></p>\n\n<pre><code>'9999-12-31 23:59:59'.\n</code></pre>\n\n<p>You will want to use the following:</p>\n\n<pre><code>var dateParts = isoFormatDateString.split(\"-\");\nvar jsDate = new Date(dateParts[0], dateParts[1] - 1, dateParts[2].substr(0, 2), dateParts[2].substr(3, 2), dateParts[2].substr(6, 2), dateParts[2].substr(9, 2));\n</code></pre>\n\n<p>It will return in the browsers current timezone as you are creating the date object, but I would do the timezone conversion on the backend in most cases.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Building onto Jhurisman's answer. If you would want to set the date's time as well use the following:</p>\n\n<pre><code>var dateParts = mysqlDate;\nvar timeParts = dateParts[2].substr(3).split(\":\");\n\nvar jsDate = new Date(\n                dateParts[0],\n                dateParts[1] - 1,\n                dateParts[2].substr(0,2),\n                timeParts[0],\n                timeParts[1],\n                timeParts[2]\n            );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>What would be the best way to convert a mysql date format date into a javascript Date object?</p>\n\n<p>mySQL date format is 'YYYY-MM-DD' (ISO Format).   </p>\n",
            "last_activity_date": 1416301229,
            "question_id": 1765803,
            "score": 7,
            "tags": [
                "javascript",
                "mysql",
                "date"
            ],
            "title": "Convert a mySQL date to Javascript date"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Try something like this</p>\n\n<pre><code>var d = new Date,\n    dformat = [d.getMonth()+1,\n               d.getDate(),\n               d.getFullYear()].join('/')+' '+\n              [d.getHours(),\n               d.getMinutes(),\n               d.getSeconds()].join(':');\n</code></pre>\n\n<p>If you want leading zero's for values &lt; 10, use this number extension</p>\n\n<pre><code>Number.prototype.padLeft = function(base,chr){\n    var  len = (String(base || 10).length - String(this).length)+1;\n    return len &gt; 0? new Array(len).join(chr || '0')+this : this;\n}\n// usage\n//=&gt; 3..padLeft() =&gt; '03'\n//=&gt; 3..padLeft(100,'-') =&gt; '--3' \n</code></pre>\n\n<p>Applied to the previous code:</p>\n\n<pre><code>var d = new Date,\n    dformat = [(d.getMonth()+1).padLeft(),\n               d.getDate().padLeft(),\n               d.getFullYear()].join('/') +' ' +\n              [d.getHours().padLeft(),\n               d.getMinutes().padLeft(),\n               d.getSeconds().padLeft()].join(':');\n//=&gt; dformat =&gt; '05/17/2012 10:52:21'\n</code></pre>\n\n<p>See this code in <a href=\"http://jsfiddle.net/KooiInc/mthdA/\" rel=\"nofollow\">jsfiddle</a></p>\n\n<p><a href=\"http://jsfiddle.net/KooiInc/0w246r3w/\" rel=\"nofollow\">See also</a></p>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<pre><code>var d = new Date();\n\nvar curr_date = d.getDate();\n\nvar curr_month = d.getMonth();\n\nvar curr_year = d.getFullYear();\n\ndocument.write(curr_date + \"-\" + curr_month + \"-\" + curr_year);\n</code></pre>\n\n<p>using this you can format date.</p>\n\n<p>you can change the appearance in the way you want then </p>\n\n<p>for more info you can visit <a href=\"http://www.webdevelopersnotes.com/tips/html/10_ways_to_format_time_and_date_using_javascript.php3\" rel=\"nofollow\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre>\n\nvar d = new Date();\n\n// calling the function\nformatDate(d,4);\n\n\nfunction formatDate(dateObj,format)\n{\n    var monthNames = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\n    var curr_date = dateObj.getDate();\n    var curr_month = dateObj.getMonth();\n    curr_month = curr_month + 1;\n    var curr_year = dateObj.getFullYear();\n    var curr_min = dateObj.getMinutes();\n    var curr_hr= dateObj.getHours();\n    var curr_sc= dateObj.getSeconds();\n    if(curr_month.toString().length == 1)\n    curr_month = '0' + curr_month;      \n    if(curr_date.toString().length == 1)\n    curr_date = '0' + curr_date;\n    if(curr_hr.toString().length == 1)\n    curr_hr = '0' + curr_hr;\n    if(curr_min.toString().length == 1)\n    curr_min = '0' + curr_min;\n\n    if(format ==1)//dd-mm-yyyy\n    {\n        return curr_date + \"-\"+curr_month+ \"-\"+curr_year;       \n    }\n    else if(format ==2)//yyyy-mm-dd\n    {\n        return curr_year + \"-\"+curr_month+ \"-\"+curr_date;       \n    }\n    else if(format ==3)//dd/mm/yyyy\n    {\n        return curr_date + \"/\"+curr_month+ \"/\"+curr_year;       \n    }\n    else if(format ==4)// MM/dd/yyyy HH:mm:ss\n    {\n        return curr_month+\"/\"+curr_date +\"/\"+curr_year+ \" \"+curr_hr+\":\"+curr_min+\":\"+curr_sc;       \n    }\n}\n\n</pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var d = new Date();\nalert(\n    (\"00\" + (d.getMonth() + 1)).slice(-2) + \"/\" + \n    (\"00\" + d.getDate()).slice(-2) + \"/\" + \n    d.getFullYear() + \" \" + \n    (\"00\" + d.getHours()).slice(-2) + \":\" + \n    (\"00\" + d.getMinutes()).slice(-2) + \":\" + \n    (\"00\" + d.getSeconds()).slice(-2)\n);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/1056728/formatting-a-date-in-javascript\">Formatting a date in javascript</a>  </p>\n</blockquote>\n\n\n\n<p>I know other possible formats in javascript date object but i did not get on how to format the date to <code>MM/dd/yyyy HH:mm:ss</code> format. </p>\n\n<p>Please let me know if you come across such problem.</p>\n",
            "last_activity_date": 1422256016,
            "question_id": 10632346,
            "score": 6,
            "tags": [
                "javascript",
                "date",
                "date-format"
            ],
            "title": "how to format a Date in MM/dd/yyyy HH:mm:ss format in javascript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Have you tried <a href=\"https://developer.mozilla.org/en/DOM/event.preventDefault\"><code>event.preventDefault()</code></a>?</p>\n\n<pre><code>this.canvas.addEventListener('mousewheel',function(event){\n    mouseController.wheel(event);\n    event.preventDefault();\n}, false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>this.canvas.addEventListener('mousewheel',function(event){\n    mouseController.wheel(event);\n    return false;\n}, false);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>This kind of cancellation seems to be ignored in newer Chrome >18 Browsers (and perhaps other WebKit based Browsers). To exclusively capture the event you must directly change the <code>onmousewheel</code> method of the element.</p>\n\n<pre><code>this.canvas.onmousewheel = function(ev){\n    //perform your own Event dispatching here\n    return false;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just adding, I know that canvas is only HTML5 so this is not needed, but just in case someone wants crossbrowser/oldbrowser compatibility, use this:</p>\n\n<pre><code>/* To attach the event: */\naddEvent(el, ev, func) {\n    if (el.addEventListener) {\n        el.addEventListener(ev, func, false);\n    } else if (el.attachEvent) {\n        el.attachEvent(\"on\" + ev, func);\n    } else {\n        el[\"on\"+ev] = func; // Note that this line does not stack events. You must write you own stacker if you don't want overwrite the last event added of the same type. Btw, if you are going to have only one function for each event this is perfectly fine.\n    }\n}\n\n/* To prevent the event: */\naddEvent(this.canvas, \"mousewheel\", function(event) {\n    if (!event) event = window.event;\n    event.returnValue = false;\n    if (event.preventDefault)event.preventDefault();\n    return false;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to prevent a mousewheel event captured by an element of the page to cause scrolling.</p>\n\n<p>I expected 'false' as last parameter to have the expected result, but using the mouse wheel over this \"canvas\" element still causes scrolling:</p>\n\n<pre><code>this.canvas.addEventListener('mousewheel',function(event){mouseController.wheel(event)}, false);\n</code></pre>\n\n<p>Outside of this \"canvas\" element, the scroll needs to happen. Inside, it must only trigger the .wheel() method.\nWhat am I doing wrong?</p>\n\n<p>Thanks!\nJ.</p>\n",
            "last_activity_date": 1416423001,
            "question_id": 10313142,
            "score": 6,
            "tags": [
                "javascript",
                "scroll",
                "mouse",
                "wheel"
            ],
            "title": "Javascript: Capture mouse wheel event and do not scroll the page?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>$('.click').click(function() {\n   $('img.class').fadeOut(300, function(){\n      $(this).attr('src','new_src.png').bind('onreadystatechange load', function(){\n         if (this.complete) $(this).fadeIn(300);\n      });\n   });\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                }
            ],
            "body": "<p>I am trying to do the following:</p>\n\n<p>On link click:</p>\n\n<p>1.) fade out an img</p>\n\n<p>2.) change the src of the now hidden image</p>\n\n<p>3.) when the img with the new src finishes loading, fade in</p>\n\n<p>Minimally, I'd like to see a smooth fade out of one image and a fade in of another (within the same img tag by changing the src)</p>\n\n<p>Eventually I'd like to:</p>\n\n<p>1.) fade out an img</p>\n\n<p>2.) show a animated gif \"loading image\"</p>\n\n<p>3.) change the src of the now hidden image</p>\n\n<p>4.) hide the animated gif \"loading image\"</p>\n\n<p>5.) when the img with the new src finishes loading, fade in</p>\n\n<p>Thanks.</p>\n\n<p>This is what I tried so far.  It seems to do a couple flashes but only after the src changes (prior to the fade out).  Strange behavior.</p>\n\n<pre><code>$(\"#Image\").fadeOut();\n$(\"#Image\").attr(\"src\", NEW_IMAGE_SRC);\n$(\"#Image\").fadeIn();\n</code></pre>\n\n<p><code>#Image</code> is an IMG tag</p>\n",
            "last_activity_date": 1361304030,
            "question_id": 9959926,
            "score": 6,
            "tags": [
                "javascript",
                "jquery",
                "jquery-animate",
                "jquery-load"
            ],
            "title": "Smooth image fade out, change src, and fade in with jquery"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>OK, let me explain your code:</p>\n\n<pre><code>var x, y;\nx = { 'blah': 'foo' };\ny = x;\nx = { 'bar': 'bas' };\n</code></pre>\n\n<p>So, you declare two variables, and then you assign an object value to the first variable:</p>\n\n<pre><code>x = { 'blah': 'foo' };\n</code></pre>\n\n<p>So, what happens here:</p>\n\n<ol>\n<li>The object literal - <code>{ ... }</code> - is evaluated, which results in the creation and initialization of a new native object.</li>\n<li>A <em>reference</em> to this object is assigned to the variable <code>x</code>.</li>\n</ol>\n\n<p>Next, this line</p>\n\n<pre><code>y = x;\n</code></pre>\n\n<p>merely copies <em>the reference</em> which is stored in <code>x</code> to the variable <code>y</code>. Now both variables store the same reference to the object. </p>\n\n<p>Finally, this line</p>\n\n<pre><code>x = { 'bar': 'bas' };\n</code></pre>\n\n<p>assigns a new value to the variable <code>x</code>. The object literal is evaluated which results in the creation/initialization of <em>another</em> object, and a reference to that object is stored in <code>x</code>. </p>\n\n<p>The variable <code>y</code>, however, still holds a reference to the first object. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In JavaScript, all objects are stored and passed 'by reference'.</p>\n\n<pre><code>var a = { v: 'a' }, b = { v: 'b' };\na=b;\nb.v='c';\n</code></pre>\n\n<p><code>a</code> and <code>b</code> will reference the same object; <code>a.v == 'c'</code> and <code>b.v == 'c'</code>.</p>\n\n<p>Primitive datatypes (<code>string</code>, <code>number</code>, <code>boolean</code>, <code>null</code>, and <code>undefined</code>) are immutable; they are passed by value.</p>\n\n<pre><code>var a = 'a', b = 'b';\na=b;\nb='c';\n</code></pre>\n\n<p>Since we're dealing with primitives, <code>a == 'b'</code> and <code>b == 'c'</code>.</p>\n\n<hr>\n\n<p>Pedants will tell you that JavaScript isn't pass-by-reference in a classical sense, or that it's a \"pure pass-by-value\" language, but I think that complicates things for practical purposes.  No, you can't directly modify an argument passed to a function as if it were a variable (which would be true if the language were true pass-by-reference), but you also don't receive a <em>copy</em> of an object passed as an argument (as you would if it were true pass-by-value).  For most purposes (from the standpoint of the language's user, you), objects passed to a function are references, since you can modify that object and it affects the caller's object.  See also the <a href=\"http://stackoverflow.com/q/518000/201952\">fantastic answers to this question</a>.</p>\n",
                    "is_accepted": true,
                    "score": 4
                }
            ],
            "body": "<p>Even as a somewhat seasoned JS dev I find myself constantly suprised at shallow vs. deep copies of objects.</p>\n\n<p>Are there any rules of thumb for when JavaScript values are copied by reference and not by value for the major object types? For example, I know string values are always copied by value not reference. </p>\n",
            "last_activity_date": 1327956260,
            "question_id": 9069120,
            "score": 6,
            "tags": [
                "javascript"
            ],
            "title": "Are there any rules of thumb for when JavaScript values are copied by reference and not by value?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The difference is that ==, &lt;=, >= and  != will do type coercion &mdash; for example, force a string to be evaluated as a number.  ===, &lt;==, >==, and !== will not do type coercion.  They will compare a string to a number, and since the string \"1\" is not the same as the numeric value 1, the result is false.</p>\n\n<p>Reference is here:<br>\n<a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/Comparison_Operators\">https://developer.mozilla.org/en/JavaScript/Reference/Operators/Comparison_Operators</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>The equality operator will attempt to make the data types the same before making the comparison.  On the other hand, the identity operator requires both data types to be the same as a prerequisite.</p>\n\n<p>There are quite a few other posts out there similar to this questions.  See:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/80646/how-do-the-equality-double-equals-and-identity-triple-equals-compariso\">How do the PHP equality (== double equals) and identity (=== triple equals) comparison operators differ?</a> (has a nice comparison chart)<br />\n<a href=\"http://stackoverflow.com/questions/359494/javascript-vs-does-it-matter-which-equal-operator-i-use\">Does it matter which equals operator (== vs ===) I use in JavaScript comparisons?</a></p>\n\n<p>In practice, the identity operator comes in really handy when you want to be certain that a boolean value is true or false since...</p>\n\n<pre><code>1 == true     =&gt; true\ntrue == true  =&gt; true\n1 === true    =&gt; false\ntrue === true =&gt; true\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                }
            ],
            "body": "<p>I've been trying to understand the difference between JavaScript's comparison operators: identity and equality. From what I've read, if you check the equality of two objects using ==, JavaScript will try to figure out if they are the same type and, if not, try to get them to that same type. However, === doesn't behave in the same manner. So as an example:</p>\n\n<pre><code>var n = \"1\";\nconsole.log(n==1);        // outputs true\nconsole.log(n===1);       // outputs false\n</code></pre>\n\n<p>So what is the difference between these \"identity\" operators and the regular equality operators? What is the benefit of having both? </p>\n\n<p>Are there differences in performance? I would think that the identity operator would be faster since it doesn't do conversion.</p>\n\n<p>Also, how do these differ when it comes to more complex objects, like arrays? Most importantly, what do conventions say about when one should be used over the other, why?</p>\n",
            "last_activity_date": 1398901898,
            "question_id": 5447024,
            "score": 6,
            "tags": [
                "javascript",
                "operators",
                "comparison-operators",
                "equivalence"
            ],
            "title": "JavaScript comparison operators: Identity vs. Equality"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You're out of luck, as far as I know. You can talk between them using the hash-bang in the URL though, see <a href=\"http://softwareas.com/cross-domain-communication-with-iframes\" rel=\"nofollow\">this</a> for a decent discussion.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is a way.  When the page in the iframe loads, have it do the following</p>\n\n<pre><code>parent.childGetElementById = function (id) {return document.getElementById(id);}\nparent.childLoaded();\n</code></pre>\n\n<p>This will make a function in the global scope of the parent page (that contains the iframe). Then in the parent, just have the following</p>\n\n<pre><code>function childLoaded() {var dom = childGetElementById('someid');}\n</code></pre>\n\n<p>This is along as you have control of the page your loading into the iframe... if you do not, you are out of luck.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>This is a browser security measure, otherwise everybody would be wrapping your banking websites and skimming off your passwords when you logged in.</p>\n\n<p>You can talk from the iframe to the parent, but not back into an iframe again.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Here is the deal:</p>\n\n<p>domain.com/page -- Parent page (document.domain=domain.com) contains an iframe\nsub.domain.com/page -- Child iframe (document.domain=not set) is on a subdomain</p>\n\n<p>Is there any way to access the DOM of that iframe or am I out of luck?</p>\n\n<p>Does same origin policy block me from forcing a document.domain on an iframe contained within a parent page? I suppose that would defeat the purpose of the same origin policy... If that is the case, is there any workaround to access the DOM of the iframe on the rendered parent page?</p>\n",
            "last_activity_date": 1299162289,
            "question_id": 5181911,
            "score": 6,
            "tags": [
                "javascript",
                "iframe",
                "same-origin-policy"
            ],
            "title": "Access child iFrame DOM from parent page"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You could:</p>\n\n<ul>\n<li>Give it (\"it\" being your text) a onclick event</li>\n<li>First click sets a variable to the current time</li>\n<li>Second click checks to see if that variable is x time from the current, current time (so a double click over, for example, 500ms, doesn't register as a double click)</li>\n<li>If it <em>is</em> a double click, do something to the page like adding hidden HTML, doing document.focus(). You'll have to experiment with these as some might cause unwanted scrolling.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Hope this is what you are looking for.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction clearSelection() {\nvar sel ;\nif(document.selection &amp;&amp; document.selection.empty){\ndocument.selection.empty() ;\n} else if(window.getSelection) {\nsel=window.getSelection();\nif(sel &amp;&amp; sel.removeAllRanges)\nsel.removeAllRanges() ;\n}\n}\n&lt;/script&gt;\n\n&lt;div ondblclick=\"clearSelection()\"&gt;Some text goes here.&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could use this CSS to simply hide the selection color (not supported by IE):</p>\n\n<pre><code>#id::-moz-selection {\nbackground: transparent;\n} \n\n#id::selection {\nbackground: transparent;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In (Mozilla, Firefox, Camino, Safari, Google Chrome) you can use this:</p>\n\n<pre><code>div.noSelect {\n  -moz-user-select: none; /* mozilla browsers */\n  -khtml-user-select: none; /* webkit browsers */\n}\n</code></pre>\n\n<p>For IE there is no CSS option, but you can capture the ondragstart event, and return false;</p>\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>I am building a menu in HTML/CSS/JS and I need a way to prevent the text in the menu from being highlighted when double-clicked on. I need a way to pass the id's of several divs into a function and have highlighting turned off within them. </p>\n\n<p>So when the user accidentally (or on purpose) double clicks on the menu, the menu shows its sub-elements but its text does not highlight.</p>\n\n<p>There are a number of scripts out there floating around on the web, but many seem outdated. What's the best way?</p>\n",
            "last_activity_date": 1300305388,
            "question_id": 139157,
            "score": 6,
            "tags": [
                "javascript",
                "html",
                "css"
            ],
            "title": "What is the best way to prevent highlighting of text when clicking on its containing div in javascript?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<pre><code>Array1 = Array1.filter(function(val) {\n  return Array2.indexOf(val) == -1;\n});\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\">filter() reference here</a></p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\">indexOf() reference here</a></p>\n",
                    "is_accepted": true,
                    "score": 21
                }
            ],
            "body": "<p>It is working well is there any other better way to remove duplicates from one array if it has elements of another array ?.</p>\n\n<pre><code>&lt;script&gt;\nvar Array1 = new Array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\");\nvar Array2 = new Array(\"c\",\"e\");\n\nfor (var i = 0; i&lt;Array2.length; i++) {\n    var arrlen = Array1.length;\n    for (var j = 0; j&lt;arrlen; j++) {\n        if (Array2[i] == Array1[j]) {\n            Array1 = Array1.slice(0, j).concat(Array1.slice(j+1, arrlen));\n        }\n    }\n}\nalert(Array1);\n\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1386636720,
            "question_id": 14930516,
            "score": 5,
            "tags": [
                "javascript"
            ],
            "title": "Compare two Javascript Arrays and remove Duplicates"
        }
    ]
}
