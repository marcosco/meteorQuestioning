{
    "items": [
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>There's no way to prevent people from seeing your source code. There are ways to <a href=\"http://www.javascriptobfuscator.com/\">obfuscate</a> it and make it difficult to reuse, but there's no way to hide it. Also note that obfuscation makes it hard to maintain as well.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>You can use an obfuscator, if you like. It makes the source human-unreadable.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can use an obfuscator for your code which will make site loadable but not readable to the other developers - they will not have an easy way to modify and adapt it.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>All client-side code can be copied. If you're a web designer, your best bet is to just brand yourself well and keep innovating so that clients are more interested in the originator than the imitator.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>If people really want to get access to your source code they can do that fairly easily.</p>\n\n<p>It is possible to slow people down to a limited degree by obfuscating code.</p>\n\n<p>See:</p>\n\n<ul>\n<li><a href=\"http://code.google.com/p/minify/\">http://code.google.com/p/minify/</a></li>\n<li><a href=\"http://refresh-sf.com/yui/\">http://refresh-sf.com/yui/</a></li>\n<li><a href=\"http://ajaxian.com/archives/utility-javascript-obfuscator\">http://ajaxian.com/archives/utility-javascript-obfuscator</a></li>\n</ul>\n\n<p>Maintaining obfuscated code is difficult. What you want to do is obfuscate it before deployment so that you can test and debug with the normal version. Debugging problems on a live site can be made a lot more difficult by the obfuscation.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>I use the <a href=\"http://closure-compiler.appspot.com/home\">Google Closure compiler</a> for javascript. This is to reduce download size and remove redundant code but it has the added benefit of making the code much harder to read. </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I have always envied people who sell JavaScript products <em>because their work is always out in the open</em>. I think this is a terrific detergent for anybody who has something to lose, i.e. businesses, commercial web sites, and such. The day Google (or another big search engine) offers the possibility to search in pages' source code, you can start detecting copyright infrigements within minutes.</p>\n\n<p>And even if that search engine option never comes up - it's still possible to find out, very quickly and effortlessly, whether a site uses stolen Javascript. </p>\n\n<p>On the other hand, a minificator used by the person <em>stealing the code</em> would make this much, much harder. So some minification / obfuscation, as suggested in the other answers, is probably a good idea nevertheless.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Just write crappy code. It won't prevent copying, but it will take away the motivation to do so.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>By far the most widespread method is to write so bad code that no one in their right mind would want to copy it, it's employed by approx 99% of web sites.</p>\n\n<p>Is it actually a problem to you if someone snatch a piece of your code?</p>\n\n<p>Sure it is a problem if someone the steal the whole site/application, but the only way you can really deal with that anyway is through standard legal means.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Scare them by using copyright marks in your code and a good lawyer. If they believe that you will sue them maybe the will steal form someone else.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a lot of customized javascript and layout design, and I want to prevent people from using those. Is there any practical way to do this, or do I basically just have to be happy my php code does not show? I want to at least make it difficult to copy my site.</p>\n",
            "last_activity_date": 1417630177,
            "question_id": 2562775,
            "score": 12,
            "tags": [
                "javascript",
                "html",
                "css"
            ],
            "title": "What are some good ways to prevent people from copying my source code?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><a href=\"http://ejohn.org/blog/bringing-the-browser-to-the-server/\" rel=\"nofollow\">Bringing the Browser to the Server</a> by <a href=\"http://ejohn.org/\" rel=\"nofollow\">John Resig</a> might be useful.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You'll need to reverse-engineer what the Javascript is doing. Does it fire off an AJAX request to populate the <code>&lt;div&gt;</code>? If so, it should be pretty easy to sniff the request using <a href=\"http://getfirebug.com/\">Firebug</a> and then duplicate it with <a href=\"http://search.cpan.org/~gaas/libwww-perl-5.834/lib/LWP/UserAgent.pm\">LWP::UserAgent</a> or <a href=\"http://search.cpan.org/~petdance/WWW-Mechanize/lib/WWW/Mechanize.pm\">WWW::Mechanize</a> to get the information.</p>\n\n<p>If the Javascript is just doing pure DOM manipulation, then that means the data must exist somewhere else in the page or the Javascript already. So figure out where it's coming from and grab it.</p>\n\n<p>Finally, if none of those options are adequate, you may need to just use a real browser to do it. There are a few options for automating browser behavior, like <a href=\"http://search.cpan.org/~corion/WWW-Mechanize-Firefox/lib/WWW/Mechanize/Firefox.pm\">WWW::Mechanize::Firefox</a> or <a href=\"http://search.cpan.org/~abeltje/Win32-IE-Mechanize/lib/Win32/IE/Mechanize.pm\">Win32::IE::Mechanize</a>.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>As the content of your page is generated by some Javascript, you need the ability to :</p>\n\n<ul>\n<li>Execute some Javascript code\n<ul>\n<li>Even, possibly, some complex JS code, doing Ajax requests and all that ?</li>\n</ul></li>\n<li>And do it with an engine that supports the functions/methods that are present in a browser <em>(like DOM manipulations)</em></li>\n</ul>\n\n<p><br>\nA solution could be to actually really start a browser to navigate to that page, and, then, parse the page that's loaded by it, to extract the information ?</p>\n\n<p>I've never used this for grabbing, but the <a href=\"http://seleniumhq.org/\" rel=\"nofollow\">Selenium suite</a> might help, here : using Selenium RC, you can start a real browser, and pilot it -- then, you have functions to get data from it.</p>\n\n<p>It's not quite fast, and it's pretty heavy <em>(it has to start a browser !)</em>, but it works quite well : you'll be using Firefox, for example, to navigate to your page -- which means a real Javascript engine, that's used every day by a lot of people ;-)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This might be what your looking for (in PHP):</p>\n\n<pre><code>$url = 'http://downloadcenter.trendmicro.com/ajx/pattern_result.php';\n\n$ch = curl_init();\ncurl_setopt ($ch, CURLOPT_SSL_VERIFYPEER, FALSE);\ncurl_setopt ($ch, CURLOPT_URL, $url);\ncurl_setopt ($ch, CURLOPT_POST, 1);\ncurl_setopt ($ch, CURLOPT_POSTFIELDS, 'q=patresult_page&amp;reg=NABU');\ncurl_setopt ($ch, CURLOPT_RETURNTRANSFER, 1);\n$content = curl_exec($ch);\ncurl_close($ch);\n\necho $content;\nexit;\n</code></pre>\n\n<p>once you get the content you can use something like: <a href=\"http://code.google.com/p/phpquery/\" rel=\"nofollow\">http://code.google.com/p/phpquery/</a> to parse the results you need or a similar perl equivalent??? </p>\n\n<p>And/or do the parsing yourself.</p>\n\n<p>FYI: all I did was use firebug to inspect the requests and recreated it with PHP/CURL...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>to work with the dynamically created HTML you can use the FireFox <a href=\"http://groups.csail.mit.edu/uid/chickenfoot/\" rel=\"nofollow\">Chickenfoot</a> plugin.\nOr if you need something that works from a command line script use bindings to Perl. I have done this with Python before.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>There is a website I am trying to pull information from in Perl, however the section of the page I need is being generated using javascript so all you see in the source is:</p>\n\n<pre><code>&lt;div id=\"results\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>I need to somehow pull out the contents of that div and save it to a file using Perl/proxies/whatever. e.g. the information I want to save would be</p>\n\n<pre><code>document.getElementById('results').innerHTML;\n</code></pre>\n\n<p>I am not sure if this is possible or if anyone had any ideas or a way to do this.\nI was using a lynx source dump for other pages but since I cant straight forward screen scrape this page I came here to ask about it!</p>\n\n<p>If anyone is interested, the page is <a href=\"http://downloadcenter.trendmicro.com/index.php?clk=left_nav&amp;clkval=pattern_file&amp;regs=NABU\" rel=\"nofollow\">http://downloadcenter.trendmicro.com/index.php?clk=left_nav&amp;clkval=pattern_file&amp;regs=NABU</a> and the info I am trying to get is the row about the ConsumerOPR</p>\n",
            "last_activity_date": 1271741376,
            "question_id": 2655034,
            "score": 10,
            "tags": [
                "javascript",
                "html",
                "perl",
                "screen-scraping"
            ],
            "title": "How can I use Perl to grab text from a web page that is dynamically generated with JavaScript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You could calculate this manually,</p>\n\n<p>i.e.:</p>\n\n<pre><code>function GetWidth(newHeight,orginalWidth,originalHeight)\n{\nif(currentHeight == 0)return newHeight;\nvar aspectRatio = currentWidth / currentHeight;\nreturn newHeight * aspectRatio;\n}\n</code></pre>\n\n<p>Make sure you use the ORIGINAL values for the image otherwise it will degrade over time.</p>\n\n<p>EDIT: example jQuery version (not tested)</p>\n\n<pre><code>jQuery.fn.resizeHeightMaintainRatio = function(newHeight){\n    var aspectRatio = $(this).data('aspectRatio');\n    if (aspectRatio == undefined) {\n        aspectRatio = $(this).width() / $(this).height();\n        $(this).data('aspectRatio', aspectRatio);\n    }\n    $(this).height(newHeight); \n    $(this).width(parseInt(newHeight * aspectRatio));\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Use <a href=\"http://docs.jquery.com/UI/Resizable\">JQueryUI Resizeable</a> </p>\n\n<pre><code>$(\"#some_image\").resizable({ aspectRatio:true, maxHeight:300 });\n</code></pre>\n\n<p>aspectRatio: true -> maintain original aspect ratio</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Here's a useful function that might do what you want:</p>\n\n<pre><code>jQuery.fn.fitToParent = function()\n{\n    this.each(function()\n    {\n    \tvar width  = $(this).width();\n    \tvar height = $(this).height();\n    \tvar parentWidth  = $(this).parent().width();\n    \tvar parentHeight = $(this).parent().height();\n\n    \tif(width/parentWidth &lt; height/parentHeight)\n    \t{\n    \t\tnewWidth  = parentWidth;\n    \t\tnewHeight = newWidth/width*height;\n    \t}\n    \telse\n    \t{\n    \t\tnewHeight = parentHeight;\n    \t\tnewWidth  = newHeight/height*width;\n    \t}\n    \tmargin_top  = (parentHeight - newHeight) / 2;\n    \tmargin_left = (parentWidth  - newWidth ) / 2;\n\n    \t$(this).css({'margin-top' :margin_top  + 'px',\n    \t             'margin-left':margin_left + 'px',\n    \t             'height'     :newHeight   + 'px',\n    \t             'width'      :newWidth    + 'px'});\n    });\n};\n</code></pre>\n\n<p>Basically, it grabs an element, centers it within the parent, then stretches it to fit such that none of the parent's background is visible, while maintaining the aspect ratio.</p>\n\n<p>Then again, this might not be what you want to do.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>There's no accounting for the amount of copy and pasters out there eh! I also wanted to know this and all I saw were endless examples of scaling width OR height.. who would want the other overflowing?!</p>\n\n<ul>\n<li>Resize width AND height without the need for a loop</li>\n<li>Doesn't exceed the images original dimensions</li>\n<li>Uses maths that works properly i.e width/aspect for height, and height*aspect for width so images are actually scaled properly up and down :/</li>\n</ul>\n\n<p>Should be straight forward enough to convert to javascript or other languages</p>\n\n<p>//////////////</p>\n\n<pre><code>private void ResizeImage(Image img, double maxWidth, double maxHeight)\n{\n    double srcWidth = img.Width;\n    double srcHeight = img.Height;\n\n    double resizeWidth = srcWidth;\n    double resizeHeight = srcHeight;\n\n    double aspect = resizeWidth / resizeHeight;\n\n    if (resizeWidth &gt; maxWidth)\n    {\n        resizeWidth = maxWidth;\n        resizeHeight = resizeWidth / aspect;\n    }\n    if (resizeHeight &gt; maxHeight)\n    {\n        aspect = resizeWidth / resizeHeight;\n        resizeHeight = maxHeight;\n        resizeWidth = resizeHeight * aspect;\n    }\n\n    img.Width = resizeWidth;\n    img.Height = resizeHeight;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>you can try this plugin, it can resize both img and container to get what you want: <a href=\"https://github.com/stereoactivo/aspectRatioResizeImg\" rel=\"nofollow\">https://github.com/stereoactivo/aspectRatioResizeImg</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How would I resize a image in jQuery to a consistent aspect ratio. For example setting maximum height and have the width resize correctly. Thanks.</p>\n",
            "last_activity_date": 1394388580,
            "question_id": 1682495,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "image",
                "scale"
            ],
            "title": "jQuery resize to aspect ratio"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Try This</p>\n\n<pre><code>&lt;script&gt;\n  var phpadd= &lt;?php echo add(1,2);?&gt; //call the php add function\n  var phpmult= &lt;?php echo mult(1,2);?&gt; //call the php mult function\n  var phpdivide= &lt;?php echo divide(1,2);?&gt; //call the php divide function\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>If you actually want to send data to a php script for example you can do this:</p>\n\n<p>The php:</p>\n\n<pre><code>&lt;?php\n$a = $_REQUEST['a'];\n$b = $_REQUEST['b']; //totally sanitized\n\necho $a + $b;\n?&gt;\n</code></pre>\n\n<p>Js (using jquery):</p>\n\n<pre><code>$.post(\"/path/to/above.php\", {a: something, b: something}, function(data){                                          \n  $('#somediv').html(data);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yes, you can do ajax request to server with your data in request parameters, like this (very simple):</p>\n\n<p>Note that the following code uses <a href=\"http://jquery.com/\" rel=\"nofollow\">jQuery</a></p>\n\n<pre><code>jQuery.ajax({\n    type: \"POST\",\n    url: 'your_functions_address.php',\n    dataType: 'json',\n    data: {functionname: 'add', arguments: [1, 2]},\n\n    success: function (obj, textstatus) {\n                  if( !('error' in obj) ) {\n                      yourVariable = obj.result;\n                  }\n                  else {\n                      console.log(obj.error);\n                  }\n            }\n});\n</code></pre>\n\n<p>and your_functions_address.php like this:</p>\n\n<pre><code>    &lt;?php\n    header('Content-Type: application/json');\n\n    $aResult = array();\n\n    if( !isset($_POST['functionname']) ) { $aResult['error'] = 'No function name!'; }\n\n    if( !isset($_POST['arguments']) ) { $aResult['error'] = 'No function arguments!'; }\n\n    if( !isset($aResult['error']) ) {\n\n        switch($_POST['functionname']) {\n            case 'add':\n               if( !is_array($_POST['arguments']) || (count($_POST['arguments']) &lt; 2) ) {\n                   $aResult['error'] = 'Error in arguments!';\n               }\n               else {\n                   $aResult['result'] = add(floatval($_POST['arguments'][0]), floatval($_POST['arguments'][1]));\n               }\n               break;\n\n            default:\n               $aResult['error'] = 'Not found function '.$_POST['functionname'].'!';\n               break;\n        }\n\n    }\n\n    echo json_encode($aResult);\n\n?&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Try looking at <a href=\"http://tantek.pbworks.com/w/page/19402872/CassisProject\" rel=\"nofollow\">CASSIS</a>. The idea is to mix PHP with JS so both can work on client and server side.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You need to create an API :\nYour js functions execute AJAX requests on your web service</p>\n\n<pre><code>  var mult = function(arg1, arg2)\n    $.ajax({\n      url: \"webservice.php?action=mult&amp;arg1=\"+arg1+\"&amp;arg2=\"+arg2\n    }).done(function(data) {\n      console.log(data);\n    });\n  }\n</code></pre>\n\n<p>on the php side, you'll have to check the action parameter in order to execute the propre function (basically a switch statement on the $_GET[\"action\"] variable)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>index.php</p>\n\n<pre><code>&lt;body&gt;\n...\n&lt;input id=\"Div7\" name=\"Txt_Nombre\" maxlenght=\"100px\" placeholder=\"Nombre\" /&gt;\n&lt;input id=\"Div8\" name=\"Txt_Correo\" maxlenght=\"100px\" placeholder=\"Correo\" /&gt;\n&lt;textarea id=\"Div9\" name=\"Txt_Pregunta\" placeholder=\"Pregunta\" /&gt;&lt;/textarea&gt;\n\n&lt;script type=\"text/javascript\" language=\"javascript\"&gt;\n\n$(document).ready(function() {\n    $(\".Txt_Enviar\").click(function() { EnviarCorreo(); });\n});\n\nfunction EnviarCorreo()\n{\n    jQuery.ajax({\n        type: \"POST\",\n        url: 'servicios.php',\n        data: {functionname: 'enviaCorreo', arguments: [$(\".Txt_Nombre\").val(), $(\".Txt_Correo\").val(), $(\".Txt_Pregunta\").val()]}, \n         success:function(data) {\n        alert(data); \n         }\n    });\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>servicios.php</p>\n\n<pre><code>&lt;?php   \n    include (\"correo.php\");\n\n    $nombre = $_POST[\"Txt_Nombre\"];\n    $correo = $_POST[\"Txt_Corro\"];\n    $pregunta = $_POST[\"Txt_Pregunta\"];\n\n    switch($_POST[\"functionname\"]){ \n\n        case 'enviaCorreo': \n            EnviaCorreoDesdeWeb($nombre, $correo, $pregunta);\n            break;      \n    }   \n?&gt;\n</code></pre>\n\n<p>correo.php</p>\n\n<pre><code>&lt;?php\n    function EnviaCorreoDesdeWeb($nombre, $correo, $pregunta)\n    { \n       ...\n    }\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I wrote some script for me its working .. I hope it may useful to you </p>\n\n<pre><code>&lt;?php\nif(@$_POST['add'])\n{\nfunction add()\n{\n   $a=\"You clicked on add fun\";\n   echo $a;\n}\nadd();\n}\nelse if (@$_POST['sub']) \n{\nfunction sub()\n{\n   $a=\"You clicked on sub funn\";\necho $a;  \n}\nsub();  \n}\n?&gt;\n&lt;form action=\"&lt;?php echo $_SERVER['PHP_SELF'];?&gt;\" method=\"POST\"&gt;\n\n&lt;input type=\"submit\" name=\"add\" Value=\"Call Add fun\"&gt;\n&lt;input type=\"submit\" name=\"sub\" Value=\"Call Sub funn\"&gt;\n&lt;?php echo @$a; ?&gt;\n\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>use document.write\nfor example,</p>\n\n<pre><code>&lt;script&gt;\n  document.write(' &lt; ?php add(1,2) ; ?&gt; ');\n  document.write(' &lt; ?php milt(1,2) ; ?&gt; ');\n  document.write(' &lt; ?php divide(1,2) ; ?&gt; ');\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Please help,</p>\n\n<p>I am trying to call a php function from an external php file into the javascript. My code is different and large.So i am writing a sample code here. </p>\n\n<p>This is my php code</p>\n\n<pre><code>&lt;?php\nfunction add($a,$b){\n  $c=$a+$b;\n  return $c;\n}\nfunction mult($a,$b){\n  $c=$a*$b;\n  return $c;\n}\n\nfunction divide($a,$b){\n  $c=$a/$b;\n  return $c;\n}\n?&gt;\n</code></pre>\n\n<p>This is my javascript code</p>\n\n<pre><code>&lt;script&gt;\n  var phpadd= add(1,2); //call the php add function\n  var phpmult= mult(1,2); //call the php mult function\n  var phpdivide= divide(1,2); //call the php divide function\n&lt;/script&gt;\n</code></pre>\n\n<p>So this is what i wanna do.\nMy original php file doesnt include these mathematical functions but the idea is same.</p>\n\n<p>If somehow it doesnt have proper solution then please suggest me the alternative but it should call values from external php.</p>\n\n<p>Please Help!! </p>\n",
            "last_activity_date": 1424383808,
            "question_id": 15757750,
            "score": 9,
            "tags": [
                "php",
                "javascript",
                "function",
                "call"
            ],
            "title": "php function call using javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>you need to return when the readystate==4 e.g. </p>\n\n<pre><code>function httpGet(theUrl)\n{\n    if (window.XMLHttpRequest)\n    {// code for IE7+, Firefox, Chrome, Opera, Safari\n        xmlhttp=new XMLHttpRequest();\n    }\n    else\n    {// code for IE6, IE5\n        xmlhttp=new ActiveXObject(\"Microsoft.XMLHTTP\");\n    }\n    xmlhttp.onreadystatechange=function()\n    {\n        if (xmlhttp.readyState==4 &amp;&amp; xmlhttp.status==200)\n        {\n            return xmlhttp.responseText;\n        }\n    }\n    xmlhttp.open(\"GET\", theUrl, false );\n    xmlhttp.send();    \n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>after you get the response just do call this function to append data to your body element </p>\n\n<pre><code>function createDiv(responsetext)\n{\n    var _body = document.getElementsByTagName('body')[0];\n    var _div = document.createElement('div');\n    _div.innerHTML = responsetext;\n    _body.appendChild(_div);\n}\n</code></pre>\n\n<p>@satya code modified as below </p>\n\n<pre><code>function httpGet(theUrl)\n{\n    if (window.XMLHttpRequest)\n    {// code for IE7+, Firefox, Chrome, Opera, Safari\n        xmlhttp=new XMLHttpRequest();\n    }\n    else\n    {// code for IE6, IE5\n        xmlhttp=new ActiveXObject(\"Microsoft.XMLHTTP\");\n    }\n    xmlhttp.onreadystatechange=function()\n    {\n        if (xmlhttp.readyState==4 &amp;&amp; xmlhttp.status==200)\n        {\n            createDiv(xmlhttp.responseText);\n        }\n    }\n    xmlhttp.open(\"GET\", theUrl, false);\n    xmlhttp.send();    \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The only one i have found for Cross-site, is this function:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar your_url = 'http://www.example.com';\n\n&lt;/script&gt;\n\n&lt;script type=\"text/javascript\" src=\"jquery.min.js\" &gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n// jquery.xdomainajax.js  ------ from padolsey\n\njQuery.ajax = (function(_ajax){\n\n    var protocol = location.protocol,\n        hostname = location.hostname,\n        exRegex = RegExp(protocol + '//' + hostname),\n        YQL = 'http' + (/^https/.test(protocol)?'s':'') + '://query.yahooapis.com/v1/public/yql?callback=?',\n        query = 'select * from html where url=\"{URL}\" and xpath=\"*\"';\n\n    function isExternal(url) {\n        return !exRegex.test(url) &amp;&amp; /:\\/\\//.test(url);\n    }\n\n    return function(o) {\n\n        var url = o.url;\n\n        if ( /get/i.test(o.type) &amp;&amp; !/json/i.test(o.dataType) &amp;&amp; isExternal(url) ) {\n\n            // Manipulate options so that JSONP-x request is made to YQL\n\n            o.url = YQL;\n            o.dataType = 'json';\n\n            o.data = {\n                q: query.replace(\n                    '{URL}',\n                    url + (o.data ?\n                        (/\\?/.test(url) ? '&amp;' : '?') + jQuery.param(o.data)\n                    : '')\n                ),\n                format: 'xml'\n            };\n\n            // Since it's a JSONP request\n            // complete === success\n            if (!o.success &amp;&amp; o.complete) {\n                o.success = o.complete;\n                delete o.complete;\n            }\n\n            o.success = (function(_success){\n                return function(data) {\n\n                    if (_success) {\n                        // Fake XHR callback.\n                        _success.call(this, {\n                            responseText: data.results[0]\n                                // YQL screws with &lt;script&gt;s\n                                // Get rid of them\n                                .replace(/&lt;script[^&gt;]+?\\/&gt;|&lt;script(.|\\s)*?\\/script&gt;/gi, '')\n                        }, 'success');\n                    }\n\n                };\n            })(o.success);\n\n        }\n\n        return _ajax.apply(this, arguments);\n\n    };\n\n})(jQuery.ajax);\n\n\n\n$.ajax({\n    url: your_url,\n    type: 'GET',\n    success: function(res) {\n        var text = res.responseText;\n        // then you can manipulate your text as you wish\n        alert(text);\n    }\n});\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I want to write a javascript function that returns HTML content as string given URL to the function. I found a similar answer on Stackoverflow.</p>\n\n<p>I am trying to use <a href=\"http://stackoverflow.com/a/4033310/536890\">this answer</a> to solve my problem.</p>\n\n<p>However, it seems as though <code>document.write()</code> isn't writing anything. When I load the page, I get a a blank screen. </p>\n\n\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;/head&gt;\n&lt;body&gt;  \n  &lt;script type=\"text/JavaScript\"&gt;\n  function httpGet(theUrl)\n  {\n    var xmlHttp = null;\n\n    xmlHttp = new XMLHttpRequest();\n    xmlHttp.open( \"GET\", theUrl, false );\n    xmlHttp.send( null );\n    return xmlHttp.responseText;\n  }\n  document.write(httpGet(\"http://stackoverflow.com/\"));\n  &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1377530370,
            "question_id": 10642289,
            "score": 5,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Return HTML content as a string, given URL. Javascript Function"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>The short answer to your question, I think, is no (you can just create a new object).</p>\n\n<ol>\n<li><p>In this example, I believe setting the length to 0 still leaves all of the elements for garbage collection.</p></li>\n<li><p>You could add this to Object.prototype if it's something you'd frequently use. Yes it's linear in complexity, but anything that doesn't do garbage collection later will be.</p></li>\n<li><p>This is the best solution. I know it's not related to your question - but for how long do we need to continue supporting IE6? There are many <a href=\"http://www.stopie6.org\">campaigns</a> to discontinue the usage of it.</p></li>\n</ol>\n\n<p>Feel free to correct me if there's anything incorrect above.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>So to recap your question: you want to avoid, as much as possible, trouble with the IE6 GC bug.  That bug has two causes:</p>\n\n<ol>\n<li>Garbage Collection occurs once every so many <em>allocations</em>; therefore, the more allocations you make, the oftener GC will run;</li>\n<li>The more objects you've got \u2018in the air\u2019, the more time each Garbage Collection run takes (since it'll crawl through the entire list of objects to see which are marked as garbage).</li>\n</ol>\n\n<p>The solution to cause 1 seems to be: keep the number of allocations down; assign new objects and strings as little as possible.</p>\n\n<p>The solution to cause 2 seems to be: keep the number of 'live' objects down; delete your strings and objects as soon as you don't need them anymore, and create them afresh when necessary.</p>\n\n<p>To a certain extent, these solutions are contradictory: to keep the number of objects in memory low will entail more allocations and de-allocations.  Conversely, constantly reusing the same objects could mean keeping more objects in memory than strictly necessary.</p>\n\n<p><hr /></p>\n\n<p>Now for your question. Whether you'll reset an object by creating a new one, or by deleting all its properties: that will depend on what you want to do with it afterwards.</p>\n\n<p>You\u2019ll probably want to assign new properties to it:</p>\n\n<ul>\n<li>If you do so immediately, then I suggest assigning the new properties straightaway, and skip deleting or clearing first. (Make sure that <em>all</em> properties are either overwritten or deleted, though!)</li>\n<li>If the object won't be used immediately, but will be repopulated at some later stage, then I suggest deleting it or assigning it null, and create a new one later on.</li>\n</ul>\n\n<p>There's no fast, easy to use way to clear a JScript object for reuse as if it were a new object \u2014 without creating a new one.  Which means the short answer to your question is \u2018No\u2019, like jthompson says.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>While this doesn't answer your issue of clearing a javascript object, I have found that if you are using objects as associative arrays one way of emptying the associative array is to have to structure the associative array as an array of objects.</p>\n\n<p>Eg.</p>\n\n<pre><code>var arr = []; //new array\n\nvar obj = {}; //new object\nobj.foo = 'bar'; //put in some properties\nobj.baz = 'qux';\n\narr.push(obj); //add object to array\n</code></pre>\n\n<p>This way you have an associative array that can easily be emptied by </p>\n\n<pre><code>arr.length = 0;\n</code></pre>\n\n<p>As for garbage collection performance I'm not sure how this technique would hold up. Perhaps someone else knows?</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>This seems to work:</p>\n\n<pre><code>obj = {someKey: 'someValue'}\nObject.keys(obj).length = 0\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -13
                },
                {
                    "body": "<p>Well, at the risk of making things too easy...</p>\n\n<pre><code>for (var member in myObject) delete myObject[member];\n</code></pre>\n\n<p>...would seem to be pretty effective in cleaning the object in one line of code with a minimum of scary brackets. All members will be truly deleted instead of left as garbage.</p>\n\n<p>Obviously if you want to delete the object itself, you'll still have to do a separate delete() for that.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>You can delete the props, but don't delete variables. <code>delete abc;</code> is invalid in ES5 (and throws with use strict).</p>\n\n<p>You can assign it to null to set it for deletion to the GC (it won't if you have other references to properties)</p>\n\n<p>Setting <code>length</code> property on an object does not change anything. (it only, well, sets the property)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>With a Javascript Array, I can reset it to an empty state with a single assignment:</p>\n\n<pre><code>array.length = 0;\n</code></pre>\n\n<p>This makes the Array \"appear\" empty and ready to reuse, and as far as I understand is a single \"operation\" - that is, constant time.</p>\n\n<p>Is there a similar way to clear a JS Object? I know I can iterate its fields deleting them:</p>\n\n<pre><code>for (prop in obj) { if (obj.hasOwnProperty(prop)) { delete obj[prop]; } }\n</code></pre>\n\n<p>but this has linear complexity.</p>\n\n<p>I can also just throw the object away and create a new one:</p>\n\n<pre><code>obj = {};\n</code></pre>\n\n<p>But \"promiscuous\" creation of new objects leads to problems with Garbage Collection on IE6. (<a href=\"http://ajaxian.com/archives/garbage-collection-in-ie6\">As described here</a>)</p>\n",
            "last_activity_date": 1362341448,
            "question_id": 684575,
            "score": 51,
            "tags": [
                "javascript",
                "performance",
                "json"
            ],
            "title": "How to quickly clear a Javascript Object?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><a href=\"http://qfox.nl/notes/110\">http://qfox.nl/notes/110</a> answers your question. (This guy knows a lot about the nitty gritty of JavaScript)</p>\n\n<blockquote>\n  <p>Switches in Javascript use strict type checking (===). So you never\n  have to worry about coercion, which prevents a few wtfjs :). If on the\n  other hand you were counting on coercion, tough luck because you can't\n  force it.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Take a look at <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-12.11\">ECMA 262, section 12.11</a>, the second algorithm, 4.c.</p>\n\n<blockquote>\n  <p><em>c.   If input is equal to clauseSelector as defined by the === operator, then...</em></p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>Try it:</p>\n\n<pre><code>switch(1) {\n  case '1':\n    alert('Switch comparison is NOT strict.');\n    break;\n  case 1:\n    alert('Switch comparison is strict.');\n    break;\n  default: \n    alert('Huh?');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have a variable that can either be boolean <code>false</code>, or an integer (including 0). I want to put it in a switch statement like:</p>\n\n<pre><code>switch(my_var){\n    case 0:\n         // Do something\n         break;\n    case 1:\n         // Do something else\n         break;\n    case false:\n         // Some other code\n}\n</code></pre>\n\n<p>In my tests in Google Chrome it seems to work perfectly, but I'm a little nervous to use it because I'm afraid that in some browsers if <code>my_var</code> is <code>false</code> it might execute the first case since <code>0 == false</code>.</p>\n\n<p>I'm just wondering if there is anything official in Javascript that says the switch statement will use strict comparison such that <code>0 !== false</code>, but I can't find anything myself, and I'm not sure if this will work well in different Javascript engines. Does anybody know if the comparison done by a switch statement is guaranteed to be strict?</p>\n",
            "last_activity_date": 1411257298,
            "question_id": 6989902,
            "score": 30,
            "tags": [
                "javascript",
                "types",
                "comparison",
                "type-conversion",
                "switch-statement"
            ],
            "title": "Is it safe to assume strict comparison in a Javascript switch statement?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I think the only way to do this is to loop through the parent's children until you find yourself.</p>\n\n<pre><code>var K = -1;\nfor (var i = myNode.parent.childNodes.length; i &gt;= 0; i--)\n{\n    if (myNode.parent.childNodes[i] === myNode)\n    {\n        K = i;\n        break;\n    }\n}\n\nif (K == -1)\n    alert('Not found?!');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>RoBorg's answer works... or you could try...</p>\n\n<pre><code>var k = 0;\nwhile(elem.previousSibling){\n    k++;\n    elem = elem.previousSibling;\n}\nalert('I am at index: ' + k);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>A little shorter, expects the element to be in elem, returns k.</p>\n\n<pre><code>for (var k=0,e=elem; e = e.previousSibling; ++k);\n</code></pre>\n\n<p><em>After a comment from <a href=\"http://stackoverflow.com/users/95195/\">Justin Dearing</a> I reviewed my answer and added the following:</em></p>\n\n<p>Or if you prefer \"while\": </p>\n\n<pre><code>var k=0, e=elem;\nwhile (e = e.previousSibling) { ++k;}\n</code></pre>\n\n<p>The original question was how to find the index of an existing DOM element. Both of my examples above in this answer expects <strong>elem</strong> to be an DOM element and that the element still exists in the DOM. They will fail if you give them an null object or an object that don't have <strong>previousSibling</strong>. A more fool-proof way would be something like this:</p>\n\n<pre><code>var k=-1, e=elem;\nwhile (e) {\n    if ( \"previousSibling\" in e ) {\n        e = e.previousSibling;\n        k = k + 1;\n    } else {\n        k= -1;\n        break;\n    }\n}   \n</code></pre>\n\n<p>If <strong>e</strong> is <strong>null</strong> or if <strong>previousSibling</strong> is missing in one of the objects, <strong>k</strong> is -1.</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>using a framework like prototype you could use this :</p>\n\n<pre><code>$(el).up().childElements().indexOf($(el))\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As with the original poster, I was trying to </p>\n\n<blockquote>\n  <p>find the index of a given DOM node</p>\n</blockquote>\n\n<p>but one that I had just use a click handler on, and <em>only in relation to its siblings</em>. I couldn't end up getting the above to work (because of noobness undoubtably, i tried subbing in 'this' for elem but it didn't work).</p>\n\n<p>My solution was to use jquery and use:</p>\n\n<pre><code>var index = $(this).parent().children().index(this);\n</code></pre>\n\n<p>It works without having to specify the type of the element ie:'h1' or an id etc.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The shortest possible way, without any frameworks, in all versions of Safari, FireFox, Chrome and IE >= 9:</p>\n\n<p><code>var i = Array.prototype.indexOf.call(e.childNodes, someChildEl);</code></p>\n",
                    "is_accepted": false,
                    "score": 38
                }
            ],
            "body": "<p>I want find the index of a given DOM node. It's like the inverse of doing </p>\n\n<pre><code>document.getElementById('id_of_element').childNodes[K]\n</code></pre>\n\n<p>I want to instead extract the value of <code>K</code> given that I already have the reference to the child node and the parent node. How do I do this? </p>\n",
            "last_activity_date": 1367379874,
            "question_id": 378365,
            "score": 29,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "Finding DOM node index"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Ok, it was pretty easy.  Basically I just set my text to:</p>\n\n<pre><code>a.main {visibility: hidden;}\n</code></pre>\n\n<p>and then add:</p>\n\n<pre><code>$(window).bind(\"load\", function() {\n       $('#nav a.main').addClass('shown');\n});\n</code></pre>\n\n<p>Then make sure that the following is also in my css file:</p>\n\n<pre><code>a.main.shown {visibility: visible;}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>You should't use <code>$(window).bind('load')</code> - that will wait for the whole page to load (which maybe is what you want), and not just the font. If you want to control the loading process of @font-faces use WebFont Loader, developed by Google and Typekit.</p>\n\n<p>You can use it with Google Font API, typekit and your own webfont provider - you (although I never tried it myself as I'm a Typekit User.</p>\n\n<p>Read about it here: <a href=\"http://code.google.com/apis/webfonts/docs/webfont_loader.html\">http://code.google.com/apis/webfonts/docs/webfont_loader.html</a> and here: <a href=\"http://blog.typekit.com/2010/05/19/typekit-and-google/\">http://blog.typekit.com/2010/05/19/typekit-and-google/</a></p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>I use this function - tested in Safari, Chrome, Firefox, Opera, IE7, IE8, IE9:</p>\n\n<pre><code>function waitForWebfonts(fonts, callback) {\n    var loadedFonts = 0;\n    for(var i = 0, l = fonts.length; i &lt; l; ++i) {\n        (function(font) {\n            var node = document.createElement('span');\n            // Characters that vary significantly among different fonts\n            node.innerHTML = 'giItT1WQy@!-/#';\n            // Visible - so we can measure it - but not on the screen\n            node.style.position      = 'absolute';\n            node.style.left          = '-10000px';\n            node.style.top           = '-10000px';\n            // Large font size makes even subtle changes obvious\n            node.style.fontSize      = '300px';\n            // Reset any font properties\n            node.style.fontFamily    = 'sans-serif';\n            node.style.fontVariant   = 'normal';\n            node.style.fontStyle     = 'normal';\n            node.style.fontWeight    = 'normal';\n            node.style.letterSpacing = '0';\n            document.body.appendChild(node);\n\n            // Remember width with no applied web font\n            var width = node.offsetWidth;\n\n            node.style.fontFamily = font;\n\n            var interval;\n            function checkFont() {\n                // Compare current width with original width\n                if(node &amp;&amp; node.offsetWidth != width) {\n                    ++loadedFonts;\n                    node.parentNode.removeChild(node);\n                    node = null;\n                }\n\n                // If all fonts have been loaded\n                if(loadedFonts &gt;= fonts.length) {\n                    if(interval) {\n                        clearInterval(interval);\n                    }\n                    if(loadedFonts == fonts.length) {\n                        callback();\n                        return true;\n                    }\n                }\n            };\n\n            if(!checkFont()) {\n                interval = setInterval(checkFont, 50);\n            }\n        })(fonts[i]);\n    }\n};\n</code></pre>\n\n<p>Use it like:</p>\n\n<pre><code>waitForWebfonts(['MyFont1', 'MyFont2'], function() {\n    // Will be called as soon as ALL specified fonts are available\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>I use google web fonts (Crete Round Regular and Open Sans Regular with Bold)</p>\n\n<p>You can use either this :</p>\n\n<pre><code>var fonts = $.Deferred();\nWebFontConfig = { google: { families: [ 'Crete+Round::latin', 'Open+Sans:400,700:latin' ] } , active : function() { fonts.resolve(); } };\n(function() {\n    var wf = document.createElement('script');\n    wf.src = ('https:' == document.location.protocol ? 'https' : 'http') + '://ajax.googleapis.com/ajax/libs/webfont/1/webfont.js';\n    wf.type = 'text/javascript';\n    wf.async = 'true';\n    var s = document.getElementsByTagName('script')[0];\n    s.parentNode.insertBefore(wf, s);\n})();\nfonts.done(function(){ alert('fonts'); });\n</code></pre>\n\n<p>or this :</p>\n\n<pre><code>WebFontConfig = { google: { families: [ 'Crete+Round::latin', 'Open+Sans:400,700:latin' ] } , active : function() { alert('fonts'); } };\n(function() {\n    var wf = document.createElement('script');\n    wf.src = ('https:' == document.location.protocol ? 'https' : 'http') + '://ajax.googleapis.com/ajax/libs/webfont/1/webfont.js';\n    wf.type = 'text/javascript';\n    wf.async = 'true';\n    var s = document.getElementsByTagName('script')[0];\n    s.parentNode.insertBefore(wf, s);\n})();\n</code></pre>\n\n<p>Note that in the first option i used jQuery Deferred Object.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Perhaps..</p>\n\n<p>Create a z-index: -10 div and fill it with a lot of text (with a 'normal' font). At document.ready() or another event:</p>\n\n<pre><code>var originalnumber = $( div ).width() + $( div ).height() + $( div ).offset().top + $( div ).offset().left;\n\n$( div ).css( 'font-family', 'MyPrettyWebfont' );\n\nvar interval = setInterval( function() {\n    var number = $( div ).width() + $( div ).height() + $( div ).offset().top + $( div ).offset().left;\n\n    if ( number !== originalnumber ) {\n        // webfont is loaded and applied!\n        clearInterval( interval );\n    }\n}, 10 );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've got the same problem and I'm trying with the readyfunction(), the bind() function and some others that I found, but none of them works. Finaly I found one solution, just aplying one delay before the animation is loaded... like this:</p>\n\n<pre><code>$(document).ready(function() {\n\nsetTimeout(function (){\n   // The animation\n},150);\n\n}); // end ready\n</code></pre>\n\n<p>I know this is not the best solution, so can someone tell me one better??</p>\n\n<p>Thanks!</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am using @font-face and I hate that Firefox shows the default font, waits to load the @font-face font, then replaces it.  So the whole page flashes with the new font.</p>\n\n<p>Webkit browsers just don't display the text until the font is loaded and it is a much cleaner look.</p>\n\n<p>So, I am wondering if jQuery could help me to know when all data on the page is loaded, including the @font-face file, so that I can then show my text? Is there a jQuery method that tells me when everything is loaded?</p>\n",
            "last_activity_date": 1350063873,
            "question_id": 4383226,
            "score": 26,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "font-face"
            ],
            "title": "Using jQuery to know when @font-face fonts are loaded?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>This is the simple version, obviously you'll want to add some error checking:</p>\n\n<pre><code>var obj = {};\nvar pairs = queryString.split('&amp;');\nfor(i in pairs){\n    var split = pairs[i].split('=');\n    obj[decodeURIComponent(split[0])] = decodeURIComponent(split[1]);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I found <a href=\"https://github.com/jupiterjs/jquerymx/blob/master/lang/string/deparam/deparam.js\">$.String.deparam</a> the most complete pre built solution (can do nested objects etc.). Check out the <a href=\"http://javascriptmvc.com/docs.html#!jQuery.String.deparam\">documentation</a>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Split on <code>&amp;</code> to get name/value pairs, then split each pair on <code>=</code>. Here's an example:</p>\n\n<pre><code>var str = \"abc=foo&amp;def=%5Basf%5D&amp;xy%5Bz=5\"\nvar obj = str.split(\"&amp;\").reduce(function(prev, curr, i, arr) {\n    var p = curr.split(\"=\");\n    prev[decodeURIComponent(p[0])] = decodeURIComponent(p[1]);\n    return prev;\n}, {});\n</code></pre>\n\n<p>Another approach, using regular expressions:</p>\n\n<pre><code>var obj = {}; \nstr.replace(/([^=&amp;]+)=([^&amp;]*)/g, function(m, key, value) {\n    obj[decodeURIComponent(key)] = decodeURIComponent(value);\n}); \n</code></pre>\n\n<p>This is adapted from John Resig's <a href=\"http://ejohn.org/blog/search-and-dont-replace/\" rel=\"nofollow\">\"Search and Don\u2019t Replace\"</a>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>There is no native solution that I'm aware of. Dojo has a built-in unserialization method if you use that framework by chance.</p>\n\n<p>Otherwise you can implement it yourself rather simply:</p>\n\n<pre><code>function unserialize(str) {\n  str = decodeURIComponent(str);\n  var chunks = str.split('&amp;'),\n      obj = {};\n  for(var c=0; c &lt; chunks.length; c++) {\n    var split = chunks[c].split('=', 2);\n    obj[split[0]] = split[1];\n  }\n  return obj;\n}\n</code></pre>\n\n<p>edit: added decodeURIComponent()</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<h1>Edit</h1>\n\n<p>This edit improves and explains the answer based on the comments.</p>\n\n<pre><code>var search = location.search.substring(1);\nJSON.parse('{\"' + decodeURI(search).replace(/\"/g, '\\\\\"').replace(/&amp;/g, '\",\"').replace(/=/g,'\":\"') + '\"}')\n</code></pre>\n\n<p><strong>Example</strong></p>\n\n<p>Parse <code>abc=foo&amp;def=%5Basf%5D&amp;xyz=5</code> in five steps:</p>\n\n<ul>\n<li>decodeURI: abc=foo&amp;def=[asf]&amp;xyz=5</li>\n<li>Escape quotes: same, as there are no quotes </li>\n<li>Replace &amp;: <code>abc=foo\",\"def=[asf]\",\"xyz=5</code></li>\n<li>Replace =: <code>abc\":\"foo\",\"def\":\"[asf]\",\"xyz\":\"5</code></li>\n<li>Suround with curlies and quotes: <code>{\"abc\":\"foo\",\"def\":\"[asf]\",\"xyz\":\"5\"}</code></li>\n</ul>\n\n<p>which is legal JSON.</p>\n\n<p>An <strong>improved solution</strong> allows for more characters in the search string. It uses a reviver function for URI decoding:</p>\n\n<pre><code>var search = location.search.substring(1);\nsearch?JSON.parse('{\"' + search.replace(/&amp;/g, '\",\"').replace(/=/g,'\":\"') + '\"}',\n                 function(key, value) { return key===\"\"?value:decodeURIComponent(value) }):{}\n</code></pre>\n\n<p><strong>Example</strong>  </p>\n\n<pre><code>search = \"abc=foo&amp;def=%5Basf%5D&amp;xyz=5&amp;foo=b%3Dar\";\n</code></pre>\n\n<p>gives</p>\n\n<pre><code>Object {abc: \"foo\", def: \"[asf]\", xyz: \"5\", foo: \"b=ar\"}\n</code></pre>\n\n<h1>Original answer</h1>\n\n<p>A one-liner:</p>\n\n<pre><code>JSON.parse('{\"' + decodeURI(\"abc=foo&amp;def=%5Basf%5D&amp;xyz=5\".replace(/&amp;/g, \"\\\",\\\"\").replace(/=/g,\"\\\":\\\"\")) + '\"}')\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 58
                },
                {
                    "body": "<p>FIRST U NEED TO DEFINE WHAT'S A GET VAR:</p>\n\n<pre><code>function getVar()\n{\n    this.length = 0;\n    this.keys = [];\n    this.push = function(key, value)\n    {\n        if(key==\"\") key = this.length++;\n        this[key] = value;\n        this.keys.push(key);\n        return this[key];\n    }\n}\n</code></pre>\n\n<p>Than just read:</p>\n\n<pre><code>function urlElement()\n{\n    var thisPrototype = window.location;\n    for(var prototypeI in thisPrototype) this[prototypeI] = thisPrototype[prototypeI];\n    this.Variables = new getVar();\n    if(!this.search) return this;\n    var variables = this.search.replace(/\\?/g,'').split('&amp;');\n    for(var varI=0; varI&lt;variables.length; varI++)\n    {\n        var nameval = variables[varI].split('=');\n        var name = nameval[0].replace(/\\]/g,'').split('[');\n        var pVariable = this.Variables;\n        for(var nameI=0;nameI&lt;name.length;nameI++)\n        {\n            if(name.length-1==nameI) pVariable.push(name[nameI],nameval[1]);\n            else var pVariable = (typeof pVariable[name[nameI]] != 'object')? pVariable.push(name[nameI],new getVar()) : pVariable[name[nameI]];\n        }\n    }\n}\n</code></pre>\n\n<p>and use like:</p>\n\n<pre><code>var mlocation = new urlElement();\nmlocation = mlocation.Variables;\nfor(var key=0;key&lt;mlocation.keys.length;key++)\n{\n    console.log(key);\n    console.log(mlocation[mlocation.keys[key]];\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had the same problem, tried the solutions here, but none of them really worked, since I had arrays in the URL parameters, like this:</p>\n\n<pre><code>?param[]=5&amp;param[]=8&amp;othr_param=abc&amp;param[]=string\n</code></pre>\n\n<p>So I ended up writing my own JS function, which makes an array out of the param in URI:</p>\n\n<pre><code>/**\n * Creates an object from URL encoded data\n */\nvar createObjFromURI = function() {\n    var uri = decodeURI(location.search.substr(1));\n    var chunks = uri.split('&amp;');\n    var params = Object();\n\n    for (var i=0; i &lt; chunks.length ; i++) {\n        var chunk = chunks[i].split('=');\n        if(chunk[0].search(\"\\\\[\\\\]\") !== -1) {\n            if( typeof params[chunk[0]] === 'undefined' ) {\n                params[chunk[0]] = [chunk[1]];\n\n            } else {\n                params[chunk[0]].push(chunk[1]);\n            }\n\n\n        } else {\n            params[chunk[0]] = chunk[1];\n        }\n    }\n\n    return params;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This seems to be the best solution as it takes multiple parameters of the same name into consideration.</p>\n\n<pre><code>    function paramsToJSON(str) {\n        var pairs = str.split('&amp;');\n        var result = {};\n        pairs.forEach(function(pair) {\n            pair = pair.split('=');\n            var name = pair[0]\n            var value = pair[1]\n            if( name.length )\n                if (result[name] !== undefined) {\n                    if (!result[name].push) {\n                        result[name] = [result[name]];\n                    }\n                    result[name].push(value || '');\n                } else {\n                    result[name] = value || '';\n                }\n        });\n        return( result );\n    }\n\n&lt;a href=\"index.html?x=1&amp;x=2&amp;x=3&amp;y=blah\"&gt;something&lt;/a&gt;\nparamsToJSON(\"x=1&amp;x=2&amp;x=3&amp;y=blah\"); \n\nconsole yields =&gt; {x: Array[3], y: \"blah\"} where x is an array as is proper JSON\n</code></pre>\n\n<p>I later decided to convert it to a jQuery plugin too...</p>\n\n<pre><code>$.fn.serializeURLParams = function() {\n    var result = {};\n\n    if( !this.is(\"a\") || this.attr(\"href\").indexOf(\"?\") == -1 ) \n        return( result );\n\n    var pairs = this.attr(\"href\").split(\"?\")[1].split('&amp;');\n    pairs.forEach(function(pair) {\n        pair = pair.split('=');\n        var name = decodeURI(pair[0])\n        var value = decodeURI(pair[1])\n        if( name.length )\n            if (result[name] !== undefined) {\n                if (!result[name].push) {\n                    result[name] = [result[name]];\n                }\n                result[name].push(value || '');\n            } else {\n                result[name] = value || '';\n            }\n    });\n    return( result )\n}\n\n&lt;a href=\"index.html?x=1&amp;x=2&amp;x=3&amp;y=blah\"&gt;something&lt;/a&gt;\n$(\"a\").serializeURLParams(); \n\nconsole yields =&gt; {x: Array[3], y: \"blah\"} where x is an array as is proper JSON\n</code></pre>\n\n<p>Now, the first will accept the parameters only but the jQuery plugin will take the whole url and return the serialized parameters.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's one I use:</p>\n\n<pre><code>var params = {};\nwindow.location.search.substring(1).split('&amp;').forEach(function(pair) {\n  pair = pair.split('=');\n  if (pair[1] !== undefined) {\n    var key = decodeURIComponent(pair[0]),\n        val = decodeURIComponent(pair[1]),\n        val = val ? val.replace(/\\++/g,' ').trim() : '';\n\n    if (key.length === 0) {\n      return;\n    }\n    if (params[key] === undefined) {\n      params[key] = val;\n    }\n    else {\n      if (\"function\" !== typeof params[key].push) {\n        params[key] = [params[key]];\n      }\n      params[key].push(val);\n    }\n  }\n});\nconsole.log(params);\n</code></pre>\n\n<p>Basic usage, eg.<br>\n<code>?a=aa&amp;b=bb</code><br>\n<code>Object {a: \"aa\", b: \"bb\"}</code></p>\n\n<p>Duplicate params, eg.<br>\n<code>?a=aa&amp;b=bb&amp;c=cc&amp;c=potato</code><br>\n<code>Object {a: \"aa\", b: \"bb\", c: [\"cc\",\"potato\"]}</code></p>\n\n<p>Missing keys, eg.<br>\n<code>?a=aa&amp;b=bb&amp;=cc</code><br>\n<code>Object {a: \"aa\", b: \"bb\"}</code></p>\n\n<p>Missing values, eg.<br>\n<code>?a=aa&amp;b=bb&amp;c</code><br>\n<code>Object {a: \"aa\", b: \"bb\"}</code></p>\n\n<p>The above JSON/regex solutions throw a syntax error on this wacky url:<br>\n<code>?a=aa&amp;b=bb&amp;c=&amp;=dd&amp;e</code><br>\n<code>Object {a: \"aa\", b: \"bb\", c: \"\"}</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a string like this:</p>\n\n<p><code>abc=foo&amp;def=%5Basf%5D&amp;xyz=5</code></p>\n\n<p>(it comes from <code>ajaxOptions.data</code> parameter from the ajaxComplete event)</p>\n\n<p>How can I convert it into a javascript object like this:</p>\n\n<pre><code>obj = {\n  abc: 'foo',\n  def: '[asf]',\n  xyz: 5\n}\n</code></pre>\n\n<p>?</p>\n",
            "last_activity_date": 1424146239,
            "question_id": 8648892,
            "score": 25,
            "tags": [
                "javascript",
                "jquery",
                "json",
                "object"
            ],
            "title": "Convert URL parameters to a javascript object"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I doubt adding a function to Object.prototype breaks jQuery directly.  Just make sure each for..in loop you have throughout your site is wrapped in a hasOwnProperty check, since you've add the function globally and the result of iterating over it can be unpredictable:</p>\n\n<pre><code>Object.prototype.foo = function() {};    \nvar myObject = {m1: \"one\", m2: \"two\" };\n\nfor(var i in myObject) { if(myObject.hasOwnProperty(i)) {\n   // Do stuff... but not to Object.prototype.foo\n}}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You should never extend Object.prototype.  It does far more than break jQuery; it completely breaks the \"object-as-hashtables\" feature of Javascript.  Don't do it.</p>\n\n<p>You can ask John Resig, and he'll tell you the <a href=\"http://markmail.org/message/tv7vxcir6w3p2h5e\">same thing</a>.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>I agree, adding something to <code>Object.prototype</code> demands caution and should be avoided.  Look for other solutions such as:</p>\n\n<p>Adding it to Object and then accessing it with a <code>call</code> or <code>apply</code>, as needed.\nFor example:</p>\n\n<pre><code>Object.foo = function () { return this.whatever()}\n</code></pre>\n\n<p>Then call that on an object by:</p>\n\n<pre><code>Object.foo.call(Objname);  // this invokes the function as though it were a\n                           // method of Objname.  That is, its like Objname.foo()\n</code></pre>\n\n<p>For fun, you can add the following (yes, I know its a bit dangerous...):</p>\n\n<pre><code>Function.using = Function.call; // syntactic sugar\n</code></pre>\n\n<p>Now you can write <code>Object.foo.using(Objname)</code> and it reads like a sentance.</p>\n\n<p>But as a rule, stay away from altering any of the big prototypes.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If it's simply a case of messing up for...in loops, can't you use Object.defineProperty to add your fn without making it enumerable?</p>\n\n<p>So:</p>\n\n<pre><code>Object.defineProperty(Object.prototype, \"foo\", { \n    value: function() {\n        // do stuff\n    },\n    enumerable : false\n});\n</code></pre>\n\n<p>Seems to work for me. Would this still be considered bad form? </p>\n",
                    "is_accepted": false,
                    "score": 17
                }
            ],
            "body": "<p>I have added a simple .js to my page that has some pretty mundane common-task sort of functions added to the Object and Array prototypes.</p>\n\n<p>Through trial and error I've figured out that adding any function to Object.prototype, no matter it's name or what it does causes javascript errors in jQuery:</p>\n\n<p>The culprit?</p>\n\n<pre><code>Object.prototype.foo = function() {\n    /*do nothing and break jQuery*/\n};\n</code></pre>\n\n<p>The error I'm getting line 1056 of jquery-1.3.2.js, in the attr:function { } declaration:</p>\n\n<pre><code>/*Object doesn't support this property or method*/\nname = name.replace(/-([a-z])/ig, function(all, letter) {\n            return letter.toUpperCase();\n        });\n</code></pre>\n\n<p>Apparently G.replace is undefined.</p>\n\n<p>While it's obvious that there's something I'm just not wrapping my head around with prototyping, I'm failing miserably to figure out what it is.</p>\n\n<p>To be clear, I'm not looking for a workaround, I have that handled... what I'm looking for is an answer to 'Why?'. Why does adding a function to Object.prototype break this bit of code?</p>\n",
            "last_activity_date": 1304551235,
            "question_id": 1827458,
            "score": 21,
            "tags": [
                "javascript",
                "jquery",
                "prototype",
                "prototyping"
            ],
            "title": "Prototyping Object in Javascript breaks jQuery?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Neither one is better than the other. Just choose one and use it consistently.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I prefer them on the same line, but mostly because I pass anonymous functions as arguments a lot...it saves some space and makes the function definition look less jarring. Of course, this is just an opinion, and I agree with Bytecode Ninja that consistency is the most important thing.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>All subjective. Some are slightly better but the difference is negligible. <strong>The most important thing to do is stay consistent across all your code.</strong></p>\n\n<p>Personally, I prefer the tucked in style, with 4 space 'real' tabs.</p>\n\n<pre>function a() {\n    if (b) {\n        do;\n    } else {\n        do2;\n    }\n}</pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As stated in many answers, its mostly important that you find a style that you (and/or your team mates, if applicable) stick to.  Personally I prefer same line as I've found that putting curly braces on the new line can lead to lots of near blank lines if you're working with closures and nested functions, which makes code less readable for me (although, probably not for most people...)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is a Holy War to which you will never get a usable answer! Just stick with whatever everyone else in the project is using and don't argue!</p>\n\n<p>For what it's worth, I'm a K&amp;Rite. I find the OTBS puts a lot of visual space between an opening structure and the following statement, when those two lines are often strongly related so would be better presented together,\u2009without an intervening almost-blank line. I like to keep my blank lines reserved for separating blocks of related statements.</p>\n\n<p>In a coding style which a lot of whitespace anyway, this may be relatively unimportant. But personally I value terseness, so I can keep more of the program on-screen.</p>\n\n<p>I don't buy that having the open-brace on a different column to the close-brace is an issue. It's still easy to see the block shape just from the indents. Unless you're using hanging indents. Don't do that. But that's another Holy War entirely.</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>I follow Douglas Crockford's JavaScript coding convention, which was inspired by Sun's Java style guidelines.</p>\n\n<p>Here's a link to it: <a href=\"http://javascript.crockford.com/code.html\">http://javascript.crockford.com/code.html</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>In my opinion, it depends on who else will be working with your code. If you work on a C# team and share a lot of responsibilities, put it on a new line and avoid the inevitable bickering that would otherwise follow. If you work with a lot of PHP (or older JS programmers), put it on the first line for the exact same reason.</p>\n\n<p>But if you're looking for something more authoritative, Douglas Crockford says that the opening brace should <a href=\"http://javascript.crockford.com/code.html\" rel=\"nofollow\">always be on the top line</a>. His reasoning, if I remember correctly, is that it makes it consistent with the rest of the language. Basically, because this is valid but (probably) incorrect code:</p>\n\n<pre><code>function myFunc() \n{\n    return \n    {\n      ok: true\n    };\n} \n</code></pre>\n\n<p>...you should universally avoid putting open-braces on a new line. Why? Because programming style should <em>not</em> lead to syntactic ambiguity.</p>\n\n<p>The sample code above is valid because it is completely syntactically correct and no exceptions will be raised if you write this. However, instead of returning an object literal, <code>{ok:true}</code>, it will return <code>undefined</code> and the code below it will not be reached. Put the opening braces up one line and it will return the object literal you were, perhaps, expecting.</p>\n\n<p>The question is, do you find that argument compelling enough?</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p><a href=\"http://en.wikipedia.org/wiki/Douglas_Crockford\">Douglas Crockford</a> gives a reason for choosing the K&amp;R style<sup>1</sup>:</p>\n\n<blockquote>\n  <p>I always use the K&amp;R style, putting the <code>{</code> at the end of a line instead of the front, because it avoids a horrible design blunder in JavaScript's <code>return</code> statement.</p>\n</blockquote>\n\n<p>The blunder he is referring to is how JavaScript handles the <code>return</code> statement differently in the following two scenarios:</p>\n\n<pre><code>return {\n   'status': 'ok'\n};\n</code></pre>\n\n<p>... and:</p>\n\n<pre><code>return \n{\n   'status': 'ok'\n};\n</code></pre>\n\n<p>The first one will return an object with a <code>status</code> property,  while the latter will return <code>undefined</code> because of <a href=\"http://en.wikipedia.org/wiki/JavaScript_syntax#Whitespace_and_semicolons\">semicolon insertion</a>.</p>\n\n<hr>\n\n<p><sup>1</sup> <a href=\"http://rads.stackoverflow.com/amzn/click/0596517742\">Douglas Crockford: JavaScript: The Good Parts: Style (page 96) - ISBN: 978-0596517748.</a></p>\n",
                    "is_accepted": false,
                    "score": 75
                },
                {
                    "body": "<p>I prefer the K&amp;R method for the same reasons listed above.  It looks more compact, and the two relevant lines are grouped together.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>At work, we place braces on the next line, but at home, I do the opposite. Which one do you prefer? (K&amp;R vs OTBS)</p>\n\n<pre><code>function something() {\n    // ...\n}\n\nfunction something()\n{\n    // ...\n}\n</code></pre>\n\n<p>A lot of JavaScript libraries seem to use the OTBS (one true brace style). I'd like to follow them for consistence among other JavaScript projects, but doesn't K&amp;R style look more readable?</p>\n\n<p>Note: We know the problem with return and braces in JavaScript, that will always be an exception. However, that is only a single case.</p>\n",
            "last_activity_date": 1303176820,
            "question_id": 3218756,
            "score": 20,
            "tags": [
                "javascript",
                "coding-style",
                "conventions"
            ],
            "title": "JavaScript braces on new line or not?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I haven't found practical use of it other than that but here is one scenario in which <em>James Padolsey</em> nicely uses this <a href=\"http://james.padolsey.com/javascript/detect-ie-in-js-using-conditional-comments/\" rel=\"nofollow\">technique for IE detection</a> in a while loop:</p>\n\n<pre><code>var ie = (function(){\n\n    var undef,\n        v = 3,\n        div = document.createElement('div'),\n        all = div.getElementsByTagName('i');\n\n    while ( // &lt;-- notice no while body here\n        div.innerHTML = '&lt;!--[if gt IE ' + (++v) + ']&gt;&lt;i&gt;&lt;/i&gt;&lt;![endif]--&gt;',\n        all[0]\n    );\n\n    return v &gt; 4 ? v : undef;\n\n}());\n</code></pre>\n\n<p>These two lines must to execute :</p>\n\n<pre><code>div.innerHTML = '&lt;!--[if gt IE ' + (++v) + ']&gt;&lt;i&gt;&lt;/i&gt;&lt;![endif]--&gt;',\nall[0]\n</code></pre>\n\n<p>And inside comma operator, both are evaluated though one could have made them separate statements somehow.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I use the comma regularly for this type of for loop initialization because it runs slightly faster for long loops when you don't have to fetch the .length property every iteration:</p>\n\n<pre><code>for (var i = 0, len = items.length; i &lt; len; i++) {\n    // loop code here that operates on items[i]\n}\n</code></pre>\n\n<p><a href=\"http://perfectionkills.com/global-eval-what-are-the-options/\" rel=\"nofollow\">This article</a> also describes one use of the comma operator that lets eval be used in something other than the global scope.  It seems a bit of a trick, but it's triggered by the comma operator and can be useful (for advanced uses of eval).</p>\n\n<p>Quoting from the book: \"Javascript, The Definitive Guide\" by David Flanagan:</p>\n\n<blockquote>\n  <p>The only situation in which the comma operator is commonly used is\n  with a for loop that has multiple loop variables.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Comma operator is not specific to JavaScript, it is available in other languages like <a href=\"http://en.wikipedia.org/wiki/Comma_operator\">C and C++</a>. As a binary operator this is useful when the first operand, which is generally an expression, has desired side effect required by second operand. One example from wikipedia:</p>\n\n<pre><code>i = a += 2, a + b;\n</code></pre>\n\n<p>Obviously you can write two different lines of codes, but using comma is another option and sometimes more readable. </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The following is probably not very useful as you don't write it yourself, but a minifier can shrink code using the comma operator. For example:</p>\n\n<pre><code>if(x){foo();return bar()}else{return 1}\n</code></pre>\n\n<p>would become:</p>\n\n<pre><code>return x?(foo(),bar()):1\n</code></pre>\n\n<p>The <code>?:</code> operator can be used now, since the comma operator (to a certain extent) allows for two statements to be written as one statement.</p>\n\n<p>This <em>is</em> useful in that it allows for some neat compression (39 -> 24 bytes here).</p>\n\n<hr>\n\n<p>I'd like to stress the fact that the comma in <code>var a, b</code> is <strong><em>not</em></strong> the comma operator because it doesn't exist within an <em>expression</em>. The comma has a special meaning in <code>var</code> <em>statements</em>. <code>a, b</code> in an expression would be referring to the two variables and evaluate to <code>b</code>, which is not the case for <code>var a, b</code>.</p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>I'd disagree with Flanagan, and say, that comma is really useful and allows to write more readable and elegant code, especially when you know what you're doing:</p>\n\n<p>Here's the <a href=\"http://javascriptweblog.wordpress.com/2011/04/04/the-javascript-comma-operator/\" rel=\"nofollow\">greatly detailed article</a> on comma usage: </p>\n\n<p>Several examples from out from there for the proof of demonstration:</p>\n\n<pre><code>function renderCurve() {\n  for(var a = 1, b = 10; a*b; a++, b--) {\n    console.log(new Array(a*b).join('*'));\n  }\n}\n</code></pre>\n\n<p>A fibonacci generator:</p>\n\n<pre><code>for (\n    var i=2, r=[0,1];\n    i&lt;15;\n    r.push(r[i-1] + r[i-2]), i++\n); \n// 0,1,1,2,3,5,8,13,21,34,55,89,144,233,377\n</code></pre>\n\n<p>Find first parent element, analogue of jQuery <code>.parent()</code> function:</p>\n\n<pre><code>function firstAncestor(el, tagName) {\n    while(el = el.parentNode, el &amp;&amp; (el.tagName != tagName.toUpperCase()));\n    return el;\n}\n\n//element in http://ecma262-5.com/ELS5_HTML.htm\nvar a = $('Section_15.1.1.2'); \n\nfirstAncestor(a, 'div'); //&lt;div class=\"page\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Another area where comma operator can be used is Code Obfuscation.</p>\n\n<p>Let's say a developper writes some code like this:</p>\n\n<pre><code>var foo = 'bar';\n</code></pre>\n\n<p>Now, she decides to obfuscate the code. The tool used may changed the code like this:</p>\n\n<pre><code>var Z0b=(45,87)&gt;(195,3)?'bar':(54,65)&gt;(1,0)?'':'baz';// Z0b == 'bar'\n</code></pre>\n\n<p><strong>Demo:</strong> <a href=\"http://jsfiddle.net/uvDuE/\" rel=\"nofollow\">http://jsfiddle.net/uvDuE/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>One typical case I end up using it is during optional argument parsing.  I think it makes it both more readable and more concise so that the argument parsing doesn't dominate the function body.</p>\n\n<pre><code>/**\n * @param {string} [str]\n * @param {object} [obj]\n * @param {Date} [date]\n */\nfunction f(str, obj, date) {\n  // handle optional arguments\n  if (typeof str !== \"string\") date = obj, obj = str, str = \"default\";\n  if (obj instanceof Date) date = obj, obj = {};\n  if (!(date instanceof Date)) date = new Date();\n\n  // ...\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I read <a href=\"http://stackoverflow.com/questions/3561043/javascript-syntax-what-comma-means\">this</a> question about the <code>comma operator (,)</code> and the MDN <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/Special_Operators/Comma_Operator\">docs</a> about it.</p>\n\n<p>But I just can't think on a <strong>real</strong> scenario where it's handy and useful.</p>\n\n<p>Is the <code>comma operator</code> really a confusing and useless \"feature\" of javascript?</p>\n",
            "last_activity_date": 1418941257,
            "question_id": 9579546,
            "score": 18,
            "tags": [
                "javascript",
                "operators",
                "comma"
            ],
            "title": "Comma operator(,) Where it can &quot;really&quot; be useful"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>ID and class selectors, at least when used by themselves, tend to be faster, whether for jQuery or for CSS. This is due largely to the fact that browsers have optimized algorithms for IDs and classes in their DOM/CSS engines.</p>\n\n<p>In modern browsers with recent versions of jQuery, any selector strings that are understood as supported CSS selectors by a browser will be handled by <code>document.querySelectorAll()</code>, offering maximum performance as long as standard CSS selectors are used. Non-standard selectors or older browsers are taken care of by jQuery and/or the Sizzle library, which do their best to make use of the DOM's get-element(s) methods to traverse the DOM.</p>\n\n<p>The most important thing to remember is that performance will vary from browser (version) to browser (version) because of differing DOM implementations. At least, that's how I believe things are.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Id is fastest, because it is the only element that can have that identifier.  Many objects could possibly have the same class name.  Someone could verify this, but it would seem like the document would not need to be traversed any further once the id was found. For classes this may not be the case??  HTH</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Selecting by ID is the fastest, because it maps directly to getElementByID, the other 2 has to check each element to determine the selected elements.</p>\n\n<p>If you must select using class or attribute, then try enclosing the search in a ID.\nex.</p>\n\n<pre><code>$(\"#someid .someclass\")\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>ID is absolutely the fastest.  Part of the reason is that ID is supposed to be unique, so the API stops searching after the ID is found in the DOM.</p>\n\n<p>If you must use a class or attribute selector, you can improve performance by specifying the optional context parameter.</p>\n\n<p>For example...</p>\n\n<pre><code>$(\".someclass\", \"#somecontainer\")\n</code></pre>\n\n<p>Where <code>somecontainer</code> is something like a div, surrounding an element with class <code>someclass</code>.  This can offer a huge performance benefit in the cases where <code>somecontainer</code> comprises a small fraction of the DOM. </p>\n\n<hr>\n\n<p>UPDATE:</p>\n\n<p>I did some tests a couple years ago around the context parameter.  After reading the comments below I was curious if anything has changed.  Indeed, it seems the scene has changed somewhat with today's browsers.  Maybe it also has to do with improvements in jQuery?  I don't know.</p>\n\n<p>Here are my results with 10,000 iterations (code is below):</p>\n\n<p><strong>IE9</strong></p>\n\n<p><code>$(\".someclass\")</code> - 2793 ms</p>\n\n<p><code>$(\".someclass\", \"#somecontainer\")</code> - 1481 ms</p>\n\n<p><strong>Chrome 12</strong></p>\n\n<p><code>$(\".someclass\")</code> - 75 ms</p>\n\n<p><code>$(\".someclass\", \"#somecontainer\")</code> - 104 ms</p>\n\n<p><strong>Firefox 3.6</strong></p>\n\n<p><code>$(\".someclass\")</code> - 308 ms</p>\n\n<p><code>$(\".someclass\", \"#somecontainer\")</code> - 357 ms</p>\n\n<p>So among these big 3 modern browsers, the context parameter only seems to help IE9.  Older browsers will also benefit from the context parameter.  But considering the prevalence of each of these browsers and averaging everything out, the net gain is somewhat of a wash now.</p>\n\n<p>And here's the code in case anyone wants to try it themselves...</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-1.6.1.min.js\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\"&gt;\n            $(document).ready(function(){\n\n                startTime = new Date().getTime();               \n                for (i = 0; i &lt; 10000; i++)\n                {\n                    s = $(\".someclass\");\n                }           \n                $(\"#withoutcontext\").html(elapsedMilliseconds(startTime));\n\n\n                startTime = new Date().getTime();\n                for (i = 0; i &lt; 10000; i++)\n                {\n                    s = $(\".someclass\", \"#somecontainer\");\n                }           \n                $(\"#withcontext\").html(elapsedMilliseconds(startTime));\n\n            });\n\n            function elapsedMilliseconds(startTime)\n            {\n                var n = new Date();\n                var s = n.getTime();\n                var diff = s - startTime;\n                return diff;\n            }\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;jQuery Selector Performance: Context vs No Context&lt;/h1&gt;\n\n        &lt;h2&gt;$(\".someclass\")&lt;/h2&gt;\n        &lt;span id=\"withoutcontext\"&gt;---&lt;/span&gt; ms&lt;br /&gt;&lt;br /&gt;\n\n        &lt;h2&gt;$(\".someclass\", \"#somecontainer\")&lt;/h2&gt;\n        &lt;span id=\"withcontext\"&gt;---&lt;/span&gt; ms&lt;br /&gt;&lt;br /&gt;\n\n        &lt;hr /&gt;\n\n        &lt;p class=\"a\"&gt;a&lt;/p&gt;\n        &lt;p class=\"b\"&gt;b&lt;/p&gt;\n        &lt;p class=\"c\"&gt;c&lt;/p&gt;\n        &lt;p class=\"a\"&gt;a&lt;/p&gt;\n        &lt;p class=\"b\"&gt;b&lt;/p&gt;\n        &lt;p class=\"c\"&gt;c&lt;/p&gt;\n        &lt;p class=\"a\"&gt;a&lt;/p&gt;\n        &lt;p class=\"b\"&gt;b&lt;/p&gt;\n        &lt;p class=\"c\"&gt;c&lt;/p&gt;\n        &lt;p class=\"a\"&gt;a&lt;/p&gt;\n        &lt;p class=\"b\"&gt;b&lt;/p&gt;\n        &lt;p class=\"c\"&gt;c&lt;/p&gt;\n        &lt;p class=\"a\"&gt;a&lt;/p&gt;\n        &lt;p class=\"b\"&gt;b&lt;/p&gt;\n        &lt;p class=\"c\"&gt;c&lt;/p&gt;\n        &lt;div id=\"somecontainer\"&gt;\n            &lt;p class=\"a\"&gt;a&lt;/p&gt;\n            &lt;p class=\"b\"&gt;b&lt;/p&gt;\n            &lt;p class=\"c\"&gt;c&lt;/p&gt;\n            &lt;p class=\"someclass\"&gt;someclass&lt;/p&gt;\n        &lt;/div&gt;\n        &lt;p class=\"a\"&gt;a&lt;/p&gt;\n        &lt;p class=\"b\"&gt;b&lt;/p&gt;\n        &lt;p class=\"c\"&gt;c&lt;/p&gt;\n        &lt;p class=\"a\"&gt;a&lt;/p&gt;\n        &lt;p class=\"b\"&gt;b&lt;/p&gt;\n        &lt;p class=\"c\"&gt;c&lt;/p&gt;\n        &lt;p class=\"a\"&gt;a&lt;/p&gt;\n        &lt;p class=\"b\"&gt;b&lt;/p&gt;\n        &lt;p class=\"c\"&gt;c&lt;/p&gt;\n        &lt;p class=\"a\"&gt;a&lt;/p&gt;\n        &lt;p class=\"b\"&gt;b&lt;/p&gt;\n        &lt;p class=\"c\"&gt;c&lt;/p&gt;\n        &lt;p class=\"a\"&gt;a&lt;/p&gt;\n        &lt;p class=\"b\"&gt;b&lt;/p&gt;\n        &lt;p class=\"c\"&gt;c&lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>The id will always be fastest as it it unique on the page.  The class \"may\" be faster than an attribute but it depends.</p>\n\n<p>The real kicker here is selection of a class within and ID may NOT be faster than just selection of the class.  It will depend on the page and browser.  In my testing, selection of a complex page with a limited number of elements with a \"class\" where the parent of the class element had an id such as:</p>\n\n<pre><code>&lt;div id='iamout'&gt;\n  &lt;div class='aonther'&gt;\n    &lt;div class='iamin'&gt;stuff&lt;/div&gt;\n    &lt;div class='iamin'&gt;stuff&lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>a selector such as <code>$('.iamin','#iamout')</code> was not always as fast as <code>$('.iamin')</code></p>\n\n<p>Not all browsers support select by classname (natively), but modern/newer ones do and thus it might offer better performance depending upon which browser you have.</p>\n\n<p>If you need to have optimum performance you will need to test your exact page.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>ID is unique and if you only want to select one/first element here the equivalent </p>\n\n<blockquote>\n  <p>$(\"#someid\") => 75,695 ops/sec, fastest</p>\n  \n  <p>$(.unique_class') => 45,257 ops/sec, 40% slower : only one class on page</p>\n  \n  <p>$(\".someclass\").first() => 42,217 ops/sec, 46% slower : multiple class on page, select first element</p>\n  \n  <p>$(\".someclass:eq(0)\") => 18,324 ops/sec, 76% slower : multiple class on page, select element at selected index</p>\n</blockquote>\n\n<p>Test url: <a href=\"http://jsperf.com/jquery-selector-speed-tests/98\" rel=\"nofollow\">http://jsperf.com/jquery-selector-speed-tests/98</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Basically, is </p>\n\n<pre><code>$(\"#someid\")\n</code></pre>\n\n<p>or</p>\n\n<pre><code>$(\".someclass\")\n</code></pre>\n\n<p>faster than</p>\n\n<pre><code>$(\"[someattr='value']\")\n</code></pre>\n\n<p>I would imagine that it is (that is, selection by id is fastest, then class, then attribute), but does anyone know for sure?</p>\n",
            "last_activity_date": 1405506762,
            "question_id": 6460644,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "jquery-selectors"
            ],
            "title": "In jQuery, is selecting by class or id faster than selecting by some other attribute?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>onload fires after ALL your content has loaded (including external images etc). It's possible those resources are taking a long time to load on the first go (before they are cached). Another possibility is an error in your code that only affects IE as is stopping your scripts (but only the first time is odd).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you are getting different results using Apache vs. another web server (IIS?) and comparing the end result using IE8, then the differrence must be in the content type header being sent.  Get the wget utility for your platform and see the headers that are produced.  If you are on Windows, then the <a href=\"http://portableapps.com/apps/internet/winwget%5Fportable\" rel=\"nofollow\">Portable Apps version of the GUI wget</a> is pretty nice.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The following code works for me.  When I load the page in Firefox I see the alert instantly.  When I first load the page in IE 8 it warns me about active content.  If I allow the blocked content it asks me to confirm, which I do.  Then the alert appears as expected.  If this does not work for you, try IE 8 on a different computer or start eliminating code in your page to check for errors.  You could do a binary search: comment out the first half of the page and see if the alert appears; if it still does not, then uncomment out the first half and comment out the second half.  Repeat as needed until you've narrowed it down to the offending code.  Incidentally you don't need XHTML for IE8 compliance.  HTML works fine and actually has some advantages.</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\" xml:lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=8\"/&gt;\n    &lt;title&gt;&lt;/title&gt;\n    &lt;style type=\"text/css\"&gt;\n    &lt;/style&gt;\n    &lt;script type=\"text/javascript\"&gt;\n    window.onload=function() { alert('hello');};\n    &lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could have an error in your JavaScript's, if that happens, any JavaScript after that will not function correctly.</p>\n\n<p>Try to remove the reference to login.js and common.js and try an alert within your problematic function.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I don't have IE8 to personally test, but what does this test do?</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\" xml:lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /&gt;\n&lt;title&gt;Test IE 8&lt;/title&gt;\n&lt;script type=\"text/javascript\"&gt;\n/* &lt;![CDATA[ */\nwindow.onload = function(){alert('Good morning!');}\n/* ]]&gt; */\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Hello&lt;/h1&gt;\n&lt;body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>If this test works as expected, try the CDATA bit around your internal JavaScript block. </p>\n\n<p>And then, if that does not work as expected, there is probably something in the external JavaScript above it that prevents your onload from firing. The previous poster mentioned this. At that point, try your error console or debugger to point the way.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For IE try:</p>\n\n<pre><code>window.onload = new function() { alert('hello');};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>This is a pretty old thread but I found a solution that might help others.</p>\n\n<p>I was adding a function to <code>window.onload</code> via a dynamically injected script (really to mimic an external script load for reasons which are not important in this context). As stated in this post, on the first load within IE8, the <code>window.onload</code> would not fire, but all subsequent calls would.</p>\n\n<p>I found out that if I put this in the HTML file as an internal script, it would work everytime:</p>\n\n<pre><code>var windowOnload = window.onload || function() {};\nwindow.onload = function() { windowOnload(); };\n</code></pre>\n\n<p>All the above code does is \"initializes\" IE8's <code>window.onload</code> unobtrusively.  I suspect that IE8 fails to trigger <code>window.onload</code> the first time if it is called from an external script as the <code>onload</code> event isn't attached yet to window (or in tech terms, its typeof is undefined).  It seems that the first time that's what IE8 is doing: attaching <code>onload</code> to window without executing it properly.</p>\n\n<p>The above code then becomes quite obvious:  We are merely forcing IE8 to recognize the <code>onload</code> event.  We don't care what gets executed, or what doesn't, so we simply make sure to pipe on through any existing <code>window.onload</code> code that is already defined (just as a precaution).</p>\n\n<p>It is important to have this as an internal script to the HTML (at least from my testing).</p>\n\n<p>Your HTML would thus look something like this (the relevant parts):</p>\n\n<pre><code> &lt;script type=\"text/javascript\"&gt;\n  var windowOnload=window.onload||function(){};window.onload=function(){windowOnload();};\n &lt;/script&gt;\n &lt;script type=\"text/javascript\" src=\"script.js\"&gt;\n &lt;/script&gt;\n</code></pre>\n\n<p>From my testing, after clearing cache, and reloading the page, I have gotten <code>window.onload</code> to successfully trigger each time.  </p>\n\n<p>I hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I know this is kinda old question, but I just faced the same thing. </p>\n\n<pre><code> window.onload=function() { alert('hello');};\n</code></pre>\n\n<p>is treated differently than </p>\n\n<pre><code> window.onload= new function() { alert('hello');};\n</code></pre>\n\n<p>The keyword here is <code>new</code>. </p>\n\n<p>My JS was terminating whenever it reaches (onload=) part until I added the word'new' before 'function'. Even though it worked fine without 'new' in my localhost, but once I put it online, it doesn't work until I add 'new'. </p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Old question but I had the same issue but it turned out to be another problem. My problem was that I did <code>&lt;script type=\"application/javascript\"&gt;</code> which <code>&lt;IE9</code> does not understand or try to run even. For it to work for older browsers you still have to use <code>text/javascript</code> even though this isn't technically the correct type...</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to make my pages work correctly with IE 8, I found out from here: <a href=\"http://www.masykur.web.id/post/How-to-Make-Our-Website-to-be-Ready-for-IE8.aspx\">http://www.masykur.web.id/post/How-to-Make-Our-Website-to-be-Ready-for-IE8.aspx</a>\nthat, my page has to be XHTML 1.0 compliant and atleast CSS 2.1 compliant, I made my page and CSS compliant with only few warnings, but still window.onload() is not firing. Does anybody encountered this problem?</p>\n\n<p>here is the code snippet:</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\" xml:lang=\"en\"&gt;\n    &lt;head&gt;\n    \t&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=8\"/&gt;\n        &lt;title&gt;Testing&lt;/title&gt;\n        &lt;link rel=\"stylesheet\" href=\"test.css\" type=\"text/css\"&gt;&lt;/link&gt;\n        &lt;script type=\"text/javascript\" src=\"login.js\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\" src=\"common.js\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\"&gt;\n    \t\twindow.onload = function()\n    \t\t{\n                          // Not coming here at all on first shot   \n    \t\t}\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n     .\n     .\n     .\n</code></pre>\n\n<p>However refreshing the page seems to make it work.</p>\n\n<p>Am I missing something here?</p>\n\n<p><strong>UPDATE:</strong></p>\n\n<p>One of the IE addons created this problem, after disabling its working fine. Thanks for your time and answers :)</p>\n",
            "last_activity_date": 1382967394,
            "question_id": 886668,
            "score": 17,
            "tags": [
                "javascript",
                "html",
                "internet-explorer",
                "xhtml",
                "internet-explorer-8"
            ],
            "title": "window.onload() is not firing with IE 8 in first shot"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>This is an example of making a CORS request. If you have access to the server (which I assume you do since this is a request to localhost), you will need to add CORS-specific response headers. The simplest thing to do is to add the following response headers:</p>\n\n<pre><code>Access-Control-Allow-Origin: *\nAccess-Control-Allow-Methods: GET, POST, PUT, DELETE\nAccess-Control-Allow-Headers: Authorization\n</code></pre>\n\n<p>Your server also needs to be configured to respond to HTTP OPTIONS requests. You can learn more about making CORS requests here: <a href=\"http://www.html5rocks.com/en/tutorials/cors/\">http://www.html5rocks.com/en/tutorials/cors/</a></p>\n",
                    "is_accepted": true,
                    "score": 26
                }
            ],
            "body": "<p>I'm trying to send a cross-origin domain and adding a custom 'Authorization'-header.\nPlease see the code below.</p>\n\n<p><strong>Error:</strong></p>\n\n<p>XMLHttpRequest cannot load {url}. Request header field Authorization is not allowed by Access-Control-Allow-Headers.</p>\n\n<pre><code>function loadJson(from, to) {\n    $.ajax({\n        //this is a 'cross-origin' domain\n        url : \"http://localhost:2180/api/index.php\",\n        dataType : 'json',\n        data : { handler : \"statistic\", from : from, to : to\n        },\n        beforeSend : setHeader,\n        success : function(data) {\n            alert(\"success\");\n        },\n        error : function(jqXHR, textStatus, errorThrown) {\n            alert(\"error\");\n        }\n    });\n}\n\nfunction getToken() {\n    var cookie = Cookie.getCookie(cookieName);\n    var auth = jQuery.parseJSON(cookie);\n    var token = \"Token \" + auth.id + \":\" + auth.key;\n}\n\nfunction setHeader(xhr) {\n    xhr.setRequestHeader('Authorization', getToken());\n}\n</code></pre>\n\n<p>I also tried:</p>\n\n<pre><code>headers : { 'Authorization' : getToken() },\n</code></pre>\n\n<p>in the ajax request.</p>\n\n<p>Could it be that the jquery-ajax framework is blocking cross-origin Authentification? How can I fix this?</p>\n\n<p>//EDIT:</p>\n\n<p>By the way: is there a safer method to store the auth.key on client-side then in a cookie?\ngetToken() will be replaced with a more complex method, hashing the body, date,etc.</p>\n",
            "last_activity_date": 1330967382,
            "question_id": 9559947,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "cross-domain"
            ],
            "title": "cross-origin &#39;Authorization&#39;-header with jquery.ajax()"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>A slightly modified binary search on the array would work.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>For a small range, the simplest thing is to have a map array, where, eg, the 80th entry would have the value 82 in it, to use your example.  For a much larger, sparse range, probably the way to go is a binary search.</p>\n\n<p>With a query language you could query for values some distance either side of your input number and then sort through the resulting reduced list.  But SQL doesn't have a good concept of \"next\" or \"previous\", to give you a \"clean\" solution.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's the pseudo-code which should be convertible into any procedural language:</p>\n\n<pre><code>array = [2, 42, 82, 122, 162, 202, 242, 282, 322, 362]\nnumber = 112\nprint closest (number, array)\n\ndef closest (num, arr):\n    curr = arr[0]\n    foreach val in arr:\n        if abs (num - val) &lt; abs (num - curr):\n            curr = val\n    return curr\n</code></pre>\n\n<p>It simply works out the absolute differences between the given number and each array element and gives you back one of the ones with the minimal difference.</p>\n\n<p>For the example values:</p>\n\n<pre><code>number = 112  112  112  112  112  112  112  112  112  112\narray  =   2   42   82  122  162  202  242  282  322  362\ndiff   = 110   70   30   10   50   90  130  170  210  250\n                         |\n                         +-- one with minimal absolute difference.\n</code></pre>\n\n<p>As a proof of concept, here's the Python code I used to show this in action:</p>\n\n<pre><code>def closest (num, arr):\n    curr = arr[0]\n    for index in range (len (arr)):\n        if abs (num - arr[index]) &lt; abs (num - curr):\n            curr = arr[index]\n    return curr\n\narray = [2, 42, 82, 122, 162, 202, 242, 282, 322, 362]\nnumber = 112\nprint closest (number, array)\n</code></pre>\n\n<hr>\n\n<p>And, if you <em>really</em> need it in Javascript, see below for a complete HTML file which demonstrates the function in action:</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;&lt;/head&gt;\n    &lt;body&gt;\n        &lt;script language=\"javascript\"&gt;\n            function closest (num, arr) {\n                var curr = arr[0];\n                var diff = Math.abs (num - curr);\n                for (var val = 0; val &lt; arr.length; val++) {\n                    var newdiff = Math.abs (num - arr[val]);\n                    if (newdiff &lt; diff) {\n                        diff = newdiff;\n                        curr = arr[val];\n                    }\n                }\n                return curr;\n            }\n            array = [2, 42, 82, 122, 162, 202, 242, 282, 322, 362];\n            number = 112;\n            alert (closest (number, array));\n        &lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>Working code as below:</p>\n\n<pre><code>var array = [2, 42, 82, 122, 162, 202, 242, 282, 322, 362];\n\nfunction closest(array,num){\n    var i=0;\n    var minDiff=1000;\n    var ans;\n    for(i in array){\n         var m=Math.abs(num-array[i]);\n         if(m&lt;minDiff){ \n                minDiff=m; \n                ans=array[i]; \n            }\n      }\n    return ans;\n}\nalert(closest(array,88));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>ES5 Version:</p>\n\n<pre><code>var counts = [4, 9, 15, 6, 2],\n  goal = 5;\n\nvar closest = counts.reduce(function (prev, curr) {\n  return (Math.abs(curr - goal) &lt; Math.abs(prev - goal) ? curr : prev);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I don't know if I'm supposed to answer an old question, but as this post appears first on Google searches, I hoped that you would forgive me adding my solution &amp; my 2c here.</p>\n\n<p>Being lazy, I couldn't believe that the solution for this question would be a LOOP, so I searched a bit more and came back with <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\" rel=\"nofollow\">filter function</a>:</p>\n\n<pre><code>var myArray = [2, 42, 82, 122, 162, 202, 242, 282, 322, 362];\nvar myValue = 80;\n\nfunction BiggerThan(inArray) {\n  return inArray &gt; myValue;\n}\n\nvar arrBiggerElements = myArray.filter(BiggerThan);\nvar nextElement = Math.min.apply(null, arrBiggerElements);\nalert(nextElement);\n</code></pre>\n\n<p>That's all !</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>All answers so far concentrate on searching through the whole array.\nConsidering your array is sorted already and you really only want the nearest number this is probably the fastest solution:</p>\n\n<pre><code>var a = [2, 42, 82, 122, 162, 202, 242, 282, 322, 362];\nvar target = 90000;\n\n/**\n* Returns the closest number from a sorted array.\n**/\nfunction closest(arr, target) {\n    if (!(arr) || arr.length == 0)\n        return null;\n    if (arr.length == 1)\n        return i[0];\n\n    for (var i=1; i&lt;arr.length; i++) {\n        // As soon as a number bigger than target is found, return the previous or current\n        // number depending on which has smaller difference to the target.\n        if (a[i] &gt; target) {\n            var p = arr[i-1];\n            var c = arr[i]\n            return Math.abs( p-target ) &lt; Math.abs( c-target ) ? p : c;\n        }\n    }\n    // No number in array is bigger so return the last.\n    return arr[arr.length-1];\n}\n\n// Trying it out\nconsole.log( closest(a, target) );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>My answer to a similar question is accounting for ties too and it is in plain Javascript, although it doesn't use binary search so it is O(N) and not O(logN):</p>\n\n<pre><code>var searchArray= [0, 30, 60, 90];\nvar element= 33;\n\nfunction findClosest(array,elem){\n    var minDelta = null;\n    var minIndex = null;\n    for (var i = 0 ; i&lt;array.length; i++){\n        var delta = Math.abs(array[i]-elem);\n        if (minDelta == null || delta &lt; minDelta){\n            minDelta = delta;\n            minIndex = i;\n        }\n        //if it is a tie return an array of both values\n        else if (delta == minDelta) {\n            return [array[minIndex],array[i]];\n        }//if it has already found the closest value\n        else {\n            return array[i-1];\n        }\n\n    }\n    return array[minIndex];\n}\nvar closest = findClosest(searchArray,element);\n</code></pre>\n\n<p><a href=\"http://stackoverflow.com/a/26429528/986160\">http://stackoverflow.com/a/26429528/986160</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have a number from minus 1000 to plus 1000 and I have an array with numbers in it. Like this:</p>\n\n<pre><code>[2, 42, 82, 122, 162, 202, 242, 282, 322, 362]\n</code></pre>\n\n<p>I want that the number I've got changes to the nearest number of the array.</p>\n\n<p>For example I get <code>80</code> as number I want it to get <code>82</code>.</p>\n",
            "last_activity_date": 1425573997,
            "question_id": 8584902,
            "score": 16,
            "tags": [
                "javascript",
                "arrays"
            ],
            "title": "get closest number out of array"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I was able to get this working using the following script block format, but I'm still curious if this is the best way:</p>\n\n<pre><code>&lt;script for=\"MyControl\" event=\"ReceiveMessage(msg)\"&gt;\n    alert(msg);\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>I think that the MyControl::ReceiveMessage example does not work because the ActiveX control is being exposed with a different name or in a different scope.</p>\n\n<p>With the example GetControl::ReceiveMessage, I believe that the function definition is being parsed before the GetControl reference is being set, thus it does not refer to a valid object and cannot bind the function to the object.</p>\n\n<p>I would attack this problem by using the MS script debugger and trying to determine if a default reference for the control exists with a different name or in a different scope (possibly as a child of the form).  If you can determine the correct reference for the control, you should be able to bind the function properly with the Automagic :: method that the MSDN article specifies.</p>\n\n<p>One more thought, the reference may be based on the name of the object and not the ID, so try setting both :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you have an ActiveX element on your page that has an id of 'MyControl' then your javascript handler syntax is this:</p>\n\n<pre><code>function MyControl::ReceiveMessage(msg)\n{\n   alert(msg);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>OK, but if you are using C# (.NET 2.0) with inherited UserControl (ActiveX)...\nThe only way to make it work is by \"Extending\" the event's handler functionality:\n<a href=\"http://www.codeproject.com/KB/dotnet/extend_events.aspx?display=Print\" rel=\"nofollow\">http://www.codeproject.com/KB/dotnet/extend_events.aspx?display=Print</a></p>\n\n<p>The above project link from our friend Mr. Werner Willemsens has saved my project.\nIf you don't do that the javascript can't bind to the event handler.</p>\n\n<p>He used the \"extension\" in a complex way due to the example he chose but if you make it simple, attaching the handle directly to the event itself, it also works.\nThe C# ActiveX should support \"ScriptCallbackObject\" to bind the event to a javascript function like below:</p>\n\n<pre><code>  var clock = new ActiveXObject(\"Clocks.clock\");\n  var extendedClockEvents = clock.ExtendedClockEvents();\n  // Here you assign (subscribe to) your callback method!\n  extendedClockEvents.ScriptCallbackObject = clock_Callback; \n  ...\n  function clock_Callback(time)\n  {\n    document.getElementById(\"text_tag\").innerHTML = time;\n  }\n</code></pre>\n\n<p>Of course you have to implement IObjectSafety and the other security stuff to make it work better.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I found this code works within a form tag.  In this example, callback is a function parameter passed in by javascript to the ActiveX control, and callbackparam is a parameter of the callback event generated within the activeX control.  This way I use the same event handler for whatever types of events, rather than try to declare a bunch of separate event handlers.</p>\n\n<blockquote>\n  <blockquote>\n    <p><code>&lt;object id=\"ActivexObject\" name=\"ActivexObject\" classid=\"clsid:15C5A3F3-F8F7-4d5e-B87E-5084CC98A25A\"&gt;&lt;/object&gt;</code>  </p>\n    \n    <p><code>&lt;script&gt;</code><br />\n    <code>function document.ActivexObject::OnCallback(callback, callbackparam){</code><br />\n    <code>    callback(callbackparam);</code><br />\n    <code>}</code><br />\n    <code>&lt;/script&gt;</code>  </p>\n  </blockquote>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have used activex in my applications before. i place the object tags in the ASP.NET form and the following JavaScript works for me.</p>\n\n<pre><code>function onEventHandler(arg1, arg2){\n    // do something\n}\n\nwindow.onload = function(){\n    var yourActiveXObject = document.getElementById('YourObjectTagID');\n    if(typeof(yourActiveXObject) === 'undefined' || yourActiveXObject === null){\n        alert('Unable to load ActiveX');\n        return;\n    }\n\n    // attach events\n    var status = yourActiveXObject.attachEvent('EventName', onEventHandler);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>In my case, I needed a way to dynamically create ActiveX controls and listen to their events. I was able to get something like this to work:</p>\n\n<pre><code>//create the ActiveX\nvar ax = $(\"&lt;object&gt;&lt;/object&gt;\", {\n    classid: \"clsid:\" + clsid,\n    codebase: install ? cabfile : undefined,\n    width: 0,\n    height: 0,\n    id: '__ax_'+idIncrement++\n})\n.appendTo('#someHost');\n</code></pre>\n\n<p>And then to register a handler for an event:</p>\n\n<pre><code>//this function registers an event listener for an ActiveX object (obviously for IE only)\n//the this argument for the handler is the ActiveX object.\nfunction registerAXEvent(control, name, handler) {\n    control = jQuery(control);\n\n    //can't use closures through the string due to the parameter renaming done by the JavaScript compressor\n    //can't use jQuery.data() on ActiveX objects because it uses expando properties\n\n    var id = control[0].id;\n\n    var axe = registerAXEvent.axevents = registerAXEvent.axevents || {};\n    axe[id] = axe[id] || {};\n    axe[id][name] = handler;\n\n    var script =\n    \"(function(){\"+\n    \"var f=registerAXEvent.axevents['\" + id + \"']['\" + name + \"'],e=jQuery('#\" + id + \"');\"+\n    \"function document.\" + id + \"::\" + name + \"(){\"+\n        \"f.apply(e,arguments);\"+\n    \"}\"+\n    \"})();\";\n    eval(script);\n}\n</code></pre>\n\n<p>This code allows you to use closures and minimizes the scope of the eval().</p>\n\n<p>The ActiveX control's <code>&lt;object&gt;</code> element must already be added to the document; otherwise, IE will not find the element and you'll just get script errors.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>This is somewhat of a follow-up to an answer <a href=\"http://stackoverflow.com/questions/26536/active-x-control-javascript\">here</a>.</p>\n\n<p>I have a custom ActiveX control that is raising an event (\"ReceiveMessage\" with a \"msg\" parameter) that needs to be handled by Javascript in the web browser. Historically we've been able to use the following IE-only syntax to accomplish this on different projects:</p>\n\n<pre><code>function MyControl::ReceiveMessage(msg)\n{\n   alert(msg);\n}\n</code></pre>\n\n<p>However, when inside a layout in which the control is buried, the Javascript cannot find the control. Specifically, if we put this into a plain HTML page it works fine, but if we put it into an ASPX page wrapped by the <code>&lt;Form&gt;</code> tag, we get a \"MyControl is undefined\" error. We've tried variations on the following:</p>\n\n<pre><code>var GetControl = document.getElementById(\"MyControl\");\nfunction GetControl::ReceiveMessage(msg)\n{\n   alert(msg);\n}\n</code></pre>\n\n<p>... but it results in the Javascript error \"GetControl is undefined.\"</p>\n\n<p>What is the proper way to handle an event being sent from an ActiveX control? Right now we're only interested in getting this working in IE. This has to be a custom ActiveX control for what we're doing.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1412850038,
            "question_id": 150814,
            "score": 16,
            "tags": [
                "javascript",
                "events",
                "activex"
            ],
            "title": "How to handle an ActiveX event in Javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>There are multiple ways of doing it, though some will only work in certain browsers.  One that I know off the top of my head is to embed a tiny near-invisible iframe on the page.  When the user hits the back button the iframe is navigated back which you can detect and then update your page.  <a href=\"http://www.ajaxonomy.com/2007/web-design/a-better-ajax-back-button-solution\">Here</a> is another solution.</p>\n\n<p>You might also want to go view source on something like gmail and see how they do it.</p>\n\n<p><a href=\"http://www.codeproject.com/KB/ajax/Salajax.aspx\">Here's</a> a library for the sort of thing you're looking for by the way</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>There's no way to tell when a user clicks the back button of presses the backspace key to go back in the browser, however there are other events that happen in a certain order which are detectable.  This <a href=\"http://www.willmaster.com/library/javascript/detecting_a_back_button_click.php\" rel=\"nofollow\">example javascript</a> has a reasonably good method for detecting back commands:</p>\n\n<p>The traditional way, however, is to track user movement through your site using cookies or referrer pages.  When the user goes to page A, then page B, then appears at page A again (especially when there's no link on B to A) then you know they went back - A can detect this and redirect them or otherwise.</p>\n\n\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>One of my favorite frameworks for doing this is <a href=\"http://developer.yahoo.com/yui/history/\">Yahoo!'s Browser History Manager</a>.  You register events and it calls you back when the user returns Back to that state.  And if you want to learn how it works, <a href=\"http://yuiblog.com/blog/2007/02/21/browser-history-manager/\">here's a fun blog entry about the decisions Yahoo! made</a> when designing it.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>The Yahoo User Interface Library, my personal favorite client-side JS library, has an excellent <a href=\"http://developer.yahoo.com/yui/history/\" rel=\"nofollow\">Browser History Manager</a> that does exactly what you're asking for.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The dojo toolkit has functionality to deal with this in javascript. I don't think there is any good way to handle it in pure PHP.</p>\n\n<p>Here is the docs page they have: <a href=\"http://dojotoolkit.org/book/dojo-book-0-9/part-3-programmatic-dijit-and-dojo/back-button-undo\" rel=\"nofollow\">http://dojotoolkit.org/book/dojo-book-0-9/part-3-programmatic-dijit-and-dojo/back-button-undo</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is it possible to detect when the user clicks on the browser's back button? </p>\n\n<p>I have an Ajax application and if I can detect when the user clicks on the back button I can display the appropriate data back</p>\n\n<p>Any solution using PHP, JavaScript is preferable. Hell a solution in any language is fine, just need something that I can translate to PHP/JavaScript</p>\n\n<h3>Edit: Cut and paste from below:</h3>\n\n<p>Wow, all excellent answers. I'd like to use Yahoo but I already use Prototype and Scriptaculous libs and dont want to add more ajax libs. But it uses iFrames which gives me a good pointer to write my own code.</p>\n\n<p>Now the other dilemna, Not sure which to select as \"accept answer\"</p>\n\n<p><em>Also, how the hell do you comment on a answer? I see no link!</em></p>\n",
            "last_activity_date": 1308149243,
            "question_id": 55871,
            "score": 15,
            "tags": [
                "php",
                "javascript",
                "browser"
            ],
            "title": "Track when user hits back button on the browser"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You could do something like this:</p>\n\n<pre><code>for (var i in window) {\n    // i is the variable name\n    // window[i] is the value of the variable\n}\n</code></pre>\n\n<p>Though with this, you'll get a bunch of extra DOM properties attached to window.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Something like this:</p>\n\n<pre><code>function getGlobalProperties(prefix) {\n  var keyValues = [], global = window; // window for browser environments\n  for (var prop in global) {\n    if (prop.indexOf(prefix) == 0) // check the prefix\n      keyValues.push(prop + \"=\" + global[prop]);\n  }\n  return keyValues.join('&amp;'); // build the string\n}\n</code></pre>\n\n<p>A test usage:</p>\n\n<pre><code>var xxx_foo = \"foo\";\nxxx_bar = \"bar\";\nwindow.xxx_baz = \"baz\";\n\nvar test = getGlobalProperties('xxx_');\n// test contains \"xxx_baz=baz&amp;xxx_bar=bar&amp;xxx_foo=foo\"\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>In some cases you may want to find non-<a href=\"https://developer.mozilla.org/en-US/docs/Enumerability_and_ownership_of_properties\" rel=\"nofollow\">enumerable</a> properties; therefore <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/for...in\" rel=\"nofollow\"><code>for..in</code></a> won't work <em>(<a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-12.6.4\" rel=\"nofollow\">spec</a>, <a href=\"http://stackoverflow.com/q/12146473/1615483\">about chrome</a>)</em> and neither would <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/keys\" rel=\"nofollow\"><code>Object.keys</code></a> as both only use enumerable keys. Notice that <code>for..in</code> is different to <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/in\" rel=\"nofollow\"><code>in</code></a> but we can't use this to iterate.</p>\n\n<p>Here is a solution using <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\" rel=\"nofollow\"><code>Object.getOwnPropertyNames</code></a> (compatibility is IE9+). I've also added support for when you do only want enumerable properties or if you want to search another in context (not global).</p>\n\n<pre><code>function findPrefixed(prefix, context, enumerableOnly) {\n    var i = prefix.length;\n    context = context || window;\n    if (enumerableOnly) return Object.keys(context).filter( function (e) {return e.slice(0,i) === prefix;} );\n    else return Object.getOwnPropertyNames(context).filter( function (e) {return e.slice(0,i) === prefix;} );\n}\nfindPrefixed('webkit');\n// [\"webkitAudioContext\", \"webkitRTCPeerConnection\", \"webkitMediaStream\", etc..\n</code></pre>\n\n<p>Then if you want to join e.g.</p>\n\n<pre><code>findPrefixed('webkit').map(function (e) {return e+'='+window[e];}).join('&amp;');\n// \"webkitAudioContext=function AudioContext() { [native code] }&amp;webkitRTCPeerConnection=function RTCPeerConnection() etc..\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Or you could simply run;</p>\n\n<pre><code>keys(window);\n</code></pre>\n\n<p>It will show a few extra globals (~5), but far fewer than the <code>for (var i in window)</code> answer.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Is there a way to retrieve the names/values of all global variables on a page?</p>\n\n<p>I would like to write a javascript function to do the following:</p>\n\n<ol>\n<li>Find all global variables prefixed with 'xxx_' and stick them in an array (for e.g.)</li>\n<li>build a query string using the name value pairs as follows:\nxxx_glob_var1=value1&amp;xxx_glob_var2=value2  etc</li>\n</ol>\n\n<p>How do I do this?</p>\n",
            "last_activity_date": 1393412786,
            "question_id": 2226007,
            "score": 14,
            "tags": [
                "javascript"
            ],
            "title": "Fetching all (javascript) global variables in a page"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Read <a href=\"http://stackoverflow.com/questions/111102/how-does-a-javascript-closure-work\">this answer</a>, it has everything you need to know and more :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The first one is a named function statement, the second one assigns an anonymous function expression to a variable.</p>\n\n<p>The function statement is added to its scope immediately - you don't need to run it before being able to call it, so this works:</p>\n\n<pre><code>var y = sum(1, 2);\n\nfunction sum(x, y) {\n   return x + y;\n}\n</code></pre>\n\n<p>But the function expression is only assigned to the variable when the code is executed, so this doesn't work:</p>\n\n<pre><code>// Error here because the function hasn't been assigned to sum yet.\nvar y = sum(1, 2);\n\nvar sum = function(x, y) {\n   return x + y;\n}\n</code></pre>\n\n<p>An advantage of the expression form is that you can use it to assign different functions to the expression at different points - so you can change the function, or use a different one under different conditions (such as depending on the browser being used).</p>\n\n<p>An advantage of a named function statement, is that debuggers will be able to display the name. Although, you can name function expressions:</p>\n\n<pre><code>var sum = function sum(x, y) {\n   return x + y;\n}\n</code></pre>\n\n<p>But this can be confusing since the two names are actually in different scopes and refer to different things.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>They mean the exact same thing. It's just syntactic sugar. The latter is IMO more revealing of what JavaScript is really doing; i.e. \"sum\" is just a variable, initialised with a function object, which can then be replaced by something else:</p>\n\n<pre><code>$ js\njs&gt; function sum(x,y) { return x+y; }\njs&gt; sum(1,2);\n3\njs&gt; sum=3\n3\njs&gt; sum(1,2);\ntypein:4: TypeError: sum is not a function\njs&gt; sum\n3\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>The first is known as a named function where the second is known as an anonymous function.</p>\n\n<p>The key practical difference is in when you can use the sum function.  For example:-</p>\n\n<pre><code>var z = sum(2, 3);\nfunction sum(x, y) {\n    return x+y;\n}\n</code></pre>\n\n<p><code>z</code> is assigned 5 whereas this:-</p>\n\n<pre><code>var z = sum(2, 3);\nvar sum = function(x, y) {\n    return x+y;\n}\n</code></pre>\n\n<p>Will fail since at the time the first line has executed the variable sum has not yet been assigned the function.</p>\n\n<p>Named functions are parsed and assigned to their names before execution begins which is why a named function can be utalised in code that preceeds its definition.</p>\n\n<p>Variables assigned a function by code can clearly only be used as function once execution has proceeded past the assignment.</p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>The first tends to be used for a few reasons:</p>\n\n<ol>\n<li>The name \"sum\" shows up in the\nstacktrace which makes debugging\neasier in many browsers.</li>\n<li>The name\n\"sum\" can be used inside the\nfunction body which makes it easier\nto use for recursive functions.</li>\n<li>function declarations are \"hoisted\"\nin javascript, so in the first case,\nthe function is guaranteed to be\ndefined exactly once.</li>\n<li><p>Semicolon insertion causes</p>\n\n<pre><code>var f = function (x) { return 4; }\n\n(f)\n</code></pre>\n\n<p>to assign 4 to <code>f</code>.</p></li>\n</ol>\n\n<p>There are a few caveats to keep in mind though.\nDo not do </p>\n\n<pre><code>  var sum = function sum(x, y) { ... };\n</code></pre>\n\n<p>on IE 6 since it will result in two function objects being created.  Especially confusing if you do</p>\n\n<pre><code>  var sum = function mySym(x, y) { ... };\n</code></pre>\n\n<p>According to the standard, \n  function sum(x, y) { ... }\ncannot appear inside an if block or a loop body, so different interpreters will treat</p>\n\n<pre><code>  if (0) {\n    function foo() { return 1; }\n  } else {\n    function foo() { return 2; }\n  }\n  return foo();\n</code></pre>\n\n<p>differently.\nIn this case, you should do</p>\n\n<pre><code>  var foo;\n  if (0) {\n    foo = function () { return 1; }\n  } ...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>The difference is...</p>\n\n<p>This is a nameless function</p>\n\n<pre><code>var sum = function (x, y) {\n    return x+y;\n}\n</code></pre>\n\n<p>So if you alert(sum); you get \"function (x, y) { return x + y; }\" (nameless)\nWhile this is a named function:</p>\n\n<pre><code>function sum(x, y) {\n        return x+y;\n}\n</code></pre>\n\n<p>If you alert(sum); now you get \"function <strong>sum</strong>(x, y) { return x + y; }\" (name is sum)</p>\n\n<p>Having named functions help if you are using a profiler because the profiler can tell you function <strong>sum</strong>'s execution time...etcetera instead of an unknown functions's execution time...etcetera </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>here's an other example:\nfunction sayHello(name) { alert('hello' + name) }</p>\n\n<p>now,suppose you want modify onclick event of a button, such as it says \"hello world\"</p>\n\n<p>you can not write:</p>\n\n<p>yourBtn.onclik = sayHello('world'), because you must provide a function reference.</p>\n\n<p>then you can use second form:\nyourBtn.onclick = function() {  sayHello('workld'); }</p>\n\n<p>Ps: sorry for my bad english!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The two code snippets you've posted there will, for almost all purposes, behave the same way.</p>\n\n<p>However, the difference in behaviour is that with the second variant, that function can only be called after that point in the code.</p>\n\n<p>With the first variant, the function is available to code that runs above where the function is declared.</p>\n\n<p>This is because with the second variant, the function is assigned to the variable foo at run time.  In the first, the function is assigned to that identifier foo at parse time.</p>\n\n<p><strong>More technical info</strong></p>\n\n<p>Javascript has three ways of defining functions.</p>\n\n<ol>\n<li>Your first example is a <strong>function declaration</strong>.  This uses the <em>\"function\" statement</em> to create a function.  The function is made available at parse time and can be called anywhere in that scope.  You can still store it in a variable or object property later.</li>\n<li>Your second snippet shows a <strong>function expression</strong>.  This involves using the <em>\"function\" operator</em> to create a function - the result of that operator can be stored in any variable or object property.  The function expression is powerful that way.  The function expression is often called an \"anonymous function\" because it does not have to have a name,</li>\n<li>The third way of defining a function is the <strong>\"Function()\" constructor</strong>, which is not shown in your original post.  It's not recommended to use this as it works the same way as eval(), which has its problems.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/336859/javascript-var-functionname-function-vs-function-functionname\">JavaScript: var functionName = function() {} vs function functionName() {}</a>  </p>\n</blockquote>\n\n\n\n<p>What's the difference between:</p>\n\n<pre><code>function sum(x, y) {\n  return x+y;\n}\n\n// and \n\nvar sum = function (x, y) {\n    return x+y;\n}\n</code></pre>\n\n<p>Why is one used over the other?</p>\n",
            "last_activity_date": 1399476435,
            "question_id": 114525,
            "score": 14,
            "tags": [
                "javascript"
            ],
            "title": "The difference between the two functions? (&quot;function x&quot; vs &quot;var x = function&quot;)"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<h1><code>&amp;</code> is bitwise AND</h1>\n\n<p>This operator expects <strong>two numbers</strong> and retuns a <strong>number.</strong> In case they are not numbers, they are cast to numbers.</p>\n\n<p><em>How does it work?</em> Wikipedia has an answer: <a href=\"https://en.wikipedia.org/wiki/Bitwise_operation#AND\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Bitwise_operation#AND</a></p>\n\n<p><strong>Note:</strong> In Javascript, the usage of this operator is <strong>discouraged,</strong> since there's no integer data type, just floating point. Thus floats are converted to integers prior to every operation, making it slow. Also, it has no real use in typical web applications and produces unreadable code.</p>\n\n<p><strong>General rule: Avoid. Don't use it.</strong></p>\n\n<h1><code>&amp;&amp;</code> is logical AND</h1>\n\n<p>It expects two arguments and returns:</p>\n\n<ul>\n<li>First one that evaluates to false (is false-y)</li>\n<li>Last one, otherwise</li>\n</ul>\n\n<p>Here are some examples:</p>\n\n<pre><code>0 &amp;&amp; false          0 (both are false-y, but 0 is the first)\ntrue &amp;&amp; false       false (second one is false-y)\ntrue &amp;&amp; true        true (both are true-y)\ntrue &amp;&amp; 20          20 (both are true-y)\n</code></pre>\n\n<p>This definition completely conforms to the definition of logical and from the field of mathematics.</p>\n\n<h1><code>&amp;&amp;</code> operator chaining</h1>\n\n<p>The reason this operator is defined as above is operator chaining. You are able to chain this operator and still keep the above rules.</p>\n\n<pre><code>true &amp;&amp; 20 &amp;&amp; 0 &amp;&amp; 100          0 (it is the first false-y)\n10 &amp;&amp; 20 &amp;&amp; true &amp;&amp; 100         100 (last one, since all are true-y)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p><code>&amp;</code> is the bitwise \"and\". This means that if you have two numbers converted to binary, the result is a number that has the <code>1</code> digit at the positions where both numbers have <code>1</code>.</p>\n\n<pre><code>  100011  //35\n&amp; 111001  //57\n---------\n  100001  //35 &amp; 57 == 33\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>To determine whether two boolean values put together are true or false, if you want to check them both (like validation on the web page), you may use the \"&amp;\" operator. \"&amp;\" is bitwise AND.</p>\n\n<p>With the \"&amp;&amp;\" operator, once it finds the first value is false, it will end evaluation and not to check the second value.</p>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>Whats the difference between &amp; and &amp;&amp; in JavaScript?</p>\n\n<p>Example-Code:</p>\n\n<pre><code>var first  = 123;\nvar second = false;\nvar third  = 456;\nvar fourth = \"abc\";\nvar fifth  = true;\nalert(first &amp; second); // 0\nalert(first &amp; third);  // 72\nalert(first &amp; fourth); // 0\nalert(first &amp; fifth);  // 1\n\nalert(first &amp;&amp; second); // false\nalert(first &amp;&amp; third);  // 456\nalert(first &amp;&amp; fourth); // abc\nalert(first &amp;&amp; fifth);  // true\n</code></pre>\n\n<p>It seems like &amp;&amp; is a logical \"and\" which gives me always the second value if both are true.</p>\n\n<p>But what is &amp;?</p>\n\n<p>(By the way, &amp;&amp; seems to be \"and\" in Python; &amp; seems to be &amp; in Python.)</p>\n",
            "last_activity_date": 1426157553,
            "question_id": 7310109,
            "score": 12,
            "tags": [
                "javascript",
                "bitwise-operators",
                "logical-operators"
            ],
            "title": "Whats the difference between &amp; and &amp;&amp; in JavaScript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Only way I know to accomplish this would be to drive real browser, for example using <a href=\"http://selenium-rc.openqa.org\" rel=\"nofollow\">selenium-rc</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The big complication here is emulating the full browser environment outside of a browser. You can use stand alone javascript interpreters like Rhino and SpiderMonkey to run javascript code but they don't provide a complete browser like environment to full render a web page.</p>\n\n<p>If I needed to solve a problem like this I would first look at how the javascript is rendering the page, it's quite possible it's fetching data via AJAX and using that to render the page. I could then use python libraries like simplejson and httplib2 to directly fetch the data and use that, negating the need to access the DOM object. However, that's only one possible situation, I don't know the exact problem you are solving.</p>\n\n<p>Other options include the selenium one mentioned by \u0141ukasz, some kind of webkit embedded craziness, some kind of IE win32 scripting craziness or, finally, a pyxpcom based solution (with added craziness). All these have the drawback of requiring pretty much a fully running web browser for python to play with, which might not be an option depending on your environment.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><a href=\"http://doc.trolltech.com/4.4/qtwebkit.html\" rel=\"nofollow\">QtWebKit</a> is contained in PyQt4, but I don't know if you can use it without showing a widget. After a cursory look over the documentation, it seems to me you can only get HTML, not a DOM tree.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can probably use <a href=\"http://code.google.com/p/pywebkitgtk/\" rel=\"nofollow\">python-webkit</a> for it.  Requires a running glib and GTK, but that's probably less problematic than wrapping the parts of webkit without glib.</p>\n\n<p>I don't know if it does everything you need, but I guess you should give it a try.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there any python module for rendering a HTML page with javascript and get back a DOM object?</p>\n\n<p>I want to parse a page which generates almost all of its content using javascript. </p>\n",
            "last_activity_date": 1223922122,
            "question_id": 126131,
            "score": 12,
            "tags": [
                "javascript",
                "python",
                "html"
            ],
            "title": "Python library for rendering HTML and javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>String.prototype.chunk = function(n) {\n    var ret = [];\n    for(var i=0, len=this.length; i &lt; len; i += n) {\n       ret.push(this.substr(i, n))\n    }\n    return ret\n};\n\n\"The quick brown fox jumps over the lazy dogs.\".chunk(5).join('$');\n// \"The q$uick $brown$ fox $jumps$ over$ the $lazy $dogs.\"\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>With regex</p>\n\n<pre><code>\"The quick brown fox jumps over the lazy dogs.\".replace(/(.{5})/g,\"$1$\")\n\nThe q$uick $brown$ fox $jumps$ over$ the $lazy $dogs.$\n</code></pre>\n\n<p>cheers,</p>\n",
                    "is_accepted": false,
                    "score": 35
                }
            ],
            "body": "<p>I have a string: \"The quick brown fox jumps over the lazy dogs.\"</p>\n\n<p>I want to use javascript (possibly with jQuery) to insert a character every <em>n</em> characters.  For example I want to call:</p>\n\n<pre><code>var s = \"The quick brown fox jumps over the lazy dogs.\";\nvar new_s = UpdateString(\"$\",5);\n// new_s should equal \"The q$uick $brown$ fox $jumps$ over$ the $lazy $dogs.$\"\n</code></pre>\n\n<p>The goal is to use this function to insert <a href=\"http://stackoverflow.com/questions/226464/soft-hyphen-in-html-wbr-vs\">&amp;shy</a> into long strings to allow them to wrap.  Maybe someone knows of a better way?</p>\n",
            "last_activity_date": 1264657159,
            "question_id": 1772941,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "string"
            ],
            "title": "How can I insert a character after every n characters in javascript?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Youtube has a JavaScript API: <a href=\"https://developers.google.com/youtube/js_api_reference\">https://developers.google.com/youtube/js_api_reference</a></p>\n\n<p>What you need is the <a href=\"https://developers.google.com/youtube/js_api_reference#Events\">onStateChange</a> event, which will give you 0 when ended.</p>\n\n<pre><code>player.addEventListener(\"onStateChange\", function(state){\n    if(state === 0){\n        // the video is end, do something here.\n    }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                }
            ],
            "body": "<p>I have simple html code that plays youtube video after click on the image.</p>\n\n<pre><code>&lt;body&gt;\n&lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\"&gt;&lt;/script&gt; \n\n&lt;div id=\"ytapiplayer2\" style=\"display:none;\"&gt;\n&lt;object width=\"1280\" height=\"745\"&gt;\n&lt;param name=\"movie\" value=\"http://www.youtube.com/v/kCfP003Btjw?fs=1&amp;hl=en_US&amp;rel=0&amp;autoplay=1\"&gt;&lt;/param&gt;\n&lt;param name=\"allowFullScreen\" value=\"true\"&gt;&lt;/param&gt;&lt;param name=\"allowscriptaccess\" value=\"always\"&gt;&lt;/param&gt;\n&lt;embed src=\"http://www.youtube.com/v/kCfP003Btjw?fs=1&amp;hl=en_US&amp;rel=0&amp;autoplay=1\" type=\"application/x-shockwave-flash\" allowscriptaccess=\"always\" allowfullscreen=\"true\" width=\"1280\" height=\"745\"&gt;&lt;/embed&gt;\n&lt;/object&gt;\n\n&lt;/div&gt;\n\n\n&lt;img src=\"https://i.qmyimage.com/mgen/global/zGetImageNew.ms?args=%22shpimg4198.jpg%22,425,96,1\" id=\"imageID\" /&gt;\n&lt;script type=\"text/javascript\"&gt;\n$('#imageID').click(function() {\n$('#ytapiplayer2').show();\n$('#imageID').hide();\n});\n&lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>I need hide the video and show image back, after video finished play. How is it possible to implement?</p>\n",
            "last_activity_date": 1338115513,
            "question_id": 10773322,
            "score": 10,
            "tags": [
                "javascript",
                "javascript-events",
                "youtube",
                "youtube-api"
            ],
            "title": "Event when youtube video finished"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It's available in the HTML5 History API. The event is called <code>'popstate'</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>there are a lot of ways how you can detect if user has clicked ob Back button. But everything depends on what you need. Try to explore links below, they should help you.</p>\n\n<p>Detect if user pressed \"Back\" button on current page:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/10462511/is-there-a-way-using-jquery-to-detect-the-back-button-being-pressed-cross-browse\">Is there a way using Jquery to detect the back button being pressed cross browsers</a></li>\n<li><a href=\"http://stackoverflow.com/questions/6359327/detect-back-button-click-in-browser\">detect back button click in browser</a></li>\n</ul>\n\n<p>Detect if current page is visited after pressing \"Back\" button on previous(\"Forward\") page:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/158319/cross-browser-onload-event-and-the-back-button\">Cross-browser onload event and the Back button</a></li>\n<li><a href=\"http://stackoverflow.com/questions/4827411/trigger-event-on-browser-back-button-click\">trigger event on browser back button click</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The 'popstate' event only works when you push something before. So you have to do something like this:</p>\n\n<pre><code>jQuery(document).ready(function($) {\n\n  if (window.history &amp;&amp; window.history.pushState) {\n\n    window.history.pushState('forward', null, './#forward');\n\n    $(window).on('popstate', function() {\n      alert('Back button was pressed.');\n    });\n\n  }\n});\n</code></pre>\n\n<p>For browser backward compatibility I recommend: <a href=\"https://github.com/browserstate/history.js/\">history.js</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>Could someone please share experience / code how we can detect the browser back button click (for any type of browsers)?</p>\n\n<p>We need to cater all browser that doesn't support HTML5</p>\n",
            "last_activity_date": 1381999055,
            "question_id": 17594413,
            "score": 5,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "JS or Jquery browser back button click detector"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Try something like this...</p>\n\n<p>Demo: <a href=\"http://jsfiddle.net/wdm954/jYnk8/1/\" rel=\"nofollow\">http://jsfiddle.net/wdm954/jYnk8/1/</a></p>\n\n<pre><code>$(function() {\n\n    h = $('.img').height();\n    w = $(window).height();\n\n    if (h &lt; w) { \n        $('.img').css('margin-top', (w - h) /2 + \"px\");\n    }\n    else {\n        $('.img').height(w);\n    }\n\n});\n</code></pre>\n\n<p>(You can test different sizes by changing some CSS I have commented out.)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This should prove to work quite well... no JavaScript necessary :)</p>\n\n<p>See the <a href=\"http://jsfiddle.net/nzxPV/1/\">working demo on jsFiddle</a>.</p>\n\n<h2>CSS</h2>\n\n<pre class=\"lang-css prettyprint-override\"><code>/* Don't Change - Positioning */\n.absoluteCenter {\n margin:auto;\n position:absolute;\n top:0;\n bottom:0;\n left:0;\n right:0;\n}\n\n/* Sizing */\nimg.absoluteCenter {\n max-height:100%;\n max-width:100%;\n}\n</code></pre>\n\n<h2>HTML</h2>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;img class=\"absoluteCenter\" src=\"PATHTOIMAGE\"&gt;\n</code></pre>\n\n<p><em><strong>Note:</strong> This class can be used for anything quite easily. If you use this for something other than an image, make sure to add a <code>TAG.absoluteCenter</code> CSS rule with a <code>max-height</code> and <code>max-width</code> of your choosing (where <code>TAG</code> is the HTML tag you're using [e.g. <code>div.absoluteCenter</code>] and <code>max-width</code>/<code>max-height</code> is less than <code>100%</code>).</em></p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Here is one way with javascript:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;style&gt;\n  html, body{\n    height:100%;\n    margin:0;\n    border:0;\n    padding:0;\n    background:#000;\n  }\n  body{\n    position:relative;\n  }\n  img{\n    border:0;\n    padding:0;\n    margin:0 auto;\n    max-width:100%;\n    max-height:100%;\n    display:block;\n    position:absolute;\n  }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;img /&gt;\n  &lt;script&gt;\n    (function(){\n      var imgs = [\n          'http://farm3.static.flickr.com/2396/2078094921_ee60c42d0f.jpg',\n          'http://farm6.static.flickr.com/5242/5353846171_9169f810dc_b.jpg',\n          'http://farm6.static.flickr.com/5284/5336493514_8e41696b66_b.jpg'\n        ],\n        img = document.getElementsByTagName('IMG')[0],\n        getStyle = function(elm){\n          return window.getComputedStyle ? window.getComputedStyle(elm) : elm.currentStyle;\n        },\n        bodyStyle = getStyle(document.body),\n        toInt = function(pxSize){\n          return +pxSize.replace(/px/,'');\n        },\n        chgImg = function(){\n          img.src = imgs[i++ % imgs.length];\n          img.onload = function(){\n            var imgStyle = getStyle(img);\n            img.style.left = ( toInt(bodyStyle.width)  - toInt(imgStyle.width) ) / 2 + 'px';\n            img.style.top =  ( toInt(bodyStyle.height) - toInt(imgStyle.height) ) / 2 + 'px';\n            img.onload = null;\n          };\n        },\n        i = 0;\n\n      chgImg();\n      setInterval(chgImg, 3000);\n    })();\n  &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\u200b\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to center an image of unknown width/height on a page, while making sure that it shrinks if it is bigger than the page (i.e. use <code>max-width</code>/<code>max-height</code>).</p>\n\n<p>I tried using the <code>display:table-cell</code> method, but <code>max-width</code> is ignored in Firefox for all elements within elements declared with <code>display:table-cell</code>. Is there a way to vertically center a variable-height element without using <code>display:table-cell</code>?</p>\n\n<p>I can change the mark up. JavaScript is acceptable, but I cannot use JQuery (or any other JS library).</p>\n",
            "last_activity_date": 1338397034,
            "question_id": 6282968,
            "score": 2,
            "tags": [
                "javascript",
                "css",
                "vertical-alignment"
            ],
            "title": "Vertical centering variable height image while maintaining max-width/height"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>The <code>value</code> attribute of a <code>checkbox</code> is what you set by:</p>\n\n<pre><code>&lt;input type='checkbox' name='test' value='1'&gt;\n</code></pre>\n\n<p>So when someone checks that box, the server receives a variable named <code>test</code> with a <code>value</code> of <code>1</code> - what you want to check for is not the <code>value</code> of it (which will never change, whether it is checked or not) but the <code>checked</code> status of the checkbox.</p>\n\n<p>So, if you replace this code:</p>\n\n<pre><code>if (arrChecks[i].value == \"on\") \n{\n    arrChecks[i].checked = 1;\n} else {\n    arrChecks[i].checked = 0;\n}\n</code></pre>\n\n<p>With this:</p>\n\n<pre><code>arrChecks[i].checked = !arrChecks[i].checked;\n</code></pre>\n\n<p>It should work. You should use <code>true</code> and <code>false</code> instead of <code>0</code> and <code>1</code> for this.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>I am not sure what the problem is, but I am pretty sure this will fix it.</p>\n\n<pre><code>for (i=0; i&lt;arrChecks.length; i++)\n    {\n        var attribute = arrChecks[i].getAttribute(\"xid\")\n        if (attribute == elementName)\n        {\n            if (arrChecks[i].checked == 0)  \n            {\n                arrChecks[i].checked = 1;\n            } else {\n                arrChecks[i].checked = 0;\n            }\n\n        } else {\n            arrChecks[i].checked = 0;\n        }\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You should be evaluating against the checked property of the checkbox element. </p>\n\n<pre><code>for (i=0; i&lt;arrChecks.length; i++)\n{\n    var attribute = arrChecks[i].getAttribute(\"xid\")\n    if (attribute == elementName)\n    {\n        // if the current state is checked, unchecked and vice-versa\n        if (arrChecks[i].checked)\n        {\n            arrChecks[i].checked = false;\n        } else {\n            arrChecks[i].checked = true;\n        }\n\n    } else {\n        arrChecks[i].checked = false;\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Also make sure you test it both in firefox and IE. There are some nasty bugs with JS manipulated checkboxes.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To toggle a checkbox or you can use</p>\n\n<pre><code>element.checked = !element.checked;\n</code></pre>\n\n<p>so you could use</p>\n\n<pre><code>if (attribute == elementName)\n{\n    arrChecks[i].checked = !arrChecks[i].checked;\n} else {\n    arrChecks[i].checked = false;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>function enter_comment(super_id) {\n    if (!(document.getElementById(super_id).checked)) {\n        alert('selected checkbox is unchecked now')\n    } else {\n        alert('selected checkbox is checked now');\n    }\n}\n</code></pre>\n\n<p><code>&lt;input type=\"checkbox\" name=\"a\" id=\"1\" value=\"1\" onclick=\"enter_comment(this.value)\" /&gt;</code></p>\n\n<p><code>&lt;input type=\"checkbox\" name=\"b\" id=\"2\" value=\"2\" onclick=\"enter_comment(this.value)\" /&gt;\n</code></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>function CHeck(){\n    var ChkBox = document.getElementById(\"CheckBox1\");\n    alert(ChkBox.Checked);\n}\n\n&lt;asp:CheckBox ID=\"CheckBox1\" runat=\"server\" onclick=\"CHeck()\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have a javascript routine that is performing actions on a group of checkboxes, but the final action I want to set the clicked checkbox to checked or unchecked based on if the user was checking the box or unchecking.</p>\n\n<p>Unfortunately, every time I check for whether it is being checked or unchecked, it returns \"on\" indicating the user is always checking the box!  Any help would be appreciated, I've also included the javascript.</p>\n\n<pre><code>// Uncheck all the checkboxs with the same Tax Credit\nfor (i=0; i&lt;arrChecks.length; i++)\n{\n    var attribute = arrChecks[i].getAttribute(\"xid\")\n    if (attribute == elementName)\n    {\n        // if the current state is checked, unchecked and vice-versa\n        if (arrChecks[i].value == \"on\")   // &lt;-- This is always returning true, even if the box is being unchecked\n        {\n            arrChecks[i].checked = 1;\n        } else {\n            arrChecks[i].checked = 0;\n        }\n\n    } else {\n        arrChecks[i].checked = 0;\n    }\n}\n</code></pre>\n",
            "last_activity_date": 1405028560,
            "question_id": 473562,
            "score": 24,
            "tags": [
                "javascript"
            ],
            "title": "Javascript to check whether a checkbox is being checked or unchecked"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>when do you call timerReset()? Perhaps you get that error when trying to call it after setTimeout() has already done its thing? </p>\n\n<p>wrap it in </p>\n\n<pre><code>if (window.myTimeout) { \n  clearTimeout(myTimeout);\n  myTimeout = setTimeout(\"timerDone()\", 1000 * 1440);\n}\n</code></pre>\n\n<p>edit: Actually, upon further reflection, since you did mention jQuery (and yet don't have any actual jQuery code here... I wonder if you have this nested within some jQuery (like inside a <code>$(document).ready(..</code> and this is a matter of variable scope. If so, try this:</p>\n\n<pre><code>window.message=\"Logged in\";\nwindow.myTimeout = setTimeout(\"timerDone()\",1000 * 1440);\nfunction timerDone()\n{\n    window.message=\"Logged out\";   \n}\nfunction timerReset()\n{\n\n\n    clearTimeout(window.myTimeout);\n    window.myTimeout = setTimeout(\"timerDone()\", 1000 * 1440);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>wrap your entire code block in this:</p>\n\n<pre><code>//&lt;![CDATA[\n\n//code here\n\n//]]&gt;\n</code></pre>\n\n<p>also make sure to specify the type of script to be text/javascript</p>\n\n<p>try that and let me know how it goes</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I dont know why but it worked for me. If you have comments like</p>\n\n<pre><code>//Comment\n</code></pre>\n\n<p>Then it gives this error. To fix this do</p>\n\n<pre><code>/*Comment*/\n</code></pre>\n\n<p>Doesn't make sense but it worked for me.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>Switch off compatibility view if you use IE9.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>All the error 80020101 means is that there was an error, of some sort, while evaluating JavaScript.  If you load that JavaScript via Ajax, the evaluation process is particularly strict.</p>\n\n<p>Sometimes removing <em>//</em> will fix the issue, but the inverse is not true... the issue is not always caused by <em>//</em>.</p>\n\n<p>Look at the exact JavaScript being returned by your Ajax call and look for any issues in that script.  For more details see a great writeup here</p>\n\n<p><a href=\"http://mattwhite.me/blog/2010/4/21/tracking-down-error-80020101-in-internet-exploder.html\">http://mattwhite.me/blog/2010/4/21/tracking-down-error-80020101-in-internet-exploder.html</a></p>\n",
                    "is_accepted": false,
                    "score": 24
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/4918969/ajax-request-problem-error-80020101\">Ajax request problem: error 80020101</a>  </p>\n</blockquote>\n\n\n\n<p>I am using JQuery-1.64 and this is my code to reset timer</p>\n\n<pre><code>var message=\"Logged in\";\nvar myTimeout = setTimeout(\"timerDone()\",1000 * 1440);\nfunction timerDone()\n{\n    message=\"Logged out\";   \n}\nfunction timerReset()\n{\n\n\n    clearTimeout(myTimeout);\n    myTimeout = setTimeout(\"timerDone()\", 1000 * 1440);\n}\n</code></pre>\n\n<p>But it gives me an error, only in IE, when I am trying to do clearTimeout. \nAny Idea????</p>\n",
            "last_activity_date": 1352876076,
            "question_id": 10903989,
            "score": 23,
            "tags": [
                "javascript",
                "internet-explorer"
            ],
            "title": "Could not complete the operation due to error 80020101. IE"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It's because, until ECMAscript 262 edition 5, there was a big confusion if people who where using the <code>constructor pattern</code>, forgot to use the <code>new</code> keyword. If you forgot to use <code>new</code> when calling a constructor function in ES3, <code>this</code> referenced the global object (<code>window</code> in a browser) and you would clobber the global object with variables.</p>\n\n<p>That was terrible behavior and so people at ECMA decided, just to set <code>this</code> to <code>undefined</code>.</p>\n\n<p>Example:</p>\n\n<pre><code>function myConstructor() {\n    this.a = 'foo';\n    this.b = 'bar';\n}\n\nmyInstance     = new myConstructor(); // all cool, all fine. a and b were created in a new local object\nmyBadInstance  = myConstructor(); // oh my gosh, we just created a, and b on the window object\n</code></pre>\n\n<p>The last line would throw an error in ES5 strict </p>\n\n<pre><code>\"TypeError: this is undefined\"\n</code></pre>\n\n<p>(which is a much better behavior)</p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>There is a mechanism called \"boxing\" which wraps or change the <code>this</code> object before entering the context of the called function.\nIn your case, the value of <code>this</code> should be <code>undefined</code> because you are not calling the function as a method of an object.\nIf non strict mode, in this case, this is replaced by the <code>window</code> object.\nIn <code>strict</code> mode it's always unchanged, that's why it's <code>undefined</code> here.</p>\n\n<p>You can find more information at<br>\n<a href=\"https://developer.mozilla.org/en/JavaScript/Strict_mode\">https://developer.mozilla.org/en/JavaScript/Strict_mode</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>According to <a href=\"http://stackoverflow.com/questions/9551932/this-inside-an-anonymous-function\" title=\"&#39;this&#39; inside an anonymous function?\">This Stack Overflow answer</a>, you can use <code>this</code> inside anonymous functions, simply by calling <code>.call(this)</code> at the end of it.</p>\n\n<pre><code>(function () {\n    \"use strict\";\n\n    this.foo = \"bar\";\n}).call(this);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Why is <strong>this</strong> in an anonymous function undefined when using javascript in strict mode? I understand why this could make sense, but I couldn't find any concrete answer.</p>\n\n<p>Example:</p>\n\n<pre><code>(function () {\n    \"use strict\";\n\n    this.foo = \"bar\"; // *this* is undefined, why?\n}());\n</code></pre>\n\n<p>Test in a fiddle: <a href=\"http://jsfiddle.net/Pyr5g/1/\">http://jsfiddle.net/Pyr5g/1/</a>\nCheck out the logger (firebug).</p>\n",
            "last_activity_date": 1423832310,
            "question_id": 9822561,
            "score": 22,
            "tags": [
                "javascript",
                "anonymous-function",
                "use-strict"
            ],
            "title": "Why is &quot;this&quot; in an anonymous function undefined when using strict?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>How about something like this <strong><a href=\"http://jsfiddle.net/j08691/ZfbaD/2/\">jsFiddle</a></strong>? It uses the direction, text-align, and text-overflow to get the ellipsis on the left. According to <a href=\"https://developer.mozilla.org/en/CSS/text-overflow\">MDN</a>, there may be the possibility of specifying the ellipsis on the left in the future with the <code>left-overflow-type</code> value however it's considered to still be experimental.</p>\n\n<p>CSS:</p>\n\n<pre><code>p {  \n    white-space: nowrap;                     \n    overflow: hidden;              /* \"overflow\" value must be different from \"visible\" */   \n    text-overflow:    ellipsis;  \n    width:170px;\n    border:1px solid #999;\n    direction:rtl;\n    text-align:left;\n} \n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;p&gt;first &gt; second &gt; third&lt;br /&gt;\nsecond &gt; third &gt; fourth &gt; fifth &gt; sixth&lt;br /&gt;\nfifth &gt; sixth &gt; seventh &gt; eighth &gt; ninth&lt;/p&gt;\u200b\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>Based on your edit:</p>\n\n<blockquote>\n  <p>At this point I'm looking for a work around for the bugs in Chrome\n  that prevent it from rendering properly when a document is mixed RTL\n  and LTR. That was all I really needed from the outset, I just didn't\n  realize it.</p>\n</blockquote>\n\n<p>Have you looked into the <code>unicode-bidi</code> css property (see <a href=\"http://reference.sitepoint.com/css/unicode-bidi\" rel=\"nofollow\">Sitepoint</a> or <a href=\"http://www.w3.org/TR/CSS2/visuren.html#direction\" rel=\"nofollow\">W3C</a>)? I actually just learned about this myself on <a href=\"http://stackoverflow.com/questions/9778968/using-css-to-switch-left-right-position-of-label-and-input-in-ie7\">another recent post</a>. My guess is you would want to use the <code>embed</code> value for those pieces going the opposite direction to the main site. So in j08691's answer where it is <code>direction: rtl</code> add <code>unicode-bidi: embed</code> to the CSS. This should solve \"mixed RTL and LTR\" issues you are having.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It's a little buggy, but maybe a point in the right direction</p>\n\n<p><a href=\"http://jsfiddle.net/HerrSerker/ZfbaD/50/\" rel=\"nofollow\">http://jsfiddle.net/HerrSerker/ZfbaD/50/</a></p>\n\n<pre><code>&lt;div class=\"container\"&gt;\n    &lt;span class=\"part\"&gt;second&lt;/span&gt; \n    &lt;span class=\"part\"&gt;&amp;gt;&lt;/span&gt; \n    &lt;span class=\"part\"&gt;third&lt;/span&gt; \n    &lt;span class=\"part\"&gt;&amp;gt;&lt;/span&gt; \n    &lt;span class=\"part\"&gt;fourth&lt;/span&gt; \n    &lt;span class=\"part\"&gt;&amp;gt;&lt;/span&gt; \n    &lt;span class=\"part\"&gt;fifth&lt;/span&gt; \n    &lt;span class=\"part\"&gt;&amp;gt;&lt;/span&gt; \n    &lt;span class=\"part\"&gt;sixth&lt;/span&gt;\n&lt;/div&gt;\n</code></pre>\n\n<hr>\n\n<pre><code>\u200b.container {  \n  white-space: nowrap;                   \n  overflow: hidden;              /* \"overflow\" value must be different from \"visible\" */   \n  text-overflow: ellipsis;  \n    width:170px;\n    border:1px solid #999;\n    direction:rtl;\n}  \n.container .part {\n  direction:ltr;\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I put some JavaScript together to regex out three items and add the ellipsis in where necessary. This does not explicitly look at how much text will fit in the box but if the box is fixed this may not be an issue.</p>\n\n<pre><code>&lt;style&gt;\np {  \n    white-space: nowrap;                     \n    overflow: hidden;\n    text-overflow: ellipsis; \n    width:170px;\n    border:1px solid #999;\n    direction:rtl;\n    text-align:left;\n} \n&lt;/style&gt;\n\n&lt;p&gt;first &amp;gt; second &amp;gt; third&lt;br /&gt;\nsecond &amp;gt; third &amp;gt; fourth &amp;gt; fifth &amp;gt; sixth&lt;br /&gt;\nfifth &amp;lt; sixth &amp;lt; seventh &amp;lt; eighth &amp;lt; ninth&lt;/p&gt;\n\n&lt;script&gt;\n    var text = $( 'p' ).text(),\n        split = text.split( '\\n' ),\n        finalStr = '';\n    for( i in split ){\n        finalStr = finalStr.length &gt; 0 ? finalStr + '&lt;br /&gt;' : finalStr;\n        var match = /(\\w+\\s?(&lt;|&gt;)?\\s?){3}$/.exec( split[i] );\n        finalStr = finalStr + ( split[i].length &gt; match[0].length ? '...' : '' ) + match[0];\n    }\n    $( 'p' ).empty().html( finalStr );\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I finally had to crack and do something in JavaScript. I was hoping that someone would come up with a hail-mary CSS solution but people seem to just be up-voting the answer that <em>should</em> be correct if it weren't for the Chrome bugs. <strong>j08691 can have the bounty for his work</strong>.</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;style&gt;\n            #container {\n                width: 200px;\n                border: 1px solid blue;\n            }\n\n            #container div {\n                width: 100%;\n                overflow: hidden;\n                white-space: nowrap;\n            }\n        &lt;/style&gt;\n        &lt;script&gt;\n            function trimRows() {\n\n                var rows = document.getElementById('container').childNodes;\n                for (var i=0, row; row = rows[i]; i++) {\n                    if (row.scrollWidth &gt; row.offsetWidth) {\n                        var textNode = row.firstChild;\n                        var value = '...' + textNode.nodeValue;\n                        do {\n                            value = '...' + value.substr(4);\n                            textNode.nodeValue = value;\n\n                        } while (row.scrollWidth &gt; row.offsetWidth);\n                    }\n                }\n            }\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body onload='trimRows();'&gt;\n    &lt;div id=\"container\" &gt;\n        &lt;div&gt;first &gt; second &gt; third&lt;/div&gt;\n        &lt;div&gt;second &gt; third &gt; fourth &gt; fifth &gt; sixth&lt;/div&gt;\n        &lt;div&gt;fifth &gt; sixth &gt; seventh &gt; eighth &gt; ninth&lt;/div&gt;\u200b\n    &lt;/div&gt;\n    &lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/Nfvtc/\">Fiddle</a></p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Why not just using <code>direction:rtl;</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Using @Hemlocks, @Brian Mortenson and @Jimbo's solutions, I've built a jQuery plugin to solve this problem.</p>\n\n<p>I've also added support to return the initial value using .html() rather than having it return the current innerHTML. Hopefully it will be useful to someone...</p>\n\n<pre><code>(function($) {\n\n$.trimLeft = function(element, options) {\n\n    var trim = this;\n\n    var $element = $(element), // reference to the jQuery version of DOM element\n         element = element;    // reference to the actual DOM element\n\n    var initialText = element.innerHTML;\n\n    trim.init = function() {\n        overrideNodeMethod(\"html\", function(){ return initialText; });\n        trimContents(element, element);\n        return trim;\n    };\n\n    trim.reset = function(){\n        element.innerHTML = initialText;\n        return trim;\n    };\n\n    //Overide .html() to return initialText.\n    var overrideNodeMethod = function(methodName, action) {\n        var originalVal = $.fn[methodName];\n        var thisNode = $element;\n        $.fn[methodName] = function() {\n            if (this[0]==thisNode[0]) {\n                return action.apply(this, arguments);\n            } else {\n                return originalVal.apply(this, arguments);\n            }\n        };\n    };\n\n    var trimContents = function(row, node){\n        while (row.scrollWidth &gt; row.offsetWidth) {\n            var childNode = node.firstChild;\n            if (!childNode)\n                return true;            \n            if (childNode.nodeType == document.TEXT_NODE){\n                trimText(row, node, childNode);\n            }\n            else {\n                var empty = trimContents(row, childNode);\n                if (empty){\n                    node.removeChild(childNode);\n                }\n            }\n        };\n    };\n\n    var trimText = function(row, node, textNode){\n        var value = '\\u2026' + textNode.nodeValue;\n        do {\n            value = '\\u2026' + value.substr(4);\n            textNode.nodeValue = value;\n            if (value == '\\u2026'){\n                node.removeChild(textNode);\n                return;\n            }\n        }\n        while (row.scrollWidth &gt; row.offsetWidth);\n    };\n\n    trim.init();\n\n};\n\n$.fn.trimLeft = (function(options){\n  var othat = this;\n\n  var single = function(that){\n      if (undefined == $(that).data('trim')) {\n          var trim = new $.trimLeft(that, options);\n          $(that).data('trim', trim);\n          $(window).resize(function(){\n              $(that).each(function(){\n                    trim.reset().init();\n              });\n          });\n       }   \n   };\n\n   var multiple = function(){\n        $(othat).each(function() {\n            single(this);\n        });\n    };\n\n    if($(othat).length&gt;1)\n        multiple(othat);            \n    else\n        single(othat);\n\n    //-----------        \n    return this;\n});\n\n\n})(jQuery);\n</code></pre>\n\n<p>Initiate using:</p>\n\n<pre><code>//Call on elements with overflow: hidden and white-space: nowrap \n$('#container&gt;div').trimLeft();\n//Returns the original innerHTML\nconsole.log($('#test').html());\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/graydixon/jkxguryq/\" rel=\"nofollow\">fiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a list of paths (for lack of a better word, maybe bread crumb trails describes them better). Some of the values are too long to display in their parent so I'm using <code>text-overflow: ellipsis</code>. The problem is that the important information is on the right, so I'd like the ellipsis to appear on the left. Something like this this ascii art:</p>\n\n<pre><code>----------------------------\n|first &gt; second &gt; third    |\n|...second &gt; third &gt; fourth|\n|...fifth &gt; sixth &gt; seventh|\n----------------------------\n</code></pre>\n\n<p>Notice that the first row is short enough so it remains left aligned, but the other two are too long so the ellipsis appears on the left hand side.</p>\n\n<p>I'd prefer a CSS only solution, but JS is fine if it can't be avoided. It's ok if the solution only works in Firefox and Chrome.</p>\n\n<p>EDIT: <em>At this point I'm looking for a work around for the bugs in Chrome that prevent it from rendering properly when a document is mixed RTL and LTR. That was all I really needed from the outset, I just didn't realize it.</em> </p>\n",
            "last_activity_date": 1420315243,
            "question_id": 9793473,
            "score": 19,
            "tags": [
                "javascript",
                "html",
                "css",
                "css3"
            ],
            "title": "Text-overflow ellipsis on left side"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>No - <a href=\"http://www.maxforums.org/thread.aspx?tid=543619\" rel=\"nofollow\">it's not</a>.</p>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>There has been much discussion about this:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/992115/custom-attributes-yay-or-nay\">Custom attributes - Yay or nay?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/432174/\">How to store arbitrary data for some HTML tags</a></li>\n<li><a href=\"http://stackoverflow.com/questions/209428\">Non-Standard Attributes on HTML Tags. Good Thing? Bad Thing? Your Thoughts?</a></li>\n</ul>\n\n<p>At the end of the day, I am on the camp that believes data attributes are the best way to go. They are being introducted in HTML5 to avoid name conflicts. Essentially, if you want to store anything data related you just prepend \"data-\" on the attribute name:</p>\n\n<pre><code>&lt;div class=\"user\" data-userid=\"5\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>The only con to the whole thing is then that your XHTML won't validate, but I honestly don't care about that stuff. (That's right, I said it)</p>\n",
                    "is_accepted": true,
                    "score": 50
                },
                {
                    "body": "<p>In HTML 5 you're allowed to add any attribute starting with <code>data-</code>, so e.g. <code>&lt;div data-messid=\"12\"&gt;</code> is OK.</p>\n\n<p>HTML 4 and XHTML 1 won't validate if you add your own attribute, but besides that nothing bad will happen if you choose attribute name unique enough (so it won't conflict with any current or future HTML attribute).</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I use custom attributes, and since they are supported by all browsers I checked I think it is not bad to use them. You can also use custom HTML tags to simulate HTML5, with some IE hack, so why not use attributes, if they don't need any hacks?</p>\n\n<p>Anyway, you can read similar discussion here:\n<a href=\"http://stackoverflow.com/questions/992115/custom-attributes-yay-or-nay\">http://stackoverflow.com/questions/992115/custom-attributes-yay-or-nay</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This isn't a definitive answer, but having had to do this in the past I can say this not only works well, it is cross-browser friendly.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just so you know, you can easily extract an ID from a string like m12 or m6, I would do it like this:</p>\n\n<pre><code>//name the IDs m_12, m_3 etc\nvar number = $('#someElement').attr('id').split('_')[1];\n</code></pre>\n\n<p>Or if say, you have a bunch of links with numbers in the ID as above, and all the links have the <code>clickMe</code> class:</p>\n\n<pre><code>$('a.clickMe').click(function() {\n    alert($(this).attr('id').split('_')[1]);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If using jQuery you can use .data to store custom information against an element.</p>\n\n<p>The downside of custom attributes are:</p>\n\n<ul>\n<li><p>IE6 creates extra objects to store custom 'expando' attributes these have a tendency to leak especially if they are created via script.</p></li>\n<li><p>validation issues</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicates:</strong><br />\n  <a href=\"http://stackoverflow.com/questions/992115/custom-attributes-yay-or-nay\">Custom attributes - Yay or nay?</a><br />\n  <a href=\"http://stackoverflow.com/questions/209428/non-standard-attributes-on-html-tags-good-thing-bad-thing-your-thoughts\">Non-Standard Attributes on HTML Tags. Good Thing? Bad Thing? Your Thoughts?</a>  </p>\n</blockquote>\n\n<p>In current learning project I am working on, I need to add an attribute whose value will be a number. At first I thought of using \"id\" for this purpose but <a href=\"http://stackoverflow.com/questions/70579/what-is-a-valid-value-for-id-attributes-in-html\">an answer</a> revealed that it is not good to do that.</p>\n\n<p>Is it OK if I create my own attribute, say \"messid\" and assign a numeric value such as \"12\", \"6\" etc to it?</p>\n\n<p>Here is why I want to do this so that you can correct me if I am doing it totally wrong:\nI need to access this number in my JavaScript (using jQuery). Just taking the value of attribute is easy but extracting the numeric value from a string like \"m12\" or \"m6\" is a pain. (I am a beginner in JavaScript world.)</p>\n",
            "last_activity_date": 1250771349,
            "question_id": 1305734,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "Is it OK to add your own attributes to HTML elements?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Unfortunately, <code>setTimeout()</code> is the only <strong>reliable</strong> way (not the only way, but the only <strong>reliable</strong> way) to pause the execution of the script without blocking the UI.</p>\n\n<p>It's not that hard to use actually, instead of writing this:</p>\n\n<pre><code>var x = 1;\n\n// Place mysterious code that blocks the thread for 100 ms.\n\nx = x * 3 + 2;\nvar y = x / 2;\n</code></pre>\n\n<p>you use <code>setTimeout()</code> to rewrite it this way:</p>\n\n<pre><code>var x = 1;\nvar y = null; // To keep under proper scope\n\nsetTimeout(function() {\n    x = x * 3 + 2;\n    y = x / 2;\n}, 100);\n</code></pre>\n\n<p>I understand that using <code>setTimeout()</code> involves more thought than a desirable <code>sleep()</code> function, but unfortunately the later doesn't exist. Many workarounds are there to try to implement such functions. Some using busy loops:</p>\n\n<pre><code>function sleep(milliseconds) {\n  var start = new Date().getTime();\n  for (var i = 0; i &lt; 1e7; i++) {\n    if ((new Date().getTime() - start) &gt; milliseconds){\n      break;\n    }\n  }\n}\n</code></pre>\n\n<p>others <a href=\"http://narayanraman.blogspot.com/2005/12/javascript-sleep-or-wait.html\">using an <code>XMLHttpRequest</code> tied with a server script that sleeps for a amount of time before returning a result</a>.</p>\n\n<p>Unfortunately, those are workarounds and are likely to cause other problems (such as freezing browsers). It is recommended to simply stick with the recommended way, which is <code>setTimeout()</code>).</p>\n",
                    "is_accepted": true,
                    "score": 63
                },
                {
                    "body": "<p><a href=\"http://www.ozzu.com/programming-forum/javascript-sleep-function-t66049.html\" rel=\"nofollow\">This thread</a> has a good discussion and a useful solution:</p>\n\n<pre><code>function pause( iMilliseconds )\n{\n    var sDialogScript = 'window.setTimeout( function () { window.close(); }, ' + iMilliseconds + ');';\n    window.showModalDialog('javascript:document.writeln (\"&lt;script&gt;' + sDialogScript + '&lt;' + '/script&gt;\")');\n}\n</code></pre>\n\n<p>Unfortunately it appears that this doesn't work in some versions of IE, but the thread has many other worthy proposals if that proves to be a problem for you.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Actually only <code>setTimeout</code> is fine for that job and normally you cannot set exact delays with non determined methods as busy loops. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I just had an issue where I needed to solve this properly.</p>\n\n<p>Via Ajax, a script gets X (0-10) messages.\nWhat I wanted to do:\nAdd one message to the DOM every 10 Seconds.</p>\n\n<p>the code I ended up with:</p>\n\n<pre><code>$.each(messages, function(idx, el){\n  window.setTimeout(function(){\n    doSomething(el);\n  },Math.floor(idx+1)*10000);\n});\n</code></pre>\n\n<p>Basically, think of the timeouts as a \"timeline\" of your script.</p>\n\n<p>This is what we WANT to code:</p>\n\n<pre><code>DoSomething();\nWaitAndDoNothing(5000);\nDoSomethingOther();\nWaitAndDoNothing(5000);\nDoEvenMore();\n</code></pre>\n\n<p>This is HOW WE NEED TO TELL IT TO THE JAVASCRIPT:</p>\n\n<pre><code>At Runtime 0    : DoSomething();\nAt Runtime 5000 : DoSomethingOther();\nAt Runtime 10000: DoEvenMore();\n</code></pre>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use a AJAX function which will call a php page synchronously and then in that page you can put the php usleep() function which will act as a delay. </p>\n\n<pre><code>function delay(t){\n\nvar xmlhttp;\n\nif (window.XMLHttpRequest)\n\n{// code for IE7+, Firefox, Chrome, Opera, Safari\n\nxmlhttp=new XMLHttpRequest();\n\n}\n\nelse\n\n{// code for IE6, IE5\n\nxmlhttp=new ActiveXObject(\"Microsoft.XMLHTTP\");\n\n}\n\nxmlhttp.open(\"POST\",\"http://www.hklabs.org/files/delay.php?time=\"+t,false);\n\n//This will call the page named delay.php and the response will be sent to a division with ID as \"response\"\n\nxmlhttp.send();\n\ndocument.getElementById(\"response\").innerHTML=xmlhttp.responseText;\n\n}\n</code></pre>\n\n<p><a href=\"http://www.hklabs.org/articles/put-delay-in-javascript\" rel=\"nofollow\">http://www.hklabs.org/articles/put-delay-in-javascript</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I need to add delay about 100 miliseconds to my <code>javascipt</code> but I don't want to use the<code>setTimeout</code> function of the <code>window</code> object and I don't want to use a busy loop. Does anyone have any suggestions?</p>\n",
            "last_activity_date": 1381901663,
            "question_id": 1183872,
            "score": 18,
            "tags": [
                "javascript"
            ],
            "title": "Put a Delay in Javascript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Edit: To answer your edit, use <code>Math.round</code>.  You could also prototype the <code>Number</code> object to have it do your bidding if you prefer that syntax.</p>\n\n<pre><code>Number.prototype.round = function() {\n  return Math.round(this);\n}\nvar num = 3.5;\nalert(num.round())\n</code></pre>\n\n<p>I've never used <code>Number.toFixed()</code> before (mostly because most JS libraries provide a <a href=\"http://mootools.net/docs/Native/Number#Number:toInt\"><code>toInt()</code></a> method), but judging by your results I would say it would be more consistent to use the <code>Math</code> methods (<code>round</code>, <code>floor</code>, <code>ceil</code>) then <code>toFixed</code> if cross-browser consistency is what you are looking for.  </p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Instead of <code>toFixed(0)</code> use <code>Math.ceil()</code> or <code>Math.floor()</code>, depending on what is required.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It definitely seems that way, if you're getting inconsistent answers.</p>\n\n<p>I can only guess that your intent with usin toFixed(0) is to turn a decimal number into an integer, at which point I recommend Math.floor().  There's a bit more discussion on the best way to do so in <a href=\"http://stackoverflow.com/questions/131406/what-is-the-best-method-to-convert-to-an-integer-in-javascript\" rel=\"nofollow\" title=\"this question\">this question</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think FF is doing the right thing with toFixed, since step 10 below says \"If there are two such n, pick the larger n.\"</p>\n\n<p>And as <a href=\"http://stackoverflow.com/users/9254/\">Grant Wagner</a> said: Use <em>Math.ceil(x)</em> or <em>Math.floor(x)</em> instead of <em>x.toFixed()</em>.</p>\n\n<p>Everything below is from the <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\" rel=\"nofollow\">ECMAScript Language Specification</a>:</p>\n\n<blockquote>\n  <h2>15.7.4.5 <code>Number.prototype.toFixed (fractionDigits)</code></h2>\n  \n  <p>Return a string containing the number represented in fixed-point\n  notation with <code>fractionDigits</code> digits after the decimal point. If\n  <code>fractionDigits</code> is undefined, <code>0</code> is assumed. Specifically, perform the\n  following steps:</p>\n  \n  <ol>\n  <li>Let <code>f</code> be <code>ToInteger(fractionDigits)</code>. (If <code>fractionDigits</code> is undefined,\n  this step produces the value <code>0</code>).</li>\n  <li>If <code>f &lt; 0</code> or <code>f &gt; 20</code>, throw a <code>RangeError</code> exception.</li>\n  <li>Let <code>x</code> be this number value.</li>\n  <li>If <code>x</code> is <code>NaN</code>, return the string <code>\"NaN\"</code>.</li>\n  <li>Let <code>s</code> be the empty string.</li>\n  <li>If <code>x \u2265 0</code>, go to step 9.</li>\n  <li>Let s be <code>\"-\"</code>.</li>\n  <li>Let <code>x = \u2013x</code>.</li>\n  <li>If <code>x \u2265 10^21</code>, let <code>m = ToString(x)</code> and go to step 20.</li>\n  <li>Let <code>n</code> be an integer for which the exact mathematical value of\n  <code>n \u00f7 10^f \u2013 x</code> is as close to zero as possible. If there are two\n  such <code>n</code>, pick the larger <code>n</code>.</li>\n  <li>If <code>n = 0</code>, let <code>m</code> be the string <code>\"0\"</code>. Otherwise, let <code>m</code> be the\n  string consisting of the digits of the decimal representation\n  of <code>n</code> (in order, with no leading zeroes).</li>\n  <li>If <code>f = 0</code>, go to step 20.</li>\n  <li>Let <code>k</code> be the number of characters in <code>m</code>.</li>\n  <li>If <code>k &gt; f</code>, go to step 18.</li>\n  <li>Let <code>z</code> be the string consisting of <code>f+1\u2013k</code> occurrences of the\n  character <code>'0'</code>.</li>\n  <li>Let <code>m</code> be the concatenation of strings <code>z</code> and <code>m</code>.</li>\n  <li>Let <code>k = f + 1</code>.</li>\n  <li>Let <code>a</code> be the first <code>k\u2013f</code> characters of <code>m</code>, and let <code>b</code> be the\n  remaining <code>f</code> characters of <code>m</code>.</li>\n  <li>Let <code>m</code> be the concatenation of the three strings <code>a</code>, <code>\".\"</code>, and <code>b</code>.</li>\n  <li>Return the concatenation of the strings <code>s</code> and <code>m</code>.</li>\n  </ol>\n  \n  <p>The <code>length</code> property of the <code>toFixed</code> method is <code>1</code>.</p>\n  \n  <p>If the <code>toFixed</code> method is called with more than one argument, then the\n  behaviour is undefined (see section 15).</p>\n  \n  <p>An implementation is permitted to extend the behaviour of <code>toFixed</code> for\n  values of <code>fractionDigits</code> less than <code>0</code> or greater than <code>20</code>. In this case\n  <code>toFixed</code> would not necessarily throw <code>RangeError</code> for such values.</p>\n  \n  <p><strong>NOTE</strong> The output of <code>toFixed</code> may be more precise than <code>toString</code> for\n  some values because <code>toString</code> only prints enough significant digits\n  to distinguish the number from adjacent number values. For example,\n  <code>(1000000000000000128).toString()</code> returns <code>\"1000000000000000100\"</code>, while\n  <code>(1000000000000000128).toFixed(0)</code> returns <code>\"1000000000000000128\"</code>.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p><strong>toFixed()</strong> returns a string value. From Javascript: The Definitive Guide </p>\n\n<blockquote>\n  <p>Converts a number to a string that contains a specified number of\n  digits after the decimal place.</p>\n</blockquote>\n\n<p><strong>Math.round()</strong> returns an integer.</p>\n\n<p>Clearly, toFixed() seem to be more use for money, for example, </p>\n\n<blockquote>\n  <p>'$' + 12.34253.toFixed(2) = '$12.34'</p>\n</blockquote>\n\n<p>It seems a big pity that <strong>toFixed()</strong> does not appear to round properly!</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>To address your two issues/questions:</p>\n\n<h2>Math.round(num) vs num.toFixed(0)</h2>\n\n<p>The issue here lies in the misconception that these should always give the same result. They are, in fact, governed by different rules. Look at negative numbers, for example. Because <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.8.2.15\" rel=\"nofollow\"><code>Math.round</code></a> uses <a href=\"http://en.wikipedia.org/wiki/Rounding#Round_half_up\" rel=\"nofollow\">\"round half up\"</a> as the rule, you will see that <code>Math.round(-1.5)</code> evaluates to <code>-1</code> even though <code>Math.round(1.5)</code> evaluates to <code>2</code>.</p>\n\n<p><code>Number.prototype.toFixed</code>, on the other hand, uses what is basically equivalent to <a href=\"http://en.wikipedia.org/wiki/Rounding#Round_half_away_from_zero\" rel=\"nofollow\">\"round half away from zero\"</a> as the rule, according to <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.7.4.5\" rel=\"nofollow\">step 6 of the spec</a>, which essentially says to treat negatives as positive numbers, and then add back the negative sign at the end. Thus, <code>(-1.5).toFixed(0) === \"-2\"</code> and <code>(1.5).toFixed(0) === \"2\"</code> are true statements in all spec-compliant browsers. (Note that these values are strings, not numbers. Note further that <code>-1.5.toFixed(0) === -(1.5).toFixed(0) === -2</code> evaluates to true, due to operator precedence.)</p>\n\n<h2>Browser inconsistencies</h2>\n\n<p>As for cross-browser consistency--modern (as of this writing), spec-compliant browsers--or at least the ones you might be expected to support in 2014--should all implement the spec correctly. There have been bugs in the past, but according to <a href=\"http://stackoverflow.com/questions/566564/javascript-functions-math-roundnum-vs-num-tofixed0-and-browser-inconsistenci#comment2034745_566564\">Renee's comment</a>, the <code>toFixed</code> issue in Opera has been fixed. I wouldn't be too surprised if IE 8 even does the right thing, though I am not sure IE 7 would have ever been patched.</p>\n\n<h2>Conclusion</h2>\n\n<p>In short, these are two different functions with two different return types and two different sets of rules for rounding, though the reasoning behind why the spec was written this way is beyond me.</p>\n\n<p>As others have suggested, I would like to say \"use whichever function fits your particular use case\"... though noting that <code>toFixed</code> can be surprising even in how it rounds positive numbers in some cases (see <a href=\"http://stackoverflow.com/q/10015027\">Javascript toFixed Not Rounding</a>), I might lean more towards recommending some explicit combination of <code>Math.round/ceil/floor</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Edit: To clarify, the problem is how to round a number to the nearest integer.  i.e. 0.5 should round to 1 and 2.5 shoud round to 3.</p>\n\n<p>Consider the following code:</p>\n\n<pre><code>&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body style=\"font-family:courier\"&gt;\n&lt;script&gt;\nfor (var i=0;i&lt;3;i++){\n   var num = i + 0.50;\n   var output = num + \" \" + Math.round(num) + \" \" + num.toFixed(0);\n   var node = document.createTextNode(output);\n   var pElement = document.createElement(\"p\");\n   pElement.appendChild(node);\n   document.body.appendChild(pElement);\n}\n&lt;/script&gt;\n&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n\n<p>In Opera 9.63 I get:</p>\n\n<p>0.5 1 <strong>0</strong></p>\n\n<p>1.5 2 2</p>\n\n<p>2.5 3 <strong>2</strong></p>\n\n<p>In FF 3.03 I get:</p>\n\n<p>0.5 1 <strong>1</strong></p>\n\n<p>1.5 2 2</p>\n\n<p>2.5 3 <strong>3</strong></p>\n\n<p>In IE 7 I get:</p>\n\n<p>0.5 1 <strong>0</strong></p>\n\n<p>1.5 2 2</p>\n\n<p>2.5 3 <strong>3</strong></p>\n\n<p>Note the bolded results.  Does this mean that toFixed(0) should be avoided?</p>\n",
            "last_activity_date": 1417714801,
            "question_id": 566564,
            "score": 18,
            "tags": [
                "javascript",
                "cross-browser"
            ],
            "title": "Javascript functions Math.round(num) vs num.toFixed(0) and browser inconsistencies"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>If the links you want to open in safari all contain a common string, you can use the next piece of code.</p>\n\n<pre><code>- (BOOL)webView:(UIWebView *)theWebView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType\n{\n    NSURL *url = [request URL];\n\n    // Intercept the external http requests and forward to Safari.app\n    // Otherwise forward to the PhoneGap WebView\n    if ([[url scheme] isEqualToString:@\"SCHEME\"]) {\n        [[UIApplication sharedApplication] openURL:url];\n        return NO;\n    }\n    else {\n        return [ super webView:theWebView shouldStartLoadWithRequest:request navigationType:navigationType ];\n    }\n}\n</code></pre>\n\n<p>This code placed in the <code>AppDelegate.m</code> will open all URL that use the specified SCHEME in Safari. </p>\n\n<p>I'm afraid that is all I could come up with.</p>\n\n<p>Hope this helps</p>\n\n<p><strong>UPDATE :</strong> </p>\n\n<p>The code should be placed in the MainViewControler, at least for cordova 2.2.0. </p>\n\n<p>The method is initially commented. I had to use it to redirect Google maps links : </p>\n\n<pre><code>NSRange isGoogleMaps = [[url absoluteString] rangeOfString:@\"maps.google.com\" options:NSCaseInsensitiveSearch];\nNSRange isGoogleTerms = [[url absoluteString] rangeOfString:@\"terms_maps.html\" options:NSCaseInsensitiveSearch];\n\nif(isGoogleMaps.location != NSNotFound || isGoogleTerms.location != NSNotFound ) {\n        [[UIApplication sharedApplication] openURL:url];\n       return NO;\n}\nelse \n    return [super webView:theWebView shouldStartLoadWithRequest:request navigationType:navigationType];\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>You can (as of phonegap 1.5.0) use :</p>\n\n<pre><code>&lt;a href=\"some://external/url\" target=\"_blank\"&gt;Click Me&lt;/a&gt;\n</code></pre>\n\n<p>This should cause phonegap to launch the native browser.</p>\n\n<p>I think what user868766 was referring to was that for the above to work you need the external url to be on the whitelist. \nThe app I have been working on opened the source of news stories in the native browser so we used * in the whitelist to ensure we didnt rule out any sources.</p>\n\n<p>Hope that helps.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>This is what works for me based on the answer by @TDeBailleul. Basically, any link that has a suffix of PDF, OR if it is a specific page I want to open in Safari, OR if it is not a page within www.example.com/* (an external link) it will open in a new window: </p>\n\n<pre><code>- (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType {\n\n    // Open PDF files, Specific Pages, and External Links (not beginning with http://www.example.com) in Safari.app\n    if (\n        (navigationType == UIWebViewNavigationTypeLinkClicked) &amp;&amp; \n        ([[[request URL] absoluteString] hasSuffix:@\"pdf\"] || [[[request URL] absoluteString] hasPrefix:@\"http://www.example.com/specific-page.php\"] || ![[[request URL] absoluteString] hasPrefix:@\"http://www.example.com\"])\n        ) { \n\n        [[UIApplication sharedApplication] openURL:request.URL];\n        return NO;\n    } \n\n    return YES;\n}\n</code></pre>\n\n<p>Hope this helps others!</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>if you want to open an external url in safari, I think this is useful:\n<br/>\nThis is the %100 guaranteed solution if you are using phonegap - Tested in ios6.\n<br/>\nto open external url in safari do following:\n<br/></p>\n\n<p>1-add your link in External Host (white list). e.g <a href=\"http://google.com\" rel=\"nofollow\">http://google.com</a> \n<br/>\n2-in Cordova.plist or Phonegap.plist, change \"OpenAllWhitelistURLsInWebView\" from \"Yes\" to \"No\"\n<br/>\n3-in your application add (target=\"_blank\") to your link\n<br/>\nexample \n<br/></p>\n\n<pre><code>    &lt;a href=\"http://google.com\" target=\"_blank\"&gt;Google.com&lt;/a&gt;\n</code></pre>\n\n<p><br/>\nThank you.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Tested on cordova 2.4 + iOS</p>\n\n<p>use \"_system\" and no need to update any configuration</p>\n\n<p><a href=\"http://docs.phonegap.com/en/2.3.0/cordova_inappbrowser_inappbrowser.md.html#InAppBrowser\" rel=\"nofollow\">http://docs.phonegap.com/en/2.3.0/cordova_inappbrowser_inappbrowser.md.html#InAppBrowser</a></p>\n\n<blockquote>\n  <p>target: the target to load the URL in (String) (Optional, Default:\n  \"_self\")</p>\n  \n  <p>_self - opens in the Cordova WebView if url is in the white-list, else it opens in the InAppBrowser \n  _blank - always open in the InAppBrowser \n  _system - always open in the system web browser</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just catch all links in your javascript that have <code>target=\"_blank\"</code>, and pass them to window.open with the '_system' param. This will work on both iOS and Android.</p>\n\n<pre><code>$(document).on('click', 'a[target=\"_blank\"]', function(ev) {\n  var url;\n\n  ev.preventDefault();\n  url = $(this).attr('href');\n  window.open(url, '_system');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>This works for me it helps alot</p>\n\n<pre><code>-(void)viewDidLoad\n{\n   [super viewDidLoad];\n    ////////////////////////\n    NSString *urlAddress = @\"http://www.playbuzz.org/\";\n    //NSURL *myURL = [NSURL URLWithString:urlAddress];\n    myWebview.delegate = (id)self;\n   [myWebview loadRequest:[NSURLRequest requestWithURL:[NSURL     URLWithString:urlAddress]]];\n}\n\n\n- (void)didReceiveMemoryWarning\n{\n    [super didReceiveMemoryWarning];\n    // Dispose of any resources that can be recreated.\n}\n\n- (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType {\n\n\n    //  open External Links (not beginning with www.playbuzz.org/ in Safari.app\n    if (\n        (navigationType == UIWebViewNavigationTypeLinkClicked) &amp;&amp;\n        ( ![[[request URL] absoluteString] hasPrefix:@\"http://www.playbuzz.org/\"])\n        ) {\n\n        [[UIApplication sharedApplication] openURL:request.URL];\n        return NO;\n    }\n\n   //open Internal links in uiwebview\n   return YES;\n}`\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<ol>\n<li><p>Add target=\"_blank\" to your links. \nie:</p>\n\n<pre><code>&lt;a href=\"http://www.brandonbrotsky.com/\" target=\"_blank\"&gt;&lt;/a&gt;\n</code></pre></li>\n<li><p>Make sure access has an origin of * /> in your config.xml (make sure its the one in the root of the app directory, above the www folder.\nie:</p>\n\n<pre><code>&lt;access origin=\"*\" /&gt;\n</code></pre></li>\n<li><p>Add the following code to MainViewController.m</p>\n\n<pre><code>- (BOOL)webView:(UIWebView *)theWebView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType\n{\n    NSURL *url = [request URL];\n\n    // Intercept the external http requests and forward to Safari.app\n    // Otherwise forward to the PhoneGap WebView\n    if ([[url scheme] isEqualToString:@\"http\"] || [[url scheme] isEqualToString:@\"https\"]) {\n        [[UIApplication sharedApplication] openURL:url];\n        return NO;\n    }\n    else {\n        return [ super webView:theWebView shouldStartLoadWithRequest:request navigationType:navigationType ];\n    }\n} \n</code></pre></li>\n</ol>\n\n<p>I made a quick video explaining how to fix this issue:</p>\n\n<p><a href=\"http://www.youtube.com/watch?v=zqbjXSnAR-Q&amp;feature=c4-overview&amp;list=UUefS6KLvFQVjhmL6hiBq4Sg\" rel=\"nofollow\">http://www.youtube.com/watch?v=zqbjXSnAR-Q&amp;feature=c4-overview&amp;list=UUefS6KLvFQVjhmL6hiBq4Sg</a></p>\n\n<p>Hope it helps!</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a Phonegap (cordova) application where I want to load some external webpages within the phonegap WebView and I have other external webpages that I want to load in safari when the user activates them.</p>\n\n<p>Typically most people have the problem where they want to open an external link in the WebView.  Setting <em>OpenAllWhitelistURLsInWebView</em> to <em>YES</em> (in Cordova.plist/Phongap.plist) solves that problem.</p>\n\n<p>But I don't want to open <strong>all</strong> links the the WebView, just some.</p>\n\n<p>I was hoping I could just call <code>window.open('http://someexternalsite')</code> to open in Safari and <code>window.parent.location.href = 'http://mysite'</code> to open it in the WebView.</p>\n\n<p>Any idea how to do this?</p>\n",
            "last_activity_date": 1386708064,
            "question_id": 9746260,
            "score": 17,
            "tags": [
                "javascript",
                "ios",
                "cordova"
            ],
            "title": "How can I open an external link in Safari not the app&#39;s UIWebView?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>If <code>null</code> is a primitive, why does <code>typeof(null)</code> return <code>\"object\"</code>?</p>\n</blockquote>\n\n<p>Because <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-11.4.3\">the spec says so</a>.</p>\n\n<blockquote>\n  <h3><a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-11.4.3\">11.4.3</a> The <code>typeof</code> Operator</h3>\n  \n  <p>The production <em>UnaryExpression</em> : <code>typeof</code> <em>UnaryExpression</em> is evaluated as follows:</p>\n  \n  <ol>\n  <li>Let <em>val</em> be the result of evaluating <em>UnaryExpression</em>.</li>\n  <li>If <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-8\">Type</a>(<em>val</em>) is <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-8.7\">Reference</a>, then<br>\n  &nbsp;&nbsp;&nbsp;a. If <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-8.7\">IsUnresolvableReference</a>(<em>val</em>) is <strong>true</strong>, return \"<strong><code>undefined</code></strong>\".<br>\n  &nbsp;&nbsp;&nbsp;b. Let <em>val</em> be <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-8.7.1\">GetValue</a>(<em>val</em>).</li>\n  <li>Return a String determined by <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-8\">Type</a>(<em>val</em>) according to Table 20.</li>\n  </ol>\n  \n  <p><img src=\"http://i.stack.imgur.com/FzI1R.png\" alt=\"enter image description here\"></p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>In the first implementation of JavaScript, JavaScript values were represented as a type tag and a value, with the type tag for objects being <code>0</code>, and <code>null</code> was represented as the <code>NULL</code> pointer (<code>0x00</code> on most platforms). As a result, null had <code>0</code> as a type tag, hence the bogus <code>typeof</code> return value (<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof\">reference</a>).</p>\n\n<pre><code> typeof null === 'object'; // This stands since the beginning of JavaScript\n</code></pre>\n\n<p>A \"fix\" was proposed for ECMAScript (via an opt-in). It would have resulted in:</p>\n\n<pre><code>typeof null === 'null'\n</code></pre>\n\n<p>... but this change was <a href=\"http://wiki.ecmascript.org/doku.php?id=harmony%3atypeof_null\">rejected</a>, due to issues with code using this specific \"quirk\" to test for <code>null</code>.</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>As has been pointed out, the spec says so. But since the implementation of JavaScript predates the writing of the ECMAScript spec, and the specification was careful not to correct foibles of the initial implementation, there's still a legitimate question about why it was done this way in the first place. Douglas Crockford <a href=\"http://javascript.crockford.com/survey.html\" rel=\"nofollow\">calls it a mistake</a>. Kiro Risk <a href=\"http://kiro.me/blog/typeof_null.html\" rel=\"nofollow\">thinks it kinda sorta makes sense</a>: </p>\n\n<blockquote>\n  <p>The reasoning behind this is that <code>null</code>, in contrast with <code>undefined</code>, was (and still is) often used where objects appear. In other words, <code>null</code> is often used to signify an empty reference to an object. When Brendan Eich created JavaScript, he followed the same paradigm, and it made sense (arguably) to return \"object\". In fact, the ECMAScript specification defines <code>null</code> as <em>the primitive value that represents the intentional absence of any object value</em> (ECMA-262, 11.4.11).</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am reading 'Professional Javascript for Web Developers' Chapter 4 and it tells me that the five types of primitives are: undefined, null, boolean, number and string.</p>\n\n<p>If <code>null</code> is a primitive, why does <code>typeof(null)</code> return <code>\"object\"</code>?</p>\n\n<p>Wouldn't that mean that <code>null</code> is passed by reference (I'm assuming here all objects are passed by reference), hence making it NOT a primitive?</p>\n",
            "last_activity_date": 1383769893,
            "question_id": 18808226,
            "score": 16,
            "tags": [
                "javascript",
                "primitive"
            ],
            "title": "why is typeof null &quot;object&quot;?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><strong>Code :</strong></p>\n\n<pre><code>var now = new Date();\nvar time = now.getTime();\ntime += 3600 * 1000;\nnow.setTime(time);\ndocument.cookie = \n'username=' + value + \n'; expires=' + now.toUTCString() + \n'; path=/';\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<pre><code>var now = new Date().getTime();\nnow = Math.round((new Date(now)).getTime() / 1000)+ 3600;  \n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>How to set this cookie to expire in one hour from the current time:</p>\n\n<pre><code>document.cookie = 'username=' + value; + 'expires=' + WHAT GOES HERE?; + 'path = /';\n</code></pre>\n",
            "last_activity_date": 1407415013,
            "question_id": 3794989,
            "score": 16,
            "tags": [
                "javascript"
            ],
            "title": "How to set a cookie to expire in 1 hour in Javascript?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You can't load the  maps-API asynchronous with the well-known URL( <a href=\"http://maps.googleapis.com/maps/api/js?v=3&amp;sensor=false\" rel=\"nofollow\">http://maps.googleapis.com/maps/api/js?v=3&amp;sensor=false</a> )</p>\n\n<p>When you take a look at the script-file, you'll see, that this is not the API that gets loaded, it's a loader that loads the API. The loader   makes use of <code>document.write()</code> , what will lead you to unexpected results when called after the document has been loaded.</p>\n\n<p>Furthermore the onload-event of the document doesn't wait for asynchronous loaded objects, it may come too quick.</p>\n\n<p>You also cannot use the load-event of the script to invoke the initialize-function, because when it fires, the loader is loaded, not the maps-API.</p>\n\n<p><strong>What to do:</strong><br>\nappend a callback-parameter to the script-URL(with the name of the initialize-function as value)  </p>\n\n<p><code><a href=\"http://maps.googleapis.com/maps/api/js?v=3&amp;sensor=false&amp;callback=initialize\" rel=\"nofollow\">http://maps.googleapis.com/maps/api/js?v=3&amp;sensor=false&amp;<b>callback=initialize</b></a></code></p>\n\n<p>Now you get a different loader which:</p>\n\n<ol>\n<li>doesn't use <code>document.write()</code></li>\n<li>calls the callback-function(initialize) when the maps-API has been loaded</li>\n</ol>\n\n<p>Demo: <a href=\"http://jsfiddle.net/doktormolle/7cu2F/\" rel=\"nofollow\"><strong>http://jsfiddle.net/doktormolle/7cu2F/</strong></a></p>\n\n<hr>\n\n<p><strong>Related to the comment</strong>: <em>seems the callback has to be a function attached to window directly. not cool google :)</em></p>\n\n<p>There is another option, <a href=\"https://developers.google.com/loader/\" rel=\"nofollow\">the google-API-loader</a> which supports the usage of function-references (instead of function-names).</p>\n\n<p>Sample, which loads the maps-API asynchronously, but only when there is an element with the ID <code>map-canvas</code> in the document, and then creates a map:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>    window.addEventListener('load',function(){\r\n      if(document.getElementById('map-canvas')){\r\n        google.load(\"maps\", \"3\",{\r\n          callback:function(){\r\n             new google.maps.Map(document.getElementById('map-canvas'), {\r\n                center: new google.maps.LatLng(0,0),\r\n                zoom: 3\r\n              });\r\n          }\r\n        });     \r\n      }\r\n    },false);</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>      body,html,#map-canvas{\r\n        height:100%;\r\n        margin:0;\r\n        padding:0;\r\n        width:100%;\r\n      }</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"https://www.google.com/jsapi?.js\"&gt;&lt;/script&gt;\r\n&lt;div id=\"map-canvas\"&gt;&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": true,
                    "score": 36
                }
            ],
            "body": "<p>I'm writing an app that loads Google Maps asynchronously with a hand-built framework.<br>\nWhen I load maps it will not load all of it for some reason and I'll end up with a <code>Uncaught TypeError: undefined is not a function</code>. I checked chrome inspector and found out that <code>google.maps</code> is a valid object, but it has none of its own properties. I manually call the \"initialize function\" well after the document has loaded. What am I doing wrong?!</p>\n",
            "last_activity_date": 1423868377,
            "question_id": 14184956,
            "score": 13,
            "tags": [
                "javascript",
                "google-maps-api-3",
                "asynchronous"
            ],
            "title": "Async Google Maps API v3 undefined is not a function"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You might try using a framework, such as MooTools or jQuery which provide cross-browser support. They should be able to detect with more reliability the <code>blur</code> and <code>focus</code> events for the browser window.</p>\n\n<p>I personally have used jQuery with much success:</p>\n\n<pre><code>$(window).blur(function(e) {\n    // Do Blur Actions Here\n});\n$(window).focus(function(e) {\n    // Do Focus Actions Here\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p>I'm looking for an event which will fire whenever the user switches away from the page to another tab, and another event which fires when the user switches back to the tab again.</p>\n\n<p>window.onblur and window.onfocus <a href=\"http://www.quirksmode.org/dom/events/index.html\">don't seem to work correctly</a> across all browsers</p>\n\n<p>Is there a proxy I could look at in order to synthesize this event?</p>\n",
            "last_activity_date": 1319453464,
            "question_id": 1038643,
            "score": 13,
            "tags": [
                "javascript",
                "cross-browser"
            ],
            "title": "Event for when user switches browser tabs"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>setupController</code> is the last thing that the Router calls before finalizing the transition. And if it completes without errors, as far as Ember is concerned the transition is complete. You actually see this in action by enabling <code>LOG_TRANSITIONS_INTERNAL</code>.</p>\n\n<p>At that point, It doesn't matter if the controller has thrown an error, view has thrown an error, etc. The router has completed transitioning into the target route.</p>\n\n<p>So <code>setupController</code> is the last place in terms of the Router that corresponds to <code>didTransition</code>.</p>\n\n<p>When the content/model backing the controller changes on an existing View, the bindings kick in. Most of the changes that happen to the view at that point are via Metamorphing. </p>\n\n<p>The closest place I can think of to hook into would be <code>View.render</code> which pushes changes into the <code>RenderBuffer</code>. But you still need to account for Metamorphing via mixins that happens here.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The <code>afterModel</code> hook might work for you:</p>\n\n<pre><code>App.MyRoute = Ember.Route.extend({\n  afterModel: function(model, transition) {\n    transition.then(function() {\n      // Done transitioning\n    });\n  }\n});\n</code></pre>\n\n<p>I tested this using RC-7 with routes that both do and don't have dynamic segments (i.e., a route with a model and a route without a model). It seems to work either way.</p>\n\n<p>See this JSBin for an RC-6 example: <br />\n&nbsp;&nbsp;Output: <a href=\"http://jsbin.com/OteC/1/\">http://jsbin.com/OteC/1/</a> <br />\n&nbsp;&nbsp;Source: <a href=\"http://jsbin.com/OteC/1/edit?html,js\">http://jsbin.com/OteC/1/edit?html,js</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>There are a couple of different ways you can solve this</p>\n\n<h2>didInsertElement</h2>\n\n<p>This is fired when the view is inserted on the first time, but not fired if the model is switched out under the view (because Ember likes to reuse items, since it's cheaper than rebuilding the entire DOM).  Example below.</p>\n\n<h3>Simple</h3>\n\n<p>If you only need to do it once, the first time the view is inserted, use <code>didInsertElement</code></p>\n\n<pre><code>App.FooView = Em.View.extend({\n  setupSomething: function(){\n    console.log('the dom is in place, manipulate');\n  }.on('didInsertElement')\n});\n</code></pre>\n\n<p>Example: <a href=\"http://emberjs.jsbin.com/wuxemo/1/edit\">http://emberjs.jsbin.com/wuxemo/1/edit</a></p>\n\n<h3>Complex</h3>\n\n<p>If you need to schedule something after the DOM has been rendered from the route itself, you can use <code>schedule</code> and insert it into the <code>afterRender</code> queue.</p>\n\n<pre><code>App.FooRoute = Em.Route.extend({\n  setupController: function(controller, model){\n    this._super('controller', model);\n    Ember.run.schedule('afterRender', this, function () {\n      //Do it here\n    });\n  }\n});\n</code></pre>\n\n<p>Example: <a href=\"http://emberjs.jsbin.com/wuxemo/2/edit\">http://emberjs.jsbin.com/wuxemo/2/edit</a></p>\n\n<h2>Transition promise</h2>\n\n<p>The transition's promise will complete before it's finished rendering items.  But it gives you a hook for when it's done with fetching all of the models and controllers and hooking them up.</p>\n\n<p>If you want to hook up to the transition event you can do it like so:</p>\n\n<pre><code>transitionTo('foo').then(function(){\n    Ember.run.schedule('afterRender', this, function () {\n          //Do it here\n    });\n})\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>Is there any event fired stating the transition/rendering has completed (and the dom is visible/ready).</p>\n\n<p>setupcontroller/activate are before the dom is built/rendered</p>\n\n<p>didInsertElement gets fired only the first time when I've already inserted an element and I'm just switching the model out underneath it.</p>\n\n<p>What I'm really looking for is the transition is complete event</p>\n\n<p>I guess I can do this, but I was kind of hoping it was already built in...</p>\n\n<pre><code>Ember.Router.reopen({\n  didTransition:function(infos) {\n     this._super(infos);\n     console.log('transition complete');  \n  }\n});\n</code></pre>\n\n<p>Even cooler would be a callback to the route that the transition completed for it, I may have to write this and submit a pull request.</p>\n",
            "last_activity_date": 1412092698,
            "question_id": 17437016,
            "score": 12,
            "tags": [
                "javascript",
                "ember.js",
                "promise",
                "transitions"
            ],
            "title": "Ember transition &amp; rendering complete event"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>What globals does this JS file introduce?</p>\n\n<p>Let's say it creates a </p>\n\n<pre><code>var FaceBook = function() {//make friends! Or whatever...}\n</code></pre>\n\n<p>You can test for <code>if (FaceBook)</code> and go from there.</p>\n\n<p>It seems likely that they give you some sort of load event for when their framework is booted up, so to speak.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Load the script dynamically (add a script tag from js) and check for error / success events.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You should load the <a href=\"http://developers.facebook.com/docs/reference/javascript/\">Javascript Library Asynchronously</a> and put all your FB related functions inside the <code>window.fbAsyncInit</code> method:  </p>\n\n<pre><code>&lt;div id=\"fb-root\"&gt;&lt;/div&gt;\n&lt;script&gt;\n  window.fbAsyncInit = function() {\n    FB.init({\n      appId      : 'YOUR_APP_ID', // App ID\n      channelUrl : '//WWW.YOUR_DOMAIN.COM/channel.html', // Channel File\n      status     : true, // check login status\n      cookie     : true, // enable cookies to allow the server to access the session\n      xfbml      : true  // parse XFBML\n    });\n\n    // Additional initialization code here\n  };\n\n  // Load the SDK Asynchronously\n  (function(d){\n     var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];\n     if (d.getElementById(id)) {return;}\n     js = d.createElement('script'); js.id = id; js.async = true;\n     js.src = \"//connect.facebook.net/en_US/all.js\";\n     ref.parentNode.insertBefore(js, ref);\n   }(document));\n&lt;/script&gt;\n</code></pre>\n\n<blockquote>\n  <p>This code loads the SDK asynchronously so it does not block loading\n  other elements of your page. This is particularly important to ensure\n  fast page loads for users and SEO robots.</p>\n  \n  <p>The URLs in the above code are protocol relative. This lets the\n  browser to load the SDK over the same protocol (HTTP or HTTPS) as the\n  containing page, which will prevent \"Insecure Content\" warnings.</p>\n  \n  <p>The function assigned to <code>window.fbAsyncInit</code> is run as soon as the SDK\n  is loaded. Any code that you want to run after the SDK is loaded\n  should be placed within this function and after the call to <code>FB.init</code>.\n  For example, <a href=\"http://i.stack.imgur.com/O9FfD.jpg\">this is where you would test the logged in status</a> of the\n  user or <a href=\"http://github.com/facebook/php-sdk\">subscribe to any Facebook events</a> in which your application is\n  interested.</p>\n</blockquote>\n\n<p>A quick example is the following:  </p>\n\n<pre><code>&lt;div id=\"fb-root\"&gt;&lt;/div&gt;\n&lt;script&gt;\n  var isLoaded = false;\n  window.fbAsyncInit = function() {\n    FB.init({\n      appId      : 'YOUR_APP_ID', // App ID\n      channelUrl : '//WWW.YOUR_DOMAIN.COM/channel.html', // Channel File\n      status     : true, // check login status\n      cookie     : true, // enable cookies to allow the server to access the session\n      xfbml      : true  // parse XFBML\n    });\n    isLoaded = true;\n\n    // Additional initialization code here\n  };\n\n  function checkIfLoaded() {\n    if(isLoaded) console.log(\"LOADED!\");\n    else console.log(\"NOT YET!\");\n\n    return false;\n  }\n\n  // Load the SDK Asynchronously\n  (function(d){\n     var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];\n     if (d.getElementById(id)) {return;}\n     js = d.createElement('script'); js.id = id; js.async = true;\n     js.src = \"//connect.facebook.net/en_US/all.js\";\n     ref.parentNode.insertBefore(js, ref);\n   }(document));\n&lt;/script&gt;\n&lt;a href=\"#\" onclick=\"checkIfLoaded();\"&gt;Check&lt;/a&gt;\n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/O9FfD.jpg\" alt=\"enter image description here\"><br>\n(<em>Just clicked the <code>check</code> link a couple of times</em>)</p>\n\n<hr>\n\n<p>Please note that you can still construct the Login Link server-side and <strong>WITHOUT</strong> JavaScript. Example using the <a href=\"http://github.com/facebook/php-sdk\">PHP-SDK</a>:  </p>\n\n<pre><code>$loginUrl = $facebook-&gt;getLoginUrl();\n...\n...\n&lt;a href=\"&lt;?php echo $loginUrl; ?&gt;\"&gt;\n    &lt;img src=\"http://static.ak.fbcdn.net/rsrc.php/zB6N8/hash/4li2k73z.gif\"&gt;\n&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>Just look for FB object after loading FB JS SDK sync/async as given:</p>\n\n<pre><code>            if (typeof FB !== 'undefined') {\n                alert(\"FB JS API is available now\");\n            } else {alert(\"do something...\")}\n</code></pre>\n\n<p>That's a enough check to call any Facebook JS API related method safely.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Trigger an event when the SDK is loaded:</p>\n\n<pre><code>window.fbAsyncInit = function() {\n  FB.init({appId: \"#{KeyManager.facebook_app_id}\", status: true, cookie: true, xfbml: true});\n  jQuery('#fb-root').trigger('facebook:init');\n};\n</code></pre>\n\n<p>A catch it like this:</p>\n\n<pre><code>$(\"#fb-root\").bind(\"facebook:init\", function() {\n  ..\n} \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>var FB;\njQuery.fbInit = function(app_id) {\n    window.fbAsyncInit = function() {\n        FB.init({\n            appId      : app_id, \n            status     : true, \n            channelUrl: '#', \n            cookie     : true, \n            xfbml      : true  \n        });\n        FB = FB;\n        getLoginStatus();\n    };\n    // Load the SDK Asynchronously\n    (function(d){\n        var js, id = 'facebook-jssdk'; if (d.getElementById(id)) {return;}\n        js = d.createElement('script'); js.id = id; js.async = true;\n        js.src = \"//connect.facebook.net/it_IT/all.js\";\n        d.getElementsByTagName('head')[0].appendChild(js);\n    }(document));\n\n    $('&lt;div /&gt;').attr('id','fb-root').appendTo('body');\n};\n\n/**\n * https://developers.facebook.com/docs/reference/javascript/FB.getLoginStatus/\n */\nfunction getLoginStatus() {\n    FB.getLoginStatus(function(response) {\n        if (response.status === 'connected') {\n            $('#fb-root').trigger('facebook:init',[response]);\n        } else if (response.status === 'not_authorized') {\n            $('#fb-root').trigger('facebook:init',[response]);\n        } else {\n            $('#fb-root').trigger('facebook:init',[response]);\n        }\n    });\n}\n</code></pre>\n\n<p>If you want check the status from another javascript (with the suggestion of @Leo Romanovsky )</p>\n\n<pre><code> $(\"#fb-root\").on(\"facebook:init\", function(event, response) {\n        if(response.status === 'connected') {\n            alert(\"logged with FB\")\n        }else{\n            alert(\"No Logged with FB\")\n        }\n\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>According to this page <a href=\"http://www.techsirius.com/2014/04/detect-social-SDK-didnt-load.html\" rel=\"nofollow\">http://www.techsirius.com/2014/04/detect-social-SDK-didnt-load.html</a></p>\n\n<pre><code>$(window).load(function(){\n   if(typeof window.FB == 'undefined'){\n       alert('Facebook SDK is unable to load, display some alternative content for visitor');\n   }\n   else{\n      alert('Facebook is working just fine');\n   }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I use Facebook as the membership system of my website. It uses the  code to generate a login control, allowing users to login via their facebook account. It's essentially one click if they're already a member, 2 if they're not (for granting permissions).</p>\n\n<p>I got a problem though... feedback is suggesting the login button isn't always loading correctly. Instead of loading the facebook login control, it simply states (in text) \"login via facebook\" - which is what the login button would say if the control loaded successfully.</p>\n\n<p>Testing shows that is what happens when the facebook javascript SDK fails to load completely (for whatever reason). I've seen instances where a # in the url prevents the SDK from loading.</p>\n\n<p>To better support this issue, how would I go about detecting if the facebook javascript SDK loaded, and is ready? That way, if it fails, I can leave some sort of note for the user.</p>\n\n<p>Here's how it's currently added to the page:</p>\n\n<pre><code>&lt;script&gt;\nwindow.fbAsyncInit = function () {\nFB.init({\n  appId: '***************',\n  status: true,\n  cookie: true,\n  xfbml: true\n});\nFB.Event.subscribe('auth.login', function (response) {\n  window.location.reload();\n});\n\n};\n(function () {\n  var e = document.createElement('script'); e.async = true;\n  e.src = document.location.protocol + '//connect.facebook.net/en_US/all.js';\n  document.getElementById('fb-root').appendChild(e);\n} ());\n\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1397798668,
            "question_id": 5334977,
            "score": 12,
            "tags": [
                "javascript",
                "facebook",
                "sdk"
            ],
            "title": "Is there a way to detect if the Facebook Javascript SDK loaded successfully?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>What exactly are you looking for in your atmosphere? It could be as simple as rendering another slightly larger transparent sphere over the top of your globe, or it could be very <em>very</em> complex, actually refracting light that enters it. (Almost like subsurface scattering used in skin rendering).</p>\n\n<p>I've never tried such an effect myself, but some quick Googling shows some promising results. For example, I think <a href=\"http://petrocket.blogspot.com/2010/01/simple-flexibile-atmosphere-shaders.html\">this effect</a> looks fairly nice, and the author even followed it up with a more <a href=\"http://petrocket.blogspot.com/2010/04/atmosphere-shader-update-and-treegrass.html\">detailed variant</a> later on. If you're interested in a more technical breakdown <a href=\"http://www.cescg.org/CESCG-2005/papers/Brno-Josth-Radovan/index.html\">this technique</a> details a lot of the theoretical background. I'm sure there's more, you've just got to poke around a bit. (Truth be told I wasn't aware this was such a popular rendering topic!)</p>\n\n<p>If you're having trouble with some aspect of those techniques specifically as applies to Three.js don't hesitate to ask!</p>\n\n<p>[UPDATE]</p>\n\n<p>Ah, sorry. Yeah, that's a bit much to throw you into without prior shader knowledge. </p>\n\n<p>The code on the second link is actually a DirectX FX file, the core code being HLSL, so it's not something that would simply plug into WebGL but the two shader formats are similar enough that it's typically not an issue to translate between them. If you actually know shaders, that is. I would recommend reading up on how shaders work before trying to dive into a complicated effect like this. </p>\n\n<p>I'd start with something simple like <a href=\"http://aerotwist.com/tutorials/an-introduction-to-shaders-part-1/\">this tutorial</a>, which simply talks about how to get a basic shader running with Three.js. Once you know how to get a shader working with Three.js and GLSL tutorials (like <a href=\"http://www.lighthouse3d.com/opengl/glsl/\">this one</a>) will give you the basics of how a shader works and what you can do with it.</p>\n\n<p>I know that seems like a lot of work up front, but if you want to do advanced visual effects  in WebGL (and this certainly fits the bill of advanced effects) you absolutely <em>must</em> understand shaders!</p>\n\n<p>Then again, if you're looking for a quick fix there's always that transparent sphere option I was talking about. :)</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>Following @Toji answers and then taking another step on googling around, these seems like a fair, out-of-the-box solution for non-GLSL programmers:</p>\n\n<p><a href=\"https://code.google.com/p/webgl-globe/\" rel=\"nofollow\">https://code.google.com/p/webgl-globe/</a>\n<a href=\"http://data-arts.appspot.com/globe/\" rel=\"nofollow\">http://data-arts.appspot.com/globe/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've implemented the solution that kyeno referred to above, see the links and discussion at the more recently asked question</p>\n\n<p><a href=\"http://stackoverflow.com/questions/16269815/three-js-outer-glow-for-sphere-object/\">three.js outer glow for sphere object?</a></p>\n\n<p>and for your viewing enjoyment, here is a realistic Earth with atmosphere, cloud layer, and also terrain effects using a Phong material.</p>\n\n<p><a href=\"http://stemkoski.github.io/Three.js/Earth.html\" rel=\"nofollow\">http://stemkoski.github.io/Three.js/Earth.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Well an old and already answered question but I wanted to add my solution for beginer consideration out there. Have plaing along Atmospheric scattering and GLSL for a long time and come to this VEEERRRYYY Simplified version:</p>\n\n<ol>\n<li>planet is and ellipsoid (center x,y,z and radiuses rx,ry,rz)</li>\n<li>atmosphere is also ellipsod (the same but bigger by atmosphere height)</li>\n<li>all render is done normally but on top of that is added 1 pass for near observer planet</li>\n<li>that pass is single quad covering whole screen</li>\n<li>inside fragment it computes the intersection of pixel ray with these 2 ellipsoids</li>\n<li>take the visible part (not behind, not after ground) </li>\n<li>compute the ray length inside atmosphere</li>\n<li>distort original color as function of r,g,b scaled params by ray length (something like integrating along the path)\n<ul>\n<li>some color is taken some given ... </li>\n<li>greatly affects color so its possible to simulate different atmospheres by just few attributes</li>\n</ul></li>\n<li>it work well inside and also outside the atmosphere (from distance)</li>\n<li>can add close stars as light source (i use max 3 star system)</li>\n</ol>\n\n<p>the result is stunning see images below:</p>\n\n<p><img src=\"http://i.stack.imgur.com/1TF30.jpg\" alt=\"enter image description here\">\n<img src=\"http://i.stack.imgur.com/yYDQN.jpg\" alt=\"enter image description here\">\n<img src=\"http://i.stack.imgur.com/pp9zr.jpg\" alt=\"enter image description here\">\n<img src=\"http://i.stack.imgur.com/dgToS.jpg\" alt=\"enter image description here\">\n<img src=\"http://i.stack.imgur.com/7Ny0k.jpg\" alt=\"enter image description here\"></p>\n\n<p>Vertex:</p>\n\n<pre><code>/* SSH GLSL Atmospheric Ray light scattering ver 3.0\n\n    glEnable(GL_BLEND);\n    glBlendFunc(GL_ONE,GL_ONE);\n    use with single quad covering whole screen\n\n    no Modelview/Projection/Texture matrixes used\n\n    gl_Normal   is camera direction in ellipsoid space\n    gl_Vertex   is pixel in ellipsoid space\n    gl_Color    is pixel pos in screen space &lt;-1,+1&gt;\n\n    const int _lights=3;\n    uniform vec3 light_dir[_lights];     // direction to local star in ellipsoid space\n    uniform vec3 light_col[_lights];     // local star color * visual intensity\n    uniform vec4 light_posr[_lights];    // local star position and radius^-2 in ellipsoid space\n    uniform vec4 B0;                     // atmosphere scattering coefficient (affects color) (r,g,b,-)\n\n    [ToDo:]\n    add light map texture for light source instead of uniform star colide parameters\n    - all stars and distant planets as dots\n    - near planets ??? maybe too slow for reading pixels\n    aspect ratio correction\n*/\n\nvarying vec3 pixel_nor;       // camera direction in ellipsoid space\nvarying vec4 pixel_pos;       // pixel in ellipsoid space\n\nvoid main(void)\n    {\n    pixel_nor=gl_Normal;\n    pixel_pos=gl_Vertex;\n    gl_Position=gl_Color;\n    }\n</code></pre>\n\n<p>Fragment:</p>\n\n<pre><code>varying vec3 pixel_nor;              // camera direction in ellipsoid space\nvarying vec4 pixel_pos;              // pixel in ellipsoid space\n\nuniform vec3 planet_r;               // rx^-2,ry^-2,rz^-2 - surface\nuniform vec3 planet_R;               // Rx^-2,Ry^-2,Rz^-2 - atmosphere\nuniform float planet_h;              // atmoshere height [m]\nuniform float view_depth;            // max. optical path length [m] ... saturation\n\n// lights are only for local stars-atmosphere ray colision to set start color to star color\nconst int _lights=3;\nuniform vec3 light_dir[_lights];     // direction to local star in ellipsoid space\nuniform vec3 light_col[_lights];     // local star color * visual intensity\nuniform vec4 light_posr[_lights];    // local star position and radius^-2 in ellipsoid space\nuniform vec4 B0;                     // atmosphere scattering coefficient (affects color) (r,g,b,-)\n\n// compute length of ray(p0,dp) to intersection with ellipsoid((0,0,0),r) -&gt; view_depth_l0,1\n// where r.x is elipsoid rx^-2, r.y = ry^-2 and r.z=rz^-2\nfloat view_depth_l0=-1.0,view_depth_l1=-1.0;\nbool _view_depth(vec3 p0,vec3 dp,vec3 r)\n    {\n    float a,b,c,d,l0,l1;\n    view_depth_l0=-1.0;\n    view_depth_l1=-1.0;\n    a=(dp.x*dp.x*r.x)\n     +(dp.y*dp.y*r.y)\n     +(dp.z*dp.z*r.z); a*=2.0;\n    b=(p0.x*dp.x*r.x)\n     +(p0.y*dp.y*r.y)\n     +(p0.z*dp.z*r.z); b*=2.0;\n    c=(p0.x*p0.x*r.x)\n     +(p0.y*p0.y*r.y)\n     +(p0.z*p0.z*r.z)-1.0;\n    d=((b*b)-(2.0*a*c));\n    if (d&lt;0.0) return false;\n    d=sqrt(d);\n    l0=(-b+d)/a;\n    l1=(-b-d)/a;\n    if (abs(l0)&gt;abs(l1)) { a=l0; l0=l1; l1=a; }\n    if (l0&lt;0.0)          { a=l0; l0=l1; l1=a; }\n    if (l0&lt;0.0) return false;\n    view_depth_l0=l0;\n    view_depth_l1=l1;\n    return true;\n    }\n// determine if ray (p0,dp) hits a sphere ((0,0,0),r)\n// where r is (sphere radius)^-2\nbool _star_colide(vec3 p0,vec3 dp,float r)\n    {\n    float a,b,c,d,l0,l1;\n    a=(dp.x*dp.x*r)\n     +(dp.y*dp.y*r)\n     +(dp.z*dp.z*r); a*=2.0;\n    b=(p0.x*dp.x*r)\n     +(p0.y*dp.y*r)\n     +(p0.z*dp.z*r); b*=2.0;\n    c=(p0.x*p0.x*r)\n     +(p0.y*p0.y*r)\n     +(p0.z*p0.z*r)-1.0;\n    d=((b*b)-(2.0*a*c));\n    if (d&lt;0.0) return false;\n    d=sqrt(d);\n    l0=(-b+d)/a;\n    l1=(-b-d)/a;\n    if (abs(l0)&gt;abs(l1)) { a=l0; l0=l1; l1=a; }\n    if (l0&lt;0.0)          { a=l0; l0=l1; l1=a; }\n    if (l0&lt;0.0) return false;\n    return true;\n    }\n\n// compute atmosphere color between ellipsoids (planet_pos,planet_r) and (planet_pos,planet_R) for ray(pixel_pos,pixel_nor)\nvec3 atmosphere()\n    {\n    const int n=8;\n    const float _n=1.0/float(n);\n    int i;\n    bool b0,b1;\n    vec3 p0,p1,dp,p,c,b;\n    // c - color of pixel from start to end\n\n    float l0,l1,l2,h,dl;\n    c=vec3(0.0,0.0,0.0);\n    b0=_view_depth(pixel_pos.xyz,pixel_nor,planet_r);\n    if ((b0)&amp;&amp;(view_depth_l0&gt;0.0)&amp;&amp;(view_depth_l1&lt;0.0)) return c;\n    l0=view_depth_l0;\n    b1=_view_depth(pixel_pos.xyz,pixel_nor,planet_R);\n    l1=view_depth_l0;\n    l2=view_depth_l1;\n\n    dp=pixel_nor;\n    p0=pixel_pos.xyz;\n\n    if (!b0)\n        {                                       // outside surface\n        if (!b1) return c;                      // completly outside planet\n        if (l2&lt;=0.0)                            // inside atmosphere to its boundary\n            {\n            l0=l1;\n            }\n        else{                                   // throu atmosphere from boundary to boundary\n            p0=p0+(l1*dp);\n            l0=l2-l1;\n            }\n        // if a light source is in visible path then start color is light source color\n        for (i=0;i&lt;_lights;i++)\n        if (light_posr[i].a&lt;=1.0)\n        if (_star_colide(p0-light_posr[i].xyz,dp,light_posr[i].a))\n        c+=light_col[i];\n        }\n    else{                                       // into surface\n        if (l0&lt;l1) b1=false;                    // atmosphere is behind surface\n        if (!b1)                                // inside atmosphere to surface\n            {\n            l0=l0;\n            }\n        else{                                   // from atmosphere boundary to surface\n            p0=p0+(l1*dp);\n            l0=l0-l1;\n            }\n        }\n    dp*=l0;\n    p1=p0+dp;\n    dp*=_n;\n/*\n    p=normalize(p1);\n    h=0.0; l2=0.0;\n    for (i=0;i&lt;_lights;i++)\n     if (light_posr[i].a&lt;=1.0)\n        {\n        dl=dot(pixel_nor,light_dir[i]);         // cos(ang: light-eye)\n        if (dl&lt;0.0) dl=0.0;\n        h+=dl;\n        dl=dot(p,light_dir[i]);                 // normal shading\n        if (dl&lt;0.0) dl=0.0;\n        l2+=dl;\n        }\n    if (h&gt;1.0) h=1.0;\n    if (l2&gt;1.0) l2=1.0;\n    h=0.5*(2.0+(h*h));\n*/\n    float qqq=dot(normalize(p1),light_dir[0]);\n\n\n    dl=l0*_n/view_depth;\n    for (p=p1,i=0;i&lt;n;p-=dp,i++)                // p1-&gt;p0 path throu atmosphere from ground\n        {\n        _view_depth(p,normalize(p),planet_R);   // view_depth_l0=depth above atmosphere top [m]\n        h=exp(view_depth_l0/planet_h)/2.78;\n\n        b=B0.rgb*h*dl;\n        c.r*=1.0-b.r;\n        c.g*=1.0-b.g;\n        c.b*=1.0-b.b;\n        c+=b*qqq;\n        }\n    if (c.r&lt;0.0) c.r=0.0;\n    if (c.g&lt;0.0) c.g=0.0;\n    if (c.b&lt;0.0) c.b=0.0;\n    h=0.0;\n    if (h&lt;c.r) h=c.r;\n    if (h&lt;c.g) h=c.g;\n    if (h&lt;c.b) h=c.b;\n    if (h&gt;1.0)\n        {\n        h=1.0/h;\n        c.r*=h;\n        c.g*=h;\n        c.b*=h;\n        }\n    return c;\n    }\n\nvoid main(void)\n    {\n    gl_FragColor.rgb=atmosphere();\n    }\n</code></pre>\n\n<p>Sorry but its a really old source of my ... should be probably converted to core profile</p>\n\n<p><strong>[Edit 1]</strong> sorry forget to add my input scattering constants for Earth atmosphere</p>\n\n<pre><code>    double view_depth=1000000.0;    // [m] ... longer path is saturated atmosphere color\n    double ha=40000.0;              // [m] ... usable atmosphere height (higher is too low pressure)\n\n//  this is how B0 should be computed (for real atmospheric scattering with nested volume integration)\n//  const float lambdar=650.0*0.000000001; // wavelengths for R,G,B rays\n//  const float lambdag=525.0*0.000000001;\n//  const float lambdab=450.0*0.000000001;\n//  double r=1.0/(lambdar*lambdar*lambdar*lambdar); // B0 coefficients\n//  double g=1.0/(lambdag*lambdag*lambdag*lambdag);\n//  double b=1.0/(lambdab*lambdab*lambdab*lambdab);\n\n//  and these are my empirical coefficients for earth like \n//  blue atmosphere with my simplified integration style\n//  images above are rendered with this:\n    float r=0.198141888310295;\n    float g=0.465578010163675;\n    float b=0.862540960504986;\n    float B0=2.50000E-25;\n    i=glGetUniformLocation(ShaderProgram,\"planet_h\");   glUniform1f(i,ha);\n    i=glGetUniformLocation(ShaderProgram,\"view_depth\"); glUniform1f(i,view_depth);\n    i=glGetUniformLocation(ShaderProgram,\"B0\");     glUniform4f(i,r,g,b,B0);\n//  all other atributes are based on position and size of planet and are \n//  pretty straightforward so here is just the earth size i use ...\n    double r_equator=6378141.2; // [m]\n    double r_poles=6356754.8;   // [m]\n</code></pre>\n\n<p><strong>[edit2] 3.9.2014 new source code</strong></p>\n\n<p>I had some time recently to implement zoom to mine engine</p>\n\n<ul>\n<li>and figured out that original source code is not very precise from distance above 0.002 AU</li>\n<li>without Zoom is it just few pixels so nothing is seen</li>\n<li>but with zoom all changes so I tried to improve accuracy as much as I could</li>\n<li>here <a href=\"http://stackoverflow.com/q/25470493/2521214\">ray and ellipsoid intersection accuracy improvement</a> is the related question</li>\n<li>after some more tweaks I get it to be usable up to 25.0 AU</li>\n<li>and with interpolation artifacts up to 50.0-100.0 AU</li>\n<li>that is limit for current HW</li>\n<li>(can not pass non flat fp64 to interpolators from vertex to fragment)</li>\n<li>one way around could be to move the coordinate system transform to fragment but havent tried it yet</li>\n<li>new source uses 64 bit floats</li>\n<li>and add int lights uniform which is the count of used lights</li>\n<li>also some changes in B0 meaning (they are no longer wavelength dependent constant but color instead)</li>\n<li>(need to change uniform value fill in CPU code slightly)</li>\n<li>and also some performance improvements was added</li>\n</ul>\n\n<p>[vertex]</p>\n\n<pre><code>/* SSH GLSL Atmospheric Ray light scattering ver 3.1\n\n    glEnable(GL_BLEND);\n    glBlendFunc(GL_ONE,GL_ONE_MINUS_SRC_ALPHA);\n    use with single quad covering whole screen\n\n    no Modelview/Projection/Texture matrixes used\n\n    gl_Normal   is camera direction in ellipsoid space\n    gl_Vertex   is pixel in ellipsoid space\n    gl_Color    is pixel pos in screen space &lt;-1,+1&gt;\n\n    const int _lights=3;\n    uniform int  lights;                 // actual number of lights\n    uniform vec3 light_dir[_lights];     // direction to local star in ellipsoid space\n    uniform vec3 light_col[_lights];     // local star color * visual intensity\n    uniform vec4 light_posr[_lights];    // local star position and radius^-2 in ellipsoid space\n    uniform vec4 B0;                     // atmosphere scattering coefficient (affects color) (r,g,b,-)\n\n    [ToDo:]\n    add light map texture for light source instead of uniform star colide parameters\n    - all stars and distant planets as dots\n    - near planets ??? maybe too slow for reading pixels\n    aspect ratio correction\n*/\n\nvarying vec3 pixel_nor;       // camera direction in ellipsoid space\nvarying vec4 pixel_pos;       // pixel in ellipsoid space\nvarying vec4 pixel_scr;       // pixel in screen space &lt;-1,+1&gt;\n\nvarying vec3 p_r;               // rx,ry,rz\nuniform vec3 planet_r;          // rx^-2,ry^-2,rz^-2 - surface\n\nvoid main(void)\n    {\n    p_r.x=1.0/sqrt(planet_r.x);\n    p_r.y=1.0/sqrt(planet_r.y);\n    p_r.z=1.0/sqrt(planet_r.z);\n    pixel_nor=gl_Normal;\n    pixel_pos=gl_Vertex;\n    pixel_scr=gl_Color;\n    gl_Position=gl_Color;\n    }\n</code></pre>\n\n<p>[fragment]</p>\n\n<pre><code>#extension GL_ARB_gpu_shader_fp64 : enable\ndouble abs(double x) { if (x&lt;0.0) x=-x; return x; }\n\nvarying vec3 pixel_nor;              // camera direction in ellipsoid space\nvarying vec4 pixel_pos;              // pixel in ellipsoid space\nvarying vec4 pixel_scr;              // pixel in screen space\nvarying vec3 p_r;                    // rx,ry,rz                        \n\nuniform vec3 planet_r;               // rx^-2,ry^-2,rz^-2 - surface\nuniform vec3 planet_R;               // Rx^-2,Ry^-2,Rz^-2 - atmosphere\nuniform float planet_h;              // atmoshere height [m]\nuniform float view_depth;            // max. optical path length [m] ... saturation\n\n// lights are only for local stars-atmosphere ray colision to set start color to star color\nconst int _lights=3;\nuniform int  lights;                 // actual number of lights\nuniform vec3 light_dir[_lights];     // direction to local star in ellipsoid space\nuniform vec3 light_col[_lights];     // local star color * visual intensity\nuniform vec4 light_posr[_lights];    // local star position and radius^-2 in ellipsoid space\nuniform vec4 B0;                     // atmosphere scattering color coefficients (r,g,b,ambient)\n\n// compute length of ray(p0,dp) to intersection with ellipsoid((0,0,0),r) -&gt; view_depth_l0,1\n// where r.x is elipsoid rx^-2, r.y = ry^-2 and r.z=rz^-2\nconst double view_depth_max=100000000.0; // &gt; max view depth\ndouble view_depth_l0=-1.0, // view_depth_l0 first hit\n       view_depth_l1=-1.0; // view_depth_l1 second hit\nbool  _view_depth_l0=false;\nbool  _view_depth_l1=false;\nbool _view_depth(vec3 _p0,vec3 _dp,vec3 _r)\n    {\n    dvec3 p0,dp,r;\n    double a,b,c,d,l0,l1;\n    view_depth_l0=-1.0; _view_depth_l0=false;\n    view_depth_l1=-1.0; _view_depth_l1=false;\n    // conversion to double\n    p0=dvec3(_p0);\n    dp=dvec3(_dp);\n    r =dvec3(_r );\n    // quadratic equation a.l.l+b.l+c=0; l0,l1=?;\n    a=(dp.x*dp.x*r.x)\n     +(dp.y*dp.y*r.y)\n     +(dp.z*dp.z*r.z);\n    b=(p0.x*dp.x*r.x)\n     +(p0.y*dp.y*r.y)\n     +(p0.z*dp.z*r.z); b*=2.0;\n    c=(p0.x*p0.x*r.x)\n     +(p0.y*p0.y*r.y)\n     +(p0.z*p0.z*r.z)-1.0;\n    // discriminant d=sqrt(b.b-4.a.c)\n    d=((b*b)-(4.0*a*c));\n    if (d&lt;0.0) return false;\n    d=sqrt(d);\n    // standard solution l0,l1=(-b +/- d)/2.a\n    a*=2.0;\n    l0=(-b+d)/a;\n    l1=(-b-d)/a;\n    // alternative solution q=-0.5*(b+sign(b).d) l0=q/a; l1=c/q; (should be more accurate sometimes)\n//  if (b&lt;0.0) d=-d; d=-0.5*(b+d);\n//  l0=d/a;\n//  l1=c/d;\n    // sort l0,l1 asc\n    if ((l0&lt;0.0)||((l1&lt;l0)&amp;&amp;(l1&gt;=0.0))) { a=l0; l0=l1; l1=a; }\n    // exit\n    if (l1&gt;=0.0) { view_depth_l1=l1; _view_depth_l1=true; }\n    if (l0&gt;=0.0) { view_depth_l0=l0; _view_depth_l0=true; return true; }\n    return false;\n    }\n\n// determine if ray (p0,dp) hits a sphere ((0,0,0),r)\n// where r is (sphere radius)^-2\nbool _star_colide(vec3 _p0,vec3 _dp,float _r)\n    {\n    dvec3 p0,dp,r;\n    double a,b,c,d,l0,l1;\n    // conversion to double\n    p0=dvec3(_p0);\n    dp=dvec3(_dp);\n    r =dvec3(_r );\n    // quadratic equation a.l.l+b.l+c=0; l0,l1=?;\n    a=(dp.x*dp.x*r)\n     +(dp.y*dp.y*r)\n     +(dp.z*dp.z*r);\n    b=(p0.x*dp.x*r)\n     +(p0.y*dp.y*r)\n     +(p0.z*dp.z*r); b*=2.0;\n    c=(p0.x*p0.x*r)\n     +(p0.y*p0.y*r)\n     +(p0.z*p0.z*r)-1.0;\n    // discriminant d=sqrt(b.b-4.a.c)\n    d=((b*b)-(4.0*a*c));\n    if (d&lt;0.0) return false;\n    d=sqrt(d);\n    // standard solution l0,l1=(-b +/- d)/2.a\n    a*=2.0;\n    l0=(-b+d)/a;\n    l1=(-b-d)/a;\n    // alternative solution q=-0.5*(b+sign(b).d) l0=q/a; l1=c/q; (should be more accurate sometimes)\n//  if (b&lt;0.0) d=-d; d=-0.5*(b+d);\n//  l0=d/a;\n//  l1=c/d;\n    // sort l0,l1 asc\n    if (abs(l0)&gt;abs(l1)) { a=l0; l0=l1; l1=a; }\n    if (l0&lt;0.0)          { a=l0; l0=l1; l1=a; }\n    if (l0&lt;0.0) return false;\n    return true;\n    }\n\n// compute atmosphere color between ellipsoids (planet_pos,planet_r) and (planet_pos,planet_R) for ray(pixel_pos,pixel_nor)\nvec4 atmosphere()\n    {\n    const int n=8;\n    const float _n=1.0/float(n);\n    int i;\n    bool b0,b1;\n    vec3 p0,p1,dp,p,b;\n    vec4 c;     // c - color of pixel from start to end\n\n    float h,dl,ll;\n    double l0,l1,l2;\n    bool   e0,e1,e2;\n    c=vec4(0.0,0.0,0.0,0.0);    // a=0.0 full background color, a=1.0 no background color (ignore star)\n    b1=_view_depth(pixel_pos.xyz,pixel_nor,planet_R);\n    if (!b1) return c;                          // completly outside atmosphere\n    e1=_view_depth_l0; l1=view_depth_l0;        // first atmosphere hit\n    e2=_view_depth_l1; l2=view_depth_l1;        // second atmosphere hit\n    b0=_view_depth(pixel_pos.xyz,pixel_nor,planet_r);\n    e0=_view_depth_l0; l0=view_depth_l0;        // first surface hit\n    if ((b0)&amp;&amp;(view_depth_l1&lt;0.0)) return c;    // under ground\n    // set l0 to view depth and p0 to start point\n    dp=pixel_nor;\n    p0=pixel_pos.xyz;\n    if (!b0)                                    // outside surface\n        {\n        if (!e2)                                // inside atmosphere to its boundary\n            {\n            l0=l1;\n            }\n        else{                                   // throu atmosphere from boundary to boundary\n            p0=vec3(dvec3(p0)+(dvec3(dp)*l1));\n            l0=l2-l1;\n            }\n        // if a light source is in visible path then start color is light source color\n        for (i=0;i&lt;lights;i++)\n         if (_star_colide(p0.xyz-light_posr[i].xyz,dp.xyz,light_posr[i].a*0.75)) // 0.75 is enlargment to hide star texture corona\n            {\n            c.rgb+=light_col[i];\n            c.a=1.0; // ignore already drawed local star color\n            }\n        }\n    else{                                       // into surface\n        if (l1&lt;l0)                              // from atmosphere boundary to surface\n            {\n            p0=vec3(dvec3(p0)+(dvec3(dp)*l1));\n            l0=l0-l1;\n            }\n        else{                                   // inside atmosphere to surface\n            l0=l0;\n            }\n        }\n    // set p1 to end of view depth, dp to intergral step\n    p1=vec3(dvec3(p0)+(dvec3(dp)*l0)); dp=p1-p0;\n    dp*=_n;\n\n    dl=float(l0)*_n/view_depth;\n    ll=B0.a; for (i=0;i&lt;lights;i++)             // compute normal shaded combined light sources into ll\n     ll+=dot(normalize(p1),light_dir[0]);\n    for (p=p1,i=0;i&lt;n;p-=dp,i++)                // p1-&gt;p0 path throu atmosphere from ground\n        {\n//      _view_depth(p,normalize(p),planet_R);   // too slow... view_depth_l0=depth above atmosphere top [m]\n//      h=exp(view_depth_l0/planet_h)/2.78;\n\n        b=normalize(p)*p_r;                     // much much faster\n        h=length(p-b);\n        h=exp(h/planet_h)/2.78;\n\n        b=B0.rgb*h*dl;\n        c.r*=1.0-b.r;\n        c.g*=1.0-b.g;\n        c.b*=1.0-b.b;\n        c.rgb+=b*ll;\n        }\n    if (c.r&lt;0.0) c.r=0.0;\n    if (c.g&lt;0.0) c.g=0.0;\n    if (c.b&lt;0.0) c.b=0.0;\n    h=0.0;\n    if (h&lt;c.r) h=c.r;\n    if (h&lt;c.g) h=c.g;\n    if (h&lt;c.b) h=c.b;\n    if (h&gt;1.0)\n        {\n        h=1.0/h;\n        c.r*=h;\n        c.g*=h;\n        c.b*=h;\n        }\n    return c;\n    }\n\nvoid main(void)\n    {\n    gl_FragColor.rgba=atmosphere();\n    }\n</code></pre>\n\n<p>[uniform values]</p>\n\n<pre><code>// Earth\nre=6378141.2         // equatoreal radius r.x,r.y\nrp=6356754.79506139 // polar radius r.z\nplanet_h=60000      // atmosphere thickness R(r.x+planet_h,r.y+planet_h,r.z+planet_h)\nview_depth=250000   // max view distance before 100% scattering occur \nB0.r=0.1981         // 100% scattered atmosphere color\nB0.g=0.4656\nB0.b=0.8625\nB0.a=0.75           // overglow (sky is lighter before Sun actually rise) it is added to light dot product\n\n// Mars\nre=3397000\nrp=3374919.5\nha=30000\nview_depth=300000\nB0.r=0.4314\nB0.g=0.3216\nB0.b=0.196\nB0.a=0.5\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>For the past few days, I've been trying to get Three.js texturing to work. The problem I've been having is that my browser was blocking textures from loading, which was solved by following the instructions <a href=\"https://github.com/mrdoob/three.js/wiki/How-to-run-things-locally\">here</a>.</p>\n\n<p>Anyways, I'm making a space-navigator game for one of my classes that demonstrates navigating spacecraft through space. So, I'm rendering a bunch of planets, the Earth being one of them. I've included a picture of my Earth rendering below. It looks okay, but what I'm trying to do is make it look more realistic by adding an 'atmosphere' around the planet.</p>\n\n<p>I've looked around, and I've found some really <a href=\"http://bkcore.com/blog/3d/webgl-three-js-animated-selective-glow.html\">neat looking creations</a> that deal with glow, but I don't think they apply to my situation, unfortunately.</p>\n\n<p>And here's the code that adds the earth to my scene (it's a modified version of code I got from a Three.js tutorial):</p>\n\n<pre><code>    function addEarth(x,y){\n\n        var sphereMaterial =\n        new THREE.MeshLambertMaterial({\n            //color: 0x0000ff,\n            map: earthTexture\n        });\n\n        // set up the sphere vars\n        var radius = 75;\n        segments = 16;\n        rings = 16;\n\n        // create a new mesh with\n        // sphere geometry - we will cover\n        // the sphereMaterial next!\n        earth = new THREE.Mesh(\n\n        new THREE.SphereGeometry(\n        radius,\n        segments,\n        rings),\n\n        sphereMaterial);\n\n        earth.position.x = x;\n        earth.position.y = y;\n\n        // add the sphere to the scene\n        scene.add(earth);\n    }\n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/nQGC4.png\" alt=\"enter image description here\"></p>\n",
            "last_activity_date": 1409738706,
            "question_id": 10213361,
            "score": 11,
            "tags": [
                "javascript",
                "html5",
                "webgl",
                "three.js"
            ],
            "title": "How can I render an &#39;atmosphere&#39; over a rendering of the Earth in Three.js?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Look at <a href=\"http://www.ok-soft-gmbh.com/jqGrid/CheckboxesWithVerticalHeaders1.htm\">the old example</a> from <a href=\"http://stackoverflow.com/questions/3974324/jqgrid-using-multiple-methods-to-filter-data/3979490#3979490\">the answer</a>. The example is mostly about another subject, but in the navigator bar you can see the \"column chooser\" button. Clicking on the button display column chooser dialog. You can drag any column name from the dialog and drop it on another location to change the column order. You can click on \"-\" to hide the column and drag any column from the list of hidden columns and drop it on in the list of visible columns.</p>\n\n<p>To reproduce the behavior you should first be sure that during jqGrid downloading you have \"jQuiery UI addons\" (<code>grid.jqueryui.js</code>) selected. Then you should follows the steps:</p>\n\n<ol>\n<li>include <code>ui.multiselect.css</code> from the plugins subdirectory of jqGrid 4.0 source.</li>\n<li>include jQuery UI <code>jquery-ui.min.js</code> (not only <code>jquery-ui.css</code> needed typically for jqGrid)</li>\n<li>include <code>ui.multiselect.js</code> after the <code>jquery-ui.min.js</code></li>\n<li>add new button which call the column chooser</li>\n</ol>\n\n<p>The code can be like the following</p>\n\n<pre><code>var grid = $('#list');\ngrid.jqGrid ('navButtonAdd', '#pager',\n             { caption: \"\", buttonicon: \"ui-icon-calculator\",\n               title: \"Choose Columns\",\n               onClickButton: function() {\n                    grid.jqGrid('columnChooser');\n               }\n             });\n</code></pre>\n\n<p><strong>UPDATED:</strong> <a href=\"http://stackoverflow.com/a/9688942/315935\">The answer</a> contains description of some additional customization of <code>columnChooser</code> based on <a href=\"http://www.trirand.com/blog/?page_id=393/bugs/making-columnchooser-really-resizable/#p25823\">my suggestion</a>.</p>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p>At <a href=\"http://www.trirand.com/jqgridwiki/doku.php?id=wiki:jquery_ui_methods\">http://www.trirand.com/jqgridwiki/doku.php?id=wiki:jquery_ui_methods</a> there are instructions for building a jqGrid column chooser ('dlog_opts is either an option object to be passed to \u201cdlog\u201d, or (more likely) a function that creates the options object. The default produces a suitable options object for ui.dialog'), but not complete working code; no example is provided of the function that is required.</p>\n\n<p>Is there a complete working example for building a jqGrid column chooser that will allow hiding, showing, and moving columns?</p>\n",
            "last_activity_date": 1331659621,
            "question_id": 5901210,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui",
                "jquery-plugins",
                "jqgrid"
            ],
            "title": "Is there a full working example for a jqGrid ColumnChooser?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This is expected behavior. You are not using <code>methods</code> as they are intended. </p>\n\n<p>Your code defines a server method <code>viewTest</code> and a corresponding method stub on the client with the same name. </p>\n\n<p><code>Meteor.call('viewTest', 'Hello World.');</code> remotely calls <code>viewTest</code> on the server and in parallel runs the stub on the client. </p>\n\n<p>Regarding the return value of the stub please see the documentation <a href=\"http://docs.meteor.com/#meteor_methods\" rel=\"nofollow\">here</a>, in particular: </p>\n\n<blockquote>\n  <p>On the client, the return value of a stub is ignored. Stubs are run\n  for their side-effects: they are intended to simulate the result of\n  what the server's method will do, but without waiting for the round\n  trip delay.</p>\n</blockquote>\n\n<p>Regarding the return value of the server method please see the documentation <a href=\"http://docs.meteor.com/#meteor_call\" rel=\"nofollow\">here</a>, in particular:</p>\n\n<blockquote>\n  <p>On the client, if you do not pass a callback and you are not inside a\n  stub, call will return undefined, and you will have no way to get the\n  return value of the method. That is because the client doesn't have\n  fibers, so there is not actually any way it can block on the remote\n  execution of a method.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You need to interface your return value with a Session variable as the request is asynchronous:</p>\n\n<pre><code>Template.helloWorld.helpers({\n    txt : function () {\n        return Session.get(\"txt\") || \"Loading\";\n    }\n});\n\nTemplate.helloWorld.created = function() {\n    Meteor.call('viewTest', 'Hello World.', function(err, result) {\n        Session.set(\"txt\", result);\n    });\n\n}\n</code></pre>\n\n<p>So .rendered should be called once when your template loads (at least it should with the newer version of Meteor.) </p>\n\n<p>The value would be called and displayed. Otherwise it would say \"Loading\".</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Methods on the client side are asynchronous, and their return value is always undefined. To get the actual value returned by the method, you need to provide a callback:</p>\n\n<pre><code>Meteor.call('method', 'argument', function(error, result) {\n    ....\n});\n</code></pre>\n\n<p>Now, there's no easy way to use the result in your helper. However, you can store it in your template as a data object and then return it in the helper:</p>\n\n<pre><code>Template.template.created = function() {\n    var self = this;\n    self.data.elephantDep = new Deps.Dependency();\n    self.data.elephant = '';\n    Meteor.call('getElephant', 'greenOne', function(error, result) {\n        self.data.elephant = result;\n        self.data.elephantDep.changed();\n    });\n};\n\nTemplate.template.showElephant = function() {\n    this.elephantDep.depend();\n    return this.elephant;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>There is now a new way to do this (Meteor 0.9.3.1) which doesn't pollute the Session namespace</p>\n\n<pre><code>Template.helloWorld.helpers({\n    txt: function () {\n        return Template.instance().myAsyncValue.get();\n    }\n});\n\nTemplate.helloWorld.created = function (){\n    var self = this;\n    self.myAsyncValue = new ReactiveVar(\"Waiting for response from server...\");\n    Meteor.call('getAsyncValue', function (err, asyncValue) {\n        if (err)\n            console.log(err);\n        else \n            self.myAsyncValue.set(asyncValue);\n    });\n}\n</code></pre>\n\n<p>In the 'created' callback, you create a new instance of a ReactiveVariable (see <a href=\"http://docs.meteor.com/#reactivevar\" rel=\"nofollow\">docs</a>) and attach it to the template instance.</p>\n\n<p>You then call your method and when the callback fires, you attach the returned value to the reactive variable.</p>\n\n<p>You can then set up your helper to return the value of the reactive variable (which is attached to the template instance now), and it will rerun when the method returns.</p>\n\n<p>But note you'll have to add the reactive-var package for it to work</p>\n\n<pre><code>$ meteor add reactive-var\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>How can I define a Meteor method which is also callable in a template helper?</p>\n\n<p>I have these two files:</p>\n\n<p>file: lib/test.js</p>\n\n<pre><code>Meteor.methods({\n    viewTest : function (str) {\n        return str;\n    }\n});\n</code></pre>\n\n<p>file: client/myView.js</p>\n\n<pre><code>Template.helloWorld.helpers({\n    txt : function () {\n        var str = Meteor.call('viewTest', 'Hello World.');\n        return str;\n    }\n});\n</code></pre>\n\n<p>When I give \"str\" a normal string everything works fine. But in this case my template does not get any value. I defined - for the test - in the same file where the method is a normal function and tried to call the function. The error I got was that the function does not exist. So I think that Meteor tries to render the template before it knows anything about the methods I defined for it. But I think that this is a bit unusual - isn't it?</p>\n",
            "last_activity_date": 1425722560,
            "question_id": 22147813,
            "score": 10,
            "tags": [
                "javascript",
                "meteor"
            ],
            "title": "How to use Meteor methods inside of a template helper"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Simply add it to your current code, then call <code>(new Date()).getWeek()</code></p>\n\n<pre><code>&lt;script&gt;\n    Date.prototype.getWeek = function() {\n        var onejan = new Date(this.getFullYear(), 0, 1);\n        return Math.ceil((((this - onejan) / 86400000) + onejan.getDay() + 1) / 7);\n    }\n\n    var weekNumber = (new Date()).getWeek();\n\n    var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    var now = new Date();\n    document.write(dayNames[now.getDay()] + \" (\" + weekNumber + \").\");\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>With that code you can simply;</p>\n\n<pre><code>document.write(dayNames[now.getDay()] + \" (\" + now.getWeek() + \").\");\n</code></pre>\n\n<p>(You will need to paste the <code>getWeek</code> function above your current script)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>By adding the snippet you extend the Date object.</p>\n\n<pre><code>Date.prototype.getWeek = function() {\n    var onejan = new Date(this.getFullYear(),0,1);\n    return Math.ceil((((this - onejan) / 86400000) + onejan.getDay()+1)/7);\n}\n</code></pre>\n\n<p>If you want to use this in multiple pages you can add this to a seperate js file which must be loaded first before your other scripts executes. With other scripts I mean the scripts which uses the getWeek() method.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Consider using my implementation of \"Date.prototype.getWeek\", think is more accurate than the others i have seen here :)</p>\n\n<pre><code>Date.prototype.getWeek = function(){\n    // We have to compare against the first monday of the year not the 01/01\n    // 60*60*24*1000 = 86400000\n    // 'onejan_next_monday_time' reffers to the miliseconds of the next monday after 01/01\n\n    var day_miliseconds = 86400000,\n        onejan = new Date(this.getFullYear(),0,1,0,0,0),\n        onejan_day = (onejan.getDay()==0) ? 7 : onejan.getDay(),\n        days_for_next_monday = (8-onejan_day),\n        onejan_next_monday_time = onejan.getTime() + (days_for_next_monday * day_miliseconds),\n        // If one jan is not a monday, get the first monday of the year\n        first_monday_year_time = (onejan_day&gt;1) ? onejan_next_monday_time : onejan.getTime(),\n        this_date = new Date(this.getFullYear(), this.getMonth(),this.getDate(),0,0,0),// This at 00:00:00\n        this_time = this_date.getTime(),\n        days_from_first_monday = Math.round(((this_time - first_monday_year_time) / day_miliseconds));\n\n    var first_monday_year = new Date(first_monday_year_time);\n\n    // We add 1 to \"days_from_first_monday\" because if \"days_from_first_monday\" is *7,\n    // then 7/7 = 1, and as we are 7 days from first monday,\n    // we should be in week number 2 instead of week number 1 (7/7=1)\n    // We consider week number as 52 when \"days_from_first_monday\" is lower than 0,\n    // that means the actual week started before the first monday so that means we are on the firsts\n    // days of the year (ex: we are on Friday 01/01, then \"days_from_first_monday\"=-3,\n    // so friday 01/01 is part of week number 52 from past year)\n    // \"days_from_first_monday&lt;=364\" because (364+1)/7 == 52, if we are on day 365, then (365+1)/7 &gt;= 52 (Math.ceil(366/7)=53) and thats wrong\n\n    return (days_from_first_monday&gt;=0 &amp;&amp; days_from_first_monday&lt;364) ? Math.ceil((days_from_first_monday+1)/7) : 52;\n}\n</code></pre>\n\n<p>You can check my public repo here <a href=\"https://bitbucket.org/agustinhaller/date.getweek\">https://bitbucket.org/agustinhaller/date.getweek</a> (Tests included)</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>All the proposed approaches may give wrong results because they don\u2019t take into account summer/winter time changes. Rather than calculating the number of days between two dates using the constant of 86\u2019400\u2019000 milliseconds, it is better to use an approach like the following one:</p>\n\n<pre><code>getDaysDiff = function (dateObject0, dateObject1) {\n    if (dateObject0 &gt;= dateObject1) return 0;\n    var d = new Date(dateObject0.getTime());\n    var nd = 0;\n    while (d &lt;= dateObject1) {\n        d.setDate(d.getDate() + 1);\n        nd++;\n    }\n    return nd-1;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In case you already use jquery-ui (specifically datepicker):</p>\n\n<pre><code>Date.prototype.getWeek = function () { return $.datepicker.iso8601Week(this); }\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>var myDate = new Date();\nmyDate.getWeek();\n</code></pre>\n\n<p>More here:\n<a href=\"http://docs.jquery.com/UI/Datepicker/iso8601Week\">UI/Datepicker/iso8601Week</a></p>\n\n<p>I realize this isn't a general solution as it incurs a dependency. However, considering the popularity of jquery-ui this might just be a simple fit for someone - as it was for me.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I have the following code that is used to show the name of the current day, followed by a set phrase.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt; \n    &lt;!-- \n    // Array of day names\n    var dayNames = new Array(\n    \"It's Sunday, the weekend is nearly over\",\n    \"Yay! Another Monday\",\n     \"Hello Tuesday, at least you're not Monday\",\n     \"It's Wednesday. Halfway through the week already\",\n     \"It's Thursday.\",\n     \"It's Friday - Hurray for the weekend\",\n    \"Saturday Night Fever\");\n    var now = new Date();\n    document.write(dayNames[now.getDay()] + \".\");\n     // --&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>What I would like to do is have the current week number in brackets after the phrase. I have found the following code:</p>\n\n<pre><code>Date.prototype.getWeek = function() {\n    var onejan = new Date(this.getFullYear(),0,1);\n    return Math.ceil((((this - onejan) / 86400000) + onejan.getDay()+1)/7);\n} \n</code></pre>\n\n<p>Which was taken from <a href=\"http://javascript.about.com/library/blweekyear.htm\">http://javascript.about.com/library/blweekyear.htm</a> but I have no idea how to add it to existing javascript code.</p>\n",
            "last_activity_date": 1399687574,
            "question_id": 7765767,
            "score": 8,
            "tags": [
                "javascript",
                "calendar"
            ],
            "title": "Show week number with Javascript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I've come across this problem and written the following that works in all cases. In IE it does use the method you suggested of temporarily inserting a character at the selection boundary, and then uses <code>document.execCommand(\"undo\")</code> to remove the inserted character and prevent the insertion from remaining on the undo stack. I'm pretty sure there's no easier way. Happily, IE 9 will support the <code>selectionStart</code> and <code>selectionEnd</code> properties.</p>\n\n<pre><code>function getSelectionBoundary(el, isStart) {\n    var property = isStart ? \"selectionStart\" : \"selectionEnd\";\n    var originalValue, textInputRange, precedingRange, pos, bookmark;\n\n    if (typeof el[property] == \"number\") {\n        return el[property];\n    } else if (document.selection &amp;&amp; document.selection.createRange) {\n        el.focus();\n        var range = document.selection.createRange();\n\n        if (range) {\n            range.collapse(!!isStart);\n\n            originalValue = el.value;\n            textInputRange = el.createTextRange();\n            precedingRange = textInputRange.duplicate();\n            pos = 0;\n\n            if (originalValue.indexOf(\"\\r\\n\") &gt; -1) {\n                // Trickier case where input value contains line breaks\n\n                // Insert a character in the text input range and use that as\n                // a marker\n                range.text = \" \";\n                bookmark = range.getBookmark();\n                textInputRange.moveToBookmark(bookmark);\n                precedingRange.setEndPoint(\"EndToStart\", textInputRange);\n                pos = precedingRange.text.length - 1;\n\n                // Executing an undo command to delete the character inserted\n                // prevents this method adding to the undo stack. This trick\n                // came from a user called Trenda on MSDN:\n                // http://msdn.microsoft.com/en-us/library/ms534676%28VS.85%29.aspx\n                document.execCommand(\"undo\");\n            } else {\n                // Easier case where input value contains no line breaks\n                bookmark = range.getBookmark();\n                textInputRange.moveToBookmark(bookmark);\n                precedingRange.setEndPoint(\"EndToStart\", textInputRange);\n                pos = precedingRange.text.length;\n            }\n            return pos;\n        }\n    }\n    return 0;\n}\n\nvar el = document.getElementById(\"your_textarea\");\nvar startPos = getSelectionBoundary(el, true);\nvar endPos = getSelectionBoundary(el, false);\nalert(startPos + \", \" + endPos);\n</code></pre>\n\n<p><strong>UPDATE</strong></p>\n\n<p>Based on bobince's suggested approach in the comments, I've created the following, which seems to work well. Some notes:</p>\n\n<ol>\n<li>bobince's approach is simpler and shorter.</li>\n<li>My approach is intrusive: it makes changes to the input's value before reverting those changes, although there is no visible effect of this.</li>\n<li>My approach has the advantage of keeping all operations within the input. bobince's approach relies on creating ranges that span from the start of the body to the current selection.</li>\n<li>A consequence of 3. is that the performance of bobince's varies with the position of the input within the document whereas mine does not. My simple tests suggest that when the input is close to the start of the document, bobince's approach is significantly faster. When the input is after a significant chunk of HTML, my approach is faster.</li>\n</ol>\n\n<hr>\n\n<pre><code>function getSelection(el) {\n    var start = 0, end = 0, normalizedValue, textInputRange, elStart;\n    var range = document.selection.createRange();\n    var bigNum = -1e8;\n\n    if (range &amp;&amp; range.parentElement() == el) {\n        normalizedValue = el.value.replace(/\\r\\n/g, \"\\n\");\n\n        start = -range.moveStart(\"character\", bigNum);\n        end = -range.moveEnd(\"character\", bigNum);\n\n        textInputRange = el.createTextRange();\n        range.moveToBookmark(textInputRange.getBookmark());\n        elStart = range.moveStart(\"character\", bigNum);\n\n        // Adjust the position to be relative to the start of the input\n        start += elStart;\n        end += elStart;\n\n        // Correct for line breaks so that offsets are relative to the\n        // actual value of the input\n        start += normalizedValue.slice(0, start).split(\"\\n\").length - 1;\n        end += normalizedValue.slice(0, end).split(\"\\n\").length - 1;\n    }\n    return {\n        start: start,\n        end: end\n    };\n}\n\nvar el = document.getElementById(\"your_textarea\");\nvar sel = getSelection(el);\nalert(sel.start + \", \" + sel.end);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The move by negative bazillion seems to work perfectly.  </p>\n\n<p>Here's what I ended up with:</p>\n\n<pre><code>var sel=document.selection.createRange();\nvar temp=sel.duplicate();\ntemp.moveToElementText(textarea);\nvar basepos=-temp.moveStart('character', -10000000);\n\nthis.m_selectionStart = -sel.moveStart('character', -10000000)-basepos;\nthis.m_selectionEnd = -sel.moveEnd('character', -10000000)-basepos;\nthis.m_text=textarea.value.replace(/\\r\\n/gm,\"\\n\");\n</code></pre>\n\n<p>Thanks bobince - how can I vote up your answer when it's just a comment :(</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm adding another answer since my previous one is already getting somewhat epic.</p>\n\n<p>This is what I consider the best version yet: it takes bobince's approach (mentioned in the comments to my first answer) and fixes the two things I didn't like about it, which were first that it relies on TextRanges that stray outside the textarea (thus harming performance), and second the dirtiness of having to pick a giant number for the number of characters to move the range boundary.</p>\n\n<pre><code>function getSelection(el) {\n    var start = 0, end = 0, normalizedValue, range,\n        textInputRange, len, endRange;\n\n    if (typeof el.selectionStart == \"number\" &amp;&amp; typeof el.selectionEnd == \"number\") {\n        start = el.selectionStart;\n        end = el.selectionEnd;\n    } else {\n        range = document.selection.createRange();\n\n        if (range &amp;&amp; range.parentElement() == el) {\n            len = el.value.length;\n            normalizedValue = el.value.replace(/\\r\\n/g, \"\\n\");\n\n            // Create a working TextRange that lives only in the input\n            textInputRange = el.createTextRange();\n            textInputRange.moveToBookmark(range.getBookmark());\n\n            // Check if the start and end of the selection are at the very end\n            // of the input, since moveStart/moveEnd doesn't return what we want\n            // in those cases\n            endRange = el.createTextRange();\n            endRange.collapse(false);\n\n            if (textInputRange.compareEndPoints(\"StartToEnd\", endRange) &gt; -1) {\n                start = end = len;\n            } else {\n                start = -textInputRange.moveStart(\"character\", -len);\n                start += normalizedValue.slice(0, start).split(\"\\n\").length - 1;\n\n                if (textInputRange.compareEndPoints(\"EndToEnd\", endRange) &gt; -1) {\n                    end = len;\n                } else {\n                    end = -textInputRange.moveEnd(\"character\", -len);\n                    end += normalizedValue.slice(0, end).split(\"\\n\").length - 1;\n                }\n            }\n        }\n    }\n\n    return {\n        start: start,\n        end: end\n    };\n}\n\nvar el = document.getElementById(\"your_textarea\");\nvar sel = getSelection(el);\nalert(sel.start + \", \" + sel.end);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>A jquery plugin to get selection index start and end in text area. The above javascript codes didnt work for IE7 and IE8 and gave very inconsistent results, so I have written this small jquery plugin. Allows to temporarily save start and end index of the selection and hightlight the selection at a later time.</p>\n\n<p>A working example and brief version is here: <a href=\"http://jsfiddle.net/hYuzk/3/\" rel=\"nofollow\">http://jsfiddle.net/hYuzk/3/</a></p>\n\n<p>A more details version with comments etc. is here: <a href=\"http://jsfiddle.net/hYuzk/4/\" rel=\"nofollow\">http://jsfiddle.net/hYuzk/4/</a></p>\n\n<pre><code>        // Cross browser plugins to set or get selection/caret position in textarea, input fields etc for IE7,IE8,IE9, FF, Chrome, Safari etc \n        $.fn.extend({ \n            // Gets or sets a selection or caret position in textarea, input field etc. \n            // Usage Example: select text from index 2 to 5 --&gt; $('#myTextArea').caretSelection({start: 2, end: 5}); \n            //                get selected text or caret position --&gt; $('#myTextArea').caretSelection(); \n            //                if start and end positions are the same, caret position will be set instead o fmaking a selection \n            caretSelection : function(options) \n            { \n            if(options &amp;&amp; !isNaN(options.start) &amp;&amp; !isNaN(options.end)) \n            { \n            this.setCaretSelection(options); \n            } \n            else \n            { \n            return this.getCaretSelection(); \n            } \n            }, \n            setCaretSelection : function(options) \n            { \n            var inp = this[0]; \n            if(inp.createTextRange) \n            { \n            var selRange = inp.createTextRange(); \n            selRange.collapse(true); \n            selRange.moveStart('character', options.start); \n            selRange.moveEnd('character',options.end - options.start); \n            selRange.select(); \n            } \n            else if(inp.setSelectionRange) \n            { \n            inp.focus(); \n            inp.setSelectionRange(options.start, options.end); \n            } \n            }, \n            getCaretSelection: function() \n            { \n            var inp = this[0], start = 0, end = 0; \n            if(!isNaN(inp.selectionStart)) \n            { \n            start = inp.selectionStart; \n            end = inp.selectionEnd; \n            } \n            else if( inp.createTextRange ) \n            { \n            var inpTxtLen = inp.value.length, jqueryTxtLen = this.val().length; \n            var inpRange = inp.createTextRange(), collapsedRange = inp.createTextRange(); \n\n            inpRange.moveToBookmark(document.selection.createRange().getBookmark()); \n            collapsedRange.collapse(false); \n\n            start = inpRange.compareEndPoints('StartToEnd', collapsedRange) &gt; -1 ? jqueryTxtLen : inpRange.moveStart('character', -inpTxtLen); \n            end = inpRange.compareEndPoints('EndToEnd', collapsedRange) &gt; -1 ? jqueryTxtLen : inpRange.moveEnd('character', -inpTxtLen); \n            } \n            return {start: Math.abs(start), end: Math.abs(end)}; \n\n            }, \n            // Usage: $('#txtArea').replaceCaretSelection({start: startIndex, end: endIndex, text: 'text to replace with', insPos: 'before|after|select'}) \n            // Options     start: start index of the text to be replaced \n            //               end: end index of the text to be replaced \n            //              text: text to replace the selection with \n            //            insPos: indicates whether to place the caret 'before' or 'after' the replacement text, 'select' will select the replacement text \n\n            replaceCaretSelection: function(options) \n            { \n            var pos = this.caretSelection(); \n            this.val( this.val().substring(0,pos.start) + options.text + this.val().substring(pos.end) ); \n            if(options.insPos == 'before') \n            { \n            this.caretSelection({start: pos.start, end: pos.start}); \n            } \n            else if( options.insPos == 'after' ) \n            { \n            this.caretSelection({start: pos.start + options.text.length, end: pos.start + options.text.length}); \n            } \n            else if( options.insPos == 'select' ) \n            { \n            this.caretSelection({start: pos.start, end: pos.start + options.text.length}); \n            } \n            } \n        }); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to extract the exact selection and cursor location from a textarea.  As usual,  what's easy in most browsers is not in IE.  </p>\n\n<p>I'm using this:</p>\n\n<pre><code>var sel=document.selection.createRange();\nvar temp=sel.duplicate();\ntemp.moveToElementText(textarea);\ntemp.setEndPoint(\"EndToEnd\", sel);\nselectionEnd = temp.text.length;\nselectionStart = selectionEnd - sel.text.length;\n</code></pre>\n\n<p>Which works 99% of the time.  The problem is that <code>TextRange.text</code> doesn't return leading or trailing new line characters.  So when the cursor is a couple of blank lines after a paragraph it yields a position at the end of the preceeding paragraph - rather than the actual cursor position.</p>\n\n<p>eg:</p>\n\n<pre><code>the quick brown fox|    &lt;- above code thinks the cursor is here\n\n|    &lt;- when really it's here\n</code></pre>\n\n<p>The only fix I can think of is to temporarily insert a character before and after the selection, grab the actual selection and then remove those temp characters again.  It's a hack but in a quick experiment looks like it will work.</p>\n\n<p>But first I'd like to be sure there's not an easier way.</p>\n",
            "last_activity_date": 1346566917,
            "question_id": 3622818,
            "score": 7,
            "tags": [
                "javascript",
                "internet-explorer",
                "dom"
            ],
            "title": "IE&#39;s document.selection.createRange doesn&#39;t include leading or trailing blank lines"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Having just done a bit of reading on this, it looks like onerror can also be attached to the window object. See:</p>\n\n<p><a href=\"http://www.javascriptkit.com/javatutors/error.shtml\" rel=\"nofollow\">http://www.javascriptkit.com/javatutors/error.shtml</a></p>\n\n<p>According to that page, you can pass in msg, url and linenumber arguments:</p>\n\n<pre><code>window.onerror=function(msg, url, linenumber){\n alert('Error message: '+msg+'\\nURL: '+url+'\\nLine Number: '+linenumber)\n return true\n}\n</code></pre>\n\n<p>Not sure on the browser support for this, but thanks for bringing it to my attention!</p>\n\n<p><strong>Update:</strong> didn't do anything in Safari 4 (apart from logging an error in firebug as per usual), but shows the alert in Firefox 3.6 Beta 5. Error test at <a href=\"http://www.javascriptkit.com/javatutors/errortest2.htm\" rel=\"nofollow\">http://www.javascriptkit.com/javatutors/errortest2.htm</a></p>\n\n<p><strong>Update 2:</strong> done a test with the following:</p>\n\n<p>index.html:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\n\nwindow.onerror=function(msg, url, linenumber){\n alert('Error message: '+msg+'\\nURL: '+url+'\\nLine Number: '+linenumber)\n return true\n}\n&lt;/script&gt;\n\n&lt;script type=\"text/javascript\" src=\"js.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>js.js: (stupid name, i know!)</p>\n\n<pre><code>document.write('hi there'\n</code></pre>\n\n<p>Result in FF 3.6 Beta 5:</p>\n\n<p><img src=\"http://twitpic.com/show/full/x758d.png\" alt=\"Result\"></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I found this <a href=\"http://msdn.microsoft.com/en-us/library/ms976144.aspx\">buried in some MSDN documentation</a>:</p>\n\n<blockquote>\n  <p>Note that the documentation mistakenly says this works for  elements too; the error will be fixed in the Workshop documentation for the final release of Internet Explorer 5 in March.</p>\n</blockquote>\n\n<p>The next thing I thought of that could help is the onreadystatechange event:</p>\n\n<pre><code>&lt;script src=\"http://www.google.com/NOTFOUND.js\" onreadystatechange=\"alert(this.readyState)\"&gt;\n</code></pre>\n\n<p>This event fires twice for me, once with \"loading\" and again with \"loaded\", whether the script is valid or not. Other documentation I've found says that sometimes it fires a complete event, and it's not really clear when it's supposed to fire. So it looks like that won't work.</p>\n\n<p>So I think you're left with the hacky solution of checking that a variable which the script is supposed to declare really exists. In HTML:</p>\n\n<pre><code>&lt;script src=\"http://yourdomain.com/declare_foo.js\"&gt;&lt;/script&gt;\n&lt;script&gt;if (typeof foo == \"undefined\") {alert ('error loading script');}&lt;/script&gt;\n</code></pre>\n\n<p>And then of course in declare_foo.js, you'd have</p>\n\n<pre><code>var foo = 'Script loaded successfully';\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>How about this?</p>\n\n<pre><code>&lt;script language=\"JavaScript\" type=\"text/javascript\"&gt;\n     var DidItLoad=0;\n     function funcDidItLoad()\n     { \n         if(DidItLoad==1)\n         {\n            alert(\"good\")\n         }\n         else\n         {\n            alert(\"bad\")\n         }\n         DidItLoad=0;\n         return 0;\n     }\n     &lt;/script&gt;\n     &lt;script language=\"JavaScript\" type=\"text/javascript\" onload=\"DidItLoad=1;\" src=\"javascript/myError.js\"&gt;&lt;/script&gt;&lt;!--erase me--&gt; \n     &lt;script language=\"JavaScript\" type=\"text/javascript\"&gt;\n        funcDidItLoad();\n     &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>The <a href=\"http://msdn.microsoft.com/en-us/library/cc197053%28VS.85%29.aspx\">onerror page on MSDN</a> states that the onerror handler can be attached to a script element and that it \"Fires when an error occurs during object loading.\".</p>\n\n<p>For the purpose of unit tests, I am trying to get this onerror handler to fire, but could not find a suitable example.</p>\n\n<p>The following code triggers an error in Firefox, but no alert is displayed in Internet Explorer</p>\n\n<pre><code>&lt;script src=\"http://www.google.com/NOTFOUND.js\" onerror=\"alert('error fired')\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Does anyone know a value for script.src that would fire the handler attached to script.onerror?</p>\n",
            "last_activity_date": 1320847646,
            "question_id": 2027849,
            "score": 5,
            "tags": [
                "javascript",
                "unit-testing",
                "internet-explorer",
                "scripting"
            ],
            "title": "How to trigger script.onerror in Internet Explorer?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.javascriptkit.com/javatutors/datedifference.shtml\" rel=\"nofollow\">Here</a> is explained how to find the difference between two dates in javascript</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>diff.setTime(Math.abs(date1.getTime() - date2.getTime()));\n\ntimediff = diff.getTime();\n\nweeks = Math.floor(timediff / (1000 * 60 * 60 * 24 * 7));\ntimediff -= weeks * (1000 * 60 * 60 * 24 * 7);\n\ndays = Math.floor(timediff / (1000 * 60 * 60 * 24)); \ntimediff -= days * (1000 * 60 * 60 * 24);\n\nhours = Math.floor(timediff / (1000 * 60 * 60)); \ntimediff -= hours * (1000 * 60 * 60);\n\nmins = Math.floor(timediff / (1000 * 60)); \ntimediff -= mins * (1000 * 60);\n\nsecs = Math.floor(timediff / 1000); \ntimediff -= secs * 1000;\n\nalert(weeks + \" weeks, \" + days + \" days, \" + hours + \" hours, \" + mins + \" minutes, and \" + secs + \" seconds\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<ol>\n<li>getDate() returns the day of the\nmonth, in your case: 9 and 12.</li>\n<li><p>You should explicitely define date objects via the following. Months are 0-based, therefore 0 = January, 1 = February ...</p>\n\n<p>var date2 = new Date(2009, 1, 9);</p></li>\n<li><p>These are numbers, not a string. When you want to use a string for the date, then you need exactly that format, nothing is optional:</p>\n\n<p>var newDate = new Date(\"month day, year hours:minutes:seconds\");\nvar date2   = new Date(\"february 9, 2009 00:00:00\");</p></li>\n</ol>\n\n<p><strong>[Edit]</strong>\nComplete solution, if dates are in format mm/dd/yyyy, and the difference should be in days:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    function daysFromString(dateString)\n    {\n        // split strings at / and return array\n        var splittedString = dateString.split(\"/\");\n        // make a new date. Caveat: Months are 0-based in JS\n        var newDate = new Date(parseInt(splittedString[2], 10), parseInt(splittedString[0], 10)-1, parseInt(splittedString[1], 10));\n        // returns days since jan 1 1970\n        return Math.round(newDate.getTime() / (24*3600*1000));\n    }\n\n    var dateString2 = \"02/09/2009\";\n    var dateString1= \"03/12/2009\";\n    var dateDays1 = daysFromString(dateString1);\n    var dateDays2 = daysFromString(dateString2);\n    var diff = dateDays1 - dateDays2;\n    alert (diff);\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>getDate</code> is a method of <code>Date</code> object. as any docs clearly state it returns the day of the month in range 0 to 31. it wouldn't make sense to try to subtract one from the other if it's not the same month.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>use Date.parse(date1) - Date.parse(date2)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>date2 = 02/09/2009 is not considered to be a date. it works this way. First it devides 02/09, it returns 0.2222222222222222 and its been divided by 2009 (0.2222222222222222/2009). finally you got an result date2 = 0.0001106133510314695. same way it calculates the result for date1.</p>\n\n<p>this is not a valid operation. If you wanted to define the date. make sure that, you placed the data in a right date format.</p>\n\n<p><strong>use either new Date() or Date.parse(\"02/09/2009\")</strong></p>\n\n<p><strong>Edit:</strong></p>\n\n<pre><code>   new Date(Date.parse(\"03/12/2009\")-Date.parse(\"02/09/2009\")).toLocaleDateString() Or\n   new Date(date1- date2).toLocaleDateString()\n</code></pre>\n\n<p>isnt that work..??</p>\n\n<p><strong>Edit :</strong> </p>\n\n<p>may be this will work.. can u try this..</p>\n\n<pre><code> Date.parse(\"03/12/2009\")-Date.parse(\"02/09/2009\") / (24*60*60*1000)\n</code></pre>\n\n<p>and it returns 31 days</p>\n\n<p>it seems working for me.. but in my time zone it took 03/12/2009 as 3rd month 11th day and year 2009</p>\n\n<p><strong>(24*60*60*1000) = Number of milliseconds per day</strong></p>\n\n\n\n\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction GetD()\n{\n    var date1 = new Date ( 2009 , 09 , 02 );\n    var date2 = new Date ( 2009 , 12 , 03 );        \n\n    var diff = days_between (date1,date2);\n    alert ( diff );\n}\nfunction days_between(date1, date2) {\n\n    // The number of milliseconds in one day\n    var ONE_DAY = 1000 * 60 * 60 * 24;\n\n    // Convert both dates to milliseconds\n    var date1_ms = date1.getTime();\n    var date2_ms = date2.getTime();\n\n    // Calculate the difference in milliseconds\n    var difference_ms = Math.abs(date1_ms - date2_ms);\n\n    // Convert back to days and return\n\n    return Math.round(difference_ms/ONE_DAY);\n}\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>yes.\nYou must use <strong>Date</strong> object, like this</p>\n\n<pre><code>var d = new Date(2009,9,19); //19th october, months are 0-based\nvar d2 = new Date(2009,10,12);\nvar diff = (d2 - d)/60000;  //diff in minutes\nalert(diff / 24);   //difference in hours\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>\n&lt;script language=&quot;JavaScript&quot;&gt;\n&lt;!--\nfunction dstrToUTC(ds) {\n var dsarr = ds.split(&quot;/&quot;);\n var mm = parseInt(dsarr[0],10);\n var dd = parseInt(dsarr[1],10);\n var yy = parseInt(dsarr[2],10);\n return Date.UTC(yy,mm-1,dd,0,0,0);\n}\n\nfunction datediff(ds1,ds2) {\n var d1 = dstrToUTC(ds1);\n var d2 = dstrToUTC(ds2);\n var oneday = 86400000;\n return (d2-d1) / oneday;\n}\n\n// test cases are below\n\nvar a; var b;\n\na = &quot;01/09/1999&quot;;\nb = &quot;01/10/1999&quot;;\ndocument.write(&quot;From &quot;+a+&quot; to &quot;+b+&quot; is &quot;+datediff(a,b)+&quot; day(s)&lt;br&gt;&quot;);\n\na = &quot;01/12/1999&quot;;\nb = &quot;01/19/1999&quot;;\ndocument.write(&quot;From &quot;+a+&quot; to &quot;+b+&quot; is &quot;+datediff(a,b)+&quot; day(s)&lt;br&gt;&quot;);\n\na = &quot;01/19/1999&quot;;\nb = &quot;01/12/1999&quot;;\ndocument.write(&quot;From &quot;+a+&quot; to &quot;+b+&quot; is &quot;+datediff(a,b)+&quot; day(s)&lt;br&gt;&quot;);\n\na = &quot;01/03/1999&quot;;\nb = &quot;01/13/1999&quot;;\ndocument.write(&quot;From &quot;+a+&quot; to &quot;+b+&quot; is &quot;+datediff(a,b)+&quot; day(s)&lt;br&gt;&quot;);\n\na = &quot;04/30/1999&quot;;\nb = &quot;05/01/1999&quot;;\ndocument.write(&quot;From &quot;+a+&quot; to &quot;+b+&quot; is &quot;+datediff(a,b)+&quot; day(s)&lt;br&gt;&quot;);\n\na = &quot;05/30/1999&quot;;\nb = &quot;06/01/1999&quot;;\ndocument.write(&quot;From &quot;+a+&quot; to &quot;+b+&quot; is &quot;+datediff(a,b)+&quot; day(s)&lt;br&gt;&quot;);\n\na = &quot;02/28/1999&quot;;\nb = &quot;03/01/1999&quot;;\ndocument.write(&quot;From &quot;+a+&quot; to &quot;+b+&quot; is &quot;+datediff(a,b)+&quot; day(s)&lt;br&gt;&quot;);\n\na = &quot;02/28/2000&quot;;\nb = &quot;03/01/2000&quot;;\ndocument.write(&quot;From &quot;+a+&quot; to &quot;+b+&quot; is &quot;+datediff(a,b)+&quot; day(s)&lt;br&gt;&quot;);\n\na = &quot;01/01/1999&quot;;\nb = &quot;12/31/1999&quot;;\ndocument.write(&quot;From &quot;+a+&quot; to &quot;+b+&quot; is &quot;+datediff(a,b)+&quot; day(s)&lt;br&gt;&quot;);\n\na = &quot;01/01/2000&quot;;\nb = &quot;12/31/2000&quot;;\ndocument.write(&quot;From &quot;+a+&quot; to &quot;+b+&quot; is &quot;+datediff(a,b)+&quot; day(s)&lt;br&gt;&quot;);\n\na = &quot;12/15/1999&quot;;\nb = &quot;01/15/2001&quot;;\ndocument.write(&quot;From &quot;+a+&quot; to &quot;+b+&quot; is &quot;+datediff(a,b)+&quot; day(s)&lt;br&gt;&quot;);\n\n// --&gt;\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Try</p>\n\n<pre><code>var diff2 =    Date.parse(\"03/12/2009\") - Date.parse(\"02/09/2009\");\n</code></pre>\n\n<p>It will give you the difference between the dates in milliseconds. Divide this number by 86,400,000 and the difference will be in days.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Many of the answers given will work, but if you're going to do a lot of date manipulation may I suggestion taking a look at my Date Extentions here:</p>\n\n<p><a href=\"http://www.depressedpress.com/Content/Development/JavaScript/Extensions/DP%5FDateExtensions/Index.cfm\" rel=\"nofollow\">DP DateExtensions</a></p>\n\n<p>Once you load them in you might do this (using your initial example):</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n     var date2 = new Date (\"02/09/2009\");\n     var date1 = new Date (\"04/09/2009\");\n     var diff = date1.diff(date2, \"seconds\");\n     alert (diff);\n&lt;/script&gt;\n</code></pre>\n\n<p>You can get the difference in any of the following dateparts:</p>\n\n<ul>\n<li>milliseconds: Milliseconds.</li>\n<li>seconds: Seconds.</li>\n<li>minutes: Minutes. </li>\n<li>quarterhours: 15 minutes.</li>\n<li>warhols: 15 minutes (of fame).</li>\n<li>halfhours: 30 minutes.</li>\n<li>hours: Hours.</li>\n<li>days: Days. </li>\n<li>weeks: Weeks (periods of 7 days). </li>\n<li>businessdays: Days excluding Saturday and Sunday. Note that holidays are NOT considered.</li>\n<li>businessweeks: Business weeks (periods of 5 business days).</li>\n<li>wholeweeks: Weeks from Sunday to Saturday. Only whole weeks will be counted.</li>\n<li>months: Months.</li>\n<li>years: Years</li>\n</ul>\n\n<p>The extensions give a ton of other functions as well for all your date math and manipulation needs.</p>\n\n<p>I've found the extensions insanely useful, hope they help.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have tried like this </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n     var date2=02/09/2009;\n     var date1=03/12/2009;\n     var diff = date1.getDate()-date2.getDate();\n     alert (diff);\n\n&lt;/script&gt;\n</code></pre>\n\n<p>but it's not working, is that reason <code>getDate</code> will work only for <code>Date</code>?</p>\n\n<p>How to find the difference between these two dates? Am  I not able use this function, because I am adding javascript in salesforce CRM apex pages?</p>\n\n<p><strong>Edit 1 : infact this too not working</strong> </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n     var date2= new Date (\"02/09/2009\");\n     var date1= new Date (\"04/09/2009\");\n     var diff = date1.getDate()-date2.getDate();\n     alert (diff);\n\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>Edit 2 :  its not working  too ...</strong> </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n     var date2= \"02/09/2009\";\n     var date1= \"04/09/2009\";\n     var diff2 =    new Date(Date.parse(\"03/12/2009\")-\n                        Date.parse(\"02/09/2009\")).toLocaleDateString();\n</code></pre>\n\n<p>//      var new_date = new Date (1970, 01, 01);\n  //      var diff3 =  diff2.getDate();\n           alert (diff2);</p>\n\n<pre><code>&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1253262234,
            "question_id": 1410285,
            "score": 5,
            "tags": [
                "javascript",
                "date"
            ],
            "title": "Calculating the difference between two dates"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If it has a white background you could just take the opacity down allowing the white to shine through, thus a brighter shade.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://stackoverflow.com/questions/801406/c-create-a-lighter-darker-color-based-on-a-system-color/801463#801463\">Here's someone's answer</a> to a similar question. Full JavaScript code there for what you want to do.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h2>Converting to HSV to change the brigthness</h2>\n\n<p><strong><a href=\"http://jsfiddle.net/K8cMX/7/\">See the full code example on jsFiddle</a></strong></p>\n\n<p>This version uses <code>HSV</code>. I convert the original <code>rgb</code> value to <code>hsv</code> and change the value of <code>v</code> to get a lighter color. I got <a href=\"http://stackoverflow.com/questions/2348597/why-doesnt-this-javascript-rgb-to-hsl-code-work/2348659#2348659\"><code>RgbToHsv</code></a> from Pointy answer, I just added a little fix for gray. And I got <a href=\"http://www.csgnetwork.com/csgcolorsel4.html\"><code>HsvToRgb</code> on this website</a></p>\n\n<p>When the page loads I am getting the <code>rgb</code> converting into <code>hsv</code> changing the <code>v</code> value, convert back to <code>rgb</code> and change the <code>css</code> of the element with the new value.</p>\n\n<pre><code>function AppendColor(light) {\n    $(\".dark\").each(function(i){\n      // get the RGB from existing elements\n        var color = $(this).css(\"background-color\");\n        color = color.replace(/[^0-9,]+/g, \"\");\n        var red = color.split(\",\")[0];\n        var gre = color.split(\",\")[1];\n        var blu = color.split(\",\")[2];\n\n      // convert rgb to hsv\n        var hsv = RgbToHsv(red,gre,blu);\n      // convert hsv to rgb modifing the `v` param\n        var rgb = HsvToRgb(hsv.h, hsv.s, light);\n\n      // creates a new div and set the new background\n      // then appends to the content\n        color = \"rgb(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \")\";\n        $(\"&lt;div /&gt;\")\n            .css(\"background\", color)\n            .attr(\"title\", color)\n            .appendTo($(\".light\").parent());\n        $(\"&lt;span /&gt;\").html(\" \").appendTo($(\".light\").parent())\n    });\n    $(\"&lt;br /&gt;\").appendTo($(\".light\").parent())\n}\n\n// tested values\nAppendColor(25);\nAppendColor(50);\nAppendColor(75);\nAppendColor(90);\nAppendColor(95);\nAppendColor(97);\nAppendColor(99);\nAppendColor(100);\n</code></pre>\n\n<p>Result:</p>\n\n<p><img src=\"http://lh5.ggpht.com/_ztQBKXDrT-w/Tbt0iTwICLI/AAAAAAAAA3Y/H6EafLy_2xI/s600/7f88d7bbd2a64378b8313e9925a7db4c.png\" alt=\"rgb to hsv to rgb\"></p>\n\n<hr>\n\n<h2>Increasing color values by highest color</h2>\n\n<p><strong><a href=\"http://jsfiddle.net/K8cMX/2/\">See this example on jsFiddle</a></strong></p>\n\n<p>The <code>divs</code> on top represents the dark colors (rgb) <code>#801A00</code>, <code>#00801A</code>, <code>#1A0080</code> and <code>#D2D2D2</code></p>\n\n<pre><code>&lt;div id=\"red\" class=\"dark red\"&gt;&lt;/div&gt;\n&lt;div id=\"green\" class=\"dark green\"&gt;&lt;/div&gt;\n&lt;div id=\"blue\" class=\"dark blue\"&gt;&lt;/div&gt;\n&lt;div id=\"gray\" class=\"dark gray\"&gt;&lt;/div&gt;\n&lt;br /&gt;\n\n&lt;div id=\"lred\" class=\"lred\"&gt;&lt;/div&gt;\n&lt;div id=\"lgreen\" class=\"lgreen\"&gt;&lt;/div&gt;\n&lt;div id=\"lblue\" class=\"lblue\"&gt;&lt;/div&gt;\n&lt;div id=\"lgray\" class=\"lgray\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>The <code>divs</code> on the bottom will get the light color from the dark.</p>\n\n<p>When I click a dark div it will retrieve the <code>background-color</code>, split the values and send to the function <code>Lighthen</code>. This function will make the color more light.</p>\n\n<pre><code>function Lighthen(red, green, blue)\n{\n    var max = ([red,green,blue].sort(function(l,r){return r-l}))[0];\n    var multiplier = max;\n    multiplier = (multiplier / 255) + 1;\n\n    // if it would still be too dark, make it lighten more\n    if (multiplier &lt; 1.5) multiplier = 1.9;\n\n    // if it gets to white, move away a bit\n    if ((max * multiplier) &gt; 255)\n    {\n        multiplier = (multiplier / 230) + 1;\n    }\n\n    var r = Math.round(red * multiplier);\n    var g = Math.round(green * multiplier);\n    var b = Math.round(blue * multiplier);\n\n    if (r &gt; 255) r = 255;\n    if (g &gt; 255) g = 255;\n    if (b &gt; 255) b = 255;\n\n    return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n}\n</code></pre>\n\n<p>When the dark div is clicked, the new color is calculated and changed on the correspondent <code>div</code>.</p>\n\n<pre><code>$(\".dark\").click(function(){\n    var color = $(this).css(\"background-color\");\n    color = color.replace(/[^0-9,]+/g, \"\");\n    var red = color.split(\",\")[0];\n    var gre = color.split(\",\")[1];\n    var blu = color.split(\",\")[2];\n\n    $(\"#l\" + $(this).attr(\"id\"))\n        .css(\"background\", Lighthen(red, gre, blu));\n});\n</code></pre>\n\n<p>Resulting in</p>\n\n<p><a href=\"http://jsfiddle.net/K8cMX/2/\"><img src=\"http://i.stack.imgur.com/mx6Lj.png\" alt=\"click the color to change\"></a></p>\n",
                    "is_accepted": true,
                    "score": 31
                }
            ],
            "body": "<p>So if I have a text \"Click Me to Brighten\" that has CSS color property of some dark green hex color like \"#00801a\" I want to make it so that when I click on it, it makes it a lighter green. Likewise, if it were some blue color, clicking on it would make it lighter blue. Basically I want to know if there is a way to change the css color without knowing the actual color.</p>\n",
            "last_activity_date": 1304130728,
            "question_id": 5833624,
            "score": 4,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css"
            ],
            "title": "Increase CSS brightness color on click with jquery/javascript?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>The behaviour should depend on how the browser is set up to handle various MIME types. In this case the MIME type is application/pdf. If you want to force the browser to download the file you can try forcing a different MIME type on the PDF files. I recommend against this as it should be the users choice what will happen when they open a PDF file. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is only possible with setting a http response header by the server side code. Namely;</p>\n\n<pre><code>Content-Disposition: attachment; filename=fname.ext\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>you will need to use a PHP script (or an other server side language for this)</p>\n\n<pre><code>&lt;?php\n// We'll be outputting a PDF\nheader('Content-type: application/pdf');\n\n// It will be called downloaded.pdf\nheader('Content-Disposition: attachment; filename=\"downloaded.pdf\"');\n\n// The PDF source is in original.pdf\nreadfile('original.pdf');\n?&gt;\n</code></pre>\n\n<p>and use httacces to redirect (rewrite) to the PHP file instead of the pdf</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use </p>\n\n<pre><code>Response.AddHeader(\"Content-disposition\", \"attachment; filename=\" + Name);\n</code></pre>\n\n<p>Check out this example:</p>\n\n<p><a href=\"http://www.codeproject.com/KB/aspnet/textfile.aspx\">http://www.codeproject.com/KB/aspnet/textfile.aspx</a></p>\n\n<p>This goes for ASP.NET. I am sure you can find similar solutions in all other server side languages. However there's no javascript solution to the best of my knowledge.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You can't do this with HTML. It's a server-based solution. You have to stream the file so that the browser than triggers the save dialog.</p>\n\n<p>I'd advise not doing this. How a user interacts with a PDF should be left up to the user. </p>\n\n<p>UPDATE (2014):</p>\n\n<p>So...this answer still gets plenty of downvotes. I assume part of that is that this was answered 4 years ago and as Sarim points out, there is now the <a href=\"http://davidwalsh.name/download-attribute\" rel=\"nofollow\">HTML 5 <code>download</code> attribute</a> that can handle this. </p>\n\n<p>I agree, and think Sarim's answer is good (it probably should be the chosen answer if the OP ever returns). However, this answer is still the reliable way to handle it (as Yi\u011fit Yener's answer points out and--oddly--people agree with). While the download attribute has gained support, it's still spotty:</p>\n\n<p><a href=\"http://caniuse.com/#feat=download\" rel=\"nofollow\">http://caniuse.com/#feat=download</a></p>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>The solution that worked best for me was the one written up by <a href=\"http://www.thingy-ma-jig.co.uk/blog/06-08-2007/force-a-pdf-to-download\" rel=\"nofollow\">Nick on his blog</a></p>\n\n<p>The basic idea of his solution is to use the Apache servers header mod and edit the .htaccess to include a FileMatch directive that the forces all *.pdf files to act as a stream instead of an attachment. While this doesn't actually involve editing HTML (as per the original question) it doesn't require any programming per se.</p>\n\n<p>The first reason I preferred Nick's approach is because it allowed me to set it on a per folder basis so PDF's in one folder could still be opened in the browser while allowing others (the ones we would like users to edit and then re-upload) to be forced as downloads.</p>\n\n<p>I would also like to add that there is an option with PDF's to post/submit fillable forms via an API to your servers, but that takes awhile to implement. </p>\n\n<p>The second reason was because time is a consideration. Writing a PHP file handler to force the content disposition in the header() will also take less time than an API, but still longer than Nick's approach.</p>\n\n<p>If you know how to turn on an Apache mod and edit the .htaccss you can get this in about 10 minutes. It requires Linux hosting (not Windows). This may not be appropriate approach for all uses as it requires high level server access to configure. As such, if you have said access it's probably because you already know how to do those two things. If not, check Nick's blog for more instructions. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You need to change the http headers sent. Depending on your server, you can modify your .htaccess as follows:</p>\n\n<pre><code>&lt;FilesMatch \"\\.(?i:pdf)$\"&gt;\n  ForceType application/octet-stream\n  Header set Content-Disposition attachment\n&lt;/FilesMatch&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>With html5, it is possible now. Set a \"download\" attr in  element.</p>\n\n<pre><code>&lt;a href=\"http://link/to/file\" download=\"FileName\"&gt;Download it!&lt;/a&gt;\n</code></pre>\n\n<p>Source : <a href=\"http://updates.html5rocks.com/2011/08/Downloading-resources-in-HTML5-a-download\">http://updates.html5rocks.com/2011/08/Downloading-resources-in-HTML5-a-download</a></p>\n",
                    "is_accepted": false,
                    "score": 50
                },
                {
                    "body": "<p>I needed to do this for files created with dynamic names in a particular folder and served by IIS.</p>\n\n<p>This worked for me:</p>\n\n<ul>\n<li>In IIS, go that folder and double click HTTP Response Headers.</li>\n<li><p>Add a new header with the following info:</p>\n\n<p><code>Name: content-disposition\n Value: attachment</code></p></li>\n</ul>\n\n<p>(from: <a href=\"http://forums.iis.net/t/1175103.aspx?add+CustomHeaders+only+for+certain+file+types+\" rel=\"nofollow\">http://forums.iis.net/t/1175103.aspx?add+CustomHeaders+only+for+certain+file+types+</a>)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Without html5 attribute one can achieve this by using php:</p>\n\n<p>Create php file named <em>download.php</em> with this code:</p>\n\n<pre><code>&lt;?php\nob_start();\n$file = \"yourPDF.pdf\"\n\nif (file_exists($file)) \n{\n    header('Content-Description: File Transfer');\n    header('Content-Type: application/octet-stream');\n    header('Content-Disposition: attachment; filename='.basename($file));\n    header('Content-Transfer-Encoding: binary');\n    header('Expires: 0');\n    header('Cache-Control: must-revalidate');\n    header('Pragma: public');\n    header('Content-Length: ' . filesize($file));\n    ob_clean();\n    flush();\n    readfile($file);\n    exit();\n}\n</code></pre>\n\n<p>Now if you want to automatically start downloading pdf write this javascript:</p>\n\n<pre><code>&lt;script&gt;window.location = \"download.php\";&lt;/script&gt;\n</code></pre>\n\n<p>If you want this to work on a link, use this...</p>\n\n<pre><code>&lt;a href='javascript:window.location = \"download.php\"'&gt;\n    Download it!\n&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you are using HTML5 (and i guess now a days everyone uses that), there is an attribute called <code>download</code>.</p>\n\n<p>ex.\n<code>&lt;a href=\"somepathto.pdf\" download=\"filename\"&gt;</code></p>\n\n<p>here <code>filename</code> is optional, but if provided, it will take this name for downloaded file.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I was wondering how to make a PDF file link downloadable instead of opening them in the browser? How is this done in html? (I'd assume it's done via javascript or something). </p>\n",
            "last_activity_date": 1418943402,
            "question_id": 6794255,
            "score": 30,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "(HTML) Download a PDF file instead of opening them in browser when clicked"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>In HTML 4, the type attribute is required. In my experience, all\n  browsers will default to text/javascript if it is absent, but that\n  behaviour is not defined anywhere. While you can in theory leave it\n  out and assume it will be interpreted as JavaScript, it's invalid\n  HTML, so why not add it.</p>\n  \n  <p>In HTML 5, the type attribute is optional and defaults to\n  text/javascript</p>\n</blockquote>\n\n<p>Use <code>&lt;script type=\"text/javascript\"&gt;</code> or simply <code>&lt;script&gt;</code> (if omitted, the type is the same). Do not use <code>&lt;script language=\"JavaScript\"&gt;</code>; the language attribute is deprecated</p>\n\n<p><strong>Ref</strong> :<br>\n<a href=\"http://social.msdn.microsoft.com/Forums/vstudio/en-US/65aaf5f3-09db-4f7e-a32d-d53e9720ad4c/script-languagejavascript-or-script-typetextjavascript-?forum=netfxjscript\" rel=\"nofollow\">http://social.msdn.microsoft.com/Forums/vstudio/en-US/65aaf5f3-09db-4f7e-a32d-d53e9720ad4c/script-languagejavascript-or-script-typetextjavascript-?forum=netfxjscript</a><br>\nand<br>\n<a href=\"http://stackoverflow.com/questions/9659029/difference-between-script-tag-with-type-and-script-without-type\">Difference between &lt;script&gt; tag with type and &lt;script&gt; without type?</a></p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p><code>&lt;script&gt;</code> is HTML 5.</p>\n\n<p><code>&lt;script type='text/javascript'&gt;</code> is HTML 4.x (and XHTML 1.x).</p>\n\n<p><code>&lt;script language=\"javascript\"&gt;</code> is HTML 3.2.</p>\n\n<blockquote>\n  <p>Is it different for different webservers?</p>\n</blockquote>\n\n<p>No. </p>\n\n<blockquote>\n  <p>when I did an offline javascript test, i realised that i need the <code>&lt;script type = 'text/javascript'&gt;</code> tag.</p>\n</blockquote>\n\n<p>That isn't the case. Something else must have been wrong with your test case.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p><a href=\"http://javascript.crockford.com/script.html\">Douglas Crockford says</a>:</p>\n\n<blockquote>\n  <p><code>type=\"text/javascript\"</code></p>\n  \n  <p>This attribute is optional. Since\n  Netscape 2, the default programming\n  language in all browsers has been\n  JavaScript. In XHTML, this attribute\n  is required and unnecessary. In HTML,\n  it is better to leave it out. The\n  browser knows what to do.</p>\n</blockquote>\n\n<p>In HTML 4.01 and XHTML 1(.1), the <code>type</code> attribute for <code>&lt;script&gt;</code> elements is <a href=\"http://www.w3.org/TR/html401/interact/scripts.html#adef-type-SCRIPT\">required</a>.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>&lt;!-- HTML4 and (x)HTML --&gt;\n&lt;script type=\"text/javascript\"&gt;&lt;/script&gt;\n\n\n&lt;!-- HTML5 --&gt;\n&lt;script&gt;&lt;/script&gt;\n</code></pre>\n\n<p><strong>type</strong>\n    attribute identifies the scripting language of code embedded within a script element or referenced via the element\u2019s src attribute. This is specified as a MIME type; examples of supported MIME types include text/javascript, text/ecmascript, application/javascript, and application/ecmascript. If this attribute is absent, the script is treated as JavaScript.</p>\n\n<p>Ref: <a href=\"https://developer.mozilla.org/en/docs/Web/HTML/Element/script\" rel=\"nofollow\">https://developer.mozilla.org/en/docs/Web/HTML/Element/script</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Note: This is no duplicate. I asked if it is different from different webservers.</p>\n\n<p>I was just wondering, what is the difference between </p>\n\n<pre><code>&lt;script&gt;\n</code></pre>\n\n<p>and </p>\n\n<pre><code>&lt;script type = 'text/javascript'&gt;\n</code></pre>\n\n<p>Is it different for different webservers?</p>\n\n<p>For example,(I know it's incorrect to provide a link from w3schools, but look)</p>\n\n<p><a href=\"http://www.w3schools.com/js/tryit.asp?filename=tryjs_myfirst\">http://www.w3schools.com/js/tryit.asp?filename=tryjs_myfirst</a></p>\n\n<p>Using chrome, I visited w3schools and I realised that the <code>&lt;script&gt;</code> tag is all I need.</p>\n\n<p>However, when I did an offline javascript test, i realised that i need the</p>\n\n<pre><code>&lt;script type = 'text/javascript'&gt;\n</code></pre>\n\n<p>tag. Why is this so?</p>\n",
            "last_activity_date": 1424313145,
            "question_id": 20771400,
            "score": 29,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "&lt;script&gt; tag vs &lt;script type = &#39;text/javascript&#39;&gt; tag"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You could build a simple wrapper around the keys of a hash table provided by my <a href=\"http://code.google.com/p/jshashtable/\">jshashtable</a>. I have one knocking around somewhere that I will dig out later.</p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>I have completed and tested an implementation of HashSet and uploaded it to the jshashtable project on Google Code. You can <a href=\"http://code.google.com/p/jshashtable/downloads/list\">download it</a> or <a href=\"http://code.google.com/p/jshashtable/source/browse/trunk/hashset.js\">view the source</a>.</p>\n\n<pre><code>var s = new HashSet();\nvar o1 = {name: \"One\"}, o2 = {name: \"Two\"};\ns.add(o1);\ns.add(o2);\ns.values(); // Array containing o1 and o2\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>I don't think there's a way to work with object's hash code other than store it in the object itself. Strictly speaking, it's possible to create a set class without hashing, using simple linear search, but this would hardly be efficient.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I like <a href=\"https://github.com/lukasolson/Simple-JS-Set\" rel=\"nofollow\">Simple-JS-Set</a> (probably because I wrote it). It supports any sort of JavaScript object. It has the following API:</p>\n\n<ul>\n<li><code>Set(hashFunction)</code>: (Constructor) Instantiate a new set with the given <code>hashFunction</code> (defaults to <code>JSON.stringify</code>)</li>\n<li><code>add(item)</code>: Add an item to the set</li>\n<li><code>remove(item)</code>: Remove an item from the set</li>\n<li><code>contains(item)</code>: Return whether or not the item is contained in the set</li>\n<li><code>size()</code>: Return the number of unique items in the set</li>\n<li><code>each(function(item), thisObj)</code>: Execute a function with each item in the set in context of <code>thisObj</code></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>ECMAScript6 will likely have it:</p>\n\n<ul>\n<li><a href=\"https://people.mozilla.org/~jorendorff/es6-draft.html#sec-set-iterable\" rel=\"nofollow\">https://people.mozilla.org/~jorendorff/es6-draft.html#sec-set-iterable</a></li>\n<li><a href=\"https://github.com/lukehoban/es6features#map--set--weakmap--weakset\" rel=\"nofollow\">https://github.com/lukehoban/es6features#map--set--weakmap--weakset</a></li>\n</ul>\n\n<p>Current syntax:</p>\n\n<pre><code>var s = new Set()\ns.add(\"hello\").add(\"goodbye\").add(\"hello\")\ns.size === 2\ns.has(\"hello\") === true\n</code></pre>\n\n<p>A module that implements it for browsers without support: <a href=\"https://github.com/medikoo/es6-set\" rel=\"nofollow\">https://github.com/medikoo/es6-set</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I'm looking for a decent implementation of a set data structure in JavaScript. It should be able to support elements that are plain JavaScript objects.</p>\n\n<p>So far I only found <a href=\"http://closure-library.googlecode.com/svn/docs/class_goog_structs_Set.html\">Closure Library's structs.Set</a>, but I don't like the fact that it modifies my data.</p>\n\n<p>Any ideas?</p>\n",
            "last_activity_date": 1411198223,
            "question_id": 2523436,
            "score": 18,
            "tags": [
                "javascript",
                "data-structures",
                "set"
            ],
            "title": "JavaScript implementation of a set data structure"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>JSON decoding in JavaScript is simply an eval() if you trust the string or the more safe code you can find on <a href=\"http://json.org\" rel=\"nofollow\">http://json.org</a> if you don't.</p>\n\n<p>You will then have a JavaScript datastructure that you can traverse for the data you need.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you get this text in an alert:</p>\n\n<pre><code>function(){return JSON.encode(this);}\n</code></pre>\n\n<p>when you try alert(myArray[i]), then there are a few possibilities:</p>\n\n<ul>\n<li>myArray[i] is a function (most likely)</li>\n<li>myArray[i] is the literal string \"function(){return JSON.encode(this);}\"</li>\n<li>myArray[i] has a .toString() method that returns that function or that string. This is the least likely of the three.</li>\n</ul>\n\n<p>The simplest way to tell would be to check typeof(myArray[i]).</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>eval('(' + jsonObject + ')')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If the object element you get is a function, you can try this:</p>\n\n<pre><code>var url = myArray[i]();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Suppose you have an array in PHP as $iniData with 5 fields. If using ajax -</p>\n\n<pre><code>echo json_encode($iniData);\n</code></pre>\n\n<p>In Javascript, use the following :</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    $(document).ready(function(){\n        $.ajax({\n            type: \"GET\",\n            url: \"ajaxCalls.php\",\n            data: \"dataType=ini\",\n            success: function(msg)\n            {\n                var x = eval('(' + msg + ')');\n                $('#allowed').html(x.allowed);              // these are the fields which you can now easily access..\n                $('#completed').html(x.completed);\n                $('#running').html(x.running);\n                $('#expired').html(x.expired);\n                $('#balance').html(x.balance);\n            }\n        });\n    });\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>var obj = jQuery.parseJSON('{\"name\":\"John\"}');\nalert( obj.name === \"John\" );\n</code></pre>\n\n<p><a href=\"http://api.jquery.com/jQuery.parseJSON/\">See the jQuery API</a>.</p>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>I decode JSON this way:</p>\n\n<pre><code>eval( 'var from_json_object = ' + my_json_str + ';' );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a JavaScript array that, among others, contains a URL. If I try to simply put the URL in the page (the array is in a project involving the Yahoo! Maps API) it shows the URL as it should be.</p>\n\n<p>But if I try to do a redirect or simply do an 'alert' on the link array element I get: </p>\n\n<blockquote>\n  <p>function(){return JSON.encode(this);}</p>\n</blockquote>\n\n<p>As far as I see it this is because the browser does an JSON.encode when it renders the page, thus the link is displayed OK. I have tried several methods to make it redirect (that's what I want to do with the link) correctly (including the usage of 'eval') but with no luck.</p>\n\n<p>After following some suggestions I've run <code>eval('(' + jsonObject + ')')</code> but it still returns the same output.</p>\n\n<p>So how's this done ? </p>\n",
            "last_activity_date": 1364211211,
            "question_id": 182410,
            "score": 18,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "How to JSON decode array elements in JavaScript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>In order to keep using showModalDialog in my page, I had to come up with my own workaround for the bug. So, here it is...</p>\n\n<p>In Google Chrome, after a postback, showModalDialog always returns undefined. However, the window.opener property in the modal dialog points to the caller window, even after postbacks. So, I thought about putting the result of the dialog in the returnValue property of that caller window. And it works.</p>\n\n<p>In the caller window:</p>\n\n<pre><code>var prevReturnValue = window.returnValue; // Save the current returnValue\nwindow.returnValue = undefined;\nvar dlgReturnValue = window.showModalDialog(...);\nif (dlgReturnValue == undefined) // We don't know here if undefined is the real result...\n{\n    // So we take no chance, in case this is the Google Chrome bug\n    dlgReturnValue = window.returnValue;\n}\nwindow.returnValue = prevReturnValue; // Restore the original returnValue\n\nAt this point, use dlgReturnValue for further processing\n</code></pre>\n\n<p>In the modal dialog window:</p>\n\n<pre><code>if (window.opener)\n{\n    window.opener.returnValue = dateValue;\n}\nwindow.returnValue = dateValue;\nself.close();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>I had this same error, what i found in some forum is that if you put your controls in a updatePanel and ContentTemplate it will work:</p>\n\n<pre><code> &lt;asp:UpdatePanel ID=\"UpdatePanel1\" runat=\"server\"&gt;\n           &lt;ContentTemplate&gt;\n           &lt;/ContentTemplate&gt;\n &lt;/asp:UpdatePanel&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I made a small calendar popup in Javascript. Very simple, using the Calendar control from ASP.NET. I call the popup window with showModalDialog. In the modal window, changing the current month of the calendar causes problems because of the postback, and I found in several places that the solution is to put:</p>\n\n<pre><code>&lt;base target=\"_self\"/&gt;\n</code></pre>\n\n<p>in the head part of the aspx file. Everything works great... except for one thing, and only in Google Chrome. To get back the selected date, I set the returnValue of the popup to the date selected in the calendar. In IE and Firefox, it always works. In Chrome, however, it works only if I don't change the current month in the calendar. As soon as I change it, the return value is not passed back to the caller of showModalDialog. It is as if the modal window is not the original one anymore; the return value is undefined.</p>\n\n<p>Has anyone experienced that behavior and have a suggestion to make it work? I tried using dialogArguments to keep trace of the caller window but it gets passed only to the first modal window (it is lost after changing the current month). </p>\n\n<p>The code in the calling procedure:</p>\n\n<pre><code>var d = window.showModalDialog(...)\n</code></pre>\n\n<p>The code in the modal window:</p>\n\n<pre><code>window.returnValue = selectedDate; \nself.close();\n</code></pre>\n\n<p>As I said to Teemu, selectedDate and window.returnValue are both always correct. However, in the case of Google Chrome (after a month change in the calendar), returnValue is not passed back by showModalDialog and d is undefined.</p>\n",
            "last_activity_date": 1395881059,
            "question_id": 10213530,
            "score": 17,
            "tags": [
                "javascript",
                "return-value",
                "showmodaldialog"
            ],
            "title": "javascript - showModalDialog not returning value in Chrome"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>First one is straight forward, easier to read, less code and might be faster.<br>\nSecond one gives you much more control over the element you create, i.e. makes it much easier to modify the new Element using JS (like attaching events, or, just use it in your code).<br>\nSecond way is for \"purist\" who like \"clean\" code (no quick and dirty).<br>\nI say, use both, see what fits you better and go with it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There are a number of differences:</p>\n\n<ol>\n<li><code>innerHTML</code> has only been standardised by the W3C for HTML 5; even though it has been a <em>de facto</em> standard for some time now across all popular browsers, <em>technically</em> in HTML 4 it's a vendor extension that standards-adherent developers would never be caught dead using. On the other hand, it's much more convenient and practically it's supported by all browsers.</li>\n<li><code>innerHTML</code> <em>replaces</em> the current content of the element (it does not let you <em>modify</em> it). But again, you gain in convenience if you don't mind this limitation.</li>\n<li><code>innerHTML</code> <a href=\"http://www.quirksmode.org/dom/innerhtml.html\" rel=\"nofollow\">has been measured</a> to be much faster (admittedly, that test involves older versions browsers that are not widely used today).</li>\n<li><code>innerHTML</code> might represent a security risk (XSS) if it's set to a user-supplied value that has not been properly encoded (e.g. <code>el.innerHTML = '&lt;script&gt;...'</code>).</li>\n</ol>\n\n<p>Based on the above, it seems that a practical conclusion might be:</p>\n\n<ul>\n<li>If you don't mind the fact that <code>innerHTML</code> is a bit limiting (only total replacement of DOM sub-tree rooted at target element) and you don't risk a vulnerability through injecting user-supplied content, use that. Otherwise, go with DOM.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>According to <a href=\"http://www.quirksmode.org/dom/innerhtml.html\" rel=\"nofollow\">this benchmark data</a>, you will receive much faster results with <code>innerHTML</code> than creating DOM elements.  It's especially clear when using older IE versions.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Some notes:</p>\n\n<ul>\n<li><p>Using <code>innerHTML</code> is faster in IE, but slower in chrome + firefox. <a href=\"http://jsperf.com/innerhtml-vs-w3c-dom/6\" rel=\"nofollow\">Here's one benchmark</a> showing this with a constantly varying set of <code>&lt;div&gt;</code>s + <code>&lt;p&gt;</code>s; <a href=\"http://jsperf.com/dom-table-generation\" rel=\"nofollow\">here's a benchmark</a> showing this for a constant, simple <code>&lt;table&gt;</code>.</p></li>\n<li><p>On the other hand, the DOM methods are the traditional standard  -- <code>innerHTML</code> is standardized in HTML5 -- and allow you to retain references to the newly created elements, so that you can modify them later.</p></li>\n<li><p>Because innerHTML is fast (enough), concise, and easy to use, it's tempting to lean on it for every situation. But beware that using <strong><code>innerHTML</code> detaches all existing DOM nodes</strong> from the document. Here's an example you can test on this page.</p>\n\n<p>First, let's create a function that lets us test whether a node is on the page:</p>\n\n<pre><code>function contains(parent, descendant) {\n    return Boolean(parent.compareDocumentPosition(descendant) &amp; 16);\n}\n</code></pre>\n\n<p>This will return <code>true</code> if <code>parent</code> contains <code>descendant</code>. Test it like this:</p>\n\n<pre><code>var p = document.getElementById(\"portalLink\")\nconsole.log(contains(document, p)); // true\ndocument.body.innerHTML += \"&lt;p&gt;It's clobberin' time!&lt;/p&gt;\";\nconsole.log(contains(document, p)); // false\np = document.getElementById(\"portalLink\")\nconsole.log(contains(document, p)); // true\n</code></pre>\n\n<p>This will print:</p>\n\n<pre><code>true\nfalse\ntrue\n</code></pre>\n\n<p>It may not look like our use of <code>innerHTML</code> should have affected our reference to the <code>portalLink</code> element, but it does. It needs to be retrieved again for proper use. </p></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>I always prefer readability unless the perf difference is extreme.  In a one-off case of this, it probably will be a marginal difference.</p>\n\n<p>In a one-off case like this, setting the <code>innerHTML</code> property will be easiest to read.</p>\n\n<p>But if you are doing a lot of programmatic content generation in JavaScript, it is cleaner and easier to read and understand the DOM option.</p>\n\n<h3>Example:</h3>\n\n<p>Compare this <code>innerHTML</code> code:</p>\n\n<p><a href=\"http://jsfiddle.net/P8m3K/1/\" rel=\"nofollow\">http://jsfiddle.net/P8m3K/1/</a></p>\n\n<pre><code>// Takes input of a value between 1 and 26, inclusive,\n// and converts it to the appropriate character\nfunction alphaToChar(alpha)\n{\n    return String.fromCharCode('a'.charCodeAt() + alpha - 1);\n}\n\nvar content = \"&lt;ul&gt;\";\nfor(i = 0; i &lt; 10; ++i)\n{\n    content += \"&lt;li&gt;\";\n    for(j = 1; j &lt;= 26; ++j)\n    {\n        content += \"&lt;a href=\\\"\" + alphaToChar(j) + \".html\\\"&gt;\"\n            + alphaToChar(j)\n            + \"&lt;/a&gt;\";\n    }\n    content += \"&lt;/li&gt;\";\n}\ndocument.getElementById(\"foo\").innerHTML = content;\n</code></pre>\n\n<p>To this DOM code:</p>\n\n<p><a href=\"http://jsfiddle.net/q6GB8/1/\" rel=\"nofollow\">http://jsfiddle.net/q6GB8/1/</a></p>\n\n<pre><code>// Takes input of a value between 1 and 26, inclusive,\n// and converts it to the appropriate character\nfunction alphaToChar(alpha)\n{\n    return String.fromCharCode('a'.charCodeAt() + alpha - 1);\n}\n\nvar list = document.createElement(\"ul\");\nfor(i = 0; i &lt; 10; ++i)\n{\n    var item = document.createElement(\"li\");\n    for(j = 1; j &lt;= 26; ++j)\n    {\n        var link = document.createElement(\"a\");\n        link.setAttribute(\"href\", alphaToChar(j) + \".html\");\n        link.innerText = alphaToChar(j);\n        item.appendChild(link);\n    }\n    list.appendChild(item);\n}\ndocument.getElementById(\"foo\").appendChild(list);\n</code></pre>\n\n<p>At this level they start to become quite similar length wise.</p>\n\n<p>But the DOM code will be easier to maintain, and you're a bit less likely to make a typo or mistake that is hard to diagnose, like omitting a closing tag.  Either your elements will be in your document, or they won't.</p>\n\n<ul>\n<li>With more complicated scenarios (like building treed menus), you'll probably come out ahead with DOM code.</li>\n<li>With scenarios where you have to append multiple types of content together to build a document with more heterogeneous content, it becomes a slam dunk.  You don't have to ensure you call your child append code before calling the parent append code.</li>\n<li>With scenarios where add, remove, or modify existing static content, DOM will usually win.</li>\n</ul>\n\n<p>If you start doing complicated DOM modifications (one of the last things I mentioned), you'll definitely want to check out a library built around DOM modifications, <a href=\"http://jquery.com/\" rel=\"nofollow\">like jQuery</a>.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I have seen a few different methods to add elements to the DOM. The most prevelent seem to be, for example, either </p>\n\n<pre><code>document.getElementById('foo').innerHTML ='&lt;p&gt;Here is a brand new paragraph!&lt;/p&gt;';\n</code></pre>\n\n<p>or</p>\n\n<pre><code>newElement = document.createElement('p');\nelementText = document.createTextNode('Here is a brand new parahraph!');\nnewElement.appendChild(elementText);\ndocument.getElementById('foo').appendChild(newElement);\n</code></pre>\n\n<p>but I'm not sure of the advantages to doing either one. Is there a rule of thumb as to when one should be done over the other, or is one of these just flat out wrong?</p>\n",
            "last_activity_date": 1386956928,
            "question_id": 8461851,
            "score": 17,
            "tags": [
                "javascript",
                "dom",
                "appendchild"
            ],
            "title": "What is better, appending new elements via DOM functions, or appending strings with HTML tags?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>if don't know if this is most effective, but perhaps the shortest</p>\n\n<pre><code>A = [1, 2, 3, 4];\nB = [1, 3, 4, 7];\n\ndiff = A.filter(function(x) { return B.indexOf(x) &lt; 0 })\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>This works, but I think another one is much more shorter, and elegant too</p>\n\n<pre><code>A = [1, 'a', 'b', 12];\nB = ['a', 3, 4, 'b'];\n\ndiff_set = {\n    ar : {},\n    diff : Array(),\n    remove_set : function(a) { ar = a; return this; },\n    remove: function (el) {\n        if(ar.indexOf(el)&lt;0) this.diff.push(el);\n    }\n}\n\nA.forEach(diff_set.remove_set(B).remove,diff_set);\nC = diff_set.diff;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use an object as a map to avoid linearly scanning <code>B</code> for each element of <code>A</code> as in <a href=\"http://stackoverflow.com/questions/1723168/what-is-the-fastest-or-most-elegant-way-to-compute-a-set-difference-using-javascr/1723220#1723220\">user187291's answer</a>:</p>\n\n<pre><code>function setMinus(A, B) {\n    var map = {}, C = [];\n\n    for(var i = B.length; i--; )\n        map[B[i].toSource()] = null; // any other value would do\n\n    for(var i = A.length; i--; ) {\n        if(!map.hasOwnProperty(A[i].toSource()))\n            C.push(A[i]);\n    }\n\n    return C;\n}\n</code></pre>\n\n<p>The non-standard <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Object/toSource\"><code>toSource()</code> method</a> is used to get unique property names; if all elements already have unique string representations (as is the case with numbers), you can speed up the code by dropping the <code>toSource()</code> invocations.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Incorporating the idea from Christoph and assuming a couple of non-standard iteration methods on arrays and objects/hashes (<code>each</code> and friends), we can get set difference, union and intersection in linear time in about 20 lines total:</p>\n\n<pre><code>var setOPs = {\n  minusAB : function (a, b) {\n    var h = {};\n    b.each(function (v) { h[v] = true; });\n    return a.filter(function (v) { return !h.hasOwnProperty(v); });\n  },\n  unionAB : function (a, b) {\n    var h = {}, f = function (v) { h[v] = true; };\n    a.each(f);\n    b.each(f);\n    return myUtils.keys(h);\n  },\n  intersectAB : function (a, b) {\n    var h = {};\n    a.each(function (v) { h[v] = 1; });\n    b.each(function (v) { h[v] = (h[v] || 0) + 1; });\n    var fnSel = function (v, count) { return count &gt; 1; };\n    var fnVal = function (v, c) { return v; };\n    return myUtils.select(h, fnSel, fnVal);\n  }\n};\n</code></pre>\n\n<p>This assumes that <code>each</code> and <code>filter</code> are defined for arrays, and that we have two utility methods: </p>\n\n<ul>\n<li><p><code>myUtils.keys(hash)</code>: returns an\narray with the keys of the hash</p></li>\n<li><p><code>myUtils.select(hash, fnSelector,\nfnEvaluator)</code>:  returns an array with\nthe results of calling <code>fnEvaluator</code>\non the key/value pairs for which\n<code>fnSelector</code> returns true.</p></li>\n</ul>\n\n<p>The <code>select()</code> is loosely inspired by Common Lisp, and is merely <code>filter()</code> and <code>map()</code> rolled into one. (It would be better to have them defined on <code>Object.prototype</code>, but doing so wrecks havoc with jQuery, so I settled for static utility methods.)</p>\n\n<p>Performance: Testing with</p>\n\n<pre><code>var a = [], b = [];\nfor (var i = 100000; i--; ) {\n  if (i % 2 !== 0) a.push(i);\n  if (i % 3 !== 0) b.push(i);\n}\n</code></pre>\n\n<p>gives two sets with 50,000 and 66,666 elements. With these values A-B takes about 75ms, while union and intersection are about 150ms each. (Mac Safari 4.0, using Javascript Date for timing.)</p>\n\n<p>I think that's decent payoff for 20 lines of code.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I would hash the array B, then keep values from the array A not present in B:</p>\n\n<pre><code>function getHash(array){\n  // Hash an array into a set of properties\n  //\n  // params:\n  //   array - (array) (!nil) the array to hash\n  //\n  // return: (object)\n  //   hash object with one property set to true for each value in the array\n\n  var hash = {};\n  for (var i=0; i&lt;array.length; i++){\n    hash[ array[i] ] = true;\n  }\n  return hash;\n}\n\nfunction getDifference(a, b){\n  // compute the difference a\\b\n  //\n  // params:\n  //   a - (array) (!nil) first array as a set of values (no duplicates)\n  //   b - (array) (!nil) second array as a set of values (no duplicates)\n  //\n  // return: (array)\n  //   the set of values (no duplicates) in array a and not in b, \n  //   listed in the same order as in array a.\n\n  var hash = getHash(b);\n  var diff = [];\n  for (var i=0; i&lt;a.length; i++){\n    var value = a[i];\n    if ( !hash[value]){\n      diff.push(value);\n    }\n  }\n  return diff;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The shortest is:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>A = [1, 2, 3, 4];\r\nB = [1, 3, 4, 7];\r\n\r\ndiff = $(A).not(B);</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Let <code>A</code> and <code>B</code> be two sets. I'm looking for <em>really</em> fast or elegant ways to compute the set difference (<code>A - B</code> or <code>A \\B</code>, depending on your preference) between them. The two sets are stored and manipulated as Javascript arrays, as the title says.</p>\n\n<p>Notes:</p>\n\n<ul>\n<li>Gecko-specific tricks are okay</li>\n<li>I'd prefer sticking to native functions (but I am open to a lightweight library if it's way faster)</li>\n<li>I've seen, but not tested, <a href=\"http://jsclass.jcoglan.com/set.html\">JS.Set</a> (see previous point)</li>\n</ul>\n\n<p><strong>Edit:</strong> I noticed a comment about sets containing duplicate elements. When I say \"set\" I'm referring to the mathematical definition, which means (among other things) that they do not contain duplicate elements.</p>\n",
            "last_activity_date": 1413443633,
            "question_id": 1723168,
            "score": 17,
            "tags": [
                "javascript",
                "arrays",
                "set-difference"
            ],
            "title": "What is the fastest or most elegant way to compute a set difference using Javascript arrays?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The <code>orderBy</code> only works with Arrays -- See <a href=\"http://docs.angularjs.org/api/ng.filter:orderBy\">http://docs.angularjs.org/api/ng.filter:orderBy</a></p>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>You're going to have to reformat your releases object to be an <strong>array</strong> of objects. Then you'll be able to sort them the way you're attempting.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As mentioned, only arrays are allowed. But to make it simple for you, you could dynamically convert the object into an array via a piping function as seen here\n<a href=\"https://gist.github.com/brev/3949705\">https://gist.github.com/brev/3949705</a></p>\n\n<p>Just declare the filter, and add it to ng-repeat :)</p>\n\n<pre><code>&lt;div ng-app=\"myApp\"&gt;\n&lt;script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.0.8/angular.min.js\"&gt;&lt;/script&gt;\n&lt;div ng-controller=\"Main\"&gt;\n  &lt;div ng-repeat=\"release in releases | object2Array | orderBy:'environment_id'\"&gt;{{release.environment_id}}&lt;/div&gt;\n&lt;/div&gt;\n\n&lt;script&gt;\n\nvar app = angular.module('myApp', []).filter('object2Array', function() {\n    return function(input) {\n      var out = []; \n      for(i in input){\n        out.push(input[i]);\n      }\n      return out;\n    }\n  })\n.controller('Main',function ($scope) {\n        $scope.releases = {\"tvl-c-wbap001 + tvl-webapp\":{\"timestamp\":\" 05:05:53 PM \",\"environment_id\":\"CERT5\",\"release_header\":\"Projects/Dev\",\"date\":\"19 Oct\",\"release\":\"12.11.91-1\"},\"tvl-c-wbap401 + tvl-webapp\":{\"timestamp\":\" 10:07:25 AM \",\"environment_id\":\"CERT4\",\"release_header\":\"Future Release\",\"date\":\"15 Oct\",\"release\":\"485-1\"},\"tvl-c-wbap301 + tvl-webapp\":{\"timestamp\":\" 07:59:48 AM \",\"environment_id\":\"CERT3\",\"release_header\":\"Next Release\",\"date\":\"15 Oct\",\"release\":\"485-1\"},\"tvl-c-wbap201 + tvl-webapp\":{\"timestamp\":\" 03:34:07 AM \",\"environment_id\":\"CERT2\",\"release_header\":\"Next Changes\",\"date\":\"15 Oct\",\"release\":\"13.12.3-1\"},\"tvl-c-wbap101 + tvl-webapp\":{\"timestamp\":\" 12:44:23 AM \",\"environment_id\":\"CERT1\",\"release_header\":\"Production Mirror\",\"date\":\"15 Oct\",\"release\":\"13.11.309-1\"},\"tvl-s-wbap002 + tvl-webapp\":{\"timestamp\":\" 12:43:23 AM \",\"environment_id\":\"Stage2\",\"date\":\"15 Oct\",\"release\":\"13.11.310-1\"},\"tvl-s-wbap001 + tvl-webapp\":{\"timestamp\":\" 11:07:38 AM \",\"environment_id\":\"Stage1\",\"release_header\":\"Production Mirror\",\"date\":\"11 Oct\",\"release\":\"13.11.310-1\"},\"tvl-p-wbap001 + tvl-webapp\":{\"timestamp\":\" 11:39:25 PM \",\"environment_id\":\"Production\",\"release_header\":\"Pilots\",\"date\":\"14 Oct\",\"release\":\"13.11.310-1\"},\"tvl-p-wbap100 + tvl-webapp\":{\"timestamp\":\" 03:27:53 AM \",\"environment_id\":\"Production\",\"release_header\":\"Non Pilots\",\"date\":\"11 Oct\",\"release\":\"13.11.309-1\"}}\n    });\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 42
                },
                {
                    "body": "<p>in Eike Thies's response above, if we use underscore.js, filter could be simplified to :</p>\n\n<pre><code>var app = angular.module('myApp', []).filter('object2Array', function() {\n  return function(input) {\n    return _.toArray(input);\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>the built-in orderBy filter will no longer work when iterating an object. It\u2019s ignored due to the way that object fields are stored. You need create a custom filter</p>\n\n<pre><code>yourApp.filter('orderObjectBy', function() {\n  return function(items, field, reverse) {\n    var filtered = [];\n    angular.forEach(items, function(item) {\n      filtered.push(item);\n    });\n    filtered.sort(function (a, b) {\n      return (a[field] &gt; b[field] ? 1 : -1);\n    });\n    if(reverse) filtered.reverse();\n    return filtered;\n  };\n});\n\n&lt;ul&gt;\n&lt;li ng-repeat=\"item in items | orderObjectBy:'color':true\"&gt;{{ item.color }}&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I've tried many examples of ng-repeat with orderBy, but I can't make my json work with it.</p>\n\n<pre><code>&lt;div ng-app&gt;\n    &lt;script type=\"text/javascript\" src=\"http://code.angularjs.org/1.0.1/angular-1.0.1.js\"&gt;&lt;/script&gt;\n    &lt;div ng:controller=\"Main\"&gt;\n        &lt;div ng-repeat=\"release in releases| orderBy:'environment_id'\"&gt;      \n            {{release.environment_id}}\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>And the JSON</p>\n\n<pre><code>function Main($scope) {\n$scope.releases = {\n    \"tvl-c-wbap001 + tvl-webapp\": {\n        \"timestamp\": \" 05:05:53 PM \",\n        \"environment_id\": \"CERT5\",\n        \"release_header\": \"Projects/Dev\",\n        \"date\": \"19 Oct\",\n        \"release\": \"12.11.91-1\"\n    },\n    \"tvl-c-wbap401 + tvl-webapp\": {\n        \"timestamp\": \" 10:07:25 AM \",\n        \"environment_id\": \"CERT4\",\n        \"release_header\": \"Future Release\",\n        \"date\": \"15 Oct\",\n        \"release\": \"485-1\"\n    },\n    \"tvl-c-wbap301 + tvl-webapp\": {\n        \"timestamp\": \" 07:59:48 AM \",\n        \"environment_id\": \"CERT3\",\n        \"release_header\": \"Next Release\",\n        \"date\": \"15 Oct\",\n        \"release\": \"485-1\"\n    },\n    \"tvl-c-wbap201 + tvl-webapp\": {\n        \"timestamp\": \" 03:34:07 AM \",\n        \"environment_id\": \"CERT2\",\n        \"release_header\": \"Next Changes\",\n        \"date\": \"15 Oct\",\n        \"release\": \"13.12.3-1\"\n    },\n    \"tvl-c-wbap101 + tvl-webapp\": {\n        \"timestamp\": \" 12:44:23 AM \",\n        \"environment_id\": \"CERT1\",\n        \"release_header\": \"Production Mirror\",\n        \"date\": \"15 Oct\",\n        \"release\": \"13.11.309-1\"\n    },\n    \"tvl-s-wbap002 + tvl-webapp\": {\n        \"timestamp\": \" 12:43:23 AM \",\n        \"environment_id\": \"Stage2\",\n        \"date\": \"15 Oct\",\n        \"release\": \"13.11.310-1\"\n    },\n    \"tvl-s-wbap001 + tvl-webapp\": {\n        \"timestamp\": \" 11:07:38 AM \",\n        \"environment_id\": \"Stage1\",\n        \"release_header\": \"Production Mirror\",\n        \"date\": \"11 Oct\",\n        \"release\": \"13.11.310-1\"\n    },\n    \"tvl-p-wbap001 + tvl-webapp\": {\n        \"timestamp\": \" 11:39:25 PM \",\n        \"environment_id\": \"Production\",\n        \"release_header\": \"Pilots\",\n        \"date\": \"14 Oct\",\n        \"release\": \"13.11.310-1\"\n    },\n    \"tvl-p-wbap100 + tvl-webapp\": {\n        \"timestamp\": \" 03:27:53 AM \",\n        \"environment_id\": \"Production\",\n        \"release_header\": \"Non Pilots\",\n        \"date\": \"11 Oct\",\n        \"release\": \"13.11.309-1\"\n    }\n}\n</code></pre>\n\n<p>It doesn't matter what I write, I always get the same order, or I may say, no order at all.</p>\n\n<p>Please, help!</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1416604269,
            "question_id": 19387552,
            "score": 16,
            "tags": [
                "javascript",
                "json",
                "angularjs",
                "angularjs-ng-repeat"
            ],
            "title": "Angular - Can&#39;t make ng-repeat orderBy work"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>if a search engine also cannot see the generated HTML then there is not much to index</p>\n</blockquote>\n\n<p>That about sums it up.  Technically nothing is stopping a search engine from implementing a javascript engine for their bot/spider, but it's just not normally done.  They could, but they won't.</p>\n\n<p>On the other hand, you can sniff a search engine's user agent and serve it something readable.  But search engines don't usually like this and will penalize you pretty severely if they detect differences with what you send to a normal browser.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Google is working on executing simple Javascript to uncover some content - but they certainly dont execute full scripts.  If you are worried about SEO, then you need to consider providing static versions of pages.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A good rule of thumb: If you can see it in <a href=\"http://en.wikipedia.org/wiki/Lynx%5F%28web%5Fbrowser%29\" rel=\"nofollow\">Lynx</a>, it can indexed by Google.</p>\n\n<p>Lynx is an excellent test because it also gives you an idea of how screen readers for the blind will see your page as well.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Your suspicion is correct - JS-generated content cannot be relied on to be visible to search bots.  It also can't be seen by anyone with JS turned off - and, last time I added some tests to a site I was working on (which was a large, mainstream-audience site, with  hundreds of thousands of unique vistors per month), approx 10% of users were not running Javascript in any form.  That includes search bots, PC browsers with JS disabled, many mobiles, blind people using screenreaders... etc etc.</p>\n\n<p>This is why content generated via JS (with no fallback option) is a Really Bad Idea.</p>\n\n<p>Back to basics. First, create your site using <strong>bare-bones (X)HTML</strong>, on REST-like principles (at least to the extent of requiring POST requests for state changes). Simple semantic markup, and forget about CSS and Javascript.</p>\n\n<p>Step one is to get that right, and have your entire site (or as much of it as makes sense) working nicely this way for search bots and Lynx-like user agents.</p>\n\n<p>Then add a <strong>visual layer</strong>: CSS/graphics/media for visual polish, but don't significantly change your original (X)HTML markup; allow the original text-only site to stay intact and functioning. Keep your markup clean!</p>\n\n<p>Third is to add a <strong>behavioural layer</strong>: Javascript (Ajax). Offer things that make the experience faster, smoother, nicer for users/browsers with Ajax-capable JS... but only those users. Users without Javascript are still welcome; and so are search bots, the visually impaired, many mobiles, etc.</p>\n\n<p>This is called <strong>progressive enhancement</strong> in web design circles. Do it this way and your site works, in some reasonable form, for everyone.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>There are a few ways to handle this in GWT, <a href=\"http://groups.google.com/group/Google-Web-Toolkit/browse%5Fthread/thread/8fe6a3d2eaab80bb/\" rel=\"nofollow\">this</a> is a great discussion on the subject.\nSeems like the best option is to serve up static SEO content when the user-agent is a bot, as long as the SEO content is identical to what is served via the GWT route. This can be a lot of work, but if you really want a fully rich GWT app that is optimized for search engines it may be worth it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Take a look to the <a href=\"http://itsnat.sourceforge.net/php/spim/spi_manifesto_en.php\" rel=\"nofollow\">Single Page Interface</a> Manifesto of how a SPI (AJAX intensive) application can get indexed by Google and other crawlers. How hard is depends on the web framework used.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Can search engines such as Google index JavaScript generated web pages? When you right click and select view source in a page that is generated by JavaScript (e.g using GWT) you do not see the dynamically generated HTML. I suppose that if a search engine also cannot see the generated HTML then there is not much to index, right?</p>\n",
            "last_activity_date": 1299330521,
            "question_id": 826275,
            "score": 15,
            "tags": [
                "javascript",
                "html",
                "gwt",
                "dynamic",
                "search-engine"
            ],
            "title": "Can search engines index JavaScript generated web pages?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>In Firefox, SVG images taint the canvas but we're working on removing that restriction in <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=672013\">https://bugzilla.mozilla.org/show_bug.cgi?id=672013</a> when that bug lands what you're trying to do should be possible. <strong>This restriction has been removed in FFv12.</strong></p>\n\n<p>All browsers implement similar restrictions and all are working on removing them; generally by making what you can do in SVG images more restricted. For instance we don't want to get back to the bad old days of being able to work out what sites you've visited by creating an SVG image with links in it and then reading off the colour of the links using canvas.</p>\n\n<p>In addition at the moment firefox requires that the svg element have width and height attributes in order to render to canvas. This restriction may be removed in future.</p>\n\n<p><em>Edit by Phrogz: as noted in my comment above, I received independent confirmation that the security issue in Chrome is the same issue: Chrome (currently) always taints a canvas when an SVG document is drawn to it.</em></p>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>In order to answer <a href=\"http://stackoverflow.com/questions/5433806/convert-embedded-svg-to-png-in-place\">this question</a> properly I thought that I would:</p>\n\n<ol>\n<li>Convert an in-document SVG file to a data URL</li>\n<li>Load it into an <code>&lt;img&gt;</code></li>\n<li>Draw that <code>&lt;img&gt;</code> to a <code>&lt;canvas&gt;</code></li>\n<li>Convert that <code>&lt;canvas&gt;</code> to a PNG data URL</li>\n<li>Load that data URL into an image.</li>\n</ol>\n\n<p>I have an example of this attempt here:<br>\n<a href=\"http://phrogz.net/SVG/svg_to_png.xhtml\">http://phrogz.net/SVG/svg_to_png.xhtml</a></p>\n\n<p>In Firefox I get <code>(NS_ERROR_NOT_AVAILABLE) [nsIDOMCanvasRenderingContext2D.drawImage]</code> when attempting to draw the image to the canvas in step 3.</p>\n\n<p><strong>Why do I get this error in Firefox, or how do I work around it?</strong></p>\n\n<p>In Chrome I get a <code>SECURITY_ERR</code> exception when I try to call <code>toDataURL()</code> in step 4.</p>\n\n<p><strong>Why would I get this error in Chrome, or how do I work around it?</strong></p>\n\n<p><em>The <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/origin-0.html#origin\">WhatWG specs</a> state that the</em> origin <em>for an image \"generated from a data: URL found in another Document or in a script\" should be the same as that document. All data in this test is from the same document.</em></p>\n",
            "last_activity_date": 1335365713,
            "question_id": 8158312,
            "score": 14,
            "tags": [
                "javascript",
                "html5",
                "canvas",
                "svg"
            ],
            "title": "Rasterizing an in-document SVG to Canvas"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Change all the double quotes for the attributes to single quotes.</p>\n\n<pre><code>$(\"#addSelect\").click(function() { \n        $(\"#optionsForm\").after(\"&lt;tr&gt; \\\n    &lt;td&gt;&lt;input type='text' class='optionField' value='Options' /&gt;&lt;/td&gt; \\\n    &lt;td&gt; \\\n        &lt;ul class='option'&gt; \\\n            &lt;li&gt;&lt;select&gt;&lt;option&gt;Value..&lt;/option&gt;&lt;/select&gt;&lt;/li&gt; \\\n        &lt;/ul&gt; \\\n    &lt;/td&gt; \\\n&lt;/tr&gt;\"); \n} ); \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>a cleaner approach is to create <code>&lt;script&gt;...&lt;/script&gt;</code></p>\n\n<p><a href=\"http://stackoverflow.com/a/12097933/1416458\">http://stackoverflow.com/a/12097933/1416458</a></p>\n\n<pre><code>&lt;script id=\"stuff_you_want\"&gt;\n&lt;tr&gt;\n    &lt;td&gt;&lt;input type=\"text\" class=\"optionField\" value=\"Options\" /&gt;&lt;/td&gt;\n    &lt;td&gt;\n        &lt;ul class=\"option\"&gt;\n            &lt;li&gt;&lt;select&gt;&lt;option&gt;Value..&lt;/option&gt;&lt;/select&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/td&gt;\n&lt;/tr&gt;\n&lt;/script&gt;\n\n&lt;script&gt;\n\n    // pure javascript\n    var text = document.getElementById(\"stuff_you_want\").innerHTML ;\n\n    //or using jQuery... (document ready for safety)\n    $(document).ready(function() {\n\n        var text = $(\"#stuff_you_want\").html(); \n\n    }\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<pre><code>$(\"#addSelect\").click(function() {\n        $(\"#optionsForm\").after(\"Hello world.\");\n} );\n</code></pre>\n\n<p>This works.</p>\n\n<pre><code>$(\"#addSelect\").click(function() {\n        $(\"#optionsForm\").after(\"&lt;tr&gt;\n    &lt;td&gt;&lt;input type=\"text\" class=\"optionField\" value=\"Options\" /&gt;&lt;/td&gt;\n    &lt;td&gt;\n        &lt;ul class=\"option\"&gt;\n            &lt;li&gt;&lt;select&gt;&lt;option&gt;Value..&lt;/option&gt;&lt;/select&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/td&gt;\n&lt;/tr&gt;\");\n} );\n</code></pre>\n\n<p>Something like this doesn't. </p>\n\n<p>In Chrome, I get the error \"<strong>Unexpected token ILLEGAL</strong>\". After Googling I've discovered my teeny brain doesn't know much about javascript and multi-lines. So I added '\\' to then end of each line. Yet, I now get the error \"<strong>Unexpected identifier</strong>\".</p>\n\n<p>I'd like this to not be as difficult as I'm making it :)</p>\n",
            "last_activity_date": 1348063361,
            "question_id": 3115360,
            "score": 14,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Multi-line string insert using jQuery"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You will have to add hash <code>#</code> if you want to prevent page from reloading.</p>\n\n<p>The css-tricks.com has an excellent screencast on that, have a look at:</p>\n\n<p><a href=\"http://css-tricks.com/video-screencasts/85-best-practices-dynamic-content/\">Best Practices with Dynamic Content</a></p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>You can't. Only if you change the hash, like sAc told you.</p>\n\n<p>But.. May I ask WHY? </p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>You <strong>CAN</strong> do that. Though likely you'll need a modern browser. Have a look at this page: <a href=\"http://www.20thingsilearned.com/\" rel=\"nofollow\">http://www.20thingsilearned.com/</a> created by the Google Chrome team (I used Chrome 9 to read it). Changing pages doesn't reload the entire web page, but changes the URL.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>its now possible with HTML_5..</p>\n\n<p>chack this link... <a href=\"http://www.spoiledmilk.dk/blog/?p=1922\">http://www.spoiledmilk.dk/blog/?p=1922</a></p>\n\n<p>also facebook and google using this tric beside Hash(#) attribute</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>This is possible in HTML5. See a demo <strong><a href=\"http://rebugged.com/code/html5/history.htm\">here</a></strong>.</p>\n\n<p>You can change the URL to another URL within the same domain, but can not change the domain for security reasons.</p>\n\n<p>See the <code>history</code> interface in <a href=\"http://www.w3.org/TR/html5-author/history.html#history-0\">HTML5 specification</a> for details.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Yes, it is possible using the HTML5 History API. Check <a href=\"http://diveintohtml5.info/history.html\" rel=\"nofollow\">this page</a>  and <a href=\"http://diveintohtml5.info/examples/history/fer.html\" rel=\"nofollow\">this example</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>just use this one </p>\n\n<pre><code>window.history.pushState(\"object or string\", \"Title\", \"/new-url\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I would like to know if it's possible to change the contents of the URL in the browser without reloading the page?</p>\n\n<p>I use jQuery and Ajax to load new parts of my page. When I choose \"product one\", the direct link would be <code>mysite.com/product1</code> and for \"product two\" would be <code>mysite.com/product2</code>, but I don't want to reload the site to these pages.</p>\n",
            "last_activity_date": 1385687147,
            "question_id": 3381280,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "Changing the URL without reloading the page"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can add a pseudo-scrollbar anywhere you want with <a href=\"http://jquery.com/\" rel=\"nofollow\">JQuery</a> and this plug-in: <a href=\"http://jscrollpane.kelvinluck.com\" rel=\"nofollow\">JScrollPane</a></p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>Okay, so, I wrote a jQuery plugin to give you a completely-native-looking left scroll bar. </p>\n\n<p><a href=\"http://thirdroute.com/projects/left-scrollbars/\" rel=\"nofollow\"><strong>Left Scrollbar Hack Demo</strong></a></p>\n\n<p>Here's how it works:</p>\n\n<ol>\n<li><p>Inject an inner <code>div</code> inside the pane to allow calculation of the content width (<code>content_width</code>). Then, using this, the native scrollbar width can be calculated: <code>scrollbar_width = parent_width - content_width - horizontal_padding</code> .</p></li>\n<li><p>Make two different <code>divs</code> inside the pane, both filled with the content. </p>\n\n<ul>\n<li><p>One's purpose is being a \"poser\". It's used <em>solely</em> for the scrollbar. Using a negative left margin, the plugin pulls it left so that only the scrollbar is in view (the content of this <code>div</code> is clipped off at the edge).</p></li>\n<li><p>The other <code>div</code> is used to actually house the visible scrolling content.</p></li>\n</ul></li>\n<li><p>Now, it's time to bind the two together. Every 50ms (<code>window.setInterval</code>), the <code>scrollTop</code> offset from the \"poser\" <code>div</code> is applied to the visible, scrolling content <code>div</code>. So, when you scroll up or down with the scrollbar on the <em>left</em>, the scroll offset gets applied back on the <code>div</code> with the visible content. </p></li>\n</ol>\n\n<p>This explanation probably sucks and there's actually a quite a bit more to it that I didn't describe, but, without further ado, here it is:</p>\n\n<pre><code>$.fn.leftScrollbar = function(){\n    var items = $(this);\n    $(function(){\n        items.each(function(){\n            var e = $(this);\n            var content = e.html();\n            var ie = !jQuery.support.boxModel;\n            var w = e[ie?'innerWidth':'width'](), h = e[ie?'innerHeight':'height']();\n            //calculate paddings\n            var pad = {};\n            $(['top', 'right', 'bottom', 'left']).each(function(i, side){\n                pad[side] = parseInt(e.css('padding-' + side).replace('px',''));\n            });\n            //detect scrollbar width\n            var xfill = $('&lt;div&gt;').css({margin:0, padding:0, height:'1px'});\n            e.append(xfill);\n            var contentWidth = xfill.width();\n            var scrollerWidth = e.innerWidth() - contentWidth - pad.left - pad.right;\n            e.html('').css({overflow:'hidden'});\n            e.css('padding', '0');\n\n            var poserHeight = h - pad.top - pad.bottom;\n            var poser = $('&lt;div&gt;')\n                .html('&lt;div style=\"visibility:hidden\"&gt;'+content+'&lt;/div&gt;')\n                .css({\n                    marginLeft: -w+scrollerWidth-(ie?0:pad.left*2),\n                    overflow: 'auto'\n                })\n                .height(poserHeight+(ie?pad.top+pad.bottom:0))\n                .width(w);\n\n            var pane = $('&lt;div&gt;').html(content).css({\n                width: w-scrollerWidth-(ie?0:pad.right+pad.left),\n                height: h-(ie?0:pad.bottom+pad.top),\n                overflow: 'hidden',\n                marginTop: -poserHeight-pad.top*2,\n                marginLeft: scrollerWidth\n            });\n\n            $(['top', 'right', 'bottom', 'left']).each(function(i, side){\n                 poser.css('padding-'+side, pad[side]);\n                 pane.css('padding-'+side, pad[side]);\n            });\n            e.append(poser).append(pane);\n\n            var hRatio = (pane.innerHeight()+pad.bottom) / poser.innerHeight();\n            window.setInterval(function(){\n                pane.scrollTop(poser.scrollTop()*hRatio);\n            }, 50);\n        });\n    });\n};\n</code></pre>\n\n<p>Once you've included jQuery and this plugin in the page, apply the left scroll bar:</p>\n\n<pre><code>$('#scrollme').leftScrollbar();\n</code></pre>\n\n<p>Replace <code>#scrollme</code> with the CSS selector to the element(s) you wish to apply left scrollbars to.</p>\n\n<p>(and, obviously, this degrades nicely)</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I had a simple use case so opted for a simple css solution:</p>\n\n<pre><code>&lt;div style=\"direction: rtl; height: 250px; overflow: scroll;\"&gt;\n  &lt;div style=\"direction: ltr; padding: 3px;\"&gt;\n     Content goes here\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 33
                }
            ],
            "body": "<p>Is it possible to put DIV's Vertical Scroll bar on left of the div with css? what about jscript?</p>\n",
            "last_activity_date": 1370627645,
            "question_id": 1455708,
            "score": 13,
            "tags": [
                "javascript",
                "html",
                "css"
            ],
            "title": "DIV Vertical Scroll bar on left"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Remove the click event of the button, that forces second validation I think.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>remove the onclientclick event of button there is no need for that </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is no need to manually call the <code>Page_ClientValidate</code> function, unless you're wanting to do the validation outside of a postback attempt.</p>\n\n<p>Set the buttons <a href=\"http://msdn.microsoft.com/en-us/library/system.web.ui.webcontrols.button.causesvalidation.aspx\" rel=\"nofollow\">CausesValidation</a> to <code>true</code>. That'll run the validation.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Hey there.First of all you should loose the ValidationGroup=\"ContactGroup\" from the button because having validation group in it will first call the validation on the page then the OnClientClick event that contains the validate function which will call the page validation once again.</p>\n\n<p>Then you should pass the validation group \"ContactGroup\" to the Page_ClientValidate() function so it knows which controls to validate because simply calling Page_ClientValidate() will validate all controls regardless of their validation group(and it may display the validation message more than once, depending on how many validation groups you have).</p>\n\n<p>In short do something like this:</p>\n\n<pre><code>function validate() //javascript function\n{\n    if (typeof(Page_ClientValidate) == 'function') \n    {\n        var isPageValid = Page_ClientValidate('ContactGroup');\n        if(isPageValid)\n        {\n          //your custom code\n        }\n    }\n}    \n\n&lt;asp:textbox id=\"txtMyBox\" runat=\"server\"/&gt;\n&lt;asp:requiredFieldValidator Id=\"rfv1\" runat=\"server\" ControlToValidate=\"txtMyBox\"\nValidationGroup=\"ContactGroup\" ErrorMessage=\"Bad!\"/&gt;\n\n&lt;asp:Button ID=\"btn1\" runat=\"server\" OnClientClick=\"validate()\" Text=\"button\"/&gt;\n\n&lt;asp:ValidationSummary ID=\"ValidationSummary1\" runat=\"server\" DisplayMode=\"List\" \n                    ShowMessageBox=\"true\" ShowSummary=\"false\" ValidationGroup=\"ContactGroup\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>just return false from the function and change the OnClientClick as shown below:</p>\n\n<pre><code>&lt;asp:Button ID=\"btn1\" runat=\"server\" OnClientClick=\"return validate();\" Text=\"button\" \n                        ValidationGroup=\"ContactGroup\" /&gt; \n\n        function validate() //javascript function   \n        {   \n            if (typeof(Page_ClientValidate) == 'function')    \n            {   \n                var isPageValid = Page_ClientValidate();   \n                if(isPageValid)   \n                {   \n                }   \n            }   \n        return false;\n\n} \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The problem is that the function Page_ClientValidate takes an input parameter, if you don't specify the input then the validationsummary triggers once per groupname.</p>\n\n<p>In your case, the function triggers twice: once for groupname=\"ContactGroup\" and another time for groupname=\"\"</p>\n\n<p>you should change</p>\n\n<pre><code>var isPageValid = Page_ClientValidate();\n</code></pre>\n\n<p>to</p>\n\n<pre><code>var isPageValid = Page_ClientValidate('');\n</code></pre>\n\n<p>if you don't want to specify a ValidationGroup, or if you want to specify a groupname then you need to call Page_ClientValidate like so:</p>\n\n<pre><code>var isPageValid = Page_ClientValidate('ContactGroup');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>You can make validation without show messages, use the following code segment,then use isPageValid variable:</p>\n\n<pre><code> if (Page_ValidationSummaries &amp;&amp; Page_ValidationSummaries[0] &amp;&amp; Page_ValidationSummaries[0].showmessagebox) {\n            var showMessagesOption = Page_ValidationSummaries[0].showmessagebox;\n            Page_ValidationSummaries[0].showmessagebox = \"False\";\n            isPageValid = Page_ClientValidate();\n            Page_ValidationSummaries[0].showmessagebox = showMessagesOption;\n        }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I know this is an old post, but here's a solution that may be more flexible. Similar to other users suggestions, this solution accepts the validation group that is passed by default by the asp.net validation controls. This way you would not need to add the    <code>OnClientClick=\"validate()\"</code> on the Button control.</p>\n\n<pre><code>//Make sure the Page_ClientValidate function exists\nif (typeof (Page_ClientValidate) == \"function\") {\n    //Stash the old implementation in a temp variable\n    Page_ClientValidateOld = Page_ClientValidate;\n\n    //Create a new implementation and store it\n    //in Page_ClientValidate. Callers will now get\n    //this implementation.\n    Page_ClientValidate = function (validationGroup) {\n        var isValid;\n\n        //Call the old implementation first\u2026\n        isValid = Page_ClientValidateOld(validationGroup);\n\n        //and then call our extension\n        if (!isValid) {\n            // Do something\n        }\n\n        return isValid;\n    }\n}\n</code></pre>\n\n<p>If you want to read more on this approach, I recommend that you look at this blog post:\n<a href=\"http://hyperthink.net/blog/interception-patterns-in-javascript/\" rel=\"nofollow\">http://hyperthink.net/blog/interception-patterns-in-javascript/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>problem i have is that, the validation summary message(alert) is displayed twice. I cannot figure out the reason.</p>\n\n<p>Please help.\nHere is the code</p>\n\n<pre><code>function validate() //javascript function\n{\n    if (typeof(Page_ClientValidate) == 'function') \n    {\n        var isPageValid = Page_ClientValidate();\n        if(isPageValid)\n        {\n        }\n    }\n}\n\n&lt;asp:Button ID=\"btn1\" runat=\"server\" OnClientClick=\"validate()\" Text=\"button\"\n                    ValidationGroup=\"ContactGroup\" /&gt;\n\n&lt;asp:ValidationSummary ID=\"ValidationSummary1\" runat=\"server\" DisplayMode=\"List\" \n                    ShowMessageBox=\"true\" ShowSummary=\"false\" ValidationGroup=\"ContactGroup\" /&gt;\n</code></pre>\n",
            "last_activity_date": 1401272180,
            "question_id": 969465,
            "score": 13,
            "tags": [
                "asp.net",
                "javascript",
                "validation"
            ],
            "title": "Page_ClientValidate is validating multiple times."
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You need a script on the server to move the file to the uploads directory. The jQuery ajax function (running in the browser) sends the form data to a server-side script that handles the upload. Here's an example using PHP.</p>\n\n<p>Your HTML is fine, but update your JS jQuery script to look like this:</p>\n\n<pre><code>$('#upload').on('click', function() {\n    var file_data = $('#sortpicture').prop('files')[0];   \n    var form_data = new FormData();                  \n    form_data.append('file', file_data);\n    alert(form_data);                             \n    $.ajax({\n                url: 'upload.php', // point to server-side PHP script \n                dataType: 'text',  // what to expect back from the PHP script, if anything\n                cache: false,\n                contentType: false,\n                processData: false,\n                data: form_data,                         \n                type: 'post',\n                success: function(php_script_response){\n                    alert(php_script_response); // display response from the PHP script, if any\n                }\n     });\n});\n</code></pre>\n\n<p>upload.php: this is the PHP script that directs the file to the uploads directory:</p>\n\n<pre><code>&lt;?php\n\n    if ( 0 &lt; $_FILES['file']['error'] ) {\n        echo 'Error: ' . $_FILES['file']['error'] . '&lt;br&gt;';\n    }\n    else {\n        move_uploaded_file($_FILES['file']['tmp_name'], 'uploads/' . $_FILES['file']['name']);\n    }\n\n?&gt;\n</code></pre>\n\n<p>Also, a couple things about the destination directory: 1) make sure you have the correct server path, i.e., starting at the PHP script, what is the path to the uploads directory, and 2) make sure it's writeable.</p>\n",
                    "is_accepted": true,
                    "score": 17
                }
            ],
            "body": "<p>I want to implement a simple file upload in my intranet-page, with the smallest setup possible.</p>\n\n<p>This is my HTML part:</p>\n\n<pre><code>&lt;input id=\"sortpicture\" type=\"file\" name=\"sortpic\" /&gt;\n&lt;button id=\"upload\"&gt;Upload&lt;/button&gt;\n</code></pre>\n\n<p>and this is my JS jquery script:</p>\n\n<pre><code>$(\"#upload\").on(\"click\", function() {\n    var file_data = $(\"#sortpicture\").prop(\"files\")[0];   \n    var form_data = new FormData();                  \n    form_data.append(\"file\", file_data)\n    alert(form_data);                             \n    $.ajax({\n                url: \"/uploads\",\n                dataType: 'script',\n                cache: false,\n                contentType: false,\n                processData: false,\n                data: form_data,                         \n                type: 'post',\n                success: function(){\n                    alert(\"works\"); \n                }\n     });\n});\n</code></pre>\n\n<p>There is a folder named \"uploads\" in the root directory of the website, with change permissions for \"users\" and \"IIS_users\".</p>\n\n<p>When I select a file with the file-form and press the upload button, the first alert returns \"[object FormData]\". the second alert doesn't get called and the\"uploads\" folder is empty too!?</p>\n\n<p>Can someone help my finding out whats wrong?</p>\n\n<p>Also the next step should be, to rename the file with a server side generated name. Maybe someone can give me a solution for this, too.</p>\n",
            "last_activity_date": 1425881354,
            "question_id": 23980733,
            "score": 12,
            "tags": [
                "javascript",
                "php",
                "jquery",
                "ajax",
                "upload"
            ],
            "title": "jquery ajax File Upload php"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>var size = 10;\nfor (var i=0; i&lt;bigarray.length; i+=size) {\n    var smallarray = bigarray.slice(i,i+size);\n    // do something with smallarray\n}\n</code></pre>\n\n<p>Unlike <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/splice\"><code>splice()</code></a>, <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/slice\"><code>slice()</code></a> is non-destructive to the original array.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Just loop over the array, splicing it until it's all consumed.</p>\n\n<pre><code>\n\nvar a = ['a','b','c','d','e','f','g']\n  , chunk\n\nwhile (a.length > 0) {\n\n  chunk = a.splice(0,3)\n\n  console.log(chunk)\n\n}\n\n</code></pre>\n\n<p>output</p>\n\n<pre><code>\n[ 'a', 'b', 'c' ]\n[ 'd', 'e', 'f' ]\n[ 'g' ]\n\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Assuming you don't want to destroy the original array, you can use code like this to break up the long array into smaller arrays which you can then iterate over:</p>\n\n<pre><code>var longArray = [];   // assume this has 100 or more email addresses in it\nvar shortArrays = [], i, len;\n\nfor (i = 0, len = longArray.length; i &lt; len; i += 10) {\n    shortArrays.push(longArray.slice(i, i + 10));\n}\n\n// now you can iterate over shortArrays which is an \n// array of arrays where each array has 10 or fewer \n// of the original email addresses in it\n\nfor (i = 0, len = shortArrays.length; i &lt; len; i++) {\n    // shortArrays[i] is an array of email addresss of 10 or less\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Don't use jquery...use plain javascript</p>\n\n<pre><code>var a = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15];\n\nvar b = a.splice(0,10);\n\n//a is now [11,12,13,14,15];\n//b is now [1,2,3,4,5,6,7,8,9,10];\n</code></pre>\n\n<p>You could loop this to get the behavior you want.</p>\n\n<pre><code>var a = YOUR_ARRAY;\nwhile(a.length) {\n    console.log(a.splice(0,10));\n}\n</code></pre>\n\n<p>This would give you 10 elements at a time...if you have say 15 elements, you would get 1-10, the 11-15 as you wanted.</p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>As a supplement to @jyore's <a href=\"http://stackoverflow.com/a/7273794/1778898\">answer</a>, and in case you still want to keep the original array:  </p>\n\n<pre><code>var originalArray = [1,2,3,4,5,6,7,8];\n\nvar splitArray = function (arr, size) {\n\n  var arr2 = arr.slice(0),\n      arrays = [];\n\n  while (arr2.length &gt; 0) {\n      arrays.push(arr2.splice(0, size));\n  }\n\n  return arrays;\n}\n\nsplitArray(originalArray, 2);\n// originalArray is still = [1,2,3,4,5,6,7,8];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have an array of e-mails (it can be just 1 email, or 100 emails), and I need to send the array with an ajax request (that I know how to do), but I can only send an array that has 10 or less e-mails in it. So if there is an original array of 20 e-mails I will need to split them up into 2 arrays of 10 each. or if there are 15 e-mails in the original array, then 1 array of 10, and another array of 5. I'm using jQuery, what would be the best way to do this? </p>\n",
            "last_activity_date": 1417380434,
            "question_id": 7273668,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "arrays",
                "loops"
            ],
            "title": "How to split a long array into smaller arrays, with JavaScript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You could use a javascript closure:</p>\n\n<pre><code>for (var i = 0; i &lt; arr.length; i++) {\n  (function(i) {\n    // do your stuff here\n  })(i);\n}\n</code></pre>\n\n<p>Or you could just use <code>$.each</code>:</p>\n\n<pre><code>var arr = [2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010];\n\n$.each(arr, function(index, value) {\n  $.ajaxSetup({ cache:false });\n  $.getJSON(\"NatGeo.jsp\", { ZipCode: value, Radius:   \n    document.getElementById(\"radius\").value, sensor: false },      \n    function(data) { \n      DrawZip(data, value);\n    }\n  );\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>I didn't read all 30 questions @Anurag listed, but I found the following callback syntax that seems to work:</p>\n\n<pre><code>(function(year) {\n  return (function(data) {DrawZip(data, year);});\n})(arr[i])\n</code></pre>\n\n<p>This replaces the original <code>function(data)</code>. Incidentally, the results are in random order, due to the asynchronous response</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have a for loop enclosing an ajax call and I'm trying to determine the best method for passing the index from the for loop to the callback function.  Here is my code:</p>\n\n<pre><code>var arr = [2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010];\n\nfor (var i = 0; i &lt; arr.length; i++)\n{\n  $.ajaxSetup({ cache:false })\n  $.getJSON(\"NatGeo.jsp\", { ZipCode: arr[i], Radius:   \n            document.getElementById(\"radius\").value, sensor: false },      \n            function(data)\n            { \n              DrawZip(data, arr[i]);\n        }\n  );\n}\n</code></pre>\n\n<p>Currently, only the last value of the arr array is passed due to the asynchronous ajax call.  How can I pass each iteration of the arr array to the callback function, aside from running the ajax call synchronously?</p>\n\n<p>Thank you very much in advance for any and all help.</p>\n",
            "last_activity_date": 1305928507,
            "question_id": 6077357,
            "score": 12,
            "tags": [
                "javascript",
                "ajax",
                "loops",
                "callback",
                "closures"
            ],
            "title": "passing index from for loop to ajax callback function (javascript)"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>Use the <code>element.checked</code> property. </p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<pre><code>var mailcopy = document.getElementById('mailCopy').checked; \n\nif(mailcopy==true)\n{\n  alert(\"Radio Button Checked\");\n}\nelse\n{\n  alert(\"Radio Button un-Checked\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Radio buttons come in groups which have the same name and different ids, one of them will have the checked property set to true, so loop over them until you find it.</p>\n\n<pre><code>function getCheckedRadio(radio_group) {\n    for (var i = 0; i &lt; radio_group.length; i++) {\n        var button = radio_group[i];\n        if (button.checked) {\n            return button;\n        }\n    }\n    return undefined;\n}\nvar checkedButton = getCheckedRadio(document.forms.frmId.elements.groupName);\nif (checkedButton) {\n    alert(\"The value is \" + checkedButton.value);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<pre><code>function getCheckedValue(radioObj, name) {\n\n    for (j = 0; j &lt; radioObj.rows.length; ++j) {\n        for (k = 0; k &lt; radioObj.cells.length; ++k) {\n            var radioChoice = document.getElementById(name + \"_\" + k);\n            if (radioChoice.checked) {\n                return radioChoice.value;\n            }\n        }\n    }\n    return \"\";\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you are using jQuery, following code will work for you.</p>\n\n<pre><code>$('input[name=radioName]:checked').val();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>check this</p>\n\n<pre><code>&lt;input class=\"gender\" type=\"radio\" name=\"sex\" value=\"male\"&gt;Male\n&lt;br&gt;\n&lt;input class=\"gender\" type=\"radio\" name=\"sex\" value=\"female\"&gt;Female\n\n\n&lt;script type=\"text/javascript\"&gt;\n$(document).ready(function () {\n$(\".gender\").change(function () {\n\n    var val = $('.gender:checked').val();\n    alert(val);\n});\n});\n\n&lt;/script&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/sanjaymv/da8P2/\" rel=\"nofollow\">Example</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>you can use this</p>\n\n<pre><code>$('input[name=\"field_value\"]:checked').val(); \n</code></pre>\n\n<p>or, for older version of jquery</p>\n\n<pre><code>$('input[@name=\"field_value\"]:checked').val();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>If you can use jQuery \"Chamika Sandamal\" answer is the correct way to go. In the case you can't use jQuery you can do something like this:</p>\n\n<pre><code>function selectedRadio() {\n    var radio = document.getElementsByName('mailCopy');\n    alert(radio[0].value);\n}\n</code></pre>\n\n<p><strong>Notes:</strong></p>\n\n<ul>\n<li>In general for the inputs you want to have unique IDs (not a requirement but a good practice)</li>\n<li>All the radio inputs that are from the same group MUST have the same name attribute, for example</li>\n<li>You have to set the value attribute for each input</li>\n</ul>\n\n<p>Here is an example of input radios:</p>\n\n<pre><code>&lt;input type=\"radio\" name=\"mailCopy\" value=\"1\" /&gt;1&lt;br /&gt;\n&lt;input type=\"radio\" name=\"mailCopy\" value=\"2\" /&gt;2&lt;br /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>HTML</p>\n\n<pre><code>&lt;p&gt;Gender&lt;/p&gt;\n&lt;input type = \"radio\" id = \"gender\" name = \"gender\" value = \"Male\"&gt;Male&lt;br&gt;\n&lt;input type = \"radio\" id = \"gender\" name = \"gender\" value = \"Female\"&gt;Female&lt;br&gt;\n</code></pre>\n\n<p>JS</p>\n\n<pre><code>var gender = document.querySelector('input[name = \"gender\"]:checked').value;\ndocument.writeln(\"You entered \" + gender + \" for your gender&lt;br&gt;\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>A simpler way of doing this is to use a global js variable that simply holds the id of the clicked radio button. Then you don't have to waste code spinning thru your radio lists looking for the selected value. \nI have done this in cases where I have a dynamically generated list of 100 or more radio buttons. spinning thru them is (almost imperceptible) slow, but this is an easier solution.</p>\n\n<p>you can also do this with the id, but you usually just want the value.</p>\n\n<pre><code>&lt;script&gt;\nvar gRadioValue = ''; //global declared outside of function\nfunction myRadioFunc(){\n    var radioVal = gRadioValue;  \n    // or maybe: var whichRadio = document.getElementById(gWhichCheckedId);\n    //do somethign with radioVal\n}\n&lt;script&gt;\n\n&lt;input type=\"radio\" name=\"rdo\" id=\"rdo1\" value=\"1\" onClick=\"gRadioValue =this.value;\"&gt; One\n&lt;input type=\"radio\" name=\"rdo\" id=\"rdo2\" value=\"2\" onClick=\"gRadioValue =this.value;\"&gt; Two\n...\n&lt;input type=\"radio\" name=\"rdo\" id=\"rdo99\" value=\"99\" onClick=\"gRadioValue =this.value;\"&gt; 99\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try this</p>\n\n<pre><code>$('#mailCopy').is(':checked'); \n</code></pre>\n\n<hr>\n\n<p>Note:This needs jQuery (Just a reminder - Might be helpful for beginners)</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Since you want to get it using plain javascript, you can use the following code</p>\n\n<pre><code>var val = '';\nif(document.getElementById('radio1').checked) {\n  val = document.getElementById('radio1').value\n}else if(document.getElementById('radio2').checked) {\n  val = document.getElementById('radio2').value\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Hy, you have to do it this way.</p>\n\n<pre><code>function checkRadio () {\n    if(document.getElementById('user1').checked) {\n        return $('#user1').val();\n    }else if(document.getElementById('user2').checked) {\n        return $('#user2').val();\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I am using this code to get the value of currently selected radio button, but it doesn't work.</p>\n\n<pre><code>var mailcopy = document.getElementById('mailCopy').value; \n</code></pre>\n\n<p>How to get the currently selected radio button value using Javascript?</p>\n",
            "last_activity_date": 1406105859,
            "question_id": 3869535,
            "score": 12,
            "tags": [
                "javascript"
            ],
            "title": "How to get the selected radio button value using js"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>in JavaScript you can use the <code>onbeforeclose</code> event to pass a call back to the server when the  user closes the browser.</p>\n\n<p>I typically use a synchronous Ajax call to do this.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I suggest you remove the ID when the Servlet engine destroys the session. Register a <a href=\"http://java.sun.com/javaee/5/docs/api/javax/servlet/http/HttpSessionListener.html\" rel=\"nofollow\"><code>HttpSessionListener</code></a> that removes the user's ID when <code>sessionDestroyed()</code> is called.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/299679/java-servlet-how-to-detect-browser-closing#299697\">Diodeus</a>'s idea will only help you detect that the session is over more immediately. </p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>There is no foolproof way to do what you're trying to do, but both sblundy and Diodeus have plans that will cover most circumstances.  There is nothing you can do about someone who turns off Javascript in their browser, or their internet connection goes down, or their power goes out.  You should just cull sessions after a certain period of inactivity (which I think is what sblundy's suggestion of listening for session destruction will do).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There is no way to know on the server-side (unless you are using some JavaScript to send a message to the server) that the browser has closed. How could there be? Think of how HTTP works - everything is request and response.</p>\n\n<p>However, the application server will track when Sessions are active and will even tell you when a Session has been destroyed (such as due to time-out). Take a look at <a href=\"http://www.stardeveloper.com/articles/display.html?article=2001112001&amp;page=1\">this page</a> to see how to configure a <a href=\"http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpSessionListener.html\"><code>HttpSessionListener</code></a> to receive these events. Then you can simply keep track of the number of active sessions. </p>\n\n<p>The number of active sessions will lag behind the actual number of current users, since some period of (configurable) time has to elapse before a session is timed out; however, this should be somewhat close (you can lower the session-timeout to increase the accuracy) and it is a lot cleaner and easier than 1) tracking Sessions yourself or 2) sending some asynchronous JavaScript to the server when a browser is closed (which is not guaranteed to be sent).</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>I had to do that recently, and after some searches, I found some solutions on the Net... all of them non working universally!</p>\n\n<p>onbeforeclose and onclose events are used for this task. But there are two catches: they are fired when the user reload the page or even just change the current page. There are tricks to see if the event is actually a window/page/tab closing (looking at some Dom properties going haywire on closing event), but:</p>\n\n<ul>\n<li>They are browser dependent</li>\n<li>The tricks are undocumented, thus brittle</li>\n<li>And actually they vary along the browser version/update...</li>\n</ul>\n\n<p>And worst of all, these events are now ignored by most modern browsers, because they have been abused by rogue ads popping out windows when browser was closing. They are not fired in Safari, Opera, IE7, etc.</p>\n\n<p>As pointed out, most Web applications with login destroy the user session after a while, eg. half an hour. I was asked to logout on browser closing to free faster a precious resource: licenses. Because users often forget to log out...</p>\n\n<p>The solution I gave was to ping with an Ajax request (sending the user ID) the server on regular intervals (say 1 minute). If the server receives no ping for, say, 3 minutes, it disconnect the user.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here is a dirty way to accomplish \"detecting a browser close\"\nI found this in a forum somewhere on this site, when I find it again I will link to it.</p>\n\n<p>Add additional headers to the http response. When additional requests come in they will contain these additional headers.  You can check for these headers and if they aren't present you can kill the session, so a new one will start.  While this doesn't \"notify\" you if the browser is closed it can tell you if someone has closed their window and is attempting to come back, since the headers you added will be missing.</p>\n\n<pre><code> wrapper.setHeader(\"Cache-Control\", \"no-cache, no-store, must-     revalidate\");\n wrapper.setHeader(\"Pragma\", \"no-cache\");\n wrapper.setDateHeader(\"Expires\", 0);\n\n Where wrapper is a response wrapper.\n\n if (wrapper.getHeaderNames().size() &lt; the number of headers you are expecting)\n request.getSession().invalidate();\n\n Not perfect but it might help someone.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In my web app, when a user logs in, I add his Id to a vector of valid Ids in the servlet, when he logs out, I remove his Id from the vector, so I can see how many current users are active, if a user forgets to log out, my servelt generated html has : </p>\n\n<pre><code>&lt;meta http-equiv=\"Refresh\" content=\"30; url=My_Servlet?User_Action=logout&amp;User_Id=1111\"&gt;\n</code></pre>\n\n<p>in the  tag to automatically log him out.</p>\n\n<p>But I've noticed many users are there for ever, never logged out. I found out why, by closing their browsers, they never manually or automatically logged out, so their user Ids will never be removed from the valid user Ids vector.</p>\n\n<p>So, my question is : how do I detect users closing their browsers, so my servlet can remove their Ids from the vector ?</p>\n\n<p>============================================================================</p>\n\n<p>Edit :</p>\n\n<p>Thanks for all the answers, I see some light at the end of the tunnel, but there is still a problem, my program has something like this : </p>\n\n<p>Active User List :</p>\n\n<pre><code>User_1 : Machine_1 [ IP_1 address ]\nUser_2 : Machine_2 [ IP_2 address ]\nUser_3 : Machine_3 [ IP_3 address ]\n...\n</code></pre>\n\n<p>How do I know, from the session listener, which user's session has ended and therefore remove him from my list ?</p>\n\n<p>I was hoping when the session ends, the HttpServlet's destroy() method would be called and I can remove the user Id in there, but it never gets called when user closes his browser, why ? And is there any other method in the HttpServlet that gets called when a session closes ?</p>\n\n<p>Frank</p>\n",
            "last_activity_date": 1365710915,
            "question_id": 299679,
            "score": 12,
            "tags": [
                "javascript",
                "servlets"
            ],
            "title": "Java Servlet : How to detect browser closing?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>What language do you want to do it in? I assume JavaScript, as you said jQuery. (jQuery is not a language, it's library to a language)</p>\n\n<p>You need to find a way to represent the table as a data structure. This should be done via OOP for simplicity. I recommend you to get the number of columns and rows and put the data in 1 single, flat array.</p>\n\n<p>You also need to design something that will parses through the HTML and gets the table, converting it to your structure, allowing computations to be done easily. This can be done via jQuery's method.</p>\n\n<p>Then you need to find a sort function that sorts the flat array.</p>\n\n<p>Lastly, you need to break up the the array into the appropriate columns and rows and rerender the HTML.</p>\n\n<p>See! Not that difficult. Designing is pretty much done for you, all you need is to implement it. (Maybe i shouldn't do so much work for you..)</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This should work for arbitrary html:</p>\n\n<pre><code>function swap( cells, x, y ){\n   if( x != y ){     \n   var $cell1 = cells[y][x];\n   var $cell2 = cells[x][y];\n   $cell1.replaceWith( $cell2.clone() );\n   $cell2.replaceWith( $cell1.clone() );\n    }\n}\n\nvar cells = [];\n$('table').find('tr').each(function(){\n    var row = [];\n    $(this).find('td').each(function(){\n       row.push( $(this) );    \n    });\n    cells.push( row );\n});\n\nfor( var y = 0; y &lt;= cells.length/2; y++ ){\n    for( var x = 0; x &lt; cells[y].length; x++ ){\n        swap( cells, x, y );\n    }   \n}\n</code></pre>\n\n<p>Working fiddle:</p>\n\n<p><a href=\"http://jsfiddle.net/Hskke/1/\">http://jsfiddle.net/Hskke/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p><a href=\"http://jsfiddle.net/CsgK9/2/\">http://jsfiddle.net/CsgK9/2/</a></p>\n\n<p>html:</p>\n\n<pre><code>&lt;table&gt;\n    &lt;tr&gt;\n        &lt;td&gt;1&lt;/td&gt;\n        &lt;td&gt;4&lt;/td&gt;\n        &lt;td&gt;7&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;2&lt;/td&gt;\n        &lt;td&gt;5&lt;/td&gt;\n        &lt;td&gt;8&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;3&lt;/td&gt;\n        &lt;td&gt;6&lt;/td&gt;\n        &lt;td&gt;9&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n\n\n&lt;p&gt;&lt;a href=\"#\"&gt;Do it.&lt;/a&gt;&lt;/p&gt;\n</code></pre>\n\n<p>js:</p>\n\n<pre><code>$(\"a\").click(function(){\n    $(\"table\").each(function() {\n        var $this = $(this);\n        var newrows = [];\n        $this.find(\"tr\").each(function(){\n            var i = 0;\n            $(this).find(\"td\").each(function(){\n                i++;\n                if(newrows[i] === undefined) { newrows[i] = $(\"&lt;tr&gt;&lt;/tr&gt;\"); }\n                newrows[i].append($(this));\n            });\n        });\n        $this.find(\"tr\").remove();\n        $.each(newrows, function(){\n            $this.append(this);\n        });\n    });\n\n    return false;\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                }
            ],
            "body": "<p>I want to rearrange an HTML table, i.e. Rows as Columns, Columns as Rows.  </p>\n\n<p>In what way I can do it.  </p>\n\n<p>Example :  </p>\n\n<pre><code>1 4 7  \n2 5 8  \n3 6 9\n</code></pre>\n\n<p>as</p>\n\n<pre><code>1 2 3  \n4 5 6  \n7 8 9  \n</code></pre>\n",
            "last_activity_date": 1359054066,
            "question_id": 6297591,
            "score": 10,
            "tags": [
                "javascript",
                "html",
                "table"
            ],
            "title": "How to invert the rows and columns of an HTML table?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I found the answer just as I was writing the question, but thought I'd post anyway to share the info.</p>\n\n<p>The object you need to extend is <code>Element.prototype</code>.</p>\n\n<pre><code>Element.prototype.getMyId = function() {\n    return this.id;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>you can extend the DOM by using the Element's prototype. However, this does not work in IE7 and earlier. You will need to extend the specific element, one at a time. The Prototype library does this. I recommend looking through the <a href=\"http://prototypejs.org/assets/2008/9/29/prototype-1.6.0.3.js\">source</a> to see exactly how it's done.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>Yes you can, but it is strongly advised not to.</p>\n\n<p>If you override something another library is expecting to be the original or another library overwrote something you were expecting .. chaos!</p>\n\n<p>It is best practice to keep your code in your own namespace/scope.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You shouldn't be directly extending anything (by \"anything\" I mean native DOM objects) - that will only lead to bad things. Plus re-extending every new element (something you'd have to do to support IE) adds additional overhead.</p>\n\n<p>Why not take the jQuery approach and create a wrapper/constructor and extend that instead:</p>\n\n<pre><code>var myDOM = (function(){\n    var myDOM = function(elems){\n            return new MyDOMConstruct(elems);\n        },\n        MyDOMConstruct = function(elems) {\n            this.collection = elems[1] ? Array.prototype.slice.call(elems) : [elems];\n            return this;\n        };\n    myDOM.fn = MyDOMConstruct.prototype = {\n        forEach : function(fn) {\n            var elems = this.collection;\n            for (var i = 0, l = elems.length; i &lt; l; i++) {\n                fn( elems[i], i );\n            }\n            return this;\n        },\n        addStyles : function(styles) {\n            var elems = this.collection;\n            for (var i = 0, l = elems.length; i &lt; l; i++) {\n                for (var prop in styles) {\n                    elems[i].style[prop] = styles[prop];\n                }\n            }\n            return this;\n        }\n    };\n    return myDOM;\n})();\n</code></pre>\n\n<p>Then you can add your own methods via <strong><code>myDOM.fn</code></strong> ... And you can use it like this:</p>\n\n<pre><code>myDOM(document.getElementsByTagName('*')).forEach(function(elem){\n    myDOM(elem).addStyles({\n        color: 'red',\n        backgroundColor : 'blue'\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>In Javascript, you can extend existing classes by using its prototype object:</p>\n\n<pre><code>String.prototype.getFirstLetter = function() {\n    return this[0];\n};\n</code></pre>\n\n<p>Is it possible to use this method to extend DOM elements?</p>\n",
            "last_activity_date": 1262650692,
            "question_id": 779880,
            "score": 10,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "In Javascript, can you extend the DOM?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Looking at the source of jqGrid <a href=\"https://github.com/tonytomov/jqGrid/blob/master/js/grid.base.js\" rel=\"nofollow\">(source)</a> you can see that gridComplete is called on just one line of grid.base. </p>\n\n<p><code>1725: if($.isFunction(ts.p.gridComplete)) {ts.p.gridComplete.call(ts);}</code></p>\n\n<p>This line comes from the function <code>updatePager</code>. </p>\n\n<p>You can find <code>loadComplete</code> in the <code>populate</code> function (line 1757). Unlike <code>gridComplete</code>, it is passed an extra parameter. Both callbacks receive a reference to <code>this</code>, but <code>loadComplete</code> also receives the data returned from the server (or passed in locally):</p>\n\n<pre><code>1858: case \"xmlstring\": \nif(lcf) {ts.p.loadComplete.call(ts,dstr);}\n\n1869: case \"jsonstring\": \nif(lcf) {ts.p.loadComplete.call(ts,dstr);}\n\n1881: \ncase \"local\":\ncase \"clientside\":\nif(lc) { lc.call(ts,req); }\n</code></pre>\n\n<p>The thing is, the functions <code>populate</code> and <code>updatePager</code> often happen in tandem, so you see that when sorting and paging, both callbacks are called. The difference, once again, is that <code>loadComplete</code> is passed an extra parameter.</p>\n\n<p>There are probably subtle differences that I haven't encountered yet... and there might be cases where one is called and the other isn't, but I have noticed that on sorting and paging, both are called.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I think that this question is asked by many users of jqGrid. So it's interesting to know the answer.</p>\n\n<p>I personally prefer to use <code>loadComplete</code>. If you examine code from all my examples which I posted, you will find <code>gridComplete</code> only when the Original Poster posted it in the question and I would have modified a little code. I prefer to use <code>loadComplete</code> because of some advantages of <code>loadComplete</code> and disadvantages of <code>gridComplete</code>.</p>\n\n<p>Here are advantages of <code>loadComplete</code>:</p>\n\n<ul>\n<li>It's the last callback which will be called if <em>the whole grid body</em> will be reloaded. For example after loading the page on the grid from the server. It's important to understand, that if the user changes sorting of some column or sets filter or chooses another page of the grid; the grid body will be reloaded.</li>\n<li><code>loadComplete</code> has parameter <code>data</code> which represent full page of local data or full data loaded from the server.</li>\n</ul>\n\n<p>On the other side <code>gridComplete</code> will be called (in the current version of jqGrid 4.4.4) from internal <code>updatepager</code> (see <a href=\"https://github.com/tonytomov/jqGrid/blob/v4.4.4/js/grid.base.js#L1736\" rel=\"nofollow\">here</a>), which <strong>will be called from <code>delRowData</code> (see <a href=\"https://github.com/tonytomov/jqGrid/blob/v4.4.4/js/grid.base.js#L2861\" rel=\"nofollow\">here</a>), <code>addRowData</code> (see <a href=\"https://github.com/tonytomov/jqGrid/blob/v4.4.4/js/grid.base.js#L3057\" rel=\"nofollow\">here</a>) and <code>clearGridData</code> (see <a href=\"https://github.com/tonytomov/jqGrid/blob/v4.4.4/js/grid.base.js#L3468\" rel=\"nofollow\">here</a>) methods; in addition</strong> to <code>addXmlData</code> (see <a href=\"https://github.com/tonytomov/jqGrid/blob/v4.4.4/js/grid.base.js#L1289\" rel=\"nofollow\">here</a>) and <code>addJSONData</code> (see <a href=\"https://github.com/tonytomov/jqGrid/blob/v4.4.4/js/grid.base.js#L1471\" rel=\"nofollow\">here</a>). It's not what one mostly want.</p>\n\n<p>Another disadvantage of <code>gridComplete</code> one can see if one examines the code of <code>addXmlData</code> (see <a href=\"https://github.com/tonytomov/jqGrid/blob/v4.4.4/js/grid.base.js#L1289\" rel=\"nofollow\">here</a>) and <code>addJSONData</code> (see <a href=\"https://github.com/tonytomov/jqGrid/blob/v4.4.4/js/grid.base.js#L1471\" rel=\"nofollow\">here</a>) <em>from where</em> <code>updatepager</code> is called and so <code>gridComplete</code> will be called. If one uses <code>loadonce: true</code> and the internal parameters <code>data</code> and <code>_index</code> will be filled with full data returned from the server. One can see when using <code>loadonce: true</code>; the callback <strong><code>gridComplete</code> will be called after the first page of data are loaded from the sever</strong>. At this moment <code>data</code> and <code>_index</code> contains only the data for the page. On the other side <strong><code>loadComplete</code> will be called later after all data returned from the server are processed and saved locally</strong> in <code>data</code> and <code>_index</code>.</p>\n\n<p>If you load the data from the server and if you don't use <code>loadonce: true</code> option, <code>clearGridData</code>, <code>addRowData</code> and <code>delRowData</code> then you could use <code>gridComplete</code> instead of <code>loadComplete</code>.</p>\n",
                    "is_accepted": true,
                    "score": 14
                }
            ],
            "body": "<p>This question originated after I looked on <a href=\"http://stackoverflow.com/a/4943722/1818608\">this</a> answer of <a href=\"http://stackoverflow.com/users/315935/oleg\">Oleg</a> and demo-grids in it.</p>\n\n<p><code>gridComplete</code>:</p>\n\n<blockquote>\n  <p>This fires after all the data is loaded into the grid and all other\n  processes are complete. Also the event fires independent from the\n  datatype parameter and after sorting paging and etc.</p>\n</blockquote>\n\n<p><code>loadComplete</code>:</p>\n\n<blockquote>\n  <p>This event is executed immediately after every server request.  data\n  Data from the response depending on datatype grid parameter</p>\n</blockquote>\n\n<p>From that docs I understood that <code>gridComplete</code> fires at the end of drawing grid, and <code>loadComplete</code> fires after jqGrid completes communication with backend.</p>\n\n<p>And so I wonder - why in demos, <code>loadComplete</code> used for change color of cells and not <code>gridComplete</code>?</p>\n",
            "last_activity_date": 1414485787,
            "question_id": 15437218,
            "score": 9,
            "tags": [
                "javascript",
                "data",
                "datagrid",
                "jqgrid"
            ],
            "title": "jqGrid: What the difference between loadComplete and gridComplete events?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>It allows for you to give the jQuery variable a different name, and still use it:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n  $jq = $.noConflict();\n  // Code that uses other library's $ can follow here.\n  //use $jq for all calls to jQuery:\n  $jq.ajax(...)\n  $jq('selector')\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If I'm not mistaken:</p>\n\n<pre><code>var jq = $.noConflict();\n</code></pre>\n\n<p>then you can call jquery function with jq.(whatever).</p>\n\n<pre><code>jq('#selector');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>By default, jquery uses the variable <code>jQuery</code> and the $ is used for your convenience. If you want to avoid conflicts, a good way is to encapsulate jQuery like so:</p>\n\n<pre><code>(function($){\n\n    $(function(){\n\n        alert('$ is safe!');\n\n    });\n\n})(jQuery)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>In addition to that, passing <strong>true</strong> to $.noConflict(<strong>true</strong>); will also restore previous (if any) global variable jQuery, so that plugins can be initialized with correct jQuery version when multiple versions are being used.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It's typically used if you are using another library that uses <code>$</code>.</p>\n\n<p>In order to still use the <code>$</code> symbol for jQuery, I typically use:</p>\n\n<pre><code>jQuery.noConflict()(function($){\n  // jQuery code here\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you look at the examples on the api page there is this:\nExample: Creates a different alias instead of jQuery to use in the rest of the script. </p>\n\n<pre><code>var j = jQuery.noConflict();\n// Do something with jQuery\nj(\"div p\").hide();\n// Do something with another library's $()\n$(\"content\").style.display = 'none';\n</code></pre>\n\n<p>Put the <code>var j = jQuery.noConflict()</code> after you bring in jquery and then bring in the conflicting scripts. You can then use the <code>j</code> in place of <code>$</code> for all your jquery needs and use the <code>$</code> for the other script.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You simply assign a custom variable for JQuery to use instead of its default <code>$</code>. JQuery then wraps itself in a new function scope so <code>$</code> no longer has a namespace conflict.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    $jQuery = $.noConflict();\n    // Other library code here which uses '$'\n    $jQuery(function(){ /* dom ready */ }\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>jQuery.noConflict</code> will reset the <code>$</code> variable so it's no longer an alias of <code>jQuery</code>. Aside from just calling it once, there's not much else you really need to do. Though, you can create your own alias with the return value, if you'd like:</p>\n\n<pre><code>var jq = jQuery.noConflict();\n</code></pre>\n\n<p>And, generally, you want to do this right after including jQuery and any plugins:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"/path/to/jquery.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"/path/to/jquery-plugin.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n  jQuery.noConflict();\n  // Code that uses other library's $ can follow here.\n&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"/path/to/prototype.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>You can also go one step further and free up <code>jQuery</code> with <code>noConflict(true)</code>. Though, if you take this route, you'll definitely want an alias as neither <code>$</code> nor <code>jQuery</code> will probably be what you want:</p>\n\n<pre><code>var jq = jQuery.noConflict(true);\n</code></pre>\n\n<p>I think this last option is mostly used for mixing versions of jQuery, particularly for out-dated plugins when you want to update jQuery itself:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"jquery-1.4.4.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"jquery-older-plugin.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    var jq144 = jQuery.noConflict(true);\n&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"jquery-1.6.4.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"jquery-newer-plugin.js\"&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                }
            ],
            "body": "<p>I am using both javascript and jquery code on the same html page. For some reason, the jQuery library is stopping my native javascript code from working properly.</p>\n\n<p>I found this page: <a href=\"http://api.jquery.com/jQuery.noConflict/\">jQuery No Conflict</a>  that says you can use a jquery.noConflict to release $ back to javascript. However, I'm not sure how to do this?  </p>\n\n<p>Specifically, I'm not sure how to implement this correctly?  Where does the the Jquery code go, where does the JS code go? </p>\n\n<p>My code is below:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n  $.noConflict();\n  // Code that uses other library's $ can follow here.\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1383609581,
            "question_id": 7882374,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "conflict"
            ],
            "title": "How do I implement JQuery.noConflict() ?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>These are just a few quick guidelines I've come up with, if anyone else has anything meaningful to add, I've set this answer as a community wiki so it should be easy enough for you to edit.</p>\n\n<ol><li> Namespace your objects to ensure they will never conflict with third party JavaScript libraries.\n\n<pre>window['Andrew']['JS'] = {\n    addEvent: function(el,evName) {/*Stuff*/},\n    Rectangle: function(width,height) {/*Stuff*/}\n};</pre>\n\nSo then you would create a rectangle object by using:\n\n    <pre>var myRect = new Andrew.JS.Rectangle(14,11);</pre>\nAnd then your code will never interfere with, or be interfered by anybody else's <code>Rectangle</code>.<br /><br />\n\n</li>\n\n<li>Use a consistent naming strategy, specifically:\n    <ul>\n        <li>Object names should be capitalized, everything else (variables, functions) should begin with a lower case character i.e. \n<pre>var myRect = new Andrew.JS.Rectangle(14,11);\ndocument.write(myRect.getArea());</pre>\n        </li>\n        <li>Ensure everything is meaningful, i.e. verbs for methods, nouns + adjectives for parameters.</li>\n    </ul><p></p>\n</li>\n<li>Make sure all methods and parameters are <b>relevant</b> to the object they belong to. e.g.\n\nIn this example, the area of the rectangle can be converted to square feet using the method <code>inSquareFeet()</code>.<p></p>\n\n<pre>myRect.getAreaObject().inSquareFeet();</pre>\nMake sure inSquareFeet is a method of the object returned by <code>getAreaObject()</code> and not a method of <code>Andrew.JS.Rectangle</code>\n<p></p>\n</li>\n<li>Use constructors, or more specifically, try as hard as possible to make sure that an object doesn't need any further initialization to be used once it has been constructed, so instead of:\n<pre>var Person = function()\n{\n    this.name = \"\";\n    this.sayHello = function ()\n    {\n        alert(this.name + \" says 'Hello!'\");\n        return this;\n    }\n}\n\nvar bob = new Person();\nbob.name = \"Bob Poulton\";\nbob.sayHello();</pre>\ntry:\n<pre>var Person = function(name)\n{\n    this.name = name;\n    this.sayHello = function ()\n    {\n        alert(this.name + \" says 'Hello!'\");\n        return this;\n    }\n}\n\nvar bob = new Person(\"Bob Poulton\");\nbob.sayHello();</pre>\n</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>You can try with a simple, usefull and quick object:</p>\n\n<pre><code>var foo = {\n    foo1: null,\n    foo2: true,\n    foo3: 24,\n    foo4: new Array(),\n\n    nameOfFunction1: function(){\n      alert(\"foo1\");\n    },\n\n    nameOfFunction2: function(){\n      alert(\"foo2\");\n    },\n}\n</code></pre>\n\n<p>To use this, you have to create an instance of this object and use like a object in java: </p>\n\n<pre><code>foo.nameOfFunction2();\n</code></pre>\n\n<p>Also you can check this link to other solution: <a href=\"http://www.javascriptkit.com/javatutors/oopjs.shtml\" rel=\"nofollow\">http://www.javascriptkit.com/javatutors/oopjs.shtml</a></p>\n\n<p>I hope that answer your question.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Because you are working on a large scale project i would suggestion a javascript framework like <strong>mootools</strong> <a href=\"http://mootools.net/\" rel=\"nofollow\">http://mootools.net/</a>.</p>\n\n<p>It has a good class and inheritance structure.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I use such a pattern and recommend to you to use it too:</p>\n\n<pre><code>function Person(firstname, lastname, age)\n{\n  var self = this;\n  var _ = {};\n\n  // Private members.  \n  var firstname  = firstname;\n  var lastname = lastname;\n  var age = age || 'unknown';\n\n  // Private methods.\n  function first_letter_to_uppercase(str) {\n    return str.charAt(0).toUpperCase() + str.substr(1);\n  }\n\n  // Public members and methods.\n  _.get_age = function()\n  {\n    return age;\n  }\n\n  _.get_name = function()\n  {\n    return first_letter_to_uppercase(firstname) + ' ' +\n      first_letter_to_uppercase(lastname);\n  }\n  return _;\n}\n\nvar p = new Person('vasya', 'pupkin', 23);\nalert(\"It's \"  + p.get_name() + ', he is ' + p.get_age() + ' years old.') \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>My ideal Object for OOP is like using an Instance method with prototypes:</p>\n\n<p>Example:</p>\n\n<pre><code>var Users = function()\n{\n    var _instance;\n    this.prototype.getUsername = function(){/*...*/}\n    this.prototype.getFirstname = function(){/*...*/}\n    this.prototype.getSecurityHash = function(){/*...*/}\n    /*...*/\n\n    /*Static Methods as such*/\n    return { /*Return a small Object*/\n        GetInstance : function()\n        {\n            if(_instance == null)\n            {\n                _instnance = new Users(arguments);\n            }\n            return _instnance; //Return the object\n        },\n        New: function()\n        {\n            _instnance = null; //unset It\n            return this.GetInstnace(arguments);\n        }\n    }\n}\n</code></pre>\n\n<p>Then I would always use like:</p>\n\n<pre><code>Firstname = Users.GetInstance('Robert','Pitt').getFirstname();\nUsername  = Users.GetInstance().getUsername(); //Returns the above object.\n\nMe  = Users.New('Robert',null); //Deletes the above object and creates a new instance.\nFather = Users.New('Peter','Piper'); //New Object\nMe.AddFather(Father); //Me Object.\n</code></pre>\n\n<p>And that's the kind of road i go down when it comes to building a JavaScript OO Style architecture.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>just for your information, i think <a href=\"http://developer.yahoo.com/yui/\" rel=\"nofollow\">YUI</a> provides few great tutorials on this topic</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I always use John resig's:</p>\n\n<p><a href=\"http://ejohn.org/blog/simple-javascript-inheritance/\">http://ejohn.org/blog/simple-javascript-inheritance/</a></p>\n\n<p>It's simple and doesn't require any frameworks to function.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>function foo() {\n  var bar = function() { console.log(\"i'm a private method\"); return 1; };\n  var iAmAPrivateVariable = 1;\n\n  return {\n    publicMethod: function() { alert(iAmAPrivateVariable); },\n    publicVariable: bar()\n  }\n}\n\n//usage\nvar thing = foo()\n</code></pre>\n\n<p>This is a functional approach, and has a great deal more going for it (such as encapsulation) then anything else you are going to see</p>\n\n<p>In a general way, you shouldn't be doing OO in javascript, it isn't that great a language for it for a great many reasons. Think scheme with squiggly brackets and semi-colons, and you will start writing the language like the pros do. That being said, sometime OO is a better fit. In those cases, the above is typically the best bet </p>\n\n<p>to bring inheritance into the mix</p>\n\n<pre><code>function parent() {\n  return { parentVariable: 2 };\n}\n\nfunction foo() {\n  var bar = function() { console.log(\"i'm a private method\"); return 1; };\n  var iAmAPrivateVariable = 1;\n\n  me = parent();\n  me.publicMethod = function() { alert(iAmAPrivateVariable); };\n  me.publicVariable = bar();\n\n  return me;\n}\n</code></pre>\n\n<p>This makes things a tad more complected, but accomplishes the desired end result while still taking a functional approach to OO concepts (in this case, using decorator functions instead of real inheritance). What I like about the whole approach is we are still really treating objects the way they are intended to be in this kind of language -- a property bag you can attach stuff to at will.</p>\n\n<p>Another note is this is wildly different then what you will see most of the time in most of the jobs you will ever work at, and often is very hard to explain a) what is going on, and b) why it is a good idea to coworkers. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>//Create and define Global NameSpace Object\n( function(GlobalObject, $, undefined) \n{\n    GlobalObject.Method = function()\n    {\n        ///&lt;summary&gt;&lt;/summary&gt;\n    }\n\n    GlobalObject.Functionality = {};\n\n}) (GlobalObject = GlobalObject || {}, jQuery);\n\n//New object for specific functionality\n( function(Events, $, undefined)\n{\n    //Member Variables \n    var Variable; // (Used for) , (type)\n\n    // Initialize\n    Events.Init = function()\n    {\n        ///&lt;summary&gt;&lt;/summary&gt;\n    }\n\n    // public method\n    Events.PublicMethod = function(oParam)\n    {\n        ///&lt;summary&gt;&lt;/summary&gt;\n        ///&lt;param type=\"\"&gt;&lt;/param&gt;\n    }\n\n    // protected method (typically define in global object, but can be made available from here)\n    GlobalObject.Functionality.ProtectedMethod = function()\n    {\n        ///&lt;summary&gt;&lt;/summary&gt;\n    }\n\n    // internal method (typically define in global object, but can be made available from here)\n    GlobalObject.InternalMethod = function()\n    {\n        ///&lt;summary&gt;&lt;/summary&gt;\n    }\n\n    // private method\n    var privateMethod = function()\n    {\n        ///&lt;summary&gt;&lt;/summary&gt;\n    }\n}) (GlobalObject.Funcitonality.Events = GlobalObject.Funcitonality.Events || {}, jQuery )\n\n// Reusable \"class\" object\nvar oMultiInstanceClass = function()\n{\n    // Memeber Variables again\n    var oMember = null; // \n\n    // Public method\n    this.Init = function(oParam)\n    {\n        oMember = oParam;\n\n        for ( n = 1; i &lt; oMemeber.length; i += 1 )\n        { \n           new this.SubClass.Init(oMember[i]); // you get the point, yeah?\n        }\n    }\n\n    this.Subclass = function()\n    {\n        this.Init = function() { }\n    }\n}\n</code></pre>\n\n<p>The strength to this is that it initializes the Global object automatically, allows you to maintain the integrity of your code, and organizes each piece of functionality into a specific grouping by your definition. </p>\n\n<p>This structure is solid, presenting all of the basic syntactical things you would expect from OOP without the key words. </p>\n\n<p>There are even some ingenious ways to set up interfaces as well. If you choose to go that far, <a href=\"https://www.google.com/search?q=javascript%20interface\" rel=\"nofollow\">a simple search</a> will give you some good tutorials and tips.</p>\n\n<p>Even <a href=\"http://msdn.microsoft.com/en-us/library/vstudio/bb385682.aspx\" rel=\"nofollow\">setting up intellisense is possible</a> with javascript and visual studio, and then defining each piece and referencing them makes writing javascript cleaner and more manageable. </p>\n\n<p>Using these three methods as needed by your situation helps keep the global namespace clean, keep your code organized and maintains separation of concerns for each object.. if used correctly. Remember, Object Oriented Design is of no use if you don't utilize the logic behind using objects!</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm sick of seeing dozens of different ways of doing object oriented programming in Javascript. Can anyone just tell me which technique I should use considering I want to work on a large scale project and I want my code to be future proof?</p>\n",
            "last_activity_date": 1409889347,
            "question_id": 3750082,
            "score": 9,
            "tags": [
                "javascript",
                "oop"
            ],
            "title": "Javascript OOP best practices?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Found the same issue today with a web app I've just inherited. For some reason the previous devs were forcing IE into quirks (ie7) mode and the google api issue started today. I've updated the main html page to use IE edge mode by changing the html head section from</p>\n\n<pre><code>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:v=\"urn:schemas-microsoft-com:vml\"&gt;\n &lt;head&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=7\" /&gt; \n .....\n</code></pre>\n\n<p>to</p>\n\n<pre><code>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:v=\"urn:schemas-microsoft-com:vml\"&gt;\n &lt;head&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /&gt; \n.....\n</code></pre>\n\n<p>(if you are missing it add the ie-edge meta... line)</p>\n\n<p>and its fixed it so far.</p>\n\n<p>Now to find out why the previous devs were forcing IE7 mode....</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>We are using the GMLib Google Maps delphi component and we had the same problem.  The GMLib component uses the TWebBrowser component inside.</p>\n\n<p>Within the resource files of the GMLib component we found a map.html file.\nWe added the following line to the  section of the html file.</p>\n\n<pre><code>&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /&gt;\n</code></pre>\n\n<p>We then recompiled the resource files into the component, recompiled the delphi project and it worked.</p>\n\n<p>I suppose this is one of the downsides of using relatively unsupported free components.</p>\n\n<p>We are now considering moving to a commercial paid for google maps component to reduce the risk of this happening again.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In my case (.net 4 visual c# with a webbrowser integrated)  to fix this issue I just add &amp;v=3\nIt seems that if you don't specify the version it will use the experimental one ... strange.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This works fine </p>\n\n<pre><code>&lt; script src=\"https://maps.googleapis.com/maps/api/js&amp;v=3.18\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>This don't </p>\n\n<pre><code>&lt; script type=\"text/javascript\" src=\"https://maps.googleapis.com/maps/api/js&amp;v=3.18\"&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I have an application in Delphi using TWebBroser, this was the temporary solution that I found, but is not 100%\nbecause to solve this I had to add a Key on Windows, using regedit. Forcing IE to emulate in the version\ninformed on the Key I created, for better understanding look at the item Browser Emulation inside this \nlink <a href=\"https://msdn.microsoft.com/en-us/library/ee330730(v=vs.85).aspx\" rel=\"nofollow\">https://msdn.microsoft.com/en-us/library/ee330730(v=vs.85).aspx</a> .\nThis solution only works if the IE version stated in the Key is installed.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>We also faced the same issue in a C# program using the standard .net WebBrowser control.</p>\n\n<p>We also solved the problem by adding the line</p>\n\n<pre><code>&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /&gt;\n</code></pre>\n\n<p>Note that it didn't work on a Vista configuration with Internet Explorer 7, but it was OK after installation of IE 9 (<em>more than 3 hours for installing Service pack1, service pack 2, 2 microsoft corrective patches and finally IE9 itself</em>).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>SOLVED:</strong> Had same problem with IE8 (XP), IE9 (Win7) and compatibility mode in Win 7 and XP.  I added the version number and voila!  Fixed.  </p>\n\n<p><a href=\"http://maps.googleapis.com/maps/api/js\" rel=\"nofollow\">http://maps.googleapis.com/maps/api/js</a><strong>?v=3</strong>&amp;key=... </p>\n\n<p>Specifying <strong>v=3</strong> forces the stable release.  My old code without this version flag was interpreted by Google as I wanted the experimental version which I never want for my production server.</p>\n\n<p>FYI, I use &lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm glad to say that Google responded to this issue in a very positive way; they quickly categorised it as a bug, advised they were working on it and today I'm testing again and see that the 'quirks' issue is no more and my application is again behaving.</p>\n\n<p>The question I asked was 'Can anyone suggest a resolution other than report this to Google and hope they fix it?'. The application where I saw this issue is (evidently) heavily dependent on quirks mode and so I saw a number of issues with other components on the page when trying to remove that dependency - i.e. the issue became much bigger. Hence Google fixing this issue was indeed the only answer which really worked for me and I'm glad that they did. </p>\n\n<p>Thanks for everyone's help and contribution.</p>\n",
                    "is_accepted": true,
                    "score": 0
                }
            ],
            "body": "<p>Version 3.19 of the Google Maps API became the default maps 'release' on the 17th Feb 2015 (See <a href=\"https://code.google.com/p/gmaps-api-issues/wiki/JavascriptMapsAPIv3Changelog\" rel=\"nofollow\">https://code.google.com/p/gmaps-api-issues/wiki/JavascriptMapsAPIv3Changelog</a>). The release appears to be causing issues in Internet Explorer when using <a href=\"http://stackoverflow.com/questions/1695787/what-is-quirks-mode\">quirks mode</a>, as is demonstrated by the following test page that I produced from an application which is affected by this issue (and so this may include more code than is necessary here):</p>\n\n<pre><code>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n    &lt;title&gt;Google Maps Test Page&lt;/title&gt;\n&lt;/head&gt;\n&lt;body style=\"margin:0; padding:0\"&gt;\n    &lt;!-- Adding ?v=3.18 onto the end of this URL will 'fix' the problem --&gt;\n    &lt;script src='http://maps.googleapis.com/maps/api/js' type='text/javascript'&gt;&lt;/script&gt;\n    &lt;script type='text/javascript'&gt;\n    function initialize() {\n        top.google.maps.visualRefresh=true;\n        var mapOptions = {\n            zoom: 13,\n            center: new google.maps.LatLng(51.5072, 0.1275),\n            mapTypeId: google.maps.MapTypeId.ROADMAP,\n            scaleControl: true,\n            overviewMapControl: true\n        };\n        this._map = new google.maps.Map(document.getElementById('myMap'), mapOptions);  \n    }\n\n    google.maps.event.addDomListener(window, 'load', initialize);\n    &lt;/script&gt;\n\n    &lt;div id=\"myMap\" style=\"width:500px;height:500px;position:relative;\"&gt;&lt;/div&gt;\n &lt;/body&gt;\n &lt;/html&gt;\n</code></pre>\n\n<p>Both Firefox and Chrome will properly show a useable map, while IE raises an error deep in the Google Maps code which reads 'Could not get the display property. Invalid argument.' I've tried debugging the code but it is obfuscated, making it a painful challenge.</p>\n\n<p>Forcing the version back to the last 'frozen' release (3.18) fixes the issue for the time being, but this is only a temporary resolution. </p>\n\n<p>Can anyone suggest a resolution other than report this to Google and hope they fix it?</p>\n\n<hr>\n\n<p><strong>Additional note:</strong> </p>\n\n<p>As I write I note that the information here <a href=\"https://code.google.com/p/gmaps-api-issues/wiki/JavascriptMapsAPIv3Changelog\" rel=\"nofollow\">https://code.google.com/p/gmaps-api-issues/wiki/JavascriptMapsAPIv3Changelog</a> says the releases are: </p>\n\n<pre><code>Experimental: 3.20\nRelease: 3.19\nFrozen: 3.18 \n</code></pre>\n\n<p>Version 3.17 will be removed. Requests for 3.17 or any prior version will now be served version 3.18'</p>\n\n<p>While this page <a href=\"https://developers.google.com/maps/documentation/javascript/basics#Versioning\" rel=\"nofollow\">https://developers.google.com/maps/documentation/javascript/basics#Versioning</a> says (at the bottom of the page):</p>\n\n<pre><code>Version 3.18 Reference (Release)\nVersion 3.19 Reference (Experimental)\nVersion 3.17 Reference (Frozen)\nVersions 3.0 - 3.16 have been retired.\n</code></pre>\n\n<p>This is rather confusing but I would think the Changelog link to be the more up to date source of information. This difference confused me so I thought it worth sharing the observation.</p>\n\n<hr>\n\n<p><strong>Update 20-Feb-15:</strong> </p>\n\n<p>Yesterday Google confirmed this as a Bug - see <a href=\"https://code.google.com/p/gmaps-api-issues/issues/detail?id=7675\" rel=\"nofollow\">https://code.google.com/p/gmaps-api-issues/issues/detail?id=7675</a> - and advised 'We're looking into a fix.'</p>\n\n<p>Thanks for the comments and suggestions, but so far I haven't been able to find a work around which allows my application to work fully as other page components depend on quirks mode, creating a good deal of work to get the whole thing working again. I'm hopeful that Google's attention will resolve this for me.</p>\n\n<hr>\n\n<p><strong>Update 21-Feb-15:</strong> </p>\n\n<p><a href=\"https://code.google.com/p/gmaps-api-issues/issues/detail?id=7675\" rel=\"nofollow\">https://code.google.com/p/gmaps-api-issues/issues/detail?id=7675</a> now indicates 'A fix will be deployed in the coming week.'</p>\n",
            "last_activity_date": 1424886292,
            "question_id": 28587238,
            "score": 8,
            "tags": [
                "javascript",
                "google-maps"
            ],
            "title": "Google Maps API v3.19 Broken in Internet Explorer Quirks Mode"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>It's useful to detect if a browser is has specific predefined objects:</p>\n\n<pre><code>if(!!navigator.geolocation){\n  // executes if the browser has geolocation support\n}\n\nif(!!document.createElement('canvas').getContext){\n  // executes if the browser supports &lt;canvas&gt;\n}\n</code></pre>\n\n<p>Explanation: navigator.geolocation is an object or undefined. In the case it's an object <code>!navigator.geolocation</code> will return false, if it's undefined it'll return true. So, to check if a browser has geolocation enabled, you want to 'flip' the boolean once more, by adding another <code>!</code>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It is important to know that <code>0</code> evaluates to <code>false</code> to prevent doing things like:</p>\n\n<pre><code>if(str.indexOf('foo'))\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>They're also useful for setting default values...</p>\n\n<pre><code>function foo(bar){\n    alert(bar || \"default\");\n}\n</code></pre>\n\n<p>I know a lot of people try to do</p>\n\n<pre><code>if (typeof(foo) === \"undefined\"){}\n</code></pre>\n\n<p>to get around falsiness, but that's got its own problems because</p>\n\n<pre><code>typeof(null) === \"object\"\n</code></pre>\n\n<p>for some reason</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It's important to understand how this works in JS, so you're not surprised. Not necessarily just what is falsey, but what is truthy and how they compare to each other.</p>\n\n<p>One example is that '0' is considered equal to 0 with ==, but it is not equal to '' - though 0 is. JavaScript comparison isn't always transitive.</p>\n\n<p>So this means that just because <code>(foo==bar &amp;&amp; bar==fizz)</code> is true, <code>(foo==fizz)</code> is not always true. To go with the above example, '0'==0, and 0=='', but '0'!='' - because you're comparing strings in the latter instance, so they are compared as strings and not coerced to numbers.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>One dangerous issue of falsey values you have to be aware of is when checking the presence of a certain property.</p>\n\n<p>Suppose you want to test for the availability of a new property; when this property <em>can</em> actually have a value of <code>0</code> or <code>\"\"</code>, you can't simply check for its availability using</p>\n\n<pre><code>if (!someObject.someProperty)\n    /* incorrectly assume that someProperty is unavailable */\n</code></pre>\n\n<p>In this case, you <strong>must</strong> check for it being really present or not:</p>\n\n<pre><code>if (typeof someObject.someProperty == \"undefined\")\n    /* now it's really not available */\n</code></pre>\n\n<p>Also be aware that <code>NaN</code> isn't equal to anything, even not to itself (<code>NaN != NaN</code>).</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>There are two separate issues with 'falsey' values in javascript.</p>\n\n<p>Firstly there is the official conversion scheme, which is what is returned by Boolean(x).  This returns false when x is false or 0 or NaN or null or undefined or \"\" and true otherwise.  This is the same behaviour as the </p>\n\n<pre><code>if (condition) {/*true path*/} else {/*false path*/}\n</code></pre>\n\n<p>i.e. the false path is executed if Boolean(condition) would have returned false and the true path is executed otherwise.  This behaviour is often used to check to see if a property is defined, however doing that is not safe unless you are certain that the property would be an object or an array if it is defined.  The safest way to test if a property is defined is to do </p>\n\n<pre><code>if (property != null) { /*property is defined*/} \n</code></pre>\n\n<p>which makes sure that the property is not null or undefined.  If you only want to make sure the property is not undefined do </p>\n\n<pre><code>if (property !== undefined) { /*property is not undefined (but may be null)*/ } \n</code></pre>\n\n<p>(notice the extra = in !==).</p>\n\n<p>Secondly, there are all the values that == false. This is everything that can be coerced to 0 (which is what false gets coerced to). This includes all the values that convert to false except NaN (which can't == false by virtue of it never == anything), null and undefined.  But it also includes all objects that when converted to a string and then converted to a number are equal to 0.  E.g. this includes everything that when converted to a string is either the empty string \"\" or \"0\" or \"-0\" or \"+0\" or \"0x00\" or \"000\" or \"0e0\" or \"0.0000\"...., e.g.</p>\n\n<pre><code>({toString: function() {return \"-00.0e000\";}}) == false\n</code></pre>\n\n<p>is true.  Interestingly this includes the empty array, and any nesting of arrays containing only a single other item that returns an empty or 0 string since arrays rendered as strings show only the contents without the surrounding brackets. i.e.</p>\n\n<pre><code>[[[[0]]]] == false; // because [[[[0]]]].toString() === \"0\"\n[] == false;\n[[[\"\"]]] == false;\n[\"0\"] == false;\n[[({toString: function() {return \"0\";}})]] == false;\n</code></pre>\n\n<p>The full algorithm for calculating == false is described <a href=\"http://es5.github.com/#x11.9.3\" rel=\"nofollow\">here</a>.</p>\n\n<p>The reason this matters is because it can lead to subtle, difficult to find bugs if you don't understand most of these rules.  Most important takeaways are probably how the if(condition) works and that using === avoids most of the other crazy stuff.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I had an interesting interview question today that stumped me a little. I was asked about falsey values. So undefined, NaN, null, 0, an empty string all evaluate to false. What is the reason this is useful to know in javaScript? The only thing I can think of is instead of having to do this:</p>\n\n<pre><code>if(mystring === '' || mystring === undefined) { }\n</code></pre>\n\n<p>I can do this:</p>\n\n<pre><code>if(!mystring)\n</code></pre>\n\n<p>Is this the only useful application?</p>\n",
            "last_activity_date": 1405617835,
            "question_id": 3982663,
            "score": 8,
            "tags": [
                "javascript"
            ],
            "title": "falsey values in javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can't.</p>\n\n<p>You can sort of try to block some vectors (like hacks to make right clicking more difficult, intercepting <kbd>ctrl</kbd>+<kbd>c</kbd>, making it difficult to select text)\u2026 But they will only sort of work, and it's impossible to block all vectors (edit -> copy? view source? <code>wget</code>? etc\u2026).</p>\n\n<p>If you are trying to protect your content from less technical users, these methods might be okay\u2026 But as the comments here suggest, they will frustrate more technical users.</p>\n\n<p>If you have sensitive content that must be protected, you might want to consider embedding it in a Flash blob or a DRM'd PDF. These are still possible to reverse engineer, but it will take a slightly more intelligent attacker.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Instead of trying to control the users key commands(it is possible some browsers may detect this as malicious code) you can disable selection of text on your page. Although this will not avoid data being copied as stated in your comments.</p>\n\n<pre><code>&lt;!-- Disable Copy and Paste--&gt;\n&lt;script language='JavaScript1.2'&gt;\nfunction disableselect(e) {\n    return false\n}\n\nfunction reEnable() {\n    return true\n}\n\ndocument.onselectstart = new Function (&amp;quot;return false&amp;quot;)\n\nif (window.sidebar) {\n    document.onmousedown = disableselect\n    document.onClick = reEnable\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>Place this in your </p>\n\n<pre><code>    &lt;head&gt; &lt;/head&gt; \n</code></pre>\n\n<p>tags and the user cannot select text on your page.</p>\n\n<p>Found on <a href=\"http://myblog-log.blogspot.com/2007/06/disable-copy-and-paste.html\" rel=\"nofollow\">http://myblog-log.blogspot.com/2007/06/disable-copy-and-paste.html</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><strong>Javascript:</strong></p>\n\n<pre><code>//disable mouse drag select start\n\ndocument.onselectstart = new Function('return false');\n\nfunction dMDown(e) { return false; }\n\nfunction dOClick() { return true; }\n\ndocument.onmousedown = dMDown;\n\ndocument.onclick = dOClick;\n\n$(\"#document\").attr(\"unselectable\", \"on\"); \n\n//disable mouse drag select end\n\n//disable right click - context menu\n\ndocument.oncontextmenu = new Function(\"return false\");\n\n\n//disable CTRL+A/CTRL+C through key board start\n\n//use this function\n\n\nfunction disableSelectCopy(e) {\n\n// current pressed key\n\n    var pressedKey = String.fromCharCode(e.keyCode).toLowerCase();\n\n    if (e.ctrlKey &amp;&amp; (pressedKey == \"c\" || pressedKey == \"x\" || pressedKey == \"v\" || pressedKey == \"a\")) {\n\n        return false;\n\n    }\n\n}\n\ndocument.onkeydown = disableSelectCopy;\n\n\n//or use this function\n\n$(function () {\n\n    $(document).keydown(function (objEvent) {\n\n        if (objEvent.ctrlKey || objEvent.metaKey) {\n\n            if (objEvent.keyCode == 65 || objEvent.keyCode == 97) {\n\n                return false;\n\n            }\n\n        //}\n\n        }\n\n    });\n\n});\n</code></pre>\n\n<p><strong>CSS:</strong></p>\n\n<pre><code>//disable selection through CSS for different browsers\n\n#document, #ctl00_MasterPageBodyTag{\n    user-select: none;\n    -ms-user-select: none;\n    -o-user-select:none;\n    -moz-user-select: none;\n    -khtml-user-select: none;\n    -webkit-user-select: none;\n    -webkit-touch-callout: none;\n}\n\n//where #document is the div for which select needs to be disabled and #ctl00_MasterPageBodyTag is the id of the body tag.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am trying 2 alternatives:</p>\n\n<ul>\n<li>Ignore right-click</li>\n<li>Ignore ctrl + C, ctrl + A</li>\n</ul>\n\n<p>This is my code:</p>\n\n<pre><code>function noMenu() {\n  return false;\n}\nfunction disableCopyPaste(elm) {\n  // Disable cut/copy/paste key events\n  elm.onkeydown = interceptKeys\n  // Disable right click events\n  elm.oncontextmenu = function() {\n    return false\n  }\n}\nfunction interceptKeys(evt) {\n  evt = evt||window.event // IE support\n  var c = evt.keyCode\n  var ctrlDown = evt.ctrlKey||evt.metaKey // Mac support\n  // Check for Alt+Gr (http://en.wikipedia.org/wiki/AltGr_key)\n  if (ctrlDown &amp;&amp; evt.altKey) return true\n  // Check for ctrl+c, v and x\n  else if (ctrlDown &amp;&amp; c==67) return false // c\n  else if (ctrlDown &amp;&amp; c==86) return false // v\n  else if (ctrlDown &amp;&amp; c==88) return false // x\n  // Otherwise allow\n  return true\n}\n</code></pre>\n\n<p>And is my HTML:</p>\n\n<pre><code>&lt;body class=\"node88\" oncontextmenu=\"return noMenu();\" onkeydown=\"return disableCopyPaste();\"&gt;\n</code></pre>\n\n<p>The <code>noMenu()</code> function is working but <code>disableCopyPaste()</code> doesn't work.</p>\n\n<p>Thanks for helping, best regards.</p>\n",
            "last_activity_date": 1419486727,
            "question_id": 9958478,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "How to Disable Copy Paste (Browser)"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>From your example the directive structure is not parent-child. Therefore you can't  share methods through their controllers. I would use <code>$rootScope.$broadcast</code>. (See <a href=\"https://docs.angularjs.org/api/ng/type/$rootScope.Scope\" rel=\"nofollow\">DOCS</a>)</p>\n\n<p>One directive calls: </p>\n\n<pre><code>$rootScope.$broadcast('someEvent', [1,2,3]);\n</code></pre>\n\n<p>Second directive listens:</p>\n\n<pre><code> scope.$on('someEvent', function(event, mass) {\n    console.log(mass)}\n  );\n</code></pre>\n\n<p>Demo <kbd><strong><a href=\"http://jsfiddle.net/fess81/9Ymvt/2031/\" rel=\"nofollow\">Fiddle</a></strong></kbd></p>\n\n<hr>\n\n<p><em>Fixed directives:</em></p>\n\n<pre><code>app.directive(\"firstDir\", function ($rootScope) {\n    return {\n        restrict: 'E',\n        link: function (scope, element, attrs) {\n            scope.dataToPass = 'empty';\n            scope.doClick = function (valueToPass) {\n                scope.dataToPass = valueToPass;\n                $rootScope.$broadcast('someEvent', {\n                    data: valueToPass\n                });\n            }\n        }\n    };\n});\n\napp.directive(\"secondDir\", function () {\n    return {\n        restrict: 'E',\n        link: function (scope, element, attrs) {\n            scope.receivedData = 'none';\n\n            scope.$on('someEvent', function (event, result) {\n                scope.receivedData = result.data;\n            });\n        }\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>One way you can communicate between them using what is called eventing.</p>\n\n<p>One directive can emit an event on the rootscope which can then be listened by anybody who wants to. You could use <code>$rootScope.$emit</code> or <code>$rootScope.$broadcast</code> to publish events with data and use <code>$scope.$on</code> to listen to the event. In your case you could just do <code>$scope.$emit</code> as well. </p>\n\n<pre><code>app.directive(\"firstDir\", function(){\n    return {\n        restrict : 'E',\n        controller : function($scope){        \n            this.data = 'init value';\n\n            this.set = function(value){\n             //EMIT THE EVENT WITH DATA\n              $scope.$emit('FIRST_DIR_UPDATED', value);\n                this.data = value;\n                // communication with second Directive ???\n            }       \n        },\n        controllerAs : 'firstCtrl'\n    };  \n});\n\napp.directive(\"secondDir\", function(){\n    return {\n        restrict : 'E',\n        controller : function($scope){    \n          var _that = this;\n          //LISTEN TO THE EVENT \n          $scope.$on('FIRST_DIR_UPDATED', function(e, data){\n                 _that.data = data;\n          });\n          this.data = 'init value';   \n        },\n        controllerAs : 'secondCtrl'\n    };  \n});\n</code></pre>\n\n<p><a href=\"http://plnkr.co/edit/6ciS4I?p=preview\" rel=\"nofollow\">Demo</a>\n<a href=\"http://plnkr.co/edit/QDfNou?p=preview\" rel=\"nofollow\">Demo2</a></p>\n\n<p><strong>____________________________________________________________________________</strong></p>\n\n<p>Now speaking of which, it sometimes is really required to inject <code>$rootScope</code> just to have the eventing enabled to a different node in your application. You can instead have a pub/sub mechanism easily built in your app and make use of prototypical inheritance. </p>\n\n<p>Here i am adding 2 methods <code>publish</code> and <code>subscribe</code> on <code>$rootScope's</code> prototype during app initialization. So any child scope or isolated scope  will have these methods available and communication will be so easier without worrying about whether to use <code>$emit</code>, <code>$broadcast</code>, whether i need to inject a <code>$rootscope</code> for communication from isolated scoped directive etc.</p>\n\n<pre><code>app.service('PubSubService', function () {\n\n\n   return {Initialize:Initialize};\n\n     function Initialize (scope) {\n        //Keep a dictionary to store the events and its subscriptions\n        var publishEventMap = {};\n\n         //Register publish events\n          scope.constructor.prototype.publish =  scope.constructor.prototype.publish \n           || function () {\n                var _thisScope = this,\n                    handlers, \n                    args, \n                    evnt;\n                //Get event and rest of the data\n                args = [].slice.call(arguments);\n                evnt = args.splice(0, 1);\n                //Loop though each handlerMap and invoke the handler\n                angular.forEach((publishEventMap[evnt] || []), function (handlerMap) {\n                    handlerMap.handler.apply(_thisScope, args);\n                })\n            }\n\n         //Register Subscribe events\n         scope.constructor.prototype.subscribe = scope.constructor.prototype.subscribe \n            || function (evnt, handler) {\n                var _thisScope = this,\n                    handlers = (publishEventMap[evnt] = publishEventMap[evnt] || []);\n\n                //Just keep the scopeid for reference later for cleanup\n                handlers.push({ $id: _thisScope.$id, handler: handler });\n              //When scope is destroy remove the handlers that it has subscribed.  \n             _thisScope.$on('$destroy', function () {\n                for(var i=0,l=handlers.length; i&lt;l; i++){\n                  if (handlers[i].$id === _thisScope.$id) {\n                        handlers.splice(i, 1);\n                        break;\n                    }\n                }\n            });\n        }\n\n    }\n}).run(function ($rootScope, PubSubService) {\n    PubSubService.Initialize($rootScope);\n});\n</code></pre>\n\n<p>and you could just have any place from your app publish an event without requiring a rootScope.</p>\n\n<pre><code>$scope.publish('eventName', data);\n</code></pre>\n\n<p>and listen anywhere on the application without worrying about using <code>$rootScope</code> or <code>$emit</code> or <code>$broadcast</code>:-</p>\n\n<pre><code>$scope.subscribe('eventName', function(data){\n    //do somthing\n});\n</code></pre>\n\n<p><strong><a href=\"http://plnkr.co/edit/2kHNtE?p=preview\" rel=\"nofollow\">Demo - PubSub</a></strong></p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>What I'm using is exported directive controller. Let's say I have following directive:</p>\n\n<pre><code>app.directive('mainDirective', function () {\n  return {\n    require: 'mainDirective'\n    restrict: 'E',\n    scope: {\n      controller: '='\n    },\n    controller: [\n      '$scope',\n      function ($scope) {\n        // controller methods\n        this.doSomething = function () { ... },\n\n        $scope.controller = this\n        return this\n      }\n    ],\n    link: function (scope, element, attrs, mainDirective) {\n      // some linking stuff\n    }\n  }\n});\n</code></pre>\n\n<p>My html would look something like this:</p>\n\n<pre><code>&lt;main-directive controller=\"mainDirective\"&gt;&lt;/main-directive&gt;\n&lt;sub-directive main-directive=\"mainDirective\"&gt;&lt;/sub-directive&gt;\n</code></pre>\n\n<p>If I wanted to control main-directive from sub-directive I can easily grab it from it's scope and do whatever I want...</p>\n\n<pre><code>app.directive('subDirective', function () {\n  return {\n    restrict: 'E',\n    scope: {\n      mainDirective: '='\n    }\n    link: function (scope, element, attrs) {\n      // do something with main directive\n      scope.mainDirective.doSomething();\n    }\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'am new to Angular.js, I need for my application some communication between directives, I read some documentation about link and require, but can't understand exactly how it works.</p>\n\n<p>For a simple example I have :  live fiddle : <a href=\"http://jsfiddle.net/yw235n98/5/\" rel=\"nofollow\">http://jsfiddle.net/yw235n98/5/</a></p>\n\n<ul>\n<li>2 directives : firstDir, secondDir :: with some data</li>\n<li>firstDir have a click function that will change the data value</li>\n<li>when firsDir click function is triggered I want to change data in secondDir too.</li>\n</ul>\n\n<p><strong>HTML :</strong></p>\n\n<pre><code>&lt;body ng-app=\"myApp\"&gt;\nFirst Directive :   \n&lt;first-dir &gt;\n    &lt;h3&gt;{{firstCtrl.data}}&lt;/h3&gt;\n    &lt;button ng-click=\"firstCtrl.set('NEW VALUE')\"&gt;Change Value&lt;/button&gt;\n&lt;/first-dir&gt;\nSecond Directive : \n&lt;second-dir&gt;\n    &lt;h3&gt;{{secondCtrl.data}}&lt;/h3&gt;\n&lt;/second-dir&gt;\n</code></pre>\n\n<p></p>\n\n<p><strong>Javascript :</strong> </p>\n\n<pre><code>(function(){\n    var app = angular.module('myApp', []);\n\n    app.directive(\"firstDir\", function(){\n        return {\n            restrict : 'E',\n            controller : function(){        \n                this.data = 'init value';\n                this.set = function(value){\n                    this.data = value;\n                    // communication with second Directive ???\n                }       \n            },\n            controllerAs : 'firstCtrl'\n        };  \n    });\n\n    app.directive(\"secondDir\", function(){\n        return {\n            restrict : 'E',\n            controller : function(){        \n                this.data = 'init value';   \n            },\n            controllerAs : 'secondCtrl'\n        };  \n    });\n})();\n</code></pre>\n",
            "last_activity_date": 1423890178,
            "question_id": 25274563,
            "score": 6,
            "tags": [
                "javascript",
                "angularjs",
                "angularjs-directive"
            ],
            "title": "AngularJS communication between directives"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Strings are compared character by character unless they are no equal or there aren't any characters left to compare. The first character of '11' is less than the first character of '3'.</p>\n\n<pre><code>&gt; '11' &lt; '3'\ntrue\n&gt; '31' &lt; '3'\nfalse\n&gt; '31' &lt; '32'\ntrue\n&gt; '31' &lt; '30'\nfalse\n</code></pre>\n\n<p>If we use letters then since <code>b</code> is not less than <code>a</code>, <code>abc</code> is not less than <code>aaa</code>, but since <code>c</code> is less than <code>d</code>, <code>abc</code> is less then <code>abd</code>.</p>\n\n<pre><code>&gt; 'abc' &lt; 'aaa'\nfalse\n&gt; 'abc' &lt; 'abd'\ntrue\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p><code>'1' &lt; '3'</code> and since the first character is the \"most significant character\" (not that this term makes any sense). Any following characters will not be compared anymore.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It compares by each character, the following will be <code>false</code>:</p>\n\n<pre><code>if ('41' &lt; '3') alert('true');\n</code></pre>\n\n<p>Since <code>4</code> is not less than <code>3</code>. So essentially your comparison boiled down to this:</p>\n\n<pre><code>if ('1' &lt; '3') alert('true'); // true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>By default, JavaScript will compare two strings by each character's ordinal value; much like how <code>strcmp()</code> works in C.</p>\n\n<p>To make your comparison work, you can cast either side to a number to tell the interpreter your intentions of numeric comparison:</p>\n\n<pre><code>Number('11') &lt; '3' // false\n+'11' &lt; '3' // false, using + to coerce '11' to a numeric\n\n'11' &lt; Number('3') // false\n'11' &lt; +'3' // false\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In Many Programming languages Strings are compared as <a href=\"http://en.wikipedia.org/wiki/Lexicographical_order\" rel=\"nofollow\">lexicographically</a>. You can check <a href=\"http://en.wikipedia.org/wiki/Alphabetical_order#Alphabetical_order\" rel=\"nofollow\">Alphabetical order</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It has been treated as string comparision. So 1 &lt; 3 (1st chars of two strings) then string 11 preceeds string 3</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<pre><code>if ('11' &lt; '3') alert('true');\n</code></pre>\n\n<p>It's obvious that it's not comparing them by length but by encoding instead. However, I don't understand how it works. I need some explanation :-)</p>\n",
            "last_activity_date": 1338648018,
            "question_id": 10863092,
            "score": 6,
            "tags": [
                "javascript",
                "string",
                "comparison"
            ],
            "title": "Why is string &quot;11&quot; less than string &quot;3&quot;?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>because your function <code>codeAddress</code> is executed, assigning empty array to loc, executing asynchronous request to google geocoder and returns loc, which is empty, because its real value is assigned when response from google comes. In other words, allert should be inside response handler:</p>\n\n<pre><code>var geocoder;\nvar map;\n\n\n  function initialize() {\n    geocoder = new google.maps.Geocoder();\n    var latlng = new google.maps.LatLng(-34.397, 150.644);\n    var myOptions = {\n      zoom: 8,\n      center: latlng,\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n    }\n    map = new google.maps.Map(document.getElementById(\"map_canvas\"), myOptions);\n  }\n\n  function codeAddress() {\n    var address = document.getElementById(\"address\").value;\n    var loc=[];\n\n    // next line creates asynchronous request\n    geocoder.geocode( { 'address': address}, function(results, status) {\n      // and this is function which processes response\n      if (status == google.maps.GeocoderStatus.OK) {\n        loc[0]=results[0].geometry.location.lat();\n        loc[1]=results[0].geometry.location.lng();\n\n        alert( loc ); // the place where loc contains geocoded coordinates\n\n      } else {\n        alert(\"Geocode was not successful for the following reason: \" + status);\n      }\n    });\n\n    // pretty meaningless, because it always will be []\n    // this line is executed right after creating AJAX request, but not after its response comes\n    return loc;\n  }\n\n  function display(){\n     codeAddress();\n  }\n</code></pre>\n\n<p>this is how  AJAX works... process results in callback handlers.</p>\n\n<hr/>\n\n<p>if you want to separate geocoding and 'dispalying' you can execute display function inside handler:</p>\n\n<pre><code>  function codeAddress() {\n    var address = document.getElementById(\"address\").value;\n\n    geocoder.geocode( { 'address': address}, function(results, status) {\n      if (status == google.maps.GeocoderStatus.OK) {\n        var loc=[]; // no need to define it in outer function now\n        loc[0]=results[0].geometry.location.lat();\n        loc[1]=results[0].geometry.location.lng();\n\n        display( loc ); \n\n      } else {\n        alert(\"Geocode was not successful for the following reason: \" + status);\n      }\n    });\n\n  }\n\n  function display( long_lat ){\n     alert(long_lat);\n  }\n</code></pre>\n\n<p>html:</p>\n\n<pre><code>&lt;input type=\"button\" value=\"Encode\" onclick=\"codeAddress()\"&gt;\n</code></pre>\n\n<p><hr />\nyou can make it even more generic, if you will geocode not only to display. Then you can define callback as parameter to <code>codeAddress</code> function:</p>\n\n<pre><code>function codeAddress( callback ) {\n...\n geocoder.geocode( { 'address': address}, function(results, status) {\n   ...\n   callback( loc ); // instead of dispaly( loc );\n   ...\n }\n...\n}\n\ncodeAddress( display ); // to execute geocoding\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>When I use the code below its alerting a blank value? why is that?</p>\n\n<p>HTML</p>\n\n<pre><code>&lt;body onload=\"initialize()\"&gt;\n &lt;div id=\"map_canvas\" style=\"width: 320px; height: 480px;\"&gt;&lt;/div&gt;\n  &lt;div&gt;\n    &lt;input id=\"address\" type=\"textbox\" value=\"Sydney, NSW\"&gt;\n    &lt;input type=\"button\" value=\"Encode\" onclick=\"display()\"&gt;\n  &lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>JavaScript</p>\n\n<pre><code>var geocoder;\nvar map;\n\n\n  function initialize() {\n    geocoder = new google.maps.Geocoder();\n    var latlng = new google.maps.LatLng(-34.397, 150.644);\n    var myOptions = {\n      zoom: 8,\n      center: latlng,\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n    }\n    map = new google.maps.Map(document.getElementById(\"map_canvas\"), myOptions);\n  }\n\n  function codeAddress() {\n    var address = document.getElementById(\"address\").value;\n    var loc=[];\n\n    geocoder.geocode( { 'address': address}, function(results, status) {\n      if (status == google.maps.GeocoderStatus.OK) {\n        loc[0]=results[0].geometry.location.lat();\n        loc[1]=results[0].geometry.location.lng();\n\n      } else {\n        alert(\"Geocode was not successful for the following reason: \" + status);\n      }\n    });\n\n    return loc;\n  }\n\n  function display(){\n     var long_lat=codeAddress();\n    alert(long_lat);\n  }\n</code></pre>\n",
            "last_activity_date": 1299678409,
            "question_id": 5245915,
            "score": 6,
            "tags": [
                "javascript",
                "google-maps",
                "geocoding"
            ],
            "title": "How do I return a longitude and latitude from Google Maps JavaScript geocoder?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>We have had to make a similar modifiaction.  We do this by extending the default options, to include a rows value, and the width of each item (we call them modules) then divide the width by the number of rows.</p>\n\n<p>Code added to jCarousel function...</p>\n\n<p>Add to default options: </p>\n\n<pre><code>moduleWidth: null,\nrows:null,\n</code></pre>\n\n<p>Then set when creating jCarousel:</p>\n\n<pre><code>$('.columns2.rows2 .mycarousel').jcarousel( {\n        scroll: 1,\n        moduleWidth: 290,\n        rows:2,\n        itemLoadCallback: tonyTest,\n        animation: 'slow'\n    });\n</code></pre>\n\n<p>The find and edit the lines in: </p>\n\n<pre><code>$.jcarousel = function(e, o) { \n\nif (li.size() &gt; 0) {\n...\nmoduleCount = li.size();\nwh = this.options.moduleWidth * Math.ceil( moduleCount / this.options.rows );\nwh = wh + this.options.moduleWidth;\n\nthis.list.css(this.wh, wh + 'px');\n\n// Only set if not explicitly passed as option\nif (!o || o.size === undefined)\n   this.options.size = Math.ceil( li.size() / this.options.rows );\n</code></pre>\n\n<p>Hope this helps,</p>\n\n<p>Tony Dillon</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>you might want to look at <a href=\"http://flesler.blogspot.com/2008/02/jqueryserialscroll.html\" rel=\"nofollow\">serialScroll</a> or <a href=\"http://flesler.blogspot.com/2007/10/jquerylocalscroll-10.html\" rel=\"nofollow\">localScroll</a> instead of jcarousel.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I found this post on Google Groups that has a working version for multiple rows.  I have used this and it works great. <a href=\"http://groups.google.com/group/jquery-en/browse%5Fthread/thread/2c7c4a86d19cadf9\" rel=\"nofollow\">http://groups.google.com/group/jquery-en/browse_thread/thread/2c7c4a86d19cadf9</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is .js code substitutions according to @Sike and a little additional of me, the height was not set dynamically, now it is.</p>\n\n<pre><code>var defaults = {\n        vertical: false,\n        rtl: false,\n        start: 1,\n        offset: 1,\n        size: null,\n        scroll: 3,\n        visible: null,\n        animation: 'normal',\n        easing: 'swing',\n        auto: 0,\n        wrap: null,\n        initCallback: null,\n        setupCallback: null,\n        reloadCallback: null,\n        itemLoadCallback: null,\n        itemFirstInCallback: null,\n        itemFirstOutCallback: null,\n        itemLastInCallback: null,\n        itemLastOutCallback: null,\n        itemVisibleInCallback: null,\n        itemVisibleOutCallback: null,\n        animationStepCallback: null,\n        buttonNextHTML: '&lt;div&gt;&lt;/div&gt;',\n        buttonPrevHTML: '&lt;div&gt;&lt;/div&gt;',\n        buttonNextEvent: 'click',\n        buttonPrevEvent: 'click',\n        buttonNextCallback: null,\n        buttonPrevCallback: null,\n        moduleWidth: null,\n        rows: null,\n        itemFallbackDimension: null\n    }, windowLoaded = false;\n\n\n    this.clip.addClass(this.className('jcarousel-clip')).css({\n        position: 'relative',\n        height: this.options.rows * this.options.moduleWidth\n    });\n\n    this.container.addClass(this.className('jcarousel-container')).css({\n            position: 'relative',\n            height: this.options.rows * this.options.moduleWidth\n        });\n\n    if (li.size() &gt; 0) {\n            var moduleCount = li.size();\n            var wh = 0, j = this.options.offset;\n            wh = this.options.moduleWidth * Math.ceil(moduleCount / this.options.rows);\n            wh = wh + this.options.moduleWidth;\n\n            li.each(function() {\n                self.format(this, j++);\n                //wh += self.dimension(this, di);\n            });\n\n            this.list.css(this.wh, wh + 'px');\n\n\n            // Only set if not explicitly passed as option\n            if (!o || o.size === undefined) {\n                this.options.size = Math.ceil(li.size() / this.options.rows);\n            }\n        }\n</code></pre>\n\n<p>This is the call in using the static_sample.html of the code bundle in the download of jscarousel:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\njQuery(document).ready(function() {\n    jQuery('#mycarousel').jcarousel( {\n        scroll: 1,\n        moduleWidth: 75,\n        rows:2,        \n        animation: 'slow'\n    });\n});\n\n&lt;/script&gt;\n</code></pre>\n\n<p>In case you need to change the content of the carousel and reload the carousel you need to do this:</p>\n\n<pre><code>// Destroy contents of wrapper\n$('.wrapper *').remove();\n// Create UL list\n$('.wrapper').append('&lt;ul id=\"carousellist\"&gt;&lt;/ul&gt;')\n// Load your items into the carousellist\nfor (var i = 0; i &lt; 10; i++)\n{\n$('#carouselist').append('&lt;li&gt;Item ' + i + '&lt;/li&gt;');\n}\n// Now apply carousel to list\njQuery('#carousellist').jcarousel({ // your config });\n</code></pre>\n\n<p>The carousel html definition needs to be like this:</p>\n\n<pre><code>&lt;div class=\"wrapper\"&gt;\n    &lt;ul id=\"mycarousel0\" class=\"jcarousel-skin-tango\"&gt;\n     ...&lt;li&gt;&lt;/li&gt;\n     &lt;/ul&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Thanks to <a href=\"http://www.cabezabomba.com/webcidentes/?p=308\">Webcidentes</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I tried the above solutions and found changing the original jCarousel code to be troublesome - it introduced buggy behaviour for me because it didn't play nice with some of the features of jCarousel such as the continous looping etc.</p>\n\n<p>I used another approach which works great and I thought others may benefit from it as well. It is the JS code I use to create the li items to support a jCarousel with multiple rows with elegant flow of items, i.e. fill horizontally, then vertically, then scrollpages:</p>\n\n<p>123 | 789<br>\n456 | 0AB</p>\n\n<p>It will add (value of var carouselRows) items to a single li and as such allows jCarousel to support multiple rows without modifying the original jCarousel code.</p>\n\n<pre><code>// Populate Album photos with support for multiple rows filling first columns, then rows, then pages\nvar carouselRows=3; // number of rows in the carousel\nvar carouselColumns=5 // number of columns per carousel page\nvar numItems=25; // the total number of items to display in jcarousel\n\nfor (var indexpage=0; indexpage&lt;Math.ceil(numItems/(carouselRows*carouselColumns)); indexpage++) // for each carousel page\n{\n    for (var indexcolumn = 0; indexcolumn&lt;carouselColumns; indexcolumn++) // for each column on that carousel page\n    {\n        // handle cases with less columns than value of carouselColumns\n        if (indexcolumn&lt;numItems-(indexpage*carouselRows*carouselColumns))\n        {\n            var li = document.createElement('li');\n\n            for (var indexrow = 0; indexrow &lt; carouselRows; indexrow++) // for each row in that column\n            {\n                var indexitem = (indexpage*carouselRows*carouselColumns)+(indexrow*carouselColumns)+indexcolumn;\n\n                // handle cases where there is no item for the row below\n                if (indexitem&lt;numItems) \n                {\n                    var div = document.createElement('div'), img = document.createElement('img');\n                    img.src = imagesArray[indexitem]; // replace this by your images source\n                    div.appendChild(img);\n                    li.appendChild(div);\n                }\n            }\n            $ul.append(li); // append to ul in the DOM\n        }\n    }\n}\n</code></pre>\n\n<p>After this code has filled the ul with the li items jCarousel should be invoked.</p>\n\n<p>Hope this helps someone.</p>\n\n<p>Jonathan</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you need a quick solution for a fixed or one-off requirement that definitely doesn't involve changing core library code which may be updated from time to time, the following may suit.  To turn the following six items into two rows on the carousel:</p>\n\n<pre><code>&lt;div class=\"item\"&gt;contents&lt;/div&gt;\n&lt;div class=\"item\"&gt;contents&lt;/div&gt;\n&lt;div class=\"item\"&gt;contents&lt;/div&gt;\n&lt;div class=\"item\"&gt;contents&lt;/div&gt;\n&lt;div class=\"item\"&gt;contents&lt;/div&gt;\n&lt;div class=\"item\"&gt;contents&lt;/div&gt;\n</code></pre>\n\n<p>you can use a little JS to wrap the divs into LI groups of two then initialise the carousel.  your scenario may allow you to do the grouping on the server isn't always possible.  obviously you can extend this to however many rows you need.</p>\n\n<pre><code>var $pArr = $('div.item');\nvar pArrLen = $pArr.length;\nfor (var i = 0;i &lt; pArrLen;i+=2){\n      $pArr.filter(':eq('+i+'),:eq('+(i+1)+')').wrapAll('&lt;li /&gt;');\n};  \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to use jcarousel to build a container with multiple rows, I've tried a few things but have had no luck. Can anyone make any suggestions on how to create it?</p>\n",
            "last_activity_date": 1349949695,
            "question_id": 213680,
            "score": 6,
            "tags": [
                "javascript",
                "jquery",
                "jcarousel"
            ],
            "title": "Multiple rows with jcarousel"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>this link make you understand : <a href=\"http://www.quirksmode.org/js/this.html\" rel=\"nofollow\">The this keyword</a></p>\n\n<pre><code>function doSomething() {\n   this.style.color = '#cc0000';\n}\n</code></pre>\n\n<p>In JavaScript this always refers to the \u201cowner\u201d of the function we're executing, or rather, to the object that a function is a method of. When we define our faithful function doSomething() in a page, its owner is the page, or rather, the window object (or global object) of JavaScript. An onclick property, though, is owned by the HTML element it belongs to.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The answer is \"it depends\", since  the meaning of <code>this</code> depends on the <em>context</em> in which it is invoked.</p>\n\n<p>For example in things like callbacks, <code>this</code> no longer refers to the current object, but more typically to the DOM element on which the event occurred:</p>\n\n<p>So this identical-looking function:</p>\n\n<pre><code>Foo.prototype.handleSomeEvent = function(e) {\n    return this.name;\n}\n</code></pre>\n\n<p>if used as an event callback would try to resolve the <code>name</code> attribute of the element, and not your object's name.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><code>this</code> refers to the object invoking the function, which in this case is <code>myFoo</code>.  When you construct <code>myFoo</code> as a <code>new Foo('John')</code> the <code>this</code> keyword enables you to set <code>myFoo.name = 'John'</code>, so when you call <code>myFoo.get_name()</code> it will also let you <code>return myFoo.name</code> which equals <code>John</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In your example they are the same, when you call <code>this</code> from a method you override in the prototype chain you are referring to the same thing as when calling <code>this</code> from within the constructor function.</p>\n\n<p>It gets trickier when working with callbacks or when defining member variables in prototype methods.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>When you use the <code>new</code> keyword <code>this</code> is the instance object that you are creating.</p>\n\n<pre><code>var foo = new Bar();\n</code></pre>\n\n<p>i.e. the instance of <code>Bar</code> being assigned to <code>foo</code></p>\n\n<hr>\n\n<p>When you don't, <code>this</code> is the object on which the method you are calling lives.</p>\n\n<pre><code>var baz = foo.thing();\nvar boz = thing();\n</code></pre>\n\n<p>i.e. <code>foo</code> in the first example and <code>window</code> in the second (<code>window</code> is the default object).</p>\n\n<hr>\n\n<p>You can also fritz with it using <code>apply</code></p>\n\n<pre><code>var baz = foo.thing.apply(bar);\n</code></pre>\n\n<p>Here <code>this</code> (still inside the <code>thing</code> method) is <code>bar</code>)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The \"this\" keyword always refers to the owner of the function. So for instance if you click on a button that accesses that function, this refers to that button. So if you have button A that has an onclick that calls that function then this is A.</p>\n\n<p>In this case this would be John since in both cases they reference myFoo which is John since Myfoo is used in calling them</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In Javascript, the value of <code>this</code> is dependent on <strong>the way you call the function</strong>.</p>\n\n<p>There are 5 ways to call a function in JS, and they all have effect on <code>this</code>:</p>\n\n<ol>\n<li><code>new Foo();</code> &lt;= here, you\u2019re creating a new object, and <code>this</code> will reflect that new object</li>\n<li><code>Foo();</code> &lt;= here, you're calling the function as-is, and <code>this</code> will be the global object(!)</li>\n<li><code>var obj = { foo: Foo };<br>\nobj.foo();</code> &lt;= here, you're calling the function as a method of <code>obj</code>; <code>this</code> will be <code>obj</code></li>\n<li><code>Foo.call(thisObject, arg1, arg2);</code> &lt;= here, you can specify the value of <code>this</code> in the first argument</li>\n<li><code>Foo.apply(thisObject, [args]);</code> &lt;= here, you can specify the value of <code>this</code> in the first argument</li>\n</ol>\n\n<p>In 4 and 5, the difference between <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/call\" rel=\"nofollow\">call</a> and <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/function/apply\" rel=\"nofollow\">apply</a> is that with <code>call</code>, you need to pass all the arguments separately, whereas with <code>apply</code>, you can pass an array containing all the arguments.</p>\n\n<p>Note that in my example 2 above, the function <em>should</em> have been called <code>foo</code> instead of <code>Foo</code>. Since it\u2019s impossible to know off-hand whether a function is supposed to be called with <code>new</code> or not, the consensus is to start the function name with a capital letter if it\u2019s a constructor (and should be used with <code>new</code>); otherwise, it should start with lowercase.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>wow all of these different answers, and only one of them even used the word \"context\"!  Here is the straightforward answer to your question:</p>\n\n<p>the <code>this</code> keyword is an object reference that points to the context object.  </p>\n\n<p>In your example, <code>this</code> refers to an instance of the <code>Foo</code> object.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I get confused about '<strong>this</strong>' keyword in the following codes, there are two 'this':</p>\n\n<pre><code>var Foo = function(string){\n  this.name=string // 1st-this\n}\n\nFoo.prototype.get_name = function(){\n  return this.name // 2nd-this\n}\n\nvar myFoo = new Foo('John')\n\nthe_name=myFoo.get_name()\n</code></pre>\n\n<p>'<strong>the_name</strong>' is equal to 'John', the prototype method get the name by return <strong>this.name</strong>. But can anyone explain to me the 1st-<strong>this</strong> and 2nd-<strong>this</strong>, what do they stand for?</p>\n",
            "last_activity_date": 1347349678,
            "question_id": 5429739,
            "score": 5,
            "tags": [
                "javascript",
                "this",
                "prototype"
            ],
            "title": "&#39;this&#39; keyword, not clear"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p><strong>As far as I know it is not possible  to actually <em>suppress</em> showing the title tag.</strong></p>\n\n<p>There are some workarounds however.</p>\n\n<p>Assuming you mean you want to preserve the title property on your links and elements, you could use Javascript to remove the title property at <code>onmouseover()</code> and set it again at <code>onmouseout()</code>.</p>\n\n<pre><code>// Suppress tooltip display for links that have the classname 'suppress'\nvar links = document.getElementsByTagName('a');\nfor (var i = 0; i &lt; links.length; i++) {\n    if (links[i].className == 'suppress') {\n        links[i]._title = links[i].title;\n        links[i].onmouseover = function() { \n            this.title = '';\n        }\n        links[i].onmouseout = function() { \n            this.title = this._title;\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Something like this in prototype would blank all title attributes of <a href=\"http://microformats.org/wiki/datetime-design-pattern\" rel=\"nofollow\">datetime microformats</a> with a class of 'dtstart':</p>\n\n<pre><code>$$('abbr.dtstart').each(function(abbr){abbr.title=' '})\n</code></pre>\n\n<p>Note I used a blank space, the Mozilla documentation for <a href=\"https://developer.mozilla.org/en/DOM/element.title\" rel=\"nofollow\">element.title</a> states</p>\n\n<blockquote>\n  <p>According to <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=264001\" rel=\"nofollow\">bug 264001</a> , setting\n  title to the empty string triggers the\n  default inheriting behavior. To cancel\n  inheritance, title must be set to a\n  non-empty whitespace string.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This won't help with your problem but might be interesting nevertheless: There's another universal attribute apart from <code>title</code> which can be used to store data - <code>lang</code>!</p>\n\n<p>Just convert the data you want to store to a continuous string and prefix it with <code>'x-'</code> to declare private usage in accordance with RFC 1766.</p>\n\n<p><hr /></p>\n\n<p>In the comments, sanchothefat clarified that he wants to solve the usability-issues with the abbr-design-pattern in microformats. But there are other patterns which are as semantically meaningful (or, in my opinion even more so) than this pattern. What I'd do:</p>\n\n<pre><code>&lt;p&gt;\n The party is at\n  &lt;dfn class=\"micro-date\"&gt;10 o'clock on the 10th\n   &lt;var&gt;20051010T10:10:10-010&lt;/var&gt;&lt;/dfn&gt;.\n&lt;/p&gt;\n</code></pre>\n\n<p>together wtih these styles</p>\n\n<pre><code>dfn.micro-date {\n    font-weight: inherit;\n    font-style: inherit;\n}\ndfn.micro-date var {\n    display: none;\n}\n</code></pre>\n\n<p>In my opinion, the semantically most correct way would be to use a <code>dl</code> definition list - which isn't allowed inside of paragraphs. This can be worked around with the following pattern:</p>\n\n<pre><code>&lt;p&gt;\n The party is at &lt;q cite=\"#micro-dates\"&gt;10 o'clock on the 10th&lt;/q&gt;.\n&lt;/p&gt;\n\n&lt;dl id=\"micro-dates\"&gt;\n &lt;dt&gt;10 o'clock on the 10th&lt;/dt&gt;\n &lt;dd&gt;20051010T10:10:10-010&lt;/dd&gt;\n&lt;/dl&gt;\n</code></pre>\n\n<p>which requires a more sophisticated stylesheet:</p>\n\n<pre><code>q[cite='#micro-dates']:before {\n    content: '';\n}\nq[cite='#micro-dates']:after {\n    content: '';\n}\ndl#micro-dates {\n    display: none;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is what i did.</p>\n\n<pre><code>$('.fancybox').hover(\n    function(){\n        $(this).attr('alt',$(this).attr('title'));\n        $(this).attr('title','');\n    },\n    function(){\n        $(this).attr('title',$(this).attr('alt'));\n        $(this).removeAttr('alt');\n    }\n).click(function(){\n    $(this).attr('title',$(this).attr('alt'));\n    $(this).removeAttr('alt');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Add this element to your html  </p>\n\n<pre><code>    onmouseover=\"title='';\"\n</code></pre>\n\n<p>For example i have a asp.net checkbox I store a hidden variable but do not want the user to see on as the tooltip.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Ran across this thread when using the <a href=\"http://timeago.yarp.com/\" rel=\"nofollow\">jQuery plugin timeago</a>. Actually the solution is very simple using the CSS property <code>pointer-events</code>. Posting this for the benefit of people coming here through a search engine :)</p>\n\n<pre><code>.suppress {\n    pointer-events:none;\n}\n</code></pre>\n\n<p>Note that you shouldn't use this for things like links that should click through to something. In this case use the accepted JS solution.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can hook the 'mouseenter' event and return false which will stop the native tooltips from being displayed.</p>\n\n<pre><code>$(selector).on( 'mouseenter', function(){\n    return false;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I want to suppress the web browser's default tooltip display when a user hovers over certain links and  elements. I know it's possible but I don't know how. Can anyone help?</p>\n\n<p>The reason for this is to suppress the tooltip for microformatted date-times. The BBC dropped support for hCalendar because the appearane of the machine-readable date was an accessibility issue for those with cognitive disabilities aswell as some screen reader users. <a href=\"http://www.bbc.co.uk/blogs/bbcinternet/2008/07/why_the_bbc_removed_microforma.html\" rel=\"nofollow\">http://www.bbc.co.uk/blogs/bbcinternet/2008/07/why_the_bbc_removed_microforma.html</a></p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>I whipped up a jquery plugin along the same lines as Aron's suggestion...</p>\n\n<pre><code>// uFsuppress plugin v1.0 - toggle microformatted dates\n(function($){\n$.ufsuppress = function() {\n\t$(\".dtstart,.dtend,.bday\").hover(function(){\n\t\t$(this).attr(\"ufdata\",$(this).attr(\"title\"));\n\t\t$(this).removeAttr(\"title\");\n\t},function(){\n\t\t$(this).attr(\"title\",$(this).attr(\"ufdata\"));\n\t\t$(this).removeAttr(\"ufdata\");\n\t});\n}\n})(jQuery);\n\n// Usage\n$.ufsuppress();\n</code></pre>\n",
            "last_activity_date": 1418894656,
            "question_id": 457366,
            "score": 5,
            "tags": [
                "javascript",
                "jquery",
                "accessibility",
                "microformats"
            ],
            "title": "Disabling browser tooltips on links and &lt;abbr&gt;s"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If I understand correctly</p>\n\n<blockquote>\n  <p>what does this data refer to? How is it filled?</p>\n</blockquote>\n\n<p>You mean how it works? It depends on how the callback gets called. For example:</p>\n\n<pre><code>function Lib() {}\n\nLib.prototype.text = function(callback) {\n  var data = 'hello world';\n  callback(data); // `data` is the first parameter\n  return this; // chain\n};\n\nvar lib = new Lib();\n\nlib.text(function(data){\n  console.log(data); //=&gt; \"hello world\"\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>in d3 the d3.select(\"body\") will return something <code>{search_element:document.body,selectAll:function,...}</code> so with the dot notation you call the previous object's available function. It maybe just returns the class itself. So all the methods are available in whatever order with the next dot. But in ajax <code>done</code>, some functions have to be called so they fill the object's important parameters the <code>done</code> function uses.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The <code>d</code> corresponds to a single element in the set of data first passed in by <code>.data(data).enter()</code> in the earlier method call.  What's happening is that d3 is implicitly looping over the corresponding dom elements that map to the data, hence the whole notion of data driven documents or d3.  </p>\n\n<p>That is, for each element in your data, when you call a <code>selectAll()</code> you should expect to see the same number of elements appended to the dom as there are in your data set.  So when you hit a <code>.attr()</code> call, the single datum which corresponds to an element in the dom is passed in to the function.  When you're reading</p>\n\n<pre><code>.append(\"rect\").attr(\"width\",function(datum){})...\n</code></pre>\n\n<p>you should read that as a single iteration over one element in your whole set of data that's being bound to your selection.</p>\n\n<p>I'm a bit unsure I've answered your question as it seems to be both a mixture of questions about declarative/functional programming as well as method chaining.  The above answer is with respect to the declarative/functional manner of d3.  The below answer is in reference to method chaining.  </p>\n\n<p>Here's a great example that offers more insight into method chaining outlined by Mike Bostock's in his wonderful article <a href=\"http://bost.ocks.org/mike/chart/\" rel=\"nofollow\">http://bost.ocks.org/mike/chart/</a>. </p>\n\n<p>I recommend that you read through the d3 api found here (<a href=\"https://github.com/mbostock/d3/wiki/API-Reference\" rel=\"nofollow\">https://github.com/mbostock/d3/wiki/API-Reference</a>) to further understand what each function is operating on.  For example selection.filter Furthermore I highly recommend that you step in to a toy example such as the one that you've given to further understand what's going on.</p>\n\n<p>Method chaining with respect to d3 reusable charts.</p>\n\n<pre><code>function SomeChart()\n{\n    var someProperty = \"default value of some sort\";\n\n    function chartObject()\n    {\n    }\n\n    chartObject.setSomeProperty(propertyValue)\n    { \n     if (!arguments.length) return someProperty;\n     someProperty = property;\n     return chartObject;\n    }\n\n    return chartObject;\n}  \n\n\n\nvar chart = SomehChart();\n</code></pre>\n\n<p>What is chart at this point?</p>\n\n<pre><code>chart = chart.setSomeProperty(\"some special value\");\n</code></pre>\n\n<p>What is chart at this point?</p>\n\n<pre><code>chart = chart.setSomeProperty();\n</code></pre>\n\n<p>What is chart at this point?</p>\n\n<p>What's the difference between the following?</p>\n\n<pre><code>var chart = SomeChart().setSomeProperty(\"some special value\");\n</code></pre>\n\n<p>and</p>\n\n<pre><code>var chart = SomeChart();\nchart.setSomeProperty();\n</code></pre>\n\n<p>The answer is that they're all the same except for when <code>chart = chart.setSomeProperty();</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Two different topics, so I'll explain them separately:</p>\n\n<h1>Using functions as method parameters</h1>\n\n<p>First, a correction:  The examples you are giving are <em>not</em> examples where \"one method returns to another method that has a named input parameter\".  They are examples where a function is given as the input parameter to another method.</p>\n\n<p>To clarify, I'll give you an example where the return value of one function <em>is</em> used as the input to another.</p>\n\n<pre><code>var a = \"Hello \",\n    b = \"World!\";\n\nvar c = a.concat( b.toUpperCase() ); //c = \"Hello WORLD!\"\n</code></pre>\n\n<p>In order to create <code>c</code>, the following happens, in order:</p>\n\n<ol>\n<li>The browser starts to parse the <code>concat</code> method, but needs to figure out what parameter to give it.</li>\n<li>That parameter includes a method call, so the <code>toUpperCase()</code> method of <code>b</code> is executed, returning the string \"WORLD!\".</li>\n<li>The returned string becomes the parameter for <code>a</code>'s <code>concat()</code> method which can now be executed.  </li>\n</ol>\n\n<p>As far as the <code>concat()</code> method is concerned, the result is the same as if you wrote <code>c = a.concat(\"WORLD!\")</code> -- it doesn't care that the string \"WORLD!\" was created by another function.</p>\n\n<p>You can tell that the <em>returned value</em> of <code>b.toUpperCase()</code> is being passed as the parameter, and <em>not</em> the function itself, because of the parentheses at the end of the function name.  Parentheses after a function name tell the browser to execute that function, just as soon as it has figured out the values of any parameters to that function.  <em>Without</em> the parentheses, the function is treated as any other object, and can be passed around as a parameter or variable without actually doing anything.</p>\n\n<p>When a function <em>object</em>, unexecuted, is used as the parameter for another function, what happens is entirely dependent on the instructions inside that second function.  If you pass that function object to <code>console.log()</code>, the string representation of the function will be printed to the console without ever executing the function you passed in.  However, most methods that accept another function as input are designed to call that function with specified parameters.</p>\n\n<p>One example is the <code>map()</code> method of arrays.  The <code>map</code> method creates a new array in which every element is the result of running the mapping function on the corresponding element of the original array.</p>\n\n<pre><code>var stringArray = [\"1\", \"2!\", \"3.0\", \"?\"];\n\nvar numberArray = stringArray.map(parseFloat); //numberArray = [1, 2, 3, NaN]\n</code></pre>\n\n<p>The function <code>parseFloat()</code> is a built-in function that takes a string and tries to figure out a number from it.  Note that when I pass it in to the map function, I'm just passing it in as a variable name, not executing it with parentheses at the end.  It is executed by the map function, and it is the map function that decides what parameters it gets.  The results of each call to <code>parseFloat</code> are assigned by the <code>map</code> function to their place in the result array.</p>\n\n<p>Specifically, the map function executes <code>parseFloat</code> with <em>three</em> parameters: the element from the array, the index of that element in the array, and the array as a whole.  The <code>parseFloat</code> function only uses one parameter, however, so the second and third parameters are ignored.  (If you try to do the same thing with <code>parseInt</code>, however, you'll get unexpected results because <code>parseInt</code> <em>does</em> use a second parameter -- which it treats as the radix (\"base\") of the integer.)   </p>\n\n<p>The map function doesn't care how many parameters the passed-in function is expecting, and it certainly doesn't care which variable names are used inside that function.  If you were writing the map function yourself, it would look something like this:</p>\n\n<pre><code>Array.prototype.myMap = function(f) {\n\n    var result = [];\n\n    for (var i = 0, n=this.length; i&lt;n; i++) {\n\n         result[i] = f( this[i], i, this);\n                  //call the passed-in function with three parameters\n    }\n    return result;\n};\n</code></pre>\n\n<p>The <code>f</code> function is called, and given parameters, without knowing anything about what it is or what it does.  The parameters are given in a specific order -- element, index, array -- but are not linked to any particular parameter name.</p>\n\n<p>Now, a limitation of something like the <code>map</code> method is that there are very few Javascript functions which can be called directly, just passing a value as a parameter.  Most functions are methods of a specific object.  For example, we couldn't use the <code>toUpperCase</code> method as a parameter to <code>map</code>, because <code>toUpperCase</code> only exists as a method of a string object, and only acts on that particular string object, not on any parameter that the map function might give it.  In order to map an array of strings to uppercase, you need to create your own function that works in the way the map function will use it.</p>\n\n<pre><code>var stringArray = [\"hello\", \"world\", \"again\"];\n\nfunction myUpperCase(s, i, array) {\n\n     return s.toUpperCase(); //call the passed-in string's method\n\n}\n\nvar uppercaseStrings = stringArray.map( myUpperCase );\n   //uppercaseStrings = [\"HELLO\", \"WORLD\", \"AGAIN\"]\n</code></pre>\n\n<p>However, if you're only ever going to use the function <code>myUpperCase</code> this once, you don't need to declare it separately and give it a name.  You can use it directly as an <em>anonymous function</em>.</p>\n\n<pre><code>var stringArray = [\"hello\", \"world\", \"again\"];\n\nvar uppercaseStrings = stringArray.map( \n                           function(s,i,array) {\n                               return s.toUpperCase();\n                           }\n                       );\n   //uppercaseStrings still = [\"HELLO\", \"WORLD\", \"AGAIN\"]\n</code></pre>\n\n<p>Starting to look familiar?  This is the structure used by so many d3 and JQuery functions -- you pass-in a function, either as a function name or as an anonymous function, and the d3/JQuery method calls your function on each element of a selection, passing in specified values as the first, second and maybe third parameter.</p>\n\n<p>So what about the parameter names?  As you mentioned, they can be anything you want.  I could have used very long and descriptive parameter names in my function:</p>\n\n<pre><code>function myUpperCase(stringElementFromArray, indexOfStringElementInArray, ArrayContainingStrings) { \n\n         return stringElementFromArray.toUpperCase();\n}\n</code></pre>\n\n<p>The values that get passed in to the function will be the same, based purely on the order in which the map function passes them in.  In fact, since I never use the index parameter or the array parameter, I can leave them out of my function declaration and just use the first parameter.  The other values still get passed in by <code>map</code>, but they are ignored.  However, if I <em>wanted</em> to use the second or third parameter passed in by <code>map</code>, I would have to declare a name for the first parameter, just to keep the numbering straight:</p>\n\n<pre><code>function indirectUpperCase (stringIDontUse, index, array) {\n\n         return array[index].toUpperCase();\n}\n</code></pre>\n\n<p>That's why, if you want to use the index number in d3, you have to write <code>function(d,i){return i;}</code>.  If you just did <code>function(i){return i;}</code> the value of <code>i</code> would be the data object, because that's what the d3 functions always pass as the first parameter, regardless of what you call it.  It's the outside function that passes in the values of the parameters.  The parameter names only exist inside the inner function.</p>\n\n<hr>\n\n<p>Requisite caveats and exceptions:</p>\n\n<ul>\n<li><p>I said that the map function doesn't care how many parameters a passed-in function expects.  That's true, but other outer functions could use the passed-in function's <code>.length</code> property to figure out how many parameters are expected and pass different parameter values accordingly.</p></li>\n<li><p>You don't <em>have</em> to name arguments for a function in order to access passed-in parameter values.  You can also access them using the <code>arguments</code> list inside that function.  So another way of writing the uppercase mapping function would be:</p>\n\n<pre><code>function noParamUpperCase() {\n\n       return arguments[0].toUpperCase();\n}\n</code></pre>\n\n<p>However, note that if an outer function is using the number of parameters to determine what values to pass to the inner function, this function will appear not to accept any arguments.</p></li>\n</ul>\n\n<hr>\n\n<h1>Method Chaining</h1>\n\n<p>You'll notice that nowhere above did I mention method chaining.  That's because it's a completely separate code pattern, that just happens to also be used a lot in d3 and JQuery.</p>\n\n<p>Let's go back to the first example, which created \"Hello WORLD!\" out of \"Hello \" and \"World!\".  What if you wanted to create \"HELLO World!\" instead?  You could do</p>\n\n<pre><code>var a = \"Hello \",\n    b = \"World!\";\n\nvar c = a.toUpperCase().concat( b ); //c = \"HELLO World!\"\n</code></pre>\n\n<p>The first thing that happens in the creation of <code>c</code> is the <code>a.toUpperCase()</code> method gets called.  That method returns a string (\"HELLO \"), which like all other strings has a <code>.concat()</code> method.  So <code>.concat(b)</code> is now getting called as a method of that <em>returned string</em>, not of the original string <code>a</code>.  The result is that <code>b</code> gets concatenated to the end of the uppercase version of <code>a</code>: \"HELLO World!\".</p>\n\n<p>In that case, the returned value was a <em>new</em> object of the same type as the starting object.  In other cases, it could be a completely different type of data.</p>\n\n<pre><code>var numberArray = [5, 15];\n\nvar stringArray = numberArray.toString().split(\",\"); //stringArray = [\"5\", \"15\"]\n</code></pre>\n\n<p>We start with an array of numbers, <code>[5,15]</code>.  We call the array's <code>toString()</code> method, which produces a nicely formatted string version of the array: \"5,15\".  This string now has all it's string methods available, including <code>.split()</code>, which splits a string into an array of substrings around a specified split character, in this case the comma.</p>\n\n<p>You could call this a type of method chaining, calling a method of a value returned by another method.  However, when method chaining is used to describe a feature of a Javascript library, the key aspect is that the returned value of the method <em>is the same object that called the method</em>.</p>\n\n<p>So when you do </p>\n\n<pre><code>d3.select(\"body\").style(\"background\", \"green\");\n</code></pre>\n\n<p>The <code>d3.select(\"body\")</code> method creates a d3 selection object.  That object has a <code>style()</code> method.  If you use the style method to <em>set</em> a style, you don't really need any information back from it.  It could have been designed not to return any value at all.  Instead, it returns the object that the method belongs to (the <code>this</code> object).  So you can now call another method of that object.  Or you could assign it to a variable.  Or both.</p>\n\n<pre><code>var body = d3.select(\"body\").style(\"background\", \"green\")\n                            .style(\"max-width\", \"20em\");\n</code></pre>\n\n<p>However, you always have to be aware of the methods which <em>don't</em> return the same object.  For example, in a lot of d3 code examples you see</p>\n\n<pre><code>var svg = d3.select(\"svg\").attr(\"height\", \"200\")\n                          .attr(\"width\", \"200\")\n                          .append(\"g\")\n                          .attr(\"transform\", \"translate(20,20)\");\n</code></pre>\n\n<p>Now, the method <code>append(\"g\")</code> <em>doesn't</em> return the same selection of the <code>&lt;svg&gt;</code> element.  It returns a <em>new</em> selection consisting of the <code>&lt;g&gt;</code> element, which is then given a transform attribute.  The value that gets assigned to the variable <code>svg</code> is the <em>last</em> return value from the chain.  So in later code, you would have to remember that the variable <code>svg</code> doesn't actually refer to a selection of the <code>&lt;svg&gt;</code> element, but to the <code>&lt;g&gt;</code>.  Which I find confusing, so I try to avoid ever using the variable name <code>svg</code> for a selection that isn't actually an <code>&lt;svg&gt;</code> element.</p>\n\n<p>Of course, any of those d3 <code>.attr()</code> or <code>.style()</code> methods could have taken a function as the second parameter instead of a string.  But that wouldn't have changed how method chaining works.</p>\n",
                    "is_accepted": true,
                    "score": 10
                }
            ],
            "body": "<p>I am trying to really understand the details of how javascript works. During method chaining, sometimes one method returns to another method that has a named input parameter.</p>\n\n<p>For instance, in D3, the pattern looks like this: </p>\n\n<pre><code>d3.select(\"body\").selectAll(\"p\")\n    .data(dataset)\n    .enter()\n    .append(\"p\")\n    .text(function(d) { return d; }); //what does this d refer to? How is it filled?\n</code></pre>\n\n<p>In jquery, the pattern looks like this: </p>\n\n<pre><code>$.ajax({\n  ...\n})\n  .done(function( data ) {  //what does this data refer to? How is it filled? \n</code></pre>\n\n<p>I know from practical coding that the name of these input parameter can be anything. But where does the data that files the input parameter come from? Does it just refer to the data returned from the prior method in the chain? </p>\n",
            "last_activity_date": 1390966811,
            "question_id": 21358027,
            "score": 4,
            "tags": [
                "javascript",
                "jquery",
                "d3.js"
            ],
            "title": "How are input parameters filled in javascript method chains?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It's per domain (the same segregation rules as the <a href=\"http://en.wikipedia.org/wiki/Same_origin_policy\">same origin policy</a>), to make it per-page you'd have to use a key based on the <code>location</code>, or some other approach. </p>\n\n<p>You don't <em>need</em> a prefix, use one if you need it though.  Also, yes, you can name them whatever you want.</p>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>Yeah, it's domain/subdomain has a different <strong>localStorage</strong> and you can call the keys whatever you want (prefix is not required).</p>\n\n<p>To get a key you can use the method key(index) such as </p>\n\n<pre><code>localStorage.key(0);\n</code></pre>\n\n<p>There was an object called <strong>globalStorage</strong> before where you could have multiple localStorages, but it's been deprecated from the specs</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I'd always use a prefix, just to avoid potential collisions with user scripts - which could use localStorage too.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It is available anywhere on that domain as Nick suggested, as an alternative there is sessionStorage works slightly differently in that it is distinct to the browser window itself.  That is to say that other tabs or windows on the same domain do not have access to that same copy of the storage object.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is the HTML5 localStorage object isolated per page/domain? I am wondering because of how I would name localStorage keys. Do I need a separate prefix? Or can I name them whatever I want?</p>\n",
            "last_activity_date": 1369159105,
            "question_id": 4201239,
            "score": 41,
            "tags": [
                "javascript",
                "html5",
                "local-storage"
            ],
            "title": "In HTML5, is the localStorage object isolated per page/domain?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You'll have to use new RegExp !-)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is how to create a regular expression without using the regular expression literal syntax. This lets you do arbitary string manipulation before it becomes a regular expression object:</p>\n\n<pre><code>var segment_part = \"some bit of the regexp\";\nvar pattern = new RegExp(\"some regex segment\" + /*comment here */\n              segment_part + /* that was defined just now */\n              \"another segment\");\n</code></pre>\n\n<p>If you have two regular expression literals, you can in fact concatenate them using this technique:</p>\n\n<pre><code>var expression_one = /foo/;\nvar expression_two = /bar/;\nvar expression_three = new RegExp(expression_one.source + expression_two.source);\n</code></pre>\n\n<p>It's not entirely a good solution, as you lose the flags that were set on expression_one and expression_two, and is more wordy than just having expression one and two being literal strings instead of literal regular expressions.</p>\n",
                    "is_accepted": true,
                    "score": 63
                },
                {
                    "body": "<p>No, the literal way is not supported. You'll have to use RegExp.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I prefer to use <code>eval('your expression')</code> because it does not add the <code>/</code>on each end<code>/</code> that <code>='new RegExp'</code> does.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I don't quite agree with the \"eval\" option.</p>\n\n<pre><code>var xxx = /abcd/;\nvar yyy = /efgh/;\nvar zzz = new RegExp(eval(xxx)+eval(yyy));\n</code></pre>\n\n<p>will give \"//abcd//efgh//\" which is not the intended result.</p>\n\n<p>Using source like</p>\n\n<pre><code>var zzz = new RegExp(xxx.source+yyy.source);\n</code></pre>\n\n<p>will give \"/abcdefgh/\" and that is correct.</p>\n\n<p>Logicaly there is no need to EVALUATE, you know your EXPRESSION. You just need its SOURCE or how it is written not necessarely its value. As for the flags, you just need to use the optional argument of RegExp.</p>\n\n<p>In my situation, I do run in the issue of ^ and $ being used in several expression I am trying to concatenate together! Those expressions are grammar filters used accross the program. Now I wan't to use some of them together to handle the case of PREPOSITIONS.\nI may have to \"slice\" the sources to remove the starting and ending ^( and/or )$ :)\nCheers, Alex.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>It would be preferable to use the literal syntax as often as possible. It's shorter, more legible, and you do not need escape quotes or double-escape backlashes. From \"Javascript Patterns\", Stoyan Stefanov 2010. </p>\n\n<p>But using New may be the only way to concatenate.</p>\n\n<p>I would avoid eval. Its not safe. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just randomly concatenating regular expressions <b>objects</b> can have some adverse side effects. Use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/source\" rel=\"nofollow\">RegExp.source</a> instead:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var r1 = /abc/g;\nvar r2 = /def/;\nvar r3 = new RegExp(r1.source + r2.source, \n                   (r1.global ? 'g' : '') \n                   + (r1.ignoreCase ? 'i' : '') + \n                   (r1.multiline ? 'm' : ''));\nvar m = 'test that abcdef and abcdef has a match?'.match(r3);\n// m should contain 2 matches\n</code></pre>\n\n<p>This will also give you the ability to retain the regular expression flags from a previous RegExp using the standard RegExp flags.</p>\n\n<p><a href=\"http://jsfiddle.net/LZf7H/514/\" rel=\"nofollow\">jsFiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use the constructor with 2 params and avoid the problem with trailing '/':</p>\n\n<pre><code>var re_final = new RegExp(\"\\\\\" + \".\", \"g\");    // constructor can have 2 params!\nconsole.log(\"...finally\".replace(re_final, \"!\") + \"\\n\" + re_final + \n    \" works as expected...\");                  // !!!finally works as expected\n\n                         // meanwhile\n\nre_final = new RegExp(\"\\\\\" + \".\" + \"g\");              // appends final '/'\nconsole.log(\"... finally\".replace(re_final, \"!\"));    // ...finally\nconsole.log(re_final, \"does not work!\");              // does not work\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>Problem</strong> If the regexp contains back-matching groups like \\1.</p>\n\n<pre><code>var r = /(a|b)\\1/  // Matches aa, bb but nothing else.\nvar p = /(c|d)\\1/   // Matches cc, dd but nothing else.\n</code></pre>\n\n<p>Then just contatenating the sources will not work. Indeed, the combination of the two is:</p>\n\n<pre><code>var rp = /(a|b)\\1(c|d)\\1/\nrp.test(\"aadd\") // Returns false\n</code></pre>\n\n<p><strong>The solution:</strong>\n    First we count the number of matching groups in the first regex, Then for each back-matching token in the second, we increment it by the number of matching groups.</p>\n\n<pre><code>function concatenate(r1, r2) {\n  var count = function(r, str) {\n    return str.match(r).length;\n  }\n  var numberGroups = /([^\\\\]|^)(?=\\((?!\\?:))/g; // Home-made regexp to count groups.\n  var offset = count(numberGroups, r1.source);    \n  var escapedMatch = /[\\\\](?:(\\d+)|.)/g;        // Home-made regexp for escaped literals, greedy on numbers.\n  var r2newSource = r2.source.replace(escapedMatch, function(match, number) { return number?\"\\\\\"+(number-0+offset):match; });\n  return new RegExp(r1.source+r2newSource,\n      (r1.global ? 'g' : '') \n      + (r1.ignoreCase ? 'i' : '')\n      + (r1.multiline ? 'm' : ''));\n}\n</code></pre>\n\n<p>Test:</p>\n\n<pre><code>var rp = concatenate(r, p) // returns  /(a|b)\\1(c|d)\\2/\nrp.test(\"aadd\") // Returns true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is it possible to do something like this?</p>\n\n<pre><code>var pattern = /some regex segment/ + /* comment here */\n    /another segment/;\n</code></pre>\n\n<p>Or do I have to use new <code>RegExp()</code> syntax and concatenate a string? I'd prefer to use the literal as the code is both more self-evident and concise.</p>\n",
            "last_activity_date": 1417186913,
            "question_id": 185510,
            "score": 38,
            "tags": [
                "javascript",
                "regex",
                "syntax"
            ],
            "title": "How can I concatenate regex literals in Javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It only will do this if you have the option selected at the bottom: </p>\n\n<pre><code>Disallow insecure . and [^...] in /RegExp/\n</code></pre>\n\n<p>From <a href=\"http://www.jslint.com/lint.html\">the docs</a>:</p>\n\n<blockquote>\n  <p>true if . and [^...] should not be allowed in RegExp literals. These forms should not be used when validating in secure applications.</p>\n</blockquote>\n\n<p>So the answer your question, if you start a regex with <code>^</code> and it's checked, yes it'll throw the error every time.  The issue is with unicode characters, you're allowing pretty much anything in there and there's potential for security issues, or validation bypassing issues.  Instead of <em>disallowing</em> something (which can be bypassed), <em>allow</em> only what characters are valid.</p>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>Consider using <code>\\W</code> instead of <code>/^\\w/</code></p>\n\n<pre><code>\"!$7s-gd,&amp;j5d-a#\".replace(/\\W/g, '');\n</code></pre>\n\n<p>For your particular case this would not work because you want to leave comma and dash characters, but I think it is worth mentioning.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>regexp: true</code></p>\n\n<p>in your lint options, will allow </p>\n\n<p><code>. and [^...] in /RegExp/</code></p>\n\n<p>you can configure the rules you would like to use here</p>\n\n<p><a href=\"http://www.jslint.com/\" rel=\"nofollow\">http://www.jslint.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>JSLint reports <em>Insecure '^'</em> for the following line. Why is that? Or is it just going to complain any time I want to negate a character class?</p>\n\n<pre><code>// remove all non alphanumeric, comma and dash characters\n\"!$7s-gd,&amp;j5d-a#\".replace(/[^\\w,\\-]/g, '');\n</code></pre>\n",
            "last_activity_date": 1403582676,
            "question_id": 4109214,
            "score": 36,
            "tags": [
                "javascript",
                "regex",
                "jslint",
                "regex-negation"
            ],
            "title": "JSLint &quot;insecure ^&quot; in regular expression"
        },
        {
            "answer_count": 25,
            "answers": [
                {
                    "body": "<p>It is ok in these days to assume your visitors have JS enabled. With that said, you should strive for the best possible degradation of your site with JS disabled. It is ideal if your site falls back to a state that is still usable without JS.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Yes it is. But expose as much of it as possible through regular HTML and URLs, if for nothing else than for Google.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Accessible, yes... functional?  Not really.</p>\n\n<p>This is really a customer requirement question more than developer-answerable, but if your customer tries to enforce a requirement that non-JS browsers work, you should argue heavily against it and really hammer them on the \"cool\" factor they'll be missing.</p>\n\n<p>Given the heavy reliance by GWT, RichFaces, etc. on Javascript, it's just not feasible to make an app with any kind of user-friendly UI without it.</p>\n\n<p>You should certainly warn non-JS enabled users that the site they're trying to visit relies heavily on JS, though.  No point in being rude about it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think there is another reason which push you to support at least some main functionality without JS - lots of us now browsing from mobile and PDA, which have no the same lvl of JavaScript support.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I browse with NoScript in Firefox, and it always annoys me when I get pages that don't work. That said - know your audience. If you're trying to cater to paranoid computer security professionals - assume they might not have JavaScript enabled. If you're going for a general audience, JavaScript is probably on.</p>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p><a href=\"http://www.w3schools.com/browsers/browsers_stats.asp\" rel=\"nofollow\">http://www.w3schools.com/browsers/browsers_stats.asp</a></p>\n\n<p>They claim 95% of users have Javascript on.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p><a href=\"http://stackoverflow.com/questions/121108/how-many-people-disable-javascript#121128\">Duplicate</a> </p>\n\n<p>There's at least one category where the answer is definitely \"no\".  If you work for the government, you <em>must</em> make sure the site is accessible to those using screen readers.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I think it's fair to assume that the majority of visitors to your site will have JavaScript enabled. Some of the more trafficked sites out there have a dependency on JavaScript. For example, I was surprised to learn that you can't authenticate through a Passport-enabled site without a JS-enabled browser. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>No its not, period, full-stop, end of story. Its just naive and wrong at an ethical level, not to mention you miss out on around 50% of Internet users worldwide (believe it or not 70% of web access worldwide is from mobile devices).</p>\n\n<p>Add extra nifty stuff that requires Javascript, thats fine. Don't make your site unusable without Javascript unless you have really, really, really good reason to do so.</p>\n\n<p>Someone rightly pointed out that I don't have evidence to back up my claim of 70% mobile web users. Unforunately I can't find the source I got it from but I remember it being authorative so have no reason to doubt it. It does make sense though when you consider worldwide usage, many developing countries have more mobile phones than landlines and broadband. A statistic that was quoted in my not-to-be-found source was that one African country in particular has 300,000 landlines, but has 1.5 million mobile phones!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Nearly all (but not quite all!) users will have javascript enabled. (I believe the figure quoted above of about 5% is accurate.)</p>\n\n<p>Given the vast improvement in usability you can make with the judicious use of javascript, my opinion is that most of the time, it is reasonable to assume it is enabled.</p>\n\n<p>There will of course be some instances where that is not the case, (ie, a site designed for mobile devices, or with a high percentage of disabled users etc), and always a effort should definitely be given to making your site as accessible as possible to as large a percentage of the population as possible.</p>\n\n<p>That said, if you only have a low traffic site, 5% of a small number is a very small number. It may not be worth bending over backwards to make your site accessible to these people when it may only gain you one or two extra users.</p>\n\n<p>I guess the short answer is (as always), there is no correct answer - it will depend entirely on the target use, and target users of the sit in question.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>According to <a href=\"http://www.w3schools.com/browsers/browsers_stats.asp\" rel=\"nofollow\">this little page</a> Javascript is enabled in 95% of browsers and it keeps raising.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Totally depends on who you're aiming at.</p>\n\n<p>If your site or app is for an Intranet, you can make lots of assumptions. If your target audience is bleeding-edge social-networking types, you can assume JavaScript will work. If you anticipate a lot of paranoia sysadmin types, you can assume a bunch of them will be trying to access your site in lynx or have JS turned of for \"security reasons.\"</p>\n\n<p>A good example of this is Amazon -- their approach is driven by their business goals. They are a mass-market site, but for them, locking out users in old/incapable browsers means potential lost sales, so they work hard on non-script fallbacks.</p>\n\n<p>So like lots of these kinds of questions, the answer is not just regurgitating what you've read somewhere about accessibility or progressive enhancement. The real answer is \"it depends.\"</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>The <a href=\"http://www.w3schools.com/browsers/browsers_stats.asp\" rel=\"nofollow\">W3C Browser Statistics</a> page (scroll down) has some information on this; they say that 95% of visitors have JavaScript on as of January 2008.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It's reasonable to assume your visitors have javascript enabled !-)</p>\n\n<p>-- but of course it depends on who you're trying to reach ...</p>\n\n<p>Several times above w3schools have been mentioned and, as Dan stated, its their own visitors which make it somewhat quirky to draw conclusion from.</p>\n\n<p>However, if you look at <a href=\"http://www.thecounter.com/stats/2008/August/javas.php\" rel=\"nofollow\" title=\"theCounter.com August 2008\">theCounter.com</a> it seems that their audience has the same habits in general on this point ...</p>\n\n<p>A twist that hasn't been mentioned yet is the growing amount of crawlers, mailharvesters and so on, they definitely do not have javascript turned on, and how good are counters to detect them ?-)</p>\n\n<p>My guess would be, that this sort of machine-browsers fill up a lot of those 5-6% !o]</p>\n\n<p>-- that said, if it's at all possible, make your app degrade gracefully (as a wise man said)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Your questions seems to suggest form based input for an application.  If it's an intranet application then you'd be guided by the in-house security experts.  If it's public app, then as other posters have suggested, fail gracefully.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>No! Some environments will have it disabled as a matter of policy, with nothing you can do to enable it.  And even if it's enabled, it might be crippled.</p>\n\n<p>This question has been asked before.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I will argue that it is more than reasonable to expect them to have javascript so long as you provide suitable means to replace javascript should it not be enabled.  One of the reasons that I like the Yahoo UI Library is that it degrades gracefully.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>One interesting point to consider is that as a web developer you have a social responsibility to push technology forward - and by using things like AJAX, you increase exposure and potentially rate of adoption along with it. The only thing that should stop you from using the tech to its fullest extent is money - if you won't make the money that you need because people will have trouble viewing the material, you've got to reconsider.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I browse with the <a href=\"http://noscript.net/\" rel=\"nofollow\">NoScript</a> plugin in firefox and I'm surprised at the amount of developers that haven't even considered making their site degradable. </p>\n\n<p>Never assume the user has JavaScript disabled - especially seeing as it may not always be their fault. Many enterprises have firewalls which block JavaScript/ActiveX etc. - In this instance the <code>&lt;noscript&gt;</code> element won't work so I would NOT recomend using that either! </p>\n\n<p>Unless you're creating a full-on web application which is going to be 90% Ajax then you must make sure to abide by standards and progressively enhance your site through various layers of interactivity.</p>\n\n<p>Also don't forget the important of object detection, especially with the rise of mobile phone web browsing. One of the most popular mobile web browsers (Opera mini 4.0) doesn't allow all \"Background javaScript\" to work and Ajax calls rarely execute correctly... Just something to be aware of.</p>\n\n<p>To be honest I am sick and tired of developers that think everyone will have JS enabled! What ignorance!!</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I always try to code my sites as static one first, THEN i add js/ajax functionality. This way i can be kinda sure that will work on non JS browsers :)</p>\n\n<p>But, javascript is like flash: all users have it, but developer have to concern on WHAT IF.... ? :D</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is totally a \"it depends\" question, as many people have pointed out.</p>\n\n<p>This is why metrics is valuable on sites to help show if you can really run with the analogy that \"major sites say that the majority of people have JS on\" - you could have a site where it's 99%.\nI won't dig in to what's been said above, as it's been answered very well :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<blockquote>\n  <p>Is it reasonable to assume visitors\n  have javascript enabled and simply\n  have an unusable site for those who\n  don't?</p>\n</blockquote>\n\n<p>There are actually two questions, and the answers are: Yes, it is reasonable to assume visitors have javascript enabled. And, No this does not mean others should be left with  unusable site.</p>\n\n<p>Progressive enhancement is the way to go. Have your site usable without javascript and then add bells and whistles.</p>\n\n<p>As for client side validation, it is no more than a convenience for user to avoid unnecessary roundtrips to server (where real validation should be performed). </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Never ever assume Javascript for form validation, as your question implies. Someone will eventually realise this and turn Javascript off.</p>\n\n<p>Instead, code the app in fairly regular html manner and use Javascript for what it is: an optional perk for your users.</p>\n\n<p>Even for an entirely AJAX app like Gmail, the complete works of form validation is required on the server side.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Not that everyone else hasn't chimed in, but I disagree with the \"look at your audience\" position to some extent.  </p>\n\n<p>It really should be \"look at your app\" if you are just displaying some information, and your js is for bell/whistle purposes, then certainly look at nice degradation, if you want to.</p>\n\n<p>However, if you're building something like Google Docs, it's really asinine that someone would think they could use your site without js, so perhaps let them know that via a nice sarcastic message inside <code>&lt;noscript&gt;</code> tags.</p>\n\n<p>From a purely philosophical point of view, if users want to access your site, they will flip the js switch, or upgrade to a decent browser, etc.  And you should force them to do this, because evolution is important for the survival of the species.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Yes it is, JavaScript is as old as CSS and no one tries to build around browsers that don't support CSS. Cross Site Scripting is the reason people are afraid of JavaScript, but believe me if a developer wants to screw you over he doesn't need JavaScript to do it. As far as mobile browsers, most of them now have JavaScript, and the others shouldn't be considered browsers. My advice is not to open yourself to hackers by making your site vulnerable to those who choose to turn off their JavaScript, but at the same time don't go out of the way to support those who are living in the stone age. You aren't going to support IE 4 or Netscape, right? Then why support those who sabotage their own browsers because of blatant fear or paranoia?</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I understand that server-side validation is an absolute must to prevent malicious users (or simply users who choose to disable javascript) from bypassing client-side validation.  But that's mainly to protect your application, not to provide value for those who are running browsers with javascript disabled.  Is it reasonable to assume visitors have javascript enabled and simply have an unusable site for those who don't?</p>\n",
            "last_activity_date": 1312132010,
            "question_id": 155615,
            "score": 34,
            "tags": [
                "javascript"
            ],
            "title": "Is it reasonable to assume my visitors have javascript enabled?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>So you're hoping to do something like \nvar whatever = MyClassInstance[4];\n?\nIf so, simple answer is that Javascript does not currently support operator overloading.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can't overload operators in JavaScript.</p>\n\n<p>It was <a href=\"http://spreadsheets.google.com/pub?key=pFIHldY%5FCkszsFxMkQOReAQ&amp;gid=2\">proposed for ECMAScript 4</a> but rejected.</p>\n\n<p>I don't think you'll see it anytime soon.</p>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>The simple answer is that JavaScript allows access to children of an Object via the square brackets.</p>\n\n<p>So you could define your class:</p>\n\n<pre><code>MyClass = function(){\n    // Set some defaults that belong to the class via dot syntax or array syntax.\n    this.some_property = 'my value is a string';\n    this['another_property'] = 'i am also a string';\n    this[0] = 1;\n};\n</code></pre>\n\n<p>You will then be able to access the members on any instances of your class with either syntax.</p>\n\n<pre><code>foo = new MyClass();\nfoo.some_property;  // Returns 'my value is a string'\nfoo['some_property'];  // Returns 'my value is a string'\nfoo.another_property;  // Returns  'i am also a string'\nfoo['another_property'];  // Also returns 'i am also a string'\nfoo.0;  // Syntax Error\nfoo[0];  // Returns 1\nfoo['0'];  // Returns 1\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>You can't overload operators, but ... </p>\n\n<p>If it's a Firefox-only code you are writing, take a look at <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/watch\" rel=\"nofollow\">watch()</a></p>\n\n<p>Otherwise, look at this <a href=\"http://stackoverflow.com/questions/1029241/javascript-object-watch-for-all-browsers\">question</a> that seeks portable watch().</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As brackets operator is actually property access operator, you can hook on it with getters and setters. For IE you will have to use Object.defineProperty() instead. Example:</p>\n\n<pre><code>var obj = {\n    get attr() { alert(\"Getter called!\"); return 1; },\n    set attr(value) { alert(\"Setter called!\"); return value; }\n};\n\nobj.attr = 123;\n</code></pre>\n\n<p>The same for IE8+:</p>\n\n<pre><code>Object.defineProperty(\"attr\", {\n    get: function() { alert(\"Getter called!\"); return 1; },\n    set: function(value) { alert(\"Setter called!\"); return value; }\n});\n</code></pre>\n\n<p>For IE5-7 there's <code>onpropertychange</code> event only, which works for DOM elements, but not for other objects.</p>\n\n<p>The drawback of the method is you can only hook on requests to predefined set of properties, not on arbitrary property without any predefined name.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can do this with ES6 Proxy (available in Chrome, Firefox):</p>\n\n<pre><code>var p = Proxy.create({\n  get: function(proxy, name) {\n    return 'Hello, '+ name;\n  }\n});\n\nconsole.log(p[\"World\"]); // should print 'Hello, World'\n</code></pre>\n\n<p>Check details in this <a href=\"http://soft.vub.ac.be/~tvcutsem/proxies/\" rel=\"nofollow\">tutorial</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I can't seem to find the way to overload the [] operator in javascript.  Anyone out there know?</p>\n\n<p>I was thinking on the lines of ...</p>\n\n<pre><code>MyClass.operator.lookup(index)\n{\n     return myArray[index];\n}\n</code></pre>\n\n<p>or am I not looking at the right things.</p>\n",
            "last_activity_date": 1418900814,
            "question_id": 1711357,
            "score": 29,
            "tags": [
                "javascript",
                "operator-overloading"
            ],
            "title": "How would you overload the [] operator in javascript"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<pre><code>divID = \"question-\" + parseInt(i+1,10);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/u9L8e/\" rel=\"nofollow\">check it here</a>, it's a JSFiddle</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Since you are concatenating numbers on to a string, the whole thing is treated as a string. When you want to add numbers together, you either need to do it separately and assign it to a var and use that var, like this:</p>\n\n<pre><code>i = i + 1;\ndivID = \"question-\" + i;\n</code></pre>\n\n<p>Or you need to specify the number addition like this:</p>\n\n<pre><code>divID = \"question-\" + Number(i+1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use this instead:</p>\n\n<pre><code>var divID = \"question-\" + (i+1)\n</code></pre>\n\n<p>It's a fairly common problem and doesn't just happen in JavaScript. The idea is that <code>+</code> can represent <em>both</em> concatenation and addition.</p>\n\n<p>Since the + operator will be handled left-to-right the decisions in your code look like this:</p>\n\n<ul>\n<li><code>\"question-\" + i</code>: since <code>\"question-\"</code> is a string, we'll do concatenation, resulting in <code>\"question-1\"</code></li>\n<li><code>\"question-1\" + 1</code>: since <code>\"queston-1\"</code> is a string, we'll do concatenation, resulting in <code>\"question-11\"</code>.</li>\n</ul>\n\n<p>With <code>\"queston-\" + (i+1)</code> it's different:</p>\n\n<ul>\n<li>since the <code>(i+1)</code> is in parenthesis, its value must be calculated before the first <code>+</code> can be applied:\n<ul>\n<li><code>i</code> is numeric, <code>1</code> is numeric, so we'll do addition, resulting in <code>2</code></li>\n</ul></li>\n<li><code>\"question-\" + 2</code>: since <code>\"question-\"</code> is a string, we'll do concatenation, resulting in <code>\"question-2\"</code>.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>Add brackets</p>\n\n<pre><code>divID = \"question-\" + (i+1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>using braces surrounding the numbers will treat as addition instead of concat.</p>\n\n<pre><code>divID = \"question-\" + (i+1)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You may also use this </p>\n\n<pre><code>divID = \"question-\" + (i*1+1); \n</code></pre>\n\n<p>to be sure that <code>i</code> is converted to integer.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>The reason you get that is the order of precendence of the operators, and the fact that <code>+</code> is used to both concatenate strings as well as perform numeric addition.</p>\n\n<p>In your case, the concatenation of \"question-\" and <code>i</code> is happening first giving the string \"question=1\". Then another string concatenation with \"1\" giving \"question-11\".</p>\n\n<p>You just simply need to give the interpreter a hint as to what order of prec endence you want.</p>\n\n<pre><code>divID = \"question-\" + (i+1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use only:</p>\n\n<pre><code>divID = \"question-\" + parseInt(i) + 1;\n</code></pre>\n\n<p>When \"n\" comes from html input field or is declared as string, you need to use explicit conversion.</p>\n\n<pre><code>var n = \"1\"; //type is string\nvar frstCol = 5;\nlstCol = frstCol + parseInt(n);\n</code></pre>\n\n<p>If \"n\" is integer, don't need conversion.</p>\n\n<pre><code>n = 1; //type is int\nvar frstCol = 5, lstCol = frstCol + n;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p><a href=\"http://stackoverflow.com/a/5961029/2733146\">Joachim Sauer's answer</a> will work in scenarios like this. But there are some instances where adding brackets won't help.</p>\n\n<p>For eg: You are passing 'sum of value of an input element and an integer' as an argument to a function.</p>\n\n<pre><code>arg1 = $(\"#elemId\").val();   // value is treated as string\narg2 = 1;\n\nsomeFuntion(arg1 + arg2);    // and so the values are merged here\nsomeFuntion((arg1 + arg2));  // and here\n</code></pre>\n\n<p>You can make it work by using <a href=\"http://www.w3schools.com/jsref/jsref_number.asp\" rel=\"nofollow\"><code>Number()</code></a></p>\n\n<pre><code>arg1 = Number($(\"#elemId\").val());\narg2 = 1;\n\nsomeFuntion(arg1 + arg2);\n</code></pre>\n\n<p>or</p>\n\n<pre><code>arg1 = $(\"#elemId\").val();\narg2 = 1;\n\nsomeFuntion(Number(arg1) + arg2);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>One place the parentheses suggestion fails is if say both numbers are HTML input variables.\nSay a and b are variables and one receives their values as follows (I am no HTML expert but my son ran into this and there was no parentheses solution i.e. </p>\n\n<ul>\n<li>HTML inputs were intended numerical values for variables a and b, so say the inputs were 2 and 3.</li>\n<li>Following gave string concatenation outputs: a+b displayed 23; +a+b displayed 23; (a)+(b) displayed 23;</li>\n<li>From suggestions above we tried successfully : Number(a)+Number(b) displayed 5; parseInt(a) + parseInt(b) displayed 5.</li>\n</ul>\n\n<p>Thanks for the help just an FYI - was very confusing and I his Dad got yelled at 'that is was Blogger.com's fault\" - no it's a feature of HTML input default combined with the 'addition' operator, when they occur together, the default left-justified interpretation of all and any input variable is that of a string, and hence the addition operator acts naturally in its dual / parallel role now as a concatenation operator since as you folks explained above it is left-justification type of interpretation protocol in Java and Java script thereafter. Very interesting fact. You folks offered up the solution, I am adding the detail for others who run into this.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Why when i use this: (assuming i=1)</p>\n\n<pre><code>divID = \"question-\" + i+1;\n</code></pre>\n\n<p>I get <strong>question-11</strong> and not <strong>question-2</strong>?</p>\n",
            "last_activity_date": 1411658226,
            "question_id": 5961000,
            "score": 27,
            "tags": [
                "javascript",
                "math"
            ],
            "title": "Javascript (+) sign concatenates instead of giving sum of variables"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>As far as I know it cannot be done. Why not use an XHR request and populate a div instead?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>No it's not possible.  Ignoring any historical reasons, nowadays it would be considered a security vulnerability -- eg. many sites put untrusted content into iframes (the iframe source being a different origin so cannot modify the parent frame, per the same origin policy).</p>\n\n<p>If such untrusted content had a mechanism to place content outside of the bounds of the iframe it could (for example) place an \"identical\" login div (or whatever) over a parent frame's real login fields, and could thus steal username/password information.  Which would suck.</p>\n",
                    "is_accepted": true,
                    "score": 49
                },
                {
                    "body": "<p>This may be off the mark either because it's unsuitable in light of your requirements, or it may not actually help (!), but it might be worth checking out <a href=\"http://www.codeproject.com/KB/aspnet/uframe.aspx\" rel=\"nofollow\">UFrame</a>. It's a kind of hybrid of iframe and div, and could probably be packaged up as a widget (your best bet would be to give clients a <code>&lt;script&gt;</code> tag which would suck in UFrame and the relevant markup). What I'm not sure about is whether you can achieve the overlay you require, but it's possibly worth a play around with. Sorry I can't be more specific but it's not something I've actually used myself, I just bookmarked it a while back for future reference.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>if you know the absolute top of value that tool top can have you can create a div that is the height of the content + the highest distance the tool tip will display in.  Align the iframe to the bottom of the div.  make sure the iframe and div are transparent.  then the iframe content with the tool tip should display. Though this is setting your self up for the headache of making sure stuff like highlighting work the same in all browsers.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I couldn't find a way to make the content of the frame flow out of the frame, but I did find a way to hack around it, by moving the tooltip into the parent document and placing it above (z-index) the iframe.</p>\n\n<p>The approach was:<br/>\n1) find the iframe in the parent document<br/>\n2) remove the tooltip element from where it is in the DOM, and add it to the parent document inside the element that contains your iframe.<br/>\n3) you probably need to adjust the z-index and positioning, depending on how you were doing that in the first place.</p>\n\n<p>You can access the parent document of an iframe using parent.document.</p>\n\n<pre>\njQuery(tooltip).remove();\nvar iframeParent = jQuery(\"#the_id_of_the_iframe\", parent.document)[0].parentNode;\niframeParent.appendChild(tooltip);\n//adjust z-index, positioning\n</pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I'm not really an expert on JS or jQuery, but have you tried to inspect the page elements? Look at their JS files. Look for anything that refers to Iframe overlaps. PHP isn't possible (or else I'd answer this with PHP).</p>\n",
                    "is_accepted": false,
                    "score": -4
                }
            ],
            "body": "<p>I have a UI widget that needs to be put in an IFRAME both for performance reasons and so we can syndicate it out to affiliate sites easily. The UI for the widget includes tool-tips that display over the top of other page content. See screenshot below or <strong><a href=\"http://www.bookabach.co.nz/\">go to the site</a></strong> to see it in action.  Is there any way to make content from within the IFRAME overlap the parent frame's content?</p>\n\n<p><img src=\"http://segdeha.com/assets/imgs/bookabach-calendar.png\" alt=\"Tool-tip content needs to overlap parent frame content\" /></p>\n",
            "last_activity_date": 1368702657,
            "question_id": 176572,
            "score": 26,
            "tags": [
                "javascript",
                "css",
                "iframe",
                "tooltip"
            ],
            "title": "Is there a way to have content from an IFRAME overflow onto the parent frame?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><a href=\"http://stackoverflow.com/questions/4847819/how-to-call-javascript-function-from-code-behind\">How to call javascript function from code-behind</a></p>\n\n<p><a href=\"http://stackoverflow.com/questions/1828566/calling-javascript-from-code-behind\">Calling javascript from code behind</a></p>\n\n<p>same question is asked...</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>One way of doing it is to use the <code>ClientScriptManager</code>:</p>\n\n<pre><code>Page.ClientScript.RegisterStartupScript(\n    GetType(), \n    \"MyKey\", \n    \"Myfunction();\", \n    true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 39
                },
                {
                    "body": "<p>There is a very simple way in which you can do this. It involves injecting a javascript code to a label control from code behind. here is sample code:</p>\n\n<pre><code>&lt;head runat=\"server\"&gt; \n    &lt;title&gt;Calling javascript function from code behind example&lt;/title&gt; \n        &lt;script type=\"text/javascript\"&gt; \n            function showDialogue() { \n                alert(\"this dialogue has been invoked through codebehind.\"); \n            } \n        &lt;/script&gt; \n&lt;/head&gt;\n</code></pre>\n\n<p>..........</p>\n\n<pre><code>lblJavaScript.Text = \"&lt;script type='text/javascript'&gt;showDialogue();&lt;/script&gt;\";\n</code></pre>\n\n<p>Check out the full code here: <a href=\"http://softmate-technologies.com/javascript-from-CodeBehind.htm\">http://softmate-technologies.com/javascript-from-CodeBehind.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This is way to invoke one or more java script methods from code behind\nBy using Script Manager we can call the methods in sequence,Consider the below loc foe example.</p>\n\n<pre><code>   ScriptManager.RegisterStartupScript(this, typeof(Page), \"UpdateMsg\", \"$(document).ready(function(){EnableControls();alert('Overrides successfully Updated.');DisableControls();});\", true);\n</code></pre>\n\n<p>In this first method EnableControls() is invoked\nNext alert will be displayed\nNext DisableControls() Method will be invoked.</p>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>I wrote a javascript with a asp.net page.</p>\n\n<p>In Asp.net Page</p>\n\n<pre><code>&lt;HTML&gt; &lt;HEAD&gt;\n     &lt;script type=\"text/javascript\"&gt;\n      function Myfunction(){\n          document.getElementId('MyText').value=\"hi\";\n      }\n      &lt;/script&gt;\n&lt;/HEAD&gt; &lt;BODY&gt;\n&lt;input type=\"text\" id=\"MyText\" runat=\"server\" /&gt; &lt;/BODY&gt;\n</code></pre>\n\n<p>In Code-behind</p>\n\n<pre><code> Private Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs)\n  Handles Me.Load\n       If Session(\"My\")= \"Hi\" Then\n          I want to call \"Myfunction\" javascript function\n       End If \n End Sub\n</code></pre>\n\n<p>How can I do?</p>\n",
            "last_activity_date": 1395220704,
            "question_id": 4848678,
            "score": 25,
            "tags": [
                "javascript",
                "asp.net"
            ],
            "title": "How to call javascript function from code-behind"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>jQuery seems to be nicely backward compatible.  I have been using it for more than a couple of years now through several versions of the core and have not had issues when upgrading except a few minor ones with some plugins.  I would say that the core seems to be fine but if you're using a lot of plugins you might run into some problems (but these are usually easy to fix, or the new core has that functionality built in anyway so you can just drop them).</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>jQuery is so serious about backwards compatibility that they produce a \"backwards compatibility\" plugin for each release: <a href=\"http://docs.jquery.com/Release:jQuery_1.2#jQuery_1.1_Compatibility_Plugin\">http://docs.jquery.com/Release:jQuery_1.2#jQuery_1.1_Compatibility_Plugin</a>. It let people who don't need backwards compatibility save on page weight.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p><em>My experience</em> is that when upgrading, I sometimes find that stuff that used to work breaks. For instance, when upgrading from 1.7.2 to 1.8.3 I found some drag-and-drop features stopped working. Some problems may be due to deprecated jQuery functions being dropped, still in use by incompatible versions of <a href=\"http://jqueryui.com/\" rel=\"nofollow\">jQuery UI</a>.</p>\n\n<p>Here is a <a href=\"http://sympmarc.com/2011/06/27/jquery-and-backward-compatibility\" rel=\"nofollow\">quote from another user</a>: </p>\n\n<blockquote>\n  <p>Backward compatibility may not be the jQuery team\u2019s strong suit, but\n  as with most things, it\u2019s a work in progress. I\u2019m not meaning to\n  disparage the great work they do, but it points out the fact that you\n  simply <em>must</em> always test your scripts with new versions of jQuery. </p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In my experience, jQuery 1.x has been very backwards-compatible until version 1.9.</p>\n\n<blockquote>\n  <p>The jQuery 1.x line had major changes as of jQuery 1.9.0. We strongly recommend that you also use the jQuery Migrate plugin if you are upgrading from pre-1.9 versions of jQuery or need to use plugins that haven't yet been updated. Read the <a href=\"http://jquery.com/upgrade-guide/1.9/\" rel=\"nofollow\">jQuery 1.9 Upgrade Guide</a> and the <a href=\"http://blog.jquery.com/2013/01/15/jquery-1-9-final-jquery-2-0-beta-migrate-final-released/\" rel=\"nofollow\">jQuery 1.9 release blog post</a> for more information.</p>\n</blockquote>\n\n<p>And don't upgrade to 2.0 until you're sure that this isn't an issue for you:</p>\n\n<blockquote>\n  <p>jQuery 2.x has the same API as jQuery 1.x, but <em>does not support Internet Explorer 6, 7, or 8.</em></p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>We have had issues with mootools not being very backward compatible specifically in the area of drag and drop functionality. I was wondering if anyone has had any similar problems with Jquery not being backward compatible. We are starting to use it quite heavily and are thinking about upgrading to a newer version to start using several plugins that require it. Will we have any issues if we get rid of the older version?</p>\n",
            "last_activity_date": 1386579667,
            "question_id": 281438,
            "score": 25,
            "tags": [
                "javascript",
                "jquery",
                "compatibility"
            ],
            "title": "How good is jQuery&#39;s backward-compatibility?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>This would work in IE, Firefox and Chrome (can somebody test the others please? &mdash; Thanks, @Bryan):</p>\n\n<pre><code>for (var i = 0; i &lt; elem.attributes.length; i++) {\n  var attrib = elem.attributes[i];\n  alert(attrib.name + \" = \" + attrib.value);\n}\n</code></pre>\n\n<p>EDIT: IE iterates <em>all</em> object attributes, regardless whether they actually have been defined. </p>\n\n<p>You must look at the \"attrib.specified\" boolean property to find out if the attribute actually exists. Firefox and Chrome seem to support this property as well:</p>\n\n<pre><code>for (var i = 0; i &lt; elem.attributes.length; i++) {\n  var attrib = elem.attributes[i];\n  if (attrib.specified) {\n    alert(attrib.name + \" = \" + attrib.value);\n  }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 27
                }
            ],
            "body": "<p>I need the JavaScript code to iterate through the filled attributes in an HTML element. </p>\n\n<p>This <a href=\"http://reference.sitepoint.com/javascript/Node/attributes\">Element.attributes</a> ref says I can access it via index, but does not specify whether it is well supported and can be used (cross-browser).</p>\n\n<p>Or any other ways? (without using any frameworks, like jQuery / Prototype)</p>\n",
            "last_activity_date": 1422807963,
            "question_id": 828311,
            "score": 23,
            "tags": [
                "javascript",
                "html",
                "dom"
            ],
            "title": "How to iterate through all attributes in an HTML element?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><code>onchange</code> in IE only fires when the checkbox loses focus.  So if you tab to it, hit space a few times, tab out, you'll only get one <code>onchange</code> event, but several <code>onclick</code> events.</p>\n\n<p>Note: this is one of the very, very, very rare times when IE's behavior is correct (according to spec) and other browsers are wrong.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>.change doesn't work correctly for at least some popular browsers in relation to key changes (the user selecting option with up/down arrow keys) but then .click doesn't overcome this either. Sometimes the use of keyup or keydown or something is used in conjunction with .change to overcome this issue however it starts to get a bit messy when you user's tab the document as this can trigger the key event if it's not explicitly handled within the callback. All in all it's a shame that .change doesn't work as you would expect as it would solve some time consuming issues.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>yes both work, only click does not look at the actual object changing (like a checkbox that gets checked), change does.</p>\n\n<p>Technically it is more reliable but in practise both work.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>They may both fire a change in the value by default, but you may override the onClick logic to NOT change the value of a chackbox. You may change the value via another entry point. So having a .click and a .change is needed.</p>\n\n<p>edit - I also agree with Dr Rob</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Two reasons why <code>onclick</code> is preferred over <code>onchange</code>.</p>\n\n<ol>\n<li><p>Internet Explorer only fires the onchange event when the checkbox loses the focus (onblur). So <code>onclick</code> is more of a cross browser solution.</p></li>\n<li><p><code>onchange</code> happens only after the element lose focus.(You wont see a difference since you are calling alert and losing focus on every change). The pseudo code on MDC pretty much explains the <a href=\"https://developer.mozilla.org/en/DOM/element.onchange\" rel=\"nofollow\"><code>element.onchange</code></a> implementation.</p>\n\n<p>control.onfocus = focus;\ncontrol.onblur = blur;</p>\n\n<p>function focus () {\n    original_value = control.value;\n}</p>\n\n<p>function blur () {\n      if (control.value != original_value)\n         control.onchange();\n}</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I was looking around to add an event to a checkbox and I would have thought people would use <code>.change</code> to set up a change event but instead I found that people are using <code>.click</code> </p>\n\n<p>Is there a reason for this? They both seem to work fine both with clicked events and with keyboard changes. Am I missing something?</p>\n\n<p>If you don't believe me then <strong><a href=\"http://jsfiddle.net/wB3YQ/\">try it out yourself</a></strong></p>\n",
            "last_activity_date": 1302144860,
            "question_id": 5575338,
            "score": 22,
            "tags": [
                "javascript",
                "jquery",
                "checkbox",
                "click"
            ],
            "title": "What the difference between .click and .change on a checkbox"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>hide your menu with javascript on pageload. this way google will still analyse your text. it ignores <code>display:none</code> elements, as well as elements which textcolor is the same as background color, thus making it invisible to the human eye</p>\n\n<p>sources: i read it in a book a long time ago. there are sites on the internet though on the topic</p>\n\n<ul>\n<li><a href=\"http://www.webdesign-in.de/mts/google-bestraft-display-none-visibility-hidden/\">http://www.webdesign-in.de/mts/google-bestraft-display-none-visibility-hidden/</a></li>\n<li><a href=\"http://www.seroundtable.com/archives/002971.html\">http://www.seroundtable.com/archives/002971.html</a></li>\n<li><a href=\"http://www.mattcutts.com/blog/seo-mistakes-nearly-hidden-text/\">http://www.mattcutts.com/blog/seo-mistakes-nearly-hidden-text/</a></li>\n<li><a href=\"http://www.julian-bez.de/blog/2005/10/20/display-none-considered-spam/\">http://www.julian-bez.de/blog/2005/10/20/display-none-considered-spam/</a></li>\n<li><a href=\"http://searchengineland.com/is-hiding-content-with-display-none-legitimate-seo-13643\">http://searchengineland.com/is-hiding-content-with-display-none-legitimate-seo-13643</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>If you hide your menu with javascript the search engines will likely not be able to follow the links. I have used dislay:none to hide chunks of navigation which I don't want to appear on certain areas of a website. There are a some CMS sytsems build to show navigation this way and if Google banned all sites built with those CMS systems then it might not be providing the most relevant results. </p>\n\n<p>If you are using it to hide text just for seo purposes stay away from that. It is likely the search engines will not pick it up but if they do - for example if a competitor flags it to Google - and you are using it to hid spammy text then be prepared for the consequences.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I know this is an old post by I found this website very enlightening.</p>\n\n<p><a href=\"http://rathamahata.blogspot.com/2007/01/how-do-search-engines-bots-handle.html\" rel=\"nofollow\">http://rathamahata.blogspot.com/2007/01/how-do-search-engines-bots-handle.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://www.learningjquery.com/2008/10/1-way-to-avoid-the-flash-of-unstyled-content\" rel=\"nofollow\">This is a genius solution to hide the content via Javascript</a> without having the content flashing while the page loads. Searchbots and users that don't have Javascript enabled will see the text displayed.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You are perfectly safe using display none, this person ran a test and shared the results. Just don't use the attribute for grey hat SEO and you should be fine.</p>\n\n<p><a href=\"http://seotesttool.com/blog/does-the-google-bot-index-css-hidden-divs/\" rel=\"nofollow\">http://seotesttool.com/blog/does-the-google-bot-index-css-hidden-divs/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Will google ignore words that are inside the elements that are set to \"display: none\" in css?</p>\n\n<p>Example:</p>\n\n<pre><code>&lt;div id=\"under_meny\" style=\"display:none;\"&gt;About Us | Contact Us&lt;/div&gt;\n</code></pre>\n\n<p>It looks maybe a bit strange that I want to hide a menu like that, but there is a submenu. And will the user to activate it. But I do not want it to go beyond SEO. </p>\n",
            "last_activity_date": 1416513561,
            "question_id": 1547426,
            "score": 15,
            "tags": [
                "javascript",
                "css",
                "seo"
            ],
            "title": "Google SEO and hidden elements"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Iterate through the array, and <code>splice</code> out the ones you don't want. For easier use, iterate backwards so you don't have to take into account the live nature of the array:</p>\n\n<pre><code>for( i=myArray.length-1; i&gt;=0; i--) {\n    if( myArray[i].field == \"money\") myArray.splice(i,1);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>One possibility:</p>\n\n<pre><code>myArray = myArray.filter(function( obj ) {\n    return obj.field !== 'money';\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>jAndy's solution is probably best, but if you can't rely on filter you could do something like:</p>\n\n<pre><code>var myArray = [\n    {field: 'id', operator: 'eq', value: 'id'}, \n    {field: 'cStatus', operator: 'eq', value: 'cStatus'}, \n    {field: 'money', operator: 'eq', value: \"money\"}\n];\n\nmyArray.remove_key = function(key){\n    var i = 0, \n        keyval = null;\n    for( ; i &lt; this.length; i++){\n        if(this[i].field == key){\n            keyval = this.splice(i, 1);\n            break;\n        }\n    }\n    return keyval;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Following is the code if you are not using jQuery. <a href=\"http://jsfiddle.net/umairsaleemid/mkjqM/\" rel=\"nofollow\">Demo</a></p>\n\n<pre><code>var myArray = [\n    {field: 'id', operator: 'eq', value: 'id'}, \n    {field: 'cStatus', operator: 'eq', value: 'cStatus'}, \n    {field: 'money', operator: 'eq', value: 'money'}\n];\n\nalert(myArray.length);\n\nfor(var i=0 ; i&lt;myArray.length; i++)\n{\n    if(myArray[i].value=='money')\n        myArray.splice(i);\n}\n\nalert(myArray.length);\n</code></pre>\n\n<p>You can also use underscore library which have lots of function.</p>\n\n<p><a href=\"http://underscorejs.org/\" rel=\"nofollow\">Underscore</a> is a utility-belt library for JavaScript that provides a lot of the functional programming support</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an array of objects like so:</p>\n\n<pre><code>var myArray = [\n    {field: 'id', operator: 'eq', value: id}, \n    {field: 'cStatus', operator: 'eq', value: cStatus}, \n    {field: 'money', operator: 'eq', value: money}\n];\n</code></pre>\n\n<p>How do I remove a specific one based on its property?</p>\n\n<p>e.g. How would I remove the array object with 'money' as the field property?</p>\n",
            "last_activity_date": 1362724049,
            "question_id": 15287865,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "arrays",
                "object",
                "properties"
            ],
            "title": "Remove array element based on object property"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Not native in Javascript, but plenty of libraries have this method.</p>\n\n<p>Underscore.js's <code>_.uniq(array)</code> (<a href=\"http://underscorejs.org/#uniq\" rel=\"nofollow\">link</a>) works quite well (<a href=\"https://github.com/documentcloud/underscore/blob/master/underscore.js#L386\" rel=\"nofollow\">source</a>).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Using jQuery, here's an Array unique function I made:</p>\n\n<pre><code>Array.prototype.unique = function () {\n    var arr = this;\n    return $.grep(arr, function (v, i) {\n        return $.inArray(v, arr) === i;\n    });\n}\n\nconsole.log([1,2,3,1,2,3].unique()); // [1,2,3]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you want to leave the original array intact, </p>\n\n<p>you need a second array to contain the uniqe elements of the first-</p>\n\n<p>Most browsers have <code>Array.prototype.filter</code>:</p>\n\n<pre><code>var unique= array1.filter(function(itm, i){\n    return array1.indexOf(itm)== i; \n    // returns true for only the first instance of itm\n});\n\n\n//if you need a 'shim':\nArray.prototype.filter= Array.prototype.filter || function(fun, scope){\n    var T= this, A= [], i= 0, itm, L= T.length;\n    if(typeof fun== 'function'){\n        while(i&lt;L){\n            if(i in T){\n                itm= T[i];\n                if(fun.call(scope, itm, i, T)) A[A.length]= itm;\n            }\n            ++i;\n        }\n    }\n    return A;\n}\n Array.prototype.indexOf= Array.prototype.indexOf || function(what, i){\n        if(!i || typeof i!= 'number') i= 0;\n        var L= this.length;\n        while(i&lt;L){\n            if(this[i]=== what) return i;\n            ++i;\n        }\n        return -1;\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Since I went on about it in the comments for @Rocket's answer, I may as well provide an example that uses no libraries. This requires two new prototype functions, <code>contains</code> and <code>unique</code></p>\n\n<pre><code>Array.prototype.contains = function(v) {\n    for(var i = 0; i &lt; this.length; i++) {\n        if(this[i] === v) return true;\n    }\n    return false;\n};\n\nArray.prototype.unique = function() {\n    var arr = [];\n    for(var i = 0; i &lt; this.length; i++) {\n        if(!arr.contains(this[i])) {\n            arr.push(this[i]);\n        }\n    }\n    return arr; \n}\n</code></pre>\n\n<p>You can then do:</p>\n\n<pre><code>var duplicates = [1,3,4,2,1,2,3,8];\nvar uniques = duplicates.unique(); // result = [1,3,4,2,8]\n</code></pre>\n\n<p>For more reliability, you can replace <code>contains</code> with MDN's <code>indexOf</code> shim and check if each element's <code>indexOf</code> is equal to -1: <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf\">https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf</a></p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>I was just thinking if we can use linear search to eliminate the duplicates:</p>\n\n<pre><code>JavaScript:\nfunction getUniqueRadios() {\n\nvar x=document.getElementById(\"QnA\");\nvar ansArray = new Array();\nvar prev;\n\n\nfor (var i=0;i&lt;x.length;i++)\n  {\n    // Check for unique radio button group\n    if (x.elements[i].type == \"radio\")\n    {\n            // For the first element prev will be null, hence push it into array and set the prev var.\n            if (prev == null)\n            {\n                prev = x.elements[i].name;\n                ansArray.push(x.elements[i].name);\n            } else {\n                   // We will only push the next radio element if its not identical to previous.\n                   if (prev != x.elements[i].name)\n                   {\n                       prev = x.elements[i].name;\n                       ansArray.push(x.elements[i].name);\n                   }\n            }\n    }\n\n  }\n\n   alert(ansArray);\n</code></pre>\n\n<p>}</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;body&gt;\n\n&lt;form name=\"QnA\" action=\"\" method='post' \"&gt;\n\n&lt;input type=\"radio\"  name=\"g1\" value=\"ANSTYPE1\"&gt; good &lt;/input&gt;\n&lt;input type=\"radio\" name=\"g1\" value=\"ANSTYPE2\"&gt; avg &lt;/input&gt;\n\n&lt;input type=\"radio\"  name=\"g2\" value=\"ANSTYPE3\"&gt; Type1 &lt;/input&gt;\n&lt;input type=\"radio\" name=\"g2\" value=\"ANSTYPE2\"&gt; Type2 &lt;/input&gt;\n\n\n&lt;input type=\"submit\" value='SUBMIT' onClick=\"javascript:getUniqueRadios()\"&gt;&lt;/input&gt;\n\n\n&lt;/form&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>The only problem with the solutions given so far is efficiency. If you are concerned about that (and you probably should) you need to avoid nested loops: for * for, filter * indexOf, grep * inArray, they all iterate the array multiple times. You can implement a single loop with solutions like <a href=\"http://stackoverflow.com/a/1961068/2330244\">this</a> or <a href=\"http://stackoverflow.com/a/15125941/2330244\">this</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Or for those looking for a one-liner (simple and functional):</p>\n\n<pre><code>var a = [\"1\", \"1\", \"2\", \"3\", \"3\", \"1\"];\nvar unique = a.filter(function(item, i, ar){ return ar.indexOf(item) === i; });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>i have inbuilt <strong>JQuery Unique</strong> function.</p>\n\n<pre><code>uniqueValues= jQuery.unique( duplicateValues );\n</code></pre>\n\n<p>For more you can refer to the jquery API Documentations.</p>\n\n<p><a href=\"http://api.jquery.com/jquery.unique/\" rel=\"nofollow\">http://api.jquery.com/jquery.unique/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can I get a list of unique values in an array? Do I always have to use a second array or is there something similar to java's hashmap in JavaScript?</p>\n\n<p>I am going to be using <strong>JavaScript</strong> and <strong>jQuery</strong> only. No additional libraries can be used.</p>\n",
            "last_activity_date": 1425503627,
            "question_id": 11246758,
            "score": 14,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to get unique values in an array"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Store the URLs somewhere else, then set all image URLs to some dummy image (empty, transparent, \"loading data...\", whatever). When an image should be displayed, use JS to set the <code>src</code> attribute and the browser will fetch it.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>If you render the HTML on the page, even if it's hidden, it's going to load.  If you want images to load only when they're needed, you're going to have to dynamically set the source (src) on the image tag in javascript.</p>\n\n<p><strong>Edit 1:</strong> The script you referenced merely checks to see how far you've scrolled the page down and then determines which images are visible (or almost visible) by checking their top -- see the $.belowthefold and $.rightoffold extensions.</p>\n\n<p>The example works great when the images are all the same size, because their containers can also be the same size and you won't get any odd page resizing behavior when you lazy load them.  If you images' heights and widths vary, you may get some odd results.</p>\n\n<p><strong>Edit 2:</strong></p>\n\n<p><a href=\"http://home.langdonx.com:8000/demos/js/prevent%5Floading.html\">http://home.langdonx.com:8000/demos/js/prevent%5Floading.html</a></p>\n\n<pre><code>&lt;script type=\"text/javascript\" charset=\"utf-8\"&gt;\n    $(document).ready( function() { $(\"img\").removeAttr(\"src\"); } );\n&lt;/script&gt;\n\n&lt;img src=\"Chrysanthemum.jpg\" /&gt;\n&lt;img src=\"Desert.jpg\" /&gt;\n&lt;img src=\"Hydrangeas.jpg\" /&gt;\n&lt;img src=\"Jellyfish.jpg\" /&gt;\n&lt;img src=\"Koala.jpg\" /&gt;\n&lt;img src=\"Lighthouse.jpg\" /&gt;\n&lt;img src=\"Penguins.jpg\" /&gt;\n&lt;img src=\"Tulips.jpg\" /&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Just do not include the img tag in your original HTML, generate it on the fly using DHTML as you need it. You can also put a fake url to image in the img tag and replace it with the real one dynamically.</p>\n\n<p>On the side note - what's the point. All you are trying to do here is to build another caching mechanism over the existing one. Leave caching to browsers, they are pretty good at this </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use the portion below to replace all image tags with a dummy file (for example, an 1x1 transparent gif). The url's are stored in a array for later reference.</p>\n\n<pre><code>$(document).ready(function(){\n    var images = new Array();\n    $(\"img\").each(function(i){\n\t  images[i] =  this.src;\n\t   this.src='blank.gif';\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Well with Prototype you can do something like this I guess:</p>\n\n<pre><code>var unloaded = [];\n$$('img.noload').each(function (image) {\n\tunloaded.push(image);\n\timage._src = image.src;\n\timage.src = '';\n});\n</code></pre>\n\n<p>To load all of them:</p>\n\n<pre><code>unloaded.each(function (image) {\n\timage.src = image._src;\n});\n</code></pre>\n\n<p>To load the first one:</p>\n\n<pre><code>function loadImage (image) {\n\timage.src = image._src;\n}\n\nloadImage(unloaded.shift());\n</code></pre>\n\n<p>Well I hope you got the idea.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I don't recommend this solution, for many reasons (like it ruins your page if you don't have Javascript enabled, screen-readers etc), but its a possibility...</p>\n\n<p>You could change the IMG tag so that it hijacks a different attribute, like ALT (LONGDESC, or TITLE too):</p>\n\n<p></p>\n\n<p>Then use Javascript to update the SRC attribute with the ALT value as you need to.</p>\n\n<p>So thats one way, and not a good one. I think the only real approach is to dynamically generate the proper IMG tag as needed via Javascript and not publish it with the HTML (this too has implications for non-JS browsers etc)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can wrap the image in a noscript tag:</p>\n\n<pre><code>&lt;noscript&gt;\n&lt;img src=\"foo.jpg\"/&gt;\n&lt;noscript&gt;\n</code></pre>\n\n<p>All browsers that has JavaScript enabled will ignore the image tag so the image won't load.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This <a href=\"http://timkadlec.com/2012/04/media-query-asset-downloading-results/\" rel=\"nofollow\">article</a> shows some tests using both css background and img tags on a set of standard browsers.</p>\n\n<p>In my personal experience the <a href=\"http://scottjehl.github.io/picturefill/\" rel=\"nofollow\">PictureFill</a> by Scott Jehl is the best solution I've ever used to deal with image resolutions and sizes for mobile devices.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p><br />\nis there a way with javascript/jquery to prevent images from loading? I am building a slideshow from a html list with images. So I would like to collect all the src data and then prevent the images from loading. So later when the user really needs the image I would load it then.</p>\n\n<p>I found some lazy loading script on google but couldn't find the way they prevent images from loading.</p>\n\n<p>Thanks in advance.</p>\n\n<p><strong>Edit1:</strong><br />\nIt seems from the answers that it's not possible to use javascript to prevent images from loading.\n<a href=\"http://www.appelsiini.net/projects/lazyload/enabled_fadein.html\">Here</a> is a script that does lazy loading. Could anybody explain how it works? It seems when javascript is off it just loads the images normaly and when it's on it will load them when you scroll to their location.</p>\n",
            "last_activity_date": 1424204487,
            "question_id": 1667868,
            "score": 13,
            "tags": [
                "javascript"
            ],
            "title": "Prevent images from loading"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You'd want to split the string on the dot and then repeatedly index into the object, e.g. along the lines of:</p>\n\n<pre><code>function goDeep(obj, path) {\n    var parts = path.split('.'),\n        rv,\n        index;\n    for (rv = obj, index = 0; rv &amp;&amp; index &lt; parts.length; ++index) {\n        rv = rv[parts[index]];\n    }\n    return rv;\n}\n</code></pre>\n\n<p><a href=\"http://jsbin.com/uwayom\" rel=\"nofollow\">Live example</a></p>\n\n<p>That works because you can access the property of an object in a couple of different ways: There's dotted syntax using a literal (<code>obj.foo</code>), and there's bracketed syntax using a string (<code>obj[\"foo\"]</code>). In the latter case, the string can be the result of any expression, it doesn't have to be a string literal. In in all of the, <code>rv</code> is set to the same value:</p>\n\n<pre><code>rv = obj.foo.bar;\n// Or\nrv = obj.foo[\"bar\"];\n// Or\nf = \"foo\";\nrv = obj[f].bar;\n// Or\ns = \"b\";\nrv = obj.foo[s + \"ar\"];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>something like:</p>\n\n<pre><code>function(obj, path) {\n  var current=obj; \n  path.split('.').forEach(function(p){ current = current[p]; }); \n  return current;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Consider this:    </p>\n\n<pre><code>var obj = {\n  foo: { bar: 'baz' }\n};\n\nfunction deepFind(obj, path) {\n  var paths = path.split('.')\n    , current = obj\n    , i;\n\n  for (i = 0; i &lt; paths.length; ++i) {\n    if (current[paths[i]] == undefined) {\n      return undefined;\n    } else {\n      current = current[paths[i]];\n    }\n  }\n  return current;\n}\n\nconsole.log(deepFind(obj, 'foo.bar'))\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>This works correctly:</p>\n\n<pre><code>var deep_value = function(obj, path){\n    for (var i=0, path=path.split('.'), len=path.length; i&lt;len; i++){\n        obj = obj[path[i]];\n    };\n    return obj;\n};\n</code></pre>\n\n<p>Here is the proof / demo: <a href=\"http://jsfiddle.net/tadeck/5Pt2q/13/\">jsfiddle.net/tadeck/5Pt2q/13/</a></p>\n\n<p>EDIT: I have removed redundant variables, shortened the code.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>You mean something like this ? It is a recursive version</p>\n\n<pre><code>function recLookup(obj, path) {\n    parts = path.split(\".\");\n    if (parts.length==1){\n        return obj[parts[0]];\n    }\n    return recLookup(obj[parts[0]], parts.slice(1).join(\".\"));\n}\n</code></pre>\n\n<p>See <a href=\"http://jsfiddle.net/kExSr/\" rel=\"nofollow\">http://jsfiddle.net/kExSr/</a> </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/6491463/accessing-nested-javascript-objects-with-string-key\">Accessing nested JavaScript objects with string key</a>  </p>\n</blockquote>\n\n\n\n<p>Maybe the title is not clear enough, I just didn't know how to specify what I'm looking for and my English is really bad, sorry.</p>\n\n<p>I'm trying to create function that returns object value, but also plays nice with nested objects. For example:</p>\n\n<pre><code>var obj = {\n  foo: { bar: 'baz' }\n};\n</code></pre>\n\n<p>I want to access the value of obj.foo.bar by suppling the string \"foo.bar\" to the function.</p>\n\n<pre><code>function(obj, path) {\n  // Path can be \"foo.bar\", or just \"foo\".\n}\n</code></pre>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1364864545,
            "question_id": 8817394,
            "score": 12,
            "tags": [
                "javascript"
            ],
            "title": "Javascript: Get deep value from object by passing path to it as string"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>AFAIK, that's not possible for html text box, you could style the input itself but you can do nothing about the cursor other than applying the cursor options that are already available :(</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<h2>Sample</h2>\n\n<p><img src=\"http://i.stack.imgur.com/qWBoZ.png\" alt=\"Sample\"></p>\n\n<p>I've <a href=\"http://jsbin.com/ehuki3/3/edit\">changed how it works</a>, and it seems to solve a few issues :)</p>\n\n<ul>\n<li>Accepts any text a normal input can</li>\n<li>Backspace works</li>\n<li>Theoretically can support pasting text</li>\n</ul>\n\n<p>Usual caveats apply still, most notably the inability to visually see where the caret is.</p>\n\n<p>I'd think <strong>long and hard</strong> whether this solution is worth implementing, based on its drawbacks and usability issues.</p>\n\n<h3>HTML</h3>\n\n<pre><code>&lt;div id=\"cmd\"&gt;\n    &lt;span&gt;&lt;/span&gt;\n    &lt;div id=\"cursor\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n\n&lt;input type=\"text\" name=\"command\" value=\"\" /&gt;\n</code></pre>\n\n<h3>CSS</h3>\n\n\n\n<pre class=\"lang-css prettyprint-override\"><code>#cmd {\n    font-family: courier;\n    font-size: 14px;\n    background: black;\n    color: #21f838;\n    padding: 5px;\n    overflow: hidden;\n}\n\n#cmd span {\n    float: left;\n    padding-left: 3px;\n    white-space: pre;\n}\n\n#cursor {\n    float: left;\n    width: 5px;\n    height: 14px;\n    background: #21f838;\n}\n\ninput {\n    width: 0;\n    height: 0;\n    opacity: 0;\n}\n</code></pre>\n\n<h3>jQuery</h3>\n\n\n\n<pre class=\"lang-css prettyprint-override\"><code>$(function () {\n    var cursor;\n    $('#cmd').click(function () {\n        $('input').focus();\n        cursor = window.setInterval(function () {\n            if ($('#cursor').css('visibility') === 'visible') {\n                $('#cursor').css({\n                    visibility: 'hidden'\n                });\n            } else {\n                $('#cursor').css({\n                    visibility: 'visible'\n                });\n            }\n        }, 500);\n\n    });\n\n    $('input').keyup(function () {\n        $('#cmd span').text($(this).val());\n    });\n\n    $('input').blur(function () {\n        clearInterval(cursor);\n        $('#cursor').css({\n            visibility: 'visible'\n        });\n    });\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>you can't. which means: you <em>could</em> do it yourself by using a fixed-with font, use a blinking gif als background which position is set dynamicaly by calculating the with of the already typed text - but there will be the \"normal\" cursor above your gif, making this solution ugly</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For <code>&lt;input&gt;</code> tags, there's not much you can do. If you didn't mind it being a horrible hack, you could always use JavaScript to resize the text box as needed (set <code>width = *something* * count</code>), and have an <code>&lt;img&gt;</code> with the cursor to the right.</p>\n\n<p>I don't think there are any less 'ugh' solutions, bar handling the text input yourself, which is probably overkill.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You would have to 1) roll your own textbox and 2) hide the real cursor by continually focusing it elsewhere. Then, capture the key events at the document/body level, and insert that value into your own element.  The cursor would then be an animated GIF that was always positioned at far right of your \"textbox\".</p>\n\n<p>You will run into issues with #2, and the whole thing is generally inadvisable. HTML 5 opens up some new possibilities, but it's still an awful lot of work for a cursor.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I use this square cursor ( image below ) in the input tags ?</p>\n\n<p><img src=\"http://i.stack.imgur.com/lbgjU.jpg\" alt=\"C:\\WIKIPEDIA\"></p>\n",
            "last_activity_date": 1387175444,
            "question_id": 3758023,
            "score": 12,
            "tags": [
                "javascript",
                "html",
                "css",
                "xhtml",
                "cursor"
            ],
            "title": "How to use this square cursor in a HTML input field?"
        }
    ]
}
