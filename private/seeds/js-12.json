{
    "items": [
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You could use one of the many available javascript minifiers.</p>\n\n<ul>\n<li><a href=\"http://developer.yahoo.com/yui/compressor/\">YUI Compressor</a></li>\n<li><a href=\"http://code.google.com/closure/compiler/\">Google closure compiler</a></li>\n<li><a href=\"http://dean.edwards.name/packer/\">Dean Edwards packer</a></li>\n<li><a href=\"http://www.crockford.com/javascript/jsmin.html\">JSMin</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p><a href=\"http://jscompress.com/\" rel=\"nofollow\">http://jscompress.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Google just made available a javascript compiler that can minify your code, elimiated dead code branches and more optimizations.</p>\n\n<p><a href=\"http://closure-compiler.appspot.com/home\">google javascript compiler</a></p>\n\n<p>Regards<br>\nK</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>There\u2019s a nice <a href=\"http://compressorrater.thruhere.net/\">comparison of JavaScript compressors</a> you should take a look at.</p>\n",
                    "is_accepted": true,
                    "score": 66
                },
                {
                    "body": "<p>There is also free Minifier from Microsoft on codeplex. Microsoft Ajax Minifier 1.1 : <a href=\"http://ajaxmin.codeplex.com/\" rel=\"nofollow\">http://ajaxmin.codeplex.com/</a></p>\n\n<p>It's easy to work with and does a good job.</p>\n\n<p>Gal</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Another option slightly better than YUI Compressor..\n<a href=\"http://openwaf-js-mini.appspot.com/\" rel=\"nofollow\">http://openwaf-js-mini.appspot.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I recently needed to perform the same task.  While the compressors listed at <a href=\"http://compressorrater.thruhere.net/\" rel=\"nofollow\">The JavaScript CompressorRater</a> do a great job and the tool is very useful, the compressors were not playing nice with some jQuery code I am using ($.getScript and jQuery.fn checks).  Even the <a href=\"http://closure-compiler.appspot.com/home\" rel=\"nofollow\">Google Closure Compressor</a> choked on the same lines.  While I could have eventually ironed out the kinks it was far to much squinting to do constantly.</p>\n\n<p>The one that finally worked without issue was <a href=\"http://marijnhaverbeke.nl//uglifyjs\" rel=\"nofollow\">UglifyJS</a> (thanks <a href=\"http://stackoverflow.com/questions/1737388/how-to-minify-javascript-code#comment16970124_1737388\">@Aries51</a>), and the compression was only slightly less than all the others.  And similar to Google it has a HTTP API.  <a href=\"http://dean.edwards.name/packer/\" rel=\"nofollow\">Packer</a> is also nice and has language implementation in Perl, PHP, and .NET.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>DIY Minification</strong></p>\n\n<p><strong>No minifier can compress properly a bad code.</strong> </p>\n\n<p>In this example i just wanna show how much a minifier does.</p>\n\n<p>What you should do before you minify</p>\n\n<p><em>And regarding jQuery... i don't use jQuery.jQuery is for old browsers,it was made for compatibility reasons .. check caniuse.com, almost everything works on every browser (also ie10 is standardized now) , i think now it's just here to slow down your web application...if you like the <code>$()</code> you should create your own simple function.And why bother to compress your code if your clients need to download the 100kb jquery script everythime?how big is your uncompressed code? 5-6kb..? Not to talk about the tons of plugins you add to to make it easier.</em>  </p>\n\n<p><strong>Original Code</strong></p>\n\n<p>When you write a function you have an idea, start to write stuff and sometimes you end up with something like the following code.The code works.Now most people stop thinking and add this to a minifier and publish it.</p>\n\n<pre><code>function myFunction(myNumber){\n     var myArray = new Array(myNumber);\n     var myObject = new Object();\n     var myArray2 = new Array();\n     for(var myCounter = 0 ; myCounter &lt; myArray.length ; myCounter++){\n         myArray2.push(myCounter);\n         var myString = myCounter.toString()\n         myObject[ myString ] = ( myCounter + 1 ).toString();\n     }\n    var myContainer = new Array();\n    myContainer[0] = myArray2;\n    myContainer[1] = myObject;\n    return myContainer;\n}\n</code></pre>\n\n<p>Here iss the minified code (i added the new lines)</p>\n\n<p><strong>Minified using</strong> (<a href=\"http://javascript-minifier.com/\">http://javascript-minifier.com/</a>)</p>\n\n<pre><code>function myFunction(r){\n for(var n=new Array(r),t=new Object,e=new Array,a=0;a&lt;n.length;a++){\n  e.push(a);\n  var o=a.toString();\n  t[o]=(a+1).toString()\n }\n var i=new Array;\n return i[0]=e,i[1]=t,i\n}\n</code></pre>\n\n<p>But are all those vars , ifs, loops &amp; definitions necessary?</p>\n\n<p>Most of the time <strong>NO</strong> !</p>\n\n<ol>\n<li>Remove unnecessary if,loop,var</li>\n<li>Keep a copy of your original code</li>\n<li>Use the minifier</li>\n</ol>\n\n<p><strong>OPTIONAL</strong> (increases the performance &amp; shorter code)</p>\n\n<ol>\n<li>use shorthand operators</li>\n<li>use bitwise operators (don't use <code>Math</code>)</li>\n<li>use a,b,c... for your temp vars</li>\n<li>use the old syntax (<code>while</code>,<code>for</code>... not <code>forEach</code>)</li>\n<li>use the function arguments as placeholder (in some cases)</li>\n<li>remove unneccessary <code>\"{}\",\"()\",\";\",spaces,newlines</code></li>\n<li>Use the minifier</li>\n</ol>\n\n<p>Now if a minifier can compress the code your doing it wrong.</p>\n\n<p><strong>No minifier can compress properly a bad code.</strong> </p>\n\n<p><strong>DIY</strong></p>\n\n<pre><code>function myFunction(a,b,c){\n for(b=[],c={};a--;)b[a]=a,c[a]=a+1+'';\n return[b,c]\n}\n</code></pre>\n\n<p>It does exactly the same thing as the codes above.</p>\n\n<p><strong>Performance</strong></p>\n\n<p><a href=\"http://jsperf.com/diyminify\">http://jsperf.com/diyminify</a></p>\n\n<p><strong>You always need to think what you need:</strong></p>\n\n<p><em>Before you say \"Noone would write code like the one below\" go and check the first 10 questions in here ...</em> </p>\n\n<p>Here are some common examples i see every ten minutes.</p>\n\n<p>Want a reusable condition</p>\n\n<pre><code>if(condition=='true'){\n var isTrue=true;\n}else{\n var isTrue=false;\n}\n//same as\nvar isTrue=!!condition\n</code></pre>\n\n<p>Alert yes only if it exists</p>\n\n<pre><code>if(condition==true){\n var isTrue=true;\n}else{\n var isTrue=false;\n}\nif(isTrue){\n alert('yes');\n}\n//same as\n!condition||alert('yes')\n//if the condition is not true alert yes\n</code></pre>\n\n<p>Alert yes or no</p>\n\n<pre><code>if(condition==true){\n var isTrue=true;\n}else{\n var isTrue=false;\n}\nif(isTrue){\n alert('yes');\n}else{\n alert('no');\n}\n//same as\nalert(condition?'yes':'no')\n//if the condition is true alert yes else no\n</code></pre>\n\n<p>Convert a number to a string or viceversa</p>\n\n<pre><code>var a=10;\nvar b=a.toString();\nvar c=parseFloat(b)\n//same as\nvar a=10,b,c;\nb=a+'';\nc=b*1\n\n//shorter\nvar a=10;\na+='';//String\na*=1;//Number\n</code></pre>\n\n<p>Round a number</p>\n\n<pre><code>var a=10.3899845\nvar b=Math.round(a);\n//same as\nvar b=(a+.5)|0;//numbers up to 10 decimal digits (32bit)\n</code></pre>\n\n<p>Floor a number</p>\n\n<pre><code>var a=10.3899845\nvar b=Math.floor(a);\n//same as\nvar b=a|0;//numbers up to 10 decimal digits (32bit)\n</code></pre>\n\n<p>switch case</p>\n\n<pre><code>switch(n)\n{\ncase 1:\n  alert('1');\n  break;\ncase 2:\n  alert('2');\n  break;\ndefault:\n  alert('3');\n}\n\n//same as\nvar a=[1,2];\nalert(a[n-1]||3);\n\n//same as\nvar a={'1':1,'2':2};\nalert(a[n]||3);\n</code></pre>\n\n<p>try catch</p>\n\n<pre><code>if(a&amp;&amp;a[b]&amp;&amp;a[b][c]&amp;&amp;a[b][c][d]&amp;&amp;a[b][c][d][e]){\n console.log(a[b][c][d][e]);\n}\n\n//this is probably the onle time you should use try catch\nvar x;\ntry{x=a.b.c.d.e}catch(e){}\n!x||conole.log(x);\n</code></pre>\n\n<p>more if</p>\n\n<pre><code>if(a==1||a==3||a==5||a==8||a==9){\n console.log('yes')\n}else{\n console.log('no');\n}\n\nconsole.log([1,3,5,8,9].indexOf(a)!=-1?'yes':'no');\n</code></pre>\n\n<p>numbers </p>\n\n<pre><code>1000000000000\n//same as\n1e12\n\nvar oneDayInMS=1000*60*60*24;\n//same as\nvar oneDayInMS=864e5;\n\nvar a=10;\na=1+a;\na=a*2;\n//same as\na=++a*2;\n</code></pre>\n\n<p>Some nice articles/sites i found about bitwise/shorthand:</p>\n\n<p><a href=\"http://mudcu.be/journal/2011/11/bitwise-gems-and-other-optimizations/\">http://mudcu.be/journal/2011/11/bitwise-gems-and-other-optimizations/</a></p>\n\n<p><a href=\"http://www.140byt.es/\">http://www.140byt.es/</a></p>\n\n<p><a href=\"http://www.jquery4u.com/javascript/shorthand-javascript-techniques/\">http://www.jquery4u.com/javascript/shorthand-javascript-techniques/</a></p>\n\n<p>There are also many jsperf sites showing the performance of shorthand &amp; bitwsie if you search with your favorite searchengine.</p>\n\n<p>I could go one for hours.. but i think it's enough for now. </p>\n\n<p>if you have some questions just ask.</p>\n\n<p>And remember</p>\n\n<p><strong>No minifier can compress properly a bad code.</strong> </p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>There is an online tool that also minifies javascript,html,php and css code.</p>\n\n<p><a href=\"http://webappcompress.eu\" rel=\"nofollow\" title=\"webappcompress\">webappcompress</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p><a href=\"http://jquery.com/\">JQuery</a> has two versions for download, one is <i>Production (19KB, Minified and Gzipped)</i>, and the other is <em>Development (120KB, Uncompressed Code)</em>.</p>\n\n<p>Now the compact 19kb version, if you download it, you will see is still a javascript executable code. How did they compactify it? And how can I 'minify' my code like that too?</p>\n",
            "last_activity_date": 1418442495,
            "question_id": 1737388,
            "score": 71,
            "tags": [
                "javascript",
                "gzip"
            ],
            "title": "How to &#39;minify&#39; Javascript code"
        },
        {
            "answer_count": 20,
            "answers": [
                {
                    "body": "<p>You need a function that does something like</p>\n\n<pre><code>return mystring.replace(/&amp;/g, \"&amp;amp;\").replace(/&gt;/g, \"&amp;gt;\").replace(/&lt;/g, \"&amp;lt;\").replace(/\"/g, \"&amp;quot;\");\n</code></pre>\n\n<p>But taking into account your desire for different handling of single/double quotes.</p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>Create a function that uses string <code>replace</code></p>\n\n<pre><code>function convert(str)\n{\n  str = str.replace(/&amp;/g, \"&amp;amp;\");\n  str = str.replace(/&gt;/g, \"&amp;gt;\");\n  str = str.replace(/&lt;/g, \"&amp;lt;\");\n  str = str.replace(/\"/g, \"&amp;quot;\");\n  str = str.replace(/'/g, \"&amp;#039;\");\n  return str;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>&lt;html&gt;\n&lt;body&gt;\n&lt;script type=\"text/javascript\"&gt;\nvar str= \"&amp;\\\"'&lt;&gt;\";\nalert('B4 Change:\\n' + str);\nstr= str.replace(/\\&amp;/g,'&amp;amp;');\nstr= str.replace(/&lt;/g,'&amp;lt;');\nstr= str.replace(/&gt;/g,'&amp;gt;');\nstr= str.replace(/\\\"/g,'&amp;quot;');\nstr= str.replace(/\\'/g,'&amp;#039;');\nalert('After change:\\n' + str);\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>use this to test: <a href=\"http://www.w3schools.com/js/tryit.asp?filename=tryjs_text\" rel=\"nofollow\">http://www.w3schools.com/js/tryit.asp?filename=tryjs_text</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>The best way in my opinion is to use the browser's inbuilt HTML escape functionality to handle many of the cases. To do this simply create a element in the DOM tree and set the <code>innerText</code> of the element to your string. Then retrieve the <code>innerHTML</code> of the element. The browser will return an HTML encoded string.</p>\n\n<pre><code>function HtmlEncode(s)\n{\n  var el = document.createElement(\"div\");\n  el.innerText = el.textContent = s;\n  s = el.innerHTML;\n  return s;\n}\n</code></pre>\n\n<p>Test run:</p>\n\n<pre><code>alert(HtmlEncode('&amp;;\\'&gt;&lt;\"'));\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>&amp;amp;;'&amp;gt;&amp;lt;\"\n</code></pre>\n\n<p>This method of escaping HTML is also used by the <a href=\"http://www.prototypejs.org/\">Prototype JS library</a> though differently from the simplistic sample I have given.</p>\n\n<p>Note: You will still need to escape quotes (double and single) yourself. You can use any of the methods outlined by others here.</p>\n",
                    "is_accepted": false,
                    "score": 143
                },
                {
                    "body": "<p>this generic function encodes every non alphabetic character to its htmlcode (numeric):</p>\n\n<pre><code>function HTMLEncode(str){\n  var i = str.length,\n      aRet = [];\n\n  while (i--) {\n    var iC = str[i].charCodeAt();\n    if (iC &lt; 65 || iC &gt; 127 || (iC&gt;90 &amp;&amp; iC&lt;97)) {\n      aRet[i] = '&amp;#'+iC+';';\n    } else {\n      aRet[i] = str[i];\n    }\n   }\n  return aRet.join('');    \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<pre><code>function escape (text)\n{\n  return text.replace(/[&lt;&gt;\\&amp;\\\"\\']/g, function(c) {\n    return '&amp;#' + c.charCodeAt(0) + ';';\n  });\n}\n\nalert(escape(\"&lt;&gt;&amp;'\\\"\"));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre>\nfunction ConvChar( str ) {\n  c = {'&lt;':'&amp;lt;', '&gt;':'&amp;gt;', '&':'&amp;amp;', '\"':'&amp;quot;', \"'\":'&amp;#039;',\n       '#':'&amp;#035;' };\n  return str.replace( /[&lt;&amp;>'\"#]/g, function(s) { return c[s]; } );\n}\n\nalert( ConvChar('&lt;-\"-&-\"->-&lt;-\\'-#-\\'->') );\n</pre>\n\n<p>Result:  </p>\n\n<pre>\n&amp;lt;-&amp;quot;-&ampamp;-&amp;quot;-&amp;gt;-&amp;lt;-&amp;#039;-&amp;#035;-&amp;#039;-&amp;gt;\n</pre>\n\n<p>In testarea tag:</p>\n\n<pre>\n&lt;-\"-&-\"->-&lt;-'-#-'->\n</pre>\n\n<p>If you'll just change a little chars in long code...</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Yes, but if you need to insert the resulting string somewhere without it being converted back, you need to do:</p>\n\n<pre><code>str.replace(/'/g,\"&amp;amp;amp;#39;\"); // and so on\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<pre><code>function char_convert() {\n\n    var chars = [\"\u00a9\",\"\u00db\",\"\u00ae\",\"\u017e\",\"\u00dc\",\"\u0178\",\"\u00dd\",\"$\",\"\u00de\",\"%\",\"\u00a1\",\"\u00df\",\"\u00a2\",\"\u00e0\",\"\u00a3\",\"\u00e1\",\"\u00c0\",\"\u00a4\",\"\u00e2\",\"\u00c1\",\"\u00a5\",\"\u00e3\",\"\u00c2\",\"\u00a6\",\"\u00e4\",\"\u00c3\",\"\u00a7\",\"\u00e5\",\"\u00c4\",\"\u00a8\",\"\u00e6\",\"\u00c5\",\"\u00a9\",\"\u00e7\",\"\u00c6\",\"\u00aa\",\"\u00e8\",\"\u00c7\",\"\u00ab\",\"\u00e9\",\"\u00c8\",\"\u00ac\",\"\u00ea\",\"\u00c9\",\"\u00ad\",\"\u00eb\",\"\u00ca\",\"\u00ae\",\"\u00ec\",\"\u00cb\",\"\u00af\",\"\u00ed\",\"\u00cc\",\"\u00b0\",\"\u00ee\",\"\u00cd\",\"\u00b1\",\"\u00ef\",\"\u00ce\",\"\u00b2\",\"\u00f0\",\"\u00cf\",\"\u00b3\",\"\u00f1\",\"\u00d0\",\"\u00b4\",\"\u00f2\",\"\u00d1\",\"\u00b5\",\"\u00f3\",\"\u00d5\",\"\u00b6\",\"\u00f4\",\"\u00d6\",\"\u00b7\",\"\u00f5\",\"\u00d8\",\"\u00b8\",\"\u00f6\",\"\u00d9\",\"\u00b9\",\"\u00f7\",\"\u00da\",\"\u00ba\",\"\u00f8\",\"\u00db\",\"\u00bb\",\"\u00f9\",\"\u00dc\",\"@\",\"\u00bc\",\"\u00fa\",\"\u00dd\",\"\u00bd\",\"\u00fb\",\"\u00de\",\"\u20ac\",\"\u00be\",\"\u00fc\",\"\u00df\",\"\u00bf\",\"\u00fd\",\"\u00e0\",\"\u201a\",\"\u00c0\",\"\u00fe\",\"\u00e1\",\"\u0192\",\"\u00c1\",\"\u00ff\",\"\u00e5\",\"\u201e\",\"\u00c2\",\"\u00e6\",\"\u2026\",\"\u00c3\",\"\u00e7\",\"\u2020\",\"\u00c4\",\"\u00e8\",\"\u2021\",\"\u00c5\",\"\u00e9\",\"\u02c6\",\"\u00c6\",\"\u00ea\",\"\u2030\",\"\u00c7\",\"\u00eb\",\"\u0160\",\"\u00c8\",\"\u00ec\",\"\u2039\",\"\u00c9\",\"\u00ed\",\"\u0152\",\"\u00ca\",\"\u00ee\",\"\u00cb\",\"\u00ef\",\"\u017d\",\"\u00cc\",\"\u00f0\",\"\u00cd\",\"\u00f1\",\"\u00ce\",\"\u00f2\",\"\u2018\",\"\u00cf\",\"\u00f3\",\"\u2019\",\"\u00d0\",\"\u00f4\",\"\u201c\",\"\u00d1\",\"\u00f5\",\"\u201d\",\"\u00d2\",\"\u00f6\",\"\u2022\",\"\u00d3\",\"\u00f8\",\"\u2013\",\"\u00d4\",\"\u00f9\",\"\u2014\",\"\u00d5\",\"\u00fa\",\"\u02dc\",\"\u00d6\",\"\u00fb\",\"\u2122\",\"\u00d7\",\"\u00fd\",\"\u0161\",\"\u00d8\",\"\u00fe\",\"\u203a\",\"\u00d9\",\"\u00ff\",\"\u0153\",\"\u00da\"]; \n    var codes = [\"&amp;copy;\",\"&amp;#219;\",\"&amp;reg;\",\"&amp;#158;\",\"&amp;#220;\",\"&amp;#159;\",\"&amp;#221;\",\"&amp;#36;\",\"&amp;#222;\",\"&amp;#37;\",\"&amp;#161;\",\"&amp;#223;\",\"&amp;#162;\",\"&amp;#224;\",\"&amp;#163;\",\"&amp;#225;\",\"&amp;Agrave;\",\"&amp;#164;\",\"&amp;#226;\",\"&amp;Aacute;\",\"&amp;#165;\",\"&amp;#227;\",\"&amp;Acirc;\",\"&amp;#166;\",\"&amp;#228;\",\"&amp;Atilde;\",\"&amp;#167;\",\"&amp;#229;\",\"&amp;Auml;\",\"&amp;#168;\",\"&amp;#230;\",\"&amp;Aring;\",\"&amp;#169;\",\"&amp;#231;\",\"&amp;AElig;\",\"&amp;#170;\",\"&amp;#232;\",\"&amp;Ccedil;\",\"&amp;#171;\",\"&amp;#233;\",\"&amp;Egrave;\",\"&amp;#172;\",\"&amp;#234;\",\"&amp;Eacute;\",\"&amp;#173;\",\"&amp;#235;\",\"&amp;Ecirc;\",\"&amp;#174;\",\"&amp;#236;\",\"&amp;Euml;\",\"&amp;#175;\",\"&amp;#237;\",\"&amp;Igrave;\",\"&amp;#176;\",\"&amp;#238;\",\"&amp;Iacute;\",\"&amp;#177;\",\"&amp;#239;\",\"&amp;Icirc;\",\"&amp;#178;\",\"&amp;#240;\",\"&amp;Iuml;\",\"&amp;#179;\",\"&amp;#241;\",\"&amp;ETH;\",\"&amp;#180;\",\"&amp;#242;\",\"&amp;Ntilde;\",\"&amp;#181;\",\"&amp;#243;\",\"&amp;Otilde;\",\"&amp;#182;\",\"&amp;#244;\",\"&amp;Ouml;\",\"&amp;#183;\",\"&amp;#245;\",\"&amp;Oslash;\",\"&amp;#184;\",\"&amp;#246;\",\"&amp;Ugrave;\",\"&amp;#185;\",\"&amp;#247;\",\"&amp;Uacute;\",\"&amp;#186;\",\"&amp;#248;\",\"&amp;Ucirc;\",\"&amp;#187;\",\"&amp;#249;\",\"&amp;Uuml;\",\"&amp;#64;\",\"&amp;#188;\",\"&amp;#250;\",\"&amp;Yacute;\",\"&amp;#189;\",\"&amp;#251;\",\"&amp;THORN;\",\"&amp;#128;\",\"&amp;#190;\",\"&amp;#252\",\"&amp;szlig;\",\"&amp;#191;\",\"&amp;#253;\",\"&amp;agrave;\",\"&amp;#130;\",\"&amp;#192;\",\"&amp;#254;\",\"&amp;aacute;\",\"&amp;#131;\",\"&amp;#193;\",\"&amp;#255;\",\"&amp;aring;\",\"&amp;#132;\",\"&amp;#194;\",\"&amp;aelig;\",\"&amp;#133;\",\"&amp;#195;\",\"&amp;ccedil;\",\"&amp;#134;\",\"&amp;#196;\",\"&amp;egrave;\",\"&amp;#135;\",\"&amp;#197;\",\"&amp;eacute;\",\"&amp;#136;\",\"&amp;#198;\",\"&amp;ecirc;\",\"&amp;#137;\",\"&amp;#199;\",\"&amp;euml;\",\"&amp;#138;\",\"&amp;#200;\",\"&amp;igrave;\",\"&amp;#139;\",\"&amp;#201;\",\"&amp;iacute;\",\"&amp;#140;\",\"&amp;#202;\",\"&amp;icirc;\",\"&amp;#203;\",\"&amp;iuml;\",\"&amp;#142;\",\"&amp;#204;\",\"&amp;eth;\",\"&amp;#205;\",\"&amp;ntilde;\",\"&amp;#206;\",\"&amp;ograve;\",\"&amp;#145;\",\"&amp;#207;\",\"&amp;oacute;\",\"&amp;#146;\",\"&amp;#208;\",\"&amp;ocirc;\",\"&amp;#147;\",\"&amp;#209;\",\"&amp;otilde;\",\"&amp;#148;\",\"&amp;#210;\",\"&amp;ouml;\",\"&amp;#149;\",\"&amp;#211;\",\"&amp;oslash;\",\"&amp;#150;\",\"&amp;#212;\",\"&amp;ugrave;\",\"&amp;#151;\",\"&amp;#213;\",\"&amp;uacute;\",\"&amp;#152;\",\"&amp;#214;\",\"&amp;ucirc;\",\"&amp;#153;\",\"&amp;#215;\",\"&amp;yacute;\",\"&amp;#154;\",\"&amp;#216;\",\"&amp;thorn;\",\"&amp;#155;\",\"&amp;#217;\",\"&amp;yuml;\",\"&amp;#156;\",\"&amp;#218;\"];\n\n    for(x=0; x&lt;chars.length; x++){\n        for (i=0; i&lt;arguments.length; i++){\n            arguments[i].value = arguments[i].value.replace(chars[x], codes[x]);\n        }\n    }\n }\n\nchar_convert(this);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>var swapCodes   = new Array(8211, 8212, 8216, 8217, 8220, 8221, 8226, 8230, 8482, 169, 61558, 8226, 61607);\nvar swapStrings = new Array(\"--\", \"--\", \"'\",  \"'\",  '\"',  '\"',  \"*\",  \"...\", \"&amp;trade;\", \"&amp;copy;\", \"&amp;bull;\", \"&amp;bull;\", \"&amp;bull;\");\n\nvar TextCheck = {\n    doCWBind:function(div){\n        $(div).bind({\n            bind:function(){\n                TextCheck.cleanWord(div);\n            },\n            focus:function(){\n                TextCheck.cleanWord(div);\n            },\n            paste:function(){\n                TextCheck.cleanWord(div);\n            }\n        }); \n    },\n    cleanWord:function(div){\n        var output = $(div).val();\n        for (i = 0; i &lt; swapCodes.length; i++) {\n            var swapper = new RegExp(\"\\\\u\" + swapCodes[i].toString(16), \"g\");\n            output = output.replace(swapper, swapStrings[i]);\n        }\n        $(div).val(output);\n    }\n}\n</code></pre>\n\n<p>Another one that we use now that works. One above I have it calling a script instead and returns the converted code. Only good on small textareas (meaning not a full on article/blog ect...)</p>\n\n<hr>\n\n<p>For Above. Works on most chars.</p>\n\n<pre><code>var swapCodes   = new Array(8211, 8212, 8216, 8217, 8220, 8221, 8226, 8230, 8482, 61558, 8226, 61607,161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 338, 339, 352, 353, 376, 402);\nvar swapStrings = new Array(\"--\", \"--\", \"'\",  \"'\",  '\"',  '\"',  \"*\",  \"...\", \"&amp;trade;\", \"&amp;bull;\", \"&amp;bull;\", \"&amp;bull;\", \"&amp;iexcl;\", \"&amp;cent;\", \"&amp;pound;\", \"&amp;curren;\", \"&amp;yen;\", \"&amp;brvbar;\", \"&amp;sect;\", \"&amp;uml;\", \"&amp;copy;\", \"&amp;ordf;\", \"&amp;laquo;\", \"&amp;not;\", \"&amp;shy;\", \"&amp;reg;\", \"&amp;macr;\", \"&amp;deg;\", \"&amp;plusmn;\", \"&amp;sup2;\", \"&amp;sup3;\", \"&amp;acute;\", \"&amp;micro;\", \"&amp;para;\", \"&amp;middot;\", \"&amp;cedil;\", \"&amp;sup1;\", \"&amp;ordm;\", \"&amp;raquo;\", \"&amp;frac14;\", \"&amp;frac12;\", \"&amp;frac34;\", \"&amp;iquest;\", \"&amp;Agrave;\", \"&amp;Aacute;\", \"&amp;Acirc;\", \"&amp;Atilde;\", \"&amp;Auml;\", \"&amp;Aring;\", \"&amp;AElig;\", \"&amp;Ccedil;\", \"&amp;Egrave;\", \"&amp;Eacute;\", \"&amp;Ecirc;\", \"&amp;Euml;\", \"&amp;Igrave;\", \"&amp;Iacute;\", \"&amp;Icirc;\", \"&amp;Iuml;\", \"&amp;ETH;\", \"&amp;Ntilde;\", \"&amp;Ograve;\", \"&amp;Oacute;\", \"&amp;Ocirc;\", \"&amp;Otilde;\", \"&amp;Ouml;\", \"&amp;times;\", \"&amp;Oslash;\", \"&amp;Ugrave;\", \"&amp;Uacute;\", \"&amp;Ucirc;\", \"&amp;Uuml;\", \"&amp;Yacute;\", \"&amp;THORN;\", \"&amp;szlig;\", \"&amp;agrave;\", \"&amp;aacute;\", \"&amp;acirc;\", \"&amp;atilde;\", \"&amp;auml;\", \"&amp;aring;\", \"&amp;aelig;\", \"&amp;ccedil;\", \"&amp;egrave;\", \"&amp;eacute;\", \"&amp;ecirc;\", \"&amp;euml;\", \"&amp;igrave;\", \"&amp;iacute;\", \"&amp;icirc;\", \"&amp;iuml;\", \"&amp;eth;\", \"&amp;ntilde;\", \"&amp;ograve;\", \"&amp;oacute;\", \"&amp;ocirc;\", \"&amp;otilde;\", \"&amp;ouml;\", \"&amp;divide;\", \"&amp;oslash;\", \"&amp;ugrave;\", \"&amp;uacute;\", \"&amp;ucirc;\", \"&amp;uuml;\", \"&amp;yacute;\", \"&amp;thorn;\", \"&amp;yuml;\", \"&amp;#338;\", \"&amp;#339;\", \"&amp;#352;\", \"&amp;#353;\", \"&amp;#376;\", \"&amp;#402;\");\n</code></pre>\n\n<hr>\n\n<p>I create a javascript file that has a lot of functionality including the above.\n<a href=\"http://www.neotropicsolutions.com/JSChars.zip\" rel=\"nofollow\">http://www.neotropicsolutions.com/JSChars.zip</a></p>\n\n<p>All files needed are included. I added jQuery 1.4.4. Simply because I saw issues in other versions, yet to try them out.</p>\n\n<pre><code>Requires: jQuery &amp; jQuery Impromptu from: http://trentrichardson.com/Impromptu/index.php\n\n1. Word Count\n2. Character Conversion\n3. Checks to ensure this is not passed: \"notsomeverylongstringmissingspaces\"\n4. Checks to make sure ALL IS NOT ALL UPPERCASE.\n5. Strip HTML\n\n    // Word Counter\n    $.getScript('js/characters.js',function(){\n            $('#adtxt').bind(\"keyup click blur focus change paste\",\n                function(event){\n                    TextCheck.wordCount(30, \"#adtxt\", \"#adtxt_count\", event);\n            });\n            $('#adtxt').blur(\n                function(event){\n                    TextCheck.check_length('#adtxt'); // unsures properly spaces-not one long word\n                    TextCheck.doCWBind('#adtxt');// char conversion\n            });\n\n            TextCheck.wordCount(30, \"#adtxt\", \"#adtxt_count\", false);\n        });\n\n    //HTML\n    &lt;textarea name=\"adtxt\" id=\"adtxt\" rows=\"10\" cols=\"70\" class=\"wordCount\"&gt;&lt;/textarea&gt;\n&lt;div id=\"adtxt_count\" class=\"clear\"&gt;&lt;/div&gt;\n\n    // Just Character Conversions:\n    TextCheck.doCWBind('#myfield');\n\n    // Run through form fields in a form for case checking.\n    // Alerts user when field is blur'd.\n    var labels = new Array(\"Brief Description\",\"Website URL\",\"Contact Name\",\"Website\",\"Email\",\"Linkback URL\");\n    var checking = new Array(\"descr\",\"title\",\"fname\",\"website\",\"email\",\"linkback\");\n    TextCheck.check_it(checking,labels);\n\n    // Extra security to check again, make sure form is not submitted\n    var pass = TextCheck.validate(checking,labels);\n    if(pass){\n        //do form actions\n    }\n\n\n    //Strip HTML\n    &lt;textarea name=\"adtxt\" id=\"adtxt\" rows=\"10\" cols=\"70\" onblur=\"TextCheck.stripHTML(this);\"&gt;&lt;/textarea&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use the javaScript Function <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Functions#escape_and_unescape_functions\" rel=\"nofollow\">escape()</a>, that lets you encode strings.</p>\n\n<p><strong>e.g.,</strong></p>\n\n<pre><code>escape(\"yourString\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>See JavaScript htmlentities <a href=\"http://phpjs.org/functions/htmlentities:425\" rel=\"nofollow\">http://phpjs.org/functions/htmlentities:425</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In a <code>PRE</code> tag -and in most other HTML tags- plain text for a batch file that uses the output redirection characters (&lt; and >) will break the HTML, but <strong>here is my tip</strong>: anything goes in a <code>TEXTAREA</code> element -it will not break the HTML, mainly because we are inside a control instanced and handled by the OS, and therefore its content are not being parsed by the HTML engine.</p>\n\n<p>As an example, say I want to highlight the syntax of my batch file using javascript. I simply paste the code in a textarea without worrying about the HTML reserved characters, and have the script process the <code>innerHTML</code> property of the textarea, which evaluates to the text with the HTML reserved characters replaced by their corresponding ISO-8859-1 entities.</p>\n\n<p>Browsers will escape special characters automatically when you retrieve the <code>innerHTML</code> (and <code>outerHTML</code>) property of an element. Using a textarea (and who knows, maybe an input of type text) just saves you from doing the conversion (manually or through code).</p>\n\n<p>I use this trick to test my syntax highlighter, and when I'm done authoring and testing, I simply hide the textarea from view.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>From Mozilla ...</p>\n\n<blockquote>\n  <p>Note that charCodeAt will always return a value that is less than 65,536. This is because the higher code points are represented by a pair of (lower valued) \"surrogate\" pseudo-characters which are used to comprise the real character. Because of this, in order to examine or reproduce the full character for individual characters of value 65,536 and above, for such characters, it is necessary to retrieve not only charCodeAt(i), but also charCodeAt(i+1) (as if examining/reproducing a string with two >letters).</p>\n</blockquote>\n\n<p>The Best Solution</p>\n\n<pre><code>/**\n * (c) 2012 Steven Levithan &lt;http://slevithan.com/&gt;\n * MIT license\n */\nif (!String.prototype.codePointAt) {\n    String.prototype.codePointAt = function (pos) {\n        pos = isNaN(pos) ? 0 : pos;\n        var str = String(this),\n            code = str.charCodeAt(pos),\n            next = str.charCodeAt(pos + 1);\n        // If a surrogate pair\n        if (0xD800 &lt;= code &amp;&amp; code &lt;= 0xDBFF &amp;&amp; 0xDC00 &lt;= next &amp;&amp; next &lt;= 0xDFFF) {\n            return ((code - 0xD800) * 0x400) + (next - 0xDC00) + 0x10000;\n        }\n        return code;\n    };\n}\n\n/**\n * Encodes special html characters\n * @param string\n * @return {*}\n */\nfunction html_encode(string) {\n    var ret_val = '';\n    for (var i = 0; i &lt; string.length; i++) { \n        if (string.codePointAt(i) &gt; 127) {\n            ret_val += '&amp;#' + string.codePointAt(i) + ';';\n        } else {\n            ret_val += string.charAt(i);\n        }\n    }\n    return ret_val;\n}\n</code></pre>\n\n<p>Usage example:</p>\n\n<pre><code>html_encode(\"\u2708\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>a workaround:</p>\n\n<p><code>\n  var temp = $(\"div\").text(\"&lt;\");\n  var afterEscape = temp.html(); // afterEscape == \"&amp;lt;\"\n</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As was mentioned by <code>dragon</code> the cleanest way to do it is with jQuery:</p>\n\n<pre><code>function HtmlEncode(s) {\n    return $('&lt;div&gt;').text(s).html();\n}\n\nfunction HtmlDecode(s) {\n    return $('&lt;div&gt;').html(s).text();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This doesn't direcly answer your question, but if you are using <code>innerHTML</code> in order to write text within an element and you ran into encoding issues, just use <code>textContent</code>, i.e.:</p>\n\n<pre><code>var s = \"Foo 'bar' baz &lt;qux&gt;\";\n\nvar element = document.getElementById('foo');\nelement.textContent = s;\n\n// &lt;div id=\"foo\"&gt;Foo 'bar' baz &lt;qux&gt;&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code> &lt;!doctype html&gt;\n    &lt;html lang=\"en\"&gt;\n    &lt;head&gt;\n      &lt;meta charset=\"utf-8\"&gt;\n      &lt;title&gt;html&lt;/title&gt;  \n      &lt;script&gt;\n      $(function() {   \n      document.getElementById('test').innerHTML = \"&amp;amp;\";\n      });\n\n      &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n    &lt;div id=\"test\"&gt;&lt;/div&gt;\n    &lt;/body&gt;\n    &lt;/html&gt;\n</code></pre>\n\n<p>you can simply convert special characters to html using above code.   </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>public static string HtmlEncode (string text)\n{\n    string result;\n    using (StringWriter sw = new StringWriter())\n    {\n        var x = new HtmlTextWriter(sw);\n        x.WriteEncodedText(text);\n        result = sw.ToString();\n    }\n    return result;\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Here's a good library I've found very useful in this context.</p>\n\n<p><a href=\"https://github.com/mathiasbynens/he\" rel=\"nofollow\">https://github.com/mathiasbynens/he</a></p>\n\n<p>According to its author:</p>\n\n<blockquote>\n  <p>It supports all standardized named character references as per HTML,\n  handles ambiguous ampersands and other edge cases just like a browser\n  would, has an extensive test suite, and \u2014 contrary to many other\n  JavaScript solutions \u2014 he handles astral Unicode symbols just fine</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Does any one know how to convert special characters to <code>HTML</code> in <code>Javascript</code>?</p>\n\n<p>Example:</p>\n\n<pre><code> '&amp;' (ampersand) becomes '&amp;amp' &lt;br&gt;\n '\"' (double quote) becomes '&amp;quot' when ENT_NOQUOTES is not set.&lt;br&gt;\n ''' (single quote) becomes '&amp;#039' only when ENT_QUOTES is set.&lt;br&gt;\n '&lt;' (less than) becomes '&amp;lt'&lt;br&gt;\n '&gt;' (greater than) becomes '&amp;gt'\n</code></pre>\n",
            "last_activity_date": 1418071869,
            "question_id": 784586,
            "score": 61,
            "tags": [
                "javascript"
            ],
            "title": "Convert special characters to HTML in Javascript"
        },
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p>No, there's no way to do it.  That would essentially be scoping in reverse.  </p>\n\n<p>Methods defined inside the constructor have access to private variables because all functions have access to the scope in which they were defined.  </p>\n\n<p>Methods defined on a prototype are not defined within the scope of the constructor, and will not have access to the constructor's local variables.</p>\n\n<p>You can still have private variables, but if you want methods defined on the prototype to have access to them, you should define getters and setters on the <code>this</code> object, which the prototype methods (along with everything else) <em>will</em> have access to. For example:</p>\n\n<pre><code>function Person(name, secret) {\n    // public\n    this.name = name;\n\n    // private\n    var secret = secret;\n\n    // public methods have access to private members\n    this.setSecret = function(s) {\n        secret = s;\n    }\n\n    this.getSecret = function() {\n        return secret;\n    }\n}\n\n// Must use getters/setters \nPerson.prototype.spillSecret = function() { alert(this.getSecret()); };\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 72
                },
                {
                    "body": "<p>see <a href=\"http://www.crockford.com/javascript/private.html\">Doug Crockford's page on this</a>. You have to do it indirectly with something that can access the scope of the private variable.</p>\n\n<p>another example:</p>\n\n<pre><code>Incrementer = function(init) {\n  var counter = init || 0;  // \"counter\" is a private variable\n  this._increment = function() { return counter++; }\n  this._set = function(x) { counter = x; }\n}\nIncrementer.prototype.increment = function() { return this._increment(); }\nIncrementer.prototype.set = function(x) { return this._set(x); }\n</code></pre>\n\n<p>use case:</p>\n\n<pre><code>js&gt;i = new Incrementer(100);\n[object Object]\njs&gt;i.increment()\n100\njs&gt;i.increment()\n101\njs&gt;i.increment()\n102\njs&gt;i.increment()\n103\njs&gt;i.set(-44)\njs&gt;i.increment()\n-44\njs&gt;i.increment()\n-43\njs&gt;i.increment()\n-42\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>You can use a prototype assignment within the constructor definition. </p>\n\n<p>The variable will be visible to the prototype added method but all the instances of the functions will access the same SHARED variable.</p>\n\n<pre><code>function A()\n{\n  var sharedVar = 0;\n  this.local = \"\";\n\n  A.prototype.increment = function(lval)\n  {    \n    if (lval) this.local = lval;    \n    alert((++sharedVar) + \" while this.p is still \" + this.local);\n  }\n}\n\nvar a = new A();\nvar b = new A();    \na.increment(\"I belong to a\");\nb.increment(\"I belong to b\");\na.increment();\nb.increment();\n</code></pre>\n\n<p>I hope this can be usefull.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I suggest it would probably be a good idea to describe \"having a prototype assignment in a constructor\" as a Javascript anti-pattern. Think about it. It is way too risky.</p>\n\n<p>What you're actually doing there on creation of the second object (i.e. b) is redefining that prototype function for all objects that use that prototype. This will effectively reset the value for object a in your example. It will work if you want a shared variable and if you happen to create all of the object instances up front, but it feels way too risky.</p>\n\n<p>I found a bug in some Javascript I was working on recently that was due to this exact anti-pattern. It was trying to set a drag and drop handler on the particular object being created but was instead doing it for all instances. Not good.</p>\n\n<p>Doug Crockford's solution is the best.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>As a possible solution, I would like to share a way I found to achieve private instance state in JavaScript (with normal prototype methods). Check it out: <a href=\"http://www.codeproject.com/KB/ajax/SafeFactoryPattern.aspx\" rel=\"nofollow\">http://www.codeproject.com/KB/ajax/SafeFactoryPattern.aspx</a></p>\n\n<p>I've published an implementation of this pattern in <a href=\"https://github.com/dcleao/private-state\" rel=\"nofollow\">https://github.com/dcleao/private-state</a>.\nThere's a package for node: npm install private-state</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>@Kai</p>\n\n<p>That won't work. If you do</p>\n\n<pre><code>var t2 = new TestClass();\n</code></pre>\n\n<p>then <code>t2.prototypeHello</code> will be accessing t's private section.</p>\n\n<p>@AnglesCrimes</p>\n\n<p>The sample code works fine, but it actually creates a \"static\" private member shared by all instances. It may not be the solution morgancodes looked for.</p>\n\n<p>So far I haven't found an easy and clean way to do this without introducing a private hash and extra cleanup functions. A private member function can be simulated to certain extent:</p>\n\n<pre><code>(function() {\n    function Foo() { ... }\n    Foo.prototype.bar = function() {\n       privateFoo.call(this, blah);\n    };\n    function privateFoo(blah) { \n        // scoped to the instance by passing this to call \n    }\n\n    window.Foo = Foo;\n}());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>When I read this, it sounded like a tough challenge so I decided to figure out a way. What I came up with was <strong>CRAAAAZY</strong> but it totally works.</p>\n\n<p>First, I tried defining the class in an immediate function so you'd have access to some of the private properties of that function. This works and allows you to get some private data, however, if you try to set the private data you'll soon find that all the objects will share the same value.</p>\n\n<pre><code>var SharedPrivateClass = (function(){ // use immediate function\n    // our private data\n    var private = \"Default\";\n\n    // create the constructor\n    function SharedPrivateClass () {}\n\n    // add to the prototype\n    SharedPrivateClass.prototype.getPrivate = function () {\n        // It has access to private vars from the immediate function!\n        return private;\n    }\n\n    SharedPrivateClass.prototype.setPrivate = function (value) {\n        private = value;\n    }\n\n    return SharedPrivateClass;\n})();\n\nvar a = new SharedPrivateClass();\nconsole.log(\"a:\", a.getPrivate()); // \"a: Default\"\n\nvar b = new SharedPrivateClass();\nconsole.log(\"b:\", b.getPrivate()); // \"b: Default\"\n\na.setPrivate(\"foo\"); // a Sets private to 'foo'\nconsole.log(\"a:\", a.getPrivate()); // \"a: foo\"\nconsole.log(\"b:\", b.getPrivate()); // oh no, b.getPrivate() is 'foo'!\n\nconsole.log(a.hasOwnProperty(\"getPrivate\")); // false. belongs to the prototype\nconsole.log(a.private); // undefined\n</code></pre>\n\n<p>There are plenty of cases where this would be adequate like if you wanted to have constant values like event names that get shared between instances. But essentially, they act like private static variables. </p>\n\n<p>If you absolutely need access to variables in a private namespace from within your methods defined on the prototype, you can try this pattern. </p>\n\n<pre><code>var PrivateNamespaceClass = (function(){  // immediate function\n    var instance = 0, // counts the number of instances\n        defaultName = \"Default Name\",  \n        p = []; // an array of private objects\n\n    // careate the constructor\n    function PrivateNamespaceClass () {\n        // Increment the instance count and save it to the instance. \n        // This will become your key to your private space.\n        this.i = instance++; \n\n        // Create a new object in the private space.\n        p[this.i] = {};\n        // Define properties or methods in the private space.\n        p[this.i].name = defaultName;\n\n        console.log(\"New instance \" + this.i);        \n    }\n    PrivateNamespaceClass.prototype.getPrivateName = function () {\n        // It has access to the private space and it's children!\n        return p[this.i].name;\n    }\n    PrivateNamespaceClass.prototype.setPrivateName = function (value) {\n        // Because you use the instance number assigned to the object (this.i)\n        // as a key, the values set will not change in other instances.\n        p[this.i].name = value;\n        return \"Set \" + p[this.i].name;\n    }\n\n    return PrivateNamespaceClass;\n})();\n\nvar a = new PrivateNamespaceClass();\nconsole.log(a.getPrivateName()); // Default Name\n\nvar b = new PrivateNamespaceClass();\nconsole.log(b.getPrivateName()); // Default Name\n\nconsole.log(a.setPrivateName(\"A\"));\nconsole.log(b.setPrivateName(\"B\"));\nconsole.log(a.getPrivateName()); // A\nconsole.log(b.getPrivateName()); // B\n\nconsole.log(a.privateNamespace); // undefined\n</code></pre>\n\n<p>I'd love some feedback from anyone who sees an error with this way of doing it. </p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>You can actually achieve this by using <strong>Accessor Verification</strong>:</p>\n\n<pre><code>(function(key, global) {\n  // Creates a private data accessor function.\n  function _(pData) {\n    return function(aKey) {\n      return aKey === key &amp;&amp; pData;\n    };\n  }\n\n  // Private data accessor verifier.  Verifies by making sure that the string\n  // version of the function looks normal and that the toString function hasn't\n  // been modified.  NOTE:  Verification can be duped if the rogue code replaces\n  // Function.prototype.toString before this closure executes.\n  function $(me) {\n    if(me._ + '' == _asString &amp;&amp; me._.toString === _toString) {\n      return me._(key);\n    }\n  }\n  var _asString = _({}) + '', _toString = _.toString;\n\n  // Creates a Person class.\n  var PersonPrototype = (global.Person = function(firstName, lastName) {\n    this._ = _({\n      firstName : firstName,\n      lastName : lastName\n    });\n  }).prototype;\n  PersonPrototype.getName = function() {\n    var pData = $(this);\n    return pData.firstName + ' ' + pData.lastName;\n  };\n  PersonPrototype.setFirstName = function(firstName) {\n    var pData = $(this);\n    pData.firstName = firstName;\n    return this;\n  };\n  PersonPrototype.setLastName = function(lastName) {\n    var pData = $(this);\n    pData.lastName = lastName;\n    return this;\n  };\n})({}, this);\n\nvar chris = new Person('Chris', 'West');\nalert(chris.setFirstName('Christopher').setLastName('Webber').getName());\n</code></pre>\n\n<p>This example comes from my post about <a href=\"http://gotochriswest.com/blog/2013/04/01/javascript-prototypal-functions-and-private-data/\">Prototypal Functions &amp; Private Data</a> and is explained in more detail there.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Yes, it's possible. PPF design pattern just solves this. </p>\n\n<p>PPF stands for Private Prototype Functions. Basic PPF solves these issues:</p>\n\n<ol>\n<li>Prototype functions get access to private instance data.</li>\n<li>Prototype functions can be made private.</li>\n</ol>\n\n<p>For the first, just:</p>\n\n<ol>\n<li>Put all private instance variables you want to be accessible from prototype functions inside a separate data container, and</li>\n<li>Pass a reference to the data container to all prototype functions as a parameter.</li>\n</ol>\n\n<p>It's that simple. For example:</p>\n\n<pre><code>// Helper class to store private data.\nfunction Data() {};\n\n// Object constructor\nfunction Point(x, y)\n{\n  // container for private vars: all private vars go here\n  // we want x, y be changeable via methods only\n  var data = new Data;\n  data.x = x;\n  data.y = y;\n\n  ...\n}\n\n// Prototype functions now have access to private instance data\nPoint.prototype.getX = function(data)\n{\n  return data.x;\n}\n\nPoint.prototype.getY = function(data)\n{\n  return data.y;\n}\n</code></pre>\n\n<p>...</p>\n\n<p>Read the full story here:</p>\n\n<p><a href=\"http://articles.edwardsoft.com/private-prototype-functions\" rel=\"nofollow\">PPF Design Pattern</a> </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<h1>Update: With ES6, there is a better way:</h1>\n\n<p>Long story short, you can use the new <code>Symbol</code> to create private fields.<br>\n<a href=\"https://curiosity-driven.org/private-properties-in-javascript\" rel=\"nofollow\">https://curiosity-driven.org/private-properties-in-javascript</a></p>\n\n<h1>For all modern browsers with ES5:</h1>\n\n<h3>Don't bother mixing Closures with Prototypes</h3>\n\n<p>I think you <strong>shouldn't</strong> mix closure variables with prototype methods.  You should use one or the other.  </p>\n\n<p>Although you clearly already understand closures, private variables, and prototypal inheritance, I'd like to describe them to illustrate my point.</p>\n\n<h3>Use Closures for Private and Public</h3>\n\n<p>The simplest way to construct objects is to avoid prototypal inheritance altogether. \nJust define the private variables and public functions within the closure, and all public methods will have private access to the variables.  </p>\n\n<h3>Use Prototype for Private and Public</h3>\n\n<p>In JavaScript, prototypal inheritance is primarily <em>an optimization</em>.  It allows multiple instances to share prototype methods, rather than each instance having its own methods.<br>\nThe drawback is that <code>this</code> is the <strong>only</strong> thing that's different each time a prototypal function is called.<br>\nTherefore, any private fields must be accessible through <code>this</code>, which means they're going to be public.  So we just stick to naming conventions for <code>_private</code> fields.</p>\n\n<h3>Don't use Closures for Private and Prototype for Public</h3>\n\n<p>When you use a closure to create a private variable, you cannot access it from a prototypal method <em>unless</em> it's exposed through the <code>this</code> variable.  Most solutions, therefore, just expose the variable by a method, which means that you're exposing it publicly one way or another.</p>\n\n<h3>So, which one to choose?</h3>\n\n<p>I think using <strong>prototypal inheritance</strong> makes the most sense, makes debugging easier, provides transparency, could improve performance, and so that's what I usually use.<br>\nStick to conventions for <code>_private</code> fields and everything goes great.<br>\nAnd I don't understand why JS developers try SO hard to make fields truly private.  </p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>In current JavaScript, I'm fairly certain that there is <em>one</em> and <em>only one</em> way to have <strong>private state</strong>, accessible from <strong>prototype</strong> functions, without adding anything <strong>public</strong> to <code>this</code>.  The answer is to use the \"weak map\" pattern.</p>\n\n<p>To sum it up: The <code>Person</code> class has a single weak map, where the keys are the instances of Person, and the values are plain objects that are used for private storage.</p>\n\n<p>Here is a fully functional example: (play at <a href=\"http://jsfiddle.net/ScottRippey/BLNVr/\" rel=\"nofollow\">http://jsfiddle.net/ScottRippey/BLNVr/</a>)</p>\n\n<pre><code>var Person = (function() {\n    var _ = weakMap();\n    // Now, _(this) returns an object, used for private storage.\n    var Person = function(first, last) {\n        // Assign private storage:\n        _(this).firstName = first;\n        _(this).lastName = last;\n    }\n    Person.prototype = {\n        fullName: function() {\n            // Retrieve private storage:\n            return _(this).firstName + _(this).lastName;\n        },\n        firstName: function() {\n            return _(this).firstName;\n        },\n        destroy: function() {\n            // Free up the private storage:\n            _(this, true);\n        }\n    };\n    return Person;\n})();\n\nfunction weakMap() {\n    var instances=[], values=[];\n    return function(instance, destroy) {\n        var index = instances.indexOf(instance);\n        if (destroy) {\n            // Delete the private state:\n            instances.splice(index, 1);\n            return values.splice(index, 1)[0];\n        } else if (index === -1) {\n            // Create the private state:\n            instances.push(instance);\n            values.push({});\n            return values[values.length - 1];\n        } else {\n            // Return the private state:\n            return values[index];\n        }\n    };\n}\n</code></pre>\n\n<p>Like I said, this is really the only way to achieve all 3 parts.  </p>\n\n<p>There are two caveats, however.  First, this costs performance -- every time you access the private data, it's an <code>O(n)</code> operation, where <code>n</code> is the number of instances.  So you won't want to do this if you have a large number of instances.\nSecond, when you're done with an instance, you must call <code>destroy</code>; otherwise, the instance and the data will not be garbage collected, and you'll end up with a memory leak.  </p>\n\n<p>And that's why my original answer, <strong>\"You shouldn't\"</strong>, is something I'd like to stick to.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Can't you put the variables in a higher scope?</p>\n\n<pre><code>(function () {\n    var privateVariable = true;\n\n    var MyClass = function () {\n        if (privateVariable) console.log('readable from private scope!');\n    };\n\n    MyClass.prototype.publicMethod = function () {\n        if (privateVariable) console.log('readable from public scope!');\n    };\n}))();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can also try to add method not directly on prototype, but on constructor function like this:</p>\n\n<pre><code>var MyArray = function() {\n    var array = [];\n\n    this.add = MyArray.add.bind(null, array);\n    this.getAll = MyArray.getAll.bind(null, array);\n}\n\nMyArray.add = function(array, item) {\n    array.push(item);\n}\nMyArray.getAll = function(array) {\n    return array;\n}\n\nvar myArray1 = new MyArray();\nmyArray1.add(\"some item 1\");\nconsole.log(myArray1.getAll()); // ['some item 1']\nvar myArray2 = new MyArray();\nmyArray2.add(\"some item 2\");\nconsole.log(myArray2.getAll()); // ['some item 2']\nconsole.log(myArray1.getAll()); // ['some item 2'] - FINE!\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There's a simpler way by leveraging the use of <code>bind</code> and <code>call</code> methods.</p>\n\n<p>By setting private variables to an object, you can leverage that object's scope.</p>\n\n<h2>Example</h2>\n\n<pre><code>function TestClass (value) {\n    // The private value(s)\n    var _private = {\n        value: value\n    };\n\n    // `bind` creates a copy of `getValue` when the object is instantiated\n    this.getValue = TestClass.prototype.getValue.bind(_private);\n\n    // Use `call` in another function if the prototype method will possibly change\n    this.getValueDynamic = function() {\n        return TestClass.prototype.getValue.call(_private);\n    };\n};\n\nTestClass.prototype.getValue = function() {\n    return this.value;\n};\n</code></pre>\n\n<hr>\n\n<p>This method isn't without drawbacks. Since the scope context is effectively being overridden, you don't have access outside of the <code>_private</code> object. However, it isn't impossible though to still give access to the instance object's scope. You can pass in the object's context (<code>this</code>) as the second argument to <code>bind</code> or <code>call</code> to still have access to it's public values in the prototype function.</p>\n\n<h2>Accessing public values</h2>\n\n<pre><code>function TestClass (value) {\n    var _private = {\n        value: value\n    };\n\n    this.message = \"Hello, \";\n\n    this.getMessage = TestClass.prototype.getMessage.bind(_private, this);\n\n}\n\nTestClass.prototype.getMessage = function(_public) {\n\n    // Can still access passed in arguments\n    // e.g. \u2013 test.getValues('foo'), 'foo' is the 2nd argument to the method\n    console.log([].slice.call(arguments, 1));\n    return _public.message + this.value;\n};\n\nvar test = new TestClass(\"World\");\ntest.getMessage(1, 2, 3); // [1, 2, 3]         (console.log)\n                          // =&gt; \"Hello, World\" (return value)\n\ntest.message = \"Greetings, \";\ntest.getMessage(); // []                    (console.log)\n                   // =&gt; \"Greetings, World\" (return value)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try it!</p>\n\n<pre><code>    function Potatoe(size) {\n    var _image = new Image();\n    _image.src = 'potatoe_'+size+'.png';\n    function getImage() {\n        if (getImage.caller == null || getImage.caller.owner != Potatoe.prototype)\n            throw new Error('This is a private property.');\n        return _image;\n    }\n    Object.defineProperty(this,'image',{\n        configurable: false,\n        enumerable: false,\n        get : getImage          \n    });\n    Object.defineProperty(this,'size',{\n        writable: false,\n        configurable: false,\n        enumerable: true,\n        value : size            \n    });\n}\nPotatoe.prototype.draw = function(ctx,x,y) {\n    //ctx.drawImage(this.image,x,y);\n    console.log(this.image);\n}\nPotatoe.prototype.draw.owner = Potatoe.prototype;\n\nvar pot = new Potatoe(32);\nconsole.log('Potatoe size: '+pot.size);\ntry {\n    console.log('Potatoe image: '+pot.image);\n} catch(e) {\n    console.log('Oops: '+e);\n}\npot.draw();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there any way to make \"private\" variables (those defined in the constructor), available to prototype-defined methods?</p>\n\n<pre><code>TestClass = function(){\n    var privateField = \"hello\";\n    this.nonProtoHello = function(){alert(privateField)};\n};\nTestClass.prototype.prototypeHello = function(){alert(privateField)};\n</code></pre>\n\n<p>This works:</p>\n\n<pre><code>t.nonProtoHello()\n</code></pre>\n\n<p>but this doesn't:</p>\n\n<pre><code>t.prototypeHello()\n</code></pre>\n\n<p>I'm used to defining my methods inside the constructor, but am moving away from that for a couple reasons.</p>\n\n<p>thanks!</p>\n\n<p>-Morgan</p>\n\n<hr>\n\n<p>Thanks sktrdie,</p>\n\n<p>That works, it would be nice not to have to create the this.accessPrivateField. If my \"hello\" function is defined inside the constructor, privateField is in the scope chain of the function, so I can treat privateField as I would a private field in java. It's a little more cumbersome to set up accessors (this.accessPrivateField), and then, privateField isn't really private any more.\nI know javascript isn't java, but I like java!</p>\n\n<p>-Morgan</p>\n",
            "last_activity_date": 1425421114,
            "question_id": 436120,
            "score": 79,
            "tags": [
                "javascript"
            ],
            "title": "javascript - accessing private member variables from prototype-defined functions"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>Try remove the last argument. Other than that, make sure urlstring, wname, and wfeatures exist.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>What does position four represent, the one that has 'false' as an value? Shouldn't that be false, (i.e. without quotes?). It's possible that earlier versions of IE would coerce the string to a boolean, but newer ones don't.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>the problem might be the wname, try using one of those shown in the link above, i quote:</p>\n\n<blockquote>\n  <p>Optional. String that specifies the\n  name of the window. This name is used\n  as the value for the TARGET attribute\n  on a form or an anchor element.</p>\n  \n  <ul>\n  <li>_blank The sURL is loaded into a new, unnamed window.</li>\n  <li>_media The url is loaded in the Media Bar in Microsoft Internet\n  Explorer 6.    Microsoft Windows XP\n  Service Pack 2    (SP2) and later.\n  This feature is no    longer\n  supported. By default the url    is\n  loaded into a new browser window    or\n  tab.</li>\n  <li>_parent The sURL is loaded into the current frame's parent. If the frame    has no parent, this value acts as the    value _self.</li>\n  <li>_search Disabled in Windows Internet Explorer 7, see Security and Compatibility in Internet Explorer 7 for details. Otherwise, the sURL is opened in the browser's search pane in Internet Explorer 5 or later.</li>\n  <li>_self The current document is replaced with the specified sURL.</li>\n  <li>_top sURL replaces any framesets that may be loaded. If there are no framesets defined, this value acts as the value _self.</li>\n  </ul>\n</blockquote>\n\n<p>if using another wname, window.open won't execute...</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I discovered the same problem and after reading the first answer that supposed the problem is caused by the window name, changed it : first to '_blank', which worked fine (both compatibility and regular view), then to the previous value, only minus the space in the value :) - also worked. IMO, the problem (or part of it) is caused by IE being unable to use a normal string value as the wname. Hope this helps if anybody runs into the same problem.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is an old posting but maybe still useful for someone.</p>\n\n<p>I had the same error message. In the end the problem was an invalid name for the second argument, i.e., I had a line like:</p>\n\n<pre><code>   window.open('/somefile.html', 'a window title', 'width=300');\n</code></pre>\n\n<p>The problem was 'a window title' as it is not valid. It worked fine with the following line:</p>\n\n<pre><code>   window.open('/somefile.html', '', 'width=300');\n</code></pre>\n\n<p>In fact, reading carefully I realized that Microsoft does not support a <code>name</code> as second argument. When you look at the <a href=\"http://msdn.microsoft.com/en-us/library/ms536651%28v=vs.85%29.aspx\">official documentation page</a>, you see that Microsoft only allows the following arguments, If using that argument at all:</p>\n\n<ul>\n<li>_blank</li>\n<li>_media</li>\n<li>_parent</li>\n<li>_search</li>\n<li>_self</li>\n<li>_top</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 222
                },
                {
                    "body": "<p>IE is picky about the window name argument. It doesn't like spaces, dashes, or other punctuation.</p>\n",
                    "is_accepted": false,
                    "score": 66
                },
                {
                    "body": "<p>When you call <code>window.open</code> in IE, the second argument (window name) has to be either one of the predefined <strong>target</strong> strings or a string, which has a <em>form of a valid identifier</em> in JavaScript.</p>\n\n<p>So what works in Firefox: \"Job Directory 9463460\", <strong>does not</strong> work in Internet Exploder, and has to be replaced by: \"Job_Directory_9463460\" for example (no spaces, no minus signs, no dots, it has to be a valid identifier).</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>If you want use the name of new window etc posting a form to this window, then the solution, that working in IE, FF, Chrome:</p>\n\n<pre><code>  var ret = window.open(\"\", \"_blank\");\n  ret.name = \"NewFormName\";\n\n  var myForm = document.createElement(\"form\");\n  myForm.method=\"post\";\n  myForm.action = \"xyz.php\";\n  myForm.target = \"NewFormName\";\n\n      ...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Actually a name can be used however it cannot have spaces so\n<code>window.open(\"../myPage\",\"MyWindows\",...)</code> should work with no problem (<a href=\"http://www.w3schools.com/jsref/met_win_open.asp\" rel=\"nofollow\">window.open</a>).</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Hi using the following code its working...</p>\n\n<pre><code>onclick=\"window.open('privacy_policy.php','','width=1200,height=800,scrollbars=yes');\n</code></pre>\n\n<p>Previously i Entered like</p>\n\n<pre><code>onclick=\"window.open('privacy_policy.php','Window title','width=1200,height=800,scrollbars=yes');\n</code></pre>\n\n<p>Means Microsoft does not allow you to enter window name it should be blank in <code>window.open</code> function...</p>\n\n<p>Thanks,\nNilesh Pangul</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>For me the issue was with a dash \"-\" in the window name field. I removed the dashes and IE does not error out and in fact opens the window.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I also meet this issue while I used the following code:</p>\n\n<pre><code>window.open('test.html','Window title','width=1200,height=800,scrollbars=yes');\n</code></pre>\n\n<p>but when I delete the <strong>blank space of the \"Window title\"</strong> the below code is working:</p>\n\n<pre><code>window.open('test.html','Windowtitle','width=1200,height=800,scrollbars=yes');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The answers here are correct in that IE does not support spaces when setting the title in window.open(), none seem to offer a workaround.</p>\n\n<p>I removed the title from my window.open call (you can use null or ''), and hten added the following to the page being opened:</p>\n\n<pre><code>&lt;script&gt;document.title = 'My new title';&lt;/script&gt;\n</code></pre>\n\n<p>Not ideal by any means, but this will allow you to set the title to whatever you want in all browsers.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It seems when even using a \"valid\" custom window name (not _blank, etc.) using window.open to launch a new window, there is still issues. It works fine the first time you click the link, but if you click it again (with the first launched window still up) you receive an \"Error: No such interface supported\" script debug.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a site that has an IE8-only problem:</p>\n\n<p>The code is: </p>\n\n<pre><code>var w = window.open(urlstring, wname, wfeatures, 'false');\n</code></pre>\n\n<p>The error is:</p>\n\n<blockquote>\n  <p>Message: Invalid argument.<br />\n  Line: 419 \n  Char: 5<br />\n  Code: 0<br />\n  URI: <a href=\"http://HOSTNAME/js_context.js\">http://HOSTNAME/js_context.js</a></p>\n</blockquote>\n\n<p>I have confirmed the line number of the code (the \"Line\" and \"URI\" are correct), and I understand in later versions of IE8, this is considered accurate.</p>\n\n<p>I have checked all the incoming parameters in the call by dumping alerts, and they all look valid.</p>\n\n<p>This problem does not happen on FF (probably 3) and IE7 when the popup-blocker is off.</p>\n\n<p>(Interestingly, the IE7 popup-blocker creates the same error when it is on.)</p>\n\n<p>UPDATE:</p>\n\n<p>The problem appears to be in using assigning the result of window.open() when doing \"var w\". When I split the line into two statements it works in IE8.</p>\n\n<p>UPDATE2: </p>\n\n<p>Based on: </p>\n\n<p><a href=\"http://javascript.crockford.com/code.html\">http://javascript.crockford.com/code.html</a></p>\n\n<blockquote>\n  <p>When a function is to be invoked\n  immediately, the entire invocation\n  expression should be wrapped in parens\n  so that it is clear that the value\n  being produced is the result of the\n  function and not the function itself.</p>\n</blockquote>\n\n<p>This is not exactly what is going on here, but I found that applying the principle solved the problem, in IE8's compatability mode.</p>\n\n<pre><code>var w = (window.open(urlstring, wname, wfeatures, false));\n</code></pre>\n",
            "last_activity_date": 1397757687,
            "question_id": 710756,
            "score": 95,
            "tags": [
                "javascript",
                "internet-explorer-8"
            ],
            "title": "ie8 var w= window.open() - &quot;Message: Invalid argument.&quot;"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>To clarify a bit for the comments below, <em>most</em> of the time it's creating a <strong>closure</strong>, it keeps your variables scoped to that local closure, as to not create global variables, it both keeps things clean and avoids any potential unwanted changes to those variables.</p>\n\n<p>There are some excellent answers here that explain the <em>why</em> a bit more: <a href=\"http://stackoverflow.com/q/111102/13249\">How does a javascript closure work?</a></p>\n\n<p>It's only a <em>creating</em> closure when something inside that scope is exposed to an outer scope, which is <em>usually</em> the case, but I can't be sure for your example without seeing more code.  If nothing is exposed then no closure's created...otherwise it's just an anonymous function executing immediately.</p>\n\n<p>The <code>})();</code> format at the end, as opposed to <code>});</code> is actually calling that closure to execute immediately, with no parameters.  If you had something in it, for example <code>})(something);</code> then that <code>something</code> would be passed as the first argument here: <code>(function(somethingParam){</code>.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>The wrapping function is called an anonymous (it has no name and it isn't assigned to a variable) self-executing (it executes immediately, by itself) function.</p>\n\n<p>I don't remember seeing an exact name for this pattern, but it prevents variable from leaking into global scope.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>The pattern is called <strong><a href=\"http://www.davidyardy.com/davidyardy/blog/post/2013/07/14/JavaScript-Patterns-Self-invocation.aspx\" rel=\"nofollow\">self-invocation</a></strong>, a <strong>self-invoking function</strong>.  It can create a closure, but that is an effect of the pattern (perhaps the intended effect), not the pattern itself.</p>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>Douglas Crockford and the YUI team call it <a href=\"http://www.yuiblog.com/blog/2007/06/12/module-pattern/\" rel=\"nofollow\">the module pattern</a>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Ben Alman presents an interesting argument on the commonly use terminology for this \"pattern\".</p>\n\n<p>His blog post about it is <a href=\"http://benalman.com/news/2010/11/immediately-invoked-function-expression/\">here (http://benalman.com/news/2010/11/immediately-invoked-function-expression/)</a>.</p>\n\n<p>If his post is too long for you here is my summary (I still recommend reading it as this summary leaves out a lot):</p>\n\n<p>If you want a named function to be self executing/invoking it would should look like this:</p>\n\n<pre><code>// Hello, my name is \"foo\". I am a named function.\n// When I am invoked I invoke my self when I am invoked.\nfunction foo(){\n   foo();\n}\n</code></pre>\n\n<p>If you want an anonymous function to be self executing/invoking it should look like this:</p>\n\n<pre><code>// Hello, I have no name...\n//   (though I am assigned to the variable \"foo\" it's not who I am).\n// When I am invoked I invoke my self when I am invoked.\n// In ECMAScript 5 I no longer work. :-(\nvar foo = function(){\n    arguments.callee();\n};\n</code></pre>\n\n<p>If you want an anonymous function to be immediately executed/invoked it should look like this:</p>\n\n<pre><code>// Hello, I have no name. I am immediately invoked.\n// People sometimes call me a \"self-invoking anonymous function\"...\n//    even though I don't invoke myself.\n// Ben Alman calls me an \"Immediately-Invoked Function Expression\"...\n//    or \"iffy\" for short.\n(function(){ /...code.../ }());\n</code></pre>\n\n<p>My own thoughts on the matter:</p>\n\n<p><strong>The other answers are correct; what you are asking about is commonly referred to as a \"self invoking anonymous function.\"<br>\nHowever,  that terminology doesn't accurately reflect what is really happening; \"Immediately-Invoked Function Expression\" (aka \"iffy\", for short) seems like a more appropriate term.</strong></p>\n\n<hr>\n\n<p>Fun facts to impress your friends:</p>\n\n<p>You can create an Iffy like this, too:</p>\n\n<pre><code>!function(){\n   alert(\"immediately invoked!\");\n}();\n</code></pre>\n\n<p>or </p>\n\n<pre><code>+function(){\n   alert(\"immediately invoked!\");\n}();\n</code></pre>\n\n<p>or if you are <em>really</em> cRaZy ( <a href=\"http://jsbin.com/ibimu4/edit\">example</a> ): </p>\n\n<pre><code>!1%-+~function(){\n   alert(\"immediately invoked!\");\n}();\n</code></pre>\n\n<p>in most browsers (if not all, I'm not sure) and the effect will be the same (facebook uses the <code>!</code> version).</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>It's been around longer than \"patterns\".  It is a common idiom in scheme/lisp primarily used for encapsulation especially when doing meta programming.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<blockquote>\n  <p>What is this practice called?</p>\n</blockquote>\n\n<p>It's called an <a href=\"http://benalman.com/news/2010/11/immediately-invoked-function-expression/\" rel=\"nofollow\"><em>immediately-invoked function expression</em></a>, in short: IIFE. It defines a function in an expression, which is then executed on its own (without assigning the function to any identifier). It sometimes is also called <em>immediately executed function expression</em> (IEFE).</p>\n\n<p>Before Ben Alman wrote his blog post on them, they were also known as <em>self-invoking (anonymous) functions</em>, a term which became uncommon since then. It was technically imprecise, hinting at a recursive invocation which does not actually happen.</p>\n\n<p>For details on the syntax see <a href=\"http://stackoverflow.com/q/1634268/1048572\">Explain JavaScript&#39;s encapsulated anonymous function syntax</a> and <a href=\"http://stackoverflow.com/q/3384504/1048572\">Location of parenthesis for auto-executing anonymous JavaScript functions?</a>.</p>\n\n<blockquote>\n  <p>I noticed that this fixes scoping problems for me on a lot of web pages.</p>\n</blockquote>\n\n<p>Yes, <a href=\"http://stackoverflow.com/q/592396/1048572\">the purpose of this pattern</a> is to introduce an extra scope by executing a function.</p>\n\n<p>The pattern also is sometimes extended with a return value, known as the <em>(revealing) module pattern</em>, or with a name for the function to allow recursive invocations.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>When you wrap your JavaScript code in a function like this:</p>\n\n<pre><code>(function(){\n\n  var field = ...;\n  function doSomthing(){...\n  ...\n\n\n})();\n</code></pre>\n\n<p>I noticed that this fixes scoping problems for me on a lot of web pages. What is this practice called?</p>\n",
            "last_activity_date": 1405885487,
            "question_id": 3720283,
            "score": 52,
            "tags": [
                "javascript",
                "design-patterns",
                "terminology"
            ],
            "title": "What is this practice called in JavaScript?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Yeah:</p>\n\n<pre><code>// is this an IPad ?\nvar isiPad = (navigator.userAgent.match(/iPad/i) != null);\n\n// is this an iPhone ?\nvar isiPhone = (navigator.userAgent.match(/iPhone/i) != null);\n\n// is this an iPod ?\nvar isiPod = (navigator.userAgent.match(/iPod/i) != null);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>@ Sod, \nWell i don\u2019t have answer, but i am not convinced why you want to check, Since, browser engine whether its safari ( Browser ) or Application will be same its Webkit only, \nYes Application can configure the Browser engine capabilities like, whether application wants to run JS or Display Image etc\u2026 </p>\n\n<p>I believe, you must check for certain property whether Flash supported by Browser or whether browser displays image or not, or probably may be you would like to check the screen size, </p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>I think that you can just use the <code>User-Agent</code>.</p>\n\n<hr>\n\n<p><strong>UPDATE</strong></p>\n\n<p>Page browsed using iPhone Safari </p>\n\n<pre><code>Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_1 like Mac OS X; en-us) AppleWebKit/532.9 (KHTML, like Gecko) Version/4.0.5 Mobile/8B117 Safari/6531.22.7\n</code></pre>\n\n<p>I will try in a second with UIWebView</p>\n\n<pre><code>Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_1 like Mac OS X; en-us) AppleWebKit/532.9 (KHTML, like Gecko) Mobile/8B117\n</code></pre>\n\n<p>The difference is that the Safari one says <code>Safari/6531.22.7</code></p>\n\n<hr>\n\n<p><strong>Solution</strong></p>\n\n<pre><code>var isSafari = navigator.userAgent.match(/Safari/i) != null;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I know this code will check if it is being accessed from an icon added to the home screen:</p>\n\n<pre><code>if (window.navigator.standalone == true) {\n//not in safari\n}\n</code></pre>\n\n<p>but I'm not sure how it would react in a UIWebView. The only other solution I could think of is getting the user agent or using <code>- (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType</code> and replacing the query string of the page you are accessing with something the page uses to identify that it is being accessed from a web view.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I don't think there's anything specific you can use in client-side Javascript, but if you have control over what the originating UIWebView can do, you might want to consider playing with the user agent string it generates, and testing for that in your client-side Javascript instead? A bit of a hack I know, but hey\u2026 This question may give some pointers on tweaking the user agent:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/478387/change-user-agent-in-uiwebview-iphone-sdk\">Change User Agent in UIWebView (iPhone SDK)</a></p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>This uses a combination of <code>window.navigator.userAgent</code> and <code>window.navigator.standalone</code>. It can distinguish between all four states relating to an iOS web app: safari (browser), standalone (fullscreen), uiwebview, and not iOS.</p>\n\n<p>Demo: <a href=\"http://jsfiddle.net/ThinkingStiff/6qrbn/\">http://jsfiddle.net/ThinkingStiff/6qrbn/</a></p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var standalone = window.navigator.standalone,\n    userAgent = window.navigator.userAgent.toLowerCase(),\n    safari = /safari/.test( userAgent ),\n    ios = /iphone|ipod|ipad/.test( userAgent );\n\nif( ios ) {\n    if ( !standalone &amp;&amp; safari ) {\n        //browser\n    } else if ( standalone &amp;&amp; !safari ) {\n        //standalone\n    } else if ( !standalone &amp;&amp; !safari ) {\n        //uiwebview\n    };\n} else {\n    //not iOS\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<h2>User Agents</h2>\n\n<pre><code>Running in UIWebView\nMozilla/5.0 (iPad; CPU OS 5_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Mobile/98176\n\nRunning in Safari on iPad\nMozilla/5.0 (iPad; CPU OS 5_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B176 Safari/7534.48.3\n\nRunning in Safari on Mac OS X\nMozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/534.55.3 (KHTML, like Gecko) Version/5.1.5 Safari/534.55.3\n\nRunning in Chrome on Mac OS X\nMozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.151 Safari/535.19\n\nRunning in FireFox on Mac OS X\nMozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:11.0) Gecko/20100101 Firefox/11.0\n</code></pre>\n\n<h2>Detection Code</h2>\n\n<pre><code>var is_uiwebview = /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent);\nvar is_safari_or_uiwebview = /(iPhone|iPod|iPad).*AppleWebKit/i.test(navigator.userAgent);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 52
                },
                {
                    "body": "<p>Neoneye's solution does not work anymore (see comments) and can be simplified.\nOn the other hand, testing only \"Safari\" in the UA adresses much more than the ios handheld devices.</p>\n\n<p>This is the test i'm using :</p>\n\n<pre><code>var is_ios = /(iPhone|iPod|iPad).*AppleWebKit.*Safari/i.test(navigator.userAgent);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way to differ via javascript if the website runs inside the ipad safari or inside an application WebView?</p>\n",
            "last_activity_date": 1411981538,
            "question_id": 4460205,
            "score": 42,
            "tags": [
                "javascript",
                "ipad",
                "ios",
                "webview"
            ],
            "title": "detect ipad/iphone webview via javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Before inspecting examples, you should know two jQuery functions which i used most. </p>\n\n<p><a href=\"http://api.jquery.com/index/\">index()</a> returns value is an integer indicating the position of the first element within the jQuery object relative to its sibling elements.</p>\n\n<p><a href=\"http://api.jquery.com/eq/\">eq()</a> selects of an element based on its position (index value).</p>\n\n<p>Basicly i take selected trigger element's <code>index value</code> and match this value on images with <code>eq</code> method.</p>\n\n<p><a href=\"http://jsfiddle.net/mjaA3/1662/\"> - <strong>FadeIn / FadeOut</strong> effect.</a></p>\n\n<p><a href=\"http://jsfiddle.net/mjaA3/1672/\"> - <strong>Sliding</strong> effect.</a></p>\n\n<p><a href=\"http://jsfiddle.net/mjaA3/332/\"> - alternate <strong>Mousewheel</strong> response.</a></p>\n\n<hr>\n\n<p>\u200b<strong>html sample:</strong></p>\n\n<pre><code>&lt;ul class=\"images\"&gt;\n   &lt;li&gt;\n      &lt;img src=\"images/1.jpg\" alt=\"1\" /&gt;\n   &lt;/li&gt;\n   &lt;li&gt;\n      &lt;img src=\"images/2.jpg\" alt=\"2\" /&gt;\n   &lt;/li&gt;\n   ...\n&lt;/ul&gt;\n\n&lt;ul class=\"triggers\"&gt;\n   &lt;li&gt;1&lt;/li&gt;\n   &lt;li&gt;2&lt;/li&gt;\n   ...\n&lt;/ul&gt;\n&lt;span class=\"control prev\"&gt;Prev&lt;/span&gt;\n&lt;span class=\"control next\"&gt;Next&lt;/span&gt;\n</code></pre>\n\n<hr>\n\n<h2>OPACITY EFFECT:  <a href=\"http://jsfiddle.net/mjaA3/1662/\"><strong>jsFiddle.</strong></a></h2>\n\n<p><strong><em>css trick:</strong> overlapping images with position:absolute</em></p>\n\n<pre><code>ul.images { position:relative; }\n  ul.images li { position:absolute; }\n</code></pre>\n\n<p><strong>jQuery:</strong></p>\n\n<pre><code>var target;\nvar triggers = $('ul.triggers li');\nvar images = $('ul.images li');\nvar lastElem = triggers.length-1;\n\ntriggers.first().addClass('active');\nimages.hide().first().show();\n\nfunction sliderResponse(target) {\n    images.fadeOut(300).eq(target).fadeIn(300);\n    triggers.removeClass('active').eq(target).addClass('active');\n}\n</code></pre>\n\n<hr>\n\n<h2>SLIDING EFFECT: <a href=\"http://jsfiddle.net/mjaA3/1672/\"><strong>jsFiddle.</strong></a></h2>\n\n<p><strong><em>css trick:</strong> with double wrapper and use child as mask</em></p>\n\n<pre><code>.mask { float:left; margin:40px; width:270px; height:266px; overflow:hidden;  }\n    ul.images { position:relative; top:0px;left:0px; }\n    /* this width must be total of the images, it comes from jquery */\n        ul.images li { float:left; }\n</code></pre>\n\n<p><strong>jQuery:</strong></p>\n\n<pre><code>var target;\nvar triggers = $('ul.triggers li');\nvar images = $('ul.images li');\nvar lastElem = triggers.length-1;\nvar mask = $('.mask ul.images');\nvar imgWidth = images.width();\n\ntriggers.first().addClass('active');\nmask.css('width', imgWidth*(lastElem+1) +'px');\n\nfunction sliderResponse(target) {\n    mask.stop(true,false).animate({'left':'-'+ imgWidth*target +'px'},300);\n    triggers.removeClass('active').eq(target).addClass('active');\n}\n</code></pre>\n\n<hr>\n\n<h2>Common jQuery response for both slider:</h2>\n\n<p><em>( <strong>triggers + next/prev click and timing</strong> )</em></p>\n\n<pre><code>triggers.click(function() {\n    if ( !$(this).hasClass('active') ) {\n        target = $(this).index();\n        sliderResponse(target);\n        resetTiming();\n    }\n});\n\n$('.next').click(function() {\n    target = $('ul.triggers li.active').index();\n    target === lastElem ? target = 0 : target = target+1;\n    sliderResponse(target);\n    resetTiming();\n});\n$('.prev').click(function() {\n    target = $('ul.triggers li.active').index();\n    lastElem = triggers.length-1;\n    target === 0 ? target = lastElem : target = target-1;\n    sliderResponse(target);\n    resetTiming();\n});\n\nfunction sliderTiming() {\n    target = $('ul.triggers li.active').index();\n    target === lastElem ? target = 0 : target = target+1;\n    sliderResponse(target);\n}\n\nvar timingRun = setInterval(function() { sliderTiming(); },5000);\nfunction resetTiming() {\n    clearInterval(timingRun);\n    timingRun = setInterval(function() { sliderTiming(); },5000);\n}\n</code></pre>\n\n<hr>\n",
                    "is_accepted": true,
                    "score": 50
                },
                {
                    "body": "<p>Here is a simple and easy to understand code for Creating  image slideshow using JavaScript without using Jquery.</p>\n\n<pre><code>&lt;script language=\"JavaScript\"&gt; \nvar i = 0; var path = new Array(); \n\n// LIST OF IMAGES \npath[0] = \"image_1.gif\"; \npath[1] = \"image_2.gif\"; \npath[2] = \"image_3.gif\"; \n\nfunction swapImage() { document.slide.src = path[i]; \nif(i &lt; path.length - 1) i++; \nelse i = 0; setTimeout(\"swapImage()\",3000); \n} window.onload=swapImage;\n\n&lt;/script&gt; \n\n&lt;img height=\"200\" name=\"slide\" src=\"image_1.gif\" width=\"400\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>Some of us might not want to use ready plugins because of their high sizes and possibilty of creating conflicts with current javascript. </p>\n\n<p>I was using light slider plugins before but when customer gives modular revise, it became really hard to manipulate. Then I aim to build mine for customising it easily. I believe sliders shouldn't be that complex to build from beginning. </p>\n\n<p>What is a simple and clean way to build jQuery image slider?</p>\n",
            "last_activity_date": 1413294118,
            "question_id": 12608356,
            "score": 19,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "animation",
                "slideshow"
            ],
            "title": "How to build simple jQuery image slider with sliding or opacity effect?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><code>.val()</code> works on input elements (or any element with a value attribute?) and <code>.text()</code> will not work on input elements.  <code>.val()</code> gets the value of the input element -- regardless of type. <code>.text()</code> gets the innerText (not HTML) of all the matched elements:</p>\n\n<p><a href=\"http://docs.jquery.com/Attributes/text\"><code>.text()</code></a></p>\n\n<blockquote>\n  <p>The result is a string that contains\n  the combined text contents of all\n  matched elements. This method works on\n  both HTML and XML documents. Cannot be\n  used on input elements. For input\n  field text use the val attribute.</p>\n</blockquote>\n\n<p><a href=\"http://docs.jquery.com/Attributes/val\"><code>.val()</code></a></p>\n\n<blockquote>\n  <p>Get the content of the value attribute\n  of the first matched element</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 132
                },
                {
                    "body": "<p>text() return the combined text contents of all matched elements (such as p, div, and so on)\nval() is used to obtain the value of an input element (such as input, select, and so on)</p>\n\n<p>according to the official documentation text() should not be used with input elements</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>What the difference between jQuery's functions <code>val()</code> and <code>text()</code>?</p>\n\n<p>Where would you use one over the other?</p>\n",
            "last_activity_date": 1364066439,
            "question_id": 807867,
            "score": 107,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "Difference between val() and text()"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<ol>\n<li>The global <code>a</code> is set to <code>1</code></li>\n<li><code>b()</code> is called</li>\n<li><code>function a() {}</code> is hoisted and creates a <em>local</em> variable <code>a</code> that masks the global <code>a</code></li>\n<li>The local <code>a</code> is set to <code>10</code> (overwriting the function <code>a</code>)</li>\n<li>The global <code>a</code> (still <code>1</code>) is alerted</li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 83
                },
                {
                    "body": "<p>It's because the order of compilation/interpretation in this example is somewhat misleading.  The <code>function a () {}</code> line is interpreted before any of the rest of the function is executed, so at the very beginning of the function, <code>a</code> has the value of <code>function a () {}</code>.  When you reassign it to <code>10</code>, you are reassigning the value of <code>a</code> in the local scope of function <code>b()</code>, which is then discarded once you return, leaving the original value of <code>a = 1</code> in the global scope.</p>\n\n<p>You can verify this by placing <code>alert()</code>s or the like in the appropriate places to see what the value of <code>a</code> is at various points.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<blockquote>\n  <p>(1) JavaScript does not have block statement scope; rather, it will be local to the code that the block resides within.     </p>\n  \n  <p>(2) Javascript's declaration of variables in a function scope, meaning that <strong><em>variables declared in a function are available anywhere in that function, even before they are assigned a value</em></strong>.</p>\n  \n  <p>(3) Within the body of a function, a local variable takes precedence over a global variable with the same name. <strong>If you declare a local variable or function parameter with the same name as a global variable, you <em>effectively hide the global variable</em></strong>.</p>\n</blockquote>\n\n<p>you code is same as: (<em>read comment</em>)</p>\n\n<pre><code>&lt;script&gt;\nvar a = 1;          //global a = 1\nfunction b() {\n    a = 10;         \n    var a = 20;     //local a = 20\n}\nb();\nalert(a);           //global a  = 1\n&lt;/script&gt;\n</code></pre>\n\n<p>reference:<br>\n(1) <a href=\"http://docstore.mik.ua/orelly/webprog/jscript/ch04_03.htm\" rel=\"nofollow\"><em>JavaScript Variable Scope:</em></a><br>\n(2)            <a href=\"http://thecomputersarewinning.com/post/a-dangerous-example-of-javascript-hoisting/\" rel=\"nofollow\"><em>A Dangerous Example of Javascript Hoisting</em></a><br>\n(3) <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Guide/Values,_variables,_and_literals#Variable_Scope\" rel=\"nofollow\"><em>Variable scope</em></a></p>\n\n<p>So in your code: </p>\n\n<pre><code>var a = 1;          //global a = 1  \nfunction b() {\n    a = 10;         \n    return;\n    function a() {} //local \n}\nb();\nalert(a);           //global a = 1  \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>When I read the same article you did <a href=\"http://www.adequatelygood.com/JavaScript-Scoping-and-Hoisting.html\" rel=\"nofollow\">JavaScript Scoping and Hoisting</a>, I was confused as well because the author never showed what the two opening example codes are interpreted as in the compiler. </p>\n\n<p>Here is example you provided, and the second on the page:</p>\n\n<pre><code>var a = 1;\nfunction b() {\n    function a() {} // declares 'a' as a function, which is always local\n    a = 10;\n    return;\n}\nb();\nalert(a);\n</code></pre>\n\n<p>and here is the first example on the page:</p>\n\n<pre><code>var foo = 1;\nfunction bar() {\n    var foo; // a new local 'foo' variable\n    if (!foo) {\n        foo = 10;\n    }\n    alert(foo);\n}\nbar();\n</code></pre>\n\n<p>Hope this helps</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<ol>\n<li>function declaration <code>function a(){}</code> is hoisted first, hence in local scope <code>a</code> is created. </li>\n<li>If you have two variable with same name (one in global another in local), local variable always get precedence over global variable. </li>\n<li>When you set <code>a=10</code>, you are setting the local variable <code>a</code> , not the global one.</li>\n</ol>\n\n<p>Hence, the value of global variable remain same and you get, alerted 1</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I came across JavaScript 'hoisting' and I didn't figure out how this snippet of code really functions:</p>\n\n<pre><code>var a = 1;\n\nfunction b() {\n    a = 10;\n    return;\n\n    function a() {}\n}\n\nb();\nalert(a);\n</code></pre>\n\n<p>I know that function declaration like ( <code>function a() {}</code> ) is going to be hoisted to the top of the function <code>b</code> scope but it should not override the value of <code>a</code> (because function declarations override variable declarations but not variable initialization) so I expected that the value of the alert would be 10 instead of 1!!</p>\n",
            "last_activity_date": 1400334203,
            "question_id": 15311158,
            "score": 62,
            "tags": [
                "javascript",
                "hoisting"
            ],
            "title": "JavaScript &#39;hoisting&#39;"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You could use the window\u2019s name <code>window.name</code> to store the information. This is known as <a href=\"http://www.thomasfrank.se/sessionvars.html\">JavaScript session</a>. But it only works as long as the same window/tab is used.</p>\n",
                    "is_accepted": true,
                    "score": 72
                },
                {
                    "body": "<p>Yes, using <a href=\"http://www.quirksmode.org/js/cookies.html\">Cookies</a>. But be careful, don't put too much in them (I think there is a limit at 4kb). But a few variables are ok.</p>\n\n<p>If you need to store considerably more than that, check out @Annie's great tips in the other answer. For small time data storage, I would say Cookies are the easiest thing.</p>\n\n<p>Note that cookies are stored client side. </p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>You can persist values using HTML5 storage, Flash Storage, or Gears. The <a href=\"http://www.dojotoolkit.org/node/115\">dojo storage</a> library provides a nice wrapper for this.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>For completeness, also look into the local storage capabilities of HTML5. These are supported in the latest versions of all modern browsers, and are much easier to use and less fiddly than cookies.</p>\n\n<p><a href=\"http://www.w3.org/TR/2009/WD-webstorage-20091222/\">http://www.w3.org/TR/2009/WD-webstorage-20091222/</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I would recommend you to give a look to this library:</p>\n\n<ul>\n<li><a href=\"http://pablotron.org/?cid=1557\">PersistJS</a></li>\n</ul>\n\n<p>I really like it, it supports a variety of storage backends (from cookies to HTML5 storage, Gears, Flash, and more...), its usage is really <em>transparent</em>, you don't have to know or care which backend is used the library will choose the right storage backend depending on the browser capabilities.</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>I recommend web storage. Example:</p>\n\n<p><code>// Storing the data:\nlocalStorage.setItem(\"variableName\",\"Text\");\n// Receiving the data:\nlocalStorage.getItem(\"variableName\");</code></p>\n\n<p>Just replace <code>variable</code> with your variable name and <code>text</code> with what you want to store. According to W3Schools, it's better than cookies.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You can use <a href=\"http://rhaboo.org\" rel=\"nofollow\">http://rhaboo.org</a> as a wrapper around localStorage. It stores complex objects but doesn't merely stringify and parse the whole thing like most such libraries do. That's really inefficient if you want to store a lot of data and add to it or change it in small chunks. Also, JSON discards a lot of important stuff like non-numerical properties of arrays. </p>\n\n<p>In rhaboo you can write things like this:</p>\n\n<pre><code>var store = Rhaboo.persistent('Some name');\n\nstore.write('count', store.count ? store.count+1 : 1);\n\nvar laststamp = store.stamp ? store.stamp.toString() : \"never\";\nstore.write('stamp', new Date());\n\nstore.write('somethingfancy', {\n  one: ['man', 'went'],\n  2: 'mow',\n  went: [  2, { mow: ['a', 'meadow' ] }, {}  ]\n});\n\nstore.somethingfancy.went[1].mow.write(1, 'lawn');\nconsole.log( store.somethingfancy.went[1].mow[1] ); //says lawn\n</code></pre>\n\n<p>BTW, I wrote rhaboo</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way we can persist javascript variables across various pages? Suppose in Page A I am setting <code>window.someVar = 5</code>. Then I move to Page B, via clicking a hyperlink in A, and do something like <code>alert(window.someVar)</code> -- I should get a message box displaying 5. Is there a technique to persist <code>someVar</code> as such...?</p>\n",
            "last_activity_date": 1412234870,
            "question_id": 1981673,
            "score": 58,
            "tags": [
                "javascript"
            ],
            "title": "Persist javascript variables across pages?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>There's no way to define a playlist using just a <code>&lt;video&gt;</code> or <code>&lt;audio&gt;</code> tag, but there are ways of controlling them, so you can simulate a playlist using JavaScript. Check out sections 4.8.7, 4.8.9 (especially 4.8.9.12) of the <a href=\"http://dev.w3.org/html5/spec/Overview.html\" rel=\"nofollow\">HTML5 spec</a>. Hopefully the majority of methods and events are implemented on modern browsers such as Chrome and Firefox (latest versions, of course).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>you could load next clip in the onend event like that</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar nextVideo = \"path/of/next/video.mp4\";\nvar videoPlayer = document.getElementById('videoPlayer');\nvideoPlayer.onended = function(){\n    videoPlayer.src = nextVideo;\n}\n&lt;/script&gt;\n&lt;video id=\"videoPlayer\" src=\"path/of/current/video.mp4\" autoplay autobuffer controls /&gt;\n</code></pre>\n\n<p>More information <a href=\"http://www.whatwg.org/specs/web-apps/current-work/#video\">here</a></p>\n",
                    "is_accepted": true,
                    "score": 44
                },
                {
                    "body": "<p>It has been done there : <a href=\"http://www.jezra.net/projects/pageplayer\" rel=\"nofollow\">http://www.jezra.net/projects/pageplayer</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Yep, you can simply point your src tag to a .m3u playlist file.  A .m3u file is easy to construct - </p>\n\n<pre><code>#hosted mp3's need absolute paths but file system links can use relative paths\nhttp://servername.com/path/to/mp3.mp3\nhttp://servername.com/path/to/anothermp3.mp3\n/path/to/local-mp3.mp3\n</code></pre>\n\n<p><em><strong>-----UPDATE-----</em></strong> </p>\n\n<p>Well, it turns out playlist m3u files <strong><em>are</em></strong> supported on the iPhone, but not on much else including Safari 5 which is kind of sad.  I'm not sure about Android phones but I doubt they support it either since Chrome doesn't.  Sorry for the misinformation.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You should take a look at Popcorn.js - a javascript framework for interacting with Html5 : <a href=\"http://popcornjs.org/documentation\" rel=\"nofollow\">http://popcornjs.org/documentation</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>jPlayer is a free and open source HTML5 Audio and Video library that you may find useful.  It  has support for playlists built in:\n<a href=\"http://jplayer.org/\" rel=\"nofollow\">http://jplayer.org/</a> </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I created a JS fiddle for this here: </p>\n\n<p><a href=\"http://jsfiddle.net/Barzi/Jzs6B/9/\" rel=\"nofollow\">http://jsfiddle.net/Barzi/Jzs6B/9/</a></p>\n\n<p>First, your HTML markup looks like this:</p>\n\n<pre><code>&lt;video id=\"videoarea\" controls=\"controls\" poster=\"\" src=\"\"&gt;&lt;/video&gt;\n\n&lt;ul id=\"playlist\"&gt;\n    &lt;li movieurl=\"VideoURL1.webm\" moviesposter=\"VideoPoster1.jpg\"&gt;First video&lt;/li&gt;\n    &lt;li movieurl=\"VideoURL2.webm\"&gt;Second video&lt;/li&gt;\n    ...\n    ...\n&lt;/ul&gt;\n</code></pre>\n\n<p>Second, your JavaScript code via JQuery library will look like this:</p>\n\n<pre><code>$(function() {\n    $(\"#playlist li\").on(\"click\", function() {\n        $(\"#videoarea\").attr({\n            \"src\": $(this).attr(\"movieurl\"),\n            \"poster\": \"\",\n            \"autoplay\": \"autoplay\"\n        })\n    })\n    $(\"#videoarea\").attr({\n        \"src\": $(\"#playlist li\").eq(0).attr(\"movieurl\"),\n        \"poster\": $(\"#playlist li\").eq(0).attr(\"moviesposter\")\n    })\n})\u200b\n</code></pre>\n\n<p>And last but not least, your CSS:</p>\n\n<pre><code>#playlist {\n    display:table;\n}\n#playlist li{\n    cursor:pointer;\n    padding:8px;\n}\n#playlist li:hover{\n    color:blue;                        \n}\n#videoarea {\n    float:left;\n    width:640px;\n    height:480px;\n    margin:10px;    \n    border:1px solid silver;\n}\u200b\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Can I use a <code>&lt;video&gt;</code> or <code>&lt;audio&gt;</code> tag to play a playlist, and to control them?</p>\n\n<p>My goal is to know when a video/song has finished to play and take the next and change its volume.</p>\n",
            "last_activity_date": 1426069571,
            "question_id": 2551859,
            "score": 47,
            "tags": [
                "javascript",
                "html",
                "html5",
                "audio",
                "video"
            ],
            "title": "HTML 5 video or audio playlist"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>It's not generally possible, afaik, mozilla has the <a href=\"http://developer.mozilla.org/En/DOM:element.click#1028373\" rel=\"nofollow\">click()</a> method but for input elements only, not links.</p>\n\n<p>Why don't you just create a function that the button will call on the onClick handler and, whenever you want to 'click' the button call the function instead?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Mozilla has a stricter policy for allowed JS actions/events - I had similar problems with the click() event too. It's disabled on some elements to prevent XSS. </p>\n\n<p>What is wrong with redirecting the browser? This sould work everywhere.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://jehiah.cz/archive/firing-javascript-events-properly\">http://jehiah.cz/archive/firing-javascript-events-properly</a></p>\n\n<pre><code>function fireEvent(element,event) {\n   if (document.createEvent) {\n       // dispatch for firefox + others\n       var evt = document.createEvent(\"HTMLEvents\");\n       evt.initEvent(event, true, true ); // event type,bubbling,cancelable\n       return !element.dispatchEvent(evt);\n   } else {\n       // dispatch for IE\n       var evt = document.createEventObject();\n       return element.fireEvent('on'+event,evt)\n   }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 63
                },
                {
                    "body": "<p>I wouldn't recommend it, but you can call the onclick attribute of an HTML element as a method.</p>\n\n<pre><code>&lt;a id=\"my-link\" href=\"#\" onclick=\"alert('Hello world');\"&gt;My link&lt;/a&gt;\n\ndocument.getElementById('my-link').onclick();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Hey, I don't mean to dig up an old thread - but I was searching for an answer to this same problem as well, and found a function new to jQuery 1.3x (I was having a problem with Ajax Loaded content)</p>\n\n<p>Here's how I implemented it:</p>\n\n<p>HTML</p>\n\n<pre><code>&lt;a class=\"navlink\" href=\"mypage.html\"&gt;Online Estimate&lt;/a&gt;\n</code></pre>\n\n<p>LOADED SCRIPT</p>\n\n<pre><code>$(\".pagelink\").click(function(){\n    $(\".navlink[href=\"+$(this).attr(\"href\")+\"]\").trigger('click');\n    return false;\n});\n</code></pre>\n\n<p>LOADED HTML</p>\n\n<pre><code>&lt;a class=\"pagelink\" href=\"mypage.html\"&gt;Online Estimate&lt;/a&gt;\n</code></pre>\n\n<p>The function is the 'Trigger Event'...<br/>\nMore details on it here:\n<a href=\"http://docs.jquery.com/Events/trigger#eventdata\" rel=\"nofollow\">http://docs.jquery.com/Events/trigger#eventdata</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>i was searching for this one quiet desperately and the simplest one seemed to work!</p>\n\n<pre><code>document.getElementById('foo').onclick();\n</code></pre>\n\n<p>it worked in chrome 7.0.5 and ie 8.0.6</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I'm writing some JavaScript code that needs to fire the <code>click</code> event for a link. In Internet Explorer I can do this  </p>\n\n<pre><code>var button = document.getElementById('myButton');\nbutton.click();\n</code></pre>\n\n<p>But this doesn't work in Firefox, and I assume any other browser. In Firefox, I've done this  </p>\n\n<pre><code>var button = document.getElementById('myButton');\nwindow.location = button.href;\n</code></pre>\n\n<p>I feel like this is not the best way to do this. Is there a better way to trigger a <code>click</code> event? Preferably something that works regardless of the type of element or the browser.</p>\n",
            "last_activity_date": 1395397300,
            "question_id": 143747,
            "score": 38,
            "tags": [
                "javascript"
            ],
            "title": "Is it possible to trigger a link&#39;s (or any element&#39;s) click event through JavaScript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can access the raw DOM element with:</p>\n\n<pre><code>$(\"table\").get(0);\n</code></pre>\n\n<p>or more simply:</p>\n\n<pre><code>$(\"table\")[0];\n</code></pre>\n\n<p>There isn't actually a lot you need this for however (in my experience). Take your checkbox example:</p>\n\n<pre><code>$(\":checkbox\").click(function() {\n  if ($(this).is(\":checked\")) {\n    // do stuff\n  }\n});\n</code></pre>\n\n<p>is more \"jquery'ish\" and (imho) more concise. What if you wanted to number them?</p>\n\n<pre><code>$(\":checkbox\").each(function(n, i) {\n  $(n).data(\"index\", i);\n});\n$(\":checkbox\").click(function() {\n  if ($(this).is(\":checked\") &amp;&amp; $(this).data(\"index\") == 0) {\n    // do stuff\n  }\n});\n</code></pre>\n\n<p>Some of these features also help mask differences in browsers too. Some attributes can be different. The classic example is AJAX calls. To do this properly in raw Javascript has about 7 fallback cases for XmlHttpRequest.</p>\n",
                    "is_accepted": true,
                    "score": 149
                },
                {
                    "body": "<p>If you need to interact directly with the DOM element, why not just use <code>document.getElementById</code> since, if you are trying to interact with a specific element you will probably know the id, as assuming that the classname is on only one element or some other option tends to be risky.</p>\n\n<p>But, I tend to agree with the others, that in most cases you should learn to do what you need using what jQuery gives you, as it is very flexible.</p>\n\n<p><strong>UPDATE:</strong> Based on a comment:\nHere is a post with a nice explanation: <a href=\"http://www.mail-archive.com/jquery-en@googlegroups.com/msg04461.html\" rel=\"nofollow\">http://www.mail-archive.com/jquery-en@googlegroups.com/msg04461.html</a></p>\n\n<pre><code>$(this).attr(\"checked\") ? $(this).val() : 0\n</code></pre>\n\n<p>This will return the value if it's checked, or 0 if it's not.</p>\n\n<p><code>$(this).val()</code> is just reaching into the dom and getting the attribute \"value\" of the element, whether or not it's checked.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Edit: seems I was wrong in assuming you could not get the element.  As others have posted here, you can get it with:</p>\n\n<pre><code>$('#element').get(0);\n</code></pre>\n\n<p>I have verified this actually returns the DOM element that was matched.  </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I needed to get the element as a string.</p>\n\n<pre><code>jQuery(\"#bob\").get(0).outerHTML;\n</code></pre>\n\n<p>Which will give you something like:</p>\n\n<pre><code>&lt;input type=\"text\" id=\"bob\" value=\"hello world\" /&gt;\n</code></pre>\n\n<p>...as a string rather than a DOM element.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm having an impossibly hard time finding out to get the actual DOMElement from a jquery selector.  Sample Code:</p>\n\n<pre><code>&lt;input type=\"checkbox\" id=\"bob\" /&gt;\n  var checkbox = $(\"#bob\").click(function() { //some code  } )\n</code></pre>\n\n<p>and in another piece of code I'm trying to determine the checked value of the checkbox.</p>\n\n<pre><code>  if ( checkbox.eq(0).SomeMethodToGetARealDomElement().checked )\n    //do something.\n</code></pre>\n\n<p>And please, I do not want to do:</p>\n\n<pre><code>  if ( checkbox.eq(0).is(\":checked\"))\n    //do something\n</code></pre>\n\n<p>That get's me around the checkbox, but other times I've needed the real DOMElement.</p>\n",
            "last_activity_date": 1393364209,
            "question_id": 1677880,
            "score": 99,
            "tags": [
                "javascript",
                "jquery",
                "dom"
            ],
            "title": "How to get a DOM Element from a JQuery Selector"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>My understanding is that you actually use script tags with JSONP, sooo...</p>\n\n<p>The first step is to create your function that will handle the JSON:</p>\n\n<pre><code>function hooray(json) {\n    // dealin wit teh jsonz\n}\n</code></pre>\n\n<p>Make sure that this function is accessible on a global level.</p>\n\n<p>Next, add a script element to the DOM:</p>\n\n<pre><code>var script = document.createElement('script');\nscript.src = 'http://domain.com/?function=hooray';\ndocument.body.appendChild(script);\n</code></pre>\n\n<p>The script will load the JavaScript that the API provider builds, and execute it.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<pre><code>function foo(data)\n{\n    // do stuff with JSON\n}\n\nvar script = document.createElement('script');\nscript.src = '//example.com/path/to/jsonp?callback=foo'\n\ndocument.getElementsByTagName('head')[0].appendChild(script);\n// or document.head.appendChild(script) in modern browsers\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 72
                },
                {
                    "body": "<p>I have a pure javascript library to do that <a href=\"https://github.com/robertodecurnex/J50Npi/blob/master/J50Npi.js\" rel=\"nofollow\">https://github.com/robertodecurnex/J50Npi/blob/master/J50Npi.js</a></p>\n\n<p>Take a look at it and let me know if you need any help using or understanding the code. </p>\n\n<p>Btw, you have simple usage example here: <a href=\"http://robertodecurnex.github.com/J50Npi/\" rel=\"nofollow\">http://robertodecurnex.github.com/J50Npi/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Lightweight example (with support for onSuccess and onTimeout). You need to pass callback name within URL if you need it.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var $jsonp = (function(){\n  var that = {};\n\n  that.send = function(src, options) {\n    var callback_name = options.callbackName || 'callback',\n      on_success = options.onSuccess || function(){},\n      on_timeout = options.onTimeout || function(){},\n      timeout = options.timeout || 10; // sec\n\n    var timeout_trigger = window.setTimeout(function(){\n      window[callback_name] = function(){};\n      on_timeout();\n    }, timeout * 1000);\n\n    window[callback_name] = function(data){\n      window.clearTimeout(timeout_trigger);\n      on_success(data);\n    }\n\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.src = src;\n\n    document.getElementsByTagName('head')[0].appendChild(script);\n  }\n\n  return that;\n})();\n</code></pre>\n\n<p>Sample usage:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>$jsonp.send('some_url?callback=handleStuff', {\n    callbackName: 'handleStuff',\n    onSuccess: function(json){\n        console.log('success!', json);\n    },\n    onTimeout: function(){\n        console.log('timeout!');\n    },\n    timeout: 5\n});\n</code></pre>\n\n<p>At GitHub: <a href=\"https://github.com/sobstel/jsonp.js/blob/master/jsonp.js\" rel=\"nofollow\">https://github.com/sobstel/jsonp.js/blob/master/jsonp.js</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p><strong>What is JSONP?</strong></p>\n\n<p>The important thing to remember with jsonp is that it isn't actually a protocol or data type. Its just a way of loading <em>a script</em> on the fly and processing the script that is introduced to the page. In the spirit of JSONP, this means introducing a new javascript object from the server into the client application/ script.</p>\n\n<p><strong>When is JSONP needed?</strong></p>\n\n<p>It is 1 method of allowing one domain to access/ process data from another in the same page asyncronously. Primarily, it is used to override CORS (Cross Origin Resource Sharing) restrictions which would occur with an XHR (ajax) request. Script loads are not subject to CORS restrictions.</p>\n\n<p><strong>How is it done</strong></p>\n\n<p>Introducing a new javascript object from the server can be implemented in many ways, but the most common practice is for the server to implement the execution of a 'callback' function, with the required object passed into it. The callback function is just a function you have already set up on the client which <em>the script</em> you load calls at the point <em>the script</em> loads to process the data passed in to it.</p>\n\n<p><strong>Example:</strong></p>\n\n<p>I have an application which logs all items in someone's home. My application is set up and I now want to retrieve all the items in the main bedroom. </p>\n\n<p>My application is on <code>app.home.com</code>. The apis I need to load data from are on <code>api.home.com</code>. </p>\n\n<p>Unless the server is explicitly set up to allow it, I cannot use ajax to load this data, as even pages on separate subdomains are subject to XHR CORS restrictions.</p>\n\n<p><strong>Ideally, set things up to allow x-domain XHR</strong></p>\n\n<p>Ideally, since the api and app are on the same domain, I might have access to set up the headers on <code>api.home.com</code>. If I do, I can add an <code>Access-Control-Allow-Origin:</code> header item granting access to <code>app.home.com</code>. Assuming the header is set up as follows: <code>Access-Control-Allow-Origin: \"http://app.home.com\"</code>, this is far more secure than setting up JSONP. This is because <code>app.home.com</code> can get everything it wants from <code>api.home.com</code> without <code>api.home.com</code> giving CORS access to the whole internet.</p>\n\n<p><strong>The above XHR solution isn't possible. Set up JSONP On my client script:</strong>  I set up a function to process the reponse from the server when I make the <em>JSONP call.</em>:</p>\n\n<pre><code>function processJSONPResponse(data) {\n    var dataFromServer = data;\n}\n</code></pre>\n\n<p>The server will need to be set up to return a mini script looking something like <code>\"processJSONPResponse({\"room\":\"main bedroom\",\"items\":[\"bed\",\"chest of drawers\"]});\"</code> It might be designed to return such a string if something like <code>//api.home.com?getdata=room&amp;room=main_bedroom</code> is called.</p>\n\n<p>Then the client sets up a script tag as such:</p>\n\n<pre><code>var script = document.createElement('script');\nscript.src = '//api.home.com?getdata=room&amp;room=main_bedroom';\n\ndocument.querySelector('head').appendChild(script);\n</code></pre>\n\n<p>This loads the script and immediately calls <code>window.processJSONPResponse()</code> as written/ echo/ printed out by the server. The data passed in as the parameter to the function is now stored in the <code>dataFromServer</code> local variable and you can do with it whatever you need.</p>\n\n<p><strong>Clean up</strong></p>\n\n<p>Once the client has the data, ie. immediately after the script is added to the DOM, the script element can be removed from the DOM:</p>\n\n<pre><code>script.parentNode.removeChild(script);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Can I make a cross-domain JSONP request in JavaScript without using jQuery or other external library? I would like to use JavaScript itself and then parse the data and make it an object so I could use it. Do I have to use an external library? If not, how can I do it?</p>\n",
            "last_activity_date": 1424365875,
            "question_id": 6132796,
            "score": 49,
            "tags": [
                "javascript",
                "jsonp"
            ],
            "title": "How to make a JSONP request from Javascript without JQuery?"
        },
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p>It means you've tried to insert a DOM node into a place in the DOM tree where it cannot go. The most common place I see this is on Safari which doesn't allow the following:</p>\n\n<pre><code>document.appendChild(document.createElement('div'));\n</code></pre>\n\n<p>Generally, this is just a mistake where this was actually intended:</p>\n\n<pre><code>document.body.appendChild(document.createElement('div'));\n</code></pre>\n\n<p>Other causes seen in the wild (summarized from comments):</p>\n\n<ul>\n<li>You are attempting to append a node to itself</li>\n<li>You are attempting to append null to a node</li>\n<li>You are attempting to append a node to a text node.</li>\n<li>Your HTML is invalid (e.g. failing to close your target node)</li>\n<li>The browser thinks the HTML you are attempting to append is XML (fix by adding <code>&lt;!doctype html&gt;</code> to your injected HTML, or specifying the content type when fetching via XHR)</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 196
                },
                {
                    "body": "<p>You can see these questions</p>\n\n<p><a href=\"http://stackoverflow.com/questions/2934049/getting-hierarchy-request-err-when-using-javascript-to-recursively-generate-a-nes\">Getting HIERARCHY_REQUEST_ERR when using Javascript to recursively generate a nested list</a></p>\n\n<p>or </p>\n\n<p><a href=\"http://stackoverflow.com/questions/757232/jquery-ui-dialog-with-asp-net-button-postback\">JQuery UI Dialog with Asp .NET button postback..</a></p>\n\n<p>The conclusion is</p>\n\n<p>when you try to use function append, you should use new variable, like this example</p>\n\n<pre><code>jQuery(function() {\n   var dlg = jQuery(\"#dialog\").dialog({ \n                        draggable: true, \n                        resizable: true, \n                        show: 'Transfer', \n                        hide: 'Transfer', \n                        width: 320, \n                        autoOpen: false, \n                        minHeight: 10, \n                        minwidth: 10 \n          });\n  dlg.parent().appendTo(jQuery(\"form:first\"));\n});\n</code></pre>\n\n<p>In the example above, uses the var \"dlg\" to run the function appendTo.\nThen error \u201cHIERARCHY_REQUEST_ERR\" will not come out again.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I encountered this error when using the Google Chrome extension Sidewiki.  Disabling it resolved the issue for me.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'm going to add one more specific answer here because it was a 2 hour search for the answer...</p>\n\n<p>I was trying to inject a  tag into a document.  The html was like this:</p>\n\n<pre><code>&lt;map id='imageMap' name='imageMap'&gt;\n  &lt;area shape='circle' coords='55,28,5' href='#' title='1687.01 - 0 percentile' /&gt;\n&lt;/map&gt;\n</code></pre>\n\n<p>If you notice, the  tag is closed in the preceding example (<code>&lt;area/&gt;</code>).  This was not accepted in Chrome browsers.  <a href=\"http://www.w3schools.com/tags/tag_area.asp\" rel=\"nofollow\">w3schools</a> seems to think it should be closed, and I could not find the official spec on this tag, but it sure doesn't work in Chrome.  Firefox will not accept it with <code>&lt;area/&gt;</code> or <code>&lt;area&gt;&lt;/area&gt;</code> or <code>&lt;area&gt;</code>.  Chrome must have <code>&lt;area&gt;</code>.  IE accepts anything.</p>\n\n<p><strong>Anyway, this error can be because your HTML is not correct.</strong></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Specifically with jQuery you can run into this issue if forget the carrots around the html tag when creating elements:</p>\n\n<pre><code> $(\"#target\").append($(\"div\").text(\"Test\"));\n</code></pre>\n\n<p>Will raise this error because what you meant was </p>\n\n<pre><code> $(\"#target\").append($(\"&lt;div&gt;\").text(\"Test\"));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I got that error because I forgot to clone my element.</p>\n\n<pre><code>// creates an error\nclone = $(\"#thing\");\nclone.appendTo(\"#somediv\");\n\n// does not\nclone = $(\"#thing\").clone();\nclone.appendTo(\"#somediv\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This error can occur when you try to insert a node into the DOM which is invalid HTML, which can be something as subtle as an incorrect attribute, for example:</p>\n\n<pre><code>// &lt;input&gt; can have a 'type' attribute\nvar $input = $('&lt;input/&gt;').attr('type', 'text');\n$holder.append($input);  // OK\n\n// &lt;div&gt; CANNOT have a 'type' attribute\nvar $div = $('&lt;div&gt;&lt;/div&gt;').attr('type', 'text');\n$holder.append($div);   // Error: HIERARCHY_REQUEST_ERR: DOM Exception 3\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you are getting this error due to a jquery ajax call $.ajax</p>\n\n<p>Then you may need to specify what the <strong><em>dataType</em></strong> is coming back from the server. I have fixed the response a lot using this simple property.</p>\n\n<pre><code>$.ajax({\n    url: \"URL_HERE\",\n    dataType: \"html\",\n    success: function(response) {\n        $('#ELEMENT').html(response);\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I know this thread is old, but I've encountered another cause of the problem which others might find helpful. I was getting the error with Google Analytics trying to append itself to an HTML comment. The offending code:</p>\n\n<pre><code>document.documentElement.firstChild.appendChild(ga);\n</code></pre>\n\n<p>This was causing the error because my first element was an HTML comment (namely a Dreamweaver template code).</p>\n\n<pre><code>&lt;!-- #BeginTemplate \"/Templates/default.dwt.php\" --&gt;\n</code></pre>\n\n<p>I modified the offending code to something admittedly not bulletproof, but better:</p>\n\n<pre><code>document.documentElement.firstChild.nodeType===1 ? document.documentElement.firstChild.appendChild(ga) : document.documentElement.lastChild.appendChild(ga);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Another reason this can come up is that you are appending before the element is ready e.g.</p>\n\n<pre><code>&lt;body&gt;\n\n&lt;script&gt;\ndocument.body.appendChild(foo);\n&lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>In this case, you'll need to move the script after the . Not entirely sure if that's kosher, but moving the script after the body doesn't seem to help :/</p>\n\n<p>Instead of moving the script, you can also do the appending in an event handler.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you run into this problem while trying to append a node into another window in Internet Explorer, try using the HTML inside the node instead of the node itself.</p>\n\n<pre><code>myElement.appendChild(myNode.html());\n</code></pre>\n\n<p>IE doesn't support appending nodes to another window.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>@Kelly Norton is right in his answer that <code>The browser thinks the HTML you are attempting to append is XML</code> and suggests <code>specifying the content type when fetching via XHR</code>. </p>\n\n<p>It's true however you sometimes use third party libraries that you are not going to modify. It's JQuery UI in my case. Then you should provide the right <code>Content-Type</code> in the response instead of overriding the response type on JavaScript side. Set your <code>Content-Type</code> to <code>text/html</code> and you are fine.</p>\n\n<p>In my case, it was as easy as renaming the <code>file.xhtml</code> to <code>file.html</code> - application server had some extension to MIME types mappings out of the box. When content is dynamic, you can set the content type of response somehow (e.g. <code>res.setContentType(\"text/html\")</code> in Servlet API).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This ERROR happened to me in IE9 when I tried to appendChild an  dynamically to a  which already existed in a window A. Window A would create a child window B. In window B after some user action a function would run and do an appendChild on the form element in window A using <code>window.opener.document.getElementById('formElement').appendChild(input);</code></p>\n\n<p>This would throw an error. Same with creating the input element using <code>document.createElement('input');</code> in the child window, passing it as a parameter to the <code>window.opener</code> window A, and there do the append. Only if I created the input element in the same window where I was going to append it, it would succeed without errors.</p>\n\n<p>Thus my conclusion (please verify): no element can be dynamically created (using <code>document.createElement</code>) in one window, and then appended (using <code>.appendChild</code>) to an element in another window (without taking maybe a particular extra step I missed to ensure it is not considered XML or something). This fails in IE9 and throws the error, in FF this works fine though.</p>\n\n<p>PS. I don't use jQuery.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just for reference. </p>\n\n<p>IE will block appending any element created in a different window context from the window context that the element is being appending to. </p>\n\n<p>e.g</p>\n\n<pre><code>var childWindow = window.open('somepage.html');\n\n//will throw the exception in IE\nchildWindow.document.body.appendChild(document.createElement('div'));\n\n//will not throw exception in IE\nchildWindow.document.body.appendChild(childWindow.document.createElement('div'));\n</code></pre>\n\n<p>I haven't figured out how to create a dom element with jQuery using a different window context yet.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I get this error in IE9 if I had disabled script debugging (Internet Explorer) option. If I enable script debugging I don't see the error and the page works fine. This seems odd what is the DOM exception got to do with debugging either enabled or disabled.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How exactly does it relate to jQuery? I know the library uses native javascript functions internally, but what exactly is it trying to do whenever such a problem appears?</p>\n",
            "last_activity_date": 1387373487,
            "question_id": 1256394,
            "score": 166,
            "tags": [
                "javascript",
                "jquery",
                "domexception"
            ],
            "title": "What exactly can cause an &quot;HIERARCHY_REQUEST_ERR: DOM Exception 3&quot;-Error?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>I don't think it's possible unless you use a flash, activex or java uploader.</p>\n\n<p>For security reasons ajax / javascript isn't allowed to access the file stream or file properties before or during upload.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I encountered the same issue. You have to use ActiveX or Flash (or Java). The good thing is that it doesn't have to be invasive. I have a simple ActiveX method that will return the size of the to-be-uploaded file.</p>\n\n<p>If you go with Flash, you can even do some fancy js/css to cusomize the uploading experience--only using Flash (as a 1x1 \"movie\") to access it's file uploading features.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I found that Apache2 (you might want to also check Apache 1.5) has a way to restrict this before uploading by dropping this in your .htaccess file:</p>\n\n<p>LimitRequestBody 2097152</p>\n\n<p>This restricts it to 2 megabytes (2 * 1024 * 1024) on file upload (if I did my byte math properly).</p>\n\n<p>Note when you do this, the Apache error log will generate this entry when you exceed this limit on a form post or get request:</p>\n\n<pre><code>Requested content-length of 4000107 is larger than the configured limit of 2097152\n</code></pre>\n\n<p>And it will also display this message back in the web browser:</p>\n\n<pre><code>&lt;h1&gt;Request Entity Too Large&lt;/h1&gt;\n</code></pre>\n\n<p>So, if you're doing AJAX form posts with something like the Malsup jQuery Form Plugin, you could trap for the H1 response like this and show an error result.</p>\n\n<p>By the way, the error number returned is 413. So, you could use a directive in your .htaccess file like...</p>\n\n<pre><code>Redirect 413 413.html\n</code></pre>\n\n<p>...and provide a more graceful error result back.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Like others have said, it's not possible with just JavaScript due to the security model of such.</p>\n\n<p>If you are able to, I'd recommend one of the below solutions..both of which use a flash component for the client side validations; however, are wired up using Javascript/jQuery.  Both work very well and can be used with any server-side tech.</p>\n\n<p><a href=\"http://www.uploadify.com/\" rel=\"nofollow\">http://www.uploadify.com/</a></p>\n\n<p><a href=\"http://swfupload.org/\" rel=\"nofollow\">http://swfupload.org/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It's not possible to verify the image size, width or height on the client side. You need to have this file uploaded on the server and use PHP to verify all this info.\nPHP have special functions like: getimagesize() </p>\n\n<pre><code>list($width, $height, $type, $attr) = getimagesize(\"img/flag.jpg\");\necho \"&lt;img src=\\\"img/flag.jpg\\\" $attr alt=\\\"getimagesize() example\\\" /&gt;\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I tried it this way and I am getting the results in IE*, and Mozilla 3.6.16, didnt check in older versions.</p>\n\n<pre><code>&lt;img id=\"myImage\" src=\"\" style=\"display:none;\"&gt;&lt;br&gt;\n&lt;button onclick=\"findSize();\"&gt;Image Size&lt;/button&gt;\n&lt;input type=\"file\" id=\"loadfile\" /&gt;\n&lt;input type=\"button\" value=\"find size\" onclick=\"findSize()\" /&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction findSize() {\n    if ( $.browser.msie ) {\n       var a = document.getElementById('loadfile').value;\n           $('#myImage').attr('src',a);\n           var imgbytes = document.getElementById('myImage').size;\n           var imgkbytes = Math.round(parseInt(imgbytes)/1024);\n           alert(imgkbytes+' KB');\n    }else {\n           var fileInput = $(\"#loadfile\")[0];\n           var imgbytes = fileInput.files[0].fileSize; // Size returned in bytes.\n           var imgkbytes = Math.round(parseInt(imgbytes)/1024);\n                   alert(imgkbytes+' KB');\n     }\n}    \n&lt;/script&gt;\n</code></pre>\n\n<p>Add Jquery library also.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This is a copy from my answers in a very similar question: <a href=\"http://stackoverflow.com/questions/1601455/check-file-input-size-with-jquery/3937404#3937404\">How to check file input size with jQuery?</a></p>\n\n<hr>\n\n<p>You actually don't have access to filesystem (for example reading and writing local files), however, due to HTML5 File Api specification, there are some file properties that you do have access to, and the file size is one of them.</p>\n\n<p>For the HTML bellow</p>\n\n<pre><code>&lt;input type=\"file\" id=\"myFile\" /&gt;\n</code></pre>\n\n<p>try the following: </p>\n\n<pre><code>//binds to onchange event of your input field\n$('#myFile').bind('change', function() {\n\n  //this.files[0].size gets the size of your file.\n  alert(this.files[0].size);\n\n});\n</code></pre>\n\n<p>As it is a part of the HTML5 specification, it will only work for modern browsers (v10 required for IE) and I added <a href=\"http://felipe.sabino.me/javascript/2012/01/30/javascipt-checking-the-file-size/\" rel=\"nofollow\">here</a> more details and links about other file information you should know: <a href=\"http://felipe.sabino.me/javascript/2012/01/30/javascipt-checking-the-file-size/\" rel=\"nofollow\">http://felipe.sabino.me/javascript/2012/01/30/javascipt-checking-the-file-size/</a></p>\n\n<hr>\n\n<p><strong>Old browsers support</strong></p>\n\n<p>Be aware that old browsers will return a <code>null</code> value for the previous <code>this.files</code> call, so accessing <code>this.files[0]</code> will raise an exception and you should <a href=\"http://stackoverflow.com/a/20550591/429521\">check for File API support</a> before using it</p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<pre><code> $(\".jq_fileUploader\").change(function () {\n    var fileSize = this.files[0];\n    var sizeInMb = fileSize.size/1024;\n    var sizeLimit= 1024*10;\n    if (sizeInMb &gt; sizeLimit) {\n\n\n    }\n    else {\n\n\n    }\n  });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>On PHP, they have a way to restrict file size AFTER uploading, but not BEFORE uploading. I use the <a href=\"http://malsup.com/jquery/form/\">Malsup jQuery Form Plugin</a> for my form posting, and it supports image file posting.</p>\n\n<p>I was wondering if perhaps there's a restriction where I can set how many bytes can pass through that AJAX stream up to the server? That could permit me to check that file size and return an error if the file is too big. </p>\n\n<p>By doing this on the client side, it blocks those newbies who take a 10MB photo shot from their Pentax and try to upload that.</p>\n",
            "last_activity_date": 1410242702,
            "question_id": 307679,
            "score": 35,
            "tags": [
                "javascript",
                "jquery",
                "image",
                "jquery-plugins",
                "upload"
            ],
            "title": "Using jQuery, Restricting File Size Before Uploading"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>No, I don't believe there's any difference. I personally prefer the former (and jQuery et. al. seem to agree) but they both work identically in every engine I've tested.</p>\n\n<p>Also, JSLint is a little too strict sometimes. <a href=\"http://jshint.com/\">JSHint</a> might be a little better in that regard.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>There's no difference.  Both are valid ways to get the JavaScript parser to treat your function as an <em>expression</em> instead of a <em>declaration</em>.</p>\n\n<p>Note that <code>+</code> and <code>!</code> will also work, and are sometimes used by minifiers to save a character of size:</p>\n\n<pre><code>+function() {  \n    var foo = 'bar';  \n}();\n\n!function() {  \n    var foo = 'bar';  \n}();\n</code></pre>\n\n<p><strong>EDIT</strong></p>\n\n<p>As @copy points out, for completeness, <code>~</code> and <code>-</code> will also work.</p>\n\n<pre><code>-function() {  \n    var foo = 'bar';  \n}();\n\n~function() {  \n    var foo = 'bar';  \n}();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>That JSLint violation exists because Douglas Crockford says that the outside-parentheses version looks like \"dog balls\".</p>\n\n<p>You can hear him discuss it in <a href=\"http://www.youtube.com/watch?feature=player_detailpage&amp;v=taaEzHI9xyY#t=2020s\">this video</a>:</p>\n\n<blockquote>\n  <p>I think that looks goofy, 'cause what we're talking about is the whole invocation, but we got these things hanging outside of it looking sorta like ... dog balls.</p>\n</blockquote>\n\n<p>He suggests that the parentheses inside <strong>help the reader understand</strong> that the entire statement is a <strong>function expression</strong> rather than a declaration.</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>Another form of the immediately invoked  function expression that allows capturing a return value is:</p>\n\n<pre><code>1 &amp;&amp; function fnName(params){ return \"some result\"; }(someParams)\n</code></pre>\n\n<p>Also a useful note, if you're using an IIFE to create a private scope while passing the return value as the parameter to another function, you don't need any special wrapping. I find it useful when creating a private scope for accessors, like so:</p>\n\n<pre><code>Object.defineProperty(someObj, 'myProp', function(privateVal){\n  return { get: function( ){ return privateVal },\n           set: function(v){ privateVal = v    } }\n}('default'));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I know this is silly, but there's any difference between this:</p>\n\n<pre><code>(function() {  \n    var foo = 'bar';  \n})();\n</code></pre>\n\n<p>and this?</p>\n\n<pre><code>(function() {  \n    var foo = 'bar';  \n}());\n</code></pre>\n\n<p><a href=\"http://www.jslint.com/\">JSLint</a> tells us to <code>Move the invocation into the parens that contain the function</code>, but I see no need to.</p>\n\n<p><strong>Edit:</strong> The answers are too cool. <code>~function</code>, the <a href=\"http://www.jshint.com/\">JSHint</a> alternative along with jQuery's preference for <code>(/***/)();</code> and Crockford's explanation! I thought I was going to just get a \"they're the same thing\" kind of answer.<br>\nYou guys decide the best one through upvotes and I tick it.</p>\n",
            "last_activity_date": 1325994590,
            "question_id": 8774425,
            "score": 43,
            "tags": [
                "javascript",
                "comparison",
                "closures",
                "anonymous-function",
                "jslint"
            ],
            "title": "(...()) vs. (...)() in javascript closures"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Unfortunately, the methods you are using are unsupported in those browsers. To support my answer (this unsupportive behaviour) I have given links below.  </p>\n\n<p><code>onbeforeunload</code> and <code>onunload</code> not working in <code>opera</code>... to support this  </p>\n\n<blockquote>\n  <p><a href=\"http://stackoverflow.com/questions/390260/onbeforeunload-in-opera\">onbeforeunload in Opera</a><br>\n  <a href=\"http://www.zachleat.com/web/dont-let-the-door-hit-you-onunload-and-onbeforeunload/\">http://www.zachleat.com/web/dont-let-the-door-hit-you-onunload-and-onbeforeunload/</a></p>\n</blockquote>\n\n<p>Though the <code>onunload</code> event doesn't work completely, you can use <code>onunload</code> to show a warning if a user clicks a link to navigate away from a page with an unsaved form.</p>\n\n<p><code>onunload</code> not working in <code>safari</code>... to support this    </p>\n\n<blockquote>\n  <p><a href=\"https://www.webkit.org/blog/516/webkit-page-cache-ii-the-unload-event/\">https://www.webkit.org/blog/516/webkit-page-cache-ii-the-unload-event/</a></p>\n</blockquote>\n\n<p>You could rather try using the <code>pagehide</code> event in the safari browser in lieu of <code>onunload</code>.  </p>\n\n<p><code>onunload</code> not working in <code>firefox</code>... to support this  </p>\n\n<blockquote>\n  <p><a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=681636\">https://bugzilla.mozilla.org/show_bug.cgi?id=681636</a></p>\n</blockquote>\n\n<p>They are yet to come up with a solution in FF too  </p>\n\n<p>Wish you good luck cheers.</p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>The onunload event is not called in all browsers. Worse, you cannot check the return value of onbeforeunload event. That prevents us from actually preforming a logout function.</p>\n\n<p>However, you can hack around this.</p>\n\n<p>Call logout first thing in the onbeforeunload event. then prompt the user. If the user cancels their logout, automatically login them back in, by using the onfocus event. Kinda backwards, but I think it should work.</p>\n\n<pre><code>'use strict';\n\nvar reconnect = false;\n\nwindow.onfocus = function () {\n  if (reconnect) {\n    reconnect = false;\n    alert(\"Perform an auto-login here!\");\n  }\n};\n\nwindow.onbeforeunload = function () {\n  //logout();\n  var msg = \"Are you sure you want to leave?\";\n  reconnect = true;\n  return msg;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I got the solution for <code>onunload</code> in all browsers except Opera by changing the Ajax asynchronous request into synchronous request.</p>\n\n<pre><code>xmlhttp.open(\"POST\",\"LogoutAction\",false);\n</code></pre>\n\n<p>It works well for all browsers except <strong>Opera</strong>.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>I was able to get it to work in IE and FF with jQuery's: </p>\n\n<pre><code>$(window).bind('beforeunload', function(){\n\n});\n</code></pre>\n\n<p>instead of: unload, onunload, or onbeforeunload</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Here is the working solution for ie, firefox and chrome:    </p>\n\n<pre><code>var myEvent = window.attachEvent || window.addEventListener;\nvar chkevent = window.attachEvent ? 'onbeforeunload' : 'beforeunload'; /// make IE7, IE8 compitable\n\n            myEvent(chkevent, function(e) { // For &gt;=IE7, Chrome, Firefox\n                var confirmationMessage = 'Are you sure to leave the page?';  // a space\n                (e || window.event).returnValue = confirmationMessage;\n                return confirmationMessage;\n            });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Firefox simply does not show custom onbeforeunload messages. \nMozilla say they are protecing end users from malicious sites that might show misleading text.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In my chat application I need to get confirmation from user , when my application closes.</p>\n\n<p>So I used the <code>window.onbeforeunload</code> for confirmation alert and <code>window.onunload</code> for\nlogout().</p>\n\n<ol>\n<li><p>But both functions are working in IE and Chrome.( Application works fine)</p></li>\n<li><p><code>window.onbeforeunload</code>  not working in Opera and my message will not get displayed in Firefox.</p></li>\n<li><p><code>window.onunload</code> not working in Safari , Opera and Firefox.</p></li>\n</ol>\n\n<p>My javaScript code will be ,</p>\n\n<pre><code>// Used for confirmation , to closing the window \nwindow.onbeforeunload = function () {\n\n    return  \"Are you sure want to LOGOUT the session ?\";\n}; \n\n// Used to logout the session , when browser window was closed \nwindow.onunload = function () {\n\n    if((sessionId != null)&amp;&amp;(sessionId!=\"null\")&amp;&amp; (sessionId != \"\"))\n        logout();\n};\n</code></pre>\n\n<p>I also tried the same function with JQuery,</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    $(window).on('beforeunload', function() {\n        return 'Are you sure want to LOGOUT the session ?';\n    });\n\n    $(window).unload(function() {\n        if ((sessionId != null) &amp;&amp; (sessionId != \"null\") &amp;&amp; (sessionId != \"\")) {\n            logout();\n        }\n    });\n\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1416824800,
            "question_id": 14645011,
            "score": 28,
            "tags": [
                "javascript",
                "javascript-events",
                "jquery"
            ],
            "title": "window.onbeforeunload and window.onunload is not working in Firefox , Safari , Opera?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Your first point is correct. The number is cast to an integer and thus any decimal digits are removed. Please note, that <code>Math.floor</code> rounds to the next integer towards minus infinity and thus gives a different result when applied to negative numbers.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<blockquote>\n  <p>How does it work? Our theory was that using such an operator casts the\n  number to an integer, thus removing the fractional part</p>\n</blockquote>\n\n<p>All bitwise operations except unsigned right shift, <code>&gt;&gt;&gt;</code>, work on signed 32-bit integers. So using bitwise operations will convert a float to an integer.</p>\n\n<blockquote>\n  <p>Does it have any advantages over doing Math.floor? Maybe it's a bit\n  faster? (pun not intended)</p>\n</blockquote>\n\n<p><a href=\"http://jsperf.com/or-vs-floor/2\">http://jsperf.com/or-vs-floor/2</a> seems slightly faster</p>\n\n<blockquote>\n  <p>Does it have any disadvantages? Maybe it doesn't work in some cases?\n  Clarity is an obvious one, since we had to figure it out, and well,\n  I'm writting this question.</p>\n</blockquote>\n\n<ul>\n<li>Will not pass jsLint. </li>\n<li>32-bit signed integers only</li>\n<li>Odd Comparative behavior: <code>Math.floor(NaN) === NaN</code>, while <code>(NaN | 0) === 0</code></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<p>This is <em>truncation</em> as opposed to flooring.  Howard's answer is sort of correct; But I would add that <code>Math.floor</code> does exactly what it is supposed to with respect to negative numbers.  Mathematically, that is what a floor is.  </p>\n\n<p>In the case you described above, the programmer was more interested in <em>truncation</em> or chopping the decimal completely off.  Although, the syntax they used sort of obscures the fact that they are converting the float to an int.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<ul>\n<li><p>The <a href=\"http://ecma262-5.com/ELS5_HTML.htm#Section_11.10\" rel=\"nofollow\">specs</a> say that it is converted to an integer:</p>\n\n<blockquote>\n  <p>Let lnum be ToInt32(lval).</p>\n</blockquote></li>\n<li><p>Performance: this has been tested at <a href=\"http://jsperf.com/math-round-vs-hack/25.\" rel=\"nofollow\">jsperf</a> before.</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>A colleague of mine stumbled upon a method to floor float numbers using a bitwise or:</p>\n\n<pre><code>var a = 13.6 | 0; //a == 13\n</code></pre>\n\n<p>We were talking about it and wondering a few things.</p>\n\n<ul>\n<li>How does it work? Our theory was that using such an operator casts the number to an integer, thus removing the fractional part</li>\n<li>Does it have any advantages over doing <code>Math.floor</code>? Maybe it's a bit faster? (pun not intended)</li>\n<li>Does it have any disadvantages? Maybe it doesn't work in some cases? Clarity is an obvious one, since we had to figure it out, and well, I'm writting this question.</li>\n</ul>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1357097527,
            "question_id": 7487977,
            "score": 53,
            "tags": [
                "javascript",
                "floating-point",
                "bit-manipulation"
            ],
            "title": "Using bitwise OR 0 to floor a number"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can preload the image into a javascript Image object, then check the width and height properties on that object.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You have 2 options:</p>\n\n<p><strong>Option 1:</strong></p>\n\n<p>Remove the <code>width</code> and <code>height</code> attributes and read <code>offsetWidth</code> and <code>offsetHeight</code></p>\n\n<p><strong>Option 2:</strong></p>\n\n<p>Create a JavaScript <code>Image</code> object, set the <code>src</code>, and read the <code>width</code> and <code>height</code> (you don't even have to add it to the page to do this).</p>\n\n<pre><code>function getImgSize(imgSrc) {\n    var newImg = new Image();\n\n    newImg.onload = function() {\n      var height = newImg.height;\n      var width = newImg.width;\n      alert ('The image size is '+width+'*'+height);\n    }\n\n    newImg.src = imgSrc; // this must be done AFTER setting onload\n}\n</code></pre>\n\n<p><strong>Edit by Pekka</strong>: As agreed in the comments, I changed the function to run on the \u00b4onload\u00b4 event of the image. Otherwise, with big images, <code>height</code> and <code>width</code> would not return anything because the image was not loaded yet. </p>\n",
                    "is_accepted": true,
                    "score": 76
                },
                {
                    "body": "<p>Images (on Firefox at least) have a <code>naturalWidth</code>/height property so you can use <code>img.naturalWidth</code> to get the original width</p>\n\n<pre><code>var img = document.getElementsByTagName(\"img\")[0];\nimg.onload=function(){\n    console.log(\"Width\",img.naturalWidth);\n    console.log(\"Height\",img.naturalHeight);\n}\n</code></pre>\n\n<p><a href=\"http://www.webdeveloper.com/forum/showpost.php?p=951590&amp;postcount=15\">Source</a></p>\n",
                    "is_accepted": false,
                    "score": 30
                }
            ],
            "body": "<p>Is there a reliable, framework independent way of determining the physical dimensions of a <code>&lt;img src='xyz.jpg'&gt;</code> resized on the client side?</p>\n",
            "last_activity_date": 1378470427,
            "question_id": 1944280,
            "score": 53,
            "tags": [
                "javascript",
                "image"
            ],
            "title": "Determine original size of image cross browser?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Not in any conventional sense of the phrase \"inside CSS.\"</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I think what you may be thinking of is <code>expressions</code> or <a href=\"http://msdn.microsoft.com/en-us/library/ms537634.aspx\" rel=\"nofollow\">\"dynamic properties\"</a>, which are only supported by IE and let you set a property to the result of a javascript expression. Example:</p>\n\n<pre><code>width:expression(document.body.clientWidth &gt; 800? \"800px\": \"auto\" );\n</code></pre>\n\n<p>This code makes IE emulate the <code>max-width</code> property it doesn't support.</p>\n\n<p>All things considered, however, <strong>avoid using these</strong>. <a href=\"https://developer.yahoo.com/blogs/ydnfiveblog/high-performance-sites-rule-7-avoid-css-expressions-7202.html\" rel=\"nofollow\">They are a bad, bad thing.</a></p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>IE supports CSS <em>expressions</em>:</p>\n\n<pre><code>width:expression(document.body.clientWidth &gt; 955 ? \"955px\": \"100%\" );\n</code></pre>\n\n<p>but they are not standard and are not portable across browsers. Avoid them if possible. They are deprecated <a href=\"http://msdn.microsoft.com/en-us/library/ms537634.aspx\" rel=\"nofollow\">since IE8</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>To facilitate potentially solving your problem given the information you've provided, I'm going to assume you're seeking dynamic CSS. If this is the case, you can use a server-side scripting language to do so. For example (and I absolutely love doing things like this):</p>\n\n<p>styles.css.php:</p>\n\n<pre><code>body\n {\nmargin: 0px;\nfont-family: Verdana;\nbackground-color: #cccccc;\nbackground-image: url('&lt;?php\necho 'images/flag_bg/' . $user_country . '.png';\n?&gt;');\n }\n</code></pre>\n\n<p>This would set the background image to whatever was stored in the <strong>$user_country</strong> variable. This is only one example of dynamic CSS; there are virtually limitless possibilities when combining CSS and server-side code. Another case would be doing something like allowing the user to create a custom theme, storing it in a database, and then using PHP to set various properties, like so:</p>\n\n<p>user_theme.css.php:</p>\n\n<pre><code>body\n {\nbackground-color: &lt;?php echo $user_theme['BG_COLOR']; ?&gt;;\ncolor: &lt;?php echo $user_theme['COLOR']; ?&gt;;\nfont-family: &lt;?php echo $user_theme['FONT']; ?&gt;;\n }\n\n#panel\n {\nfont-size: &lt;?php echo $user_theme['FONT_SIZE']; ?&gt;;\nbackground-image: &lt;?php echo $user_theme['PANEL_BG']; ?&gt;;\n }\n</code></pre>\n\n<p>Once again, though, this is merely an off-the-top-of-the-head example; harnessing the power of dynamic CSS via server-side scripting can lead to some pretty incredible stuff.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>IE and Firefox both contain ways to execute JavaScript from CSS. As Paolo mentions, one way in IE is the <code>expression</code> technique, but there's also the more obscure <strong>HTC behavior</strong>, in which a seperate XML that contains your script is loaded via CSS. A similar technique for Firefox exists, using <strong>XBL</strong>. These techniques don't exectue JavaScript from CSS <em>directly</em>, but the effect is the same. </p>\n\n<h2>HTC with IE</h2>\n\n<p>Use a CSS rule like so:</p>\n\n<pre><code>body {\n  behavior:url(script.htc);\n}\n</code></pre>\n\n<p>and within that script.htc file have something like:</p>\n\n<pre><code>&lt;PUBLIC:COMPONENT TAGNAME=\"xss\"&gt;\n   &lt;PUBLIC:ATTACH EVENT=\"ondocumentready\" ONEVENT=\"main()\" LITERALCONTENT=\"false\"/&gt;\n&lt;/PUBLIC:COMPONENT&gt;\n&lt;SCRIPT&gt;\n   function main() \n   {\n     alert(\"HTC script executed.\");\n   }\n&lt;/SCRIPT&gt;\n</code></pre>\n\n<p>The HTC file executes the <code>main()</code> function on the event <code>ondocumentready</code> (referring to the HTC document's readiness.)</p>\n\n<h2>XBL with Firefox</h2>\n\n<p>Firefox supports a similar XML-script-executing hack, using XBL.</p>\n\n<p>Use a CSS rule like so:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>body {\n  -moz-binding: url(script.xml#mycode);\n}\n</code></pre>\n\n<p>and within your script.xml:</p>\n\n<pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;bindings xmlns=\"http://www.mozilla.org/xbl\" xmlns:html=\"http://www.w3.org/1999/xhtml\"&gt;\n\n&lt;binding id=\"mycode\"&gt;\n  &lt;implementation&gt;\n    &lt;constructor&gt;\n      alert(\"XBL script executed.\");\n    &lt;/constructor&gt;\n  &lt;/implementation&gt;\n&lt;/binding&gt;\n\n&lt;/bindings&gt;\n</code></pre>\n\n<p>All of the code within the constructor tag will be executed (a good idea to wrap code in a CDATA section.)</p>\n\n<p>In both techniques, <strong>the code doesn't execute unless the CSS selector matches an element within the document</strong>. By using something like <code>body</code>, it will execute immediately on page load.</p>\n",
                    "is_accepted": false,
                    "score": 47
                },
                {
                    "body": "<p>No, but it's an interesting idea.\nYou could also use something like that:</p>\n\n<p><a href=\"http://lesscss.org/\" rel=\"nofollow\">http://lesscss.org/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This turns out to be a very interesting question.  With over a hundred properties being set, you'd think that you'd be allowed to type \n  .clickable {  onclick : \"alert('hi!');\" ; }\nin your CSS, and it'd work.  It's intuitive, it makes so much sense.  This would be amazingly useful in monkey-patching dynamically-generated massive UIs.  </p>\n\n<p>The problem:<br>\nThe CSS police, in their infinite wisdom, have drawn a Chinese wall between <em>presentation</em> and <em>behavior</em>.  Any HTML properly labeled on-whatever is intentionally not supported by CSS.  (<a href=\"http://www.w3.org/TR/CSS2/propidx.html\" rel=\"nofollow\">Full Properties Table</a>)  </p>\n\n<p>The best way around this is to use jQuery, which sets up an interpreted engine in the background to execute what you were trying to do with the CSS anyway.  See this page:\n<a href=\"http://stackoverflow.com/questions/10480840/add-javascript-onclick-to-css-file\">Add Javascript Onclick To .css File</a>.</p>\n\n<p>Good luck.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I ran into a similar problem and have developed two standalone tools to accomplish this:</p>\n\n<ul>\n<li><p><a href=\"http://opensourcetaekwondo.com/cjsss/\" rel=\"nofollow\">CjsSS.js</a> is a Vanilla Javascript tool (so no external dependencies) that supports back to IE6.</p></li>\n<li><p><a href=\"http://opensourcetaekwondo.com/ngcss/\" rel=\"nofollow\">ngCss</a> is an Angular Module+Filter+Factory (aka: plugin) that supports Angular 1.2+ (so back to IE8)</p></li>\n</ul>\n\n<p>Both of these tool sets allow you to do this in a STYLE tag or within an external *.css file:</p>\n\n<pre><code>/*&lt;script src='some.js'&gt;&lt;/script&gt;\n&lt;script&gt;\n    var mainColor = \"#cccccc\";\n&lt;/script&gt;*/\n\nBODY {\n    color: /*{{mainColor}}*/;\n}\n</code></pre>\n\n<p>And this in your on-page <code>style</code> attributes:</p>\n\n<pre><code>&lt;div style=\"color: {{mainColor}}\" cjsss=\"#sourceCSS\"&gt;blah&lt;/div&gt;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>&lt;div style=\"color: {{mainColor}}\" ng-css=\"sourceCSS\"&gt;blah&lt;/div&gt;\n</code></pre>\n\n<p>NOTE: In ngCss, you could also do <code>$scope.mainColor</code> in place of <code>var mainColor</code></p>\n\n<p>By default, the Javascript is executed in a sandboxed IFRAME, but since you author your own CSS and host it on your own server (just like your *.js files) then XSS isn't an issue. But the sandbox provides that much more security and peace of mind.</p>\n\n<p>CjsSS.js and ngCss fall somewhere in-between the other tools around to accomplish similar tasks:</p>\n\n<ul>\n<li><p><a href=\"http://lesscss.org/\" rel=\"nofollow\">LESS</a>, <a href=\"http://sass-lang.com/\" rel=\"nofollow\">SASS</a> and <a href=\"http://learnboost.github.io/stylus/\" rel=\"nofollow\">Stylus</a> are all Preprocessors only and require you to learn a new language and mangle your CSS. Basically they extended CSS with new language features. All are also limited to plugins developed for each platform while CjsSS.js and ngCss both allow you to include any Javascript library via <code>&lt;script src='blah.js'&gt;&lt;/script&gt;</code> straight in your CSS!</p></li>\n<li><p><a href=\"http://absurdjs.com/\" rel=\"nofollow\">AbsurdJS</a> saw the same problems and went the exact opposite direction of the Preprocessors above; rather than extending CSS, AbsurdJS created a Javascript library to generate CSS.</p></li>\n</ul>\n\n<p>CjsSS.js and ngCss took the middle ground; you already know CSS, you already know Javascript, so just let them work together in a simple, intuitive way.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to use Javascript inside CSS?</p>\n\n<p>If it is, can you give a simple example?</p>\n",
            "last_activity_date": 1420261904,
            "question_id": 476276,
            "score": 41,
            "tags": [
                "javascript",
                "css"
            ],
            "title": "Using Javascript in CSS"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You would probably have to break up the paragraph so that each word was contained inside of its own separate &lt;span&gt; element and then add <code>onmouseover</code> event attributes to each of them.</p>\n\n<p>..And I think you mean \"&lt;p&gt;some long text&lt;/p&gt;\"; backslashes are not part of HTML.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>To my knowledge, you can't.</p>\n\n<p>Only thing I can think of is to put each of the words in their own element, then apply mouse over events to those elements.</p>\n\n<pre><code>&lt;p&gt;&lt;span&gt;Some&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; &lt;span&gt;text&lt;/span&gt;&lt;/p&gt;\n\n&lt;script&gt;\n$(document).ready(function () {\n  $('p span').bind('mouseenter', function () {\n    alert($(this).html() + \" is what you're currently hovering over!\");\n  });\n});\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Further to the two other answers, you may be able to split your paragraphs up into spans using jQuery (or javascript generally).</p>\n\n<p>That way, you wouldn't need to think about outputting your text with spans around the words.  Let your javascript do it for you.</p>\n\n<p>e.g.</p>\n\n<pre><code>&lt;p&gt;Each word will be wrapped in a span.&lt;/p&gt;\n&lt;p&gt;A second paragraph here.&lt;/p&gt;\nWord: &lt;span id=\"word\"&gt;&lt;/span&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    $(function() {\n        // wrap words in spans\n        $('p').each(function() {\n            var $this = $(this);\n            $this.html($this.text().replace(/\\b(\\w+)\\b/g, \"&lt;span&gt;$1&lt;/span&gt;\"));\n        });\n\n        // bind to each span\n        $('p span').hover(\n            function() { $('#word').text($(this).css('background-color','#ffff66').text()); },\n            function() { $('#word').text(''); $(this).css('background-color',''); }\n        );\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>Note that the above code, while it works, will strip out any html inside your paragraph tags.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>In Firefox you can hook the mousemove event.  The callback has one argument, e.  In the callback, do this:</p>\n\n<pre><code>var range = HTTparent.ownerDocument.createRange();\nrange.selectNode(e.rangeParent);\nvar str = range.toString();\nrange.detach();\n</code></pre>\n\n<p>Now str has the entire text that the mouse was over.  e.rangeOffset is the location of the mousepointer within that string.  In your case, str would be \"some long text\" and e.rangeOffset would be 11 if you were over the \"e\" in \"text\".</p>\n\n<p>This code will get a little confused if you are in the margins, for instance when the mouse pointer is on the same line as the text but after the end of it.  To fix this, you need to check that you are actually on top of text.  Here's the test:</p>\n\n<pre><code>if(e &amp;&amp; e.rangeParent &amp;&amp; e.rangeParent.nodeType == e.rangeParent.TEXT_NODE\n   &amp;&amp; e.rangeParent.parentNode == e.target)\n</code></pre>\n\n<p>This technique works in Firefox.  Doesn't work in Chrome.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>My other answer works only in Firefox.  This answer works in Chrome.  (Might work in Firefox, too, I don't know.)</p>\n\n<pre><code>function getWordAtPoint(elem, x, y) {\n  if(elem.nodeType == elem.TEXT_NODE) {\n    var range = elem.ownerDocument.createRange();\n    range.selectNodeContents(elem);\n    var currentPos = 0;\n    var endPos = range.endOffset;\n    while(currentPos+1 &lt; endPos) {\n      range.setStart(elem, currentPos);\n      range.setEnd(elem, currentPos+1);\n      if(range.getBoundingClientRect().left &lt;= x &amp;&amp; range.getBoundingClientRect().right  &gt;= x &amp;&amp;\n         range.getBoundingClientRect().top  &lt;= y &amp;&amp; range.getBoundingClientRect().bottom &gt;= y) {\n        range.expand(\"word\");\n        var ret = range.toString();\n        range.detach();\n        return(ret);\n      }\n      currentPos += 1;\n    }\n  } else {\n    for(var i = 0; i &lt; elem.childNodes.length; i++) {\n      var range = elem.childNodes[i].ownerDocument.createRange();\n      range.selectNodeContents(elem.childNodes[i]);\n      if(range.getBoundingClientRect().left &lt;= x &amp;&amp; range.getBoundingClientRect().right  &gt;= x &amp;&amp;\n         range.getBoundingClientRect().top  &lt;= y &amp;&amp; range.getBoundingClientRect().bottom &gt;= y) {\n        range.detach();\n        return(getWordAtPoint(elem.childNodes[i], x, y));\n      } else {\n        range.detach();\n      }\n    }\n  }\n  return(null);\n}    \n</code></pre>\n\n<p>In your mousemove handler, call <code>getWordAtPoint(e.target, e.x, e.y);</code></p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>This a live demo for <strong>how to get a word under cursor using JavaScript</strong> based on the source code provided by <em>Damovisa</em>: <a href=\"http://jsfiddle.net/5gyRx/\" rel=\"nofollow\">http://jsfiddle.net/5gyRx/</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There is an API for this in the current <a href=\"http://dev.w3.org/csswg/cssom-view/#extensions-to-the-document-interface\" rel=\"nofollow\">CSSOM View draft</a>: <code>document.caretPositionFromPoint(x,y)</code></p>\n\n<p>You would have to check which browser supports this, though. Firefox 7 seems not to support it at all, whereas bug reports indicate Firefox 9 will. Chrome 14 supports <code>caretRangeFromPoint(x,y)</code> which is essentially the same, but from an older CSSOM draft.  </p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>in this case:\n<code>&lt;p&gt; some long text &lt;/p&gt;</code></p>\n\n<p>how can i know that mouse cursor is above the 'text' word? </p>\n",
            "last_activity_date": 1319280954,
            "question_id": 2444430,
            "score": 22,
            "tags": [
                "javascript",
                "javascript-events",
                "word",
                "cursor"
            ],
            "title": "how to get a word under cursor using JavaScript"
        },
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p>The rule is simple: All script should be external. Both for maintenance and performance.</p>\n\n<p>(Why performance? Because if the code is separate, it can easier be cached by browsers.)</p>\n\n<p>JavaScript doesn't belong in the HTML code and if it contains special characters (such as &lt;, >) it even creates problems.</p>\n",
                    "is_accepted": true,
                    "score": 67
                },
                {
                    "body": "<p>In your scenario it sounds like writing the external stuff in one file shared among the pages would be good for you. I agree with everything said above.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>During early prototyping keep your code inline for the benefit of fast iteration, but be sure to make it all external by the time you reach production.</p>\n\n<p>I'd even dare to say that if you can't place all your Javascript externally, then you have a bad design under your hands, and you should refactor your data and scripts</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Maintainability is definitely a reason to keep them external, but if the configuration is a one-liner (or in general shorter than the HTTP overhead you would get for making those files external) it's performance-wise better to keep them inline. Always remember, that each HTTP request generates some overhead in terms of execution time and traffic. </p>\n\n<p>Naturally this all becomes irrelevant the moment your code is longer than a couple of lines and is not really specific to one single page. The moment you want to be able to reuse that code, make it external. If you don't, look at its size and decide then.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Externalizing javascript is one of the yahoo performance rules: \n<a href=\"http://developer.yahoo.com/performance/rules.html#external\">http://developer.yahoo.com/performance/rules.html#external</a></p>\n\n<p>While the hard-and-fast rule that you should always externalize scripts will generally be a good bet, in some cases you may want to inline some of the scripts and styles. You should however only inline things that you know will improve performance (because you've measured this).</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I would take a look at the required code and divide it into as many separate files as needed. Every js file would only hold one \"logical set\" of functions etc. eg. one file for all login related functions.</p>\n\n<p>Then during site developement on each html page you only include those that are needed. \nWhen you go live with your site you can optimize by combining every js file a page needs into one file.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Three considerations:</p>\n\n<ul>\n<li>How much code do you need (sometimes libraries is a first-class consumer !-)</li>\n<li>Specifity (is this code only functional in the context of this specific document or even element)</li>\n<li>Every code inside the document tends to make it longer and thus slower. Besides that SEO considerations makes it obvious, that you minimize internal scripting ...</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>i think the <a href=\"http://www.thefutureoftheweb.com/blog/when-to-use-inline-javascript\">specific to one page, short script case</a> is (only) defensible case for inline script</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>External scripts are also easier to debug using Firebug. I like to Unit Test my JavaScript and having it all external helps. I hate seeing JavaScript in PHP code and HTML it looks like a big mess to me.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>On the point of keeping JavaScript external:</p>\n\n<p>ASP.NET 3.5SP1 recently introduced functionality to create a Composite script resource (merge a bunch of js files into one). Another benefit to this is when Webserver compression is turned on, downloading one slightly larger file will have a better compression ratio then many smaller files (also less http overhead, roundtrip etc...). I guess this saves on the initial page load, then browser caching kicks in as mentioned above.</p>\n\n<p>ASP.NET aside, this screencast explains the benefits in more detail:\n<a href=\"http://www.asp.net/learn/3.5-SP1/video-296.aspx\" rel=\"nofollow\">http://www.asp.net/learn/3.5-SP1/video-296.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Another hidden benefit of external scripts is that you can easily run them through a syntax checker like <a href=\"http://www.jslint.com/\" rel=\"nofollow\">jslint</a>. That can save you from a lot of heartbreaking, hard-to-find, IE6 bugs.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Actually, there's a pretty solid case to use inline javascript. <strong>If the js is small enough</strong> (one-liner), I tend to prefer the javascript inline because of two factors:</p>\n\n<ul>\n<li><strong>Locality</strong>. There's no need to navigate an external file to validate the behaviour of some javascript</li>\n<li><strong>AJAX</strong>. If you're refreshing some section of the page via AJAX, you <strong>may</strong> lose all of your DOM handlers (onclick, etc) for that section, depending on how you binded them. For example, using <code>jQuery</code> you can either use the <a href=\"http://api.jquery.com/live/\"><code>live</code></a> or <a href=\"http://api.jquery.com/delegate/\"><code>delegate</code></a> methods to circumvent this, but I find that if the js is small enough it is preferrable to just put it inline. </li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The only defense I can offer for inline javascipt is that when using strongly typed views with .net MVC you can refer to c# variables mid javascript which I've found useful.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Another reason why you should always use external scripts is for easier transition to <a href=\"http://developer.chrome.com/extensions/contentSecurityPolicy.html\" rel=\"nofollow\">Content Security Policy (CSP)</a>. CSP defaults forbid all inline script, making your site more resistant to XSS attacks.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you only care about performance, most of advice in this thread is flat out wrong, and is becoming more and more wrong in the SPA era, where we can assume that the page is useless without the JS code. I've spent countless hours optimizing SPA page load times, and verifying these results with different browsers. Across the board the performance increase by re-orchestrating your html, can be quite dramatic.</p>\n\n<p>To get the best performance, you have to think of pages as two-stage rockets. These two stages roughly correspond to <code>&lt;head&gt;</code> and <code>&lt;body&gt;</code> phases, but think of them instead as <code>&lt;static&gt;</code> and <code>&lt;dynamic&gt;</code>. The static portion is basically a string constant which you shove down the response pipe as fast as you possibly can. This can be a little tricky if you use a lot of middleware that sets cookies (these need to be set before sending http content), but in principle it's just flushing the response buffer, hopefully before jumping into some templating code (razor, php, etc) on the server. This may sound difficult, but then I'm just explaining it wrong, because it's near trivial. As you may have guessed, this static portion should contain all javascript inlined and minified. It would look something like</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n     &lt;html&gt;\n         &lt;head&gt;\n             &lt;script&gt;/*...inlined jquery, angular, your code*/&lt;/script&gt;\n             &lt;style&gt;/* ditto css */&lt;/style&gt;\n         &lt;/head&gt;\n         &lt;body&gt;\n             &lt;!-- inline all your templates, if applicable --&gt;\n             &lt;script type='template-mime' id='1'&gt;&lt;/script&gt;\n             &lt;script type='template-mime' id='2'&gt;&lt;/script&gt;\n             &lt;script type='template-mime' id='3'&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Since it costs you next to nothing to send this portion down the wire, you can expect that the client will start receiving this somewhere around 5ms + latency after connecting to your server. Assuming the server is reasonably close this latency could be between 20ms to 60ms. Browsers will start processing this section as soon as they get it, and the processing time will normally dominate transfer time by factor 20 or more, which is now your amortized window for server-side processing of the <code>&lt;dynamic&gt;</code> portion.</p>\n\n<p>It takes about 50ms for the browser (chrome, rest maybe 20% slower) to process inline jquery + signalr + angular + ng animate + ng touch + ng routes + lodash. That's pretty amazing in and of itself. Most web apps have less code than all those popular libraries put together, but let's say you have just as much, so we would win latency+100ms of processing on the client (this latency win comes from the second transfer chunk). By the time the second chunk arrives, we've processed all js code and templates and we can start executing dom transforms.</p>\n\n<p>You may object that this method is orthogonal to the inlining concept, but it isn't. If you, instead of inlining, link to cdns or your own servers the browser would have to open another connection(s) and delay execution. Since this execution is basically free (as the server side is talking to the database) it must be clear that all of these jumps would cost more than doing no jumps at all. If there were a browser quirk that said external js executes faster we could measure which factor dominates. My measurements indicate that extra requests kill performance at this stage. </p>\n\n<p>I work a lot with optimization of SPA apps. It's common for people to think that data volume is a big deal, while in truth latency, and execution often dominate. The minified libraries I listed add up to 300kb of data, and that's just 68 kb gzipped, or 200ms download on a 2mbit 3g/4g phone, which is exactly the latency it would take on the same phone to check IF it had the same data in its cache already, even if it was proxy cached, because the mobile latency tax (phone-to-tower-latency) still applies. Meanwhile, desktop connections that have lower first-hop latency typically have higher bandwidth anyway. </p>\n\n<p>In short, right now (2014), it's best to inline all scripts, styles and templates. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I would like to know when I should include external scripts or write them inline with the html code, in terms of performance and ease of maintenance.</p>\n\n<p>What is the general practice for this?</p>\n\n<p>Real-world-scenario - I have several html pages that need client-side form validation. For this I use a jQuery plugin that I include on all these pages. But the question is, do I:</p>\n\n<ul>\n<li>write the bits of code that configure this script inline?</li>\n<li>include all bits in one file that's share among all these html pages?</li>\n<li>include each bit in a separate external file, one for each html page?</li>\n</ul>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1412731057,
            "question_id": 138884,
            "score": 67,
            "tags": [
                "javascript",
                "html",
                "performance",
                "frontend"
            ],
            "title": "When should I use Inline vs. External Javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><code>onunload</code> (or <code>onbeforeunload</code>) cannot redirect the user to another page.  This is for security reasons.</p>\n\n<p>If you want to show a prompt before the user leaves the page, use <code>onbeforeunload</code>:</p>\n\n<pre><code>window.onbeforeunload = function(){\n  return 'Are you sure you want to leave?';\n};\n</code></pre>\n\n<p>Or with jQuery:</p>\n\n<pre><code>$(window).bind('beforeunload', function(){\n  return 'Are you sure you want to leave?';\n});\n</code></pre>\n\n<p>This will just ask the user if they want to leave the page or not, you cannot redirect them if they select to stay on the page.  If they select to leave, the browser will go where they told it to go.</p>\n\n<p>You can use <code>onunload</code> to do stuff before the page is unloaded, but you cannot redirect from there  (Chrome 14+ blocks alerts inside <code>onunload</code>):</p>\n\n<pre><code>window.onunload = function() {\n    alert('Bye.');\n}\n</code></pre>\n\n<p>Or with jQuery:</p>\n\n<pre><code>$(window).unload(function(){\n  alert('Bye.');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 114
                },
                {
                    "body": "<p>In order to have a popop with Chrome 14+, you need to do the following :</p>\n\n<pre><code>jQuery(window).bind('beforeunload', function(){\n    return 'my text';\n});\n</code></pre>\n\n<p>The user will be asked if he want to stay or leave.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This code when you also detect form state changed or not.</p>\n\n<pre><code>$('#form').data('serialize',$('#form').serialize());\n  // On load save form current state\n\n$(window).bind('beforeunload', function(e){\n    if($('#form').serialize()!=$('#form').data('serialize'))return true;\n    else e=null;\n    // i.e; if form state change show box not.\n});\n</code></pre>\n\n<p>You can Google JQuery Form Serialize function, this will collect all form inputs and save it in array.  I guess this explain is enough :)</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>This post is rather old, but for the records (or someone finding this page via Google):\nYou might as well consider <a href=\"https://github.com/jquerypageleave/jquery-pageleave\" rel=\"nofollow\">this plugin on github</a>: It fires an event when someone is entering the address bar. I would not rely on it. but it might be an unobtrusive way to ask for feedback.  </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This will alert on leaving current page</p>\n\n<pre><code>&lt;script type='text/javascript'&gt;\nfunction goodbye(e) {\n    if(!e) e = window.event;\n    //e.cancelBubble is supported by IE - this will kill the bubbling process.\n    e.cancelBubble = true;\n    e.returnValue = 'You sure you want to leave?'; //This is displayed on the dialog\n\n    //e.stopPropagation works in Firefox.\n    if (e.stopPropagation) {\n        e.stopPropagation();\n        e.preventDefault();\n    }\n}\nwindow.onbeforeunload=goodbye; \n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I want to make a confirmation before user leaving the page.If he says ok then it would redirect to new page or cancel to leave.I tried to make it with onunload</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction con() {\n\n    var answer = confirm(\"do you want to check our other products\")\n    if (answer){\n\n        alert(\"bye\");\n    }\n    else{\n        window.location = \"http://www.xyz.com/products\";\n    }\n}\n\n\n&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body onunload=\"con();\"&gt;\n&lt;h1 style=\"text-align:center\"&gt;main page&lt;/h1&gt;\n\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>but it confirm after page already closed?How to do it properly.It would be even better if someone shows how to do it with jquery?Any help would be greatly appreciated.Thanks in advance</p>\n",
            "last_activity_date": 1407413169,
            "question_id": 7080269,
            "score": 51,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "javascript before leaving the page"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>IE requires you to use XDomainRequest instead of XHR for cross site, you can try something like...</p>\n\n<pre><code>if ($.browser.msie &amp;&amp; window.XDomainRequest) {\n            // Use Microsoft XDR\n            var xdr = new XDomainRequest();\n            xdr.open(\"get\", url);\n            xdr.onload = function() {\n                // XDomainRequest doesn't provide responseXml, so if you need it:\n                var dom = new ActiveXObject(\"Microsoft.XMLDOM\");\n                dom.async = false;\n                dom.loadXML(xdr.responseText);\n            };\n            xdr.send();\n        } else {\n            // your ajax request here\n            $$.ajax({\n                   url: thisURL,\n                   dataType: \"json\",\n                   data: {cmd : 'getMessage', uurl: urlVar, t: Math.random()},\n                   success: function(ret){\n                               callback(ret)\n                    }\n            });\n\n        }\n</code></pre>\n\n<p><strong>Reference</strong></p>\n\n<p><a href=\"http://forum.jquery.com/topic/cross-domain-ajax-and-ie\">http://forum.jquery.com/topic/cross-domain-ajax-and-ie</a></p>\n\n<p><em>not sure whether it fits your scenario</em></p>\n\n<pre><code>xdr = new XDomainRequest(); \nxdr.onload=function()\n{\n    alert(xdr.responseText);\n}\nxdr.open(\"GET\", thisUrl); //thisURl -&gt;your cross domain request URL \n//pass your data here\nxdr.send([data]); \n</code></pre>\n\n<p>you can find some more guidance  <a href=\"http://www.xul.fr/ajax/xdomainrequest.html\">here</a></p>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>Check the domain you are accessing, following response headers should be there </p>\n\n<pre><code>\"Access-Control-Allow-Methods\" : \"POST, GET, OPTIONS\"\n\"Access-Control-Allow-Origin\"  : \"http://www.mydomain.com\" or \"*\"\n</code></pre>\n\n<p>the other domain should allow your script request. One more header to be added to your response is P3P header.</p>\n\n<pre><code>\"p3p\" : \"CP=IDC DSP COR ADM DEVi TAIi PSA PSD IVAi IVDi CONi HIS OUR IND CNT\"\n</code></pre>\n\n<p>it should help you out.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had a similar problem and the solution for me was to use jsonp instead of json.  That way I didn't have to break out a customer version for IE.</p>\n\n<p>You can only do this if the json server host supports the callback request variable or you have access to the server and can add support.  Here is a page that helped me understand the process.  Its .net mvc focused, but it gives a good over view of the diffrence between json and jsonp.</p>\n\n<p><a href=\"http://blogorama.nerdworks.in/entry-EnablingJSONPcallsonASPNETMVC.aspx\" rel=\"nofollow\">http://blogorama.nerdworks.in/entry-EnablingJSONPcallsonASPNETMVC.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Have you try to use the lastest of JQuery(> jquery-1.8.0)? Since the version 1.8.0, they solved some IE9's bugs. Perhaps this one too.</p>\n\n<p><a href=\"http://blog.jquery.com/2012/08/30/jquery-1-8-1-released/\" rel=\"nofollow\">http://blog.jquery.com/2012/08/30/jquery-1-8-1-released/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I was facing similar issue. \nI was using file upload control but it was hidden and I had another element trying to control the file upload and events to upload file in ajax way </p>\n\n<p>try using the file upload control directly. this solved issue in my application.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It seems that MS is finding its own way of doing things, rather than adopting industry recommendations. I found the solution here:<br>\n<a href=\"https://github.com/MoonScript/jQuery-ajaxTransport-XDomainRequest/blob/master/jQuery.XDomainRequest.js\" rel=\"nofollow\">https://github.com/MoonScript/jQuery-ajaxTransport-XDomainRequest/blob/master/jQuery.XDomainRequest.js</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This solved the issue gracefully for me:</p>\n\n<p><code>https://github.com/MoonScript/jQuery-ajaxTransport-XDomainRequest</code></p>\n\n<p>Just install/compile after jQuery and before your script and use the $.ajax method as you normally would, the rest is handled behind the automatically.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I get this bug (and thus google here) but the reason was very different. So if you don't have cross site and still get this access denied error: double check the <strong>value</strong> sent<br>\nlet's say that you affect one of you variable with the bad following expression:</p>\n\n<pre><code>urlVar = $(\"theID\").val // without () this was the error!\n</code></pre>\n\n<p>[...]ajax call:</p>\n\n<pre><code>data: {cmd : 'getMessage', uurl: urlVar, t: Math.random()},\n</code></pre>\n\n<p>Google/FF have no problem with this (check what is receive server side...) BUT IE refuse to send this!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Simply add 'callback=?' on your ajax URL request like here:\n<a href=\"http://wsvdmeer.blogspot.com.es/2012/08/bugfix-getjson-not-working-in-ie.html\" rel=\"nofollow\">http://wsvdmeer.blogspot.com.es/2012/08/bugfix-getjson-not-working-in-ie.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an iframe using the jQuery 1.4.2 script. The same iframe is injected into both <code>http</code> and <code>https</code> sites.  The jQuery script is included in the main HTML file as a relative path (e.g., /scripts/jquery-1.4.2.min.js).</p>\n\n<p>When an AJAX call is made, Internet Explorer denies access.  The AJAX is calling on another subdomain, but it's using the right protocol.  All other browsers work but Internet Explorer gives the following error:</p>\n\n<blockquote>\n  <p>SCRIPT5: Access is denied.<br>\n  jquery-1.4.2.min.js, line 127 character 344</p>\n</blockquote>\n\n<p>I heard this error is from cross-domain AJAX calls.  But why is IE the only one giving me crap?  Is there an IE solution?</p>\n\n<p>Also, this is my AJAX:</p>\n\n<pre><code> $.ajax({\n     url: thisURL,\n     dataType: \"json\",\n     data: {cmd : 'getMessage', uurl: urlVar, t: Math.random()},\n     success: function(ret){\n         callback(ret)\n     }\n });\n</code></pre>\n",
            "last_activity_date": 1394621696,
            "question_id": 5087549,
            "score": 39,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "internet-explorer"
            ],
            "title": "Access denied to jQuery script on IE"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>No, it isn't possible to do this with javascript.</p>\n\n<p>In order to give the 'AJAX' feel, however, you can submit a form to a hidden iframe and output the script results to it, then process from there. Google <a href=\"http://www.google.com/search?q=ajax%2Biframe%2Bupload\"><code>ajax iframe upload</code></a> and get started from there.</p>\n\n<p>If you are using jQuery, there is also the  <a href=\"http://malsup.com/jquery/form/\"><code>Form plugin</code></a> which will automatically create this iframe for you if your form has any file fields in it. I haven't used it to do this, but I've heard good things.</p>\n\n<p>As pointed out in the comments, you can also use something like the very popular <a href=\"http://swfupload.org/\"><code>SWFUpload</code></a> to accomplish the desired effect with Flash.</p>\n",
                    "is_accepted": true,
                    "score": 40
                },
                {
                    "body": "<p>Haven't used it personally, but <a href=\"http://ajaxuploader.com/\" rel=\"nofollow\">Ajax Uploader</a> is a component I recently came across which says it can do file uploads inside an UpdatePanel (assuming you're using ASP.NET).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's a bit of detail about how gmail does it, using an iframe:</p>\n\n<p><a href=\"http://www.sajithmr.com/upload-files-like-gmail/\" rel=\"nofollow\">http://www.sajithmr.com/upload-files-like-gmail/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>i use <a href=\"http://swfupload.org/\" rel=\"nofollow\">swfupload</a> for multiple ajax-like uploads (its javascript/flash based)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Strictly speaking there are possibilities to do <a href=\"http://igstan.ro/posts/2009-01-11-ajax-file-upload-with-pure-javascript.html\" rel=\"nofollow\">real AJAX file uploads</a>, but this is only possible in Firefox 3+, Safari 4 and Chrome 2. In all other browsers you must use a workaround like the iframe technique or a Flash based uploader.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Assuming you are using Java, DWR version 3.0 (currently in RC1) has support for binary file upload/download, which makes the problem trivially easy.  I have not had a chance to try this out yet but we use DWR extensively with total success; it is a great Ajax toolkit.</p>\n\n<p><a href=\"http://directwebremoting.org/blog/joe/2008/12/16/dwr_version_3_0_release_candidate_1.html\" rel=\"nofollow\">http://directwebremoting.org/blog/joe/2008/12/16/dwr_version_3_0_release_candidate_1.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Incase anyone is finding this question much later: yes this is possible with JavaScript now.</p>\n\n<p>HTML5 defined 2 new APIs that you use together to accomplish this: Drag and Drop API and the File API. You can use jQuery to interact with the APIs effectively letting people drag and drop files for upload.</p>\n\n<p>Here is <a href=\"http://www.thebuzzmedia.com/html5-drag-and-drop-and-file-api-tutorial/\" rel=\"nofollow\">a tutorial</a> on how to do it.</p>\n\n<p>The code currently works in Chrome 6+ and Firefox 3.6+, Safari 6 and IE 10. If you need Safari 5 support, the code stays almost exactly the same but you use the FormData object instead for the uploaded file list (more information in the post).</p>\n\n<p>Opera supports the File API as of 11, but not the DnD API, the drop operation does not initiate the upload, but they support you getting access to the file with the API. I imagine in 12 they will finish off support for DnD API.</p>\n\n<p>01-20-14 Update: All the major browsers implement all the standard APIs now so this tutorial works in all browsers.</p>\n",
                    "is_accepted": false,
                    "score": 27
                }
            ],
            "body": "<p>I don't want to use jQuery, but I'd like to use Ajax to do file uploading. Is that possible?</p>\n\n<p>If so, where can I find information/tutorial on it?</p>\n",
            "last_activity_date": 1390244172,
            "question_id": 543926,
            "score": 25,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "upload"
            ],
            "title": "Is it possible to use Ajax to do file upload? "
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>As a security measure, Javascript can't read files from different domains. Though there might be some strange workaround for it, I'd consider a different language for this task.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you absolutely need to use javascript, you could load the page source with an ajax request. </p>\n\n<p>Note that with javascript, you can only retrieve pages that are located under the same domain with the requesting page.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could simply use <code>XmlHttp</code> (AJAX) to hit the required URL and the HTML response from the URL will be available in the <code>responseText</code> property. If it's not the same domain, your users will receive a browser alert saying something like \"This page is trying to access a different domain. Do you want to allow this?\"</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Using jquery</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script src=\"http://jqueryjs.googlecode.com/files/jquery-1.3.2.js\" &gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;script&gt;\n$.get(\"www.google.com\", function(response) { alert(response) });\n&lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Javascript can be used, as long as you grab whatever page you're after via a proxy on your domain:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script src=\"/js/jquery-1.3.2.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;script&gt;\n$.get(\"www.mydomain.com/?url=www.google.com\", function(response) { \n    alert(response) \n});\n&lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>Simple way to start, try <a href=\"http://jquery.com/\" rel=\"nofollow\">jQuery</a></p>\n\n<pre><code>$(\"#links\").load(\"/Main_Page #jq-p-Getting-Started li\");\n</code></pre>\n\n<p>More at <a href=\"http://docs.jquery.com/Ajax/load\" rel=\"nofollow\">jQuery Docs</a></p>\n\n<p>Another way to do screen scraping in a much more structured way is to use <a href=\"http://developer.yahoo.com/yql/console/\" rel=\"nofollow\">YQL or Yahoo Query Language.</a> It will return the scraped data structured as JSON or xml.<br>\n<em>e.g.</em><br>\nLet's scrape stackoverflow.com</p>\n\n<pre><code>select * from html where url=\"http://stackoverflow.com\"\n</code></pre>\n\n<p>will give you a JSON array (I chose that option) like this   </p>\n\n<pre><code> \"results\": {\n   \"body\": {\n    \"noscript\": [\n     {\n      \"div\": {\n       \"id\": \"noscript-padding\"\n      }\n     },\n     {\n      \"div\": {\n       \"id\": \"noscript-warning\",\n       \"p\": \"Stack Overflow works best with JavaScript enabled\"\n      }\n     }\n    ],\n    \"div\": [\n     {\n      \"id\": \"notify-container\"\n     },\n     {\n      \"div\": [\n       {\n        \"id\": \"header\",\n        \"div\": [\n         {\n          \"id\": \"hlogo\",\n          \"a\": {\n           \"href\": \"/\",\n           \"img\": {\n            \"alt\": \"logo homepage\",\n            \"height\": \"70\",\n            \"src\": \"http://i.stackoverflow.com/Content/Img/stackoverflow-logo-250.png\",\n            \"width\": \"250\"\n           }\n\u2026\u2026..\n</code></pre>\n\n<p>The beauty of this is that you can do <strong><em>projections and where</em></strong> clauses which ultimately gets you the scraped data structured and <em>only the data</em> what you need (much less bandwidth over the wire ultimately)<br>\n<em>e.g</em> </p>\n\n<pre><code>select * from html where url=\"http://stackoverflow.com\" and\n      xpath='//div/h3/a'\n</code></pre>\n\n<p>will get you   </p>\n\n<pre><code> \"results\": {\n   \"a\": [\n    {\n     \"href\": \"/questions/414690/iphone-simulator-port-for-windows-closed\",\n     \"title\": \"Duplicate: Is any Windows simulator available to test iPhone application? as a hobbyist who cannot afford a mac, i set up a toolchain kit locally on cygwin to compile objecti \u2026 \",\n     \"content\": \"iphone\\n                simulator port for windows [closed]\"\n    },\n    {\n     \"href\": \"/questions/680867/how-to-redirect-the-web-page-in-flex-application\",\n     \"title\": \"I have a button control ....i need another web page to be redirected while clicking that button .... how to do that ? Thanks \",\n     \"content\": \"How\\n                to redirect the web page in flex application ?\"\n    },\n\u2026..\n</code></pre>\n\n<p>Now to get only the questions we do a </p>\n\n<pre><code>select title from html where url=\"http://stackoverflow.com\" and\n      xpath='//div/h3/a'\n</code></pre>\n\n<p>Note the <em>title</em> in projections </p>\n\n<pre><code> \"results\": {\n   \"a\": [\n    {\n     \"title\": \"I don't want the function to be entered simultaneously by multiple threads, neither do I want it to be entered again when it has not returned yet. Is there any approach to achieve \u2026 \"\n    },\n    {\n     \"title\": \"I'm certain I'm doing something really obviously stupid, but I've been trying to figure it out for a few hours now and nothing is jumping out at me. I'm using a ModelForm so I can \u2026 \"\n    },\n    {\n     \"title\": \"when i am going through my project in IE only its showing errors A runtime error has occurred Do you wish to debug? Line 768 Error:Expected')' Is this is regarding any script er \u2026 \"\n    },\n    {\n     \"title\": \"I have a java batch file consisting of 4 execution steps written for analyzing any Java application. In one of the steps, I'm adding few libs in classpath that are needed for my co \u2026 \"\n    },\n    {\n\u2026\u2026\n</code></pre>\n\n<p>Once you write your query it generates a url for you   </p>\n\n<p><a href=\"http://query.yahooapis.com/v1/public/yql?q=select%20title%20from%20html%20where%20url%3D%22http%3A%2F%2Fstackoverflow.com%22%20and%0A%20%20%20%20%20%20xpath%3D&#39;%2F%2Fdiv%2Fh3%2Fa&#39;%0A%20%20%20%20&amp;format=json&amp;callback=cbfunc\" rel=\"nofollow\">http://query.yahooapis.com/v1/public/yql?q=select%20title%20from%20html%20where%20url%3D%22http%3A%2F%2Fstackoverflow.com%22%20and%0A%20%20%20%20%20%20xpath%3D'%2F%2Fdiv%2Fh3%2Fa'%0A%20%20%20%20&amp;format=json&amp;callback=cbfunc</a></p>\n\n<p>in our case.  </p>\n\n<p>So ultimately you end up doing something like this  </p>\n\n<pre><code>var titleList = $.getJSON(theAboveUrl);\n</code></pre>\n\n<p>and play with it.  </p>\n\n<p><strong><em>Beautiful</em></strong>, isn\u2019t it?</p>\n",
                    "is_accepted": false,
                    "score": 51
                },
                {
                    "body": "<p>You can generate a XmlHttpRequest and request the page,and then use getResponseText() to get the content.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FileReader\" rel=\"nofollow\">FileReader API</a> to get a file, and when selecting a file, put the url of your web page into the selection box.\nUse this code:</p>\n\n<pre><code>function readFile() {\n    var f = document.getElementById(\"yourfileinput\").files[0]; \n    if (f) {\n      var r = new FileReader();\n      r.onload = function(e) { \n        alert(r.result);\n      }\n      r.readAsText(f);\n    } else { \n      alert(\"file could not be found\")\n    }\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can bypass the same-origin-policy by either creating a browser extension or even saving the file as .hta in Windows (HTML Application).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Despite many comments to the contrary I believe that it is possible to overcome the same origin requirement with simple JavaScript.</p>\n\n<p>I am not claiming that the following is original because I believe I saw something similar elsewhere a while ago.</p>\n\n<p>I have only tested this with Safari on a Mac.</p>\n\n<p>The following demonstration fetches the page in the base tag and and moves its innerHTML to a new window. My script adds html tags but with most modern browsers this could be avoided by using outerHTML.</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;base href='http://apod.nasa.gov/apod/'&gt;\n&lt;title&gt;test&lt;/title&gt;\n&lt;style&gt;\nbody { margin: 0 }\ntextarea { outline: none; padding: 2em; width: 100%; height: 100% }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body onload=\"w=window.open('#'); x=document.getElementById('t'); a='&lt;html&gt;\\n'; b='\\n&lt;/html&gt;'; setTimeout('x.innerHTML=a+w.document.documentElement.innerHTML+b; w.close()',2000)\"&gt;\n&lt;textarea id=t&gt;&lt;/textarea&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I am working on screen scraping, and want to retrieve the source code a particular page. </p>\n\n<p>How can achieve this with javascript? Please help me.</p>\n",
            "last_activity_date": 1425648570,
            "question_id": 680562,
            "score": 23,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Can Javascript read the source of any web page?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Since you have written a function named <code>foo</code> and you know it is in <code>myfile.js</code> why do you need to get this information dynamically?</p>\n\n<p>That being said you can use <code>arguments.callee.toString()</code> inside the function (this is a string representation of the entire function) and regex out the value of the function name.</p>\n\n<p>Here is a function that will spit out its own name:</p>\n\n<pre><code>function foo() {\n    re = /^function\\s+([^(]+)/\n    alert(re.exec(arguments.callee.toString())[1]);\t\t\t\t\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try:</p>\n\n<pre><code>alert(arguments.callee.toString());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>You should be able to get it by using <code>arguments.callee</code>.</p>\n\n<p>You may have to parse out the name though, as it will probably include some extra junk.  Though, in some implementations you can simply get the name using <code>arguments.callee.name</code>.</p>\n\n<p>Parsing:</p>\n\n<pre><code>function DisplayMyName() \n{\n   var myName = arguments.callee.toString();\n   myName = myName.substr('function '.length);\n   myName = myName.substr(0, myName.indexOf('('));\n\n   alert(myName);\n}\n</code></pre>\n\n<blockquote>\n  <p><strong>Edit:</strong> The code sample above is a slightly-modified copy taken from <a href=\"http://www.tek-tips.com/viewthread.cfm?qid=1209619\">Javascript - get current function name</a>.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 79
                },
                {
                    "body": "<p>For non-anonymous functions </p>\n\n<pre><code>function foo()\n{ \n    alert(arguments.callee.name)\n}\n</code></pre>\n\n<p>But in case of an error handler the result would be the name of the error handler function, wouldn't it?</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>This should do it:</p>\n\n<pre><code>var fn = arguments.callee.toString().match(/function\\s+([^\\s\\(]+)/);\nalert(fn[1]);\n</code></pre>\n\n<p>For the caller, just use <code>caller.toString()</code>.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>This has to go in the category of \"world's ugliest hacks\", but here you go.</p>\n\n<p>First up, printing the name of the <em>current</em> function (as in the other answers) seems to have limited use to me, since you kind of already know what the function is!</p>\n\n<p>However, finding out the name of the <em>calling</em> function could be pretty useful for a trace function.  This is with a regexp, but using indexOf would be about 3x faster:</p>\n\n<pre><code>function getFunctionName() {\n    var re = /function (.*?)\\(/\n    var s = getFunctionName.caller.toString();\n    var m = re.exec( s )\n    return m[1];\n}\n\nfunction me() {\n    console.log( getFunctionName() );\n}\n\nme();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Another use case could be an event dispatcher bound at runtime:</p>\n\n<pre><code>MyClass = function () {\n  this.events = {};\n\n  // Fire up an event (most probably from inside an instance method)\n  this.OnFirstRun();\n\n  // Fire up other event (most probably from inside an instance method)\n  this.OnLastRun();\n\n}\n\nMyClass.prototype.dispatchEvents = function () {\n  var EventStack=this.events[GetFunctionName()], i=EventStack.length-1;\n\n  do EventStack[i]();\n  while (i--);\n}\n\nMyClass.prototype.setEvent = function (event, callback) {\n  this.events[event] = [];\n  this.events[event].push(callback);\n  this[\"On\"+event] = this.dispatchEvents;\n}\n\nMyObject = new MyClass();\nMyObject.setEvent (\"FirstRun\", somecallback);\nMyObject.setEvent (\"FirstRun\", someothercallback);\nMyObject.setEvent (\"LastRun\", yetanothercallback);\n</code></pre>\n\n<p>The advantage here is the dispatcher can be easily reused and doesn't have to receive the dispatch queue as an argument, instead it comes implicit with the invocation name...</p>\n\n<p>In the end, the general case presented here would be \"using the function name as an argument so you don't have to pass it explicitly\", and that could be useful in many cases, such as the jquery animate() optional callback, or in timeouts/intervals callbacks, (ie you only pass a funcion NAME).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The answer is short:</p>\n\n<pre><code>alert(arguments.callee.nom);\n</code></pre>\n\n<p>And this is it.</p>\n",
                    "is_accepted": false,
                    "score": -6
                },
                {
                    "body": "<p>A combination of the few responses I've seen here.  (Tested in FF, Chrome, IE11)</p>\n\n<pre><code>function functionName() \n{\n   var myName = functionName.caller.toString();\n   myName = myName.substr('function '.length);\n   myName = myName.substr(0, myName.indexOf('('));\n   return myName;\n}\n\nfunction randomFunction(){\n    var proof = \"This proves that I found the name '\" + functionName() + \"'\";\n    alert(proof);\n}\n</code></pre>\n\n<p>Calling randomFunction() will alert a string that contains the function name.</p>\n\n<p>JS Fiddle Demo: <a href=\"http://jsfiddle.net/mjgqfhbe/\" rel=\"nofollow\">http://jsfiddle.net/mjgqfhbe/</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>An updated answer to this can can be found over at this answer:\n<a href=\"http://stackoverflow.com/a/2161470/632495\">http://stackoverflow.com/a/2161470/632495</a></p>\n\n<p>and, if you don't feel like clicking:</p>\n\n<pre><code>function test() {\n  var z = arguments.callee.name;\n  console.log(z);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to do this:</p>\n\n<pre><code>myfile.js:\nfunction foo() {\n    alert(&lt;my-function-name&gt;);\n    // pops-up \"foo\"\n    // or even better: \"myfile.js : foo\"\n}\n</code></pre>\n\n<p>I've got the Dojo and jQuery frameworks in my stack, so if either of those make it easier, they're available.</p>\n",
            "last_activity_date": 1423804308,
            "question_id": 1013239,
            "score": 66,
            "tags": [
                "javascript",
                "jquery",
                "dojo"
            ],
            "title": "Can I get the name of the currently running function in JavaScript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The below URL contains all about setting and getting cookie values via JS.\n<a href=\"http://www.w3schools.com/js/js_cookies.asp\" rel=\"nofollow\">http://www.w3schools.com/js/js_cookies.asp</a></p>\n\n<p>Just use the setCookie and getCookie methods mentioned there.</p>\n\n<p>So, the code will look something like:</p>\n\n<pre><code>&lt;script&gt;\nfunction setCookie(c_name, value, exdays) {\n    var exdate = new Date();\n    exdate.setDate(exdate.getDate() + exdays);\n    var c_value = escape(value) + ((exdays == null) ? \"\" : \"; expires=\" + exdate.toUTCString());\n    document.cookie = c_name + \"=\" + c_value;\n}\n\nfunction getCookie(c_name) {\n    var i, x, y, ARRcookies = document.cookie.split(\";\");\n    for (i = 0; i &lt; ARRcookies.length; i++) {\n        x = ARRcookies[i].substr(0, ARRcookies[i].indexOf(\"=\"));\n        y = ARRcookies[i].substr(ARRcookies[i].indexOf(\"=\") + 1);\n        x = x.replace(/^\\s+|\\s+$/g, \"\");\n        if (x == c_name) {\n            return unescape(y);\n        }\n    }\n}\n\nfunction cssSelected() {\n    var cssSelected = $('#myList')[0].value;\n    if (cssSelected !== \"select\") {\n        setCookie(\"selectedCSS\", cssSelected, 3);\n    }\n}\n\n$(document).ready(function() {\n    $('#myList')[0].value = getCookie(\"selectedCSS\");\n})\n&lt;/script&gt;\n&lt;select id=\"myList\" onchange=\"cssSelected();\"&gt;\n    &lt;option value=\"select\"&gt;--Select--&lt;/option&gt;\n    &lt;option value=\"style-1.css\"&gt;CSS1&lt;/option&gt;\n    &lt;option value=\"style-2.css\"&gt;CSS2&lt;/option&gt;\n    &lt;option value=\"style-3.css\"&gt;CSS3&lt;/option&gt;\n    &lt;option value=\"style-4.css\"&gt;CSS4&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>These are <em>much</em> *much* better references than w3schools (the most awful web reference ever made):</p>\n\n<ul>\n<li><a href=\"http://www.quirksmode.org/js/cookies.html\">http://www.quirksmode.org/js/cookies.html</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/document.cookie\">https://developer.mozilla.org/en-US/docs/Web/API/document.cookie</a></li>\n</ul>\n\n<p>Examples derived from these references:</p>\n\n<pre><code>// sets the cookie cookie1\ndocument.cookie =\n 'cookie1=test; expires=Fri, 3 Aug 2001 20:47:11 UTC; path=/'\n\n// sets the cookie cookie2 (cookie1 is *not* overwritten)\ndocument.cookie =\n 'cookie2=test; expires=Fri, 3 Aug 2001 20:47:11 UTC; path=/'\n\n// remove cookie2\ndocument.cookie = 'cookie2=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/'\n</code></pre>\n\n<p>The mozilla reference even has a nice cookie library you can use.</p>\n",
                    "is_accepted": false,
                    "score": 120
                },
                {
                    "body": "<p>I'm sure this question should have a more general answer with some reusable code that works with cookies as key-value pairs.</p>\n\n<p>This snippet is taken from <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/document.cookie\" rel=\"nofollow\">MDN</a> and probably is trustable. This is UTF-safe object for work with cookies:</p>\n\n<pre><code>var docCookies = {\n  getItem: function (sKey) {\n    return decodeURIComponent(document.cookie.replace(new RegExp(\"(?:(?:^|.*;)\\\\s*\" + encodeURIComponent(sKey).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&amp;\") + \"\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$\"), \"$1\")) || null;\n  },\n  setItem: function (sKey, sValue, vEnd, sPath, sDomain, bSecure) {\n    if (!sKey || /^(?:expires|max\\-age|path|domain|secure)$/i.test(sKey)) { return false; }\n    var sExpires = \"\";\n    if (vEnd) {\n      switch (vEnd.constructor) {\n        case Number:\n          sExpires = vEnd === Infinity ? \"; expires=Fri, 31 Dec 9999 23:59:59 GMT\" : \"; max-age=\" + vEnd;\n          break;\n        case String:\n          sExpires = \"; expires=\" + vEnd;\n          break;\n        case Date:\n          sExpires = \"; expires=\" + vEnd.toUTCString();\n          break;\n      }\n    }\n    document.cookie = encodeURIComponent(sKey) + \"=\" + encodeURIComponent(sValue) + sExpires + (sDomain ? \"; domain=\" + sDomain : \"\") + (sPath ? \"; path=\" + sPath : \"\") + (bSecure ? \"; secure\" : \"\");\n    return true;\n  },\n  removeItem: function (sKey, sPath, sDomain) {\n    if (!sKey || !this.hasItem(sKey)) { return false; }\n    document.cookie = encodeURIComponent(sKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + ( sDomain ? \"; domain=\" + sDomain : \"\") + ( sPath ? \"; path=\" + sPath : \"\");\n    return true;\n  },\n  hasItem: function (sKey) {\n    return (new RegExp(\"(?:^|;\\\\s*)\" + encodeURIComponent(sKey).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&amp;\") + \"\\\\s*\\\\=\")).test(document.cookie);\n  },\n  keys: /* optional method: you can safely remove it! */ function () {\n    var aKeys = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\n    for (var nIdx = 0; nIdx &lt; aKeys.length; nIdx++) { aKeys[nIdx] = decodeURIComponent(aKeys[nIdx]); }\n    return aKeys;\n  }\n};\n</code></pre>\n\n<p>Mozilla has some tests to prove this works in all cases.</p>\n\n<p>There is an alternative snippet <a href=\"http://mdn.beonex.com/en/DOM/document.cookie.html\" rel=\"nofollow\">here</a>:</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I find the following code to be much simpler than anything else:</p>\n\n<pre><code>function createCookie(name,value,days) {\n    if (days) {\n        var date = new Date();\n        date.setTime(date.getTime()+(days*24*60*60*1000));\n        var expires = \"; expires=\"+date.toGMTString();\n    }\n    else var expires = \"\";\n    document.cookie = name+\"=\"+value+expires+\"; path=/\";\n}\n\nfunction readCookie(name) {\n    var nameEQ = name + \"=\";\n    var ca = document.cookie.split(';');\n    for(var i=0;i &lt; ca.length;i++) {\n        var c = ca[i];\n        while (c.charAt(0)==' ') c = c.substring(1,c.length);\n        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\n    }\n    return null;\n}\n\nfunction eraseCookie(name) {\n    createCookie(name,\"\",-1);\n}\n</code></pre>\n\n<p><strong>Now, calling functions</strong></p>\n\n<pre><code>createCookie('ppkcookie','testcookie',7);\n\nvar x = readCookie('ppkcookie')\nif (x) {\n    [do something with x]\n}\n</code></pre>\n\n<p>Source - <a href=\"http://www.quirksmode.org/js/cookies.html\">http://www.quirksmode.org/js/cookies.html</a></p>\n\n<p>They updated the page today so everything in the page should be latest as of now.</p>\n",
                    "is_accepted": false,
                    "score": 49
                }
            ],
            "body": "<p>I'm trying to set a cookie depending on which css file i choose in my Html. I have a form with a list of options, and different css files as values. When I choose a file, it should be saved to a cookie for about a week. The next time you open your html file, it should be the previous file you've chosen.</p>\n\n<p>JavaScript code:</p>\n\n<pre><code>function cssLayout() {\n    document.getElementById(\"css\").href = this.value;\n}\n\n\nfunction setCookie(){\n    var datum = new Date(\"Februari 10, 2013\");\n    var kakdatum = datum.toGMTString();\n    var kaka = \"Css=document.getElementById(\"css\").href\" + kakdatum;\n    document.cookie = kaka;\n}\n\nfunction getCookie(){\n    alert(document.cookie);\n}\n</code></pre>\n\n<p>HTML code:</p>\n\n<pre><code>&lt;form&gt;\n    Select your css layout:&lt;br&gt;\n    &lt;select id=\"myList\"&gt;\n        &lt;option value=\"style-1.css\"&gt;CSS1&lt;/option&gt;\n        &lt;option value=\"style-2.css\"&gt;CSS2&lt;/option&gt;  \n        &lt;option value=\"style-3.css\"&gt;CSS3&lt;/option&gt;\n        &lt;option value=\"style-4.css\"&gt;CSS4&lt;/option&gt;\n    &lt;/select&gt;\n&lt;/form&gt;\n</code></pre>\n",
            "last_activity_date": 1424426673,
            "question_id": 14573223,
            "score": 62,
            "tags": [
                "javascript",
                "html",
                "css",
                "cookies"
            ],
            "title": "Set cookie and get cookie with JavaScript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>See this article.\nThe feature you are looking for is the <a href=\"http://msdn.microsoft.com/en-us/library/ms536907%28VS.85%29.aspx\">onbeforeunload</a></p>\n\n<p>sample code:</p>\n\n<pre><code>  &lt;script language=\"JavaScript\"&gt;\n  window.onbeforeunload = confirmExit;\n  function confirmExit()\n  {\n    return \"You have attempted to leave this page.  If you have made any changes to the fields without clicking the Save button, your changes will be lost.  Are you sure you want to exit this page?\";\n  }\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Similar to Ghommey's answer, but this also supports old versions of IE and Firefox.</p>\n\n<pre><code>window.onbeforeunload = function (e) {\n  var message = \"Your confirmation message goes here.\",\n  e = e || window.event;\n  // For IE and Firefox\n  if (e) {\n    e.returnValue = message;\n  }\n\n  // For Safari\n  return message;\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 72
                },
                {
                    "body": "<p>Instead of an annoying confirmation popup, it would be nice to <b>delay leaving</b> just a bit (matter of milliseconds) to manage successfully posting the unsaved data to the server, which I managed for my site using writing dummy text to the console like this:</p>\n\n<pre><code>window.onbeforeunload=function(e){\n  // only take action (iterate) if my SCHEDULED_REQUEST object contains data        \n  for (var key in SCHEDULED_REQUEST){   \n    postRequest(SCHEDULED_REQUEST); // post and empty SCHEDULED_REQUEST object\n    for (var i=0;i&lt;1000;i++){\n      // do something unnoticable but time consuming like writing a lot to console\n      console.log('buying some time to finish saving data'); \n    };\n    break;\n  };\n}; // no return string --&gt; user will leave as normal but data is send to server\n</code></pre>\n\n<p><strong>Edit:</strong>\nSee also <a href=\"http://hunlock.com/blogs/Snippets%3a_Synchronous_AJAX\" rel=\"nofollow\">Synchronous_AJAX</a> and how to do that with <a href=\"http://stackoverflow.com/a/1572646/847331\">jquery</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have users who have not been completing all required data.</p>\n\n<pre><code>&lt;cfset unloadCheck=0&gt;//a ColdFusion precheck in my page generation to see if unload check is needed\nvar erMsg=\"\";\n$(document).ready(function(){\n&lt;cfif q.myData eq \"\"&gt;\n    &lt;cfset unloadCheck=1&gt;\n    $(\"#myInput\").change(function(){\n        verify(); //function elsewhere that checks all fields and populates erMsg with error messages for any fail(s)\n        if(erMsg==\"\") window.onbeforeunload = null; //all OK so let them pass\n        else window.onbeforeunload = confirmExit(); //borrowed from Jantimon above;\n    });\n});\n&lt;cfif unloadCheck&gt;&lt;!--- if any are outstanding, set the error message and the unload alert ---&gt;\n    verify();\n    window.onbeforeunload = confirmExit;\n    function confirmExit() {return \"Data is incomplete for this Case:\"+erMsg;}\n&lt;/cfif&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>When editing a page within my system, a user might decide to navigate to another website and in doing so could lose all the edits they have not saved.</p>\n\n<p>I would like to intercept any attempt to go to another page and prompt the user to be sure they want this to happen since they could potentially lose their current work.</p>\n\n<p>Gmail does this in a very similar way.  For example, compose a new email, start typing into the message body and enter a new location in the address bar (say twitter.com or something).  It will prompt like so:\n<img src=\"http://blog.chrisballance.com/content/binary/areyousure.png\" alt=\"alt text\"></p>\n\n<p>Ideas how to replicate this?  I'm targeting IE8, but would like to be compatible with FF &amp; Chrome also.</p>\n",
            "last_activity_date": 1420756682,
            "question_id": 1704533,
            "score": 65,
            "tags": [
                "javascript",
                "javascript-events",
                "internet-explorer"
            ],
            "title": "Intercept page exit event"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><a href=\"http://github.com/kangax/protolicious/blob/5b56fdafcd7d7662c9d648534225039b2e78e371/event.simulate.js\"><code>event.simulate.js</code></a> fits your needs.</p>\n\n<p>I've used this several times and it works like a charm. It allows you to <strong>manually trigger native events</strong>, such as click or hover like so:</p>\n\n<pre><code>$('foo').simulate('click');\n</code></pre>\n\n<p>The great thing about this is that all attached event handlers will still be executed, just as if you would have clicked the element yourself.</p>\n\n<p>For <strong>custom events</strong> you can use the standard prototype method <a href=\"http://www.prototypejs.org/api/element/fire\"><code>Event.fire()</code></a>.</p>\n",
                    "is_accepted": true,
                    "score": 77
                },
                {
                    "body": "<p>I don't think there is one built in to Prototype, but you can use this (not tested but should at least get you in the right direction):</p>\n\n<pre><code>Element.prototype.triggerEvent = function(eventName)\n{\n    if (document.createEvent)\n    {\n        var evt = document.createEvent('HTMLEvents');\n        evt.initEvent(eventName, true, true);\n\n        return this.dispatchEvent(evt);\n    }\n\n    if (this.fireEvent)\n        return this.fireEvent('on' + eventName);\n}\n\n$('foo').triggerEvent('mouseover');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>I found this post helpful... <a href=\"http://jehiah.cz/archive/firing-javascript-events-properly\" rel=\"nofollow\">http://jehiah.cz/archive/firing-javascript-events-properly</a></p>\n\n<p>It covers a way to fire events in both Firefox and IE.</p>\n\n<pre><code>function fireEvent(element,event){\n    if (document.createEventObject){\n        // dispatch for IE\n        var evt = document.createEventObject();\n        return element.fireEvent('on'+event,evt)\n    }\n    else{\n        // dispatch for firefox + others\n        var evt = document.createEvent(\"HTMLEvents\");\n        evt.initEvent(event, true, true ); // event type,bubbling,cancelable\n        return !element.dispatchEvent(evt);\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The answers here are true for \"Normal\" events, that is events which are defined by the User Agent, but for custom events you should use prototype's \"fire\" method. e.g.</p>\n\n<pre><code>$('something').observe('my:custom', function() { alert('Custom'); });\n.\n.\n$('something').fire('my:custom'); // This will cause the alert to display\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Does anybody know of a method to trigger an event in Prototype, as you can with jQuery's trigger function?</p>\n\n<p>I have bound an event listener using the observe method, but I would also like to be able to fire the event programatically.</p>\n\n<p>Thanks in advance</p>\n",
            "last_activity_date": 1325071676,
            "question_id": 460644,
            "score": 54,
            "tags": [
                "javascript",
                "events",
                "prototypejs"
            ],
            "title": "Trigger an event with Prototype"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>If you can draw the image in a canvas element then you can use the <a href=\"http://dev.w3.org/html5/spec/Overview.html#pixel-manipulation\"><code>getImageData</code></a> method to return an array containing RGBA values.</p>\n\n<pre><code>var img = new Image();\nimg.src = 'image.jpg';\nvar context = document.getElementById('canvas').getContext('2d');\ncontext.drawImage(img, 0, 0);\ndata = context.getImageData(x, y, 1, 1).data;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>I searched for a way to count green pixels in an image, ended up writing my own functions. Here you go</p>\n\n<h1>The magic \u00ae</h1>\n\n<pre><code>function getPixel(imgData, index) {\n  var i = index*4, d = imgData.data;\n  return [d[i],d[i+1],d[i+2],d[i+3]] // [R,G,B,A]\n}\n\n// AND/OR\n\nfunction getPixelXY(imgData, x, y) {\n  return getPixel(imgData, y*imgData.width+x);\n}\n</code></pre>\n\n<h1>Where do you get imgData?</h1>\n\n<ol>\n<li>create <code>&lt;canvas&gt;</code></li>\n<li>get canvas <code>context</code></li>\n<li>copy <code>&lt;img&gt;</code> to <code>&lt;canvas&gt;</code></li>\n<li>get canvas image data (an array of values <code>[r,g,b,a,r,g,b,a,r,g,..]</code>)</li>\n<li><strong>do `The magic`\u00ae</strong>  </li>\n</ol>\n\n<h2>le code:</h2>\n\n<pre><code>var cvs = document.createElement('canvas'),\n    img = document.getElementsByTagName(\"img\")[0];   // your image goes here\n    // img = $('#yourImage')[0];                     // can use jquery for selection\ncvs.width = img.width; cvs.height = img.height;\nvar ctx = cvs.getContext(\"2d\");\nctx.drawImage(img,0,0,cvs.width,cvs.height);\nvar idt = ctx.getImageData(0,0,cvs.width,cvs.height);\n\n// The magic\u00ae\ngetPixel(idt, 852);  // returns array [red, green, blue, alpha]\ngetPixelXY(idt,1,1); // same pixel using x,y\n</code></pre>\n\n<p>For a working example see source code of <a href=\"http://qry.me/xyscope/\" rel=\"nofollow\">http://qry.me/xyscope/</a></p>\n\n<p>//Damn, I had fun making this answer.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How to use javascript or jQuery to read the color of a pixel of an image when user click on it? (of course we have the (x,y) value of this pixel by subscribing to the click event).</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1419946861,
            "question_id": 1041399,
            "score": 29,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to use javascript or jQuery to read a pixel of an image?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>See <a href=\"http://medienfreunde.com/lab/innerfade/\" rel=\"nofollow\">InnerFade</a>.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    $(document).ready(\n\n    function() {\n        $('#portfolio').innerfade({\n            speed: 'slow',\n            timeout: 10000,\n            type: 'sequence',\n            containerheight: '220px'\n        });\n    });\n&lt;/script&gt;\n&lt;ul id=\"portfolio\"&gt;\n    &lt;li&gt;\n        &lt;a href=\"http://medienfreunde.com/deutsch/referenzen/kreation/good_guy__bad_guy.html\"&gt;\n        &lt;img src=\"images/ggbg.gif\" alt=\"Good Guy bad Guy\" /&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;a href=\"http://medienfreunde.com/deutsch/referenzen/kreation/whizzkids.html\"&gt;\n        &lt;img src=\"images/whizzkids.gif\" alt=\"Whizzkids\" /&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;a href=\"http://medienfreunde.com/deutsch/referenzen/printdesign/koenigin_mutter.html\"&gt;\n        &lt;img src=\"images/km.jpg\" alt=\"K\u00f6nigin Mutter\" /&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;a href=\"http://medienfreunde.com/deutsch/referenzen/webdesign/rt_reprotechnik_-_hybride_archivierung.html\"&gt;\n        &lt;img src=\"images/rt_arch.jpg\" alt=\"RT Hybride Archivierung\" /&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;a href=\"http://medienfreunde.com/deutsch/referenzen/kommunikation/tuev_sued_gruppe.html\"&gt;\n        &lt;img src=\"images/tuev.jpg\" alt=\"T\u00dcV S\u00dcD Gruppe\" /&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><strong><a href=\"http://jsbin.com/acumo\">Working Example</a></strong> here - add <strong>/edit</strong> to the URL to play with the code</p>\n\n<p>You just need to use JavaScript <a href=\"https://developer.mozilla.org/En/Window.setInterval\"><code>setInterval</code></a> function</p>\n\n<pre><code>$('html').addClass('js');\n\n$(function() {\n\n  var timer = setInterval( showDiv, 5000);\n\n  var counter = 0;\n\n  function showDiv() {\n    if (counter ==0) { counter++; return; }\n\n    $('div','#container')\n      .stop()\n      .hide()\n      .filter( function() { return this.id.match('div' + counter); })   \n      .show('fast');\n    counter == 3? counter = 0 : counter++; \n\n  }\n\n});\n</code></pre>\n\n<p>and the HTML</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n   \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\"&gt;\n\n   &lt;head&gt;\n      &lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js\"&gt;&lt;/script&gt;\n      &lt;title&gt;Sandbox&lt;/title&gt;\n      &lt;meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\" /&gt;\n      &lt;style type=\"text/css\" media=\"screen\"&gt;\n         body { background-color: #fff; font: 16px Helvetica, Arial; color: #000; }\n         .display { width:300px; height:200px; border: 2px solid #000; }\n         .js .display { display:none; }\n      &lt;/style&gt;\n   &lt;/head&gt;\n\n   &lt;body&gt;\n      &lt;h2&gt;Example of using setInterval to trigger display of Div&lt;/h2&gt;\n      &lt;p&gt;The first div will display after 10 seconds...&lt;/p&gt;\n      &lt;div id='container'&gt;\n      &lt;div id='div1' class='display' style=\"background-color: red;\"&gt; \n         div1\n      &lt;/div&gt;\n      &lt;div id='div2' class='display' style=\"background-color: green;\"&gt; \n         div2\n      &lt;/div&gt;\n      &lt;div id='div3' class='display' style=\"background-color: blue;\"&gt; \n         div3\n      &lt;/div&gt;\n      &lt;div&gt;\n   &lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>EDIT:</strong></p>\n\n<p>In response to your comment about the container div, just modify this</p>\n\n<pre><code>$('div','#container')\n</code></pre>\n\n<p>to this</p>\n\n<pre><code>$('#div1, #div2, #div3')\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>Loop through divs every 10 seconds. </p>\n\n<pre><code>$(function () {\n\n    var counter = 0,\n        divs = $('#div1, #div2, #div3');\n\n    function showDiv () {\n        divs.hide() // hide all divs\n            .filter(function (index) { return index == counter % 3; }) // figure out correct div to show\n            .show('fast'); // and show it\n\n        counter++;\n    }; // function to loop through divs and show correct div\n\n    showDiv(); // show first div    \n\n    setInterval(function () {\n        showDiv(); // show next div\n    }, 10 * 1000); // do this every 10 seconds    \n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>here is a jQuery plugin I came up with:</p>\n\n<pre><code>$.fn.cycle = function(timeout){\n    var $all_elem = $(this)\n\n    show_cycle_elem = function(index){\n        if(index == $all_elem.length) return; //you can make it start-over, if you want\n        $all_elem.hide().eq(index).fadeIn()\n        setTimeout(function(){show_cycle_elem(++index)}, timeout);\n    }\n    show_cycle_elem(0);\n}\n</code></pre>\n\n<p>You need to have a common classname for all the divs you wan to cycle, use it like this:</p>\n\n<pre><code>$(\"div.cycleme\").cycle(5000)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Try this</p>\n\n<pre><code>      $('document').ready(function(){\n         window.setTimeout('test()',time in milliseconds);\n      });\n\n      function test(){\n\n      $('#divid').hide();\n\n      } \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I would like to show divs at a specific interval (10 seconds) and show next div and as go on and repeat the same. <br/></p>\n\n<p>**</p>\n\n<blockquote>\n  <p><strong><em>Sequence :</em></strong></p>\n</blockquote>\n\n<p>**\nOn 10th second\nshow div1 , hide other divs ,<br>\nAfter 5seconds interval \nShow div 2 and hide other divs, <br>\nAfter 5 seconds interval\nShow div 3 and hide other divs, <br /> \nand repeat the same for every 10 seconds.</p>\n\n<p><hr /></p>\n\n<blockquote>\n  <p><strong><em>Code Follows:</em></strong></p>\n</blockquote>\n\n<p><hr /></p>\n\n<pre><code>&lt;div id='div1' style=\"display:none;\"&gt; \n  &lt;!-- content --&gt;\n&lt;/div&gt;\n\n&lt;div id='div2' style=\"display:none;\"&gt; \n  &lt;!-- content --&gt;\n&lt;/div&gt;\n\n&lt;div id='div3' style=\"display:none;\"&gt; \n  &lt;!-- content --&gt;\n&lt;/div&gt;\n</code></pre>\n",
            "last_activity_date": 1384007611,
            "question_id": 914951,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "html",
                "timeout"
            ],
            "title": "Show and hide divs at a specific time interval using jQuery"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Some browsers use <code>keyCode</code>, others use <code>which</code>. If you're using jQuery, you can reliably use <code>which</code> as jQuery <a href=\"http://api.jquery.com/category/events/event-object/\">standardizes things</a>. Actually, I think you can reliably use either (with jQuery). <a href=\"http://unixpapa.com/js/key.html\">More here.</a></p>\n",
                    "is_accepted": true,
                    "score": 58
                },
                {
                    "body": "<p>jQuery normalises <code>event.which</code> depending on whether <code>event.which</code>, <code>event.keyCode</code> or <code>event.charCode</code> is supported by the browser:</p>\n\n<pre><code>// Add which for key events\nif ( event.which == null &amp;&amp; (event.charCode != null || event.keyCode != null) ) {\n   event.which = event.charCode != null ? event.charCode : event.keyCode;\n}\n</code></pre>\n\n<p>An added benefit of <code>.which</code> is that jQuery does it for mouse clicks too:</p>\n\n<pre><code>// Add which for click: 1 === left; 2 === middle; 3 === right\n// Note: button is not normalized, so don't use it\nif ( !event.which &amp;&amp; event.button !== undefined ) {\n    event.which = (event.button &amp; 1 ? 1 : ( event.button &amp; 2 ? 3 : ( event.button &amp; 4 ? 2 : 0 ) ));\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>look at this: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/event.keyCode\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/event.keyCode</a></p>\n\n<p>In a keypress event, the Unicode value of the key pressed is stored in either the keyCode or charCode property, never both. If the key pressed generates a character (e.g. 'a'), charCode is set to the code of that character, respecting the letter case. (i.e. charCode takes into account whether the shift key is held down). Otherwise, the code of the pressed key is stored in keyCode.\nkeyCode is always set in the keydown and keyup events. In these cases, charCode is never set.\nTo get the code of the key regardless of whether it was stored in keyCode or charCode, query the which property.\nCharacters entered through an IME do not register through keyCode or charCode.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I thought this would be answered somewhere on SO, but I can't find it.</p>\n\n<p>If I'm listening for a keypress event, should I be using .keyCode or .which to determine if the enter key was pressed?</p>\n\n<p>I've always done something like the following:</p>\n\n<pre><code>$(\"#someid\").keypress(function(e) {\n  if (e.keyCode === 13) {\n    e.preventDefault();\n    // do something\n  }\n});\n</code></pre>\n\n<p>But, I'm seeing examples that use .which instead of .keyCode. What's the difference? Is one more cross-browser friendly than the other?</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1395471936,
            "question_id": 4471582,
            "score": 77,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Javascript .keyCode vs. .which?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>This problem is usually due to the map div not being rendered before the javascript runs that needs to access it.</p>\n\n<p>You should put your initialization code inside an onload function or at the bottom of your HTML file, just before the  tag, so the DOM is completely rendered before it executes (note that the second option is more sensitive to invalid HTML).</p>\n\n<p>Note, as pointed out by <a href=\"http://stackoverflow.com/users/1963978/matthewsheets\">matthewsheets</a> this also could be cause by the div with that id not existing at all in your HTML (the pathological case of the div not being rendered) </p>\n\n<p>Adding code sample from <a href=\"http://stackoverflow.com/users/697856/wf9a5m75\">wf9a5m75</a>'s post to put everything in one place:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\nfunction initialize() {\n    var latlng = new google.maps.LatLng(-34.397, 150.644);\n    var myOptions = {\n        zoom: 8,\n        center: latlng,\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n    };\n    var map = new google.maps.Map(document.getElementById(\"map_canvas\"),\n            myOptions);\n}\ngoogle.maps.event.addDomListener(window, \"load\", initialize);\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 122
                },
                {
                    "body": "<p>Year, geocodezip's answer is correct.\nSo change your code like this:\n (if you still in trouble, or maybe somebody else in the future)</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\nfunction initialize() {\n    var latlng = new google.maps.LatLng(-34.397, 150.644);\n    var myOptions = {\n        zoom: 8,\n        center: latlng,\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n    };\n    var map = new google.maps.Map(document.getElementById(\"map_canvas\"),\n            myOptions);\n}\ngoogle.maps.event.addDomListener(window, \"load\", initialize);\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p><strong>For others that might still be having this issue</strong>, even after trying the above recommendations, using an incorrect selector for your map canvas in the initialize function can cause this same issue as the function is trying to access something that doesn't exist. Double-check that your map Id matches in your initialize function and your HTML or this same error may be thrown. </p>\n\n<p>In other words, make sure your IDs match up. ;)</p>\n",
                    "is_accepted": false,
                    "score": 48
                },
                {
                    "body": "<p><strong>For even more others that might still be having this issue,</strong> I was using a self-closing <code>&lt;div id=\"map1\" /&gt;</code> tag, and the second div was not showing, and did not seem to be in the dom. as soon as i changed it to two open&amp;close tags <code>&lt;div id=\"map1\"&gt;&lt;/div&gt;</code> it worked. hth</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Just so I add my fail scenario in getting this to work. I had a <code>&lt;div id=\"map&gt;</code> in which I was loading the map with:</p>\n\n<pre><code>var map = new google.maps.Map(document.getElementById(\"map\"), myOptions);\n</code></pre>\n\n<p>and the div was initially <strong>hidden</strong> and it didn't have explicitly width and height values set so it's size was <code>width x 0</code>. Once I've set the size of this div in CSS like this </p>\n\n<pre><code>#map {\n    width: 500px;\n    height: 300px;\n}\n</code></pre>\n\n<p>everything worked! Hope this helps someone.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>google uses <code>id=\"map_canvas\"</code> and <code>id=\"map-canvas\"</code> in the samples, double-check and re-double-check the id :D</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>For <strong>Rails 4</strong> users, turn off <code>turbolinks</code> yet another problem caused with it. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Changing the ID (in all 3 places) from \"map-canvas\" to \"map\" fixed it for me, even though I had made sure the IDs were the same, the div had a width and height, and the code wasn't running until after the window load call. It's not the dash; it doesn't seem to work with any other ID than \"map\".</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I had single quotes in my </p>\n\n<pre><code>var map = new google.maps.Map(document.getElementById('map_canvas') \n</code></pre>\n\n<p>and replaced them with double quotes </p>\n\n<pre><code>var map = new google.maps.Map(document.getElementById(\"map_canvas\"). \n</code></pre>\n\n<p>This did the trick for me.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Also take care not to write</p>\n\n<pre><code>google.maps.event.addDomListener(window, \"load\", init())\n</code></pre>\n\n<p>correct:</p>\n\n<pre><code>google.maps.event.addDomListener(window, \"load\", init)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Also got this error while using ReactJS while following <a href=\"http://infinitemonkeys.influitive.com/little-framework-big-splash/\" rel=\"nofollow\">this blog post</a>. sahat's comment <a href=\"https://gist.github.com/maedhr/8823168\" rel=\"nofollow\">here</a> helped.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to use Google MAP API v3 with the following code.</p>\n\n<pre><code>&lt;h2&gt;Topology&lt;/h2&gt;\n\n&lt;script src=\"https://maps.google.com/maps/api/js?sensor=false\" type=\"text/javascript\"&gt;&lt;/script&gt;\n\n&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"{% url css_media 'tooltip.topology.css' %}\" /&gt;\n&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"{% url css_media 'tooltip.css' %}\" /&gt;\n\n&lt;style type=\"text/css\" &gt;\n      #map_canvas {\n              width:300px;\n            height:300px;\n     }\n&lt;/style&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n\nvar latlng = new google.maps.LatLng(-34.397, 150.644);\nvar myOptions = {\nzoom: 8,\n      center: latlng,\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n};\nvar map = new google.maps.Map(document.getElementById(\"map_canvas\"),\n            myOptions);\n\n&lt;/script&gt;\n\n&lt;div id=\"map_canvas\"&gt; &lt;/div&gt;\n</code></pre>\n\n<p>When I run this code, the browser says this. </p>\n\n<blockquote>\n  <p>Uncaught TypeError: Cannot read property 'offsetWidth' of null</p>\n</blockquote>\n\n<p>I have no idea, since I follow the direction given in <a href=\"https://developers.google.com/maps/documentation/javascript/tutorial\">this tutorial</a>.</p>\n\n<p>Do you have any clue?</p>\n",
            "last_activity_date": 1424644750,
            "question_id": 11740663,
            "score": 58,
            "tags": [
                "javascript",
                "google-maps-api-3"
            ],
            "title": "Google MAP API Uncaught TypeError: Cannot read property &#39;offsetWidth&#39; of null"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>See <a href=\"http://jsperf.com/prototype-vs-this\">http://jsperf.com/prototype-vs-this</a></p>\n\n<p>Declaring your methods via the prototype is faster, but whether or not this is relevant is debatable.</p>\n\n<p>If you have a performance bottleneck in your app it is unlikely to be this, unless you happen to be instantiating 10000+ objects on every step of some arbitrary animation, for example.</p>\n\n<p>If performance is a serious concern, and you'd like to micro-optimise, then I would suggest declaring via prototype. Otherwise, just use the pattern that makes most sense to you.</p>\n\n<p>EDIT: I'll add that, in JavaScript, there is a convention of prefixxing properties that are intended to be seen as private with an underscore (e.g. <code>_process()</code>). Most developers will understand and avoid these properties, unless they're willing to forgo the social contract, but in that case you might as well not cater to them. What I mean to say is that: you probably don't really need <em>true</em> private variables...</p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>In short, use method 2 for creating properties/methods that all instances will share. And use method 1 for creating instance specific properties/methods.</p>\n\n<p>I wish I had a better reference but for now take a look at <a href=\"https://github.com/johnnyfreeman/revolverjs/blob/master/js/revolver.js\" rel=\"nofollow\">this</a>. You can see how I used both methods in the same project for different purposes.</p>\n\n<p>Hope this helps. :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It only makes a difference when you're creating lots of instances.  Otherwise, the performance of calling the member function is exactly the same in both cases.</p>\n\n<p>I've created a test case on jsperf to demonstrate this:</p>\n\n<p><a href=\"http://jsperf.com/prototype-vs-this/10\" rel=\"nofollow\">http://jsperf.com/prototype-vs-this/10</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In JavaScript, we have two ways of making a \"class\" and giving it public functions. </p>\n\n<p>Method 1:</p>\n\n<pre><code>function MyClass() {\n    var privateInstanceVariable = 'foo';\n    this.myFunc = function() { alert(privateInstanceVariable ); }\n}\n</code></pre>\n\n<p>Method 2:</p>\n\n<pre><code>function MyClass() { }\n\nMyClass.prototype.myFunc = function() { \n    alert(\"I can't use private instance variables. :(\"); \n}\n</code></pre>\n\n<p>I've read numerous times people <a href=\"http://stackoverflow.com/questions/4508313/advantages-of-using-prototype-vs-defining-methods-straight-in-the-constructor\">saying</a> that using Method 2 is more efficient as all instances share the same copy of the function rather than each getting their own. Defining functions via the prototype has a huge disadvantage though- it makes it impossible to have private instance variables. </p>\n\n<p>Even though, in theory, using Method 1 gives each instance of an object its own copy of the function (and thus uses way more memory, not to mention the time required for allocations)- is that what actually happens in practice? It seems like an optimization web browsers could easily make is to recognize this extremely common pattern, and actually have all instances of the object reference <em>the same</em> copy of functions defined via these \"constructor functions\". Then it could only give an instance its own copy of the function if it is explicitly changed later on.</p>\n\n<p>Any insight, or, even better- <em>real world experience</em> about performance differences between the two, would be extremely helpful. Thanks!</p>\n",
            "last_activity_date": 1391042394,
            "question_id": 12180790,
            "score": 30,
            "tags": [
                "javascript",
                "performance",
                "memory-management",
                "prototype"
            ],
            "title": "Defining methods via prototype vs using this in the constructor - really a performance difference?"
        },
        {
            "answer_count": 21,
            "answers": [
                {
                    "body": "<p>Whatever the language, one of the best and most accessible ways of finding primes within a range is using a <a href=\"http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes\">sieve</a>.</p>\n\n<p>Not going to give you code, but this is a good starting point.</p>\n\n<p>For a small range, such as yours, the most efficient would be pre-computing the numbers.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>First, change your inner code for another loop (<code>for</code> and <code>while</code>) so you can repeat the same code for different values.</p>\n\n<p>More specific for your problem, if you want to know if a given <code>n</code> is prime, you need to divide it for all values between 2 and sqrt(n). If any of the modules is 0, it is not prime.</p>\n\n<p>If you want to find all primes, you can speed it and check <code>n</code> only by dividing by the previously found primes. Another way of speeding the process is the fact that, apart from 2 and 3, all the primes are <code>6*k</code> plus or less 1.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Luchian's answer gives you a link to the standard technique for finding primes.</p>\n\n<p>A less efficient, but simpler approach is to turn your existing code into a nested loop.  Observe that you are dividing by 2,3,4,5,6 and so on ... and turn that into a loop.</p>\n\n<p>Given that this is homework, and given that the aim of the homework is to help you learn basic programming, a solution that is simple, correct but somewhat inefficient should be fine.  </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>Here is the live demo of this script: <a href=\"http://jsfiddle.net/K2QJp/\">http://jsfiddle.net/K2QJp/</a></strong></p>\n\n<p>First, make a function that will test if a single number is prime or not. If you want to extend the Number object you may, but I decided to just keep the code as simple as possible.</p>\n\n<pre><code>function isPrime(num) {\n    if(num &lt; 2) return false;\n    for (var i = 2; i &lt; num; i++) {\n        if(num%i==0)\n            return false;\n    }\n    return true;\n}\n</code></pre>\n\n<p>This script goes through every number between 2 and 1 less than the number and tests if there is any number in which there is no remainder if you divide the number by the increment. If there is any without a remainder, it is not prime. If the number is less than 2, it is not prime. Otherwise, it is prime.</p>\n\n<p>Then make a for loop to loop through the numbers 0 to 100 and test each number with that function. If it is prime, output the number to the log.</p>\n\n<pre><code>for(var i = 0; i &lt; 100; i++){\n    if(isPrime(i)) console.log(i);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here's how I solved it. Rewrote it from Java to JavaScript, so excuse me if there's a syntax error.    </p>\n\n<pre><code>function isPrime (n)\n{\n    if (n &lt; 2) return false;\n\n    /**\n     * An integer is prime if it is not divisible by any prime less than or equal to its square root\n     **/\n\n    var q = (int) Math.sqrt (n);\n\n    for (var i = 2; i &lt;= q; i++)\n    {\n        if (n % i == 0)\n        {\n            return false;\n        }\n    }\n\n    return true;\n}\n</code></pre>\n\n<p>A number, <code>n</code>, is a prime if it isn't divisible by any other number other than by 1 and itself. Also, it's sufficient to check the numbers [2, sqrt(n)].</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>why try delete by <code>4 (6,8,10,12)</code> if already tried deleting by <code>2</code>? Why try delete by <code>9</code> if already tried deleting by <code>3</code>? Why try delete by <code>11</code> if <code>11*11=121 &gt; 100</code>? Why try delete any odd number by <code>2</code> at all?</p>\n\n<p>Eliminate dead tests and you'll get yourself a <strong><em>primo</em></strong> code for testing primes <strong><em>below 100</em></strong>. </p>\n\n<p>And your code is very far from being the worst code ever. Many <em>many</em> others would try dividing <code>100</code> by <code>99</code>. But the absolute champion would generate all products of <code>2..96</code> with <code>2..96</code> to test whether <code>97</code> is among them. <a href=\"http://stackoverflow.com/questions/10639861/python-prime-generator-in-one-line\">That one</a> really is astonishingly inefficient. </p>\n\n<p>Sieve <a href=\"http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes\" rel=\"nofollow\"><em>of Eratosthenes</em></a> of course is much better, and you can have one - for under 100s - with <a href=\"http://stackoverflow.com/a/9435507/849891\"><strong><em>no arrays of booleans (and no divisions too!)</em></strong></a>:</p>\n\n<pre><code>console.log(2)\nvar m3=9, m5=25, m7=49, i=3\nfor( ; i&lt;100; i+=2 )\n{\n    if( i!=m3 &amp;&amp; i!=m5 &amp;&amp; i!=m7) console.log(i)\n    else\n    {\n        if( i==m3 ) m3+=6\n        if( i==m5 ) m5+=10\n        if( i==m7 ) m7+=14\n    }\n} \"DONE\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It would behoove you, if you're going to use any of the gazillion algorithms that you're going to be presented with in this thread, to learn to memoize some of them. </p>\n\n<p>See <a href=\"http://stackoverflow.com/questions/4551731/interview-question-what-is-the-fastest-way-to-generate-prime-number-recursivel\">Interview question : What is the fastest way to generate prime number recursively?</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's an example of a sieve implementation in JavaScript:</p>\n\n<pre><code>function getPrimes(max) {\n    var sieve = [], i, j, primes = [];\n    for (i = 2; i &lt;= max; ++i) {\n        if (!sieve[i]) {\n            // i has not been marked -- it is prime\n            primes.push(i);\n            for (j = i &lt;&lt; 1; j &lt;= max; j += i) {\n                sieve[j] = true;\n            }\n        }\n    }\n    return primes;\n}\n</code></pre>\n\n<p>Then <code>getPrimes(100)</code> will return an array of all primes between 2 and 100 (inclusive). Of course, due to memory constraints, you can't use this with large arguments.</p>\n\n<p>A Java implementation would look very similar.</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Use following function to find out prime numbers :    </p>\n\n<pre><code>function primeNumbers() {\n    var p\n    var n = document.primeForm.primeText.value\n    var d\n    var x\n    var prime\n    var displayAll = 2 + \" \"\n    for (p = 3; p &lt;= n; p = p + 2) {\n        x = Math.sqrt(p)\n        prime = 1\n        for (d = 3; prime &amp;&amp; (d &lt;= x); d = d + 2)\n        if ((p % d) == 0) prime = 0\n        else prime = 1\n        if (prime == 1) {\n            displayAll = displayAll + p + \" \"\n        }\n    }\n    document.primeForm.primeArea.value = displayAll\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction primeNumber() {\n x=document.getElementById('txt_field').value;\n  for (i=1; i&lt;=parseInt(x); i++) {\n  var flag=0,flag1=0; \n    for (j=2; j&lt;i; j++) {\n      if(i%j==0){\n       flag=1;\n      if(i==x)\n       flag1=1;\n      }\n    }\n   if(flag==0)\n    document.write(i+'&lt;br&gt;');\n  }\n   if(flag1==0) \n    document.write('Its a prime number.');\n   else \n    document.write('Its not a prime number.');\n}\n&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n &lt;input id=\"txt_field\" type=\"text\" name=\"field\" /&gt;\n &lt;input type=\"button\" name=\"submit\" value=\"Submit\" onclick=\"primeNumber();\" /&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<pre><code>&lt;code&gt;\n&lt;script language=\"javascript\"&gt;\n   var n=prompt(\"Enter User Value\")\n     var x=1;\n       if(n==0 || n==1) x=0;\n          for(i=2;i&lt;n;i++)\n           {\n          if(n%i==0)\n       {\n     x=0;\n     break;\n       }\n           }\n           if(x==1)\n             {\n                alert(n +\" \"+\" is prime\");\n             }\n             else\n             {\n                alert(n +\" \"+\" is not prime\");\n             }\n\n\n          &lt;/script&gt;\n</code></pre>\n\n<p></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Using recursion combined with the square root rule from <a href=\"http://stackoverflow.com/a/11967564/561731\">here</a>, checks whether a number is prime or not:</p>\n\n<pre><code>function isPrime(num){\n\n    // An integer is prime if it is not divisible by any prime less than or equal to its square root\n    var squareRoot = parseInt(Math.sqrt(num));\n    var primeCountUp = function(divisor){\n        if(divisor &gt; squareRoot) {\n            // got to a point where the divisor is greater than \n            // the square root, therefore it is prime\n            return true;\n        }\n        else if(num % divisor === 0) {\n            // found a result that divides evenly, NOT prime\n            return false;\n        }\n        else {\n            // keep counting\n            return primeCountUp(++divisor);\n        }\n    };\n\n    // start @ 2 because everything is divisible by 1\n    return primeCountUp(2);\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>check the number is prime or not with JS function</p>\n\n<pre><code>function isPrime(num)\n        {\n            var flag = true;\n            for(var i=2; i&lt;=Math.ceil(num/2); i++)\n            {\n                if((num%i)==0)\n                {\n                    flag = false;\n                    break;\n                }\n            }\n            return flag;    \n        }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is a way to test if number is prime number. </p>\n\n<pre><code>function isPrime(numb){\n  if (numb % 2 == 0) return false;\n  for (var i=3; i&lt;= Math.sqrt(numb); i = i + 2) {\n    if (numb % i == 0) {\n     return false;\n    }\n  }\n  return true;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I modified Rinto's answer just for those who don't want to use the prompt method and just want to see the program print prime numbers . its working </p>\n\n<pre><code>for (n = 0; n &lt; 100; n++) {\n    var x = 1;\n    if (n == 0 || n == 1) x = 0;\n    for (i = 2; i &lt; n; i++) {\n        if (n % i == 0) {\n            x = 0;\n            break;\n        }\n    }\n    if (x == 1) {\n        // if prime print the numbers \n        document.write(n);\n    } else {\n        // if not prime print the number do nothing \n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To find prime numbers between 0 to n. You just have to check if a number x is getting divisible by any number between 0 - (square root of x). If we pass n and to find all prime numbers between 0 and n,  logic can be implemented as -  </p>\n\n<pre><code>  function findPrimeNums(n)\n    { \n       var x= 3,j,i=2,\n       primeArr=[2],isPrime;\n       for (;x&lt;=n;x+=2){\n           j = (int) Math.sqrt (x);\n           isPrime = true;\n           for (i = 2; i &lt;= j; i++)\n           {\n                if (x % i == 0){\n                    isPrime = false;\n                    break;\n                }\n            }\n            if(isPrime){\n                primeArr.push(x);\n            }\n\n        }   \n\n        return primeArr;\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Sieve of Eratosthenes. its  bit look but its simple and it works!  </p>\n\n<pre><code>function count_prime(arg) {\n\n    arg = typeof arg !== 'undefined' ? arg : 20; //default value\n    var list = [2]\n    var list2 = [0,1]\n    var real_prime = []\n\n    counter = 2\n    while (counter &lt; arg ) {\n        if (counter % 2 !== 0) {\n            list.push(counter)\n        }\n        counter++\n    }\n\n    for (i = 0; i &lt; list.length - 1; i++) {\n        var a = list[i]\n        for (j = 0; j &lt; list.length - 1; j++) {\n            if (list[j] % a === 0 &amp;&amp; list[j] !== a) {\n                list[j] = false;       // assign false to non-prime numbers\n            }\n        }\n        if (list[i] !== false) { \n            real_prime.push(list[i]);  // save all prime numbers in new array\n        }\n    }\n }\nwindow.onload=count_prime(100);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Did anyone try this? It's simple and efficient ...</p>\n\n<pre><code>function Prime(num) {\n  if (num &lt;= 2)return false;\n  for(var i = 2; i &lt; num; i++){\n    if (num % i == 0) return false;\n  }\n  return true;\n}\n\nfunction PrimeWithin(userinput){\n  for(var i = 2; i &lt; userinput; i++){\n    if(Prime(i)){\n        console.log(i);\n    }\n  }\n}\n\nPrimeWithin(500);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is my solution:</p>\n\n<pre><code>function isPrime(n) {\n\nfor (var i=2;i&lt;n;i++) {\n    if(n%i==0) {\nreturn false;\n\n}\n\n}\nreturn true;\n}\n\nfunction nextPrime(n) {\n    var i=n+1;\n    do {\n\n    if (isPrime(i)) {\n        return i;   \n    }\n    else {\n        i++;\n        continue;\n    }\n\n    }while(1)\n}\n\nfunction primesUpTo(n) {\n    var array = [];\n    var i=0;\n    while(i&lt;n) {\n      i=nextPrime(i);\n      array.push(i) \n    }\n    return array;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>How about something like this.</p>\n\n<pre><code>next_prime:\nfor (var i = 2; i &lt; 100; i++){\n    for (var e = 2; e &lt; i; e++){\n        if (i % e === 0) continue next_prime;\n    }\n    console.log(i + '&lt;br&gt;');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is my <a href=\"http://jsfiddle.net/ka8ypt5v/\" rel=\"nofollow\">solution</a></p>\n\n<pre><code>//find all prime numbers\nfunction showMePrimeNumbers(start, end){\n    var primes = [];\n    for(var number = start; number &lt; end; number++){\n        var primeNumberDividers = []; //there should only be 2: 1 &amp; number\n        for(var divider = 1; divider &lt;= number; divider++){\n            if(number % divider === 0){\n                primeNumberDividers.push(divider);\n            }      \n        }\n        if(primeNumberDividers.length === 2){\n            primes.push(number);\n        }\n    }\n    return primes;\n}\n\nconsole.log(showMePrimeNumbers(1, 100));           \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In Javascript how would i find prime numbers between 0 - 100? i have thought about it, and i am not sure how to find them. i thought about doing x % x but i found the obvious problem with that.\nthis is what i have so far:\nbut unfortunately it is the worst code ever.</p>\n\n<pre><code>var prime = function (){\nvar num;\nfor (num = 0; num &lt; 101; num++){\n    if (num % 2 === 0){\n        break;\n    }\n    else if (num % 3 === 0){\n        break;\n    }\n    else if (num % 4=== 0){\n        break;\n    }\n    else if (num % 5 === 0){\n        break;\n    }\n    else if (num % 6 === 0){\n        break;\n    }\n    else if (num % 7 === 0){\n        break;\n    }\n    else if (num % 8 === 0){\n        break;\n    }\n    else if (num % 9 === 0){\n        break;\n    }\n    else if (num % 10 === 0){\n        break;\n    }\n    else if (num % 11 === 0){\n        break;\n    }\n    else if (num % 12 === 0){\n        break;\n    }\n    else {\n        return num;\n    }\n}\n};\nconsole.log(prime());\n</code></pre>\n",
            "last_activity_date": 1425480676,
            "question_id": 11966520,
            "score": 11,
            "tags": [
                "javascript",
                "math",
                "primes"
            ],
            "title": "How to find prime numbers between 0 - 100?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>Two questions: Will this effectively break the cache? </p>\n</blockquote>\n\n<p>Yes. <a href=\"http://meta.stackexchange.com/questions/112182/how-does-se-determine-the-css-and-js-version-parameter\">Even Stack Overflow use this method,</a> although I remember that they (with their millions of visitors per day and zillions of different client and proxy versions and configurations) have had some freak edge cases where even this was not enough to break the cache. But the general assumption is that this will work, and is a suitable method to break caching on clients.</p>\n\n<blockquote>\n  <p>Will the param cause the browser to then never cache the response from that url since the param indicates that this is dynamic content?</p>\n</blockquote>\n\n<p>No. The parameter will not change the caching policy; the caching headers sent by the server still apply, and if it doesn't send any, the browser's defaults. </p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>The param <code>?v=1.123</code> indicates a query string, and the browser will therefore think it is a new path from, say, <code>?v=1.0</code>. Thus causing it to load from file, not from cache. As you want. </p>\n\n<p>And, the browser will assume that the source will stay the same next time you call <code>?v=1.123</code> and <em>should</em> cache it with that string. So it will remain cached, however your server is set up, until you move to <code>?v=1.124</code> or so on.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>It will bust the cache once, after the client has downloaded the resource every other response will be served from client cache unless:</p>\n\n<ol>\n<li>the v parameter is updated.</li>\n<li>the client clears their cache</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>It is safer to put the version number in the actual filename.  This allows multiple versions to exist at once so you can roll out a new version and if any cached HTML pages still exist that are requesting the older version, they will get the version that works with their HTML.</p>\n\n<p>Note, in one of the largest versioned deployments anywhere on the internet, jQuery uses version numbers in the actual filename and it safely allows multiple versions to co-exist without any special server-side logic (each version is just a different file).</p>\n\n<p>This busts the cache once when you deploy new pages and new linked files (which is what you want) and from then on those versions can be effectively cached (which you also want).</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>In general this should be fine, but it's possible for this to not work if there is an intermediate cache (a proxy) that is configured to ignore the request parameters.</p>\n\n<p>For example, if you are serving static content through Akamai CDN, it can be configured to ignore request parameters to prevent cache busting using this method.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>It very much depends on quite how robust you want your caching to be. For example, the squid proxy server (and possibly others) <a href=\"http://www.stevesouders.com/blog/2008/08/23/revving-filenames-dont-use-querystring/\" rel=\"nofollow\">defaults to <em>not</em> caching</a> URLs served with a querystring - at least, it did when that article was written. If you don't mind certain use cases causing unnecessary cache misses, then go ahead with query params. But it's <em>very</em> easy to set up a filename-based cache-busting scheme which avoids this problem.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>As others have said, cache busting with a query param is usually considered a Bad Idea (tm), and has been for a long time. It's better to reflect the version in the file name. Html5 Boilerplate <a href=\"https://github.com/h5bp/server-configs-apache/blob/02a601e5914a504e019c46b76bb21adab89cb686/src/.htaccess#L677-692\" rel=\"nofollow\">recommends against</a> using the query string, among others.</p>\n\n<p>That said, of the recommendations I have seen which cited a source, all seem to take their wisdom from a <a href=\"http://stevesouders.com/blog/2008/08/23/revving-filenames-dont-use-querystring\" rel=\"nofollow\">2008 article</a> by Steve Souders. His conclusions are based on the behaviour of proxies at the time, and they may or may not be relevant these days. Still, in the absence of more current information, changing the file name is the safe option.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Found a comparison of the 2 techniques (query string vs file name) <a href=\"http://webassets.readthedocs.org/en/latest/expiring.html#expire-using-the-filename\" rel=\"nofollow\">here</a>: </p>\n\n<p>Version as a querystring has two problems. </p>\n\n<blockquote>\n  <p>First, it may not always be a browser that implements caching through which we need to bust. It is said that certain (possibly older) proxies do ignore the querystring with respect to their caching behavior.</p>\n  \n  <p>Second, in certain more complex deployment scenarios, where you have multiple frontend and/or multiple backend servers, an upgrade is anything but instantaneous. You need to be able to serve both the old and the new version of your assets at the same time. See for example how this affects you when using Google App Engine.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>We want to cache bust on production deploys, but not waste a bunch of time off the bat figuring out a system for doing so.  My thought was to apply a param to the end of css and js files with the current version number:</p>\n\n<pre><code>&lt;link rel=\"stylesheet\" href=\"base_url.com/file.css?v=1.123\"/&gt;\n</code></pre>\n\n<p>Two questions:  Will this effectively break the cache?  Will the param cause the browser to then never cache the response from that url since the param indicates that this is dynamic content?</p>\n",
            "last_activity_date": 1423475527,
            "question_id": 9692665,
            "score": 23,
            "tags": [
                "javascript",
                "html",
                "css",
                "caching"
            ],
            "title": "Cache busting via params"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Could you please elaborate the need of this functionality. If you only want to change the highlight style of the selected text you can use CSS: '::selection'</p>\n\n<p>More Info:\n<a href=\"http://www.quirksmode.org/css/selection.html\" rel=\"nofollow\">http://www.quirksmode.org/css/selection.html</a>\nhttps://developer.mozilla.org/en/CSS/::selection</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Can you try adding a class for the surrounding span and apply hierarchical CSS?</p>\n\n<pre><code>var span = document.createElement(\"span\");\nspan.className=\"selection\";\nrangeObject.surroundContents(span);\n</code></pre>\n\n<p>In CSS definition,</p>\n\n<pre><code>span.selection, span.selection * {\n   background-color : yellow;  \n}\n</code></pre>\n\n<p>I did not try it. But just guessing that it would work.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I would suggest using <code>document</code>'s or the <code>TextRange</code>'s <code>execCommand</code> method, which is built for just such a purpose, but is usually used in editable documents. Here's the answer I gave to a similar question:</p>\n\n<p>The following should do what you want. In non-IE browsers it turns on designMode, applies a background colour and then switches designMode off again.</p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>Fixed to work in IE 9.</p>\n\n<p><strong>UPDATE 12 September 2013</strong></p>\n\n<p>Here's a link detailing a method for removing highlights created by this method:</p>\n\n<p><a href=\"http://stackoverflow.com/a/8106283/96100\">http://stackoverflow.com/a/8106283/96100</a></p>\n\n<pre><code>function makeEditableAndHighlight(colour) {\n    var range, sel = window.getSelection();\n    if (sel.rangeCount &amp;&amp; sel.getRangeAt) {\n        range = sel.getRangeAt(0);\n    }\n    document.designMode = \"on\";\n    if (range) {\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n    // Use HiliteColor since some browsers apply BackColor to the whole block\n    if (!document.execCommand(\"HiliteColor\", false, colour)) {\n        document.execCommand(\"BackColor\", false, colour);\n    }\n    document.designMode = \"off\";\n}\n\nfunction highlight(colour) {\n    var range;\n    if (window.getSelection) {\n        // IE9 and non-IE\n        try {\n            if (!document.execCommand(\"BackColor\", false, colour)) {\n                makeEditableAndHighlight(colour);\n            }\n        } catch (ex) {\n            makeEditableAndHighlight(colour)\n        }\n    } else if (document.selection &amp;&amp; document.selection.createRange) {\n        // IE &lt;= 8 case\n        range = document.selection.createRange();\n        range.execCommand(\"BackColor\", false, colour);\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p><a href=\"http://code.google.com/p/rangy/\" rel=\"nofollow\">Rangy</a> is a cross-browser range and selection library that solves this problem perfectly with its <a href=\"http://code.google.com/p/rangy/wiki/CSSClassApplierModule\" rel=\"nofollow\">CSS Class Applier module</a>. I'm using it to implement highlighting across a range of desktop browsers and on iPad and it works perfectly.</p>\n\n<p>Tim Down's answer is great but Rangy spares you from having to write and maintain all that feature detection code yourself.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I select some text on the html page(opened in firefox) using mouse,and using javascript functions, i create/get the rangeobject corresponding to the selected text. </p>\n\n<pre><code> userSelection =window.getSelection(); \n var rangeObject = getRangeObject(userSelection);\n</code></pre>\n\n<p>Now i want to highlight all the text which comes under the rangeobject.I am doing it like this,</p>\n\n<pre><code>  var span = document.createElement(\"span\");\n  rangeObject.surroundContents(span);\n  span.style.backgroundColor = \"yellow\";\n</code></pre>\n\n<p>Well,this works fine, only when the rangeobject(startpoint and endpoint) lies in the same textnode,then it highlights the corresponding text.Ex</p>\n\n<pre><code>    &lt;p&gt;In this case,the text selected will be highlighted properly,\n       because the selected text lies under a single textnode&lt;/p&gt;\n</code></pre>\n\n<p>But if the rangeobject covers  more than one textnode, then it is not working properlay, It highlights only the texts which lie in the first textnode,Ex</p>\n\n<pre><code> &lt;p&gt;&lt;h3&gt;In this case&lt;/h3&gt;, only the text inside the header(h3) \n  will be highlighted, not any text outside the header&lt;/p&gt; \n</code></pre>\n\n<p>Any idea how can i make, all the texts which comes under rangeobject,highlighted,independent of whether range lies in a single node or multiple node?\n Thanks....  </p>\n",
            "last_activity_date": 1378983410,
            "question_id": 2582831,
            "score": 12,
            "tags": [
                "javascript",
                "dom",
                "range",
                "highlight"
            ],
            "title": "How can I highlight the text of the DOM Range object?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>There is no \"pass by reference\" available in JavaScript. You can pass an object (which is to say, you can pass-by-value a reference to an object) and then have a function modify the object contents:</p>\n\n<pre><code>function alterObject(obj) {\n  obj.foo = \"hello world\";\n}\n\nvar myObj = { foo: \"goodbye\" };\n\nalterObject(myObj);\n\nalert(myObj.foo); // \"hello world\" instead of \"goodbye\"\n</code></pre>\n\n<p>Now, in your case, you're not passing anything anyway, as far as I can tell. You can iterate over the properties of an array with a numeric index and modify each cell of the array, if you want.</p>\n\n<p>It's important to note that \"pass-by-reference\" is a very specific term. It does not mean simply that it's possible to pass a reference to a modifiable object. Instead, it means that it's possible to pass a simple variable in such a way as to allow a function to modify that value in the <strong>calling</strong> context.  So:</p>\n\n<pre><code> function swap(a, b) {\n   var tmp = a;\n   a = b;\n   b = tmp; //assign tmp to b\n }\n\n var x = 1, y = 2;\n swap(x, y);\n\n alert(\"x is \" + x + \" y is \" + y); // \"x is 1 y is 2\"\n</code></pre>\n\n<p>In a language like C++, it's possible to do that because that language <strong>does</strong> (sort-of) have pass-by-reference.</p>\n\n<p><em>edit</em> &mdash; <a href=\"http://whatsthepointy.blogspot.com/2013/11/javascript-does-not-have-pass-by.html\">here is a blog post on the topic.</a> (Note the comment to that post that explains that C++ doesn't really have pass-by-reference.  That is true. What C++ does have, however, is the ability to create references to plain variables, either explicitly at the point of function invocation to create a pointer, or <em>implicitly</em> when calling functions whose argument type signature calls for that to be done. Those are the key things JavaScript doesn't support.)</p>\n",
                    "is_accepted": true,
                    "score": 109
                },
                {
                    "body": "<p>You <em>could</em> use <code>eval</code> but I wouldn't recommend it. Instead, just use the variables from your array after.</p>\n\n<pre><code>var myArray = [var1, var2, var3];\nfor (var x = 0; x &lt; myArray.length; x++){\n    //do stuff to the array\n}\nvar1 = myArray[0];\nvar2 = myArray[1];\nvar3 = myArray[2];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Workaround to pass variable like by reference:</p>\n\n<pre><code>var a = 1;\ninc = function(variableName) {\n  window[variableName] += 1;\n};\n\ninc('a');\n\nalert(a); // 2\n</code></pre>\n\n<p><br/>\n<strong>EDIT</strong></p>\n\n<p>yup, actually you can do it without access global</p>\n\n<pre><code>inc = (function () {\n    var variableName = 0;\n\n    var init = function () {\n        variableName += 1;\n        alert(variableName);\n    }\n\n    return init;\n})();\n\ninc();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<h1>Simple Object</h1>\n\n<pre><code>var ref = { value: 1 };\n\nfunction Foo(x) {\n    x.value++;\n}\n\nFoo(ref);\nFoo(ref);\n\nalert(ref.value); // Alert: 3\n</code></pre>\n\n<hr>\n\n<h1>Custom Object</h1>\n\n<h2>Object <code>rvar</code></h2>\n\n<pre><code>function rvar (name, value, context) {\n    if (this instanceof rvar) {\n        this.value = value;\n        Object.defineProperty(this, 'name', { value: name });\n        Object.defineProperty(this, 'hasValue', { get: function () { return this.value !== undefined; } });\n        if ((value !== undefined) &amp;&amp; (value !== null))\n            this.constructor = value.constructor;\n        this.toString = function () { return this.value + ''; };\n    } else {\n        if (!rvar.refs)\n            rvar.refs = {};\n        if (!context)\n            context = window;\n        // Private\n        rvar.refs[name] = new rvar(name, value);\n        // Public\n        Object.defineProperty(context, name, {\n            get: function () { return rvar.refs[name]; },\n            set: function (v) { rvar.refs[name].value = v; },\n            configurable: true\n        });\n\n        return context[name];\n    }\n}\n</code></pre>\n\n<h2>Variable Declaration</h2>\n\n<pre><code>rvar('test_ref');\ntest_ref = 5; // test_ref.value = 5\n</code></pre>\n\n<p>Or:</p>\n\n<pre><code>rvar('test_ref', 5); // test_ref.value = 5\n</code></pre>\n\n<h2>Test Code</h2>\n\n<pre><code>rvar('test_ref_number');\ntest_ref_number = 5;\nfunction Fn1 (v) { v.value = 100; }\nconsole.log(\"rvar('test_ref_number');\");\nconsole.log(\"test_ref_number = 5;\");\nconsole.log(\"function Fn1 (v) { v.value = 100; }\");\nconsole.log('test_ref_number.value === 5', test_ref_number.value === 5);\nconsole.log(\" \");\n\nFn1(test_ref_number);\nconsole.log(\"Fn1(test_ref_number);\");\nconsole.log('test_ref_number.value === 100', test_ref_number.value === 100);\nconsole.log(\" \");\n\ntest_ref_number++;\nconsole.log(\"test_ref_number++;\");\nconsole.log('test_ref_number.value === 101', test_ref_number.value === 101);\nconsole.log(\" \");\n\ntest_ref_number = test_ref_number - 10;\nconsole.log(\"test_ref_number = test_ref_number - 10;\");\nconsole.log('test_ref_number.value === 91', test_ref_number.value === 91);\n\nconsole.log(\" \");\nconsole.log(\"---------\");\nconsole.log(\" \");\n\nrvar('test_ref_str', 'a');\nconsole.log(\"rvar('test_ref_str', 'a');\");\nconsole.log('test_ref_str.value === \"a\"', test_ref_str.value === 'a');\nconsole.log(\" \");\n\ntest_ref_str += 'bc';\nconsole.log(\"test_ref_str += 'bc';\");\nconsole.log('test_ref_str.value === \"abc\"', test_ref_str.value === 'abc');\n</code></pre>\n\n<h3>Test Console Result</h3>\n\n<pre><code>rvar('test_ref_number');\ntest_ref_number = 5;\nfunction Fn1 (v) { v.value = 100; }\ntest_ref_number.value === 5 true\n\nFn1(test_ref_number);\ntest_ref_number.value === 100 true\n\ntest_ref_number++;\ntest_ref_number.value === 101 true\n\ntest_ref_number = test_ref_number - 10;\ntest_ref_number.value === 91 true\n\n---------\n\nrvar('test_ref_str', 'a');\ntest_ref_str.value === \"a\" true\n\ntest_ref_str += 'bc';\ntest_ref_str.value === \"abc\" true \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I've been playing around with syntax to do this sort of thing, but it requires some helpers that are a little unusual.  It starts with not using 'var' at all, but a simple 'DECLARE' helper that creates a local variable and defines a scope for it via an anonymous callback. By controlling how variables are declared, we can choose to wrap them into objects so that they can always be passed by reference, essentially. This is similar to one of the Eduardo Cuomo's answer above, but the solution below does not require using strings as variable identifiers.  Here's some minimal code to show the concept.</p>\n\n<pre><code>function Wrapper(val){\n    this.VAL = val;\n}\nWrapper.prototype.toString = function(){\n    return this.VAL.toString();\n}\n\nfunction DECLARE(val, callback){\n    var valWrapped = new Wrapper(val);    \n    callback(valWrapped);\n}\n\nfunction INC(ref){\n    if(ref &amp;&amp; ref.hasOwnProperty('VAL')){\n        ref.VAL++; \n    }\n    else{\n        ref++;//or maybe throw here instead?\n    }\n\n    return ref;\n}\n\nDECLARE(5, function(five){ //consider this line the same as 'let five = 5'\nconsole.log(\"five is now \" + five);\nINC(five); // increment\nconsole.log(\"five is incremented to \" + five);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<ol>\n<li>primitive type variables like strings and numbers are always passed by value.</li>\n<li><p>Arrays and Objects are passed by reference or by value based on these conditions:</p>\n\n<ul>\n<li><p>if you are setting the value of an object or array it is Pass by Value.</p>\n\n<p><code>object1 = {prop: \"car\"};\narray1 = [1,2,3];</code></p></li>\n<li><p>if you are changing a property value of an object or array then it is Pass by Reference.</p>\n\n<p><code>object1.prop = \"car\";\narray1[0] = 9;</code></p></li>\n</ul></li>\n</ol>\n\n<p><strong>Code</strong></p>\n\n<pre><code>    function passVar(obj1, obj2, num) {\n        obj1.prop = \"laptop\"; // will CHANGE original\n        obj2 = { prop: \"computer\" }; //will NOT affect original\n        num = num + 1; // will NOT affect original\n    }\n\n    var object1 = {\n        prop: \"car\"\n    };\n    var object2 = {\n        prop: \"bike\"\n    };\n    var number1 = 10;\n\n    passVar(object1, object2, number1);\n    console.log(object1); //output: Object {item:\"laptop\"}\n    console.log(object2); //output: Object {item:\"bike\"}\n    console.log(number1); //ouput: 10\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>How do I pass variables by reference in JS? I have 3 variables that I want to perform several operations to so I want to put them in a for loop and perform the operations to each one.</p>\n\n<p>pseudo code:</p>\n\n<pre><code>    myArray = new Array(var1, var2, var3);\n    for (var x = 0; x &lt; myArray.length; x++){\n        //do stuff to the array\n    }\n    //now do stuff to the updated vars\n</code></pre>\n\n<p>What is the best way to do this?</p>\n",
            "last_activity_date": 1418125754,
            "question_id": 7744611,
            "score": 63,
            "tags": [
                "javascript",
                "variables",
                "pass-by-reference"
            ],
            "title": "Pass Variables by Reference in Javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><strong>Image.onload()</strong> will often work.  </p>\n\n<p>To use it, you'll need to be sure to bind the event handler before you set the src attribute.</p>\n\n<p><strong>Related Links:</strong></p>\n\n<ul>\n<li><a href=\"http://developer.mozilla.org/En/XUL/Attribute/Onload\"><strong>Mozilla on Image.onload()</strong></a></li>\n</ul>\n\n<p><strong>Example Usage:</strong></p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Image onload()&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;img src=\"#\" alt=\"This image is going to load\" id=\"sologo\"/&gt;\n\n&lt;script type=\"text/javascript\"&gt;\nwindow.onload = function () {\n\n    var logo = document.getElementById('sologo');\n\n    logo.onload = function () {\n        alert (\"The image has loaded!\");    \t\n    };\n\n    setTimeout(function(){\n        logo.src = 'http://stackoverflow.com/Content/Img/stackoverflow-logo-250.png';         \n    }, 5000);\n};\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>You can use the .complete property of the Javascript image class.</p>\n\n<p>I have an application where I store a number of Image objects in an array, that will be dynamically added to the screen, and as they're loading I write updates to another div on the page.  Here's a code snippet:</p>\n\n<pre><code>var gAllImages = [];\n\nfunction makeThumbDivs(thumbnailsBegin, thumbnailsEnd)\n{\n    gAllImages = [];\n\n    for (var i = thumbnailsBegin; i &lt; thumbnailsEnd; i++) \n    {\n        var theImage = new Image();\n        theImage.src = \"thumbs/\" + getFilename(globals.gAllPageGUIDs[i]);\n        gAllImages.push(theImage);\n\n        setTimeout('checkForAllImagesLoaded()', 5);\n        window.status=\"Creating thumbnail \"+(i+1)+\" of \" + thumbnailsEnd;\n\n        // make a new div containing that image\n        makeASingleThumbDiv(globals.gAllPageGUIDs[i]);\n    }\n}\n\nfunction checkForAllImagesLoaded()\n{\n    for (var i = 0; i &lt; gAllImages.length; i++) {\n        if (!gAllImages[i].complete) {\n            var percentage = i * 100.0 / (gAllImages.length);\n            percentage = percentage.toFixed(0).toString() + ' %';\n\n            userMessagesController.setMessage(\"loading... \" + percentage);\n            setTimeout('checkForAllImagesLoaded()', 20);\n            return;\n        }\n    }\n\n    userMessagesController.setMessage(globals.defaultTitle);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>You could use the load()-event in jQuery but it won't always fire if the image is loaded from the browser cache. This plugin <a href=\"https://github.com/peol/jquery.imgloaded/raw/master/ahpi.imgload.js\">https://github.com/peol/jquery.imgloaded/raw/master/ahpi.imgload.js</a> can be used to remedy that problem.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>these functions will solve the problem, you need to implement the <code>DrawThumbnails</code> function and have a global variable to store the images. I love to get this to work with a class object that has the <code>ThumbnailImageArray</code> as a member variable, but am struggling! </p>\n\n<p>called as in <code>addThumbnailImages(10);</code></p>\n\n<pre><code>var ThumbnailImageArray = [];\n\nfunction addThumbnailImages(MaxNumberOfImages)\n{\n    var imgs = [];\n\n    for (var i=1; i&lt;MaxNumberOfImages; i++)\n    {\n        imgs.push(i+\".jpeg\");\n    }\n\n    preloadimages(imgs).done(function (images){\n            var c=0;\n\n            for(var i=0; i&lt;images.length; i++)\n            {\n                if(images[i].width &gt;0) \n                {\n                    if(c != i)\n                        images[c] = images[i];\n                    c++;\n                }\n            }\n\n            images.length = c;\n\n            DrawThumbnails();\n        });\n}\n\n\n\nfunction preloadimages(arr)\n{\n    var loadedimages=0\n    var postaction=function(){}\n    var arr=(typeof arr!=\"object\")? [arr] : arr\n\n    function imageloadpost()\n    {\n        loadedimages++;\n        if (loadedimages==arr.length)\n        {\n            postaction(ThumbnailImageArray); //call postaction and pass in newimages array as parameter\n        }\n    };\n\n    for (var i=0; i&lt;arr.length; i++)\n    {\n        ThumbnailImageArray[i]=new Image();\n        ThumbnailImageArray[i].src=arr[i];\n        ThumbnailImageArray[i].onload=function(){ imageloadpost();};\n        ThumbnailImageArray[i].onerror=function(){ imageloadpost();};\n    }\n    //return blank object with done() method    \n    //remember user defined callback functions to be called when images load\n    return  { done:function(f){ postaction=f || postaction } };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>.complete</code> + callback is a standards compliant, no library way. This waits no longer than necessary:</p>\n\n<pre><code>var img = document.querySelector('img')\n\nfunction loaded() {\n  alert('loaded')\n}\n\nif (img.complete) {\n  loaded()\n} else {\n  img.addEventListener('load', loaded)\n  img.addEventListener('error', function() {\n      alert('error')\n  })\n}\n</code></pre>\n\n<p>Source: <a href=\"http://www.html5rocks.com/en/tutorials/es6/promises/\" rel=\"nofollow\">http://www.html5rocks.com/en/tutorials/es6/promises/</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I want to know when an image has finished loading. Is there a way to do it with a callback?</p>\n\n<p>If not, is there a way to do it at all?</p>\n",
            "last_activity_date": 1425303046,
            "question_id": 280049,
            "score": 31,
            "tags": [
                "javascript",
                "image",
                "callback",
                "loading"
            ],
            "title": "Javascript callback for knowing when an image is loaded"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You could have the server return base64 text, rather than doing that encoding client side.</p>\n\n<p>For example, (in ASP.NET) a request to /ImageAsBase64.ashx?file=/images/myimage.png could be coded to read the file, base64encode it, and stream it as a response.  </p>\n\n<p>It's really going to be pretty much the same thing in PHP or whatever.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you're using COTS, you could always set up an intermediate gateway wherein the request is made and transformed (base64 encoded in this case) into something more palatable before being returned to the client.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's how I did it.  </p>\n\n<p>This technique is provided in an answer to another SO question, but it's also relevant here.  </p>\n\n<p>I didn't want to base64 encode anything. I wanted to download and parse binary files in the browser via Javascript, without modifying the server to encode them specially.  I found that in Firefox, by coercing the mimetype of the response via <code>overrideMimeType()</code>, I could use <code>XMLHttpRequest.responseText</code>.  On IE, it's different because:</p>\n\n<ul>\n<li><p><code>responseText</code> on IE truncates at the first zero. For binary streams this is a big problem.</p></li>\n<li><p>there is no <code>XMLHttpRequest.overrideMimeType()</code>, to force IE to treat binary streams as text.</p></li>\n<li><p>while there is a <code>XMLHttpRequest.responseBody</code> (IE only!) that is specifically designed to be used with binary data streams, maddeningly that property is not usable from Javascript. </p></li>\n</ul>\n\n<p>Therefore, the need is to convert IE's <code>responseBody</code> property into a thing that looks like <code>responseText</code> from FireFox, with the mime-type coercion. This is possible using injected VBScript.  </p>\n\n<p>To make it cross-browser, you need to just pack up the browser-specific logic in a conditional.  This is what I used:</p>\n\n<pre><code>// one-time code\nif(/msie/i.test(navigator.userAgent) &amp;&amp; !/opera/i.test(navigator.userAgent)) {\n    var IEBinaryToArray_ByteStr_Script =\n    \"&lt;!-- IEBinaryToArray_ByteStr --&gt;\\r\\n\"+\n    \"&lt;script type='text/vbscript'&gt;\\r\\n\"+\n    \"Function IEBinaryToArray_ByteStr(Binary)\\r\\n\"+\n    \"   IEBinaryToArray_ByteStr = CStr(Binary)\\r\\n\"+\n    \"End Function\\r\\n\"+\n    \"Function IEBinaryToArray_ByteStr_Last(Binary)\\r\\n\"+\n    \"   Dim lastIndex\\r\\n\"+\n    \"   lastIndex = LenB(Binary)\\r\\n\"+\n    \"   if lastIndex mod 2 Then\\r\\n\"+\n    \"       IEBinaryToArray_ByteStr_Last = Chr( AscB( MidB( Binary, lastIndex, 1 ) ) )\\r\\n\"+\n    \"   Else\\r\\n\"+\n    \"       IEBinaryToArray_ByteStr_Last = \"+'\"\"'+\"\\r\\n\"+\n    \"   End If\\r\\n\"+\n    \"End Function\\r\\n\"+\n    \"&lt;/script&gt;\\r\\n\";\n\n    // inject VBScript\n    document.write(IEBinaryToArray_ByteStr_Script);\n}\n\n\n// each time you make a request for a binary resource:\nvar req = (function() {\n    if (window.XMLHttpRequest) {\n        return new window.XMLHttpRequest();\n    }\n    else {\n        try {\n            return new ActiveXObject(\"MSXML2.XMLHTTP\");\n        }\n        catch(ex) {\n            return null;\n        }\n    }\n})();\n\nvar fileContents = \"\";\nvar filesize = -1;\nvar readByteAt = function(i){\n    return fileContents.charCodeAt(i) &amp; 0xff;\n};\n\nreq.open(\"GET\", url, true);\n\nif(/msie/i.test(navigator.userAgent) &amp;&amp; !/opera/i.test(navigator.userAgent)) {\n    // IE-specific logic here\n    // helper to convert from responseBody to a \"responseText\" like thing\n    var convertResponseBodyToText = function (binary) {\n        var byteMapping = {};\n        for ( var i = 0; i &lt; 256; i++ ) {\n            for ( var j = 0; j &lt; 256; j++ ) {\n                byteMapping[ String.fromCharCode( i + j * 256 ) ] =\n                    String.fromCharCode(i) + String.fromCharCode(j);\n            }\n        }\n        var rawBytes = IEBinaryToArray_ByteStr(binary);\n        var lastChr = IEBinaryToArray_ByteStr_Last(binary);\n        return rawBytes.replace(/[\\s\\S]/g,\n                                function( match ) { return byteMapping[match]; }) + lastChr;\n    };\n\n    req.setRequestHeader(\"Accept-Charset\", \"x-user-defined\");\n    req.onreadystatechange = function(event){\n        if (req.readyState == 4) {\n            if (req.status == 200) {\n                fileContents = convertResponseBodyToText(req.responseBody);\n                fileSize = fileContents.length-1;\n                // invoke a callback here, if you like...\n            }\n            else{\n                alert(\"download failed, status \" + req.status);\n            }\n        }\n    };\n    req.send();\n\n} else {\n    // ff/Gecko/Webkit specific stuff here\n    req.onreadystatechange = function(aEvt) {\n        if (req.readyState == 4) { // completed\n            if(req.status == 200){ // status == OK\n                fileContents = binStream.req.responseText;\n                filesize = fileContents.length;\n                // invoke a callback here, if you like...\n            }\n            else {\n                alert(\"download failed, status \" + req.status);\n            }\n        }\n    };\n    // coerce response type\n    req.overrideMimeType('text/plain; charset=x-user-defined');\n    req.send(null);\n}\n</code></pre>\n\n<p>...then call <code>readByte(i)</code> to get the byte at the <em>ith</em> position in the binary file.</p>\n\n<p>Good luck.</p>\n\n<p><a href=\"http://miskun.com/javascript/internet-explorer-and-binary-files-data-access/\">Credit to Miskun</a> for the VBScript conversion logic.</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I was trying to load an image client side and base64 encode the bytes returned by the server in order to pass it off to perform some processing.  IE has a RequestBody property of the XMLHttpRequest object, but I can't seem to use it, and RequestText is truncated.  In Firefox, RequestText is there, but seems corrupted.</p>\n",
            "last_activity_date": 1339267131,
            "question_id": 1095102,
            "score": 15,
            "tags": [
                "javascript",
                "image",
                "xmlhttprequest"
            ],
            "title": "How do I load binary image data using Javascript and XMLHttpRequest?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If you need to handle pages with Javascript, try <a href=\"http://watir.com/\">WATIR</a> or <a href=\"http://docs.seleniumhq.org/\">Selenium</a> - those drive a real web browser, and can thus handle any Javascript. WATIR Classic requires either IE or Firefox with a certain extension installed, and you will see the pages flash on the screen as it works.</p>\n\n<p>Your other option would be understanding what the Javascript on the offending page does and bypassing it manually, but that seems onerous.</p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>At present, Mechanize doesn't handle JavaScript.  There's talk of eventually merging <a href=\"http://wiki.github.com/jbarnette/johnson\">Johnson</a>'s capabilities into Mechanize, but until that happens, you have two options:</p>\n\n<ol>\n<li>Figure out the JavaScript well enough to understand how to traverse those pages.</li>\n<li>Automate an actual browser that <em>does</em> understand JavaScript using <a href=\"http://wtr.rubyforge.org/\">Watir</a>.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<blockquote>\n  <p>what are those pages for? how they can redirect to other pages. what should i do to pass these?</p>\n</blockquote>\n\n<p>Sometimes work is done on those pages. Sometimes the JavaScript is there to prevent automated access like what you're trying to do :). A lot of websites have unnecessary checks to make sure you have a \"good\" browser, so make sure that your <code>user_agent</code> is set to something common, like IE. Sometimes setting the <code>user_agent</code> to look like an old browser will let you get past without JavaScript.</p>\n\n<p>Website automation is fun because you have to outsmart the website and its software developers, using multiple strategies. Like the others said, Watir is the best tool for getting past JavaScript at the moment.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm connecting to a web site, logging in.</p>\n\n<p>The website redirects me to new pages and Mechanize deals with all cookie and redirection jobs, but, I can't get the last page. I used Firebug and did same job again and saw that there are two more pages I had to pass with Mechanize. </p>\n\n<p>I took a quick look at the pages and saw that there is some JavaScript and HTML code but couldn't understand it because it doesn't look like normal page code. What are those pages for? How they can redirect to other pages? What should I do to pass these?</p>\n",
            "last_activity_date": 1369784377,
            "question_id": 802225,
            "score": 18,
            "tags": [
                "javascript",
                "html",
                "ruby",
                "mechanize"
            ],
            "title": "How do I use Mechanize to process JavaScript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>My current solution is verbose and based on <a href=\"http://www.webdeveloper.com/forum/showthread.php?t=111407\">this thread</a>, but I'm open to better solutions.</p>\n\n<pre><code>function getSelection(inputBox) {\n\tif (\"selectionStart\" in inputBox) {\n\t\treturn {\n\t\t\tstart: inputBox.selectionStart,\n\t\t\tend: inputBox.selectionEnd\n\t\t}\n\t}\n\n\t//and now, the blinkered IE way\n\tvar bookmark = document.selection.createRange().getBookmark()\n\tvar selection = inputBox.createTextRange()\n\tselection.moveToBookmark(bookmark)\n\n\tvar before = inputBox.createTextRange()\n\tbefore.collapse(true)\n\tbefore.setEndPoint(\"EndToStart\", selection)\n\n\tvar beforeLength = before.text.length\n\tvar selLength = selection.text.length\n\n\treturn {\n\t\tstart: beforeLength,\n\t\tend: beforeLength + selLength\n\t}\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>IE's Range implementation is a slithy horror. It really wants you to use the execrable execCommand interface instead of anything involving indexing into the text.</p>\n\n<p>There are two approaches I know of for getting the indices and they both have problems. The first uses range.text as in your example code. Unfortunately range.text has a habit of stripping off leading and trailing newlines, which means if the caret/selection is at the start of a line other than the first one, beforeLength will be off by (number of newlines*2) characters and you'll get the wrong selected text.</p>\n\n<p>The second approach is to use range.moveStart/End (on a duplicated range), as outlined in the answer to this question: <a href=\"http://stackoverflow.com/questions/164147/character-offset-in-an-internet-explorer-textrange\">http://stackoverflow.com/questions/164147/character-offset-in-an-internet-explorer-textrange</a> (however as you are using a known textarea parent you can ignore the stuff about node-finding). This doesn't have the same problem, but it does report all indices as if newlines were simple LF characters, even though textarea.value and range.text will return them as CRLF sequences! So you can't use them directly to index into the textarea, but you can either fix them up with a bunch of newline counting or just string-replace away all the CRs from the value before you use it.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I'll post this function for another time, seeing as this question got linked to from another one.</p>\n\n<p>The following will do the job in all browsers and deals with all new line problems without seriously compromising performance. I've arrived at this after <a href=\"http://stackoverflow.com/questions/3622818/ies-document-selection-createrange-doesnt-include-leading-or-trailing-blank-lin\">some toing and froing</a> and now I'm pretty convinced it's the best such function around.</p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>This function does assume the textarea/input has focus, so you may need to call the textarea's <code>focus()</code> method before calling it.</p>\n\n<pre><code>function getInputSelection(el) {\n    var start = 0, end = 0, normalizedValue, range,\n        textInputRange, len, endRange;\n\n    if (typeof el.selectionStart == \"number\" &amp;&amp; typeof el.selectionEnd == \"number\") {\n        start = el.selectionStart;\n        end = el.selectionEnd;\n    } else {\n        range = document.selection.createRange();\n\n        if (range &amp;&amp; range.parentElement() == el) {\n            len = el.value.length;\n            normalizedValue = el.value.replace(/\\r\\n/g, \"\\n\");\n\n            // Create a working TextRange that lives only in the input\n            textInputRange = el.createTextRange();\n            textInputRange.moveToBookmark(range.getBookmark());\n\n            // Check if the start and end of the selection are at the very end\n            // of the input, since moveStart/moveEnd doesn't return what we want\n            // in those cases\n            endRange = el.createTextRange();\n            endRange.collapse(false);\n\n            if (textInputRange.compareEndPoints(\"StartToEnd\", endRange) &gt; -1) {\n                start = end = len;\n            } else {\n                start = -textInputRange.moveStart(\"character\", -len);\n                start += normalizedValue.slice(0, start).split(\"\\n\").length - 1;\n\n                if (textInputRange.compareEndPoints(\"EndToEnd\", endRange) &gt; -1) {\n                    end = len;\n                } else {\n                    end = -textInputRange.moveEnd(\"character\", -len);\n                    end += normalizedValue.slice(0, end).split(\"\\n\").length - 1;\n                }\n            }\n        }\n    }\n\n    return {\n        start: start,\n        end: end\n    };\n}\n\nvar el = document.getElementById(\"your_input\");\nel.focus();\nvar sel = getInputSelection(el);\nalert(sel.start + \", \" + sel.end);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>From <a href=\"https://github.com/winmarkltd/BootstrapFormHelpers/blob/0d89ab451ded3a4c6a47acb0e4bf023504a94434/js/bootstrap-formhelpers-phone.js\" rel=\"nofollow\">BootstrapFormHelpers</a></p>\n\n<pre><code>  function getCursorPosition($element) {\n    var position = 0,\n        selection;\n\n    if (document.selection) {\n      // IE Support\n      $element.focus();\n      selection = document.selection.createRange();\n      selection.moveStart ('character', -$element.value.length);\n      position = selection.text.length;\n    } else if ($element.selectionStart || $element.selectionStart === 0) {\n      position = $element.selectionStart;\n    }\n\n    return position;\n  }\n\n  function setCursorPosition($element, position) {\n    var selection;\n\n    if (document.selection) {\n      // IE Support\n      $element.focus ();\n      selection = document.selection.createRange();\n      selection.moveStart ('character', -$element.value.length);\n      selection.moveStart ('character', position);\n      selection.moveEnd ('character', 0);\n      selection.select ();\n    } else if ($element.selectionStart || $element.selectionStart === 0) {\n      $element.selectionStart = position;\n      $element.selectionEnd = position;\n      $element.focus ();\n    }\n  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Finding out what's selected in real browsers is as simple as:</p>\n\n<pre><code>var range = {\n  start: textbox.selectionStart,\n  end: textbox.selectionEnd\n}\n</code></pre>\n\n<p>But IE, as usual, doesn't understand. What's the best cross-browser way to do this?</p>\n",
            "last_activity_date": 1416872164,
            "question_id": 235411,
            "score": 15,
            "tags": [
                "javascript",
                "internet-explorer"
            ],
            "title": "Is there an Internet Explorer approved substitute for selectionStart and selectionEnd?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Use prevent default</p>\n\n<p><strong>DOJO</strong></p>\n\n<pre><code>dojo.connect(form, \"onsubmit\", function(evt) {\n    evt.preventDefault();\n    window.history.back();\n});\n</code></pre>\n\n<p><strong>jQuery</strong></p>\n\n<pre><code>$('#form').submit(function (evt) {\n    evt.preventDefault();\n    window.history.back();\n});\n</code></pre>\n\n<p><strong>Vanilla JS</strong></p>\n\n<pre><code>if(element.addEventListener) {\n    element.addEventListener(\"submit\", function(evt){\n        evt.preventDefault();\n        window.history.back();\n    }, true);\n} else {\n    element.attachEvent('onsubmit', function(evt){\n        evt.preventDefault();\n        window.history.back();\n    });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Just use a simple <code>button</code> instead of <code>submit</code> button. and call a <code>javascript function</code> to handle <code>form submit</code>.</p>\n\n<pre><code>&lt;input type=\"button\" name=\"submit\" value=\"submit\" onclick=\"submit_form();\"/&gt;\n</code></pre>\n\n<p>function within <code>script</code> tag</p>\n\n<pre><code>function submit_form(){\n   if(conditions){\n   document.forms['myform'].submit();\n    }else{\n      returnToPreviousPage();\n    }\n}\n</code></pre>\n\n<p>you can also try <code>window.history.forward(-1);</code> </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can use the return value of the function to prevent the form submission</p>\n\n<pre><code>&lt;form name=\"myForm\" onsubmit=\"return validateMyForm();\"&gt; \n</code></pre>\n\n<p>and function like</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction validateMyForm()\n{\n  if(check if your conditions are not satisfying)\n  { \n    alert(\"validation failed false\");\n    returnToPreviousPage();\n    return false;\n  }\n\n  alert(\"validations passed\");\n  return true;\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>In case of Chrome 27.0.1453.116 m if above code does not work, please <a href=\"http://www.htmlgoodies.com/beyond/javascript/advanced-javascript-event-handling.html\">set the event handler's parameter's returnValue</a> field to false to get it to work.</p>\n\n<p>Thanks Sam for sharing information.</p>\n",
                    "is_accepted": true,
                    "score": 53
                },
                {
                    "body": "<p>The following works as of now (tested in chrome and firefox):</p>\n\n<pre><code>&lt;form onsubmit=\"event.preventDefault(); return validateMyForm();\"&gt;\n</code></pre>\n\n<p>where validateMyForm() is a function that returns <code>false</code> if validation fails. The key point is to use the name <code>event</code>. We cannot use for e.g. <code>e.preventDefault()</code></p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>One way to stop form submission is to return false from your javascript function.</p>\n\n<p>When submit button is clicked; a validation function is called. I have a case in form validation. If that condition is met I called a function named\n<strong>returnToPreviousPage();</strong></p>\n\n<pre><code>function returnToPreviousPage() {\n    window.history.back();\n}\n</code></pre>\n\n<p>I am using javascript and Dojo.</p>\n\n<p>Rather going back to previous page it submits form. How can I abort this submission and return to previous page?</p>\n",
            "last_activity_date": 1420470064,
            "question_id": 8664486,
            "score": 36,
            "tags": [
                "javascript",
                "html",
                "forms"
            ],
            "title": "javascript to stop form submission"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Assuming the HTML is valid XML too, you may use <a href=\"http://msdn.microsoft.com/en-us/library/ms754585%28v=VS.85%29.aspx\" rel=\"nofollow\">loadXML()</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Not sure why you're messing with documentFragments, you can just set the HTML text as the <code>innerHTML</code> of a new div element. Then you can use that div element for <code>getElementsByTagName</code> etc without adding the div to DOM:</p>\n\n<pre><code>var htmlText= '&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=\"test_ele1\"&gt;this is test_ele1 content&lt;/div&gt;&lt;div id=\"test_ele2\"&gt;this is test_ele content2&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;';\n\nvar d = document.createElement('div');\nd.innerHTML = htmlText;\n\nconsole.log(d.getElementsByTagName('div'));\n</code></pre>\n\n<p>If you're really married to the idea of a documentFragment, you can use this code, but you'll still have to wrap it in a div to get the DOM functions you're after:</p>\n\n<pre><code>function makeDocumentFragment(htmlText) {\n    var range = document.createRange();\n    var frag = range.createContextualFragment(htmlText);\n    var d = document.createElement('div');\n    d.appendChild(frag);\n    return d;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><code>DocumentFragment</code> doesn't support <code>getElementsByTagName</code> -- that's only supported by <code>Document</code>.</p>\n\n<p>You may need to use a library like <a href=\"https://github.com/tmpvar/jsdom\" rel=\"nofollow\">jsdom</a>, which provides an implementation of the DOM and through which you can search using <code>getElementsByTagName</code> and other DOM APIs.  And you can set it to not execute scripts. Yes, it's 'heavy' and I don't know if it works in IE 7.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Fiddle</strong>: <a href=\"http://jsfiddle.net/JFSKe/6/\">http://jsfiddle.net/JFSKe/6/</a></p>\n\n<p><strong><a href=\"https://developer.mozilla.org/En/DOM/DocumentFragment\"><code>DocumentFragment</code></a></strong> doesn't implement DOM methods. Using <code>document.createElement</code> in conjunction with  <code>innerHTML</code> removes the <code>&lt;head&gt;</code> and <code>&lt;body&gt;</code> tags (even when the created element is a root element, <code>&lt;html&gt;</code>). Therefore, the solution should be sought elsewhere. I have created a <strong>cross-browser</strong> string-to-DOM function, which makes use of an invisible inline-frame.</p>\n\n<p>All external resources and scripts will be disabled. See <em>Explanation of the code</em> for more information.</p>\n\n<h3>Code</h3>\n\n<pre><code>/*\n @param String html    The string with HTML which has be converted to a DOM object\n @param func callback  (optional) Callback(HTMLDocument doc, function destroy)\n @returns              undefined if callback exists, else: Object\n                        HTMLDocument doc  DOM fetched from Parameter:html\n                        function destroy  Removes HTMLDocument doc.         */\nfunction string2dom(html, callback){\n    /* Sanitise the string */\n    html = sanitiseHTML(html); /*Defined at the bottom of the answer*/\n\n    /* Create an IFrame */\n    var iframe = document.createElement(\"iframe\");\n    iframe.style.display = \"none\";\n    document.body.appendChild(iframe);\n\n    var doc = iframe.contentDocument || iframe.contentWindow.document;\n    doc.open();\n    doc.write(html);\n    doc.close();\n\n    function destroy(){\n        iframe.parentNode.removeChild(iframe);\n    }\n    if(callback) callback(doc, destroy);\n    else return {\"doc\": doc, \"destroy\": destroy};\n}\n\n/* @name sanitiseHTML\n   @param String html  A string representing HTML code\n   @return String      A new string, fully stripped of external resources.\n                       All \"external\" attributes (href, src) are prefixed by data- */\n\nfunction sanitiseHTML(html){\n    /* Adds a &lt;!-\\\"'--&gt; before every matched tag, so that unterminated quotes\n        aren't preventing the browser from splitting a tag. Test case:\n       '&lt;input style=\"foo;b:url(0);&gt;&lt;input onclick=\"&lt;input type=button onclick=\"too() href=;&gt;\"&gt;' */\n    var prefix = \"&lt;!--\\\"'--&gt;\";\n    /*Attributes should not be prefixed by these characters. This list is not\n     complete, but will be sufficient for this function.\n      (see http://www.w3.org/TR/REC-xml/#NT-NameChar) */\n    var att = \"[^-a-z0-9:._]\";\n    var tag = \"&lt;[a-z]\";\n    var any = \"(?:[^&lt;&gt;\\\"']*(?:\\\"[^\\\"]*\\\"|'[^']*'))*?[^&lt;&gt;]*\";\n    var etag = \"(?:&gt;|(?=&lt;))\";\n\n    /*\n      @name ae\n      @description          Converts a given string in a sequence of the\n                             original input and the HTML entity\n      @param String string  String to convert\n      */\n    var entityEnd = \"(?:;|(?!\\\\d))\";\n    var ents = {\" \":\"(?:\\\\s|&amp;nbsp;?|&amp;#0*32\"+entityEnd+\"|&amp;#x0*20\"+entityEnd+\")\",\n                \"(\":\"(?:\\\\(|&amp;#0*40\"+entityEnd+\"|&amp;#x0*28\"+entityEnd+\")\",\n                \")\":\"(?:\\\\)|&amp;#0*41\"+entityEnd+\"|&amp;#x0*29\"+entityEnd+\")\",\n                \".\":\"(?:\\\\.|&amp;#0*46\"+entityEnd+\"|&amp;#x0*2e\"+entityEnd+\")\"};\n                /*Placeholder to avoid tricky filter-circumventing methods*/\n    var charMap = {};\n    var s = ents[\" \"]+\"*\"; /* Short-hand space */\n    /* Important: Must be pre- and postfixed by &lt; and &gt;. RE matches a whole tag! */\n    function ae(string){\n        var all_chars_lowercase = string.toLowerCase();\n        if(ents[string]) return ents[string];\n        var all_chars_uppercase = string.toUpperCase();\n        var RE_res = \"\";\n        for(var i=0; i&lt;string.length; i++){\n            var char_lowercase = all_chars_lowercase.charAt(i);\n            if(charMap[char_lowercase]){\n                RE_res += charMap[char_lowercase];\n                continue;\n            }\n            var char_uppercase = all_chars_uppercase.charAt(i);\n            var RE_sub = [char_lowercase];\n            RE_sub.push(\"&amp;#0*\" + char_lowercase.charCodeAt(0) + entityEnd);\n            RE_sub.push(\"&amp;#x0*\" + char_lowercase.charCodeAt(0).toString(16) + entityEnd);\n            if(char_lowercase != char_uppercase){\n                RE_sub.push(\"&amp;#0*\" + char_uppercase.charCodeAt(0) + entityEnd);   \n                RE_sub.push(\"&amp;#x0*\" + char_uppercase.charCodeAt(0).toString(16) + entityEnd);\n            }\n            RE_sub = \"(?:\" + RE_sub.join(\"|\") + \")\";\n            RE_res += (charMap[char_lowercase] = RE_sub);\n        }\n        return(ents[string] = RE_res);\n    }\n    /*\n      @name by\n      @description  second argument for the replace function.\n      */\n    function by(match, group1, group2){\n        /* Adds a data-prefix before every external pointer */\n        return group1 + \"data-\" + group2 \n    }\n    /*\n      @name cr\n      @description            Selects a HTML element and performs a\n                                  search-and-replace on attributes\n      @param String selector  HTML substring to match\n      @param String attribute RegExp-escaped; HTML element attribute to match\n      @param String marker    Optional RegExp-escaped; marks the prefix\n      @param String delimiter Optional RegExp escaped; non-quote delimiters\n      @param String end       Optional RegExp-escaped; forces the match to\n                                  end before an occurence of &lt;end&gt; when \n                                  quotes are missing\n     */\n    function cr(selector, attribute, marker, delimiter, end){\n        if(typeof selector == \"string\") selector = new RegExp(selector, \"gi\");\n        marker = typeof marker == \"string\" ? marker : \"\\\\s*=\";\n        delimiter = typeof delimiter == \"string\" ? delimiter : \"\";\n        end = typeof end == \"string\" ? end : \"\";\n        var is_end = end &amp;&amp; \"?\";\n        var re1 = new RegExp(\"(\"+att+\")(\"+attribute+marker+\"(?:\\\\s*\\\"[^\\\"\"+delimiter+\"]*\\\"|\\\\s*'[^'\"+delimiter+\"]*'|[^\\\\s\"+delimiter+\"]+\"+is_end+\")\"+end+\")\", \"gi\");\n        html = html.replace(selector, function(match){\n            return prefix + match.replace(re1, by);\n        });\n    }\n    /* \n      @name cri\n      @description            Selects an attribute of a HTML element, and\n                               performs a search-and-replace on certain values\n      @param String selector  HTML element to match\n      @param String attribute RegExp-escaped; HTML element attribute to match\n      @param String front     RegExp-escaped; attribute value, prefix to match\n      @param String flags     Optional RegExp flags, default \"gi\"\n      @param String delimiter Optional RegExp-escaped; non-quote delimiters\n      @param String end       Optional RegExp-escaped; forces the match to\n                                  end before an occurence of &lt;end&gt; when \n                                  quotes are missing\n     */\n    function cri(selector, attribute, front, flags, delimiter, end){\n        if(typeof selector == \"string\") selector = new RegExp(selector, \"gi\");\n        flags = typeof flags == \"string\" ? flags : \"gi\";\n         var re1 = new RegExp(\"(\"+att+attribute+\"\\\\s*=)((?:\\\\s*\\\"[^\\\"]*\\\"|\\\\s*'[^']*'|[^\\\\s&gt;]+))\", \"gi\");\n\n        end = typeof end == \"string\" ? end + \")\" : \")\";\n        var at1 = new RegExp('(\")('+front+'[^\"]+\")', flags);\n        var at2 = new RegExp(\"(')(\"+front+\"[^']+')\", flags);\n        var at3 = new RegExp(\"()(\"+front+'(?:\"[^\"]+\"|\\'[^\\']+\\'|(?:(?!'+delimiter+').)+)'+end, flags);\n\n        var handleAttr = function(match, g1, g2){\n            if(g2.charAt(0) == '\"') return g1+g2.replace(at1, by);\n            if(g2.charAt(0) == \"'\") return g1+g2.replace(at2, by);\n            return g1+g2.replace(at3, by);\n        };\n        html = html.replace(selector, function(match){\n             return prefix + match.replace(re1, handleAttr);\n        });\n    }\n\n    /* &lt;meta http-equiv=refresh content=\"  ; url= \" &gt; */\n    html = html.replace(new RegExp(\"&lt;meta\"+any+att+\"http-equiv\\\\s*=\\\\s*(?:\\\"\"+ae(\"refresh\")+\"\\\"\"+any+etag+\"|'\"+ae(\"refresh\")+\"'\"+any+etag+\"|\"+ae(\"refresh\")+\"(?:\"+ae(\" \")+any+etag+\"|\"+etag+\"))\", \"gi\"), \"&lt;!-- meta http-equiv=refresh stripped--&gt;\");\n\n    /* Stripping all scripts */\n    html = html.replace(new RegExp(\"&lt;script\"+any+\"&gt;\\\\s*//\\\\s*&lt;\\\\[CDATA\\\\[[\\\\S\\\\s]*?]]&gt;\\\\s*&lt;/script[^&gt;]*&gt;\", \"gi\"), \"&lt;!--CDATA script--&gt;\");\n    html = html.replace(/&lt;script[\\S\\s]+?&lt;\\/script\\s*&gt;/gi, \"&lt;!--Non-CDATA script--&gt;\");\n    cr(tag+any+att+\"on[-a-z0-9:_.]+=\"+any+etag, \"on[-a-z0-9:_.]+\"); /* Event listeners */\n\n    cr(tag+any+att+\"href\\\\s*=\"+any+etag, \"href\"); /* Linked elements */\n    cr(tag+any+att+\"src\\\\s*=\"+any+etag, \"src\"); /* Embedded elements */\n\n    cr(\"&lt;object\"+any+att+\"data\\\\s*=\"+any+etag, \"data\"); /* &lt;object data= &gt; */\n    cr(\"&lt;applet\"+any+att+\"codebase\\\\s*=\"+any+etag, \"codebase\"); /* &lt;applet codebase= &gt; */\n\n    /* &lt;param name=movie value= &gt;*/\n    cr(\"&lt;param\"+any+att+\"name\\\\s*=\\\\s*(?:\\\"\"+ae(\"movie\")+\"\\\"\"+any+etag+\"|'\"+ae(\"movie\")+\"'\"+any+etag+\"|\"+ae(\"movie\")+\"(?:\"+ae(\" \")+any+etag+\"|\"+etag+\"))\", \"value\");\n\n    /* &lt;style&gt; and &lt; style=  &gt; url()*/\n    cr(/&lt;style[^&gt;]*&gt;(?:[^\"']*(?:\"[^\"]*\"|'[^']*'))*?[^'\"]*(?:&lt;\\/style|$)/gi, \"url\", \"\\\\s*\\\\(\\\\s*\", \"\", \"\\\\s*\\\\)\");\n    cri(tag+any+att+\"style\\\\s*=\"+any+etag, \"style\", ae(\"url\")+s+ae(\"(\")+s, 0, s+ae(\")\"), ae(\")\"));\n\n    /* IE7- CSS expression() */\n    cr(/&lt;style[^&gt;]*&gt;(?:[^\"']*(?:\"[^\"]*\"|'[^']*'))*?[^'\"]*(?:&lt;\\/style|$)/gi, \"expression\", \"\\\\s*\\\\(\\\\s*\", \"\", \"\\\\s*\\\\)\");\n    cri(tag+any+att+\"style\\\\s*=\"+any+etag, \"style\", ae(\"expression\")+s+ae(\"(\")+s, 0, s+ae(\")\"), ae(\")\"));\n    return html.replace(new RegExp(\"(?:\"+prefix+\")+\", \"g\"), prefix);\n}\n</code></pre>\n\n<h3>Explanation of the code</h3>\n\n<p>The <code>sanitiseHTML</code> function is based on my <code>replace_all_rel_by_abs</code> function (see <a href=\"http://msdn.microsoft.com/en-us/scriptjunkie/gg278167\">this answer</a>). The <code>sanitiseHTML</code> function is completely rewritten though, in order to achieve maximum efficiency and reliability.</p>\n\n<p>Additionally, a new set of RegExps are added to remove all scripts and event handlers (including CSS <code>expression()</code>, IE7-). To make sure that all tags are parsed as expected, the adjusted tags are prefixed by <code>&lt;!--'\"--&gt;</code>. This prefix is necessary to correctly parse nested \"event handlers\" in conjunction with unterminated quotes: <code>&lt;a id=\"&gt;&lt;input onclick=\"&lt;div onmousemove=evil()&gt;\"&gt;</code>.</p>\n\n<p>These RegExps are dynamically created using an internal function <code>cr</code>/<code>cri</code> (<strong>C</strong>reate <strong>R</strong>eplace [<strong>I</strong>nline]). These functions accept a list of arguments, and create and execute an advanced RE replacement. To make sure that HTML entities aren't breaking a RegExp (<code>refresh</code> in <code>&lt;meta http-equiv=refresh&gt;</code> could be written in various ways), the dynamically created RegExps are partially constructed by function <code>ae</code> (<strong>A</strong>ny <strong>E</strong>ntity).<br />\nThe actual replacements are done by function <code>by</code> (replace <strong>by</strong>). In this implementation, <code>by</code> adds <code>data-</code> before all matched attributes.</p>\n\n<ol>\n<li>All <code>&lt;script&gt;//&lt;[CDATA[ .. //]]&gt;&lt;/script&gt;</code> occurrences are striped. This step is necessary, because <code>CDATA</code> sections allow  <code>&lt;/script&gt;</code> strings inside the code. After this replacement has been executed, it's safe to go to the next replacement:</li>\n<li>The remaining <code>&lt;script&gt;...&lt;/script&gt;</code> tags are removed.</li>\n<li>The <code>&lt;meta http-equiv=refresh .. &gt;</code> tag is removed</li>\n<li><p><strong>All</strong> event listeners and external pointers/attributes (<code>href</code>, <code>src</code>, <code>url()</code>) are prefixed by <code>data-</code>, as described previously.</p></li>\n<li><p>An <code>IFrame</code> object is created. IFrames are less likely to leak memory (contrary to the htmlfile ActiveXObject). The IFrame becomes invisible, and is appended to the document, so that the DOM can be accessed. <code>document.write()</code> are used to write HTML to the IFrame. <code>document.open()</code> and <code>document.close()</code> are used to empty the previous contents of the document, so that the generated document is an exact copy of the given <code>html</code> string.</p></li>\n<li>If a callback function has been specified, the function will be called with two arguments. The <em>first</em> argument is a reference to the generated <code>document</code> object. The <em>second</em> argument is a function, which destroys the generated DOM tree when called. This function should be called when you don't need the tree any more.<br />If the callback function isn't specified, the function returns an object consisting of two properties (<code>doc</code> and <code>destroy</code>), which behave the same as the previously mentioned arguments.</li>\n</ol>\n\n<h3>Additional notes</h3>\n\n<ul>\n<li>Setting the <code>designMode</code> property to \"On\" will stop a frame from executing scripts (not supported in Chrome). If you have to preserve the <code>&lt;script&gt;</code> tags for a specific reason, you can use <code>iframe.designMode = \"On\"</code> instead of the script stripping feature.</li>\n<li>I wasn't able to find a reliable source for the <code>htmlfile activeXObject</code>. According to <a href=\"http://msdn.microsoft.com/en-us/scriptjunkie/gg278167\">this source</a>, <code>htmlfile</code> is slower than IFrames, and more susceptible to memory leaks.<br /><br /></li>\n<li>All affected attributes (<code>href</code>, <code>src</code>, ...) are prefixed by <code>data-</code>. An example of getting/changing these attributes is shown for <code>data-href</code>:<br /><code>elem.getAttribute(\"data-href\")</code> and <code>elem.setAttribute(\"data-href\", \"...\")</code><br /><code>elem.dataset.href</code> and <code>elem.dataset.href = \"...\"</code>.</li>\n<li>External resources have been disabled. As a result, the page may look completely different:<br/><strike><code>&lt;link rel=\"stylesheet\" href=\"main.css\" /&gt;</code></strike> <em>No external styles</em><br /><strike><code>&lt;script&gt;document.body.bgColor=\"red\";&lt;/script&gt;</code></strike> <em>No scripted styles</em><br /><code>&lt;img src=\"128x128.png\" /&gt;</code> <em>No images: the size of the element may be completely different.</em></li>\n</ul>\n\n<h3>Examples</h3>\n\n<p><strong><code>sanitiseHTML(html)</code></strong><br />\nPaste this bookmarklet in the location's bar. It will offer an option to inject a textarea, showing the sanitised HTML string.</p>\n\n<pre><code>javascript:void(function(){var s=document.createElement(\"script\");s.src=\"http://rob.lekensteyn.nl/html-sanitizer.js\";document.body.appendChild(s)})();\n</code></pre>\n\n<p><strong>Code examples - <code>string2dom(html)</code></strong>:</p>\n\n<pre><code>string2dom(\"&lt;html&gt;&lt;head&gt;&lt;title&gt;Test&lt;/title&gt;&lt;/head&gt;&lt;/html&gt;\", function(doc, destroy){\n    alert(doc.title); /* Alert: \"Test\" */\n    destroy();\n});\n\nvar test = string2dom(\"&lt;div id='secret'&gt;&lt;/div&gt;\");\nalert(test.doc.getElementById(\"secret\").tagName); /* Alert: \"DIV\" */\ntest.destroy();\n</code></pre>\n\n<h3>Notable references</h3>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/7544550/javascript-regex-to-change-all-relative-urls-to-absolute/7544757#7544757\">SO: JS RE to change all relative to absolute URLs</a> - Function <code>sanitiseHTML(html)</code> is based on my previously created <code>replace_all_rel_by_abs(html)</code> function.</li>\n<li><a href=\"http://www.w3.org/wiki/HTML/Elements#Embedded_content\">Elements - Embedded content</a> - A full list of standard embedded elements</li>\n<li><a href=\"http://www.w3.org/wiki/HTML/Elements#Previous_HTML_html.2FElement\">Elements - Previous HTML elements</a> - An additional list of (deprecated) elements (such as <code>&lt;applet&gt;</code>)</li>\n<li><a href=\"http://msdn.microsoft.com/en-us/scriptjunkie/gg278167\">The htmlfile ActiveX object</a> - <em>\"Slower than iframe sandboxes. Leaks memory if not managed\"</em></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 70
                },
                {
                    "body": "<p>I'm not sure if IE supports <code>document.implementation.createHTMLDocument</code>, but if it does, use this algorithm (adapted from my <a href=\"https://gist.github.com/1129031\" rel=\"nofollow\">DOMParser HTML extension</a>). Note that the DOCTYPE will not be preserved.:</p>\n\n<pre><code>var\n      doc = document.implementation.createHTMLDocument(\"\")\n    , doc_elt = doc.documentElement\n    , first_elt\n;\ndoc_elt.innerHTML = your_html_here;\nfirst_elt = doc_elt.firstElementChild;\nif ( // are we dealing with an entire document or a fragment?\n       doc_elt.childElementCount === 1\n    &amp;&amp; first_elt.tagName.toLowerCase() === \"html\"\n) {\n    doc.replaceChild(first_elt, doc_elt);\n}\n\n// doc is an HTML document\n// you can now reference stuff like doc.title, etc.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just wandered across this page, am a bit late to be of any use :) but the following should help anyone with a similar problem in future... however IE7/8 should really be ignored by now and there are much better methods supported by the more modern browsers.</p>\n\n<p>The following works across nearly eveything I've tested - the only two down sides are:</p>\n\n<ol>\n<li><p>I've added bespoke <code>getElementById</code> and <code>getElementsByName</code> functions to the root div element, so these wont appear as expected futher down the tree <em>(unless the code is modified to cater for this)</em>.</p></li>\n<li><p>The doctype will be ignored - however I don't think this will make much difference as my experience is that the doctype wont effect how the dom is structured, just how it is rendered <em>(which obviously wont happen with this method)</em>.</p></li>\n</ol>\n\n<p>Basically the system relies on the fact that <code>&lt;tag&gt;</code> and <code>&lt;namespace:tag&gt;</code> are treated differently by the useragents. As has been found certain special tags can not exist within a div element, and so therefore they are removed. Namespaced elements can be placed anywhere <em>(unless there is a DTD stating otherwise)</em>. Whilst these namespace tags wont actually behave as the real tags in question, considering we are only really using them for their structural position in the document it doesn't really cause a problem.</p>\n\n<p>markup and code are as follows:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;script&gt;\n\n  /// function for parsing HTML source to a dom structure\n  /// Tested in Mac OSX, Win 7, Win XP with FF, IE 7/8/9, \n  /// Chrome, Safari &amp; Opera.\n  function parseHTML(src){\n\n    /// create a random div, this will be our root\n    var div = document.createElement('div'),\n        /// specificy our namespace prefix\n        ns = 'faux:',\n        /// state which tags we will treat as \"special\"\n        stn = ['html','head','body','title'];\n        /// the reg exp for replacing the special tags\n        re = new RegExp('&lt;(/?)('+stn.join('|')+')([^&gt;]*)?&gt;','gi'),\n        /// remember the getElementsByTagName function before we override it\n        gtn = div.getElementsByTagName;\n\n    /// a quick function to namespace certain tag names\n    var nspace = function(tn){\n      if ( stn.indexOf ) {\n        return stn.indexOf(tn) != -1 ? ns + tn : tn;\n      }\n      else {\n        return ('|'+stn.join('|')+'|').indexOf(tn) != -1 ? ns + tn : tn;\n      }\n    };\n\n    /// search and replace our source so that special tags are namespaced\n    /// &amp;nbsp; required for IE7/8 to render tags before first text found\n    /// &lt;faux:check /&gt; tag added so we can test how namespaces work\n    src = '&amp;nbsp;&lt;'+ns+'check /&gt;' + src.replace(re,'&lt;$1'+ns+'$2$3&gt;');\n    /// inject to the div\n    div.innerHTML = src;\n    /// quick test to see how we support namespaces in TagName searches\n    if ( !div.getElementsByTagName(ns+'check').length ) {\n      ns = '';\n    }\n\n    /// create our replacement getByName and getById functions\n    var createGetElementByAttr = function(attr, collect){\n      var func = function(a,w){\n        var i,c,e,f,l,o; w = w||[];\n        if ( this.nodeType == 1 ) {\n          if ( this.getAttribute(attr) == a ) {\n            if ( collect ) {\n              w.push(this);\n            }\n            else {\n              return this;\n            }\n          }\n        }\n        else {\n          return false;\n        }\n        if ( (c = this.childNodes) &amp;&amp; (l = c.length) ) {\n          for( i=0; i&lt;l; i++ ){\n            if( (e = c[i]) &amp;&amp; (e.nodeType == 1) ) {\n              if ( (f = func.call( e, a, w )) &amp;&amp; !collect ) {\n                return f;\n              }\n            }\n          }\n        }\n        return (w.length?w:false);\n      }\n      return func;\n    }\n\n    /// apply these replacement functions to the div container, obviously \n    /// you could add these to prototypes for browsers the support element \n    /// constructors. For other browsers you could step each element and \n    /// apply the functions through-out the node tree... however this would  \n    /// be quite messy, far better just to always call from the root node - \n    /// or use div.getElementsByTagName.call( localElement, 'tag' );\n    div.getElementsByTagName = function(t){return gtn.call(this,nspace(t));}\n    div.getElementsByName    = createGetElementByAttr('name', true);\n    div.getElementById       = createGetElementByAttr('id', false);\n\n    /// return the final element\n    return div;\n  }\n\n  window.onload = function(){\n\n    /// parse the HTML source into a node tree\n    var dom = parseHTML( document.getElementById('source').innerHTML );\n\n    /// test some look ups :)\n    var a = dom.getElementsByTagName('head'),\n        b = dom.getElementsByTagName('title'),\n        c = dom.getElementsByTagName('script'),\n        d = dom.getElementById('body');\n\n    /// alert the result\n    alert(a[0].innerHTML);\n    alert(b[0].innerHTML);\n    alert(c[0].innerHTML);\n    alert(d.innerHTML);\n\n  }\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;xmp id=\"source\"&gt;\n    &lt;!DOCTYPE html&gt;\n    &lt;html&gt;\n    &lt;head&gt;\n      &lt;!-- Comment //--&gt;\n      &lt;meta charset=\"utf-8\"&gt;\n      &lt;meta name=\"robots\" content=\"index, follow\"&gt;\n      &lt;title&gt;An example&lt;/title&gt;\n      &lt;link href=\"test.css\" /&gt;\n      &lt;script&gt;alert('of parsing..');&lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body id=\"body\"&gt;\n      &lt;b&gt;in a similar way to createDocumentFragment&lt;/b&gt;\n    &lt;/body&gt;\n    &lt;/html&gt;\n  &lt;/xmp&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Here's something I've been having a little bit of difficulty with. I have a local client-side script that needs to allow a user to fetch a remote web page and search that resulting page for forms. In order to do this (without regex), I need to parse the document into a fully traversable DOM object.</p>\n\n<p>Some limitations I'd like to stress:</p>\n\n<ul>\n<li>I don't want to use libraries (like jQuery). There's too much bloat for what I need to do here.</li>\n<li>Under no circumstances should scripts from the remote page be executed (for security reasons).</li>\n<li>DOM APIs, such as <code>getElementsByTagName</code>, need to be available.</li>\n<li>It only needs to work in Internet Explorer, but in 7 at the very least.</li>\n<li>Let's pretend I don't have access to a server. I do, but I can't use it for this.</li>\n</ul>\n\n<h2>What I've tried</h2>\n\n<p>Assuming I have a complete HTML document string (including DOCTYPE declaration) in the variable <code>html</code>, here's what I've tried so far:</p>\n\n<pre><code>var frag = document.createDocumentFragment(),\ndiv  = frag.appendChild(document.createElement(\"div\"));\n\ndiv.outerHTML = html;\n//-&gt; results in an empty fragment\n\ndiv.insertAdjacentHTML(\"afterEnd\", html);\n//-&gt; HTML is not added to the fragment\n\ndiv.innerHTML = html;\n//-&gt; Error (expected, but I tried it anyway)\n\nvar doc = new ActiveXObject(\"htmlfile\");\ndoc.write(html);\ndoc.close();\n//-&gt; JavaScript executes\n</code></pre>\n\n<p>I've also tried extracting the <code>&lt;head&gt;</code> and <code>&lt;body&gt;</code>nodes from the HTML and adding them to a <code>&lt;HTML&gt;</code> element inside the fragment, still no luck.</p>\n\n<p>Does anyone have any ideas?</p>\n",
            "last_activity_date": 1352989989,
            "question_id": 7474710,
            "score": 36,
            "tags": [
                "javascript",
                "html",
                "internet-explorer",
                "dom"
            ],
            "title": "Can I load an entire HTML document into a document fragment in Internet Explorer?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I think the answer is right here: <a href=\"http://www.trirand.net/forum/default.aspx?g=posts&amp;m=2678\" rel=\"nofollow\">http://www.trirand.net/forum/default.aspx?g=posts&amp;m=2678</a></p>\n\n<p>Let me know if this is wat you need.</p>\n\n<p>Best Regards.</p>\n\n<p>Apolo</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The main ideas to change the background color of the row you will find <a href=\"http://stackoverflow.com/questions/4369899/jqgrid-zebra-alt-rows-background-not-working-due-to-ui-theme-class/4382122#4382122\">here</a> and <a href=\"http://stackoverflow.com/questions/2931732/jqgrid-coloring-an-entire-line-in-grid-based-upon-a-cells-value/2936673#2936673\">here</a>. I recommend you to read <a href=\"http://stackoverflow.com/questions/4942761/how-to-change-the-color-of-jqgrid-cell/4943722#4943722\">this answer</a> which discussed different advantages and disadvantages of different approaches.</p>\n\n<p>To get column index from the column name you can use following simple function:</p>\n\n<pre><code>var getColumnIndexByName = function(grid, columnName) {\n        var cm = grid.jqGrid('getGridParam','colModel'),i=0,l=cm.length;\n        for (; i&lt;l; i++) {\n            if (cm[i].name===columnName) {\n                return i; // return the index\n            }\n        }\n        return -1;\n    };\n</code></pre>\n\n<p>The function <code>getColumnIndexByName($(\"#list\"), 'MyColumnName')</code> will get you the index in <code>colModel</code> of the 'MyColumnName' column.</p>\n\n<p>To change the background color you can follow the example</p>\n\n<pre><code>loadComplete: function() {\n    $(\"tr.jqgrow:odd\").addClass('myAltRowClass');\n}\n</code></pre>\n\n<p>from <a href=\"http://stackoverflow.com/questions/4369899/jqgrid-zebra-alt-rows-background-not-working-due-to-ui-theme-class/4382122#4382122\">the answer</a>, but instead of <code>':odd'</code> filter you can write the filter yourself using <a href=\"http://api.jquery.com/filter/\">jQuery.filter</a>. Inside of the filter you can use <a href=\"http://api.jquery.com/nth-child-selector/\">:nth-child()</a> to access the data from the corresponding <code>&lt;td&gt;</code> element (see <a href=\"http://stackoverflow.com/questions/5010761/linking-from-a-column-value-in-jqgrid-to-a-new-page-using-get/5017528#5017528\">here</a>)</p>\n\n<p><strong>UPDATED</strong>: You can do the following (very close to the code from <a href=\"http://stackoverflow.com/questions/5664587/jqgrid-load-large-data-set-without-pagination/5690583#5690583\">the another answer</a>):</p>\n\n<pre><code>loadComplete: function() {\n    var iCol = getColumnIndexByName($(this),'closed'),\n        cRows = this.rows.length, iRow, row, className;\n\n    for (iRow=0; iRow&lt;cRows; iRow++) {\n        row = this.rows[iRow];\n        className = row.className;\n        if ($.inArray('jqgrow', className.split(' ')) &gt; 0) {\n            var x = $(row.cells[iCol]).children(\"input:checked\");\n            if (x.length&gt;0) {\n                if ($.inArray('myAltRowClass', className.split(' ')) === -1) {\n                    row.className = className + ' myAltRowClass';\n                }\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>The corresponding demo is <a href=\"http://www.ok-soft-gmbh.com/jqGrid/SimpleLocalGridChangeRowBackgroundBasedOnCheckboxes.htm\">here</a>. You will see the following:</p>\n\n<p><img src=\"http://i.stack.imgur.com/cg6RJ.png\" alt=\"enter image description here\"></p>\n\n<p>By the way if the 'Closed' column will be hidden everything will continue to work as before.</p>\n\n<p><strong>UPDATED 2</strong>: <a href=\"http://stackoverflow.com/a/10531680/315935\">The answer</a> describe how to use <code>rowattr</code> callback to simplify the solution and to have the best performance (in case of <code>gridview: true</code>).</p>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>jqGrid has column named Posted. It can be positioned in different positions depending how grid is configured by customer but is always prssent.</p>\n\n<p>I need to change background color of rows if Posted column has value True</p>\n\n<p>I tried colmodel below but alert(rdata.Posted) displays always undefined.</p>\n\n<p>How to change backgound color of row if Posted column in this row has value true ?</p>\n\n<p>I looked into lot of Oleg and other solutions for changing background color but they are using hard coded column number.</p>\n\n<pre><code>colModel: [\n\n{\"cellattr\":function(rowId, tv, rawObject, cm, rdata) {  \nif (rdata.Posted)\n    return 'class=\"jqgrid-readonlycolumn\"';\n    return '';\n      }\n  ,\"label\":\"Klient\",\"name\":\"Klient_nimi\",\"classes\":null,\"hidden\":false},\n\n\n{\"label\":null,\"name\":\"Posted\",\"editable\":true,\"width\":0,\n\"classes\":null,\"hidden\":true}],\n...\n</code></pre>\n\n<p><strong>Update</strong></p>\n\n<p>In update2 Oleg recommends to use rowattr. I need to hide inlined delete button and custom post button in  actions column also. I'm usijng code below in loadComplete. How to implement this using rowattr ?</p>\n\n<pre><code>var LoadCompleteHandler = function () {\n    var iCol = getColumnIndexByName($grid, 'Kinnitatud'),\n      postedDateCol = getColumnIndexByName($grid, 'Kinkuup'),\n      cRows = $grid[0].rows.length,\n      iRow,\n      row,\n      className,\n      isPosted,\n      mycell,\n      mycelldata,\n      i, count,\n      cm = $grid.jqGrid('getGridParam', 'colModel'),\n      l,\n      iActionsCol = getColumnIndexByName($grid, '_actions');\n    l = cm.length;\n    if (iCol &gt; 0 || postedDateCol &gt; 0) {\n        for (iRow = 0; iRow &lt; cRows; iRow = iRow + 1) {\n            row = $grid[0].rows[iRow];\n            className = row.className;\n            isPosted = false;\n            if ($.inArray('jqgrow', className.split(' ')) &gt; 0) { // $(row).hasClass('jqgrow')\n                if (iCol &gt; 0) {\n                    isPosted = $(row.cells[iCol]).find(\"&gt;div&gt;input:checked\").length &gt; 0;\n                }\n                if (postedDateCol &gt; 0) {\n                    mycell = row.cells[postedDateCol];\n                    mycelldata = mycell.textContent || mycell.innerText;\n                    isPosted = mycelldata.replace(/^\\s+/g, \"\").replace(/\\s+$/g, \"\") !== \"\";\n                }\n\n                if (isPosted) {\n                    if ($.inArray('jqgrid-postedrow', className.split(' ')) === -1) {\n                        row.className = className + ' jqgrid-postedrow';\n                        $(row.cells[iActionsCol]).find(\"&gt;div&gt;div.ui-inline-del\").hide();\n                        $(row.cells[iActionsCol]).find(\"&gt;div&gt;div.ui-inline-post\").hide();\n                    }\n                }\n            }\n        }\n    }\n</code></pre>\n",
            "last_activity_date": 1336935878,
            "question_id": 6575192,
            "score": 7,
            "tags": [
                "javascript",
                "jqgrid"
            ],
            "title": "jqGrid: change background color of row based on row cell value by column name"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<pre><code>var num = 34.7654;\n\nnum = Math.round(num * 10) / 10;\n\nconsole.log(num); // Logs: 34.8\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>var number = 123.456;\n\nconsole.log(number.toFixed(1)); // should round to 123.5\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p><code>Math.round( num * 10) / 10</code> works, here is an example...</p>\n\n<pre><code>var number = 12.3456789;\nvar rounded = Math.round( number * 10 ) / 10;\n// rounded is 12.3\n</code></pre>\n\n<p>if you want it to have one decimal place, even when that would be a 0, then add...</p>\n\n<pre><code>var fixed = rounded.toFixed(1);\n// fixed is always to 1dp\n// BUT: returns string!\n\n// to get it back to number format\nparseFloat( number.toFixed(2) )\n// 12.34\n// but that will not retain any trailing zeros\n\n// so, just make sure it is the last step before output,\n// and use a number format during calculations!\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 138
                },
                {
                    "body": "<p>If your method does not work, plz post your code.</p>\n\n<p>However,you could accomplish the rounding off task as:</p>\n\n<pre><code>var value = Math.round(234.567*100)/100\n</code></pre>\n\n<p>Will give you 234.56</p>\n\n<p>Similarly</p>\n\n<pre><code> var value = Math.round(234.567*10)/10\n</code></pre>\n\n<p>Will give 234.5</p>\n\n<p>In this way you can use a variable in the place of the constant as used above.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I vote for <code>toFixed()</code>, but, for the record, here's another way that uses bit shifting to cast the number to an int.  So, it always rounds towards zero (down for positive numbers, up for negatives).</p>\n\n<pre><code>var rounded = ((num * 10) &lt;&lt; 0) * 0.1;\n</code></pre>\n\n<p>But hey, since there are no function calls, it's wicked fast. :)</p>\n\n<p>And here's one that uses string matching:</p>\n\n<pre><code>var rounded = (num + '').replace(/(^.*?\\d+)(\\.\\d)?.*/, '$1$2');\n</code></pre>\n\n<p>I don't recommend using the string variant, just sayin.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If you use <code>Math.round</code> then you will return <code>5</code> in case of <code>5.01</code>, and not <code>5.0</code>.</p>\n\n<p>If you use <code>toFixed</code> you run into <a href=\"http://stackoverflow.com/questions/566564/javascript-functions-math-roundnum-vs-num-tofixed0-and-browser-inconsistenci\">rounding</a> <a href=\"http://stackoverflow.com/questions/10015027/javascript-tofixed-not-rounding\">issues</a>.</p>\n\n<p>If you want the best of both worlds combine the two:</p>\n\n<pre><code>(Math.round(5.01 * 10) / 10).toFixed(1)\n</code></pre>\n\n<p>You might want to create a function for this:</p>\n\n<pre><code>function roundedToFixed(_float, _digits){\n  var rounder = Math.pow(10, _digits);\n  return (Math.round(_float * rounder) / rounder).toFixed(_digits);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Try with this:</p>\n\n<pre><code>var original=28.453\n</code></pre>\n\n<p>1) //round \"original\" to two decimals</p>\n\n<pre><code>var result = Math.round (original * 100) / 100  //returns 28.45\n</code></pre>\n\n<p>2) // round \"original\" to 1 decimal</p>\n\n<pre><code>var result = Math.round (original * 10) / 10  //returns 28.5\n</code></pre>\n\n<p>3) //round 8.111111 to 3 decimals</p>\n\n<pre><code>var result = Math.round (8.111111 * 1000) / 1000  //returns 8.111\n</code></pre>\n\n<p>less complicated and easier to implement...</p>\n\n<p>with this, you can create a function to do:</p>\n\n<pre><code>function RoundAndFix (n, d) {\n    var m = Math.pow (10, d);\n    return Math.round (n * m) / m;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>x = number, n = decimal-places:</p>\n\n<pre><code>function round(x, n) {\n    return Math.round(x * Math.pow(10, n)) / Math.pow(10, n)\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This seems to work reliably across anything I throw at it:</p>\n\n<pre><code>function round(val, multiplesOf) {\n  var s = 1 / multiplesOf;\n  var res = Math.ceil(val*s)/s;\n  res = res &lt; val ? res + multiplesOf: res;\n  var afterZero = multiplesOf.toString().split(\".\")[1];\n  return parseFloat(res.toFixed(afterZero ? afterZero.length : 0));\n}\n</code></pre>\n\n<p>It rounds up, so you may need to modify it according to use case. This should work:</p>\n\n<pre><code>console.log(round(10.01, 1)); //outputs 11\nconsole.log(round(10.01, 0.1)); //outputs 10.1\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you care about proper rounding up then:</p>\n\n<pre><code>function roundNumericStrings(str , numOfDecPlacesRequired){ \n     var roundFactor = Math.pow(10, numOfDecPlacesRequired);  \n     return (Math.round(parseFloat(str)*roundFactor)/roundFactor).toString();  }\n</code></pre>\n\n<hr>\n\n<p>Else if you don't then you already have a reply from previous posts</p>\n\n<pre><code>str.slice(0, -1)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Can you round a number in javascript to 1 character after the decimal point (properly rounded)?</p>\n\n<p>I tried the *10, round, /10 but it leaves two decimals at the end of the int.</p>\n",
            "last_activity_date": 1424686183,
            "question_id": 7342957,
            "score": 56,
            "tags": [
                "javascript",
                "rounding"
            ],
            "title": "How do you round to 1 decimal place in Javascript?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>CSS3 supports \"open in new tab\", by the property <a href=\"http://www.w3.org/TR/2004/WD-css3-hyperlinks-20040224/\">target-new</a></p>\n\n<pre><code>target-new: window | tab | none;\n</code></pre>\n\n<hr>\n\n<p>For a method of forcing opening in a new tab that is well supported, try the following:</p>\n\n<pre><code>&lt;a href=\"some url\" target=\"_newtab\"&gt;content of the anchor&lt;/a&gt;\n</code></pre>\n\n<hr>\n\n<p>Else, use <a href=\"http://www.paulsilver.co.uk/code/html_working_popup.php\">this</a> method to resize window immediately, to ensure that popup blockers do not kill your popup </p>\n",
                    "is_accepted": false,
                    "score": 38
                },
                {
                    "body": "<p>Other than the CSS3 target-new option @anirudh4444 mentioned, you can't and mostly importantly probably shouldn't. You are trying to control the user's experience, when this should most likely be left up to the user.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The following works in Chrome:</p>\n\n<pre><code>&lt;script&gt;\n    function buildAndGo() {\n        var aEl = document.getElementById('missingLink');\n        aEl.href = \"#\" + resultOfSomeCalculation();\n\n        var e = document.createEvent('MouseEvents');\n        e.initEvent( 'click', true, true );\n\n        aEl.dispatchEvent(e);\n    }\n&lt;/script&gt;\n...\n&lt;button onclick=\"buildAndGo()\"&gt;Do it&lt;/button&gt;\n&lt;a href=\"#\" id=\"missingLink\" target=\"_blank\" style=\"visibility: hidden;\"&gt;&lt;/a&gt;\n</code></pre>\n\n<p>Working from the following sources to try and get an IE version working:\n<a href=\"http://www.google.com/codesearch#2tHw6m3DZzo/trunk/common/src/js/core/scripts/selenium-browserbot.js&amp;q=BrowserBot.prototype.triggerMouseEvent%20package%3ahttp://selenium%5C.googlecode%5C.com\" rel=\"nofollow\">Selenium BrowserBot</a>,\n<a href=\"http://developer.yahoo.com/yui/docs/UserAction.js.html\" rel=\"nofollow\">YUI User Action</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Your form has target=\"_blank\" (including a leading underscore) while your simple link has the target='blank' without the leading underscore.  The \"_blank\" is a reserved word specifying a particular action, but \"blank\" is the name of a specific, possibly new, window.  That's why you're getting different results.  Both are pop-ups, but different types.</p>\n\n<p>Each user has ultimate control about whether a pop-up should open a new window or a new tab.  There's nothing you can do about it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I was able to solve this issue using a \"form\" element.</p>\n\n<pre><code>function openNewTab(link) {\n     var frm = $('&lt;form   method=\"get\" action=\"' + link + '\" target=\"_blank\"&gt;&lt;/form&gt;')\n     $(\"body\").append(frm);\n     frm.submit().remove();\n}\n</code></pre>\n\n<p>For complete implementation and details visit my post <a href=\"http://mukesh.in/force-open-new-tab-in-browsers-instead-of-windows/\" rel=\"nofollow\">http://mukesh.in/force-open-new-tab-in-browsers-instead-of-windows/</a></p>\n\n<p>Or see this  <a href=\"http://goo.gl/yd0yJK\" rel=\"nofollow\">JSFiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In case of a link yes only using <strong>target</strong> tag would work.</p>\n\n<p>But In case of a button try doing this with the <strong>onclick</strong> function instead of using just <strong>_blank</strong></p>\n\n<p>Use the window.open(url, target) function instead - it takes a URL, and a target window name, which behaves the same as the target=\"something\" attribute on a link....like this</p>\n\n<pre><code>button(type=\"button\", onclick=\"window.open('auth/google', '_blank');\")\n</code></pre>\n\n<p>This should work.</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>You can use any of the following, I tested them all in 6 different browsers. (Google Chrome, Mozilla Firefox, Microsoft Internet Explorer, Opera, K-meleon* and Seamonkey.</p>\n\n<ol>\n<li><code>&lt;a href=\"blaah\" target=\"_blank\"&gt;Blaah&lt;/a&gt;</code></li>\n<li><code>&lt;a href=\"blaah\" target=\"_tab\"&gt;Blaah&lt;/a&gt;</code></li>\n<li><code>&lt;a href=\"blaah\" target=\"_new\"&gt;Blaah&lt;/a&gt;</code></li>\n</ol>\n\n<p>They all work the exact same, and the choice is completely up to preference.</p>\n\n<p>*K-meleon, for some reason just opened up the page I was on when I clicked the link.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have an 'Open' button that 'calculates' a link that should be opened in a new tab.\nI try to use:</p>\n\n<pre><code>window.open(url, '_blank');\n</code></pre>\n\n<p>But that opens a new window.</p>\n\n<p>I also tried the following method:</p>\n\n<pre><code>&lt;form id=\"oform\" name=\"oform\" action=\"\" method=\"post\" target=\"_blank\"&gt;\n&lt;/form&gt;\n\n...\n\ndocument.getElementById(\"oform\").action = url;\ndocument.getElementById(\"oform\").submit();\n</code></pre>\n\n<p>Still, a new window is opened, instead of a new tab.</p>\n\n<p>When using simple <code>&lt;a href...&gt;</code> with <code>target='blank'</code>, the link is opened in a new tab.</p>\n\n<p>Is there a solution?</p>\n",
            "last_activity_date": 1405556475,
            "question_id": 6296013,
            "score": 30,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "How can I open a link in new tab (and not new window)?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>It's my recollection that IE was the only browser to implement <code>onbeforeunload</code>, but some browsers have taken it upon themselves to implement it.</p>\n\n<p>Long story short, IE is about the only browser (with very finite exceptions) you'll find this event consistently in.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Then you can use both  like this :</p>\n\n<pre><code>&lt;body onunload=\"functionName();\" onbeforeunload='functionName();' &gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -6
                },
                {
                    "body": "<p>No it does not fire in all browsers. It's not supported in mobile browsers e.g. Safari, Opera Mobile &amp; mini, Dolphin. See <a href=\"http://stackoverflow.com/questions/6205989/is-there-an-alternative-method-to-use-onbeforeunload-in-mobile-safari\">Is there an alternative method to use onbeforeunload in mobile safari?</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I found a workaround for Firefox with <code>setTimeout</code> function because it does not have the same behaviour as other web browsers.</p>\n\n<pre><code>window.onbeforeunload = function (e) {\n    var message = \"Are you sure ?\";\n    var firefox = /Firefox[\\/\\s](\\d+)/.test(navigator.userAgent);\n\n    if (firefox) {\n        //Add custom dialog\n        //Firefox does not accept window.showModalDialog(), window.alert(), window.confirm(), and window.prompt() furthermore\n        var dialog = document.createElement(\"div\");\n        document.body.appendChild(dialog);\n        dialog.id = \"dialog\";\n        dialog.style.visibility = \"hidden\";\n        dialog.innerHTML = message; \n        var left = document.body.clientWidth / 2 - dialog.clientWidth / 2;\n        dialog.style.left = left + \"px\";\n        dialog.style.visibility = \"visible\";  \n        var shadow = document.createElement(\"div\");\n        document.body.appendChild(shadow);\n        shadow.id = \"shadow\";       \n        //tip with setTimeout\n        setTimeout(function () {\n            document.body.removeChild(document.getElementById(\"dialog\"));\n            document.body.removeChild(document.getElementById(\"shadow\"));\n        }, 0);\n    }\n\n    return message;\n}\n</code></pre>\n\n<p>GitHub: <a href=\"https://github.com/Aelios/crossbrowser-onbeforeunload\" rel=\"nofollow\">https://github.com/Aelios/crossbrowser-onbeforeunload</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Building upon Tushar Ahirrao solution this works cross browser and triggers once (Works in Firefox, Chrome, whatever)</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\nvar app = {};\napp.unloaded = false;\napp.unload = function() {\n    if (app.unloaded) return; else app.unloaded = true;\n    // your code here\n    return \"YO\";\n};\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body onunload=\"return app.unload();\" onbeforeunload=\"return app.unload();\"&gt;\nYO\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Paste above template to empty file then edit it</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Does <a href=\"https://developer.mozilla.org/En/DOM/Window.onbeforeunload\"><code>window.onbeforeunload()</code></a> fire in all browsers? I need a onbeforeunload functionality which is supported at least by IE6 and FF3.6. </p>\n\n<p>For IE, <code>onbeforeunload()</code> seems only to be <a href=\"http://msdn.microsoft.com/en-us/library/ms536907%28v=vs.85%29.aspx\">supported by IE9</a></p>\n",
            "last_activity_date": 1423864998,
            "question_id": 7389554,
            "score": 23,
            "tags": [
                "javascript",
                "cross-browser",
                "onbeforeunload"
            ],
            "title": "Crossbrowser onbeforeunload?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><strong>Use a testing framework</strong></p>\n\n<p>This might be helpful - <a href=\"http://seleniumhq.org/\" rel=\"nofollow\">http://seleniumhq.org/</a> - Selenium is a web application automated testing system.</p>\n\n<p>You can create tests using the Firefox plugin <a href=\"http://seleniumhq.org/projects/ide/\" rel=\"nofollow\">Selenium IDE</a></p>\n\n<p><strong>Manual firing of events</strong></p>\n\n<p>To manually fire events the correct way you will need to use different methods for different browsers - either <code>el.dispatchEvent</code> or <code>el.fireEvent</code> where <code>el</code> will be your Anchor element.  I believe both of these will require constructing an Event object to pass in.</p>\n\n<p>The alternative, not entirely correct, quick-and-dirty way would be this:</p>\n\n<pre><code>var el = document.getElementById('anchorelementid');\nel.onclick(); // Not entirely correct because your event handler will be called\n              // without an Event object parameter.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Add an ID to your link</p>\n\n<pre><code>&lt;a href=\"#\" target=\"_blank\" id=\"my-link\" onclick=\"javascript:Test('Test');\"&gt;MSDN&lt;/a&gt;\n</code></pre>\n\n<p>and call it in your javascript code:</p>\n\n<pre><code>var l = document.getElementById('my-link');\nfor(var i=0; i&lt;50; i++)\n   l.onclick();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>Here is what I use: <a href=\"http://jsfiddle.net/mendesjuan/rHMCy/4/\">http://jsfiddle.net/mendesjuan/rHMCy/4/</a></p>\n\n<p>Updated to work with IE9+</p>\n\n<pre><code>/**\n * Fire an event handler to the specified node. Event handlers can detect that the event was fired programatically\n * by testing for a 'synthetic=true' property on the event object\n * @param {HTMLNode} node The node to fire the event handler on.\n * @param {String} eventName The name of the event without the \"on\" (e.g., \"focus\")\n */\nfunction fireEvent(node, eventName) {\n    // Make sure we use the ownerDocument from the provided node to avoid cross-window problems\n    var doc;\n    if (node.ownerDocument) {\n        doc = node.ownerDocument;\n    } else if (node.nodeType == 9){\n        // the node may be the document itself, nodeType 9 = DOCUMENT_NODE\n        doc = node;\n    } else {\n        throw new Error(\"Invalid node passed to fireEvent: \" + node.id);\n    }\n\n     if (node.dispatchEvent) {\n        // Gecko-style approach (now the standard) takes more work\n        var eventClass = \"\";\n\n        // Different events have different event classes.\n        // If this switch statement can't map an eventName to an eventClass,\n        // the event firing is going to fail.\n        switch (eventName) {\n            case \"click\": // Dispatching of 'click' appears to not work correctly in Safari. Use 'mousedown' or 'mouseup' instead.\n            case \"mousedown\":\n            case \"mouseup\":\n                eventClass = \"MouseEvents\";\n                break;\n\n            case \"focus\":\n            case \"change\":\n            case \"blur\":\n            case \"select\":\n                eventClass = \"HTMLEvents\";\n                break;\n\n            default:\n                throw \"fireEvent: Couldn't find an event class for event '\" + eventName + \"'.\";\n                break;\n        }\n        var event = doc.createEvent(eventClass);\n\n        var bubbles = eventName == \"change\" ? false : true;\n        event.initEvent(eventName, bubbles, true); // All events created as bubbling and cancelable.\n\n        event.synthetic = true; // allow detection of synthetic events\n        // The second parameter says go ahead with the default action\n        node.dispatchEvent(event, true);\n    } else  if (node.fireEvent) {\n        // IE-old school style\n        var event = doc.createEventObject();\n        event.synthetic = true; // allow detection of synthetic events\n        node.fireEvent(\"on\" + eventName, event);\n    }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>I'm quite ashamed that there are so many incorrect or undisclosed partial applicability.</p>\n\n<p>The easiest way to do this is through Chrome or Opera (my examples will use Chrome) using the Console. Enter the following code into the console (generally in 1 line):</p>\n\n<pre><code>var l = document.getElementById('testLink');\nfor(var i=0; i&lt;5; i++){\n  l.click();\n}\n</code></pre>\n\n<p>This will generate the required result</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>For me,</p>\n\n<pre><code> l.onclick();\n</code></pre>\n\n<p>didn't work, </p>\n\n<pre><code> l.click();\n</code></pre>\n\n<p>however did. I really don't know why, but maybe this helps</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Fair warning:</p>\n\n<p><code>element.onclick()</code> does not behave as expected. It only runs the code within <code>onclick=\"\" attribute</code>, but does not trigger default behavior.</p>\n\n<p>I had similar issue with radio button not setting to checked, even though <code>onclick</code> custom function was running fine. Had to add <code>radio.checked = \"true\";</code> to set it. Probably the same goes and for other elements (after <code>a.onclick()</code> there should be also <code>window.location.href = \"url\";</code>)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a hyperlink in my page. I am trying to automate a number of clicks on the hyperlink for testing purposes. Is there any way you can simulate 50 clicks on the hyperlink using JavaScript?</p>\n\n<pre><code>&lt;a href=\"#\" target=\"_blank\" onclick=\"javascript:Test(\"Test\");\"&gt;MSDN&lt;/a&gt;\n</code></pre>\n\n<p>I'm looking for onClick event trigger from the JavaScript.</p>\n",
            "last_activity_date": 1412238650,
            "question_id": 2381572,
            "score": 23,
            "tags": [
                "javascript",
                "javascript-events"
            ],
            "title": "How can I trigger a JavaScript event click"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Because you use the example from my old answers (<a href=\"http://stackoverflow.com/questions/3405029/jqgrid-disable-form-fields-when-editing/3405961#3405961\">this</a> and <a href=\"http://stackoverflow.com/questions/3836251/how-to-add-a-simple-text-label-in-a-jqgrid-form/3838407#3838407\">this</a>) I fill that I should answer also on your question.</p>\n\n<p>In the <a href=\"http://www.ok-soft-gmbh.com/jqGrid/CustomFormEdit.htm\">old example</a> all fields, which can be modified during Add or Edit dialogs, has property  <code>editable:true</code>. The fields which should be shown only in the Add dialog will be made hidden inside of <a href=\"http://www.trirand.com/jqgridwiki/doku.php?id=wiki%3aform_editing#events\">beforeShowForm</a> event handle. In the same way we can <strong>temporary</strong> switch some fields to <code>editable:false</code> before call of the editRow method and reset back to the <code>editable:true</code> immediately after the call:</p>\n\n<pre><code>onSelectRow: function(id) {\n    if (id &amp;&amp; id !== lastSel) {\n        grid.jqGrid('restoreRow',lastSel);\n        var cm = grid.jqGrid('getColProp','Name');\n        cm.editable = false;\n        grid.jqGrid('editRow', id, true, null, null, 'clientArray');\n        cm.editable = true;\n        lastSel = id;\n    }\n}\n</code></pre>\n\n<p>You can see this live <a href=\"http://www.ok-soft-gmbh.com/jqGrid/CustomFormAndInlineEdit.htm\">here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>I have a jQGrid with a column that I only want to be editable when adding a new row.</p>\n\n<p>I've seen examples of how to do this when edits and adds are both happening in a dialog but is there a way to do this with in-line editing?</p>\n\n<p>I've tried using grid.setColProp() in beforeShowForm:, but this doesn't work ( the column remains read only and is not present in the add dialog).</p>\n\n<p>Example of dialog based column enable/disable:<br>\n<a href=\"http://www.ok-soft-gmbh.com/jqGrid/CustomFormEdit.htm\">http://www.ok-soft-gmbh.com/jqGrid/CustomFormEdit.htm</a></p>\n",
            "last_activity_date": 1367335146,
            "question_id": 4307147,
            "score": 6,
            "tags": [
                "javascript",
                "jquery",
                "jqgrid",
                "editing"
            ],
            "title": "jQGrid, how to make a column editable in the add dialog but not during (inline) edits"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Unfortunately, There is no way to do that...</p>\n\n<p>The chrome://chromewebdata link only works if an instance of dev tools is already opened...</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Yes you can (or not) using the experimental APIs <code>chrome.experimental.webInspector</code>.<br>\n<a href=\"http://code.google.com/chrome/extensions/experimental.html\" rel=\"nofollow\">http://code.google.com/chrome/extensions/experimental.html</a><br>\nYou can even change the content and panels of it.<br>\nNote that you will not able submit extensions that use experimental APIs.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is a bit <em>hacky</em> but I think it's worth a try.</p>\n\n<p>Once you've created a new tab inject the following content script in to that page;</p>\n\n<pre><code>(function () {\n    var event = document.createEvent('KeyboardEvent');\n    event.initKeyboardEvent(\n        'keydown', // event type\n        true, // can bubble\n        true, // can be canceled\n        window, // view\n        'U+0049', // keyboard identifier for \"I\"\n        KeyboardEvent.DOM_KEY_LOCATION_STANDARD, // standard location\n        'Control Shift' // modifiers\n    );\n    if (!document.dispatchEvent(event)) {\n        // Was canceled, you're screwed\n        console.log('Canceled');\n    } else {\n        // Can you see the web inspector?\n        console.log('Success');\n    }\n})();\n</code></pre>\n\n<p>This will attempt to fire the hotkey associated with the Developer tools menu item. Unfortunately, this isn't listed in <a href=\"http://www.google.com/support/chrome/bin/static.py?page=guide.cs&amp;guide=25799&amp;topic=28650&amp;\" rel=\"nofollow\">Chrome's help section</a> but you can see on your installation that it's <code>Ctrl+Shift+I</code>. You'll need to check if the user is on Mac and change the keys accordingly but that's not hard.</p>\n\n<p>I'm not sure if this will work and I don't have time to test this right now but I'm very interested to see if it does.</p>\n\n<p>It might also be useful to read more on <a href=\"http://www.w3.org/TR/2006/WD-DOM-Level-3-Events-20060413/events.html#Events-KeyboardEvent-initKeyboardEvent\" rel=\"nofollow\">event.initKeyboardEvent</a> (and maybe even <a href=\"https://developer.mozilla.org/en/DOM/event.initKeyEvent\" rel=\"nofollow\">event.initKeyEvent</a>) so you don't get thrown because I gave used a wrong argument in my quick mock up.</p>\n\n<p>Good luck!</p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>As @Derek pointed out, <code>event.initKeyEvent</code> is only supported by FireFox. However, <code>event.initKeyboardEvent</code> works with Chrome. I've updated the code even though it still doesn't work. It logs \"Success\" on the console but it doesn't trigger the web inspector display. I'm only updating this post as it may hopefully help others find a solution.</p>\n\n<p><a href=\"http://jsfiddle.net/alasdair/Lg2hT/\" rel=\"nofollow\">http://jsfiddle.net/alasdair/Lg2hT/</a></p>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>It seems unlikely that this is possible or will ever become possible,</p>\n\n<p>check this:\n<a href=\"https://code.google.com/p/chromium/issues/detail?id=112277\">https://code.google.com/p/chromium/issues/detail?id=112277</a></p>\n\n<p>which says:\n\"We only allow explicit devtools opening.\"</p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I have a chrome extension which hooks into the devtools.  Ideally I want a badge that, when clicked, opens up the devtools on the new tab which I created.  Is there any way to do this from the background page?</p>\n",
            "last_activity_date": 1371111034,
            "question_id": 6801577,
            "score": 24,
            "tags": [
                "javascript",
                "google-chrome-extension",
                "google-chrome-devtools"
            ],
            "title": "Can I programmatically open the devtools from a Google Chrome extension?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If you are looking for a list of browsers where you should utilize a non native sorting algorithm, my suggestion is <em>don't</em>. </p>\n\n<p>Instead do a sort sanity check when the script loads and make your decision from that.</p>\n\n<p>As the spec doesn't require a particular behavior in that regard, it is not immune to later change, even within the same browser line. </p>\n\n<p>You could submit a patch to <a href=\"http://www.browserscope.org/\" rel=\"nofollow\">http://www.browserscope.org/</a> to include such tests in their suite. But again, feature detection is superior to browser detection.  </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I can't help you much (haven't touched JS for many years) but share a trick I use in C/C++ I routinely use for <code>qsort()</code>.</p>\n\n<p>JS' sort() allows to specify a compare function. Create second array of the same length and fill it with increasing numbers from 0. This are indexes into the original array. We are going to sort the second array. Make a custom compare function. It will get the two elements from the second array: use them as indexes into the original arrays and compare the elements. If elements happen to be equal, then compare their indexes to make the order stable. After the sort(), the second array would contain indexes which you can use to access the elements of original array in stable sorted order.</p>\n\n<p>In general, stable sort algorithms are only maturing and still require more extra memory compared to the good ol' qsort. I guess that's why very few specs mandate stable sort.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><a href=\"https://bug224128.bugzilla.mozilla.org/attachment.cgi?id=134421\">Simple test case</a> (ignore the heading, second set of numbers should be sequential if the engine's sort is stable).</p>\n\n<p>IE's sort has been stable as long as I've ever used it (so IE6). Checking again in IE8 and it appears to still be the case. </p>\n\n<p>And although that Mozilla page you link to says Firefox's sort is stable, I definitely say this was not always the case prior to (and including) Firefox 2.0.</p>\n\n<p>Some cursory results:</p>\n\n<ul>\n<li>IE6+: <strong>stable</strong></li>\n<li>Firefox &lt; 3: unstable</li>\n<li>Firefox >= 3: <strong>stable</strong></li>\n<li>Chrome &lt;= 5 (i.e., all versions to date): unstable</li>\n<li>Opera &lt; 10: unstable</li>\n<li>Opera >= 10: <strong>stable</strong></li>\n<li>Safari 4: stable</li>\n</ul>\n\n<p>All tests on Windows.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/1427608/fast-stable-sorting-algorithm-implementation-in-javascript\">Fast stable sorting algorithm implementation in javascript</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 28
                }
            ],
            "body": "<p>What is the stability of Array.sort in different browsers.  I know that the ECMA Script specification does not specify which algorithm to use, nor does it specify whether the sort should be stable.</p>\n\n<p>I've found this information for Firefox at\n<a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Array/sort\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Array/sort</a> \nwhich specifies that firefox uses a stable sort.</p>\n\n<p>Does anyone know about IE 6/7/8, Chrome, Safari?</p>\n",
            "last_activity_date": 1276323291,
            "question_id": 3026281,
            "score": 30,
            "tags": [
                "javascript",
                "sorting",
                "cross-browser",
                "stable-sort"
            ],
            "title": "Array.sort Sorting Stability in Different Browsers"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I guess you could open a popup window and call <em>that</em> a dialog box. I'm unsure of the details, but I'm pretty sure you can close a window programmatically that you opened from javascript. Would this suffice?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>no control over the dialog box, if you had control over the dialog box you could write obtrusive javascript code. (Its is not a good idea to use alert for anything except debugging)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you do it programmatically in JS it will be like reinventing the wheel. I recommend using a <a href=\"http://jquery.com/\" rel=\"nofollow\">jQuery</a> plugin called <a href=\"http://cool-javascripts.com/effects/jgrowl-to-show-unobtrusive-messages.html\" rel=\"nofollow\">jGrowl</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<blockquote>\n  <p>I want to be able to close an alert\n  box automatically using javascript\n  after a certain amount of time or on a\n  specific event (i.e. onkeypress)</p>\n</blockquote>\n\n<p>A sidenote: if you have an Alert(\"data\"), you won't be able to keep code running in background (AFAIK)... . the dialog box is a modal window, so you can't lose focus too. So you won't have any keypress or timer running...</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The only real alternative here is to use some sort of custom widget with a modal option. Have a look at jQuery UI for an example of a dialog with these features. Similar things exist in just about every JS framework you can mention.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As mentioned previously you really can't do this.  You can do a modal dialog inside the window using a UI framework, or you can have a popup window, with a script that auto-closes after a timeout... each has a negative aspect.   The modal window inside the browser won't create any notification if the window is minimized, and a programmatic (timer based) popup is likely to be blocked by modern browsers, and popup blockers.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>You can use label and set its fade in and out time for e.g \nHide it initially and show on click.\n$('#div_Message').fadeIn(500).delay(1000).fadeOut(1500);</p>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>I want to be able to close an alert box automatically using javascript after a certain amount of time or on a specific event (i.e. onkeypress).  From my research, it doesn't look like that's possible with the built-in alert() function.  Is there a way to override it and have control over the dialog box that it opens?</p>\n\n<p>Also, I don't want an override that shows a hidden div as the alert.  I need an actual dialog box.</p>\n",
            "last_activity_date": 1330322846,
            "question_id": 463368,
            "score": 24,
            "tags": [
                "javascript",
                "javascript-events",
                "dialog",
                "alert"
            ],
            "title": "Javascript close alert box"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You would have to use <a href=\"http://en.wikipedia.org/wiki/Ajax_%28programming%29\" rel=\"nofollow\">Ajax</a> as a client-side script cannot be invoked by server-side code with the results available on server side scope. You could have to make an Ajax call on the client side which will set the PHP variable.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>JavaScript code is executed clientside while PHP is executed serverside, so you'll have to send the JavaScript values to the server. This could possibly be tucked in <code>$_POST</code> or through <a href=\"http://en.wikipedia.org/wiki/Ajax_%28programming%29\" rel=\"nofollow\">Ajax</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use jQuery to send a JavaScript variable to your PHP file:</p>\n\n<pre><code>$url = 'path/to/phpFile.php';\n\n$.get($url, {name: get_name(), job: get_job()});\n</code></pre>\n\n<p>In your PHP code, get your variables from <code>$_GET['name']</code> and <code>$_GET['job']</code> like this:</p>\n\n<pre><code>&lt;?php\n    $buffer_data['name'] = $_GET['name'];\n    $buffer_data['job']  = $_GET['job'];\n?&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>If you don't have experience with or need Ajax, then just stuff your data into a post/get, and send the data back to your page.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>    &lt;script&gt;\n        function get_Data(){\n            var name;\n            var job;\n            .....\n            return buffer;\n        }\n\n        function getData()\n        {\n            var agree=confirm(\"get data?\");\n            if (agree)\n            {\n                document.getElementById('javascriptOutPut').value = get_Data();\n                return true;\n            }\n            else\n            {\n                return false;\n            }\n        }\n    &lt;/script&gt;\n\n    &lt;form method=\"post\" action=\"\" onsubmit=\"return getData()\"/&gt;\n        &lt;input type=\"submit\" name=\"save\" /&gt;\n        &lt;input type=\"hidden\" name=\"javascriptOutPut\" id=\"javascriptOutPut\"/&gt;\n    &lt;/form&gt;\n\n    &lt;?php\n        if(isset($_POST['save']))\n        {\n            var_dump($_POST['javascriptOutPut']);\n        }\n    ?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am using PHP and JavaScript. My JavaScript code contains a function, get_data():</p>\n\n<pre><code>function get_Data(){\n    var name;\n    var job;\n    .....\n\n    return buffer;\n}\n</code></pre>\n\n<p>Now I have PHP code with the following.</p>\n\n<pre><code>&lt;?php\n    $i=0;\n    $buffer_data;\n\n    /* Here I need to get the value from JavaScript get_data() of buffer;\n       and assign to variable $buffer_data. */\n?&gt;\n</code></pre>\n\n<p>How do I assign the JavaScript function data into the PHP variable?</p>\n",
            "last_activity_date": 1366334024,
            "question_id": 419240,
            "score": 5,
            "tags": [
                "php",
                "javascript",
                "function"
            ],
            "title": "How to get JavaScript function data into a PHP variable"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Use brackets:</p>\n\n<pre><code>style[\"text-align\"]\n</code></pre>\n\n<p>More info on objects: <a href=\"https://developer.mozilla.org/en/JavaScript/Guide/Working_with_Objects\" rel=\"nofollow\">MDN</a></p>\n\n<p>EDIT (to appease @Brian): If you want to be have more cross-browser support use css camelCase to access it from javascript. More info <a href=\"https://developer.mozilla.org/en/CSS/Getting_Started/JavaScript\" rel=\"nofollow\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><strong>EDIT</strong></p>\n\n<p>Look at the comments you will see that for css properties key notation is not compatible with a number of properties. Using the camel case key notation therefore is the current way</p>\n\n<pre><code>obj.style-attr // would become \n\nobj[\"styleAttr\"]\n</code></pre>\n\n<hr>\n\n<p>Use key notation rather than dot</p>\n\n<pre><code>style[\"text-align\"]\n</code></pre>\n\n<p>All arrays in js are objects and all objects are just associative arrays, this means you can refer to a place in an object just as you would refer to a key in an array.</p>\n\n<pre><code>arr[0]\n</code></pre>\n\n<p>or the object </p>\n\n<pre><code>obj[\"method\"] == obj.method\n</code></pre>\n\n<p>a couple things to remember when accessing properties this way</p>\n\n<ol>\n<li><p>they are evaluated so use strings unless you are doing something with a counter or using dynamic method names.</p>\n\n<p>this means obj[method] would give you an undefined error\nwhile obj[\"method\"] would not</p></li>\n<li><p>You must use this notation if you are using characters that are not allowed in js variables.</p></li>\n</ol>\n\n<p>This regex pretty much sums it up</p>\n\n<pre><code>[a-zA-Z_$][0-9a-zA-Z_$]*\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>style['text-align'] will do the trick!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>CSS properties with a <code>-</code> are represented in camelCase in Javascript objects. That would be:</p>\n\n<pre><code>alert( style.textAlign );\n</code></pre>\n\n<p>You could also use a bracket notation to use the string:</p>\n\n<pre><code>alert( style['text-align'] );\n</code></pre>\n\n<p>Property names may only contain characters, numbers, the well known <code>$</code> sign and the <code>_</code> (thanks to pimvdb).</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>The object property names are not one-to-one matches for the css names.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Hyphenated style properties are <a href=\"http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties\" rel=\"nofollow\">referenced via camelCase in JavaScript</a>, so use <code>style.textAlign</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The answer to the original question is: place the property name in quotes and use array style indexing:</p>\n\n<pre><code>obj['property-with-hyphens'];\n</code></pre>\n\n<p>Several have pointed out that the property you are interested in is a CSS property. CSS properties that have hyphens are automatically converted to camel casing. In that case you can use the camel cased name like:</p>\n\n<pre><code>style.textAlign;\n</code></pre>\n\n<p>However this solution only works for CSS properties. For example,</p>\n\n<pre><code>obj['a-b'] = 2;\nalert(obj.aB);          // undefined\nalert(obj['a-b']);      // 2\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><strong>To solve your problem</strong>: The CSS properties with hyphens in them are <a href=\"http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113/css.html#CSS-CSS2Properties\" rel=\"nofollow\">represented by JavaScript properties in camelCase</a> to avoid this problem. You want: <code>style.textAlign</code>.</p>\n\n<p><strong>To answer the question</strong>: Use <a href=\"http://www.dev-archive.net/articles/js-dot-notation/\" rel=\"nofollow\">square bracket notation</a>: <code>obj.prop</code> is the same as <code>obj[\"prop\"]</code> so you can access property names using strings and use characters that are forbidden in identifiers. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>alert(style.textAlign)\n</code></pre>\n\n<p>or</p>\n\n<pre><code>alert(style[\"textAlign\"]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think in the case of CSS styles they get changed to camelCase in Javascript so <code>test-align</code> becomes <code>textAlign</code>.  In the general case where you want to access a property that contains non-standard characters you use array-style.  <code>['text-align']</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Using <a href=\"http://stackoverflow.com/questions/754607/can-jquery-get-all-css-styles-associated-with-an-element/5830517#5830517\">this script</a> to make a style object of all the inherited etc styles.</p>\n\n<pre><code>var style = css($(this));\nalert (style.width);\nalert (style.text-align);\n</code></pre>\n\n<p>with the following, the first alert will work fine, but the second one doesn't.. it's interpreting the <code>-</code> as a minus I assume.. the debugger says 'uncaught reference error'. I can't put quotes around it, though, because it isn't a string. So how do I use this object property?</p>\n",
            "last_activity_date": 1313769092,
            "question_id": 7122609,
            "score": 23,
            "tags": [
                "javascript",
                "properties"
            ],
            "title": "How do I reference a javascript object property with a hyphen in it?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The first is good for one or two extra functions, but defining a totally new prototype with many functions would be very repetitive. On the other hand, doing the latter would destroy all the existing definitions for the prototype as you mentioned.</p>\n\n<p>In practice, I have used the first to define additional functions in Array and Math, etc., somewhat like categories in Objective-C. The latter I use as a \"class definition.\"</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The second one will overwrite person.prototype with the object.</p>\n\n<p>Method one:</p>\n\n<pre><code>Object.toString=function(){\n  return \"Object to string\";\n}\nvar Person = function(){\n};\nPerson.toString=function(){\n  return \"Person to string\";\n}\nPerson.prototype.sayName=function(){}\nconsole.log(Person.prototype.constructor.toString());// \"Person to string\"\n</code></pre>\n\n<p>Method two:</p>\n\n<pre><code>Object.toString=function(){\n  return \"Object to string\";\n}\nvar Person = function(){\n};\nPerson.toString=function(){\n  return \"Person to string\";\n}\nPerson.prototype = {\n  sayName:function(){}\n}\nconsole.log(Person.prototype.constructor.toString());// \"Object to string\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>in simple words the difference is in <code>Person.prototype.sayName</code> all you do is to add a function to the <code>prototype</code>. just adding new functionality.  </p>\n\n<p>In the second <code>Person.prototype = {}</code> here you are making a new whole object and assign it to <code>prototype</code>. So you creating new object or overwrite the <code>prototype</code> with a new object.  </p>\n\n<p>First method is good to add many functions as you want <strong>on demand</strong>. You can add them each one on time, so i think it good when your program is simple and your application objects dose not share much functions or objects among them.  </p>\n\n<p>Second method is good if your application objects share some <strong>objects</strong>(or group of functions as @isaach said in <code>Math functions</code>) among them.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<blockquote>\n  <p>Am I correct in assuming that Option 2 results in trashing certain functions that are implicitly bound to the prototype?</p>\n</blockquote>\n\n<p>Yes, exactly. Though the only implicitly bound property is the <code>constructor</code> property, which you seldom do need.</p>\n\n<blockquote>\n  <p>What are the functional differences?</p>\n</blockquote>\n\n<p>Option 1 is just extending the existing prototype. If there are already <code>Person</code> instances inheriting from the prototype object, they will be able to use the <code>sayName</code> method as well. With option 2, the new prototype will only be used for objects that are instantiated after the overwriting.</p>\n\n<blockquote>\n  <p>Are there any benefits for choosing one over the other?</p>\n</blockquote>\n\n<p>These should be self-explaining now. Option 1 (extending) is considered cleaner, and is a must if you're modifying foreign/unknown/native prototypes. You may choose option 2 for defining your own prototypes because of the lighter literal syntax (which you could use with an <code>extend</code> call as well).</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Any existing instances of the constructor will continue pointing to the old prototype object. Any new instances created will point to the new prototype object.</p>\n\n<hr>\n\n<p>The advantages of option 1 over option 2 are simply that you don't have to re-establish constructor property and you save one indentation level which is huge for me.</p>\n\n<p>To save repetition, I just assign the property to a local variable:</p>\n\n<pre><code>var method = Person.prototype;\n\nmethod.getAge = function() {\n    return this.age;\n};\n\nmethod.getName = function() {\n    return this.name;\n};\n</code></pre>\n\n<p>Also common choices are <code>fn</code> (jQuery) and <code>p</code> which are even shorter than <code>method</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>What are the functional differences between the following two Javascript prototypes, and are there any benefits for choosing one over the other?</p>\n\n<p><strong>Option 1:</strong></p>\n\n<pre><code>Person.prototype.sayName = function(name) {\n   alert(name);\n}\n</code></pre>\n\n<p><strong>Option 2:</strong> </p>\n\n<pre><code>Person.prototype = {\n   sayName: function(name) {\n      alert(name);\n   }\n}\n</code></pre>\n\n<p>Am I correct in assuming that <strong>Option 2</strong> results in trashing certain functions that are implicitly bound to the prototype?</p>\n",
            "last_activity_date": 1372957856,
            "question_id": 17474390,
            "score": 9,
            "tags": [
                "javascript",
                "oop",
                "prototype"
            ],
            "title": "Defining a Javascript prototype"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If it is a global variable named <code>myVar</code>, you can use:</p>\n\n<pre><code>window[\"myVar\"]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Given:</p>\n\n<pre><code>var x = {\n    myproperty: 'my value'\n};\n</code></pre>\n\n<p>You can access the value by:</p>\n\n<pre><code>var value = x['myproperty'];\n</code></pre>\n\n<p>If you're looking for a global variable, then you would check its container (<code>window</code>);</p>\n\n<pre><code>var value = window['x']['myproperty'];\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>You can use eval(variableString);\nReadup on eval(); I am also new, so please proceed with caution as many don't recommend using eval();</p>\n\n<p>Thanks,\nMahesh Velaga.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The eval function can access a variable from a string containing the variable's name.</p>\n\n<pre><code>eval('baseVariableName'+index) = 'something';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>This way I could have a function that says whatever_way_you_do_this = something. Is this possible? Basically I could tell a function which variable I want to set by giving it a string that holds the name of the variable.</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1387303176,
            "question_id": 1441532,
            "score": 3,
            "tags": [
                "javascript"
            ],
            "title": "Is there a way to access a javascript variable using a string that contains the name of the variable?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can't define an object literal with a dynamic key. Do this :</p>\n\n<pre><code>var o = {};\no[key] = value;\nreturn o;\n</code></pre>\n\n<p>There's no shortcut.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>On object literals, the key is always interpreted literally, as a string. To use a \"dynamic\" key, you have to use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Property_Accessors#Bracket_notation\"><strong>bracket notation</strong></a>:</p>\n\n<pre><code>var obj = {};\nobj[myKey] = value;\n</code></pre>\n\n<p>In your case:</p>\n\n<pre><code>stuff = function (thing, callback) {\n  var inputs  = $('div.quantity &gt; input').map(function(){\n    var key   = this.attr('name')\n     ,  value = this.attr('value')\n     ,  ret   = {};\n\n     ret[key] = value;\n     return ret;\n  }) \n\n  callback(null, inputs);\n}\n</code></pre>\n\n<hr>\n\n<p><strong>Edit</strong>: For ES6 (the next version of Javascript), there's a proposal (as of Nov. 2013) for a syntax to create objects with computed keys: <a href=\"http://wiki.ecmascript.org/doku.php?id=harmony:object_literals#object_literal_computed_property_keys\">Object Literal Computed Property Keys</a>. The syntax is:</p>\n\n<pre><code>var obj = {\n  [myKey]: value,\n}\n</code></pre>\n\n<p>If applied to the OP's scenario, it would turn into:</p>\n\n<pre><code>stuff = function (thing, callback) {\n  var inputs  = $('div.quantity &gt; input').map(function(){\n    return {\n      [this.attr('name')]: this.attr('value'),\n    };\n  }) \n\n  callback(null, inputs);\n}\n</code></pre>\n\n<p>Using <a href=\"https://github.com/google/traceur-compiler\">Google's traceur</a>, it is possible to <a href=\"http://google.github.io/traceur-compiler/demo/repl.html#var%20key%20%3D%20%22foo%22%3B%0A%0Avar%20obj%20%3D%20%7B%0A%20%20%5Bkey%5D%3A%20%22blah%22%2C%0A%7D%3B%0A%0Aobj.foo\">try this syntax today</a></p>\n",
                    "is_accepted": true,
                    "score": 24
                }
            ],
            "body": "<p>First off, I'm using <a href=\"https://github.com/MatthewMueller/cheerio\">Cheerio</a> for some DOM access and parsing with Node.js. Good times.</p>\n\n<p>Heres the situation: </p>\n\n<p>I have a function that I need to create an object. That object uses variables for both its keys and values, and then return that single object. Example:</p>\n\n<pre><code>stuff = function (thing, callback) {\n  var inputs  = $('div.quantity &gt; input').map(function(){\n    var key   = this.attr('name')\n     ,  value = this.attr('value');\n\n     return { key : value }\n  }) \n\n  callback(null, inputs);\n}\n</code></pre>\n\n<p>It outputs this: </p>\n\n<pre><code>[ { key: '1' }, { key: '1' } ]\n</code></pre>\n\n<p>(<code>.map()</code> returns an array of objects fyi)</p>\n\n<p>I need <code>key</code> to actually be the string from <code>this.attr('name')</code>.</p>\n\n<p>Whats the best way to assign a string as a key in Javascript, considering what I'm trying to do?</p>\n",
            "last_activity_date": 1407360260,
            "question_id": 19837916,
            "score": 10,
            "tags": [
                "javascript",
                "object"
            ],
            "title": "Javascript: creating object with dynamic keys"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<pre><code>$('#mySelect')\n    .find('option')\n    .remove()\n    .end()\n    .append('&lt;option value=\"whatever\"&gt;text&lt;/option&gt;')\n    .val('whatever')\n;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 783
                },
                {
                    "body": "<p>Not sure exactly what you mean by \"add one and select it\", since it will be selected by default anyway. But, if you were to add more than one, it would make more sense. How about something like:</p>\n\n<pre><code>$('select').children().remove();\n$('select').append('&lt;option id=\"foo\"&gt;foo&lt;/option&gt;');\n$('#foo').focus();\n</code></pre>\n\n<p><strong>Response to \"EDIT\"</strong>: Can you clarify what you mean by \"This select box is populated by a set of radio buttons\"? A &lt;select&gt; element cannot (legally) contain &lt;input type=\"radio\"&gt; elements.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Thanks to the answers I received, I was able to create something like the following, which suits my needs. My question was somewhat ambiguous. Thanks for following up. My final problem was solved by including \"selected\" in the option that I wanted selected.</p>\n\n<h2>HTML</h2>\n\n<pre><code>&lt;label&gt;One&lt;input  name=\"myRadio\" type=\"radio\" value=\"1\"  /&gt;&lt;/label&gt;\n&lt;label&gt;Two&lt;input name=\"myRadio\"  type=\"radio\" value=\"2\" /&gt;&lt;/label&gt;\n&lt;select id=\"mySelect\" size=\"9\"&gt;&lt;/select&gt;\n</code></pre>\n\n<h2>JavaScript</h2>\n\n<pre><code>$(function() {\n    $('#mySelect').children().remove().end().append('&lt;option selected value=\"One\"&gt;One option&lt;/option&gt;') ; // clear the select box, then add one option which is selected\n    $(\"input[name='myRadio']\").filter( \"[value='1']\" ).attr( \"checked\", \"checked\" ); // select radio button with value 1\n    // Bind click event to each radio button.\n    $(\"input[name='myRadio']\").bind(\"click\",\n        function() {\n            switch(this.value) {\n                case \"1\":\n                    $('#mySelect').find('option').remove().end().append('&lt;option selected value=\"One\"&gt;One option&lt;/option&gt;') ;\n                    break ;\n                case \"2\":\n                    $('#mySelect').find('option').remove() ;\n                    var items = [\"Item1\", \"Item2\", \"Item3\"] ; // Set locally for demo\n                    var options = '' ;\n                    for (var i = 0; i &lt; items.length; i++) {\n                        if (i==0) {\n                            options += '&lt;option selected value=\"' + items[i] + '\"&gt;' + items[i] + '&lt;/option&gt;';\n                        }\n                        else {\n                            options += '&lt;option value=\"' + items[i] + '\"&gt;' + items[i] + '&lt;/option&gt;';\n                        }\n                    }\n                    ('#mySelect').html(options);   // Populate select box with array\n                    break ;\n            } // Switch end\n        } // Bind function end\n    ); // bind end\n}); // Event listener end\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>$('#mySelect')\n    .empty()\n    .append('&lt;option value=\"whatever\"&gt;text&lt;/option&gt;')\n    .find('option:first')\n    .attr(\"selected\",\"selected\")\n;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<pre><code>$('#mySelect')\n    .empty()\n    .append('&lt;option selected=\"selected\" value=\"whatever\"&gt;text&lt;/option&gt;')\n;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 322
                },
                {
                    "body": "<p>I had a bug in IE7 (works fine in IE6) where using the above jQuery methods would clear the <em>select</em> in the DOM but not on screen. Using the IE Developer Toolbar I could confirm that the <em>select</em> had been cleared and had the new items, but visually the <em>select</em> still showed the old items - even though you could not select them.</p>\n\n<p>The fix was to use standard DOM methods/properites (as the poster original had) to clear rather than jQuery - still using jQuery to add options.</p>\n\n<pre><code>$('#mySelect')[0].options.length = 0;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 47
                },
                {
                    "body": "<pre><code>$(\"#control\").html(\"&lt;option selected=\\\"selected\\\"&gt;The Option...&lt;/option&gt;\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>If your goal is to remove all the options from the select except the first one (typically the 'Please pick an item' option) you could use:</p>\n\n<pre><code>$('#mySelect').find('option:not(:first)').remove();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>This will replace your existing mySelect with a new mySelect.</p>\n\n<pre><code>$('#mySelect').replaceWith('&lt;Select id=\"mySelect\" size=\"9\"&gt;&lt;option value=\"whatever\" selected=\"selected\" &gt;text&lt;/option&gt;&lt;/Select&gt;');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>why not just use plain javascript?</p>\n\n<pre><code>document.getElementById(\"selectID\").options.length = 0;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>Uses the jquery <a href=\"http://api.jquery.com/prop/\" rel=\"nofollow\">prop()</a> to clear the selected option</p>\n\n<pre><code>$('#mySelect option:selected').prop('selected', false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>How about just changing the html to new data.</p>\n\n<pre><code>$('#mySelect').html('&lt;option value=\"whatever\"&gt;text&lt;/option&gt;');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Using core jQuery, how do you remove all the options of a select box, then add one option and select it?</p>\n\n<p>My select box is the following.</p>\n\n<pre><code>&lt;Select id=\"mySelect\" size=\"9\" &lt;/Select&gt;\n</code></pre>\n\n<p>EDIT: The following code was helpful with chaining. However, (in Internet&nbsp;Explorer) <code>.val('whatever')</code> did not select the option that was added. (I did use the same 'value' in both <code>.append</code> and <code>.val</code>.)</p>\n\n<pre><code>$('#mySelect').find('option').remove().end().append('&lt;option value=\"whatever\"&gt;text&lt;/option&gt;').val('whatever');\n</code></pre>\n\n<p>EDIT: Trying to get it to mimic this code, I use the following code whenever the page/form is reset. This select box is populated by a set of radio buttons. <code>.focus()</code> was closer, but the option did not appear selected like it does with <code>.selected= \"true\"</code>. Nothing is wrong with my existing code - I am just trying to learn jQuery.</p>\n\n<pre><code>var mySelect = document.getElementById('mySelect');\nmySelect.options.length = 0;\nmySelect.options[0] = new Option (\"Foo (only choice)\", \"Foo\");\nmySelect.options[0].selected=\"true\";\n</code></pre>\n\n<p>EDIT: selected answer was close to what I needed. This worked for me:</p>\n\n<pre><code>$('#mySelect').children().remove().end().append('&lt;option selected value=\"whatever\"&gt;text&lt;/option&gt;') ;\n</code></pre>\n\n<p>But both answers led me to my final solution..</p>\n",
            "last_activity_date": 1415792736,
            "question_id": 47824,
            "score": 420,
            "tags": [
                "javascript",
                "jquery",
                "option",
                "html-select"
            ],
            "title": "How do you remove all the options of a select box and then add one option and select it with jQuery?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>If I understand your question right you are asking what is difference if you register listener callback with <code>$watch</code> or if you do it with <code>$observe</code>.</p>\n\n<p>Callback registerd with <code>$watch</code> is fired when <code>$digest</code> is executed. Please take a look at the <a href=\"http://docs.angularjs.org/api/ng.%24rootScope.Scope#%24watch\">docs</a> for more info.</p>\n\n<p>Callback registered with <code>$observe</code> are called when value changes of attributes that contain interpolation (e.g. <code>attr=\"{{notJetInterpolated}}\"</code>). </p>\n\n<hr>\n\n<p>Inside directive you can use both of them on very similar way:</p>\n\n<pre><code>    attrs.$observe('attrYouWatch', function() {\n         // body\n    });\n</code></pre>\n\n<p>or</p>\n\n<pre><code>    scope.$watch(attrs['attrYouWatch'], function() {\n         // body\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p><strong><a href=\"https://docs.angularjs.org/api/ng.$compile.directive.Attributes#$observe\">$observe()</a></strong> is a method on the <a href=\"http://docs.angularjs.org/api/ng.$compile.directive.Attributes\">Attributes</a> object, and as such, it can only be used to observe/watch the value change of a DOM attribute.  It is only used/called inside directives.  Use $observe when you need to observe/watch a DOM attribute that contains interpolation (i.e., {{}}'s). \n<br>E.g., <code>attr1=\"Name: {{name}}\"</code>, then in a directive: <code>attrs.$observe('attr1', ...)</code>. \n<br>(If you try <code>scope.$watch(attrs.attr1, ...)</code> it won't work because of the {{}}s -- you'll get <code>undefined</code>.)  Use $watch for everything else.</p>\n\n<p><strong><a href=\"http://docs.angularjs.org/api/ng.$rootScope.Scope#$watch\">$watch()</a></strong> is more complicated.  It can observe/watch an \"expression\", where the expression can be either a function or a string.  If the expression is a string, it is <a href=\"http://docs.angularjs.org/api/ng.$parse\">$parse</a>'d (i.e., evaluated as an <a href=\"http://docs.angularjs.org/guide/expression\">Angular expression</a>) into a function.  (It is this function that is called every digest cycle.)  The string expression can not contain {{}}'s.  $watch is a method on the <a href=\"http://docs.angularjs.org/api/ng.$rootScope.Scope\">Scope</a> object, so it can be used/called wherever you have access to a scope object, hence in </p>\n\n<ul>\n<li>a controller -- any controller -- one created via ng-view, ng-controller, or a directive controller</li>\n<li>a linking function in a directive, since this has access to a scope as well</li>\n</ul>\n\n<p>Because strings are evaluated as Angular expressions, $watch is often used when you want to observe/watch a model/scope property.  E.g., <code>attr1=\"myModel.some_prop\"</code>, then in a controller or link function: <code>scope.$watch('myModel.some_prop', ...)</code> or <code>scope.$watch(attrs.attr1, ...)</code> (or <code>scope.$watch(attrs['attr1'], ...)</code>).\n<br>(If you try <code>attrs.$observe('attr1')</code> you'll get the string <code>myModel.some_prop</code>, which is probably not what you want.)</p>\n\n<p>As discussed in comments on @PrimosK's answer, all $observes and $watches are checked every <a href=\"http://docs.angularjs.org/guide/concepts\">digest cycle</a>.</p>\n\n<p>Directives with isolate scopes are more complicated.  If the '@' syntax is used, you can $observe <em>or $watch</em> a DOM attribute that contains interpolation (i.e., {{}}'s).  (The reason it works with $watch is because the '@' syntax does the <a href=\"http://docs.angularjs.org/api/ng.$interpolate\">interpolation</a> for us, hence $watch sees a string without {{}}'s.)  To make it easier to remember which to use when, I suggest using $observe for this case also.</p>\n\n<p>To help test all of this, I wrote a <a href=\"http://plnkr.co/edit/HBha8sVdeCqhJtQghGxw?p=preview\">Plunker</a> that defines two directives.  One (<code>d1</code>) does not create a new scope, the other (<code>d2</code>) creates an isolate scope.  Each directive has the same six attributes.  Each attribute is both $observe'd and $watch'ed.</p>\n\n<pre><code>&lt;div d1 attr1=\"{{prop1}}-test\" attr2=\"prop2\" attr3=\"33\" attr4=\"'a_string'\"\n        attr5=\"a_string\" attr6=\"{{1+aNumber}}\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Look at the console log to see the differences between $observe and $watch in the linking function.  Then click the link and see which $observes and $watches are triggered by the property changes made by the click handler.</p>\n\n<p>Notice that when the link function runs, any attributes that contain {{}}'s are not evaluated yet (so if you try to examine the attributes, you'll get <code>undefined</code>).  The only way to see the interpolated values is to use $observe (or $watch if using an isolate scope with '@').  Therefore, getting the values of these attributes is an <em>asynchronous</em> operation.  (And this is why we need the $observe and $watch functions.)</p>\n\n<p>Sometimes you don't need $observe or $watch.  E.g., if your attribute contains a number or a boolean (not a string), just evaluate it once: <code>attr1=\"22\"</code>, then in, say, your linking function: <code>var count = scope.$eval(attrs.attr1)</code>.  If it is just a constant string &ndash; <code>attr1=\"my string\"</code> &ndash; then just use <code>attrs.attr1</code> in your directive (no need for $eval()).</p>\n\n<p>See also <a href=\"https://groups.google.com/d/msg/angular/TbRQhG-G14I/bYcipV1OYwcJ\">Vojta's google group post</a> about $watch expressions.</p>\n",
                    "is_accepted": true,
                    "score": 312
                }
            ],
            "body": "<p>I know that both <code>Watchers</code> and <code>Observers</code> are computed as soon as something in <code>$scope</code> changes in AngularJS. But couldn't understand what exactly is the difference between the two.</p>\n\n<p>My initial understanding is that <code>Observers</code> are computed for angular expressions which are conditions on the HTML side where as <code>Watchers</code> executed when <code>$scope.$watch()</code> function is executed. Am I thinking properly?</p>\n",
            "last_activity_date": 1416677155,
            "question_id": 14876112,
            "score": 160,
            "tags": [
                "javascript",
                "jquery",
                "angularjs"
            ],
            "title": "Difference between the $observe and $watch methods"
        },
        {
            "answer_count": 15,
            "answers": [
                {
                    "body": "<p><a href=\"http://developer.yahoo.com/yui/compressor/\">YUI Compressor</a> is the way to go. It has a great compression rate, is well tested and is in use among many top sites, and, well, personally recommended by me.</p>\n\n<p>I've used it for my projects without a single JavaScript error or hiccup.  And it has nice documentation.</p>\n\n<p><strike>I've never used its CSS compression capabilities, but they exist as well.</strike> CSS compression works just as well.</p>\n\n<p><em>Note: Although Dean Edwards's /<a href=\"http://dean.edwards.name/packer/\">packer</a>/ achieves a better compression rate than YUI Compressor, I ran into a few JavaScript errors when using it.</em></p>\n",
                    "is_accepted": false,
                    "score": 42
                },
                {
                    "body": "<p><a href=\"http://crockford.com/javascript/jsmin\" rel=\"nofollow\">JSMin</a> is another one.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Try <a href=\"http://www.crockford.com/javascript/jsmin.html\" rel=\"nofollow\">JSMin</a>, got C#, Java, C and other ports and readily available too.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><a href=\"http://blog.madskristensen.dk/post/Optimize-WebResourceaxd-and-ScriptResourceaxd.aspx\" rel=\"nofollow\">Here's the source code</a> of an HttpHandler which does that, maybe it'll help you</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Revisiting this question a few years later, <a href=\"http://github.com/mishoo/UglifyJS\">UglifyJS</a>, seems to be the best option as of now.</p>\n\n<p>As stated below, it runs on the NodeJS platform, but can be easily modified to run on any JavaScript engine.</p>\n\n<p>--- Old answer below---</p>\n\n<p>Google released <a href=\"http://code.google.com/p/closure-compiler/\"><strong>Closure Compiler</strong></a> which seems to be generating the smallest files so far as seen <a href=\"http://blog.feedly.com/2009/11/06/google-closure-vs-yui-min/\">here</a> and <a href=\"http://news.ycombinator.com/item?id=924426\">here</a></p>\n\n<p>Previous to that the various options <a href=\"http://www.julienlecomte.net/blog/2007/08/13/\"> were as follow </a></p>\n\n<p>Basically <a href=\"http://dean.edwards.name/packer/\">Packer</a> does a better job at initial compression , but if you are going to gzip the files before sending on the wire (which you should be doing) <a href=\"http://www.julienlecomte.net/yuicompressor/\">YUI Compressor</a> gets the smallest final size.</p>\n\n<p>The tests were done on jQuery code btw.</p>\n\n<ul>\n<li>Original jQuery library 62,885 bytes , 19,758 bytes after gzip</li>\n<li>jQuery minified with JSMin 36,391 bytes , 11,541 bytes after gzip</li>\n<li>jQuery minified with Packer 21,557 bytes , 11,119 bytes after gzip</li>\n<li>jQuery minified with the YUI Compressor 31,822 bytes  , 10,818 bytes after gzip</li>\n</ul>\n\n<p>@<a href=\"http://stackoverflow.com/users/2434/daniel-james\">daniel james</a> mentions in the comment <a href=\"http://compressorrater.thruhere.net/\">compressorrater</a> which shows Packer  leading the chart in best compression, so I guess ymmv </p>\n",
                    "is_accepted": true,
                    "score": 103
                },
                {
                    "body": "<p>I use <a href=\"http://shrinksafe.dojotoolkit.org/\" rel=\"nofollow\"><strong>ShrinkSafe</strong> from the Dojo project</a> - it is exceptional because it actually uses a JavaScript interpreter (<a href=\"http://www.mozilla.org/rhino/\" rel=\"nofollow\">Rhino</a>) to deal with finding symbols in the code and understanding their scope, etc. which helps to ensure that the code will work when it comes out the other end, as opposed to a lot of compression tools which use regex to do the same (which is not as reliable).</p>\n\n<p>I actually have an MSBuild task in a <a href=\"http://www.microsoft.com/downloads/details.aspx?familyid=0AA30AE8-C73B-4BDD-BB1B-FE697256C459&amp;displaylang=en\" rel=\"nofollow\">Web Deployment Project</a> in my current Visual Studio solution that runs a script which in turn runs all of the solution's JS files through ShrinkSafe before we deploy and it works quite well.</p>\n\n<p><strong>EDIT:</strong> By the way, \"best\" is open to debate, since the criteria for \"best\" will vary depending on the needs of the project. Personally, I think ShrinkSafe is a good balance; for some people that think smallest size == best, it will be insufficient.</p>\n\n<p><strong>EDIT:</strong> It is worth noting that the YUI compressor also uses Rhino.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p><a href=\"http://brilaps.com/index.php?content=byuic\" rel=\"nofollow\" title=\"Here\">Here</a> is a YUI compressor script (<a href=\"http://brilaps.com/index.php?content=byuic\" rel=\"nofollow\" title=\"Byuic\">Byuic</a>) that finds all the js and css down a path and compresses /(optionally) obfuscates them.  Nice to integrate into a build process.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you use Packer, just go far the 'shrink variables' option and gzip the resulting code. The base62 option is only for if your server cannot send gzipped files. Packer with 'shrink vars' achieves better compression the YUI, but can introduce bugs if you've skipped a semicolon somewhere.</p>\n\n<p>base62 is basically a poor man's gzip, which is why gzipping base62-ed code gives you bigger files than gzipping shrink-var-ed code.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><a href=\"http://www.bananascript.com/\" rel=\"nofollow\">bananascript.com</a> used to give me best results.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>KJScompress</strong></p>\n\n<p><a href=\"http://opensource.seznam.cz/KJScompress/index.html\" rel=\"nofollow\">http://opensource.seznam.cz/KJScompress/index.html</a></p>\n\n<blockquote>\n  <p>Kjscompress/csskompress is set of two\n  applications (kjscompress a\n  csscompress) to remove non-significant\n  whitespaces and comments from files\n  containing JavaScript and CSS. Both\n  are command-line applications for\n  GNU/Linux operating system.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p>In searching silver bullet, found this\n  question. For Ruby on Rails\n  <a href=\"http://github.com/sstephenson/sprockets\" rel=\"nofollow\">http://github.com/sstephenson/sprockets</a></p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I recently released <a href=\"http://github.com/mishoo/UglifyJS\">UglifyJS</a>, a JavaScript compressor which is written in JavaScript (runs on the NodeJS <a href=\"http://en.wikipedia.org/wiki/Nodejs\">Node.js</a> platform, but it can be easily modified to run on any JavaScript engine, since it doesn't need any <code>Node.js</code> internals).  It's a lot faster than both <a href=\"http://developer.yahoo.com/yui/compressor/\">YUI Compressor</a> and <a href=\"http://en.wikipedia.org/wiki/Google_Closure_Tools\">Google Closure</a>, it compresses better than <a href=\"http://en.wikipedia.org/wiki/Yahoo!_UI_Library\">YUI</a> on all scripts I tested it on, and it's safer than Closure (knows to deal with \"eval\" or \"with\").</p>\n\n<p>Other than whitespace removal, UglifyJS also does the following:</p>\n\n<ul>\n<li>changes local variable names (usually to single characters)</li>\n<li>joins consecutive var declarations</li>\n<li>avoids inserting any unneeded brackets, parens and semicolons</li>\n<li>optimizes IFs (removes \"else\" when it detects that it's not needed, transforms IFs into the &amp;&amp;, || or ?/: operators when possible, etc.).</li>\n<li>transforms <code>foo[\"bar\"]</code> into <code>foo.bar</code> where possible</li>\n<li>removes quotes from keys in object literals, where possible</li>\n<li>resolves simple expressions when this leads to smaller code (1+3*4 ==> 13)</li>\n</ul>\n\n<p>PS: Oh, it can \"beautify\" as well. ;-)</p>\n",
                    "is_accepted": false,
                    "score": 126
                },
                {
                    "body": "<p><a href=\"http://www.iteral.com/jscrush/\" rel=\"nofollow\" title=\"JS Crush\">Js Crush</a> is a good compressor to use after you have minified.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I use <a href=\"http://www.jscompressor.com\" rel=\"nofollow\">jscompressor.com</a> as a chrome app.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I always use obfuscriptor.com, a free web application that provides the best compression results that I have ever seen so far. And their obfuscated code looks cool! :-)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>What is the the best JavaScript compressor available? I'm looking for a tool that:</p>\n\n<ul>\n<li>is easy to use</li>\n<li>has a high compression rate</li>\n<li>Produce reliable end results (doesn't mess up the code)</li>\n</ul>\n",
            "last_activity_date": 1390398001,
            "question_id": 28932,
            "score": 140,
            "tags": [
                "javascript",
                "compression"
            ],
            "title": "Best JavaScript compressor"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p><strong>Warning: This answer can produce unexpected results. For example, if the minimum number is 2, the values returned can include 7 instead of the requested max of 6. See <a href=\"http://jsfiddle.net/alanwsmith/GfAhy/\">this JSFiddle for live examples</a>.</strong></p>\n\n<hr>\n\n<p>If you wanted to get between 1 and 6, you would put:</p>\n\n<pre><code>Math.floor(Math.random() * 6) + 1\n</code></pre>\n\n<p>Try that and see if it works for you.</p>\n",
                    "is_accepted": true,
                    "score": 407
                },
                {
                    "body": "<pre><code>var x = 6; // can be any number\nvar rand = Math.floor(Math.random()*x) + 1;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<pre><code>function randomIntFromInterval(min,max)\n{\n    return Math.floor(Math.random()*(max-min+1)+min);\n}\n</code></pre>\n\n<p>What it does \"extra\" is it allows random intervals that do not start with 1.\nSo you can get a random number from 10 to 15 for example. Flexibility.</p>\n",
                    "is_accepted": false,
                    "score": 591
                },
                {
                    "body": "<p>Other solutions:</p>\n\n<ul>\n<li><code>(Math.random() * 6 | 0) + 1</code></li>\n<li><code>~~(Math.random() * 6) + 1</code></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 39
                },
                {
                    "body": "<p>Math is not my strong point, but I've been working on a project where I needed to generate a lot of random numbers between both positive and negative.  </p>\n\n<pre><code>function randomBetween(min, max) {\n    if (min &lt; 0) {\n        return min + Math.random() * (Math.abs(min)+max);\n    }else {\n        return min + Math.random() * max;\n    }\n}\n</code></pre>\n\n<p>E.g  </p>\n\n<pre><code>randomBetween(-10,15)//or..\nrandomBetween(10,20)//or...\nrandomBetween(-200,-100)\n</code></pre>\n\n<p>Of course, you can also add some validation to make sure you don't do this with anything other than numbers. Also make sure that min is always less than or equal to max.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I found Francisc's solution above did not include the min or max number in the results, so I altered it like this:</p>\n\n<pre><code>function randomInt(min,max)\n{\n    return Math.floor(Math.random()*(max-(min+1))+(min+1));\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<h1><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\" rel=\"nofollow\">Math.random()</a></h1>\n\n<p>From the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\" rel=\"nofollow\">Mozilla</a> Developer Network documentation:</p>\n\n<pre><code>// Returns a random integer between min and max\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n</code></pre>\n\n<p>Useful examples:</p>\n\n<pre><code>// 0 - 10\nreturn Math.floor(Math.random() * 11);\n\n// 1 - 10\nreturn Math.floor(Math.random() * 10) + 1;\n\n// 5 - 20\nreturn Math.floor(Math.random() * 16) + 5;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>I was searching random number generator written in TypeScript and I have written this after reading all of the answers, hope It would work for TypeScript coders.</p>\n\n<pre><code>    Rand(min: number, max: number): number {\n        return (Math.random() * (max - min + 1) | 0) + min;\n    }   \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Or, in <a href=\"http://underscorejs.org/#random\" rel=\"nofollow\">Underscore</a></p>\n\n<pre><code>_.random(min, max)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Sense you need to add 1 to the max number, and then subtract the minimum number for any of this to work, and I need to make a lot of random Integers, this function works.</p>\n\n<pre><code>var random = function(max, min) {\n    high++;\n    return Math.floor((Math.random()) * (max - min)) + min;\n};\n</code></pre>\n\n<p>This works with both negative, and positive numbers, and I'm working on decimals for a library.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there a way to generate a random number in a specified range i.e. (from 1 to 6: 1,2,3,4,5, or 6) in JavaScript?</p>\n",
            "last_activity_date": 1424912150,
            "question_id": 4959975,
            "score": 350,
            "tags": [
                "javascript",
                "random"
            ],
            "title": "Generate random value between two numbers in Javascript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Lots of people hit this error.  It's a confusing this with async processing.  Most likely some of your code is setting headers in the first tick and they you are running an async callback in a future tick. In between, the response header gets sent, but then further headers (like a 30X redirect) try to add extra headers, but it's too late since the response header has already been transmitted.</p>\n\n<p>I'm not sure exactly what's causing your error, but look at any callbacks as potential areas to investigate.</p>\n\n<p>One easy tip to simplify your code. Get rid of app.configure() and just call app.use directly in your top level scope.</p>\n\n<p>See also the <a href=\"https://github.com/bnoguchi/everyauth\">everyauth</a> module, which does Facebook and a dozen or so other 3rd party authentication providers.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>The <code>res</code> object in Express is a subclass of <a href=\"http://nodejs.org/docs/latest/api/http.html#http.ServerResponse\">Node.js's <code>http.ServerResponse</code></a> (<a href=\"https://github.com/joyent/node/blob/master/lib/http.js\">read the http.js source</a>). You are allowed to call <code>res.setHeader(name, value)</code> as often as you want until you call <code>res.writeHead(statusCode)</code>. After <code>writeHead</code>, the headers are baked in and you can only call <code>res.write(data)</code>, and finally <code>res.end(data)</code>.</p>\n\n<p>The error \"Error: Can't set headers after they are sent.\" means that you're already in the Body or Finished state, but some function tried to set a header or statusCode. When you see this error, try to look for anything that tries to send a header after some of the body has already been written. For example, look for callbacks that are accidentally called twice, or any error that happens after the body is sent.</p>\n\n<p>In your case, you called <code>res.redirect()</code>, which caused the response to become Finished. Then your code threw an error (<code>res.req</code> is null). and since the error happened within your actual <code>function(req,res,next)</code> (not within a callback), Connect was able to catch it and then tried to send a 500 error page. But since the headers were already sent, Node.js's setHeader threw the error that you saw.</p>\n\n<h1>Comprehensive list of Node.js/Express response methods and when they must be called:</h1>\n\n<p>Response must be in <strong>Head</strong> and remains in <strong>Head</strong>:</p>\n\n<ol>\n<li><a href=\"http://nodejs.org/docs/latest/api/http.html#response.writeContinue\"><code>res.writeContinue()</code></a></li>\n<li><a href=\"http://nodejs.org/docs/latest/api/http.html#response.statusCode\"><code>res.statusCode = 404</code></a></li>\n<li><a href=\"http://nodejs.org/docs/latest/api/http.html#response.setHeader\"><code>res.setHeader(name, value)</code></a></li>\n<li><a href=\"http://nodejs.org/docs/latest/api/http.html#response.getHeader\"><code>res.getHeader(name)</code></a></li>\n<li><a href=\"http://nodejs.org/docs/latest/api/http.html#response.removeHeader\"><code>res.removeHeader(name)</code></a></li>\n<li><a href=\"http://expressjs.com/guide.html#res.header%28%29\"><code>res.header(key[, val])</code></a> (Express only)</li>\n<li><a href=\"http://expressjs.com/guide.html#res.charset\"><code>res.charset = 'utf-8'</code></a> (Express only; only affects Express-specific methods)</li>\n<li><a href=\"http://expressjs.com/guide.html#res.contenttype%28%29\"><code>res.contentType(type)</code></a> (Express only)</li>\n</ol>\n\n<p>Response must be in <strong>Head</strong> and becomes <strong>Body</strong>:</p>\n\n<ol>\n<li><a href=\"http://nodejs.org/docs/latest/api/http.html#response.writeHead\"><code>res.writeHead(statusCode, [reasonPhrase], [headers])</code></a></li>\n</ol>\n\n<p>Response can be in either <strong>Head/Body</strong> and remains in <strong>Body</strong>:</p>\n\n<ol>\n<li><a href=\"http://nodejs.org/docs/latest/api/http.html#response.write\"><code>res.write(chunk, encoding='utf8')</code></a></li>\n</ol>\n\n<p>Response can be in either <strong>Head/Body</strong> and becomes <strong>Finished</strong>:</p>\n\n<ol>\n<li><a href=\"http://nodejs.org/docs/latest/api/http.html#response.end\"><code>res.end([data], [encoding])</code></a></li>\n</ol>\n\n<p>Response can be in either <strong>Head/Body</strong> and remains in its current state:</p>\n\n<ol>\n<li><a href=\"http://nodejs.org/docs/latest/api/http.html#response.addTrailers\"><code>res.addTrailers(headers)</code></a></li>\n</ol>\n\n<p>Response must be in <strong>Head</strong> and becomes <strong>Finished</strong>:</p>\n\n<ol>\n<li><code>return next([err])</code> (Connect/Express only)</li>\n<li>Any exceptions within middleware <code>function(req, res, next)</code> (Connect/Express only)</li>\n<li><a href=\"http://expressjs.com/guide.html#res.attachment%28%29\"><code>res.send(body|status[, headers|status[, status]])</code></a> (Express only)</li>\n<li><a href=\"http://expressjs.com/guide.html#res.attachment%28%29\"><code>res.attachment(filename)</code></a> (Express only)</li>\n<li><a href=\"http://expressjs.com/guide.html#res.attachment%28%29\"><code>res.sendfile(path[, options[, callback]])</code></a> (Express only)</li>\n<li><a href=\"http://expressjs.com/guide.html#res.attachment%28%29\"><code>res.json(obj[, headers|status[, status]])</code></a> (Express only)</li>\n<li><a href=\"http://expressjs.com/guide.html#res.redirect%28%29\"><code>res.redirect(url[, status])</code></a> (Express only)</li>\n<li><a href=\"http://expressjs.com/guide.html#res.cookie%28%29\"><code>res.cookie(name, val[, options])</code></a> (Express only)</li>\n<li><a href=\"http://expressjs.com/guide.html#res.clearCookie%28%29\"><code>res.clearCookie(name[, options])</code></a> (Express only)</li>\n<li><a href=\"http://expressjs.com/guide.html#res.clearCookie%28%29\"><code>res.render(view[, options[, fn]])</code></a> (Express only)</li>\n<li><a href=\"http://expressjs.com/guide.html#res.partial%28%29\"><code>res.partial(view[, options])</code></a> (Express only)</li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 201
                },
                {
                    "body": "<p>I ran into this error as well for a while.  I think (hope) I've wrapped my head around it, wanted to write it here for reference.</p>\n\n<p>When you add middleware to <a href=\"https://github.com/senchalabs/connect\">connect</a> or <a href=\"https://github.com/visionmedia/express\">express</a> (which is built on connect) using the <code>app.use</code> method, you're appending items to <code>Server.prototype.stack</code> in connect (At least with the current <code>npm install connect</code>, which looks quite different from the one github as of this post).  When the server gets a request, it iterates over the stack, calling the <code>(request, response, next)</code> method.</p>\n\n<p>The problem is, if in one of the middleware items writes to the response body or headers (it looks like it's either/or for some reason), <strong>but doesn't call <code>response.end()</code> and you call <code>next()</code></strong> then as the core <code>Server.prototype.handle</code> method completes, it's going to notice that:</p>\n\n<ol>\n<li>there are no more items in the stack, and/or</li>\n<li>that <code>response.headerSent</code> is true.</li>\n</ol>\n\n<p>So, it throws an error.  But the error it throws is just this basic response (from the connect <code>http.js</code> source code:</p>\n\n<pre><code>res.statusCode = 404;\nres.setHeader('Content-Type', 'text/plain');\nres.end('Cannot ' + req.method + ' ' + req.url);\n</code></pre>\n\n<p>Right there, it's calling <code>res.setHeader('Content-Type', 'text/plain');</code>, which you are likely to have set in your <code>render</code> method, <strong>without calling response.end()</strong>, something like:</p>\n\n<pre><code>response.setHeader(\"Content-Type\", \"text/html\");\nresponse.write(\"&lt;p&gt;Hello World&lt;/p&gt;\");\n</code></pre>\n\n<p>The way everything needs to be structured is like this:</p>\n\n<h3>Good Middleware</h3>\n\n<pre><code>// middleware that does not modify the response body\nvar doesNotModifyBody = function(request, response, next) {\n  request.params = {\n    a: \"b\"\n  };\n  // calls next because it hasn't modified the header\n  next();\n};\n\n// middleware that modify the response body\nvar doesModifyBody = function(request, response, next) {\n  response.setHeader(\"Content-Type\", \"text/html\");\n  response.write(\"&lt;p&gt;Hello World&lt;/p&gt;\");\n  response.end();\n  // doesn't call next()\n};\n\napp.use(doesNotModifyBody);\napp.use(doesModifyBody);\n</code></pre>\n\n<h3>Problematic Middleware</h3>\n\n<pre><code>var problemMiddleware = function(request, response, next) {\n  response.setHeader(\"Content-Type\", \"text/html\");\n  response.write(\"&lt;p&gt;Hello World&lt;/p&gt;\");\n  next();\n};\n</code></pre>\n\n<p>The problematic middleware sets the response header without calling <code>response.end()</code> and calls <code>next()</code>, which confuses connect's server.</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>simple answer from visionmedia: <a href=\"https://github.com/visionmedia/express/issues/634\" rel=\"nofollow\">https://github.com/visionmedia/express/issues/634</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In my case it was a 304 response (caching) that was causing the issue.  </p>\n\n<p>Easiest solution:</p>\n\n<pre><code>app.disable('etag');\n</code></pre>\n\n<p>Alternate solution here if you want more control:</p>\n\n<p><a href=\"http://vlasenko.org/2011/10/12/expressconnect-static-set-last-modified-to-now-to-avoid-304-not-modified/\" rel=\"nofollow\">http://vlasenko.org/2011/10/12/expressconnect-static-set-last-modified-to-now-to-avoid-304-not-modified/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had this same issue and realised it was because I was calling res.redirect without a return statement, so the next function was also being called immediately afterwards:</p>\n\n<pre><code>auth.annonymousOnly = function(req, res, next) {\n    if (req.user) res.redirect('/');\n    next();\n};\n</code></pre>\n\n<p>Which should have been:</p>\n\n<pre><code>auth.annonymousOnly = function(req, res, next) {\n    if (req.user) return res.redirect('/');\n    next();\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm fairly new to Node.js and I am having some issues.</p>\n\n<p>I am using Node.js 4.10 and Express 2.4.3.</p>\n\n<p>When I try to access <a href=\"http://127.0.0.1:8888/auth/facebook\">http://127.0.0.1:8888/auth/facebook</a>, i'll be redirected to <a href=\"http://127.0.0.1:8888/auth/facebook_callback\">http://127.0.0.1:8888/auth/facebook_callback</a>.</p>\n\n<p>I than received the following error:</p>\n\n<pre><code>Error: Can't render headers after they are sent to the client.\n    at ServerResponse.&lt;anonymous&gt; (http.js:573:11)\n    at ServerResponse._renderHeaders (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/patch.js:64:25)\n    at ServerResponse.writeHead (http.js:813:20)\n    at /home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect-auth/lib/auth.strategies/facebook.js:28:15\n    at /home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect-auth/lib/index.js:113:13\n    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect-auth/lib/strategyExecutor.js:45:39)\n    at [object Object].pass (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect-auth/lib/authExecutionScope.js:32:3)\n    at [object Object].halt (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect-auth/lib/authExecutionScope.js:29:8)\n    at [object Object].redirect (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect-auth/lib/authExecutionScope.js:16:8)\n    at [object Object].&lt;anonymous&gt; (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect-auth/lib/auth.strategies/facebook.js:77:15)\nError: Can't set headers after they are sent.\n    at ServerResponse.&lt;anonymous&gt; (http.js:527:11)\n    at ServerResponse.setHeader (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/patch.js:50:20)\n    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:162:13)\n    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:195:11)\n    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:150:23)\n    at param (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/middleware/router.js:189:13)\n    at pass (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/middleware/router.js:191:10)\n    at Object.router [as handle] (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/middleware/router.js:197:6)\n    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:198:15)\n    at Object.auth [as handle] (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect-auth/lib/index.js:153:7)\nError: Can't set headers after they are sent.\n    at ServerResponse.&lt;anonymous&gt; (http.js:527:11)\n    at ServerResponse.setHeader (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/patch.js:50:20)\n    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:162:13)\n    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:207:9)\n    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:150:23)\n    at param (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/middleware/router.js:189:13)\n    at pass (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/middleware/router.js:191:10)\n    at Object.router [as handle] (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/middleware/router.js:197:6)\n    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:198:15)\n    at Object.auth [as handle] (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect-auth/lib/index.js:153:7)\nError: Can't set headers after they are sent.\n    at ServerResponse.&lt;anonymous&gt; (http.js:527:11)\n    at ServerResponse.setHeader (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/patch.js:50:20)\n    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:162:13)\n    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:150:23)\n    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:207:9)\n    at Object.auth [as handle] (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect-auth/lib/index.js:153:7)\n    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:198:15)\n    at HTTPServer.handle (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:211:3)\n    at Object.handle (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:105:14)\n    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:198:15)\nError: Can't set headers after they are sent.\n    at ServerResponse.&lt;anonymous&gt; (http.js:527:11)\n    at ServerResponse.setHeader (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/patch.js:50:20)\n    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:162:13)\n    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:150:23)\n    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:207:9)\n    at HTTPServer.handle (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:211:3)\n    at Object.handle (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:105:14)\n    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:198:15)\n    at /home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/middleware/session.js:323:9\n    at /home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/middleware/session.js:338:9\n\nnode.js:134\n        throw e; // process.nextTick error, or 'error' event on first tick\n        ^\nError: Can't set headers after they are sent.\n    at ServerResponse.&lt;anonymous&gt; (http.js:527:11)\n    at ServerResponse.setHeader (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/patch.js:50:20)\n    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:162:13)\n    at next (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/http.js:207:9)\n    at /home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/middleware/session.js:323:9\n    at /home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/middleware/session.js:338:9\n    at Array.&lt;anonymous&gt; (/home/eugene/public_html/all_things_node/projects/fb2/node_modules/connect/lib/middleware/session/memory.js:57:7)\n    at EventEmitter._tickCallback (node.js:126:26)\n</code></pre>\n\n<p>The following is my code:</p>\n\n<pre><code>var fbId= \"XXX\";\nvar fbSecret= \"XXXXXX\";\nvar fbCallbackAddress= \"http://127.0.0.1:8888/auth/facebook_callback\"\n\nvar cookieSecret = \"node\";     // enter a random hash for security\n\nvar express= require('express');\nvar auth = require('connect-auth')\nvar app = express.createServer();\n\n\napp.configure(function(){\n    app.use(express.bodyParser());\n    app.use(express.methodOverride());\n    app.use(express.cookieParser());\n    app.use(express.session({secret: cookieSecret}));\n    app.use(auth([\n        auth.Facebook({\n            appId : fbId,\n            appSecret: fbSecret,\n            callback: fbCallbackAddress,\n            scope: 'offline_access,email,user_about_me,user_activities,manage_pages,publish_stream',\n            failedUri: '/noauth'\n        })\n    ]));\n    app.use(app.router);\n});\n\n\napp.get('/auth/facebook', function(req, res) {\n  req.authenticate(\"facebook\", function(error, authenticated) {\n    if (authenticated) {\n      res.redirect(\"/great\");\n      console.log(\"ok cool.\");\n      console.log(res['req']['session']);\n    }\n  });\n});\n\napp.get('/noauth', function(req, res) {\n  console.log('Authentication Failed');\n  res.send('Authentication Failed');\n});\n\napp.get('/great', function( req, res) {\n  res.send('Supercoolstuff');\n});\n\napp.listen(8888);\n</code></pre>\n\n<p>May I know what is wrong with my code?</p>\n\n<p>I'm really new to this, so sorry for just putting up the code here.</p>\n\n<p>Thank you all in advance.</p>\n",
            "last_activity_date": 1423994457,
            "question_id": 7042340,
            "score": 90,
            "tags": [
                "javascript",
                "node.js",
                "express"
            ],
            "title": "Node.js Error: Can&#39;t set headers after they are sent"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>To find in the parent of the iFrame use:</p>\n\n<pre><code>$('#parentPrice', window.parent.document).html();\n</code></pre>\n\n<p>The second parameter for the $() wrapper is the context in which to search. This defaults to document.</p>\n",
                    "is_accepted": true,
                    "score": 326
                },
                {
                    "body": "<blockquote>\n  <p>how to access iFrame parent page using jquery</p>\n</blockquote>\n\n<p>window.parent.document.</p>\n\n<p>jQuery is a library on top of JavaScript, not a complete replacement for it. You don't have to replace every last JavaScript expression with something involving $.</p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>in parent window put :</p>\n\n<pre><code>&lt;script&gt;\nfunction ifDoneChildFrame(val)\n{\n   $('#parentPrice').html(val);\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>and in iframe src file put :</p>\n\n<blockquote>\n  \n  window.parent.ifDoneChildFrame('Your\n  value here'); \n</blockquote>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>yeah it works for me as well.</p>\n\n<p>Note : we need to use window.parent.document</p>\n\n<pre><code>    $(\"button\", window.parent.document).click(function()\n    {\n        alert(\"Functionality defined by def\");\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It's working for me with little twist. \nIn my case I have to populate value from POPUP JS to PARENT WINDOW form.</p>\n\n<p>So I have used <code>$('#ee_id',window.opener.document).val(eeID);</code></p>\n\n<p>Excellent!!!</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Might be a little late to the game here, but I just discovered this fantastic jQuery plugin <a href=\"https://github.com/mkdynamic/jquery-popupwindow\" rel=\"nofollow\">https://github.com/mkdynamic/jquery-popupwindow</a>. It basically uses an onUnload callback event, so it basically listens out for the closing of the child window, and will perform any necessary stuff at that point. SO there's really no need to write any JS in the child window to pass back to the parent.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you need to find the jQuery instance in the parent document (e.g., to call an utility function provided by a plug-in) use one of these syntaxes:</p>\n\n<ul>\n<li><code>window.parent.$</code></li>\n<li><code>window.parent.jQuery</code></li>\n</ul>\n\n<p>Example:</p>\n\n<pre><code>window.parent.$.modal.close();\n</code></pre>\n\n<p>jQuery gets attached to the <code>window</code> object and that's what <code>window.parent</code> is.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have an iframe and I wrote this code</p>\n\n<pre><code>window.parent.document.getElementById('parentPrice').innerHTML\n</code></pre>\n\n<p>to access parent element. How to get the same result using jquery?<br />\n<strong>UPDATE</strong>: Or how to access iFrame parent page using jquery?</p>\n",
            "last_activity_date": 1387890255,
            "question_id": 726816,
            "score": 174,
            "tags": [
                "javascript",
                "jquery",
                "iframe"
            ],
            "title": "How to write this in jQuery &quot;window.parent.document.getElementById(&#39;parentPrice&#39;).innerHTML&quot;?"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>I think gmail just tracks the scroll position on a timer and repositions a <code>div</code> accordingly.</p>\n\n<p>The best solution I've seen is at <a href=\"http://doctyper.com/archives/200808/fixed-positioning-on-mobile-safari/\" rel=\"nofollow\">doctyper</a>.</p>\n\n<p>A simpler jQuery solution that moves an element onscroll: <a href=\"http://markmail.org/message/c36au6ogcpyysit5\" rel=\"nofollow\">link</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I found this just now: <a href=\"http://doctyper.com/archives/200808/fixed-positioning-on-mobile-safari/\" rel=\"nofollow\">http://doctyper.com/archives/200808/fixed-positioning-on-mobile-safari/</a></p>\n\n<p>(This question was also in the Google search results.)</p>\n\n<p>(Sorry for the necrobump.)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This fixed position div can be achieved in just 2 lines of code which moves the div on scroll to the bottom of the page.</p>\n\n<pre><code>window.onscroll = function() {\n  document.getElementById('fixedDiv').style.top =\n     (window.pageYOffset + window.innerHeight - 25) + 'px';\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 69
                },
                {
                    "body": "<p>I found the gmail solution for floaty bar.</p>\n\n<p><a href=\"http://googlecode.blogspot.com/2009/09/gmail-for-mobile-html5-series-css.html\" rel=\"nofollow\">http://googlecode.blogspot.com/2009/09/gmail-for-mobile-html5-series-css.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This may interest you. It's Apple Dev support page. <br>\n<a href=\"http://developer.apple.com/library/ios/#technotes/tn2010/tn2262/\" rel=\"nofollow\">http://developer.apple.com/library/ios/#technotes/tn2010/tn2262/</a> <br><br>\nRead the point \"<strong>4. Modify code that relies on CSS fixed positioning</strong>\" and you will find out that there is very good reason why Apple made the conscious decision to handle fixed position as static.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>it worked for me:</p>\n\n<pre><code>function changeFooterPosition() {   \n  $('.footer-menu').css('top', window.innerHeight + window.scrollY - 44 + \"px\");\n}\n\n$(document).bind('scroll', function() {\n  changeFooterPosition();\n});\n</code></pre>\n\n<p>(44 is the height of my bar)</p>\n\n<p>Although the bar only moves at the end of the scroll...</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>See <a href=\"http://code.google.com/mobile/articles/webapp_fixed_ui.html\">Google's solution to this problem</a>. You basically have to scroll content yourself using JavaScript. <a href=\"http://www.sencha.com/products/touch/\">Sencha Touch</a> also provides a library for getting this behavior in a very performant manor.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You could try using touch-scroll, a jQuery plugin that mimics scrolling with fixed elements on mobile Safari: <a href=\"https://github.com/neave/touch-scroll\" rel=\"nofollow\">https://github.com/neave/touch-scroll</a></p>\n\n<p>View an example with your iOS device at <a href=\"http://neave.github.com/touch-scroll/\" rel=\"nofollow\">http://neave.github.com/touch-scroll/</a></p>\n\n<p>Or an alternative is iScroll: <a href=\"http://cubiq.org/iscroll\" rel=\"nofollow\">http://cubiq.org/iscroll</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>iOS 5 has <a href=\"http://davidbcalhoun.com/2011/new-mobile-safari-stuff-in-ios5-position-fixed-overflow-scroll-new-input-type-support-web-workers-ecmascript-5\">support for position:fixed</a>.</p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>This is how i did it.\nI have a nav block that is below the header once you scroll the page down it 'sticks' to the top of the window.\nIf you scroll back to top, nav goes back in it's place\nI use position:fixed in CSS for non mobile platforms and iOS5.\nOther Mobile versions do have that 'lag' until screen stops scrolling before it's set.</p>\n\n<pre><code>// css\n#sticky.stick {\n    width:100%;\n    height:50px;\n    position: fixed;\n    top: 0;\n    z-index: 1;\n}\n\n// jquery \n//sticky nav\n    function sticky_relocate() {\n      var window_top = $(window).scrollTop();\n      var div_top = $('#sticky-anchor').offset().top;\n\n      if (window_top &gt; div_top)\n        $('#sticky').addClass('stick');\n      else\n        $('#sticky').removeClass('stick');\n     }\n\n$(window).scroll(function(event){\n\n    // sticky nav css NON mobile way\n       sticky_relocate();\n\n       var st = $(this).scrollTop();\n\n    // sticky nav iPhone android mobile way iOS&lt;5\n\n       if (navigator.userAgent.match(/OS 5(_\\d)+ like Mac OS X/i)) {\n            //do nothing uses sticky_relocate() css\n       } else if ( navigator.userAgent.match(/(iPod|iPhone|iPad)/i) || navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/webOS/i) ) {\n\n            var window_top = $(window).scrollTop();\n            var div_top = $('#sticky-anchor').offset().top;\n\n            if (window_top &gt; div_top) {\n                $('#sticky').css({'top' : st  , 'position' : 'absolute' });\n            } else {\n                $('#sticky').css({'top' : 'auto' });\n            }\n        };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>&lt;meta name=\"viewport\" content=\"width=320, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no\"/&gt; \n</code></pre>\n\n<p>Also making sure <code>height=device-height</code> is not present in this meta tag helps prevent additional footer padding that normally would not exist on the page. The menubar height adds to the viewport height causing a fixed background to become scrollable.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here you can see what (mobile) browsers support css position fixed + there version.</p>\n\n<p><a href=\"http://caniuse.com/css-fixed\" rel=\"nofollow\">http://caniuse.com/css-fixed</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Our web app requires a fixed header.  We are fortunate in that we only have to support the latest browsers, but Safari's behavior in this area caused us a real problem.  </p>\n\n<p>The best fix, as others have pointed out, is to write our own scrolling code.  However, we can't justify that effort to fix a problem that occurs only on iOS.  It makes more sense to hope that Apple may fix this problem, especially since, as QuirksMode suggests, Apple now stands alone in their interpretation of \"position:fixed\".  </p>\n\n<p><a href=\"http://www.quirksmode.org/blog/archives/2013/12/position_fixed_1.html\" rel=\"nofollow\">http://www.quirksmode.org/blog/archives/2013/12/position_fixed_1.html</a></p>\n\n<p>What worked for us is to toggle between \"position:fixed\" and \"position:absolute\" depending on whether the user has zoomed.  This replaces our \"floating\" header with predictable behavior, which is important for usability.  When zoomed, the behavior is not what we want, but the user can easily work around this by reversing the zoom.  </p>\n\n<pre><code>// On iOS, \"position: fixed;\" is not supported when zoomed, so toggle \"position: absolute;\".\nheader = document.createElement( \"HEADER\" );\ndocument.body.appendChild( header );\nif( navigator.userAgent.match( /iPad/i ) || navigator.userAgent.match( /iPhone/i )) {\n    addEventListener( document.body, function( event ) {\n        var zoomLevel = (( Math.abs( window.orientation ) === 90 ) ? screen.height : screen.width ) / window.innerWidth;\n        header.style.position = ( zoomLevel &gt; 1 ) ? \"absolute\" : \"fixed\";\n    });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to position an element fixed relative to the viewport in Mobile Safari? As many have noted, <code>position: fixed</code> doesn't work, but Gmail just came out with a solution that almost is what I want &ndash; see the floating menu bar on the message view.</p>\n\n<p>Getting real-time scroll events in JavaScript would also be a reasonable solution.</p>\n",
            "last_activity_date": 1413985080,
            "question_id": 743123,
            "score": 59,
            "tags": [
                "javascript",
                "iphone",
                "css",
                "mobile-safari"
            ],
            "title": "Fixed positioning in Mobile Safari"
        },
        {
            "answer_count": 20,
            "answers": [
                {
                    "body": "<p>From the Express.js Guide: <a href=\"http://expressjs.com/2x/guide.html#view-rendering\">View Rendering</a></p>\n\n<blockquote>\n  <p>View filenames take the form Express.ENGINE, where ENGINE is the name of the module that will be required. <strong>For example the view layout.ejs will tell the view system to require('ejs')</strong>, the module being loaded must export the method exports.render(str, options) to comply with Express, however app.register() can be used to map engines to file extensions, so that for example \"foo.html\" can be rendered by jade.</p>\n</blockquote>\n\n<p>So either you create your own simple renderer or you just use jade:</p>\n\n<pre><code> app.register('.html', require('jade'));\n</code></pre>\n\n<p><a href=\"http://expressjs.com/2x/guide.html#app.register%28%29\">More</a> about <code>app.register</code>.</p>\n\n<blockquote>\n  <p>Note that in Express 3, this method is renamed <a href=\"http://expressjs.com/api.html#app.engine\"><code>app.engine</code></a></p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 47
                },
                {
                    "body": "<p>You could also read the html file and send it.</p>\n\n<pre><code>app.get('/', function(req, res) {\n    fs.readFile(__dirname + '/public/index.html', 'utf8', function(err, text){\n        res.send(text);\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>try this. it works for me.</p>\n\n<pre><code>app.configure(function(){\n\n  .....\n\n  // disable layout\n  app.set(\"view options\", {layout: false});\n\n  // make a custom html template\n  app.register('.html', {\n    compile: function(str, options){\n      return function(locals){\n        return str;\n      };\n    }\n  });\n});\n\n....\n\napp.get('/', function(req, res){\n  res.render(\"index.html\");\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 43
                },
                {
                    "body": "<pre><code>app.get('/', function (req, res) {\nres.sendfile(__dirname + '/public/index.html');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>You can have jade include a plain HTML page:</p>\n\n<p>in views/index.jade</p>\n\n<pre><code>include plain.html\n</code></pre>\n\n<p>in views/plain.html</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n...\n</code></pre>\n\n<p>and app.js can still just render jade:</p>\n\n<pre><code>res.render(index)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 134
                },
                {
                    "body": "<p>//@Error: Cannot find module 'html'</p>\n\n<p>//.. file is somewhere else!!!</p>\n\n<pre><code>console.log('Current uri: ' + uri); // u are lookin for this file\nconsole.log('Current directory: ' + process.cwd()); //!!!&gt;&gt;&gt; Current directory: c:\\Program Files\\nodejs\\node_modules\n\n// put into working dir\nconsole.log('Starting directory: ' + process.cwd());\ntry {\n  process.chdir('c:\\\\3W\\\\JavaScript\\\\node.js\\\\x4node\\\\sampleDir');\n  console.log('New directory: ' + process.cwd()); //!!!&gt;&gt;&gt; New directory: c:\\3W\\JavaScript\\node.js\\x4node\\sampleDir\n}\ncatch (err) {\n  console.log('chdir: ' + err);\n}\n// try this to see where u are!\n// (process.cwd@http://nodejs.org/docs/latest/api/index.html)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>For my project I have created this structure:</p>\n\n<pre><code>index.js\ncss/\n    reset.css\nhtml/\n    index.html\n</code></pre>\n\n<p>This code serves index.html for <code>/</code> requests, and reset.css for <code>/css/reset.css</code> requests. Simple enough, and <strong>the best part is that it automatically adds cache headers</strong>.</p>\n\n<pre><code>var express = require('express'),\n    server = express();\n\nserver.configure(function () {\n    server.use('/css', express.static(__dirname + '/css'));\n    server.use(express.static(__dirname + '/html'));\n});\n\nserver.listen(1337);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I also faced the same issue in <code>express 3.X</code> and <code>node 0.6.16</code>. The above given solution will not work for latest version <code>express 3.x</code>. They removed the <code>app.register</code> method and added <code>app.engine</code> method. If you tried the above solution you may end up with the following error.</p>\n\n<pre><code>node.js:201\n        throw e; // process.nextTick error, or 'error' event on first tick\n              ^\nTypeError: Object function app(req, res){ app.handle(req, res); } has no method 'register'\n    at Function.&lt;anonymous&gt; (/home/user1/ArunKumar/firstExpress/app.js:37:5)\n    at Function.configure (/home/user1/ArunKumar/firstExpress/node_modules/express/lib/application.js:399:61)\n    at Object.&lt;anonymous&gt; (/home/user1/ArunKumar/firstExpress/app.js:22:5)\n    at Module._compile (module.js:441:26)\n    at Object..js (module.js:459:10)\n    at Module.load (module.js:348:31)\n    at Function._load (module.js:308:12)\n    at Array.0 (module.js:479:10)\n    at EventEmitter._tickCallback (node.js:192:40)\n</code></pre>\n\n<p>To get rid of the error message. Add the following line to your <code>app.configure function</code></p>\n\n<pre><code>app.engine('html', require('ejs').renderFile);\n</code></pre>\n\n<p>Note: you have to install <code>ejs</code> template engine</p>\n\n<pre><code>npm install -g ejs\n</code></pre>\n\n<p>Example: </p>\n\n<pre><code>app.configure(function(){\n\n  .....\n\n  // disable layout\n  app.set(\"view options\", {layout: false});\n\n  app.engine('html', require('ejs').renderFile);\n\n....\n\napp.get('/', function(req, res){\n  res.render(\"index.html\");\n});\n</code></pre>\n\n<p><strong>Note:</strong> The simplest solution is to use ejs template as view engine. There you can write raw HTML in *.ejs view files.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p><strong>Many of these answers are out of date.</strong></p>\n\n<p>Using express 3.0.0 and 3.1.0, the following works:</p>\n\n<pre><code>app.set('views', __dirname + '/views');\napp.engine('html', require('ejs').renderFile);\n</code></pre>\n\n<p>See the comments below for alternative syntax and caveats for express 3.4+:</p>\n\n<pre><code>app.set('view engine', 'ejs');\n</code></pre>\n\n<p>Then you can do something like:</p>\n\n<pre><code>app.get('/about', function (req, res)\n{\n    res.render('about.html');\n});\n</code></pre>\n\n<p>This assumes you have your views in the <code>views</code> subfolder, and that you have installed the <code>ejs</code> node module. If not, run the following on a Node console:</p>\n\n<pre><code>npm install ejs --save\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 145
                },
                {
                    "body": "<p>If you don't have to use the <strong>views</strong> directory, Simply move html files to the <strong>public</strong> directory below.</p>\n\n<p>and then, add this line into app.configure instead of '/views'.</p>\n\n<pre>\nserver.use(express.static(__dirname + '/public'));\n</pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Quite late answer but because was facing the same issue decided to post it here.</p>\n\n<p>If you using express@~3.0.0 change below line from your example:</p>\n\n<pre><code>app.use(express.staticProvider(__dirname + '/public'));\n</code></pre>\n\n<p>to something like this:</p>\n\n<pre><code>app.set(\"view options\", {layout: false});\napp.use(express.static(__dirname + '/public'));\n</code></pre>\n\n<p>I made it as described on <a href=\"http://expressjs.com/api.html\" rel=\"nofollow\">express api page</a> and it works like charm. With that setup you don't have to write additional code so it becomes easy enough to use for your micro production or testing.</p>\n\n<p>Full code listed below:</p>\n\n<pre><code>var express = require('express');\nvar app = express.createServer();\n\napp.set(\"view options\", {layout: false});\napp.use(express.static(__dirname + '/public'));\n\napp.get('/', function(req, res) {\n    res.render('index.html');\n});\n\n// spin up server\napp.listen(8080, '127.0.0.1')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I usually use this</p>\n\n<pre><code>app.configure(function() {\n    app.use(express.static(__dirname + '/web'));\n});\n</code></pre>\n\n<p>Just be careful because that'll share anything in the /web directory.</p>\n\n<p>I hope it helps</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>if you are using express framework to node.js </p>\n\n<p>install npm ejs </p>\n\n<p>then add config file </p>\n\n<pre><code>app.set('port', process.env.PORT || 3000);\napp.set('views', __dirname + '/views');\napp.set('view engine', 'ejs');\napp.set('view engine', 'jade');\napp.use(express.favicon());\napp.use(express.logger('dev'));\napp.use(express.bodyParser());\napp.use(express.methodOverride());\napp.use(app.router)\n</code></pre>\n\n<p>;</p>\n\n<p>render the page from exports module form.js\nhave the html file in the views dir\n   with extension of ejs file name as\n<code>form.html.ejs</code></p>\n\n<p>then create the form.js</p>\n\n<p><code>res.render('form.html.ejs');</code>  </p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<hr>\n\n<p>1)\nThe best way is to set static folder. In your main file (app.js | server.js | ???):</p>\n\n<pre><code>app.use(express.static(path.join(__dirname, 'public')));\n</code></pre>\n\n<p>public/css/form.html<br>\npublic/css/style.css</p>\n\n<p>Then you got static file from \"public\" folder:</p>\n\n<pre><code>http://YOUR_DOMAIN/form.html\nhttp://YOUR_DOMAIN/css/style.css\n</code></pre>\n\n<hr>\n\n<p>2)</p>\n\n<p>You can create your file cache.<br />\nUse method fs.readFileSync</p>\n\n<pre><code>var cache = {};\ncache[\"index.html\"] = fs.readFileSync( __dirname + '/public/form.html');\n\napp.get('/', function(req, res){    \n    res.setHeader('Content-Type', 'text/html');\n    res.send( cache[\"index.html\"] );                                \n};);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I was trying to set up an angular app with an express RESTful API and landed on this page multiple times though it wasn't helpful. Here's what I found that worked:</p>\n\n<pre><code>app.configure(function() {\n    app.use(express.static(__dirname + '/public'));         // set the static files location\n    app.use(express.logger('dev'));                         // log every request to the console\n    app.use(express.bodyParser());                          // pull information from html in POST\n    app.use(express.methodOverride());                      // simulate DELETE and PUT\n    app.use(express.favicon(__dirname + '/public/img/favicon.ico'));\n});\n</code></pre>\n\n<p>Then in the callback for your api routes look like: <code>res.jsonp(users);</code></p>\n\n<p>Your client side framework can handle routing. Express is for serving the API.</p>\n\n<p>My home route looks like this:</p>\n\n<pre><code>app.get('/*', function(req, res) {\n    res.sendfile('./public/index.html'); // load the single view file (angular will handle the page changes on the front-end)\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>With Express 4.0.0, the only thing you have to do is comment out 2 lines in app.js:</p>\n\n<pre><code>/* app.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade'); */ //or whatever the templating engine is.\n</code></pre>\n\n<p>And then drop your static file into the /public directory. Example: /public/index.html</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I wanted to allow requests to \"/\" to be handled by an Express route where previously they had been handled by the statics middleware. This would allow me to render the regular version of index.html or a version that loaded concatenated + minified JS and CSS, depending on application settings. Inspired by <a href=\"http://stackoverflow.com/a/8922097/1377016\">Andrew Homeyer's answer</a>, I decided to drag my HTML files - unmodified - into a views folder, configure Express like so</p>\n\n<pre><code>   app.engine('html', swig.renderFile);\n   app.set('view engine', 'html');\n   app.set('views', __dirname + '/views');  \n</code></pre>\n\n<p>And created a route handler like so </p>\n\n<pre><code> app.route('/')\n        .get(function(req, res){\n            if(config.useConcatendatedFiles){\n                return res.render('index-dist');\n            }\n            res.render('index');       \n        });\n</code></pre>\n\n<p>This worked out pretty well.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I added below 2 line and it work for me</p>\n\n<pre><code>    app.set('view engine', 'html');\n    app.engine('html', require('ejs').renderFile);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try res.sendFile() function in Express routes.</p>\n\n<pre><code>var express = require(\"express\");\nvar app     = express();\nvar path    = require(\"path\");\n\n\napp.get('/',function(req,res){\n  res.sendFile(path.join(__dirname+'/index.html'));\n  //__dirname : It will resolve to your project folder.\n});\n\napp.get('/about',function(req,res){\n  res.sendFile(path.join(__dirname+'/about.html'));\n});\n\napp.get('/sitemap',function(req,res){\n  res.sendFile(path.join(__dirname+'/sitemap.html'));\n});\n\napp.listen(3000);\n\nconsole.log(\"Running at Port 3000\");\n</code></pre>\n\n<p>Read here : <a href=\"http://codeforgeek.com/2015/01/render-html-file-expressjs/\" rel=\"nofollow\">http://codeforgeek.com/2015/01/render-html-file-expressjs/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>res.sendFile(__dirname + '/public/login.html');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a basic node js app that I am trying to get off the ground using Express framework.  I have a Views folder where I have an \"index.html\" file.  But I receive the following error when loading the web browser.</p>\n\n<blockquote>\n  <p>Error: Cannot find module 'html'</p>\n</blockquote>\n\n<p>Below is my code.  What am I missing here?</p>\n\n<pre><code>var express = require('express');\n\nvar app = express.createServer();\n\napp.use(express.staticProvider(__dirname + '/public'));\n\napp.get('/', function(req, res) {\n\n    res.render('index.html');\n});\n\n\n// spin up server\napp.listen(8080, '127.0.0.1')\n</code></pre>\n",
            "last_activity_date": 1425031696,
            "question_id": 4529586,
            "score": 129,
            "tags": [
                "javascript",
                "html",
                "node.js",
                "view",
                "express"
            ],
            "title": "Render basic HTML view in Node JS Express?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I think the best approach is to use a combination, Your second approach seems to be an elegant solution where browsers are involved. </p>\n\n<p>So depending on the how the call is made. (whether its a browser or a web service call) you can use a combination of the two, with sending a URL to the browser and sending raw data to any other web service client.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In short, there is no simpler way. You need to make another server request to show PDF file. Al though, there are few alternatives but they are not perfect and won't work on all browsers:</p>\n\n<ol>\n<li>Look at <a href=\"http://en.wikipedia.org/wiki/Data_URI_scheme\" rel=\"nofollow\">data URI scheme</a>. If binary data is small then you can perhaps use javascript to open window passing data in URI. </li>\n<li>Windows/IE only solution would be to have .NET control or FileSystemObject to save the data on local file system and open it from there.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>please refer the answer below <a href=\"http://stackoverflow.com/a/8394118/119622\">http://stackoverflow.com/a/8394118/119622</a></p>\n",
                    "is_accepted": true,
                    "score": 59
                },
                {
                    "body": "<p><em>letronje</em>'s solution only works for very simple pages. <code>document.body.innerHTML +=</code> takes the HTML text of the body, appends the iframe HTML, and sets the innerHTML of the page to that string. This will wipe out any event bindings your page has, amongst other things. Create an element and use <code>appendChild</code> instead.</p>\n\n<pre><code>$.post('/create_binary_file.php', postData, function(retData) {\n  var iframe = document.createElement(\"iframe\");\n  iframe.setAttribute(\"src\", retData.url);\n  iframe.setAttribute(\"style\", \"display: none\");\n  document.body.appendChild(iframe);\n}); \n</code></pre>\n\n<p>Or using jQuery</p>\n\n<pre><code>$.post('/create_binary_file.php', postData, function(retData) {\n  $(\"body\").append(\"&lt;iframe src='\" + retData.url+ \"' style='display: none;' &gt;&lt;/iframe&gt;\");\n}); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 109
                },
                {
                    "body": "<p>I know this kind of old, but I think I have come up with a more elegant solution.  I had the exact same problem.  The issue I was having with the solutions suggested were that they all required the file being saved on the server, but I did not want to save the files on the server, because it introduced other problems (security: the file could then be accessed by non-authenticated users, cleanup: how and when do you get rid of the files).  And like you, my data was complex, nested JSON objects that would be hard to put into a form.</p>\n\n<p>What I did was create two server functions.  The first validated the data.  If there was an error, it would be returned.  If it was not an error, I returned all of the parameters serialized/encoded as a base64 string.  Then, on the client, I have a form that has only one hidden input and posts to a second server function.  I set the hidden input to the base64 string and submit the format.  The second server function decodes/deserializes the parameters and generates the file.  The form could submit to a new window or an iframe on the page and the file will open up.</p>\n\n<p>There's a little bit more work involved, and perhaps a little bit more processing, but overall, I felt much better with this solution.</p>\n\n<p>Code is in C#/MVC</p>\n\n<pre><code>    public JsonResult Validate(int reportId, string format, ReportParamModel[] parameters)\n    {\n        // TODO: do validation\n\n        if (valid)\n        {\n            GenerateParams generateParams = new GenerateParams(reportId, format, parameters);\n\n            string data = new EntityBase64Converter&lt;GenerateParams&gt;().ToBase64(generateParams);\n\n            return Json(new { State = \"Success\", Data = data });\n        }\n\n        return Json(new { State = \"Error\", Data = \"Error message\" });\n    }\n\n    public ActionResult Generate(string data)\n    {\n        GenerateParams generateParams = new EntityBase64Converter&lt;GenerateParams&gt;().ToEntity(data);\n\n        // TODO: Generate file\n\n        return File(bytes, mimeType);\n    }\n</code></pre>\n\n<p>on the client</p>\n\n<pre><code>    function generate(reportId, format, parameters)\n    {\n        var data = {\n            reportId: reportId,\n            format: format,\n            params: params\n        };\n\n        $.ajax(\n        {\n            url: \"/Validate\",\n            type: 'POST',\n            data: JSON.stringify(data),\n            dataType: 'json',\n            contentType: 'application/json; charset=utf-8',\n            success: generateComplete\n        });\n    }\n\n    function generateComplete(result)\n    {\n        if (result.State == \"Success\")\n        {\n            // this could/should already be set in the HTML\n            formGenerate.action = \"/Generate\";\n            formGenerate.target = iframeFile;\n\n            hidData = result.Data;\n            formGenerate.submit();\n        }\n        else\n            // TODO: display error messages\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>There is a simplier way, create a form and post it, this runs the risk of resetting the page if the return mime type is something that a browser would open, but for csv and such it's perfect</p>\n\n<p>Example requires underscore and jquery</p>\n\n<pre><code>var postData = {\n    filename:filename,\n    filecontent:filecontent\n};\nvar fakeFormHtmlFragment = \"&lt;form style='display: none;' method='POST' action='\"+SAVEAS_PHP_MODE_URL+\"'&gt;\";\n_.each(postData, function(postValue, postKey){\n    var escapedKey = postKey.replace(\"\\\\\", \"\\\\\\\\\").replace(\"'\", \"\\'\");\n    var escapedValue = postValue.replace(\"\\\\\", \"\\\\\\\\\").replace(\"'\", \"\\'\");\n    fakeFormHtmlFragment += \"&lt;input type='hidden' name='\"+escapedKey+\"' value='\"+escapedValue+\"'&gt;\";\n});\nfakeFormHtmlFragment += \"&lt;/form&gt;\";\n$fakeFormDom = $(fakeFormHtmlFragment);\n$(\"body\").append($fakeFormDom);\n$fakeFormDom.submit();\n</code></pre>\n\n<p>For things like html, text and such, make sure the mimetype is some thing like application/octet-stream</p>\n\n<p>php code</p>\n\n<pre><code>&lt;?php\n/**\n * get HTTP POST variable which is a string ?foo=bar\n * @param string $param\n * @param bool $required\n * @return string\n */\nfunction getHTTPPostString ($param, $required = false) {\n    if(!isset($_POST[$param])) {\n        if($required) {\n            echo \"required POST param '$param' missing\";\n            exit 1;\n        } else {\n            return \"\";\n        }\n    }\n    return trim($_POST[$param]);\n}\n\n$filename = getHTTPPostString(\"filename\", true);\n$filecontent = getHTTPPostString(\"filecontent\", true);\n\nheader(\"Content-type: application/octet-stream\");\nheader(\"Content-Disposition: attachment; filename=\\\"$filename\\\"\");\necho $filecontent;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I've been playing around with another option that uses blobs. I've managed to get it to download text documents, and I've downloaded PDF's (However they are corrupted).</p>\n\n<p>Using the blob API your able to do the following:</p>\n\n<pre><code>$.post(/*...*/,function (result)\n{\n    var blob=new Blob([result]);\n    var link=document.createElement('a');\n    link.href=window.URL.createObjectURL(blob);\n    link.download=\"myFileName.txt\";\n    link.click();\n\n});\n</code></pre>\n\n<p>This is IE 10+, Chrome 8+, FF 4+. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/URL.createObjectURL\">https://developer.mozilla.org/en-US/docs/Web/API/URL.createObjectURL</a></p>\n\n<p>It will only download the file in Chrome, Firefox and Opera. This uses a download attribute on the anchor tag to force the browser to download it.</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I have a jquery-based single-page webapp. It communicates with a RESTful web service via AJAX calls. </p>\n\n<p>I'm trying to accomplish the following:</p>\n\n<ol>\n<li>Submit a POST that contains JSON data to a REST url.</li>\n<li>If the request specifies a JSON response, then JSON is returned.</li>\n<li>If the request specifies a PDF/XLS/etc response, then a downloadable binary is returned.</li>\n</ol>\n\n<p>I have 1 &amp; 2 working now, and the client jquery app displays the returned data in the web page by creating DOM elements based on the JSON data. I also have #3 working from the web-service point of view, meaning it will create and return a binary file if given the correct JSON parameters. But I'm unsure the best way to deal with #3 in the client javascript code.</p>\n\n<p>Is it possible to get a downloadable file back from an ajax call like this? How do I get the browser to download and save the file?</p>\n\n<pre><code>$.ajax({\n    type: \"POST\",\n    url: \"/services/test\",\n    contentType: \"application/json\",\n    data: JSON.stringify({category: 42, sort: 3, type: \"pdf\"}),\n    dataType: \"json\",\n    success: function(json, status){\n        if (status != \"success\") {\n            log(\"Error loading data\");\n            return;\n        }\n        log(\"Data loaded!\");\n    },\n    error: function(result, status, err) {\n        log(\"Error loading data\");\n        return;\n    }\n});\n</code></pre>\n\n<p>The server responds with the following headers:</p>\n\n<pre><code>Content-Disposition:attachment; filename=export-1282022272283.pdf\nContent-Length:5120\nContent-Type:application/pdf\nServer:Jetty(6.1.11)\n</code></pre>\n\n<p>Another idea is to generate the PDF and store it on the server and return JSON that includes a URL to the file. Then, issue another call in the ajax success handler to do something like the following:</p>\n\n<pre><code>success: function(json,status) {\n    window.location.href = json.url;\n}\n</code></pre>\n\n<p>But doing that means I would need to make more than one call to the server, and my server would need to build downloadable files, store them somewhere, then periodically clean up that storage area.</p>\n\n<p>There must be a simpler way to accomplish this. Ideas?</p>\n\n<hr>\n\n<p>EDIT: After reviewing the docs for $.ajax, I see that the response dataType can only be one of <code>xml, html, script, json, jsonp, text</code>, so I'm guessing there is no way to directly download a file using an ajax request, unless I embed the binary file in using Data URI scheme as suggested in the @VinayC answer (which is not something I want to do).</p>\n\n<p>So I guess my options are:</p>\n\n<ol>\n<li><p>Not use ajax and instead submit a form post and embed my JSON data into the form values. Would probably need to mess with hidden iframes and such.</p></li>\n<li><p>Not use ajax and instead convert my JSON data into a query string to build a standard GET request and set window.location.href to this URL. May need to use event.preventDefault() in my click handler to keep browser from changing from the application URL.</p></li>\n<li><p>Use my other idea above, but enhanced with suggestions from the @naikus answer. Submit AJAX request with some parameter that lets web-service know this is being called via an ajax call. If the web service is called from an ajax call, simply return JSON with a URL to the generated resource. If the resource is called directly, then return the actual binary file.</p></li>\n</ol>\n\n<p>The more I think about it, the more I like the last option. This way I can get information back about the request (time to generate, size of file, error messages, etc.) and I can act on that information before starting the download. The downside is extra file management on the server.</p>\n\n<p>Any other ways to accomplish this? Any pros/cons to these methods I should be aware of?</p>\n",
            "last_activity_date": 1421515974,
            "question_id": 3499597,
            "score": 108,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "rest"
            ],
            "title": "Javascript/jquery to download file via POST with JSON data"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Use the apply method of a function:-</p>\n\n<pre><code>function mainfunc (func){\n    window[func].apply(null, Array.prototype.slice.call(arguments, 1));\n}\n</code></pre>\n\n<p><strong>Edit</strong>:  It occurs to me that this would be much more useful with a slight tweak:-</p>\n\n<pre><code>function mainfunc (func){\n    this[func].apply(this, Array.prototype.slice.call(arguments, 1));\n}\n</code></pre>\n\n<p>This will work outside of the browser (<code>this</code> defaults to the global space). The use of call on mainfunc would also work:-</p>\n\n<pre><code>function target(a)\n{\n\talert(a)\n}\n\nvar o = {suffix: \" World\",\n\t\ttarget : function(s) {\n\t\talert(s + this.suffix);\n\t}\n}\n\nmainfunc(\"target\", \"Hello\");\n\nmainfunc.call(o, \"target\", \"Hello\");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 125
                },
                {
                    "body": "<p>Couldn't you just pass the <code>arguments</code> array along?</p>\n\n<pre><code>function mainfunc (func){\n    // remove the first argument containing the function name\n    arguments.shift();\n    window[func].apply(null, arguments);\n}\n\nfunction calledfunc1(args){\n    // Do stuff here\n}\n\nfunction calledfunc2(args){\n    // Do stuff here\n}\n\nmainfunc('calledfunc1','hello','bye');\nmainfunc('calledfunc2','hello','bye','goodbye');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>You could use <a href=\"http://www.webreference.com/js/column26/apply.html\"><code>.apply()</code></a></p>\n\n<p>You need to specify a <code>this</code>... I guess you could use the <code>this</code> within <code>mainfunc</code>.</p>\n\n<pre><code>function mainfunc (func)\n{\n    var args = new Array();\n    for (var i = 1; i &lt; arguments.length; i++)\n        args.push(arguments[i]);\n\n    window[func].apply(this, args);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Your code only works for global functions, ie. members of the <code>window</code> object. To use it with arbitrary functions, pass the function itself instead of its name as a string:</p>\n\n<pre><code>function dispatch(fn, args) {\n    fn = (typeof fn == \"function\") ? fn : window[fn];  // Allow fn to be a function object or the name of a global function\n    return fn.apply(this, args || []);  // args is optional, use an empty array by default\n}\n\nfunction f1() {}\n\nfunction f2() {\n    var f = function() {};\n    dispatch(f, [1, 2, 3]);\n}\n\ndispatch(f1, [\"foobar\"]);\ndispatch(\"f1\", [\"foobar\"]);\n\nf2();  // calls inner-function \"f\" in \"f2\"\ndispatch(\"f\", [1, 2, 3]);  // doesn't work since \"f\" is local in \"f2\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Here's what you need:</p>\n\n<pre><code>function mainfunc (){\n    window[Array.prototype.shift.call(arguments)].apply(null, arguments);\n}\n</code></pre>\n\n<p>The first argument is used as the function name and all of the remaining ones are used as arguments to the called function...</p>\n\n<p>We're able to use the <code>shift</code> method to return and then delete the first value from the arguments array. Note that we've called it from the Array prototype since, strictly speaking, 'arguments' is not a real array and so doesn't inherit the <code>shift</code> method like a regular array would.</p>\n\n<p><hr></p>\n\n<p>You can also call the shift method like this:</p>\n\n<pre><code>[].shift.call(arguments);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>If you want to pass with \"arguments\" a few others, you have to create the array of all arguments together, i.e. like this:</p>\n\n<pre><code>var Log = {\n    log: function() {\n        var args = ['myarg here'];\n        for(i=0; i&lt;arguments.length; i++) args = args.concat(arguments[i]);\n        console.log.apply(this, args);\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The simplest way might be:</p>\n\n<pre><code>var func='myDynamicFunction_'+myHandler;\nvar arg1 = 100, arg2 = 'abc';\n\nwindow[func].apply(null,[arg1, arg2]);\n</code></pre>\n\n<p>Assuming, that target function is already attached to a \"window\" object.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In case somebody is still looking for dynamic function call with dynamic parameters -    </p>\n\n<pre><code>callFunction(\"aaa('hello', 'world')\");\n\n    function callFunction(func) {\n                try\n                {\n                    eval(func);\n                }\n                catch (e)\n                { }\n            }\n    function aaa(a, b) {\n                alert(a + ' ' + b);\n            }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>Now I'm using this:</p>\n\n<pre><code>Dialoglar.Confirm = function (_title, _question, callback_OK) {\n    var confirmArguments = arguments;\n    bootbox.dialog({\n        title: \"&lt;b&gt;\" + _title + \"&lt;/b&gt;\",\n        message: _question,\n        buttons: {\n            success: {\n                label: \"OK\",\n                className: \"btn-success\",\n                callback: function () {\n                    if (typeof(callback_OK) == \"function\") {                            callback_OK.apply(this,Array.prototype.slice.call(confirmArguments, 3));\n                    }\n                }\n            },\n            danger: {\n                label: \"Cancel\",\n                className: \"btn-danger\",\n                callback: function () {\n                    $(this).hide();\n                }\n            }\n        }\n    });\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm looking for a trick about this. I know how to call a dynamic, arbitrary function in Javascript, passing specific parameters, something like this:</p>\n\n<pre><code>function mainfunc (func, par1, par2){\n    window[func](par1, par2);\n}\n\nfunction calledfunc(par1, par2){\n    // Do stuff here\n}\n\nmainfunc('calledfunc','hello','bye');\n</code></pre>\n\n<p>I know how to pass optional, unlimited parameters using arguments[] collection inside <em>mainfunc</em>, but, I can't figure how to send an arbitrary number of parameters to <em>mainfunc</em> to be sent to <em>calledfunc</em> dynamically; how can I accomplish something like this, but with any number of optional arguments (not using that ugly <em>if-else</em>)? :</p>\n\n<pre><code>function mainfunc (func){\n    if(arguments.length == 3)\n        window[func](arguments[1], arguments[2]);\n    elseif(arguments.length == 4)\n        window[func](arguments[1], arguments[2], arguments[3]);\n    elseif(arguments.length == 5)\n        window[func](arguments[1], arguments[2], arguments[3], arguments[4]);\n}\n\nfunction calledfunc1(par1, par2){\n    // Do stuff here\n}\n\nfunction calledfunc2(par1, par2, par3){\n    // Do stuff here\n}\n\nmainfunc('calledfunc1','hello','bye');\nmainfunc('calledfunc2','hello','bye','goodbye');\n</code></pre>\n\n<p>I apologize for my poor english, please ask me if you need some clarification about my (complicated) question.</p>\n\n<p>Thanks in advance!</p>\n",
            "last_activity_date": 1399555572,
            "question_id": 676721,
            "score": 96,
            "tags": [
                "javascript"
            ],
            "title": "Calling dynamic function with dynamic parameters in Javascript"
        },
        {
            "answer_count": 17,
            "answers": [
                {
                    "body": "<p>Have you tried using thead and tbody, and setting a fixed height on tbody with overflow:scroll?</p>\n\n<p>What are your target browsers?</p>\n\n<p>EDIT: It worked well (almost) in firefox - the addition of the vertical scrollbar caused the need for a horizontal scrollbar as well - yuck.  IE just set the height of each td to what I had specifed the height of tbody to be.  Here's the best I could come up with:</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n    &lt;title&gt;Blah&lt;/title&gt;\n    &lt;style type=\"text/css\"&gt;\n    table { width:300px; }\n    tbody { height:10em;  overflow:scroll;}\n    td { height:auto; }\n    &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n    &lt;table&gt;\n    \t&lt;thead&gt;\n    \t\t&lt;tr&gt;\n    \t\t  &lt;th&gt;One&lt;/th&gt;&lt;th&gt;Two&lt;/th&gt;\n    \t\t  &lt;/td&gt;\n    \t\t&lt;/tr&gt;\n    \t&lt;/thead&gt;\n    \t&lt;tbody&gt;\n    \t\t&lt;tr&gt;&lt;td&gt;Data&lt;/td&gt;&lt;td&gt;Data&lt;/td&gt;&lt;/tr&gt;\n    \t\t&lt;tr&gt;&lt;td&gt;Data&lt;/td&gt;&lt;td&gt;Data&lt;/td&gt;&lt;/tr&gt;\n    \t\t&lt;tr&gt;&lt;td&gt;Data&lt;/td&gt;&lt;td&gt;Data&lt;/td&gt;&lt;/tr&gt;\n    \t\t&lt;tr&gt;&lt;td&gt;Data&lt;/td&gt;&lt;td&gt;Data&lt;/td&gt;&lt;/tr&gt;\n    \t\t&lt;tr&gt;&lt;td&gt;Data&lt;/td&gt;&lt;td&gt;Data&lt;/td&gt;&lt;/tr&gt;\n    \t\t&lt;tr&gt;&lt;td&gt;Data&lt;/td&gt;&lt;td&gt;Data&lt;/td&gt;&lt;/tr&gt;\n    \t\t&lt;tr&gt;&lt;td&gt;Data&lt;/td&gt;&lt;td&gt;Data&lt;/td&gt;&lt;/tr&gt;\n    \t\t&lt;tr&gt;&lt;td&gt;Data&lt;/td&gt;&lt;td&gt;Data&lt;/td&gt;&lt;/tr&gt;\n    \t\t&lt;tr&gt;&lt;td&gt;Data&lt;/td&gt;&lt;td&gt;Data&lt;/td&gt;&lt;/tr&gt;\n    \t\t&lt;tr&gt;&lt;td&gt;Data&lt;/td&gt;&lt;td&gt;Data&lt;/td&gt;&lt;/tr&gt;\n    \t\t&lt;tr&gt;&lt;td&gt;Data&lt;/td&gt;&lt;td&gt;Data&lt;/td&gt;&lt;/tr&gt;\n    \t\t&lt;tr&gt;&lt;td&gt;Data&lt;/td&gt;&lt;td&gt;Data&lt;/td&gt;&lt;/tr&gt;\n    \t\t&lt;tr&gt;&lt;td&gt;Data&lt;/td&gt;&lt;td&gt;Data&lt;/td&gt;&lt;/tr&gt;\n    \t\t&lt;tr&gt;&lt;td&gt;Data&lt;/td&gt;&lt;td&gt;Data&lt;/td&gt;&lt;/tr&gt;\n    \t\t&lt;tr&gt;&lt;td&gt;Data&lt;/td&gt;&lt;td&gt;Data&lt;/td&gt;&lt;/tr&gt;\n    \t&lt;/tbody&gt;\n    &lt;/table&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>This caused me huge headaches trying to implement such a grid for an application of ours. I tried all the various techniques out there but they each had problems. The closest I came was using a jQuery plugin such as <a href=\"http://webplicity.net/flexigrid/\" rel=\"nofollow\">Flexigrid</a> (look on <a href=\"http://www.ajaxrain.com\" rel=\"nofollow\">http://www.ajaxrain.com</a> for alternatives), but this doesn't seem to support 100% wide tables which is what I needed.</p>\n\n<p>What I ended up doing was rolling my own; Firefox supports scrolling <code>tbody</code> elements so I browser sniffed and used appropriate CSS (setting height, overflow etc... ask if you want more details) to make that scroll, and then for other browsers I used two separate tables set to use <code>table-layout: fixed</code> which uses a sizing algorithm that is guarenteed not to overflow the stated size (normal tables will expand when content is too wide to fit). By giving both tables identical widths I was able to get their columns to line up. I wrapped the second one in a div set to scroll and with a bit of jiggery pokery with margins etc managed to get the look and feel I wanted.</p>\n\n<p>Sorry if this answer sounds a bit vague in places; I'm writing quickly as I don't have much time. Leave a comment if you want me to expand any further!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This one works in FF and IE5+ :</p>\n\n<p><a href=\"http://www.demay-fr.net/blog/index.php/2007/10/22/87-make-table-tboby-scroll-with-thead-an-tfoot-fixed-on-both-ie5-anbd-firefox\" rel=\"nofollow\">http://www.demay-fr.net/blog/index.php/2007/10/22/87-make-table-tboby-scroll-with-thead-an-tfoot-fixed-on-both-ie5-anbd-firefox</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I had to find the same answer. The best example I found is <a href=\"http://www.cssplay.co.uk/menu/tablescroll.html\">http://www.cssplay.co.uk/menu/tablescroll.html</a> - I found example #2 worked well for me. You will have to set the height of the inner table with Java Script, the rest is CSS.</p>\n",
                    "is_accepted": false,
                    "score": 52
                },
                {
                    "body": "<p>Not sure if anyone is still looking at this but they way I have done this previously is to use two tables to display the single original table - the first just the original table title line and no table body rows (or an empty body row to make it validate).</p>\n\n<p>The second is in a separate div and has no title and just the original table body rows. The separate div is then made scrollable.</p>\n\n<p>The second table in it's div is placed just below the first table in the HTML and it looks like a single table with a fixed header and a scrollable lower section. I have only tested this in Safari, Firefox and IE (latest versions of each in Spring 2010) but it worked in all of them.</p>\n\n<p>The only issue it had was that the first table would not validate without a body (W3.org validator - XHTML 1.0 strict), and when I added one with no content it causes a blank row. You can use CSS to make this not visible but it still eats up space on the page.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try this <a href=\"http://s7u.blogspot.com/2010/08/fixed-header-footer-table.html\" rel=\"nofollow\">http://s7u.blogspot.com/2010/08/fixed-header-footer-table.html</a>, This has updated version which works fine in IE, Chrome, FF. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's a code that really works for IE and FF (at least):</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Test&lt;/title&gt;\n    &lt;style type=\"text/css\"&gt;\n        table{\n            width: 400px;\n        }\n        tbody {\n            height: 100px;\n            overflow: scroll;\n        }\n        div {\n            height: 100px;\n            width: 400px;\n            position: relative;\n        }\n        tr.alt td {\n            background-color: #EEEEEE;\n        }\n    &lt;/style&gt;\n    &lt;!--[if IE]&gt;\n        &lt;style type=\"text/css\"&gt;\n            div {\n                overflow-y: scroll;\n                overflow-x: hidden;\n            }\n            thead tr {\n                position: absolute;\n                top: expression(this.offsetParent.scrollTop);\n            }\n            tbody {\n                height: auto;\n            }\n        &lt;/style&gt;\n    &lt;![endif]--&gt; \n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div &gt;\n        &lt;table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"&gt;\n            &lt;thead&gt;\n                &lt;tr&gt;\n                    &lt;th style=\"background: lightgreen;\"&gt;user&lt;/th&gt;\n                    &lt;th style=\"background: lightgreen;\"&gt;email&lt;/th&gt;\n                    &lt;th style=\"background: lightgreen;\"&gt;id&lt;/th&gt;\n                    &lt;th style=\"background: lightgreen;\"&gt;Y/N&lt;/th&gt;\n                &lt;/tr&gt;\n            &lt;/thead&gt;\n            &lt;tbody align=\"center\"&gt;\n                &lt;!--[if IE]&gt;\n                    &lt;tr&gt;\n                        &lt;td colspan=\"4\"&gt;on IE it's overridden by the header&lt;/td&gt;\n                    &lt;/tr&gt;\n                &lt;![endif]--&gt; \n                &lt;tr&gt;\n                    &lt;td&gt;user 1&lt;/td&gt;\n                    &lt;td&gt;user@user.com&lt;/td&gt;\n                    &lt;td&gt;1&lt;/td&gt;\n                    &lt;td&gt;Y&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr class=\"alt\"&gt;\n                    &lt;td&gt;user 2&lt;/td&gt;\n                    &lt;td&gt;user@user.com&lt;/td&gt;\n                    &lt;td&gt;2&lt;/td&gt;\n                    &lt;td&gt;N&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;user 3&lt;/td&gt;\n                    &lt;td&gt;user@user.com&lt;/td&gt;\n                    &lt;td&gt;3&lt;/td&gt;\n                    &lt;td&gt;Y&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr class=\"alt\"&gt;\n                    &lt;td&gt;user 4&lt;/td&gt;\n                    &lt;td&gt;user@user.com&lt;/td&gt;\n                    &lt;td&gt;4&lt;/td&gt;\n                    &lt;td&gt;N&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;user 5&lt;/td&gt;\n                    &lt;td&gt;user@user.com&lt;/td&gt;\n                    &lt;td&gt;5&lt;/td&gt;\n                    &lt;td&gt;Y&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr class=\"alt\"&gt;\n                    &lt;td&gt;user 6&lt;/td&gt;\n                    &lt;td&gt;user@user.com&lt;/td&gt;\n                    &lt;td&gt;6&lt;/td&gt;\n                    &lt;td&gt;N&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;user 7&lt;/td&gt;\n                    &lt;td&gt;user@user.com&lt;/td&gt;\n                    &lt;td&gt;7&lt;/td&gt;\n                    &lt;td&gt;Y&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr class=\"alt\"&gt;\n                    &lt;td&gt;user 8&lt;/td&gt;\n                    &lt;td&gt;user@user.com&lt;/td&gt;\n                    &lt;td&gt;8&lt;/td&gt;\n                    &lt;td&gt;N&lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/tbody&gt;\n        &lt;/table&gt;\n    &lt;/div&gt;\n&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n\n<p>I've changed the original code to make it clearer and also to put it working fine in IE and also FF.. </p>\n\n<p>Original code <a href=\"http://geekswithblogs.net/LSheu/Default.aspx\" rel=\"nofollow\">HERE</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's my alternative. It also uses different DIVs for the header, body and footer but synchronised for window resizing and with searching, scrolling, sorting, filtering and positioning:</p>\n\n<p><a href=\"http://hifi.goneill.co.nz/cd.php\" rel=\"nofollow\">My CD lists</a></p>\n\n<p>Click on the Jazz, Classical... buttons to see the tables. It's set up so that it's adequate even if JavaScript is turned off.</p>\n\n<p>Seems OK on IE, FF and WebKit (Chrome, Safari).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If its ok to use JavaScript here is my solution\nCreate a table set fixed width on all columns (pixels!) add the class Scrollify to the table and add this javascript + jquery 1.4.x set height in css or style!</p>\n\n<p>Tested in: Opera, Chrome, Safari, FF, IE5.5(<strong>Epic script fail</strong>), IE6, IE7, IE8, IE9</p>\n\n<pre><code>//Usage add Scrollify class to a table where all columns (header and body) have a fixed pixel width\n$(document).ready(function () {\n    $(\"table.Scrollify\").each(function (index, element) {\n        var header = $(element).children().children().first();\n        var headerHtml = header.html();\n        var width = $(element).outerWidth();\n        var height = parseInt($(element).css(\"height\")) - header.outerHeight();\n        $(element).height(\"auto\");\n        header.remove();\n        var html = \"&lt;table style=\\\"border-collapse: collapse;\\\" border=\\\"1\\\" rules=\\\"all\\\" cellspacing=\\\"0\\\"&gt;&lt;tr&gt;\" + headerHtml +\n                         \"&lt;/tr&gt;&lt;/table&gt;&lt;div style=\\\"overflow: auto;border:0;margin:0;padding:0;height:\" + height + \"px;width:\" + (parseInt(width) + scrollbarWidth()) + \"px;\\\"&gt;\" +\n                         $(element).parent().html() + \"&lt;/div&gt;\";\n\n        $(element).parent().html(html);\n    });\n});\n\n\n//Function source: http://www.fleegix.org/articles/2006-05-30-getting-the-scrollbar-width-in-pixels\n//License: Apache License, version 2\nfunction scrollbarWidth() {\n    var scr = null;\n    var inn = null;\n    var wNoScroll = 0;\n    var wScroll = 0;\n\n    // Outer scrolling div\n    scr = document.createElement('div');\n    scr.style.position = 'absolute';\n    scr.style.top = '-1000px';\n    scr.style.left = '-1000px';\n    scr.style.width = '100px';\n    scr.style.height = '50px';\n    // Start with no scrollbar\n    scr.style.overflow = 'hidden';\n\n    // Inner content div\n    inn = document.createElement('div');\n    inn.style.width = '100%';\n    inn.style.height = '200px';\n\n    // Put the inner div in the scrolling div\n    scr.appendChild(inn);\n    // Append the scrolling div to the doc\n    document.body.appendChild(scr);\n\n    // Width of the inner div sans scrollbar\n    wNoScroll = inn.offsetWidth;\n    // Add the scrollbar\n    scr.style.overflow = 'auto';\n    // Width of the inner div width scrollbar\n    wScroll = inn.offsetWidth;\n\n    // Remove the scrolling div from the doc\n    document.body.removeChild(\n        document.body.lastChild);\n\n    // Pixel width of the scroller\n    return (wNoScroll - wScroll);\n}\n</code></pre>\n\n<p>Edit: Fixed height.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I found <a href=\"http://datatables.net/examples/basic_init/scroll_y.html\" rel=\"nofollow\">DataTables</a> to be quite flexible. While its default version is based on jquery, there is also an <a href=\"http://l-lin.github.io/angular-datatables/#/withScroller\" rel=\"nofollow\">AngularJs plugin</a>.</p>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<h2>Bad news</h2>\n\n<p>Unfortunately there is no elegant way to handle scrollable table with fixed <code>thead</code>/<code>tfoot</code> \nbecause <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=135236#c36\" rel=\"nofollow\">HTML/CSS specifications are not very clear about that feature</a>.</p>\n\n<h2>Explanations</h2>\n\n<p>Although <a href=\"http://www.w3.org/TR/html401/struct/tables.html#idx-row_group\" rel=\"nofollow\">HTML 4.01 Specification</a> says <code>thead</code>/<code>tfoot</code>/<code>tbody</code> are used (introduced?) to scroll table body: </p>\n\n<blockquote>\n  <p>Table rows may be grouped [...] using the THEAD, TFOOT and TBODY elements [...]. \n  This division enables user agents to support scrolling of table bodies independently of the table head and foot.</p>\n</blockquote>\n\n<p>But the working scrollable table feature on FF 3.6 has been removed in FF 3.7 because considered as a bug because not compliant with HTML/CSS specifications. See <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=577308#c2\" rel=\"nofollow\">this</a> and <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=28800#c35\" rel=\"nofollow\">that</a> comments on FF bugs.</p>\n\n<h2>Mozilla Developer Network tip</h2>\n\n<p>Below is a simplified version of the <a href=\"https://developer.mozilla.org/en/Useful_CSS_tips/Tables#Fixed_header\" rel=\"nofollow\">MDN tips for scrollable table</a>:</p>\n\n<pre><code>&lt;style type=\"text/css\"&gt;\ntable {\n  border-spacing: 0;              /* workaround */\n}\ntbody {\n  height: 4em;                    /* define the height */\n  overflow-x: hidden;             /* esthetics */\n  overflow-y: auto;               /* allow scrolling cells */\n}\ntd {\n  border-left:   1px solid blue;  /* workaround */\n  border-bottom: 1px solid blue;  /* workaround */\n}\n&lt;/style&gt;\n\n&lt;table&gt;\n    &lt;thead&gt;&lt;tr&gt;&lt;th&gt;Header\n    &lt;tfoot&gt;&lt;tr&gt;&lt;th&gt;Footer\n    &lt;tbody&gt;\n        &lt;tr&gt;&lt;td&gt;Cell 1    &lt;tr&gt;&lt;td&gt;Cell 2\n        &lt;tr&gt;&lt;td&gt;Cell 3    &lt;tr&gt;&lt;td&gt;Cell 4\n        &lt;tr&gt;&lt;td&gt;Cell 5    &lt;tr&gt;&lt;td&gt;Cell 6\n        &lt;tr&gt;&lt;td&gt;Cell 7    &lt;tr&gt;&lt;td&gt;Cell 8\n        &lt;tr&gt;&lt;td&gt;Cell 9    &lt;tr&gt;&lt;td&gt;Cell 10\n        &lt;tr&gt;&lt;td&gt;Cell 11   &lt;tr&gt;&lt;td&gt;Cell 12\n        &lt;tr&gt;&lt;td&gt;Cell 13   &lt;tr&gt;&lt;td&gt;Cell 14\n    &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>However MDN also says <a href=\"https://developer.mozilla.org/en/Useful_CSS_tips/Tables#Fixed_header\" rel=\"nofollow\">this does not work any more on FF</a> :-( <br >\nI have also tested on IE8 => table is not scrollable either :-((</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Sorry I haven.t read all replies to your question.</p>\n\n<p>Yeah here the thing you want (I have done already)</p>\n\n<p>You can use two tables, with same class name for similar styling, one only with table head and another with your rows.\nNow put this table inside a div having fixed height with overflow-y:auto OR scroll.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I saw Sean Haddy's <a href=\"http://stackoverflow.com/questions/1019938/make-tbody-scrollable-in-webkit-browsers/11460752#11460752\">excellent solution to a similar question</a> and took the liberty of <a href=\"http://jsfiddle.net/jhfrench/eNP2N/\">making some edits</a>:</p>\n\n<ul>\n<li>Use classes instead of ID, so one jQuery script could be reused for\nmultiple tables on one page</li>\n<li>Added support for semantic HTML table elements like caption, thead, tfoot, and tbody</li>\n<li>Made scrollbar optional so it won't appear for tables that are \"shorter\" than the scrollable height</li>\n<li>Adjusted scrolling div's width to bring the scrollbar up to the right edge of the table</li>\n<li>Made concept accessible by\n<ul>\n<li>using aria-hidden=\"true\" on injected static table header</li>\n<li>and leaving original thead in place, just hidden with jQuery and set <code>aria-hidden=\"false\"</code></li>\n</ul></li>\n<li>Showed examples of multiple tables with different sizes</li>\n</ul>\n\n<p>Sean did the heavy lifting, though. Thanks to Matt Burland, too, for pointing out need to support tfoot.</p>\n\n<p>Please see for yourself at <a href=\"http://jsfiddle.net/jhfrench/eNP2N/\">http://jsfiddle.net/jhfrench/eNP2N/</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>The main problem I had with the suggestions above was being able to plug in tablesorter.js AND being able to float the headers for a table constrained to a specific max size.  I eventually stumbled across the plugin <a href=\"http://programmingdrunk.com/floatThead/\" rel=\"nofollow\">jQuery.floatThead</a> which provided the floating headers and allowed sorting to continue to work. </p>\n\n<p>It also has a nice comparison page showing itself vs <a href=\"http://programmingdrunk.com/floatThead/other-libs.htm\" rel=\"nofollow\">similar plugins</a>.  </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I do this with javascript (no library) and CSS - the table body <strong>scrolls with the page,</strong> and the table does not have to be fixed width or height, although each column must have a width. <strong>You can also keep sorting functionality.</strong></p>\n\n<p>Basically:</p>\n\n<ol>\n<li><p>In HTML, create container divs to position the table header row and the\ntable body, also create a \"mask\" div to hide the table body as it\nscrolls past the header  </p></li>\n<li><p>In CSS, convert the table parts to blocks</p></li>\n<li><p>In Javascript, get the table width and match the mask's width... get\nthe height of the page content... measure scroll position...\nmanipulate CSS to set the table header row position and the mask\nheight</p></li>\n</ol>\n\n<p>Here's the javascript and a <strong><a href=\"http://jsfiddle.net/deborah/Msvvr/\" rel=\"nofollow\">jsFiddle DEMO.</a></strong></p>\n\n<pre><code>// get table width and match the mask width\n\nfunction setMaskWidth() { \n  if (document.getElementById('mask') !==null) {\n    var tableWidth = document.getElementById('theTable').offsetWidth;\n\n    // match elements to the table width\n    document.getElementById('mask').style.width = tableWidth + \"px\";\n   }\n}\n\nfunction fixTop() {\n\n  // get height of page content \n  function getScrollY() {\n      var y = 0;\n      if( typeof ( window.pageYOffset ) == 'number' ) {\n        y = window.pageYOffset;\n      } else if ( document.body &amp;&amp; ( document.body.scrollTop) ) {\n        y = document.body.scrollTop;\n      } else if ( document.documentElement &amp;&amp; ( document.documentElement.scrollTop) ) {\n        y = document.documentElement.scrollTop;\n      }\n      return [y];\n  }  \n\n  var y = getScrollY();\n  var y = y[0];\n\n  if (document.getElementById('mask') !==null) {\n      document.getElementById('mask').style.height = y + \"px\" ;\n\n      if (document.all &amp;&amp; document.querySelector &amp;&amp; !document.addEventListener) {\n        document.styleSheets[1].rules[0].style.top = y + \"px\" ;\n      } else {\n        document.styleSheets[1].cssRules[0].style.top = y + \"px\" ;\n      }\n  }\n\n}\n\nwindow.onscroll = function() {\n  setMaskWidth();\n  fixTop();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>What you need is :</p>\n\n<p>1) <strong>have a table body of limited height</strong> as scroll occurs only when contents is bigger than the scrolling window. However <code>tbody</code> cannot be sized, and you have to display it as a <code>block</code> to do so:</p>\n\n<pre><code>tbody {\n   overflow-y: auto;\n   display: block;\n   max-height: 10em;    // For example\n}\n</code></pre>\n\n<p>2) <strong>Re-sync table header and table body columns widths</strong> as making the latter a <code>block</code> made it an unrelated element. The only way to do so is to simulate synchronization by <em>enforcing the same columns width to both</em>. </p>\n\n<p>However, since <code>tbody</code> itself is a <code>block</code> now, it can no longer behave like a <code>table</code>. Since you still need a <code>table</code> behavior to display you columns correctly, the solution is too ask for each of your rows to display as individual <code>table</code>s:</p>\n\n<pre><code>thead {         \n   display: table;  \n   width: 100%;     // Fill the containing table\n}\ntbody tr {\n   display: table;\n   width: 100%;     // Fill the containing table\n}\n</code></pre>\n\n<p>(Note that, using this technique, you won't be able to span across rows anymore).</p>\n\n<p>Once that done, you can enforce column widths to have the same width in both <code>thead</code> and <code>tbody</code>. You could not that:</p>\n\n<ul>\n<li>individually for each column (through specific CSS classes or inline styling), which is quite tedious to do for each table instance ;</li>\n<li>uniformly for all columns (through <code>th, td { width: 20%; }</code> if you have 5 columns for example), which is more practical (no need to set width for each table instance) but cannot work for any columns count</li>\n<li>uniformly for any columns count, through a fixed table layout.</li>\n</ul>\n\n<p>I prefer the last option, which requires adding:</p>\n\n<pre><code>thead {\n   table-layout: fixed;   // Same layout for all cells\n}\ntbody tr {\n   table-layout: fixed;   // Same layout for all cells\n}\nth, td {\n   width: auto;   // Same width for all cells, if table has fixed layout\n}    \n</code></pre>\n\n<p>See a demo <a href=\"http://jsfiddle.net/Javarome/DQJJW/1/\" rel=\"nofollow\">here</a>, forked from the answer to <a href=\"http://stackoverflow.com/questions/16984323/table-tbody-scroll-in-ie8\">this question</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This solution works in Chrome 35, Firefox 30 and IE 11 (not tested other versions)</p>\n\n<p>Its pure CSS: \n<a href=\"http://jsfiddle.net/ffabreti/d4sope1u/\" rel=\"nofollow\">http://jsfiddle.net/ffabreti/d4sope1u/</a></p>\n\n<p>Everything is set to display:block, table needs a height:</p>\n\n<pre><code>    table {\n        overflow: scroll;\n        display: block;    /*inline-block*/\n        height: 120px;\n    }\n    thead &gt; tr  {\n        position: absolute;\n        display: block;\n        padding: 0;\n        margin: 0;\n        top: 0;\n        background-color: gray;\n    }\n    tbody &gt; tr:nth-of-type(1) {\n        margin-top: 16px;\n    }\n    tbody tr {\n        display: block;\n    }\n\n    td, th {\n        width: 70px;\n        border-style:solid;\n        border-width:1px;\n        border-color:black;\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am writing a page where I need an html table to maintain a set size. I need the headers at the top of the table to stay there at all times but I also need the body of the table to scroll no matter how many rows are added to the table. Think a mini version of excel. This seems like a simple task but almost every solution I have found on the web has some drawback. Does someone have a good solution?</p>\n",
            "last_activity_date": 1417491195,
            "question_id": 130564,
            "score": 107,
            "tags": [
                "javascript",
                "html",
                "css",
                "html-table"
            ],
            "title": "I need my html table&#39;s body to scroll and its head to stay put"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>The user-agents on iOS devices say iPhone or iPad in them.  I just filter based on those keywords.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I am not a fan of User Agent sniffing, but here is how you would do it:</p>\n\n<pre><code>var iOS = ( navigator.userAgent.match(/(iPad|iPhone|iPod)/g) ? true : false );\n</code></pre>\n\n<p><em>You can also use the <code>.test()</code> method as stated by <a href=\"http://stackoverflow.com/users/262125/landonschropp\">Landon</a></em></p>\n\n<pre><code>var iOS = /(iPad|iPhone|iPod)/g.test( navigator.userAgent );\n</code></pre>\n\n<p>( <code>iOS</code> will be either <code>true</code> or <code>false</code>. )</p>\n\n<hr>\n\n<p>Another method without using Regular Expressions:</p>\n\n<pre><code>var iOS = false,\n    p = navigator.platform;\n\nif( p === 'iPad' || p === 'iPhone' || p === 'iPod' ){\n    iOS = true;\n}\n</code></pre>\n\n<hr>\n\n<p>Optimized to easily add more devices:</p>\n\n<pre><code>var i = 0,\n    iOS = false,\n    iDevice = ['iPad', 'iPhone', 'iPod'];\n\nfor ( ; i &lt; iDevice.length ; i++ ) {\n    if( navigator.platform === iDevice[i] ){ iOS = true; break; }\n}\n</code></pre>\n\n<hr>\n\n<p>The most common way of detecting the iOS version is by <a href=\"http://stackoverflow.com/a/11129615/1029952\">parsing it from the User Agent string</a>.</p>\n\n<p>Another way is feature <strike>detection</strike> inference (<a href=\"http://stackoverflow.com/questions/9038625/detect-if-device-is-ios/9039885#comment12752366_9039885\">*</a>);<br>\nWe know that <a href=\"http://html5doctor.com/history-api/#browser-support\"><code>history API</code> was introduced in <em>iOS4+</em></a>, and that <code>matchMedia API</code> in <em>iOS5+</em>,<br>\nand so on..</p>\n\n<p><em>Note: The following code is not reliable and will break if any of these HTML5 features is deprecated in a newer iOS version. You have been warned!</em></p>\n\n<pre><code>var iOS = ( navigator.userAgent.match(/(iPad|iPhone|iPod)/g) ? true : false ),\n    iOSversion = false;\n\nif( iOS ){\n    iOSversion = ( !!window.history &amp;&amp; !!window.history.pushState ? '4+' : '4-' );\n    if( !!window.matchMedia ){ iOSversion = '5+'; }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 210
                },
                {
                    "body": "<p>In order to detect the iOS version, one has to destructure the user agent with a Javascript code like this:</p>\n\n<pre><code> var res = navigator.userAgent.match(/; CPU.*OS (\\d_\\d)/);\n    if(res) {\n        var strVer = res[res.length-1];\n        strVer = strVer.replace(\"_\", \".\");\n        version = strVer * 1;\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is this custom Modernizr tests: <a href=\"https://gist.github.com/855078\">https://gist.github.com/855078</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I wrote this a couple years ago but i believe it still works:</p>\n\n<pre><code>if(navigator.vendor != null &amp;&amp; navigator.vendor.match(/Apple Computer, Inc./) &amp;&amp; navigator.userAgent.match(/iPhone/i) || (navigator.userAgent.match(/iPod/i))) \n\n    {\n\n        alert(\"Ipod or Iphone\");\n\n    }\n\nelse if (navigator.vendor != null &amp;&amp; navigator.vendor.match(/Apple Computer, Inc./) &amp;&amp; navigator.userAgent.match(/iPad/i))  \n\n    {\n\n        alert(\"Ipad\");\n\n    }\n\nelse if (navigator.vendor != null &amp;&amp; navigator.vendor.match(/Apple Computer, Inc./) &amp;&amp; navigator.userAgent.indexOf('Safari') != -1)\n\n    {\n\n        alert(\"Safari\");\n\n    }\n\nelse if (navigator.vendor == null || navigator.vendor != null)\n\n    {\n\n        alert(\"Not Apple Based Browser\");\n\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><code>var isiOSSafari = (navigator.userAgent.match(/like Mac OS X/i)) ? true: false;</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you are using <a href=\"http://modernizr.com/docs/#addtest\" rel=\"nofollow\">Modernizr</a>, you can add a custom test for it.</p>\n\n<p>It doesn't matter which detection mode you decide to use (userAgent, navigator.vendor or navigator.platform), you can always wrap it up for a easier use later.</p>\n\n<pre><code>//Add Modernizr test\nModernizr.addTest('isiOS', function(){\n    return navigator.userAgent.match(/(iPad|iPhone|iPod)/g) ? true : false\n});\n\n//usage\nif (Modernizr.isiOS) {\n    //do stuff specific for iOS\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This sets the variable <code>_iOSDevice</code> to <strong>true</strong> or <strong>false</strong></p>\n\n<pre><code>_iOSDevice = !!navigator.platform.match(/iPhone|iPod|iPad/);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A simplified, easy to extend version.</p>\n\n<pre><code>var iOS = ['iPad', 'iPhone', 'iPod'].indexOf(navigator.platform) &gt;= 0;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Wherever possible when adding Modernizr tests you should add a test for a feature, rather than a device or operating system. There's nothing wrong with adding ten tests all testing for iPhone if that's what it takes. Some things just can't be feature detected.</p>\n\n<pre><code>    Modernizr.addTest('inpagevideo', function ()\n    {\n        return navigator.userAgent.match(/(iPhone|iPod)/g) ? false : true;\n    });\n</code></pre>\n\n<p>For instance on the iPhone (not the iPad) video cannot be played inline on a webpage, it opens up full screen. So I created a test 'no-inpage-video'</p>\n\n<p>You can then use this in css (Modernizr adds a class <code>.no-inpagevideo</code> to the <code>&lt;html&gt;</code> tag if the test fails)</p>\n\n<pre><code>.no-inpagevideo video.product-video \n{\n     display: none;\n}\n</code></pre>\n\n<p>This will hide the video on iPhone (what I'm actually doing in this case is showing an alternative image with an onclick to play the video - I just don't want the default video player and play button to show).</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I'm wondering if it's possible to detect whether a browser is running on iOS, similar to how you can feature detect with Modernizr (although this is obviously device detection rather than feature detection).</p>\n\n<p>Normally I would favour feature detection instead, but I need to find out whether a device is iOS because of the way they handle videos as per this question <a href=\"http://stackoverflow.com/questions/8972726/youtube-api-not-working-with-ipad-iphone-non-flash-device\">YouTube API not working with iPad / iPhone / non-Flash device</a></p>\n",
            "last_activity_date": 1421805376,
            "question_id": 9038625,
            "score": 93,
            "tags": [
                "javascript",
                "ios",
                "browser",
                "feature-detection"
            ],
            "title": "Detect if device is iOS"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p><code>GMap2::tilesloaded()</code> would be the event you're looking for.</p>\n\n<p>See <a href=\"http://code.google.com/apis/maps/documentation/reference.html#GMap2.tilesloaded\" rel=\"nofollow\">GMap2.tilesloaded</a> for references.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you're using the Maps API v3, this has changed.</p>\n\n<p>In version 3, you essentially want to set up a listener for the <code>bounds_changed</code> event, which will trigger upon map load. Once that has triggered, remove the listener as you don't want to be informed every time the viewport bounds change.</p>\n\n<p>This may change in the future as the V3 API is evolving :-)</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>You could check the <code>GMap2.isLoaded()</code> method every <code>n</code> milliseconds to see if the map and all its tiles were loaded (<code>window.setTimeout()</code> or <code>window.setInterval()</code> are your friends).</p>\n\n<p>While this won't give you the exact event of the load completion, it should be good enough to trigger your Javascript.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Where the variable <code>map</code> is an object of type GMap2:</p>\n\n<pre><code>    GEvent.addListener(map, \"tilesloaded\", function() {\n      console.log(\"Map is fully loaded\");\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This was bothering me for a while with GMaps v3.</p>\n\n<p>I found a way to do it like this:</p>\n\n<pre><code>google.maps.event.addListenerOnce(map, 'idle', function(){\n    // do something only the first time the map is loaded\n});\n</code></pre>\n\n<p>The \"idle\" event is triggered when the map goes to idle state - everything loaded (or failed to load). I found it to be more reliable then tilesloaded/bounds_changed and using <code>addListenerOnce</code> method the code in the closure is executed the first time \"idle\" is fired and then the event is detached.</p>\n",
                    "is_accepted": false,
                    "score": 255
                },
                {
                    "body": "<p>I'm creating html5 mobile apps and I noticed that the <code>idle</code>, <code>bounds_changed</code> and <code>tilesloaded</code> events fire when the map object is created and rendered (even if it is not visible).</p>\n\n<p>To make my map run code when it is shown for the first time I did the following:</p>\n\n<pre><code>google.maps.event.addListenerOnce(map, 'tilesloaded', function(){\n    //this part runs when the mapobject is created and rendered\n    google.maps.event.addListenerOnce(map, 'tilesloaded', function(){\n        //this part runs when the mapobject shown for the first time\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>If you're using <a href=\"http://googlewebcomponents.github.io/google-map/components/google-map/\" rel=\"nofollow\">web components</a>, then they have this as an example:</p>\n\n<pre><code>map.addEventListener('google-map-ready', function(e) {\n   alert('Map loaded!');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I\u2019m embedding Google Maps into my web site. Once Google Maps is loaded, I need to kick off a few JavaScript processes.</p>\n\n<p><strong>Is there a way to auto-detect when Google Maps has fully loaded, including tile downloads and all?</strong></p>\n\n<p>A <code>tilesloaded()</code> method exists that is supposed to accomplish exactly this task but <a href=\"https://www.google.com/search?hl=en&amp;q=GEvent.addListener%28map,+%22tilesloaded%22,+function%28%29+&#123;&amp;btnG=Google+Search&amp;aq=f&amp;oq=\">it does not work</a>.</p>\n",
            "last_activity_date": 1407517514,
            "question_id": 832692,
            "score": 125,
            "tags": [
                "javascript",
                "html",
                "google-maps"
            ],
            "title": "How can I check whether Google Maps is fully loaded?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The only way to add any book marks in MobileSafari (including ones on the home screen) is with the builtin UI, and that Apples does not provide anyway to do this from scripts within a page. In fact, I am pretty sure there is no mechanism for doing this on the desktop version of Safari either.</p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>There is an open source Javascript library that offers something related :\n<a href=\"http://code.google.com/p/mobile-bookmark-bubble/\">mobile-bookmark-bubble</a></p>\n\n<blockquote>\n  <p>The Mobile Bookmark Bubble is a JavaScript library that adds a promo bubble to the bottom of your mobile web application, inviting users to bookmark the app to their device's home screen. The library uses HTML5 local storage to track whether the promo has been displayed already, to avoid constantly nagging users.</p>\n  \n  <p>The current implementation of this library specifically targets Mobile Safari, the web browser used on iPhone and iPad devices.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I had the same issue and there is (rightly, probably) no way to add it programatically, but came across this great little snippet which prompts the user to do it and even points to the right spot.  Works a treat.</p>\n\n<p><a href=\"http://code.google.com/p/mobile-bookmark-bubble/\">http://code.google.com/p/mobile-bookmark-bubble/</a></p>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<p>Another script that triggers an 'Add To Home Screen' popup: <a href=\"http://cubiq.org/add-to-home-screen\">http://cubiq.org/add-to-home-screen</a></p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>This is also another good Home Screen script that support iphone/ipad, Mobile Safari, Android, Blackberry touch smartphones and Playbook .</p>\n\n<p><a href=\"https://github.com/h5bp/mobile-boilerplate/wiki/Mobile-Bookmark-Bubble\" rel=\"nofollow\">https://github.com/h5bp/mobile-boilerplate/wiki/Mobile-Bookmark-Bubble</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is it possible to use Javascript to emulate the Add to Home Screen option in Mobile Safari's bookmark menu?</p>\n\n<p>Something similar to IE's <code>window.external.AddFavorite(location.href, document.title);</code> possibly?</p>\n",
            "last_activity_date": 1355216271,
            "question_id": 1141979,
            "score": 66,
            "tags": [
                "javascript",
                "iphone",
                "mobile-safari",
                "bookmarks",
                "homescreen"
            ],
            "title": "Javascript for &quot;Add to Home Screen&quot; on iPhone?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>try </p>\n\n<pre><code>$locationProvider.html5Mode(true)\n</code></pre>\n\n<p>More info at \n<a href=\"http://docs.angularjs.org/api/ng.%24locationProvider\">$locationProvider</a>\n<br><a href=\"http://docs.angularjs.org/guide/dev_guide.services.%24location\">Using $location</a></p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>In fact you need the # (hashtag) for non HTML5 browsers.</p>\n\n<p>Otherwise they will just do an HTTP call to the server at the mentioned href.\nThe # is an old browser shortcircuit which doesn't fire the request, which allows many js frameworks to build their own clientside rerouting on top of that.</p>\n\n<p>You can use <code>$locationProvider.html5Mode(true)</code> to tell angular to use HTML5 strategy if available.</p>\n\n<p>Here the list of browser that support HTML5 strategy: <a href=\"http://caniuse.com/#feat=history\" rel=\"nofollow\">http://caniuse.com/#feat=history</a></p>\n",
                    "is_accepted": true,
                    "score": 93
                },
                {
                    "body": "<p>If you enabled html5mode as others have said, and create an <code>.htaccess</code> file with the following contents (adjust for your needs):</p>\n\n<pre><code>RewriteEngine   On\nRewriteBase     /\nRewriteCond     %{REQUEST_URI} !^(/index\\.php|/img|/js|/css|/robots\\.txt|/favicon\\.ico)\nRewriteCond     %{REQUEST_FILENAME} !-f\nRewriteCond     %{REQUEST_FILENAME} !-d\nRewriteRule     .               /index.html              [L]\n</code></pre>\n\n<p>Users will be directed to the your app when they enter a proper route, and your app will read the route and bring them to the correct \"page\" within it.</p>\n\n<p>EDIT: Just make sure not to have any file or directory names conflict with your routes.</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>If you are wanting to configure this locally on OS X 10.8 serving Angular with Apache then you might find the following in your .htaccess file helps:</p>\n\n<pre><code>&lt;IfModule mod_rewrite.c&gt;\n    Options +FollowSymlinks\n    RewriteEngine On\n    RewriteBase /~yourusername/appname/public/\n    RewriteCond %{REQUEST_FILENAME} !-f\n    RewriteCond %{REQUEST_FILENAME} !-d\n    RewriteCond %{REQUEST_URI} !.*\\.(css|js|html|png|jpg|jpeg|gif|txt)\n    RewriteRule (.*) index.html [L]\n&lt;/IfModule&gt;\n</code></pre>\n\n<p>Options +FollowSymlinks if not set may give you a forbidden error in the logs like so:</p>\n\n<pre><code>Options FollowSymLinks or SymLinksIfOwnerMatch is off which implies that RewriteRule directive is forbidden\n</code></pre>\n\n<p>Rewrite base is required otherwise requests will be resolved to your server root which locally by default is not your project directory unless you have specifically configured your vhosts, so you need to set the path so that the request finds your project root directory. For example on my machine I have a /Users/me/Sites directory where I keep all my projects. Like the old OS X set up.</p>\n\n<p>The next two lines effectively say if the path is not a directory or a file, so you need to make sure you have no files or directories the same as your app route paths.</p>\n\n<p>The next condition says if request not ending with file extensions specified so add what you need there</p>\n\n<p>And the [L] last one is saying to serve the index.html file - your app for all other requests.</p>\n\n<p>If you still have problems then check the apache log, it will probably give you useful hints:</p>\n\n<pre><code>/private/var/log/apache2/error_log\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm learning AngularJS and there's one thing that really annoys me.</p>\n\n<p>I use <code>$routeProvider</code> to declare routing rules for my application:</p>\n\n<pre><code>$routeProvider.when('/test', {\n  controller: TestCtrl,\n  templateUrl: 'views/test.html'\n})\n.otherwise({ redirectTo: '/test' });\n</code></pre>\n\n<p>but when I navigate to my app in browser I see <code>app/#/test</code> instead of <code>app/test</code>.</p>\n\n<p>So my question is why AngularJS adds this hash <code>#</code> to urls? Is there any possibility to avoid it?</p>\n",
            "last_activity_date": 1425813797,
            "question_id": 14319967,
            "score": 74,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "AngularJS routing without the hash &#39;#&#39;"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>From AngularJS documentation:</p>\n\n<blockquote>\n  <p>params \u2013 {Object.} \u2013 Map of strings or objects which\n  will be turned to ?key1=value1&amp;key2=value2 after the url. <strong>If the\n  value is not a string</strong>, it will be JSONified.</p>\n</blockquote>\n\n<p>So, provide string as parameters. If you don't want that, then use transformations. Again, from the documentation:</p>\n\n<blockquote>\n  <p>To override these transformation locally, specify transform functions\n  as transformRequest and/or transformResponse properties of the config\n  object. To globally override the default transforms, override the\n  $httpProvider.defaults.transformRequest and\n  $httpProvider.defaults.transformResponse properties of the\n  $httpProvider.</p>\n</blockquote>\n\n<p>Refer to <a href=\"http://docs.angularjs.org/api/ng.%24http\">documentation</a> for more details.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I think the <code>params</code> config parameter won't work here since it adds the string to the url instead of the body but to add to what Infeligo suggested here is an example of the global override of a default transform (using jQuery <a href=\"http://api.jquery.com/jQuery.param/\">param</a> as an example to convert the data to param string).</p>\n\n<p><strong>Set up global transformRequest function:</strong></p>\n\n<pre><code>var app = angular.module('myApp');\n\napp.config(function ($httpProvider) {\n    $httpProvider.defaults.transformRequest = function(data){\n        if (data === undefined) {\n            return data;\n        }\n        return $.param(data);\n    }\n});\n</code></pre>\n\n<p>That way all calls to $http.post will automatically transform the body to the same param format used by the jQuery <code>$.post</code> call.</p>\n\n<p>Note you may also want to set the Content-Type header per call or globally like this:</p>\n\n<pre><code>$httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n</code></pre>\n\n<p><strong>Sample non-global transformRequest per call:</strong></p>\n\n<pre><code>    var transform = function(data){\n        return $.param(data);\n    }\n\n    $http.post(\"/foo/bar\", requestData, {\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'},\n        transformRequest: transform\n    }).success(function(responseData) {\n        //do stuff with response\n    });\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 73
                },
                {
                    "body": "<p>Quick adjustment - for those of you having trouble with the global configuration of the transformRequest function, here's the snippet i'm using to get rid of the <code>Cannot read property 'jquery' of undefined</code> error:</p>\n\n<pre><code>$httpProvider.defaults.transformRequest = function(data) {\n        return data != undefined ? $.param(data) : null;\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use jQuery's <code>$.param</code> function to serialize the JSON data in requestData.</p>\n\n<p>In short, using similar code as yours:</p>\n\n<pre><code>$http.post(\"/foo/bar\",\n$.param(requestData),\n{\n    headers:\n    {\n        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n    }\n}\n).success(\n    function(responseData) {\n        //do stuff with response\n    }\n});\n</code></pre>\n\n<p>For using this, you have to include jQuery in your page along with AngularJS.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I have problems as well with setting custom http authentication because $resource cache the request.</p>\n\n<p>To make it work you have to overwrite the existing headers by doing this </p>\n\n<pre><code>                    var transformRequest = function(data, headersGetter){\n                       var headers = headersGetter();\n                       headers['Authorization'] = 'WSSE profile=\"UsernameToken\"';\n                       headers['X-WSSE'] = 'UsernameToken ' + nonce\n                       headers['Content-Type'] = 'application/json';\n                    };\n\n                    return $resource(\n                        url,\n                        {\n                        },\n                        {\n                            query: {\n                                method: 'POST',\n                                url: apiURL + '/profile',\n                                transformRequest: transformRequest,\n                                params: {userId: '@userId'}\n                            },\n\n                        }\n                    );\n</code></pre>\n\n<p>I hope i was able to help someone. It took me 3 days to figure this one out.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This might be a bit of a hack, but I avoided the issue and converted the json into PHP's POST array on the server side:</p>\n\n<pre><code>$_POST = json_decode(file_get_contents('php://input'), true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Modify the default headers:</p>\n\n<pre><code>$http.defaults.headers.post[\"Content-Type\"] = \"application/x-www-form-urlencoded;charset=utf-8\";\n</code></pre>\n\n<p>Then use JQuery's <code>$.param</code> method:</p>\n\n<pre><code>var payload = $.param({key: value});\n$http.post(targetURL, payload);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can also solve this problem without changing code in server, changing header in <code>$http.post</code> call and use <code>$_POST</code> the regular way. Explained here: <a href=\"http://victorblog.com/2012/12/20/make-angularjs-http-service-behave-like-jquery-ajax/\" rel=\"nofollow\">http://victorblog.com/2012/12/20/make-angularjs-http-service-behave-like-jquery-ajax/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have some old code that is making an AJAX POST request through <a href=\"http://api.jquery.com/jQuery.post/\">jQuery's post method</a> and looks something like this:</p>\n\n<pre><code>$.post(\"/foo/bar\", requestData,\n    function(responseData)\n    {\n        //do stuff with response\n    }\n</code></pre>\n\n<p><code>requestData</code> is just a javascript object with some basic string properties.</p>\n\n<p>I'm in the process of moving our stuff over to use Angular, and I want to replace this call with $http.post. I came up with the following:</p>\n\n<pre><code>$http.post(\"/foo/bar\", requestData).success(\n    function(responseData) {\n        //do stuff with response\n    }\n});\n</code></pre>\n\n<p>When I did this, I got a 500 error response from the server. Using Firebug, I found that this sent the request body like this:</p>\n\n<pre><code>{\"param1\":\"value1\",\"param2\":\"value2\",\"param3\":\"value3\"}\n</code></pre>\n\n<p>The successful jQuery <code>$.post</code> sends the body like this:</p>\n\n<pre><code>param1=value1&amp;param2=value2&amp;param3=value3\n</code></pre>\n\n<p>The endpoint I am hitting is expecting request parameters and not JSON. So, my question is is there anyway to tell <code>$http.post</code> to send up the javascript object as request parameters instead of JSON? Yes, I know I could construct the string myself from the object, but I want to know if Angular provides anything for this out of the box.</p>\n",
            "last_activity_date": 1423703839,
            "question_id": 12190166,
            "score": 50,
            "tags": [
                "javascript",
                "jquery",
                "post",
                "angularjs"
            ],
            "title": "AngularJS - Any way for $http.post to send request parameters instead of JSON?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>It may be bad practice, but have you considered including it inline?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think this is what Eric was saying, but you can load Javascript from the URL directly.</p>\n\n<pre><code>javascript:var%20s=document.createElement('script');s.setAttribute('src','http://YOURJAVASCRIPTFILE.js');document.getElementsByTagName('body')[0].appendChild(s);void(s);\n</code></pre>\n\n<p>Im assuming you want your extension to load JQuery so you can manipulate the page elements easily? My company's labs has something that does this using Javascript directly here:  <a href=\"http://parkerfox.co.uk/labs/pixelperfect\" rel=\"nofollow\">http://parkerfox.co.uk/labs/pixelperfect</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I use the following <code>example.xul</code>:</p>\n\n<pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;overlay id=\"example\" xmlns=\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\"&gt;\n&lt;head&gt;&lt;/head&gt;\n&lt;script type=\"application/x-javascript\" src=\"jquery.js\"&gt;&lt;/script&gt;\n&lt;script type=\"application/x-javascript\" src=\"example.js\"&gt;&lt;/script&gt;\n&lt;/overlay&gt;\n</code></pre>\n\n<p>And here is an <code>example.js</code></p>\n\n<pre><code>(function() {\n    jQuery.noConflict();\n    $ = function(selector,context) { \n        return new jQuery.fn.init(selector,context||example.doc); \n    };\n    $.fn = $.prototype = jQuery.fn;\n\n    example = new function(){};\n    example.log = function() { \n        Firebug.Console.logFormatted(arguments,null,\"log\"); \n    };\n    example.run = function(doc,aEvent) {\n        // Check for website\n        if (!doc.location.href.match(/^http:\\/\\/(.*\\.)?stackoverflow\\.com(\\/.*)?$/i))  \n            return;\n\n        // Check if already loaded\n        if (doc.getElementById(\"plugin-example\")) return;\n\n        // Setup\n        this.win = aEvent.target.defaultView.wrappedJSObject;\n        this.doc = doc;\n\n        // Hello World\n        this.main = main = $('&lt;div id=\"plugin-example\"&gt;').appendTo(doc.body).html('Example Loaded!');\n        main.css({ \n            background:'#FFF',color:'#000',position:'absolute',top:0,left:0,padding:8\n        });\n        main.html(main.html() + ' - jQuery &lt;b&gt;' + $.fn.jquery + '&lt;/b&gt;');\n    };\n\n    // Bind Plugin\n    var delay = function(aEvent) { \n        var doc = aEvent.originalTarget; setTimeout(function() { \n            example.run(doc,aEvent); \n        }, 1); \n     };\n    var load = function() { \n        gBrowser.addEventListener(\"DOMContentLoaded\", delay, true); \n    };\n    window.addEventListener(\"pageshow\", load, false);\n\n})();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>There is an excellent article in the mozillaZine forums that describes this step-by-step: <a href=\"http://forums.mozillazine.org/viewtopic.php?f=19&amp;t=2105087\" rel=\"nofollow\">http://forums.mozillazine.org/viewtopic.php?f=19&amp;t=2105087</a></p>\n\n<p>I haven't tried it yet, though so I hesitate to duplicate the info here.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The following solution makes it possibile to use jQuery in contentScriptFile \n(Targetting 1.5 Addon-sdk)</p>\n\n<p>In your main.js: </p>\n\n<pre><code>exports.main = function() {\n    var pageMod = require(\"page-mod\");\n\n    pageMod.PageMod({\n          include: \"*\",\n          contentScriptWhen: 'end',\n          contentScriptFile: [data.url(\"jquery-1.7.1-min.js\") , data.url(\"notifier.js\") ,   data.url(\"message.js\")],\n          onAttach: function onAttach(worker) {\n             //show the message\n             worker.postMessage(\"Hello World\");\n          }\n    });\n\n};\n</code></pre>\n\n<p>In your message.js : </p>\n\n<pre><code>self.on(\"message\", function(message){\n    if(message !== \"undefined\"){\n       Notifier.info(message); \n    }\n});\n</code></pre>\n\n<p><em><strong>Some pitfalls you need to watchs out for:</em></strong></p>\n\n<ul>\n<li>The order of the contentScriptFile array. if message.js would be placed first: jQuery won't be reconized.</li>\n<li>Do not place a http:// url in the <a href=\"https://addons.mozilla.org/en-US/developers/docs/sdk/latest/packages/addon-kit/docs/self.html#data\">data.url</a> (this does not work)!</li>\n<li>All your javascript files should be in the data folder. (only main.js should be in lib folder)</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Instead of </p>\n\n<pre><code>$('img',content.document);\n</code></pre>\n\n<p>you can try </p>\n\n<pre><code>$('img',window.content.document);\n</code></pre>\n\n<p>In my case it works.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Turns out the current top-answer by @sunsean <a href=\"http://stackoverflow.com/q/23771042/484441\">does not work as expected when it comes to handling multiple loads</a>. The function should properly close over the document and avoid global state.</p>\n\n<p>Also, you have to call <code>jQuery.noConflict(true)</code> to really avoid conflicts with other add-ons!</p>\n\n<p>This is who I would write it (then again, I would avoid jquery (in add-ons) like the plague...).\nFirst the overlay XUL</p>\n\n<pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;overlay id=\"test-addon-overlay\" xmlns=\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\"&gt;\n  &lt;script type=\"text/javascript\" src=\"jquery.js\"/&gt;\n  &lt;script type=\"text/javascript\" src=\"overlay.js\"/&gt;\n&lt;/overlay&gt;\n</code></pre>\n\n<p>And then the overlay script:</p>\n\n<pre><code>// Use strict mode in particular to avoid implicitly var declarations\n(function() {\n  \"use strict\";\n\n  // Main runner function for each content window.\n  // Similar to SDK page-mod, but without the security boundaries.\n  function run(window, document) {\n    // jquery setup. per http://stackoverflow.com/a/496970/484441\n    $ = function(selector,context) {\n      return new jq.fn.init(selector,context || document); \n    };\n    $.fn = $.prototype = jq.fn;\n\n    if (document.getElementById(\"my-example-addon-container\"))  {\n      return;\n    }\n    let main = $('&lt;div id=\"my-example-addon-container\"&gt;');\n    main.appendTo(document.body).text('Example Loaded!');\n    main.click(function() { //&lt;--- added this function\n      main.text(document.location.href);\n    });\n    main.css({\n      background:'#FFF',color:'#000',position:'absolute',top:0,left:0,padding:8\n    });\n  };\n\n  const log = Components.utils.reportError.bind(Components.utils);\n\n  // Do not conflict with other add-ons using jquery.\n  const jq = jQuery.noConflict(true);\n\n  gBrowser.addEventListener(\"DOMContentLoaded\", function load(evt) {\n    try {\n      // Call run with this == window ;)\n      let doc = evt.target.ownerDocument || evt.target;\n      if (!doc.location.href.startsWith(\"http\")) {\n        // Do not even attempt to interact with non-http(s)? sites.\n        return;\n      }\n      run.call(doc.defaultView, doc.defaultView, doc);\n    }\n    catch (ex) {\n      log(ex);\n    }\n  }, true);\n})();\n</code></pre>\n\n<p>Here is <a href=\"https://gist.github.com/nmaier/d1a259435af47f6a159d\" rel=\"nofollow\">a complete add-on as a gist</a>. Just drop in a copy of jquery and it should be good to go.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I want to use jQuery inside a firefox extension,\nI imported the library in the xul file like this:</p>\n\n<pre><code>&lt;script type=\"application/x-javascript\" src=\"chrome://myExtension/content/jquery.js\"&gt; &lt;/script&gt;\n</code></pre>\n\n<p>but the $() function is not recognized in the xul file neither do the jQuery().</p>\n\n<p>I googled about the problem and found some solutions but no one did work with me:\n<a href=\"http://gluei.com/blog/view/using-jquery-inside-your-firefox-extension\">http://gluei.com/blog/view/using-jquery-inside-your-firefox-extension</a>\n<a href=\"http://forums.mozillazine.org/viewtopic.php?f=19&amp;t=989465\">http://forums.mozillazine.org/viewtopic.php?f=19&amp;t=989465</a></p>\n\n<p>I've also tried to pass the 'content.document' object(which refrences the 'document' object) as the context parameter to the jQuery function like this:</p>\n\n<pre><code>$('img',content.document);\n</code></pre>\n\n<p>but still not working,\ndoes any one came across this problem before?</p>\n",
            "last_activity_date": 1400657641,
            "question_id": 491490,
            "score": 50,
            "tags": [
                "javascript",
                "jquery",
                "firefox",
                "firefox-addon"
            ],
            "title": "How to use jQuery in Firefox Extension"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>If you want cross-browser, you want <a href=\"http://docs.jquery.com/Utilities/jQuery.isArray\" rel=\"nofollow\">jQuery.isArray</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>jQuery implements an isArray function, which suggests the best way to do this is </p>\n\n<pre><code>function isArray( obj ) {\n\treturn toString.call(obj) === \"[object Array]\";\n}\n</code></pre>\n\n<p>(snippet taken from jQuery v1.3.2 - slightly adjusted to make sense out of context)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>One of the best researched and discussed versions of this function can be found on the <a href=\"http://phpjs.org/\" rel=\"nofollow\">PHPJS site</a>.  You can link to packages or you can go to the <a href=\"http://phpjs.org/functions/is%5Farray:437\" rel=\"nofollow\">function directly</a>.  I highly recommend the site for well constructed equivalents of PHP functions in JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Stealing from the guru John Resig and jquery:</p>\n\n<pre><code>function isArray(array) {\n    if ( toString.call(array) === \"[object Array]\") {\n        return true;\n    } else if ( typeof array.length === \"number\" ) {\n        return true;\n    }\n    return false;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>What are you going to do with the value once you decide it is an array?</p>\n\n<p>For example, if you intend to enumerate the contained values if it <em>looks</em> like an array OR if it is an object being used as a hash-table, then the following code gets what you want (this code stops when the closure function returns anything other than \"undefined\". Note that it does NOT iterate over COM containers or enumerations; that's left as an exercise for the reader):</p>\n\n<pre><code>function iteratei( o, closure )\n{\n    if( o != null &amp;&amp; o.hasOwnProperty )\n    {\n        for( var ix in seq )\n        {\n            var ret = closure.call( this, ix, o[ix] );\n            if( undefined !== ret )\n                return ret;\n        }\n    }\n    return undefined;\n}\n</code></pre>\n\n<p>(Note: \"o != null\" tests for both null &amp; undefined)</p>\n\n<p>Examples of use:</p>\n\n<pre><code>// Find first element who's value equals \"what\" in an array\nvar b = iteratei( [\"who\", \"what\", \"when\" \"where\"],\n    function( ix, v )\n    {\n        return v == \"what\" ? true : undefined;\n    });\n\n// Iterate over only this objects' properties, not the prototypes'\nfunction iterateiOwnProperties( o, closure )\n{\n    return iteratei( o, function(ix,v)\n    {\n        if( o.hasOwnProperty(ix) )\n        {\n            return closure.call( this, ix, o[ix] );\n        }\n    })\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I suppose <code>Object.constructor</code> is not cross-browser, so I\u2019d try:</p>\n\n<pre><code>function is_array($obj) {\n    // if it\u2019s not an object, it\u2019s not an array either!\n    if (typeof $obj != 'object') return false;\n    // create a random key. avoid collisions\n    do {\n        var randomKey = 'k' + Math.random();\n    } while ((randomKey in $obj) or (randomKey in Array.prototype));\n\n    // ... and a random value\n    var randomValue = 'v' + Math.random();\n\n    // attach this key/value pair to *every* array \n    Array.prototype[randomKey] = randomValue;\n\n    // check the existence of random key and value\n    var isArray = $obj[randomKey] == randomValue;\n\n    // remove the mess\n    delete Array.prototype[randomKey];\n\n    return isArray;\n}\n</code></pre>\n\n<p>There may be, AFAIR, some issues in cross-window coding. Not sure how it works, but I\u2019ve read somewhere, that <code>document.someIframe.contentWindow.Array.prototype</code> may be different than <code>Array.prototype</code>. Please comment if someone is familiar with it.</p>\n\n<p>OTOH, Kevin posted a nice looking answer. It will fail if you have object of class <code>SomeArrayObject</code> or similar and it\u2019s not based on any standard I think (so this behavior could change in the future) its quite clean and simple. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>On <a href=\"http://www.w3schools.com/jsref/jsref%5Fconstructor%5Farray.asp\" rel=\"nofollow\">w3school</a> there is an example that should be quite standard.</p>\n\n<p>To check if a variable is an array they use something similar to this</p>\n\n<pre><code>function arrayCheck(obj) { \n    return obj &amp;&amp; (obj.constructor==Array);\n}\n</code></pre>\n\n<p>tested on Chrome, Firefox, Safari, ie7</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Type checking of objects in JS is done via <code>instanceof</code>, ie</p>\n\n<pre><code>obj instanceof Array\n</code></pre>\n\n<p>This won't work if the object is passed across frame boundaries as each frame has its own <code>Array</code> object. You can work around this by checking the internal <em>[[Class]]</em> property of the object. To get it, use <code>Object.prototype.toString()</code> (this is guaranteed to work by ECMA-262):</p>\n\n<pre><code>Object.prototype.toString.call(obj) === '[object Array]'\n</code></pre>\n\n<p>Both methods will only work for actual arrays and not array-like objects like the <code>arguments</code> object or node lists. As all array-like objects must have a numeric <code>length</code> property, I'd check for these like this:</p>\n\n<pre><code>typeof obj !== 'undefined' &amp;&amp; obj !== null &amp;&amp; typeof obj.length === 'number'\n</code></pre>\n\n<p>Please note that strings will pass this check, which might lead to problems as IE doesn't allow access to a string's characters by index. Therefore, you might want to change <code>typeof obj !== 'undefined'</code> to <code>typeof obj === 'object'</code> to exclude primitives and host objects with types distinct from <code>'object'</code> alltogether. This will still let string objects pass, which would have to be excluded manually.</p>\n\n<p>In most cases, what you actually want to know is whether you can iterate over the object via numeric indices. Therefore, it might be a good idea to check if the object has a property named <code>0</code> instead, which can be done via one of these checks:</p>\n\n<pre><code>typeof obj[0] !== 'undefined' // false negative for `obj[0] = undefined`\nobj.hasOwnProperty('0') // exclude array-likes with inherited entries\n'0' in Object(obj) // include array-likes with inherited entries\n</code></pre>\n\n<p>The cast to object is necessary to work correctly for array-like primitives (ie strings).</p>\n\n<p>Here's the code for robust checks for JS arrays:</p>\n\n<pre><code>function isArray(obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n}\n</code></pre>\n\n<p>and iterable (ie non-empty) array-like objects:</p>\n\n<pre><code>function isNonEmptyArrayLike(obj) {\n    try { // don't bother with `typeof` - just access `length` and `catch`\n        return obj.length &gt; 0 &amp;&amp; '0' in Object(obj);\n    }\n    catch(e) {\n        return false;\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 105
                },
                {
                    "body": "<p>Crockford has two answers on page 106 of \"The Good Parts.\" The first one checks the constructor, but will give false negatives across different frames or windows. Here's the second:</p>\n\n<pre><code>if (my_value &amp;&amp; typeof my_value === 'object' &amp;&amp;\n        typeof my_value.length === 'number' &amp;&amp;\n        !(my_value.propertyIsEnumerable('length')) {\n    // my_value is truly an array!\n}\n</code></pre>\n\n<p>Crockford points out that this version will identify the <code>arguments</code> array as an array, even though it doesn't have any of the array methods.</p>\n\n<p>His interesting discussion of the problem begins on page 105.</p>\n\n<p>There is further interesting discussion (post-Good Parts) <a href=\"http://blog.360.yahoo.com/blog-TBPekxc1dLNy5DOloPfzVvFIVOWMB0li?p=916\">here</a> which includes this proposal:</p>\n\n<pre><code>var isArray = function (o) {\n    return (o instanceof Array) ||\n        (Object.prototype.toString.apply(o) === '[object Array]');\n};\n</code></pre>\n\n<p>All the discussion makes me never want to know whether or not something is an array.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Not enough reference equal of constructors. Sometime they have different references of constructor. So I use string representations of them.</p>\n\n<pre><code>function isArray(o) {\n    return o.constructor.toString() === [].constructor.toString();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The arrival of ECMAScript 5th Edition gives us the most sure-fire method of testing if a variable is an array, <a href=\"https://developer.mozilla.org/web-tech/2010/07/26/determining-with-absolute-accuracy-whether-or-not-a-javascript-object-is-an-array/\"><em>Array.isArray()</em></a>:</p>\n\n<pre><code>Array.isArray([]); // true\n</code></pre>\n\n<p>While the accepted answer here will work across frames and windows for most browsers, <strong>it doesn't for Internet Explorer 7 and lower</strong>, because <code>Object.prototype.toString</code> called on an array from a different window will return <code>[object Object]</code>, not <code>[object Array]</code>.  IE 9 appears to have regressed to this behaviour also (see updated fix below).</p>\n\n<p>I won't go into all the nitty gritty parts of the solution here, if you're interested in that you can read <a href=\"http://whattheheadsaid.com/2010/10/cross-context-isarray-and-internet-explorer\">this blog post</a>.  However, if you want a solution that works across all browsers, you can use:</p>\n\n<pre><code>(function () {\n    var toString = Object.prototype.toString,\n        strArray = Array.toString(),\n        jscript  = /*@cc_on @_jscript_version @*/ +0;\n\n    // jscript will be 0 for browsers other than IE\n    if (!jscript) {\n        Array.isArray = Array.isArray || function (obj) {\n            return toString.call(obj) == \"[object Array]\";\n        }\n    }\n    else {\n        Array.isArray = function (obj) {\n            return \"constructor\" in obj &amp;&amp; String(obj.constructor) == strArray;\n        }\n    }\n})();\n</code></pre>\n\n<p>It's not entirely unbreakable, but it would only be broken by someone trying hard to break it.  It works around the problems in IE7 and lower and IE9.  <a href=\"https://connect.microsoft.com/IE/feedback/details/678969/arrays-from-other-documents-are-not-recognized-as-arrays-by-native-js-functions#tabs\">The bug still exists in IE 10 PP2</a>, but it might be fixed before release.</p>\n\n<p>PS, if you're unsure about the solution then I recommend you test it to your hearts content and/or read the blog post.  There are other potential solutions there if you're uncomfortable using conditional compilation.</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>Replace <code>Array.isArray(obj)</code> by <code>obj.constructor==Array</code> </p>\n\n<p>samples :</p>\n\n<p><code>Array('44','55').constructor==Array</code>  return true  (IE8 / Chrome)</p>\n\n<p><code>'55'.constructor==Array</code>              return false (IE8 / Chrome)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What is the best de-facto standard cross-browser method to determine if a variable in JavaScript is an array or not?</p>\n\n<p>Searching the web there are a number of different suggestions, some good and quite a few invalid.</p>\n\n<p>For example, the following is a basic approach:</p>\n\n<pre><code>function isArray(obj) {\n    return (obj &amp;&amp; obj.length);\n}\n</code></pre>\n\n<p>However, note what happens if the array is empty, or obj actually is not an array but implements a length property, etc. </p>\n\n<p>So which implementation is the best in terms of actually working, being cross-browser and still perform efficiently?</p>\n",
            "last_activity_date": 1425402327,
            "question_id": 1058427,
            "score": 65,
            "tags": [
                "javascript",
                "arrays"
            ],
            "title": "How to detect if a variable is an array"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>how do pass this clicked products from first controller to second?</p>\n</blockquote>\n\n<p>On click you can call method that invokes <a href=\"http://docs.angularjs.org/api/ng.$rootScope.Scope\" rel=\"nofollow\">broadcast</a>:</p>\n\n<pre><code>$rootScope.$broadcast('SOME_TAG', 'your value');\n</code></pre>\n\n<p>and the second controller will listen on this tag like:</p>\n\n<pre><code>$scope.$on('SOME_TAG', function(response) {\n      // ....\n})\n</code></pre>\n\n<p>Since we can't inject $scope into services, there is nothing like a singleton $scope. </p>\n\n<p>But we can inject <code>$rootScope</code>. So if you store value into the Service, you can run <code>$rootScope.$broadcast('SOME_TAG', 'your value');</code> in the Service body. (See @Charx description about services)</p>\n\n<pre><code>app.service('productService',  function($rootScope) {/*....*/}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>From the description, seems as though you could be using a service. Check out <a href=\"http://egghead.io/lessons/angularjs-sharing-data-between-controllers\">http://egghead.io/lessons/angularjs-sharing-data-between-controllers</a> and <a href=\"http://stackoverflow.com/questions/17952620/angularjs-service-passing-data-between-controllers\">AngularJS Service Passing Data Between Controllers</a> to see some examples.</p>\n\n<p>You could define your product service as such:</p>\n\n<pre><code>app.service('productService', function() {\n  var productList = [];\n\n  var addProduct = function(newObj) {\n      productList.push(newObj);\n  }\n\n  var getProducts = function(){\n      return productList;\n  }\n\n  return {\n    addProduct: addProduct,\n    getProducts: getProducts\n  };\n\n});\n</code></pre>\n\n<p>Dependency inject the service into both controllers. </p>\n\n<p>In your ProductController, define some action that adds the selected object to the array:</p>\n\n<pre><code>app.controller('ProductController', function($scope, productService) {\n    callToAddToProductList = function(currObj){\n        productService.addProduct(currObj);\n    };\n});\n</code></pre>\n\n<p>In your CartController, get the products from the service:</p>\n\n<pre><code>app.controller('CartController', function($scope, productService) {\n    $scope.products = productService.getProducts();\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 78
                },
                {
                    "body": "<p><strong>Solution without creating Service, using $rootScope:</strong></p>\n\n<p>To share properties across app Controllers you can use Angular $rootScope. This is another option to share data, putting it so that people know about it.</p>\n\n<p>The preferred way to share some functionality across Controllers is Services, to read or change a global property you can use $rootscope.</p>\n\n<pre><code>var app = angular.module('mymodule',[]);\napp.controller('Ctrl1', ['$scope','$rootScope',\n  function($scope, $rootScope) {\n    $rootScope.showBanner = true;\n}]);\n\napp.controller('Ctrl2', ['$scope','$rootScope',\n  function($scope, $rootScope) {\n    $rootScope.showBanner = false;\n}]);\n</code></pre>\n\n<p>Using $rootScope in a template (Access properties with $root):</p>\n\n<pre><code>&lt;div ng-controller=\"Ctrl1\"&gt;\n    &lt;div class=\"banner\" ng-show=\"$root.showBanner\"&gt; &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I've created a factory that controls shared scope between route path's pattern, so you can maintain the shared data just when users are navigating in the same route parent path.</p>\n\n<pre><code>.controller('CadastroController', ['$scope', 'RouteSharedScope',\n    function($scope, routeSharedScope) {\n      var customerScope = routeSharedScope.scopeFor('/Customer');\n      //var indexScope = routeSharedScope.scopeFor('/');\n    }\n ])\n</code></pre>\n\n<p>So, if the user goes to another route path, for example '/Support', the shared data for path '/Customer' will be automatically destroyed. But, if instead of this the user goes to 'child' paths, like '/Customer/1' or '/Customer/list' the the scope won't be destroyed.</p>\n\n<p>You can see an sample here: <a href=\"http://plnkr.co/edit/OL8of9\" rel=\"nofollow\">http://plnkr.co/edit/OL8of9</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>An even simpler way to share the data between controllers is using nested data structures. Instead of, for example</p>\n\n<pre><code>$scope.customer = {};\n</code></pre>\n\n<p>we can use</p>\n\n<pre><code>$scope.data = { customer: {} };\n</code></pre>\n\n<p>The <code>data</code> property will be inherited from parent scope so we can overwrite its fields, keeping the access from other controllers.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can done this by two methods.</p>\n\n<ul>\n<li>1.by using $rootscope but i wont reccommend this  The $rootScope is the top-most scope. An app can have only one $rootScope which will be\nshared among all the components of an app. Hence it acts like a\nglobal variable.</li>\n<li><p>2.Using services .   You can do this by sharing a service between two controllers\ncode for service may look like this</p>\n\n<p>app.service('shareDataService', function() {\n      var myList = [];</p>\n\n<pre><code>  var addList = function(newObj) {\n      myList.push(newObj);\n  }\n\n  var getList = function(){\n      return myList;\n  }\n\n  return {\n    addList: addList,\n    getList: getList\n  };\n\n});\n</code></pre>\n\n<p>You can see my fiddle <a href=\"http://jsfiddle.net/nisham/mgPGS/135/\" rel=\"nofollow\">here</a>\n<a href=\"http://jsfiddle.net/nisham/mgPGS/135/\" rel=\"nofollow\">http://jsfiddle.net/nisham/mgPGS/135/</a></p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a basic controller that displays my products,</p>\n\n<pre><code>App.controller('ProductCtrl',function($scope,$productFactory){\n     $productFactory.get().success(function(data){\n           $scope.products = data;\n     });\n});\n</code></pre>\n\n<p>In my view I'm displaying this products in a list</p>\n\n<pre><code>&lt;ul&gt;\n    &lt;li ng-repeat=\"product as products\"&gt;\n        {{product.name}}\n    &lt;/li&gt;\n&lt;/ul\n</code></pre>\n\n<p>What I'm trying to do is when someone click on the product name, i have another view named cart where this product is added.</p>\n\n<pre><code> &lt;ul class=\"cart\"&gt;\n      &lt;li&gt;\n          //click one added here\n      &lt;/li&gt;\n      &lt;li&gt;\n          //click two added here\n      &lt;/li&gt;\n &lt;/ul&gt;\n</code></pre>\n\n<p>So my doubt here is, how do pass this clicked products from first controller to second? i assumed that cart should be a controller too.</p>\n\n<p>I handle click event using directive. Also i feel i should be using service to achieve above functionality just can't figure how? because cart will be predefined number of products added could be 5/10 depending on which page user is. So i would like to keep this generic.</p>\n\n<p>Update: </p>\n\n<p>I created a service to broadcast and in the second controller i receive it. Now the query is how do i update dom? Since my list to drop product is pretty hardcoded.</p>\n",
            "last_activity_date": 1423764527,
            "question_id": 20181323,
            "score": 60,
            "tags": [
                "javascript",
                "angularjs",
                "angular-services"
            ],
            "title": "Passing data between controllers in Angular JS?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You want the <code>s</code> (dotall) modifier, which apparently doesn't exist in Javascript - you can replace <code>.</code> with [\\s\\S] as suggested by @molf.\nThe <code>m</code> (multiline) modifier makes ^ and $ match lines rather than the whole string.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>You are looking for the <code>/.../s</code> modifier, also known as the <em>dotall</em> modifier. It forces the dot <code>.</code> to also match newlines, which it <em>does not do</em> by default.</p>\n\n<p>The bad news is that it does not exist in Javascript. The good news is that you can work around it by using a character class (e.g. <code>\\s</code>) and its negation (<code>\\S</code>) together, like this:</p>\n\n<pre><code>[\\s\\S]\n</code></pre>\n\n<p>So in your case the regex would become:</p>\n\n<pre><code>/&lt;div class=\"box-content-5\"&gt;[\\s\\S]*&lt;h1&gt;([^&lt;]+?)&lt;\\/h1&gt;/i\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 326
                }
            ],
            "body": "<p>I wrote a regex to fetch string from html, but it seems the multiline flag doesn't work.</p>\n\n<p>this is my pattern and I want to get the text in h1 tag.</p>\n\n<pre><code>var pattern= /&lt;div class=\"box-content-5\"&gt;.*&lt;h1&gt;([^&lt;]+?)&lt;\\/h1&gt;/mi\nm = html.search(pattern);\nreturn m[1];\n</code></pre>\n\n<p>I created a string to test it. When the string contains \"\\n\" the result is always null. If I remove all the \"\\n\" , it gave me the right result, no matter with or without /m flag.</p>\n\n<p>what's wrong with my regex?</p>\n",
            "last_activity_date": 1410329238,
            "question_id": 1068280,
            "score": 127,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "Javascript regex multiline flag doesn&#39;t work"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Use swfobject. it replaces a div with the flash if it is installed.\nsee: <a href=\"http://code.google.com/p/swfobject/\" rel=\"nofollow\">http://code.google.com/p/swfobject/</a></p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>You can use navigator.mimeTypes.</p>\n\n<pre><code>if (navigator.mimeTypes [\"application/x-shockwave-flash\"] == undefined)\n    $(\"#someDiv\").show ();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>If <code>swfobject</code> won't suffice, or you need to create something a little more bespoke, try this:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var hasFlash = false;\ntry {\n    hasFlash = Boolean(new ActiveXObject('ShockwaveFlash.ShockwaveFlash'));\n} catch(exception) {\n    hasFlash = ('undefined' != typeof navigator.mimeTypes['application/x-shockwave-flash']);\n}\n</code></pre>\n\n<p>It works with 7 and 8.</p>\n",
                    "is_accepted": false,
                    "score": 121
                },
                {
                    "body": "<p>I used Adobe's detection kit, originally suggested by justpassinby. Their system is nice because it detects the version number and compares it for you against your 'required version'</p>\n\n<p>One bad thing is it does an alert showing the detected version of flash, which isn't very user friendly. All of a sudden a box pops up with some seemingly random numbers.</p>\n\n<p>Some modifications you might want to consider:</p>\n\n<ul>\n<li>remove the alert</li>\n<li>change it so it returns an object (or array)\n--- first element is boolean true/false for \"was the required version found on user's machine\"\n--- second element is the actual version number found on user's machine</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>jqplugin: <a href=\"http://code.google.com/p/jqplugin/\" rel=\"nofollow\">http://code.google.com/p/jqplugin/</a></p>\n\n<pre><code>$.browser.flash == true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>At <a href=\"http://www.featureblend.com/javascript-flash-detection-library.html\" rel=\"nofollow\">http://www.featureblend.com/javascript-flash-detection-library.html</a> you can found a really good and really simple library.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>@Drewid's answer didn't work in my Firefox 25 if the flash plugin is just disabled but installed.</p>\n\n<p>@invertedSpear's comment in that answer worked in firefox but not in any IE version.</p>\n\n<p>So combined both their code and got this. Tested in Google Chrome 31, Firefox 25, IE 8-10. Thanks Drewid and invertedSpear :)</p>\n\n<pre><code>var hasFlash = false;\ntry {\n  var fo = new ActiveXObject('ShockwaveFlash.ShockwaveFlash');\n  if (fo) {\n    hasFlash = true;\n  }\n} catch (e) {\n  if (navigator.mimeTypes\n        &amp;&amp; navigator.mimeTypes['application/x-shockwave-flash'] != undefined\n        &amp;&amp; navigator.mimeTypes['application/x-shockwave-flash'].enabledPlugin) {\n    hasFlash = true;\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 52
                },
                {
                    "body": "<p>You should also be able to use..</p>\n\n<pre><code>swfobject.getFlashPlayerVersion().major === 0\n</code></pre>\n\n<p>THis would be easier </p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>How can I use javascript/jQuery/etc to detect if Flash is installed and if it isn't, display a div that contains information informing the user that they need to install flash?</p>\n",
            "last_activity_date": 1421799690,
            "question_id": 998245,
            "score": 60,
            "tags": [
                "javascript",
                "jquery",
                "asp.net-mvc",
                "flash",
                "detection"
            ],
            "title": "How can I detect if Flash is installed and if not, display a hidden div that informs the user?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Crossframe-Scripting is not possible when the two frames have different domains -> Security.</p>\n\n<p>See this: <a href=\"http://javascript.about.com/od/reference/a/frame3.htm\">http://javascript.about.com/od/reference/a/frame3.htm</a></p>\n\n<p>Now to answer your question: there is no solution or work around, you simply should check your website-design why there must be two frames from different domains that changes the url of the other one.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>From a child document of different origin you are not allowed access to the top window's <code>location.hash</code> property, but you are allowed to set the <code>location</code> property itself.</p>\n\n<p>This means that given that the top windows location is <code>http://example.com/page/</code>, instead of doing</p>\n\n<pre><code>parent.location.hash = \"#foobar\";\n</code></pre>\n\n<p>you do need to know the parents location and do</p>\n\n<pre><code>parent.location = \"http://example.com/page/#foobar\";\n</code></pre>\n\n<p>Since the resource is not navigated this will work as expected, only changing the hash part of the url.</p>\n\n<p>If you are using this for cross-domain communication, then I would recommend using <a href=\"http://easyxdm.net\" rel=\"nofollow\">easyXDM</a> instead.</p>\n",
                    "is_accepted": false,
                    "score": 114
                },
                {
                    "body": "<p>I was getting the same error message when I tried to chamge the domain for iframe.src.</p>\n\n<p>For me, the answer was to change the iframe.src to a url on the SAME domain, but which was actually an html re-direct page to the desired domain.  The other domain then showed up in my iframe without any errors.</p>\n\n<p>Worked like a charm.  :)</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>A solution could be to use a local file which retrieves the remote content</p>\n\n<p>remoteInclude.php</p>\n\n<pre><code>&lt;?php\n$url = $_GET['url'];\n$contents = file_get_contents($url);\necho $contents;\n</code></pre>\n\n<p>The HTML</p>\n\n<pre><code>&lt;iframe frameborder=\"1\" id=\"frametest\" src=\"/remoteInclude.php?url=REMOTE_URL_HERE\"&gt;&lt;/iframe&gt;\n&lt;script&gt;\n    $(\"#frametest\").load(function (){       \n    var contents =$(\"#frametest\").contents();\n});\n</code></pre>\n\n<p></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I found that using the XFBML version of the Facebook like button instead of the HTML5 version fixed this problem. Add the below code where you want the button to appear:</p>\n\n<pre><code>&lt;div id=\"fb-root\"&gt;&lt;/div&gt;\n&lt;script&gt;(function (d, s, id) {\n    var js, fjs = d.getElementsByTagName(s)[0];\n    if (d.getElementById(id)) return;\n    js = d.createElement(s); js.id = id;\n    js.src = \"//connect.facebook.net/en_GB/all.js#xfbml=1\";\n    fjs.parentNode.insertBefore(js, fjs);\n}(document, 'script', 'facebook-jssdk'));&lt;/script&gt;\n\n&lt;fb:like send=\"true\" layout=\"button_count\" width=\"50\" show_faces=\"false\" font=\"arial\"&gt;&lt;/fb:like&gt;\n</code></pre>\n\n<p>Then add this to your HTML tag:</p>\n\n<pre><code> xmlns:fb=\"http://ogp.me/ns/fb#\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The problem is even if you create a proxy or load the content and inject it as if it's local, any scripts that that content defines will be loaded from the other domain and cause cross-domain problems.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am getting the below error when i try to set a hash value to the parent url from iframe which contains another domain url:</p>\n\n<blockquote>\n  <p>Unsafe JavaScript attempt to access frame with URL \"URL1\" from frame with URL \"URL2\". Domains, protocols and ports must match.</p>\n</blockquote>\n\n<p>How can I fix this problem?</p>\n",
            "last_activity_date": 1420589099,
            "question_id": 4324108,
            "score": 108,
            "tags": [
                "javascript",
                "iframe",
                "webkit",
                "cross-domain"
            ],
            "title": "Unsafe JavaScript attempt to access frame with URL"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I always use parseInt, but beware of leading zeroes that will force it into <em>octal</em> mode.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>typeof parseInt(\"123\") =&gt; number\ntypeof Number(\"123\") =&gt; number\ntypeof new Number(\"123\") =&gt; object\n</code></pre>\n\n<p>first two will give you better performance as it returns a primitive instead of an object.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Well, they are <em>semantically different</em>, the <a href=\"http://sideshowbarker.github.com/es5-spec/#x15.7.1\"><code>Number</code> constructor called as a function</a> performs <em>type conversion</em> and <a href=\"http://sideshowbarker.github.com/es5-spec/#x15.1.2.2\"><code>parseInt</code></a> performs <em>parsing</em>, e.g.:</p>\n\n<pre><code>// parsing:\nparseInt(\"20px\");       // 20\nparseInt(\"10100\", 2);   // 20\nparseInt(\"2e1\");        // 2\n\n// type conversion\nNumber(\"20px\");       // NaN\nNumber(\"2e1\");        // 20, exponential notation\n</code></pre>\n\n<p>Keep in mind that if <code>parseInt</code> detects a leading zero on the string, it will parse the number in octal base, this has changed on ECMAScript 5, the new version of the standard, but it will take a long time to get in browser implementations (it's an incompatibility with ECMAScript 3), also <code>parseInt</code> will ignore trailing characters that don't correspond with any digit of the currently used base.</p>\n\n<p>The <code>Number</code> constructor doesn't detect octals:</p>\n\n<pre><code>Number(\"010\");         // 10\nparseInt(\"010\");       // 8, implicit octal\nparseInt(\"010\", 10);   // 10, decimal radix used\n</code></pre>\n\n<p>But it can handle numbers in hexadecimal notation, just like <code>parseInt</code>:</p>\n\n<pre><code>Number(\"0xF\");   // 15\nparseInt(\"0xF\"); //15\n</code></pre>\n\n<p>In addition, a widely used construct to perform Numeric type conversion, is the <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\">Unary <code>+</code> Operator (p. 72)</a>, it is equivalent to using the <code>Number</code> constructor as a function:</p>\n\n<pre><code>+\"2e1\";   // 20\n+\"0xF\";   // 15\n+\"010\";   // 10\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 134
                },
                {
                    "body": "<p>If you are looking for performance then probably best results you'll get with bitwise right shift <code>\"10\"&gt;&gt;0</code>. Also multiply (<code>\"10\" * 1</code>) or not not (<code>~~\"10\"</code>). All of them are much faster of <code>Number</code> and <code>parseInt</code>.\nThey even have \"feature\" returning 0 for not number argument.\nHere are <a href=\"http://jsperf.com/number-vs-parseint-vs-plus/3\">Performance tests</a>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>As the title already says, what should I prefer when converting a string to an int? Is there any performance gain when using one over the other?</p>\n",
            "last_activity_date": 1407233442,
            "question_id": 4090518,
            "score": 86,
            "tags": [
                "javascript"
            ],
            "title": "string to int use parseInt or Number?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I've experienced the same problem. It seems that this is an iOS limitation, jpg over 2 megapixel are subsampled.</p>\n\n<p>See <a href=\"http://developer.apple.com/library/ios/DOCUMENTATION/AppleApplications/Reference/SafariWebContent/CreatingContentforSafarioniPhone/CreatingContentforSafarioniPhone.html\" rel=\"nofollow\">Creating Compatible Web Content for Safari on IPhone</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It looks like this is an iOS 6 bug. There is no reason for the aspect to get out of whack from your code. I have the same problem which was only introduced in iOS 6. It seems that their sub-sampling routine gives the wrong height. I submitted a bug report to Apple, and you should do the same. The more bug reports they get for this the better.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>There is a JavaScript canvas resize library which works around the subsampling and vertical squash issues encountered when drawing scaled images on canvas on iOS devices:\n<a href=\"http://github.com/stomita/ios-imagefile-megapixel\">http://github.com/stomita/ios-imagefile-megapixel</a></p>\n\n<p>There are side issues when scaling images with alpha channel (as it uses the alpha channel for the issues detection) and when trying to resize existing canvas elements, however it's the first solution I've found that actually works with the issue at hand.</p>\n\n<p>stomita is also a StackOverflow user and posted his solution here:\n<a href=\"http://stackoverflow.com/a/12615436/644048\">http://stackoverflow.com/a/12615436/644048</a></p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>If you still need to use the long version of the drawImage function you can change this:</p>\n\n<pre><code>context.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh);\n</code></pre>\n\n<p>to this:</p>\n\n<pre><code>drawImageIOSFix(context, img, sx, sy, sw, sh, dx, dy, dw, dh);\n</code></pre>\n\n<p>You just need to include these two functions somewhere:</p>\n\n<pre><code>/**\n * Detecting vertical squash in loaded image.\n * Fixes a bug which squash image vertically while drawing into canvas for some images.\n * This is a bug in iOS6 devices. This function from https://github.com/stomita/ios-imagefile-megapixel\n * \n */\nfunction detectVerticalSquash(img) {\n    var iw = img.naturalWidth, ih = img.naturalHeight;\n    var canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = ih;\n    var ctx = canvas.getContext('2d');\n    ctx.drawImage(img, 0, 0);\n    var data = ctx.getImageData(0, 0, 1, ih).data;\n    // search image edge pixel position in case it is squashed vertically.\n    var sy = 0;\n    var ey = ih;\n    var py = ih;\n    while (py &gt; sy) {\n        var alpha = data[(py - 1) * 4 + 3];\n        if (alpha === 0) {\n            ey = py;\n        } else {\n            sy = py;\n        }\n        py = (ey + sy) &gt;&gt; 1;\n    }\n    var ratio = (py / ih);\n    return (ratio===0)?1:ratio;\n}\n\n/**\n * A replacement for context.drawImage\n * (args are for source and destination).\n */\nfunction drawImageIOSFix(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\n    var vertSquashRatio = detectVerticalSquash(img);\n // Works only if whole image is displayed:\n // ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n // The following works correct also when only a part of the image is displayed:\n    ctx.drawImage(img, sx * vertSquashRatio, sy * vertSquashRatio, \n                       sw * vertSquashRatio, sh * vertSquashRatio, \n                       dx, dy, dw, dh );\n}\n</code></pre>\n\n<p>This will work fine whether it is run on iOS or other platforms.</p>\n\n<p>This is based on the great work by <a href=\"https://github.com/stomita/ios-imagefile-megapixel\">stomita</a> and you should credit him in your work.</p>\n",
                    "is_accepted": false,
                    "score": 45
                },
                {
                    "body": "<p>A modified version of the above code.</p>\n\n<p>Edit: saw L0LN1NJ4's code at <a href=\"http://jsfiddle.net/gWY2a/24/\" rel=\"nofollow\">http://jsfiddle.net/gWY2a/24/</a> .. guess that one's a bit better...</p>\n\n<pre><code>function drawImageIOSFix (ctx, img) {\n var vertSquashRatio = detectVerticalSquash (img)\n var arg_count = arguments.length\n switch (arg_count) {\n  case 4  : ctx.drawImage (img, arguments[2], arguments[3] / vertSquashRatio); break\n  case 6  : ctx.drawImage (img, arguments[2], arguments[3], arguments[4], arguments[5] / vertSquashRatio); break\n  case 8  : ctx.drawImage (img, arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7] / vertSquashRatio); break\n  case 10 : ctx.drawImage (img, arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9] / vertSquashRatio); break\n }\n\n // Detects vertical squash in loaded image.\n // Fixes a bug which squash image vertically while drawing into canvas for some images.\n // This is a bug in iOS6 (and IOS7) devices. This function from https://github.com/stomita/ios-imagefile-megapixel\n function detectVerticalSquash (img) {\n  var iw = img.naturalWidth, ih = img.naturalHeight\n  var canvas = document.createElement (\"canvas\")\n  canvas.width  = 1\n  canvas.height = ih\n  var ctx = canvas.getContext('2d')\n  ctx.drawImage (img, 0, 0)\n  var data = ctx.getImageData(0, 0, 1, ih).data\n  // search image edge pixel position in case it is squashed vertically.\n  var sy = 0, ey = ih, py = ih\n  while (py &gt; sy) {\n   var alpha = data[(py - 1) * 4 + 3]\n   if (alpha === 0) {ey = py} else {sy = py}\n   py = (ey + sy) &gt;&gt; 1\n  }\n  var ratio = (py / ih)\n  return (ratio === 0) ? 1 : ratio\n }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I want to resize the image taken from the iOS camera on the client side with HTML5 Canvas but I keep running in this weird bug where the image has a wrong ratio if bigger than ~1.5mb</p>\n\n<p>It works on the desktop but not in the latest iOS version with the media upload API.</p>\n\n<p>You can see an example here: <a href=\"http://jsbin.com/ekuros/1\">http://jsbin.com/ekuros/1</a></p>\n\n<p>Any idea how to fix this please? Is this a memory issue?</p>\n\n<pre><code>$('#file').on('change', function (e) {\n    var file = e.currentTarget.files[0];\n    var reader = new FileReader();\n    reader.onload = function (e) {\n        var image = $('&lt;img/&gt;');\n        image.on('load', function () {\n            var square = 320;\n            var canvas = document.createElement('canvas');\n\n            canvas.width = square;\n            canvas.height = square;\n\n            var context = canvas.getContext('2d');\n            context.clearRect(0, 0, square, square);\n            var imageWidth;\n            var imageHeight;\n            var offsetX = 0;\n            var offsetY = 0;\n\n            if (this.width &gt; this.height) {\n                imageWidth = Math.round(square * this.width / this.height);\n                imageHeight = square;\n                offsetX = - Math.round((imageWidth - square) / 2);\n            } else {\n                imageHeight = Math.round(square * this.height / this.width);\n                imageWidth = square;    \n                offsetY = - Math.round((imageHeight - square) / 2);            \n            }\n\n            context.drawImage(this, offsetX, offsetY, imageWidth, imageHeight);\n            var data = canvas.toDataURL('image/jpeg');\n\n            var thumb = $('&lt;img/&gt;');\n            thumb.attr('src', data);\n            $('body').append(thumb);\n        });\n        image.attr('src', e.target.result);\n    };\n    reader.readAsDataURL(file);\n});\n</code></pre>\n",
            "last_activity_date": 1407689481,
            "question_id": 11929099,
            "score": 42,
            "tags": [
                "javascript",
                "ios",
                "html5",
                "canvas"
            ],
            "title": "HTML5 Canvas drawImage ratio bug iOS"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>It's not too hard. Firstly, take a look at <a href=\"http://dev.w3.org/2006/webapi/FileAPI/#FileReader-interface\">FileReader Interface</a>.</p>\n\n<p>So, when the form is submitted, catch the submission process and</p>\n\n<pre><code>var file = document.getElementById('fileBox').files[0]; //Files[0] = 1st file\nvar reader = new FileReader();\nreader.readAsText(file, 'UTF-8');\nreader.onload = shipOff;\n//reader.onloadstart = ...\n//reader.onprogress = ... &lt;-- Allows you to update a progress bar.\n//reader.onabort = ...\n//reader.onerror = ...\n//reader.onloadend = ...\n\n\nfunction shipOff(event) {\n    var result = event.target.result;\n    var fileName = document.getElementById('fileBox').files[0].name; //Should be 'picture.jpg'\n    $.post('/myscript.php', { data: result, name: fileName }, continueSubmission);\n}\n</code></pre>\n\n<p>Then, on the server side (i.e. myscript.php):</p>\n\n<pre><code>$data = $_POST['data'];\n$fileName = $_POST['fileName'];\n$serverFile = time().$fileName;\n$fp = fopen('/uploads/'.$serverFile,'w'); //Prepends timestamp to prevent overwriting\nfwrite($fp, $data);\nfclose($fp);\n$returnData = array( \"serverFile\" =&gt; $serverFile );\necho json_encode($returnData);\n</code></pre>\n\n<p>Or something like it. I may be mistaken (and if I am, please, correct me), but this should store the file as something like <code>1287916771myPicture.jpg</code> in <code>/uploads/</code> on your server, and respond with a JSON variable (to a <code>continueSubmission()</code> function) containing the fileName on the server.</p>\n\n<p>Check out <a href=\"http://us2.php.net/manual/en/function.fwrite.php\"><code>fwrite()</code></a> and <a href=\"http://docs.jquery.com/Post\"><code>jQuery.post()</code></a>.</p>\n\n<p>On the above page it details how to use <a href=\"http://dev.w3.org/2006/webapi/FileAPI/#readAsBinaryString\"><code>readAsBinaryString()</code></a>, <a href=\"http://dev.w3.org/2006/webapi/FileAPI/#readAsDataURL\"><code>readAsDataUrl()</code></a>, and <a href=\"http://dev.w3.org/2006/webapi/FileAPI/#readAsArrayBuffer\"><code>readAsArrayBuffer()</code></a> for your other needs (e.g. images, videos, etc).</p>\n",
                    "is_accepted": true,
                    "score": 44
                },
                {
                    "body": "<p>With jQuery (and without FormData API) you can use something like this: </p>\n\n<pre><code>function readFile(file){\n   var loader = new FileReader();\n   var def = $.Deferred(), promise = def.promise();\n\n   //--- provide classic deferred interface\n   loader.onload = function (e) { def.resolve(e.target.result); };\n   loader.onprogress = loader.onloadstart = function (e) { def.notify(e); };\n   loader.onerror = loader.onabort = function (e) { def.reject(e); };\n   promise.abort = function () { return loader.abort.apply(loader, arguments); };\n\n   loader.readAsBinaryString(file);\n\n   return promise;\n}\n\nfunction upload(url, data){\n    var def = $.Deferred(), promise = def.promise();\n    var mul = buildMultipart(data);\n    var req = $.ajax({\n        url: url,\n        data: mul.data,\n        processData: false,\n        type: \"post\",\n        async: true,\n        contentType: \"multipart/form-data; boundary=\"+mul.bound,\n        xhr: function() {\n            var xhr = jQuery.ajaxSettings.xhr();\n            if (xhr.upload) {\n\n                xhr.upload.addEventListener('progress', function(event) {\n                    var percent = 0;\n                    var position = event.loaded || event.position; /*event.position is deprecated*/\n                    var total = event.total;\n                    if (event.lengthComputable) {\n                        percent = Math.ceil(position / total * 100);\n                        def.notify(percent);\n                    }                    \n                }, false);\n            }\n            return xhr;\n        }\n    });\n    req.done(function(){ def.resolve.apply(def, arguments); })\n       .fail(function(){ def.reject.apply(def, arguments); });\n\n    promise.abort = function(){ return req.abort.apply(req, arguments); }\n\n    return promise;\n}\n\nvar buildMultipart = function(data){\n    var key, crunks = [], bound = false;\n    while (!bound) {\n        bound = $.md5 ? $.md5(new Date().valueOf()) : (new Date().valueOf());\n        for (key in data) if (~data[key].indexOf(bound)) { bound = false; continue; }\n    }\n\n    for (var key = 0, l = data.length; key &lt; l; key++){\n        if (typeof(data[key].value) !== \"string\") {\n            crunks.push(\"--\"+bound+\"\\r\\n\"+\n                \"Content-Disposition: form-data; name=\\\"\"+data[key].name+\"\\\"; filename=\\\"\"+data[key].value[1]+\"\\\"\\r\\n\"+\n                \"Content-Type: application/octet-stream\\r\\n\"+\n                \"Content-Transfer-Encoding: binary\\r\\n\\r\\n\"+\n                data[key].value[0]);\n        }else{\n            crunks.push(\"--\"+bound+\"\\r\\n\"+\n                \"Content-Disposition: form-data; name=\\\"\"+data[key].name+\"\\\"\\r\\n\\r\\n\"+\n                data[key].value);\n        }\n    }\n\n    return {\n        bound: bound,\n        data: crunks.join(\"\\r\\n\")+\"\\r\\n--\"+bound+\"--\"\n    };\n};\n\n//----------\n//---------- On submit form:\nvar form = $(\"form\");\nvar $file = form.find(\"#file\");\nreadFile($file[0].files[0]).done(function(fileData){\n   var formData = form.find(\":input:not('#file')\").serializeArray();\n   formData.file = [fileData, $file[0].files[0].name];\n   upload(form.attr(\"action\"), formData).done(function(){ alert(\"successfully uploaded!\"); });\n});\n</code></pre>\n\n<p>With FormData API you just have to add all fields of your form to FormData object and send it via $.ajax({ url: url, data: formData, processData: false, contentType: false, type:\"POST\"})</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Admittedly, there are similar questions lying around on SO. But it seems none quite meet my requirements. Here is what I'm looking to do:</p>\n\n<ul>\n<li>Upload an entire form of data, one piece of which is a <strong>single</strong> file</li>\n<li>Work with Codeigniter's file upload library</li>\n</ul>\n\n<p>Up until here, all is well. The data gets in my database as I need it. Good good. But I'd also like to submit my form via an AJAX post:</p>\n\n<ul>\n<li>Using the native HTML5 File API, not flash or an iFrame solution</li>\n<li>Preferably interfacing with the low-level .ajax jQuery method</li>\n</ul>\n\n<p>I think I could imagine how to do this by auto-uploading the file when the field's value changes using pure javascript, but I'd rather do it all in one fell swoop on for submit in jQuery. I'm thinking it's not possible to do via query strings as I need to pass the entire file object, but I'm a little lost on what to do at this point. Am I chasing a unicorn here?</p>\n\n<p>Thanks so much for any help you could give.</p>\n",
            "last_activity_date": 1369812964,
            "question_id": 4006520,
            "score": 42,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "html5",
                "file-upload"
            ],
            "title": "Using HTML5 file uploads with AJAX and jQuery"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>A JSON object is simply a Javascript object.  That's actually what JSON stands for: JavaScript Object Notation.  So you'd traverse a JSON object however you'd choose to \"traverse\" a Javascript object in general.</p>\n\n<p>In jQuery, I'd do something like</p>\n\n<pre><code>$.each(myJsonObj, function(key,val){\n    // do something with key and val\n});\n</code></pre>\n\n<p>You can always write a function to recursively descend into the object:</p>\n\n<pre><code>function traverse(jsonObj) {\n    if( typeof jsonObj == \"object\" ) {\n        $.each(jsonObj, function(k,v) {\n            // k is either an array index or object key\n            traverse(v);\n        });\n    }\n    else {\n        // jsonOb is a number or string\n    }\n}\n</code></pre>\n\n<p>This should be a good starting point.  I highly recommend using jQuery for such things, since their utilities such as the each loop make writing such code much easier.</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>If you think jQuery is kind of <code>overkill</code> for such a primitive task, you could do something like that:</p>\n\n<pre><code>//your object\nvar o = { \n    foo:\"bar\",\n    arr:[1,2,3],\n    subo: {\n        foo2:\"bar2\"\n    }\n};\n\n//called with every property and it's value\nfunction process(key,value) {\n    log(key + \" : \"+value);\n}\n\nfunction traverse(o,func) {\n    for (var i in o) {\n        func.apply(this,[i,o[i]]);  \n        if (o[i] !== null &amp;&amp; typeof(o[i])==\"object\") {\n            //going on step down in the object tree!!\n            traverse(o[i],func);\n        }\n    }\n}\n\n//that's all... no magic, no bloated framework\ntraverse(o,process);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 66
                },
                {
                    "body": "<p>Depends on what you want to do. Here's an example of traversing a JavaScript object tree, printing keys and values as it goes:</p>\n\n<pre><code>function js_traverse(o) {\n    var type = typeof o \n    if (type == \"object\") {\n        for (var key in o) {\n            print(\"key: \", key)\n            js_traverse(o[key])\n        }\n    } else {\n        print(o)\n    }\n}\n\njs&gt; foobar = {foo: \"bar\", baz: \"quux\", zot: [1, 2, 3, {some: \"hash\"}]}\n[object Object]\njs&gt; js_traverse(foobar)                 \nkey:  foo\nbar\nkey:  baz\nquux\nkey:  zot\nkey:  0\n1\nkey:  1\n2\nkey:  2\n3\nkey:  3\nkey:  some\nhash\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>There's a new library for traversing JSON data with JavaScript that supports many different use cases.</p>\n\n<p><a href=\"https://npmjs.org/package/traverse\">https://npmjs.org/package/traverse</a></p>\n\n<p><a href=\"https://github.com/substack/js-traverse\">https://github.com/substack/js-traverse</a></p>\n\n<p>It works with all kinds of JavaScript objects. It even detects cycles.</p>\n\n<p>It provides the path of each node, too.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<pre><code>function traverse(o ) {\n    for (i in o) {\n        if (typeof(o[i])==\"object\") {\n            console.log(i, o[i])\n            traverse(o[i] );\n        }\n    }\n}             \n</code></pre>\n\n<p>This one is much better and easy to implement.</p>\n",
                    "is_accepted": false,
                    "score": 14
                }
            ],
            "body": "<p>I'd like to traverse a JSON object tree, but cannot find any library for that. It doesn't seem difficult but it feels like reinventing the wheel.</p>\n\n<p>In XML there are so many tutorials showing how to traverse an XML tree with DOM :(</p>\n",
            "last_activity_date": 1378114312,
            "question_id": 722668,
            "score": 35,
            "tags": [
                "javascript",
                "json",
                "frameworks"
            ],
            "title": "Traverse all the Nodes of a JSON Object Tree with JavaScript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This should work just fine for you, so long as the function <code>jsonp_callback</code> is visible in the global scope:</p>\n\n<pre><code>function jsonp_callback(data) {\n    // returning from async callbacks is (generally) meaningless\n    console.log(data.found);\n}\n\nvar url = \"http://public-api.wordpress.com/rest/v1/sites/wtmpeachtest.wordpress.com/posts?callback=jsonp_callback\";\n\n$http.jsonp(url);\n</code></pre>\n\n<p>Full demo: <a href=\"http://jsfiddle.net/mattball/a4Rc2/\" rel=\"nofollow\">http://jsfiddle.net/mattball/a4Rc2/</a> (disclaimer: I've never written any AngularJS code before)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>All you should have to do is change <code>callback=jsonp_callback</code> to <code>callback=JSON_CALLBACK</code> like so:</p>\n\n<pre><code>var url = \"http://public-api.wordpress.com/rest/v1/sites/wtmpeachtest.wordpress.com/posts?callback=JSON_CALLBACK\";\n</code></pre>\n\n<p>And then your <code>.success</code> function should fire like you have it if the return was successful.</p>\n\n<p>Doing it this way keeps you from having to dirty up the global space.</p>\n\n<p>Updated Matt Ball's fiddle to use this method: <a href=\"http://jsfiddle.net/subhaze/a4Rc2/114/\">http://jsfiddle.net/subhaze/a4Rc2/114/</a></p>\n\n<p><strong>Full example:</strong></p>\n\n<pre><code>var url = \"http://public-api.wordpress.com/rest/v1/sites/wtmpeachtest.wordpress.com/posts?callback=JSON_CALLBACK\";\n\n$http.jsonp(url)\n    .success(function(data){\n        console.log(data.found);\n    });\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 185
                },
                {
                    "body": "<p>The <strong>MOST IMPORTANT THING</strong> I didn't understand for quite awhile is that the request <strong>MUST</strong> contain \"callback=JSON_CALLBACK\", because AngularJS <em>modifies the request url</em>, substituting a unique identifier for \"JSON_CALLBACK\".  The server response must use the value of the 'callback' parameter instead of hard coding \"JSON_CALLBACK\":</p>\n\n<pre><code>JSON_CALLBACK(json_response);  // wrong!\n</code></pre>\n\n<p>Since I was writing my own PHP server script, I thought I knew what function name it wanted and didn't need to pass \"callback=JSON_CALLBACK\" in the request.  Big mistake!</p>\n\n<p>AngularJS replaces \"JSON_CALLBACK\" in the request with a unique function name (like \"callback=angular.callbacks._0\"), and the server response must return that value:</p>\n\n<pre><code>angular.callbacks._0(json_response);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>This was very helpful.  Angular doesn't work exactly like JQuery.  It has its own jsonp() method, which indeed requires \"&amp;callback=JSON_CALLBACK\" at the end of the query string.  Here's an example:</p>\n\n<pre><code>var librivoxSearch = angular.module('librivoxSearch', []);\nlibrivoxSearch.controller('librivoxSearchController', function ($scope, $http) {\n    $http.jsonp('http://librivox.org/api/feed/audiobooks/author/Melville?format=jsonp&amp;callback=JSON_CALLBACK').success(function (data) {\n        $scope.data = data;\n    });\n});\n</code></pre>\n\n<p>Then display or manipulate {{ data }} in your Angular template.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am using angular's <code>$http.jsonp()</code> request which is successfully returning json wrapped in a function:</p>\n\n<pre><code>var url = \"http://public-api.wordpress.com/rest/v1/sites/wtmpeachtest.wordpress.com/posts?callback=jsonp_callback\";\n\n$http.jsonp(url).\n    success(function(data, status, headers, config) {\n        //what do I do here?\n    }).\n    error(function(data, status, headers, config) {\n        $scope.error = true;\n    });\n</code></pre>\n\n<p>The problem is, I don't know how to access/parse the returned function-wrapped-JSON. Any guidance is much appreciated. Thanks!</p>\n",
            "last_activity_date": 1419388273,
            "question_id": 12066002,
            "score": 55,
            "tags": [
                "javascript",
                "angularjs",
                "jsonp"
            ],
            "title": "parsing JSONP $http.jsonp() response in angular.js"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You can't mix synchronous and asynchronous in JavaScript if you block the script, you block the Browser.</p>\n\n<p>You need to go the full event driven way here, luckily we can hide the ugly stuff away.</p>\n\n<p><strong>EDIT:</strong> Updated the code.</p>\n\n<pre><code>function asyncLoop(iterations, func, callback) {\n    var index = 0;\n    var done = false;\n    var loop = {\n        next: function() {\n            if (done) {\n                return;\n            }\n\n            if (index &lt; iterations) {\n                index++;\n                func(loop);\n\n            } else {\n                done = true;\n                callback();\n            }\n        },\n\n        iteration: function() {\n            return index - 1;\n        },\n\n        break: function() {\n            done = true;\n            callback();\n        }\n    };\n    loop.next();\n    return loop;\n}\n</code></pre>\n\n<p>This will provide us an asynchronous <code>loop</code>, you can of course modify it even further to take for example a function to check the loop condition etc.</p>\n\n<p>Now on to the test:  </p>\n\n<pre><code>function someFunction(a, b, callback) {\n    console.log('Hey doing some stuff!');\n    callback();\n}\n\nasyncLoop(10, function(loop) {\n    someFunction(1, 2, function(result) {\n\n        // log the iteration\n        console.log(loop.iteration());\n\n        // Okay, for cycle could continue\n        loop.next();\n    })},\n    function(){console.log('cycle ended')}\n);\n</code></pre>\n\n<p>And the output:  </p>\n\n<pre><code>Hey doing some stuff!\n0\nHey doing some stuff!\n1\nHey doing some stuff!\n2\nHey doing some stuff!\n3\nHey doing some stuff!\n4\nHey doing some stuff!\n5\nHey doing some stuff!\n6\nHey doing some stuff!\n7\nHey doing some stuff!\n8\nHey doing some stuff!\n9\ncycle ended\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 84
                },
                {
                    "body": "<p>A cleaner alternative to what @Ivo has suggested would be an <strong>Asynchronous Method Queue</strong>, assuming that you only need to make one async call for the collection.</p>\n\n<p>(See <a href=\"http://www.dustindiaz.com/async-method-queues/\" rel=\"nofollow\">this post</a> by Dustin Diaz for a more detailed explanation)</p>\n\n<pre><code>function Queue() {\n  this._methods = [];\n  this._response = null;\n  this._flushed = false;\n}\n\n(function(Q){\n\n  Q.add = function (fn) {\n    if (this._flushed) fn(this._response);\n    else this._methods.push(fn);\n  }\n\n  Q.flush = function (response) {\n    if (this._flushed) return;\n    this._response = response;\n    while (this._methods[0]) {\n      this._methods.shift()(response);\n    }\n    this._flushed = true;\n  }\n\n})(Queue.prototype);\n</code></pre>\n\n<p>You simply create a new instance of <code>Queue</code>, add the callbacks you need, and then flush the queue with the async response.</p>\n\n<pre><code>var queue = new Queue();\n\nqueue.add(function(results){\n  for (var result in results) {\n    // normal loop operation here\n  }\n});\n\nsomeFunction(param1, param2, function(results) {\n  queue.flush(results);\n}\n</code></pre>\n\n<p>An added benefit of this pattern is that you can add multiple functions to the queue instead of just one.</p>\n\n<p>If you have an object which contains iterator functions, you can add support for this queue behind the scenes and write code which looks synchronous, but isn't:</p>\n\n<pre><code>MyClass.each(function(result){ ... })\n</code></pre>\n\n<p>simply write <code>each</code> to put the anonymous function into the queue instead of executing it immediately, and then flush the queue when your async call is complete. This is a very simple and powerful design pattern.</p>\n\n<p>P.S. If you're using jQuery, you already have an async method queue at your disposal called <a href=\"http://joseoncode.com/2011/09/26/a-walkthrough-jquery-deferred-and-promise/\" rel=\"nofollow\">jQuery.Deferred</a>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I simplified this:</p>\n\n<p><strong>FUNCTION:</strong></p>\n\n<pre><code>var asyncLoop = function(o){\n    var i=-1;\n\n    var loop = function(){\n        i++;\n        if(i==o.length){o.callback(); return;}\n        o.functionToLoop(loop, i);\n    } \n    loop();//init\n}\n</code></pre>\n\n<p><strong>USAGE:</strong></p>\n\n<pre><code>asyncLoop({\n    length : 5,\n    functionToLoop : function(loop, i){\n        setTimeout(function(){\n            document.write('Iteration ' + i + ' &lt;br&gt;');\n            loop();\n        },1000);\n    },\n    callback : function(){\n        document.write('All done!');\n    }    \n});\n</code></pre>\n\n<p><strong>EXAMPLE:</strong> <a href=\"http://jsfiddle.net/NXTv7/8/\">http://jsfiddle.net/NXTv7/8/</a></p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p><a href=\"http://cuzztuts.blogspot.ro/2011/12/js-async-for-very-cool.html\" rel=\"nofollow\">http://cuzztuts.blogspot.ro/2011/12/js-async-for-very-cool.html</a></p>\n\n<p>EDIT:</p>\n\n<p>link from github: <a href=\"https://github.com/cuzzea/lib_repo/blob/master/cuzzea/js/functions/core/async_for.js\" rel=\"nofollow\">https://github.com/cuzzea/lib_repo/blob/master/cuzzea/js/functions/core/async_for.js</a></p>\n\n<pre><code>function async_for_each(object,settings){\nvar l=object.length;\n    settings.limit = settings.limit || Math.round(l/100);\n    settings.start = settings.start || 0;\n    settings.timeout = settings.timeout || 1;\n    for(var i=settings.start;i&lt;l;i++){\n        if(i-settings.start&gt;=settings.limit){\n            setTimeout(function(){\n                settings.start = i;\n                async_for_each(object,settings)\n            },settings.timeout);\n            settings.limit_callback ? settings.limit_callback(i,l) : null;\n            return false;\n        }else{\n            settings.cbk ? settings.cbk(i,object[i]) : null;\n        }\n    }\n    settings.end_cbk?settings.end_cbk():null;\n    return true;\n}\n</code></pre>\n\n<p>This function allows you to to create a percent break in the for loop using settings.limit. The limit property is just a integer, but when set as array.length * 0.1, this will make the settings.limit_callback to be called every 10%.</p>\n\n<pre><code>/*\n * params:\n *  object:         the array to parse\n *  settings_object:\n *      cbk:            function to call whenwhen object is found in array\n *                          params: i,object[i]\n *      limit_calback:  function to call when limit is reached\n *                          params: i, object_length\n *      end_cbk:        function to call when loop is finished\n *                          params: none\n *      limit:          number of iteration before breacking the for loop\n *                          default: object.length/100\n *      timeout:        time until start of the for loop(ms)\n *                          default: 1\n *      start:          the index from where to start the for loop\n *                          default: 0\n */\n</code></pre>\n\n<p>exemple:</p>\n\n<pre><code>var a = [];\na.length = 1000;\nasync_for_each(a,{\n    limit_callback:function(i,l){console.log(\"loading %s/%s - %s%\",i,l,Math.round(i*100/l))}\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>We can also use help of jquery.Deferred. in this case asyncLoop function would look like this:</p>\n\n<pre><code>asyncLoop = function(array, callback) {\n  var nextElement, thisIteration;\n  if (array.length &gt; 0) nextElement = array.pop();\n  thisIteration = callback(nextElement);\n  $.when(thisIteration).done(function(response) {\n    // here we can check value of response in order to break or whatever\n    if (array.length &gt; 0) asyncLoop(array, collection, callback);\n  });\n};\n</code></pre>\n\n<p>the callback function will look like this:</p>\n\n<pre><code>addEntry = function(newEntry) {\n  var deferred, duplicateEntry;\n  // on the next line we can perform some check, which may cause async response.\n  duplicateEntry = someCheckHere();\n  if (duplicateEntry === true) {\n    deferred = $.Deferred();\n    // here we launch some other function (e.g. $.ajax or popup window) \n    // which based on result must call deferred.resolve([opt args - response])\n    // when deferred.resolve is called \"asyncLoop\" will start new iteration\n    // example function:\n    exampleFunction(duplicateEntry, deferred);\n    return deferred;\n  } else {\n    return someActionIfNotDuplicate();\n  }\n};\n</code></pre>\n\n<p>example function that resolves deferred:</p>\n\n<pre><code>function exampleFunction(entry, deffered){\n  openModal({\n    title: \"what should we do with duplicate\"\n    options: [\n       {name:\"Replace\", action: function(){replace(entry);deffered.resolve(replace:true)}},\n       {name: \"Keep Existing\", action: function(){deffered.resolve(replace:false)}}\n    ]\n  })\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have been using the \"setTimeout(Func,0);\" trick for about year. Here is some recent research i wrote up to explain how to speed it up a bit. If you just want the answer, skip to Step 4.  Step 1 2 and 3 explain the reasoning and mechanics;</p>\n\n<pre><code>// In Depth Analysis of the setTimeout(Func,0) trick.\n\n//////// setTimeout(Func,0) Step 1 ////////////\n// setTimeout and setInterval impose a minimum \n// time limit of about 2 to 10 milliseconds.\n\n  console.log(\"start\");\n  var workCounter=0;\n  var WorkHard = function()\n  {\n    if(workCounter&gt;=2000) {console.log(\"done\"); return;}\n    workCounter++;\n    setTimeout(WorkHard,0);\n  };\n\n// this take about 9 seconds\n// that works out to be about 4.5ms per iteration\n// Now there is a subtle rule here that you can tweak\n// This minimum is counted from the time the setTimeout was executed.\n// THEREFORE:\n\n  console.log(\"start\");\n  var workCounter=0;\n  var WorkHard = function()\n  {\n    if(workCounter&gt;=2000) {console.log(\"done\"); return;}\n    setTimeout(WorkHard,0);\n    workCounter++;\n  };\n\n// This code is slightly faster because we register the setTimeout\n// a line of code earlier. Actually, the speed difference is immesurable \n// in this case, but the concept is true. Step 2 shows a measurable example.\n///////////////////////////////////////////////\n\n\n//////// setTimeout(Func,0) Step 2 ////////////\n// Here is a measurable example of the concept covered in Step 1.\n\n  var StartWork = function()\n  {\n    console.log(\"start\");\n    var startTime = new Date();\n    var workCounter=0;\n    var sum=0;\n    var WorkHard = function()\n    {\n      if(workCounter&gt;=2000) \n      {\n        var ms = (new Date()).getTime() - startTime.getTime();\n        console.log(\"done: sum=\" + sum + \" time=\" + ms + \"ms\"); \n        return;\n      }\n      for(var i=0; i&lt;1500000; i++) {sum++;}\n      workCounter++;\n      setTimeout(WorkHard,0);\n    };\n    WorkHard();\n  };\n\n// This adds some difficulty to the work instead of just incrementing a number\n// This prints \"done: sum=3000000000 time=18809ms\".\n// So it took 18.8 seconds.\n\n  var StartWork = function()\n  {\n    console.log(\"start\");\n    var startTime = new Date();\n    var workCounter=0;\n    var sum=0;\n    var WorkHard = function()\n    {\n      if(workCounter&gt;=2000) \n      {\n        var ms = (new Date()).getTime() - startTime.getTime();\n        console.log(\"done: sum=\" + sum + \" time=\" + ms + \"ms\"); \n        return;\n      }\n      setTimeout(WorkHard,0);\n      for(var i=0; i&lt;1500000; i++) {sum++;}\n      workCounter++;\n    };\n    WorkHard();\n  };\n\n// Now, as we planned, we move the setTimeout to before the difficult part\n// This prints: \"done: sum=3000000000 time=12680ms\"\n// So it took 12.6 seconds. With a little math, (18.8-12.6)/2000 = 3.1ms\n// We have effectively shaved off 3.1ms of the original 4.5ms of dead time.\n// Assuming some of that time may be attributed to function calls and variable \n// instantiations, we have eliminated the wait time imposed by setTimeout.\n\n// LESSON LEARNED: If you want to use the setTimeout(Func,0) trick with high \n// performance in mind, make sure your function takes more than 4.5ms, and set \n// the next timeout at the start of your function, instead of the end.\n///////////////////////////////////////////////\n\n\n//////// setTimeout(Func,0) Step 3 ////////////\n// The results of Step 2 are very educational, but it doesn't really tell us how to apply the\n// concept to the real world.  Step 2 says \"make sure your function takes more than 4.5ms\".\n// No one makes functions that take 4.5ms. Functions either take a few microseconds, \n// or several seconds, or several minutes. This magic 4.5ms is unattainable.\n\n// To solve the problem, we introduce the concept of \"Burn Time\".\n// Lets assume that you can break up your difficult function into pieces that take \n// a few milliseconds or less to complete. Then the concept of Burn Time says, \n// \"crunch several of the individual pieces until we reach 4.5ms, then exit\"\n\n// Step 1 shows a function that is asyncronous, but takes 9 seconds to run. In reality\n// we could have easilly incremented workCounter 2000 times in under a millisecond.\n// So, duh, that should not be made asyncronous, its horrible. But what if you don't know\n// how many times you need to increment the number, maybe you need to run the loop 20 times,\n// maybe you need to run the loop 2 billion times.\n\n  console.log(\"start\");\n  var startTime = new Date();\n  var workCounter=0;\n  for(var i=0; i&lt;2000000000; i++) // 2 billion\n  {\n    workCounter++;\n  }\n  var ms = (new Date()).getTime() - startTime.getTime();\n  console.log(\"done: workCounter=\" + workCounter + \" time=\" + ms + \"ms\"); \n\n// prints: \"done: workCounter=2000000000 time=7214ms\"\n// So it took 7.2 seconds. Can we break this up into smaller pieces? Yes.\n// I know, this is a retarded example, bear with me.\n\n  console.log(\"start\");\n  var startTime = new Date();\n  var workCounter=0;\n  var each = function()\n  {\n    workCounter++;\n  };\n  for(var i=0; i&lt;20000000; i++) // 20 million\n  {\n    each();\n  }\n  var ms = (new Date()).getTime() - startTime.getTime();\n  console.log(\"done: workCounter=\" + workCounter + \" time=\" + ms + \"ms\"); \n\n// The easiest way is to break it up into 2 billion smaller pieces, each of which take \n// only several picoseconds to run. Ok, actually, I am reducing the number from 2 billion\n// to 20 million (100x less).  Just adding a function call increases the complexity of the loop\n// 100 fold. Good lesson for some other topic.\n// prints: \"done: workCounter=20000000 time=7648ms\"\n// So it took 7.6 seconds, thats a good starting point.\n// Now, lets sprinkle in the async part with the burn concept\n\n  console.log(\"start\");\n  var startTime = new Date();\n  var workCounter=0;\n  var index=0;\n  var end = 20000000;\n  var each = function()\n  {\n    workCounter++;\n  };\n  var Work = function()\n  {\n    var burnTimeout = new Date();\n    burnTimeout.setTime(burnTimeout.getTime() + 4.5); // burnTimeout set to 4.5ms in the future\n    while((new Date()) &lt; burnTimeout)\n    {\n      if(index&gt;=end) \n      {\n        var ms = (new Date()).getTime() - startTime.getTime();\n        console.log(\"done: workCounter=\" + workCounter + \" time=\" + ms + \"ms\"); \n        return;\n      }\n      each();\n      index++;\n    }\n    setTimeout(Work,0);\n  };\n\n// prints \"done: workCounter=20000000 time=107119ms\"\n// Sweet Jesus, I increased my 7.6 second function to 107.1 seconds.\n// But it does prevent the browser from locking up, So i guess thats a plus.\n// Again, the actual objective here is just to increment workCounter, so the overhead of all\n// the async garbage is huge in comparison. \n// Anyway, Lets start by taking advice from Step 2 and move the setTimeout above the hard part. \n\n  console.log(\"start\");\n  var startTime = new Date();\n  var workCounter=0;\n  var index=0;\n  var end = 20000000;\n  var each = function()\n  {\n    workCounter++;\n  };\n  var Work = function()\n  {\n    if(index&gt;=end) {return;}\n    setTimeout(Work,0);\n    var burnTimeout = new Date();\n    burnTimeout.setTime(burnTimeout.getTime() + 4.5); // burnTimeout set to 4.5ms in the future\n    while((new Date()) &lt; burnTimeout)\n    {\n      if(index&gt;=end) \n      {\n        var ms = (new Date()).getTime() - startTime.getTime();\n        console.log(\"done: workCounter=\" + workCounter + \" time=\" + ms + \"ms\"); \n        return;\n      }\n      each();\n      index++;\n    }\n  };\n\n// This means we also have to check index right away because the last iteration will have nothing to do\n// prints \"done: workCounter=20000000 time=52892ms\"  \n// So, it took 52.8 seconds. Improvement, but way slower than the native 7.6 seconds.\n// The Burn Time is the number you tweak to get a nice balance between native loop speed\n// and browser responsiveness. Lets change it from 4.5ms to 50ms, because we don't really need faster\n// than 50ms gui response.\n\n  console.log(\"start\");\n  var startTime = new Date();\n  var workCounter=0;\n  var index=0;\n  var end = 20000000;\n  var each = function()\n  {\n    workCounter++;\n  };\n  var Work = function()\n  {\n    if(index&gt;=end) {return;}\n    setTimeout(Work,0);\n    var burnTimeout = new Date();\n    burnTimeout.setTime(burnTimeout.getTime() + 50); // burnTimeout set to 50ms in the future\n    while((new Date()) &lt; burnTimeout)\n    {\n      if(index&gt;=end) \n      {\n        var ms = (new Date()).getTime() - startTime.getTime();\n        console.log(\"done: workCounter=\" + workCounter + \" time=\" + ms + \"ms\"); \n        return;\n      }\n      each();\n      index++;\n    }\n  };\n\n// prints \"done: workCounter=20000000 time=52272ms\"\n// So it took 52.2 seconds. No real improvement here which proves that the imposed limits of setTimeout\n// have been eliminated as long as the burn time is anything over 4.5ms\n///////////////////////////////////////////////\n\n\n//////// setTimeout(Func,0) Step 4 ////////////\n// The performance numbers from Step 3 seem pretty grim, but GUI responsiveness is often worth it.\n// Here is a short library that embodies these concepts and gives a descent interface.\n\n  var WilkesAsyncBurn = function()\n  {\n    var Now = function() {return (new Date());};\n    var CreateFutureDate = function(milliseconds)\n    {\n      var t = Now();\n      t.setTime(t.getTime() + milliseconds);\n      return t;\n    };\n    var For = function(start, end, eachCallback, finalCallback, msBurnTime)\n    {\n      var i = start;\n      var Each = function()\n      {\n        if(i==-1) {return;} //always does one last each with nothing to do\n        setTimeout(Each,0);\n        var burnTimeout = CreateFutureDate(msBurnTime);\n        while(Now() &lt; burnTimeout)\n        {\n          if(i&gt;=end) {i=-1; finalCallback(); return;}\n          eachCallback(i);\n          i++;\n        }\n      };\n      Each();\n    };\n    var ForEach = function(array, eachCallback, finalCallback, msBurnTime)\n    {\n      var i = 0;\n      var len = array.length;\n      var Each = function()\n      {\n        if(i==-1) {return;}\n        setTimeout(Each,0);\n        var burnTimeout = CreateFutureDate(msBurnTime);\n        while(Now() &lt; burnTimeout)\n        {\n          if(i&gt;=len) {i=-1; finalCallback(array); return;}\n          eachCallback(i, array[i]);\n          i++;\n        }\n      };\n      Each();\n    };\n\n    var pub = {};\n    pub.For = For;          //eachCallback(index); finalCallback();\n    pub.ForEach = ForEach;  //eachCallback(index,value); finalCallback(array);\n    WilkesAsyncBurn = pub;\n  };\n\n///////////////////////////////////////////////\n\n\n//////// setTimeout(Func,0) Step 5 ////////////\n// Here is an examples of how to use the library from Step 4.\n\n  WilkesAsyncBurn(); // Init the library\n  console.log(\"start\");\n  var startTime = new Date();\n  var workCounter=0;\n  var FuncEach = function()\n  {\n    if(workCounter%1000==0)\n    {\n      var s = \"&lt;div&gt;&lt;/div&gt;\";\n      var div = jQuery(\"*[class~=r1]\");\n      div.append(s);\n    }\n    workCounter++;\n  };\n  var FuncFinal = function()\n  {\n    var ms = (new Date()).getTime() - startTime.getTime();\n    console.log(\"done: workCounter=\" + workCounter + \" time=\" + ms + \"ms\"); \n  };\n  WilkesAsyncBurn.For(0,2000000,FuncEach,FuncFinal,50);\n\n// prints: \"done: workCounter=20000000 time=149303ms\"\n// Also appends a few thousand divs to the html page, about 20 at a time.\n// The browser is responsive the entire time, mission accomplished\n\n// LESSON LEARNED: If your code pieces are super tiny, like incrementing a number, or walking through \n// an array summing the numbers, then just putting it in an \"each\" function is going to kill you. \n// You can still use the concept here, but your \"each\" function should also have a for loop in it \n// where you burn a few hundred items manually.  \n///////////////////////////////////////////////\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Given an asynchronous worker function <code>someFunction</code> that will call back a result function with a <code>result</code> argument saying whether or not the loop should continue:</p>\n\n<pre><code>// having:\n// function someFunction(param1, praram2, resultfunc))\n// function done() { alert(\"For cycle ended\"); }\n\n(function(f){ f(f) })(function(f){\n  someFunction(\"param1\", \"praram2\", function(result){\n    if (result)\n      f(f); // loop continues\n    else\n      done(); // loop ends\n  });\n})\n</code></pre>\n\n<p>In order to check whether or not to end the loop, the worker function <code>someFunction</code> can forward the result function to other asynchronous operations. Also, the whole expression can be encapsulated into an asynchronous function by taking a function <code>done</code> as callback.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Also look at this splendid library <a href=\"https://github.com/caolan/async\" rel=\"nofollow\">caolan / async</a>. Your <code>for</code> loop can easily be accomplished using <a href=\"https://github.com/caolan/async#mapseriesarr-iterator-callback\" rel=\"nofollow\">mapSeries</a> or <a href=\"https://github.com/caolan/async#series\" rel=\"nofollow\">series</a>.</p>\n\n<p>I could post some sample code if your example had more details in it.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How could I do this...? Do you have any ideas? Thank you.</p>\n\n<pre><code>for ( /* ... */ ) {\n\n  someFunction(param1, praram2, function(result) {\n\n    // Okay, for cycle could continue\n\n  })\n\n}\n\nalert(\"For cycle ended\");\n</code></pre>\n",
            "last_activity_date": 1382624311,
            "question_id": 4288759,
            "score": 35,
            "tags": [
                "javascript"
            ],
            "title": "Asynchronous for cycle in JavaScript"
        },
        {
            "answer_count": 22,
            "answers": [
                {
                    "body": "<p>using object notation</p>\n\n<pre><code>var x = [];\n</code></pre>\n\n<p>zero filled? like...</p>\n\n<pre><code>var x = [0,0,0,0,0,0];\n</code></pre>\n\n<p>filled with 'undefined'...</p>\n\n<pre><code>var x = new Array(7);\n</code></pre>\n\n<p>obj notation with zeros</p>\n\n<pre><code>var x = [];\nfor (var i = 0; i &lt; 10; i++) x[i] = 0;\n</code></pre>\n\n<p>As a side note, if you modify Array's prototype, both</p>\n\n<pre><code>var x = new Array();\n</code></pre>\n\n<p>and</p>\n\n<pre><code>var y = [];\n</code></pre>\n\n<p>will have those prototype modifications</p>\n\n<p>At any rate, I wouldn't be overly concerned with the efficiency or speed of this operation, there are plenty of other things that you will likely be doing that are far more wasteful and expensive than instanciating an array of arbitrary length containing zeros.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<pre><code>function makeArrayOf(value, length) {\n  var arr = [], i = length;\n  while (i--) {\n    arr[i] = value;\n  }\n  return arr;\n}\n\nmakeArrayOf(0, 5); // [0, 0, 0, 0, 0]\n\nmakeArrayOf('x', 3); // ['x', 'x', 'x']\n</code></pre>\n\n<p>Note that <code>while</code> is usually more efficient than <code>for-in</code>, <code>forEach</code>, etc.</p>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p><em>Note added August 2013, updated February 2015: The answer below from 2009 relates to JavaScript's generic <code>Array</code> type. It doesn't relate to the newer <strong>typed</strong> arrays being defined in ES6 [and available now in many browsers], like <code>Int32Array</code> and such. Also note that ES6 adds/will add a <code>fill</code> method to both <a href=\"https://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.fill\" rel=\"nofollow\">Arrays</a> and <a href=\"https://people.mozilla.org/~jorendorff/es6-draft.html#sec-%typedarray%.prototype.fill\" rel=\"nofollow\">typed arrays</a>, which is likely to be the most efficient way to fill them...</em></p>\n\n<p><em>Also, it can make a big difference to some implementations how you create the array. Chrome's V8 engine, in particular, tries to use a highly-efficient, contiguous-memory array if it thinks it can, shifting to the object-based array only when necessary.</em></p>\n\n<hr>\n\n<p>With most languages, it would be pre-allocate, then zero-fill, like this:</p>\n\n<pre><code>function newFilledArray(len, val) {\n    var rv = new Array(len);\n    while (--len &gt;= 0) {\n        rv[len] = val;\n    }\n    return rv;\n}\n</code></pre>\n\n<p><strong>But</strong>, JavaScript arrays <a href=\"http://blog.niftysnippets.org/2011/01/myth-of-arrays.html\" rel=\"nofollow\">aren't really arrays</a>, they're key/value maps just like all other JavaScript objects, so there's no \"pre-allocate\" to do (setting the length doesn't allocate that many slots to fill), nor is there any reason to believe that the benefit of counting down to zero (which is just to make the comparison in the loop fast) isn't outweighed by adding the keys in reverse order when the implementation may well have optimized their handling of the keys related to arrays on the theory you'll generally do them in order.</p>\n\n<p>In fact, Matthew Crumley pointed out that counting down is markedly slower on Firefox than counting up, a result I can confirm&nbsp;&mdash; it's the array part of it (looping down to zero is still faster than looping up to a limit in a var). Apparently adding the elements to the array in reverse order is a slow op on Firefox. In fact, the results vary quite a bit by JavaScript implementation (which isn't all that surprising). Here's a quick and dirty test page (below) for browser implementations (very dirty, doesn't yield during tests, so provides minimal feedback and will run afoul of script time limits). I recommend refreshing between tests; FF (at least) slows down on repeated tests if you don't.</p>\n\n<p>The fairly complicated version that uses Array#concat is faster than a straight init on FF as of somewhere between 1,000 and 2,000 element arrays.  On Chrome's V8 engine, though, straight init wins out every time...</p>\n\n<p>Here's the test page (<a href=\"http://jsbin.com/osijop\" rel=\"nofollow\">live copy</a>):</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\"&gt;\n&lt;title&gt;Zero Init Test Page&lt;/title&gt;\n&lt;style type='text/css'&gt;\nbody {\n    font-family:    sans-serif;\n}\n#log p {\n    margin:     0;\n    padding:    0;\n}\n.error {\n    color:      red;\n}\n.winner {\n    color:      green;\n    font-weight:    bold;\n}\n&lt;/style&gt;\n&lt;script type='text/javascript' src='prototype-1.6.0.3.js'&gt;&lt;/script&gt;\n&lt;script type='text/javascript'&gt;\nvar testdefs = {\n    'downpre':  {\n        total:  0,\n        desc:   \"Count down, pre-decrement\",\n        func:   makeWithCountDownPre\n    },\n    'downpost': {\n        total:  0,\n        desc:   \"Count down, post-decrement\",\n        func:   makeWithCountDownPost\n    },\n    'up':       {\n        total:  0,\n        desc:   \"Count up (normal)\",\n        func:   makeWithCountUp\n    },\n    'downandup':  {\n        total:  0,\n        desc:   \"Count down (for loop) and up (for filling)\",\n        func:   makeWithCountDownArrayUp\n    },\n    'concat':   {\n        total:  0,\n        desc:   \"Concat\",\n        func:   makeWithConcat\n    }\n};\n\ndocument.observe('dom:loaded', function() {\n    var markup, defname;\n\n    markup = \"\";\n    for (defname in testdefs) {\n        markup +=\n            \"&lt;div&gt;&lt;input type='checkbox' id='chk_\" + defname + \"' checked&gt;\" +\n            \"&lt;label for='chk_\" + defname + \"'&gt;\" + testdefs[defname].desc + \"&lt;/label&gt;&lt;/div&gt;\";\n    }\n    $('checkboxes').update(markup);\n    $('btnTest').observe('click', btnTestClick);\n});\n\nfunction epoch() {\n    return (new Date()).getTime();\n}\n\nfunction btnTestClick() {\n\n    // Clear log\n    $('log').update('Testing...');\n\n    // Show running\n    $('btnTest').disabled = true;\n\n    // Run after a pause while the browser updates display\n    btnTestClickPart2.defer();\n}\nfunction btnTestClickPart2() {\n\n    try {\n        runTests();\n    }\n    catch (e) {\n        log(\"Exception: \" + e);\n    }\n\n    // Re-enable the button; we don't yheidl\n    $('btnTest').disabled = false;\n}\n\nfunction runTests() {\n    var start, time, counter, length, defname, def, results, a, invalid, lowest, s;\n\n    // Get loops and length\n    s = $F('txtLoops');\n    runcount = parseInt(s);\n    if (isNaN(runcount) || runcount &lt;= 0) {\n        log(\"Invalid loops value '\" + s + \"'\");\n        return;\n    }\n    s = $F('txtLength');\n    length = parseInt(s);\n    if (isNaN(length) || length &lt;= 0) {\n        log(\"Invalid length value '\" + s + \"'\");\n        return;\n    }\n\n    // Clear log\n    $('log').update('');\n\n    // Do it\n    for (counter = 0; counter &lt;= runcount; ++counter) {\n\n        for (defname in testdefs) {\n            def = testdefs[defname];\n            if ($('chk_' + defname).checked) {\n                start = epoch();\n                a = def.func(length);\n                time = epoch() - start;\n                if (counter == 0) {\n                    // Don't count (warm up), but do check the algorithm works\n                    invalid = validateResult(a, length);\n                    if (invalid) {\n                        log(\"&lt;span class='error'&gt;FAILURE&lt;/span&gt; with def \" + defname + \": \" + invalid);\n                        return;\n                    }\n                }\n                else {\n                    // Count this one\n                    log(\"#\" + counter + \": \" + def.desc + \": \" + time + \"ms\");\n                    def.total += time;\n                }\n            }\n        }\n    }\n\n    for (defname in testdefs) {\n        def = testdefs[defname];\n        if ($('chk_' + defname).checked) {\n            def.avg = def.total / runcount;\n            if (typeof lowest != 'number' || lowest &gt; def.avg) {\n                lowest = def.avg;\n            }\n        }\n    }\n\n    results =\n        \"&lt;p&gt;Results:\" +\n        \"&lt;br&gt;Length: \" + length +\n        \"&lt;br&gt;Loops: \" + runcount +\n        \"&lt;/p&gt;\";\n    for (defname in testdefs) {\n        def = testdefs[defname];\n        if ($('chk_' + defname).checked) {\n            results += \"&lt;p\" + (lowest == def.avg ? \" class='winner'\" : \"\") + \"&gt;\" + def.desc + \", average time: \" + def.avg + \"ms&lt;/p&gt;\";\n        }\n    }\n    results += \"&lt;hr&gt;\";\n    $('log').insert({top: results});\n}\n\nfunction validateResult(a, length) {\n    var n;\n\n    if (a.length != length) {\n        return \"Length is wrong\";\n    }\n    for (n = length - 1; n &gt;= 0; --n) {\n        if (a[n] != 0) {\n            return \"Index \" + n + \" is not zero\";\n        }\n    }\n    return undefined;\n}\n\nfunction makeWithCountDownPre(len) {\n    var a;\n\n    a = new Array(len);\n    while (--len &gt;= 0) {\n        a[len] = 0;\n    }\n    return a;\n}\n\nfunction makeWithCountDownPost(len) {\n    var a;\n\n    a = new Array(len);\n    while (len-- &gt; 0) {\n        a[len] = 0;\n    }\n    return a;\n}\n\nfunction makeWithCountUp(len) {\n    var a, i;\n\n    a = new Array(len);\n    for (i = 0; i &lt; len; ++i) {\n        a[i] = 0;\n    }\n    return a;\n}\n\nfunction makeWithCountDownArrayUp(len) {\n    var a, i;\n\n    a = new Array(len);\n    i = 0;\n    while (--len &gt;= 0) {\n        a[i++] = 0;\n    }\n    return a;\n}\n\nfunction makeWithConcat(len) {\n    var a, rem, currlen;\n\n    if (len == 0) {\n        return [];\n    }\n    a = [0];\n    currlen = 1;\n    while (currlen &lt; len) {\n        rem = len - currlen;\n        if (rem &lt; currlen) {\n            a = a.concat(a.slice(0, rem));\n        }\n        else {\n            a = a.concat(a);\n        }\n        currlen = a.length;\n    }\n    return a;\n}\n\nfunction log(msg) {\n    $('log').appendChild(new Element('p').update(msg));\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;&lt;div&gt;\n&lt;label for='txtLength'&gt;Length:&lt;/label&gt;&lt;input type='text' id='txtLength' value='10000'&gt;\n&lt;br&gt;&lt;label for='txtLoops'&gt;Loops:&lt;/label&gt;&lt;input type='text' id='txtLoops' value='10'&gt;\n&lt;div id='checkboxes'&gt;&lt;/div&gt;\n&lt;br&gt;&lt;input type='button' id='btnTest' value='Test'&gt;\n&lt;hr&gt;\n&lt;div id='log'&gt;&lt;/div&gt;\n&lt;/div&gt;&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<pre><code>var str = \"0000000...0000\";\nvar arr = str.split(\"\");\n</code></pre>\n\n<p>usage in expressions: arr[i]*1;</p>\n\n<p>EDIT: if <code>arr</code> supposed to be used in integer expressions, then please don't mind the char value of '0'. You just use it as follows:   <code>a = a * arr[i]</code> (assuming <code>a</code> has integer value). </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I knew I had this proto'd somewhere :)</p>\n\n<pre><code>Array.prototype.init = function(x,n)\n{\n    if(typeof(n)=='undefined') { n = this.length; }\n    while (n--) { this[n] = x; }\n    return this;\n}\n\nvar a = (new Array(5)).init(0);\n\nvar b = [].init(0,4);\n</code></pre>\n\n<p>Edit: tests</p>\n\n<p>In response to Joshua and others methods I ran my own benchmarking, and I'm seeing completely different results to those reported.</p>\n\n<p>Here's what I tested:</p>\n\n<pre><code>//my original method\nArray.prototype.init = function(x,n)\n{\n    if(typeof(n)=='undefined') { n = this.length; }\n    while (n--) { this[n] = x; }\n    return this;\n}\n\n//now using push which I had previously thought to be slower than direct assignment\nArray.prototype.init2 = function(x,n)\n{\n    if(typeof(n)=='undefined') { n = this.length; }\n    while (n--) { this.push(x); }\n    return this;\n}\n\n//joshua's method\nfunction newFilledArray(len, val) {\n    var a = [];\n    while(len--){\n    \ta.push(val);\n    }\n    return a;\n}\n\n//test m1 and m2 with short arrays many times 10K * 10\n\nvar a = new Date();\nfor(var i=0; i&lt;10000; i++)\n{\n    var t1 = [].init(0,10);\n}\nvar A = new Date();\n\nvar b = new Date();\nfor(var i=0; i&lt;10000; i++)\n{\n    var t2 = [].init2(0,10);\n}\nvar B = new Date();\n\n//test m1 and m2 with long array created once 100K\n\nvar c = new Date();\nvar t3 = [].init(0,100000);\nvar C = new Date();\n\nvar d = new Date();\nvar t4 = [].init2(0,100000);\nvar D = new Date();\n\n//test m3 with short array many times 10K * 10\n\nvar e = new Date();\nfor(var i=0; i&lt;10000; i++)\n{\n    var t5 = newFilledArray(10,0);\n}\nvar E = new Date();\n\n//test m3 with long array created once 100K\n\nvar f = new Date();\nvar t6 = newFilledArray(100000, 0)\nvar F = new Date();\n</code></pre>\n\n<p>Results:</p>\n\n<pre><code>IE7 deltas:\ndA=156\ndB=359\ndC=125\ndD=375\ndE=468\ndF=412\n\nFF3.5 deltas:\ndA=6\ndB=13\ndC=63\ndD=8\ndE=12\ndF=8\n</code></pre>\n\n<p>So by my reckoning push is indeed slower generally but performs better with longer arrays in FF but worse in IE which just sucks in general (quel surprise).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I've tested all combinations of pre-allocating/not pre-allocating, counting up/down, and for/while loops in IE 6/7/8, Firefox 3.5, Chrome, and Opera.</p>\n\n<p>The functions below was consistently the fastest or extremely close in Firefox, Chrome, and IE8, and not much slower than the fastest in Opera and IE 6. It's also the simplest and clearest in my opinion. I've found several browsers where the while loop version is slightly faster, so I'm including it too for reference.</p>\n\n<pre><code>function newFilledArray(length, val) {\n    var array = [];\n    for (var i = 0; i &lt; length; i++) {\n        array[i] = val;\n    }\n    return array;\n}\n</code></pre>\n\n<p>or</p>\n\n<pre><code>function newFilledArray(length, val) {\n    var array = [];\n    var i = 0;\n    while (i &lt; length) {\n        array[i++] = val;\n    }\n    return array;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>My fastest function would be:</p>\n\n<pre><code>function newFilledArray(len, val) {\n    var a = [];\n    while(len--){\n        a.push(val);\n    }\n    return a;\n}\n\nvar st = (new Date()).getTime();\nnewFilledArray(1000000, 0)\nconsole.log((new Date()).getTime() - st); // returned 63, 65, 62 milliseconds\n</code></pre>\n\n<p>Using the native push and shift to add items to the array is much faster (about 10 times) than declaring the array scope and referencing each item to set it's value.</p>\n\n<p>fyi: I consistently get faster times with the first loop, which is counting down, when running this in firebug (firefox extension).</p>\n\n<pre><code>var a = [];\nvar len = 1000000;\nvar st = (new Date()).getTime();\nwhile(len){\n    a.push(0);\n    len -= 1;\n}\nconsole.log((new Date()).getTime() - st); // returned 863, 894, 875 milliseconds\nst = (new Date()).getTime();\nlen = 1000000;\na = [];\nfor(var i = 0; i &lt; len; i++){\n    a.push(0);\n}\nconsole.log((new Date()).getTime() - st); // returned 1155, 1179, 1163 milliseconds\n</code></pre>\n\n<p>I'm interested to know what T.J. Crowder makes of that ? :-)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The fastest way to do that is with forEach =)</p>\n\n<p>(we keep backward compatibility for IE &lt; 9)</p>\n\n<pre><code>var fillArray = Array.prototype.forEach\n    ? function(arr, n) {\n         arr.forEach(function(_, index) { arr[index] = n; });\n         return arr;\n      }\n    : function(arr, n) {\n         var len = arr.length;\n         arr.length = 0;\n         while(len--) arr.push(n);\n         return arr;\n      };\n\n// test\nfillArray([1,2,3], 'X'); // =&gt; ['X', 'X', 'X']\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you need to create many zero filled arrays of different lengths during the execution of your code, the fastest way I've found to achieve this is to create a zero array <strong>once</strong>, using one of the methods mentioned on this topic, of a length which you know will never be exceeded, and then slice that array as necessary.</p>\n\n<p>For example (using the function from the chosen answer above to initialize the array), create a zero filled array of length <em>maxLength</em>, as a variable visible to the code that needs zero arrays:</p>\n\n<pre><code>var zero = newFilledArray(maxLength, 0);\n</code></pre>\n\n<p>Now slice this array everytime you need a zero filled array of length <em>requiredLength</em> &lt; <em>maxLength</em>:</p>\n\n<pre><code>zero.slice(0, requiredLength);\n</code></pre>\n\n<p>I was creating zero filled arrays thousands of times during execution of my code, this speeded up the process tremendously.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>What about <code>new Array(51).join('0').split('')</code>?</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>function zeroFilledArray(size) {\n    return new Array(size + 1).join('0').split('');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Although this is an old thread, I wanted to add my 2 cents to it. Not sure how slow/fast this is, but it's a quick one liner. Here is what I do:</p>\n\n<p>If I want to pre-fill with a number:</p>\n\n<pre><code>Array.apply(null, new Array(5)).map(Number.prototype.valueOf,0);\n// [0, 0, 0, 0, 0]\n</code></pre>\n\n<p>If I want to pre-fill with a string:</p>\n\n<pre><code>Array.apply(null, new Array(3)).map(String.prototype.valueOf,\"hi\")\n// [\"hi\", \"hi\", \"hi\"]\n</code></pre>\n\n<hr>\n\n<p>Other answers have suggested:</p>\n\n<pre><code>new Array(5+1).join('0').split('')\n// [\"0\", \"0\", \"0\", \"0\", \"0\"]\n</code></pre>\n\n<p>but if you want 0 (the number) and not \"0\" (zero inside a string), you can:</p>\n\n<pre><code>new Array(5+1).join('0').split('').map(parseFloat)\n// [0, 0, 0, 0, 0]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 137
                },
                {
                    "body": "<p>This <code>concat</code> version is much faster in my tests on Chrome (2013-03-21). About 200ms for 10,000,000 elements vs 675 for straight init.</p>\n\n<pre><code>function filledArray(len, value) {\n    if (len &lt;= 0) return [];\n    var result = [value];\n    while (result.length &lt; len/2) {\n        result = result.concat(result);\n    }\n    return result.concat(result.slice(0, len-result.length));\n}\n</code></pre>\n\n<p><strong>Bonus:</strong> if you want to fill your array with Strings, this is a concise way to do it (not quite as fast as <code>concat</code> though):</p>\n\n<pre><code>function filledArrayString(len, value) {\n    return new Array(len+1).join(value).split('');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There's always the phpjs solution, which you can find here:</p>\n\n<p><a href=\"http://phpjs.org/functions/array_fill/\" rel=\"nofollow\">http://phpjs.org/functions/array_fill/</a></p>\n\n<p>I can't speak for the project (creating a library of javascript functions that mirrors the greater functionality of php) as a whole, but the few functions that I've personally pulled from there have worked like a champ.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I was testing out the great answer by T.J. Crowder, and came up with a recursive merge based on the concat solution that outperforms any in his tests in Chrome (i didn't test other browsers).</p>\n\n<pre><code>function makeRec(len, acc) {\n    if (acc == null) acc = [];\n    if (len &lt;= 1) return acc;\n    var b = makeRec(len &gt;&gt; 1, [0]);\n    b = b.concat(b);\n    if (len &amp; 1) b = b.concat([0]);\n    return b;\n},\n</code></pre>\n\n<p>call the method with <code>makeRec(29)</code>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I just use :</p>\n\n<pre><code>var arr = [10];\nfor (var i=0; i&lt;=arr.length;arr[i] = i, i++);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can check if index exist or not exist, in order to append +1 to it.</p>\n\n<p>this way you don't need a zeros filled array.</p>\n\n<p>EXAMPLE:</p>\n\n<pre><code>var current_year = new Date().getFullYear();\nvar ages_array = new Array();\n\nfor (var i in data) {\n    if(data[i]['BirthDate'] != null &amp;&amp; data[i]['BirthDate'] != '0000-00-00'){\n\n        var birth = new Date(data[i]['BirthDate']);\n        var birth_year = birth.getFullYear();\n        var age = current_year - birth_year;\n\n        if(ages_array[age] == null){\n            ages_array[age] = 1;\n        }else{\n            ages_array[age] += 1;\n        }\n\n    }\n}\n\nconsole.log(ages_array);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The way I usually do it (and is amazing fast) is using <code>Uint8Array</code>. For example, creating a zero filled vector of 1M elements:</p>\n\n<pre><code>  var zeroFilled = [].slice.apply(new Uint8Array(1000000))\n</code></pre>\n\n<p>I'm a Linux user and always have worked for me, but once a friend using a Mac had some non-zero elements. I thought his machine was malfunctioning, but still here's the safest way we found to fix it:</p>\n\n<pre><code>  var zeroFilled = [].slice.apply(new Uint8Array(new Array(1000000)) \n</code></pre>\n\n<p><strong>Edited</strong></p>\n\n<p><em>Chrome 25.0.1364.160</em></p>\n\n<ol>\n<li>Frederik Gottlieb - 6.43</li>\n<li>Sam Barnum - 4.83</li>\n<li>Eli - 3.68</li>\n<li>Joshua 2.91</li>\n<li>Mathew Crumley - 2.67</li>\n<li>bduran - 2.55</li>\n<li>Allen Rice - 2.11</li>\n<li>kangax - 0.68</li>\n<li>Tj. Crowder - 0.67</li>\n<li>zertosh - ERROR</li>\n</ol>\n\n<p><em>Firefox 20.0</em></p>\n\n<ol>\n<li>Allen Rice - 1.85</li>\n<li>Joshua - 1.82</li>\n<li>Mathew Crumley - 1.79</li>\n<li>bduran - 1.37</li>\n<li>Frederik Gottlieb - 0.67</li>\n<li>Sam Barnum - 0.63</li>\n<li>Eli - 0.59</li>\n<li>kagax - 0.13</li>\n<li>Tj. Crowder - 0.13</li>\n<li>zertosh - ERROR</li>\n</ol>\n\n<p>Missing the most important test (at least for me): the Node.js one. I suspect it close to Chrome benchmark.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>By default <code>Uint8Array</code>, <code>Uint16Array</code> and <code>Uint32Array</code> classes keep zeros as its values, so you don't need any complex filling techniques, just:</p>\n\n<pre><code>var ary = Uint8Array(10); \n</code></pre>\n\n<p>all elements of array <code>ary</code> will be zeros by default.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Using <a href=\"http://lodash.com/docs#range\" rel=\"nofollow\">lodash</a> or <a href=\"http://underscorejs.org/#range\" rel=\"nofollow\">underscore</a></p>\n\n<pre><code>_.range(0, length - 1, 0);\n</code></pre>\n\n<p>Or if you have an array existing and you want an array of the same length</p>\n\n<pre><code>array.map(_.constant(0));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>ES6 introduces <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\"><code>Array.prototype.fill</code></a>. It can be used like this:</p>\n\n<pre><code>new Array(len).fill(0);\n</code></pre>\n\n<p>Not sure if it's fast, but I like it because it's short and self-describing.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>It might be worth pointing out, that <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\" rel=\"nofollow\"><code>Array.prototype.fill</code></a> had been added as part of the <a href=\"http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.fill\" rel=\"nofollow\"><strong>ECMAScript 6 (Harmony) proposal</strong></a>. I would rather go with the polyfill written below, before considering other options mentioned on the thread.</p>\n\n<pre><code>if (!Array.prototype.fill) {\n  Array.prototype.fill = function(value) {\n\n    // Steps 1-2.\n    if (this == null) {\n      throw new TypeError('this is null or not defined');\n    }\n\n    var O = Object(this);\n\n    // Steps 3-5.\n    var len = O.length &gt;&gt;&gt; 0;\n\n    // Steps 6-7.\n    var start = arguments[1];\n    var relativeStart = start &gt;&gt; 0;\n\n    // Step 8.\n    var k = relativeStart &lt; 0 ?\n      Math.max(len + relativeStart, 0) :\n      Math.min(relativeStart, len);\n\n    // Steps 9-10.\n    var end = arguments[2];\n    var relativeEnd = end === undefined ?\n      len : end &gt;&gt; 0;\n\n    // Step 11.\n    var final = relativeEnd &lt; 0 ?\n      Math.max(len + relativeEnd, 0) :\n      Math.min(relativeEnd, len);\n\n    // Step 12.\n    while (k &lt; final) {\n      O[k] = value;\n      k++;\n    }\n\n    // Step 13.\n    return O;\n  };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What is the most efficient way to create an arbitrary length zero filled array in JavaScript?</p>\n",
            "last_activity_date": 1424859062,
            "question_id": 1295584,
            "score": 133,
            "tags": [
                "javascript",
                "arrays"
            ],
            "title": "Most efficient way to create a zero filled JavaScript array?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>JavaScript is single-threaded, and all the time you work on a normal synchronous code-flow execution.</p>\n\n<p>Good examples of the asynchronous behavior that JavaScript can have are events (user interaction, Ajax request results, etc) and timers, basically actions that might happen at any time.</p>\n\n<p>I would recommend you to give a look to the following article:</p>\n\n<ul>\n<li><a href=\"http://ejohn.org/blog/how-javascript-timers-work/\" rel=\"nofollow\">How JavaScript Timers Work</a></li>\n</ul>\n\n<p>That article will help you to understand the single-threaded nature of JavaScript and how timers work internally and how asynchronous JavaScript execution works.</p>\n\n<p><img src=\"http://ejohn.org/files/427px-Timers.png\" alt=\"async\"></p>\n",
                    "is_accepted": false,
                    "score": 52
                },
                {
                    "body": "<p>Javascript is always synchronous and single-threaded meaning if you're executing a Javascript block of code on a page then no other Javascript on that page will currently be executed.</p>\n\n<p>Javascript is only asynchronous in the sense that it can make, for example, AJAX calls. The code will stop executing until the call returns (successfully or in error), at which point the callback will run synchronously. No other code will be running at this point. It won't interrupt any other code that's running.</p>\n\n<p>This same kind of callback operates with Javascript timers.</p>\n\n<p>Describing Javascript as asynchronous is perhaps misleading. Iti's more accurate to say that Javascript is synchronous and single-threaded with various callback mechanisms.</p>\n\n<p>jQuery has an option on AJAX calls to make them synchronously (with the <code>async: false</code> option). It's a beginner error to be tempted to use this as it allows a more traditional programming model that one might be more used to. The reason it's problematic is that this will block <strong>all</strong> Javascript on the page until it finishes, included all event handlers and timers.</p>\n",
                    "is_accepted": true,
                    "score": 96
                }
            ],
            "body": "<p>I have been under the impression for that JavaScript was always asynchronous.  However, I have learned that there are situations where it is not (ie DOM manipulations).  Is there a good reference anywhere about when it will be synchronous and when it will be asynchronous?  Does jQuery affect this at all?</p>\n",
            "last_activity_date": 1424884371,
            "question_id": 2035645,
            "score": 57,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "When is JavaScript synchronous?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>you can raise the click event on an element by doing </p>\n\n<pre><code>// this must be done after input1 exists in the DOM\nvar element = document.getElementById(\"input1\");\n\nif (element) element.click();\n</code></pre>\n\n<p><strong><a href=\"http://jsfiddle.net/russcam/Nz7ab/\">Example here</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Focus might be what your looking for. With tabbing or clicking I think u mean giving the element the focus. Same code as Russ (Sorry i stole it :P) but firing an other event.</p>\n\n<pre><code>// this must be done after input1 exists in the DOM\nvar element = document.getElementById(\"input1\");\n\nif (element) element.focus();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h2>Simulating a mouse click</h2>\n\n<p>My guess is that the webpage is listening to mousedown rather than click (which is bad for accessibility because when a user uses the keyboard, only focus and click are fired, not mousedown). So you should simulate mousedown, click, and mouseup (which, by the way, is <a href=\"http://www.quirksmode.org/blog/archives/2008/08/iphone_events.html\">what the iPhone, iPod Touch, and iPad do on tap events</a>).</p>\n\n<p>To simulate the mouse events, you can use this snippet for browsers that support <a href=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-MouseEvent\">DOM 2 Events</a>. For a more foolproof simulation, fill in the mouse position using <code>initMouseEvent</code> instead.</p>\n\n<pre><code>// DOM 2 Events\nvar dispatchMouseEvent = function(target, var_args) {\n  var e = document.createEvent(\"MouseEvents\");\n  // If you need clientX, clientY, etc., you can call\n  // initMouseEvent instead of initEvent\n  e.initEvent.apply(e, Array.prototype.slice.call(arguments, 1));\n  target.dispatchEvent(e);\n};\ndispatchMouseEvent(element, 'mouseover', true, true);\ndispatchMouseEvent(element, 'mousedown', true, true);\ndispatchMouseEvent(element, 'click', true, true);\ndispatchMouseEvent(element, 'mouseup', true, true);\n</code></pre>\n\n<p>When you fire a simulated click event, the browser will actually fire the default action (e.g. navigate to the link's href, or submit a form).</p>\n\n<p>In IE, the equivalent snippet is this (unverified since I don't have IE). I don't think you can give the event handler mouse positions.</p>\n\n<pre><code>// IE 5.5+\nelement.fireEvent(\"onmouseover\");\nelement.fireEvent(\"onmousedown\");\nelement.fireEvent(\"onclick\");  // or element.click()\nelement.fireEvent(\"onmouseup\");\n</code></pre>\n\n<h2>Simulating keydown and keypress</h2>\n\n<p>You can simulate keydown and keypress events, but unfortunately in Chrome they only fire the event handlers and don't perform any of the default actions. I think this is because the DOM 3 Events working draft describes this funky <a href=\"http://www.w3.org/TR/DOM-Level-3-Events/#events-keyboard-event-order\">order of key events</a>:</p>\n\n<ol>\n<li>keydown (often has default action such as fire click, submit, or textInput events)</li>\n<li>keypress (if the key isn't just a modifier key like Shift or Ctrl)</li>\n<li>(keydown, keypress) with repeat=true if the user holds down the button</li>\n<li><strong>default actions of keydown!!</strong></li>\n<li>keyup</li>\n</ol>\n\n<p>This means that you have to (while combing the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/forms.html\">HTML5</a> and <a href=\"http://www.w3.org/TR/DOM-Level-3-Events/#event-type-textInput\">DOM 3 Events</a> drafts) simulate a large amount of what the browser would otherwise do. I hate it when I have to do that. For example, this is roughly how to simulate a key press on an input or textarea.</p>\n\n<pre><code>// DOM 3 Events\nvar dispatchKeyboardEvent = function(target, initKeyboradEvent_args) {\n  var e = document.createEvent(\"KeyboardEvents\");\n  e.initKeyboardEvent.apply(e, Array.prototype.slice.call(arguments, 1));\n  target.dispatchEvent(e);\n};\nvar dispatchTextEvent = function(target, initTextEvent_args) {\n  var e = document.createEvent(\"TextEvent\");\n  e.initTextEvent.apply(e, Array.prototype.slice.call(arguments, 1));\n  target.dispatchEvent(e);\n};\nvar dispatchSimpleEvent = function(target, type, canBubble, cancelable) {\n  var e = document.createEvent(\"Event\");\n  e.initEvent.apply(e, Array.prototype.slice.call(arguments, 1));\n  target.dispatchEvent(e);\n};\n\nvar canceled = !dispatchKeyboardEvent(element,\n    'keydown', true, true,  // type, bubbles, cancelable\n    null,  // window\n    'h',  // key\n    0, // location: 0=standard, 1=left, 2=right, 3=numpad, 4=mobile, 5=joystick\n    '');  // space-sparated Shift, Control, Alt, etc.\ndispatchKeyboardEvent(\n    element, 'keypress', true, true, null, 'h', 0, '');\nif (!canceled) {\n  if (dispatchTextEvent(element, 'textInput', true, true, null, 'h', 0)) {\n    element.value += 'h';\n    dispatchSimpleEvent(element, 'input', false, false);\n    // not supported in Chrome yet\n    // if (element.form) element.form.dispatchFormInput();\n    dispatchSimpleEvent(element, 'change', false, false);\n    // not supported in Chrome yet\n    // if (element.form) element.form.dispatchFormChange();\n  }\n}\ndispatchKeyboardEvent(\n    element, 'keyup', true, true, null, 'h', 0, '');\n</code></pre>\n\n<p>I don't think it is possible to simulate key events in IE.</p>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>For simulating keyboard events in Chrome: </p>\n\n<p>There is a related bug in webkit that keyboard events when initialized with \ninitKeyboardEvent get an incorrect keyCode and charCode of 0: <a href=\"https://bugs.webkit.org/show_bug.cgi?id=16735\">https://bugs.webkit.org/show_bug.cgi?id=16735</a></p>\n\n<p>A working solution for it is posted in <a href=\"http://stackoverflow.com/a/10520017/1328825\">this SO answer</a>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Or even shorter, with only standard modern Javascript:</p>\n\n<pre><code>var first_link = document.getElementsByTagName('a')[0];\nfirst_link.dispatchEvent(new MouseEvent('click'));\n</code></pre>\n\n<p>The <code>new MouseEvent</code> constructor takes a required event type name, then an optional object (at least in Chrome). So you could, for example, set some properties of the event:</p>\n\n<pre><code>first_link.dispatchEvent(new MouseEvent('click', {bubbles: true, cancelable: true}));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I wrote a google chrome extension and the site that I want to use my extension on requirements me to click or tab onto a text box (because I think it runs javascript verification \"onclick\" only). Now I can get the text in the box with my extension using: </p>\n\n<pre><code>document.getElementById(\"input1\").value = 'test';\n</code></pre>\n\n<p>But when I click submit, it thinks I did not enter anything in the \"input1\" text box because I never clicked it or tabbed on it. </p>\n\n<p>Can someone help me get around this please? Thank you.  </p>\n",
            "last_activity_date": 1389933016,
            "question_id": 4158847,
            "score": 22,
            "tags": [
                "javascript",
                "google-chrome",
                "google-chrome-extension"
            ],
            "title": "Is there a way to simulate key presses or a click with javascript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>When you specify:</p>\n\n<pre><code>dataType: 'json',\n</code></pre>\n\n<p>jQuery will fire the error event if the response cannot be parsed as JSON, even if server returns <code>200 OK</code>. Check the data returned from the server and make sure it is valid JSON (try <a href=\"http://jsonlint.com/\">JSONLint</a> service).</p>\n\n<p>If the returned data is not JSON or it has syntax errors then fix them in your server side code. You can just return <code>{}</code> from the server side script.</p>\n\n<p>Note that inside the error event, parameter 2 and 3 will contain details about the error. In case of JSON parsing error the parameter 2 will contain <code>parsererror</code>.</p>\n",
                    "is_accepted": true,
                    "score": 217
                },
                {
                    "body": "<p>I reckon your aspx page doesn't return a JSON object.\nYour page should do something like this (page_load)</p>\n\n<pre><code>   var jSon = new JavaScriptSerializer();\n    var OutPut = jSon.Serialize(&lt;your object&gt;);\n\n    Response.Write(OutPut);\n</code></pre>\n\n<p>Also, try and change your AjaxFailed:</p>\n\n<pre><code>function AjaxFailed (XMLHttpRequest, textStatus) {\n\n                }\n</code></pre>\n\n<p>textStatus should tell you what kind of error you're getting.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Try following</p>\n\n<pre><code>$.ajax({\n    type: 'POST',\n    url: 'Jqueryoperation.aspx?Operation=DeleteRow',\n    contentType: 'application/json; charset=utf-8',\n    data: { \"Operation\" : \"DeleteRow\", \n            \"TwitterId\" : 1 },\n    dataType: 'json',\n    cache: false,\n    success: AjaxSucceeded,\n    error: AjaxFailed\n});\n</code></pre>\n\n<p>OR</p>\n\n<pre><code>$.ajax({\n    type: 'POST',\n    url: 'Jqueryoperation.aspx?Operation=DeleteRow&amp;TwitterId=1',\n    contentType: 'application/json; charset=utf-8',\n    dataType: 'json',\n    cache: false,\n    success: AjaxSucceeded,\n    error: AjaxFailed\n});\n</code></pre>\n\n<p>Use double quotes instead of single quotes in JSON object. I think this will solve the issue.</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>I've had some good luck with using multiple, space-separated dataTypes (<a href=\"http://api.jquery.com/jQuery.ajax/\">Jquery 1.5+</a>).  As in:</p>\n\n<pre><code>$.ajax({\n    type: 'POST',\n    url: 'Jqueryoperation.aspx?Operation=DeleteRow',\n    contentType: 'application/json; charset=utf-8',\n    data: json,\n    dataType: 'text json',\n    cache: false,\n    success: AjaxSucceeded,\n    error: AjaxFailed\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Another thing that messed things up for me was using localhost instead of 127.0.0.1 or viceversa. Apparently JS can't handle requests from one to the other.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You have just to remove dataType: 'json', from your header if your implemented Web service method is void.\nIn this case, the ajax call don't expect to have a json return datatype </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have implemented an AJAX request on my website which I am calling from a webpage. It always returns <strong>200 OK</strong> but jQuery executes the error event. I tried a lot of things but could not figure out the problem. I am adding my code below:</p>\n\n<p><strong>jQuery Code</strong></p>\n\n<pre><code>var row = \"1\";\nvar json = \"{'TwitterId':'\" + row + \"'}\";\n$.ajax({\n    type: 'POST',\n    url: 'Jqueryoperation.aspx?Operation=DeleteRow',\n    contentType: 'application/json; charset=utf-8',\n    data: json,\n    dataType: 'json',\n    cache: false,\n    success: AjaxSucceeded,\n    error: AjaxFailed\n});\nfunction AjaxSucceeded(result) {\n    alert(\"hello\");\n    alert(result.d);\n}\nfunction AjaxFailed(result) {\n    alert(\"hello1\");\n    alert(result.status + ' ' + result.statusText);\n}\n</code></pre>\n\n<p><strong>C# Code for <code>JqueryOpeartion.aspx</code></strong></p>\n\n<pre><code>protected void Page_Load(object sender, EventArgs e) {\n    test();\n}\nprivate void test() {\n    Response.Write(\"&lt;script language='javascript'&gt;alert('Record Deleted');&lt;/script&gt;\");\n}\n</code></pre>\n\n<p>I need the <code>(\"Record deleted\")</code> string after successfully deletion. I am able to delete content but I am not getting this message. Is this correct or am I doing anything wrong. Please suggest the correct way to solve this issue.</p>\n",
            "last_activity_date": 1418486338,
            "question_id": 6186770,
            "score": 151,
            "tags": [
                "javascript",
                "jquery",
                "asp.net",
                "ajax",
                "json"
            ],
            "title": "AJAX request return 200 OK but error event is fired instead of success"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Because <code>undefined</code> is not always declared, but jQuery declare <code>undefined</code> in its main function. So they use the safe <code>undefined</code> value internally, but outside, they use the <code>typeof</code> style to be safe.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>For undeclared variables, <code>typeof foo</code> will return the string literal <code>\"undefined\"</code>, whereas the identity check <code>foo === undefined</code> would trigger the error <em>\"foo is not defined\"</em>.</p>\n\n<p>For local variables (which you <em>know</em> are declared somewhere), no such error would occur, hence the identity check.</p>\n",
                    "is_accepted": true,
                    "score": 93
                },
                {
                    "body": "<p>I'd stick to using <code>typeof foo === \"undefined\"</code> everywhere. That can never go wrong.</p>\n\n<p>I imagine the reason why jQuery recommends the two different methods is that they define their own <code>undefined</code> variable within the function that jQuery code lives in, so within that function <code>undefined</code> is safe from tampering from outside. I would also imagine that someone somewhere has benchmarked the two different approaches and discovered that <code>foo === undefined</code> is faster and therefore decided it's the way to go. <strong>[UPDATE: as noted in the comments, the comparison with <code>undefined</code> is also slightly shorter, which could be a consideration.]</strong>  However, the gain in practical situations will be utterly insignificant: this check will never, ever be any kind of bottleneck, and what you lose is significant: evaluating a property of a host object for comparison can throw an error whereas a <code>typeof</code> check never will.</p>\n\n<p>For example, the following is used in IE for parsing XML:</p>\n\n<pre><code>var x = new ActiveXObject(\"Microsoft.XMLDOM\");\n</code></pre>\n\n<p>To check whether it has a <code>loadXML</code> method safely:</p>\n\n<pre><code>typeof x.loadXML === \"undefined\"; // Returns false\n</code></pre>\n\n<p>On the other hand:</p>\n\n<pre><code>x.loadXML === undefined; // Throws an error\n</code></pre>\n\n<p><strong>UPDATE</strong></p>\n\n<p>Another advantage of the <code>typeof</code> check that I forgot to mention was that it also works with undeclared variables, which the <code>foo === undefined</code> check does not, and in fact throws a <code>ReferenceError</code>. Thanks to @LinusKleen for reminding me. For example:</p>\n\n<pre><code>typeof someUndeclaredVariable; // \"undefined\"\nsomeUndeclaredVariable === undefined; // throws a ReferenceError\n</code></pre>\n\n<p>Bottom line: always use the <code>typeof</code> check.</p>\n",
                    "is_accepted": false,
                    "score": 37
                },
                {
                    "body": "<p>Yet another reason for using the typeof-variant: <code>undefined</code> can be redefined.</p>\n\n<pre><code>undefined = \"foo\";\nvar variable = \"foo\";\nif (variable === undefined)\n  console.log(\"eh, what?!\");\n</code></pre>\n\n<p>The result of <code>typeof variable</code>  cannot.</p>\n\n<p><strong>Update</strong>: note that this is not the case in ES5.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Who is interested in the performance gain of <code>variable === undefined</code>, may take a look here, but it seems to be a chrome optimization only.</p>\n\n<ul>\n<li><a href=\"http://jsperf.com/type-of-undefined-vs-undefined/30\" rel=\"nofollow\">http://jsperf.com/type-of-undefined-vs-undefined/30</a></li>\n<li><a href=\"http://jsperf.com/type-of-undefined-vs-undefined\" rel=\"nofollow\">http://jsperf.com/type-of-undefined-vs-undefined</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>The <a href=\"http://docs.jquery.com/JQuery_Core_Style_Guidelines#Type_Checks\">jQuery Core Style Guidelines</a> suggest two different ways to check whether a variable is defined.</p>\n\n<ul>\n<li>Global Variables: <code>typeof variable === \"undefined\"</code></li>\n<li>Local Variables: <code>variable === undefined</code></li>\n<li>Properties: <code>object.prop === undefined</code></li>\n</ul>\n\n<p>Why does jQuery use one approach for global variables and another for locals and properties?</p>\n",
            "last_activity_date": 1423877012,
            "question_id": 4725603,
            "score": 78,
            "tags": [
                "javascript",
                "jquery",
                "undefined"
            ],
            "title": "variable === undefined vs. typeof variable === &quot;undefined&quot;"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There are two main ways to add extra info to copied web text.</p>\n\n<h2>1. Manipulating the selection</h2>\n\n<p>The idea is to watch for the <code>copy event</code>, then append a hidden container with our extra info to the <code>dom</code>, and extend the selection to it.<br>\nThis method is adapted from <a href=\"http://bavotasan.com/2010/add-a-copyright-notice-to-copied-text/\">this article</a> by <em>c.bavota</em>. Check also <a href=\"https://www.jitbit.com/alexblog/230-javascript-injecting-extra-info-to-copy-pasted-text/\"><em>jitbit</em>'s version</a> for more complex case.</p>\n\n<ul>\n<li><strong>Browser compatibility</strong>: All major browsers, IE > 8.</li>\n<li><strong>Demo</strong>: <a href=\"http://jsfiddle.net/jp6nhmxf/\">jsFiddle demo</a>.</li>\n<li><strong>Javascript code</strong>:</li>\n</ul>\n\n<pre><code>\n    function addLink() {\n        //Get the selected text and append the extra info\n        var selection = window.getSelection(),\n            pagelink = '&lt;br />&lt;br /> Read more at: ' + document.location.href,\n            copytext = selection + pagelink,\n            newdiv = document.createElement('div');\n\n        //hide the newly created container\n        newdiv.style.position = 'absolute';\n        newdiv.style.left = '-99999px';\n\n        //insert the container, fill it with the extended text, and define the new selection\n        document.body.appendChild(newdiv);\n        newdiv.innerHTML = copytext;\n        selection.selectAllChildren(newdiv);\n\n        window.setTimeout(function () {\n            document.body.removeChild(newdiv);\n        }, 100);\n    }\n\n    document.addEventListener('copy', addLink);\n</code></pre>\n\n<h2>2. Manipulating the clipboard</h2>\n\n<p>The idea is to watch the <code>copy event</code> and directly modify the clipboard data. This is possible using the <code>clipboardData</code> property. Note that this property is available in all major browsers in <code>read-only</code>; the <code>setData</code> method is only available on IE.</p>\n\n<ul>\n<li><strong>Browser compatibility</strong>: IE > 4.</li>\n<li><strong>Demo</strong>: <a href=\"http://jsfiddle.net/m56af0je/\">jsFiddle demo</a>.</li>\n<li><strong>Javascript code</strong>:</li>\n</ul>\n\n<pre><code>\n    function addLink(event) {\n        event.preventDefault();\n\n        var pagelink = '\\n\\n Read more at: ' + document.location.href,\n            copytext =  window.getSelection() + pagelink;\n\n        if (window.clipboardData) {\n            window.clipboardData.setData('Text', copytext);\n        }\n    }\n\n    document.addEventListener('copy', addLink);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<p>Also a little shorter solution:</p>\n\n<pre><code>jQuery( document ).ready( function( $ )\n    {\n    function addLink()\n    {\n    var sel = window.getSelection();\n    var pagelink = \"&lt;br /&gt;&lt;br /&gt; Source: &lt;a href='\" + document.location.href + \"'&gt;\" + document.location.href + \"&lt;/a&gt;&lt;br /&gt;\u00a9 text is here\";\n    var div = $( '&lt;div&gt;', {style: {position: 'absolute', left: '-99999px'}, html: sel + pagelink} );\n    $( 'body' ).append( div );\n    sel.selectAllChildren( div[0] );\n    div.remove();\n    }\n\n\n\ndocument.oncopy = addLink;\n} );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The shortest version for jQuery that I tested and is working is:</p>\n\n<pre><code>jQuery(document).on('copy', function(e)\n{\n  var sel = window.getSelection();\n  var copyFooter = \n        \"&lt;br /&gt;&lt;br /&gt; Source: &lt;a href='\" + document.location.href + \"'&gt;\" + document.location.href + \"&lt;/a&gt;&lt;br /&gt;\u00a9 YourSite\";\n  var copyHolder = $('&lt;div&gt;', {html: sel+copyFooter, style: {position: 'absolute', left: '-99999px'}});\n  $('body').append(copyHolder);\n  sel.selectAllChildren( copyHolder[0] );\n  window.setTimeout(function() {\n      copyHolder.remove();\n  },0);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Some websites now use a javascript service from <a href=\"http://www.tynt.com\">Tynt</a> that appends text to copied content.</p>\n\n<p>If you copy text from a site using this and then paste you get a link to the original content at the bottom of the text.</p>\n\n<p>Tynt also tracks this as it happens. It's a neat trick well done.</p>\n\n<p>Their script for doing this is impressive - rather than try to manipulate the clipboard (which only older versions of IE lets them do by default and which should always be turned off) they manipulate the actual selection.</p>\n\n<p>So when you select a block of text the extra content is added as a hidden <code>&lt;div&gt;</code> included in your selection. When you paste the extra style is ignored and the extra link appears.</p>\n\n<p>This is actually fairly easy to do with simple blocks of text, but a nightmare when you consider all the selections possible across complex HTML in different browsers.</p>\n\n<p>I'm developing a web application - I don't want anyone to be able to track the content copied and I would like the extra info to contain something contextual, rather than just a link. Tynt's service isn't really appropriate in this case.</p>\n\n<p>Does anyone know of an open source javascript library (maybe a jQuery plug in or similar) that provides similar functionality but that doesn't expose internal application data?</p>\n",
            "last_activity_date": 1414317136,
            "question_id": 2026335,
            "score": 28,
            "tags": [
                "javascript",
                "clipboard"
            ],
            "title": "How to add extra info to copied web text"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I have updated this answer. I like the idea of using a match better, but it is slower:</p>\n\n<pre><code>console.log((\"str1,str2,str3,str4\".match(/,/g) || []).length); //logs 3\n\nconsole.log((\"str1,str2,str3,str4\".match(new RegExp(\"str\", \"g\")) || []).length); //logs 4\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/btipling/ru6yvrce/3/\">jsfiddle</a></p>\n\n<p>Use a regular expression literal if you know what you are searching for beforehand, if not you can use the <code>RegExp</code> constructor, and pass in the <code>g</code> flag as an argument.</p>\n\n<p><code>match</code> returns <code>null</code> with no results thus the <code>|| []</code></p>\n\n<p>The original answer I made in 2009 is below. It creates an array unnecessarily, but <strong>using a split is faster</strong> (as of September 2014). I'm ambivalent, if I really needed the speed there would be no question that I would use a split, but I would prefer to use match.</p>\n\n<p>Old answer (from 2009):</p>\n\n<p>If you're looking for the commas:</p>\n\n<pre><code>(mainStr.split(\",\").length - 1) //3\n</code></pre>\n\n<p>If you're looking for the str</p>\n\n<pre><code>(mainStr.split(\"str\").length - 1) //4\n</code></pre>\n\n<p>Both in @Lo's answer and in my own silly <a href=\"http://jsperf.com/performance-of-match-vs-split\">jsperf test</a> split comes ahead in speed, at least in Chrome, but again creating the extra array just doesn't seem sane.</p>\n",
                    "is_accepted": true,
                    "score": 231
                },
                {
                    "body": "<p>A quick <a href=\"http://www.google.com/\">Google</a> search got this (from <a href=\"http://www.codecodex.com/wiki/index.php?title=Count%5Fthe%5Fnumber%5Fof%5Foccurrences%5Fof%5Fa%5Fspecific%5Fcharacter%5Fin%5Fa%5Fstring#JavaScript\">http://www.codecodex.com/wiki/index.php?title=Count_the_number_of_occurrences_of_a_specific_character_in_a_string#JavaScript</a>)</p>\n\n<pre><code>String.prototype.count=function(s1) { \n    return (this.length - this.replace(new RegExp(s1,\"g\"), '').length) / s1.length;\n}\n</code></pre>\n\n<p>Use it like this:</p>\n\n<pre><code>test = 'one,two,three,four'\ncommas = test.count(',') // returns 3\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>The following uses a regular expression to test the length. testex ensures you don't have 16 or greater consecutive non-comma characters. If it passes the test, then it proceeds to split the string. counting the commas is as simple as counting the tokens minus one.</p>\n\n<pre><code>var mainStr = \"str1,str2,str3,str4\";\nvar testregex = /([^,]{16,})/g;\nif (testregex.test(mainStr)) {\n  alert(\"values must be separated by commas and each may not exceed 15 characters\");\n} else {\n  var strs = mainStr.split(',');\n  alert(\"mainStr contains \" + strs.length + \" substrings separated by commas.\");\n  alert(\"mainStr contains \" + (strs.length-1) + \" commas.\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There are at least four ways. The best option, which should also be the fastest -owing to the native RegEx engine -, is placed at the top. jsperf.com is currently down, otherwise I would provide you with performance statistics.</p>\n\n<p><em><strong>Update</em></strong>: Please, find the performance tests <a href=\"http://jsperf.com/count-the-number-of-characters-in-a-string\">here</a>, and run them yourselves, so as to contribute your performance results. The specifics of the results will be given later.</p>\n\n<h1>1.</h1>\n\n<pre><code> (\"this is foo bar\".match(/o/g)||[]).length\n //&gt;2\n</code></pre>\n\n<h1>2.</h1>\n\n<pre><code>\"this is foo bar\".split(\"o\").length-1\n //&gt;2\n</code></pre>\n\n<p>split not recommended. Resource hungry. Allocates new instances of 'Array' for each match. Don't try that for a >100MB file via FileReader. You can actually easily observe the EXACT resource usage using <strong>Chrome's profiler</strong> option.</p>\n\n<h1>3.</h1>\n\n<pre><code>var stringsearch = \"o\"\n   ,str = \"this is foo bar\";\nfor(var count=-1,index=-2; index != -1; count++,index=str.indexOf(stringsearch,index+1) );\n //&gt;count:2\n</code></pre>\n\n<h1>4.</h1>\n\n<p>searching for a single character</p>\n\n<pre><code>var stringsearch = \"o\"\n   ,str = \"this is foo bar\";\nfor(var i=count=0; i&lt;str.length; count+=+(stringsearch===str[i++]));\n //&gt;count:2\n</code></pre>\n\n<p><strong>Update:</strong></p>\n\n<h1>5.</h1>\n\n<p>element mapping and filtering, not recommended due to its overall resource preallocation rather than using Pythonian 'generators'</p>\n\n<pre><code>var str = \"this is foo bar\"\nstr.split('').map( function(e,i){ if(e === 'o') return i;} )\n             .filter(Boolean)\n//&gt;[9, 10]\n[9, 10].length\n//&gt;2\n</code></pre>\n\n<p><strong>Share:</strong>\nI made this <em><a href=\"https://gist.github.com/2757250\">gist</a></em>, with currently 8 methods of character-counting, so we can directly pool and share our ideas - just for fun, and perhaps some interesting benchmarks :)</p>\n\n<p><a href=\"https://gist.github.com/2757250\">https://gist.github.com/2757250</a></p>\n",
                    "is_accepted": false,
                    "score": 92
                },
                {
                    "body": "<pre><code>s = 'dir/dir/dir/dir/'\nfor(i=l=0;i&lt;s.length;i++)\nif(s[i] == '/')\nl++\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>My solution:</p>\n\n<pre><code>function countOcurrences(str, value){\n   var regExp = new RegExp(value, \"gi\");\n   return str.match(regExp) ? str.match(regExp).length : 0;  \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I was working on a small project that required a sub-string counter. Searching for the wrong phrases provided me with no results, however after writing my own implementation I have stumbled upon this question. Anyway, here is my way, it is probably slower than most here but might be helpful to someone:</p>\n\n<pre><code>function count_letters() {\nvar counter = 0;\n\nfor (var i = 0; i &lt; input.length; i++) {\n    var index_of_sub = input.indexOf(input_letter, i);\n\n    if (index_of_sub &gt; -1) {\n        counter++;\n        i = index_of_sub;\n    }\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/5ZzHt/1/\" rel=\"nofollow\">http://jsfiddle.net/5ZzHt/1/</a></p>\n\n<p>Please let me know if you find this implementation to fail or do not follow some standards! :)</p>\n\n<p><strong>UPDATE</strong>\nYou may want to substitute:</p>\n\n<pre><code>    for (var i = 0; i &lt; input.length; i++) {\n</code></pre>\n\n<p>With:</p>\n\n<pre><code>for (var i = 0, input_length = input.length; i &lt; input_length; i++) {\n</code></pre>\n\n<p>Interesting read discussing the above:\n<a href=\"http://www.erichynds.com/blog/javascript-length-property-is-a-stored-value\" rel=\"nofollow\">http://www.erichynds.com/blog/javascript-length-property-is-a-stored-value</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I have found that the best approach to search for a character in a very large string (that is 1 000 000 characters long, for example) is to use the <code>replace()</code> method.</p>\n\n<pre><code>window.count_replace = function (str, schar) {\n    return str.length - str.replace(RegExp(schar), '').length;\n};\n</code></pre>\n\n<p>You can see <a href=\"http://jsperf.com/count-number-of-occurrences-of-a-character-in-a-string\" rel=\"nofollow\">yet another JSPerf</a> suite to test this method along with other methods of finding a character in a string.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Add this function to sting prototype :</p>\n\n<pre><code>String.prototype.count=function(c) { \n  var result = 0, i = 0;\n  for(i;i&lt;this.length;i++)if(this[i]==c)result++;\n  return result;\n};\n</code></pre>\n\n<p>usage:</p>\n\n<pre><code>console.log(\"strings\".count(\"s\")); //2\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Firstly, I am new to Javascript.</p>\n\n<p>I need to count the number of occurrences of a character in a string.</p>\n\n<p>For example, suppose my string contains:</p>\n\n<pre><code>var mainStr = \"str1,str2,str3,str4\";\n</code></pre>\n\n<p>I want to find the count of comma <code>,</code> character, which is 3. And the count of individual strings after the split along comma, which is 4.</p>\n\n<p>I also need to validate that each of the strings i.e str1 or str2 or str3 or str4 should not exceed, say, 15 characters.</p>\n\n<p>Can someone please help me with this?</p>\n",
            "last_activity_date": 1420740900,
            "question_id": 881085,
            "score": 143,
            "tags": [
                "javascript",
                "string"
            ],
            "title": "Count the number of occurences of a character in a string in Javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Geowa4's solution will work for a textarea, but not for a contenteditable element.</p>\n\n<p>This solution is for moving the caret to the end of a contenteditable element. It should work in all browsers which support contenteditable.</p>\n\n<pre><code>function setEndOfContenteditable(contentEditableElement)\n{\n    var range,selection;\n    if(document.createRange)//Firefox, Chrome, Opera, Safari, IE 9+\n    {\n        range = document.createRange();//Create a range (a range is a like the selection but invisible)\n        range.selectNodeContents(contentEditableElement);//Select the entire contents of the element with the range\n        range.collapse(false);//collapse the range to the end point. false means collapse to end rather than the start\n        selection = window.getSelection();//get the selection object (allows you to change selection)\n        selection.removeAllRanges();//remove any selections already made\n        selection.addRange(range);//make the range you have just created the visible selection\n    }\n    else if(document.selection)//IE 8 and lower\n    { \n        range = document.body.createTextRange();//Create a range (a range is a like the selection but invisible)\n        range.moveToElementText(contentEditableElement);//Select the entire contents of the element with the range\n        range.collapse(false);//collapse the range to the end point. false means collapse to end rather than the start\n        range.select();//Select the range (make it the visible selection\n    }\n}\n</code></pre>\n\n<p>It can be used by code similar to:</p>\n\n<pre><code>elem = document.getElementById('txt1');//This is the element that you want to move the caret to the end of\nsetEndOfContenteditable(elem);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 121
                },
                {
                    "body": "<p>There is also another problem.</p>\n\n<p>The Nico Burns's solution works if the content editable div doesn't contain other multilined elements.</p>\n\n<p>For example, if a div contains other divs, and these other divs contain other stuff inside, could occur some problems.</p>\n\n<p>In order to solve them, I've found the following solution, that is an improvement of what Nico Burn wrote:</p>\n\n<pre><code>//Namespace management idea from http://enterprisejquery.com/2010/10/how-good-c-habits-can-encourage-bad-javascript-habits-part-1/\n(function( cursorManager ) {\n\n    //From: http://www.w3.org/TR/html-markup/syntax.html#syntax-elements\n    var voidNodeTags = ['AREA', 'BASE', 'BR', 'COL', 'EMBED', 'HR', 'IMG', 'INPUT', 'KEYGEN', 'LINK', 'MENUITEM', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR', 'BASEFONT', 'BGSOUND', 'FRAME', 'ISINDEX'];\n\n    //From: http://stackoverflow.com/questions/237104/array-containsobj-in-javascript\n    Array.prototype.contains = function(obj) {\n        var i = this.length;\n        while (i--) {\n            if (this[i] === obj) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    //Basic idea from: http://stackoverflow.com/questions/19790442/test-if-an-element-can-contain-text\n    function canContainText(node) {\n        if(node.nodeType == 1) { //is an element node\n            return !voidNodeTags.contains(node.nodeName);\n        } else { //is not an element node\n            return false;\n        }\n    };\n\n    function getLastChildElement(el){\n        var lc = el.lastChild;\n        while(lc &amp;&amp; lc.nodeType != 1) {\n            if(lc.previousSibling)\n                lc = lc.previousSibling;\n            else\n                break;\n        }\n        return lc;\n    }\n\n    //Based on Nico Burns's answer\n    cursorManager.setEndOfContenteditable = function(contentEditableElement)\n    {\n\n        while(getLastChildElement(contentEditableElement) &amp;&amp;\n              canContainText(getLastChildElement(contentEditableElement))) {\n            contentEditableElement = getLastChildElement(contentEditableElement);\n        }\n\n        var range,selection;\n        if(document.createRange)//Firefox, Chrome, Opera, Safari, IE 9+\n        {    \n            range = document.createRange();//Create a range (a range is a like the selection but invisible)\n            range.selectNodeContents(contentEditableElement);//Select the entire contents of the element with the range\n            range.collapse(false);//collapse the range to the end point. false means collapse to end rather than the start\n            selection = window.getSelection();//get the selection object (allows you to change selection)\n            selection.removeAllRanges();//remove any selections already made\n            selection.addRange(range);//make the range you have just created the visible selection\n        }\n        else if(document.selection)//IE 8 and lower\n        { \n            range = document.body.createTextRange();//Create a range (a range is a like the selection but invisible)\n            range.moveToElementText(contentEditableElement);//Select the entire contents of the element with the range\n            range.collapse(false);//collapse the range to the end point. false means collapse to end rather than the start\n            range.select();//Select the range (make it the visible selection\n        }\n    }\n\n}( window.cursorManager = window.cursorManager || {}));\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>var editableDiv = document.getElementById(\"my_contentEditableDiv\");\ncursorManager.setEndOfContenteditable(editableDiv);\n</code></pre>\n\n<p>In this way, the cursor is surely positioned at the end of the last element, eventually nested.</p>\n\n<p><strong>EDIT #1</strong>: In order to be more generic, the while statement should consider also all the other tags which cannot contain text. These elements are named <em>void elements</em>, and in <a href=\"http://stackoverflow.com/questions/19790442/test-if-an-element-can-contain-text\">this question</a> there are some methods on how to test if an element is void. So, assuming that exists a function called <code>canContainText</code> that returns <code>true</code> if the argument is not a void element, the following line of code:</p>\n\n<pre><code>contentEditableElement.lastChild.tagName.toLowerCase() != 'br'\n</code></pre>\n\n<p>should be replaced with:</p>\n\n<pre><code>canContainText(getLastChildElement(contentEditableElement))\n</code></pre>\n\n<p><strong>EDIT #2</strong>: The above code is fully updated, with every changes described and discussed</p>\n",
                    "is_accepted": true,
                    "score": 9
                }
            ],
            "body": "<p>I need to move caret to end of <code>contenteditable</code> node like on Gmail notes widget.</p>\n\n<p>I read threads on StackOverflow, but those solutions are based on using inputs and they doesn't work with <code>contenteditable</code> elements.</p>\n",
            "last_activity_date": 1425527818,
            "question_id": 1125292,
            "score": 34,
            "tags": [
                "javascript",
                "contenteditable",
                "cursor-position"
            ],
            "title": "How to move cursor to end of contenteditable entity"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>Try one of:</p>\n\n<pre><code>var h = document.getElementById('someDiv').clientHeight;\nvar h = document.getElementById('someDiv').offsetHeight;\nvar h = document.getElementById('someDiv').scrollHeight;\n</code></pre>\n\n<p><code>clientHeight</code> includes the height and vertical padding.</p>\n\n<p><code>offsetHeight</code> includes the height, vertical padding, and vertical borders.</p>\n\n<p><code>scrollHeight</code> includes the height of the contained document (would be greater than just height in case of scrolling), vertical padding, and vertical borders.</p>\n",
                    "is_accepted": false,
                    "score": 423
                },
                {
                    "body": "<p>It should just be</p>\n\n<pre><code>$('#someDiv').height();\n</code></pre>\n\n<p>with jQuery. This retrieves the height of the first item in the wrapped set as a number. </p>\n\n<p>Trying to use</p>\n\n<pre><code>.style.height\n</code></pre>\n\n<p>only works if you have set the property in the first place. Not very useful!</p>\n",
                    "is_accepted": true,
                    "score": 81
                },
                {
                    "body": "<p>Have you set the height in the css specifically? If you haven't you need to use <code>offsetHeight;</code> rather than <code>height</code></p>\n\n<pre><code>var h = document.getElementById('someDiv').style.offsetHeight;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p><code>offsetHeight</code>, usually.</p>\n\n<p>If you need to calculate something but not show it, set the element to <code>visibility:hidden</code> and <code>position:absolute</code>, add it to the DOM tree, get the <code>offsetHeight</code>, and remove it. (That's what the prototype library does behind the scenes last time I checked).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>With MooTools:</p>\n\n<p>$('someDiv').getSize().y</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Definitely use </p>\n\n<pre><code>$('#someDiv').height()   // to read it\n</code></pre>\n\n<p>or</p>\n\n<pre><code>$('#someDiv').height(newHeight)  // to set it\n</code></pre>\n\n<p>I'm posting this as an additional answer because theres a couple important things I just learnt.</p>\n\n<p>I almost fell into the trap just now of using offsetHeight. This is what happened :</p>\n\n<ul>\n<li>I used the good old trick of using a debugger to 'watch' what properties my element has </li>\n<li>I saw which one has a value around the value I was expecting</li>\n<li>It was offsetHeight - so I used that. </li>\n<li>Then i realized it didnt work with a hidden DIV</li>\n<li>I tried hiding after calculating maxHeight but that looked clumsy - got in a mess.</li>\n<li>I did a search - discovered jQuery.height() - and used it</li>\n<li>found out height() works even on hidden elements</li>\n<li>just for fun I checked the jQuery implementation of height/width</li>\n</ul>\n\n<p>Here's just a portion of it :</p>\n\n<pre><code>Math.max(\nMath.max(document.body[\"scroll\" + name], document.documentElement[\"scroll\" + name]),\nMath.max(document.body[\"offset\" + name], document.documentElement[\"offset\" + name])\n)\n</code></pre>\n\n<p>Yup it looks at BOTH scroll and offset. If that fails it looks even further, taking into account browser and css compatibility issues. In other words STUFF I DONT CARE ABOUT - or want to.</p>\n\n<p>But I dont have to. Thanks jQuery! </p>\n\n<p>Moral of the story : if jQuery has a method for something its probably for a good reason, likely related to compatibilty.</p>\n\n<p>If you haven't read through the <a href=\"http://www.gscottolson.com/jquery/jQuery1.2.cheatsheet.v1.0.pdf\">jQuery list of methods</a> recently I suggest you take a look.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>So is this the answer? </p>\n\n<p>\"If you need to calculate something but not show it, set the element to <code>visibility:hidden</code> and <code>position:absolute</code>, add it to the DOM tree, get the offsetHeight, and remove it. (That's what the prototype library does behind the lines last time I checked).\"</p>\n\n<p>I have the same problem on a number of elements.  There is no jQuery or Prototype to be used on the site but I'm all in favor of borrowing the technique if it works.  As an example of some things that failed to work, followed by what did, I have the following code:</p>\n\n<pre><code>// Layout Height Get\nfunction fnElementHeightMaxGet(DoScroll, DoBase, elementPassed, elementHeightDefault)\n{\n    var DoOffset = true;\n    if (!elementPassed) { return 0; }\n    if (!elementPassed.style) { return 0; }\n    var thisHeight = 0;\n    var heightBase = parseInt(elementPassed.style.height);\n    var heightOffset = parseInt(elementPassed.offsetHeight);\n    var heightScroll = parseInt(elementPassed.scrollHeight);\n    var heightClient = parseInt(elementPassed.clientHeight);\n    var heightNode = 0;\n    var heightRects = 0;\n    //\n    if (DoBase) {\n        if (heightBase &gt; thisHeight) { thisHeight = heightBase; }\n    }\n    if (DoOffset) {\n        if (heightOffset &gt; thisHeight) { thisHeight = heightOffset; }\n    }\n    if (DoScroll) {\n        if (heightScroll &gt; thisHeight) { thisHeight = heightScroll; }\n    }\n    //\n    if (thisHeight == 0) { thisHeight = heightClient; }\n    //\n    if (thisHeight == 0) { \n        // Dom Add:\n        // all else failed so use the protype approach...\n        var elBodyTempContainer = document.getElementById('BodyTempContainer');\n        elBodyTempContainer.appendChild(elementPassed);\n        heightNode = elBodyTempContainer.childNodes[0].offsetHeight;\n        elBodyTempContainer.removeChild(elementPassed);\n        if (heightNode &gt; thisHeight) { thisHeight = heightNode; }\n        //\n        // Bounding Rect:\n        // Or this approach...\n        var clientRects = elementPassed.getClientRects();\n        heightRects = clientRects.height;\n        if (heightRects &gt; thisHeight) { thisHeight = heightRects; }\n    }\n    //\n    // Default height not appropriate here\n    // if (thisHeight == 0) { thisHeight = elementHeightDefault; }\n    if (thisHeight &gt; 3000) {\n        // ERROR\n        thisHeight = 3000;\n    }\n    return thisHeight;\n}\n</code></pre>\n\n<p>which basically tries anything and everything only to get a zero result. ClientHeight with no affect.  With the problem elements I typically get NaN in the Base and zero in the Offset and Scroll heights.  I then tried the Add DOM solution and clientRects to see if it works here.</p>\n\n<p>29 Jun 2011,\nI did indeed update the code to try both adding to DOM and clientHeight with better results than I expected.  </p>\n\n<p>1) clientHeight was also 0.</p>\n\n<p>2) Dom actually gave me a height which was great.</p>\n\n<p>3) ClientRects returns a result almost identical to the DOM technique.</p>\n\n<p>Because the elements added are fluid in nature, when they are added to an otherwise empty DOM Temp element they are rendered according to the width of that container.  This get weird, because that is 30px shorter than it eventually ends up.</p>\n\n<p>I added a few snapshots to illustrate how the height is calculated differently.\n<img src=\"http://i.stack.imgur.com/roB7P.jpg\" alt=\"Menu block rendered normally\">\n<img src=\"http://i.stack.imgur.com/iaDFY.jpg\" alt=\"Menu block added to DOM Temp element\"></p>\n\n<p>The height differences are obvious.   I could certainly add absolute positioning and hidden but I am sure that will have no effect.  I continued to be convinced this would not work!</p>\n\n<p>(I digress further) The height comes out (renders) lower than the true rendered height.  This could be addressed by setting the width of the DOM Temp element to match the existing parent and could be done fairly accurately in theory.  I also do not know what would result from removing them and adding them back into their existing location.  As they arrived through an innerHTML technique I will be looking using this different approach.</p>\n\n<p><strong>* HOWEVER *</strong> None of that was necessary. In fact it worked as advertised and returned the correct height!!!</p>\n\n<p>When I was able to get the menus visible again amazingly DOM had returned the correct height per the fluid layout at the top of the page (279px).  The above code also uses getClientRects which return 280px.</p>\n\n<p>This is illustrated in the following snapshot (taken from Chrome once working.)<br>\n<img src=\"http://i.stack.imgur.com/CsKMv.jpg\" alt=\"enter image description here\"></p>\n\n<p>Now I have noooooo idea why that prototype trick works, but it seems to.  Alternatively, getClientRects also works.</p>\n\n<p>I suspect the cause of all this trouble with these particular elements was the use of innerHTML instead of appendChild, but that is pure speculation at this point.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I made a simple code that doesn't even need JQuery and probably gonna help some people.\nIt gets the total height of 'ID1' after loaded and use it on 'ID2'</p>\n\n<pre><code>function anyName(){\n    var varname=document.getElementById('ID1').offsetHeight;\n    document.getElementById('ID2').style.height=varname+'px';\n}\n</code></pre>\n\n<p>Then just set the body to load it</p>\n\n<pre><code>&lt;body onload='anyName()'&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can use .outerHeight() for the purpose. It will give you full rendered height of the element.\nAlso you don't need to set any css-height of the element. For precaution you can keep it's height <strong>auto</strong> so it can be rendered as per content's height.</p>\n\n<pre><code>//if you need height of div excluding margin/padding/border\n$('#someDiv').height();\n\n//if you need height of div with padding but without border + margin\n$('#someDiv').innerHeight();\n\n// if you need height of div including padding and border\n$('#someDiv').outerHeight();\n\n//and at last for including border + margin + padding, can use\n$('#someDiv').outerHeight(true);\n</code></pre>\n\n<p>For a clear view of these function you can go for jQuery's site or a detailed post here.:</p>\n\n<p><a href=\"http://languagelassi.blogspot.in/2013/01/how-to-detect-height-of-element-in.html\">http://languagelassi.blogspot.in/2013/01/how-to-detect-height-of-element-in.html</a></p>\n\n<p>it will clear difference between .height() / innerHeight() / outerHeight()</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>If you are using jQuery already, your best bet is <code>.outerHeight()</code> or <code>.height()</code>, as has been stated.</p>\n\n<p>Without jQuery, you can check the box-sizing in use and add up various paddings + borders + clientHeight, <em>or</em> you can use <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window.getComputedStyle\" rel=\"nofollow\">getComputedStyle</a>:</p>\n\n<p>var h = getComputedStyle(document.getElementById('someDiv')).height;</p>\n\n<p><code>h</code> will now be a string like a \"53.825px\".</p>\n\n<p>And I can't find the reference, but I think I heard <code>getComputedStyle()</code> can be expensive, so it's probably not something you want to call on each <code>window.onscroll</code> event (but then, neither is jQuery's <code>height()</code>).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>try to use this ;)</p>\n\n<p><a href=\"https://github.com/kenta88/Everest\" rel=\"nofollow\">https://github.com/kenta88/Everest</a></p>\n\n<p>This plugin of jquery could help you to set the height of your div's by the contents!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Sometimes offsetHeight will return zero because the element you've created has not been rendered in the Dom yet. I wrote this function for such circumstances:</p>\n\n<pre><code>function getHeight(element)\n{\n    element.style.visibility = \"hidden\";\n    document.body.appendChild(element);\n    var height = element.offsetHeight + 0;\n    document.body.removeChild(element);\n    element.style.visibility = \"visible\";\n    return height;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong><em>NON JQUERY</em></strong> <em>since there were a bunch of links using <code>elem.style.height</code> in the top of these answers...</em></p>\n\n<p>INNER HEIGHT:<br>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element.clientHeight\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/Element.clientHeight</a>  </p>\n\n<pre><code>document.getElementById(id_attribute_value).clientHeight;\n</code></pre>\n\n<p>OUTER HEIGHT:<br>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement.offsetHeight\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement.offsetHeight</a></p>\n\n<pre><code>document.getElementById(id_attribute_value).offsetHeight; \n</code></pre>\n\n<p>Or one of my favorite references: <a href=\"http://youmightnotneedjquery.com/\" rel=\"nofollow\">http://youmightnotneedjquery.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How do you get the rendered height of an element?</p>\n\n<p>Lets say you have a <code>&lt;div&gt;</code> element with some content inside. This content inside is going to stretch the height of the <code>&lt;div&gt;</code>. How do you get the \"rendered\" height when you haven't explicitly set the height. Obviously, I tried:  </p>\n\n<pre><code>var h = document.getElementById('someDiv').style.height;\n</code></pre>\n\n<p>Is there a trick for doing this? I am using jQuery if that helps.</p>\n",
            "last_activity_date": 1422293714,
            "question_id": 526347,
            "score": 84,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "height"
            ],
            "title": "CSS / JavaScript - How do you get the rendered height of an element?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>The problem is that undefined compared to null using == gives true.\nThe common check for undefined is therefore done like this:</p>\n\n<pre><code>typeof x == \"undefined\"\n</code></pre>\n\n<p>this ensures the type of the variable is really undefined.</p>\n",
                    "is_accepted": false,
                    "score": 81
                },
                {
                    "body": "<p>A). I never have and never will trust any tool which purports to produce code without the user coding, which goes double where it's a graphical tool.</p>\n\n<p>B). I've never had any problem with this with Facebook Connect. It's all still plain old JavaScript code running in a browser and <code>undefined===undefined</code> wherever you are.</p>\n\n<p>In short, you need to provide evidence that your object.x really really was undefined and not null or otherwise, because I believe it is impossible for what you're describing to actually be the case - no offence :) - I'd put money on the problem existing in the Tersus code.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>That's a bad practice to use the <code>==</code> equality operator instead of <code>===</code>.</p>\n\n<pre><code>undefined === undefined // true\nnull == undefined // true\nnull === undefined // false\n</code></pre>\n\n<p>The <code>object.x === undefined</code> should return <code>true</code> if <code>x</code> is unknown property.</p>\n\n<p>In chapter <a href=\"http://assets.expectnation.com/15/event/3/JavaScript_%20The%20Good%20Parts%20Paper%201.pdf\"><em>Bad Parts</em> of <em>JavaScript: The Good Parts</em></a>, Crockford writes the following:</p>\n\n<blockquote>\n  <p>If you attempt to extract a value from\n  an object, and if the object does not\n  have a member with that name, it\n  returns the undefined value instead.</p>\n  \n  <p>In addition to undefined, JavaScript\n  has a similar value called null. They\n  are so similar that == thinks they are\n  equal. That confuses some programmers\n  into thinking that they are\n  interchangeable, leading to code like</p>\n\n<pre><code>value = myObject[name];\nif (value == null) {\n    alert(name + ' not found.');\n}\n</code></pre>\n  \n  <p>It is comparing the wrong value with\n  the wrong operator. This code works\n  because it contains two errors that\n  cancel each other out. That is a crazy\n  way to program. It is better written\n  like this:</p>\n\n<pre><code>value = myObject[name];\nif (value === undefined) {\n    alert(name + ' not found.');\n}\n</code></pre>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>It turns out that you can set window.undefined to whatever you want, and so get <code>object.x !== undefined</code> when object.x is the <em>real</em> undefined.  In my case I inadvertently set undefined to null.</p>\n\n<p>The easiest way to see this happen is:</p>\n\n<pre><code>window.undefined = null;\nalert(window.xyzw === undefined); // shows false\n</code></pre>\n\n<p>Of course, this is not likely to happen.  In my case the bug was a little more subtle, and was equivalent to the following scenario.</p>\n\n<pre><code>var n = window.someName; // someName expected to be set but is actually undefined\nwindow[n]=null; // I thought I was clearing the old value but was actually changing window.undefined to null\nalert(window.xyzw === undefined); // shows false\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 52
                },
                {
                    "body": "<p>I'd like to post some important information about <code>undefined</code>, which beginners might not know.</p>\n\n<p>Look at the following code:</p>\n\n<pre><code> /* \n  * Consider there is no code above. \n  * The browser runs these lines only.\n  */\n\n   // var a;  \n   // --- commented out to point that we've forgotten to declare `a` variable \n\n   if ( a === undefined ) {\n       alert('Not defined');\n   } else {\n       alert('Defined: ' + a);\n   }\n\n   alert('Doing important job below');\n</code></pre>\n\n<p>If you run this code, where variable <code>a</code> HAS NEVER BEEN DECLARED using <code>var</code>,\nyou will get an ERROR EXCEPTION and surprisingly see no alerts at all.</p>\n\n<p>Instead of 'Doing important job below', your script will TERMINATE UNEXPECTEDLY, throwing unhandled exception on the very first line.</p>\n\n<hr>\n\n<p>Here is the only bulletproof way to check for <code>undefined</code> using <code>typeof</code> keyword, which was designed just for such purpose:</p>\n\n<pre><code>   /* \n    * Correct and safe way of checking for `undefined`: \n    */\n\n   if ( typeof a === 'undefined' ) {\n       alert(\n           'The variable is not declared in this scope, \\n' +\n           'or you are pointing to unexisting property, \\n' +\n           'or no value has been set yet to the variable, \\n' + \n           'or the value set was `undefined`. \\n' +\n           '(two last cases are equivalent, don\\'t worry if it blows out your mind.'\n           );\n   }\n\n   /* \n    *  Use `typeof` for checking things like that\n    */\n</code></pre>\n\n<p>This method works in all possible cases.</p>\n\n<p>The last argument to use it is that <code>undefined</code> can be potentially overwritten in earlier versions of Javascript:</p>\n\n<pre><code>     /* @ Trollface @ */\n        undefined = 2;\n     /* Happy debuging! */  \n</code></pre>\n\n<p>Hope I was clear enough. </p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<pre><code>var a;\n\ntypeof a === 'undefined'; // true\na === undefined; // true\ntypeof a === typeof undefined; // true\ntypeof a === typeof sdfuwehflj; // true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>From - <a href=\"http://docs.jquery.com/JQuery_Core_Style_Guidelines\">JQuery_Core_Style_Guidelines</a>   </p>\n\n<ul>\n<li><p>Global Variables:<br>\n<code>typeof variable === \"undefined\"</code>   </p></li>\n<li><p>Local Variables:<br>\n<code>variable === undefined</code>  </p></li>\n<li><p>Properties:<br>\n<code>object.prop === undefined</code></p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p><em>NOTE: As per <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.1.3\" rel=\"nofollow\">ECMAScript5.1, section 15.1.1.3</a>, window.undefined is read-only.</em></p>\n\n<ul>\n<li><em>Modern browsers implement this correctly. for example: Safari 5.1, Firefox 7, Chrome 20, etc.</em></li>\n<li><em>Undefined is still changeable in: Chrome 14, ...</em></li>\n</ul>\n\n<p>When I recently integrated <a href=\"http://en.wikipedia.org/wiki/Facebook_Platform#Facebook_Connect\" rel=\"nofollow\">Facebook Connect</a> with <a href=\"http://www.tersus.com\" rel=\"nofollow\">Tersus</a>, I initially received the error messages <code>Invalid Enumeration Value</code> and <code>Handler already exists</code> when trying to call Facebook API functions.</p>\n\n<p>It turned out that the cause of the problem was</p>\n\n<pre><code>object.x === undefined\n</code></pre>\n\n<p>returning false when there is no property 'x' in 'object'.</p>\n\n<p>I worked around the problem by replacing strict equality with regular equality in two Facebook functions:</p>\n\n<pre><code>FB.Sys.isUndefined = function(o) { return o == undefined;};\nFB.Sys.containsKey = function(d, key) { return d[key] != undefined;};\n</code></pre>\n\n<p>This made things work for me, but seems to hint at some sort of collision between Facebook's JavaScript code and my own.</p>\n\n<p>What could cause this?</p>\n\n<p>Hint:  It is well documented that <code>undefined == null</code> while <code>undefined !== null</code>. This is not the issue here. The question is how comes we get <code>undefined !== undefined</code>.</p>\n",
            "last_activity_date": 1417003321,
            "question_id": 776950,
            "score": 56,
            "tags": [
                "javascript"
            ],
            "title": "JavaScript: undefined !== undefined?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Given your current example you could achieve the result by either</p>\n\n<pre><code>var txt2 = txt1.split(' ').join(' bar ')\n</code></pre>\n\n<p>or</p>\n\n<pre><code>var txt2 = txt1.replace(' ', ' bar ');\n</code></pre>\n\n<p>but given that you can make such assumptions, you might as well skip directly to Gullen's example.</p>\n\n<p>In a situation where you really can't make any assumptions other than character index-based, then I really would go for a substring solution.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Inserting at a specific index (rather than, say, at the first space character) has to use string slicing/substring:</p>\n\n<pre><code>var txt2 = txt1.slice(0, 3) + \"bar\" + txt1.slice(3);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 54
                },
                {
                    "body": "<p>You could prototype your own <code>.splice()</code> into String.</p>\n\n<p><strong>Example:</strong> <a href=\"http://jsfiddle.net/patrick_dw/eXjBN/2\">http://jsfiddle.net/patrick_dw/eXjBN/2</a></p>\n\n<pre><code>String.prototype.splice = function( idx, rem, s ) {\n    return (this.slice(0,idx) + s + this.slice(idx + Math.abs(rem)));\n};\n\nvar result = \"foo baz\".splice( 4, 0, \"bar \" );\n\nalert(result); // \"foo bar baz\"\n</code></pre>\n\n<hr>\n\n<p><strong>EDIT:</strong> Modified it to ensure that <code>rem</code> is an absolute value.</p>\n",
                    "is_accepted": true,
                    "score": 93
                },
                {
                    "body": "<p>Try this.\nHere is a method I wrote that behaves like all other programming langauges.</p>\n\n<pre><code>String.prototype.insert = function (index, string) {\n  if (index &gt; 0)\n    return this.substring(0, index) + string + this.substring(index, this.length);\n  else\n    return string + this;\n};\n</code></pre>\n\n<p>Example of use:</p>\n\n<pre><code>var something = \"How you?\";\nsomething = something.insert(3, \" are\");\n</code></pre>\n\n<p>Simples.</p>\n\n<p>Reference: \n<a href=\"http://coderamblings.wordpress.com/2012/07/09/insert-a-string-at-a-specific-index/\">http://coderamblings.wordpress.com/2012/07/09/insert-a-string-at-a-specific-index/</a></p>\n",
                    "is_accepted": false,
                    "score": 67
                },
                {
                    "body": "<p>Yet another <em>just-for-fun</em> solution:</p>\n\n<pre><code>var index = 4,\n    word  = \"bar \";\n\n\"foo baz\".replace(/./g, function(v, i) {\n    return i === index - 1 ? v + word : v;\n});  // --&gt; foo bar baz\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>another solution, cut the string in 2 and put a string in between.</p>\n\n<pre><code>var str = jQuery('#selector').text();\n\nvar strlength = str.length;\n\nstrf = str.substr(0 , strlength - 5);\nstrb = str.substr(strlength - 5 , 5);\n\njQuery('#selector').html(strf + 'inserted' + strb);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use Regular Expressions with a <strong>dynamic</strong> pattern.</p>\n\n<pre><code>var text = \"something\";\nvar output = \"                    \";\nvar pattern = new RegExp(\"^\\\\s{\"+text.length+\"}\");\nvar output.replace(pattern,text);\n</code></pre>\n\n<p>outputs: </p>\n\n<pre><code>\"something      \"\n</code></pre>\n\n<p>This replaces <code>text.length</code> of whitespace characters at the beginning of the string <code>output</code>.\nThe <code>RegExp</code> means <code>^\\</code> - beginning of a line <code>\\s</code> any white space character, repeated <code>{n}</code> times, in this case <code>text.length</code>. Use <code>\\\\</code> to <code>\\</code> escape backslashes when building this kind of patterns out of strings.  </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just make the following function:</p>\n\n<pre><code>function insert(str, index, value) {\n    return str.substr(0, index) + value + str.substr(index);\n}\n</code></pre>\n\n<p>and then use it like that:</p>\n\n<pre><code>alert(insert(\"foo baz\", 4, \"bar \"));\n</code></pre>\n\n<p><strong>Output: foo bar baz</strong></p>\n\n<p>It behaves exactly, like the C# (Sharp) String.Insert(int startIndex, string value).</p>\n\n<p><strong>NOTE:</strong> This insert function inserts the string <strong>value</strong> (third parameter) <strong>before</strong> the specified integer <strong>index</strong> (second parameter) in the string <strong>str</strong> (first parameter), and then returns the new string without changing <strong>str</strong>!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If anyone is looking for a way to insert text at multiple indices in a string, try this out:</p>\n\n<pre><code>String.prototype.insertTextAtIndices = function(text) {\n    return this.replace(/./g, function(char, index) {\n        return text[index] ? text[index] + char : char;\n    });\n};\n</code></pre>\n\n<p>For example, you can use this to insert <code>&lt;span&gt;</code> tags at certain offsets in a string:</p>\n\n<pre><code>var text = {\n    6: \"&lt;span&gt;\",\n    11: \"&lt;/span&gt;\"\n};\n\n\"Hello world!\".insertTextAtIndices(text); // returns \"Hello &lt;span&gt;world&lt;/span&gt;!\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is basically doing what @Bass33 is doing except I'm also giving the option of using a negative index to count from the end.  Kind of like the substr method allows.</p>\n\n<pre><code>// use a negative index to insert relative to the end of the string.\n\nString.prototype.insert = function (index, string) {\n  var ind = index &lt; 0 ? this.length + index  :  index;\n  return  this.substring(0, ind) + string + this.substring(ind, this.length);\n};\n</code></pre>\n\n<p>Use case: \nLets say you have full size images using a naming convention but can't update the data to also provide thumbnail urls.</p>\n\n<pre><code>var url = '/images/myimage.jpg';\nvar thumb = url.insert(-4, '_thm');\n\n//    result:  '/images/myimage_thm.jpg'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can I insert a string at a specific index of another string? </p>\n\n<pre><code> var txt1 = \"foo baz\"\n</code></pre>\n\n<p>Suppose I want to insert \"bar \" after the \"foo\" how can I achieve that? I thought of substring, but there must be a simpler more straight forward way?</p>\n",
            "last_activity_date": 1414160245,
            "question_id": 4313841,
            "score": 68,
            "tags": [
                "javascript"
            ],
            "title": "JavaScript: How can I insert a string at a specific index"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>They both do the same thing, but literal notation takes less space.  It's clearly recognizable as to what is happening, so using <code>new object()</code>, you are really just typing more.</p>\n\n<p>These </p>\n\n<pre><code>person = new Object() /*You should put a semicolon here too.  \nIt's not required, but it is good practice.*/ \n-or-\n\nperson = {\n    property1 : \"Hello\"\n};\n</code></pre>\n\n<p>technically do not do the same thing.  The first just creates an object.  The second creates one and assigns a property.  For the first one to be the same you then need a second step to create and assign the property.</p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>In JavaScript, we can declare a new empty object in two ways:</p>\n\n<pre><code>var obj1 = new Object();  \nvar obj2 = {};  \n</code></pre>\n\n<p>I have found nothing to suggest that there is any significant difference these two with regard to how they operate behind the scenes (please correct me if i am wrong \u2013 I would love to know). However, the second method (using the object literal notation) offers a few advantages.</p>\n\n<ol>\n<li>It is shorter (10 characters to be precise)</li>\n<li>It is easier, and more structured to create objects on the fly</li>\n<li>It doesn\u2019t matter if some buffoon has inadvertently overridden Object</li>\n</ol>\n\n<p>Consider a new object that contains the members Name and TelNo. Using the new Object() convention, we can create it like this:</p>\n\n<pre><code>var obj1 = new Object();  \nobj1.Name = \"A Person\";  \nobj1.TelNo = \"12345\"; \n</code></pre>\n\n<p>The <a href=\"http://it.toolbox.com/blogs/think-clients/javascript-the-redheaded-stepchild-of-web-development-18471\">Expando Properties</a> feature of JavaScript allows us to create new members this way on the fly, and we achieve what were intending. However, this way isn\u2019t very structured or encapsulated. What if we wanted to specify the members upon creation, without having to rely on expando properties and assignment post-creation?</p>\n\n<p>This is where the object literal notation can help:</p>\n\n<pre><code>var obj1 = {Name:\"A Person\",TelNo=\"12345\"};  \n</code></pre>\n\n<p>Here we have achieved the same effect in one line of code and significantly fewer characters.</p>\n\n<p>A further discussion the object construction methods above can be found at: <a href=\"http://www.javascriptkit.com/javatutors/oopjs.shtml\">JavaScript and Object Oriented Programming (OOP).</a></p>\n\n<p>And finally, what of the idiot who overrode Object? Did you think it wasn\u2019t possible? Well, <a href=\"http://jsfiddle.net/Pdsr2/\">this JSFiddle</a> proves otherwise. Using the object literal notation prevents us from falling foul of this buffoonery.</p>\n\n<p>(From <a href=\"http://www.jameswiseman.com/blog/2011/01/19/jslint-messages-use-the-object-literal-notation/\">http://www.jameswiseman.com/blog/2011/01/19/jslint-messages-use-the-object-literal-notation/</a>)</p>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>There is no difference for a simple object without methods as in your example.\nHowever, there is a big difference when you start adding methods to your object.</p>\n\n<p>Literal way :</p>\n\n<pre><code>function Obj( prop ) { \n return { \n p : prop, \n sayHello : function(){ alert(this.p); }, \n }; \n} \n</code></pre>\n\n<p>Prototype way :</p>\n\n<pre><code>function Obj( prop ) { \n this.p = prop; \n} \nObj.prototype.sayHello = function(){alert(this.p);}; \n</code></pre>\n\n<p>With both of these code, you can create instances of Obj like this:</p>\n\n<pre><code>var foo = new Obj( \"hello\" ); \n</code></pre>\n\n<p>However, with the literal way you carry a copy of the sayHello method within each instance of your objects, whereas with the prototype way the method is defined in the object prototype and shared between all object instances.\nIf you have a lot of objects and/or a lot of methods, the literal way can lead to quite big memory waste.</p>\n",
                    "is_accepted": false,
                    "score": 74
                },
                {
                    "body": "<p>Everyone here is talking about the similarities of the two. I am gonna point out the differences.</p>\n\n<ol>\n<li><p>Using <code>new Object()</code> allows you to pass another object. The obvious outcome is that the newly created object will be set to the same reference. Here is a sample code:</p>\n\n<pre><code>var obj1 = new Object();\nobj1.a = 1;\nvar obj2 = new Object(obj1);\nobj2.a // 1\n</code></pre></li>\n<li><p>The usage is not limited to objects as in OOP objects. Other types could be passed to it too. The function will set the type accordingly. For example if we pass integer 1 to it, an object of type number will be created for us. </p>\n\n<pre><code>var obj = new Object(1);\ntypeof obj // \"number\"\n</code></pre></li>\n<li><p>The object created using the above method (<code>new Object(1)</code>) would be converted to object type if a property is added to it.</p>\n\n<pre><code>var obj = new Object(1);\ntypeof obj // \"number\"\nobj.a = 2;\ntypeof obj // \"object\"\n</code></pre></li>\n<li><p>If the object is a copy of a child class of object, we could add the property without the type conversion.</p>\n\n<pre><code>var obj = new Object(\"foo\");\ntypeof obj // \"object\"\nobj === \"foo\" // true\nobj.a = 1;\nobj === \"foo\" // true\nobj.a // 1\nvar str = \"foo\";\nstr.a = 1;\nstr.a // undefined\n</code></pre></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Also, according to some of the O'Really javascript books....(quoted)</p>\n\n<p>Another reason for using literals as opposed to the Object constructor is that there is no scope resolution. Because it\u2019s possible that you have created a local constructor with the same name, the interpreter needs to look up the scope chain from the place you are calling Object() all the way up until it finds the global Object constructor. </p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>On my machine using nodejs I ran the following:</p>\n\n<pre><code>console.log('Testing Array:');\nconsole.time('using[]');\nfor(var i=0; i&lt;200000000; i++){var arr = []};\nconsole.timeEnd('using[]');\n\nconsole.time('using new');\nfor(var i=0; i&lt;200000000; i++){var arr = new Array};\nconsole.timeEnd('using new');\n\nconsole.log('Testing Object:');\n\nconsole.time('using{}]');\nfor(var i=0; i&lt;200000000; i++){var obj = {}};\nconsole.timeEnd('using{}');\n\nconsole.time('using new');\nfor(var i=0; i&lt;200000000; i++){var obj = new Object};\nconsole.timeEnd('using new');\n</code></pre>\n\n<p>note, this is an extension of what is found here: <a href=\"http://stackoverflow.com/questions/7375120/why-is-arr-faster-than-arr-new-array\">Why is arr = [] faster than arr = new Array?</a></p>\n\n<p>my output was the following:</p>\n\n<pre><code>Testing Array:\nusing[]: 1091ms\nusing new: 2286ms\nTesting Object:\nusing{}: 870ms\nusing new: 5637ms\n</code></pre>\n\n<p>so clearly {} and [] are faster than using new for creating empty objects/arrays.</p>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>What is the difference between this constructor-based syntax for creating an object:</p>\n\n<pre><code>person = new Object()\n</code></pre>\n\n<p>...and this literal syntax:</p>\n\n<pre><code>person = {\n    property1 : \"Hello\"\n};\n</code></pre>\n\n<p>It appears that both do the same thing, although JSLint prefers you use object literal notation.</p>\n\n<p>Which one is better and why?</p>\n",
            "last_activity_date": 1419865870,
            "question_id": 4597926,
            "score": 50,
            "tags": [
                "javascript",
                "object",
                "jslint"
            ],
            "title": "What is the difference between `new Object()` and object literal notation?"
        }
    ]
}
