{
    "items": [
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<pre><code>jsonDateNow = String.Format(\"Date({0},{1},{2})\", Date().Now.getYear(), Date().Now.getMonth() -1, Date().Now.getDay());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This example works</p>\n\n<pre><code>    JavaScriptSerializer serializer = new JavaScriptSerializer();\n\n    DateTime dt = DateTime.Now;\n    DateTime dt1 = dt;\n\n    string jsonDateNow = serializer.Serialize(dt1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is a <a href=\"http://msdn.microsoft.com/en-us/library/bb299886.aspx#intro%5Fto%5Fjson%5Fsidebarb\">known limitation</a> with JSON. <a href=\"http://stackoverflow.com/questions/726334/asp-mvc-jsonresult-date-format\">This answer</a> might help you, specifically:</p>\n\n<pre><code>value = new Date(parseInt(value.replace(\"/Date(\", \"\").replace(\")/\",\"\"), 10));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 42
                },
                {
                    "body": "<p>This seems to work (Thanks Chris S for the idea). In the C# do a replace to remove the string wrapper from around the date object;</p>\n\n<pre><code>    using System.Collections.Generic;\n        using System.Linq;\n        using System.Web;\n        using System.Web.UI;\n        using System.Web.Script.Serialization;\n        using System.Web.Script.Services;\n        using System.Web.Services;\n        using System.Web.UI.WebControls;\n\n        namespace test\n        {\n            [ScriptService]\n            public partial class testing: System.Web.UI.Page\n            {\n            \tprotected string strCaseID;\n            \tprotected string jsonCase;\n\n            \tprotected void Page_Load(object sender, EventArgs e)\n            \t{\n            \t\tif (!IsPostBack)\n            \t\t{\n            \t\t\tstrCaseID =Tools.GetQueryObject(\"id\");\n                        // get a complex object with dates, string, arrays etc.\n            \t\t\tjsonESHACase = new JavaScriptSerializer().Serialize(objCase.Get(strCaseID ))\n            \t\t\t\t.Replace(\"\\\"\\\\/Date(\", \"new Date(\").Replace(\")\\\\/\\\"\", \")\");\n            \t\t}\n            \t}\n            }\n        }\n</code></pre>\n\n<p>..and after removing the quotes and adding the new prefix to Date this js now works. Hooray!</p>\n\n<pre><code>testCase= &lt;%= jsonESHACase %&gt;;\n    if (testCase) {\n    \tdocument.write(testCase[\"ClosingDate\"].format(\"MM dd yyyy\"));\n    }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>With a little string manipulation and an eval you can create a Date object</p>\n\n<pre><code>var dteNow = \"\\/Date(1249335477787)\\/\";\nvar dteObj = eval(\"new \" + dteNow.replace(/\\//g,\"\"));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've found that this is a useful technique for dealing with this problem:</p>\n\n<p><a href=\"http://icanmakethiswork.blogspot.co.uk/2012/04/beg-steal-or-borrow-decent-javascript.html\" rel=\"nofollow\">http://icanmakethiswork.blogspot.co.uk/2012/04/beg-steal-or-borrow-decent-javascript.html</a></p>\n\n<p>It allows DateTimes to be serialised as ISO 8601 date strings which can be used with the JavaScript Date constructor and has the bonus of being human readable.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can try this:</p>\n\n<pre><code>\"MyField: \" + string.Format(\"(function(y,m,d,h,mm,s){{var d=new Date(Date.UTC(y,m-1,d,h,mm,s));return d;}})({0},{1},{2},{3},{4},{5})\", d.Year, d.Month, d.Day, d.Hour, d.Minute, d.Second);\n</code></pre>\n\n<p>This seems to work in FF and IE.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Simple javascript manipulation like this:</p>\n\n<pre><code>function(param){\n  var date = new Date(parseInt(param.substr(6)));\n  return date;\n}\n</code></pre>\n\n<p>Pass in JSON date as param to the function and it will return a javascript date.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here's an option using Date.parse and DateTime.ToString:</p>\n\n<pre><code>var lowerBound = new Date(Date.parse(\"@Model.LowerBound.ToString(\"MMMM dd, yyyy\")\"));\n</code></pre>\n\n<p>If you need time, consider the following.  I believe this relies on a newer javascript spec:</p>\n\n<pre><code>var lowerBound = new Date(Date.parse(\"@Model.LowerBound.ToUniversalTime().ToString(\"s\")\"));\n</code></pre>\n\n<p>Here's an option using jQuery:(I'm sure there's a way to add the time here)</p>\n\n<pre><code>var lowerBound = $.datepicker.parseDate('yy-mm-dd', \"@Model.LowerBound.ToString(\"yyyy-MM-dd\")\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If using from <code>Json.NET</code> or <code>Newtonsoft.Json</code> look at this link:\n<a href=\"http://james.newtonking.com/json/help/index.html?topic=html/DatesInJSON.htm\" rel=\"nofollow\">Serializing Dates in JSON</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>When I parse a DateTime to json in .Net it returns a string (i.e. <code>\"\\/Date(1249335194272)\\/\"</code>). How do I make it return a js Date object constructor not wrap in a string?</p>\n\n<pre><code>// js server code\nvar dteNow = &lt;%= jsonDateNow %&gt;;\n\n\n// js rendered code\nvar dteNow = \"\\/Date(1249335477787)\\/\";\n\n\n// C#\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;\nusing System.Web.UI;\nusing System.Web.Script.Serialization;\nusing System.Web.UI.WebControls;\n\nnamespace testing{\n    public partial class iTaxPrep : System.Web.UI.Page\n    {\n    \tprotected string jsonDateNow;\n    \tprotected void Page_Load(object sender, EventArgs e)\n    \t{\n    \t\tif (!IsPostBack)\n    \t\t{\n    \t\t\tjsonDateNow = new JavaScriptSerializer().Serialize(DateTime.Now);\n\n    \t\t}\n    \t}\n    }\n}\n</code></pre>\n",
            "last_activity_date": 1402816755,
            "question_id": 1224793,
            "score": 33,
            "tags": [
                "c#",
                "asp.net",
                "javascript",
                "datetime",
                "serialization"
            ],
            "title": "Javascript serialization of DateTime in asp.net is not giving a javascript date object?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>These do the same thing:</p>\n\n<pre><code>window.location.assign(url);\nwindow.location = url;\nwindow.location.href = url;\n</code></pre>\n\n<p>They simply navigate to the new URL. The <code>replace</code> method on the other hand navigates to the URL without adding a new record to the history.</p>\n\n<p>So, what you have read in those many forms is not correct. The <code>assign</code> method does add a new record to the history.</p>\n\n<p>Reference: <a href=\"https://developer.mozilla.org/en/window.location\">http://developer.mozilla.org/en/window.location</a></p>\n",
                    "is_accepted": false,
                    "score": 41
                },
                {
                    "body": "<p>The part about not being able to use the Back button is a common misinterpretation. window.location.replace(URL) throws out the <em>top</em> ONE entry from the page history list, by overwriting it with the new entry, so the user can't easily go Back to that ONE particular webpage. The function does NOT wipe out the <em>entire</em> page history list, nor does it make the Back button completely non-functional.</p>\n\n<p>(NO function nor combination of parameters that I know of can change or overwrite history list entries that <em>you</em> don't own absolutely for certain - browsers generally impelement this security limitation by simply not even defining any operation that might at all affect any entry other than the <em>top</em> one in the page history list. I shudder to think what sorts of dastardly things malware might do if such a function existed.)</p>\n\n<p>If you really want to make the Back button non-functional (probably not \"user friendly\": think again if that's <em>really</em> what you want to do), \"open\" a brand new window. (You can \"open\" a popup that doesn't even <em>have</em> a \"Back\" button too  ...but popups aren't very popular these days:-) If you want to keep your page showing no matter what the user does (again the \"user friendliness\" is questionable), set up a window.onunload handler that just reloads your page all over again clear from the very beginning every time.  </p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>What is the difference between </p>\n\n<ol>\n<li><code>window.location.href=\"http://example.com\";</code></li>\n<li><code>window.location.replace(\"http://example.com\");</code></li>\n<li><code>window.location.assign(\"http://example.com\");</code></li>\n</ol>\n\n<p>I read in many forums that <code>window.location.assign()</code> just replaces the current session history and hence back button of browser will not function. However, I am not able to reproduce this. </p>\n\n<pre><code>function fnSetVariable() {\n    //window.location.href = \"http://example.com\";\n    window.location.replace(\"http://example.com\");\n    //window.location.assign(\"http://example.com\");\n}\n\n&lt;a onmouseover=\"fnSetVariable();\" \n   href=\"PageCachingByParam.aspx?id=12\" &gt;\n   CLICK \n&lt;/a&gt;\n</code></pre>\n",
            "last_activity_date": 1360039419,
            "question_id": 7703689,
            "score": 32,
            "tags": [
                "javascript",
                "dom",
                "location"
            ],
            "title": "Difference between window.location.href, window.location.replace and window.location.assign"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The answer is \"no\", in general. If you're using JavaScript in some server-side environment (that is, not in a browser), then all bets are off and you can try to do anything you want.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There's now a new method of measuring microseconds in javascript:\n<a href=\"http://gent.ilcore.com/2012/06/better-timer-for-javascript.html\">http://gent.ilcore.com/2012/06/better-timer-for-javascript.html</a></p>\n\n<p>However, in the past, I found a crude method of getting 0.1 millisecond precision in JavaScript out of a millisecond timer.  Impossible?  Nope.  Keep reading:</p>\n\n<p>I'm doing some high-precisio experiments that requires self-checked timer accuracies, and found I was able to reliably get 0.1 millisecond precision with certain browsers on certain systems.</p>\n\n<p>I have found that in modern GPU-accelerated web browsers on fast systems (e.g. i7 quad core, where several cores are idle, only browser window) -- I can now trust the timers to be millisecond-accurate.  In fact, it's become so accurate on an idle i7 system, I've been able to reliably get the exact same millisecond, over more than 1,000 attempts.  Only when I'm trying to do things like load an extra web page, or other, the millisecond accuracy degrades (And I'm able to successfully catch my own degraded accuracy by doing a before-and-after time check, to see if my processing time suddenly lengthened to 1 or more milliseconds -- this helps me invalidate results that has probably been too adversely affected by CPU fluctuations).</p>\n\n<p>It's become so accurate in some GPU accelerated browsers on i7 quad-core systems (when the browser window is the only window), that I've found I wished I could access a 0.1ms precision timer in JavaScript, since the accuracy is finally now there on some high-end browsing systems to make such timer precision worthwhile for certain types of niche applications that requires high-precision, and where the applications are able to self-verify for accuracy deviations.</p>\n\n<p>Obviously if you are doing several passes, you can simply run multiple passes (e.g. 10 passes) then divide by 10 to get 0.1 millisecond precision.  That is a common method of getting better precision -- do multiple passes and divide the total time by number of passes.</p>\n\n<p>HOWEVER...If I can only do a single benchmark pass of a specific test due to an unusually unique situation, I found out that I can get 0.1 (And sometimes 0.01ms) precision by doing this:</p>\n\n<p>Initialization/Calibration:</p>\n\n<ol>\n<li>Run a busy loop to wait until timer increments to the next millisecond (align timer to beginning of next millisecond interval)  This busy loop lasts less than a millisecond.</li>\n<li>Run another busy loop to increment a counter while waiting for timer to increment.  The counter tells you how many counter increments occured in one millisecond.  This busy loop lasts one full millisecond.</li>\n<li>Repeat the above, until the numbers become ultra-stable (loading time, JIT compiler, etc).  4. <em>NOTE</em>: The stability of the number gives you your attainable precision on an idle system.  You can calculate the variance, if you need to self-check the precision.  The variances are bigger on some browsers, and smaller on other browsers.  Bigger on faster systems and slower on slower systems.  Consistency varies too.  You can tell which browsers are more consistent/accurate than others.  Slower systems and busy systems will lead to bigger variances between initialization passes.  This can give you an opportunity to display a warning message if the browser is not giving you enough precision to allow 0.1ms or 0.01ms measurements.  Timer skew can be a problem, but some integer millisecond timers on some systems increment quite accurately (quite right on the dot), which will result in very consistent calibration values that you can trust.</li>\n<li>Save the final counter value (or average of the last few calibration passes)</li>\n</ol>\n\n<p>Benchmarking one pass to sub-millisecond precision:</p>\n\n<ol>\n<li>Run a busy loop to wait until timer increments to the next millisecond (align timer to beginning of next millisecond interval).  This busy loop lasts less than a millisecond.</li>\n<li>Execute the task you want to precisely benchmark the time.</li>\n<li>Check the timer. This gives you the integer milliseconds.</li>\n<li>Run a final busy loop to increment a counter while waiting for timer to increment.  This busy loop lasts less than a millisecond.</li>\n<li>Divide this counter value, by the original counter value from initialization.</li>\n<li>Now you got the decimal part of milliseconds!!!!!!!!</li>\n</ol>\n\n<p>WARNING: Busy loops are NOT recommended in web browsers, but fortunately, these busy loops run for less than 1 millisecond each, and are only run a very few times.</p>\n\n<p>Variables such as JIT compilation and CPU fluctuations add massive inaccuracies, but if you run several initialization passes, you'll have full dynamic recompilation, and eventually the counter settles to something very accurate.  Make sure that all busy loops is exactly the same function for all cases, so that differences in busy loops do not lead to differences.  Make sure all lines of code are executed several times before you begin to trust the results, to allow JIT compilers to have already stabilized to a full dynamic recompilation (dynarec).</p>\n\n<p>In fact, I witnessed precision approaching microseconds on <em>certain</em> systems, but I wouldn't trust it yet.  But the 0.1 millisecond precision appears to work quite reliably, on an idle quad-core system where I'm the only browser page.   I came to a scientific test case where I could only do one-off passes (due to unique variables occuring), and needed to precisely time each pass, rather than averaging multiple repeat pass, so that's why I did this.   </p>\n\n<p>I did several pre-passes and dummy passes (also to settle the dynarec), to verify reliability of 0.1ms precision (stayed solid for several seconds), then kept my hands off the keyboard/mouse, while the benchmark occured, then did several post-passes to verify reliability of 0.1ms precision (stayed solid again).  This also verifies that things such as power state changes, or other stuff, didn't occur between the before-and-after, interfering with results.  Repeat the pre-test and post-test between every single benchmark pass.   Upon this, I was quite virtually certain the results in between were accurate.  There is no guarantee, of course, but it goes to show that accurate &lt;0.1ms precision is possible in <em>some</em> cases in a web browser.</p>\n\n<p>This method is only useful in very, very <em>niche</em> cases.  Even so, it literally won't be 100% infinitely guaranteeable, you can gain quite very trustworthy accuracy, and even scientific accuracy when combined with several layers of internal and external verifications.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>As alluded to in Mark Rejhon's answer, there is an API available in modern browsers that exposes sub-millisecond resolution timing data to script: the <a href=\"http://www.w3.org/TR/hr-time/\">W3C High Resolution Timer</a>, aka <code>window.performance.now()</code>.</p>\n\n<p><code>now()</code> is better than the traditional <code>Date.getTime()</code> in two important ways:</p>\n\n<ol>\n<li><p><code>now()</code> is a double with submillisecond resolution that represents the number of milliseconds since the start of the page's navigation.  It returns the number of microseconds in the fractional (e.g. a value of 1000.123 is 1 second and 123 microseconds).</p></li>\n<li><p><code>now()</code> is monotonically increasing.  This is important as <code>Date.getTime()</code> can <em>possibly</em> jump forward or even backward on subsequent calls.  Notably, if the OS's system time is updated (e.g. atomic clock synchronization), <code>Date.getTime()</code> is also updated.  <code>now()</code> is guaranteed to always be monotonically increasing, so it is not affected by the OS's system time -- it will always be wall-clock time (assuming your wall clock is not atomic...).</p></li>\n</ol>\n\n<p><code>now()</code> can be used in almost every place that <code>new Date.getTime()</code>, <code>+ new Date</code> andt <code>Date.now()</code> are.  The exception is that <code>Date</code> and <code>now()</code> times don't mix, as <code>Date</code> is based on <a href=\"http://en.wikipedia.org/wiki/Unix_time\">unix-epoch</a> (the number of milliseconds since 1970), while <code>now()</code> is the number of milliseconds since your page navigation started (so it will be much smaller than <code>Date</code>).</p>\n\n<p><code>now()</code> is supported in Chrome stable, Firefox 15+, and IE10.  There are also several <a href=\"https://gist.github.com/paulirish/5438650\">polyfills</a> available.</p>\n",
                    "is_accepted": true,
                    "score": 23
                }
            ],
            "body": "<p>Are there any timing functions in JavaScript with microsecond resolution?</p>\n\n<p>I am aware of <a href=\"https://github.com/eligrey/timer.js\">timer.js</a> for Chrome, and am hoping there will be a solution for other friendly browsers, like Firefox, Safari, Opera, Epiphany, Konqueror, etc.  I'm not interested in supporting any IE, but answers <em>including</em> IE are welcome.</p>\n\n<p>(Given the poor accuracy of millisecond timing in JS, I'm not holding my breath on this one!)</p>\n\n<p>Update: timer.js advertises microsecond resolution, but it simply divides the millisecond reading by 1,000.  Verified by testing and code inspection.  Disappointed. :[</p>\n",
            "last_activity_date": 1389723275,
            "question_id": 6233927,
            "score": 27,
            "tags": [
                "javascript"
            ],
            "title": "Microsecond timing in JavaScript"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>I don't know of a way to do that (you can <a href=\"http://stackoverflow.com/questions/1043339/javascript-for-detecting-browser-language-preference\">get the language</a> and try to deduct the locale from that).</p>\n\n<p>I tried to cook a little something to try and do that (only tested on Firefox with one locale). should work as long as the short date string includes the date as digits, so it might fail for, say, arabic. It might have other bugs too, i don't know all the different locales peculiarities, this is just a concept...</p>\n\n<pre><code>function getShortDateFormat() {\n    var d = new Date(1992, 0, 7);\n    var s = d.toLocaleDateString();\n\n    function formatReplacer(str) {\n        var num = parseInt(str);\n        switch (num % 100) {\n            case 92:\n                return str.replace(/.{1}/g, \"Y\");\n            case 1:\n                return str.length == 1 ? \"mM\" : \"MM\"\n            case 7:\n                return str.length == 1 ? \"dD\" : \"DD\"\n        }\n    }\n\n    shortDateFormat = s.replace(/\\d+/g, formatReplacer);\n    return shortDateFormat;\n}\n\ngetShortDateFormat();\n</code></pre>\n\n<p>The outputted format will be:</p>\n\n<ul>\n<li>Y: the number of digits to represent years </li>\n<li>dD = short day (i.e. use only one digit when possible) </li>\n<li>DD = long day format (i.e. two digits always) </li>\n<li>mM/MM - same for months</li>\n</ul>\n\n<p>So in my browser, the shortDateformat you get is \"MM/DD/YYYY\". </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This depends on the browser's toLocaleDateString() implementation.\nFor example in chrome you will get something like: \"Tuesday, January DD, YYYY\"</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>Can't be done.</strong></p>\n\n<p>Cross-browser JavaScript has no way to use the actual short date format selected by the user on platforms that offer such regional customization. Besides, JavaScript has huge holes where any sort of formatting is concerned. Look how much hassle zero-padding is!</p>\n\n<p>You can go to great lengths to obtain the language setting, and get the <em>typical</em> format for that locale. That's a lot of work when you don't even know if it's the correct locale (I'd bet that international language headers are often incorrect or not specific enough), or if the user has customized the format to something else.</p>\n\n<p>You can try using client VBScript (which has functions for all of these regional formatting permutations), but that's not a good idea because it's a dying (dead?) IE-specific technology.</p>\n\n<p>You can also try using Java/Flash/Silverlight to dig up the format. This is also a great deal of extra work, but may have the best chance for success. You'd want to cache it for the session to minimize the overhead.</p>\n\n<p>Hopefully the HTML5 &lt;time&gt; element will provide some relief for i18n date/time display.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There is no easy way. If you want a reliable, cross-browser solution, you'd have to build a lookup table of date, and time format strings, by culture. To format a date, parse the corresponding format string, extract the relevant parts from the date, i.e. day, month, year, and append them together. </p>\n\n<p>This is essentially what Microsoft does with their AJAX library, as shown in @no's answer.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>function getLocaleShortDateString(d)\n{\n    var f={\"ar-SA\":\"dd/MM/yy\",\"bg-BG\":\"dd.M.yyyy\",\"ca-ES\":\"dd/MM/yyyy\",\"zh-TW\":\"yyyy/M/d\",\"cs-CZ\":\"d.M.yyyy\",\"da-DK\":\"dd-MM-yyyy\",\"de-DE\":\"dd.MM.yyyy\",\"el-GR\":\"d/M/yyyy\",\"en-US\":\"M/d/yyyy\",\"fi-FI\":\"d.M.yyyy\",\"fr-FR\":\"dd/MM/yyyy\",\"he-IL\":\"dd/MM/yyyy\",\"hu-HU\":\"yyyy. MM. dd.\",\"is-IS\":\"d.M.yyyy\",\"it-IT\":\"dd/MM/yyyy\",\"ja-JP\":\"yyyy/MM/dd\",\"ko-KR\":\"yyyy-MM-dd\",\"nl-NL\":\"d-M-yyyy\",\"nb-NO\":\"dd.MM.yyyy\",\"pl-PL\":\"yyyy-MM-dd\",\"pt-BR\":\"d/M/yyyy\",\"ro-RO\":\"dd.MM.yyyy\",\"ru-RU\":\"dd.MM.yyyy\",\"hr-HR\":\"d.M.yyyy\",\"sk-SK\":\"d. M. yyyy\",\"sq-AL\":\"yyyy-MM-dd\",\"sv-SE\":\"yyyy-MM-dd\",\"th-TH\":\"d/M/yyyy\",\"tr-TR\":\"dd.MM.yyyy\",\"ur-PK\":\"dd/MM/yyyy\",\"id-ID\":\"dd/MM/yyyy\",\"uk-UA\":\"dd.MM.yyyy\",\"be-BY\":\"dd.MM.yyyy\",\"sl-SI\":\"d.M.yyyy\",\"et-EE\":\"d.MM.yyyy\",\"lv-LV\":\"yyyy.MM.dd.\",\"lt-LT\":\"yyyy.MM.dd\",\"fa-IR\":\"MM/dd/yyyy\",\"vi-VN\":\"dd/MM/yyyy\",\"hy-AM\":\"dd.MM.yyyy\",\"az-Latn-AZ\":\"dd.MM.yyyy\",\"eu-ES\":\"yyyy/MM/dd\",\"mk-MK\":\"dd.MM.yyyy\",\"af-ZA\":\"yyyy/MM/dd\",\"ka-GE\":\"dd.MM.yyyy\",\"fo-FO\":\"dd-MM-yyyy\",\"hi-IN\":\"dd-MM-yyyy\",\"ms-MY\":\"dd/MM/yyyy\",\"kk-KZ\":\"dd.MM.yyyy\",\"ky-KG\":\"dd.MM.yy\",\"sw-KE\":\"M/d/yyyy\",\"uz-Latn-UZ\":\"dd/MM yyyy\",\"tt-RU\":\"dd.MM.yyyy\",\"pa-IN\":\"dd-MM-yy\",\"gu-IN\":\"dd-MM-yy\",\"ta-IN\":\"dd-MM-yyyy\",\"te-IN\":\"dd-MM-yy\",\"kn-IN\":\"dd-MM-yy\",\"mr-IN\":\"dd-MM-yyyy\",\"sa-IN\":\"dd-MM-yyyy\",\"mn-MN\":\"yy.MM.dd\",\"gl-ES\":\"dd/MM/yy\",\"kok-IN\":\"dd-MM-yyyy\",\"syr-SY\":\"dd/MM/yyyy\",\"dv-MV\":\"dd/MM/yy\",\"ar-IQ\":\"dd/MM/yyyy\",\"zh-CN\":\"yyyy/M/d\",\"de-CH\":\"dd.MM.yyyy\",\"en-GB\":\"dd/MM/yyyy\",\"es-MX\":\"dd/MM/yyyy\",\"fr-BE\":\"d/MM/yyyy\",\"it-CH\":\"dd.MM.yyyy\",\"nl-BE\":\"d/MM/yyyy\",\"nn-NO\":\"dd.MM.yyyy\",\"pt-PT\":\"dd-MM-yyyy\",\"sr-Latn-CS\":\"d.M.yyyy\",\"sv-FI\":\"d.M.yyyy\",\"az-Cyrl-AZ\":\"dd.MM.yyyy\",\"ms-BN\":\"dd/MM/yyyy\",\"uz-Cyrl-UZ\":\"dd.MM.yyyy\",\"ar-EG\":\"dd/MM/yyyy\",\"zh-HK\":\"d/M/yyyy\",\"de-AT\":\"dd.MM.yyyy\",\"en-AU\":\"d/MM/yyyy\",\"es-ES\":\"dd/MM/yyyy\",\"fr-CA\":\"yyyy-MM-dd\",\"sr-Cyrl-CS\":\"d.M.yyyy\",\"ar-LY\":\"dd/MM/yyyy\",\"zh-SG\":\"d/M/yyyy\",\"de-LU\":\"dd.MM.yyyy\",\"en-CA\":\"dd/MM/yyyy\",\"es-GT\":\"dd/MM/yyyy\",\"fr-CH\":\"dd.MM.yyyy\",\"ar-DZ\":\"dd-MM-yyyy\",\"zh-MO\":\"d/M/yyyy\",\"de-LI\":\"dd.MM.yyyy\",\"en-NZ\":\"d/MM/yyyy\",\"es-CR\":\"dd/MM/yyyy\",\"fr-LU\":\"dd/MM/yyyy\",\"ar-MA\":\"dd-MM-yyyy\",\"en-IE\":\"dd/MM/yyyy\",\"es-PA\":\"MM/dd/yyyy\",\"fr-MC\":\"dd/MM/yyyy\",\"ar-TN\":\"dd-MM-yyyy\",\"en-ZA\":\"yyyy/MM/dd\",\"es-DO\":\"dd/MM/yyyy\",\"ar-OM\":\"dd/MM/yyyy\",\"en-JM\":\"dd/MM/yyyy\",\"es-VE\":\"dd/MM/yyyy\",\"ar-YE\":\"dd/MM/yyyy\",\"en-029\":\"MM/dd/yyyy\",\"es-CO\":\"dd/MM/yyyy\",\"ar-SY\":\"dd/MM/yyyy\",\"en-BZ\":\"dd/MM/yyyy\",\"es-PE\":\"dd/MM/yyyy\",\"ar-JO\":\"dd/MM/yyyy\",\"en-TT\":\"dd/MM/yyyy\",\"es-AR\":\"dd/MM/yyyy\",\"ar-LB\":\"dd/MM/yyyy\",\"en-ZW\":\"M/d/yyyy\",\"es-EC\":\"dd/MM/yyyy\",\"ar-KW\":\"dd/MM/yyyy\",\"en-PH\":\"M/d/yyyy\",\"es-CL\":\"dd-MM-yyyy\",\"ar-AE\":\"dd/MM/yyyy\",\"es-UY\":\"dd/MM/yyyy\",\"ar-BH\":\"dd/MM/yyyy\",\"es-PY\":\"dd/MM/yyyy\",\"ar-QA\":\"dd/MM/yyyy\",\"es-BO\":\"dd/MM/yyyy\",\"es-SV\":\"dd/MM/yyyy\",\"es-HN\":\"dd/MM/yyyy\",\"es-NI\":\"dd/MM/yyyy\",\"es-PR\":\"dd/MM/yyyy\",\"am-ET\":\"d/M/yyyy\",\"tzm-Latn-DZ\":\"dd-MM-yyyy\",\"iu-Latn-CA\":\"d/MM/yyyy\",\"sma-NO\":\"dd.MM.yyyy\",\"mn-Mong-CN\":\"yyyy/M/d\",\"gd-GB\":\"dd/MM/yyyy\",\"en-MY\":\"d/M/yyyy\",\"prs-AF\":\"dd/MM/yy\",\"bn-BD\":\"dd-MM-yy\",\"wo-SN\":\"dd/MM/yyyy\",\"rw-RW\":\"M/d/yyyy\",\"qut-GT\":\"dd/MM/yyyy\",\"sah-RU\":\"MM.dd.yyyy\",\"gsw-FR\":\"dd/MM/yyyy\",\"co-FR\":\"dd/MM/yyyy\",\"oc-FR\":\"dd/MM/yyyy\",\"mi-NZ\":\"dd/MM/yyyy\",\"ga-IE\":\"dd/MM/yyyy\",\"se-SE\":\"yyyy-MM-dd\",\"br-FR\":\"dd/MM/yyyy\",\"smn-FI\":\"d.M.yyyy\",\"moh-CA\":\"M/d/yyyy\",\"arn-CL\":\"dd-MM-yyyy\",\"ii-CN\":\"yyyy/M/d\",\"dsb-DE\":\"d. M. yyyy\",\"ig-NG\":\"d/M/yyyy\",\"kl-GL\":\"dd-MM-yyyy\",\"lb-LU\":\"dd/MM/yyyy\",\"ba-RU\":\"dd.MM.yy\",\"nso-ZA\":\"yyyy/MM/dd\",\"quz-BO\":\"dd/MM/yyyy\",\"yo-NG\":\"d/M/yyyy\",\"ha-Latn-NG\":\"d/M/yyyy\",\"fil-PH\":\"M/d/yyyy\",\"ps-AF\":\"dd/MM/yy\",\"fy-NL\":\"d-M-yyyy\",\"ne-NP\":\"M/d/yyyy\",\"se-NO\":\"dd.MM.yyyy\",\"iu-Cans-CA\":\"d/M/yyyy\",\"sr-Latn-RS\":\"d.M.yyyy\",\"si-LK\":\"yyyy-MM-dd\",\"sr-Cyrl-RS\":\"d.M.yyyy\",\"lo-LA\":\"dd/MM/yyyy\",\"km-KH\":\"yyyy-MM-dd\",\"cy-GB\":\"dd/MM/yyyy\",\"bo-CN\":\"yyyy/M/d\",\"sms-FI\":\"d.M.yyyy\",\"as-IN\":\"dd-MM-yyyy\",\"ml-IN\":\"dd-MM-yy\",\"en-IN\":\"dd-MM-yyyy\",\"or-IN\":\"dd-MM-yy\",\"bn-IN\":\"dd-MM-yy\",\"tk-TM\":\"dd.MM.yy\",\"bs-Latn-BA\":\"d.M.yyyy\",\"mt-MT\":\"dd/MM/yyyy\",\"sr-Cyrl-ME\":\"d.M.yyyy\",\"se-FI\":\"d.M.yyyy\",\"zu-ZA\":\"yyyy/MM/dd\",\"xh-ZA\":\"yyyy/MM/dd\",\"tn-ZA\":\"yyyy/MM/dd\",\"hsb-DE\":\"d. M. yyyy\",\"bs-Cyrl-BA\":\"d.M.yyyy\",\"tg-Cyrl-TJ\":\"dd.MM.yy\",\"sr-Latn-BA\":\"d.M.yyyy\",\"smj-NO\":\"dd.MM.yyyy\",\"rm-CH\":\"dd/MM/yyyy\",\"smj-SE\":\"yyyy-MM-dd\",\"quz-EC\":\"dd/MM/yyyy\",\"quz-PE\":\"dd/MM/yyyy\",\"hr-BA\":\"d.M.yyyy.\",\"sr-Latn-ME\":\"d.M.yyyy\",\"sma-SE\":\"yyyy-MM-dd\",\"en-SG\":\"d/M/yyyy\",\"ug-CN\":\"yyyy-M-d\",\"sr-Cyrl-BA\":\"d.M.yyyy\",\"es-US\":\"M/d/yyyy\"};\n\n    var l=navigator.language?navigator.language:navigator['userLanguage'],y=d.getFullYear(),m=d.getMonth()+1,d=d.getDate();\n    f=(l in f)?f[l]:\"MM/dd/yyyy\";\n    function z(s){s=''+s;return s.length&gt;1?s:'0'+s;}\n    f=f.replace(/yyyy/,y);f=f.replace(/yy/,String(y).substr(2));\n    f=f.replace(/MM/,z(m));f=f.replace(/M/,m);\n    f=f.replace(/dd/,z(d));f=f.replace(/d/,d);\n    return f;\n}\n</code></pre>\n\n<p>using:</p>\n\n<pre><code>shortedDate=getLocaleShortDateString(new Date(1992, 0, 7));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>new Date().toLocaleFormat(\"%x\");\n</code></pre>\n\n<p>All formats for this function can be found here:\n<a href=\"http://pubs.opengroup.org/onlinepubs/007908799/xsh/strftime.html\" rel=\"nofollow\">http://pubs.opengroup.org/onlinepubs/007908799/xsh/strftime.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>function getLocaleDateString(){\n\nvar formats = {\n   \"ar-SA\" : \"dd/MM/yy\",\n   \"bg-BG\" : \"dd.M.yyyy\",\n   \"ca-ES\" : \"dd/MM/yyyy\",\n   \"zh-TW\" : \"yyyy/M/d\",\n   \"cs-CZ\" : \"d.M.yyyy\",\n   \"da-DK\" : \"dd-MM-yyyy\",\n   \"de-DE\" : \"dd.MM.yyyy\",\n   \"el-GR\" : \"d/M/yyyy\",\n   \"en-US\" : \"M/d/yyyy\",\n   \"fi-FI\" : \"d.M.yyyy\",\n   \"fr-FR\" : \"dd/MM/yyyy\",\n   \"he-IL\" : \"dd/MM/yyyy\",\n   \"hu-HU\" : \"yyyy. MM. dd.\",\n   \"is-IS\" : \"d.M.yyyy\",\n   \"it-IT\" : \"dd/MM/yyyy\",\n   \"ja-JP\" : \"yyyy/MM/dd\",\n   \"ko-KR\" : \"yyyy-MM-dd\",\n   \"nl-NL\" : \"d-M-yyyy\",\n   \"nb-NO\" : \"dd.MM.yyyy\",\n   \"pl-PL\" : \"yyyy-MM-dd\",\n   \"pt-BR\" : \"d/M/yyyy\",\n   \"ro-RO\" : \"dd.MM.yyyy\",\n   \"ru-RU\" : \"dd.MM.yyyy\",\n   \"hr-HR\" : \"d.M.yyyy\",\n   \"sk-SK\" : \"d. M. yyyy\",\n   \"sq-AL\" : \"yyyy-MM-dd\",\n   \"sv-SE\" : \"yyyy-MM-dd\",\n   \"th-TH\" : \"d/M/yyyy\",\n   \"tr-TR\" : \"dd.MM.yyyy\",\n   \"ur-PK\" : \"dd/MM/yyyy\",\n   \"id-ID\" : \"dd/MM/yyyy\",\n   \"uk-UA\" : \"dd.MM.yyyy\",\n   \"be-BY\" : \"dd.MM.yyyy\",\n   \"sl-SI\" : \"d.M.yyyy\",\n   \"et-EE\" : \"d.MM.yyyy\",\n   \"lv-LV\" : \"yyyy.MM.dd.\",\n   \"lt-LT\" : \"yyyy.MM.dd\",\n   \"fa-IR\" : \"MM/dd/yyyy\",\n   \"vi-VN\" : \"dd/MM/yyyy\",\n   \"hy-AM\" : \"dd.MM.yyyy\",\n   \"az-Latn-AZ\" : \"dd.MM.yyyy\",\n   \"eu-ES\" : \"yyyy/MM/dd\",\n   \"mk-MK\" : \"dd.MM.yyyy\",\n   \"af-ZA\" : \"yyyy/MM/dd\",\n   \"ka-GE\" : \"dd.MM.yyyy\",\n   \"fo-FO\" : \"dd-MM-yyyy\",\n   \"hi-IN\" : \"dd-MM-yyyy\",\n   \"ms-MY\" : \"dd/MM/yyyy\",\n   \"kk-KZ\" : \"dd.MM.yyyy\",\n   \"ky-KG\" : \"dd.MM.yy\",\n   \"sw-KE\" : \"M/d/yyyy\",\n   \"uz-Latn-UZ\" : \"dd/MM yyyy\",\n   \"tt-RU\" : \"dd.MM.yyyy\",\n   \"pa-IN\" : \"dd-MM-yy\",\n   \"gu-IN\" : \"dd-MM-yy\",\n   \"ta-IN\" : \"dd-MM-yyyy\",\n   \"te-IN\" : \"dd-MM-yy\",\n   \"kn-IN\" : \"dd-MM-yy\",\n   \"mr-IN\" : \"dd-MM-yyyy\",\n   \"sa-IN\" : \"dd-MM-yyyy\",\n   \"mn-MN\" : \"yy.MM.dd\",\n   \"gl-ES\" : \"dd/MM/yy\",\n   \"kok-IN\" : \"dd-MM-yyyy\",\n   \"syr-SY\" : \"dd/MM/yyyy\",\n   \"dv-MV\" : \"dd/MM/yy\",\n   \"ar-IQ\" : \"dd/MM/yyyy\",\n   \"zh-CN\" : \"yyyy/M/d\",\n   \"de-CH\" : \"dd.MM.yyyy\",\n   \"en-GB\" : \"dd/MM/yyyy\",\n   \"es-MX\" : \"dd/MM/yyyy\",\n   \"fr-BE\" : \"d/MM/yyyy\",\n   \"it-CH\" : \"dd.MM.yyyy\",\n   \"nl-BE\" : \"d/MM/yyyy\",\n   \"nn-NO\" : \"dd.MM.yyyy\",\n   \"pt-PT\" : \"dd-MM-yyyy\",\n   \"sr-Latn-CS\" : \"d.M.yyyy\",\n   \"sv-FI\" : \"d.M.yyyy\",\n   \"az-Cyrl-AZ\" : \"dd.MM.yyyy\",\n   \"ms-BN\" : \"dd/MM/yyyy\",\n   \"uz-Cyrl-UZ\" : \"dd.MM.yyyy\",\n   \"ar-EG\" : \"dd/MM/yyyy\",\n   \"zh-HK\" : \"d/M/yyyy\",\n   \"de-AT\" : \"dd.MM.yyyy\",\n   \"en-AU\" : \"d/MM/yyyy\",\n   \"es-ES\" : \"dd/MM/yyyy\",\n   \"fr-CA\" : \"yyyy-MM-dd\",\n   \"sr-Cyrl-CS\" : \"d.M.yyyy\",\n   \"ar-LY\" : \"dd/MM/yyyy\",\n   \"zh-SG\" : \"d/M/yyyy\",\n   \"de-LU\" : \"dd.MM.yyyy\",\n   \"en-CA\" : \"dd/MM/yyyy\",\n   \"es-GT\" : \"dd/MM/yyyy\",\n   \"fr-CH\" : \"dd.MM.yyyy\",\n   \"ar-DZ\" : \"dd-MM-yyyy\",\n   \"zh-MO\" : \"d/M/yyyy\",\n   \"de-LI\" : \"dd.MM.yyyy\",\n   \"en-NZ\" : \"d/MM/yyyy\",\n   \"es-CR\" : \"dd/MM/yyyy\",\n   \"fr-LU\" : \"dd/MM/yyyy\",\n   \"ar-MA\" : \"dd-MM-yyyy\",\n   \"en-IE\" : \"dd/MM/yyyy\",\n   \"es-PA\" : \"MM/dd/yyyy\",\n   \"fr-MC\" : \"dd/MM/yyyy\",\n   \"ar-TN\" : \"dd-MM-yyyy\",\n   \"en-ZA\" : \"yyyy/MM/dd\",\n   \"es-DO\" : \"dd/MM/yyyy\",\n   \"ar-OM\" : \"dd/MM/yyyy\",\n   \"en-JM\" : \"dd/MM/yyyy\",\n   \"es-VE\" : \"dd/MM/yyyy\",\n   \"ar-YE\" : \"dd/MM/yyyy\",\n   \"en-029\" : \"MM/dd/yyyy\",\n   \"es-CO\" : \"dd/MM/yyyy\",\n   \"ar-SY\" : \"dd/MM/yyyy\",\n   \"en-BZ\" : \"dd/MM/yyyy\",\n   \"es-PE\" : \"dd/MM/yyyy\",\n   \"ar-JO\" : \"dd/MM/yyyy\",\n   \"en-TT\" : \"dd/MM/yyyy\",\n   \"es-AR\" : \"dd/MM/yyyy\",\n   \"ar-LB\" : \"dd/MM/yyyy\",\n   \"en-ZW\" : \"M/d/yyyy\",\n   \"es-EC\" : \"dd/MM/yyyy\",\n   \"ar-KW\" : \"dd/MM/yyyy\",\n   \"en-PH\" : \"M/d/yyyy\",\n   \"es-CL\" : \"dd-MM-yyyy\",\n   \"ar-AE\" : \"dd/MM/yyyy\",\n   \"es-UY\" : \"dd/MM/yyyy\",\n   \"ar-BH\" : \"dd/MM/yyyy\",\n   \"es-PY\" : \"dd/MM/yyyy\",\n   \"ar-QA\" : \"dd/MM/yyyy\",\n   \"es-BO\" : \"dd/MM/yyyy\",\n   \"es-SV\" : \"dd/MM/yyyy\",\n   \"es-HN\" : \"dd/MM/yyyy\",\n   \"es-NI\" : \"dd/MM/yyyy\",\n   \"es-PR\" : \"dd/MM/yyyy\",\n   \"am-ET\" : \"d/M/yyyy\",\n   \"tzm-Latn-DZ\" : \"dd-MM-yyyy\",\n   \"iu-Latn-CA\" : \"d/MM/yyyy\",\n   \"sma-NO\" : \"dd.MM.yyyy\",\n   \"mn-Mong-CN\" : \"yyyy/M/d\",\n   \"gd-GB\" : \"dd/MM/yyyy\",\n   \"en-MY\" : \"d/M/yyyy\",\n   \"prs-AF\" : \"dd/MM/yy\",\n   \"bn-BD\" : \"dd-MM-yy\",\n   \"wo-SN\" : \"dd/MM/yyyy\",\n   \"rw-RW\" : \"M/d/yyyy\",\n   \"qut-GT\" : \"dd/MM/yyyy\",\n   \"sah-RU\" : \"MM.dd.yyyy\",\n   \"gsw-FR\" : \"dd/MM/yyyy\",\n   \"co-FR\" : \"dd/MM/yyyy\",\n   \"oc-FR\" : \"dd/MM/yyyy\",\n   \"mi-NZ\" : \"dd/MM/yyyy\",\n   \"ga-IE\" : \"dd/MM/yyyy\",\n   \"se-SE\" : \"yyyy-MM-dd\",\n   \"br-FR\" : \"dd/MM/yyyy\",\n   \"smn-FI\" : \"d.M.yyyy\",\n   \"moh-CA\" : \"M/d/yyyy\",\n   \"arn-CL\" : \"dd-MM-yyyy\",\n   \"ii-CN\" : \"yyyy/M/d\",\n   \"dsb-DE\" : \"d. M. yyyy\",\n   \"ig-NG\" : \"d/M/yyyy\",\n   \"kl-GL\" : \"dd-MM-yyyy\",\n   \"lb-LU\" : \"dd/MM/yyyy\",\n   \"ba-RU\" : \"dd.MM.yy\",\n   \"nso-ZA\" : \"yyyy/MM/dd\",\n   \"quz-BO\" : \"dd/MM/yyyy\",\n   \"yo-NG\" : \"d/M/yyyy\",\n   \"ha-Latn-NG\" : \"d/M/yyyy\",\n   \"fil-PH\" : \"M/d/yyyy\",\n   \"ps-AF\" : \"dd/MM/yy\",\n   \"fy-NL\" : \"d-M-yyyy\",\n   \"ne-NP\" : \"M/d/yyyy\",\n   \"se-NO\" : \"dd.MM.yyyy\",\n   \"iu-Cans-CA\" : \"d/M/yyyy\",\n   \"sr-Latn-RS\" : \"d.M.yyyy\",\n   \"si-LK\" : \"yyyy-MM-dd\",\n   \"sr-Cyrl-RS\" : \"d.M.yyyy\",\n   \"lo-LA\" : \"dd/MM/yyyy\",\n   \"km-KH\" : \"yyyy-MM-dd\",\n   \"cy-GB\" : \"dd/MM/yyyy\",\n   \"bo-CN\" : \"yyyy/M/d\",\n   \"sms-FI\" : \"d.M.yyyy\",\n   \"as-IN\" : \"dd-MM-yyyy\",\n   \"ml-IN\" : \"dd-MM-yy\",\n   \"en-IN\" : \"dd-MM-yyyy\",\n   \"or-IN\" : \"dd-MM-yy\",\n   \"bn-IN\" : \"dd-MM-yy\",\n   \"tk-TM\" : \"dd.MM.yy\",\n   \"bs-Latn-BA\" : \"d.M.yyyy\",\n   \"mt-MT\" : \"dd/MM/yyyy\",\n   \"sr-Cyrl-ME\" : \"d.M.yyyy\",\n   \"se-FI\" : \"d.M.yyyy\",\n   \"zu-ZA\" : \"yyyy/MM/dd\",\n   \"xh-ZA\" : \"yyyy/MM/dd\",\n   \"tn-ZA\" : \"yyyy/MM/dd\",\n   \"hsb-DE\" : \"d. M. yyyy\",\n   \"bs-Cyrl-BA\" : \"d.M.yyyy\",\n   \"tg-Cyrl-TJ\" : \"dd.MM.yy\",\n   \"sr-Latn-BA\" : \"d.M.yyyy\",\n   \"smj-NO\" : \"dd.MM.yyyy\",\n   \"rm-CH\" : \"dd/MM/yyyy\",\n   \"smj-SE\" : \"yyyy-MM-dd\",\n   \"quz-EC\" : \"dd/MM/yyyy\",\n   \"quz-PE\" : \"dd/MM/yyyy\",\n   \"hr-BA\" : \"d.M.yyyy.\",\n   \"sr-Latn-ME\" : \"d.M.yyyy\",\n   \"sma-SE\" : \"yyyy-MM-dd\",\n   \"en-SG\" : \"d/M/yyyy\",\n   \"ug-CN\" : \"yyyy-M-d\",\n   \"sr-Cyrl-BA\" : \"d.M.yyyy\",\n   \"es-US\" : \"M/d/yyyy\"\n};\n\n   return formats[navigator.language] || 'dd/MM/yyyy';\n\n} \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>I think this is the best way to do it...</p>\n\n<pre><code>var date = new Date();\n\nvar options = {\n    weekday: \"short\",\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"numeric\"\n};\n\ndate.toLocaleDateString(\"en\", options);//en is language option, you may specify..\n</code></pre>\n\n<p>More Options and their examples....</p>\n\n<pre><code> Option         Values and sample output\n\n weekday        narrow M\n                short Mon\n                long Monday\n\n year           2-digit 01\n                numeric 2001\n\n month          2-digit 01\n                numeric 1\n                narrow J\n                short Jan\n                long January\n\nday             2-digit 01\n                numeric 1\n\nhour            2-digit 12 AM\n                numeric 12 AM\n\nminute          2-digit 0\n                numeric 0\n\nsecond          2-digit 0\n                numeric 0\n\ntimeZoneName    short 1/1/2001 GMT+00:00\n                long 1/1/2001 GMT+00:00\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Slight modification to Mitali's response. To dynamically generate the language for a more localized solution.</p>\n\n<pre><code>var lang= window.navigator.userLanguage || window.navigator.language;\n\nvar date = new Date();\n\nvar options = {\n   weekday: \"short\",\n   year: \"numeric\",\n   month: \"2-digit\",\n   day: \"numeric\"\n};\n\ndate.toLocaleDateString(lang, options);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Found this thread while looking for a way to generate localized but short dates in all browsers without any extra library, just a simple call to format server generated ISO dates.</p>\n\n<p>I went with a combination of holden321 and mwrf's answers. Storing the formats external to the function because it's handier that way and storing the current locale format because it's always useful.</p>\n\n<p>The function can be passed anything that can be passed to a date constructor to get a valid date, and also a language or format for flexibility.</p>\n\n<p>You need to set up the list of formats and a couple more things first:</p>\n\n<pre><code>var LOCALE_DATE_FORMATS = {\n  // as per mwrf's list\n  ...\n}\n\nvar LANG = window.navigator.userLanguage || window.navigator.language;\n\nvar LOCALE_DATE_FORMAT = LOCALE_DATE_FORMATS[LANG] || 'dd/MM/yyyy';\n</code></pre>\n\n<p>Then the function is:</p>\n\n<pre><code>function getLocalizedDate(o, options)\n{\n    var res = '';\n    var date = new Date(o);     \n\n    if(o != null &amp;&amp; !isNaN(date) &amp;&amp; typeof(date.getFullYear) == 'function')\n    {\n        var d = date.getDate();\n        var dd = d &lt; 10 ? '0' + d : d;\n        var M = date.getMonth() + 1;\n        var MM = M &lt; 10 ? '0' + M : M;\n        var yyyy = date.getFullYear();\n        var yy = new String(yyyy).substring(2);\n\n        var format = LOCALE_DATE_FORMAT;\n\n        if(options &amp;&amp; options.lang)\n            format = LOCALE_DATE_FORMATS[options.lang];\n        else if(options &amp;&amp; options.format)\n            format = options.format;\n\n        res = format\n            .replace(/dd/g, dd)\n            .replace(/d/g, d)\n            .replace(/MM/g, MM)\n            .replace(/M/g, M)\n            .replace(/yyyy/g, yyyy)\n            .replace(/yy/g, yy);\n    }\n\n    return res;\n}\n</code></pre>\n\n<p><code>getLocalizedDate('2013-03-01T00:00:00',  {lang:'sk-SK'})</code> = <code>1. 3. 2013</code></p>\n\n<p>EDIT: Call with no arguments to use the user's locale, of course:</p>\n\n<p><code>getLocalizedDate('2013-03-01T00:00:00')</code> = <code>01/03/2013</code> (for me)</p>\n\n<p>If you are a fan of extending prototypes, the first lines of the function definition become:</p>\n\n<pre><code>Date.prototype.getLocalized = function(options)\n{\n  var date = this;\n</code></pre>\n\n<p>Called of course like this:</p>\n\n<p><code>new Date('2013-03-01T00:00:00').getLocalized({lang:'sk-SK'})</code> = <code>1. 3. 2013</code></p>\n\n<p>EDIT: Again, call with no arguments to use the user's locale:</p>\n\n<p><code>new Date('2013-03-01T00:00:00').getLocalized()</code> = <code>01/03/2013</code> (for me)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try to use Date.CultureInfo.formatPatterns.shortDate</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>Is there anyway we can know using JavaScript the Short Date Format used in the Control Panel -> Regional and Language Settings?</p>\n\n<p>I know the using the combination of following we can get the Locale Long Name format</p>\n\n<pre><code>toString()\ntoLocaleString()\ntoLocaleDateString()\ntoLocaleTimeString()\n</code></pre>\n\n<p>But there is no direct function in JavaScript like <code>toLocaleShortDateString()</code>.</p>\n\n<p>Are there any scripts available to find out what the user setting is?</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1396938245,
            "question_id": 2388115,
            "score": 27,
            "tags": [
                "javascript",
                "datetime"
            ],
            "title": "Get Locale Short Date Format using javascript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>One way to make sure you are getting the most out of jquery is to store the returned array of results in a variable rather than re-traversing the DOM everytime you need to get something.</p>\n\n<p>Example of what NOT to do:</p>\n\n<pre><code>$('.myLinks').each(function(){\n    // your code here\n});\n$('.myLinks').each(function(){\n    // some more code here\n});\n</code></pre>\n\n<p>Better practice:</p>\n\n<pre><code>var myLinks = $('.myLinks');\nmyLinks.each(function(){\n    // your code here\n});\nmyLinks.each(function(){\n    // some more code here\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This method should give you a dramatic speed improvement.</p>\n\n<pre><code>var elements = $('.myLinks').get(), element = null;\nfor (var i = 0, length = elements.length; i &lt; length; i++) {\n    element = elements[i];\n    element.title = \"My New Title!\";\n    element.style.color = \"red\";\n}\n</code></pre>\n\n<p>Caching will also improve performance.</p>\n\n<pre><code>function MyLinkCache() {\n    var internalCache = $('.myLinks').get();\n\n    this.getCache = function() {\n        return internalCache;  \n    }\n\n    this.rebuild = function() {\n        internalCache = $('.myLinks').get();\n    }\n}\n</code></pre>\n\n<p>In use:</p>\n\n<pre><code>var myLinks = new MyLinkCache();\n\nfunction addMyLink() {\n    // Add a new link.\n    myLinks.rebuild();\n}\n\nfunction processMyLinks() {\n    var elements = myLinks.getCache(), element = null;\n    for (var i = 0, length = elements.length; i &lt; length; i++) {\n        element = elements[i];\n        element.title = \"My New Title!\";\n        element.style.color = \"red\";\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><a href=\"http://net.tutsplus.com/tutorials/javascript-ajax/10-ways-to-instantly-increase-your-jquery-performance/\">This article</a> (#3) ran some performance tests and found that the jQuery .each function was about 10x as slow as the native javascript for loop. </p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>The source code for jQuery's each is as follows (Thank you John Resig and MIT License):</p>\n\n<pre><code>each: function( object, callback, args ) {\n\tvar name, i = 0, length = object.length;\n\n\tif ( args ) {\n\t\tif ( length === undefined ) {\n\t\t\tfor ( name in object )\n\t\t\t\tif ( callback.apply( object[ name ], args ) === false )\n\t\t\t\t\tbreak;\n\t\t} else\n\t\t\tfor ( ; i &lt; length; )\n\t\t\t\tif ( callback.apply( object[ i++ ], args ) === false )\n\t\t\t\t\tbreak;\n\n\t// A special, fast, case for the most common use of each\n\t} else {\n\t\tif ( length === undefined ) {\n\t\t\tfor ( name in object )\n\t\t\t\tif ( callback.call( object[ name ], name, object[ name ] ) === false )\n\t\t\t\t\tbreak;\n\t\t} else\n\t\t\tfor ( var value = object[0];\n\t\t\t\ti &lt; length &amp;&amp; callback.call( value, i, value ) !== false; value = object[++i] ){}\n\t}\n\n\treturn object;\n}\n</code></pre>\n\n<p>As you can trace and see, in most cases it is using a basic for loop where the only overhead is really just the callback itself. Shouldn't make a difference in performance.</p>\n\n<p>EDIT: This is with the realization that selector overhead has already occurred and you are given a populated array <code>object</code>.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Using native functionality will generally be <em>faster</em> than an abstraction, such as JQuery.each() method. However, the JQuery.each() method is <em>easier</em> to use and requires less coding on your part.</p>\n\n<p>Truthfully, neither one is the right or wrong choice without any context. I'm of the oppinion that we should be writing easier code first, assuming it's good/legilble/clean code. If you come into a situation, such as the one you're describing, where there's a noticeable lag, than it's time to find out where your bottlenecks are and write faster code.</p>\n\n<p>Replacing the JQuery.each() method in these scenarios <em>might</em> help, however, having not seen your code, it's possible you have bottlenecks unrelated to the JQuery method.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>See this:</p>\n\n<p><a href=\"http://blogs.oracle.com/greimer/entry/best_way_to_code_a\" rel=\"nofollow\">What's the Fastest Way to Code a Loop in JavaScript?</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm doing very frequent iterations over arrays of objects and have been using jQuery.each(). However, I'm having speed and memory issues and one of the most called methods according to my profiler is jQuery.each(). What's the word on the street about its performance? Should I switch to a simple for loop? Of course I'm fixing the many issues in my own code too.</p>\n",
            "last_activity_date": 1367356838,
            "question_id": 1883611,
            "score": 25,
            "tags": [
                "javascript",
                "jquery",
                "arrays",
                "iteration",
                "each"
            ],
            "title": "Should I use jQuery.each()?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>foo = []</code> assigns a reference to a new array to a variable, while any other references are unaffected.</p>\n\n<p><code>foo.length = 0</code> deletes everything in the array, which does hit other references.</p>\n\n<blockquote>\n  <p>Read somewhere that the second one creates a new array by destroying all references to the existing array</p>\n</blockquote>\n\n<p>That is backwards. It creates a new array and doesn't destroy other references.</p>\n\n<pre><code>var foo = [1,2,3];\nvar bar = [1,2,3];\nvar foo2 = foo;\nvar bar2 = bar;\nfoo = [];\nbar.length = 0;\nconsole.log(foo, bar, foo2, bar2);\n</code></pre>\n\n<p>gives:</p>\n\n<pre><code>[] [] [1, 2, 3] []\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>The difference here is best demonstrated in the following example:</p>\n\n<pre><code>var arrayA = [1,2,3,4,5];\n\nfunction clearUsingLength (ar) {\n    ar.length = 0;\n}\n\nfunction clearByOverwriting(ar) {\n    ar = [];\n}\n\nalert(\"Original Length: \" + arrayA.length);\nclearByOverwriting(arrayA);\nalert(\"After Overwriting: \" + arrayA.length);\nclearUsingLength(arrayA);\nalert(\"After Using Length: \" + arrayA.length);\n</code></pre>\n\n<p>Of which a live demo can be seen here: <a href=\"http://www.jsfiddle.net/8Yn7e/\" rel=\"nofollow\">http://www.jsfiddle.net/8Yn7e/</a></p>\n\n<p>When you set a variable that points to an existing array to point to a new array, all you are doing is breaking the link the variable has to that original array.</p>\n\n<p>When you use <code>array.length = 0</code> (and other methods like <code>array.splice(0, array.length)</code> for instance), you are <strong>actually</strong> emptying the original array.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Are you sure it really works?</p>\n\n<p>I did a little experiment here, and trying to \"add\" an Array with a String resulted in a string.</p>\n\n<pre><code>function xyz(){\n    var a = [];\n    alert(typeof(a+$(\"#first\").html()));\n    // shows \"string\"\n}\n</code></pre>\n\n<p><a href=\"http://www.jsfiddle.net/4nKCF/\" rel=\"nofollow\">http://www.jsfiddle.net/4nKCF/</a></p>\n\n<p>(tested in Opera 11)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Can some one explain the conceptual difference between both of them. Read somewhere that the second one creates a new array by destroying all references to the existing array and the .length=0 just empties the array. But it didn't work in my case</p>\n\n<pre><code>//Declaration \nvar arr = new Array();\n</code></pre>\n\n<p>The below one is the looping code that executes again and again.</p>\n\n<pre><code>$(\"#dummy\").load(\"something.php\",function(){\n   arr.length =0;// expected to empty the array\n   $(\"div\").each(function(){\n       arr = arr + $(this).html();\n   });\n});\n</code></pre>\n\n<p>But if I replace the code with <code>arr =[]</code> in place of <code>arr.length=0</code> it works fine. Can anyone explain what's happening here.</p>\n",
            "last_activity_date": 1357328427,
            "question_id": 4804235,
            "score": 23,
            "tags": [
                "javascript",
                "arrays"
            ],
            "title": "Difference between Array.length = 0 and Array =[]?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You'll likely find the <a href=\"http://stevesouders.com/mobileperf/mobileperfbkm.php\">Mobile Perf Bookmarklet</a> to be the easiest all-in-one tool for testing <em>any</em> mobile device.</p>\n\n<p>Works well on the iPhone/iPad/Samsung Galaxy Tab in my testing so far.</p>\n\n<p>Quote:</p>\n\n<blockquote>\n  <p>It displays a menu with links that load other bookmarklets including Firebug Lite, Page Resources, DOM Monster, SpriteMe, CSSess, and Zoompf.</p>\n</blockquote>\n\n<p><img src=\"http://i.stack.imgur.com/OGzpn.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>Unless you have a Windows Phone 7 device, you will need to run Windows in BootCamp and install the <a href=\"http://create.msdn.com/en-us/home/getting_started\" rel=\"nofollow\">Windows Phone Developer Tools</a> in order to test in IE on the emulator. I don't know about Whine, but I ran into major problems trying to test in Parallels - so based on my experience, I suggest keeping it as simple as possible.</p>\n\n<p>There is no console in IE on the phone, so you will need to use alert, like you suggested, or just write text to a div on your page as a custom console.</p>\n\n<p>If you really want to code in OS X (which I definitely understand), using a separate machine for testing IE in the WP7 emulator is going to be your best bet.</p>\n\n<p><strong>EDIT:</strong> I just tested alert and it did work fine on my Windows Phone. My guess is that a syntax error is preventing it from calling.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Something that has worked for me, is to test my mobile pages through the Windows Vista built-in Internet Explorer browser.\nIt comes with a script debugger ( which you have to enable in Advanced Options tab through the Internet Options menu ), and it seems that it gets really close to the Internet Explorer Mobile implementation.</p>\n\n<p>Another tip would be, that, instead of using window.alerts, you can also use document.write or set output to a div content.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The following may be interesting</p>\n\n<p><a href=\"http://sgrebnov.github.com/IeMobileDebugger/\" rel=\"nofollow\">Simple IE debug tool for Windows Phone</a></p>\n\n<p>Supports</p>\n\n<ul>\n<li>Html traversing</li>\n<li>Html node styles, properties, metrics</li>\n<li>Reading console output</li>\n<li>Executing js on device side from console (including intellisense)</li>\n<li>Dynamic script injection - ability to debug live sites</li>\n</ul>\n\n<p>Not supported</p>\n\n<ul>\n<li>js breakpoints</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Just wanted to add a note to say that full JavaScript debugging is possible now with Windows Phone 8.1 and Visual Studio 2013 Update 2. Full details are available at: </p>\n\n<p><a href=\"http://blogs.msdn.com/b/visualstudioalm/archive/2014/04/04/diagnosing-mobile-website-issues-on-windows-phone-8-1-with-visual-studio.aspx\" rel=\"nofollow\">http://blogs.msdn.com/b/visualstudioalm/archive/2014/04/04/diagnosing-mobile-website-issues-on-windows-phone-8-1-with-visual-studio.aspx</a></p>\n\n<p>I realize that this doesn't help the versions referenced in the original question (WP7), but I'm hoping this will help people who may find this question and are running a more recent version.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm not a Windows Phone developer, and I want as little to do as possible with anything related to Microsoft. Nonetheless, I need to get my mobile web app running properly on Windows Phone 7. What debugging tools are available for the platform? Something like the Webkit developer tools or Firebug would be ideal, either from the phone itself or more likely, remotely debugging from my computer.</p>\n\n<p>If such a thing doesn't exist, I'd settle for being able to read Javascript error messages, and view the contents of variables using <code>alert()</code> or similar. At this point, all I know is that my JS is failing: I don't know where or why, let alone how to fix it.</p>\n\n<p>My dev computer is running OS X, and I'd really like to be able to use these tools from OS X if possible. Assuming that debugging tools exist (which I really hope they do) are they designed for Windows only? If so, does anyone know how well they would work with <a href=\"http://www.winehq.org/\">Wine</a> or similar?</p>\n\n<p><strong>EDIT</strong>: I have a physical Windows Phone 7 device, so I can use that. However, <code>alert()</code> doesn't seem to be working, which is why I'm posting this question. Does <code>alert()</code> normally work on the WP7 browser?</p>\n",
            "last_activity_date": 1405113003,
            "question_id": 5198808,
            "score": 22,
            "tags": [
                "javascript",
                "debugging",
                "internet-explorer",
                "windows-phone-7",
                "remote-debugging"
            ],
            "title": "How do I debug Internet Explorer on Windows Phone 7?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>No you cannot do that.</p>\n\n<p>Everything is going to the browser (the client). You may obfuscate uglify, minify or whatnot with it, but at the end it's an easy shot to \"encrypt\" that again.</p>\n\n<p>You can't hide it either, because you want the browser to receive of all you sources. So even if you do some funky move like, \"loading javascript with dynamic script tag insertion and remove the script tags afterwards\". Well that might work for some unexperienced users, but using a tool like <code>Fiddler</code> will show the truth again.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Well, the popular answer is going to be \"don't put it on the web\".  However, you can obfuscate your javascript so much that, typically, no one will bother stealing it.  Removing function and variable names and the like goes a long way.  Generally it will be easier to  start from scratch.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You simply can't do that. Obfuscating your javascript and CSS with a minimizer is probably the closest you can get.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>You can either not put it on the internet, or keep it accessible only via an intranet; but there's no way to reliably prevent the client from accessing the html/css/JS, without preventing them from accessing the site itself.</p>\n\n<p>Obfuscation will deter casual attempts, and curiosity-browsing, but won't prevent a determined attacker/browser since it's all implemented on the client-side.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can use a JavaScript obfuscator. It will make the code difficult to read. They can still \"rip it off\", but it would be very difficult to understand it and therefore modify it. There is no way you can hide the code completely.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Regardless of how you obfuscate the code, anyone can replicate what you are doing just be seeing it.  It might take a little longer to write it from scratch, but there's not much you can do about that.</p>\n\n<p>Your only true options for protection involve copyrighting the code and, potentially, filing a patent.  If what you are doing is truly different, then a patent is probably the best way to go.  </p>\n\n<p>Typically the value in your application is really going to be in the support area.  In other words, people will buy it if they feel that you will be around long enough to support it.  Be aware of this as you price it.  </p>\n\n<p>You're going to find that there will be some that will simply steal your code and reuse it.  Don't worry too much about them as they weren't going to be paying customers anyway.  Instead, make it easy for your own customers to buy and use your stuff.  Make sure you provide support; that's where the real value is going to come from.</p>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>Minifying your HTML, CSS, and JavaScript will help a small bit, but people can always reformat those.  Your best bet is if the contents sent down to the clients aren't the same as the original contents that you're working with.</p>\n\n<p>That can be achieved by:</p>\n\n<ul>\n<li>generating your HTML from some framework</li>\n<li>generating your CSS via <a href=\"http://sass-lang.com\">SASS</a>/<a href=\"http://lesscss.org/\">LESS</a>, etc. </li>\n<li>using a JavaScript <em>compiler</em> on your scripts (i.e. Google's <a href=\"http://code.google.com/closure/compiler/\">Closure Compiler</a>)</li>\n</ul>\n\n<p>However, with all of those, there's only so far that you can go.  Compiling your JavaScript will make it harder to follow your original intentions, but probably not difficult enough if someone sets their mind to reverse-engineering it.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Do the exact opposite, release your code as opensource with an MIT/GPL license. Attach your (business) name to the code and be known as the first to create application X. Reputation gets you much farther then futile attempts to \"protecting your code\".</p>\n\n<ol>\n<li>JS/Html/CSS is usually quite easy to backward engineer, they don't need to look at your code at all.</li>\n<li>Chances are, your JS inovations already exists and was written in 2001 by someone else.</li>\n<li>The more complex the code, the harder it is to steal the intellectual property, especially if you opensource it.</li>\n</ol>\n\n<p>There's really no sane reason to <strong>protect your code</strong> where JS/CSS/HTML is concerned, the best you can do is protect your business logic by keeping that on the backend.</p>\n\n<p>Prime example, I could write my own implementation of CKEditor (a lot of people do just that) but it's a heck of a lot easier to just use CKEditor and everyone knows what it is, who wrote it etc.</p>\n\n<p>Or take google maps as example, there are a lot of clones around, but there's only one real google maps. Heck, others had written a maps implementation before google, but google maps is more reknowned.</p>\n\n<p>I could go on with lots of examples why <strong>trying to protect your code</strong> is not only silly, but actually not smart... Protecting business logic is one thing, but you actually have more to gain by going public with fancy smancy frontend code...</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>I've thought about this problem a lot and, frankly, there isn't much which can be done. The best I've ever come across is using a JS compiler.</p>\n\n<p>Theoretically, and I've never actually done this but I do know that it is <em>possible</em>, it might be possible to load your js through a 1x1 pixel swf which was in turn sent through a scrambler.  It is still possible to get around that, but it becomes <em>far</em> more annoying.  Then, you would be able to send aes encrypted code through to the swf, decrypt it client side (using as3crypt libraries), and then write it to the browser.  That said, unless you were using the swf for a series of callbacks, you'd still have the problem of the fact that it would still need to be <strong>written to the browser</strong>.  Firebug and the other browsers' js consoles would let the user get the \"compiled\" js.  Of course, it is possible to script AS3 to register the series of callbacks...</p>\n\n<p>As I've said, this is more hypothetical than not and while I've no doubt that it could work in idyllic situations, Flash is limited and you'd need knowledge of AS3.  The benefit, of course, is that this is a way to get js to the browser without the user being able to read it easily.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I completely disagree with the argument that it's a waste of time trying to protect JavaScript. There are a number of techniques I've learnt in protecting my own product over the years (the better ones are more methods to fool users into thinking they have successfully stolen software, rather than technical mechanisms), which stop 99% of copying. I'd also disagree with someone who suggests the solution is to open source the software, anyone in this group most likely has zero commercial experience of being responsible for the amount of money a such a software product makes. Just because people can steal your software isn't an argument to say \"oh well\" and just give it to them, the open source zealots are desperately naive in this regard.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I don't really believe it's possible to hide JavaScript code from the end user, JavaScript is done client side not server side meaning the better it is viewing the source code in plain text or having a third party program intercept the browser, end user, requires the code to complete the task. </p>\n\n<p>Even if it's encrypted, at some point in time it is going to have to be un-encrypted for the browser to complete and show the task, where the end user will obtain the code, unless you have complete and total control over the end user's computer hiding any code which is executed client side would be impossible.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am writing a robust, scalable, and fairly complex website engine using HTMl, CSS, and JavaScript. I don't want it to get ripped off, and I'm wondering if there's any way to protect the source from being viewed in the client.</p>\n\n<p>I am particularly concerned about the JavaScript, and I'm wondering if I can protect it by hosting it in seperate files that cannot be viewed directly. I have full control of my web server, and I can alter any settings to accomodate.</p>\n",
            "last_activity_date": 1363480046,
            "question_id": 4189245,
            "score": 22,
            "tags": [
                "javascript",
                "html",
                "css",
                "proprietary",
                "proprietary-software"
            ],
            "title": "What&#39;s the best way to protect proprietary HTML/CSS/JavaScript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>$(\"video\").prop('muted', true); //mute\n</code></pre>\n\n<p>AND</p>\n\n<pre><code>$(\"video\").prop('muted', false); //unmute\n</code></pre>\n\n<p>See all events <a href=\"http://www.w3.org/2010/05/video/mediaevents.html\">here</a></p>\n\n<p>(side note: use <code>attr</code> if in jQuery &lt; 1.6)</p>\n",
                    "is_accepted": true,
                    "score": 43
                },
                {
                    "body": "<p>Are you using the default controls boolean attribute on the video tag? If so, I believe all the supporting browsers have mute buttons. If you need to wire it up, set .muted to true on the element in javascript (use .prop for jquery because it's an IDL attribute.) The speaker icon on the volume control is the mute button on chrome,ff, safari, and opera for example</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you don't want to jQuery, here's the vanilla JavaScript:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>///Mute\nvar video = document.getElementById(\"your-video-id\");\nvideo.muted= true;\n\n//Unmute\nvar video = document.getElementById(\"your-video-id\");\nvideo.muted= false;\n</code></pre>\n\n<p>It will work for audio too, just put the element's id and it will work (and change the var name if you want, to 'media' or something suited for both audio/video as you like).</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>ive found how to pause and play the video using jquery<br /></p>\n\n<pre><code>$(\"video\").get(0).play();\n$(\"video\").get(0).pause();\n</code></pre>\n\n<p>but I can't find out the mute button, if there is not jquery code im fine with just an onclick js code? i need it asap<br/><br/>Also is there a way to fix the mutes delay? i want it to mute/unmute the sound as soon as the button is clicked.</p>\n",
            "last_activity_date": 1400103268,
            "question_id": 6376450,
            "score": 21,
            "tags": [
                "javascript",
                "jquery",
                "html5",
                "video",
                "mute"
            ],
            "title": "How to mute an html5 video player"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The properties you're using may not work in Firefox, Chrome, and other non-IE browsers. To make this work in all browsers, I also suggest adding the following:</p>\n\n<pre><code>getElementById('div_register').setAttribute(\"style\",\"width:500px\");\n</code></pre>\n\n<p>For cross-compatibility, you will still need to use the property. Order may also matter. For instance, in my code, when setting style properties with JavaScript, I set the style attribute first, then I set the properties:</p>\n\n<pre><code>document.getElementById(\"mydiv\").setAttribute(\"style\",\"display:block;cursor:pointer;cursor:hand;\");\ndocument.getElementById(\"mydiv\").style.display = \"block\";\ndocument.getElementById(\"mydiv\").style.cursor = \"hand\";\n</code></pre>\n\n<p>Thus, the most cross-browser compatible example for you would be:</p>\n\n<pre><code>getElementById('div_register').setAttribute(\"style\",\"display:block;width:500px\");\ngetElementById('div_register').style.width='500px';\n</code></pre>\n\n<p>I also want to point out that a much easier method of managing styles is to use a CSS class selector and put your styles in external CSS files. Not only will your code be much more maintainable, but you'll actually make friends with your Web designers!</p>\n\n<pre><code>document.getElementById(\"div_register\").setAttribute(\"class\",\"wide\");\n\n.wide {\n    display:block;\n    width:500px;\n}\n\n.hide {\n    display:none;\n}\n\n.narrow {\n    display:block;\n    width:100px;\n}\n</code></pre>\n\n<p>Now, I can easily just add and remove a class attribute, one single property, instead of calling multiple properties. In addition, when your Web designer wants to change the definition of what it means to be wide, he or she does not need to go poking around in your beautifully maintained JavaScript code. Your JavaScript code remains untouched, yet the theme of your application can be easily customized.</p>\n\n<p>This technique follows the rule of separating your content (HTML) from your behavior (JavaScript), and your presentation (CSS).</p>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p>The <code>onclick</code> attribute of a button takes a string of JavaScript, not an href like you provided. Just remove the \"javascript:\" part.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you remove the <code>javascript:</code> prefix and remove the parts for the unknown ids like <code>'black_fade'</code> from your javascript code, this should work in firefox</p>\n\n<p>Condensed example:</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;script type=\"text/javascript\"&gt;\n            function show_update_profile() {\n               document.getElementById('div_register').style.height= \"500px\";\n               document.getElementById('div_register').style.width= \"500px\";\n               document.getElementById('div_register').style.display='block';\n               return true;\n           }\n        &lt;/script&gt;\n        &lt;style&gt;\n           /* just to show dimensions of div */\n           #div_register\n           {\n                background-color: #cfc;\n           }\n        &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div id=\"main\"&gt;\n            &lt;input type=\"button\" onclick=\"show_update_profile();\" value=\"show\"/&gt;\n        &lt;/div&gt;\n        &lt;div id=\"div_register\"&gt;\n            &lt;table&gt;\n                &lt;tr&gt;\n                   &lt;td&gt;\n                     welcome \n                   &lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/table&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Fix the typos in your code (\"document\" is spelled wrong on lines 3 &amp; 4 of your function, and change the onclick event handler to read: onclick=\"show_update_profile()\" and then you'll be fine.  You should really follow jmort's advice and simply set up 2 css classes that you switch between in javascript -- it would make your life a lot easier and save yourself from all the extra typing.  The typos you've committed are a perfect example of why this is the better approach.</p>\n\n<p>For brownie points, you should also check out <a href=\"https://developer.mozilla.org/en/DOM/element.addEventListener\" rel=\"nofollow\">element.addEventListener</a> for assigning event handlers to your elements.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>These are several ways to apply style to an element. Try any one of the examples below:</p>\n\n<pre><code>1. document.getElementById('div_register').className = 'wide';\n  /* CSS */ .wide{width:500px;}\n2. document.getElementById('div_register').setAttribute('class','wide');\n3. document.getElementById('div_register').style.width = '500px';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have a div with id \"div_register\". I want to set its width dynamically in JavaScript.</p>\n\n<p>I am using this following code:</p>\n\n<pre><code>getElementById('div_register').style.width=500;\n</code></pre>\n\n<p>but this line of code isn't working.</p>\n\n<p>I also tried using the units px like the following, still no luck:</p>\n\n<pre><code>getElementById('div_register').style.width='500px';\n</code></pre>\n\n<p>and</p>\n\n<pre><code>getElementById('div_register').style.width='500';\n</code></pre>\n\n<p>and</p>\n\n<pre><code>getElementById('div_register').style.width=500px;\n</code></pre>\n\n<p>but none of this code is working for me.</p>\n\n<p>I don't know what's going wrong.</p>\n\n<p>I am using Mozilla Firefox.</p>\n\n<p><strong>EDIT</strong></p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Untitled&lt;/title&gt;\n&lt;script&gt;\nfunction show_update_profile()\n   {\n       document.getElementById('black_fade').style.display='block';\n       //document.getElementById.('div_register').style.left= ((window.innerWidth)-500)/20;\n       document.getElementById('div_register').style.height= \"500px\";\n       document.getElementById('div_register').style.width= '500px';\n       //alert('kutta');\n       document.getElementById('div_register').style.display='block';\n       document.getElementById('register_flag').value= 1;\n       document.getElementById('physical_flag').value= 0;\n       document.getElementById('cultural_flag').value= 0;\n       document.getElementById('professional_flag').value= 0;\n       document.getElementById('lifestyle_flag').value= 0;\n       document.getElementById('hobby_flag').value= 0;\n       //alert(window.innerWidth);\n   }\n&lt;/script&gt;\n\n&lt;style&gt;\n   .white_content\n   {\n     display:none;\n   }\n&lt;/style&gt;\n\n&lt;/head&gt;\n\n\n\n    &lt;body&gt;\n        &lt;div id=\"main\"&gt;\n            &lt;input type=\"button\" onclick=\"javascript:show_update_profile();\" id=\"show\" name=\"show\" value=\"show\"/&gt;\n        &lt;/div&gt;\n        &lt;div id=\"div_register\"&gt;\n            &lt;table cellpadding=\"0\" cellspacing=\"0\" border=\"0\"&gt;\n                &lt;tr&gt;\n                   &lt;td&gt;\n                     welcome \n                   &lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/table&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1407324203,
            "question_id": 10118172,
            "score": 20,
            "tags": [
                "javascript"
            ],
            "title": "Setting DIV width and height in JavaScript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Simple: You try to execute the JS function from Objective-C before the page even has been loaded. </p>\n\n<p>Implement the <a href=\"http://developer.apple.com/library/IOs/#documentation/UIKit/Reference/UIWebViewDelegate_Protocol/Reference/Reference.html\">UIWebView's delegate method</a> <code>webViewDidFinishLoad:</code> in your UIViewController and in there you call <code>[graphView stringByEvaluatingJavaScriptFromString:@\"methodName()\"];</code> to make sure the function gets called <strong>after</strong> the page has been loaded.</p>\n",
                    "is_accepted": true,
                    "score": 43
                },
                {
                    "body": "<p>To clarify a little bit more.</p>\n\n<p>.h - implement the UIWebViewDelegate</p>\n\n<pre><code>@interface YourViewController : UIViewController &lt;UIWebViewDelegate&gt;\n@property (weak, nonatomic) IBOutlet UIWebView *webView;\n@end\n</code></pre>\n\n<p>.m</p>\n\n<pre><code>- (void)viewDidLoad\n{\n    [super viewDidLoad];\n\n    NSString *path = @\"http://www.google.com\";\n    [_webView loadRequest:[NSURLRequest requestWithURL:[NSURL URLWithString:path]]];\n    _webView.delegate = self; //Set the webviews delegate to this\n}\n\n- (void) webViewDidFinishLoad:(UIWebView *)webView\n{\n    //Execute javascript method or pure javascript if needed\n    [_webView stringByEvaluatingJavaScriptFromString:@\"methodName();\"];\n}\n</code></pre>\n\n<p>You could also assign the delegate from storyboard instead of doing it in the code.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am trying to call a javascript in a html page using the function - </p>\n\n<pre><code>View did load function\n{\n\n    NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);\n    NSString *documentsDirectory = [paths objectAtIndex:0];\n    NSString *writablePath = [documentsDirectory stringByAppendingPathComponent:@\"BasicGraph.html\"];\n    NSURL *urlStr = [NSURL fileURLWithPath:writablePath];\n\n    NSFileManager *fileManager = [NSFileManager defaultManager];\n    NSString *myPathInfo = [[NSBundle mainBundle] pathForResource:@\"BasicGraph\" ofType:@\"html\"];\n    [fileManager copyItemAtPath:myPathInfo toPath:writablePath error:NULL];\n\n    [graphView loadRequest:[NSURLRequest requestWithURL:urlStr]];\n}\n\n- (void) webViewDidFinishLoad:(UIWebView *)webView\n{\n    [graphView stringByEvaluatingJavaScriptFromString:@\"methodName()\"];\n}\n</code></pre>\n\n<p>Here is the javascript on the html page - </p>\n\n<pre><code>&lt;script&gt;\n    function methodName()\n      {\n         // code to draw graph\n      }\n</code></pre>\n\n<p></p>\n\n<p>However, the function <code>methodName()</code> is not getting called but after window.onload = function () everything is working fine..</p>\n\n<p>I am trying to integrate <a href=\"http://www.rgraph.net/\">RGraphs</a> into my application and <code>Basic.html</code> is the html page in which the javascripts are written.</p>\n\n<p>It would be great if someone could help me out with this.</p>\n",
            "last_activity_date": 1402671773,
            "question_id": 8886443,
            "score": 20,
            "tags": [
                "javascript",
                "uiwebview",
                "ios5",
                "rgraph"
            ],
            "title": "Calling Javascript using UIWebView"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Well... sure... just access the parent and then the children.</p>\n\n<pre><code> node.parentNode.childNodes[]\n</code></pre>\n\n<p>or... using jQuery:</p>\n\n<pre><code>$('#innerId').siblings()\n</code></pre>\n\n<p><strong>Edit: Cletus as always is inspiring. I dug further. This is how jQuery gets siblings essentially:</strong> </p>\n\n<pre><code>function getChildren(n, skipMe){\n    var r = [];\n    for ( ; n; n = n.nextSibling ) \n       if ( n.nodeType == 1 &amp;&amp; n != skipMe)\n          r.push( n );        \n    return r;\n};\n\nfunction getSiblings(n) {\n    return getChildren(n.parentNode.firstChild, n);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<pre><code>var childNodeArray = document.getElementById('somethingOtherThanid').childNodes;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<pre><code>var sibling = node.nextSibling;\n</code></pre>\n\n<p>This will return the sibling immediately after it, or null no more siblings are available. Likewise, you can use <code>previousSibling</code>.</p>\n\n<p><strong>[Edit]</strong> On second thought, this will not give the next <code>div</code> tag, but the whitespace after the node. Better seems to be</p>\n\n<pre><code>var sibling = node.nextElementSibling;\n</code></pre>\n\n<p>There also exists a <code>previousElementSibling</code>.</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>have you checked the \"Sibling\" method in jQuery?</p>\n\n<pre><code>    sibling: function( n, elem ) {\n        var r = [];\n\n        for ( ; n; n = n.nextSibling ) {\n            if ( n.nodeType === 1 &amp;&amp; n !== elem ) {\n                r.push( n );\n            }\n        }\n\n        return r;\n    }\n</code></pre>\n\n<p>the n.nodeType == 1 check if the element is a html node  and n!== exclude the current element.</p>\n\n<p>I think you can use the same function, all that code seems to be vanilla javascript.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><strong>There are a few ways to do it.</strong></p>\n\n<p><strong>Either one of the following should do the trick.</strong></p>\n\n<pre><code>// METHOD A (ARRAY.FILTER, STRING.INDEXOF)\nvar siblings = function(node, children) {\n    siblingList = children.filter(function(val) {\n        return [node].indexOf(val) != -1;\n    });\n    return siblingList;\n}\n\n// METHOD B (FOR LOOP, IF STATEMENT, ARRAY.PUSH)\nvar siblings = function(node, children) {\n    var siblingList = [];\n    for (var n = children.length - 1; n &gt;= 0; n--) {\n        if (children[n] != node) {\n            siblingList.push(children[n]);\n        }  \n    }\n    return siblingList;\n}\n\n// METHOD C (STRING.INDEXOF, ARRAY.SPLICE)\nvar siblings = function(node, children) {\n   siblingList = children;\n   index = siblingList.indexOf(node);\n   if(index != -1) {\n       siblingList.splice(index, 1);\n   }\n   return siblingList;\n}\n</code></pre>\n\n<p><strong>FYI: The jQuery code-base is a great resource for observing Grade A Javascript.</strong></p>\n\n<p><strong>Here is an excellant tool that reveals the jQuery code-base in a very streamlined way.</strong>\n<a href=\"http://james.padolsey.com/jquery/\" rel=\"nofollow\">http://james.padolsey.com/jquery/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>For some performance reasons, I am trying to find a way to select only sibling nodes of the selected node. For example,</p>\n\n<pre><code> &lt;div id=\"outer\"&gt;\n      &lt;div id=\"inner1\"&gt; &lt;/div&gt;\n      &lt;div id=\"inner2\"&gt; &lt;/div&gt;\n      &lt;div id=\"inner3\"&gt; &lt;/div&gt;\n      &lt;div id=\"inner4\"&gt; &lt;/div&gt;\n &lt;/div&gt;\n</code></pre>\n\n<p>If I selected inner1 node, is there a way for me to access its siblings, inner2-4 nodes?</p>\n",
            "last_activity_date": 1424962727,
            "question_id": 842336,
            "score": 20,
            "tags": [
                "javascript",
                "jquery",
                "siblings",
                "selectnodes"
            ],
            "title": "Is there a way to select sibling nodes?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Extending the contains function you linked to:</p>\n\n<pre><code>containsRegex(a, regex){\n  for(var i = 0; i &lt; a.length; i++) {\n    if(a[i].search(regex) &gt; -1){\n      return i;\n    }\n  }\n  return -1;\n}\n</code></pre>\n\n<p>Then you call the function with an array of strings and a regex, in your case to look for height:</p>\n\n<pre><code>containsRegex([ '&lt;param name=\\\"bgcolor\\\" value=\\\"#FFFFFF\\\" /&gt;', 'sdafkdf' ], /height/)\n</code></pre>\n\n<p>You could additionally also return the index where height was found:</p>\n\n<pre><code>containsRegex(a, regex){\n  for(var i = 0; i &lt; a.length; i++) {\n    int pos = a[i].search(regex);\n    if(pos &gt; -1){\n      return [i, pos];\n    }\n  }\n  return null;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>It's as simple as iterating the array and looking for the regexp</p>\n\n<pre><code>function searchStringInArray (str, strArray) {\n    for (var j=0; j&lt;strArray.length; j++) {\n        if (strArray[j].match(str)) return j;\n    }\n    return -1;\n}\n</code></pre>\n\n<p><strong>Edit</strong> - make <code>str</code> as an argument to function.</p>\n",
                    "is_accepted": true,
                    "score": 32
                }
            ],
            "body": "<p>After searching for an answer in other posts, I felt I have to ask this.\nI looked at <a href=\"http://stackoverflow.com/questions/237104/javascript-array-containsobj\">array.contains(obj) in JavaScript</a>\nand <a href=\"http://stackoverflow.com/questions/143847/best-way-to-find-an-item-in-a-javascript-array\">Best way to find an item in a JavaScript array?</a> and couldn't get the code there to work.</p>\n\n<p>I am capturing an html embed code into an array, so each item is a line of html code.</p>\n\n<p>for example:  </p>\n\n<pre><code>i[0]='&lt;param name=\\\"bgcolor\\\" value=\\\"#FFFFFF\\\" /&gt;'\ni[1]='&lt;param name=\\\"width\" value=\\\"640\\\" /&gt;'\ni[2]='&lt;param name=\\\"height\\\" value=\\\"360\\\" /&gt;'   \ni[3]='more html code' \n</code></pre>\n\n<p>I want to search this array and find the line where the word 'height' is.</p>\n\n<p>So ideally, I'd like to write a function that returns the index of the item where 'height' appears.</p>\n\n<p>Fortunately, there are no duplicates in this array, so there's only one occurrence.</p>\n\n<p>with simple object search I get 'false' returns.</p>\n\n<p>Any idea?</p>\n",
            "last_activity_date": 1409004465,
            "question_id": 5424488,
            "score": 19,
            "tags": [
                "javascript",
                "arrays",
                "search"
            ],
            "title": "Javascript - search for a string inside an array of strings"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Because its JavaScript is like that. Check out all related Questions at the right side of this page. </p>\n",
                    "is_accepted": false,
                    "score": -6
                },
                {
                    "body": "<p>Non-empty strings are truthy, but are not necessarily equivalent to <code>true</code>.</p>\n\n<hr>\n\n<p><code>==</code> is a \"soft\" equality operator.<br>\nIt uses type coercion to compare two equivalent objects as equal.</p>\n\n<p>All of the following are true:</p>\n\n<pre><code>42 == \"42\"\n0 == false\n0 == \"\"\n[] == \"\"\n{} == \"[object Object]\"\n\"1\" == true\n</code></pre>\n\n<p>Aribtrary strings are not equivlant to any primitive values.\nHowever</p>\n\n<hr>\n\n<p>When you write <code>if (something)</code>, the <code>if</code> will execute if <code>something</code> is \"truthy\".  </p>\n\n<p>All values are truthful except the following:</p>\n\n<ul>\n<li><code>false</code></li>\n<li><code>0</code> </li>\n<li><code>NaN</code></li>\n<li><code>\"\"</code></li>\n<li><code>null</code></li>\n<li><code>undefined</code></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>It is being cast to Boolean. Any non-empty string evaluates to true.</p>\n\n<p>From the <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf\">ECMAScript Language Specification</a>:</p>\n\n<blockquote>\n  <h2>12.5 The <code>if</code> statement</h2>\n  \n  <h3>Semantics</h3>\n  \n  <p>The production <em>IfStatement</em>: <code>if (</code> <em>Expression</em> <code>)</code> <em>Statement</em> <code>else</code> <em>Statement</em> is evaluated as follows:</p>\n  \n  <ol>\n  <li>Let <em>exprRef</em> be the result of evaluating <em>Expression</em>.</li>\n  <li>If ToBoolean(GetValue(<em>exprRef</em>)) is <strong>true</strong>, then \n  <ul>\n  <li>Return the result of evaluating the first <em>Statement</em>. </li>\n  </ul></li>\n  <li>Else, \n  <ul>\n  <li>Return the result of evaluating the second <em>Statement</em>. </li>\n  </ul></li>\n  </ol>\n  \n  <h2>9.2 ToBoolean</h2>\n  \n  <p>The abstract operation ToBoolean converts its argument to a value of type Boolean according to Table 11:</p>\n  \n  <h3>Table 11 - ToBoolean Conversions</h3>\n  \n  <p>Undefined: <strong>false</strong><br>\n  Null: <strong>false</strong><br>\n  Boolean: The result equals the input argument (no conversion).<br>\n  Number: The result is <strong>false</strong> if the argument is <strong>+0</strong>, <strong>-0</strong>, or <strong>NaN</strong>; otherwise the result is <strong>true</strong>.<br>\n  String: The result is <strong>false</strong> if the argument is the empty String (its length is zero); \n  otherwise the result is <strong>true</strong>.<br>\n  Object: <strong>true</strong></p>\n</blockquote>\n\n<hr>\n\n<p>As far as the <code>==</code> operator is concerned, it's complicated, but the gist of it is that if you compare a number to a non-number the latter is converted into a number. If you compare a boolean against a non-boolean, the boolean is first converted to a number, and then the previous sentence applies.</p>\n\n<p>See section 11.9.3 for details.</p>\n\n<pre><code>// Call this x == y.\nif (\"string\" == true) \n\n// Rule 6: If Type(y) is Boolean,\n//         return the result of the comparison x == ToNumber(y).\nif (\"string\" == Number(true))\n\n// Rule 5: If Type(x) is String and Type(y) is Number,\n//         return the result of the comparison ToNumber(x) == y.  \nif (Number(\"string\") == Number(true))\n\n// The above is equivalent to:\nif (NaN == 1)\n\n// And NaN compared to *anything* is false, so the end result is:\nif (false)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<p>\"string\" is a string which is not null. In JavaScript everything not being null evaluates \"true\". So: if(\"string\") is the same as if(\"string\" != null) but \"string\" is not true, it is still a string value. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think this is happening because in the first example, your \"string\" is a non-null object, which translates to true in this context, whereas in the second example, you're asking if this String object is the same as the Boolean object, which it's not, so it translates to false.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>if (\"string\") {\n    console.log('true!');\n}\n</code></pre>\n\n<p>As you may already know, if evaluates a boolean expression. So it checks</p>\n\n<pre><code>if((Boolean)\"string\")\n</code></pre>\n\n<p>Since (bool)string is true it passes. But in the case of </p>\n\n<pre><code>if (\"string\"==true) {\n    console.log('true!');\n}\n</code></pre>\n\n<p>You are trying to equate a string with a bool, which obviously compares them and returns false.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>From the ECMA 262 reference, if you convert implicitly a String to Boolean, and the String is other than the empty String, it will evaluate to true.</p>\n\n<p>Check <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf\" rel=\"nofollow\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Simple:</p>\n\n<p><code>if(\"string\")</code> is evaluated as a boolean. Any value that isn't <code>false</code> is <code>true</code>, no conversion to number or anything of that sort.</p>\n\n<p>Comparing <code>\"string\"</code> to a boolean value <code>true</code> will obviously yield <code>false</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://www.w3schools.com/jS/js_obj_boolean.asp\" rel=\"nofollow\">http://www.w3schools.com/jS/js_obj_boolean.asp</a></p>\n\n<p>This link explains why.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>if (\"string\"===true)\n</code></pre>\n\n<p>Should be written this way.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Given the following code:</p>\n\n<pre><code>if (\"string\") {\n    console.log('true!');\n}\n//logs \"true\" to the console\nif (\"string\"==true) {\n    console.log('true!');\n}\n//doesn't log anything\n</code></pre>\n\n<p>Why does this happen? I thought <code>\"string\"</code> was being cast to a number, as is the boolean. So <code>true</code> becomes <code>1</code>, and <code>\"string\"</code> becomes <code>NaN</code>. The second if statement makes sense, but I don't see why the first statement causes the inner loop to be evaluated. What's going on here?</p>\n",
            "last_activity_date": 1297097600,
            "question_id": 4923631,
            "score": 19,
            "tags": [
                "javascript"
            ],
            "title": "why does if(&quot;string&quot;) evaluate &quot;string&quot; as true but if (&quot;string&quot;==true) does not?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It does not return an <code>Array</code>, it returns a <a href=\"https://developer.mozilla.org/En/DOM/NodeList\" rel=\"nofollow\">NodeList</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p>Is the result of getElementsByClassName an Array?</p>\n</blockquote>\n\n<p>No</p>\n\n<blockquote>\n  <p>If not, what is it?</p>\n</blockquote>\n\n<p>As with all DOM methods that return multiple elements, it is a NodeList, see <a href=\"https://developer.mozilla.org/en/DOM/document.getElementsByClassName\" rel=\"nofollow\">https://developer.mozilla.org/en/DOM/document.getElementsByClassName</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>No. As <a href=\"http://www.w3.org/TR/domcore/#dom-document-getelementsbyclassname\" rel=\"nofollow\">specified in DOM4</a>, it's an <a href=\"https://developer.mozilla.org/En/DOM/HTMLCollection\" rel=\"nofollow\"><code>HTMLCollection</code></a> (in modern browsers, at least. Older browsers returned a <a href=\"https://developer.mozilla.org/en/docs/Web/API/NodeList\" rel=\"nofollow\"><code>NodeList</code></a>).</p>\n\n<p>In all modern browsers (pretty much anything other IE &lt;= 8), you can call Array's <code>forEach</code> method, passing it the list of elements (be it <code>HTMLCollection</code> or <code>NodeList</code>) as the <code>this</code> value:</p>\n\n<pre><code>var els = document.getElementsByClassName(\"myclass\");\n\nArray.prototype.forEach.call(els, function(el) {\n    // Do stuff with the element\n    console.log(el.tagName);\n});\n\n// Or optionally\n[].forEach.call(els, function () {...});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>As others have said, it's a NodeList.  Here's a complete, working example you can try:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"UTF-8\"&gt;\n        &lt;script&gt;\n            function findTheOddOnes()\n            {\n                var theOddOnes = document.getElementsByClassName(\"odd\");\n                for(var i=0; i&lt;theOddOnes.length; i++)\n                {\n                    alert(theOddOnes[i].innerHTML);\n                }\n            }\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;getElementsByClassName Test&lt;/h1&gt;\n        &lt;p class=\"odd\"&gt;This is an odd para.&lt;/p&gt;\n        &lt;p&gt;This is an even para.&lt;/p&gt;\n        &lt;p class=\"odd\"&gt;This one is also odd.&lt;/p&gt;\n        &lt;p&gt;This one is not odd.&lt;/p&gt;\n        &lt;form&gt;\n            &lt;input type=\"button\" value=\"Find the odd ones...\" onclick=\"findTheOddOnes()\"&gt;\n        &lt;/form&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>This works in IE 9, FF 5, Safari 5, and Chrome 12 on Win 7.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I want to iterate over some DOM elements, I'm doing this:</p>\n\n<pre><code>document.getElementsByClassName( \"myclass\" ).forEach( function(element, index, array) {\n  //do stuff\n});\n</code></pre>\n\n<p>but I get an error: document.getElementsByClassName(\"myclass\").forEach is not a function</p>\n\n<p>I am using Firefox 3 so I know that both <code>getElementsByClassName</code> and <code>Array.forEach</code> are present. This works fine:</p>\n\n<pre><code>[2, 5, 9].forEach( function(element, index, array) {\n  //do stuff\n});\n</code></pre>\n\n<p>Is the result of <code>getElementsByClassName</code> an Array? If not, what is it?</p>\n",
            "last_activity_date": 1421884173,
            "question_id": 3871547,
            "score": 19,
            "tags": [
                "javascript",
                "foreach",
                "getelementsbyclassname"
            ],
            "title": "JS: iterating over result of getElementsByClassName using Array.forEach"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The documentation for incognito mode specifically says that websites won't behave differently. I believe this means that the answer is no.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>One way is to visit a unique URL and then check to see whether a link to that URL is treated as visited by CSS.</p>\n\n<p>You can see an example of this in \"<a href=\"http://crypto.stanford.edu/~collinj/research/incognito/\">Detecting Incognito</a>\".</p>\n\n<p>In <code>main.html</code> add an iframe,</p>\n\n<pre><code> &lt;iframe id='testFrame' name='testFrame' onload='setUniqueSource(this)' src='' style=\"width:0; height:0; visibility:hidden;\"&gt;&lt;/iframe&gt;\n</code></pre>\n\n<p>, and some JavaScript code:</p>\n\n<pre><code>function checkResult() {\n  var a = frames[0].document.getElementById('test');\n  if (!a) return;\n\n  var color;\n  if (a.currentStyle) {\n    color = a.currentStyle.color;\n  } else {\n    color = frames[0].getComputedStyle(a, '').color;\n  }\n\n  var visited = (color == 'rgb(51, 102, 160)' || color == '#3366a0');\n  alert('mode is ' + (visited ? 'NOT Private' : 'Private'));\n}\n\nfunction setUniqueSource(frame) {\n  frame.src = \"test.html?\" + Math.random();\n  frame.onload = '';\n}\n</code></pre>\n\n<p>Then in <code>test.html</code> that are loaded into the iFrame:</p>\n\n<pre><code>&lt;style&gt; \n   a:link { color: #336699; }\n   a:visited { color: #3366A0; }\n&lt;/style&gt; \n&lt;script&gt; \n  setTimeout(function() {\n    var a = document.createElement('a');\n    a.href = location;\n    a.id = 'test';\n    document.body.appendChild(a);\n    parent.checkResult();\n  }, 100);\n&lt;/script&gt; \n</code></pre>\n\n<p>NOTE: trying this from the filesystem can make Chrome cry about \"Unsafe Javascript\". It \nwill, however, work serving from a webserver.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>You can, in JavaScript, see JHurrah's <a href=\"http://stackoverflow.com/questions/2909367/can-you-determine-if-chrome-is-in-incognito-mode-via-script/2909398#2909398\">answer</a>. Except for not highlighting links, all incognito mode does is not save browse history and cookies. From google <a href=\"http://www.google.com/support/chrome/bin/answer.py?hl=en&amp;answer=95464\" rel=\"nofollow\">help page</a>:</p>\n\n<blockquote>\n  <ul>\n  <li>Webpages that you open and files downloaded while you are incognito\n  aren't recorded in your browsing and\n  download histories.</li>\n  <li>All new cookies are deleted after you close all incognito windows\n  that you've opened.</li>\n  </ul>\n</blockquote>\n\n<p>As you can see the differences between normal browsing and incognito happen <strong>after</strong> you visit the webpage, hence there is nothing that browser communicates to the server when it's in this mode.</p>\n\n<p>You can see what exactly your browser sends to the server using one of many HTTP request analysers, like <a href=\"http://www.ericgiguere.com/tools/http-header-viewer.html\" rel=\"nofollow\">this one here</a>. Compare the headers between normal session and incognito and you will see no difference.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>If you are developing an Extension then you can use the tabs API to determine if a window/tab incognito.</p>\n\n<p>More information can be found on <a href=\"http://code.google.com/chrome/extensions/tabs.html#type-Tab\" rel=\"nofollow\">code.google.com</a>.</p>\n\n<p>If you are just working with a webpage, it is not easy, and it is designed to be that way.  However, I have noticed that all attempts to open a database (window.database) fail when in incongnito, this is because when in incognito no trace of data is allowed to be left on the users machine.</p>\n\n<p>I haven't tested it but I suspect all calls to localStorage fail too.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Yes. The FileSystem API is disabled in incognito mode. Check out <a href=\"http://jsfiddle.net/w49x9f1a/\" rel=\"nofollow\">http://jsfiddle.net/w49x9f1a/</a> when you are and aren't in incognito mode.</p>\n\n<p>Sample code:</p>\n\n<pre><code>var fs = window.RequestFileSystem || window.webkitRequestFileSystem;\nif (!fs) {\n  console.log(\"check failed?\");\n} else {\n  fs(window.TEMPORARY,\n     100,\n     console.log.bind(console, \"not in incognito mode\"),\n     console.log.bind(console, \"incognito mode\"));\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is it possible to determine if Google Chrome is in incognito mode via a script?</p>\n\n<p><strong>Edit:</strong> <em>I actually meant is it possible via user-script, but the answers assume JavaScript is running on a web page. I've re-asked the question <a href=\"http://stackoverflow.com/questions/2916876/is-it-possible-to-determine-if-chrome-is-in-incognito-mode-via-user-script\">here</a> in regards to user scripts.</em> </p>\n",
            "last_activity_date": 1420571345,
            "question_id": 2909367,
            "score": 19,
            "tags": [
                "javascript",
                "google-chrome",
                "incognito-mode"
            ],
            "title": "Can you determine if Chrome is in incognito mode via a script?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>As @zeroflagL wrote it appears that since jQuery 1.8.0 <code>.css()</code> does add browser specific prefixes (<a href=\"http://www.richardfawcett.net/demos/jquery_1.8.0_testing.html\">see this</a>).</p>\n\n<p>In earlier versions this is not done automatically by jQuery's <code>.css()</code>. You will have to do it by yourself or  you can use jQuery's <a href=\"http://api.jquery.com/jQuery.cssHooks/\"><code>.cssHooks()</code></a> to add vendor prefixes.</p>\n\n<p><strong>Code example from <a href=\"https://gist.github.com/cballou/4007063\">here</a>:</strong></p>\n\n<pre><code>(function($) {\n  if ( !$.cssHooks ) {\n    throw(\"jQuery 1.4.3+ is needed for this plugin to work\");\n    return;\n  }\n\n  function styleSupport( prop ) {\n    var vendorProp, supportedProp,\n        capProp = prop.charAt(0).toUpperCase() + prop.slice(1),\n        prefixes = [ \"Moz\", \"Webkit\", \"O\", \"ms\" ],\n        div = document.createElement( \"div\" );\n\n    if ( prop in div.style ) {\n      supportedProp = prop;\n    } else {\n      for ( var i = 0; i &lt; prefixes.length; i++ ) {\n        vendorProp = prefixes[i] + capProp;\n        if ( vendorProp in div.style ) {\n          supportedProp = vendorProp;\n          break;\n        }\n      }\n    }\n\n    div = null;\n    $.support[ prop ] = supportedProp\n    return supportedProp;\n  }\n\n  // check for style support of your property \n  // TODO by user: swap out myCssPropName for css property\n  var myCssPropName = styleSupport(\"myCssPropName\");\n\n  // set cssHooks only for browsers that\n  // support a vendor-prefixed border radius\n  if (myCssPropName &amp;&amp; myCssPropName !== 'myCssPropName') {\n    $.cssHooks[\"myCssPropName\"] = {\n      get: function(elem, computed, extra) {\n        // handle getting the CSS property\n        return $.css(elem, myCssPropName);\n      },\n      set: function(elem, value) {\n        // handle setting the CSS value\n        elem.style[myCssPropName] = value;\n      }\n    };\n  }\n})(jQuery);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>jQuery DOES add vendor prefixes. It first checks for the presence of the standard property and if it's not found for a vendor prefixed version. From the source:</p>\n\n<pre><code>// return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( style, name ) {\n    // shortcut for names that are not vendor prefixed\n    if ( name in style ) {\n      return name;\n     }\n\n    // check for vendor prefixed names\n    ...\n</code></pre>\n\n<p>I don't know since which version, but I think 1.8.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I have some code:</p>\n\n<pre><code>$(\"#\" + this.id).css(\"border-radius\",this.radius + \"px\");\n$(\"#\" + this.id).css(\"-moz-border-radius\",this.radius + \"px\");\n$(\"#\" + this.id).css(\"-webkit-border-radius\",this.radius + \"px\");\n</code></pre>\n\n<p>I am trying to improve lines like this by using JSON to apply them (as shown in jQuery's docs) or by removing the vendor prefix versions completely.</p>\n\n<p>Does jQuery's <code>.css()</code> method automatically apply any required vendor prefixes when changing CSS properties on an element?</p>\n",
            "last_activity_date": 1389106570,
            "question_id": 17487716,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "css3",
                "vendor-prefix"
            ],
            "title": "Does .css() automatically add vendor prefixes?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This is a known bug.  If the user does not have any email address set to primary, the query will return null for email.  Set the email address for your account to primary <a href=\"https://www.facebook.com/settings?tab=account&amp;section=email&amp;view\" rel=\"nofollow\">https://www.facebook.com/settings?tab=account&amp;section=email&amp;view</a> and then try.</p>\n\n<p>Source: <a href=\"https://developers.facebook.com/bugs/298946933534016/\" rel=\"nofollow\">https://developers.facebook.com/bugs/298946933534016/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>After i got my bug report marked as duplicate, and i read all posts and links there, i got what caused this problem for me and how to fix.</p>\n\n<p><strong>The Problem</strong>\nFacebook seems to sometimes forget what your primary e-mail is on the graph API (But it still there in the preferences.)</p>\n\n<p><strong>Solution</strong>\nThe user affected must remove the e-mail, save settings, then re-add the address, re-confirm, then make it primary. This fixed my account both on my sandbox app, and other apps where Facebook login don't used to work.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>I had the same issue while I was developing the fb login button for my site. I had even setup permissions for my app here:</p>\n\n<pre><code>https://developers.facebook.com/apps/&lt;my-app-ID&gt;/permissions\n</code></pre>\n\n<p>and it was working fine for certain initial cases, that is, it was giving email (i tested it on my own account and it was giving my email). Then suddenly it started to reflect no email at all. After two hours of browsing, I figured it out that there was an issue with the access token as when I went on this link:</p>\n\n<pre><code>https://developers.facebook.com/tools/explorer/&lt;your-fb-id&gt;/?method=GET&amp;path=100002451127858%3Ffields%3Did%2Cemail\n</code></pre>\n\n<p>Update your-fb-id with your id and go to the above link. Click on 'Get Access Token'. In the tab that opens up, click on 'Extended Permissions' and in that, choose 'email' and submit. Now, test your query again. It'll definitely work, on the console as well as your website. Cheers! :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had the same problem and I think I found out why:\nIf the user has an unconfirmed email in Facebook (i.e. Facebook sent him a validation mail to his email address but he didn't respond) Facebook WILL NOT pass that email to your app even if he gave you the email permissions (!!!).</p>\n\n<p>So what I did is use his Facebook email if he has a user name (i.e. userName@facebook.com).</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>Edit: <strong>Not Duplicate, because:</strong></p>\n\n<ul>\n<li>I have the permission</li>\n<li>Debugged the token</li>\n<li>Code works with test user</li>\n</ul>\n\n<p><em>Please don't mark as duplicate without reading.</em></p>\n\n<p>I'm trying to get the user e-mail address, but i don't get it. On graph api explorer, when i hit send, email field becomes grayed and says that:</p>\n\n<blockquote>\n  <p>field is empty or disallowed by access token</p>\n</blockquote>\n\n<p><strong>But when I debug the token it has email permission granted</strong></p>\n\n<p>My profile has an e-mail address.</p>\n\n<p>Update: I tried <a href=\"https://developers.facebook.com/tools/console/\">https://developers.facebook.com/tools/console/</a> . My profile returns nothing, even on another computer. But the same code returns the email, name and uid of another account.</p>\n\n<p>Code:</p>\n\n<pre><code>    &lt;fb:login-button scope=\"email\"&gt;\n  Grant Permissions to make more examples work\n&lt;/fb:login-button&gt;\n\n&lt;button onclick=\"doPost()\"&gt;Post to Stream&lt;/button&gt;\n\n&lt;script&gt;\nfunction userData() {\n  FB.api('/me?fields=name,email', Log.info.bind('/me callback'));\n};\n\nFB.getLoginStatus(function(response) {\n  if (response.status === 'connected') {\n    userData();\n  }\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>It is possible to lockdown you e-mail so no one can has it? Even when i grant permission?</p>\n",
            "last_activity_date": 1407427585,
            "question_id": 16630972,
            "score": 18,
            "tags": [
                "javascript",
                "facebook"
            ],
            "title": "Facebook Graph API won&#39;t return email address"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Not within the JavaScript environment, but you can view the source for the open-source implementations.</p>\n\n<p>Google V8: <a href=\"http://code.google.com/p/v8/source/browse\">http://code.google.com/p/v8/source/browse</a></p>\n\n<p>Mozilla SpiderMonkey: <a href=\"https://developer.mozilla.org/en/SpiderMonkey\">https://developer.mozilla.org/en/SpiderMonkey</a></p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>The reason Chrome or Firefox says that the code is native is that it really is native - the WebKit and Firefox developers have coded up that functionality in C or C++, not JavaScript.  However, if you want to see the actual code, you can look at the source repositories for <a href=\"http://src.chromium.org/viewvc\">Chromium</a> and <a href=\"http://hg.mozilla.org/mozilla-central/\">Firefox</a>.</p>\n",
                    "is_accepted": true,
                    "score": 23
                }
            ],
            "body": "<p>Is there any way to see the declaration of JavaScript native code? Whenever I try to look at a native function in Chrome or Firefox, it says \"<code>native code</code>\":</p>\n\n<pre><code>&gt; String.fromCharCode\nfunction fromCharCode() { [native code] }\n</code></pre>\n\n<p>What does this mean, and is there any tool which can help me to read actual code?</p>\n",
            "last_activity_date": 1411745225,
            "question_id": 9103336,
            "score": 18,
            "tags": [
                "javascript"
            ],
            "title": "Read JavaScript native code"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>See here:\n<a href=\"http://php.net/manual/en/function.ignore-user-abort.php\">http://php.net/manual/en/function.ignore-user-abort.php</a></p>\n\n<p>There also is a PHP configuration option of the same name:\n<a href=\"http://php.net/manual/en/misc.configuration.php\">http://php.net/manual/en/misc.configuration.php</a></p>\n\n<p>By default, if you do nothing, according to the PHP manual the default is to abort the script.\n<a href=\"http://php.net/manual/en/features.connection-handling.php\">http://php.net/manual/en/features.connection-handling.php</a></p>\n\n<p>NECESSARY UPDATE</p>\n\n<p>It seems I (unknowingly) tricked my way to \"reputation points\", because I did NOT supply the (correct) answer, but here it is now thanks to testing and continued nudging from \"<strong><a href=\"http://stackoverflow.com/users/116614/mellamokb\">mellamokb</a></strong>\":</p>\n\n<p><a href=\"http://forums.devnetwork.net/viewtopic.php?p=371893\">Quote</a>:\n\"Ok, I took a look at the PHP source code and, if I didn't miss anything, I now have the answer. The \"ignore_user_abort\" flag is only checked when PHP receive an error trying to output something to the user. So, in my understanding, there is no way to interrupt code which doesn't produce any output.\"</p>\n\n<p>Okay, I wasn't totally off, but it is important to know that it all depends on whether or not your script produced any output!</p>\n\n<p>If you read THIS, also DO check out the comments below.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>I understand that the process only live with an active petition from the browser, that means that if you close your browser your script will stop working. (because the thread die ) </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>By default no. See <a href=\"http://php.net/manual/en/features.connection-handling.php\" rel=\"nofollow\">Connection Handling</a> documentation, especially:</p>\n\n<blockquote>\n  <p>You can decide whether or not you want\n  a client disconnect to cause your\n  script to be aborted. Sometimes it is\n  handy to always have your scripts run\n  to completion even if there is no\n  remote browser receiving the output.\n  The default behaviour is however for\n  your script to be aborted when the\n  remote client disconnects.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>From my little understanding of how these stuff works. By the point of view of the HTTP protocol I would say yes, the script would keep running, because the browser just sends a request to the server asking for the page, then the server starts executing the script and does not sends or receives information from the browser untill the script is done loading and producing the html output, and just then the server sends the resulting output to the browser and has done the job.</p>\n\n<p>See, there is no way for a browser to \"tell\" the server that the user is not viewing the page anymore through the HTTP protocol. However, the HTTP protocol runs on top of the TCP connection through stream sockets, the TCP connection is kept alive till one of the ends choses to abort the connection (or a certain timeout is reached), now I really don't know how the browser handles this. The browser could just open a connection, send a request and close the connection, then the server waits for the script and sends the response on another connection. Or the browser could open a connection, KEEP this connection alive till the server responds on the same connection. If the thing works that way then the server would really have a way to know if the user is not viewing the page anymore simply by checking if the connection is still alive or has been shutdown by the client. So that would be a no.</p>\n\n<p>Dunno much about that tho.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A PHP Script running through a web server will not stop until:</p>\n\n<ul>\n<li>someone kill the server</li>\n<li>the server kill the php scrip</li>\n</ul>\n\n<p>When the user abort the script, PHP will continue until it try to send something back to the browser.</p>\n\n<p>For example still script will continue fore ever even if the user abort:</p>\n\n<pre><code>while(true){\n    echo 'go'.PHP_EOL;\n}\n</code></pre>\n\n<p>It will go on forever because the \"echo\", will write into the buffer, and the buffer will not be sent to the browser until the script finish, which will never happen.</p>\n\n<p>The following script will stop as soon as the user abort:</p>\n\n<pre><code>while(true){\n    echo 'go'.PHP_EOL;\n    flush();\n    ob_flush();\n}\n</code></pre>\n\n<p>This script will stop, because flush() and ob_flush() will force PHP to send its buffer to the browser, which will stop the PHP script if the user has aborted.\nThe function ignore-user-abort() will force PHP to ignore the abort in this case.</p>\n\n<p>Moreover if you are using PHP session, they are another tricky situation.\nFor example, if you are doing AJAX, and you actually send two AJAX request to a PHP script and that PHP script has need of session with session_start().\nThe first AJAX query will work normally, however the second one will have to wait until the first call is finish, because the first script has a locked on the session.\nThe first script could eventually prematurely release the session with session_write_close();</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>if i call a php file via jquery ajax, that contains a script to do some stuff that takes a while, fon instance uploading a big video, and then i close the page: does the php script keep loading the video or not?</p>\n",
            "last_activity_date": 1305321418,
            "question_id": 5997102,
            "score": 18,
            "tags": [
                "php",
                "javascript"
            ],
            "title": "Will a script continue to run even after closing a page?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Another alternative is to use AJAX to load the content of a tab and use a div to display the content. I would suggest that using an existing Tab library might be an option rather than trying to solve all the problems associated with creating tabs.</p>\n\n<p>Maybe the <a href=\"http://jqueryui.com/demos/tabs/\">jQuery UI Tab</a> might be helpful here if you like to try it.</p>\n\n<hr>\n\n<p>EDIT: AJAX example with UI Tabs.</p>\n\n<p>First, the HTML will look like this.</p>\n\n<pre><code>   &lt;div id=\"tabs\"&gt;\n     &lt;ul&gt;\n      &lt;li&gt;&lt;a href=\"toframe.html\"&gt;&lt;span&gt;Overviews&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;\n      &lt;li&gt;&lt;a href=\"tawagpinoygallery.html\"&gt;&lt;span&gt;Gallery&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;\n      &lt;li&gt;&lt;a href=\"trframe.html\"&gt;&lt;span&gt;Reviews&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;\n     &lt;/ul&gt;\n   &lt;/div&gt;\n</code></pre>\n\n<p>Then make sure that you import the appropriate jQuery files:</p>\n\n<pre><code>  &lt;link rel=\"stylesheet\" href=\"http://ajax.googleapis.com/ajax/libs/jqueryui/1.7.2/themes/ui-lightness/jquery-ui.css\" type=\"text/css\" media=\"all\" /&gt;\n  &lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n  &lt;script src=\"http://ajax.googleapis.com/ajax/libs/jqueryui/1.7.2/jquery-ui.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n  etc...\n</code></pre>\n\n<p>Then add the code to create the tabs:</p>\n\n<pre><code>   &lt;script type=\"text/javascript\"&gt;\n$(function() {\n    $(\"#tabs\").tabs();\n});\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>The only alternative to using IFRAMEs to load dynamic content (after the page has loaded) is using AJAX to update a container on your web page. It's pretty elegant and usually faster than loading a full page structure into an IFRAME.</p>\n\n<ul>\n<li><a href=\"http://docs.jquery.com/Ajax\" rel=\"nofollow\"><strong>Ajax with JQuery</strong></a> (use this and you will be <em>loved</em> on SO; the AJAX functions are great and simple)</li>\n<li><a href=\"http://api.prototypejs.org/ajax/ajax.html\" rel=\"nofollow\"><strong>Ajax with Prototype</strong></a> </li>\n<li><a href=\"http://mootools.net/docs/core/Request/Request\" rel=\"nofollow\"><strong>Ajax with MooTools</strong></a> </li>\n<li><a href=\"http://www.ajaxtoolbox.com/\" rel=\"nofollow\"><strong>Standalone Ajax with Matt Kruse's AJAX toolbox</strong></a> (Used to use this, using JQuery today because I needed a framework)</li>\n<li><a href=\"https://web.archive.org/web/20080723230009/http://dojocampus.org/content/2008/03/14/functional-ajax-with-dojo/\" rel=\"nofollow\"><strong>AJAX with Dojo</strong></a> (Said to be fast, but AJAX is not as straightforward)</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>As mentioned, you could use jQuery or another library to retrieve the contents of the HTML file and populate it into the div. Then you could even do a fancy fade to make it look all pretty.</p>\n\n<p><a href=\"http://docs.jquery.com/Ajax/jQuery.get\" rel=\"nofollow\">http://docs.jquery.com/Ajax/jQuery.get</a></p>\n\n<p>Something along these lines:</p>\n\n<pre><code>$.get(\"toframe.html\", function(data){\n  $(\"#tabs-1\").html(data);\n});\n</code></pre>\n\n<p>edit..\nyou could prepopulate or onclick you could do the get dynamically</p>\n\n<pre><code>$(\"#tabs a\").click(function(){\n   var pagetoget = $(this).attr(\"href\");\n   $.get...\n})\n</code></pre>\n\n<p>If you prepopulate could have three containers instead of the one you have now, 2 hidden, 1 display, and the click functions will hide them all except for the one you want.</p>\n\n<p>The get is less code though, easier time.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>There's an alternative to AJAX</strong>!</p>\n\n<p>You can load ALL three possible contents into separate DIVs.</p>\n\n<p>Then clicking on a tab will simply make the display attribute of the appropriate content's DIV \"block\" while making the other two DIVs' display property \"none\".</p>\n\n<p>Cheap, easy, does not require AJAX costs for extra http request or for coding.</p>\n\n<p>Mind you, AJAX is a better solution if the contents of the tabs will change dynamically based on other data as opposed to being known at the time the page loads. </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>It's probably better to load in the content for each tab into DIVs on the same page and then switch the visibility of each DIV when a tab button is clicked using JavaScript and the CSS display property.</p>\n\n<p>If you can't do that then iframe is probably the best solution. You can make the iframe background transparent, see below:</p>\n\n<pre><code>&lt;iframe src=\"toframe.html\" name= \"tabsa\" width=\"95%\" height=\"100%\" frameborder=\"0\" allowtransparency=\"true\"&gt;&lt;/iframe&gt;\n</code></pre>\n\n<p>You would then need to add the following CSS to the BODY element using:</p>\n\n<pre><code>BODY { Background: transparent; }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You don't need script.</p>\n\n<pre><code>&lt;ul&gt;&lt;li&gt;&lt;a href=\"#foo\"&gt;foo link&lt;/a&gt;&lt;li&gt;&lt;a href=\"#bar\"&gt;bar link&lt;/a&gt;&lt;/ul&gt;\n&lt;div class=\"tab\" id=\"foo\"&gt;foo contents&lt;/div&gt;\n&lt;div class=\"tab\" id=\"bar\"&gt;bar contents&lt;/div&gt;\n</code></pre>\n\n<p>Plus this CSS, in most browsers: <code>.tab:not(:target) { display: none !important; }</code>, which defaults to all content visible if :target isn't supported (any modern browser supports it).</p>\n\n<p>If you're showing content with script, always hide it with script. Let it degrade gracefully if that script doesn't run.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The HTML <code>iframe</code> is to be used to include/display <strong>non-template</strong> content, such as a PDF file. It's considered bad practice when used for template content (i.e. HTML), in both the SEO and UX opinions.</p>\n\n<p>In your case you just want to have a tabbed panel. This can be solved in several ways:</p>\n\n<ol>\n<li><p>Have a bunch of links as tabs and a bunch of div's as tab contents. Initially only show the first tab content and hide all others using CSS <code>display: none;</code>. Use JavaScript to toggle between tabs by setting CSS <code>display: block;</code> (show) and <code>display: none;</code> (hide) on the tab content divs accordingly.</p></li>\n<li><p>Have a bunch of links as tabs and one div as tab contents. Use Ajax to get the tab content asynchronously and use JavaScript to replace the current tab contents with the new content.</p></li>\n<li><p>Have a bunch of links as tabs and one div as tab contents. Let each link send a different GET request parameter or pathinfo representing the clicked tab. Use server-side flow-control (PHP's <code>if()</code>, or JSP's <code>&lt;c:if&gt;</code>, etc) or include capabilities (PHP's <code>include()</code>, or JSP's <code>&lt;jsp:include&gt;</code>, etc) to include the desired tab content depending on the parameter/pathinfo.</p></li>\n</ol>\n\n<p>When going for the JavaScript based approach, I can warmly recommend to adopt <a href=\"http://jquery.com\" rel=\"nofollow\">jQuery</a> for this.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is <a href=\"http://jquery.com\" rel=\"nofollow\">jQuery</a> example that includes another html page into your document. This is much more SEO friendly than <code>iframe</code>. In order to be sure that the bots are not indexing the included page just add it to disallow in <code>robots.txt</code></p>\n\n<pre><code>&lt;html&gt;\n  &lt;header&gt;\n    &lt;script src=\"/js/jquery.js\" type=\"text/javascript\"&gt;\n  &lt;/header&gt;\n  &lt;body&gt;\n    &lt;div id='include-from-outside'&gt;&lt;/div&gt;\n    &lt;script type='text/javascript'&gt;\n      $('#include-from-outside').load('http://example.com/included.html');\n    &lt;/script&gt; \n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>You could also include jQuery directly from Google: <a href=\"http://code.google.com/apis/ajaxlibs/documentation/\" rel=\"nofollow\">http://code.google.com/apis/ajaxlibs/documentation/</a> - this means optional auto-inclusion of newer versions and some significant speed increase. Also, means that you have to trust them for delivering you just the jQuery ;)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a page with an iframe to feature the contents of the clicked tab. There are 3 tabs and 1 iframe. The sources of the contents relating to each tab clicked are formatted and coded in other html &amp; css files.</p>\n\n<p>What is another alternative to using an iframe, because I noticed that when the tab is clicked, it still shows the white background, similar to when a new page is loading?</p>\n\n<p>Here's my code:</p>\n\n<pre><code>&lt;div id=\"tabs\"&gt;\n&lt;div id=\"overview\"&gt;\n  &lt;a target=\"tabsa\" class=\"imagelink lookA\" href=\"toframe.html\"&gt;Overviews&lt;/a&gt;\n&lt;/div&gt;\n&lt;div id=\"gallery\"&gt;\n  &lt;a target=\"tabsa\" class=\"imagelink lookA\" href=\"tawagpinoygallery.html\"&gt;Gallery&lt;/a&gt;\n&lt;/div&gt;\n&lt;div id=\"reviews\"&gt;\n  &lt;a target=\"tabsa\" class=\"imagelink lookA\" href=\"trframe.html\"&gt;Reviews&lt;/a&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n\n&lt;div id=\"tabs-1\"&gt;\n  &lt;iframe src=\"toframe.html\" name= \"tabsa\" width=\"95%\" height=\"100%\" frameborder=\"0\"&gt;\n  &lt;/iframe&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Thanks in advance for the help! :)</p>\n",
            "last_activity_date": 1383247195,
            "question_id": 2102878,
            "score": 18,
            "tags": [
                "javascript",
                "html",
                "css",
                "iframe",
                "tabs"
            ],
            "title": "Better alternative to an iframe?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can use this:</p>\n\n<pre><code>function getVideoContent() { \n   var metas = document.getElementsByTagName('meta'); \n\n   for (i=0; i&lt;metas.length; i++) { \n      if (metas[i].getAttribute(\"property\") == \"video\") { \n         return metas[i].getAttribute(\"content\"); \n      } \n   } \n\n    return \"\";\n} \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>In Jquery you can achieve this with:</p>\n\n<pre><code>$(\"meta[property='video']\");\n</code></pre>\n\n<p>In JavaScript you can achieve this with:</p>\n\n<pre><code>document.getElementsByTagName('meta').item(property='video');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>$(\"meta[property='video']\").attr('content');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>function getMetaContentByName(name,content){\n   var content = (content==null)?'content':content;\n   return document.querySelector(\"meta[name='\"+name+\"']\").getAttribute(content);\n}\n</code></pre>\n\n<p>Used in this way:</p>\n\n<pre><code>getMetaContentByName(\"video\");\n</code></pre>\n\n<p>The example on this page:</p>\n\n<pre><code>getMetaContentByName(\"twitter:domain\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This code works for me</p>\n\n<pre><code>&lt;meta name=\"text\" property=\"text\" content=\"This is text\" /&gt;\n&lt;meta name=\"video\" property=\"text\" content=\"http://video.com/video33353.mp4\" /&gt;\n</code></pre>\n\n<p>JS</p>\n\n<pre><code>var x = document.getElementsByTagName(\"META\");\n    var txt = \"\";\n    var i;\n    for (i = 0; i &lt; x.length; i++) {\n        if (x[i].name==\"video\")\n        {\n             alert(x[i].content);\n         }\n\n    }    \n</code></pre>\n\n<p>Example fiddle: <a href=\"http://jsfiddle.net/muthupandiant/ogfLwdwt/\" rel=\"nofollow\">http://jsfiddle.net/muthupandiant/ogfLwdwt/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am making a Greasemonkey script.</p>\n\n<p>The information I need is in a meta tag. How can I access the \"content\" data of the meta tag when property=\"video\"?</p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;meta property=\"video\" content=\"http://video.com/video33353.mp4\" /&gt;\n</code></pre>\n",
            "last_activity_date": 1423134649,
            "question_id": 7524585,
            "score": 17,
            "tags": [
                "javascript",
                "greasemonkey"
            ],
            "title": "How do I get the information from a meta tag with javascript?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>There's nothing you can really do to prevent anyone from modifying your JS or writing a GreaseMonkey script. However you can make it hard for them by minifying your script as well as making your code as cryptic as possible. Maybe even throwing in some fake methods or variables that do nothing but are used to throw an attacker off. But given enough time, none of these methods are completely foolproof, as once your code goes to the client, it is no longer yours.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>They don't have to touch your client-side code -- they could just sniff and implement your Websocket protocol and write a tiny agent that pretends to be a human player.</p>\n\n<p>Update: The problem has a few parts, and I don't have answers off the top of my head, but the various options could be evaluated with these questions in mind:</p>\n\n<ol>\n<li>How far are you willing to go to prevent cheating?  If you only care about casual cheating, how many barriers are enough to discourage the casual cheater? The intermediate Javascript programmer? A serious expert? Weighing this against the benefits of cheating, is there anything of real value at stake, like cash and prizes, or just reputation?</li>\n<li>How do you get a high confidence that a human is providing inputs to your game? For example, with a good enough computer vision library I could model your game on a separate machine feed inputs to the computer pretending to be the mouse, but this has a high relative cost (not worth my time).</li>\n<li>How can you create a chain of trust in your protocol such that knowledge of (2) can be passed to the server, and that your server is relatively confident your client code is sending the messages?</li>\n</ol>\n\n<p>Sure many of the roadblocks you throw up can be side-stepped, but what is the cost to the player and you?  See \"<a href=\"http://en.wikipedia.org/wiki/Attrition_warfare\" rel=\"nofollow\">Attrition warfare</a>\".</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'd use a combination of minification and AJAX.  If all of the functions and data aren't loaded into the page, it'd be more difficult to cheat.</p>\n\n<p>On the other hand, modding turned out to be a very profitable tool for companies like Id Software.  Perhaps allowing the system to be modded might make the game that much more enjoyable to the community at large.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The only way I can even think of implementing this is by modifying your Javascript to function as a client and then designing a central server mechanism to validate data sent from that client.  This is probably a big change to implement and will most likely make your project more complex. However, as was said earlier, if the application runs entirely on the client, the client can pretty much do whatever they want with your script. The only way to secure it to use a trusted machine to handle validation.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The server is king. Clients are hackable.</p>\n\n<p>What you want to do is two things with your websocket.</p>\n\n<p>Send game actions to the server and receive game state from the server.</p>\n\n<p>You render the game state. and you send input to the server.</p>\n\n<ul>\n<li>auto aiming - this one is hard to solve. You have to go for realism. If a user hits 10 headshots in 10ms then you kick him. Write a clever cheat detection algorithm.</li>\n<li>peeking outside the visibile area - solved by only sending the visible area to each client</li>\n<li>speeding hacking - solved by handling input correctly. You receive an event that user a moved forward and you control how fast he goes.</li>\n</ul>\n\n<p>You can <em>NOT</em> solve these problems by minifying code. Code on the client is <em>ONLY</em> there to handle input and display output. <em>ALL</em> logic has to be done on the server.</p>\n\n<p>You simply need to write server side <em>validation</em> . The only thing is that a game input is significantly harder to validate then form input due to complexity. It's the exact same thing you would do to make forms secure.</p>\n\n<p>You need to be really careful with your \"input is valid\" detection though. You do not want to kick/ban highly skilled players from your game. It's very hard to hit the balance of too lax on bot detection and too strict on bot detection. The whole realm of bot detection is very hard overall. For example Quake had an auto aim detection that kicked legitedly skilled players back in the day.</p>\n\n<p>As for stopping a bots from connecting to your websocket directly set up a seperate HTTP or HTTPS verification channel on your multiplayer game for added security. Use multiple Http/https/ws channels to validate a client as being \"official\", acting as some form of handshake. This will make connecting to the ws directly harder.</p>\n\n<p><strong>Example:</strong></p>\n\n<p>Think of a simple multiplayer game. A 2D room based racing game. Upto n users go on a flat 2D platformer map and race to get from A to B.</p>\n\n<p>Let's say for arguments sake that you have a foolsafe system where there's a complex authetication going over a HTTPS channel so that users can not access your websocket channel directly and are forced to go through the browser. You might have a chrome extension that deals with the authentication and you force users to use that. This reduces the problem domain.</p>\n\n<p>Your server is going to send all the visual data that the client needs to render the screen. You can not obscure this data away. No matter what you try a silled hacker can take your code and slow it down in the debugger editing it as he goes along until all he's left with is a primitive wrapper around your websocket. He let's you run the entire authentication but there is <em>nothing</em> you can do to stop him from stripping out any JavaScript you write from stopping him doing that. All you can achieve with that is limit the amount of hackers skilled enough of accessing your websocket. </p>\n\n<p>So the hacker now has your websocket in a chrome sandbox. He sees the input. Of course your race course is dynamically and uniquely generated. If you had a set amount of them then the hacker could pre engineer the optimum race route. The data you send to visualise this map can be rendered faster then human interaction with your game and the optimum moves to win your racing game can be calculated and send to your server. </p>\n\n<p>If you were to try and ban players who reacted too fast to your map data and call them bots then the hacker adjusts this and adds a delay. If you try and ban players who play too perfectly then the hacker adjusts this and plays less then perfect using random numbers. If you place traps in your map that only algorithmic bots fall into then they can be avoided by learning about them, through trial and error or a machine learning algorithm. There is nothing you can do to be absolutely secure. </p>\n\n<p>You have only <em>ONE</em> option to absolutely avoid hackers. That is to build your own browser which cannot be hacked. Build the security mechanisms into the browser. Do not allow users to edit javascript at runtime in realtime.</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>At the server-side, there are 2 options:</p>\n\n<p>1) Full server-side game</p>\n\n<p>Each client sends their \"actions\" to the server. The server executes them and sends relevant data back. e.g. a ship wants to move north, the server calculates its new position and sends it back. The server also sends a list of visible ships (solving maphacks), etcetera.</p>\n\n<p>2) Full client-side game</p>\n\n<p>Each client still sends their actions to the server. But to reduce workload on the server, the server doesn't execute the actions but forwards them to all other clients. The clients then resolve all actions simultaneously. As a result, each client should end up with an identical game. Periodically, each client sends their absolute data (ship positions, etc.) to the server and the server checks if all client data is identical. Otherwise, the games are out of sync and someone must be hacking.</p>\n\n<p>Disadvantage of the second method is that some hacks remain undetected: A maphack for example. A cheater could inject code so he sees everything, but still only sends the data he should normally be able to see to the server.</p>\n\n<p>--</p>\n\n<p>At the client-side, there is 1 option:\nA javascript component that scans the game code to see if anything has been modified (e.g. code modified to render objects that aren't visible but send different validation data to the server).</p>\n\n<p>Obviously, a hacker could easily disable this component. To fix that, you could force the client to periodically reload the component from the server (The server can check if the script file was requested by the user periodically). This introduces a new problem: the hacker simply periodically requests the component via AJAX but prevents it from running. To avoid that: have the component redownload itself, but a slightly modified version of itself.</p>\n\n<p>For example: have the component be located at yoursite/cheatdetect.js?control=5. \nThe server will generate a slightly modified cheatdetect.js so that in the next iteration, cheatdetect.js?control=22 (for example) must be downloaded. If the control mechanism is sufficiently complicated, the hacker won't be able to predict which control number to request next, and cheatdetect.js must be executed in order to continue the game.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Obfuscate your client exposed code as much as possible. Additionally, use some magic.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>Imagine a space shooter with a scrolling level. What methods are there for preventing a malicious player from modifying the game to their benefit? Things he could do that are hard to limit server-side is auto-aiming, peeking outside the visible area, speed hacking and other things.</p>\n\n<p>What ways are there of preventing this? Assume that the server is any language and that the clients are connected via WebSocket.</p>\n\n<p>Always assume that the code is 100% hackable. Think of ways to prevent a client completely rewritten (for the purposes of cheating) from cheating. These can be things such as methods for writing a secure game protocol, server-side detection, etc.</p>\n",
            "last_activity_date": 1377366962,
            "question_id": 5250403,
            "score": 17,
            "tags": [
                "javascript",
                "security",
                "multiplayer"
            ],
            "title": "What good ways are there to prevent cheating in JavaScript multiplayer games?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Can you use css?</p>\n\n<pre><code>&lt;input type=\"text\" style=\"text-transform: uppercase;\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Not really sure what you want but will this work?</p>\n\n<pre><code>$('#my_element').keyup(function(){ $(this).val().toUpperCase(); });\n</code></pre>\n\n<p>or use a sub string to get the last character pressed and do <code>toUpperCase()</code> on that?</p>\n\n<p>(psst... you can use keydown or keypress too).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Peter,</p>\n\n<p>You might find some inspiration here:</p>\n\n<p><a href=\"http://www.maconstateit.net/tutorials/JSDHTML/JSDHTML15/jsdhtml15-05.htm\" rel=\"nofollow\">http://www.maconstateit.net/tutorials/JSDHTML/JSDHTML15/jsdhtml15-05.htm</a></p>\n\n<p>basically walks around the various ways to look at the keypress events and functions around that 'area'.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>How about preventing default action and then triggering the keypress? Something like,</p>\n\n<pre><code>function onKeypressHandler(e)\n{\n    if ( condition )\n    {\n        e.preventDefault();\n        // create new event object (you may clone current e)\n        var ne = new jQuery.Event(\"keypress\");\n        ne.which = e.which - 32;\n        $(e.target).trigger(ne);   // you may have to invoke with setTimeout\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The following will do the job. It's based on <a href=\"http://stackoverflow.com/questions/3579219/show-different-keyboard-character-from-the-typed-one-in-google-chrome/3580352#3580352\">an answer I wrote to another question</a>. Customize the <code>transformTypedChar</code> function to suit your needs; my example capitalizes only the letters a-g.</p>\n\n<p>If you need this on a textarea rather than an <code>&lt;input type=\"text\"&gt;</code> then be aware that there are issues in IE &lt;= 8 with line breaks that the following code doesn't handle for the sake of brevity. You can find the cross browser function for obtaining the selection within a textarea here: <a href=\"http://stackoverflow.com/questions/235411/is-there-an-internet-explorer-approved-substitute-for-selectionstart-and-selectio/4207763#4207763\">Is there an Internet Explorer approved substitute for selectionStart and selectionEnd?</a></p>\n\n<pre><code>function transformTypedChar(charStr) {\n    return /[a-g]/.test(charStr) ? charStr.toUpperCase() : charStr;\n}\n\ndocument.getElementById(\"your_input_id\").onkeypress = function(evt) {\n    var val = this.value;\n    evt = evt || window.event;\n\n    // Ensure we only handle printable keys, excluding enter and space\n    var charCode = typeof evt.which == \"number\" ? evt.which : evt.keyCode;\n    if (charCode &amp;&amp; charCode &gt; 32) {\n        var keyChar = String.fromCharCode(charCode);\n\n        // Transform typed character\n        var mappedChar = transformTypedChar(keyChar);\n\n        var start, end;\n        if (typeof this.selectionStart == \"number\" &amp;&amp; typeof this.selectionEnd == \"number\") {\n            // Non-IE browsers and IE 9\n            start = this.selectionStart;\n            end = this.selectionEnd;\n            this.value = val.slice(0, start) + mappedChar + val.slice(end);\n\n            // Move the caret\n            this.selectionStart = this.selectionEnd = start + 1;\n        } else if (document.selection &amp;&amp; document.selection.createRange) {\n            // For IE up to version 8\n            var selectionRange = document.selection.createRange();\n            var textInputRange = this.createTextRange();\n            var precedingRange = this.createTextRange();\n            var bookmark = selectionRange.getBookmark();\n            textInputRange.moveToBookmark(bookmark);\n            precedingRange.setEndPoint(\"EndToStart\", textInputRange);\n            start = precedingRange.text.length;\n            end = start + selectionRange.text.length;\n\n            this.value = val.slice(0, start) + mappedChar + val.slice(end);\n            start++;\n\n            // Move the caret\n            textInputRange = this.createTextRange();\n            textInputRange.collapse(true);\n            textInputRange.move(\"character\", start - (this.value.slice(0, start).split(\"\\r\\n\").length - 1));\n            textInputRange.select();\n        }\n\n        return false;\n    }\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>You've got to see this.. I was pretty happy with myself after getting it to work..</p>\n\n<p>You obviously would want to include sufficient criteria to avoid going into a loop here.</p>\n\n<p>The code below returns false when condition evaluates to true, but it fires the same event with a different charCode which will not return false.</p>\n\n<pre><code>document.getElementById(\"input1\").onkeypress = Handler;\nfunction Handler(e)\n{\n    e = e || window.event;\n    if ( e.charCode == 97 )\n    {\n        var evt = document.createEvent(\"KeyboardEvent\");\n        evt.initKeyEvent(\"keypress\",true, true, window, false, false,false, false, 0, e.charCode -32);\n        this.dispatchEvent(evt);\n        return false;\n    }\n    return true;\n}\n</code></pre>\n\n<p>you could use fireEvent in IE...\nI used \n<a href=\"http://help.dottoro.com/ljrinokx.php\" rel=\"nofollow\">http://help.dottoro.com/ljrinokx.php</a>\nand\n<a href=\"https://developer.mozilla.org/en/DOM/event.initKeyEvent\" rel=\"nofollow\">https://developer.mozilla.org/en/DOM/event.initKeyEvent</a> for reference</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is it possible to change the character which has been entered on keypress, without doing it manually?</p>\n\n<p>For example, if I want to force uppercase letters <strong>based on some condition</strong>, it'd be nice to do the following:</p>\n\n<pre><code>function onKeypressHandler(e)\n{\n    if ( condition )\n    {\n        e.which -= 32;\n    }\n}\n</code></pre>\n\n<p>But of course that doesn't work.</p>\n\n<p><strong>NOTE:</strong> This is <em>not</em> an across the board uppercasing, but <em>only</em> specific characters.</p>\n\n<p>Maybe I want to say <code>if ( e.which &gt;= 97 &amp;&amp; e.which &lt;= 102 )</code> or <code>if ( Wind.Direction == 'South' )</code> or whatever - the condition itself is not important, but <strong>the uppercasing must only apply to the current character</strong> not the entire input.</p>\n\n<p><br/>\nI can do it by manually appending the changed character, but this is an ugly and messy way of doing it, and probably slower than it could be.</p>\n\n<pre><code>function onKeypressHandler(e)\n{\n    if ( condition )\n    {\n        $j(this).val( $j(this).val() + String.fromCharCode( e.which - 32 ) );\n        return false;\n    }\n}\n</code></pre>\n\n<p>A specific flaw with this method - if selecting all input text and entering a key, if it drops into this then it doesn't remove existing content, but simply appends to the content the user wanted removed. (Would need to investigating detecting any selected text to solve that, which makes this one even uglier.)</p>\n\n<p>Can anyone provide a better solution?</p>\n",
            "last_activity_date": 1294239808,
            "question_id": 3923089,
            "score": 17,
            "tags": [
                "javascript",
                "jquery",
                "keypress"
            ],
            "title": "Can I conditionally change the character entered into an input on keypress?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>function hex2a(hexx) {\n    var hex = hexx.toString();//force conversion\n    var str = '';\n    for (var i = 0; i &lt; hex.length; i += 2)\n        str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n    return str;\n}\nhex2a('32343630'); // returns '2460'\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<p><strong>Here is working demo with ready to use function</strong></p>\n\n<p><a href=\"http://www.java2s.com/Code/JavaScript/Security/AsciitoHexandHextoAsciiinJavaScript.htm\" rel=\"nofollow\">http://www.java2s.com/Code/JavaScript/Security/AsciitoHexandHextoAsciiinJavaScript.htm</a></p>\n\n<p>and the working demo</p>\n\n<p><a href=\"http://www.java2s.com/Code/JavaScriptDemo/AsciitoHexandHextoAsciiinJavaScript.htm\" rel=\"nofollow\">http://www.java2s.com/Code/JavaScriptDemo/AsciitoHexandHextoAsciiinJavaScript.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For completeness sake the reverse function:</p>\n\n<pre><code>function a2hex(str) {\n  var arr = [];\n  for (var i = 0, l = str.length; i &lt; l; i ++) {\n    var hex = Number(str.charCodeAt(i)).toString(16);\n    arr.push(hex);\n  }\n  return arr.join('');\n}\na2hex('2460'); //returns 32343630\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>It is very simple! <strong>I would recommend you to do the following to save some bytes</strong>:</p>\n\n<pre><code>function hextostring(d) {\n    return unescape(('' + d).replace(/(..)/g, '%$1'))\n}\n</code></pre>\n\n<p>If you intend to use it only to convert numbers (as in your example, but I believe it is not your intention for general situations), you could use:</p>\n\n<pre><code>function hextostring(d) {\n    return ('' + d).replace(/.(.)/g, '$1')\n}\n</code></pre>\n\n<p>If you want the most complete function (the first one) even more detailed (which it is not recommended, because of transmission reasons), you can choose between:</p>\n\n<p>Using no library:</p>\n\n<pre><code>function hextostring(d){\n    var r = '', m = ('' + d).match(/../g), t;\n    while (t = m.shift())\n        r += String.fromCharCode('0x' + t);\n    return r\n}\n</code></pre>\n\n<p>Or using jQuery (<strong>it's not an advantage in this case, because it tends to use more processing</strong>):</p>\n\n<pre><code>function hextostring(d){\n    var r = '';\n    $.each(('' + d).match(/../g), function(){\n        r += String.fromCharCode('0x' + this)\n    });\n    return r\n}\n</code></pre>\n\n<p><strong>Have a good development with the best performance and compact code!</strong></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use this..</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var asciiVal = \"32343630\".match(/.{1,2}/g).map(function(v){\r\n      return String.fromCharCode(parseInt(v, 16));\r\n    }).join('');\r\n    \r\ndocument.write(asciiVal);</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How to convert from <code>Hex</code> string to <code>ASCII</code> string in JavaScript?</p>\n\n<p>Ex:  </p>\n\n<blockquote>\n  <p>32343630 it will be 2460</p>\n</blockquote>\n",
            "last_activity_date": 1418288741,
            "question_id": 3745666,
            "score": 17,
            "tags": [
                "javascript"
            ],
            "title": "How to convert from Hex to ASCII in JavaScript?"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>I took a look at the source code and found this undocumented way:</p>\n\n<pre><code>var $myinput = $('#myinput');\n$myinput.data('typeahead')._showDropdown()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Looking through the source code, it appears to store a <code>TypeaheadView</code> object in the element data under the key <code>typeahead</code>. This <code>TypeaheadView</code> object has an internal method, <code>_showDropdown</code>, which is internally bound to the focus event (and a few others).</p>\n\n<p>I would not recommend doing this, but you should be able to call that internal method manually:</p>\n\n<pre><code>$('#yourTypeaheadElement').data('typeahead')._showDropdown();\n</code></pre>\n\n<p>Alternatively, have you just tried simply focusing your typeahead element when the page loads (after initializing it as a typeahead element, of course):</p>\n\n<pre><code>// after page loads and yourTypeaheadElement is initialized as a typeahead\n$('#yourTypeaheadElement').focus();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Triggering input seems to do it.</p>\n\n<pre><code>$(\".typeahead\").eq(0).val(\"Uni\").trigger(\"input\");\n</code></pre>\n\n<p>Tested this on the <a href=\"http://twitter.github.com/typeahead.js/examples/\">example page</a>.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<pre><code>$(\".typeahead\").typeahead('lookup').focus();\n</code></pre>\n\n<p>triggers with existing value of input. you can change the value in advance of course</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This should work with the \"old\" bootstrap typeahead plugin:</p>\n\n<pre><code>$(\".typeahead\").eq(0).trigger(\"keyup\");\n</code></pre>\n\n<p>Haven't tested with IE unfortunately...\nDon't know about the new typeahead plugin...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As of Typeahead v0.10.1, changing the value of the typeahead will trigger another query and open the dropdown:</p>\n\n<pre><code>var val = $(\".typeahead\").typeahead('val');\n$(\".typeahead\").typeahead('val', '');\n$(\".typeahead\").typeahead('val', val);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>According to my tests (see <a href=\"http://jsfiddle.net/Sam_Butler/df88n/2/\" rel=\"nofollow\">fiddle</a>), the focus() method is necessary in order to display the dropdown. So:</p>\n\n<pre><code>theVal = $('.typeahead').val();\n$(\".typeahead\").typeahead('val', '')\n$(\".typeahead\").focus().typeahead('val',theVal).focus();\n</code></pre>\n\n<ul>\n<li>On line 1, we're assigning the current value of the Typeahead input to the variable <strong>theVal</strong>;</li>\n<li>On line 2 we simply reset typeahead's computed value; and</li>\n<li>On line 3 we're putting back the original value <em>and</em> the focus, which results in the suggestion dropdown displaying as if the user had typed something.</li>\n</ul>\n\n<p>I actually needed this to strongly encourage users to select from the Bloodhound suggestions coming from a geocoding API call so I could ensure the coordinates were obtained by the client prior to submitting a form.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's a simplified version of @Sam_Butler's work: <a href=\"http://jsfiddle.net/rimian/hrnf9\" rel=\"nofollow\">http://jsfiddle.net/rimian/hrnf9</a></p>\n\n<pre><code>&lt;button type=\"button\" id=\"button\"&gt;Crick&lt;/button&gt;\n&lt;input type=\"text\" id=\"text\" class=\"typeahead\"&gt;\n</code></pre>\n\n<p>Javascript:</p>\n\n<pre><code>$('#button').click(function() {\n  $(\"#text\").focus().typeahead('val', 'London');\n});\n\n// instantiate the bloodhound suggestion engine\nvar locations = new Bloodhound({\n    datumTokenizer: Bloodhound.tokenizers.obj.whitespace('value'),\n    queryTokenizer: Bloodhound.tokenizers.whitespace,\n    remote: {\n        url: 'https://maps.googleapis.com/maps/api/geocode/json?address=%QUERY&amp;components=country:GB&amp;sensor=false&amp;region=uk', //add key\n        filter: function (locations) {\n            return $.map(locations.results, function (location) {\n                return {\n                    value: location.formatted_address\n                };\n            });\n        }\n    }\n});\n\nlocations.initialize();\n\n$('#text').typeahead(null, {\n    name: 'value',\n    displayKey: 'value',\n    source: locations.ttAdapter()\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h2>Be careful with this!</h2>\n\n<p>For those who are thinking about trigger typeahead behavior manually (on a button click for example) I strongly recommend you to don't do this.</p>\n\n<p>I came for this solution and I lost almost an entire day making workarounds to it work properly (in my case that was a button click).</p>\n\n<p>For those who really want go by this dark way, I share with you my ugly code that makes it work:</p>\n\n<pre><code>//Removes default features of typeahead\n//This means that typeahead will not work like an \"autocomplete\", it only will be trigged when the user Click in #btnSearch button!\nvar txt = $(\"#typeahead\");\n//Save input events in variables (we'll need them)\neventInput = $._data(txt[0], \"events\").input[0];\neventBlur = $._data(txt[0], \"events\").blur[1];\n//Remove input events\ntxt.unbind(\"blur\");\ntxt.unbind(\"input\");\n\n//Set click event that triggers typeahead features manually\n$(\"#btnSearch\").click(function () {\n    //Clears the cache of engine for it call ajax again, without it when the term was already searched the ajax is not called!\n    engine.clearRemoteCache();\n\n    txt.focus(); //When we click in a button, the focus from input is lost, so we set it again to not lose the behaviors of keyboard keys (up, down, tab, etc)\n    txt.bind(\"input\", eventInput); //Bind the event that we had saved\n    txt.trigger(\"input\"); //Trigger input (like the answer from @epascarello)\n    txt.unbind(\"input\"); //Removes it again \n});\n\n//Set event on parent of the suggestion's div, this makes the sugestion div close when user click outside it\n$(\"body\").click(function () {            \n    if (eventBlur != undefined) {\n        if ($(\".tt-dropdown-menu:visible\").length &gt; 0) {\n            eventBlur.handler(); //This event closes the suggestion menu\n        }\n    }\n});\n</code></pre>\n\n<p>Another thing that I did was change a code of the event <strong>\"_checkInputValue\"</strong> on typeahead.js. I change this:</p>\n\n<pre><code>areEquivalent = areQueriesEquivalent(inputValue, this.query);\n</code></pre>\n\n<p>to this:</p>\n\n<pre><code>areEquivalent = false;//areQueriesEquivalent(inputValue, this.query);\n</code></pre>\n\n<p>I set it to false because typeahead <strong>don't send two identical requests to server</strong>. This occur when the user clicks twice in the search button (I mean, when he searches more than once the same text that he has already searched for). Anyway, if you are using local data you won't need to do this.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This worked for me. </p>\n\n<pre><code>$( document ).ready(function() {\n    $('#the-basics .typeahead').typeahead({\n      hint: false,\n      highlight: true,\n      minLength: 0\n    },\n    {\n      name: 'states',\n      displayKey: 'value',\n      source: substringMatcher(states)\n    });\n\n    //set a value to input to trigger opening\n    $(\".typeahead\").eq(0).val(\"a\").trigger(\"input\");\n    //remove value for end user\n    $(\".typeahead\").eq(0).val(\"\");\n\n});\n</code></pre>\n\n<p>See here for example: <a href=\"http://joshuamaynard.com/sandbox/autocomplete\" rel=\"nofollow\">http://joshuamaynard.com/sandbox/autocomplete</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The other answers were helpful but did not solve my problem. This solution does not involve customising any of the angular-ui code itself and serves the purpose of only triggering the typeahead to fetch results on an explicit button click.</p>\n\n<p>To do this I had to overlay a text field on top of another (disabled) text field that is the actual one with the typeahead. Nobody will know the other one is there but it needs to be there for angular-ui to launch the menu in the correct location. You can't make it a hidden field because it will not be able to show the menu in the correct location.</p>\n\n<p>The directive below will watch the <code>typeaheadText</code> and <code>typeaheadTrigger</code> variables to populate the disbled field when the button triggers this (by setting the trigger to true). The directive has isolated scope so it does not depend on anything other than passed in.</p>\n\n<pre><code>directive('typeaheadTrigger', function() {\n  return {\n    require: [\"ngModel\"],\n    scope: {\n      typeaheadText: '=',\n      triggerFlag: '='\n    },\n    link: function(scope, element, attr, ctrls) {\n      scope.$watch('triggerFlag', function(value) {\n        if (scope.triggerFlag) {\n          ctrls[0].$setViewValue(scope.typeaheadText);\n          scope.typeaheadText = '';\n          scope.triggerFlag = false;\n        }\n      });\n    }\n  };\n})\n</code></pre>\n\n<p>The controller sets a few things up for this - the trigger and text scope variables inside an object. This demonstrates how to do it - ideally you'd wrap this whole thing in another directive so it can be used in your application while hiding the details.</p>\n\n<p>Here's the plunk: <a href=\"http://plnkr.co/edit/UYjz6F5ydkMQznkZAlfx?p=preview\" rel=\"nofollow\">http://plnkr.co/edit/UYjz6F5ydkMQznkZAlfx?p=preview</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I used twitter bootstrap typeahead, and wamted that on focus, the suggestion list will open.\nThe answers here didn't quite work for me, so I wrote this simple directive (requires jquery):</p>\n\n<pre><code>.directive('typeaheadFocusTrigger', function() {\n        return {\n            limit: 'A',\n            link: function(scope, element, attrs) {\n                $(element).on('focus', function(e) {\n                    var $target = $(e.target);\n                    var origVal = $target.eq(0).val();\n                    $target.eq(0).val('').trigger('input')\n                    .eq(0).val(origVal).trigger('input');\n                });\n            }\n        }\n    });\n</code></pre>\n\n<p>Now just add this attribute, and it will trigger on focus</p>\n\n<pre><code>&lt;input typeahead-focus-trigger typeahead=\"\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Using: <em>Typeahead v0.10.5</em></p>\n\n<p><strong>Don't use:</strong>\n<code>$('.typeahead').typeahead('open');</code></p>\n\n<p>This currently does not work. Source: <a href=\"https://github.com/twitter/typeahead.js/issues/798\" rel=\"nofollow\">https://github.com/twitter/typeahead.js/issues/798</a>.\nAs a temporary fix, use a a custom jQuery keydown event (after you have instantiated the typeahead):</p>\n\n<pre><code>var ttInstance = $('.typeahead').typeahead( config ); // Create Typeahead\nttInstance.typeahead('val', 'pancakes'); // Set an initial value\n\nvar evt = jQuery.Event('keydown');\nevt.keyCode = evt.which = 40;\nttInstance.trigger(evt); // Opens the dropdown\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am using Twitter's typeahead.js (<a href=\"https://github.com/twitter/typeahead.js/\">https://github.com/twitter/typeahead.js/</a>) on an input field which is pre filled from a query string. After loading the page, i'd like to programmatically trigger the display of typeahead results without the user needing to type anything in the form field.</p>\n\n<p>Out of the box, typeahead.js is only triggered if the user manually types something into the input field and i can not find any method in typeahead.js which i could call to trigger the display of results.</p>\n\n<p>Any pointers would be greatly appreciated.</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1426105903,
            "question_id": 15115059,
            "score": 16,
            "tags": [
                "javascript",
                "typeahead.js"
            ],
            "title": "Programmatically triggering typeahead.js result display"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>For the background color - the <code>fill</code> property can be accessed like so:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>svgElement.style.fill = '#fff';\n</code></pre>\n\n<p>To set the border color, do the same for the <code>stroke</code> property.</p>\n\n<p>Please refer to the <a href=\"http://www.w3.org/TR/SVG/\" rel=\"nofollow\">W3C reference on SVG</a>, as it's a broad issue.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Sure, here an example</p>\n\n<pre><code>&lt;HTML&gt;\n&lt;HEAD&gt;\n&lt;/HEAD&gt;\n&lt;BODY&gt;\n&lt;svg id=\"svg1\" xmlns=\"http://www.w3.org/2000/svg\" style=\"width: 3.5in; height: 1in\"&gt;\n    &lt;circle id=\"circle1\" r=\"30\" cx=\"34\" cy=\"34\" style=\"fill: red; stroke: blue; stroke-width: 2\"/&gt;\n&lt;/svg&gt;\n&lt;button onclick=circle1.style.fill=\"yellow\";&gt;Click to change to yellow&lt;/button&gt;\n&lt;/BODY&gt;\n&lt;/HTML&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Here's a full <a href=\"http://xn--dahlstrm-t4a.net/svg/html/get-embedded-svg-document-script.html\" rel=\"nofollow\">example</a> that shows how to modify the fill color of an svg referenced via &lt;embed>, &lt;object> and &lt;iframe>.</p>\n\n<p>Also see <a href=\"http://stackoverflow.com/questions/4906148/how-to-apply-a-style-to-an-embedded-svg\">How to apply a style to an embedded SVG?</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Given some SVG:</p>\n\n<pre><code>&lt;div id=\"main\"&gt;\n  &lt;svg id=\"octocat\" xmlns=\"http://www.w3.org/2000/svg\" width=\"400px\" height=\"400px\" viewBox=\"-60 0 420 330\" style=\"fill:#fff;stroke: #000; stroke-opacity: 0.1\"&gt;\n    &lt;path id=\"puddle\" d=\"m296.94 295.43c0 20.533-47.56 37.176-106.22 37.176-58.67 0-106.23-16.643-106.23-37.176s47.558-37.18 106.23-37.18c58.66 0 106.22 16.65 106.22 37.18z\"/&gt;\n    &lt;path class=\"shadow-legs\" d=\"m161.85 331.22v-26.5c0-3.422-.619-6.284-1.653-8.701 6.853 5.322 7.316 18.695 7.316 18.695v17.004c6.166.481 12.534.773 19.053.861l-.172-16.92c-.944-23.13-20.769-25.961-20.769-25.961-7.245-1.645-7.137 1.991-6.409 4.34-7.108-12.122-26.158-10.556-26.158-10.556-6.611 2.357-.475 6.607-.475 6.607 10.387 3.775 11.33 15.105 11.33 15.105v23.622c5.72.98 11.71 1.79 17.94 2.4z\"/&gt;\n    &lt;path class=\"shadow-legs\" d=\"m245.4 283.48s-19.053-1.566-26.16 10.559c.728-2.35.839-5.989-6.408-4.343 0 0-19.824 2.832-20.768 25.961l-.174 16.946c6.509-.025 12.876-.254 19.054-.671v-17.219s.465-13.373 7.316-18.695c-1.034 2.417-1.653 5.278-1.653 8.701v26.775c6.214-.544 12.211-1.279 17.937-2.188v-24.113s.944-11.33 11.33-15.105c0-.01 6.13-4.26-.48-6.62z\"/&gt;\n    &lt;path id=\"cat\" d=\"m378.18 141.32l.28-1.389c-31.162-6.231-63.141-6.294-82.487-5.49 3.178-11.451 4.134-24.627 4.134-39.32 0-21.073-7.917-37.931-20.77-50.759 2.246-7.25 5.246-23.351-2.996-43.963 0 0-14.541-4.617-47.431 17.396-12.884-3.22-26.596-4.81-40.328-4.81-15.109 0-30.376 1.924-44.615 5.83-33.94-23.154-48.923-18.411-48.923-18.411-9.78 24.457-3.733 42.566-1.896 47.063-11.495 12.406-18.513 28.243-18.513 47.659 0 14.658 1.669 27.808 5.745 39.237-19.511-.71-50.323-.437-80.373 5.572l.276 1.389c30.231-6.046 61.237-6.256 80.629-5.522.898 2.366 1.899 4.661 3.021 6.879-19.177.618-51.922 3.062-83.303 11.915l.387 1.36c31.629-8.918 64.658-11.301 83.649-11.882 11.458 21.358 34.048 35.152 74.236 39.484-5.704 3.833-11.523 10.349-13.881 21.374-7.773 3.718-32.379 12.793-47.142-12.599 0 0-8.264-15.109-24.082-16.292 0 0-15.344-.235-1.059 9.562 0 0 10.267 4.838 17.351 23.019 0 0 9.241 31.01 53.835 21.061v32.032s-.943 11.33-11.33 15.105c0 0-6.137 4.249.475 6.606 0 0 28.792 2.361 28.792-21.238v-34.929s-1.142-13.852 5.663-18.667v57.371s-.47 13.688-7.551 18.881c0 0-4.723 8.494 5.663 6.137 0 0 19.824-2.832 20.769-25.961l.449-58.06h4.765l.453 58.06c.943 23.129 20.768 25.961 20.768 25.961 10.383 2.357 5.663-6.137 5.663-6.137-7.08-5.193-7.551-18.881-7.551-18.881v-56.876c6.801 5.296 5.663 18.171 5.663 18.171v34.929c0 23.6 28.793 21.238 28.793 21.238 6.606-2.357.474-6.606.474-6.606-10.386-3.775-11.33-15.105-11.33-15.105v-45.786c0-17.854-7.518-27.309-14.87-32.3 42.859-4.25 63.426-18.089 72.903-39.591 18.773.516 52.557 2.803 84.873 11.919l.384-1.36c-32.131-9.063-65.692-11.408-84.655-11.96.898-2.172 1.682-4.431 2.378-6.755 19.25-.80 51.38-.79 82.66 5.46z\"/&gt;\n    &lt;path id=\"face\" d=\"m258.19 94.132c9.231 8.363 14.631 18.462 14.631 29.343 0 50.804-37.872 52.181-84.585 52.181-46.721 0-84.589-7.035-84.589-52.181 0-10.809 5.324-20.845 14.441-29.174 15.208-13.881 40.946-6.531 70.147-6.531 29.07-.004 54.72-7.429 69.95 6.357z\"/&gt;\n    &lt;path id=\"eyes\" d=\"m160.1 126.06 c0 13.994-7.88 25.336-17.6 25.336-9.72 0-17.6-11.342-17.6-25.336 0-13.992 7.88-25.33 17.6-25.33 9.72.01 17.6 11.34 17.6 25.33z m94.43 0 c0 13.994-7.88 25.336-17.6 25.336-9.72 0-17.6-11.342-17.6-25.336 0-13.992 7.88-25.33 17.6-25.33 9.72.01 17.6 11.34 17.6 25.33z\"/&gt;\n    &lt;path id=\"pupils\" d=\"m154.46 126.38 c0 9.328-5.26 16.887-11.734 16.887s-11.733-7.559-11.733-16.887c0-9.331 5.255-16.894 11.733-16.894 6.47 0 11.73 7.56 11.73 16.89z m94.42 0 c0 9.328-5.26 16.887-11.734 16.887s-11.733-7.559-11.733-16.887c0-9.331 5.255-16.894 11.733-16.894 6.47 0 11.73 7.56 11.73 16.89z\"/&gt;\n    &lt;circle id=\"nose\" cx=\"188.5\" cy=\"148.56\" r=\"4.401\"/&gt;\n    &lt;path id=\"mouth\" d=\"m178.23 159.69c-.26-.738.128-1.545.861-1.805.737-.26 1.546.128 1.805.861 1.134 3.198 4.167 5.346 7.551 5.346s6.417-2.147 7.551-5.346c.26-.738 1.067-1.121 1.805-.861s1.121 1.067.862 1.805c-1.529 4.324-5.639 7.229-10.218 7.229s-8.68-2.89-10.21-7.22z\"/&gt;\n    &lt;path id=\"octo\" d=\"m80.641 179.82 c0 1.174-1.376 2.122-3.07 2.122-1.693 0-3.07-.948-3.07-2.122 0-1.175 1.377-2.127 3.07-2.127 1.694 0 3.07.95 3.07 2.13z m8.5 4.72 c0 1.174-1.376 2.122-3.07 2.122-1.693 0-3.07-.948-3.07-2.122 0-1.175 1.377-2.127 3.07-2.127 1.694 0 3.07.95 3.07 2.13z m5.193 6.14 c0 1.174-1.376 2.122-3.07 2.122-1.693 0-3.07-.948-3.07-2.122 0-1.175 1.377-2.127 3.07-2.127 1.694 0 3.07.95 3.07 2.13z m4.72 7.08 c0 1.174-1.376 2.122-3.07 2.122-1.693 0-3.07-.948-3.07-2.122 0-1.175 1.377-2.127 3.07-2.127 1.694 0 3.07.95 3.07 2.13z m5.188 6.61 c0 1.174-1.376 2.122-3.07 2.122-1.693 0-3.07-.948-3.07-2.122 0-1.175 1.377-2.127 3.07-2.127 1.694 0 3.07.95 3.07 2.13z m7.09 5.66 c0 1.174-1.376 2.122-3.07 2.122-1.693 0-3.07-.948-3.07-2.122 0-1.175 1.377-2.127 3.07-2.127 1.694 0 3.07.95 3.07 2.13z m9.91 3.78 c0 1.174-1.376 2.122-3.07 2.122-1.693 0-3.07-.948-3.07-2.122 0-1.175 1.377-2.127 3.07-2.127 1.694 0 3.07.95 3.07 2.13z m9.87 0 c0 1.174-1.376 2.122-3.07 2.122-1.693 0-3.07-.948-3.07-2.122 0-1.175 1.377-2.127 3.07-2.127 1.694 0 3.07.95 3.07 2.13z m10.01 -1.64 c0 1.174-1.376 2.122-3.07 2.122-1.693 0-3.07-.948-3.07-2.122 0-1.175 1.377-2.127 3.07-2.127 1.694 0 3.07.95 3.07 2.13z\"/&gt;\n    &lt;path id=\"drop\" d=\"m69.369 186.12l-3.066 10.683s-.8 3.861 2.84 4.546c3.8-.074 3.486-3.627 3.223-4.781z\"/&gt;\n  &lt;/svg&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Using jQuery, for instance, you could do:</p>\n\n<pre><code>var _currentFill = \"#f00\"; // red\n$svg = $(\"#octocat\");\n$(\"#face\", $svg).attr('style', \"fill:\"+_currentFill); })\n</code></pre>\n\n<p>I provided a coloring book demo as an answer to another stackoverflow question: <a href=\"http://bl.ocks.org/4545199\" rel=\"nofollow\">http://bl.ocks.org/4545199</a>. Tested on Safari, Chrome, and Firefox.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is for <code>&lt;object&gt;</code> <strong>SVG</strong> and className is .svgClass</p>\n\n<pre><code>&lt;object class=\"svgClass\" type=\"image/svg+xml\" data=\"image.svg\"&gt;&lt;/object&gt;\n</code></pre>\n\n<p>So JavaScript code is like this:</p>\n\n<pre><code>// change to red\n    document.querySelector(\".svgClass\").getSVGDocument().getElementById(\"svgInternalID\").setAttribute(\"fill\", \"red\")\n</code></pre>\n\n<p>To change <strong>svgInternalID</strong> you have to open <strong>SVG</strong> file which is plain .txt (ie image.svg) and edit it</p>\n\n<pre><code>&lt;path id=\"svgInternalID\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I am trying to alter svg image colors with javascript. Is this possible? Can I load it as an object and then somehow have access to the color/image-data.</p>\n\n<p>Every respone or tip is highly appreciated!</p>\n",
            "last_activity_date": 1369051198,
            "question_id": 9872947,
            "score": 15,
            "tags": [
                "javascript",
                "svg"
            ],
            "title": "Changing SVG image color with javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Your model should correspond as closely as possible to what you have server side. So stick with <code>start_at</code> and <code>end_at</code>. That will greatly simplify your <code>sync()</code> operations.</p>\n\n<p>On your edit form's <em>View</em>, you can:</p>\n\n<ol>\n<li>Compute <code>start_date</code>, <code>start_time</code>, <code>duration</code> through simple functions and call them in the template.</li>\n<li>Convert to <code>start_at</code> and <code>end_at</code> on submitting.</li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>We are very used to send <code>model.toJSON()</code> to <em>feed the template</em>. And this method is very tricky to overwrite because is used by other components. </p>\n\n<p>But we can feed the template with a custom <code>model.toJSONDecorated()</code> method that can look like this:</p>\n\n<pre><code># in your Backbone.Model\ntoJSONDecorated: function(){\n  return \n    _.extend( \n      this.toJSON(), \n      {\n        start_date : Utils.dateFromDate( this.get( \"start_at\" ) ),\n        start_time : Utils.timeFromDate( this.get( \"start_at\" ) ),\n        duration   : Utils.youGetTheIdea( :) )\n      } \n    );\n}\n</code></pre>\n\n<p>Of course this is breaking a few patterns, I can live with it, if you don't you can move this logic to a <code>Decorator</code> class as people have suggested in other answers. </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You have some options:</p>\n\n<ul>\n<li><p>Override <code>toJSON</code> to return the computed <code>duration</code></p></li>\n<li><p>Create a <code>duration()</code> method on the Backbone <code>Model</code>. Only downside that you have to call it differently (<code>obj.duration()</code> instead of <code>obj.get('duration')</code>). In your view that hands <code>obj.toJSON()</code> to your template, mix in the <code>duration</code> attribute</p></li>\n<li><p>Use <a href=\"https://github.com/asciidisco/Backbone.Mutators\" rel=\"nofollow\">https://github.com/asciidisco/Backbone.Mutators</a> (or similar) to create a derived getter for duration</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I am using a combination of the initialize() function together with change event listeners to update derived attributes. The idea is first to compute the attributes on model initialization, and second to let the model listen to its own changes and update the attributes accordingly.</p>\n\n<p>My solution looks roughly like this:</p>\n\n<pre><code>MyModel: Backbone.Model.extend({\n    initialize: function() {\n        this.updateDerivedAttributes();\n        this.on('change:start_at', this.updateDerivedAttributes, this);\n    },\n    updateDerivedAttributes: function() {\n        this.set({\n            start_date: Utils.dateFromDate( this.get( \"start_at\" ) ),\n            start_time: Utils.timeFromDate( this.get( \"start_at\" ) ),\n            duration: Utils.youGetTheIdea()\n        }, {silent:true});\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>I have a scenario where the data being manipulated on the client is presented and interacted with in a different way than it is represented on the server.</p>\n\n<p>Consider the following <code>event</code> resource returned from the server.</p>\n\n<pre><code>{\n  \"id\": 123,\n  \"start_at\": 1331336004906,\n  \"end_at\": 1331337704906\n}\n</code></pre>\n\n<p>And the following template for editing:</p>\n\n<pre><code>&lt;form&gt;\n  &lt;!-- Notice how date and time are separated in the interface --&gt;\n  &lt;input type=\"text\" name=\"start_date\" value=\"{{start_date}}\" /&gt;\n  &lt;input type=\"text\" name=\"start_time\" value=\"{{start_time}}\" /&gt;\n\n  &lt;!-- Instead of asking for an end date/time, we ask for the duration --&gt;\n  &lt;input type=\"text\" name=\"duration\" value=\"{{duration}}\" /&gt;\n\n  &lt;input type=\"submit\" /&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>How would I go about treating <code>start_date</code>, <code>start_time</code>, and <code>duration</code> as attributes in my Backbone model without sending them to the server? Am I supposed to modify <code>.toJSON()</code>?</p>\n",
            "last_activity_date": 1351695226,
            "question_id": 9642439,
            "score": 15,
            "tags": [
                "javascript",
                "backbone.js",
                "javascript-framework"
            ],
            "title": "Computed properties in Backbone"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.nczonline.net/blog/2009/05/19/javascript-stack-overflow-error/\">Nicholas C. Zakas writes in his blog</a>:</p>\n\n<ul>\n<li>Internet Explorer 7: 1,789</li>\n<li>Firefox 3: 3,000</li>\n<li>Chrome 1: 21,837</li>\n<li>Opera 9.62: 10,000</li>\n<li>Safari 3.2: 500</li>\n</ul>\n\n<p>There's some more data on different browsers and OSs here: <a href=\"http://www.javascriptrules.com/2009/06/30/limitation-on-call-stacks/\">http://www.javascriptrules.com/2009/06/30/limitation-on-call-stacks/</a></p>\n\n<p>I've created a Browserscope test to get more date. <a href=\"http://adamrich.name/recursion.html\">Please run it here</a>. <a href=\"http://www.browserscope.org/user/tests/table/agt1YS1wcm9maWxlcnINCxIEVGVzdBi9qbEUDA?v=3&amp;layout=simple\">Check out the results here.</a></p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>To add to the answers here, this can depend on the functions involved in the recursion, as well.  For example, just adding a few parameters to the function can change the result:</p>\n\n<pre><code>var i=0;\nfunction inc() {\n    i++;\n    inc();\n}\ninc();\n</code></pre>\n\n<p>gives me 20923, but </p>\n\n<pre><code>var i=0;\nfunction inc(j, k, l) {\n    i++;\n    inc(l, k, j);\n}\ninc(1, 2, 3);\n</code></pre>\n\n<p>reports 13949 (tested in the console in Chromium 39).  Firefox 34 gives 25085 and 13572, respectively.</p>\n\n<p>Adding a try/catch block around the body of the zero-argument <code>inc()</code> gives 11413 frames in Chromium and 13161 in Firefox.  With both 3 arguments and the try/catch block, 8967 in Chrome and 7517 in Firefox.</p>\n\n<p>My takeaway from this is that an application that works near the stack depth in a browser can probably only figure this out based on empirical measurements of functions resembling those used in the app.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I've got some Javascript code which uses fairly deep recursion and I'd like to find out what the recursion limits in the various browsers are (i.e. the point at which the error \"too much recursion\" will happen).</p>\n\n<p>Anyone have any solid numbers on this, by version?</p>\n",
            "last_activity_date": 1424901590,
            "question_id": 2805172,
            "score": 15,
            "tags": [
                "javascript",
                "recursion"
            ],
            "title": "What are the js recursion limits for Firefox, Chrome, Safari, IE, etc?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>document.forms[\"formName\"].onsubmit = function(){\n    // process.\n}\n</code></pre>\n\n<p>that would do it.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>You can use the jQuery event, <a href=\"http://api.jquery.com/submit/\" rel=\"nofollow\"><strong><code>.submit()</code></strong></a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>With jQuery:</p>\n\n<pre><code>$('form').submit(function () {\n    // Validate here\n\n    if (pass)\n        return true;\n    else\n        return false;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Writing event handlers in vanilla javascript can be annoying to make work across browsers, so I'd recommend using a library like <a href=\"http://jquery.com/\">jquery</a> to make it robust (and also easier to write).</p>\n\n<p>In jquery, if you have a form like this:</p>\n\n<pre><code>&lt;form id=\"hello-world\" action=\"sayhello\"&gt;\n    &lt;input type=\"submit\" value=\"Hello!\"&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>You can attach an event handler like this:</p>\n\n<pre><code>$('#hello-world').submit(function(ev) {\n    ev.preventDefault(); // to stop the form from submitting\n    /* Validations go here */\n    this.submit(); // If all the validations succeeded\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Why do people always use jQuery when it isn't necessary?<br>\nWhy can't people just use simple JavaScript?</p>\n\n<pre><code>var ele = [Your Form Element];\nif(ele.addEventListener){\n    ele.addEventListener(\"submit\", callback, false);  //Modern browsers\n}else if(ele.attachEvent){\n    ele.attachEvent('onsubmit', callback);            //Old IE\n}\n</code></pre>\n\n<p><strong><em><code>callback</code></em></strong> is a function that you want to call when the form is being submitted.</p>\n\n<p>About <code>EventTarget.addEventListener</code>, check out <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget.addEventListener\">this documentation on MDN</a>.</p>\n\n<hr>\n\n<h3>Listening to the <code>submit</code> event with libraries</h3>\n\n<p>If for some reason that you've decided a library is necessary (you're already using one or you don't want to deal with cross-browser issues), here's a list of ways to listen to the submit event in common libraries:</p>\n\n<ol>\n<li><p>jQuery</p>\n\n<pre><code>$(ele).submit(callback);\n</code></pre>\n\n<p>Where <code>ele</code> is the form element reference, and <code>callback</code> being the callback function reference.<div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>    &lt;iframe width=\"100%\" height=\"100%\" src=\"http://jsfiddle.net/DerekL/wnbo1hq0/show\" frameborder=\"0\"&gt;&lt;/iframe&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p></li>\n<li><p>AngularJS</p>\n\n<pre><code>&lt;form ng-submit=\"callback()\"&gt;\n\n$scope.callback = function(){ /*...*/ };\n</code></pre>\n\n<p>Very straightforward, where <code>$scope</code> is the scope provided by the framework inside your <a href=\"https://docs.angularjs.org/guide/controller\">controller</a>.</p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 52
                },
                {
                    "body": "<p>Based on your requirements you can also do the following without libraries like jQuery:</p>\n\n<p>Add this to your head:</p>\n\n<pre><code>window.onload = function () {\n    document.getElementById(\"frmSubmit\").onsubmit = function onSubmit(form) {\n        var isValid = true;\n        //validate your elems here\n        isValid = false;\n\n        if (!isValid) {\n            alert(\"Please check your fields!\");\n            return false;\n        }\n        else {\n            //you are good to go\n            return true;\n        }\n    }\n}\n</code></pre>\n\n<p>And your form may still look something like:</p>\n\n<pre><code>    &lt;form id=\"frmSubmit\" action=\"/Submit\"&gt;\n        &lt;input type=\"submit\" value=\"Submit\" /&gt;\n    &lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I wanna write my own form validation javascript library and I've been looking on google how to detect if a submit button is clicked but all I found is code where you have to use onClick on onSubmit=\"function()\" in html.</p>\n\n<p>I would like to make this javascript so that I don't have to touch any html code like adding onSubmit or onClick javascript.</p>\n",
            "last_activity_date": 1411119038,
            "question_id": 7410063,
            "score": 14,
            "tags": [
                "javascript",
                "forms",
                "validation"
            ],
            "title": "How can I listen to the form submit event in javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I think you have to prevent caching in Internet Explorer. Try to set option cache to false.</p>\n\n<p>Example:</p>\n\n<pre><code>$.ajax({\n    url: \"http://myco.com/ajaxcall.action\",\n    data: data,\n    type : 'post',\n    dataType: 'json',\n    success: function(data) {},\n    error: function() {},\n    cache: false\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As a direct answer to your question: Yes we have just come across this issue and could not find a reasonable explanation. It only affects IE and with a very low frequency - took a long while to get to the conclusion that it is a sporadic jQuery Ajax in IE bug. We had to 'fix' the issue by returning a fail from the server under this condition and re-posting the data after a 1 second delay!</p>\n\n<p>Hacky as hell but seemed to be the only way.</p>\n\n<p>There was definitely no clash with DOM elements etc. and no logical reason for this to happen, the page can be updated many times by the user successfully with intermittent fails.</p>\n\n<p>Must be a bug.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I have spent the last week tracking down a similar problem in my own application (uses Dojo, not JQuery). From your description and frequency of occurrence, I would say it's the same issue.</p>\n\n<p>When HTTP persistent connections are used between browser and server (the default behavior), an HTTP connection can be closed down by the server at any time. This creates a very small timing hole when the browser starts to send a new request at the same time the server closes the connection. Most browsers will use a different connection or open a new connection and resend the request. This is the behavior suggested in RFC 2616 section 8.1.4:</p>\n\n<hr>\n\n<p>A client, server, or proxy MAY close the transport connection at any\n   time. For example, a client might have started to send a new request\n   at the same time that the server has decided to close the \"idle\"\n   connection. From the server's point of view, the connection is being\n   closed while it was idle, but from the client's point of view, a\n   request is in progress.</p>\n\n<p>This means that clients, servers, and proxies MUST be able to recover\n   from asynchronous close events. Client software SHOULD reopen the\n   transport connection and retransmit the aborted sequence of requests\n   without user interaction so long as the request sequence is\n   idempotent (see section 9.1.2).</p>\n\n<hr>\n\n<p>Internet explorer <em>does</em> try to resend the request when this happens, <em>but</em> when it happens to be a POST, it mangles it up by sending the headers (with Content-Length) but no actual data. That is a malformed request and should always lead to an HTTP error (usually after some timeout waiting for the data that never comes).</p>\n\n<p>This bug is documented by Microsoft as KB 895954 (see <a href=\"http://support.microsoft.com/kb/895954\">http://support.microsoft.com/kb/895954</a>). Microsoft first recognized this bug in IE 6. They provided a hotfix, and appear to have shipped the hotfix with every version of IE since then including IE 9. There are two problems with the fix:</p>\n\n<ol>\n<li><p>The hotfix is not activated by default. You have to create a really weird key using regedit to activate the fix: HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer\\Main\\FeatureControl\\FEATURE_SKIP_POST_RETRY_ON_INTERNETWRITEFILE_KB895954.</p></li>\n<li><p>The fix doesn't really fix the problem. The \"fixed\" behavior is that when the connection is closed when trying to send a request, it does not even try to resend it. It simply passes the error along to the javascript application.</p></li>\n</ol>\n\n<p>It appears that you have to add error handlers in your code and re-post the request yourself if it fails. I am looking into this solution for my application. My concern is that I'm not sure how to tell if the error I get is caused by a failed attempt to send the query, or some error sent back from the server as a result of the query (in which case I don't want to resend it).</p>\n\n<p>I wrote a C program to simulate a web server and explicitly close a connection to see how the browser handles it. I have found that IE reproduces the errant behavior 100% of the time, while Firefox, Safari and Chrome recover by properly resending the POST on another connection 100% of the time. Perhaps the answer is, \"don't use IE.\"</p>\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>The problem I am having is that when I use jquery ajax post, with very low frequency (&lt; 2%), the post parameters never make it to the server.  I do see the post request in the access log.  It seems to happen only on IE (I've observed it on 7, 8, and 9 in the logs).  </p>\n\n<p>When I switch the call from type \"post\" to type \"get\" the issue goes away.</p>\n\n<p>Has anyone else ever seen this odd behavior on IE?  Thanks!</p>\n\n<p>I have seen this for various ajax calls, but here is a typical one:</p>\n\n<pre><code>var data= {\n    \"guess\" : \"m1\",\n    \"eas\" : \"hello world\"\n};\n\n$.ajax({\n    url: \"http://myco.com/ajaxcall.action\",\n    data: data,\n    type : 'post',\n    dataType: 'json',\n    success: function(data) {},\n    error: function() {}\n});\n</code></pre>\n\n<p><strong>Update</strong>: passing \"cache: false\" does not fix the issue.</p>\n",
            "last_activity_date": 1352435210,
            "question_id": 6941898,
            "score": 14,
            "tags": [
                "javascript",
                "ajax",
                "internet-explorer",
                "jquery"
            ],
            "title": "JQuery Ajax post parameters sometimes not sent on IE"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Firefox does not carry over tags, attributes or CSS styles it does not understand from the code to the DOM. That is by design. Javascript only has access to the DOM, not the code. So no, there is no way to access a property from javascript that the browser itself does not support.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>By reading in the Stylesheet info in IE, you CAN get these \"bogus\" properties, but only in IE that I'm aware of.</p>\n\n<pre><code>var firstSS = document.styleSheets[0];\nvar firstSSRule = firstSS.rules[0];\nif(typeof(firstSSRule.style.bar) != 'undefined'){\n  alert('value of [foo] is: ' + firstSSRule.style.bar);\n} else {\n  alert('does not have [foo] property');\n}\n</code></pre>\n\n<p>Its ugly code, but you get the picture.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>One way would of course be to write your own CSS-parser in Javascript. But I believe that is <em>really</em> over the top.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I too have some pages that work wonderfully in MSIE, but have lots of info in styles and style sheets.  So I'm thinking about workarounds.  One thing Firefox does allow, mercifully, is putting inline attributes into the DOM.  So here's a partial strategy: </p>\n\n<ol>\n<li><p>Replace each inline style in the html document with a corresponding \"nStyle\", e.g., \n&lt;span class=\"cls1\" nStyle=\"color:red; nref:#myid; foo:bar\"> ... &lt;/span></p></li>\n<li><p>When the page is loaded, do the following with each element node: (a) copy the value of the nStyle attribute into the tag's cssText, and at the same time (b) convert the nonstandard attributes into an easier format, so that, e.g., node.getAttribute('nStyle') becomes the object {\"nref\":\"#myid\", \"foo\":\"bar\"}.</p></li>\n<li><p>Write a \"calculatedStyle\" function that gets either the style or the nStyle, depending on what's available.</p></li>\n</ol>\n\n<p>Writing a rough parser for style sheets might enable a similar strategy for them, but I have a question:  How do I get over the hurdle of reading the style sheet without censorship from Firefox?</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Modern browsers will just throw away any invalid css. However, you can use the content property since it only has effect with\n<code>:after</code>, <code>:before</code> etc. You can store JSON inside it:</p>\n\n<pre><code>#someElement {\n    content: '{\"foo\": \"bar\"}';\n}\n</code></pre>\n\n<p>Then use code like this to retrieve it:</p>\n\n<pre><code>var CSSMetaData = function() {\n\n    function trimQuotes( str ) {\n         return str.replace( /^['\"]/, \"\" ).replace( /[\"']$/, \"\" );   \n    }\n\n    function fixFirefoxEscape( str ) {\n        return str.replace( /\\\\\"/g, '\"' );\n    }\n\n    var forEach = [].forEach,\n        div = document.createElement(\"div\"),\n        matchesSelector = div.webkitMatchesSelector ||\n                          div.mozMatchesSelector ||\n                          div.msMatchesSelector ||\n                          div.oMatchesSelector ||\n                          div.matchesSelector,\n        data = {};\n\n    forEach.call( document.styleSheets, function( styleSheet ) {\n        forEach.call( styleSheet.cssRules, function( rule ) {\n            var content = rule.style.getPropertyValue( \"content\" ),\n                obj;\n\n            if( content ) {\n                content = trimQuotes(content);\n                try {\n                   obj = JSON.parse( content );\n                }\n                catch(e) {\n                    try {\n\n                        obj = JSON.parse( fixFirefoxEscape( content ) );\n                    }\n                    catch(e2) {\n                        return ;\n                    }\n\n                }\n                data[rule.selectorText] = obj;\n            }\n        });\n\n    });\n\n\n    return {\n\n        getDataByElement: function( elem ) {\n            var storedData;\n            for( var selector in data ) {\n                if( matchesSelector.call( elem, selector ) ) {\n                    storedData = data[selector];\n                    if( storedData ) return storedData;\n\n                }\n            }\n\n            return null;\n        }\n    };\n\n}();\nvar obj = CSSMetaData.getDataByElement( document.getElementById(\"someElement\"));\nconsole.log( obj.foo ); //bar\n</code></pre>\n\n<p>Note, this is only for modern browsers. Demo: <a href=\"http://jsfiddle.net/xFjZp/3/\">http://jsfiddle.net/xFjZp/3/</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Maybe you can try with <a href=\"http://lesscss.org/\" rel=\"nofollow\">LESS</a>. It's The Dynamic Stylesheet language and you can create non-standard css attributes, commands that will compile later.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I am trying to read a custom (non-standard) CSS property, set in a stylesheet (not the inline style attribute) and get its value. Take this CSS for example:</p>\n\n<pre><code>#someElement {\n  foo: 'bar';\n}\n</code></pre>\n\n<p>I have managed to get its value with the currentStyle property in IE7:</p>\n\n<pre><code>var element = document.getElementById('someElement');\nvar val = element.currentStyle.foo;\n</code></pre>\n\n<p>But currentStyle is MS-specific. So I tried getComputedStyle() in Firefox 3 and Safari 3:</p>\n\n<pre><code>var val = getComputedStyle(element,null).foo;\n</code></pre>\n\n<p>...and it returns undefined. <strong>Does anyone know a cross-browser way of retreiving a custom CSS property value?</strong></p>\n\n<p><em>(As you might have noticed, this isn't valid CSS. But it should work as long as the value follows the correct syntax. A better property name would be \"-myNameSpace-foo\" or something.)</em></p>\n",
            "last_activity_date": 1343235596,
            "question_id": 249991,
            "score": 13,
            "tags": [
                "javascript",
                "css"
            ],
            "title": "Can I fetch the value of a non-standard CSS property via Javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>This is something you can achieve via a jQuery plugin named <a href=\"http://archive.plugins.jquery.com/project/copy\" rel=\"nofollow\">jquery copy</a>. Here's an example using the p selector.</p>\n\n<pre><code>$(\"p\").click(function() {\n    $.copy($(this).text() + \" Disclaimer goes here!\");\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Webmaster use Javascript for that.</p>\n\n<p>Check file <a href=\"http://media.ft.com/j/FTTrack2.js\" rel=\"nofollow\">http://media.ft.com/j/FTTrack2.js</a></p>\n\n<pre><code>FT.Tynt={\n    initTynt:function(){\n        var Tynt=Tynt||[];\n        Tynt.push('cqolxGrS4r34rIadbiUt4I');\n        Tynt.i={\n            \"cc\":\"0\",\n            \"b\":true,\n            \"ap\":\"Please respect FT.com's &lt;a href='http://www.ft.com/servicestools/help/terms'&gt;ts&amp;amp;cs&lt;/a&gt; and &lt;a href='http://www.ft.com/servicestools/help/copyright'&gt;copyright policy&lt;/a&gt; which allow you to: share links; copy content for personal use; &amp;amp; redistribute limited extracts. Email ftsales.support@ft.com to buy additional rights or use this link to reference the article -\",\n            \"t\":true\n        }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>You implement a handler for <a href=\"http://help.dottoro.com/ljwexqxl.php\" rel=\"nofollow\">the <code>oncopy</code> event.</a> By manipulating the <a href=\"http://help.dottoro.com/ljxundda.php\" rel=\"nofollow\"><code>clipboardData</code> object</a>, you can change the copied text.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>They use JavaScript which can be found in the following file:</p>\n\n<p><a href=\"http://media.ft.com/j/FTTrack2.js\" rel=\"nofollow\">http://media.ft.com/j/FTTrack2.js</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As already previously mentioned, modifying the clipboard data is either restricted to specific browsers or requires the user to grant access to modifying the clipboard. A work around to this you could </p>\n\n<ol>\n<li>Add an event handler to the <code>oncopy</code> event</li>\n<li>Find the selection</li>\n<li>Prepend/append content to the content</li>\n<li>Modify the selection range to include the appended/prepended content</li>\n<li>Wait for the copy action to push through</li>\n<li>Remove the appended/prepended content</li>\n</ol>\n\n<p>I fiddled about with this method and created a plugin which does just that. Still a preliminary version and only tested on FF4/Chrome 11/IE8 so far (and IE definetly needs to have some more work done). Some of the nice things you can do with this method is that you could easily for example wrap forum post quotes in <code>[quote=USER]content[/quote]</code> and assign the user based on which post is copied. By default, the script always selects the DOM styling, but not the actual HTML, so if you for example copy <strong>bold</strong> content, it would be bold if pasted into a rich text editor, but just text if used in text only editors (removing the html tags).</p>\n\n<p>Prepending content is significantly easier with this method, compared to appending, in which case I still am not sure whether it is fully functional. For IE, you could directly modify the clipboard, but there are some issues for example when selecting the whole page, or if you want to toggle the rich copy content. Haven't had the chance to do any further browser testing, but this appears to be at least a working solution for newer browsers.</p>\n\n<p>Example: <a href=\"http://hertzen.com/experiments/jquery.plugin.clipboard/\">http://hertzen.com/experiments/jquery.plugin.clipboard/</a></p>\n\n<p>Another example: <a href=\"http://hertzen.com/experiments/jquery.plugin.clipboard/thread.html\">http://hertzen.com/experiments/jquery.plugin.clipboard/thread.html</a></p>\n\n<p>Source code: <a href=\"https://github.com/niklasvh/jquery.plugin.clipboard\">https://github.com/niklasvh/jquery.plugin.clipboard</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>Here is an example of what happens when pasting text from Financial Times, the top paragraph is added.</p>\n\n<p>Thanks in advance!</p>\n\n<p>Example:</p>\n\n<blockquote>\n  <p>Please respect FT.com's ts&amp;cs and copyright policy which allow you to: share links; copy content for >personal use; &amp; redistribute limited extracts. Email ftsales.support@ft.com to buy additional rights >or use this link to reference the article - <a href=\"http://www.ft.com/cms/s/0/792f1aec-\">http://www.ft.com/cms/s/0/792f1aec-</a>>9600-11e0-8256-00144feab49a.html#ixzz1PFrYZiD0</p>\n  \n  <p>Goldman Sachs gave a paid internship to a top Libyan official\u2019s relative while the bank was carrying >out lossmaking trades on behalf of the country\u2019s sovereign wealth fund, the Financial Times has learnt.</p>\n</blockquote>\n",
            "last_activity_date": 1391814329,
            "question_id": 6344588,
            "score": 12,
            "tags": [
                "javascript",
                "user-interface",
                "usability",
                "user-experience"
            ],
            "title": "How does Financial Times add a disclaimer when pasting text?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Image can not be shown until it serves from any server. so you need to upload the image to your server to show its preview. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I feel we had a related discussion earlier: <a href=\"http://stackoverflow.com/questions/4094012/how-to-upload-preview-image-before-upload-through-javascript\">How to upload preview image before upload through JavaScript</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>this can be done very easily with HTML 5, see this link <a href=\"http://www.html5rocks.com/en/tutorials/file/dndfiles/\">http://www.html5rocks.com/en/tutorials/file/dndfiles/</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>nice open source file uploader</p>\n\n<p><a href=\"http://blueimp.github.com/jQuery-File-Upload/\">http://blueimp.github.com/jQuery-File-Upload/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Here is the complete example for previewing image before it gets upload.</p>\n\n<p>HTML :</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;link class=\"jsbin\" href=\"http://ajax.googleapis.com/ajax/libs/jqueryui/1/themes/base/jquery-ui.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n&lt;script class=\"jsbin\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script class=\"jsbin\" src=\"http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.0/jquery-ui.min.js\"&gt;&lt;/script&gt;\n&lt;meta charset=utf-8 /&gt;\n&lt;title&gt;JS Bin&lt;/title&gt;\n&lt;!--[if IE]&gt;\n&lt;script src=\"http://goo.gl/r57ze\"&gt;&lt;/script&gt;\n&lt;![endif]--&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;input type='file' onchange=\"readURL(this);\" /&gt;\n&lt;img id=\"blah\" src=\"#\" alt=\"your image\" /&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>JavaScript  :</p>\n\n<pre><code>function readURL(input) {\n  if (input.files &amp;&amp; input.files[0]) {\n    var reader = new FileReader();\n    reader.onload = function (e) {\n      $('#blah')\n        .attr('src', e.target.result)\n        .width(150)\n        .height(200);\n    };\n    reader.readAsDataURL(input.files[0]);\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                }
            ],
            "body": "<p>I'm building a basic social network and in the registration the user uploads a display image.\nBasically I wanted to display the image, like a preview on the same page as the form, just after they select it and before the form is submitted.</p>\n\n<p>Is this possible?</p>\n",
            "last_activity_date": 1413570732,
            "question_id": 5802580,
            "score": 12,
            "tags": [
                "javascript",
                "html",
                "forms",
                "file-io"
            ],
            "title": "HTML input type=file, get the image before submitting the form"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Quoting <a href=\"http://en.wikipedia.org/wiki/Douglas_Crockford\">Douglas Crockford</a> from <a href=\"http://rads.stackoverflow.com/amzn/click/0596517742\">the Good Parts book</a> (page 47), to answer the title of this question:</p>\n\n<blockquote>\n  <p>If the <code>new</code> operator were a method instead of an operator, it could be implemented like this:</p>\n</blockquote>\n\n<pre><code>Function.method('new', function () {\n\n   // Create a new object that inherits from the \n   // constructor's prototype.\n\n   var that = Object.create(this.prototype);\n\n   // Invoke the constructor, binding -this- to\n   // the new object.\n\n   var other = this.apply(that, arguments);\n\n   // If its return value isn't an object,\n   // substitute the new object.\n\n   return (typeof other === 'object' &amp;&amp; other) || that;\n});\n</code></pre>\n\n<p>The <code>Function.method</code> method is implemented as follows. This adds an instance method to a class (<a href=\"http://www.crockford.com/javascript/inheritance.html#sugar\">Source</a>):</p>\n\n<pre><code>Function.prototype.method = function (name, func) {\n   this.prototype[name] = func;\n   return this;\n};\n</code></pre>\n\n<p>Further reading:</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/create\">Mozilla Dev Center: <code>Object.create()</code></a></li>\n<li><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/apply\">Mozilla Dev Center: <code>Function.apply()</code></a></li>\n<li><a href=\"http://www.crockford.com/javascript/inheritance.html\">Douglas Crockford: Classical Inheritance in JavaScript</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Read <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\" rel=\"nofollow\">the spec</a>. Sections <a href=\"http://bclary.com/2004/11/07/#a-11.2.2\" rel=\"nofollow\">11.2.2</a> and <a href=\"http://bclary.com/2004/11/07/#a-13.2.2\" rel=\"nofollow\">13.2.2</a> are relevant and aren't too tricky to understand (note that the latter two links are to non-official HTML-ified version of the spec).</p>\n\n<p>In summary, if you have a function <code>f</code> that returns an object, the only observable difference that calling it with <code>new</code> will make is that the <code>this</code> value will be different, and that calling it with <code>new</code> <em>may</em> be slower, since it involves additional steps of creating an object and assigning it a few properties.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I am curious as what else the <code>new</code> keyword does in the background apart from changing what the <code>this</code> scope refers too.</p>\n\n<p>For example if we compare using the <code>new</code> keyword to make a function set properties and methods on an object to just making a function return a new object, is there anything extra that the new object does?</p>\n\n<p>And which is preferred if I don't wish to create multiple objects from the function constructor</p>\n\n<pre><code>var foo2 = function () {\n  var temp = \"test\";\n\n  return {\n    getLol: function () {\n      return temp;\n    },\n\n    setLol: function(value) {\n      temp = value;\n    }\n  };\n\n}();\n\nvar foo = new function () {\n  var temp = \"test\";\n\n  this.getLol = function () {\n    return temp;\n  }\n\n  this.setLol = function(value) {\n    temp = value;\n  }\n}();\n</code></pre>\n\n<p>The firebug profiler tells me using the new keyword is slightly faster (2ms instead of 3ms), on large objects is new still significantly faster?</p>\n\n<p>[Edit]</p>\n\n<p>Another matter is on really large object constructors is having a return at the bottom of the function (It will have a large amount of local functions) or having a few this.bar = ... at the top of the function more readable? What is considered a good convention?</p>\n\n<pre><code>var MAIN = newfunction() {\n    this.bar = ...\n\n    // Lots of code\n}();\n\nvar MAIN2  = function() {\n    // Lots of code\n\n    return {\n        bar: ...\n    }\n}();\n</code></pre>\n",
            "last_activity_date": 1393067005,
            "question_id": 3650892,
            "score": 12,
            "tags": [
                "javascript",
                "oop",
                "prototype",
                "object",
                "new-operator"
            ],
            "title": "What does the new keyword do under the hood?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I have done this using CSS expressions in the Past.</p>\n\n<p>Try something like this:</p>\n\n<pre><code>.footer {\n    position: absolute;\n    top: expression((document.body.clientHeight - myFooterheight) + \"px\");\n}\n</code></pre>\n\n<p><a href=\"http://archivist.incutio.com/viewlist/css-discuss/44263\" rel=\"nofollow\">read more here</a><br>\n<a href=\"http://gadgetopia.com/post/2774\" rel=\"nofollow\">and here</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If the footer has fixed height and you know it and can hard-code it in CSS, you can do it like this:</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;style&gt;\n        .content\n        {\n            position : absolute;\n            top : 0;\n            left : 0;\n            right : 0;\n            bottom : 50px; /* that's the height of the footer */\n            overflow : auto;\n            background-color : blue;\n        }\n        .footer\n        {\n            position : absolute;\n            left : 0;\n            right : 0;\n            bottom : 0px; /* that's the height of the footer */\n\theight : 50px;\n            overflow : hidden;\n            background-color : green;\n        }\n        &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div class=\"content\"&gt;\n             everything from the page goes here\n             everything from the page goes here\n             everything from the page goes here\n             everything from the page goes here\n             everything from the page goes here\n             everything from the page goes here\n             everything from the page goes here\n             everything from the page goes here\n             everything from the page goes here\n             everything from the page goes here\n             everything from the page goes here\n             everything from the page goes here\n             everything from the page goes here\n             everything from the page goes here\n             everything from the page goes here\n        &lt;/div&gt;\n        &lt;div class=\"footer\"&gt;\n             the footer\n        &lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>This may work for you.  It works on IE6 and Firefox 2.0.0.17 for me.  Give it a shot.  I made the footer's height very tall, just for effect.  You would obviously change it to what you need.  I hope this works for you.</p>\n\n<pre><code>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Liquid Footer&lt;/title&gt;\n    &lt;style type=\"text/css\"&gt;\n    .footer {\nbackground-color: #cdcdcd;\nheight: 180px;\ntext-align: center;\nfont-size:10px;\ncolor:#CC0000;\nfont-family:Verdana;\npadding-top: 10px;\nwidth: 100%;\nposition:fixed;\nleft: 0px;\nbottom: 0px;\n}\n    &lt;/style&gt;\n    &lt;!--[if lte IE 6]&gt;\n    &lt;style type=\"text/css\"&gt;\n    body {height:100%; overflow-y:auto;}\n    html {overflow-x:auto; overflow-y:hidden;}\n    * html .footer {position:absolute;}\n    &lt;/style&gt;\n    &lt;![endif]--&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   This is to expand the content on the page&lt;br&gt;\n   &lt;div class=\"footer\"&gt;-- This is your liquid footer --&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code>\n\n</pre>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>If you put the <code>height</code> to <code>100%</code> and <code>overflow: auto</code> to the <code>&lt;html/&gt;</code> and <code>&lt;body/&gt;</code> tags, anything with the absolute position will become fixed. It the most basic for is pretty funky with oddly placed scroll bars but can be tweak to decent results.\nexample</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n                      \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;style&gt;\n            html, body\n            {\n                height: 100%;\n                overflow: auto;\n            }\n\n            .fixed\n            {\n                position: absolute;\n                bottom: 0px;\n                height: 40px;\n                background: blue;\n                width: 100%;\n            }\n        &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div class=\"fixed\"&gt;&lt;/div&gt;\n        overflow....&lt;br /&gt;\n        overflow....&lt;br /&gt;\n        overflow....&lt;br /&gt;\n        overflow....&lt;br /&gt;\n        overflow....&lt;br /&gt;\n        overflow....&lt;br /&gt;\n        overflow....&lt;br /&gt;\n        overflow....&lt;br /&gt;\n        overflow....&lt;br /&gt;&lt;!-- ... --&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>if you do want to not use the conditional comments, so that you can put the css in a separate file, use <code>!important</code>. Something like this:</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n               \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;  \n&lt;html&gt;\n    &lt;head&gt;\n        &lt;style&gt;\n            html {\n                overflow-x: auto;\n                overflow-y: scroll !important;\n                overflow-y: hidden; /* ie6 value b/c !important ignored */\n            }\n\n            body {\n                padding:0;\n                margin:0;\n                height: 100%;\n                overflow-y: hidden !important;\n                overflow-y: scroll; /* ie6 value b/c !important ignored */\n            }\n\n            #bottom {\n                background-color:#ddd;\n                position: fixed !important;\n                position: absolute; /* ie6 value b/c !important ignored */\n                width: 100%;\n                bottom: 0px;\n                z-index: 5;\n                height:100px;\n            }\n            #content {\n                font-size: 50px;\n            }\n        &lt;/style&gt;\n    &lt;/head&gt; \n    &lt;body&gt;\n        &lt;div id=\"bottom\"&gt;\n            keep this text in the viewport at all times\n        &lt;/div&gt;\n        &lt;div id=\"content\"&gt;\n            Let's create enough content to force scroll bar to appear.\n            Then we can ensure this works when content overflows.\n            One quick way to do this is to give this text a large font\n            and throw on some extra line breaks.\n            &lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;\n            &lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;    \n        &lt;/div&gt;  \n    &lt;/body&gt; \n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>$(function(){\n    positionFooter(); \n    function positionFooter(){\n        if($(document).height() &lt; $(window).height()){//Without the body height conditional the footer will always stick to the bottom of the window, regardless of the body height, $(document).height() - could be main container/wrapper like $(\"#main\").height() it depend on your code\n            $(\"#footer\").css({position: \"absolute\",top:($(window).scrollTop()+$(window).height()-$(\"#footer\").height())+\"px\"})\n        }   \n    }\n\n    $(window).scroll(positionFooter);\n    $(window).resize(positionFooter);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I know this would be easy with position:fixed, but unfortanately I'm stuck with supporting IE 6.  How can I do this?  I would rather use CSS to be clean, but if I have to use Javascript, that's not the end of the world.  In my current implementation I have a \"floating footer\" that floats above the main content area and is positioned with Javascript.  The implementation I have right now is not particular elegant even with the Javascript, so my questions are:</p>\n\n<ol>\n<li>Is there a way to do this without Javascript?</li>\n<li>If I have to use Javascript, are there any \"nice\" solutions to this floating footer problem?  By \"nice\" I mean something that will work across browsers, doesn't overload the browser's resources (since it will have to recalculate often), and is elegant/easy to use (i.e. it would be nice to write something like <code>new FloatingFooter(\"floatingDiv\")</code>).</li>\n</ol>\n\n<p>I'm going to guess there is no super easy solution that has everything above, but something I can build off of would be great.</p>\n\n<p>Finally, just a more general question.  I know this problem is a big pain to solve, so what are other UI alternatives rather than having footer content at the bottom of every page?  On my particular site, I use it to show transitions between steps.  Are there other ways I could do this?</p>\n",
            "last_activity_date": 1370208989,
            "question_id": 146659,
            "score": 12,
            "tags": [
                "javascript",
                "css",
                "internet-explorer-6",
                "sticky-footer"
            ],
            "title": "How do I get a floating footer to stick to the bottom of the viewport in IE 6?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I assume you used <code>splice</code> something like this?</p>\n\n<pre><code>for(var i = 0; i &lt; arrayOfObjects.length; i++) {\n    var obj = arrayOfObjects[i];\n\n    if(listToDelete.indexOf(obj.id) !== -1) {\n        arrayOfObjects.splice(i, 1);\n    }\n}\n</code></pre>\n\n<p>All you need to do is decrement <code>i</code> for the next time around, then:</p>\n\n<pre><code>for(var i = 0; i &lt; arrayOfObjects.length; i++) {\n    var obj = arrayOfObjects[i];\n\n    if(listToDelete.indexOf(obj.id) !== -1) {\n        arrayOfObjects.splice(i, 1);\n        <b>i--;</b>\n    }\n}</code></pre>\n\n<p>You can also loop backwards, of course &mdash; your choice. Finally, there&rsquo;s <code>filter</code>, given ES5 array support or a shim:</p>\n\n<pre><code>var newArray = arrayOfObjects.filter(function(obj) {\n    return listToDelete.indexOf(obj.id) === -1;\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>If you just want to remove it from the existing array and not create a new one, try:</p>\n\n<pre><code>var items = [{Id: 1},{Id: 2},{Id: 3}];\nitems.splice(_.indexOf(items, _.find(items, function (item) { return item.Id === 2; })), 1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If you want to modify the existing array itself, then we have to use <strong>splice</strong>. Here is the little better/readable way using <strong>findWhere</strong> of underscore:</p>\n\n<pre><code>var items= [{id:'abc',name:'oh'}, // delete me\n                  {id:'efg',name:'em'},\n                  {id:'hij',name:'ge'}];\nitems.splice(_.indexOf(items, _.findWhere(items, { id : \"abc\"})), 1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Loop in reverse by decrementing <code>i</code> to avoid the problem:</p>\n\n<pre><code>for (var i = arrayOfObjects.length - 1; i &gt;= 0; i--) {\n    var obj = arrayOfObjects[i];\n\n    if (listToDelete.indexOf(obj.id) !== -1) {\n        arrayOfObjects.splice(i, 1);\n    }\n}\n</code></pre>\n\n<p>Or use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\" rel=\"nofollow\"><code>filter</code></a>:</p>\n\n<pre><code>var newArray = arrayOfObjects.filter(function(obj) {\n    return listToDelete.indexOf(obj.id) === -1;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can remove an item by one of its properties without using any 3rd party libs like this:</p>\n\n<pre><code>var removeIndex = array.map(function(item) { return item.id; })\n                       .indexOf(\"abc\");\n\narray.splice(removeIndex, 1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<pre><code>var listToDelete = ['abc', 'efg'];\n\nvar arrayOfObjects = [{id:'abc',name:'oh'}, // delete me\n                      {id:'efg',name:'em'}, // delete me\n                      {id:'hij',name:'ge'}] // all that should remain\n</code></pre>\n\n<p>How do I remove an object from the array by matching object property?</p>\n\n<p><em>Only native JavaScript please.</em></p>\n\n<p>I am having trouble using splice because length diminishes with each deletion.\nUsing clone and splicing on orignal index still leaves you with the problem of diminishing length.</p>\n",
            "last_activity_date": 1413130926,
            "question_id": 16491758,
            "score": 11,
            "tags": [
                "javascript"
            ],
            "title": "remove objects from array by object property"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can do this with a signed java applet that has permission to run an automation script to issue the keystroke to go into fullscreen mode.  But, this is a total hack that wouldn't be very practical unless your users don't mind your site manipulating their machines.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><s><strong>No.</strong>  <a href=\"http://www.quirksmode.org/js/popup.html#t01\">Older versions of IE (&le;6)</a> allowed it, but this functionality is seen as a security problem, so no modern browser allows it.</s></p>\n\n<p>You can still <a href=\"http://jsfiddle.net/josh3736/FBrCJ/\">call</a> <code>window.open(url,'','fullscreen=yes')</code>, which gets you 90% of the way there, but has slightly different results:</p>\n\n<ul>\n<li>IE opens a window with only titlebar and URL bar.  The window is sized to fill the entire screen, and <em>covers the Windows taskbar</em>.</li>\n<li>Mozilla also opens a window with only titlebar and URL bar.  However, the new window inherits the opening window's dimensions. If the opening window is maximized, the new window is opened maximized.  (The taskbar is not covered.)</li>\n<li>Chrome also opens a window with only titlebar and URL bar.  The new window inherits the opening window's dimensions, but it is <em>never opened maximized</em> (even if the opening window is maximized).</li>\n</ul>\n\n<p><s>This is as close as you'll get with JavaScript.</s>  Your other option would be to build something in Flash <em>(ugh!)</em>, or just have your \"fullscreen\" button pop up a lightbox that says \"Press F11 to go fullscreen\", and hide the lightbox on <code>window.resize</code> or clicking a cancel button in the lightbox.</p>\n\n<hr>\n\n<p><strong>Edit:</strong> A proper <a href=\"http://johndyer.name/native-fullscreen-javascript-api-plus-jquery-plugin/\">fullscreen API</a>  (first <a href=\"https://wiki.mozilla.org/Gecko:FullScreenAPI\">proposed by Mozilla</a> and later released as a <a href=\"http://dvcs.w3.org/hg/fullscreen/raw-file/tip/Overview.html\">W3C proposal</a>)  has been implemented by Webkit (Safari 5.1+/Chrome 15+) and Firefox (10+).  <a href=\"http://johndyer.name/native-fullscreen-javascript-api-plus-jquery-plugin/\">A brief history and usage examples here.</a>  Note that IE10 will allegedly <strong>not</strong> support the API.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Full screen support through java script is not implemented for Chrome or Firefox. However you can manage to have it for MSIE. But that is also not F11 kind of functionality. </p>\n\n<p>Even <code>chrome.exe -kiosk</code> does not open page in fullscreen mode.</p>\n\n<p>Reason is that it is not recommended to force user and open your application in fullscreen mode. If this is not all the popups from different websites will open in fullscreen mode and you will endup closing all those. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is now possible in the latest versions of Chrome, Firefox and IE(11).</p>\n\n<p>Following the pointers by Zuul on <a href=\"http://stackoverflow.com/questions/3900701/onclick-go-full-screen\">this thread</a>, I edited his code to include IE11 and the option to full screen any element of choice on your page.</p>\n\n<p>JS:</p>\n\n<pre><code>function toggleFullScreen(elem) {\n    // ## The below if statement seems to work better ## if ((document.fullScreenElement &amp;&amp; document.fullScreenElement !== null) || (document.msfullscreenElement &amp;&amp; document.msfullscreenElement !== null) || (!document.mozFullScreen &amp;&amp; !document.webkitIsFullScreen)) {\n    if ((document.fullScreenElement !== undefined &amp;&amp; document.fullScreenElement === null) || (document.msFullscreenElement !== undefined &amp;&amp; document.msFullscreenElement === null) || (document.mozFullScreen !== undefined &amp;&amp; !document.mozFullScreen) || (document.webkitIsFullScreen !== undefined &amp;&amp; !document.webkitIsFullScreen)) {\n        if (elem.requestFullScreen) {\n            elem.requestFullScreen();\n        } else if (elem.mozRequestFullScreen) {\n            elem.mozRequestFullScreen();\n        } else if (elem.webkitRequestFullScreen) {\n            elem.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);\n        } else if (elem.msRequestFullscreen) {\n            elem.msRequestFullscreen();\n        }\n    } else {\n        if (document.cancelFullScreen) {\n            document.cancelFullScreen();\n        } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n        } else if (document.webkitCancelFullScreen) {\n            document.webkitCancelFullScreen();\n        } else if (document.msExitFullscreen) {\n            document.msExitFullscreen();\n        }\n    }\n}\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;input type=\"button\" value=\"click to toggle fullscreen\" onclick=\"toggleFullScreen(document.body)\"&gt;\n</code></pre>\n\n<p>Where \"document.body\" is any element you so wish.</p>\n\n<p>Also note that trying to run these full screen commands from the console do not appear to work on Chrome or IE. I did have success with Firebug in Firefox though.</p>\n\n<p>One other thing to note is that these \"full screen\" commands don't have a vertical scrollbar, you need to specify this within the CSS:</p>\n\n<pre><code>*:fullscreen\n*:-ms-fullscreen,\n*:-webkit-full-screen,\n*:-moz-full-screen {\n   overflow: auto !important;\n}\n</code></pre>\n\n<p>The \"!important\" seems to be necessary for IE to render it</p>\n",
                    "is_accepted": true,
                    "score": 4
                }
            ],
            "body": "<p>There are several questions about this, <em>some say it's not possible, some say it IS</em> possible in IE such as <a href=\"http://stackoverflow.com/questions/464332/internet-explorer-full-screen-mode\">Internet Explorer full screen mode?</a> and I'm wondering a universal solution and an answer for this.</p>\n\n<p>I'm building a photo gallery webpage, and the gallery really makes out a difference when viewed fullscreen (as the title says, I am talking about <em>true</em> fullscreen, not with bars and window chrome etc), and I would like to place a button for fullscreen. (no, I won't be going forcefully FS without user's intention, I hate that kind of \"functionality\" too) It IS possible in Flash when initiated through a user-initiated action such as button click, and I was wondering if such a thing is available for Javascript too. Logically, it should have a mechanism similar to Flash/SL user initiated fullscreen mode. If there's no \"universal\" functionality that will work for all, I'm ok (better than nothing) for partial functionality (I mean <em>supporting SOME of the browsers</em> by that, NOT <em>setting window width/height</em> etc. don't come with answer telling to set window width/height, I know how to do it, I'm NOT looking for it) too.</p>\n",
            "last_activity_date": 1415379934,
            "question_id": 7179535,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "fullscreen"
            ],
            "title": "Set window to fullscreen (REAL fullscreen; F11 functionality) by javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>First, you probably don't want the script to run in iFrames.<br>\nYou can block that by putting this code just after the metadata block:</p>\n\n<pre><code>if (window.top != window.self)  //don't run on frames or iframes\n{\n    //Optional: GM_log ('In frame');\n    return;\n}\n</code></pre>\n\n<p><br>\nSecond, you can wait and fire your GM code, once, on page load.   Wrap everything in a <code>main()</code> and call it on the <code>load</code> event, like so:</p>\n\n<pre><code>window.addEventListener (\"load\", LocalMain, false);\n\nfunction LocalMain ()\n{\n    // Your code goes here.\n}\n</code></pre>\n\n<p><br></p>\n\n<p>Third, you can exclude sites or pages by adding <code>// @exclude</code>  directives to the metadata block.</p>\n\n<p>Overall, it's best to avoid universally included GM scripts, if possible.</p>\n\n<p>Other methods might set flags or reload the page with URL parameters.  These get tricky so save them as a last resort.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>You can for example store the given location in a persistent variable.\nOn page load you have to check, if the current location is already stored in this variable.</p>\n\n<p>If not, you set the variable and run your function, if yes do nothing.</p>\n\n<p>How to store persistent variables: <a href=\"http://wiki.greasespot.net/GM_setValue\" rel=\"nofollow\">GM_setValue</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>If you create a greasemonkey script with @include * and go to a site like youtube, it runs the script 20+ times every time you refresh. This is on firefox, not sure about chrome. Is there a way to prevent this?</p>\n",
            "last_activity_date": 1289873355,
            "question_id": 4190442,
            "score": 11,
            "tags": [
                "javascript",
                "greasemonkey"
            ],
            "title": "Run greasemonkey script only once per page load?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Well, if you are sorting the following list, it contains only strings:</p>\n\n<pre><code>var n = [\"10\", \"5\", \"40\", \"25\", \"100\", \"1\"];\n</code></pre>\n\n<p>So I would expect <em>any</em> language would compare them as strings, thus resulting in a sort order of:</p>\n\n<pre><code>var n = [\"1\", \"10\", \"100\", \"25\", \"40\", \"5\"];\n</code></pre>\n\n<p>Which necessitates your code to use a custom sort (as you have done) to cast the strings back to integers for the purposes of sorting.</p>\n\n<p><b>Edit</b></p>\n\n<p>As Pointy mentioned, by default the <a href=\"http://www.w3schools.com/jsref/jsref_sort.asp\">JavaScript sort() method</a> sorts elements alphabetically, including numbers:</p>\n\n<blockquote>\n  <p>By default, the sort() method sorts the elements alphabetically and ascending. However, numbers will not be sorted correctly (40 comes before 5). To sort numbers, you must add a function that compare numbers.</p>\n</blockquote>\n\n<p>Simply amazing... so a custom sort is required even for an array of integers.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>And what if your n is defined as:</p>\n\n<pre><code>var n = [10, 5, 40, 25, 100, 1]; \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The problem lies with the use of strings to represent numbers, which the sort function unfortunately does as default. Strings are sorted alphabetically. The comparison function in your code just forces the strings to be evaluated as numbers.</p>\n\n<p>I'd consider it very bad API design that the sort function defaults to treating the elements as strings, but it may be necessary given JavaScript's loose type system..</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Javascript's sort sorts by default lexicographical, alphabetical. Thus as I understand it every element is treated as a string. The internal sorting algorithm is most probably quicksort or mergesort. To be able to use quicksort you need to be able to relate elements to each other, is a bigger than b? In the string case this ordering is already implemented.</p>\n\n<p>Since you might want to sort your custom datatypes etc. you can provide a functional defining how to order two elements.</p>\n\n<p>From your example your functional determines the order of two numbers a and b. Javascript sort then uses your function telling sort how to order the elements.</p>\n\n<p>Turns out that mergesort is used by Mozilla, look at: <a href=\"http://stackoverflow.com/questions/234683/javascript-array-sort-implementation\">http://stackoverflow.com/questions/234683/javascript-array-sort-implementation</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The function <code>sort</code> will sort your array in an <strong><a href=\"http://www.itl.nist.gov/div897/sqg/dads/HTML/lexicgrphcl.html\" rel=\"nofollow\">alphabetical sort order</a></strong>, even if it consists of integers; that's the reason why your array is sorted like that by calling <code>sort</code> without a parameter.</p>\n\n<p><code>sortOrder</code> is a comparison function that is used to define a new sort order for the array; this function will return</p>\n\n<ul>\n<li><code>0</code>, if <code>a</code> and <code>b</code> are of the same value</li>\n<li>a value <code>&gt; 0</code>, if <code>a</code> has a bigger value than <code>b</code></li>\n<li>a value <code>&lt; 0</code>, if <code>a</code> has a smaller value than <code>b</code></li>\n</ul>\n\n<p>In JavaScript, <code>\"1\" - \"2\"</code> will return <code>-1</code>, which is a number, and not a string anymore; by using the comparison function <code>sortOrder</code> on your array consisting of <em>numbers wrapped in strings</em>, you're ordering the array in a <strong>numerical sort order</strong>, thus resulting in <code>1,5,10,25,40,100</code>, and not in <code>1,10,100,25,40,5</code></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can delegate the sorting to your own sort function:</p>\n\n<pre><code>function sortnum(a,b) {\n return parseInt(a,10)-parseInt(b,10);\n}\nvar n = [\"10\", \"5\", \"40\", \"25\", \"100\", \"1\"];\nalert(n.sort(sortnum)); //=&gt;[\"1\", \"5\", \"10\", \"25\", \"40\", \"100\"]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>To answer your question on how the sorting function works, I will explain it in detail. As has been said in most of the answers here, calling only <code>sort()</code> on an array will sort your array using strings. Converting your integers to strings as well. Blech!</p>\n\n<p>If you think of your items as characters instead of numbers it makes sense that it would be sorted that way. A good way to see this is to assign letters to your numbers.</p>\n\n<pre><code>//0 = a\n//1 = b\n//2 = c\n//4 = e\n//5 = f\n//These two arrays are treated the same because they're composed of strings.\nvar nums  = [\"10\", \"5\", \"40\", \"25\", \"100\", \"1\"];\nvar chars = [\"ba\", \"f\", \"ea\", \"cf\", \"baa\", \"b\"];\n\n//Here we can see that sort() correctly sorted these strings. Looking at the\n//alphabetical characters we see that they are in the correct order. Looking\n//at our numbers in the same light, it makes sense that they are sorted\n//this way as well. After all, we did pass them as strings to our array.\nchars.sort(); //[\"b\", \"ba\", \"baa\", \"cf\", \"ea\", \"f\"]\nnums.sort();  //[\"1\", \"10\", \"100\", \"25\", \"40\", \"5\"]\n\n//The bad part of sort() comes in when our array is actually made up of numbers.\nvar nums = [10, 5, 40, 25, 100, 1];\nnums.sort(); //[1, 10, 100, 25, 40, 5]\n\n//As a result of the default sorting function converting numbers to strings \n//before sorting, we get an unwanted result. We can fix this by passing in our \n//own function as a parameter to sort().\n</code></pre>\n\n<p>You can control how to sort the array by passing your own function as a parameter to the <code>sort()</code> function. This is nice, but unless you know how the <code>sort()</code> function works, it really won't do you any good. </p>\n\n<p><code>sort()</code> will call your function multiple times to re-arrange the array. Depending on what is returned from your function tells <code>sort()</code> what to do with the items in the array. If a negative number or 0 is returned, no re-arranging happens. If a positive number is returned, the two items switch place. <code>sort()</code> keeps track of which numbers it has already tested, so it doesn't end up testing numbers again later after it has switched the items around. If <code>sort()</code> re-arranges items, it will move back one position and see if it has tested these two items before. If it hasn't it will test them. If it has, it will continue on without running your function on them.</p>\n\n<h1>Sorting Numbers</h1>\n\n<p>Let's take a simple example and I will walk you through it:</p>\n\n<pre><code>var arr = [50, 90, 1, 10, 2];\n\narr = arr.sort(function(current, next){\n    //My comments get generated from here\n    return current - next;\n});\n\n//1 : current = 50, next = 90\n//  : current - next (50 - 90 = -40)\n//  : Negative number means no re-arranging\n//  : Array now looks like [50, 90, 1, 10, 2]\n//\n//2 : current = 90, next = 1\n//  : current - next (90 - 1 = 89)\n//  : Positive number means sort() will switch these positions in the array\n//  : Array now looks like [50, 1, 90, 10, 2]\n//\n//If sort() didn't backtrack, the next check would be 90 and 10, switch those \n//positions, check 90 and 2, and switch again. Making the final array\n//[50, 1, 10, 2, 90], not sorted. But lucky for us, sort() does backtrack.\n//\n//3 : current = 50, next = 1\n//  : current - next (50 - 1 = 49)\n//  : Positive number means sort() will switch these positions in the array\n//  : Array now looks like [1, 50, 90, 10, 2]\n//\n//If sort() wasn't smart, it would now check 50 and 90 again. What a waste! \n//But lucky for us again, sort() is smart and knows it already made this \n//check and will continue on.\n//\n//4 : current = 90, next = 10\n//  : current - next (90 - 10 = 80)\n//  : Positive number means sort() will switch these positions in the array\n//  : Array now looks like [1, 50, 10, 90, 2]\n//\n//sort() backtracks one position and sees that it has not checked 50 and 10\n//\n//5 : current = 50, next = 10\n//  : current - next (50 - 10 = 40)\n//  : Positive number means sort() will switch these positions in the array\n//  : Array now looks like [1, 10, 50, 90, 2]\n//\n//sort() backtracks one position and sees that it has not checked 1 and 10\n//\n//6 : current = 1, next = 10\n//  : current - next (1 - 10 = -9)\n//  : Negative number means no re-arranging\n//  : Array now looks like [1, 10, 50, 90, 2]\n//\n//sort() remembers that it already checked 10 and 50 so it skips ahead\n//sort() remembers that it already checked 50 and 90 so it skips ahead\n//\n//7 : current = 90, next = 2\n//  : current - next (90 - 2 = 88)\n//  : Positive number means sort() will switch these positions in the array\n//  : Array now looks like [1, 10, 50, 2, 90]\n//\n//sort() backtracks one position and sees that it has not checked 50 and 2\n//\n//8 : current = 50, next = 2\n//  : current - next (50 - 2 = 48)\n//  : Positive number means sort() will switch these positions in the array\n//  : Array now looks like [1, 10, 2, 50, 90]\n//\n//sort() backtracks one position and sees that it has not checked 10 and 2\n//\n//9 : current = 10, next = 2\n//  : current - next (10 - 2 = 8)\n//  : Positive number means sort() will switch these positions in the array\n//  : Array now looks like [1, 2, 10, 50, 90]\n//\n//sort() backtracks one position and sees that it has not checked 1 and 2\n//\n//10: current = 1, next = 2\n//  : current - next (1 - 2 = -1)\n//  : Negative number means no re-arranging\n//  : Array now looks like [1, 2, 10, 50, 90]\n//\n//sort() remembers that it already checked 2 and 10 so it skips ahead\n//sort() remembers that it already checked 10 and 50 so it skips ahead\n//sort() remembers that it already checked 50 and 90 so it skips ahead\n//sort() has no more items to check so it returns the final array\n//which is [1, 2, 10, 50, 90]\n</code></pre>\n\n<p>If you wanted the array to be ordered in descending order <code>[90, 50, 10, 2, 1]</code> you can just change the return statement from <code>return current - next;</code> to <code>return next - current;</code> like so:</p>\n\n<pre><code>var arr = [50, 90, 1, 10, 2];\n\narr = arr.sort(function(current, next){\n    //My comments get generated from here\n    return next - current;\n});\n\n//1 : current = 50, next = 90\n//  : next - current (90 - 50 = 40)\n//  : Positive number means sort() will switch these positions in the array\n//  : Array now looks like [90, 50, 1, 10, 2]\n//\n//2 : current = 50, next = 1\n//  : next - current (1 - 50 = -49)\n//  : Negative number means no re-arranging\n//  : Array now looks like [90, 50, 1, 10, 2]\n//\n//etc.\n</code></pre>\n\n<p>It does not matter if your array is composed of \"string numbers\" <code>\"5\"</code> or just numbers <code>5</code> when using your own function to sort numbers. Because when JavaScript is doing math, it treats \"string numbers\" as numbers. i.e. <code>\"5\" - \"3\" = 2</code></p>\n\n<h1>Sorting Strings</h1>\n\n<p>When you sort strings, you can compare them using the <code>&gt;</code> and <code>&lt;</code> (greater-than and less-than) operators. The greater-than operator sorts the string by ascending order (A-Z, 1-9), and the less-than operator sorts by descending order (Z-A, 9-1). Different browsers use different sorting algorithms so when sorting by strings you have to make sure you are returning either 1 or -1, not true or false.</p>\n\n<p>For example, this works in Chrome and FF, but not IE:</p>\n\n<pre><code>var arr = ['banana', 'orange', 'apple', 'grape'];\n\narr = arr.sort(function(current, next){\n    return current &gt; next;\n});\n</code></pre>\n\n<p>The way to make sure your sorting algorithm works in every browser, use the ternary operator.</p>\n\n<pre><code>var arr = ['banana', 'orange', 'apple', 'grape'];\n\narr = arr.sort(function(current, next){\n    return current &gt; next? 1: -1;\n});\n</code></pre>\n\n<p>When changing the way you're sorting (by ascending or descending order), in addition to changing the operators, you could keep the same operator and switch the <code>current</code> and <code>next</code> variables as we did when sorting numbers. Or since we are using the ternary operator, you could switch the <code>1</code> and <code>-1</code>.</p>\n\n<h1>Sorting Objects</h1>\n\n<p>Here is a neat trick that I thought I'd add in here. You can sort objects if you add them to an array and use their key to compare. Here is an example.</p>\n\n<pre><code>var arr = [\n    {id: 2, name: 'Paul'},\n    {id: 1, name: 'Pete'}\n];\n\n//sort numerically\narr = arr.sort(function(current, next){\n    return current.id - next.id;\n});\n//Array now looks like [{id: 1, name: 'Pete'}, {id: 2, name: 'Paul'}]\n\n//sort alphabetically\narr = arr.sort(function(current, next){\n    return current.name &gt; next.name? 1: -1;\n});\n//Array now looks like [{id: 2, name: 'Paul'}, {id: 1, name: 'Pete'}]\n</code></pre>\n\n<h1>Recap</h1>\n\n<p>To sort <strong>numbers</strong> <br/>\nin <strong>ascending order (1, 2, 3...)</strong>: <code>function(a, b){return a - b;}</code> <br/>\nin <strong>descending order (9, 8, 7...)</strong>: <code>function(a, b){return b - a;}</code></p>\n\n<p>To sort <strong>strings</strong> <br/>\nin <strong>ascending order (A, B, C...)</strong>: <code>function(a, b){return a &gt; b? 1: -1;}</code> <br/>\nin <strong>descending order (Z, Y, X...)</strong>: <code>function(a, b){return b &gt; a? 1: -1;}</code></p>\n\n<p>To sort <strong>objects</strong> add them to an array, <br/>\nthen sort by key: <code>function(a, b){return a.key - b.key;}</code></p>\n",
                    "is_accepted": false,
                    "score": 18
                }
            ],
            "body": "<p>Recently when I was working with JavaScript \"sort()\" function, I found in one of the <a href=\"http://www.w3schools.com/jsref/jsref_sort.asp\">tutorials</a> that this function does not sort the numbers properly. Instead to sort numbers, a function must be added that compares numbers, like the following code:-</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction sortNumber(a,b)\n{\n    return a - b;\n}\n\nvar n = [\"10\", \"5\", \"40\", \"25\", \"100\", \"1\"];\ndocument.write(n.sort(sortNumber));\n&lt;/script&gt;\n</code></pre>\n\n<p>The output then comes as:-</p>\n\n<pre><code>1,5,10,25,40,100\n</code></pre>\n\n<p>Now what I didn't understand is that why is this occurring &amp; can anybody please tell in details as to what type of algorithm is being used in this \"<strong>sort()</strong>\" function? This is because for any other language, I didn't find this problem where the function didn't sort the <em>numbers</em> correctly.  </p>\n\n<p>Any help is greatly appreciated.</p>\n",
            "last_activity_date": 1351779499,
            "question_id": 3423394,
            "score": 11,
            "tags": [
                "javascript",
                "algorithm",
                "sorting"
            ],
            "title": "Algorithm of JavaScript &quot;sort()&quot; Function"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can use <a href=\"http://api.jquery.com/keydown/\"><code>keydown()</code></a> and <a href=\"http://api.jquery.com/keyup/\"><code>keyup()</code></a> to track if the space bar is pressed or not and look at that state in your <a href=\"http://api.jquery.com/mousemove/\"><code>mousemove()</code></a> event handler. For example:</p>\n\n<pre><code>var space = false;\n$(function() {\n  $(document).keyup(function(evt) {\n    if (evt.keyCode == 32) {\n      space = false;\n    }\n  }).keydown(function(evt) {\n    if (evt.keyCode == 32) {\n      space = true;\n    }\n  });\n}\n</code></pre>\n\n<p>And then your <code>mousemove()</code> handler can see if it's pressed or not.</p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>you will probably have to be watching for the keydown event, check to see that it's the spacebar, set a variable saying it's down, unset it when the keyup event is seen.</p>\n\n<p>so, then you would look for mouse movements when that variable was set indicating the spacebar was pressed.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This is my solution:</p>\n\n<pre><code>var allowed = true;\n$(document).ready(\nfunction () {\n    $(document).bind('keydown', 'space', function () {\n        if (!allowed) return;\n        allowed = false;\n        $('#viewport').\n            dragscrollable();\n    });\n    $(document).bind('keyup', 'space', function () {\n        allowed = true;\n        $('#base').off('mousedown');\n        return false;\n    });\n\n});\n</code></pre>\n\n<p>Works with jQuery and the Dragscrollable Plugin.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is there a way to check if the space bar and at the same time track what direction the mouse is moving and how far etc.</p>\n\n<p>Point of this is that I want to replicate how Photoshop scrolls when you hold the space bar, left mouse button and you move the mouse, but without having to hold down the left mouse button.</p>\n",
            "last_activity_date": 1348840538,
            "question_id": 2249203,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "javascript-events"
            ],
            "title": "Check if the spacebar is being pressed and the mouse is moving at the same time with jQuery?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>A function that should help you is the eval() function.  This function will evaluate any string you pass to it as Javascript.</p>\n\n<p>Also, it's possible to parse XML in Javascript.  Just google \"javascript xml parser\".</p>\n\n<p>Combine these two ideas, and you'll be on your way.</p>\n\n<p><hr /></p>\n\n<p>If you simply want to put javascript in the XML file:</p>\n\n<p>&lt;xml&gt;\n&lt;js script=\"1\"&gt;\nhere is some javascript;\nhere is more javascript;\n&lt;/js&gt;\n&lt;js script=\"2\"&gt;\nhere is even more javascript;\njere is even more javascript;\n&lt;/js&gt;\n&lt;/xml&gt;</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>If I get you, you want an XML document to run javascript when viewed in a browser?</p>\n\n<p>This is not part of the XML standard, and as such will not be suppoted until it is (I assume this will never be supported because XML is not intended for display, but data). If you are talking about XHTML then this is a different matter.</p>\n\n<p>-- </p>\n\n<p>Edit: just to clarify my answer. </p>\n\n<p>XML was never intended to be a display markup like HTML, thats why XHTML was developed (HTML that conforms to XML standards). Browsers have been made to interpret XHTML in a certain way, but XML is simply raw data. </p>\n\n<p>If you want your XML to run additions such as JavaScript you will want to consider using XSLT to transform your XML into XHTML and therefore take advantage of a browsers capabilities.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Embed the XML and the Javascript in an XHTML document and then use the vast and well-documented capabilities of dynamic HTML.  </p>\n\n<p>You'll get something up and running much faster than you will by reasoning that since some browsers implement weak and poorly-documented CSS styling of XML documents, therefore they must support the execution of Javascript embedded in XML, as though there were any connection whatsoever between those two ideas.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Add a script stating XHTML namespace, it will run just fine.</p>\n\n<pre><code>&lt;xhtml:script xmlns:xhtml=\"http://www.w3.org/1999/xhtml\"\n                src=\"file.js\"\n                type=\"application/javascript\"/&gt;\n</code></pre>\n\n<p>See also\n<a href=\"http://www.ibm.com/developerworks/xml/library/x-ffox3/\">http://www.ibm.com/developerworks/xml/library/x-ffox3/</a></p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<pre><code>&lt;script xmlns=\"http://www.w3.org/1999/xhtml\"&gt;&lt;![CDATA[\nalert('Hello');\n]]&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Or for external javascript:</p>\n\n<pre><code>&lt;script xmlns=\"http://www.w3.org/1999/xhtml\" src=\"external.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Works in Firefox and Opera.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I did this:</p>\n\n<p><strong>XSLT:</strong> </p>\n\n<pre><code>&lt;xsl:value-of select=\"/label[@id='MyScript']/text()\" disable-output-escaping=\"yes\"/&gt;\n</code></pre>\n\n<p><strong>XML:</strong></p>\n\n<pre><code>&lt;label id=\"MyScript\"&gt;&lt;![CDATA[\n&lt;script type=\"text/javascript\"&gt;\nalert(\"Hola Mundo\");\n&lt;/script&gt;\n]]&gt;&lt;/label&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>The task seems to be pretty easy: how to include a Javascript file in xml-document so that at least Opera and Firefox could actually parse it and execute the code?</p>\n",
            "last_activity_date": 1379451536,
            "question_id": 384639,
            "score": 11,
            "tags": [
                "javascript",
                "xml"
            ],
            "title": "How to include Javascript in xml-document?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I'm currently at work so didnt had much time to work somethnig out. but created a little thing of 2 projects combined.</p>\n\n<p>added the horizental scrolling to page 3.</p>\n\n<p><a href=\"http://jsfiddle.net/BL33k/\" rel=\"nofollow\">http://jsfiddle.net/BL33k/</a></p>\n\n<p>used some dutch in je javascript so:</p>\n\n<pre><code>var slideAantal = slides.length; //means slidetotal\nvar slideBreedte = screen.width; //means slidewidth\nvar beeldHoogte  = screen.height; //means slideheight\nvar slideHuidig  = 0; //means currentslide\n</code></pre>\n\n<p>Code is very dirty and there might be a lot of unessecery things but dont have time to go trough that now. Hope it helps you tho.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You need to apply inline css for body tag .</p>\n\n<pre><code>body{\n    overflow-x:scroll;\n    overflow-y:scroll;\n}\n</code></pre>\n\n<p>for y scroll, see this <a href=\"http://sigmamobility.com/examples/appexamples.jsp\" rel=\"nofollow\">http://sigmamobility.com/examples/appexamples.jsp</a>.\nnote that applying above wont give intended results unless your controls are really overflow window width / height.</p>\n\n<p>You can test your code through Sigma Mobility which enables creating mobile apps and easily inject inline css /js code along with real-time preview.  </p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<h1>Update</h1>\n\n<blockquote>\n  <p>I have made some major modification, which give more control over touch events. You can now set minimum/maximum values of touch <em>duration</em>, <em>distance</em>, and <em>threshold</em> for both X and Y axis.</p>\n  \n  <p>Moreover, images now are <strong>preloaded</strong> for smoother transition between images.</p>\n</blockquote>\n\n<hr>\n\n<p>I have made this rather <em>complicated</em> code based on touch events <code>touchstart</code> and <code>touchend</code>, horizontally and vertically. The code catches touch events and then interpret them into swipe <em>up</em>, <em>right</em>, <em>down</em> and <em>left</em>.</p>\n\n<p>Images are exchanged with <code>.animate()</code> according to swipe's direction. Swipe <em>up</em> and <em>left</em>, load next images in <em>array</em>; <em>down</em> and <em>right</em> load previous ones.</p>\n\n<p><strike>It is somehow lengthy, and have too much room of enhancement. For instance, you can calculate time elapsed between both events <em>touchstart</em> and <em>touchend</em> to ensure that the touch was sufficient enough to trigger custom swipes.</strike></p>\n\n<p>I'll go through code's main parts for more explanation.</p>\n\n<h3>HTML</h3>\n\n<pre><code>&lt;div class=\"wrapper\"&gt;\n  &lt;div class=\"inner\"&gt;\n    &lt;!-- images go here --&gt;\n   &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<hr>\n\n<h3>CSS</h3>\n\n<ol>\n<li><p>Wrapper - <em>height</em> and <em>width</em> should be adjusted to your need:</p>\n\n<pre><code>.wrapper {\n  overflow: hidden;\n  position: relative;\n  height: 200px;\n  width: 400px;\n  margin: 0 auto;\n}\n</code></pre></li>\n<li><p>Inner wrapper - To append images to:</p>\n\n<pre><code>.inner {\n  height: 200px;\n  width: auto;\n  position: absolute;\n  left: 0;\n  white-space: nowrap;\n}\n</code></pre></li>\n<li><p>Transition wrappers - Used for images transition <em>in</em> and <em>out</em>:</p>\n\n<pre><code>.holder, .in, .hidden {\n  position: absolute;\n}\n</code></pre></li>\n<li><p>Hide preloaded images:</p>\n\n<pre><code>.hidden {\n  display: none;\n}\n</code></pre></li>\n</ol>\n\n<hr>\n\n<h3>JS</h3>\n\n<ol>\n<li><p>Variables and defaults:</p>\n\n<pre><code>var total = images.length - 1, /* images total number */\n    current = 0,               /* image's index */\n    startX = '',               /* touchstart X coordinate */ \n    startY = '',               /* touchstart Y coordinate */\n    endX = '',                 /* touchend X coordinate */\n    endY = '';                 /* touchend Y coordinate */\n    swipeDuration = 1000,      /* max touch duration */\n    swipeDistanceX = 50,       /* X-axis min touch distance */\n    swipeDistanceY = 50,       /* Y-axis min touch distance */\n    thresholdX = 30,           /* X-axis max touch displacement */\n    thresholdY = 30;           /* Y-axis max touch displacement */\n</code></pre></li>\n<li><p>Preload images:</p>\n\n<p>Wrap each one in <code>holder</code> and then append them to <code>inner</code> div, on <code>pageinit</code> event or any other <a href=\"http://api.jquerymobile.com/category/events/\">jQM page events</a>.</p>\n\n<pre><code>$(document).on(\"pageinit\", \"#gallery\", function () {\n    $.each(images, function (i, src) {\n        $(\"&lt;div class='holder hidden'&gt;&lt;img src=\" + src + \" /&gt;&lt;/div&gt;\").appendTo(\".inner\");\n    });\n    $(\".inner .holder:first-child\").toggleClass(\"visible hidden\");\n});\n</code></pre></li>\n<li><p>Touch events interpretation - bind Touch events to <code>inner</code> div:</p>\n\n<p>Touch <em>duration</em> and <em>distance</em> are added to comparison.</p>\n\n<pre><code>$(document).on(\"touchstart\", \".inner\", function (e, ui) {\n    startX = e.originalEvent.touches[0].pageX;\n    startY = e.originalEvent.touches[0].pageY;\n    start = new Date().getTime(); /* touch start */\n}).on(\"touchmove\", \".inner\", function (e, ui) {\n\n    /* prevent page from scrolling */\n    e.preventDefault();\n\n}).on(\"touchend\", \".inner\", function (e, ui) {\n    endX = e.originalEvent.changedTouches[0].pageX;\n    endY = e.originalEvent.changedTouches[0].pageY;\n    end = new Date().getTime(); /* touch end */\n    if ((end - start) &lt; swipeDuration) {\n      if (startX &gt; endX &amp;&amp; Math.abs(startY - endY) &lt;= thresholdY &amp;&amp; Math.abs(startX - endX) &gt;= swipeDistanceX) {\n        showImg(current, \"left\");\n      } else if (startX &lt; endX &amp;&amp; Math.abs(startY - endY) &lt;= thresholdY &amp;&amp; Math.abs(startX - endX) &gt;= swipeDistanceX) {\n         showImg(current, \"right\");\n      } else if (startY &gt; endY &amp;&amp; Math.abs(startX - endX) &lt;= thresholdX &amp;&amp; Math.abs(startY - endY) &gt;= swipeDistanceY) {\n        showImg(current, \"up\");\n      } else if (startY &lt; endY &amp;&amp; Math.abs(startX - endX) &lt;= thresholdX &amp;&amp; Math.abs(startY - endY) &gt;= swipeDistanceY) {\n        showImg(current, \"down\");\n      }\n    }\n});\n</code></pre></li>\n<li><p>Transition <code>showImg(image index, swipe type)</code> function:</p>\n\n<p>Added <em>opacity</em> to animation.</p>\n\n<pre><code>function showImg(index, type) {\n    if (type == \"left\") {\n        current = index;\n        if (current &gt;= 0 &amp;&amp; current &lt; total) {\n            current++;\n            var distance = $(\".visible\").width();\n            $(\".inner .holder\").eq(current).css({\n                left: distance\n            }).toggleClass(\"in hidden\");\n\n            $(\".visible\").animate({\n                left: \"-\" + distance + \"px\",\n                opacity: 0\n            }, 600, function () {\n                $(this).toggleClass(\"visible hidden\").css({\n                    top: \"auto\",\n                    left: \"auto\"\n                });\n            });\n\n            $(\".in\").animate({\n                left: 0,\n                opacity: 1\n            }, 500, function () {\n                $(this).toggleClass(\"in visible\");\n            });\n        }\n    }\n\n    if (type == \"up\") {\n        current = index;\n        if (current &gt;= 0 &amp;&amp; current &lt; total) {\n            current++;\n            var distance = $(\".visible\").height();\n            $(\".inner .holder\").eq(current).css({\n                top: distance + \"px\"\n            }).toggleClass(\"in hidden\");\n\n            $(\".visible\").animate({\n                top: \"-\" + distance + \"px\",\n                opacity: 0\n            }, 600, function () {\n                $(this).toggleClass(\"visible hidden\").css({\n                    top: \"auto\",\n                    left: \"auto\"\n                });\n            });\n\n            $(\".in\").animate({\n                top: 0,\n                opacity: 1\n            }, 500, function () {\n                $(this).toggleClass(\"in visible\");\n            });\n        }\n    }\n\n    if (type == \"right\") {\n        current = index;\n        if (current &gt; 0 &amp;&amp; current &lt;= total) {\n            current--;\n            var distance = $(\".visible\").width();\n            $(\".inner .holder\").eq(current).css({\n                left: \"-\" + distance + \"px\"\n            }).toggleClass(\"in hidden\");\n\n            $(\".visible\").animate({\n                left: distance + \"px\",\n                opacity: 0\n            }, 600, function () {\n                $(this).toggleClass(\"visible hidden\").css({\n                    top: \"auto\",\n                    left: \"auto\"\n                });\n            });\n\n            $(\".in\").animate({\n                left: 0,\n                opacity: 1\n            }, 500, function () {\n                $(this).toggleClass(\"in visible\");\n            });\n        }\n    }\n\n    if (type == \"down\") {\n        current = index;\n        if (current &gt; 0 &amp;&amp; current &lt;= total) {\n            current--;\n            var distance = $(\".holder\").height();\n            $(\".inner .holder\").eq(current).css({\n                top: \"-\" + distance + \"px\"\n            }).toggleClass(\"in hidden\");\n\n            $(\".visible\").animate({\n                top: distance + \"px\",\n                opacity: 0\n            }, 600, function () {\n                $(this).toggleClass(\"visible hidden\").css({\n                    top: \"auto\",\n                    left: \"auto\"\n                });\n            });\n\n            $(\".in\").animate({\n                top: 0,\n                opacity: 1\n            }, 500, function () {\n                $(this).toggleClass(\"in visible\");\n            });\n        }\n    }\n}\n</code></pre></li>\n</ol>\n\n<hr>\n\n<blockquote>\n  <p><strong><a href=\"http://jsfiddle.net/Palestinian/QXLY2/\">Demo</a></strong> <sup>(1)</sup></p>\n</blockquote>\n\n<p><sup>(1) Tested on iPad 2 and iPhone 5 - v7.0.4</sup></p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>You can achieve this with simple CSS and some DOM manipulation <a href=\"http://jsfiddle.net/zTGS9/1/\" rel=\"nofollow\">http://jsfiddle.net/zTGS9/1/</a></p>\n\n<pre><code>&lt;html lang=\"en\"&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n    &lt;/head&gt;\n    &lt;style&gt;\n        body {\n            margin: 0;\n        }\n        div {\n            width: 500px;\n            overflow-x: hidden;\n        }\n        ul {\n            list-style: none;\n            width: 100%;\n            padding: 0;\n        }\n        li {\n            clear: both;\n            white-space: nowrap;\n            position: relative;\n            height: 200px;\n            width: 100%;\n            overflow-x: hidden;\n            padding: 0;\n        }\n        img {\n            -webkit-transition: all 0.25s ease-out;\n            -moz-transition: all 0.25s ease-out;\n            -o-transition: all 0.25s ease-out;\n            transition: all 0.25s ease-out;\n            position: absolute;\n            display: block;\n            top: 0;\n        }\n        img:nth-of-type(1) {\n            left: -700px;\n        }\n        img:nth-of-type(2) {\n            left: -300px;\n        }\n        img:nth-of-type(3) {\n            left: 100px;\n        }\n        img:nth-of-type(4) {\n            left: 500px;\n        }\n        img:nth-of-type(5) {\n            left: 900px;\n        }\n        img:nth-of-type(6) {\n            left: 1300px;\n        }\n\n    &lt;/style&gt;\n    &lt;body&gt;\n        &lt;div&gt;\n            &lt;ul&gt;\n                &lt;li&gt;\n                    &lt;img src=\"http://lorempixel.com/400/200/sports/image%201/\"/&gt;\n                    &lt;img src=\"http://lorempixel.com/400/200/nature/image%202/\"/&gt;\n                    &lt;img src=\"http://lorempixel.com/400/200/business/image%203/\"/&gt;\n                    &lt;img src=\"http://lorempixel.com/400/200/food/image%204/\"/&gt;\n                    &lt;img src=\"http://lorempixel.com/400/200/abstract/image%205/\"/&gt;\n                    &lt;img src=\"http://lorempixel.com/400/200/fashion/image%206/\"/&gt;\n                &lt;/li&gt;\n                &lt;li&gt;\n                    &lt;img src=\"http://lorempixel.com/400/200/sports/image%202/\"/&gt;\n                    &lt;img src=\"http://lorempixel.com/400/200/nature/image%203/\"/&gt;\n                    &lt;img src=\"http://lorempixel.com/400/200/business/image%204/\"/&gt;\n                    &lt;img src=\"http://lorempixel.com/400/200/food/image%205/\"/&gt;\n                    &lt;img src=\"http://lorempixel.com/400/200/abstract/image%206/\"/&gt;\n                    &lt;img src=\"http://lorempixel.com/400/200/fashion/image%207/\"/&gt;\n                &lt;/li&gt;\n                &lt;li&gt;\n                    &lt;img src=\"http://lorempixel.com/400/200/sports/image%204/\"/&gt;\n                    &lt;img src=\"http://lorempixel.com/400/200/nature/image%205/\"/&gt;\n                    &lt;img src=\"http://lorempixel.com/400/200/business/image%206/\"/&gt;\n                    &lt;img src=\"http://lorempixel.com/400/200/food/image%207/\"/&gt;\n                    &lt;img src=\"http://lorempixel.com/400/200/abstract/image%208/\"/&gt;\n                    &lt;img src=\"http://lorempixel.com/400/200/fashion/image%209/\"/&gt;\n                &lt;/li&gt;\n                &lt;li&gt;\n                    &lt;img src=\"http://lorempixel.com/400/200/sports/image%209/\"/&gt;\n                    &lt;img src=\"http://lorempixel.com/400/200/nature/image%208/\"/&gt;\n                    &lt;img src=\"http://lorempixel.com/400/200/business/image%207/\"/&gt;\n                    &lt;img src=\"http://lorempixel.com/400/200/food/image%206/\"/&gt;\n                    &lt;img src=\"http://lorempixel.com/400/200/abstract/image%205/\"/&gt;\n                    &lt;img src=\"http://lorempixel.com/400/200/fashion/image%204/\"/&gt;\n                &lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n    &lt;script&gt;\n       var _lis = document.getElementsByTagName('li');\nfor (var i = 0; i &lt; _lis.length; ++i) {\n    _lis[i].addEventListener('mousedown', function(e) {\n        if (e.clientX &lt; (this.offsetWidth &gt;&gt; 1)) {\n            this.appendChild(this.removeChild(this.firstElementChild));\n        } else {\n            this.insertBefore(this.lastElementChild, this.firstElementChild);\n           }\n    });\n}\n    &lt;/script&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>No time to implement touch events, but I hope you get the idea :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I want to implement horizontal scrolling with vertical sliding .Something like picture given below.<img src=\"http://i.stack.imgur.com/qeJym.png\" alt=\"enter image description here\"></p>\n\n<p>For doing the same I search and found this one <a href=\"http://developingwithstyle.blogspot.co.uk/2010/11/jquery-mobile-swipe-up-down-left-right.html\">http://developingwithstyle.blogspot.co.uk/2010/11/jquery-mobile-swipe-up-down-left-right.html</a>\nBut the code written in this blog does not make sense to me.</p>\n\n<p>I also downloaded the demo provided at <a href=\"http://www.idangero.us/sliders/swiper/\">http://www.idangero.us/sliders/swiper/</a> and try to modified according to my need. But could not able to do the same.\nIf any one have Idea or ling or demo project then please help me.\nRegards!</p>\n",
            "last_activity_date": 1392722020,
            "question_id": 20565126,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "html5",
                "jquery-mobile"
            ],
            "title": "Horizontal scrolling and vertical scrolling in JqueryMobile"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I've had good results with nodeValue.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>nodeValue</code> <del>should be</del> is cross-browser compatible. <a href=\"http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-F68D080\">It is part of the original DOM Level 2 specification.</a></p>\n\n<p>Also have a look at the <a href=\"http://www.quirksmode.org/dom/w3c_core.html#t22\">compatibility  table of  quirksmode.org</a> for that matter (that's what I always use to see which properties are supported by which browsers).</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>When you're 100% sure that it's a text node you can use any of them.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>For a given Text node in the DOM, one can use one of these properties to retrieve its text: </p>\n\n<ul>\n<li>textContent</li>\n<li>data</li>\n<li>nodeValue</li>\n<li><strike>wholeText</strike></li>\n</ul>\n\n<p>But which one to use? = which one is the most reliable and cross-browser...</p>\n\n<p>(If multiple properties are 100% reliable and cross-browser, then which one would be most appropriate?)</p>\n\n<hr>\n\n<p><strong>Update:</strong></p>\n\n<p>Actually, <code>wholeText</code> is not an option since it returns the concatenated text of the text node and all sibling text nodes...</p>\n",
            "last_activity_date": 1344877015,
            "question_id": 7690627,
            "score": 10,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "How to retrieve the text of a DOM Text node?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This RE will do:</p>\n\n<pre><code>/^(?:[0-9]+[a-z]|[a-z]+[0-9])[a-z0-9]*$/i\n</code></pre>\n\n<p>Explanation of RE:</p>\n\n<ul>\n<li>Match either of the following:\n<ol>\n<li>At least one number, then one letter <em>or</em></li>\n<li>At least one letter, then one number <em>plus</em></li>\n</ol></li>\n<li>Any remaining numbers and letters<br /><br /></li>\n<li><code>(?:...)</code> creates an unreferenced group</li>\n<li><code>/i</code> is the <em>ignore-case</em> flag, so that <code>a-z</code> == <code>a-zA-Z</code>.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Why not first apply the whole test, and then add individual tests for characters and numbers? Anyway, if you want to do it all in one regexp, use positive lookahead:</p>\n\n<pre><code>/^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>I can see that other responders have given you a complete solution.  Problem with regexes is that they can be difficult to maintain/understand.</p>\n\n<p>An easier solution would be to retain your existing regex, then create two new regexes to test for your \"at least one alphabetic\" and \"at least one numeric\".</p>\n\n<p>So, test for this :-</p>\n\n<pre><code>/^([a-zA-Z0-9]+)$/\n</code></pre>\n\n<p>Then this :-</p>\n\n<pre><code>/\\d/\n</code></pre>\n\n<p>Then this :-</p>\n\n<pre><code>/[A-Z]/i\n</code></pre>\n\n<p>If your string passes all three regexes, you have the answer you need.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Maybe a bit late, but this is my RE:</p>\n\n<p><code>/^(\\w*(\\d+[a-zA-Z]|[a-zA-Z]+\\d)\\w*)+$/</code></p>\n\n<p>Explanation:</p>\n\n<p><code>\\w*</code> -> 0 or more alphanumeric digits, at the beginning</p>\n\n<p><code>\\d+[a-zA-Z]|[a-zA-Z]+\\d</code> -> a digit + a letter OR a letter + a digit</p>\n\n<p><code>\\w*</code> -> 0 or more alphanumeric digits, again</p>\n\n<p>I hope it was understandable</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a regex </p>\n\n<blockquote>\n  <p>/^([a-zA-Z0-9]+)$/</p>\n</blockquote>\n\n<p>this just allows only alphanumerics but also if I insert only number(s) or only character(s) then also it accepts it. I want it to work like the field should accept only alphanumeric values but the value must contain at least both 1 character and 1 number.</p>\n",
            "last_activity_date": 1375821598,
            "question_id": 7684815,
            "score": 10,
            "tags": [
                "javascript",
                "regex",
                "validation"
            ],
            "title": "Regex for alpanumeric with at least 1 number and 1 character"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This isn't possible with the youtube embed code or the youtube javascript API as far as I know. You would have to write your own player to have this functionality.</p>\n\n<p>Doing some reading it looks like you can use the <em>chromeless</em> youtube player and it will resize itself to the width and height of its parent element.</p>\n\n<p>That means that if you use the chromeless player you can resize the div with javascript with the <code>play</code> event is triggered. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>No, this isn't possible, due to security concerns.</p>\n\n<p>The end user has to do something to initiate fullscreen.</p>\n\n<p>If you were to run an Adobe AIR application, you can automate the fullscreen activation w/o having end user do anything.  But then it would be a desktop application, not a webpage.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The closest choice is Chromeless Youtube.</p>\n\n<p>Find the example at:\n<a href=\"http://code.google.com/apis/youtube/chromeless_example_1.html\" rel=\"nofollow\">http://code.google.com/apis/youtube/chromeless_example_1.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Update November 2013</strong>: this is possible - <strong>real fullscreen, not full window</strong>, with the following technique. As @chrisg says, the YouTube JS API does not have a 'fullscreen by default' option. </p>\n\n<ul>\n<li>Create a custom play button</li>\n<li>Use YouTube JS API to play video</li>\n<li>Use HTML5 fullscreen API to make element fullscreen</li>\n</ul>\n\n<p>Here's the code.</p>\n\n<pre><code>var $ = document.querySelector.bind(document);\n\n// Once the user clicks a custom fullscreen button\n$(playButtonClass).addEventListener('click', function(){\n  // Play video and go fullscreen\n  player.playVideo();\n\n  var playerElement = $(playerWrapperClass);\n  var requestFullScreen = playerElement.requestFullScreen || playerElement.mozRequestFullScreen || playerElement.webkitRequestFullScreen;\n  if (requestFullScreen) {\n    requestFullScreen.bind(playerElement)();\n  }\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I have a Youtube video embeded on a webpage. </p>\n\n<p>Is it possible to have the video go full screen when the user presses play, using the <a href=\"http://code.google.com/apis/youtube/iframe_api_reference.html\">HTML5 iframe with Youtube's API</a>?</p>\n\n<p>Using the Chromeless player is not an option as the website is intended for iPads.</p>\n",
            "last_activity_date": 1405252639,
            "question_id": 7615380,
            "score": 10,
            "tags": [
                "javascript",
                "ipad",
                "html5",
                "youtube",
                "embed"
            ],
            "title": "Auto-Full Screen for a Youtube embed"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Check this if you use jQuery:\n<a href=\"http://docs.jquery.com/UI/Progressbar\">http://docs.jquery.com/UI/Progressbar</a></p>\n\n<p>You can just supply the value of the bar on every AJAX success.</p>\n\n<p>Otherwise, if you don't use JS Framework see this:\n<a href=\"http://www.redips.net/javascript/ajax-progress-bar/\">http://www.redips.net/javascript/ajax-progress-bar/</a> </p>\n\n<p>I don't have a way to test it, but it should go like this:</p>\n\n<pre><code>    var current = 0;\n    var total = 0;\n    var total_emails = &lt;?php $total_emails ;?&gt;; \n\n    $.ajax({\n\n      ...\n      success: function(data) {\n        current++; // Add one to the current number of processed emails\n        total = (current/total_emails)*100; // Get the percent of the processed emails\n        $(\"#progressbar\").progressbar(\"value\", total); // Add the new value to the progress bar\n      }\n    });\n</code></pre>\n\n<p>And make sure that you'll include jQuery along with jQueryUI, and then to add the #progressbar container somewhere on the page.</p>\n\n<p>I may have some errors though ...\nYou will probably have to round the total, especially if you have a lot of emails.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You could have an animated gif load via <code>.html()</code> into the results area until your ajax function returns back the results. Just an idea.</p>\n\n<p>Regarding the jquery ui progress bar, intermittently through your script you'll want to echo a numeric value representing the percent complete as an assigned javascript variable. For example...</p>\n\n<pre><code>// text example php script\nif (isset($_GET['twentyfive-percent'])) {\n    sleep(2); // I used sleep() to simulate processing\n    echo '$(\"#progressbar\").progressbar({ value: 25 });';\n    }\nif (isset($_GET['fifty-percent'])) {\n    sleep(2);\n    echo '$(\"#progressbar\").progressbar({ value: 50 });';\n    }\nif (isset($_GET['seventyfive-percent'])) {\n    sleep(2);\n    echo '$(\"#progressbar\").progressbar({ value: 75 });';\n    }\nif (isset($_GET['onehundred-percent'])) {\n    sleep(2);\n    echo '$(\"#progressbar\").progressbar({ value: 100 });';\n    }\n</code></pre>\n\n<p>And below is the function I used to get the progress bar to update its position. A little nuts, I know.</p>\n\n<pre><code>avail_elem = 0;\nfunction progress_bar() {\n    progress_status = $('#progressbar').progressbar('value');\n    progress_status_avail = ['twentyfive-percent', 'fifty-percent', 'seventyfive-percent', 'onehundred-percent'];\n    if (progress_status != '100') {\n        $.ajax({\n            url: 'test.php?' + progress_status_avail[avail_elem],\n            success: function(msg) {\n                eval(msg);\n                avail_elem++;\n                progress_bar();\n                }\n            });\n        }\n    }\n</code></pre>\n\n<p>If I had to guess, I bet there is a better way... But this is the way it worked for me when I tested it.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p><a href=\"http://stackoverflow.com/questions/399641/ajax-page-download-progress\">Use this answered question</a></p>\n\n<p>this is how i implemented it:</p>\n\n<pre><code>    var progressTrigger;\n    var progressElem = $('span#progressCounter');\n    var resultsElem = $('span#results');\n    var recordCount = 0;\n\n    $.ajax({\n        type: \"POST\",\n        url: \"Granules.asmx/Search\",\n        data: \"{wtk: '\" + wkt + \"', insideOnly: '\" + properties.insideOnly + \"', satellites: '\" + satIds + \"', startDate: '\" + strDateFrom + \"', endDate: '\" + strDateTo + \"'}\",\n        contentType: \"application/json; charset=utf-8\",\n        dataType: \"xml\",\n        success: function (xml) {\n            Map.LoadKML(xml);\n        },\n        beforeSend: function (thisXHR) {\n            progressElem.html(\" Waiting for response from server ...\");\n            ResultsWindow.LoadingStart();\n\n            progressTrigger = setInterval(function () {\n                if (thisXHR.readyState &gt; 2) {\n                    var totalBytes = thisXHR.getResponseHeader('Content-length');\n                    var dlBytes = thisXHR.responseText.length;\n                    (totalBytes &gt; 0) ? progressElem.html(\"Downloading: \" + Math.round((dlBytes / totalBytes) * 100) + \"%\") : \"Downloading: \" + progressElem.html(Math.round(dlBytes / 1024) + \"K\");\n                }\n            }, 200);\n\n\n        },\n        complete: function () {\n            clearInterval(progressTrigger);\n            progressElem.html(\"\");\n            resultsElem.html(recordCount);\n            ResultsWindow.LoadingEnd();\n        },\n        failure: function (msg) {\n            var message = new ControlPanel.Message(\"&lt;p&gt;There was an error on search.&lt;/p&gt;&lt;p&gt;\" + msg + \"&lt;/p&gt;\", ControlPanel.Message.Type.ERROR);\n        }\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have a page which uses jquery's ajax functions to send some messages.</p>\n\n<p>There could be upwards of 50k messages to send.</p>\n\n<p>This can take some time obviously.</p>\n\n<p>What I am looking to do is show a progress bar with the messages being sent.</p>\n\n<p>The backend is PHP.</p>\n\n<p>How can I do this?</p>\n\n<p><hr />\nMy solution:\nSend through a unique identifier in the original ajax call.<br>\nThis identifier is stored in a database(or a file named with the identifier etc), along with the completion percentage.</p>\n\n<p>This is updated as the original script proceeds.</p>\n\n<p>a function is setup called <code>progress(ident)</code></p>\n\n<p>The function makes an ajax call to a script that reads the percentage.<br>\nthe progressbar is updated\nIf the returned percentage is not 100,<br>\nthe function sets a timeout that calls itself after 1 second.</p>\n",
            "last_activity_date": 1337286786,
            "question_id": 4503658,
            "score": 10,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "ajax",
                "progress-bar"
            ],
            "title": "Jquery:: Ajax powered progress bar?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Perhaps you can put in a delay between showing the animated gif and running the heavy code.</p>\n\n<p>Show the gif, and call:</p>\n\n<pre><code>window.setTimeout(myFunction, 100)\n</code></pre>\n\n<p>Do the heavy stuff in \"myFunction\".</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try setting a <code>wait</code> cursor before you run the function, and removing it afterwards. In jQuery you can do it this way:</p>\n\n<pre><code>var body = $('body');\nbody.css(\"cursor\", \"wait\");\nlengthyProcess();\nbody.css(\"cursor\", \"\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>This is due to everything in IE6 being executed in the same thread - even animating the gif.</p>\n\n<p>The only way to ensure that the gif is displayed prior to starting is by detaching the execution.</p>\n\n<pre><code>function longRunningProcess(){\n    ....\n\n    hideGif();\n}\n\ndisplayGif();\nwindow.setTimeout(longRunningProcess, 0);\n</code></pre>\n\n<p>But this will still render the browser frozen while <code>longRunningProcess</code> executes.<br>\nIn order to allow interaction you will have to break your code in to smaller fragments, perhaps like this</p>\n\n<pre><code>var process = {\n    steps: [\n        function(){\n            // step 1\n            // display gif\n        },\n        function(){\n            // step 2\n        },\n        function(){\n            // step 3\n        },\n        function(){\n            // step 4\n            // hide gif\n        }\n    ],\n    index: 0,\n    nextStep: function(){\n        this.steps[this.index++]();\n        if (this.index != this.steps.length) {\n            var me = this;\n            window.setTimeout(function(){\n                me.nextStep();\n            }, 0);\n        }\n    }\n};\n\nprocess.nextStep();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>You have to use a little more sophisticated technique to show the progress of the long running function.</p>\n\n<p>Let's say you have a function like this that runs long enough:</p>\n\n<pre><code>function longLoop() {\n    for (var i = 0; i &lt; 100; i++) {\n        // Here the actual \"long\" code\n    }\n}\n</code></pre>\n\n<p>To keep the interface responsive and to show progress (also to avoid \"script is taking too long...\" messages in some browsers) you have to split the execution into the several parts.</p>\n\n<pre><code>function longLoop() {\n    // We get the loopStart variable from the _function_ instance. \n    // arguments.callee - a reference to function longLoop in this scope\n    var loopStart = arguments.callee.start || 0;\n\n    // Then we're not doing the whole loop, but only 10% of it\n    // note that we're not starting from 0, but from the point where we finished last\n    for (var i = loopStart; i &lt; loopStart + 10; i++) {\n        // Here the actual \"long\" code\n    }\n\n    // Next time we'll start from the next index\n    var next = arguments.callee.start = loopStart + 10;\n    if (next &lt; 100) {\n\n        updateProgress(next); // Draw progress bar, whatever.\n        setTimeout(arguments.callee, 10);\n    }\n}\n</code></pre>\n\n<p>I haven't tested this actual code, but I have used this technique before.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have some javascript functions that take about 1 to 3 seconds. (some loops or mooML templating code.)</p>\n\n<p>During this time, the browser is just frozen. I tried showing a \"loading\" animation (gif image) before starting the operation and hiding it afterwords. but it just doesnt work. The browser freezes before it could render the image and hides it immediately when the function ends. </p>\n\n<p>Is there anything I can do to tell the browser to update the screen before going into javascript execution., Something like Application.DoEvents or background worker threads. </p>\n\n<p>So any comments/suggestions about how to show javascript execution progress. My primary target browser is IE6, but should also work on all latest browsers</p>\n",
            "last_activity_date": 1276389228,
            "question_id": 2995805,
            "score": 10,
            "tags": [
                "javascript",
                "progress"
            ],
            "title": "Show javascript execution progress"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p><code>&lt;theory&gt;</code>You could go with a more object-oriented approach, and build the model in a way that each block of javascript blocks come in as their own objects, with their own methods. Upon unloading it, you simply set that object to <code>null</code>.<code>&lt;/theory&gt;</code></p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>If you save the evaluated code in namespaces, such as:</p>\n\n<pre><code>var MYAPP = {\n    myFunc: function(a) { ... }\n}\n</code></pre>\n\n<p>\"Freeing\" the whole thing should be as simple as setting MYPP to some random value, ala</p>\n\n<pre><code>MYAPP = 1\n</code></pre>\n\n<p>This does depend on there being no other means of referencing the variable, which isn't trivial</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>How about loading the JS files into an iframe? Then (in theory, never tested it myself) you can remove the iframe from the DOM and remove the \"memory\" it's using. </p>\n\n<p>I think... or I hope...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you are worried about memory leaks then you will want to make certain that there is no event handlers in the code you want removed referring to the still existing dom tree.</p>\n\n<p>It may be that you need to keep a list of all event handlers your code added, and before unloading, go through and remove the event handlers.</p>\n\n<p>I have never done it that way, I always worry about when I remove nodes that there is still a reference.</p>\n\n<p>Here is a good article on javascript memory leaks:\n<a href=\"http://javascript.crockford.com/memory/leak.html\" rel=\"nofollow\">http://javascript.crockford.com/memory/leak.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>(This is fairly off-the-cuff.)</p>\n\n<p>Memory use is indeed an issue you need to be concerned with in the current browser state of the art, although unless we're talking about quite a lot of code, I don't know that code size is the issue (it's usually DOM size, and leftover event handlers).</p>\n\n<p>You could use a pattern for your loadable modules that would make it much easier to unload them en mass -- or at least, to let the browser know it <em>can</em> unload them.</p>\n\n<p>Consider:</p>\n\n<pre><code>window.MyModule = (function() {\n\n    alert('This happens the moment the module is loaded.');\n\n    function MyModule() {\n\n        function foo() {\n            bar();\n        }\n\n        function bar() {\n        }\n\n    }\n\n    return MyModule;\n})();\n</code></pre>\n\n<p>That defines a closure that contains the functions <code>foo</code> and <code>bar</code>, which can call each other in the normal way. Note that code outside functions runs immediately.</p>\n\n<p>Provided you don't pass out any references to what's inside the closure to anything outside it, then window.MyModule will be the only reference to that closure and its execution context. To unload it:</p>\n\n<pre><code>try {\n    delete window.MyModule;\n}\ncatch (e) {\n    // Work around IE bug that doesn't allow `delete` on `window` properties\n    window.MyModule = undefined;\n}\n</code></pre>\n\n<p>That tells the JavaScript environment you're not using that property anymore, and makes anything it references available for garbage collection. When and whether that collection happens is obviously implementation-dependent.</p>\n\n<p>Note that it will be important if you hook event handlers within the module to unhook them before unloading. You could do that by returning a reference to a destructor function instead of the main closure:</p>\n\n<pre><code>window.MyModule = (function() {\n\n    alert('This happens the moment the module is loaded.');\n\n    function foo() {\n        bar();\n    }\n\n    function bar() {\n    }\n\n    function destructor() {\n        // Unhook event handlers here\n    }\n\n    return destructor;\n})();\n</code></pre>\n\n<p>Unhooking is then:</p>\n\n<pre><code>if (window.MyModule) {\n    try {\n        window.MyModule();\n    }\n    catch (e) {\n    }\n    try {\n        delete window.MyModule;\n    }\n    catch (e) {\n        // Work around IE bug that doesn't allow `delete` on `window` properties\n        window.MyModule = undefined;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>JavaScript interpreters have garbage collectors. In other words, if you don't reference anything, it won't be keeping them around. </p>\n\n<p>One of the reasons why it is good to use JSON with a callback function (JSONP). </p>\n\n<p>example, if you HTTP response for each JS is:</p>\n\n<pre><code>callback({status: '1', resp: [resp here..]});\n</code></pre>\n\n<p>And if callback() does not create a reference to the JSON object passed in as an argument, it will be garbage collected after the function completes.</p>\n\n<p>If you really need to make a reference, then you probably need that data around for some reason - otherwise you would/should NOT have referenced it in the first place. </p>\n\n<p>The methods mentioned to namespace objects just creates a reference that will be persisted until the reference count comes to 0. In other words, you have to track every reference and delete it later, which can be hard when you have closures and references from DOM lying around. Just one reference will keep the object in memory, and some simple operations may create references without you realizing it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Nice discussion. Clears up a lot of things. I have another worry, though.</p>\n\n<p>If I bind window.MyModule.bar() to an event, what happens if the event accidentally gets triggered after window.MyModule is deleted? For me, the whole point of namespacing and separating js into dynamically loaded modules is to avoid triggering event handlers cross-module by mistake.</p>\n\n<p>For example, if I do (excuse my jQuery):</p>\n\n<p>$('.some-class').click(window.MyModule.bar);</p>\n\n<p>What happens if I delete window.MyModule, load another module, and click on an element which accidentally has a class called some-class?</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am writing a web application that has a static outer \"shell\" and a dynamic content section.  The dynamic content section has many updates as users navigate the system.  When a new content block is loaded, it may also optionally load another JavaScript file.  In the name of good housekeeping, I remove script blocks from the DOM that apply to old content blocks, since that JavaScript is no longer needed.</p>\n\n<p>The problem comes next, when I realized that although I have removed the <code>&lt;script&gt;</code> element from the DOM, the JavaScript that was previously evaluated is still available for execution.  That makes sense of course, but I'm worried that it may cause a memory leak if the users navigate to a lot of different sections.</p>\n\n<p>The question then, is should I be worried about this situation?  If so, is there a way to force the browser to cleanup stale JavaScript?</p>\n",
            "last_activity_date": 1321391205,
            "question_id": 1346897,
            "score": 10,
            "tags": [
                "javascript",
                "ajax",
                "browser",
                "memory-leaks"
            ],
            "title": "Can dynamically loaded JavaScript be unloaded?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I've used <a href=\"http://code.google.com/p/minify/\">Minify</a> with my jQuery/PHP projects with lots of success.  It includes caching too so there isn't much overhead.</p>\n\n<p>I ended up changing things around and using .htaccess to route all requests to my javascript folder to the minify script, so for example:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"/js/jquery.js,js/jquery-levitip.js,js/jquery-facebox.js,js/datepicker.js,js/ga.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>with my front-end HTML routes into my minify script and it returns all those scripts as one, compressed and minified.  That way I can define the includes normally and everything happens behind the scenes.</p>\n\n<p>But anyway check the <a href=\"http://code.google.com/p/minify/wiki/UserGuide\">user guide</a> on their site, it's very well documented, and you should be able to pull things off the way you want too.  Oh and it works for CSS too.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can use <a href=\"http://code.google.com/p/jsmin-php/\">jsmin-php</a></p>\n\n<p>Their sample code is:</p>\n\n<pre><code>require 'jsmin-1.1.1.php';\n\n// Output a minified version of example.js.\necho JSMin::minify(file_get_contents('example.js'));\n</code></pre>\n\n<p>You may easily join several js files by doing something like:</p>\n\n<pre><code>require 'jsmin-1.1.1.php';\n\n// Output a minified version of example.js.\necho JSMin::minify(file_get_contents('example.js') . file_get_contents('example2.js'));\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>You maybe could use <a href=\"http://developer.yahoo.com/yui/compressor/\" rel=\"nofollow\">Yahoo JavaScript Compressor</a> which is a command line tool you could start from you PHP script.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can try <a href=\"http://phpspeedy.com\" rel=\"nofollow\">PHP Speedy</a>This will combine and compress your JS Files for you into 1 single file. It will also compress your HTML and CSS and your page will load a lot faster.  </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code> function compress($buffer) {\n        /* remove comments */\n        $buffer = preg_replace(\"/((?:\\/\\*(?:[^*]|(?:\\*+[^*\\/]))*\\*+\\/)|(?:\\/\\/.*))/\", \"\", $buffer);\n        /* remove tabs, spaces, newlines, etc. */\n        $buffer = str_replace(array(\"\\r\\n\",\"\\r\",\"\\t\",\"\\n\",'  ','    ','     '), '', $buffer);\n        /* remove other spaces before/after ) */\n        $buffer = preg_replace(array('(( )+\\))','(\\)( )+)'), ')', $buffer);\n        return $buffer;\n    }\n</code></pre>\n\n<p>Source: <a href=\"http://castlesblog.com/2010/august/14/php-javascript-css-minification\" rel=\"nofollow\">http://castlesblog.com/2010/august/14/php-javascript-css-minification</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I am working on a PHP app that requires eight javascript files (hello web2.0). </p>\n\n<p>I am wondering what the best way combine and compress all of the files dynamically.\nAm I phrasing the question correctly? </p>\n\n<p>The end result is that I would include one .js file in the header, and that .js file would include of the .js files in my \"includes/js\" directory.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1361469348,
            "question_id": 868857,
            "score": 10,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "jscompress"
            ],
            "title": "Combining and Compressing multiple JavaScript files in php"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>This is because you define your \"doc\" variable outside of your click event. The first time you click the button the doc variable contains a new jsPDF object. But when you click for a second time, this variable can't be used in the same way anymore. As it is already defined and used the previous time. </p>\n\n<p>change it to:</p>\n\n<pre><code>$(function () {\n\n    var specialElementHandlers = {\n        '#editor': function (element,renderer) {\n            return true;\n        }\n    };\n $('#cmd').click(function () {\n        var doc = new jsPDF();\n        doc.fromHTML($('#target').html(), 15, 15, {\n            'width': 170,'elementHandlers': specialElementHandlers\n        });\n        doc.save('sample-file.pdf');\n    });  \n});\n</code></pre>\n\n<p>and it will work.</p>\n\n<hr>\n\n<p><strong>sidenote:</strong> it is better to use</p>\n\n<pre><code>$(document).ready(function(){ \n    //your code \n});\n</code></pre>\n\n<p>instead of </p>\n\n<pre><code>$(function(){\n    //your code\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>when user click on GenertaePDF button, I need o export the htmlpage into PDF file. I am successfully exporting HTML page into PDF file but for the first click only I can able to download data into PDF but from the second click I am unable to download the data to PDF file, I am not sure where I went wrong in the code. Can any one please help me</p>\n\n<p>Please check the code hear:\nHelp is really Appreciated and its very urgent to solve this issue.</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;title&gt;html2canvas example&lt;/title&gt;\n   &lt;script type=\"text/javascript\" src=\"js/jquery/jquery-1.7.1.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"js/jquery/jquery-ui-1.8.17.custom.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"js/jspdf.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"libs/Deflate/adler32cs.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"libs/FileSaver.js/FileSaver.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"libs/Blob.js/BlobBuilder.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"js/jspdf.plugin.addimage.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"js/jspdf.plugin.standard_fonts_metrics.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"js/jspdf.plugin.split_text_to_size.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"js/jspdf.plugin.from_html.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"js/basic.js\"&gt;&lt;/script&gt;\n  &lt;script type=\"text/javascript\"&gt;\n  $(function () {\n        var doc = new jsPDF();\n        var specialElementHandlers = {\n            '#editor': function (element,renderer) {\n                return true;\n            }\n        };\n     $('#cmd').click(function () {\n            doc.fromHTML($('#target').html(), 15, 15, {\n                'width': 170,'elementHandlers': specialElementHandlers\n            });\n            doc.save('sample-file.pdf');\n        });  \n    });\n\n\n  &lt;/script&gt;\n&lt;/head&gt;\n&lt;body id=\"target\"&gt;\n&lt;div id=\"content\"&gt;\n     &lt;h3&gt;Hello, this is a H3 tag&lt;/h3&gt;\n      &lt;a class=\"upload\"  &gt;Upload to Imgur&lt;/a&gt;    \n    &lt;h2&gt;this is &lt;b&gt;bold&lt;/b&gt; &lt;span style=\"color:red\"&gt;red&lt;/span&gt;&lt;/h2&gt;   \n    &lt;p&gt; Feedback form with screenshot This script allows you to create feedback forms which include a screenshot, \n    created on the clients browser, along with the form. \n    The screenshot is based on the DOM and as such may not be 100% accurate to the real \n    representation as it does not make an actual screenshot, but builds the screenshot based on the \n    information available on the page. How does it work? The script is based on the html2canvas library,\n     which renders the current page as a canvas image, by reading the DOM and the different styles applied \n     to the elements. This script adds the options for the user to draw elements on top of that image, \n     such as mark points of interest on the image along with the feedback they send.\n      It does not require any rendering from the server, as the whole image is created on the clients browser.\n       No plugins, no flash, no interaction needed from the server, just pure JavaScript! Browser compatibility Firefox 3.5+ Newer versions of Google Chrome, Safari &amp; Opera IE9\n    &lt;/p&gt;\n\n  &lt;/div&gt;  \n &lt;button id=\"cmd\"&gt;generate PDF&lt;/button&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/y2b7Q/299/\">http://jsfiddle.net/y2b7Q/299/</a></p>\n",
            "last_activity_date": 1411197821,
            "question_id": 19786113,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "jspdf"
            ],
            "title": "Export HTml page to PDF on user click using javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It all comes down to preference to where you declare your functions; hoisting.</p>\n\n<p>Function declarations and variable declarations are always moved (\"hoisted\") invisibly to the top of their containing scope by the JavaScript interpreter. Function parameters and language-defined names are, obviously, already there. This means that code like this:</p>\n\n<pre><code>function foo() {\n    bar();\n    var x = 1;\n}\n</code></pre>\n\n<p>is actually interpreted like this:</p>\n\n<pre><code>function foo() {\n    var x;\n    bar();\n    x = 1;\n}\n</code></pre>\n\n<p>Notice that the assignment portion of the declarations were not hoisted. Only the name is hoisted. This is not the case with function declarations, where the entire function body will be hoisted as well. </p>\n\n<pre><code>function test() {\n    foo(); // TypeError \"foo is not a function\"\n    bar(); // \"this will run!\"\n    var foo = function () { // function expression assigned to local variable 'foo'\n        alert(\"this won't run!\");\n    }\n    function bar() { // function declaration, given the name 'bar'\n        alert(\"this will run!\");\n    }\n}\ntest();\n</code></pre>\n\n<p>In this case, only the function declaration has its body hoisted to the top. The name 'foo' is hoisted, but the body is left behind, to be assigned during execution.</p>\n\n<p>You can give names to functions defined in function expressions, with syntax like a function declaration. This does not make it a function declaration, and the name is not brought into scope, nor is the body hoisted. </p>\n\n<pre><code>foo(); // TypeError \"foo is not a function\"\nbar(); // valid\nbaz(); // TypeError \"baz is not a function\"\nbin(); // ReferenceError \"bin is not defined\"\n\nvar foo = function () {}; // anonymous function expression ('foo' gets hoisted)\nfunction bar() {}; // function declaration ('bar' and the function body get hoisted)\nvar baz = function bin() {}; // named function expression (only 'baz' gets hoisted)\n\nfoo(); // valid\nbar(); // valid\nbaz(); // valid\nbin(); // ReferenceError \"bin is not defined\"\n</code></pre>\n\n<p>So, if your preference is to have functions hoist to the top use a <code>function declaration</code> otherwise use <code>expression</code>. I prefer the latter as I typically build object literals with methods as <code>function expressions</code>. </p>\n\n<p>Named <code>function expressions</code> can be handy when errors are thrown. The console will tell you what the function is instead of stating <code>anonymous</code> aka <strong>stack trace</strong>.</p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>There are few advantages to naming functions </p>\n\n<ul>\n<li>names for meta analysis. <code>functionInstance.name</code> will show you the name. </li>\n<li>Far more importantly, the name will be printed in stack traces.</li>\n<li>names also help write self documenting or literate code.</li>\n</ul>\n\n<p>There is a single disadvantage to named functions expressions</p>\n\n<ul>\n<li>IE has memory leaks for NFE</li>\n</ul>\n\n<p>There are no disadvantages to function declarations apart from less stylistic control</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Your question really comprises of two parts, as you don't necessarily have to make your functions anonymous if they are assigned to a variable or property.</p>\n\n<p><strong>Named vs anonymous?</strong></p>\n\n<p>@Raynos highlights the main points clearly. The best part about named functions is that they will show themselves in a stack trace. Even in situations where functions are being assigned to variables/properties, it's a good idea to give your functions a name just to aid with debugging, however I wouldn't say anonymous functions are evil at all. They do serve a fine purpose:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/3462255/are-anonymous-functions-a-bad-practice-in-javascript\">Are anonymous functions a bad practice in JavaScript?</a></p>\n\n<p><strong>Function declaration vs function expression?</strong></p>\n\n<p>For that part of the question I would refer you to this question as it probably covers the topic in far more depth than I can</p>\n\n<p><a href=\"http://stackoverflow.com/questions/336859/javascript-var-functionname-function-vs-function-functionname\">JavaScript: var functionName = function() {} vs function functionName() {}</a> </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You've hit on a couple different things here, but I'll try to hit your main question first.</p>\n\n<p>In general....</p>\n\n<p><code>function() { ... }</code> is a <em>function expression</em>. Syntaxically this is on the same level as <code>2</code> or <code>[4,5]</code>. This represents a <strong>value</strong>. So doing <code>var foo=function(){ ... }</code> will work as planned, every time.</p>\n\n<p><code>function foo() { ... }</code>  is a function declaration. This might seem to do the same thing as <code>var foo=function(){...}</code>, but there's a small caveat. As its a declaration, it works similar to the concept of variable hoisting in JS (basically, all variable declarations are done before any expressions are evaluated).</p>\n\n<p>A good example is from <a href=\"http://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting\" rel=\"nofollow\">here</a>:</p>\n\n<pre><code>function test() {\n    foo(); // TypeError \"foo is not a function\"\n    bar(); // \"this will run!\"\n    var foo = function () { // function expression assigned to local variable 'foo'\n        alert(\"this won't run!\");\n    }\n    function bar() { // function declaration, given the name 'bar'\n        alert(\"this will run!\");\n    }\n}\ntest();\n</code></pre>\n\n<p>Basically variable hoisting has brought the value up to the top, so this code is equivalent (<em>in theory</em>) to :</p>\n\n<pre><code>function test() {\n    var foo;//foo hoisted to top\n    var bar=function(){//this as well\n        alert(\"this will run!\");\n    }\n\n    foo(); // TypeError \"foo is not a function\"\n    bar(); // \"this will run!\"\n    var foo = function () { // function expression assigned to local variable 'foo'\n        alert(\"this won't run!\");\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>NB: I'd like to take this spot to say that JS interpreters have a hard time following theory, so trusting them on somewhat iffy behaviour is not recommended. <a href=\"http://kangax.github.com/nfe/#expr-vs-decl\" rel=\"nofollow\">Here</a> you'll find a good example at the end of a section where theory and practice end up not working (there are also some more details on the topic of expressions vs declarations).</p>\n\n<p>Fun fact: wrapping <code>function() foo {...}</code> in parentheses transforms it from a declaration to an expression, which can lead to some weird looking code like </p>\n\n<pre><code>(function() foo { return 1; })();// 1\nfoo; //ReferenceError: foo is not defined\n</code></pre>\n\n<p>Don't do this if you don't have a reason to, please. </p>\n\n<hr>\n\n<p><strong>Summary</strong> <code>var foo=function(){ ... }</code> is *sorta kinda * the same as function <code>foo(){ ... }</code> except that the former does what you think it does where you think it should whereas the latter does weird stuff unless you wrap it in parens, but that messes up the scope, and JS interpreters allow you to do things that are considered syntax errors in the spec so you're led to believe that wrong things are in fact right, etc....</p>\n\n<p><strong>please use function expressions</strong>( <code>var f=function(){...}</code> ). There's no real reason not to, especially considering you're somewhat forced to do it when you're using dot syntax.</p>\n\n<hr>\n\n<p>On to the second thing you touched.....</p>\n\n<p>I'm not really sure what to say, it's <em>kinda sorta</em> completely different from everything else about this.</p>\n\n<pre><code>var foo = {\n    baz: 43,\n    doSomething:function() {\n        ...\n    }\n}\n</code></pre>\n\n<p>this is known as object literal syntax. JSON, which is based off of this syntax,  is <a href=\"http://json.org/\" rel=\"nofollow\">a pretty neat way of formatting data</a>, and this syntax in JS is often used to declare new objects, with singleton objects for example(avoiding all the mess with declaring a function and using new ). It can also be used in the same way XML is used, and is preferred by all the cool kids...</p>\n\n<p>Anyways, basically object literal syntax works like this:</p>\n\n<pre><code>{ name1: val1, .... namek:valk }\n</code></pre>\n\n<p>This expression is an object with certain values initialised on it. so doing <code>var obj={ name1: val1, .... namek:valk }</code> means that :</p>\n\n<pre><code>obj.name1==val1;\nobj['name1']==val1;// x['y'] is the same thing as x.y \n...\nobj.namek==valk;\n</code></pre>\n\n<p>So what does this have to do with our example? Basically your expression is often used to declare singleton objects. But it can also be used to declare an object prototype, so someone can later do var newObj=Object.create(foo) , and newObj will have foo as a prototype.</p>\n\n<p>Look into prototypal inheritence in detail if you want to really get how useful it is. Douglas Crockford talks about it in detail in <a href=\"http://www.youtube.com/watch?v=hQVTIJBZook&amp;feature=related\" rel=\"nofollow\">one</a> of his many talks). </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/336859/javascript-var-functionname-function-vs-function-functionname\">JavaScript: var functionName = function() {} vs function functionName() {}</a>  </p>\n</blockquote>\n\n\n\n<p>There are two possible methods for pulling out a function in Javascript:</p>\n\n<pre><code>var foo = function() { ... }\n</code></pre>\n\n<p>(this is a bit contrived; another common pattern is:</p>\n\n<pre><code>var foo = {\n    baz: 43,\n    doSomething:function() {\n        ...\n    }\n}\n</code></pre>\n\n<p>)</p>\n\n<p>versus</p>\n\n<pre><code>function foo() { ... }\n</code></pre>\n\n<p>Is there an explicit reason to prefer one or the other?</p>\n",
            "last_activity_date": 1334025268,
            "question_id": 10081593,
            "score": 9,
            "tags": [
                "javascript"
            ],
            "title": "Are named functions or anonymous functions preferred in JavaScript?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<pre><code>$('&lt;img /&gt;')\n.attr('src', 'FOLDER LOCATION HERE')\n.appendTo('#mylist')\n</code></pre>\n\n<p><a href=\"http://stackoverflow.com/questions/860743/jquery-pull-images-from-directory\">For reference</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use : </p>\n\n<pre><code>var dir = \"Src/themes/base/images/\";\nvar fileextension = \".png\";\n$.ajax({\n    //This will retrieve the contents of the folder if the folder is configured as 'browsable'\n    url: dir,\n    success: function (data) {\n        //Lsit all png file names in the page\n        $(data).find(\"a:contains(\" + fileextension + \")\").each(function () {\n            var filename = this.href.replace(window.location.host, \"\").replace(\"http:///\", \"\");\n            $(\"body\").append($(\"&lt;img src=\" + dir + filename + \"&gt;&lt;/img&gt;\"));\n        });\n    }\n});\n</code></pre>\n\n<p>If you have other extensions, you can make it an array and then go through that one by one using <code>in_array()</code>.</p>\n\n<p>P.s : The above source code is not tested.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>You can't do this automatically. Your JS can't see the files in the same directory as it.</p>\n\n<p>Easiest is probably to give a list of those image names to your JavaScript.</p>\n\n<p>Otherwise, you might be able to fetch a directory listing from the web server using JS and parse it to get the list of images.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In jQuery you can use Ajax to call a server-side script. The server-side script will find all the files in the folder and return them to your html file where you will need to process the returned information.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use the <strong><a href=\"http://www.justinwhall.com/directory-jquery-slider/\" rel=\"nofollow\">Directory Slider plugin</a></strong> which will do that for you. Easy to use and configure.</p>\n\n<p>Enjoy</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use the <a href=\"http://nodejs.org/docs/v0.3.1/api/fs.html#fs.readdir\" rel=\"nofollow\">fs.readdir</a> or <a href=\"http://nodejs.org/docs/v0.3.1/api/fs.html#fs.readdirSync\" rel=\"nofollow\">fs.readdirSync</a> methods to get the file names in the directory.</p>\n\n<p>The difference between the two methods, is that the first one is asynchronous, so you have to provide a callback function that will be executed when the read process ends.</p>\n\n<p>The second is synchronous, it will returns the file name array, but it will stop any further execution of your code until the read process ends.</p>\n\n<p>After that you simply have to iterate through the names and using append function, add them to their appropriate locations. To check out how it works see <a href=\"http://www.w3schools.com/jsref/\" rel=\"nofollow\">HTML DOM and JS reference</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is one way to do it. Involves doing a little PHP as well.</p>\n\n<p>The PHP part:</p>\n\n<pre><code>$filenameArray = [];\n\n$handle = opendir(dirname(realpath(__FILE__)).'/images/');\n        while($file = readdir($handle)){\n            if($file !== '.' &amp;&amp; $file !== '..'){\n                array_push($filenameArray, \"images/$file\");\n            }\n        }\n\necho json_encode($filenameArray);\n</code></pre>\n\n<p>The jQuery part:</p>\n\n<pre><code>$.ajax({\n            url: \"getImages.php\",\n            dataType: \"json\",\n            success: function (data) {\n\n                $.each(data, function(i,filename) {\n                    $('#imageDiv').prepend('&lt;img src=\"'+ filename +'\"&gt;&lt;br&gt;');\n                });\n            }\n        });\n</code></pre>\n\n<p>So basically you do a PHP file to return you the list of image filenames as JSON, grab that JSON using an ajax call, and prepend/append them to the html. You would probably want to filter the files u grab from the folder.</p>\n\n<p>Had some help on the php part from <a href=\"http://stackoverflow.com/questions/17122218/get-all-the-images-from-a-folder-in-php\">1</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If, as in my case, you would like to load the images from a local folder on your own machine, then there is a simple way to do it with a very short Windows batch file. This uses the ability to send the output of any command to a file using > (to overwrite a file) and >> (to append to a file).</p>\n\n<p>Potentially, you could output a list of filenames to a plain text file like this:</p>\n\n<pre><code>dir /B &gt; filenames.txt\n</code></pre>\n\n<p>However, reading in a text file requires more faffing around, so I output a javascript file instead, which can then be loaded in your to create a global variable with all the filenames in it.</p>\n\n<pre><code>echo var g_FOLDER_CONTENTS = mlString(function() { /*! &gt; folder_contents.js\ndir /B images &gt;&gt; folder_contents.js\necho */}); &gt;&gt; folder_contents.js\n</code></pre>\n\n<p>The reason for the weird function with comment inside notation is to get around the limitation on multi-line strings in Javascript. The output of the dir command cannot be formatted to write a correct string, so I found a workaround <a href=\"http://stackoverflow.com/questions/805107/creating-multiline-strings-in-javascript\">here</a>.</p>\n\n<pre><code>function mlString(f) {\n    return f.toString().\n        replace(/^[^\\/]+\\/\\*!?/, '').\n        replace(/\\*\\/[^\\/]+$/, '');\n}\n</code></pre>\n\n<p>Add this in your main code before the generated javascript file is run, and then you will have a global variable called g_FOLDER_CONTENTS, which is a string containing the output from the dir command. This can then be tokenized and you'll have a list of filenames, with which you can do what you like.</p>\n\n<pre><code>var filenames = g_FOLDER_CONTENTS.match(/\\S+/g);\n</code></pre>\n\n<p>Here's an example of it all put together: <a href=\"https://drive.google.com/file/d/0B2HO-DwxAPCnZXppWnprWU1VcjQ/edit?usp=sharing\" rel=\"nofollow\">image_loader.zip</a></p>\n\n<p>In the example, <strong>run.bat</strong> generates the Javascript file and opens index.html, so you needn't open index.html yourself.</p>\n\n<p><strong>NOTE</strong>: .bat is an executable type in Windows, so open them in a text editor before running if you are downloading from some random internet link like this one.</p>\n\n<p>If you are running Linux or OSX, you can probably do something similar to the batch file and produce a correctly formatted javascript string without any of the mlString faff.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is the way to add more file extentions, in the example given by Roy M J in the top of this page.</p>\n\n<pre><code>var fileextension = [\".png\", \".jpg\"];\n$(data).find(\"a:contains(\" + (fileextension[0]) + \"), a:contains(\" + (fileextension[1]) + \")\").each(function () { // here comes the rest of the function made by Roy M J   \n</code></pre>\n\n<p>In this example I have added more contains. </p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have a folder named \"images\" in the same directory as my .js file. I want to load all the images from \"images\" folder into my html page using Jquery/Javascript.</p>\n\n<p>Since, names of images are not some successive integers, how am I supposed to load these images?</p>\n",
            "last_activity_date": 1424957224,
            "question_id": 18480550,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "image"
            ],
            "title": "How to load all the images from one of my folder into my web page, using Jquery/Javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>One basic simplification would be to put the queries in a list and have the same success handler simply call the next query in the list. You would need to hold a pointer to the currently executing query, but it would more cleanly (at least from how the code looks) give you synchronous behavior.</p>\n\n<p>This would work for any closure because you can just set the list values to a bunch of chunks of code, and then execute all of it in order.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is a problem that is so prevalent in the community that many patterns <a href=\"https://github.com/joyent/node/wiki/modules#wiki-async-flow\">and libraries</a> have arisen to combat it.</p>\n\n<p>My favorite is promises. I gave a presentation on promises as a solution to the async problem at a few events; you can check out my slides on SlideShare: <a href=\"http://www.slideshare.net/domenicdenicola/callbacks-promises-and-coroutines-oh-my-the-evolution-of-asynchronicity-in-javascript\">Callbacks, Promises, and Coroutines (oh my!): The Evolution of Asynchronicity in JavaScript</a>. It also explains why asynchronicity is necessary---in short, because JavaScript is single-threaded.</p>\n\n<p>For the particular example you give, check out slide 53 and thereabouts. In brief, assuming <code>db.query</code> returned a promise, it would look like:</p>\n\n<pre><code>db.query(\"SELECT...\")\n  .then(function (a) {\n    return db.query(\"SELECT...\" + a);\n  })\n  .then(function (b) {\n    return db.query(\"SELECT...\" + b);\n  })\n  .then(function (c) {\n    return db.query(\"SELECT...\" + c);\n  })\n  .then(function (d) {\n    return db.query(\"SELECT...\" + d);\n  })\n  .then(function (e) {\n    return db.query(\"SELECT...\" + e);\n  });\n</code></pre>\n\n<p>Of course it becomes a lot nicer if you don't need to use the results of one query for the next:</p>\n\n<pre><code>Q.all([\n  db.query(\"SELECT...\"),\n  db.query(\"SELECT...\"),\n  db.query(\"SELECT...\"),\n  db.query(\"SELECT...\"),\n  db.query(\"SELECT...\")\n]).spread(function (a, b, c, d, e) {\n  // ...\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>If it's just the nesting that's bothering you, simply chain the methods by name:</p>\n\n<pre><code>function success1() {\n    // do stuff to handle success\n    db.query(\"SELECT...\", success2);\n}\n\nfunction success2() {\n    db.query(\"SELECT...\", success3);\n}\n\nfunction success3() {\n    db.query(\"SELECT...\", success4);\n}\n\nfunction success4() {\n    // do something\n}\n\ndb.query(\"SELECT...\", success1);\n</code></pre>\n\n<p>This won't work if any of those inner success handlers needs access to something that was defined in its lexical scope, but that may not be the case (and even if it is, you could still pass those values as arguments to the next function in the chain).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There is a Open Source Framework know as Siminov Hybrid, it provides ORM for both Native (Java) and Web (JavaScript). By using this you can make all database operations synchronous, because this framework use communication channel provided by Android which is Synchronous.</p>\n\n<p>It is very easy to integrate PhoneGap with this framework. Using this you can work with both Native ORM and Web ORM at same time.</p>\n\n<p><a href=\"http://siminov.github.io/android-hybrid\" rel=\"nofollow\">http://siminov.github.io/android-hybrid</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>While developing a mobile PhoneGap app I had an interesting problem. I needed to query about 10 items of data from the database (through PhoneGaps SQLite API)... Like many javascript API's, this one was asynchronous. When you made your query, you would pass in a \"success\" handler.</p>\n\n<p>Now, my preference in this case would have been a synchronous query method that returned only when complete. Then I could have written straight line code that queried each of the 10 items 1 after another.</p>\n\n<p>Because of the asynchronous nature of PhoneGap (really, I see this all over JS however) I was forced to write a beast that looked like this:</p>\n\n<pre><code>db.query( \"SELECT...\", success() {\n    db.query( \"SELECT...\", success() {\n        db.query( \"SELECT...\", success() {\n            db.query( \"SELECT...\", success() {\n                db.query( \"SELECT...\", success() {\n                }\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>And this is only half as deep as I had to go (and greatly simplified...)... When, had I been using SQLite in C, I could have simply done something like:</p>\n\n<pre><code>db.query( \"SELECT...\", resultA );\ndb.query( \"SELECT...\", resultB );\ndb.query( \"SELECT...\", resultC );\ndb.query( \"SELECT...\", resultD );\ndb.query( \"SELECT...\", resultE );\n</code></pre>\n\n<p>It seems to me that the success handler approach is great when you only have to go 1 or 2 levels deep... But, completely falls apart when you need more than that...</p>\n\n<p>Is their a library, or feature of a library somewhere that makes this easier? </p>\n",
            "last_activity_date": 1373002409,
            "question_id": 8565638,
            "score": 8,
            "tags": [
                "javascript",
                "asynchronous"
            ],
            "title": "Getting synchronous behavior in javascript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><code>function changeImage(a)</code> so there is no such thing as <code>a.src</code> => just use <code>a</code>.</p>\n\n<p>demo <a href=\"http://jsfiddle.net/Regisc/7wpAw/\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>If you will always have the pattern on <code>_b</code> instead of <code>_t</code> you can make it more generic by passing reference to the image itself:</p>\n\n<pre><code>onclick='changeImage(this);'\n</code></pre>\n\n<p>Then in the function:</p>\n\n<pre><code>function changeImage(img) {\n    document.getElementById(\"img\").src = img.src.replace(\"_t\", \"_b\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You've got a few changes (this assumes you indeed still want to change the image with an ID of IMG, if not use Shadow Wizard's solution).</p>\n\n<p>Remove <code>a.src</code> and replace with <code>a</code>:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction changeImage(a) {\n    document.getElementById(\"img\").src=a;\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>Change your <code>onclick</code> attributes to include a string of the new image source instead of a literal:</p>\n\n<pre><code>onclick='changeImage( \"1772031_29_b.jpg\" );'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'd prefer to have a couple of things in place...  Although, the inline onclick works, it's verbose and requires the JS function be defined before load is completed.  I'm doing the event binding in jQuery, but there are other alternatves</p>\n\n<pre><code>&lt;img class='changer' src='1772031_29_t.jpg' data-altsrc='1772031_29_b.jpg' /></code></pre>\n\n<pre><code>//JS - jQuery on-dom-ready function\n$(function(){\n  //bnd to all images with te changer class for click\n  $('img.changer').click(function(){\n    //grab the image just clicked as a jquery object.\n    var img = $(this);\n    img .data('originalsrc', img.attr('src')) //stow the original src\n        .attr('src', img.data('altsrc'))      //update the src\n        .data('mode','alt')                   //tag that the img isin alt mode.\n        ; //done with img\n  });\n});</code></pre>\n\n<p>Essentially, use data attributes for additional info, and late bind your script actions.  The only needed poing is really the setting of the src attribute.  The rest can be done for toggling, etc.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I also tube that problem. But solve it by an instance of an image every time you change the source (image).</p>\n\n<p>It seems that would be called onload only once.\nBut this way, you can change image whenever you want.</p>\n\n<pre><code>function chageIcon(domImg,srcImage)\n    {\n        var img = new Image();\n        img.onload = function()\n        {\n            // Load completed\n            domImg.src = this.src;\n        };\n        img.src = srcImage;\n    }\n</code></pre>\n\n<p>Mode use.</p>\n\n<pre><code>chageIcon(document.getElementById(\"img\"),\"newIcon.png\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code> &lt;script type=\"text/javascript\"&gt;\n        function changeImage(a) {\n    var picName=a.substring(1,a.length-1);\n            document.getElementById(\"image\").src=picName;\n        }\n &lt;/script&gt;\n\n &lt;div id=\"main_img\"&gt;\n     &lt;img id=\"image\" src=\"app.jpg\"&gt;\n &lt;/div&gt;\n\n &lt;div id=\"thumb_img\"&gt;\n     &lt;img src='app.jpg'  onclick=\"changeImage('+5steps.jpg+');\"&gt;\n     &lt;img src='5steps.jpg'  onclick=\"changeImage('+award.png+');\"&gt;\n     &lt;img src='award.png'  onclick=\"changeImage('+app.jpg+');\"&gt;\n &lt;/div&gt;\n</code></pre>\n\n<p>Use the above code by placing this html file and pics(take care in namings, beacause I have given the above code with my pic names) in same folder\nyou will get...</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>So I'm new with Javascript (this is actually my first attempt to make something work) and I'm having a bit of trouble. I thought I had enough knowledge to make this work, I've even googled for tutorials and scripts that could help me work this out but nothing really helped.</p>\n\n<p>I can't seem to change the image source, heres the code that I have so far:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    function changeImage(a) {\n        document.getElementById(\"img\").src=a.src;\n    }\n&lt;/script&gt;\n&lt;div id=\"main_img\"&gt;\n    &lt;img id=\"img\" src=\"1772031_29_b.jpg\"&gt;\n&lt;/div&gt;\n&lt;div id=\"thumb_img\"&gt;\n    &lt;img src='1772031_29_t.jpg'  onclick='changeImage(1772031_29_b.jpg);'&gt;\n    &lt;img src='1772031_55_t.jpg'  onclick='changeImage(1772031_55_b.jpg);'&gt;\n    &lt;img src='1772031_53_t.jpg'  onclick='changeImage(1772031_53_b.jpg);'&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Could anyone please explain if I'm doing something wrong? Or maybe I'm missing something? Help me please :-)</p>\n",
            "last_activity_date": 1414786591,
            "question_id": 7312553,
            "score": 8,
            "tags": [
                "javascript",
                "image",
                "onclick",
                "src"
            ],
            "title": "Change image source with javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If the click is in the iframe area, the iframe context handles the click event, it does not bubble up to the iframe parent. So the div will never register the click event at all if it happened in the iframe area.</p>\n\n<p>Furthermore, if the iframe contains a page that does not belong to the same domain as the iframe parent, any interaction is prohibited (re. <a href=\"http://en.wikipedia.org/wiki/Same_origin_policy\">same origin policy</a>).</p>\n\n<p>When the <a href=\"http://en.wikipedia.org/wiki/Same_origin_policy\">same origin policy</a> is met, there are a few things you can do, you could call a method in the iframe parent context:</p>\n\n<pre><code>top.parentFunction();\n</code></pre>\n\n<p>So in the iframe you add an event listener that delegates to the iframe parent (accessible with the <code>top</code> reference.</p>\n\n<p>Propagating events is a lot more complicated, so I'm simply going to refer to <a href=\"http://github.com/dperini/nwevents/\">Diego Perini's NWEvents library</a>. I believe his event system to be one of the better ones out there and he's particular on iframe interaction.</p>\n\n<p>I certainly would not start writing your own code to achieve this, this can easily be a year long project if you want to do it properly and even then will be inferior to Diego's work.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>There's no \"good\" way to do it, but if you really need to detect a click on an Iframe, you can kind-of do it in the latest browsers.</p>\n\n<pre><code>&lt;iframe src=\"http://mtw-ed.com/\" id=\"iframe\" style=\"\"&gt;&lt;/iframe&gt;\n\n&lt;script type=\"text/javascript\"&gt;\nvar inIframe = false;\nfunction checkClick() {\n    if (document.activeElement \n      &amp;&amp; document.activeElement === document.getElementById(\"iframe\")) {\n        if (inIframe == false) {\n            alert(\"iframe click\");\n            inIframe = true;\n        }\n    } else\n        inIframe = false;\n}\nsetInterval(checkClick, 200);\n&lt;/script&gt;\n</code></pre>\n\n<p>This script will check every 200ms whether the user is in the Iframe. Of course, they may not have clicked on the Iframe to get there, but I'm afraid this is the best you can do without @BGerrissen's solution.</p>\n\n<p>It will detect the first 'click' only, unless you click out again. It only works in really modern browsers.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can use a library like <a href=\"https://github.com/ternarylabs/porthole\" rel=\"nofollow\">porthole</a> to pass messages between parent and iframe, even across domains. Using this wouldn't exactly propagate the event (you won't be able to get the event object), but you can create your own event in the form of a simple message, and then handle it in the parent as a click. </p>\n\n<p><a href=\"http://sandbox.ternarylabs.com/porthole/\" rel=\"nofollow\">Here's their example</a> </p>\n\n<p>However, I've used Brendon's answer as it's simpler works for my current need.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can i capture a click or mousedown event on a div surrounding an iframe. I've tried attaching the funciton to click event on the div but since the iframe never bubbles the event up to the surrounding div the function is never called. Is there a way i can capture the event on the div and then propagate it to the iframe for default action</p>\n",
            "last_activity_date": 1424664904,
            "question_id": 3690812,
            "score": 8,
            "tags": [
                "javascript",
                "javascript-events",
                "event-handling",
                "event-bubbling"
            ],
            "title": "capture click on div surrounding an iframe"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Overall, you should not need to trigger a 're-read', and depending on your UI that might not be a good thing anyway.</p>\n\n<p>My experience has been with angular.js (as an accessibility person rather than the developer), and our overall approach was to manage the focus rather than trigger a re-read. (We do extensive accessibility testing.)</p>\n\n<p>The key thing from a UI point of view (primarily for screen reader users) is that selecting a link (e.g. <code>about.html</code>) should take you somewhere.</p>\n\n<p>In this case the appropriate place to put the focus would be the top of the content area of the about 'page', hopefully an <code>&lt;h1&gt;</code>.</p>\n\n<p>In order for that to work the target element should be focusable via a script, so probably needs <code>tabindex</code> unless it is a link or form control:</p>\n\n<pre><code>&lt;h1 id=\"test\" tabindex=\"-1\"&gt;\n</code></pre>\n\n<p>The <code>-1</code> means it is <em>not</em> in the default tab order, but is focusable via a script. See more at <a href=\"http://www.w3.org/TR/wai-aria-practices/#focus_tabindex\" rel=\"nofollow\">WAI-ARIA authoring practices</a>.</p>\n\n<p>Then at the end of the function that loads the new content, including the tabindex attribute, add something like:</p>\n\n<pre><code>$('#test').attr('tabindex', '-1').css('outline', 'none');\n$('#test').focus();\n</code></pre>\n\n<p>When adding <code>tabindex</code> dynamically it is best to do so in a line before the <code>focus()</code> function otherwise it may not work (I remember that from testing with JAWS).</p>\n\n<p>To test this I would use either:</p>\n\n<ul>\n<li>NVDA &amp; Firefox, Windows</li>\n<li>Jaws &amp; IE, Windows</li>\n</ul>\n\n<p>It is also good to test with VoiceOver on Safari/OSX, but that works differently and may not hit the same issues as a windows based screen reader.</p>\n\n<p>You will hit a lot of issues with Chrome/NVDA as that is not supported very well, and end-users are very unlikely to use that. IE is ok with NVDA, but <a href=\"http://community.nvda-project.org/wiki/ApplicationSupport\" rel=\"nofollow\">Firefox is best</a>.</p>\n\n<p>Overall, it is worth getting to know the WAI-ARIA authoring practices, particularly <a href=\"http://www.w3.org/TR/aria-in-html/\" rel=\"nofollow\">Using ARIA in HTML</a>. Even though you are using a JS app, the browser (and therefore screen reader) is interpreting the resulting HTML so that advice is still relevant.</p>\n\n<p>Lastly, if you are updating page content <strong>without</strong> the user pressing space/enter to activate something, you might find that JAWS/NVDA do not know about the new content as their 'virtual buffer' has not updated. In that case, you might need to add a <a href=\"http://juicystudio.com/article/making-ajax-work-with-screen-readers.php\" rel=\"nofollow\">JS shim to make them update</a>, but only do that if you run into problems in testing, it should not be a global patch.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Taking the answer from <a href=\"http://stackoverflow.com/a/18631501/431880\">@AlastairC</a>, and the comments below it. I've taken this a bit further now and am going with this as my solution going forward:</p>\n\n<hr>\n\n<h1>My go-forward solution</h1>\n\n<p>I found that just reading out the first heading wasn't really that useful. Especially if the last page you were on was a loading sequence. You can hear that there something new has been focused, but it's certainly not clear that this forms the part of a whole now page.</p>\n\n<h3>Add some useful, <em>descriptive</em> text to the page</h3>\n\n<p>As such I now have a single paragraph at the top of my page layout template. This includes a screen-reader friendly message, along with a very rough overview of what the page.</p>\n\n<pre><code>&lt;p class=\"screenreader-summary\" tabindex=\"-1\"&gt;\n  The &lt;strong&gt;Dashboard&lt;/strong&gt; page is now on-screen.\n  It contains several widgets for summarizing your data.\n&lt;/p&gt;\n</code></pre>\n\n<p>Note that the <code>tabindex</code> value allows us to focus this element with JavaScript. <em>You might not want to use a <code>p</code> element for this, you can use anything you like really.</em></p>\n\n<h3>Hide it off-screen (optional, only required if it would break your design/readability)</h3>\n\n<p>This is then coupled with CSS to move this element off-screen:</p>\n\n<pre><code>.screenreader-summary {\n  position: absolute;\n  left:-10000px;\n  top:auto;\n  width:1px;\n  height:1px;\n  overflow:hidden;\n  outline: none; /* Important, don't show an outline on-focus */\n}\n</code></pre>\n\n<h3>Focus this element, when a new page is shown on-screen</h3>\n\n<p>Finally, in the JavaScript code that shows your page on screen (e.g. in MarionetteJS using <code>onShow</code> or the <code>show</code> event):</p>\n\n<pre><code>$yourViewEl.find('.screenreader-summary').focus();\n</code></pre>\n\n<h1>The result</h1>\n\n<p>I'm a sighted person, so take what I say with a pinch of salt - however I found that reading out a short description is <em>so</em> much more useful.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>For angular the url changes, If someone REALLY needs to reread everything, (like me because of requirements), what did the trick for us was this:</p>\n\n<pre><code>$(window).on('hashchange', function () {\n    location.reload();\n});\n</code></pre>\n\n<p>and we just added extra code to handle pages like \"success\" were no reloads are supposed to happen.\nthis simulates the actual page loading, and screen readers will read it normally like a page change.\nkind of defeats the purpose of angular in a way, but this will help people like me who already have the application, and want a quick fix.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Imagine you have a simple, single-page application - regardless of whether it was written using Backbone, Angular, Ember or anything else.</p>\n\n<p>How can you tell a screen reader that we've changed 'page' when a route is followed?</p>\n\n<p>In a classic application, when I navigate from <code>/index.html</code> to <code>/about.html</code> the screen reader obviously detects the page change, and re-reads as you'd expect.</p>\n\n<p>In my Backbone application though, when I follow a route I cannot work out how to trigger a 're-read'. I've tried triggering a <code>focus</code> event which I'd seen somewhere, but that doesn't seem to work.</p>\n\n<p>Note: I'm currently testing with NVDA/Chrome.</p>\n",
            "last_activity_date": 1416347221,
            "question_id": 18619186,
            "score": 7,
            "tags": [
                "javascript",
                "angularjs",
                "backbone.js",
                "accessibility",
                "single-page-application"
            ],
            "title": "Tell screen reader that page has changed in Backbone/Angular single-page app"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It appears that <a href=\"http://www.sitepen.com/blog/2008/06/17/json-referencing-in-dojo/\">dojo</a> can represent circular references in JSON in the form : <code>{\"id\":\"1\",\"me\":{\"$ref\":\"1\"}}</code></p>\n\n<p>Here is an example: </p>\n\n<p><a href=\"http://jsfiddle.net/dumeG/\">http://jsfiddle.net/dumeG/</a></p>\n\n<pre><code>require([\"dojox/json/ref\"], function(){\n    var me = {\n        name:\"Kris\",\n        father:{name:\"Bill\"},\n        mother:{name:\"Karen\"}\n    };\n    me.father.wife = me.mother;\n    var jsonMe = dojox.json.ref.toJson(me); // serialize me\n    alert(jsonMe);\n});\u200b\n</code></pre>\n\n<p>Produces: </p>\n\n<pre><code>{\n   \"name\":\"Kris\",\n   \"father\":{\n     \"name\":\"Bill\",\n     \"wife\":{\n          \"name\":\"Karen\"\n      }\n   },\n   \"mother\":{\n     \"$ref\":\"#father.wife\"\n   }\n}\n</code></pre>\n\n<p><em>Note: You can also de-serialize these circular referenced objects using the <code>dojox.json.ref.fromJson</code> method.</em></p>\n\n<p>Other Resources:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/2303713/how-to-serialize-dom-node-to-json\">How to serialize DOM node to JSON?</a></p>\n\n<p><a href=\"http://stackoverflow.com/a/4816258/402706\">JSON.stringify can't represent circular references</a> </p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p><strong>Circular structure</strong> error occurs when you have a property of the object which is the object itself directly (<code>a -&gt; a</code>) or indirectly (<code>a -&gt; b -&gt; a</code>).</p>\n\n<p>To avoid the error message, tell JSON.stringify what to do when it encounters a circular reference.\nFor example, if you have a person pointing to another person (\"parent\"), which may (or may not) point to the original person, do the following:</p>\n\n<pre><code>JSON.stringify( that.person, function( key, value) {\n  if( key == 'parent') { return value.id;}\n  else {return value;}\n}\n</code></pre>\n\n<p>The second parameter to <code>stringify</code> is a <em>filter function</em>. Here it simply converts the referred object to its ID, but you are free to do whatever you like to break the circular reference.</p>\n\n<p>You can test the above code with the following:</p>\n\n<pre><code>function Person( params) {\n  this.id = params['id'];\n  this.name = params['name']; \n  this.father = null;\n  this.fingers = [];\n  // etc.\n}\n\nvar me = new Person({ id: 1, name: 'Luke'});\nvar him = new Person( { id:2, name: 'Darth Vader'});\nme.father = him; \nJSON.stringify(me); // so far so good\n\nhim.father = me; // time travel assumed :-)\nJSON.stringify(me); // \"TypeError: Converting circular structure to JSON\"\n// But this should do the job:\nJSON.stringify(me, function( key, value) {\n  if(key == 'father') { \n    return value.id;\n  } else {\n    return value;\n  };\n});\n</code></pre>\n\n<p>BTW, I'd choose a different attribute name to \"<code>parent</code>\" since it is a reserved word in many languages (and in DOM). This tends to cause confusion down the road...</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>I found two suitable modules to handle circular references in JSON.</p>\n\n<ol>\n<li>CircularJSON <a href=\"https://github.com/WebReflection/circular-json\" rel=\"nofollow\">https://github.com/WebReflection/circular-json</a> whose output can be used as input to .parse(). It also works in Browsers &amp; Node.js  Also see: <a href=\"http://webreflection.blogspot.com.au/2013/03/solving-cycles-recursions-and-circulars.html\" rel=\"nofollow\">http://webreflection.blogspot.com.au/2013/03/solving-cycles-recursions-and-circulars.html</a></li>\n<li>Isaacs json-stringify-safe <a href=\"https://github.com/isaacs/json-stringify-safe\" rel=\"nofollow\">https://github.com/isaacs/json-stringify-safe</a> which maybe more readable but can't be used for .parse and is only available for Node.js</li>\n</ol>\n\n<p>Either of these should meet your needs. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I used the following to eliminate the circular references:</p>\n\n<pre><code>JS.dropClasses = function(o) {\n\n    for (var p in o) {\n        if (o[p] instanceof jQuery || o[p] instanceof HTMLElement) {\n            o[p] = null;\n        }    \n        else if (typeof o[p] == 'object' )\n            JS.dropClasses(o[p]);\n    }\n};\n\nJSON.stringify(JS.dropClasses(e));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've got a javaascript object definitions which contains a circular reference, that is I have a property that reference to the parent object, I also have functions for this object which I don't want it to be passed through to the server. How would I serialise and deserialise these objects. </p>\n\n<p>I've read that the best method to do this is using stringify from douglas crockford, however, I'm getting a uncaught exception circular reference in chrome.</p>\n\n<pre><code>        function finger(xid, xparent){\n    this.id = xid;\n    this.xparent;\n\n    //other attributes\n    }\n    function arm(xid, xparent){\n    this.id = xid;\n    this.parent = xparent;\n    this.fingers = [];\n    //otherAttributes\n    this.moveArm = function(){\n     //moveArm function details - not included in this testcase\n    alert(\"moveArm Executed\");\n    }\n\n    }\n\n    function person(xid, xparent, xname){\n    this.id = xid;\n    this.parent = xparent;\n    this.name = xname\n    this.arms = []\n\n    this.createArms = function (){\n     this.arms[this.arms.length] = new arm(this.id, this);\n    }\n    }\n\n    function group(xid, xparent){\n    this.id = xid;\n    this.parent = xparent;\n    this.people = [];\n    that = this;\n\n    this.createPerson = function (){\n     this.people[this.people.length] = new person (this.people.length, this, \"someName\");\n    //other commands\n    }\n\n    this.saveGroup = function (){\n     alert(JSON.stringify(that.people));\n}\n\n    }\n</code></pre>\n\n<p>This is a testcase only created for this question there are errors within this code no doubt, but essentially I have objects within objects, and a reference passed to each object to show what the parent object is when the object is created. Each object also contains functions, which I don't want stringified only the property such as the Person.Name. How do I serialise this to be sent to the server and deserialise this (assuming that the same json is passed back).\nx</p>\n\n<p>Also, please note that I'm using jquery as my is library.</p>\n",
            "last_activity_date": 1393616506,
            "question_id": 10392293,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "json",
                "stringify"
            ],
            "title": "Stringify javascript object with circular reference"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Sounds like Apple reduced the execution timeout for javascript in iOS5. This was probably due to general speed improvements in Mobile Safari and also the inclusion of the Nitro engine for UIWebViews.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you want to execute a long running operation in javascript and you are getting anywhere close to the script execution time limit enforced by some browsers, then you will have to break your function into multiple pieces, run one piece, to a very short <code>setTimeout(fn, 1)</code> and then execute the next piece, etc...  Doing it this way, you can run code for hours because it gives other scripts and other events a chance to process.  It sometimes requires a minor amount of code restructuring to be able to do this, but it's always possible with a little work.</p>\n\n<p>The basic concept in pseudo-code would be this:</p>\n\n<pre><code>var state = {};   // set initial state\nvar done = false;\n\nfunction doWork() {\n   // do one increment of work that will never get even close to the browser\n   // execution time limit\n   // update the state object with our current operating state for the next execution\n   // set done = true when we're done processing\n   if (!done) {\n       setTimeout(doWork, 1);\n   }\n}\n\ndoWork();\n</code></pre>\n\n<p>In your specific code, you could do something like this.  You can process 100 latitude points at a time and then do a short setTimeout to do the next 100 and so on.  You can adjust that 100 number to whatever would work best.  The higher the number, the more you do on each timer and the better overall execution time, but the closer you get to the browser script execution limit.  The setTimeout keeps the browser alive (processing other events) and prevents the execution time limit from kicking in.</p>\n\n<pre><code>function test() {\n    var d1 = new Date();\n    var lat1, lon1, lat2, lon2, done = false;;\n    lat1 = -36;\n    lon1 = 174;\n\n    lat2 = lat1;\n    lon2 = lon1;\n\n    function calcGC() {\n        var cntr = 0;\n        while (lat2 &gt; -37 &amp;&amp; cntr &lt; 100) {\n            lat2 = lat2 - 0.001;\n            var stest = \"lat1=\" + lat1 + \",lon1=\" + lon1 + \",lat2=\" + lat2 + \",lon2=\" + lon2 + \"=\" + gc(lat1, lon1, lat2, lon2);\n            cntr++;\n        }\n        // if we have more to go, then call it again on a timeout\n        if (lat2 &gt; -37) {\n            setTimeout(calcGC, 1);\n        } else {\n            var d2 = new Date();\n            var stest = (d2.getTime() - d1.getTime()) / 1000.0 + \"s\";\n            $(\"#lblTest\").html(stest + \"&lt;BR/&gt;\" + $(\"#lblTest\").html());\n        }\n    }\n    calcGC();\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>My feeling is that there is a bug in IOS5 safari, because once I've started to get these errors, I get them all over the place (including the Google mobile search page), with no visible timeout/pause occurring.  Killing Safari and restarting it fixes the problem (until it happens again - perhaps it's a genuine timeout which puts Safari into the broken state initially).</p>\n\n<p>Have you tried killing Safari via the multitasking menu and restarting it?</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I too think it's an IOS5 browser bug. We've got a similar issue. We have a large RIA application with lots of Javascript code, and after a page refresh the browser starts throwing timeout exceptions. iOS4 didn't have this issue. And once the exception starts happening, it goes from bad to worse, until the browser gets totally broken: other unrelated pages throw the exception and refuse to render.</p>\n\n<p>Killing Safari and restarting it makes the problem go away.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>the following test is basically ~1000 math operations and works fine on most PC and android browsers,  and iOS 4.x.  On iOS5 safari (iPhone 4 and iPad 2) we get \"JavaScript: Error undefined JavaScript execution exceeded timeout\".  Any help greatly appreciated thanks.</p>\n\n<pre><code>/** Converts numeric degrees to radians */\nif (typeof (Number.prototype.toRad) === \"undefined\") {\n    Number.prototype.toRad = function () {\n    return this * Math.PI / 180;\n    }\n}\n\nfunction gc(lat1, lon1, lat2, lon2) {\n    // returns the distance in km between a pair of latitude and longitudes\n    var R = 6371; // km\n    var dLat = (lat2 - lat1).toRad();\n    var dLon = (lon2 - lon1).toRad();\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(lat1.toRad()) * Math.cos(lat2.toRad()) *\n        Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = R * c;\n    return d;\n}\n\nfunction test() {\n    var d1 = new Date();\n    var lat1, lon1, lat2, lon2;\n    lat1 = -36;\n    lon1 = 174;\n\n    lat2 = lat1;\n    lon2 = lon1;\n\n    while (lat2 &gt; -37) {\n    lat2 = lat2 - 0.001;\n    var stest = \"lat1=\" + lat1 + \",lon1=\" + lon1 + \",lat2=\" + lat2 + \",lon2=\" + lon2 + \"=\" + gc(lat1, lon1, lat2, lon2);\n\n    }\n    var d2 = new Date();\n    var stest = (d2.getTime() - d1.getTime()) / 1000.0 + \"s\";\n    $(\"#lblTest\").html(stest + \"&lt;BR/&gt;\" + $(\"#lblTest\").html());\n\n}\n</code></pre>\n",
            "last_activity_date": 1319136557,
            "question_id": 7787219,
            "score": 7,
            "tags": [
                "javascript",
                "ios5"
            ],
            "title": "Javascript IOS5 &quot;JavaScript execution exceeded timeout&quot;"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can use the regular expression syntax:</p>\n\n<pre><code>var programProductRegex = /[\\s\\/\\)\\(\\w&amp;-]/;\n</code></pre>\n\n<p>You use forward slashes to delimit the regex pattern.</p>\n\n<p>If you use the RegExp object constructor you need to pass in a string. Because backslashes are special escape characters inside JavaScript strings and they're also escape characters in regular expressions, you need to use two backslashes to do a regex escape inside a string. The equivalent code using a string would then be:</p>\n\n<pre><code>var programProductRegex  = new RegExp(\"[\\\\s\\\\/\\\\)\\\\(\\\\w&amp;-]\");\n</code></pre>\n\n<p>All the backslashes that were in the original regular expression need to be escaped in the string to be correctly interpreted as backslashes.</p>\n\n<p>Of course the first option is better. The constructor is helpful when you obtain a string from somewhere and want to make a regular expression out of it.</p>\n\n<pre><code>var programProductRegex  = new RegExp(userInput);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Enclose your regex with delimiters:</p>\n\n<pre><code>var programProductRegex = new RegExp(/[\\s\\/\\)\\(\\w&amp;-]/);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you are using a String and want to escape characters like <code>(</code>, you need to write <code>\\\\(</code> (meaning writing backslash, then the opening parenthesis => escaping it).</p>\n\n<p>If you are using the <code>RegExp</code> object, you only need one backslash for each character (like <code>\\(</code>)</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>The regex allows chars that are: alphanumeric, space, '-', '_', '&amp;', '()' and '/'</p>\n\n<p>this is the expression </p>\n\n<pre><code>[\\s\\/\\)\\(\\w&amp;-]\n</code></pre>\n\n<p>I have tested this in various online testers and know it works, I just can't get it to work correctly in code. I get sysntax errors with anything I try..  any suggestions?</p>\n\n<pre><code>var programProductRegex = new RegExp([\\s\\/\\)\\(\\w&amp;-]);\n</code></pre>\n",
            "last_activity_date": 1301668862,
            "question_id": 5514349,
            "score": 7,
            "tags": [
                "javascript",
                "regex",
                "escaping"
            ],
            "title": "JavaScript Regex, where to use escape characters?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><strong>UPDATE 2013</strong>\nas of this edit, the File API is supported in all major browsers, and in IE as of version 10</p>\n\n<p><a href=\"http://caniuse.com/#search=file%20api\" rel=\"nofollow\">http://caniuse.com/#search=file%20api</a></p>\n\n<p>You may still wish to use SWFUpload if you still need to support IE9 and under, though at this point it should probably be more of a fallback, since the html5 file api has support on mobile platforms where SWFUpload cannot reach. The html5 file api is based on firefox's file api as noted below.</p>\n\n<p>See also this duplicate question \n<a href=\"http://stackoverflow.com/questions/4112575/client-checking-file-size-using-html5\">Client Checking file size using HTML5?</a></p>\n\n<p><strong>UPDATE:</strong> Firefox has changed their API to this <a href=\"https://developer.mozilla.org/en/DOM/FileReader\" rel=\"nofollow\">https://developer.mozilla.org/en/DOM/FileReader</a></p>\n\n<p>You can do it in firefox like so</p>\n\n<p>html:</p>\n\n<blockquote>\n<pre><code>&lt;form action=\"\" method=\"get\" accept-charset=\"utf-8\"&gt;\n&lt;input type=\"file\" name=\"file\" value=\"\" id=\"file\"&gt;\n&lt;p&gt;&lt;input type=\"submit\" value=\"Continue &amp;rarr;\"&gt;&lt;/p&gt;\n&lt;/form&gt;\n</code></pre>\n</blockquote>\n\n<p>javascript:</p>\n\n<pre><code>var filesize = document.forms[0].file.files[0].fileSize\n</code></pre>\n\n<p>if there's a way to do this in IE, I don't know it. It probably involves activeX or some other such rubbish.</p>\n\n<p>edit:\n I found this <a href=\"http://www.kavoir.com/2009/01/check-for-file-size-with-javascript-before-uploading.html\" rel=\"nofollow\">here</a>, HOW TO DO THIS IN IE</p>\n\n<pre><code>&lt;head&gt;\n&lt;script&gt;\nfunction getSize()\n{\n var myFSO = new ActiveXObject(\"Scripting.FileSystemObject\");\n var filepath = document.upload.file.value;\n var thefile = myFSO.getFile(filepath);\n var size = thefile.size;\n alert(size + \" bytes\");\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;form name=\"upload\"&gt;\n&lt;input type=\"file\" name=\"file\"&gt;\n&lt;input type=\"button\" value=\"Size?\" onClick=\"getSize();\"&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Perhaps you could use <a href=\"http://swfupload.org/\">SWFUpload</a> instead, which is a small Flash application that handles the client side of the upload for you. From their feature list:</p>\n\n<ul>\n<li>Upload multiple files at once by ctrl/shift-selecting in dialog</li>\n<li>Javascript callbacks on all events</li>\n<li><strong>Get file information before upload starts</strong></li>\n<li>Style upload elements with XHTML and css</li>\n<li>Display information while files are uploading using HTML</li>\n<li>No page reloads necessary</li>\n<li>Works on all platforms/browsers that has Flash support.</li>\n<li>Degrades gracefully to normal HTML upload form if Flash or javascript is unavailable</li>\n<li><strong>Control filesize before upload starts</strong></li>\n<li>Only display chosen filetypes in dialog</li>\n<li>Queue uploads, remove/add files before starting upload</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I would like to combine the two different ways of checking file size on client side using javascript. I have tested it on FF/IE/Chrome and it works fine:</p>\n\n<pre><code> &lt;script type=\"text/javascript\"&gt;\n    function checkBrowser()\n    {\n         if(navigator.appName == \"WebTV\")\n        {\n         alert(\"You're using the WebTV browser.\")\n        }\n         if(navigator.appName == \"Netscape\")\n        {\n         checkFileSizeFF();\n        }\n         if(navigator.appName == \"Microsoft Internet Explorer\")\n        {\n         checkFileSizeIE();\n        }\n    }\n    function checkFileSizeFF()\n    {\n        var filesize = document.forms[0].file.files[0].fileSize;\n        alert(filesize/(1024*1024)  + \" MB\");\n    }\n    function checkFileSizeIE()\n    {\n     var myFSO = new ActiveXObject(\"Scripting.FileSystemObject\");\n     var filepath = document.upload.file.value;\n     var thefile = myFSO.getFile(filepath);\n     var size = thefile.size/(1024*1024);\n     alert(size + \"MB\");\n    }\n    &lt;/script&gt;\n\n    &lt;form action=\"\" method=\"get\" accept-charset=\"utf-8\" name=\"upload\"&gt;\n    &lt;input type=\"file\" name=\"file\" value=\"\" id=\"file\"&gt;\n    &lt;p&gt;&lt;input type=\"submit\" value=\"Continue &amp;rarr;\" onclick=\"checkBrowser()\"&gt;&lt;/p&gt;\n    &lt;/form&gt;\n\n\n    &lt;div id=\"example\"&gt;&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How can I validate the file size on the client side using JavaScript? I am using <code>type=file</code> for selecting the file</p>\n",
            "last_activity_date": 1415184307,
            "question_id": 1832415,
            "score": 7,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "how validate file size using HTML and Javascript on client side"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I use YUICompressor exclusively because it intelligently minifies removing whitespace and reducing internal variables down whilst maintaining external refs properly and has yet to break my code and it also does CSS to boot!</p>\n\n<p>After that we serve up on a GZip HTTP connection and voila!</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Changing the server settings to use gzip compression, then you get compression on any text file, javascript, html, etc.  You also won't get the decompression lag that you get with compressed javascript on each page load.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Yahoo's compressor, for a combination of safety, and decent compression.</p>\n\n<p>It uses a real JavaScript parser, rather than using a set of regular expressions. It is able to do the same kind of variable renaming that Packer can, but is much safer. It won't break if you forget to put a semicolon at the end of a function definition.</p>\n\n<p>Packer does have an encoding feature that generates an even smaller file. However, it's only effective if your web server does not support gzip or deflate compression. With gzip / deflate, YUI and Packer generate files that are about the same size.</p>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<h3>Duplicate:</h3>\n\n<blockquote>\n  <ul>\n  <li><a href=\"http://stackoverflow.com/questions/28932/best-javascript-compressor\">Best javascript compressor</a></li>\n  <li><a href=\"http://stackoverflow.com/questions/360818/which-javascript-minification-library-produces-better-results\">Which javascript minification library produces better results?</a></li>\n  <li><a href=\"http://stackoverflow.com/questions/65491/what-is-the-best-method-to-reduce-the-size-of-my-javascript-and-css-files\">What is the best method to reduce the size of my Javascript and CSS files?</a></li>\n  </ul>\n</blockquote>\n\n<hr>\n\n<p>So far I have seen these tools to compress javascript files</p>\n\n<ul>\n<li><a href=\"http://svn.offwhite.net/trac/SmallSharpTools.Packer/wiki\" rel=\"nofollow\">Packer</a></li>\n<li><a href=\"http://www.crockford.com/javascript/jsmin.html\" rel=\"nofollow\">JSMin</a></li>\n<li><a href=\"http://developer.yahoo.com/yui/compressor/\" rel=\"nofollow\">Yahoo Compressor</a></li>\n</ul>\n\n<p>On Packer page there is a section \"Packer versus JSMin\" which says that JSMin can be more efficient than Packer. On Yahoo Compressor page it states that Yahoo compressor is more efficient than JSMin, so it looks like Yahoo compressor might be a best candidate. </p>\n\n<p>What is the best option for compressing javascript files?</p>\n",
            "last_activity_date": 1324291194,
            "question_id": 883184,
            "score": 7,
            "tags": [
                "javascript",
                "compression",
                "minify",
                "jscompress"
            ],
            "title": "Ways to compress/minify javascript files"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>try this.percentage</p>\n\n<p>It's pretty well documented in the highcharts API as well.</p>\n\n<p><a href=\"http://api.highcharts.com/highcharts#plotOptions.series.dataLabels.formatter\" rel=\"nofollow\">http://api.highcharts.com/highcharts#plotOptions.series.dataLabels.formatter</a></p>\n\n<p>EDIT</p>\n\n<p>Since you'd need it for non-stacked series, you'd need to get the total before generating the graph... The function below adds up your values into one variable which you can use in your formatter function later.</p>\n\n<pre><code>function arrayTotal(arr)\n{\n  var total = 0;\n  for (var i = 0, value; value = arr[i]; i++)\n  {\n    total += value;\n  }\n  return total;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You'll have to loop through the data and get the total, and then use the datalabel formatter function to get the percent.</p>\n\n<p>Example here: </p>\n\n<p><a href=\"http://jsfiddle.net/JVNjs/319/\" rel=\"nofollow\">http://jsfiddle.net/JVNjs/319/</a></p>\n\n<pre><code>formatter:function() {\n  var pcnt = (this.y / dataSum) * 100;\n  return Highcharts.numberFormat(pcnt) + '%';\n}\n</code></pre>\n\n<p>edit::</p>\n\n<p>updated example with axis labels:</p>\n\n<p><a href=\"http://jsfiddle.net/JVNjs/320/\" rel=\"nofollow\">http://jsfiddle.net/JVNjs/320/</a></p>\n\n<p><strong>[[EDIT for comments</strong></p>\n\n<p>If you are trying to plot the percent values of multiple series, there are a variety of fundamental problems that arise.</p>\n\n<p>If you are calculating the % of two different data series, and displaying the % value even though you've plotted the raw value, your chart will be misleading and confusing in most cases.</p>\n\n<p>Plotting the data as the percent values directly is the best way to go in that case, and you can add the raw data value as an extra property in the point object if you want to display it in a tool tip or elsewhere ( ie <a href=\"http://jsfiddle.net/JVNjs/735/\" rel=\"nofollow\">http://jsfiddle.net/JVNjs/735/</a> )</p>\n\n<p>If you insist on using the original method on two different series, then you can just create two different variables to calculate against, and check the series name in the formatter to determine which data sum to calculate against.</p>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>I have a simple 1-series bar chart where each bar has a nominal value.\nI can plot this fine with the data labels and axis representing the value for each bar but I'd like to have the data label and axis show the percentage of the total of the series while the nominal value is shown in a tooltip on hover (thus I don't want to convert the data to percentages prior to plotting).</p>\n\n<p>Here is an image showing what I'm after and where I am now:</p>\n\n<p><a href=\"http://jsfiddle.net/WR3rz/\" rel=\"nofollow\">fiddle</a></p>\n\n<p><img src=\"http://i.stack.imgur.com/Jvk30.png\" alt=\"enter image description here\"></p>\n\n<p>Here's what I currently have for axis labels as the formatter function:</p>\n\n<pre><code>plotOptions: {\n            bar: {\n                dataLabels: {\n                    enabled: true,\n                    formatter: function(){\n                        return Highcharts.numberFormat(this.y,0);\n                    }\n                }\n            }\n        }\n</code></pre>\n\n<p>Is there some <code>formatter</code> function variable I can use to achieve this? I know it is easily done on a pie chart but I feel bar charts represent data much better.</p>\n\n<p>EDIT: To put it simply, how do I get the sum of all the series' points? Once I have this it is straightforward to get the percentage: </p>\n\n<p><code>return Highcharts.numberFormat(100 * this.y / this.y.total,0) + \"%\";</code></p>\n\n<p>where <code>this.y.total</code> is the sum of the series.</p>\n",
            "last_activity_date": 1425328292,
            "question_id": 16837209,
            "score": 6,
            "tags": [
                "javascript",
                "charts",
                "highcharts"
            ],
            "title": "Highcharts percentage of total for simple bar chart"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Alternatively, try removing \"data\" and making the URL \"logtime.php?userID=\"+userId</p>\n\n<p>I like Brian's answer better, this answer is just because you're trying to use URL parameter syntax in \"data\" and I wanted to demonstrate where you can use that syntax correctly.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Pass the data like this to the ajax call (<a href=\"http://api.jquery.com/jQuery.ajax/\">http://api.jquery.com/jQuery.ajax/</a>):</p>\n\n<pre><code>data: { userID : userID }\n</code></pre>\n\n<p>And in your PHP do this:</p>\n\n<pre><code>if(isset($_POST['userID']))\n{\n    $uid = $_POST['userID'];\n\n    // Do whatever you want with the $uid\n}\n</code></pre>\n\n<p><code>isset()</code> function's purpose is to check wheter the given variable exists, not to get its value.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>To test if the POST variable has an element called 'userID' you would be better off using array_key_exists .. which actually tests for the existence of the array key not whether its value has been set .. a subtle and probably only semantic difference, but it does improve readability.</p>\n\n<p>and right now your $uid is being set to a boolean value depending whether $__POST['userID'] is set or not ... If I recall from memory you might want to try ...</p>\n\n<pre><code>$uid = (array_key_exists('userID', $_POST)?$_POST['userID']:'guest';\n</code></pre>\n\n<p>Then you can use an identifiable 'guest' user and render your code that much more readable :)</p>\n\n<p>Another point re isset() even though it is unlikely to apply in this scenario, it's worth remembering if you don't want to get caught out later ... an array element can be legitimately set to NULL ... i.e. it can exist, but be as yet unpopulated, and this could be a valid, acceptable, and testable condition. but :</p>\n\n<pre><code>a = array('one'=&gt;1, 'two'=&gt;null, 'three'=&gt;3);\nisset(a['one']) == true\nisset(a['two']) == false\n\narray_key_exists(a['one']) == true\narray_key_exists(a['two']) == true\n</code></pre>\n\n<p>Bw sure you know which function you want to use for which purpose.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Since you're not using JSON as the data type no your AJAX call, I would assume that you can't access the value because the PHP you gave will only ever be true or false. <code>isset</code> is a function to check if something exists and has a value, not to get access to the value. </p>\n\n<p>Change your PHP to be:</p>\n\n<pre><code>$uid = (isset($_POST['userID'])) ? $_POST['userID'] : 0;\n</code></pre>\n\n<p>The above line will check to see if the post variable exists. If it does exist it will set <code>$uid</code> to equal the posted value. If it does not exist then it will set <code>$uid</code> equal to 0. </p>\n\n<p>Later in your code you can check the value of <code>$uid</code> and react accordingly</p>\n\n<pre><code>if($uid==0) {\n    echo 'User ID not found';\n}\n</code></pre>\n\n<p>This will make your code more readable and also follow what I consider to be best practices for handling data in PHP.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am trying to pass a variable from my javascript code over to the server side PHP code. I know this must be done via an ajax call which i believe i have done correctly, however accessing the variable i pass from my ajax into my php is when i run into trouble as i am new to php. Here is my code i have thus far:</p>\n\n<pre><code>$(document).ready(function() {\n\n            $(\".clickable\").click(function() {\n                var userID = $(this).attr('id');\n                //alert($(this).attr('id'));\n                $.ajax({\n                    type: \"POST\",\n                    url: 'logtime.php',\n                    data: \"userID=\" + userID,\n                    success: function(data)\n                    {\n                        alert(\"success!\");\n                    }\n                });\n            });\n        });\n\n&lt;?php //logtime.php\n$uid = isset($_POST['userID']);\n//rest of code that uses $uid\n?&gt;\n</code></pre>\n\n<p>I'm trying to pass my javascript variable \"userID\" to php ($userID), however i've gone wrong somewhere along the road. Thanks for the help!</p>\n",
            "last_activity_date": 1370854716,
            "question_id": 15461786,
            "score": 5,
            "tags": [
                "php",
                "javascript",
                "ajax"
            ],
            "title": "Pass Javascript variable to PHP via ajax"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Have you tried:</p>\n\n<pre><code>disabled=\"disabled\"\n</code></pre>\n\n<p>...on the option element?</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>There is no alternative but to remove the disabled options when developing for iOS. </p>\n\n<p>For iPhone the picture is very clear: all select list are styled as click wheels in all circumstances, and these wheels do not accept disabled options. This is shown in the iPhone Simulator as well as on the actual iPhone.</p>\n\n<p>For iPad, the picture is more confusing. The iPad simulator does grey out the disabled options and really makes them disabled, just as mobile Safari and desktop Safari do. But an <em>actual</em> iPad (iPad 1, running iOS 4.2.1, in my case) will show you the click wheel.</p>\n\n<p>So do something like this early on in your script:</p>\n\n<pre><code>// check for ios device\nnP = navigator.platform;      \nif (nP == \"iPad\" || nP == \"iPhone\" || nP == \"iPod\" || nP == \"iPhone Simulator\" || nP == \"iPad Simulator\"){\n    $('select option[disabled]').remove();\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>Cheat. Replace</p>\n\n<p><code>&lt;option value=\"somevalue\"&gt;Label text&lt;/option&gt;</code></p>\n\n<p>with</p>\n\n<p><code>&lt;optgroup label=\"Label text\"&gt;&lt;/optgroup&gt;</code></p>\n\n<p>and style that with</p>\n\n<p><code>optgroup:empty {\n  ...\n}</code></p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I've implemented a form which needs to disable certain options in a select box using Javascript. It works fine in all browsers but not in Safari on IOS (Desktop Safari does it right).</p>\n\n<p>I've been looking around the web but it seems nobody had this problem so far, so I'm unsure whether it is a Safari IOS limitation or something I'm overlooking.</p>\n\n<p>Thanks for any help,\nMiguel</p>\n",
            "last_activity_date": 1352924960,
            "question_id": 6109085,
            "score": 5,
            "tags": [
                "javascript",
                "ios",
                "mobile-safari"
            ],
            "title": "Disable select option in IOS Safari"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>The URLyou are submitting the request to - is it part of your domain?  </p>\n\n<p>It coulld be because of the <a href=\"http://en.wikipedia.org/wiki/Same_origin_policy\" rel=\"nofollow\">same origin policy</a>.  </p>\n\n<p>See this <a href=\"http://stackoverflow.com/questions/1941340/empty-responsetext-from-xmlhttprequest\">question</a> and <a href=\"http://stackoverflow.com/questions/3076414/ways-to-circumvent-the-same-origin-policy\">possible ways to circumvent it</a> (and this <a href=\"http://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy\" rel=\"nofollow\">article</a>).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>once i had this problem using safari (never tested with chrome, maybe there was the same problem (chrome/safari both use the same rendering-engine (as far as i know) - don't know about the js-parts)). i never found a solution to work around that, but because of it was a small app in a company-wide intranet it wasn't a big problem to not support safari (ff was the default-browser anyway, and ff works).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Have you considered using <a href=\"https://developer.mozilla.org/en-US/docs/WebSockets\" rel=\"nofollow\">WebSockets</a> or <a href=\"https://developer.mozilla.org/en-US/docs/Server-sent_events\" rel=\"nofollow\">server-sent events</a>?</p>\n\n<p><a href=\"http://caniuse.com/websockets\" rel=\"nofollow\">Most major browsers</a> now support the WebSocket protocol, though if your site needs to work in IE 9 or older, or in Android Browser 4.3 or older, you would have to keep the code that uses XMLHttpRequest as a fallback.</p>\n\n<p><a href=\"http://caniuse.com/eventsource\" rel=\"nofollow\">Most of these browsers</a> also support a feature called <em>server-sent events</em>, which unlike WebSockets, can be implemented on the server using a traditional HTTP daemon and CGI/PHP script, though only provides one-way communication.</p>\n\n<p>See also: <a href=\"https://stackoverflow.com/questions/5195452/websockets-vs-server-sent-events-eventsource\">WebSockets vs. Server-Sent events/EventSource</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>try using the responseStream/responseBody property when in IE. I was thinking of doing a similar thing once and ran into the same problem. Unfortunately neither are w3c specs</p>\n\n<p><a href=\"http://www.w3.org/TR/XMLHttpRequest/#the-responsetext-attribute\" rel=\"nofollow\">http://www.w3.org/TR/XMLHttpRequest/#the-responsetext-attribute</a> </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As i understand it, making partial text available on readyState 3 is a non-standard firefox only behaviour that is simply not possible to directly emulate in other browsers, what you might want to do instead is make multiple sequential requests for small chunks of the data rather than one 'streaming' request</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Well, unfortunately every part of XmlHttpRequest (or any web standards) isn't fully implemented in all browsers. But you have several other options for HTTP Streaming:<br>\n  <a href=\"http://en.wikipedia.org/wiki/Push_technology\" rel=\"nofollow\">Wikipedia: Push technology</a><br>\n  <a href=\"http://en.wikipedia.org/wiki/Comet_%28programming%29\" rel=\"nofollow\">Wikipedia: Comet (programming)</a>\n  <a href=\"http://en.wikipedia.org/wiki/Web_Sockets\" rel=\"nofollow\">Wikipedia: Web Sockets</a> (experimental, low browser support)</p>\n\n<p>I saw in your comment that you would like it to be pure AJAX, but I like to suggest possible alternate ways to solutions. You could use a JavaApplet where possible or a Flash Object. For the latter you won't need a flashy and expensive IDE, you can use <a href=\"http://haxe.org/\" rel=\"nofollow\">haXe</a> to create Flash/SWF files and you will feel pretty comfortable with it as you know JavaScript.</p>\n\n<p>Here is a <a href=\"http://haxe.org/doc/flash/chat\" rel=\"nofollow\">Flash/Neko chat example</a> that probably can be adopted to other platforms and usages as well.</p>\n\n<p>I wish you best of good luck.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This worked for me for Chrome, but not IE:</p>\n\n<p>[test.php]:</p>\n\n<pre><code>&lt;?php\nHeader('Content-type: text/plain');\nwhile (1) {\n    echo str_pad('test: '.mt_rand(1000,9999), 2048, ' ');\n    flush();\n    sleep(1);\n}\n</code></pre>\n\n<p>[test.html]:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n    &lt;head&gt;\n        &lt;title&gt;Stream test&lt;/title&gt;\n        &lt;meta charset=\"UTF-8\" /&gt;\n        &lt;script type=\"text/javascript\"&gt;\n            function xmlHttpRequest() {\n                return (function (x,y,i) {\n                    if (x) return new x();\n                    for (i=0; i&lt;y.length; y++) try { \n                    return new ActiveXObject(y[i]);\n                    } catch (e) {}\n                })(\n                    window.XMLHttpRequest, \n                    ['Msxml2.XMLHTTP','Microsoft.XMLHTTP']\n                );\n            };\n            function stream(url) {\n                // Declare the variables we'll be using\n                var xmlHttp = xmlHttpRequest();\n                xmlHttp.open(\"GET\", url, true);\n                var len = 0;\n                xmlHttp.onreadystatechange = function() {\n                if (xmlHttp.status == 200 &amp;&amp; xmlHttp.readyState &gt;=3) {\n                    var text = xmlHttp.responseText;\n                    text = text.substr(len, text.length-len);\n                    len = xmlHttp.responseText.length;\n                    console.log(text);\n                }\n                }\n                xmlHttp.send(null);\n            }           \n            stream('/test.php');\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>YMMV.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As Jaroslav Moravec said, if you set the content-type in the header of the stream to application/x-javascript it works in Safari, Chrome and Firefox. </p>\n\n<p>I have not tested IE.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Chrome has a bug where it will only populate xhr.responseText after a certain number of bytes has been received. There are 2 ways to get around this, </p>\n\n<p>Set the content type of the return to \"application/octet-stream\"</p>\n\n<p>or</p>\n\n<p>Send a prelude of about 2kb to prep the handler.</p>\n\n<p>Either of these methods should make chrome populate the responseText field when readyState == 3.</p>\n\n<p>IE7/8 on the other hand can't do it, you need to resort to long polling or use the cross domain trick with XDomainRequest in IE8, a la <a href=\"http://blogs.msdn.com/b/ieinternals/archive/2010/04/06/comet-streaming-in-internet-explorer-with-xmlhttprequest-and-xdomainrequest.aspx\">MS</a> </p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Setting the content type of the return to \"application/octet-stream\" as suggested by Andrew was a great solution.\nPlus you should use XDomainRequest on IE.</p>\n\n<p>To read the data as they come, you should just use an infinite loop (that stops when readystate = 4 or XDomainRequest.onLoad has been called) with a timeout.</p>\n\n<p>Here's how I would do it:</p>\n\n<pre><code>var i = 0;\nvar returnValue = function() {\n    if (!finished) {\n        setTimeout(returnValue, 100);\n    }\n    var resp = ajax.responseText;\n    var newI = resp.lastIndexOf(\";\") + 1;\n    if (newI &gt; i) {\n        var lines = resp.substring(i, newI).split(\";\");\n        for (var x = 0; x &lt; lines.length; x++) {\n            eval(lines[x]);\n        }\n        i = newI;\n    }\n}\n</code></pre>\n\n<p>Note: some says using eval is risky, I claim that's not where any risk really come from.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To expand on Andrew's answer, this is the cross-browser solution I came up with.</p>\n\n<p>Works correctly in 99% of browsers, namely <strong>IE \u2265 8, Chrome, Firefox, and Safari</strong>, sending incremental events as soon as data is received by the browser (but see the notes below.)</p>\n\n<pre><code>if (/MSIE [8-9]/.test(navigator.appVersion)) {\n    var get = new XDomainRequest()\n    get.onprogress = handleData\n    get.onload = handleData\n} else {\n    var get = new XMLHttpRequest()\n    get.onreadystatechange = handleData\n}\nget.open('get', '/example/url')\nget.send()\n\nfunction handleData() {\n    if (get.readyState != null &amp;&amp; (get.readyState &lt; 3 || get.status != 200)) {\n        return\n    }\n    // process incremental data found in get.responseText\n}\n</code></pre>\n\n<p>IE 8\u20139 will start populating responseText after 2kB of data, so if that's not ok, you should send an initial padding of 2kB.</p>\n\n<p>Chrome needs either that, or <code>Content-Type: application/octet-stream</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to \"streaming\" (from server to client) in Javascript by ajax (by XmlHttpRequest (=xhr). I am using modified handleResponse function described in\n<a href=\"http://stackoverflow.com/questions/1112413/cross-browser-implementation-of-http-streaming-push-ajax-pattern\">http://stackoverflow.com/questions/1112413/cross-browser-implementation-of-http-streaming-push-ajax-pattern</a></p>\n\n<pre><code>function handleResponse() {\nif (http.readyState != 4 &amp;&amp; http.readyState != 3)\n    return;\nif (http.readyState == 3 &amp;&amp; http.status != 200)\n    return;\nif (http.readyState == 4 &amp;&amp; http.status != 200) {\n    clearInterval(pollTimer);\n    inProgress = false;\n}\n// In konqueror http.responseText is sometimes null here...\nif (http.responseText === null)\n    return;\n\nwhile (prevDataLength != http.responseText.length) {\n    if (http.readyState == 4  &amp;&amp; prevDataLength == http.responseText.length)\n        break;\n    prevDataLength = http.responseText.length;\n    var response = http.responseText.substring(nextLine);\n    var lines = response.split('\\n');\n    nextLine = nextLine + response.lastIndexOf('\\n') + 1;\n    if (response[response.length-1] != '\\n')\n        lines.pop();\n\n    for (var i = 0; i &lt; lines.length; i++) {\n        // ...\n    }\n}\n\nif (http.readyState == 4 &amp;&amp; prevDataLength == http.responseText.length)\n    clearInterval(pollTimer);\n\ninProgress = false;\n}\n</code></pre>\n\n<p>With php script, which flushes me data (without ajax it really flushes data to browser while progressing)</p>\n\n<p>I have no problem in Firefox, but Google Chrome and IE give me an empty responseText while xhr.readyState equals to 3. I found that problem described in the Internet, but it didn't give me any solution.</p>\n\n<p>Do you know, how to pass by this implementation problem in Chrome? (w3c says, that responseText can't be NULL in readyState==3 - Chrome implemented this rule, but gives only empty string)</p>\n\n<p>And if you don't know, do you know any working solution in some products? (opensource frameworks, librararies etc.)</p>\n\n<p>Thanks a lot for your ideas.</p>\n\n<p><strong>Edit:</strong>\nThe workaround is in creating iframe, call the script to iframe and flush data here and grab data by javascript from iframe. But this is not ajax solution. I really would like to see pure ajax solution.</p>\n",
            "last_activity_date": 1393416736,
            "question_id": 3880381,
            "score": 5,
            "tags": [
                "javascript",
                "ajax",
                "google-chrome",
                "streaming",
                "xmlhttprequest"
            ],
            "title": "XmlHttpRequest.responseText while loading (readyState==3) in Chrome"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The only other way I can think of is modify Firefox settings.  I assume you can't do this.</p>\n\n<p>EDIT:</p>\n\n<p>I cobbled together a client-side solution based on the data URI idea.  It uses a \nmodified version of a <a href=\"http://www.webtoolkit.info/javascript-base64.html\" rel=\"nofollow\">base64 encoder</a> and a technique for \n<a href=\"http://web.archive.org/web/20071103070418/mgran.blogspot.com/2006/08/downloading-binary-streams-with.html\" rel=\"nofollow\">binary XMLHTTPrequests</a>  The script downloads the PDF file, then generates and places a data URI link dynamically using the base64 encoder.</p>\n\n<p>It should be useful when you want octet stream encoding but don't have access to the server (as seems to be the case for the OP).</p>\n\n<p>Note, I just posted <a href=\"http://www.prism.gatech.edu/~mflaschen3/PDFNewWindow/PDFNewWindow.html\" rel=\"nofollow\">an example</a> using <a href=\"http://www.google.com/ads/hunts.pdf\" rel=\"nofollow\">hunts.pdf</a>, which the OP was testing with.</p>\n\n<pre><code>/**\n*\n*  Base64 encode / decode\n*  http://www.webtoolkit.info/\n*\n**/\n\nvar Base64 = {\n\n    // private property\n    _keyStr : \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n\n    // public method for encoding\n    encode : function (input) {\n    \tvar output = \"\";\n    \tvar chr1, chr2, chr2raw, chr3, chr3raw, enc1, enc2, enc3, enc4;\n    \tvar i = 0;\n\n    \t//input = Base64._utf8_encode(input);\n\n    \twhile (i &lt; input.length) {\n\n    \t\tchr1 = input.charCodeAt(i++) &amp; 0xFF;\n    \t\tchr2 = isNaN(chr2raw = input.charCodeAt(i++)) ? NaN : (chr2raw &amp; 0xFF);\n    \t\tchr3 = isNaN(chr3raw = input.charCodeAt(i++)) ? NaN : (chr3raw &amp; 0xFF);\n\n    \t\tenc1 = chr1 &gt;&gt; 2;\n    \t\tenc2 = ((chr1 &amp; 3) &lt;&lt; 4) | (chr2 &gt;&gt; 4);\n    \t\tenc3 = ((chr2 &amp; 15) &lt;&lt; 2) | (chr3 &gt;&gt; 6);\n    \t\tenc4 = chr3 &amp; 63;\n\n    \t\tif (isNaN(chr2)) {\n    \t\t\tenc3 = enc4 = 64;\n    \t\t} else if (isNaN(chr3)) {\n    \t\t\tenc4 = 64;\n    \t\t}\n\n    \t\toutput = output +\n    \t\tthis._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n    \t\tthis._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n\n    \t}\n\n    \treturn output;\n    }\n}\n\n\n\n// http://web.archive.org/web/20071103070418/mgran.blogspot.com/2006/08/downloading-binary-streams-with.html\n//fetches BINARY FILES synchronously using XMLHttpRequest\n\nload_url = function(url) {\n    var req = new XMLHttpRequest();\n    req.open('GET',url,false);\n    //XHR binary charset opt by Marcus Granado 2006 [http://mgran.blogspot.com]\n    req.overrideMimeType('text/plain; charset=x-user-defined');\n    req.send(null);\n\n    if (req.status != 200){\n    alert(req.status);\n    return '';\n    }\n    return req.responseText;\n}\n\n    function getDataURI(filename)\n    {\n    var file =  load_url(filename);\n    var uueFile = Base64.encode(file);\n    var uri = 'data:application/octet-stream;base64,' + encodeURIComponent(uueFile);\n    return uri;\n    }\n\n window.addEventListener(\"load\",\n                      function()\n                      {\n                        var link = getDataURI(\"foo.pdf\");\n                        document.getElementById(\"myDiv\").innerHTML += '&lt;a href=\"' + link + '\"&gt;&lt;code&gt;' + link +  '&lt;/code&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;';\n                      }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you can output the file to the client in base64, you could use data uris to for the download.</p>\n\n<pre><code>location.href = 'data:application/octet-stream;base64,' + appendPDFContentHere\nOR\n&lt;a href=\"data:application/octet-stream;base64,appendPDFContentHere\"&gt;pdf&lt;/a&gt;\n</code></pre>\n\n<p>This will only work in non-IE browsers however but as you requested for firefox, this should work nicely.</p>\n\n<p>EDIT:</p>\n\n<p>Both of the examples below contain the bytes to make a PNG. If you click the first one you can view the image as you normally would in a browser. however, if you click the 2nd link, it will force you to download the image. Save it as a .png and you will see they are the exact same images. The only difference in the two links is the mime type</p>\n\n<p><a href=\"http://tinyurl.com/ckcv9b\" rel=\"nofollow\" title=\"display &quot;image\">view image</a> (<a href=\"http://preview.tinyurl.com/ckcv9b\" rel=\"nofollow\" title=\"preview\">preview shortened url</a>) -- mime type: image/png</p>\n\n<p><a href=\"http://tinyurl.com/da2edb\" rel=\"nofollow\" title=\"download image\">download image</a> (<a href=\"http://preview.tinyurl.com/da2edb\" rel=\"nofollow\" title=\"preview\">preview shortened url</a>) -- mime type: application/octet-stream</p>\n\n<p>You asked what you put in place of <em>appendPDFContentHere</em> and the answer is the base64-encoded bytes that make up the PDF. I used this online <a href=\"http://www.motobit.com/util/base64-decoder-encoder.asp\" rel=\"nofollow\" title=\"base64 encoder\">base64 encoder</a> to encode the image used in the example.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Is there a way to force a save as dialog box for  www.example.com/example.pdf in ff? (i can't change the headers)</p>\n",
            "last_activity_date": 1410599594,
            "question_id": 833068,
            "score": 5,
            "tags": [
                "javascript",
                "firefox",
                "save"
            ],
            "title": "How to force save as dialog box in firefox besides changing headers?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I am not 100% sure but I think it can`t be done (at least until android 2.2) from javascript. If you are using phonegap you can use this here: <a href=\"https://github.com/phonegap/phonegap/wiki/How-to-show-and-hide-soft-keyboard-in-Android\" rel=\"nofollow\">https://github.com/phonegap/phonegap/wiki/How-to-show-and-hide-soft-keyboard-in-Android</a></p>\n",
                    "is_accepted": true,
                    "score": 1
                },
                {
                    "body": "<p>this question is similar to \n<a href=\"http://stackoverflow.com/questions/8858094/how-to-focus-an-input-field-on-android-browser-through-javascript-or-jquery\">How to focus an input field on Android browser through javascript or jquery</a></p>\n\n<p>Anyway, as you already have a click event to work with, this should sort you out:</p>\n\n<pre><code>$(document).ready(function() {\n    $('#field').click(function(e){ $(this).focus(); });\n\n    $('#button').click(function(e) {\n        $('#field').trigger('click');\n    });\n})     \n</code></pre>\n\n<p>Of course you DO need a click event triggering this. Just focussing without an event doesnt seem to work. The above works for me on the standard browser on android 4 and shows the soft keyboard.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>In a web-page I've got a search field. I've added a \"clear\" button so that users can clear the search field and start again. As a convenience, I focus the search field's text box and the cursor does appear in the box. However the soft keyboard does not seem to show up on android devices that use the default browser. In iOS and Opera Mobile it works as I'd expect.</p>\n\n<p>Is there an additional method I can call that will cause the keyboard to show on Android's browser so the user can start typing right away?</p>\n\n<pre><code>function clear_search() {\n    if($('#searchinput').val()) {\n        $('#searchinput').val('');\n    }\n    $('#searchinput').focus();\n}\n</code></pre>\n",
            "last_activity_date": 1394518230,
            "question_id": 6020400,
            "score": 4,
            "tags": [
                "javascript",
                "jquery",
                "android",
                "html5",
                "android-softkeyboard"
            ],
            "title": "Showing Android&#39;s soft keyboard when a field is .focus()&#39;d using javascript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>If you want to use a regex, you can wrap each character of the string in square-brackets.  Then you only have a few characters to escape.</p>\n\n<p>But a better option might be to truncate the target strings so the length matches your search string and check for equality.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>What you have will work as long as you first escape the regex characters in your pattern. Below is one example from <a href=\"http://simonwillison.net/2006/Jan/20/escape/\" rel=\"nofollow\">Simon Willison\u2019s blog</a>:</p>\n\n<pre><code>RegExp.escape = function(text) {\n  if (!arguments.callee.sRE) {\n    var specials = [\n      '/', '.', '*', '+', '?', '|',\n      '(', ')', '[', ']', '{', '}', '\\\\'\n    ];\n    arguments.callee.sRE = new RegExp(\n      '(\\\\' + specials.join('|\\\\') + ')', 'g'\n    );\n  }\n  return text.replace(arguments.callee.sRE, '\\\\$1');\n}\n</code></pre>\n\n<p>You could then implement your code as:</p>\n\n<pre><code>likeExpr = RegExp.escape(likeExpr);\nvar match = new RegEx(likeExpr.replace(\"%\", \".*\").replace(\"_\", \".\")).exec(str) != null;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>Here's a function I use, based on <a href=\"http://us2.php.net/manual/en/function.preg-quote.php\" rel=\"nofollow\">PHP's preg_quote function</a>:</p>\n\n<pre><code>function regex_quote(str) {\n  return str.replace(new RegExp(\"([\\\\.\\\\\\\\\\\\+\\\\*\\\\?\\\\[\\\\^\\\\]\\\\$\\\\(\\\\)\\\\{\\\\}\\\\=\\\\!\\\\&lt;\\\\&gt;\\\\|\\\\:\\\\-])\", \"g\"), \"\\\\$1\");\n}\n</code></pre>\n\n<p>So your line would now be:</p>\n\n<pre><code>var match = new RegEx(regex_quote(likeExpr).replace(\"%\", \".*\").replace(\"_\", \".\")).exec(str) != null;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I was looking for an answer the same question and came up with this after reading Kip's reply:</p>\n\n<pre><code>String.prototype.like = function(search) {\n    if (typeof search !== 'string' || this === null) {return false; }\n    // Remove special chars\n    search = search.replace(new RegExp(\"([\\\\.\\\\\\\\\\\\+\\\\*\\\\?\\\\[\\\\^\\\\]\\\\$\\\\(\\\\)\\\\{\\\\}\\\\=\\\\!\\\\&lt;\\\\&gt;\\\\|\\\\:\\\\-])\", \"g\"), \"\\\\$1\");\n    // Replace % and _ with equivalent regex\n    search = search.replace(/%/g, '.*').replace(/_/g, '.');\n    // Check matches\n    return RegExp('^' + search + '$', 'gi').test(this);\n}\n</code></pre>\n\n<p>You can then use it as follows (note that it ignores UPPER/lower case):</p>\n\n<pre><code>var url = 'http://www.mydomain.com/page1.aspx';\nconsole.log(url.like('%mydomain.com/page_.asp%')); // true\n</code></pre>\n\n<p><strong>NOTE 29/11/2013:</strong> Updated with <code>RegExp.test()</code> performance improvement as per Lucios comment below.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In Chris Van Opstal's answer you should use replaceAll instead of replace to replace all occurrances of '%' and '_'. \nReference to how to do replaceAll - <a href=\"http://stackoverflow.com/questions/1144783/replacing-all-occurrences-of-a-string-in-javascript\">here</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I emulate the SQL keyword <code>LIKE</code> in JavaScript?</p>\n\n<p>For those of you who don't know what <code>LIKE</code> is, it's a very simple regex which only supports the wildcards <code>%</code>, which matches 0 or more characters, and <code>_</code> which matches exactly one character.</p>\n\n<p>However, it's not just possible to do something like:</p>\n\n<pre><code>var match = new RegEx(likeExpr.replace(\"%\", \".*\").replace(\"_\", \".\")).exec(str) != null;\n</code></pre>\n\n<p>...because the pattern might contain dots, stars and any other special regex characters.</p>\n",
            "last_activity_date": 1391491541,
            "question_id": 1314045,
            "score": 3,
            "tags": [
                "javascript",
                "sql",
                "regex",
                "like"
            ],
            "title": "Emulating SQL LIKE in JavaScript"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<pre><code>if (date1.getTime() &gt; date2.getTime()) {\n    alert(\"The first date is after the second date!\");\n}\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Date\">Reference to Date object</a></p>\n",
                    "is_accepted": true,
                    "score": 113
                },
                {
                    "body": "<p>You can use the getTime() method on a Date object to get the timestamp (in milliseconds) relative to January 1, 1970.  If you convert your two dates into integer timestamps, you can then compare the difference by subtracting them.  The result will be in milliseconds so you just divide by 1000 for seconds, then 60 for minutes, etc.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>JavaScript's dates can be compared using the same comparison operators the rest of the data types use: >, &lt;, &lt;=, >=, ==, !=, ===, !===. </p>\n\n<p>If you have two dates A and B, then A &lt; B if A is further back into the past than B.</p>\n\n<p>But it sounds like what you're having trouble with is turning a string into a date. You do that by simply passing the string as an argument for a new Date:</p>\n\n<pre><code>var someDate = new Date(\"12/03/2008\");\n</code></pre>\n\n<p>or, if the string you want is the value of a form field, as it seems it might be:</p>\n\n<pre><code>var someDate = new Date(document.form1.Textbox2.value);\n</code></pre>\n\n<p>Edit:</p>\n\n<p>Should that string not be something that JavaScript recognizes as a date, you will still get a Date object, but it will be \"invalid\". Any comparison with another date will return false. When converted to a string it will become \"Invalid Date\". Its getTime() function will return NaN, and calling isNaN() on the date itself will return true; that's the easy way to check if a string is a valid date.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I would rather use the Date valueOf method instead of === or !==</p>\n\n<p>Seems like === is comparing internal Object's references and nothing concerning date.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could try adding the following script code to implement this:</p>\n\n<pre><code>if(CompareDates(smallDate,largeDate,'-') == 0) {\n    alert('Selected date must be current date or previous date!');\nreturn false;\n}\n\nfunction CompareDates(smallDate,largeDate,separator) {\n    var smallDateArr = Array();\n    var largeDateArr = Array(); \n    smallDateArr = smallDate.split(separator);\n    largeDateArr = largeDate.split(separator);  \n    var smallDt = smallDateArr[0];\n    var smallMt = smallDateArr[1];\n    var smallYr = smallDateArr[2];  \n    var largeDt = largeDateArr[0];\n    var largeMt = largeDateArr[1];\n    var largeYr = largeDateArr[2];\n\n    if(smallYr&gt;largeYr) \n        return 0;\nelse if(smallYr&lt;=largeYr &amp;&amp; smallMt&gt;largeMt)\n    return 0;\nelse if(smallYr&lt;=largeYr &amp;&amp; smallMt==largeMt &amp;&amp; smallDt&gt;largeDt)\n    return 0;\nelse \n    return 1;\n}  \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>new Date('1945/05/09').valueOf() &lt; new Date('2011/05/09').valueOf()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can try this code for checking which date value is the highest from two dates with a format MM/DD/YYYY:</p>\n\n<pre><code>function d_check() {\n    var dl_sdt=document.getElementIdBy(\"date_input_Id1\").value; //date one\n    var dl_endt=document.getElementIdBy(\"date_input_Id2\").value; //date two\n\n    if((dl_sdt.substr(6,4)) &gt; (dl_endt.substr(6,4))) {\n        alert(\"first date is greater\");\n        return false;\n    }\n\n    else if((((dl_sdt.substr(0,2)) &gt; (dl_endt.\n        substr(0,2)))&amp;&amp;(frdt(dl_sdt.substr(3,2)) &gt; (dl_endt.substr(3,2))))||\n        (((dl_sdt.substr(0,2)) &gt; (dl_endt.substr(0,2)))&amp;&amp;\n        ((dl_sdt.substr(3,2)) &lt; (dl_endt.substr(3,2))))||\n        (((dl_sdt.substr(0,2)) == (dl_endt.substr(0,2)))&amp;&amp;((dl_sdt.substr(3,2)) &gt; \n        (dl_endt.substr(3,2))))) {\n            alert(\"first date is greater\");\n        return false;\n    }\n\n    alert(\"second date is digher\");\n    return true;\n}\n</code></pre>\n\n<p>/*for checking this....create a form and give id's to two date inputs.The date format should be mm/dd/yyyy or mm-dd-yyyy or mm:dd:yyyy or mm.dd.yyyy like this. */</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>function fn_DateCompare(DateA, DateB) {     // this function is good for dates &gt; 01/01/1970\n\n    var a = new Date(DateA);\n    var b = new Date(DateB);\n\n    var msDateA = Date.UTC(a.getFullYear(), a.getMonth()+1, a.getDate());\n    var msDateB = Date.UTC(b.getFullYear(), b.getMonth()+1, b.getDate());\n\n    if (parseFloat(msDateA) &lt; parseFloat(msDateB))\n      return -1;  // lt\n    else if (parseFloat(msDateA) == parseFloat(msDateB))\n      return 0;  // eq\n    else if (parseFloat(msDateA) &gt; parseFloat(msDateB))\n      return 1;  // gt\n    else\n      return null;  // error\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>    function validateform()\n    {\n     if (trimAll(document.getElementById(\"&lt;%=txtFromDate.ClientID %&gt;\").value) != \"\") {\n   if (!isDate(trimAll(document.getElementById(\"&lt;%=txtFromDate.ClientID %&gt;\").value)))\n         msg = msg + \"&lt;li&gt;Please enter valid From Date in mm/dd/yyyy format\\n\";\n   else {\n       var toDate = new Date();\n       var txtdate = document.getElementById(\"&lt;%=txtFromDate.ClientID %&gt;\").value;\n       var d1 = new Date(txtdate)\n   if (Date.parse(txtdate) &gt; Date.parse(toDate)) {                   \n         msg = msg + \"&lt;li&gt;From date must be less than or equal to today's date\\n\";\n   }\n  }\n}\n\n     if (trimAll(document.getElementById(\"&lt;%=txtToDate.ClientID %&gt;\").value) != \"\") {\n            if (!isDate(trimAll(document.getElementById(\"&lt;%=txtToDate.ClientID %&gt;\").value)))\n                msg = msg + \"&lt;li&gt;Please enter valid To Date in mm/dd/yyyy format\\n\";\n            else {\n                var toDate = new Date();\n                var txtdate = document.getElementById(\"&lt;%=txtToDate.ClientID %&gt;\").value;\n                var d1 = new Date(txtdate)\n\n                if (Date.parse(txtdate) &gt; Date.parse(toDate)) {\n                    msg = msg + \"&lt;li&gt;To date must be less than or equal to today's date\\n\"; \n                  }\n                 }\n                }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/492994/compare-2-dates-with-javascript\">Compare 2 dates with JavaScript</a>  </p>\n</blockquote>\n\n\n\n<p>I would like to compare two dates in javascript.  I have been doing some research, but all I can find is how to return the current date.  I want to compare 2 separate dates, not related to today.  How do I do that. </p>\n\n<pre><code>var startDate = Date(document.form1.Textbox2);\n</code></pre>\n",
            "last_activity_date": 1354847553,
            "question_id": 338463,
            "score": 53,
            "tags": [
                "javascript",
                "datetime"
            ],
            "title": "How do I do a Date comparison in Javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You could do it with the <code>toFixed</code> function, but it's <a href=\"http://www.codingforums.com/showthread.php?t=102421\">buggy in IE</a>. If you want a reliable solution, look at my answer <a href=\"http://stackoverflow.com/questions/2221167/round-number-in-javascript-to-n-decimal-places/2909252#2909252\">here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>Try <a href=\"http://www.w3schools.com/jsref/jsref_tofixed.asp\"><code>toFixed</code></a> instead of <code>toPrecision</code>.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<pre><code>float_num.toFixed(2);\n</code></pre>\n\n<p><strong>Note:</strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed\"><code>toFixed()</code></a> will round or pad with zeros if necessary to meet the specified length.</p>\n",
                    "is_accepted": false,
                    "score": 65
                }
            ],
            "body": "<p>I wanted to display a number to 2 decimal places.</p>\n\n<p>I thought I could use <code>toPrecision(2)</code> in JavaScript .</p>\n\n<p>However, if the number is <code>0.05</code>, I get <code>0.0500</code>. I'd rather it stay the same.</p>\n\n<p>See it on <a href=\"http://jsbin.com/eguvo/edit\">JSbin</a>.</p>\n\n<p>What is the best way to do this?</p>\n\n<p>I can think of coding a few solutions, but I'd imagine (I hope) something like this is built in?</p>\n",
            "last_activity_date": 1411797214,
            "question_id": 3163070,
            "score": 50,
            "tags": [
                "javascript",
                "floating-point",
                "precision"
            ],
            "title": "JavaScript displaying a float to 2 decimal places"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>value is javascript to use jQuery language you should use</p>\n\n<pre><code>$('#pid').val()\n</code></pre>\n\n<p>to get and</p>\n\n<pre><code>$('#pid').val('value')\n</code></pre>\n\n<p>to set it.</p>\n\n<p><a href=\"http://api.jquery.com/val/\">http://api.jquery.com/val/</a></p>\n\n<p>Your second issue.</p>\n\n<p>I never tried the automatic set of html value of load method, sorry. For sure, you can do something like</p>\n\n<pre><code>$('#subtotal').load( 'compz.php?prodid=' + x + '&amp;qbuys=' + y, function(response){ $('#subtotal').val(response);\n});\n</code></pre>\n\n<p>Test it cause I am handwrite-coding ;)</p>\n\n<p><a href=\"http://api.jquery.com/load/\">http://api.jquery.com/load/</a></p>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>I think you want to set the response of the call to the URL <code>'compz.php?prodid=' + x + '&amp;qbuys=' + y</code> as value of the textbox right? If so, you have to do something like:</p>\n\n<pre><code>$.get('compz.php?prodid=' + x + '&amp;qbuys=' + y, function(data) {\n    $('#subtotal').val(data);\n});\n</code></pre>\n\n<p>Reference: <a href=\"http://api.jquery.com/jQuery.get/\"><code>get()</code></a></p>\n\n<p>You have two errors in your code:</p>\n\n<ul>\n<li><p><a href=\"http://api.jquery.com/load/\"><code>load()</code></a> puts the <strong>HTML</strong> returned from the Ajax into the specified element:</p>\n\n<blockquote>\n  <p>Load data from the server and place the returned HTML into the matched element.</p>\n</blockquote>\n\n<p>You cannot set the value of a textbox with that method.</p></li>\n<li><p><code>$(selector).load()</code> returns the a jQuery <em>object</em>. By default an object is converted to <code>[object Object]</code> when treated as string.</p></li>\n</ul>\n\n<p><strong>Further clarification</strong>:</p>\n\n<p>Assuming your URL returns <code>5</code>.  </p>\n\n<p>If your HTML looks like:</p>\n\n<pre><code>&lt;div id=\"foo\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>then the result of</p>\n\n<pre><code>$('#foo').load('/your/url');\n</code></pre>\n\n<p>will be</p>\n\n<pre><code>&lt;div id=\"foo\"&gt;5&lt;/div&gt;\n</code></pre>\n\n<p>But in your code, you have an input element. <strong>Theoretically</strong> (it is not valid HTML and does not work as you noticed), an equivalent call would result in</p>\n\n<pre><code>&lt;input id=\"foo\"&gt;5&lt;/input&gt;\n</code></pre>\n\n<p>But you actually need</p>\n\n<pre><code>&lt;input id=\"foo\" value=\"5\" /&gt;\n</code></pre>\n\n<p>Therefore, you cannot use <code>load()</code>. You have to use another method, get the response and set it as value yourself. </p>\n",
                    "is_accepted": true,
                    "score": 69
                },
                {
                    "body": "<p>I would like to point out to you that .val() also works with selects to select the current selected value.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>How do I properly load the a certain value into a textbox using jquery?Tried the one below but I get the <code>[object Object]</code> as output. Please enlighten me on this, I'm new to jquery.</p>\n\n<pre><code> proc = function(x,y) {\n        var str1 = $('#pid').value;\n        var str2 = $('#qtytobuy').value;\n     var str3= $('#subtotal').load('compz.php?prodid=' + x + '&amp;qbuys=' + y);\n    $('#subtotal').val(str3);\n    }\n</code></pre>\n\n<p>And here's the html form:</p>\n\n<pre><code>&lt;form name=\"yoh\" method=\"get\"&gt; \nProduct id: &lt;input type=\"text\" name=\"pid\"  value=\"\"&gt;&lt;br/&gt;\n\nQuantity to buy:&lt;input type=\"text\" name=\"qtytobuy\"  value=\"\" onkeyup=\"proc(document.yoh.pid.value, this.value);\"&gt;&lt;/br&gt;\n\nSubtotal:&lt;input type=\"text\" name=\"subtotal\" id=\"subtotal\"  value=\"\"&gt;&lt;/br&gt;\n&lt;div id=\"compz\"&gt;&lt;/div&gt;\n\n&lt;/form&gt;\n</code></pre>\n",
            "last_activity_date": 1289910752,
            "question_id": 4193916,
            "score": 47,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "how to set textbox value in jquery"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>That is because in the second case, the actual date objects are compared, and two objects are never equal to each other. Coerce them to number:</p>\n\n<pre><code> alert( +startDate2 == +startDate3 ); // true\n</code></pre>\n\n<p>If you want a more explicity conversion to number, use either:</p>\n\n<pre><code> alert( startDate2.getTime() == startDate3.getTime() ); // true\n</code></pre>\n\n<p>or</p>\n\n<pre><code> alert( Number(startDate2) == Number(startDate3) ); // true\n</code></pre>\n\n<p>Oh, a reference to the spec: \u00a711.9.3 <a href=\"http://ecma262-5.com/ELS5_HTML.htm#Section_11.9.3\">The Abstract Equality Comparison Algorithm</a> which basically says when comparing objects, <code>obj1 == obj2</code> is true only if they refer to the same object, otherwise the result is false.</p>\n",
                    "is_accepted": true,
                    "score": 47
                },
                {
                    "body": "<p>Compare dates using <code>getTime()</code> returning number of milliseconds from epoch (i.e. a number):</p>\n\n<pre><code>var startDate1 = new Date(\"02/10/2012\");\nvar startDate2 = new Date(\"01/10/2012\");\nvar startDate3 = new Date(\"01/10/2012\");\nalert(startDate1.getTime() &gt; startDate2.getTime()); // true\nalert(startDate2.getTime() == startDate3.getTime()); //true\n</code></pre>\n\n<p>Also consider using <code>Date</code> constructor taking explicit year/month/date number rather then relying on string representation (see: <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date/parse\">Date.parse()</a>). And remember that dates in JavaScript are always represented using client (browser) timezone.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>you can compare the actual miliseconds : </p>\n\n<pre><code>alert(startDate2.getTime() == startDate3.getTime());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You do not need to use the getTime method- you can subtract a date object from another date object. It will return the milliseconds difference(negative, if the second is a later date)</p>\n\n<pre><code>var startDate1 = new Date(\"02/10/2012\");\nvar startDate2 = new Date(\"01/10/2012\");\n\nvar diff= (startDate1 -startDate2)\n</code></pre>\n\n<p>// evaluates to 0 if the dates have the same timestamp</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>When comparing date objects in Javascript I found that even comparing the same date does not return true.</p>\n\n<pre><code> var startDate1 = new Date(\"02/10/2012\");\n var startDate2 = new Date(\"01/10/2012\");\n var startDate3 = new Date(\"01/10/2012\");\n alert(startDate1&gt;startDate2); // true\n alert(startDate2==startDate3); //false\n</code></pre>\n\n<p>How could I compare the equality of these dates? I am interested in utilizing the native <code>Date</code> object of JS and not any third party libraries since its not appropriate to use a third party JS just to compare the dates.</p>\n",
            "last_activity_date": 1412144247,
            "question_id": 7606798,
            "score": 30,
            "tags": [
                "javascript"
            ],
            "title": "JavaScript Date Object Comparison"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>The mouseleave event differs from mouseout in the way it handles event bubbling. If mouseout were used in this example, then when the mouse pointer moved out of the Inner element, the handler would be triggered. This is usually undesirable behavior. The mouseleave event, on the other hand, only triggers its handler when the mouse leaves the element it is bound to, not a descendant. So in this example, the handler is triggered when the mouse leaves the Outer element, but not the Inner element.</p>\n</blockquote>\n\n<p>Source: <a href=\"http://api.jquery.com/mouseleave/\">http://api.jquery.com/mouseleave/</a></p>\n\n<p>Surprisingly there are lots of results @ <a href=\"http://www.google.com/search?sourceid=chrome&amp;ie=UTF-8&amp;q=jquery+mouseleave+mouseout+difference\">http://www.google.com/search?sourceid=chrome&amp;ie=UTF-8&amp;q=jquery+mouseleave+mouseout+difference</a></p>\n",
                    "is_accepted": false,
                    "score": 46
                },
                {
                    "body": "<p>jQuery API doc:</p>\n\n<p><code>mouseout</code></p>\n\n<blockquote>\n  <p>This event type can cause many headaches due to event bubbling. For instance, when the mouse pointer moves out of the Inner element in this example, a mouseout event will be sent to that, then trickle up to Outer. This can trigger the bound mouseout handler at inopportune times. See the discussion for .mouseleave() for a useful alternative.</p>\n</blockquote>\n\n<p>So <code>mouseleave</code> is a custom event, which was designed because of the above reason.</p>\n\n<p><a href=\"http://api.jquery.com/mouseleave/\" rel=\"nofollow\">http://api.jquery.com/mouseleave/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There can be times when <code>mouseout</code> is a better choice than <code>mouseleave</code>. </p>\n\n<p>For example, let's say you've created a tooltip that you want displayed next to an element on <code>mouseenter</code>. You use <code>setTimeout</code> to prevent the tooltip from popping up instantly. You clear the timeout on <code>mouseleave</code> using <code>clearTimeout</code> so if the mouse leaves the tooltip won't be displayed. <b>This will work 99% of the time.</b></p>\n\n<p>But now let's say the element you have a tooltip attached to is a button with a <code>click</code> event, and let's also assume this button prompts the user with either a <code>confirm</code> or <code>alert</code> box. The user clicks the button and the <code>alert</code> fires. The user pressed it fast enough that your tooltip didn't have a chance to pop up (so far so good).</p>\n\n<p>The user presses the <code>alert</code> box OK button, and the mouse leaves the element. But since the browser page is now in a locked state, no javascript will fire until the OK button has been pressed, meaning your <code>mouseleave</code> event <b>WILL NOT FIRE</b>. After the user presses OK the tooltip will popup (which is not what you wanted).</p>\n\n<p>Using <code>mouseout</code> in this case would be the appropriate solution because it will fire.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>What is the difference between jQuery's mouseout() and mouseleave()?</p>\n",
            "last_activity_date": 1404236684,
            "question_id": 4258615,
            "score": 30,
            "tags": [
                "javascript",
                "jquery",
                "mouseout",
                "mouseleave"
            ],
            "title": "What is the difference between jQuery&#39;s mouseout() and mouseleave()?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I would guess that they are using the History API. By listening to popstate </p>\n\n<pre><code>window.addEventListener(\"popstate\", function(e) { ... });\n</code></pre>\n\n<p>you can show a warning before allowing doing anything stupid.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Use <code>pagehide</code> event (<a href=\"https://developer.apple.com/library/ios/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\" rel=\"nofollow\">reference</a>)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there an alternative method to use instead of onbeforeunload in mobile-safari? I've noticed that Google was able to capture the <code>onbeforeunload</code> event in mobile-safari. Has anyone figured out how they are doing so?</p>\n\n<p>Google was able to do so using their gmail client. Create a new message... type something in the text area... hit the browser back button. It pops up a warning message. I used an iPad to do my test.</p>\n",
            "last_activity_date": 1421490639,
            "question_id": 6205989,
            "score": 29,
            "tags": [
                "javascript",
                "ios",
                "mobile-safari",
                "onbeforeunload"
            ],
            "title": "Is there an alternative method to use onbeforeunload in mobile safari?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I think this is what you want: </p>\n\n<pre><code>document.getElementById('tag-id').innerHTML = '&lt;ol&gt;&lt;li&gt;html data&lt;/li&gt;&lt;/ol&gt;';\n</code></pre>\n\n<p>Keep in mind that innerHTML is not accessable for all types of tags when using IE. (table elements for example)</p>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>Using JQuery would take care of that browser inconsistency. With the jquery library included in your project simply write:</p>\n\n<pre><code>$('#yourDivName').html('yourtHTML');\n</code></pre>\n\n<p>You may also consider using:</p>\n\n<pre><code>$('#yourDivName').append('yourtHTML');\n</code></pre>\n\n<p>This will add your gallery as the last item in the selected div. Or:</p>\n\n<pre><code>$('#yourDivName').prepend('yourtHTML');\n</code></pre>\n\n<p>This will add it as the first item in the selected div.</p>\n\n<p>See the JQuery docs for these functions:</p>\n\n<ul>\n<li><a href=\"http://api.jquery.com/append/\">http://api.jquery.com/append/</a></li>\n<li><a href=\"http://api.jquery.com/prepend/\">http://api.jquery.com/prepend/</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>I am trying to insert a chunk of HTML into a div. I want to see if plain JavaScript way is faster than using jQuery. Unfortunately, I forgot how to do it the 'old' way. :P</p>\n\n<pre><code>var test2 = function(){\n    var cb = function(html){\n        var t1 = document.getElementById(\"test2\");\n        var d = document.createElement(\"div\");\n        d.id =\"oiio\";\n        d.innerHtml = html;\n        t1.appendChild(d);\n        console.timeEnd(\"load data with javascript\");\n    };\n    console.time(\"load data with javascript\");\n    $.get(\"test1.html\", cb);\n}\n</code></pre>\n\n<p>what am i doing wrong here guys?</p>\n\n<p><strong>edit</strong>:<br>\n Someone asked which is faster, jquery or plain js so i wrote up a test:<br>\n<a href=\"http://jsperf.com/html-insertion-js-vs-jquery\">http://jsperf.com/html-insertion-js-vs-jquery</a></p>\n\n<p>plain js is 10% faster </p>\n",
            "last_activity_date": 1392437017,
            "question_id": 584751,
            "score": 29,
            "tags": [
                "javascript"
            ],
            "title": "Inserting HTML into a div"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Please read the FAQ on how to ask good questions : <a href=\"http://stackoverflow.com/faq#howtoask\">http://stackoverflow.com/faq#howtoask</a></p>\n\n<p>Assuming you have HTML like the below</p>\n\n<pre><code>&lt;div id='thediv'&gt;&lt;/div&gt;\n</code></pre>\n\n<p>If you want to modify the style attribute of this div, you'd use </p>\n\n<pre><code>document.getElementById('thediv').style.[ATTRIBUTE] = '[VALUE]'\n</code></pre>\n\n<p>Replace [ATTRIBUTE] with the style attribute you want. Remember to remove '-' and make the following letter capitol case. </p>\n\n<p><strong>Examples</strong></p>\n\n<pre><code>document.getElementById('thediv').style.display = 'none'; //changes the display\ndocument.getElementById('thediv').style.paddingLeft = 'none'; //removes padding\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It's almost correct.</p>\n\n<p>Since the <code>-</code> is a javascript operator, you can't really have that in property names. If you were setting, <code>border</code> or something single-worded like that instead, your code would work just fine.</p>\n\n<p>However, the thing you need to remember for <code>padding-top</code>, and for any hyphenated attribute name, is that in javascript, you remove the hyphen, and make the next word uppercase, so in your case that'd be <code>paddingTop</code>.</p>\n\n<p>There are some other exceptions. JavaScript has some reserved words, so you can't set <code>float</code> like that, for instance. Instead, in some browsers you need to use <code>cssFloat</code> and in others <code>styleFloat</code>. It is for discrepancies like this that it is recommended that you use a framework such as jQuery, that handles browser incompatibilities for you...</p>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>In addition to other answers, if you want to use the dash notition for style properties, you can also use:</p>\n\n<pre><code>document.getElementById(\"xyz\").style[\"padding-top\"] = \"10px\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 68
                },
                {
                    "body": "<p>I resolve similar problem with:</p>\n\n<pre><code>document.getElementById(\"xyz\").style.padding = \"10px 0 0 0\";\n</code></pre>\n\n<p>Hope that helps.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>document.getElementById(\"xyz\").style.padding-top = '10px';\n</code></pre>\n\n<p>will be</p>\n\n<pre><code>document.getElementById(\"xyz\").style[\"paddingTop\"] = '10px';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I hav a certain style sheet for a div. Now i want to modify one attribute of div dynamically using js.</p>\n\n<p>How can i do it?</p>\n\n<pre><code>document.getElementById(\"xyz\").style.padding-top = \"10px\";\n</code></pre>\n\n<p>Is this correct?</p>\n",
            "last_activity_date": 1408048065,
            "question_id": 5191478,
            "score": 28,
            "tags": [
                "javascript",
                "html",
                "css"
            ],
            "title": "Changing element style attribute dynamically using JavaScript"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>No easier way. You need to make a loop and push elements into the array.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You can do it like this:</p>\n\n<pre><code>function fillArray(value, len) {\n  if (len == 0) return [];\n  var a = [value];\n  while (a.length * 2 &lt;= len) a = a.concat(a);\n  if (a.length &lt; len) a = a.concat(a.slice(0, len - a.length));\n  return a;\n}\n</code></pre>\n\n<p>It doubles the array in each iteration, so it can create a really large array with few iterations.</p>\n\n<p>Note: You can also improve your function a lot by using <code>push</code> instead of <code>concat</code>, as <code>concat</code> will create a new array each iteration:</p>\n\n<pre><code>function fillArray(value, len) {\n  var arr = [];\n  for (var i = 0; i &lt; len; i++) {\n    arr.push(value);\n  }\n  return arr;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>You can also extend the functionality of Array like so:</p>\n\n<pre><code>Array.prototype.fill = function(val){\n    for (var i = 0; i &lt; this.length; i++){\n        this[i] = val;\n    }\n    return this;\n};\n// used like:\nvar arry = new Array(5)\u200b.fill(2);\n// or\nvar arry = new Array(5);\narry.fill(2);\n\n\n\u200bconsole.log(arry);\u200b //[2, 2, 2, 2, 2] \n</code></pre>\n\n<p>I should note that extending the functionality of built-in objects can cause problems if you are working with 3rd-party libraries. Always weigh this into your decisions. </p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>This function creates an array of (length) elements where each element equals (value) as long as (value) is an integer or string of an integer. Any decimal numbers will be truncated. If you do want decimal numbers, replace <strong>\"parseInt(</strong>\" with \"<strong>parseFloat(</strong>\"</p>\n\n<pre><code>function fillArray(length, intValue) {\n     var vals = (new Array(length + 1)).join(intValue + '|').split('|').slice(0,length);\n     for(var i = 0; i &lt; length; i += 1) {\n         vals[i] = parseInt(vals[i]);\n     }\n     return vals;\n}\n</code></pre>\n\n<p>Examples:</p>\n\n<pre><code>fillArray(5, 7) // returns [7,7,7,7,7]\nfillArray(5, 7.5) // returns [7,7,7,7,7]\nfillArray(5, 200) // returns [200,200,200,200,200]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>[c] * n</code> can be written as:</p>\n\n<pre><code>Array(n+1).join(1).split('').map(function(){return c;})\n</code></pre>\n\n<p>so for <code>[2] * 5</code></p>\n\n<pre><code>Array(6).join(1).split('').map(function(){return 2;})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<pre><code>&gt;&gt;&gt; Array.apply(null, new Array(10)).map(function(){return 5})\n[5, 5, 5, 5, 5, 5, 5, 5, 5, 5]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>you can try:</p>\n\n<pre><code>Array(6).join('a').split(''); // returns ['a','a','a','a','a'] (5 times)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I had problems with the mentioned methods when I use an array like</p>\n\n<pre><code>var array = ['foo', 'bar', 'foobar'];\nvar filled = array.fill(7);\n\n//filled should be ['foo', 'bar', 'foobar', 'foo', 'bar', 'foobar', 'foo']\n</code></pre>\n\n<p>To get this I'm using:</p>\n\n<pre><code>Array.prototype.fill = function(val){\n    var l = this.length;\n    if(l &lt; val){\n        for(var i = val-1-l; i &gt;= 0; i--){\n            this[i+l] = this[i % l];\n        }\n    }\n    return this;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Another one-liner:</p>\n\n<pre><code>Array.prototype.map.call([]+Array(5+1),function(){ return '2'; })\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In <a href=\"http://lodash.com/\" rel=\"nofollow\">lodash</a> it's not so bad:</p>\n\n<pre><code>_.flatten(_.times(5, function () { return [2]; }));\n// [2, 2, 2, 2, 2]\n</code></pre>\n\n<p><strong>EDIT</strong>: Even better:</p>\n\n<pre><code>_.times(5, _.constant(2));\n// [2, 2, 2, 2, 2]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>In Python</p>\n\n<pre><code>[2] * 5\n</code></pre>\n\n<p>where, <code>[2]</code> is a list, gives</p>\n\n<pre><code>[2,2,2,2,2]\n</code></pre>\n\n<p>Does there exist an easy way to do this with an array in Javascript?</p>\n\n<p>I wrote the following function to do it; but is there something shorter or better. </p>\n\n<pre><code>        var repeatelem = function(elem, n){\n            // returns an array with element elem repeated n times.\n            var arr = [];\n            for (var i=0; i&lt;=n; i++) {\n                arr = arr.concat(elem);\n            };\n            return arr;\n        };\n</code></pre>\n\n<p>Thank you.</p>\n",
            "last_activity_date": 1416263209,
            "question_id": 12503146,
            "score": 24,
            "tags": [
                "javascript",
                "arrays"
            ],
            "title": "Create an array with same element repeated multiple times in javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Chrome <a href=\"http://code.google.com/p/chromium/issues/detail?id=67743\">does not support localhost for CORS requests</a> (an open bug since 2010).</p>\n\n<p>To get around this you can use a domain like <code>lvh.me</code> (which points at 127.0.0.1 just like localhost) or start chrome with the <code>--disable-web-security</code> flag (assuming you're just testing).</p>\n",
                    "is_accepted": true,
                    "score": 42
                },
                {
                    "body": "<p>The problem real problem is that if we set -Allow- for all request (OPTIONS &amp; POST), Chrome will cancel it.\nThe following code works for me with POST to LocalHost with Chrome</p>\n\n<pre><code>&lt;?php\nif (isset($_SERVER['HTTP_ORIGIN'])) {\n    //header(\"Access-Control-Allow-Origin: {$_SERVER['HTTP_ORIGIN']}\");\n    header(\"Access-Control-Allow-Origin: *\");\n    header('Access-Control-Allow-Credentials: true');    \n    header(\"Access-Control-Allow-Methods: GET, POST, OPTIONS\"); \n}   \nif ($_SERVER['REQUEST_METHOD'] == 'OPTIONS') {\n    if (isset($_SERVER['HTTP_ACCESS_CONTROL_REQUEST_METHOD']))\n        header(\"Access-Control-Allow-Methods: GET, POST, OPTIONS\");         \n    if (isset($_SERVER['HTTP_ACCESS_CONTROL_REQUEST_HEADERS']))\n        header(\"Access-Control-Allow-Headers:{$_SERVER['HTTP_ACCESS_CONTROL_REQUEST_HEADERS']}\");\n\n    exit(0);\n} \n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am stuck with this CORS problem, even though I set the server (nginx/node.js) with the appropriate headers.</p>\n\n<p>I can see in Chrome Network pane -> Response Headers:</p>\n\n<pre><code>Access-Control-Allow-Origin:http://localhost\n</code></pre>\n\n<p>which should do the trick.</p>\n\n<p>Here's the code that I now use to test:</p>\n\n<pre><code>var xhr = new XMLHttpRequest();\nxhr.onload = function() {\n   console.log('xhr loaded');\n};\nxhr.open('GET', 'http://stackoverflow.com/');\nxhr.send();\n</code></pre>\n\n<p>I get</p>\n\n<pre><code>XMLHttpRequest cannot load http://stackoverflow.com/. Origin http://localhost is not allowed by Access-Control-Allow-Origin.\n</code></pre>\n\n<p>I suspect it's a problem in the client script and not server configuration...</p>\n",
            "last_activity_date": 1411592947,
            "question_id": 10883211,
            "score": 24,
            "tags": [
                "javascript",
                "html5",
                "xmlhttprequest",
                "xmlhttprequest-level2"
            ],
            "title": "Deadly CORS when http://localhost is the origin"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I am pretty sure this is because of the way different JavaScript engines keep track of object properties internally. Take this for example:</p>\n\n<pre><code>var obj = {\n\"1\" : \"test\",\n\"0\" : \"test 2\"\n};\n\nfor(var key in obj) {\n    console.log(key);\n}\n</code></pre>\n\n<p>This will log 1, 0 in e.g. Firefox, but 0, 1 in V8 (Chrome and NodeJS).\nSo if you need to be deterministic, you will probably have to iterate through each key store it in an array, sort the array and then stringify each property separately by looping through that array.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Some things you may want to consider: \nWhat does it mean for an object to be different? \nAre you looking to see if a property on on that object has changed? \nWho is interested in 'knowing' about these changes? \nDo you want to know immediately if an objects property has changed? </p>\n\n<p>You could make the properties on that object 'observable' properties and when that property changes you can fire an event and whoever is interested can subscribe to those property changes. That way you know immediately what has changed and you can do whatever you want with that information. Knockout.js use this approach. This way you do not have to resort to 'nasty' object comparisons</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's an implementation of a deterministic JSON.stringify() that I wrote (uses <a href=\"http://underscorejs.org/\" rel=\"nofollow\">Underscore.js</a>). It converts (non-array) objects recursively into sorted key-value pairs (as Arrays), then stringifies those. Original coderwall post <a href=\"https://coderwall.com/p/u2nc8w\" rel=\"nofollow\">here</a>.</p>\n\n<p>Stringify:</p>\n\n<pre><code>function stringify(obj) {\n  function flatten(obj) {\n    if (_.isObject(obj)) {\n      return _.sortBy(_.map(\n          _.pairs(obj),\n          function(p) { return [p[0], flatten(p[1])]; }\n        ),\n        function(p) { return p[0]; }\n      );\n    }\n    return obj;\n  }\n  return JSON.stringify(flatten(obj));\n}\n</code></pre>\n\n<p>Parse:</p>\n\n<pre><code>function parse(str) {\n  function inflate(obj, pairs) {\n     _.each(pairs, function(p) {\n      obj[p[0]] = _.isArray(p[1]) ?\n        inflate({}, p[1]) :\n        p[1];\n    });\n    return obj;\n  }\n  return inflate({}, JSON.parse(str));\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>These days I've been playing with the deterministic way to stringify an object and I've written the ordered object stringify to JSON, that solves the above noted dilemma: <a href=\"http://stamat.wordpress.com/javascript-object-ordered-property-stringify/\" rel=\"nofollow\">http://stamat.wordpress.com/javascript-object-ordered-property-stringify/</a></p>\n\n<p>Also I was playing with custom hash table implementations which is also related to the topic: <a href=\"http://stamat.wordpress.com/javascript-quickly-find-very-large-objects-in-a-large-array/\" rel=\"nofollow\">http://stamat.wordpress.com/javascript-quickly-find-very-large-objects-in-a-large-array/</a></p>\n\n<pre><code>//SORT WITH STRINGIFICATION\n\nvar orderedStringify = function(o, fn) {\n    var props = [];\n    var res = '{';\n    for(var i in o) {\n        props.push(i);\n    }\n    props = props.sort(fn);\n\n    for(var i = 0; i &lt; props.length; i++) {\n        var val = o[props[i]];\n        var type = types[whatis(val)];\n        if(type === 3) {\n            val = orderedStringify(val, fn);\n        } else if(type === 2) {\n            val = arrayStringify(val, fn);\n        } else if(type === 1) {\n            val = '\"'+val+'\"';\n        }\n\n        if(type !== 4)\n            res += '\"'+props[i]+'\":'+ val+',';\n    }\n\n    return res.substring(res, res.lastIndexOf(','))+'}';\n};\n\n//orderedStringify for array containing objects\nvar arrayStringify = function(a, fn) {\n    var res = '[';\n    for(var i = 0; i &lt; a.length; i++) {\n        var val = a[i];\n        var type = types[whatis(val)];\n        if(type === 3) {\n            val = orderedStringify(val, fn);\n        } else if(type === 2) {\n            val = arrayStringify(val);\n        } else if(type === 1) {\n            val = '\"'+val+'\"';\n        }\n\n        if(type !== 4)\n            res += ''+ val+',';\n    }\n\n    return res.substring(res, res.lastIndexOf(','))+']';\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Recently I've had a similar use case.\nFollowing code has no dependencies and works for all browsers:</p>\n\n<pre><code>function stringify(obj) {\n  var type = Object.prototype.toString.call(obj);\n\n  // IE8 &lt;= 8 does not have array map\n  var map = Array.prototype.map || function map(callback) {\n    var ret = [];\n    for (var i = 0; i &lt; this.length; i++) {\n      ret.push(callback(this[i]));\n    }\n    return ret;\n  };\n\n  if (type === '[object Object]') {\n    var pairs = [];\n    for (var k in obj) {\n      if (!obj.hasOwnProperty(k)) continue;\n      pairs.push([k, stringify(obj[k])]);\n    }\n    pairs.sort(function(a, b) { return a[0] &lt; b[0] ? -1 : 1 });\n    pairs = map.call(pairs, function(v) { return '\"' + v[0] + '\":' + v[1] });\n    return '{' + pairs + '}';\n  }\n\n  if (type === '[object Array]') {\n    return '[' + map.call(obj, function(v) { return stringify(v) }) + ']';\n  }\n\n  return JSON.stringify(obj);\n};\n</code></pre>\n\n<p><code>stringify([{b: {z: 5, c: 2, a: {z: 1, b: 2}}, a: 1}, [1, 2, 3]])</code></p>\n\n<p><code>'[{\"a\":1,\"b\":{\"a\":{\"b\":2,\"z\":1},\"c\":2,\"z\":5}},[1,2,3]]'</code></p>\n\n<p><code>stringify([{a: 1, b:{z: 5, c: 2, a: {b: 2, z: 1}}}, [1, 2, 3]])</code></p>\n\n<p><code>'[{\"a\":1,\"b\":{\"a\":{\"b\":2,\"z\":1},\"c\":2,\"z\":5}},[1,2,3]]'</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Using Underscore or Lodash:</p>\n\n<pre><code>var sortByKeys = function(obj) {\n  if (!_.isObject(obj)) {\n    return obj;\n  }\n  var sorted = {};\n  _.each(_.keys(obj).sort(), function(key) {\n    sorted[key] = sortByKeys(obj[key]);\n  });\n  return sorted;\n};\n\nvar sortedStringify = function() {\n    arguments[0] = sortByKeys(arguments[0]);\n    return JSON.stringify.apply(this, arguments);\n};\n</code></pre>\n\n<p>Works in latest Chrome and Firefox.</p>\n\n<p>JSFiddle here: <a href=\"http://jsfiddle.net/stchangg/ruC22/2/\" rel=\"nofollow\">http://jsfiddle.net/stchangg/ruC22/2/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>JavaScript keys are intrinsically unordered. You have to write your own Stringifier to make this work, so I did.</p>\n\n<p>Usage:</p>\n\n<pre><code>JSONc14n.stringify(obj)\n</code></pre>\n\n<p>Source:</p>\n\n<pre><code>var JSONc14n = {\n    stringify: function(obj){\n        var json_string,\n            keys,\n            key,\n            i;\n\n        switch(this.get_type(obj)){\n            case \"[object Array]\":\n                json_string = \"[\";\n                for(i = 0; i &lt; obj.length; i++){\n                    json_string += this.stringify(obj[i]);\n                    if(i &lt; obj.length - 1) json_string += \",\";\n                }\n                json_string += \"]\";\n                break;\n            case \"[object Object]\":\n                json_string = \"{\";\n                keys = Object.keys(obj);\n                keys.sort();\n                for(i = 0; i &lt; keys.length; i++){\n                    json_string += '\"' + keys[i] + '\":' + this.stringify(obj[keys[i]]);\n                    if(i &lt; keys.length - 1) json_string += \",\";\n                }\n                json_string += \"}\";\n                break;\n            case \"[object Number]\":\n                json_string = obj.toString();\n                break;\n            default:\n                json_string = '\"' + obj.toString().replace(/[\"\\\\]/g,\n                    function(_this){\n                        return function(character){\n                            return _this.escape_character.apply(_this, [character]);\n                        };\n                    }(this)\n                ) + '\"';\n        }\n        return json_string;\n    },\n    get_type: function(thing){\n        if(thing===null) return \"[object Null]\";\n        return Object.prototype.toString.call(thing);\n    },\n    escape_character: function(character){\n        return this.escape_characters[character];\n    },\n    escape_characters: {\n        '\"': '\\\\\"',\n        '\\\\': '\\\\\\\\'\n    }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>According to MDN documentation for JSON.stringify, <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/JSON/stringify\">https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/JSON/stringify</a> :</p>\n\n<blockquote>\n  <p>Properties of non-array objects are not guaranteed to be stringified\n  in any particular order. Do not rely on ordering of properties within\n  the same object within the stringification.</p>\n</blockquote>\n\n<p>I had hoped to determine if an object changed by caching a stringified version of the object, then comparing it to a subsequently stringified version of the object.  That seemed much simpler than recursively iterating through the object and doing comparisons.  The problem is that because the JSON.stringify function is not deterministic, I could technically get a different string when I stringify the same object.</p>\n\n<p>What other options do I have?  Or do I have to write a nasty compare function to determine object equality?</p>\n",
            "last_activity_date": 1399509127,
            "question_id": 8931967,
            "score": 24,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "Is there a deterministic equivalent of JSON.stringify?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p><strong>No</strong> - the object approach is JavaScript's answer to this. There is no problem with this provided your function expects an object rather than separate params.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>There is a way to come close to what you want, but it is based on the output of <a href=\"http://es5.github.com/#x15.3.4.2\"><code>Function.prototype.toString</code> <em><sup>[ES5]</sup></em></a>, which is implementation dependent to some degree, so it might not be cross-browser compatible.</p>\n\n<p>The idea is to parse the parameter names from the string representation of the function so that you can associate the properties of an object with the corresponding parameter.</p>\n\n<p>A function call could then look like</p>\n\n<pre><code>func(a, b, {someArg: ..., someOtherArg: ...});\n</code></pre>\n\n<p>where <code>a</code> and <code>b</code> are positional arguments and the last argument is an object with named arguments.</p>\n\n<p>For example:</p>\n\n<pre><code>var parameterfy = (function() {\n    var pattern = /function[^(]*\\(([^)]*)\\)/;\n\n    return function(func) {\n        // fails horribly for parameterless functions ;)\n        var args = func.toString().match(pattern)[1].split(/,\\s*/);\n\n        return function() {\n            var named_params = arguments[arguments.length - 1];\n            if (typeof named_params === 'object') {\n                var params = [].slice.call(arguments, 0, -1);\n                if (params.length &lt; args.length) {\n                    for (var i = params.length, l = args.length; i &lt; l; i++) {\n                        params.push(named_params[args[i]]);\n                    }\n                    return func.apply(this, params);\n                }\n            }\n            return func.apply(null, arguments);\n        };\n    };\n}());\n</code></pre>\n\n<p>Which you would use as:</p>\n\n<pre><code>var foo = parameterfy(function(a, b, c) {\n    console.log('a is ' + a, ' | b is ' + b, ' | c is ' + c);     \n});\n\nfoo(1, 2, 3); // a is 1  | b is 2  | c is 3\nfoo(1, {b:2, c:3}); // a is 1  | b is 2  | c is 3\nfoo(1, {c:3}); // a is 1  | b is undefined  | c is 3\nfoo({a: 1, c:3}); // a is 1  | b is undefined  | c is 3 \n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/9U328/\"><strong>DEMO</strong></a></p>\n\n<p>There are some <strong>drawbacks</strong> to this approach (you have been warned!):</p>\n\n<ul>\n<li>If the last argument is an object, it is treated as a \"named argument objects\"</li>\n<li>You will always get as many arguments as you defined in the function, but some of them might have the value <code>undefined</code> (that's different from having no value at all). That means you cannot use <code>arguments.length</code> to test how many arguments have been passed.</li>\n</ul>\n\n<hr>\n\n<p>Instead of having a function creating the wrapper, you could also have a function which accepts a function and various values as arguments, such as</p>\n\n<pre><code>call(func, a, b, {posArg: ... });\n</code></pre>\n\n<p>or even extend <code>Function.prototype</code> so that you could do:</p>\n\n<pre><code>foo.execute(a, b, {posArg: ...});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Another way would be to use attributes of a suitable object, e.g. like so:</p>\n\n<pre><code>function plus(a,b) { return a+b; };\n\nPlus = { a: function(x) { return { b: function(y) { return plus(x,y) }}}, \n         b: function(y) { return { a: function(x) { return plus(x,y) }}}};\n\nsum = Plus.a(3).b(5);\n</code></pre>\n\n<p>Of course for this made up example it is somewhat meaningless. But in cases where the function looks like</p>\n\n<pre><code>do_something(some_connection_handle, some_context_parameter, some_value)\n</code></pre>\n\n<p>it might be more useful. It also could be combined with \"parameterfy\" idea to create such an object out of an existing function in a generic way. That is for each parameter it would create a member that can evaluate to a partial evaluated version of the function.</p>\n\n<p>This idea is of course related to Sch\u00f6nfinkeling aka Currying.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://www.bobjs.com\" rel=\"nofollow\">bob.js</a> can convert your regular function to the one that accepts named arguments, in one line:</p>\n\n<pre><code>func = bob.fn.namedArgFunction(func); \n</code></pre>\n\n<p><strong>MORE DETAILS</strong>:</p>\n\n<p>I think some readers may need a clarification on the above solution. So, here is the missing part.</p>\n\n<p><strong>Function definition will take regular arguments</strong> (not an object), so you will have a clear, intention-revealing code:</p>\n\n<pre><code>var func = function(a, b) {\n    return a + b;\n}\n</code></pre>\n\n<p>Without call to bob.js, the caller will have to pass <code>a</code> and <code>b</code> as regular arguments. However, if you execute the code provided as an initial solution:</p>\n\n<pre><code>func = bob.fn.namedArgFunction(func);\n</code></pre>\n\n<p>Then, <strong>you can pass an object as the argument</strong>, instead of <code>a</code> and <code>b</code>:</p>\n\n<pre><code>var arg = { a: 1, b: 2 };\nvar sum = func(arg); //sum is 3 (=1+2).\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If you want to make it clear what each of the parameters are, rather than just calling </p>\n\n<pre><code>someFunction(70, 115);\n</code></pre>\n\n<p>why not do the following</p>\n\n<pre><code>var width = 70, height = 115;\nsomeFunction(width, height);\n</code></pre>\n\n<p>sure, it's an extra line of code, but it wins on readability.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This issue has been a pet peeve of mine for some time. I am a seasoned programmer with many languages under my belt. One of my favorite languages that I have had the pleasure to use is Python. Python supports named parameters without any trickery.... Since I started using Python (some time ago) everything became easier. I believe that every language should support named parameters, but that just isn't the case.</p>\n\n<p>Lot's of people say to just use the \"Pass an object\" trick so that you have named parameters. </p>\n\n<pre><code>/**\n * My Function\n *\n * @param {Object} arg1 Named arguments\n */\nfunction myFunc(arg1) { }\n\nmyFunc({ param1 : 70, param2 : 175});\n</code></pre>\n\n<p>And that works great, except..... when it comes to most IDEs out there, a lot of us developers rely on type / argument hints within our IDE. I personally use PHP Storm (Along with other JetBrains IDEs like PyCharm for python and AppCode for Objective C)</p>\n\n<p>And the biggest problem with using the \"Pass an object\" trick is that when you are calling the function, the IDE gives you a single type hint and that's it... How are we supposed to know what parameters and types should go into the arg1 object?</p>\n\n<p><img src=\"http://i.stack.imgur.com/kMSdm.jpg\" alt=\"I have no idea what parameters should go in arg1\"></p>\n\n<p>So... the \"Pass an object\" trick doesn't work for me... It actually causes more headaches with having to look at each function's docblock before I know what parameters the function expects.... Sure, it's great for when you are maintaining existing code, but it's horrible for writing new code.</p>\n\n<p>Well, this is the technique I use.... Now, there may be some issues with it, and some developers may tell me I'm doing it wrong, and I have an open mind when it comes to these things... I am always willing to look at better ways of accomplishing a task... So, if there is an issue with this technique, then comments are welcome.</p>\n\n<pre><code>/**\n * My Function\n *\n * @param {string} arg1 Argument 1\n * @param {string} arg2 Argument 2\n */\nfunction myFunc(arg1, arg2) { }\n\nvar arg1, arg2;\nmyFunc(arg1='Param1', arg2='Param2');\n</code></pre>\n\n<p>This way, I have the best of both worlds... new code is easy to write as my IDE gives me all the proper argument hints... And, while maintaining code later on, I can see at a glance, not only the value passed to the function, but also the name of the argument. The only overhead I see is declaring your argument names as local variables to keep from polluting the global namespace. Sure, it's a bit of extra typing, but trivial compared to the time it takes to look up docblocks while writing new code or maintaining existing code.</p>\n\n<p><img src=\"http://i.stack.imgur.com/rRIbf.jpg\" alt=\"Now, I have all the parameters and types when creating new code\"></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In ECMAScript 5 (JavaScript is implementation of <a href=\"http://en.wikipedia.org/wiki/ECMAScript\" rel=\"nofollow\">ECMAScript</a> standard), which adopted on this moment in all major browsers, there is no possibility to use the named parameters. But in the browsers with support of ECMAScript 6 (for example Firefox since 15 version, there is a page about <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters#Browser_compatibility\" rel=\"nofollow\">browser compatibility information</a>), there is a such possibility. So in the future this feature will be available in all major browsers.</p>\n\n<p>This feature of new reallisation have a name \"Default parameters\" (<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters\" rel=\"nofollow\">more information on MDN</a>).</p>\n\n<p>A usage of it is very simple, for example:</p>\n\n<pre><code>function setBackgroundColor(element, color = 'yellow') \n</code></pre>\n\n<p>It means that if invocation of <code>setBackgroundColor</code> won't be pass <code>color</code> param, then it will be set as <code>yellow</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I find the named parameters feature in C# quite useful in some cases.</p>\n\n<pre><code>calculateBMI(70, height: 175);\n</code></pre>\n\n<p>What if I want this in <strong>javascript</strong>? </p>\n\n<hr>\n\n<p>What I don't want is -</p>\n\n<pre><code>myFunction({ param1 : 70, param2 : 175});\n\nfunction myFunction(params){\n    //check if params is an object\n    //check if the parameters I need are non-null\n    //blah-blah\n}\n</code></pre>\n\n<p>That approach I've already used.  Is there another way?</p>\n\n<p><sub>I'm okay using any library do this. (Or somebody can point me to one that already does)</sub></p>\n",
            "last_activity_date": 1426068924,
            "question_id": 11796093,
            "score": 21,
            "tags": [
                "function",
                "optional-parameters",
                "javascript",
                "named-parameters"
            ],
            "title": "Named parameters in javascript"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>curly braces identify an Object like so:</p>\n\n<pre><code>timObject = {\n    property1 : \"Hello\",\n    property2 : \"MmmMMm\",\n    property3 : [\"mmm\", 2, 3, 6, \"kkk\"],\n    method1 : function(){alert(\"Method had been called\" + this.property1)}\n};\n</code></pre>\n\n<p>in jQuery they are used to provide an Object with options for your method.\nYou could also write your code like so <code>xxx.css(\"width\",\"10px\").css(\"font-size\",\"30px\");</code> But passing it an Object makes it faster and more readable </p>\n\n<pre><code>xxx.css({\"width\":\"10px\",\"font-size\":\"20px\"});\n</code></pre>\n\n<ul>\n<li><a href=\"http://docs.jquery.com/Types#Object\" rel=\"nofollow\">http://docs.jquery.com/Types#Object</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Creates an object.</p>\n\n<pre><code>var myObject = {\"element\" : \"value\"};\nalert(myObject.element); // Would alert: \"value\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It's an object literal.</p>\n\n<p><code>var x = {'float': 'right'}</code> is the nicer/shorter form of <code>var x = new Object(); x.float = 'right';</code></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The curly braces in the code you've shown define an <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Core_Language_Features#Object_literals\">object literal</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>That is an <a href=\"https://developer.mozilla.org/en/JavaScript/Guide/Values,_Variables,_and_Literals#Object_literals\" rel=\"nofollow\">object literal</a></p>\n\n<blockquote>\n  <p>An object literal is a list of zero or more pairs of property names and associated values of an object</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>They encapsualte the css attributes in this example.</p>\n\n<p>Normally curly brackets represent a function or an encapsulated piece of code that needs to be executed as one. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In your case it is an object passed to your css function.</p>\n\n<pre><code>myObj={} // a blank object\n</code></pre>\n\n<p>Here you can use this too</p>\n\n<pre><code>myObj={'float' : 'right'}\nxxx.css(myObj);\n</code></pre>\n\n<p>Here is another example of object</p>\n\n<pre><code>var myObj={\n    'varOne':'One',\n    'methodOne':function(){ alert('methodOne has been called!')}        \n}\nmyObj.methodOne();\u200b // It will alert 'methodOne has been called!'\n</code></pre>\n\n<p>A fiddle is <a href=\"http://jsfiddle.net/NyZDE/\">here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>Creates Object Literal.</p>\n\n<p>Read more if you want here: <a href=\"http://www.dyn-web.com/tutorials/obj_lit.php\" rel=\"nofollow\">http://www.dyn-web.com/tutorials/obj_lit.php</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In javascript curly braces are used for several purposes.</p>\n\n<p>I your case these are used to create a key-value pair.</p>\n\n<p>In others cases curly braces are used to combine a set of statements in a block.\nAnd sometimes they are used to create objects\nlike var abc = { \"a\": 1, \"b\": 2 };</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Basically the curly braces {} are the another way for creating objects in javascript. This is equivalent to the \"new Object()\" syntax.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I found this in a jQuery file:</p>\n\n<pre><code>xxx.css({ 'float' : 'right' });\n</code></pre>\n\n<p>What do the curly braces do?</p>\n",
            "last_activity_date": 1389029193,
            "question_id": 9699064,
            "score": 21,
            "tags": [
                "javascript",
                "jquery",
                "css"
            ],
            "title": "What do curly braces in JavaScript mean?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Use ECMAscripts \"bracket notation\":</p>\n\n<pre><code>myTextOptions[ 'character names' ].kid;\n</code></pre>\n\n<p>You can use that notation either way, reading &amp; writting.</p>\n",
                    "is_accepted": true,
                    "score": 44
                }
            ],
            "body": "<p>I have a javascript object that looks something like this:</p>\n\n<pre><code>myTextOptions: {\n    'cartoon': {\n        comic: 'Calvin &amp; Hobbes',\n        published: '1993'\n    },\n    'character names': {\n        kid: 'Calvin',\n        tiger: 'Hobbes'\n    }\n}\n</code></pre>\n\n<p>I can access the cartoon properties easily using <code>myTextOptions.cartoon.comic</code> or whatever. However, I haven't been able to get the syntax right for accessing <code>kid</code>. I've tried the following with no luck:</p>\n\n<pre><code>myTextOptions.character names.kid\nmyTextOptions.\"character names\".kid\nmyTextOptions.character\\ names.kid\nmyTextOptions.'character names'.kid\nmyTextOptions.[\"character names\"].kid\nmyTextOptions.character%20names.kid\n</code></pre>\n",
            "last_activity_date": 1322602187,
            "question_id": 8317982,
            "score": 21,
            "tags": [
                "javascript",
                "object"
            ],
            "title": "access javascript object with space in key"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>document.getElementById(yourAnchorId).href.split(\"/\")</code></p>\n\n<p><code>[document.getElementById(yourAnchorId).href.split(\"/\").length - 1].split(\"?\")[0];</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>what a but a little substring?</p>\n\n<p>for example :</p>\n\n<pre><code>function getHref(a)\n{\n    var i = a.outerHTML.indexOf('href=\"')+6;\n    return a.outerHTML.substring(i, a.outerHTML.indexOf('\"', i));\n\n}\n</code></pre>\n\n<p>P.S TESTED!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The <code>href</code> property in plain Javascript will have the semantic attached to it. It returns the destination URL which the link will lead to. It doesn't matter how it was written (absolute or relative URLs).</p>\n\n<p>When you use the <code>$(this).attr(\"href\")</code> you are retrieving directly the value of <code>href</code> attribute just like any other attribute, so it will return the exact value rendered in the HTML.</p>\n\n<p>For your case then, it's better to use <code>$(this).attr(\"href\")</code></p>\n\n<p>If you don't want to use jQuery, there's yet another solution, using just plain JavaScript:</p>\n\n<pre><code>this.getAttribute('href')\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 33
                }
            ],
            "body": "<p>After reading this article <a href=\"http://net.tutsplus.com/tutorials/javascript-ajax/14-helpful-jquery-tricks-notes-and-best-practices/\">net.tutsplus.com/tutorials/javascript-ajax/14-helpful-jquery-tricks-notes-and-best-practices/</a>   I came to conclusion that using <strong>this.href</strong>  is more efficient. </p>\n\n<p>However, when I tried to use it on one of my projects, I saw that <strong>this.href</strong> returns not only href but also appends a url of a website. For example <code>&lt;a href=\"tab-04\"&gt;&lt;/a&gt;</code><strong>this.href</strong> will return <a href=\"http://example.com/abc/tab-04\">http://example.com/abc/tab-04</a> and <strong>$(this).attr('href')</strong> will return only tab-04. </p>\n\n<p>You can see an example here <a href=\"http://jsfiddle.net/UC2xA/1/\">http://jsfiddle.net/UC2xA/1/</a>. </p>\n\n<p><strong>$(this).attr('href')</strong> however returns exactly what I need and nothing more. </p>\n\n<p>My question is this, how can I rewrite (or do what is necessary) <strong>this.href</strong> so that it would only return <strong>tab-04</strong>?</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>Doug you are right on the money with <pre>this.getAttribute('href')</pre></p>\n",
            "last_activity_date": 1416714332,
            "question_id": 6977049,
            "score": 21,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "this.href vs $(this).attr(&#39;href&#39;)"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><strong>I have solved my problem this way:</strong></p>\n\n<p>Add this to your PHP Code:</p>\n\n<pre><code>header(\"Access-Control-Allow-Origin: *\");\nheader(\"Access-Control-Allow-Credentials: true \");\nheader(\"Access-Control-Allow-Methods: OPTIONS, GET, POST\");\nheader(\"Access-Control-Allow-Headers: Content-Type, Depth, User-Agent, X-File-Size, X-Requested-With, If-Modified-Since, X-File-Name, Cache-Control\");\n</code></pre>\n\n<p>Or add these headers to your response.</p>\n\n<p>Problem: The browsers ask to the server for options before your main request, to check if the site has the option to allow comunication with different origin, and then if yes, they do your POST or GET request.</p>\n\n<p><strong>EDIT:</strong> Try this (without your hack) to see if you're receiving data...  </p>\n\n<pre><code>$.ajax({ url : crossOriginURL,\n    type : \"GET\",\n    error : function(req, message) {\n        alert(message);\n    },\n    success : function(data) {\n        alert(data);\n    },\n    dataType :  \"text\"} );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>what finally worked for me is <code>xhr.setRequestHeader('Content-Type', 'text/plain');</code></p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>It looks like the original poster may have resolved their issue, but for anyone having the same issue as commentor Elisabeth, I believe the problem may be that Chrome refuses to set a an Origin header for a CORS request if you are running the request from a local file.  It won't even let you explicitly override the Origin header.  This causes the server to see \"Origin: null\", which results in a 403 in most cases.  Firefox apparently has no such constraint, as I've found after much hair-pulling.</p>\n\n<p>If you absolutely need to use Chrome in this case, you can resolve your issue by running a webserver locally and always accessing your file via http: instead of via file:.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>CORS will work in chrome. Just use chrome is safe-mode, i.e., use disable security settings.\nGoogle it about it, or you can even start from command line also.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I've set up Cross-Origin Resource Sharing on a server (Jetty using the CrossOriginFilter) and it works perfectly on IE8 and Firefox.  On Chrome, it just ... doesn't.</p>\n\n<pre><code>  $.ajax({ url : crossOriginURL,\n    type : \"GET\",\n    error : function(req, message) {\n        alert(message);\n    },\n    dataType :  \"json\" } );\n</code></pre>\n\n<p>The error function is invoked, with the helpful message \"error\".  It seems to be making the request, but without any of the headers you'd expect.  If the URL is from the same origin, it works fine.</p>\n",
            "last_activity_date": 1369655472,
            "question_id": 3136140,
            "score": 21,
            "tags": [
                "javascript",
                "jquery",
                "google-chrome",
                "cors"
            ],
            "title": "CORS not working on Chrome"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><code>alert()</code> is not in Angularjs scope, you need to use <code>$window.alert()</code>. Please take a look at <a href=\"http://docs.angularjs.org/api/ng.%24window\" rel=\"nofollow\">$window</a> module.</p>\n\n<p>And as far as I know, Angularjs ignores any <code>&lt;script&gt;</code> tag inside partials.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>That's the way <strong>jqLite</strong> works. If you want scripts in templates to be evaluated, include <strong>jQuery</strong> before AngularJS. If jQuery is included, the script will be evaluated. Try removing jQuery, and you see the originally observed behavior.</p>\n\n<p><strong>Updated</strong>: since some people asked for elaboration in the comments, here it is:</p>\n\n<p>When a route is matched, <code>ngView</code> uses jqLite's (or jQuery's, if loaded) <code>html()</code> method to set the content of the element (the one <code>ngView</code> is declared on). In other words, <code>ngView.link()</code> does something like this:</p>\n\n<pre><code>$element.html(template)\n</code></pre>\n\n<p>So it boils down to how <code>html()</code> is implemented in jqLite and jQuery. jqLite uses the native <code>innerHTML</code> property, which only sets content but doesn't evaluate scripts. jQuery, on the other hand, parses out all script tags and executes them (by constructing and appending script DOM elements to the page).</p>\n",
                    "is_accepted": true,
                    "score": 21
                }
            ],
            "body": "<p>I had some scripts specific to a view. However, the script does not seem to execute when angularjs loads the view. </p>\n\n<p><strong>Index.html</strong></p>\n\n<pre><code>&lt;html&gt;\n  &lt;body ng-app=\"adminApp\"&gt;\n\n    &lt;div ng-view=\"\"&gt;&lt;/div&gt;\n\n    &lt;script src=\"bower_components/angular/angular.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"scripts/app.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"scripts/controllers/main.js\"&gt;&lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>Main.html</strong> - loads under ng-view</p>\n\n<pre><code>hello world\n  &lt;script&gt;\n\n    alert('Hello, John!')\n\n  &lt;/script&gt;\n</code></pre>\n\n<p>In this example, when the page load, I see a basic hello world printed on the website. However, I do not get any pop up saying \"Hello, John\". </p>\n\n<p>Any idea why I cannot load scripts specific to a certain view? </p>\n\n<hr>\n\n<p><em>Extra info</em>\n<strong>app.js</strong></p>\n\n<pre><code>'use strict';\n\nangular.module('adminApp', [])\n  .config(function ($routeProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'views/main.html',\n        controller: 'MainCtrl'\n      })\n      .otherwise({\n        redirectTo: '/'\n      });\n  });\n</code></pre>\n\n<p><strong>controllers/main.js</strong></p>\n\n<pre><code>'use strict';\n\nangular.module('adminApp')\n  .controller('MainCtrl', function ($scope) {\n    $scope.awesomeThings = [\n      'HTML5 Boilerplate',\n      'AngularJS',\n      'Karma'\n    ];\n  });\n</code></pre>\n",
            "last_activity_date": 1393616250,
            "question_id": 18220197,
            "score": 20,
            "tags": [
                "javascript",
                "html",
                "angularjs"
            ],
            "title": "Angularjs does not load scripts within ng-view"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I am not sure, but I would bet it allocates memory differently at a low level. If  you know you're creating 10,000 items, just reserve that much space rather than dynamically having it resize it in the background all the time.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Clarity.</p>\n\n<p>When writing code, your goal is <strong>not</strong> so much for the computer to understand you, but for the next programmer that reads your code to understand you.</p>\n\n<pre><code>var xs = new Array(10);\n</code></pre>\n\n<p>The above code shows <strong>your intention</strong>: to have a 10 element array.</p>\n\n<pre><code>var xs = [];\n</code></pre>\n\n<p>The above gives nothing away; no extra information.</p>\n\n<p>Cheers.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There are many perceived benefits of declaring an array size, but I think the majority of the perceived benefits are just FUD being passed around.</p>\n\n<p><strong>Better performance!/It's faster!</strong></p>\n\n<p>As far as I can tell the difference between pre-allocating and dynamic allocation is negligible.</p>\n\n<p>More interestingly, the spec does <strong>not</strong> state that the array should be set to a pre-allocated length! </p>\n\n<p>From Section 15.4.2.2 <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf\">ECMA-262</a>:</p>\n\n<blockquote>\n  <p>If the argument <em>len</em> is a Number and ToUint32(<em>len</em>) is equal to <em>len</em>, then the <strong>length</strong> property of the newly constructed object is set to ToUint32(<em>len</em>). If the argument <em>len</em> is a Number and ToUint32(<em>len</em>) is not equal to <em>len</em>, a <strong>RangeError</strong> exception is thrown.</p>\n</blockquote>\n\n<p>An unscientific for-fun test case is here: <a href=\"http://jsbin.com/izini\">http://jsbin.com/izini</a></p>\n\n<p><strong>It makes for more understandable code!</strong></p>\n\n<p>Personally, I disagree.</p>\n\n<p>Consider the javascript you have written in the past, and consider code you may have to write in the future. I can't think of a single time where I've needed to specify a static limit on one of my arrays. I'd also argue that the potential problems of limiting arrays in javascript highly outweigh the benefits caused by letting people know what you were thinking with no actual checks behind it. Lets weigh the pros and cons...</p>\n\n<p>Pros:</p>\n\n<ol>\n<li>It will be easier for them to understand what you intended the code to do.</li>\n<li>They will be able to find the bugs caused by your assumption later on (tongue firmly in cheek)</li>\n</ol>\n\n<p>Cons:</p>\n\n<ol>\n<li>Quick glances can easily confuse \"new Array(10)\" with \"new Array('10')\" which do entirely different things!</li>\n<li>You are imposing an arbitrary limit on code with no normal length limit causing you to write lots of boiler plate code to check and maintain the limit.</li>\n<li>You are imposing an arbitrary limit on code which could probably have been generalized to work with any length of values.</li>\n<li>You're making an assumption about how people will read your code while assuming that the alternative would be less confusing.</li>\n</ol>\n\n<p>You may as well have written:</p>\n\n<pre><code>//I assume this array will always be length 10\nvar arr = new Array();\n</code></pre>\n\n<p>In the above case the comment might even be preferable. The explicit declaration of intent can avoid any confusion not used to using the constructor as a declaration of intent.</p>\n\n<p><strong>Fine then.. why do you think it's even there then?</strong></p>\n\n<p>Convenience. When they were writing the spec I think they realized two things.</p>\n\n<ol>\n<li>This sort of assignment would be something developers coming from similar languages would be used to.</li>\n<li>Implementations of ECMAScript might potentially use it for performance gains.</li>\n</ol>\n\n<p>So they put it in there.\nThe spec only defines the use of the parameter, not how it should be implemented.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Performance on the V8 JavaScript engine.</p>\n\n<p>By doing:</p>\n\n<pre><code>var arr = []; arr.length = 1000;\n</code></pre>\n\n<p>V8 will preallocate the required memory for the array and maintain/set the array's <code>Hidden Class</code> to <em>compact SMI</em> (Small Int, 31 bits unsigned) <em>array</em>. However, this is not true when the desired length is too big, which results in the HC being set to <em>sparse array</em> (i.e., map).</p>\n\n<p>Try the following link on Chrome: <a href=\"http://jsperf.com/0-fill-n-size-array\">http://jsperf.com/0-fill-n-size-array</a></p>\n\n<p>I've included an extra test case without the array length definition so you can tell the actual performance difference.</p>\n\n<p>Related info: <a href=\"http://www.youtube.com/watch?v=UJPdhx5zTaw\">http://www.youtube.com/watch?v=UJPdhx5zTaw</a></p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>Well, personally i want a queue. I want the queue to be length of 10.</p>\n\n<p>The easiest way to do this is to use the <code>push</code> array method to put items onto the end of the queue, and the <code>shift()</code> method to get them off the front of the  array.</p>\n\n<p>The problem is, if i want to make a simple \"add\" method to my queue, and i write it up like so:</p>\n\n<pre><code>function addItemToArray(item, array){\n    array.shift();\n    array.push(item);\n    return array;\n}\n</code></pre>\n\n<p>then Nothing Good happens. What is better (actually, what will work) is to declare my array like this:</p>\n\n<pre><code>var maxSizeIsTen = new Array(10);\n</code></pre>\n\n<p>and then use it everywhere. Also, note the \"nice\" way of describing the array - no comments that nobody reads, and anybody using this code will work out in short order the max size of this array. </p>\n\n<p>YAY!</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>Basic javascript question - Since there is no hard limit for arrays as the case with Java (i.e. indexoutofbounds exception), what is the use of the declaration where we specify the length property? </p>\n\n<pre><code>var a = new Array(10);\n</code></pre>\n\n<p>I know it predefines the length and puts \"undefined\" into those empty spots - is that reason enough for having it?</p>\n",
            "last_activity_date": 1347387441,
            "question_id": 1246408,
            "score": 20,
            "tags": [
                "javascript"
            ],
            "title": "use of javascript array new Array(n) declaration"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Try this; bear in mind that JavaScript months are 0-indexed, whilst days are 1-indexed.</p>\n\n<pre><code>var date = new Date('2010-10-11T00:00:00+05:30');\nalert((date.getMonth() + 1) + '/' + date.getDate() + '/' +  date.getFullYear());\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 50
                },
                {
                    "body": "<p>You can: <code>.slice()</code> and <code>.split()</code></p>\n\n<pre><code>var d = \"2010-10-30T00:00:00+05:30\".slice(0, 10).split('-');   \nd[1] +'/'+ d[2] +'/'+ d[0]; // 10/30/2010\n</code></pre>\n\n<p><br>\n...or <strong>pass your string into the <code>Date</code> Object</strong>:</p>\n\n<pre><code>var d = new Date(\"2010-10-30T00:00:00+05:30\");\n</code></pre>\n\n<p>from here you can extract the desired using the following methods:</p>\n\n<pre><code>d.getMonth()+1  // 10\nd.getDate()     // 30\nd.getFullYear() // 2010\n</code></pre>\n\n<p>Note that <code>getMonth()</code> returns the month number <em>zero</em> based <em>(0-11)</em> therefore a <code>+1</code> is needed.</p>\n\n<p>Here you can find a list of other <strong>getters</strong>: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>All other answers don't quite solve the issue. They print the date formatted as mm/dd/yyyy but the question was regarding MM/dd/yyyy. Notice the subtle difference? MM indicates that a leading zero must pad the month if the month is a single digit, thus making it into a double digit number.</p>\n\n<p>i.e. whereas mm/dd would be 3/31, MM/dd would be 03/31.</p>\n\n<p>I've created a simple function to achieve this. Notice that the same padding is applied not only to the month but also to the day of the month:</p>\n\n<pre><code>function getFormattedDate(date) {\n  var year = date.getFullYear();\n  var month = (1 + date.getMonth()).toString();\n  month = month.length &gt; 1 ? month : '0' + month;\n  var day = date.getDate().toString();\n  day = day.length &gt; 1 ? day : '0' + day;\n  return year + '/' + month + '/' + day;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>I have a dateformat like this <code>'2010-10-11T00:00:00+05:30'</code>. I have to format in to <code>MM/dd/yyyy</code> using javascript or jquery . Anyone help me to do the same.</p>\n\n<p>Thanks\nPradeep</p>\n",
            "last_activity_date": 1418251889,
            "question_id": 11591854,
            "score": 19,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Format date to MM/dd/yyyy in javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>html = html.replace(\"(?s)&lt;!--\\\\[if(.*?)\\\\[endif\\\\] *--&gt;\", \"\")\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You should use the <code>/s</code> modifier</p>\n\n<p>html = html.replace(<code>/&lt;!--.*?--&gt;/sg</code>, \"\")</p>\n\n<p>Tested in perl:</p>\n\n<pre><code>use strict;\nuse warnings;\n\nmy $str = 'hello &lt;!--[if gte mso 9]&gt;&lt;xml&gt; &lt;o:OfficeDocumentSettings&gt; &lt;o:RelyOnVML/&gt; &lt;o:AllowPNG/&gt; &lt;/o:OfficeDocumentSettings&gt; &lt;/xml&gt;&lt;![endif]--&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt; &lt;w:WordDocument&gt; &lt;w:View&gt;Normal&lt;/w:View&gt; &lt;w:Zoom&gt;0&lt;/w:Zoom&gt; &lt;w:TrackMoves/&gt; &lt;w:TrackFormatting/&gt; &lt;w:HyphenationZone&gt;21&lt;/w:HyphenationZone&gt; &lt;w:PunctuationKerning/&gt; &lt;w:ValidateAgainstSchemas/&gt; &lt;w:SaveIfXMLInvalid&gt;false&lt;/w:SaveIfXMLInvalid&gt; &lt;w:IgnoreMixedContent&gt;false&lt;/w:IgnoreMixedContent&gt; &lt;w:AlwaysShowPlaceholderText&gt;false&lt;/w:AlwaysShowPlaceholderText&gt; &lt;w:DoNotPromoteQF/&gt; &lt;w:LidThemeOther&gt;NO-BOK&lt;/w:LidThemeOther&gt; &lt;w:LidThemeAsian&gt;X-NONE&lt;/w:LidThemeAsian&gt; &lt;w:LidThemeComplexScript&gt;X-NONE&lt;/w:LidThemeComplexScript&gt; &lt;w:Compatibility&gt; &lt;w:BreakWrappedTables/&gt; &lt;w:SnapToGridInCell/&gt; &lt;w:WrapTextWithPunct/&gt; &lt;w:UseAsianBreakRules/&gt; &lt;w:DontGrowAutofit/&gt; &lt;w:SplitPgBreakAndParaMark/&gt; &lt;w:EnableOpenTypeKerning/&gt; &lt;w:DontFlipMirrorIndents/&gt; &lt;w:OverrideTableStyleHps/&gt; &lt;/w:Compatibility&gt; &lt;m:mathPr&gt; &lt;m:mathFont m:val=\"Cambria Math\"/&gt; &lt;m:brkBin m:val=\"before\"/&gt; &lt;m:brkBinSub m:val=\"&amp;#45;-\"/&gt; &lt;m:smallFrac m:val=\"off\"/&gt; &lt;m:dispDef/&gt; &lt;m:lMargin m:val=\"0\"/&gt; &lt;m:rMargin m:val=\"0\"/&gt; &lt;m:defJc m:val=\"centerGroup\"/&gt; &lt;m:wrapIndent m:val=\"1440\"/&gt; &lt;m:intLim m:val=\"subSup\"/&gt; &lt;m:naryLim m:val=\"undOvr\"/&gt; &lt;/m:mathPr&gt;&lt;/w:WordDocument&gt; &lt;/xml&gt;&lt;![endif]--&gt;world!';\n\n$str =~ s/&lt;!--.*?--&gt;//sg;\nprint $str;\n</code></pre>\n\n<p>Output:<br>\n<code>hello world!</code></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The regex <code>/&lt;!--[\\s\\S]*?--&gt;/g</code> should work.</p>\n\n<p>You're going to kill <a href=\"http://dev.w3.org/html5/markup/aria/syntax.html#escaping-text-span\">escaping text spans</a> in CDATA blocks.</p>\n\n<p>E.g.</p>\n\n<pre><code>&lt;script&gt;&lt;!-- notACommentHere() --&gt;&lt;/script&gt;\n</code></pre>\n\n<p>and literal text in formatted code blocks</p>\n\n<pre><code>&lt;xmp&gt;I'm demoing HTML &lt;!-- comments --&gt;&lt;/xmp&gt;\n\n&lt;textarea&gt;&lt;!-- Not a comment either --&gt;&lt;/textarea&gt;\n</code></pre>\n\n<p>EDIT:</p>\n\n<p>This also won't prevent new comments from being introduced as in</p>\n\n<pre><code>&lt;!-&lt;!-- A comment --&gt;- not comment text --&gt;\n</code></pre>\n\n<p>which after one round of that regexp would become</p>\n\n<pre><code>&lt;!-- not comment text --&gt;\n</code></pre>\n\n<p>If this is a problem, you can escape <code>&lt;</code> that are not part of a comment or tag (complicated to get right) or you can loop and replace as above until the string settles down.</p>\n",
                    "is_accepted": true,
                    "score": 24
                }
            ],
            "body": "<p>I've got some ugly HTML generated from Word, from which I want to strip all HTML comments.</p>\n\n<p>The HTML looks like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&lt;!--[if gte mso 9]&gt;&lt;xml&gt; &lt;o:OfficeDocumentSettings&gt; &lt;o:RelyOnVML/&gt; &lt;o:AllowPNG/&gt; &lt;/o:OfficeDocumentSettings&gt; &lt;/xml&gt;&lt;![endif]--&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt; &lt;w:WordDocument&gt; &lt;w:View&gt;Normal&lt;/w:View&gt; &lt;w:Zoom&gt;0&lt;/w:Zoom&gt; &lt;w:TrackMoves/&gt; &lt;w:TrackFormatting/&gt; &lt;w:HyphenationZone&gt;21&lt;/w:HyphenationZone&gt; &lt;w:PunctuationKerning/&gt; &lt;w:ValidateAgainstSchemas/&gt; &lt;w:SaveIfXMLInvalid&gt;false&lt;/w:SaveIfXMLInvalid&gt; &lt;w:IgnoreMixedContent&gt;false&lt;/w:IgnoreMixedContent&gt; &lt;w:AlwaysShowPlaceholderText&gt;false&lt;/w:AlwaysShowPlaceholderText&gt; &lt;w:DoNotPromoteQF/&gt; &lt;w:LidThemeOther&gt;NO-BOK&lt;/w:LidThemeOther&gt; &lt;w:LidThemeAsian&gt;X-NONE&lt;/w:LidThemeAsian&gt; &lt;w:LidThemeComplexScript&gt;X-NONE&lt;/w:LidThemeComplexScript&gt; &lt;w:Compatibility&gt; &lt;w:BreakWrappedTables/&gt; &lt;w:SnapToGridInCell/&gt; &lt;w:WrapTextWithPunct/&gt; &lt;w:UseAsianBreakRules/&gt; &lt;w:DontGrowAutofit/&gt; &lt;w:SplitPgBreakAndParaMark/&gt; &lt;w:EnableOpenTypeKerning/&gt; &lt;w:DontFlipMirrorIndents/&gt; &lt;w:OverrideTableStyleHps/&gt; &lt;/w:Compatibility&gt; &lt;m:mathPr&gt; &lt;m:mathFont m:val=\"Cambria Math\"/&gt; &lt;m:brkBin m:val=\"before\"/&gt; &lt;m:brkBinSub m:val=\"&amp;#45;-\"/&gt; &lt;m:smallFrac m:val=\"off\"/&gt; &lt;m:dispDef/&gt; &lt;m:lMargin m:val=\"0\"/&gt; &lt;m:rMargin m:val=\"0\"/&gt; &lt;m:defJc m:val=\"centerGroup\"/&gt; &lt;m:wrapIndent m:val=\"1440\"/&gt; &lt;m:intLim m:val=\"subSup\"/&gt; &lt;m:naryLim m:val=\"undOvr\"/&gt; &lt;/m:mathPr&gt;&lt;/w:WordDocument&gt; &lt;/xml&gt;&lt;![endif]--&gt;\n</code></pre>\n\n<p>..and the regex I am using is this one</p>\n\n<pre><code>html = html.replace(/&lt;!--(.*?)--&gt;/gm, \"\")\n</code></pre>\n\n<p>But there seems to be no match, the string is unchanged.</p>\n\n<p>What I am missing?</p>\n",
            "last_activity_date": 1339568420,
            "question_id": 5653207,
            "score": 19,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "Remove HTML comments with Regex, in Javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The problem is, that <code>menuHoverStart</code> is not accessible outside of its scope (which is defined by the <code>.ready()</code> callback function in file #1). You need to make this function available in the global scope (or through any object that is available in the global scope):</p>\n\n<pre><code>function menuHoverStart(element, topshift, thumbchange) {\n    // ...\n}\n\n$(document).ready(function() {\n    // ...\n});\n</code></pre>\n\n<p>If you want <code>menuHoverStart</code> to stay in the <code>.ready()</code> callback, you need to add the function to the global object manually (using a function expression):</p>\n\n<pre><code>$(document).ready(function() {\n    window.menuHoverStart = function (element, topshift, thumbchange) {\n        // ...\n    };\n    // ...\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>You have declared <code>menuHoverStart</code> inside a function (the anonymous one you pass to the ready ready). That limits its scope to that function and you cannot call it from outside that function.</p>\n\n<p>It doesn't <em>do</em> anything there, so there is no need to hold off on defining it until the ready event fires, so you could just move it outside the anonymous function.</p>\n\n<p>That said, globals are worth avoiding, so you might prefer to define a namespace (to reduce the risk of name collisions) and hang the function off that.</p>\n\n<pre><code>var MYNAMESPACE = {}; // In the global scope, not in a function\n// The rest can go anywhere though\nMYNAMESPACE.menuHoverStart = function (element, topshift, thumbchange) {\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have two external .js files. The first contains a function. The second calls the function.</p>\n\n<p>file1.js</p>\n\n<pre><code>$(document).ready(function() {\n\n    function menuHoverStart(element, topshift, thumbchange) {\n\n        ... function here ...\n\n    } \n\n});\n</code></pre>\n\n<p>file2.js</p>\n\n<pre><code>$(document).ready(function() {\n\n    setTimeout(function() { menuHoverStart(\"#myDiv\", \"63px\", \"myIMG\"); },2000); \n\n});\n</code></pre>\n\n<p>The trouble is that this is not running the function. I need the two separate files because file2.js is inserted dynamically depending on certain conditions.  This function works if I include the setTimeout... line at the end of file1.js</p>\n\n<p>Any ideas?</p>\n",
            "last_activity_date": 1385022528,
            "question_id": 4335069,
            "score": 19,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Calling a javascript function from another .js file"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Get a reference to your input box however you like (eg <code>document.getElementById('mytextbox')</code>) and set its <a href=\"http://www.w3schools.com/tags/att_input_readonly.asp\" rel=\"nofollow\"><code>readonly</code></a> property to <code>true</code>:</p>\n\n<pre><code>myInputBox.readonly = true;\n</code></pre>\n\n<p>Alternatively you can simply add this property inline (no JavaScript needed):</p>\n\n<pre><code>&lt;input type=\"text\" value=\"from db\" readonly=\"readonly\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you know this when the page is rendered, which it sounds like you do because the database has a value, it's better to disable it when rendered instead of JavaScript.  To do that, just add the <a href=\"http://www.w3schools.com/tags/att_input_readonly.asp\"><code>readonly</code></a> attribute (or <a href=\"http://www.w3schools.com/tags/att_input_disabled.asp\"><code>disabled</code></a>, if you want to remove it from the submit as well) to the <code>&lt;input&gt;</code>, like this:</p>\n\n<pre><code>&lt;input type=\"text\" disabled=\"disabled\" /&gt;\n//or...\n&lt;input type=\"text\" readonly=\"readonly\" /&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>If the data is populated from the database, you might consider <em>not</em> using an <code>&lt;input&gt;</code> tag to display it. Nevertheless, you can disable it right in the tag:</p>\n\n<pre><code>&lt;input type='text' value='${magic.database.value}' disabled&gt;\n</code></pre>\n\n<p>If you need to disable it with Javascript later, you can set the \"disabled\" attribute:</p>\n\n<pre><code>document.getElementById('theInput').disabled = true;\n</code></pre>\n\n<p>The reason I suggest not showing the value as an <code>&lt;input&gt;</code> is that, in my experience, it causes layout issues. If the text is long, then in an <code>&lt;input&gt;</code> the user will need to try and scroll the text, which is not something normal people would guess to do. If you just drop it into a <code>&lt;span&gt;</code> or something, you have more styling flexibility.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<pre><code>document.getElementById('foo').disabled = true;\n</code></pre>\n\n<p>EDIT</p>\n\n<p>or</p>\n\n<pre><code>document.getElementById('foo').readOnly = true;\n</code></pre>\n\n<p>Note that <code>readOnly</code> should be in CamelCase to work correctly in Firefox (magic).</p>\n",
                    "is_accepted": false,
                    "score": 68
                },
                {
                    "body": "<p>You can also by jquery:</p>\n\n<pre><code>$('#foo').disabled = true;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I want to disable writing in an input field of type <code>text</code> using JavaScript, if possible.\nThe input field is populated from a database; that is why I don't want the user to modify its value.</p>\n",
            "last_activity_date": 1415966296,
            "question_id": 2874688,
            "score": 19,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "How to disable an input type=text?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>You need to <code>system();</code> this</p>\n\n<p>$ java -jar yuicompressor-x.y.z.jar</p>\n\n<p><a href=\"http://developer.yahoo.com/yui/compressor/\" rel=\"nofollow\">http://developer.yahoo.com/yui/compressor/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Good blog post about it here: <a href=\"http://verens.com/2008/05/20/efficient-js-minification-using-php/\">http://verens.com/2008/05/20/efficient-js-minification-using-php/</a></p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>If I may speak so freely;</p>\n\n<p>Minifying a JS/CSS file would have as goal that it parses more quickly ( and also use up less disk space). By minifying it at runtime, that benefit would be completely lost.</p>\n\n<p>Perhaps I am mistaken in your final goal, but this is what comes to my mind at first.</p>\n\n<p><b>Edit</b>: post by @Ant clarified it for me.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://html5boilerplate.com/\" rel=\"nofollow\">HTML5 Boilerplate</a> comes with a handy build script that compresses JS, CSS, images and much more. Check it out!</p>\n\n<p>As explained in the other answers, \u201creal\u201d on-the-fly minification (dynamically compress a file every time it\u2019s requested) wouldn\u2019t be a very good idea.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><a href=\"https://github.com/kriswallsmith/assetic\" rel=\"nofollow\">Assetic</a> is a nice project that helps in organizing resources such as CSS and Javascript including minification. See <a href=\"http://www.slideshare.net/kriswallsmith/introducing-assetic-asset-management-for-php-53\" rel=\"nofollow\">here</a> for an introduction.</p>\n\n<p>Generally runtime minification should always be combined with solid caching on the server side and the usage of client and proxy caches along the way to the browser. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think your question should actually be: How can I reliably and repeatably update my live servers? What you need is an automatic deployment script. <a href=\"http://andrewwilkinson.wordpress.com/2010/06/16/using-fabric-for-deployment/\">Personally</a> I prefer <a href=\"http://docs.fabfile.org/en/1.0.0/index.html\">Fabric</a>, but there are other tools are available.</p>\n\n<p>An automatic deployment script will allow you to run a single command which will go to live servers and update the source code, run any deployment steps (such as minifying javascript) and restart the webserver.</p>\n\n<p>You really don't want to be minifying javascript or css files on the fly, you should do that once at deployment and then have a variable in your code that specifies whether this is a live deployment or not. If the variable is true then your links to the files should be links to the minimized version, if it's false then they should be to the normal versions.</p>\n\n<p>There are a number of programs which perform minimization, one that hasn't been mentioned yet is <a href=\"http://www.crockford.com/javascript/jsmin.html\">JSMin</a>.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Thats is exactly what <strong><a href=\"http://code.google.com/p/webutilities/\" rel=\"nofollow\">WebUtilities</a></strong> (for J2EE) does. Here is the link.</p>\n\n<blockquote>\n  <p><a href=\"http://code.google.com/p/webutilities/\" rel=\"nofollow\">http://code.google.com/p/webutilities/</a></p>\n</blockquote>\n\n<p>It does the minification and merging on the fly. It also has caching to avoid reruning the minification or reprocessing of a resource if resource not modified. It also helps with following optimizations.</p>\n\n<ul>\n<li>Serve multiple JS or CSS files in one request</li>\n<li>Add Expires header for JS, CSS and Image files to be cached by browser</li>\n<li>Minify JS, CSS files on the fly</li>\n<li>Minify Inline CSS and JS code blocks</li>\n<li>Add Character Encoding to your response</li>\n<li>Server compressed contents (gzip/compress/deflate)</li>\n<li>Cache responses to speed loading by avoiding reprocessing</li>\n</ul>\n\n<p>Please have a look in case you find it interesting. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I am doubtful that this minification craze really makes that big of a difference if the JS is sent with zlib compression.</p>\n\n<p>First, white space compresses extremely well, so the reduced filesize that results from minification is probably only a major issue with large libraries such as jQuery (which probably should be served from a CDN unless you need a hacked version).</p>\n\n<p>Seconfly, JS is usually cached by the client so unless you use a lot of different scripts on different pages, most page loads it is not going to make a difference.</p>\n\n<p>The problems with minification and why I do not do it (except with things like jQuery):\nA) It strips out comments, so unless you re-add them, things like copyright notices are lost. This could result in a license violation, since even many OSS licenses require the copyright be intact.</p>\n\n<p>B) When there is a problem, it is nice to see the actual code the server is serving just in case it happens to be different than your working copy. Minified code does not do well in that respect.</p>\n\n<p>My personal opinion - zlib compress on the fly, yes. minify - only for really large files.</p>\n\n<p>Performance parsing the JS into the interpreter - maybe if the browser is running on an Apple Performa with 32MB of RAM. I do not buy that it makes a real world difference with most scripts. Pages that are slow are usually slow because of too much inefficient code running at same time or are making too many requests to overloaded servers. (IE do you really need to check availability of username as I type each letter? Can't you check when I change to a different field or when I click submit ??? ;)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you have full control of your Apache / Ngnix configuration, a great option (in general) would be to enable the <a href=\"https://developers.google.com/speed/pagespeed/\" rel=\"nofollow\" title=\"PageSpeed\">PageSpeed</a> module, in your case with </p>\n\n<ul>\n<li>js-minify filter <a href=\"https://developers.google.com/speed/pagespeed/module/filter-js-minify\" rel=\"nofollow\">https://developers.google.com/speed/pagespeed/module/filter-js-minify</a></li>\n<li>css-rewrite filter <a href=\"https://developers.google.com/speed/pagespeed/module/filter-css-rewrite\" rel=\"nofollow\">https://developers.google.com/speed/pagespeed/module/filter-css-rewrite</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If your goal is to make your JavaScript slightly less readable, and do this at runtime, you could keep it very, very, simple. With just three lines of code you can get a long way toward total minification within a few milliseconds.</p>\n\n<pre><code>// make it into one long line\n$code = str_replace(array(\"\\n\",\"\\r\"),'',$code);\n// replace all multiple spaces by one space\n$code = preg_replace('!\\s+!',' ',$code);\n// replace some unneeded spaces, modify as needed\n$code = str_replace(array(' {',' }','{ ','; '),array('{','}','{',';'),$code);\n</code></pre>\n\n<p>This does not do any syntax checking whatsoever. Code can become invalid after using this. Check the end of the lines in your JS, is a ';' missing somewhere?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here are online tools, which help you to compress an beautify js and css.\n<a href=\"http://www.w3docs.com/tools/code-beautifier/\" rel=\"nofollow\">http://www.w3docs.com/tools/code-beautifier/</a>\n<a href=\"http://www.w3docs.com/tools/compressor/\" rel=\"nofollow\">http://www.w3docs.com/tools/compressor/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How to minify JS and CSS on the fly / runtime, so that I can keep the original code structure in my servers if its minified on the runtime / fly.</p>\n",
            "last_activity_date": 1423954754,
            "question_id": 5389822,
            "score": 18,
            "tags": [
                "php",
                "javascript",
                "css",
                "optimization",
                "minify"
            ],
            "title": "How to minify JS or CSS on the fly"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The <code>canvas</code> element provides a <code>toDataURL</code> method which returns a <code>data:</code> URL that includes the base64-encoded image data in a given format. For example:</p>\n\n<pre><code>var jpegUrl = canvas.toDataURL(\"image/jpeg\");\nvar pngUrl = canvas.toDataURL(); // PNG is the default\n</code></pre>\n\n<p>Although the return value is not <em>just</em> the base64 encoded binary data, it's a simple matter to trim off the scheme and the file type to get just the data you want.</p>\n\n<p>The <code>toDataURL</code> method will fail if the browser thinks you've drawn to the canvas any data that was loaded from a different origin, so this approach will only work if your image files are loaded from the same server as the HTML page whose script is performing this operation.</p>\n\n<p>For more information see <a href=\"https://developer.mozilla.org/en-US/docs/DOM/HTMLCanvasElement\">the MDN docs on the <code>canvas</code> API</a>, which includes details on <code>toDataURL</code>, and <a href=\"http://en.wikipedia.org/wiki/Data_URI_scheme\">the Wikipedia article on the <code>data:</code> URI scheme</a>, which includes details on the format of the URI you'll receive from this call.</p>\n",
                    "is_accepted": false,
                    "score": 24
                }
            ],
            "body": "<p>Is there any way of reading the contents of a HTML Canvas as binary data?</p>\n\n<p>At the moment I've got the following HTML to show an input file and the canvas below it:</p>\n\n<pre><code>&lt;p&gt;&lt;button id=\"myButton\" type=\"button\"&gt;Get Image Content&lt;/button&gt;&lt;/p&gt;\n&lt;p&gt;Input:&lt;input id=\"fileInput\" type=\"file\"/&gt;&lt;/p&gt;\n&lt;p&gt;Canvas&lt;canvas id=\"myCanvas\" width=\"578\" height=\"200\"/&gt;&lt;/p&gt;\n</code></pre>\n\n<p>I've then setup my input file to set the canvas correctly which works fine:</p>\n\n<pre><code>$('#fileInput').on('change', function() {\n    $.each(this.files, function() {\n        var image = new Image();\n            image.src = window.URL.createObjectURL(this);\n\n        image.onload = function() {\n            $(\"canvas\").drawImage({\n                source: image,\n                x: 50, y: 50,\n                width: 100,\n                fromCenter: false\n            });\n        };\n    });\n});\n</code></pre>\n\n<p>I now need to get the binary data (Base64 encoded) from the Canvas when the button is clicked so it'll push the data to the server...</p>\n\n<p>The end result is that I need to provide the user with the ability to select a file, crop/resize it, and then click a button at which point the edited image will be uploaded to the server (I can't do server-side cropping/resizing due to server-side limitations...)</p>\n\n<p>Any help would be great! Cheers</p>\n",
            "last_activity_date": 1381240299,
            "question_id": 15685698,
            "score": 16,
            "tags": [
                "javascript",
                "html5",
                "html5-canvas",
                "fileapi"
            ],
            "title": "Getting binary (base64) data from HTML5 Canvas (readAsBinaryString)"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Sometimes it's just easiest to just put a try catch around it and not worry about all the intermediate segments:</p>\n\n<pre><code>try {\n    if (YAHOO.Foo.Bar.xyz) {\n        // operate on YAHOO.Foo.Bar.xyz\n} catch(e) {}\n</code></pre>\n\n<p>or, depending upon how your code works, it might even just be this:</p>\n\n<pre><code>try {\n    // operate on YAHOO.Foo.Bar.xyz\n} catch(e) {\n    // do whatever you want to do when YAHOO.Foo.Bar.xyz doesn't exist\n}\n</code></pre>\n\n<p>In general, javascript developers under-use try/catch.  I find that I can often replace 5-10 if statements with a single try/catch around a larger function block and make the code a lot simpler and more readable at the same time.  Obviously, when this is appropriate depends upon the particular code, but it's definitely worth considering more often than it usually is.  </p>\n\n<p>FYI, if the usual operation is to not throw an exception with the try/catch, it can be a lot faster than a bunch of if statements too.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>use a <code>try catch</code>.</p>\n\n<pre><code>a={\n  b:{}\n};\n\n//a.b.c.d?true:false; Errors and stops the program.\n\ntry{\n  a.b.c.d;\n}\ncatch(e){\n  console.log(e);//Log the error\n  console.log(a.b);//This will run\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you need to check the correctness of the path, rather than the existance of the \"xyz\" member on the \"YAHOO.Foo.Bar\" object, it will probably be easiest to wrap the call in a try catch:</p>\n\n<pre><code>var xyz;\ntry {\n    xyz = YAHOO.Foo.Bar.xyz;\n} catch (e) {\n    // fail;\n};\n</code></pre>\n\n<p>Alternately, you can do some string-kong-fu-magic<sup>TM</sup>:</p>\n\n<pre><code>function checkExists (key, obj) {\n    obj = obj || window;\n    key = key.split(\".\");\n\n    if (typeof obj !== \"object\") {\n        return false;\n    }\n\n    while (key.length &amp;&amp; (obj = obj[key.shift()]) &amp;&amp; typeof obj == \"object\" &amp;&amp; obj !== null) ;\n\n    return (!key.length &amp;&amp; typeof obj !== \"undefined\");\n}\n</code></pre>\n\n<p>The use as follows:</p>\n\n<pre><code>if (checkExists(\"YAHOO.Foo.Bar.xyz\")) {\n    // Woo!\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I actually voted to close the question as duplicate of <a href=\"http://stackoverflow.com/questions/6704737/javascript-convert-dotnotation-string-into-objects\">javascript convert dotnotation string into objects</a>.</p>\n\n<p>However, I guess it's a different topic, but the answer there might still be helpful if you don't want to <code>try-catch</code> all the time.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Consider this utility function:</p>\n\n<pre><code>function defined(ref, strNames) {\n    var name;\n    var arrNames = strNames.split('.');\n\n    while (name = arrNames.shift()) {        \n        if (!ref.hasOwnProperty(name)) return false;\n        ref = ref[name];\n    } \n\n    return true;\n}\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>if (defined(YAHOO, 'Foo.Bar.xyz')) {\n    // operate on YAHOO.Foo.Bar.xyz\n}\n</code></pre>\n\n<p><strong>Live demo:</strong> <a href=\"http://jsfiddle.net/DWefK/5/\" rel=\"nofollow\">http://jsfiddle.net/DWefK/5/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>var _ = {};\n\nvar x = ((YAHOO.Foo || _).Bar || _).xyz;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This problem is solved quite beautifully by coffeescript (which compiles down to javascript):</p>\n\n<pre><code>if YAHOO.Foo?.Bar?.xyz\n  // operate on YAHOO.Foo.Bar.xyz\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have to check deeply-nested object property such as <em>YAHOO.Foo.Bar.xyz</em>.</p>\n\n<p>The code I'm currently using is </p>\n\n<pre><code>if (YAHOO &amp;&amp; YAHOO.Foo &amp;&amp; YAHOO.Foo.Bar &amp;&amp; YAHOO.Foo.Bar.xyz) {\n    // operate on YAHOO.Foo.Bar.xyz\n}\n</code></pre>\n\n<p>This works, but looks clumsy.</p>\n\n<p>Is there any better way to check such deeply nested property?</p>\n",
            "last_activity_date": 1404362561,
            "question_id": 6927242,
            "score": 16,
            "tags": [
                "javascript",
                "properties"
            ],
            "title": "What&#39;s the simplest approach to check existence of deeply-nested object property in JavaScript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I fear you can't prevent the selection itself being \"native behavior\" of the browser, but you can clear the selection right after it's made:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\ndocument.ondblclick = function(evt) {\n    if (window.getSelection)\n        window.getSelection().removeAllRanges();\n    else if (document.selection)\n        document.selection.empty();\n}\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>Edit</strong>: to also prevent selecting whole paragraph by  \"triple click\", here is the required code:</p>\n\n<pre><code>var _tripleClickTimer = 0;\nvar _mouseDown = false;\n\ndocument.onmousedown = function() {\n    _mouseDown = true;\n};\n\ndocument.onmouseup = function() {\n    _mouseDown = false;\n};\n\ndocument.ondblclick = function DoubleClick(evt) {\n    ClearSelection();\n    window.clearTimeout(_tripleClickTimer);\n\n    //handle triple click selecting whole paragraph\n    document.onclick = function() {\n        ClearSelection();\n    };\n\n    _tripleClickTimer = window.setTimeout(RemoveDocumentClick, 1000);\n};\n\nfunction RemoveDocumentClick() {\n    if (!_mouseDown) {\n        document.onclick = null; \n        return true;\n    }\n\n    _tripleClickTimer = window.setTimeout(RemoveDocumentClick, 1000);\n    return false;\n}\n\nfunction ClearSelection() {\n    if (window.getSelection)\n        window.getSelection().removeAllRanges();\n    else if (document.selection)\n        document.selection.empty();\n}\u200b\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/uQNBX/12/\">Live test case</a>.</p>\n\n<p>Should be cross browser, please report any browser where it's not working.</p>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>Just to throw this out there, but here's the code I slap into my pages where I expect users to be clicking rapidly. However, this will also disable standard click-n-drag text selection.</p>\n\n<pre><code>document.body.onselectstart=function(){return false}\ndocument.body.style.MozUserSelect = \"none\";\nif(navigator.userAgent.toLowerCase().indexOf(\"opera\") != -1) {document.body.onmousedown = function(){return false}}\n</code></pre>\n\n<p>Seems to work well for me.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Just put this on the css interested section</p>\n\n<pre><code> -moz-user-select     : none;\n -khtml-user-select   : none;\n -webkit-user-select  : none;\n -o-user-select       : none;\n user-select          : none;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you really want to <strong>disable</strong> selection on double-click and not just remove the selection afterwards (looks ugly to me), you need to <code>return false</code> in the second mousedown event (ondblclick won't work because the selection is made onmousedown).</p>\n\n<p>**If somebody wants no selection at all, the best solution is to use CSS <code>user-select : none;</code> like Maurizio Battaghini proposed.</p>\n\n<pre><code>// set to true if you want to disable also the triple click event\n// works in Chrome, always disabled in IE11\nvar disable_triple_click = true;\n\n// set a global var to save the timestamp of the last mousedown\nvar down = new Date().getTime();\nvar old_down = down;\n\njQuery(document).ready(function($)\n{\n    $('#demo').on('mousedown', function(e)\n    {\n        var time = new Date().getTime();\n\n        if((time - down) &lt; 500 &amp;&amp; \n        (disable_triple_click || (down - old_down) &gt; 500))\n        {\n            old_down = down;\n            down = time;\n\n            e.preventDefault(); // just in case\n            return false; // mandatory\n        }\n\n        old_down = down;\n        down = time;\n    });\n});\n</code></pre>\n\n<p><strong><a href=\"http://jsfiddle.net/pmrotule/rrkrL33r/8/\" rel=\"nofollow\">Live demo here</a></strong></p>\n\n<p><strong>Important notice:</strong> I set the sensitivity to 500ms but <em>Double-click sensitivity (maximum time between clicks that is detected as a double click) can vary by operating system and browser, and is often user-configurable.</em> - <a href=\"http://api.jquery.com/dblclick/\" rel=\"nofollow\">api.jquery.com</a></p>\n\n<p>Tested in Chrome and IE11.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>When double-clicking on a html page most browsers select the word you double-click on (or the paragraph you triple-click on). Is there a way to get rid of this behavior?</p>\n\n<p>Note that I do not want to disable regular selection via single-click+dragging; i.e. jQuery UI's <code>$('body').disableSelection()</code> and the <code>document.onselectstart</code> DOM event are not what I want.</p>\n",
            "last_activity_date": 1424886593,
            "question_id": 4117466,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "selection"
            ],
            "title": "JavaScript: Disable text selection via doubleclick"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Try using <code>actors[a].xpos</code> instead of just <code>a.xpos</code>.</p>\n\n<p>See here for more info on <a href=\"http://www.w3schools.com/jS/js_loop_for_in.asp\" rel=\"nofollow\">JavaScript for-in loops</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>it looks like you're trying to access object properties on the name, not the value here. the index, in this case '0', gets assigned to 'a' in the for/in loop. </p>\n\n<p>what you want to do is access the value of the array member, ie: actors[a].</p>\n\n<p>try this:</p>\n\n<pre><code>for(var a in actors) { // a=0 the first time around the loop,  \n    actor = actors[a]; // same thing as actors[0];\n    actor.xpos += actor.xvel;\n    actor.ypos += actor.yvel;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The <code>for (x in y)</code> construct iterates through the indexes of an array, not its members.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The <a href=\"https://developer.mozilla.org/En/Core%5FJavaScript%5F1.5%5FReference/Statements/For...in\"><code>for...in</code></a> statement is meant to be used to iterate over <em>object properties</em>, by looking your code seems that <code>actors</code> is an Array (you are setting the initial element with index <code>0</code>).</p>\n\n<p>This statement will also <a href=\"http://www.jslint.com/lint.html#forin\">crawl up</a> the prototype chain, if you have extended the <code>Array.prototype</code> those properties will be iterated, and also the order of iteration is not warranted.</p>\n\n<p>I would recommend you to avoid <a href=\"http://yuiblog.com/blog/2006/09/26/for-in-intrigue/\">problems</a> and iterate using a normal for loop:</p>\n\n<pre><code>for (var i = 0; i &lt; actors.length; i++) {\n    actors[i].xpos += actor.xvel;\n    actors[i].ypos += actor.yvel;\n}\n</code></pre>\n\n<p>If I'm wrong, and <code>actors</code> is not an Array, I would recommend you to use the <code>hasOwnProperty</code> method, to ensure that the property exists in the object itself, not up somewhere in the prototype chain:</p>\n\n<pre><code>for (var name in object) {\n  if (object.hasOwnProperty(name)) {\n    //\n  }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p>Another option is to use the <a href=\"http://underscorejs.org/\" rel=\"nofollow\">underscore</a> library:</p>\n\n<pre><code>_.each( actors, function(a) {\n    a.xpos += a.xvel;\n    a.ypos += a.yvel;\n});\n</code></pre>\n\n<p>or if you don't want to use underscore but are using JQuery anyway, then you can do:</p>\n\n<pre><code>$.each( actors, function(i, a) {\n    a.xpos += a.xvel;\n    a.ypos += a.yvel;\n});\n</code></pre>\n\n<p>One nice feature of this functional pattern of iteration is that you can use <code>var</code> to declare variables in the loop that are scoped to the body of the loop, which helps avoid getting bitten by the odd variable scoping rules of JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am making a Javascript game with the canvas tag, and I am using an enhanced for loop to update the player positions.</p>\n\n<p>In brief:</p>\n\n<pre><code>var actors = new Array();\n\nvar player = new Actor(0, 0, img);\n\nactors[0] = player;\n\nfunction update_positions() {\n    //position 1\n    for(var a in actors) {\n        //position2\n        a.xpos += a.xvel;\n        a.ypos += a.yvel;\n    }\n}\n</code></pre>\n\n<p>Just outside of the for loop at position 1, I can access the correct value of actors[0].xvel. Inside the for loop at position 2, a.xvel is undefined. Can someone explain to me what is happening?</p>\n",
            "last_activity_date": 1373867672,
            "question_id": 1885317,
            "score": 16,
            "tags": [
                "javascript",
                "for-loop",
                "foreach"
            ],
            "title": "Strange behavior in Javascript enhanced for...in loop"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Since you tagged jQuery, you could use javascript to <a href=\"http://docs.jquery.com/Manipulation/remove#expr\" rel=\"nofollow\">remove</a> the elements and then <a href=\"http://docs.jquery.com/Manipulation/insertAfter#content\" rel=\"nofollow\">re-insert them</a> although that may not be all too flexible.</p>\n\n<p>Having a bit more context would net you better answers I think.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is no catch-all way of reordering elements with css.</p>\n\n<p>You can inverse their order horizontally by floating them all to the right. Or you can position them absolutely relative to the body or some other containing element - but that comes with severe limitations regarding the size of the elements, and positioning relative to other elements on the page.</p>\n\n<p>Short answer: You can only achieve this in a very limited set of circumstances. Reordering elements is best done in markup.</p>\n\n<p>If you have no control over the html, you could use javascript. Here using jQuery:</p>\n\n<pre><code>$(\"#div2\").insertAfter(\"#div3\");\n$(\"#div1\").prependTo(\"#div2\");\n</code></pre>\n\n<p>I certainly don't recommend that unless your hands are tied. It will be harder to maintain, and for your end users it will make your page \"jerk around\" while its setting up the page.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>In jQuery, you can do the following:</p>\n\n<pre><code>$(\"#div1\").insertAfter(\"#div2\");\n</code></pre>\n\n<p>That will move the element with id 'div1' to after element with id 'div2'.  This assumes that you eliminate the '#' from your id attributes.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>You could do, in Javascript:</p>\n\n<pre><code>function reOrder() {\n  divOne = document.getElementById('#div1');\n  divTwo = document.getElementById('#div2');\n  divThree = document.getElementById('#div3');\n  container = divOne.parentNode;\n  container.appendChild(divTwo);\n  container.appendChild(divOne);\n  container.appendChild(divThree);\n}\n</code></pre>\n\n<p>Edit: Fixed typo in IDs.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would use Javascript to traverse the nodes accordingly.  If you want to use a library like jQuery, you can use the above suggestions.  If you'd prefer not to have the bloat, use the following simple and minimalistic solution...</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;\n\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;title&gt;Test&lt;/title&gt;\n    &lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;\n    &lt;script type=\"text/javascript\"&gt;\n      function swapSibling(node1, node2) {\n        node1.parentNode.replaceChild(node1, node2);\n        node1.parentNode.insertBefore(node2, node1); \n      }\n\n      window.onload = function() {\n        swapSibling(document.getElementById('div1'), document.getElementById('div2'));\n      }\n    &lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"div1\"&gt;1&lt;/div&gt;\n    &lt;div id=\"div2\"&gt;2&lt;/div&gt;\n    &lt;div id=\"div3\"&gt;3&lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Best regards...</p>\n\n<p><strong>EDIT:</strong> Changed function name from swapNode to swapSibling, as I am fairly certain this will only work with nodes that have the same parent.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>How would I go about reordering divs without altering the HTML source code?</p>\n\n<p>example, I want divs to appear in order #div2, #div1, #div3, but in the HTML they are:</p>\n\n<p><code>&lt;div id=\"#div1\"&gt;&lt;/div&gt;<br />\n    &lt;div id=\"#div2\"&gt;&lt;/div&gt;<br />\n    &lt;div id=\"#div3\"&gt;&lt;/div&gt;</code></p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1234905781,
            "question_id": 558614,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css"
            ],
            "title": "Reorder Divs"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If you add this element on the fly after you have bound your viewmodel it will not be in the viewmodel and won't update.  You can do one of two things. </p>\n\n<ol>\n<li>Add the element to the DOM and re-bind it by calling ko.applyBindings(); again </li>\n<li>OR add the list to the DOM from the beginning and leave the options collection in your viewmodel empty.  Knockout won't render it until you add elements to options on the fly later.</li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>You can add another observable to your viewmodel using myViewModel[newObservable] = ko.observable('')</p>\n\n<p>After that, call again to ko.applyBindings.</p>\n\n<p>Here is a simple page where I add paragraphs dinamically and the new viewmodel and the bindings work flawlessly. Copypaste into a html file and run it in your browser.</p>\n\n<pre><code>&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"http://ajax.aspnetcdn.com/ajax/knockout/knockout-2.2.1.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id=\"placeholder\"&gt;\n    &lt;p data-bind=\"text: paragraph0\"&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;a id=\"add\" href=\"#\"&gt;Add paragraph&lt;/a&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n\n    // myViewModel starts only with one observable\n    var myViewModel = {\n        paragraph0: ko.observable('First')\n    };\n\n    var count = 0;\n\n    $(document).ready(function() {\n        ko.applyBindings(myViewModel);\n\n        $('#add').click(function() {\n            // Add a new paragraph and make the binding\n            addParagraph();\n            // Re-apply!\n            ko.applyBindings(myViewModel);          \n            return false;   \n        });\n    });\n\n    function addParagraph() {\n        count++;\n        var newObservableName = 'paragraph' + count;\n        $('&lt;p data-bind=\"text: ' + newObservableName + '\"&gt;&lt;/p&gt;').appendTo('#placeholder');\n\n        // Here is where the magic happens\n        myViewModel[newObservableName] = ko.observable('');\n        myViewModel[newObservableName](Math.random());\n\n        // You can also test it in the console typing\n        // myViewModel.paragraphXXX('a random text')\n    }\n&lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Based on <a href=\"http://stackoverflow.com/a/24142397/795158\">this existing answer</a>, I've achived something similar to your initial intentions:</p>\n\n<pre><code>function extendBinding(ko, container, viewModel) {\n    ko.applyBindings(viewModel, container.children()[container.children().length - 1]);\n}\n\nfunction yourBindingFunction() {\n    var container = $(\"#menu\");\n    var inner = $(\"&lt;select name='list' data-bind='options: listItems'&gt;&lt;/select&gt;\");\n    container.empty().append(inner);\n\n\n    extendBinding(ko, container, {\n        listItems: [\"item1\", \"item2\", \"item3\"]\n    });\n}\n</code></pre>\n\n<p>Here is a <a href=\"http://jsfiddle.net/6jer2kdc/7/\" rel=\"nofollow\">JSFiddle</a> to play with.</p>\n\n<p>Be warned, once the new element is part of the dom, you cannot re-bind it with a call to <code>ko.applyBindings</code>- that is why I use <code>container.empty()</code>. If you need to preserve the new element and make it change as the view model changes, pass an observable to the <code>viewModel</code> parameter of the <code>extendBinding</code> method.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How is it possible to make knockout data-bind work on dynamically generated elements? For example, I insert a simple html select menu inside a div and want to populate options using the knockout options binding. This is what my code looks like:</p>\n\n<pre><code>$('#menu').html('&lt;select name=\"list\" data-bind=\"options: listItems\"&gt;&lt;/select&gt;');\n</code></pre>\n\n<p>but this method doesn't work. Any ideas?</p>\n",
            "last_activity_date": 1415391709,
            "question_id": 11066732,
            "score": 15,
            "tags": [
                "javascript",
                "jquery",
                "knockout.js"
            ],
            "title": "knockout data-bind on dynamically generated elements"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Most jquery functions have a callback parameter, you can just pass a function into that.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>$(\"#thisDiv\").slideUp(\"slow\", function() {\n    // This function is called when the slideUp is done animating\n    $(this).doNextThing();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use the second parameter of the function: callback. For example,</p>\n\n<pre>\n$(this).slideDown( speed, function(){\n    $(this).slideUp();\n});\n</pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<pre><code>$('#Div1').slideDown('fast', function(){\n    $('#Div2').slideUp('fast');\n});\n</code></pre>\n\n<p>Edit: Have you checked out the accordion plugin (if that's what you're trying to do)?</p>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>You can use a callback to fire a next effect when the first is done:</p>\n\n<pre><code>$(\"#element1\").slideUp(\n    \"slow\", \n    function(){\n        $(\"#element2\").slideDown(\"slow\");\n    }\n);\n</code></pre>\n\n<p>In this example the function defined as second argument to the slideUp method gets called after the slideUp animation has finished.</p>\n\n<p>See the documentation: <a href=\"http://docs.jquery.com/Effects/slideUp\" rel=\"nofollow\">http://docs.jquery.com/Effects/slideUp</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You should chain it like this</p>\n\n<pre><code>function animationStep1()\n{\n   $('#yourDiv1').slideUp('normal', animationStep2);\n}\n\nfunction animationStep2()\n{\n   $('#yourDiv2').slideDown('normal', animationStep3);\n}\n\n// etc\n</code></pre>\n\n<p>Of course you can spice this up with recursive functions, arrays holding animation queues, etc., according to your needs.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>an example of this can be seen in <a href=\"http://blog.themeforest.net/tutorials/jquery-for-absolute-beginners-day-2/\" rel=\"nofollow\">JQuery for Beginners - Day 2</a></p>\n\n<p>There are 15 days of these tutorials and they are a good resource. Enjoy!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A bit cleaner example and with a delay between the animation:</p>\n\n<pre><code>$(\"#elem\").fadeIn(1000).delay(2000).fadeOut(1000);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have two divs and two separate links that triggers slideDown and slideUp for the divs.</p>\n\n<p>When one of the divs are slided down and I click the other one, I hide the first div (slidingUp) and then open the other div (slidingDown) but, at the moment it's like while one div is sliding down, the other, also in the same time, is sliding up.</p>\n\n<p>Is there a way that would tell jQuery to wait to finish sliding down of one div and only then start sliding up the other?</p>\n",
            "last_activity_date": 1309018246,
            "question_id": 461912,
            "score": 15,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Finish one animation then start the other one"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I would recommend <a href=\"https://addons.mozilla.org/en-US/firefox/addon/6683\" rel=\"nofollow\">Firecookie</a> extension to Firebug.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Derived from <a href=\"http://stackoverflow.com/questions/179355/clearing-all-cookies-with-javascript#179514\">my answer here</a>:</p>\n\n<pre><code>javascript:new function(){var c=document.cookie.split(\";\");for(var i=0;i&lt;c.length;i++){var e=c[i].indexOf(\"=\");var n=e&gt;-1?c[i].substr(0,e):c[i];document.cookie=n+\"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";}}()\n</code></pre>\n\n<p>Due to browser security issues, this will only work when executed while on a page that has access to all the cookies you want to delete.</p>\n",
                    "is_accepted": true,
                    "score": 22
                }
            ],
            "body": "<p>I am testing a web app that writes cookies to subdomain.thisdomain.com and several subfolders within that. I'm looking for JavaScript that I can put into a bookmarklet that will delete all cookies under that subdomain, regardless of the folder in which they exist.</p>\n\n<p>Any ideas?</p>\n",
            "last_activity_date": 1286910378,
            "question_id": 178263,
            "score": 15,
            "tags": [
                "javascript",
                "cookies",
                "delete",
                "bookmarklet"
            ],
            "title": "JavaScript bookmarklet to delete all cookies within a given domain"
        }
    ]
}
